{"sha": "437f8c1ebec7789abe617b29a710f08327e8003b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM3ZjhjMWViZWM3Nzg5YWJlNjE3YjI5YTcxMGYwODMyN2U4MDAzYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-19T10:54:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-19T10:54:58Z"}, "message": "[multiple changes]\n\n2010-10-19  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_eval.adb: Minor reformatting.\n\n2010-10-19  Tristan Gingold  <gingold@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_And_Op, Expand_N_Or_Op, Expand_N_Xor_Op): Call\n\tExpand_Intrinsic_Call if the function is intrinsic.\n\t* exp_intr_adb (Expand_Binary_Operator): Handle VMS case for logical\n\tbinary operator on the unsigned_quadword record.\n\t* exp_intr.ads (Expand_Intrinsic_Call): Update comments.\n\n2010-10-19  Geert Bosch  <bosch@adacore.com>\n\n\t* gnat_rm.texi (pragma Float_Representation): Fix typo.\n\n2010-10-19  Arnaud Charlet  <charlet@adacore.com>\n\n\t* switch-c.adb (Scan_Front_End_Switches): Add handling of -gnateE.\n\t* fe.h (Exception_Extra_Info): Declare.\n\t* usage.adb (usage): Add -gnateE doc.\n\t* checks.adb (Install_Null_Excluding_Check): Use better sloc.\n\t* sem_util.adb (Insert_Explicit_Dereference): Ditto.\n\t* gnat_ugn.texi: Document -gnateE switch.\n\t* a-except.adb (Set_Exception_C_Msg): New parameter Column.\n\t* a-except-2005.adb (Set_Exception_C_Msg): New parameter Column.\n\t(Raise_Constraint_Error_Msg): Ditto.\n\t(Image): New helper function.\n\t(Rcheck_00_Ext, Rcheck_05_Ext, Rcheck_12_Ext): New procedure with more\n\tdetailed exception information.\n\tAdjust calls to Set_Exception_C_Msg and Raise_Constraint_Error_Msg.\n\t* a-exexda.adb (Set_Exception_C_Msg): New parameter Column.\n\t* opt.ads (Exception_Extra_Info): New flag.\n\t* gcc-interface/utils.c (gnat_raise_decls_ext): New.\n\t* gcc-interface/utils2.c (build_call_raise_range,\n\tbuild_call_raise_column): New functions.\n\t* gcc-interface/gigi.h (exception_info_kind, gnat_raise_decls_ext,\n\tbuild_call_raise_range, build_call_raise_column): Declare.\n\tgcc-interface/trans.c (build_raise_check): New function.\n\t(gigi): Initialize gnat_raise_decls_ext.\n\t(gnat_to_gnu): Add initial support for -gnateE switch.\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\nFrom-SVN: r165696", "tree": {"sha": "f03d632e82e86c7949808d54ba85b59adc07b8d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f03d632e82e86c7949808d54ba85b59adc07b8d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/437f8c1ebec7789abe617b29a710f08327e8003b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/437f8c1ebec7789abe617b29a710f08327e8003b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/437f8c1ebec7789abe617b29a710f08327e8003b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/437f8c1ebec7789abe617b29a710f08327e8003b/comments", "author": null, "committer": null, "parents": [{"sha": "e606088aa9a3e732484cf7b701dc1e59e3bd9f69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e606088aa9a3e732484cf7b701dc1e59e3bd9f69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e606088aa9a3e732484cf7b701dc1e59e3bd9f69"}], "stats": {"total": 1152, "additions": 778, "deletions": 374}, "files": [{"sha": "88a3415d7618f347195beb9d6ec92ac149b59690", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -1,3 +1,46 @@\n+2010-10-19  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_eval.adb: Minor reformatting.\n+\n+2010-10-19  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_And_Op, Expand_N_Or_Op, Expand_N_Xor_Op): Call\n+\tExpand_Intrinsic_Call if the function is intrinsic.\n+\t* exp_intr_adb (Expand_Binary_Operator): Handle VMS case for logical\n+\tbinary operator on the unsigned_quadword record.\n+\t* exp_intr.ads (Expand_Intrinsic_Call): Update comments.\n+\n+2010-10-19  Geert Bosch  <bosch@adacore.com>\n+\n+\t* gnat_rm.texi (pragma Float_Representation): Fix typo.\n+\n+2010-10-19  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* switch-c.adb (Scan_Front_End_Switches): Add handling of -gnateE.\n+\t* fe.h (Exception_Extra_Info): Declare.\n+\t* usage.adb (usage): Add -gnateE doc.\n+\t* checks.adb (Install_Null_Excluding_Check): Use better sloc.\n+\t* sem_util.adb (Insert_Explicit_Dereference): Ditto.\n+\t* gnat_ugn.texi: Document -gnateE switch.\n+\t* a-except.adb (Set_Exception_C_Msg): New parameter Column.\n+\t* a-except-2005.adb (Set_Exception_C_Msg): New parameter Column.\n+\t(Raise_Constraint_Error_Msg): Ditto.\n+\t(Image): New helper function.\n+\t(Rcheck_00_Ext, Rcheck_05_Ext, Rcheck_12_Ext): New procedure with more\n+\tdetailed exception information.\n+\tAdjust calls to Set_Exception_C_Msg and Raise_Constraint_Error_Msg.\n+\t* a-exexda.adb (Set_Exception_C_Msg): New parameter Column.\n+\t* opt.ads (Exception_Extra_Info): New flag.\n+\t* gcc-interface/utils.c (gnat_raise_decls_ext): New.\n+\t* gcc-interface/utils2.c (build_call_raise_range,\n+\tbuild_call_raise_column): New functions.\n+\t* gcc-interface/gigi.h (exception_info_kind, gnat_raise_decls_ext,\n+\tbuild_call_raise_range, build_call_raise_column): Declare.\n+\tgcc-interface/trans.c (build_raise_check): New function.\n+\t(gigi): Initialize gnat_raise_decls_ext.\n+\t(gnat_to_gnu): Add initial support for -gnateE switch.\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\n 2010-10-19  Geert Bosch  <bosch@adacore.com>\n \n \t* ttypef.ads: Change VAXDF_Last to be -VAXDF_First, as type is"}, {"sha": "8f44c6c99a9e97a27aa78aa842b4aa2427e4e2f5", "filename": "gcc/ada/a-except-2005.adb", "status": "modified", "additions": 104, "deletions": 44, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fa-except-2005.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fa-except-2005.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except-2005.adb?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -94,6 +94,9 @@ package body Ada.Exceptions is\n    --  Store up to Max_Tracebacks in Excep, corresponding to the current\n    --  call chain.\n \n+   function Image (Index : Integer) return String;\n+   --  Return string image corresponding to Index\n+\n    procedure To_Stderr (S : String);\n    pragma Export (Ada, To_Stderr, \"__gnat_to_stderr\");\n    --  Little routine to output string to stderr that is also used\n@@ -112,17 +115,18 @@ package body Ada.Exceptions is\n       ---------------------------------\n \n       procedure Set_Exception_C_Msg\n-        (Id   : Exception_Id;\n-         Msg1 : System.Address;\n-         Line : Integer        := 0;\n-         Msg2 : System.Address := System.Null_Address);\n+        (Id     : Exception_Id;\n+         Msg1   : System.Address;\n+         Line   : Integer        := 0;\n+         Column : Integer        := 0;\n+         Msg2   : System.Address := System.Null_Address);\n       --  This routine is called to setup the exception referenced by the\n       --  Current_Excep field in the TSD to contain the indicated Id value\n       --  and message. Msg1 is a null terminated string which is generated\n       --  as the exception message. If line is non-zero, then a colon and\n       --  the decimal representation of this integer is appended to the\n-      --  message. When Msg2 is non-null, a space and this additional null\n-      --  terminated string is added to the message.\n+      --  message. Ditto for Column. When Msg2 is non-null, a space and this\n+      --  additional null terminated string is added to the message.\n \n       procedure Set_Exception_Msg\n         (Id      : Exception_Id;\n@@ -307,12 +311,13 @@ package body Ada.Exceptions is\n      (E : Exception_Id;\n       F : System.Address;\n       L : Integer;\n+      C : Integer := 0;\n       M : System.Address := System.Null_Address);\n    pragma No_Return (Raise_With_Location_And_Msg);\n    --  Raise an exception with given exception id value. A filename and line\n    --  number is associated with the raise and is stored in the exception\n-   --  occurrence and in addition a string message M is appended to\n-   --  this (if M is not null).\n+   --  occurrence and in addition a column and a string message M may be\n+   --  appended to this (if not null/0).\n \n    procedure Raise_Constraint_Error\n      (File : System.Address;\n@@ -323,13 +328,14 @@ package body Ada.Exceptions is\n    --  Raise constraint error with file:line information\n \n    procedure Raise_Constraint_Error_Msg\n-     (File : System.Address;\n-      Line : Integer;\n-      Msg  : System.Address);\n+     (File   : System.Address;\n+      Line   : Integer;\n+      Column : Integer;\n+      Msg    : System.Address);\n    pragma No_Return (Raise_Constraint_Error_Msg);\n    pragma Export\n      (C, Raise_Constraint_Error_Msg, \"__gnat_raise_constraint_error_msg\");\n-   --  Raise constraint error with file:line + msg information\n+   --  Raise constraint error with file:line:col + msg information\n \n    procedure Raise_Program_Error\n      (File : System.Address;\n@@ -459,6 +465,13 @@ package body Ada.Exceptions is\n    procedure Rcheck_32 (File : System.Address; Line : Integer);\n    procedure Rcheck_33 (File : System.Address; Line : Integer);\n \n+   procedure Rcheck_00_Ext\n+     (File : System.Address; Line, Column : Integer);\n+   procedure Rcheck_05_Ext\n+     (File : System.Address; Line, Column, Index, First, Last : Integer);\n+   procedure Rcheck_12_Ext\n+     (File : System.Address; Line, Column, Index, First, Last : Integer);\n+\n    pragma Export (C, Rcheck_00, \"__gnat_rcheck_00\");\n    pragma Export (C, Rcheck_01, \"__gnat_rcheck_01\");\n    pragma Export (C, Rcheck_02, \"__gnat_rcheck_02\");\n@@ -494,6 +507,10 @@ package body Ada.Exceptions is\n    pragma Export (C, Rcheck_32, \"__gnat_rcheck_32\");\n    pragma Export (C, Rcheck_33, \"__gnat_rcheck_33\");\n \n+   pragma Export (C, Rcheck_00_Ext, \"__gnat_rcheck_00_ext\");\n+   pragma Export (C, Rcheck_05_Ext, \"__gnat_rcheck_05_ext\");\n+   pragma Export (C, Rcheck_12_Ext, \"__gnat_rcheck_12_ext\");\n+\n    --  None of these procedures ever returns (they raise an exception!). By\n    --  using pragma No_Return, we ensure that any junk code after the call,\n    --  such as normal return epilog stuff, can be eliminated).\n@@ -532,6 +549,10 @@ package body Ada.Exceptions is\n    pragma No_Return (Rcheck_32);\n    pragma No_Return (Rcheck_33);\n \n+   pragma No_Return (Rcheck_00_Ext);\n+   pragma No_Return (Rcheck_05_Ext);\n+   pragma No_Return (Rcheck_12_Ext);\n+\n    ---------------------------------------------\n    -- Reason Strings for Run-Time Check Calls --\n    ---------------------------------------------\n@@ -774,27 +795,24 @@ package body Ada.Exceptions is\n    -- Raise_Constraint_Error --\n    ----------------------------\n \n-   procedure Raise_Constraint_Error\n-     (File : System.Address;\n-      Line : Integer)\n-   is\n+   procedure Raise_Constraint_Error (File : System.Address; Line : Integer) is\n    begin\n-      Raise_With_Location_And_Msg\n-        (Constraint_Error_Def'Access, File, Line);\n+      Raise_With_Location_And_Msg (Constraint_Error_Def'Access, File, Line);\n    end Raise_Constraint_Error;\n \n    --------------------------------\n    -- Raise_Constraint_Error_Msg --\n    --------------------------------\n \n    procedure Raise_Constraint_Error_Msg\n-     (File : System.Address;\n-      Line : Integer;\n-      Msg  : System.Address)\n+     (File   : System.Address;\n+      Line   : Integer;\n+      Column : Integer;\n+      Msg    : System.Address)\n    is\n    begin\n       Raise_With_Location_And_Msg\n-        (Constraint_Error_Def'Access, File, Line, Msg);\n+        (Constraint_Error_Def'Access, File, Line, Column, Msg);\n    end Raise_Constraint_Error_Msg;\n \n    -------------------------\n@@ -935,8 +953,7 @@ package body Ada.Exceptions is\n       Line : Integer)\n    is\n    begin\n-      Raise_With_Location_And_Msg\n-        (Program_Error_Def'Access, File, Line);\n+      Raise_With_Location_And_Msg (Program_Error_Def'Access, File, Line);\n    end Raise_Program_Error;\n \n    -----------------------------\n@@ -950,7 +967,7 @@ package body Ada.Exceptions is\n    is\n    begin\n       Raise_With_Location_And_Msg\n-        (Program_Error_Def'Access, File, Line, Msg);\n+        (Program_Error_Def'Access, File, Line, M => Msg);\n    end Raise_Program_Error_Msg;\n \n    -------------------------\n@@ -962,8 +979,7 @@ package body Ada.Exceptions is\n       Line : Integer)\n    is\n    begin\n-      Raise_With_Location_And_Msg\n-        (Storage_Error_Def'Access, File, Line);\n+      Raise_With_Location_And_Msg (Storage_Error_Def'Access, File, Line);\n    end Raise_Storage_Error;\n \n    -----------------------------\n@@ -977,7 +993,7 @@ package body Ada.Exceptions is\n    is\n    begin\n       Raise_With_Location_And_Msg\n-        (Storage_Error_Def'Access, File, Line, Msg);\n+        (Storage_Error_Def'Access, File, Line, M => Msg);\n    end Raise_Storage_Error_Msg;\n \n    ---------------------------------\n@@ -988,10 +1004,11 @@ package body Ada.Exceptions is\n      (E : Exception_Id;\n       F : System.Address;\n       L : Integer;\n+      C : Integer := 0;\n       M : System.Address := System.Null_Address)\n    is\n    begin\n-      Exception_Data.Set_Exception_C_Msg (E, F, L, M);\n+      Exception_Data.Set_Exception_C_Msg (E, F, L, C, M);\n       Abort_Defer.all;\n       Raise_Current_Excep (E);\n    end Raise_With_Location_And_Msg;\n@@ -1015,78 +1032,92 @@ package body Ada.Exceptions is\n       Raise_Current_Excep (E);\n    end Raise_With_Msg;\n \n+   -----------\n+   -- Image --\n+   -----------\n+\n+   function Image (Index : Integer) return String is\n+      Result : constant String := Integer'Image (Index);\n+   begin\n+      if Result (1) = ' ' then\n+         return Result (2 .. Result'Last);\n+      else\n+         return Result;\n+      end if;\n+   end Image;\n+\n    --------------------------------------\n    -- Calls to Run-Time Check Routines --\n    --------------------------------------\n \n    procedure Rcheck_00 (File : System.Address; Line : Integer) is\n    begin\n-      Raise_Constraint_Error_Msg (File, Line, Rmsg_00'Address);\n+      Raise_Constraint_Error_Msg (File, Line, 0, Rmsg_00'Address);\n    end Rcheck_00;\n \n    procedure Rcheck_01 (File : System.Address; Line : Integer) is\n    begin\n-      Raise_Constraint_Error_Msg (File, Line, Rmsg_01'Address);\n+      Raise_Constraint_Error_Msg (File, Line, 0, Rmsg_01'Address);\n    end Rcheck_01;\n \n    procedure Rcheck_02 (File : System.Address; Line : Integer) is\n    begin\n-      Raise_Constraint_Error_Msg (File, Line, Rmsg_02'Address);\n+      Raise_Constraint_Error_Msg (File, Line, 0, Rmsg_02'Address);\n    end Rcheck_02;\n \n    procedure Rcheck_03 (File : System.Address; Line : Integer) is\n    begin\n-      Raise_Constraint_Error_Msg (File, Line, Rmsg_03'Address);\n+      Raise_Constraint_Error_Msg (File, Line, 0, Rmsg_03'Address);\n    end Rcheck_03;\n \n    procedure Rcheck_04 (File : System.Address; Line : Integer) is\n    begin\n-      Raise_Constraint_Error_Msg (File, Line, Rmsg_04'Address);\n+      Raise_Constraint_Error_Msg (File, Line, 0, Rmsg_04'Address);\n    end Rcheck_04;\n \n    procedure Rcheck_05 (File : System.Address; Line : Integer) is\n    begin\n-      Raise_Constraint_Error_Msg (File, Line, Rmsg_05'Address);\n+      Raise_Constraint_Error_Msg (File, Line, 0, Rmsg_05'Address);\n    end Rcheck_05;\n \n    procedure Rcheck_06 (File : System.Address; Line : Integer) is\n    begin\n-      Raise_Constraint_Error_Msg (File, Line, Rmsg_06'Address);\n+      Raise_Constraint_Error_Msg (File, Line, 0, Rmsg_06'Address);\n    end Rcheck_06;\n \n    procedure Rcheck_07 (File : System.Address; Line : Integer) is\n    begin\n-      Raise_Constraint_Error_Msg (File, Line, Rmsg_07'Address);\n+      Raise_Constraint_Error_Msg (File, Line, 0, Rmsg_07'Address);\n    end Rcheck_07;\n \n    procedure Rcheck_08 (File : System.Address; Line : Integer) is\n    begin\n-      Raise_Constraint_Error_Msg (File, Line, Rmsg_08'Address);\n+      Raise_Constraint_Error_Msg (File, Line, 0, Rmsg_08'Address);\n    end Rcheck_08;\n \n    procedure Rcheck_09 (File : System.Address; Line : Integer) is\n    begin\n-      Raise_Constraint_Error_Msg (File, Line, Rmsg_09'Address);\n+      Raise_Constraint_Error_Msg (File, Line, 0, Rmsg_09'Address);\n    end Rcheck_09;\n \n    procedure Rcheck_10 (File : System.Address; Line : Integer) is\n    begin\n-      Raise_Constraint_Error_Msg (File, Line, Rmsg_10'Address);\n+      Raise_Constraint_Error_Msg (File, Line, 0, Rmsg_10'Address);\n    end Rcheck_10;\n \n    procedure Rcheck_11 (File : System.Address; Line : Integer) is\n    begin\n-      Raise_Constraint_Error_Msg (File, Line, Rmsg_11'Address);\n+      Raise_Constraint_Error_Msg (File, Line, 0, Rmsg_11'Address);\n    end Rcheck_11;\n \n    procedure Rcheck_12 (File : System.Address; Line : Integer) is\n    begin\n-      Raise_Constraint_Error_Msg (File, Line, Rmsg_12'Address);\n+      Raise_Constraint_Error_Msg (File, Line, 0, Rmsg_12'Address);\n    end Rcheck_12;\n \n    procedure Rcheck_13 (File : System.Address; Line : Integer) is\n    begin\n-      Raise_Constraint_Error_Msg (File, Line, Rmsg_13'Address);\n+      Raise_Constraint_Error_Msg (File, Line, 0, Rmsg_13'Address);\n    end Rcheck_13;\n \n    procedure Rcheck_14 (File : System.Address; Line : Integer) is\n@@ -1189,6 +1220,35 @@ package body Ada.Exceptions is\n       Raise_Storage_Error_Msg (File, Line, Rmsg_33'Address);\n    end Rcheck_33;\n \n+   procedure Rcheck_00_Ext (File : System.Address; Line, Column : Integer) is\n+   begin\n+      Raise_Constraint_Error_Msg (File, Line, Column, Rmsg_00'Address);\n+   end Rcheck_00_Ext;\n+\n+   procedure Rcheck_05_Ext\n+     (File : System.Address; Line, Column, Index, First, Last : Integer)\n+   is\n+      Msg : constant String :=\n+              Rmsg_05 (Rmsg_05'First .. Rmsg_05'Last - 1) & ASCII.LF &\n+              \"index \" & Image (Index) & \" not in \" & Image (First) &\n+              \"..\" & Image (Last) & ASCII.NUL;\n+\n+   begin\n+      Raise_Constraint_Error_Msg (File, Line, Column, Msg'Address);\n+   end Rcheck_05_Ext;\n+\n+   procedure Rcheck_12_Ext\n+     (File : System.Address; Line, Column, Index, First, Last : Integer)\n+   is\n+      Msg : constant String :=\n+              Rmsg_12 (Rmsg_12'First .. Rmsg_12'Last - 1) & ASCII.LF &\n+              \"value \" & Image (Index) & \" not in \" & Image (First) &\n+              \"..\" & Image (Last) & ASCII.NUL;\n+\n+   begin\n+      Raise_Constraint_Error_Msg (File, Line, Column, Msg'Address);\n+   end Rcheck_12_Ext;\n+\n    -------------\n    -- Reraise --\n    -------------"}, {"sha": "ded93fcbeb649c1ac71df804ac222dd67862aeed", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -93,17 +93,18 @@ package body Ada.Exceptions is\n       ---------------------------------\n \n       procedure Set_Exception_C_Msg\n-        (Id   : Exception_Id;\n-         Msg1 : System.Address;\n-         Line : Integer        := 0;\n-         Msg2 : System.Address := System.Null_Address);\n+        (Id     : Exception_Id;\n+         Msg1   : System.Address;\n+         Line   : Integer        := 0;\n+         Column : Integer        := 0;\n+         Msg2   : System.Address := System.Null_Address);\n       --  This routine is called to setup the exception referenced by the\n       --  Current_Excep field in the TSD to contain the indicated Id value\n       --  and message. Msg1 is a null terminated string which is generated\n       --  as the exception message. If line is non-zero, then a colon and\n       --  the decimal representation of this integer is appended to the\n-      --  message. When Msg2 is non-null, a space and this additional null\n-      --  terminated string is added to the message.\n+      --  message. Ditto for Column. When Msg2 is non-null, a space and this\n+      --  additional null terminated string is added to the message.\n \n       procedure Set_Exception_Msg\n         (Id      : Exception_Id;\n@@ -958,7 +959,7 @@ package body Ada.Exceptions is\n       M : System.Address := System.Null_Address)\n    is\n    begin\n-      Exception_Data.Set_Exception_C_Msg (E, F, L, M);\n+      Exception_Data.Set_Exception_C_Msg (E, F, L, Msg2 => M);\n       Abort_Defer.all;\n       Raise_Current_Excep (E);\n    end Raise_With_Location_And_Msg;"}, {"sha": "e6a006e0b9bc877aa25f3fcdfaa62ae26256ddd1", "filename": "gcc/ada/a-exexda.adb", "status": "modified", "additions": 39, "deletions": 26, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fa-exexda.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fa-exexda.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexda.adb?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -556,36 +556,30 @@ package body Exception_Data is\n    -------------------------\n \n    procedure Set_Exception_C_Msg\n-     (Id   : Exception_Id;\n-      Msg1 : System.Address;\n-      Line : Integer        := 0;\n-      Msg2 : System.Address := System.Null_Address)\n+     (Id     : Exception_Id;\n+      Msg1   : System.Address;\n+      Line   : Integer        := 0;\n+      Column : Integer        := 0;\n+      Msg2   : System.Address := System.Null_Address)\n    is\n       Excep  : constant EOA := Get_Current_Excep.all;\n-      Val    : Integer := Line;\n       Remind : Integer;\n-      Size   : Integer := 1;\n       Ptr    : Natural;\n \n-   begin\n-      Exception_Propagation.Setup_Exception (Excep, Excep);\n-      Excep.Exception_Raised := False;\n-      Excep.Id               := Id;\n-      Excep.Num_Tracebacks   := 0;\n-      Excep.Pid              := Local_Partition_ID;\n-      Excep.Msg_Length       := 0;\n-      Excep.Cleanup_Flag     := False;\n-\n-      while To_Ptr (Msg1) (Excep.Msg_Length + 1) /= ASCII.NUL\n-        and then Excep.Msg_Length < Exception_Msg_Max_Length\n-      loop\n-         Excep.Msg_Length := Excep.Msg_Length + 1;\n-         Excep.Msg (Excep.Msg_Length) := To_Ptr (Msg1) (Excep.Msg_Length);\n-      end loop;\n+      procedure Append_Number (Number : Integer);\n+      --  Append given number to Excep.Msg\n \n-      --  Append line number if present\n+      -------------------\n+      -- Append_Number --\n+      -------------------\n \n-      if Line > 0 then\n+      procedure Append_Number (Number : Integer) is\n+         Val  : Integer := Number;\n+         Size : Integer := 1;\n+      begin\n+         if Number <= 0 then\n+            return;\n+         end if;\n \n          --  Compute the number of needed characters\n \n@@ -599,7 +593,7 @@ package body Exception_Data is\n          if Excep.Msg_Length <= Exception_Msg_Max_Length - Size then\n             Excep.Msg (Excep.Msg_Length + 1) := ':';\n             Excep.Msg_Length := Excep.Msg_Length + Size;\n-            Val := Line;\n+            Val := Number;\n             Size := 0;\n \n             while Val > 0 loop\n@@ -610,7 +604,26 @@ package body Exception_Data is\n                Size := Size + 1;\n             end loop;\n          end if;\n-      end if;\n+      end Append_Number;\n+\n+   begin\n+      Exception_Propagation.Setup_Exception (Excep, Excep);\n+      Excep.Exception_Raised := False;\n+      Excep.Id               := Id;\n+      Excep.Num_Tracebacks   := 0;\n+      Excep.Pid              := Local_Partition_ID;\n+      Excep.Msg_Length       := 0;\n+      Excep.Cleanup_Flag     := False;\n+\n+      while To_Ptr (Msg1) (Excep.Msg_Length + 1) /= ASCII.NUL\n+        and then Excep.Msg_Length < Exception_Msg_Max_Length\n+      loop\n+         Excep.Msg_Length := Excep.Msg_Length + 1;\n+         Excep.Msg (Excep.Msg_Length) := To_Ptr (Msg1) (Excep.Msg_Length);\n+      end loop;\n+\n+      Append_Number (Line);\n+      Append_Number (Column);\n \n       --  Append second message if present\n "}, {"sha": "9873eee4a6718fe3fa249ff1563e4d862316d8b4", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -5244,7 +5244,7 @@ package body Checks is\n    ----------------------------------\n \n    procedure Install_Null_Excluding_Check (N : Node_Id) is\n-      Loc : constant Source_Ptr := Sloc (N);\n+      Loc : constant Source_Ptr := Sloc (Parent (N));\n       Typ : constant Entity_Id  := Etype (N);\n \n       function Safe_To_Capture_In_Parameter_Value return Boolean;"}, {"sha": "ce1730e123249a80c787430c0f0edb07edabcdc4", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -37,6 +37,7 @@ with Exp_Ch7;  use Exp_Ch7;\n with Exp_Ch9;  use Exp_Ch9;\n with Exp_Disp; use Exp_Disp;\n with Exp_Fixd; use Exp_Fixd;\n+with Exp_Intr; use Exp_Intr;\n with Exp_Pakd; use Exp_Pakd;\n with Exp_Tss;  use Exp_Tss;\n with Exp_Util; use Exp_Util;\n@@ -5187,6 +5188,10 @@ package body Exp_Ch4 is\n             Set_Etype (N, Standard_Boolean);\n             Adjust_Result_Type (N, Typ);\n          end if;\n+\n+      elsif Is_Intrinsic_Subprogram (Entity (N)) then\n+         Expand_Intrinsic_Call (N, Entity (N));\n+\n       end if;\n    end Expand_N_Op_And;\n \n@@ -7148,6 +7153,10 @@ package body Exp_Ch4 is\n             Set_Etype (N, Standard_Boolean);\n             Adjust_Result_Type (N, Typ);\n          end if;\n+\n+      elsif Is_Intrinsic_Subprogram (Entity (N)) then\n+         Expand_Intrinsic_Call (N, Entity (N));\n+\n       end if;\n    end Expand_N_Op_Or;\n \n@@ -7343,6 +7352,10 @@ package body Exp_Ch4 is\n          Adjust_Condition (Right_Opnd (N));\n          Set_Etype (N, Standard_Boolean);\n          Adjust_Result_Type (N, Typ);\n+\n+      elsif Is_Intrinsic_Subprogram (Entity (N)) then\n+         Expand_Intrinsic_Call (N, Entity (N));\n+\n       end if;\n    end Expand_N_Op_Xor;\n "}, {"sha": "4ba5affffe5efde913990ae94efb5797f03c8dc3", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -117,8 +117,8 @@ package body Exp_Intr is\n    ---------------------------------\n \n    procedure Expand_Binary_Operator_Call (N : Node_Id) is\n-      T1  : constant Entity_Id := Underlying_Type (Left_Opnd  (N));\n-      T2  : constant Entity_Id := Underlying_Type (Right_Opnd (N));\n+      T1  : constant Entity_Id := Underlying_Type (Etype (Left_Opnd  (N)));\n+      T2  : constant Entity_Id := Underlying_Type (Etype (Right_Opnd (N)));\n       TR  : constant Entity_Id := Etype (N);\n       T3  : Entity_Id;\n       Res : Node_Id;\n@@ -127,6 +127,14 @@ package body Exp_Intr is\n       --  Maximum of operand sizes\n \n    begin\n+      --  Nothing to do if the operands have the same modular type.\n+\n+      if Base_Type (T1) = Base_Type (T2)\n+        and then Is_Modular_Integer_Type (T1)\n+      then\n+         return;\n+      end if;\n+\n       --  Use Unsigned_32 for sizes of 32 or below, else Unsigned_64\n \n       if Siz > 32 then\n@@ -139,8 +147,17 @@ package body Exp_Intr is\n       --  subsequent reanalysis.\n \n       Res := New_Copy (N);\n-      Set_Etype (Res, Empty);\n-      Set_Entity (Res, Empty);\n+      Set_Etype (Res, T3);\n+      case Nkind (N) is\n+         when N_Op_And =>\n+            Set_Entity (Res, Standard_Op_And);\n+         when N_Op_Or =>\n+            Set_Entity (Res, Standard_Op_Or);\n+         when N_Op_Xor =>\n+            Set_Entity (Res, Standard_Op_Xor);\n+         when others =>\n+            raise Program_Error;\n+      end case;\n \n       --  Convert operands to large enough intermediate type\n "}, {"sha": "a9d8a3919097312654e554391bcac9e2c6f2b4a1", "filename": "gcc/ada/exp_intr.ads", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fexp_intr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fexp_intr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.ads?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.        --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,10 +30,11 @@ with Types; use Types;\n package Exp_Intr is\n \n    procedure Expand_Intrinsic_Call (N : Node_Id; E : Entity_Id);\n-   --  N is either a function call node, or a procedure call statement node\n-   --  where the corresponding subprogram is intrinsic (i.e. was the subject\n-   --  of a Import or Interface pragma specifying the subprogram as intrinsic.\n-   --  The effect is to replace the call with appropriate specialized nodes.\n-   --  The second argument is the entity for the subprogram spec.\n+   --  N is either a function call node, a procedure call statement node, or\n+   --  an operator where the corresponding subprogram is intrinsic (i.e. was\n+   --  the subject of a Import or Interface pragma specifying the subprogram\n+   --  as intrinsic.  The effect is to replace the call with appropriate\n+   --  specialized nodes.  The second argument is the entity for the\n+   --  subprogram spec.\n \n end Exp_Intr;"}, {"sha": "e9adbfffc9292efd339de77da912657446d69a05", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2009, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2010, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -163,13 +163,15 @@ extern Boolean In_Same_Source_Unit              (Node_Id, Node_Id);\n /* opt: */\n \n #define Global_Discard_Names           opt__global_discard_names\n+#define Exception_Extra_Info           opt__exception_extra_info\n #define Exception_Locations_Suppressed opt__exception_locations_suppressed\n #define Exception_Mechanism            opt__exception_mechanism\n #define Back_Annotate_Rep_Info         opt__back_annotate_rep_info\n \n typedef enum {Setjmp_Longjmp, Back_End_Exceptions} Exception_Mechanism_Type;\n \n extern Boolean Global_Discard_Names;\n+extern Boolean Exception_Extra_Info;\n extern Boolean Exception_Locations_Suppressed;\n extern Exception_Mechanism_Type Exception_Mechanism;\n extern Boolean Back_Annotate_Rep_Info;"}, {"sha": "904a6cb9a10a8f0b60246faef15e2b99a8e7fb8d", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 234, "deletions": 233, "changes": 467, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -1490,20 +1490,20 @@ ada/checks.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/scng.adb ada/sem.ads ada/sem_attr.ads ada/sem_aux.ads \\\n    ada/sem_cat.ads ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch7.ads \\\n    ada/sem_ch8.ads ada/sem_disp.ads ada/sem_dist.ads ada/sem_eval.ads \\\n-   ada/sem_eval.adb ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads \\\n-   ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb \\\n-   ada/sinput.ads ada/snames.ads ada/sprint.ads ada/stand.ads \\\n-   ada/stringt.ads ada/stringt.adb ada/style.ads ada/styleg.ads \\\n-   ada/styleg.adb ada/stylesw.ads ada/system.ads ada/s-crc32.ads \\\n-   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n-   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/targparm.ads ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n-   ada/ttypes.ads ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/urealp.adb \\\n-   ada/validsw.ads ada/widechar.ads \n+   ada/sem_eval.adb ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads \\\n+   ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads \\\n+   ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/sprint.ads \\\n+   ada/stand.ads ada/stringt.ads ada/stringt.adb ada/style.ads \\\n+   ada/styleg.ads ada/styleg.adb ada/stylesw.ads ada/system.ads \\\n+   ada/s-crc32.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n+   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n+   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n+   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n+   ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tbuild.adb \\\n+   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/uintp.ads \\\n+   ada/uintp.adb ada/uname.ads ada/unchconv.ads ada/unchdeal.ads \\\n+   ada/urealp.ads ada/urealp.adb ada/validsw.ads ada/widechar.ads \n \n ada/comperr.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -1667,20 +1667,20 @@ ada/exp_aggr.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/scng.adb ada/sem.ads ada/sem_attr.ads ada/sem_aux.ads \\\n    ada/sem_cat.ads ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch7.ads \\\n    ada/sem_ch8.ads ada/sem_disp.ads ada/sem_dist.ads ada/sem_eval.ads \\\n-   ada/sem_eval.adb ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads \\\n-   ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb \\\n-   ada/sinput.ads ada/snames.ads ada/sprint.ads ada/stand.ads \\\n-   ada/stringt.ads ada/stringt.adb ada/style.ads ada/styleg.ads \\\n-   ada/styleg.adb ada/stylesw.ads ada/system.ads ada/s-crc32.ads \\\n-   ada/s-exctab.ads ada/s-exctab.adb ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads \\\n-   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tbuild.adb \\\n-   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/uintp.ads \\\n-   ada/uintp.adb ada/uname.ads ada/unchconv.ads ada/unchdeal.ads \\\n-   ada/urealp.ads ada/validsw.ads ada/widechar.ads \n+   ada/sem_eval.adb ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads \\\n+   ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads \\\n+   ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/sprint.ads \\\n+   ada/stand.ads ada/stringt.ads ada/stringt.adb ada/style.ads \\\n+   ada/styleg.ads ada/styleg.adb ada/stylesw.ads ada/system.ads \\\n+   ada/s-crc32.ads ada/s-exctab.ads ada/s-exctab.adb ada/s-htable.ads \\\n+   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n+   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads \\\n+   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n+   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n+   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/validsw.ads ada/widechar.ads \n \n ada/exp_atag.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -1723,20 +1723,20 @@ ada/exp_attr.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/rident.ads ada/rtsfind.ads ada/scans.ads ada/scn.ads ada/scng.ads \\\n    ada/scng.adb ada/sem.ads ada/sem_attr.ads ada/sem_aux.ads \\\n    ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_disp.ads \\\n-   ada/sem_eval.ads ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads \\\n-   ada/sem_util.adb ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n-   ada/snames.ads ada/stand.ads ada/stringt.ads ada/stringt.adb \\\n-   ada/style.ads ada/styleg.ads ada/styleg.adb ada/stylesw.ads \\\n-   ada/system.ads ada/s-carun8.ads ada/s-crc32.ads ada/s-exctab.ads \\\n-   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n-   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n-   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n-   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-utf_32.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n-   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n-   ada/types.ads ada/types.adb ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \\\n-   ada/widechar.ads \n+   ada/sem_eval.ads ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads \\\n+   ada/sem_util.ads ada/sem_util.adb ada/sinfo.ads ada/sinfo.adb \\\n+   ada/sinput.ads ada/snames.ads ada/stand.ads ada/stringt.ads \\\n+   ada/stringt.adb ada/style.ads ada/styleg.ads ada/styleg.adb \\\n+   ada/stylesw.ads ada/system.ads ada/s-carun8.ads ada/s-crc32.ads \\\n+   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n+   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n+   ada/targparm.ads ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n+   ada/ttypes.ads ada/types.ads ada/types.adb ada/uintp.ads ada/uintp.adb \\\n+   ada/uname.ads ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \\\n+   ada/validsw.ads ada/widechar.ads \n \n ada/exp_cg.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -1848,17 +1848,18 @@ ada/exp_ch3.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/sem.ads ada/sem_attr.ads ada/sem_aux.ads ada/sem_aux.adb \\\n    ada/sem_cat.ads ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch7.ads \\\n    ada/sem_ch8.ads ada/sem_disp.ads ada/sem_eval.ads ada/sem_mech.ads \\\n-   ada/sem_res.ads ada/sem_scil.ads ada/sem_type.ads ada/sem_util.ads \\\n-   ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n-   ada/snames.ads ada/sprint.ads ada/stand.ads ada/stringt.ads \\\n-   ada/system.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/targparm.ads ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n-   ada/ttypes.ads ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \n+   ada/sem_prag.ads ada/sem_res.ads ada/sem_scil.ads ada/sem_type.ads \\\n+   ada/sem_util.ads ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb \\\n+   ada/sinput.ads ada/snames.ads ada/sprint.ads ada/stand.ads \\\n+   ada/stringt.ads ada/system.ads ada/s-exctab.ads ada/s-htable.ads \\\n+   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n+   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tbuild.adb \\\n+   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/uintp.ads \\\n+   ada/uintp.adb ada/uname.ads ada/unchconv.ads ada/unchdeal.ads \\\n+   ada/urealp.ads ada/validsw.ads \n \n ada/exp_ch4.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -1879,20 +1880,20 @@ ada/exp_ch4.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/scng.adb ada/sem.ads ada/sem_attr.ads ada/sem_aux.ads \\\n    ada/sem_cat.ads ada/sem_ch13.ads ada/sem_ch3.ads ada/sem_ch6.ads \\\n    ada/sem_ch8.ads ada/sem_disp.ads ada/sem_eval.ads ada/sem_eval.adb \\\n-   ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb \\\n-   ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n-   ada/snames.ads ada/sprint.ads ada/stand.ads ada/stringt.ads \\\n-   ada/stringt.adb ada/style.ads ada/styleg.ads ada/styleg.adb \\\n-   ada/stylesw.ads ada/system.ads ada/s-crc32.ads ada/s-exctab.ads \\\n-   ada/s-exctab.adb ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n-   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/targparm.ads ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n-   ada/ttypes.ads ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/urealp.adb \\\n-   ada/validsw.ads ada/widechar.ads \n+   ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads \\\n+   ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb \\\n+   ada/sinput.ads ada/snames.ads ada/sprint.ads ada/stand.ads \\\n+   ada/stringt.ads ada/stringt.adb ada/style.ads ada/styleg.ads \\\n+   ada/styleg.adb ada/stylesw.ads ada/system.ads ada/s-crc32.ads \\\n+   ada/s-exctab.ads ada/s-exctab.adb ada/s-htable.ads ada/s-imenne.ads \\\n+   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n+   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n+   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n+   ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tbuild.adb \\\n+   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/uintp.ads \\\n+   ada/uintp.adb ada/uname.ads ada/unchconv.ads ada/unchdeal.ads \\\n+   ada/urealp.ads ada/urealp.adb ada/validsw.ads ada/widechar.ads \n \n ada/exp_ch5.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -1911,20 +1912,20 @@ ada/exp_ch5.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/scans.ads ada/scn.ads ada/scng.ads ada/scng.adb ada/sem.ads \\\n    ada/sem_attr.ads ada/sem_aux.ads ada/sem_cat.ads ada/sem_ch13.ads \\\n    ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch8.ads ada/sem_disp.ads \\\n-   ada/sem_eval.ads ada/sem_eval.adb ada/sem_res.ads ada/sem_type.ads \\\n-   ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads \\\n-   ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/sprint.ads \\\n-   ada/stand.ads ada/stringt.ads ada/stringt.adb ada/style.ads \\\n-   ada/styleg.ads ada/styleg.adb ada/stylesw.ads ada/system.ads \\\n-   ada/s-crc32.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads \\\n-   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tbuild.adb \\\n-   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/uintp.ads \\\n-   ada/uintp.adb ada/uname.ads ada/unchconv.ads ada/unchdeal.ads \\\n-   ada/urealp.ads ada/validsw.ads ada/widechar.ads \n+   ada/sem_eval.ads ada/sem_eval.adb ada/sem_prag.ads ada/sem_res.ads \\\n+   ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads \\\n+   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/snames.ads \\\n+   ada/sprint.ads ada/stand.ads ada/stringt.ads ada/stringt.adb \\\n+   ada/style.ads ada/styleg.ads ada/styleg.adb ada/stylesw.ads \\\n+   ada/system.ads ada/s-crc32.ads ada/s-exctab.ads ada/s-htable.ads \\\n+   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n+   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads \\\n+   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n+   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n+   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/validsw.ads ada/widechar.ads \n \n ada/exp_ch6.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -1948,20 +1949,20 @@ ada/exp_ch6.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/sem_attr.ads ada/sem_aux.ads ada/sem_aux.adb ada/sem_ch12.ads \\\n    ada/sem_ch13.ads ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch7.ads \\\n    ada/sem_ch8.ads ada/sem_disp.ads ada/sem_dist.ads ada/sem_eval.ads \\\n-   ada/sem_mech.ads ada/sem_res.ads ada/sem_scil.ads ada/sem_type.ads \\\n-   ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads \\\n-   ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/sprint.ads \\\n-   ada/stand.ads ada/stringt.ads ada/style.ads ada/styleg.ads \\\n-   ada/styleg.adb ada/stylesw.ads ada/system.ads ada/s-crc32.ads \\\n-   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n-   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/targparm.ads ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n-   ada/ttypes.ads ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \\\n-   ada/widechar.ads \n+   ada/sem_mech.ads ada/sem_prag.ads ada/sem_res.ads ada/sem_scil.ads \\\n+   ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads \\\n+   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/snames.ads \\\n+   ada/sprint.ads ada/stand.ads ada/stringt.ads ada/style.ads \\\n+   ada/styleg.ads ada/styleg.adb ada/stylesw.ads ada/system.ads \\\n+   ada/s-crc32.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n+   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n+   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n+   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n+   ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tbuild.adb \\\n+   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/uintp.ads \\\n+   ada/uintp.adb ada/uname.ads ada/unchconv.ads ada/unchdeal.ads \\\n+   ada/urealp.ads ada/validsw.ads ada/widechar.ads \n \n ada/exp_ch7.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -1977,16 +1978,16 @@ ada/exp_ch7.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads \\\n    ada/restrict.ads ada/restrict.adb ada/rident.ads ada/rtsfind.ads \\\n    ada/sem.ads ada/sem_aux.ads ada/sem_ch3.ads ada/sem_ch7.ads \\\n-   ada/sem_ch8.ads ada/sem_eval.ads ada/sem_res.ads ada/sem_type.ads \\\n-   ada/sem_util.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n-   ada/snames.ads ada/stand.ads ada/stringt.ads ada/system.ads \\\n-   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n-   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n-   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n-   ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n+   ada/sem_ch8.ads ada/sem_eval.ads ada/sem_prag.ads ada/sem_res.ads \\\n+   ada/sem_type.ads ada/sem_util.ads ada/sinfo.ads ada/sinfo.adb \\\n+   ada/sinput.ads ada/snames.ads ada/stand.ads ada/stringt.ads \\\n+   ada/system.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n+   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n+   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n+   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n+   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n+   ada/targparm.ads ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n+   ada/ttypes.ads ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n    ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \n \n ada/exp_ch8.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n@@ -2000,16 +2001,16 @@ ada/exp_ch8.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/inline.ads ada/itypes.ads ada/lib.ads ada/namet.ads ada/nlists.ads \\\n    ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads \\\n    ada/restrict.ads ada/rident.ads ada/rtsfind.ads ada/sem.ads \\\n-   ada/sem_aux.ads ada/sem_ch8.ads ada/sem_eval.ads ada/sem_res.ads \\\n-   ada/sem_type.ads ada/sem_util.ads ada/sinfo.ads ada/sinfo.adb \\\n-   ada/sinput.ads ada/snames.ads ada/stand.ads ada/stringt.ads \\\n-   ada/system.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-stalib.ads ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n-   ada/tbuild.ads ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n-   ada/uintp.ads ada/uintp.adb ada/unchconv.ads ada/unchdeal.ads \\\n-   ada/urealp.ads ada/validsw.ads \n+   ada/sem_aux.ads ada/sem_ch8.ads ada/sem_eval.ads ada/sem_prag.ads \\\n+   ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads ada/sinfo.ads \\\n+   ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/stand.ads \\\n+   ada/stringt.ads ada/system.ads ada/s-exctab.ads ada/s-htable.ads \\\n+   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n+   ada/s-rident.ads ada/s-stalib.ads ada/s-string.ads ada/s-traent.ads \\\n+   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n+   ada/targparm.ads ada/tbuild.ads ada/tree_io.ads ada/ttypes.ads \\\n+   ada/types.ads ada/uintp.ads ada/uintp.adb ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \n \n ada/exp_ch9.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -2028,19 +2029,19 @@ ada/exp_ch9.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/scans.ads ada/scn.ads ada/scng.ads ada/scng.adb ada/sem.ads \\\n    ada/sem_attr.ads ada/sem_aux.ads ada/sem_aux.adb ada/sem_ch11.ads \\\n    ada/sem_ch6.ads ada/sem_ch8.ads ada/sem_disp.ads ada/sem_elab.ads \\\n-   ada/sem_eval.ads ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads \\\n-   ada/sem_util.adb ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n-   ada/snames.ads ada/stand.ads ada/stringt.ads ada/style.ads \\\n-   ada/styleg.ads ada/styleg.adb ada/stylesw.ads ada/system.ads \\\n-   ada/s-crc32.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads \\\n-   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tbuild.adb \\\n-   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/uintp.ads \\\n-   ada/uintp.adb ada/uname.ads ada/unchconv.ads ada/unchdeal.ads \\\n-   ada/urealp.ads ada/validsw.ads ada/widechar.ads \n+   ada/sem_eval.ads ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads \\\n+   ada/sem_util.ads ada/sem_util.adb ada/sinfo.ads ada/sinfo.adb \\\n+   ada/sinput.ads ada/snames.ads ada/stand.ads ada/stringt.ads \\\n+   ada/style.ads ada/styleg.ads ada/styleg.adb ada/stylesw.ads \\\n+   ada/system.ads ada/s-crc32.ads ada/s-exctab.ads ada/s-htable.ads \\\n+   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n+   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads \\\n+   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n+   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n+   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/validsw.ads ada/widechar.ads \n \n ada/exp_code.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -2106,20 +2107,20 @@ ada/exp_disp.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/scans.ads ada/scil_ll.ads ada/scn.ads ada/scng.ads ada/scng.adb \\\n    ada/sem.ads ada/sem_attr.ads ada/sem_aux.ads ada/sem_aux.adb \\\n    ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_disp.ads \\\n-   ada/sem_eval.ads ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads \\\n-   ada/sem_util.adb ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n-   ada/snames.ads ada/stand.ads ada/stringt.ads ada/stringt.adb \\\n-   ada/style.ads ada/styleg.ads ada/styleg.adb ada/stylesw.ads \\\n-   ada/system.ads ada/s-carun8.ads ada/s-crc32.ads ada/s-exctab.ads \\\n-   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n-   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n-   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n-   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-utf_32.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n-   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n-   ada/types.ads ada/types.adb ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \\\n-   ada/widechar.ads \n+   ada/sem_eval.ads ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads \\\n+   ada/sem_util.ads ada/sem_util.adb ada/sinfo.ads ada/sinfo.adb \\\n+   ada/sinput.ads ada/snames.ads ada/stand.ads ada/stringt.ads \\\n+   ada/stringt.adb ada/style.ads ada/styleg.ads ada/styleg.adb \\\n+   ada/stylesw.ads ada/system.ads ada/s-carun8.ads ada/s-crc32.ads \\\n+   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n+   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n+   ada/targparm.ads ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n+   ada/ttypes.ads ada/types.ads ada/types.adb ada/uintp.ads ada/uintp.adb \\\n+   ada/uname.ads ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \\\n+   ada/validsw.ads ada/widechar.ads \n \n ada/exp_dist.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -2210,18 +2211,18 @@ ada/exp_intr.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads \\\n    ada/restrict.ads ada/restrict.adb ada/rident.ads ada/rtsfind.ads \\\n    ada/sem.ads ada/sem_aux.ads ada/sem_ch8.ads ada/sem_eval.ads \\\n-   ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads ada/sinfo.ads \\\n-   ada/sinfo.adb ada/sinput.ads ada/sinput.adb ada/snames.ads \\\n-   ada/stand.ads ada/stringt.ads ada/system.ads ada/s-exctab.ads \\\n-   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n-   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n-   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n-   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n-   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n-   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n-   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/urealp.ads ada/urealp.adb ada/validsw.ads \\\n-   ada/widechar.ads \n+   ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads \\\n+   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/sinput.adb \\\n+   ada/snames.ads ada/stand.ads ada/stringt.ads ada/system.ads \\\n+   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n+   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n+   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n+   ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n+   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/urealp.adb \\\n+   ada/validsw.ads ada/widechar.ads \n \n ada/exp_pakd.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -2237,17 +2238,17 @@ ada/exp_pakd.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/nmake.adb ada/opt.ads ada/output.ads ada/restrict.ads \\\n    ada/rident.ads ada/rtsfind.ads ada/sem.ads ada/sem_aux.ads \\\n    ada/sem_ch13.ads ada/sem_ch3.ads ada/sem_ch8.ads ada/sem_eval.ads \\\n-   ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads ada/sem_warn.ads \\\n-   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/snames.ads \\\n-   ada/sprint.ads ada/stand.ads ada/stringt.ads ada/system.ads \\\n-   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-soflin.ads \\\n-   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n-   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n-   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n-   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n-   ada/uintp.ads ada/uintp.adb ada/unchconv.ads ada/unchdeal.ads \\\n-   ada/urealp.ads ada/validsw.ads \n+   ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads \\\n+   ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n+   ada/snames.ads ada/sprint.ads ada/stand.ads ada/stringt.ads \\\n+   ada/system.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n+   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n+   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n+   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n+   ada/types.ads ada/uintp.ads ada/uintp.adb ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \n \n ada/exp_prag.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -2358,20 +2359,20 @@ ada/exp_util.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/scans.ads ada/scn.ads ada/scng.ads ada/scng.adb ada/sem.ads \\\n    ada/sem_attr.ads ada/sem_aux.ads ada/sem_cat.ads ada/sem_ch6.ads \\\n    ada/sem_ch8.ads ada/sem_disp.ads ada/sem_eval.ads ada/sem_eval.adb \\\n-   ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb \\\n-   ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n-   ada/snames.ads ada/stand.ads ada/stringt.ads ada/stringt.adb \\\n-   ada/style.ads ada/styleg.ads ada/styleg.adb ada/stylesw.ads \\\n-   ada/system.ads ada/s-carun8.ads ada/s-crc32.ads ada/s-exctab.ads \\\n-   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n-   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n-   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n-   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-utf_32.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n-   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n-   ada/types.ads ada/types.adb ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/urealp.adb \\\n-   ada/validsw.ads ada/widechar.ads \n+   ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads \\\n+   ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb \\\n+   ada/sinput.ads ada/snames.ads ada/stand.ads ada/stringt.ads \\\n+   ada/stringt.adb ada/style.ads ada/styleg.ads ada/styleg.adb \\\n+   ada/stylesw.ads ada/system.ads ada/s-carun8.ads ada/s-crc32.ads \\\n+   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n+   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n+   ada/targparm.ads ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n+   ada/ttypes.ads ada/types.ads ada/types.adb ada/uintp.ads ada/uintp.adb \\\n+   ada/uname.ads ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \\\n+   ada/urealp.adb ada/validsw.ads ada/widechar.ads \n \n ada/exp_vfpt.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -3298,19 +3299,19 @@ ada/sem_aggr.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/scn.ads ada/scng.ads ada/scng.adb ada/sem.ads ada/sem_aggr.ads \\\n    ada/sem_aggr.adb ada/sem_attr.ads ada/sem_aux.ads ada/sem_cat.ads \\\n    ada/sem_ch13.ads ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch8.ads \\\n-   ada/sem_disp.ads ada/sem_eval.ads ada/sem_eval.adb ada/sem_res.ads \\\n-   ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads \\\n-   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/sinput.adb \\\n-   ada/snames.ads ada/sprint.ads ada/stand.ads ada/stringt.ads \\\n-   ada/stringt.adb ada/style.ads ada/styleg.ads ada/styleg.adb \\\n-   ada/stylesw.ads ada/system.ads ada/s-crc32.ads ada/s-exctab.ads \\\n-   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n-   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n-   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n-   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-utf_32.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n-   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n-   ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n+   ada/sem_disp.ads ada/sem_eval.ads ada/sem_eval.adb ada/sem_prag.ads \\\n+   ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb \\\n+   ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n+   ada/sinput.adb ada/snames.ads ada/sprint.ads ada/stand.ads \\\n+   ada/stringt.ads ada/stringt.adb ada/style.ads ada/styleg.ads \\\n+   ada/styleg.adb ada/stylesw.ads ada/system.ads ada/s-crc32.ads \\\n+   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n+   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n+   ada/targparm.ads ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n+   ada/ttypes.ads ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n    ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \\\n    ada/widechar.ads \n \n@@ -3335,20 +3336,20 @@ ada/sem_attr.o : ada/ada.ads ada/a-charac.ads ada/a-chlat1.ads \\\n    ada/sem_ch13.ads ada/sem_ch3.ads ada/sem_ch4.ads ada/sem_ch6.ads \\\n    ada/sem_ch8.ads ada/sem_disp.ads ada/sem_dist.ads ada/sem_elab.ads \\\n    ada/sem_elim.ads ada/sem_eval.ads ada/sem_eval.adb ada/sem_intr.ads \\\n-   ada/sem_res.ads ada/sem_res.adb ada/sem_type.ads ada/sem_util.ads \\\n-   ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb \\\n-   ada/sinfo-cn.ads ada/sinput.ads ada/sinput.adb ada/snames.ads \\\n-   ada/snames.adb ada/sprint.ads ada/stand.ads ada/stringt.ads \\\n-   ada/stringt.adb ada/style.ads ada/styleg.ads ada/styleg.adb \\\n-   ada/stylesw.ads ada/system.ads ada/s-carun8.ads ada/s-crc32.ads \\\n-   ada/s-exctab.ads ada/s-exctab.adb ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads \\\n-   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tbuild.adb \\\n-   ada/tree_io.ads ada/ttypef.ads ada/ttypes.ads ada/types.ads \\\n-   ada/types.adb ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n+   ada/sem_prag.ads ada/sem_res.ads ada/sem_res.adb ada/sem_type.ads \\\n+   ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads \\\n+   ada/sinfo.adb ada/sinfo-cn.ads ada/sinput.ads ada/sinput.adb \\\n+   ada/snames.ads ada/snames.adb ada/sprint.ads ada/stand.ads \\\n+   ada/stringt.ads ada/stringt.adb ada/style.ads ada/styleg.ads \\\n+   ada/styleg.adb ada/stylesw.ads ada/system.ads ada/s-carun8.ads \\\n+   ada/s-crc32.ads ada/s-exctab.ads ada/s-exctab.adb ada/s-htable.ads \\\n+   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n+   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads \\\n+   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n+   ada/tbuild.adb ada/tree_io.ads ada/ttypef.ads ada/ttypes.ads \\\n+   ada/types.ads ada/types.adb ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n    ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/urealp.adb \\\n    ada/validsw.ads ada/widechar.ads \n \n@@ -3795,19 +3796,19 @@ ada/sem_disp.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/scil_ll.ads ada/scn.ads ada/scng.ads ada/scng.adb ada/sem.ads \\\n    ada/sem_attr.ads ada/sem_aux.ads ada/sem_aux.adb ada/sem_ch3.ads \\\n    ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_disp.ads \\\n-   ada/sem_disp.adb ada/sem_eval.ads ada/sem_res.ads ada/sem_type.ads \\\n-   ada/sem_util.ads ada/sem_util.adb ada/sinfo.ads ada/sinfo.adb \\\n-   ada/sinput.ads ada/snames.ads ada/stand.ads ada/stringt.ads \\\n-   ada/style.ads ada/styleg.ads ada/styleg.adb ada/stylesw.ads \\\n-   ada/system.ads ada/s-crc32.ads ada/s-exctab.ads ada/s-htable.ads \\\n-   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n-   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n-   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n-   ada/s-traent.ads ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads \\\n-   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n-   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/uintp.ads \\\n-   ada/uintp.adb ada/uname.ads ada/unchconv.ads ada/unchdeal.ads \\\n-   ada/urealp.ads ada/validsw.ads ada/widechar.ads \n+   ada/sem_disp.adb ada/sem_eval.ads ada/sem_prag.ads ada/sem_res.ads \\\n+   ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb ada/sinfo.ads \\\n+   ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/stand.ads \\\n+   ada/stringt.ads ada/style.ads ada/styleg.ads ada/styleg.adb \\\n+   ada/stylesw.ads ada/system.ads ada/s-crc32.ads ada/s-exctab.ads \\\n+   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n+   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n+   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n+   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-utf_32.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n+   ada/tbuild.ads ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n+   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/validsw.ads ada/widechar.ads \n \n ada/sem_dist.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -4000,20 +4001,20 @@ ada/sem_res.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/sem_aux.ads ada/sem_cat.ads ada/sem_ch13.ads ada/sem_ch3.ads \\\n    ada/sem_ch4.ads ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads \\\n    ada/sem_disp.ads ada/sem_dist.ads ada/sem_elab.ads ada/sem_elim.ads \\\n-   ada/sem_eval.ads ada/sem_eval.adb ada/sem_intr.ads ada/sem_res.ads \\\n-   ada/sem_res.adb ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb \\\n-   ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb ada/sinfo-cn.ads \\\n-   ada/sinput.ads ada/sinput.adb ada/snames.ads ada/sprint.ads \\\n-   ada/stand.ads ada/stringt.ads ada/stringt.adb ada/style.ads \\\n-   ada/styleg.ads ada/styleg.adb ada/stylesw.ads ada/system.ads \\\n-   ada/s-carun8.ads ada/s-crc32.ads ada/s-exctab.ads ada/s-htable.ads \\\n-   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n-   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n-   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n-   ada/s-traent.ads ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads \\\n-   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n-   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n-   ada/types.adb ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n+   ada/sem_eval.ads ada/sem_eval.adb ada/sem_intr.ads ada/sem_prag.ads \\\n+   ada/sem_res.ads ada/sem_res.adb ada/sem_type.ads ada/sem_util.ads \\\n+   ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb \\\n+   ada/sinfo-cn.ads ada/sinput.ads ada/sinput.adb ada/snames.ads \\\n+   ada/sprint.ads ada/stand.ads ada/stringt.ads ada/stringt.adb \\\n+   ada/style.ads ada/styleg.ads ada/styleg.adb ada/stylesw.ads \\\n+   ada/system.ads ada/s-carun8.ads ada/s-crc32.ads ada/s-exctab.ads \\\n+   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n+   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n+   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n+   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-utf_32.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n+   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n+   ada/types.ads ada/types.adb ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n    ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/urealp.adb \\\n    ada/validsw.ads ada/widechar.ads \n "}, {"sha": "8b696a5b59af0ffef8e2f9f740939b28a474b1df", "filename": "gcc/ada/gcc-interface/gigi.h", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fgigi.h?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -366,8 +366,19 @@ enum standard_datatypes\n   ADT_all_others_decl,\n   ADT_LAST};\n \n+/* Define kind of exception information associated with raise statements.  */\n+enum exception_info_kind\n+{\n+  /* Simple exception information: file:line.  */\n+  exception_simple,\n+  /* Range exception information: file:line + index, first, last.  */\n+  exception_range,\n+  /* Column exception information: file:line:column.  */\n+  exception_column};\n+\n extern GTY(()) tree gnat_std_decls[(int) ADT_LAST];\n extern GTY(()) tree gnat_raise_decls[(int) LAST_REASON_CODE + 1];\n+extern GTY(()) tree gnat_raise_decls_ext[(int) LAST_REASON_CODE + 1];\n \n #define longest_float_type_node gnat_std_decls[(int) ADT_longest_float_type]\n #define except_type_node gnat_std_decls[(int) ADT_except_type]\n@@ -790,6 +801,16 @@ extern tree build_call_0_expr (tree fundecl);\n     (N_Raise_{Constraint,Storage,Program}_Error).  */\n extern tree build_call_raise (int msg, Node_Id gnat_node, char kind);\n \n+/* Similar to build_call_raise, for an index or range check exception as\n+   determined by MSG, with extra information generated of the form\n+   \"INDEX out of range FIRST..LAST\".  */\n+extern tree build_call_raise_range (int msg, Node_Id gnat_node,\n+\t\t\t\t    tree index, tree first, tree last);\n+\n+/* Similar to build_call_raise, with extra information about the column\n+   where the check failed.  */\n+extern tree build_call_raise_column (int msg, Node_Id gnat_node);\n+\n /* Return a CONSTRUCTOR of TYPE whose elements are V.  This is not the\n    same as build_constructor in the language-independent tree.c.  */\n extern tree gnat_build_constructor (tree type, VEC(constructor_elt,gc) *v);"}, {"sha": "90be61c52448a2a0bd5cf32b543518c79288da89", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 131, "deletions": 44, "changes": 175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -203,6 +203,7 @@ static tree maybe_implicit_deref (tree);\n static void set_expr_location_from_node (tree, Node_Id);\n static void set_gnu_expr_location_from_node (tree, Node_Id);\n static int lvalue_required_p (Node_Id, tree, bool, bool, bool);\n+static tree build_raise_check (int, tree, enum exception_info_kind);\n \n /* Hooks for debug info back-ends, only supported and used in a restricted set\n    of configurations.  */\n@@ -467,34 +468,22 @@ gigi (Node_Id gnat_root, int max_gnat_node, int number_name ATTRIBUTE_UNUSED,\n \n       for (i = 0; i < (int) ARRAY_SIZE (gnat_raise_decls); i++)\n \tgnat_raise_decls[i] = decl;\n+      TREE_THIS_VOLATILE (decl) = 1;\n+      TREE_SIDE_EFFECTS (decl) = 1;\n+      TREE_TYPE (decl)\n+\t= build_qualified_type (TREE_TYPE (decl), TYPE_QUAL_VOLATILE);\n     }\n   else\n-    /* Otherwise, make one decl for each exception reason.  */\n-    for (i = 0; i < (int) ARRAY_SIZE (gnat_raise_decls); i++)\n-      {\n-\tchar name[17];\n-\n-\tsprintf (name, \"__gnat_rcheck_%.2d\", i);\n-\tgnat_raise_decls[i]\n-\t  = create_subprog_decl\n-\t    (get_identifier (name), NULL_TREE,\n-\t     build_function_type (void_type_node,\n-\t\t\t\t  tree_cons (NULL_TREE,\n-\t\t\t\t\t     build_pointer_type\n-\t\t\t\t\t     (unsigned_char_type_node),\n-\t\t\t\t\t     tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\tinteger_type_node,\n-\t\t\t\t\t\t\tt))),\n-\t     NULL_TREE, false, true, true, NULL, Empty);\n-      }\n-\n-  for (i = 0; i < (int) ARRAY_SIZE (gnat_raise_decls); i++)\n     {\n-      TREE_THIS_VOLATILE (gnat_raise_decls[i]) = 1;\n-      TREE_SIDE_EFFECTS (gnat_raise_decls[i]) = 1;\n-      TREE_TYPE (gnat_raise_decls[i])\n-\t= build_qualified_type (TREE_TYPE (gnat_raise_decls[i]),\n-\t\t\t\tTYPE_QUAL_VOLATILE);\n+      /* Otherwise, make one decl for each exception reason.  */\n+      for (i = 0; i < (int) ARRAY_SIZE (gnat_raise_decls); i++)\n+\tgnat_raise_decls[i] = build_raise_check (i, t, exception_simple);\n+      for (i = 0; i < (int) ARRAY_SIZE (gnat_raise_decls_ext); i++)\n+\tgnat_raise_decls_ext[i]\n+\t  = build_raise_check (i, t,\n+\t\t\t       i == CE_Index_Check_Failed\n+\t\t\t       || i == CE_Range_Check_Failed ?\n+\t\t\t       exception_range : exception_column);\n     }\n \n   /* Set the types that GCC and Gigi use from the front end.  */\n@@ -640,6 +629,53 @@ gigi (Node_Id gnat_root, int max_gnat_node, int number_name ATTRIBUTE_UNUSED,\n   error_gnat_node = Empty;\n }\n \f\n+/* Return a subprogram decl corresponding to __gnat_rcheck_xx for the given\n+   CHECK (if EXTENDED is false), or __gnat_rcheck_xx_ext (if EXTENDED is\n+   true).  */\n+\n+static tree\n+build_raise_check (int check, tree void_tree, enum exception_info_kind kind)\n+{\n+  char name[21];\n+  tree result;\n+\n+  if (kind != exception_simple)\n+    {\n+      sprintf (name, \"__gnat_rcheck_%.2d_ext\", check);\n+      result = create_subprog_decl\n+\t(get_identifier (name), NULL_TREE,\n+\t build_function_type\n+\t   (void_type_node,\n+\t    tree_cons\n+\t      (NULL_TREE,\n+\t       build_pointer_type (unsigned_char_type_node),\n+\t       tree_cons (NULL_TREE, integer_type_node,\n+\t\t tree_cons (NULL_TREE, integer_type_node,\n+\t\t   kind == exception_column ? void_tree :\n+\t\t     tree_cons (NULL_TREE, integer_type_node,\n+\t\t       tree_cons (NULL_TREE, integer_type_node, void_tree)))))),\n+\t NULL_TREE, false, true, true, NULL, Empty);\n+    }\n+  else\n+    {\n+      sprintf (name, \"__gnat_rcheck_%.2d\", check);\n+      result = create_subprog_decl\n+\t(get_identifier (name), NULL_TREE,\n+\t build_function_type\n+\t   (void_type_node,\n+\t    tree_cons\n+\t      (NULL_TREE,\n+\t       build_pointer_type (unsigned_char_type_node),\n+\t       tree_cons (NULL_TREE, integer_type_node, void_tree))),\n+\t NULL_TREE, false, true, true, NULL, Empty);\n+    }\n+  TREE_THIS_VOLATILE (result) = 1;\n+  TREE_SIDE_EFFECTS (result) = 1;\n+  TREE_TYPE (result)\n+    = build_qualified_type (TREE_TYPE (result), TYPE_QUAL_VOLATILE);\n+  return result;\n+}\n+\f\n /* Return a positive value if an lvalue is required for GNAT_NODE, which is\n    an N_Attribute_Reference.  */\n \n@@ -5457,30 +5493,81 @@ gnat_to_gnu (Node_Id gnat_node)\n     case N_Raise_Constraint_Error:\n     case N_Raise_Program_Error:\n     case N_Raise_Storage_Error:\n-      if (type_annotate_only)\n-\t{\n-\t  gnu_result = alloc_stmt_list ();\n-\t  break;\n-\t}\n+      {\n+\tint reason = UI_To_Int (Reason (gnat_node));\n+\tNode_Id cond = Condition (gnat_node);\n+\tbool handled = false;\n \n-      gnu_result_type = get_unpadded_type (Etype (gnat_node));\n-      gnu_result\n-\t= build_call_raise (UI_To_Int (Reason (gnat_node)), gnat_node, kind);\n+\tif (type_annotate_only)\n+\t  {\n+\t    gnu_result = alloc_stmt_list ();\n+\t    break;\n+\t  }\n \n-      /* If the type is VOID, this is a statement, so we need to\n-\t generate the code for the call.  Handle a Condition, if there\n-\t is one.  */\n-      if (TREE_CODE (gnu_result_type) == VOID_TYPE)\n-\t{\n-\t  set_expr_location_from_node (gnu_result, gnat_node);\n+        gnu_result_type = get_unpadded_type (Etype (gnat_node));\n \n-\t  if (Present (Condition (gnat_node)))\n+\tif (Exception_Extra_Info\n+\t    && !No_Exception_Handlers_Set ()\n+\t    && !get_exception_label (kind)\n+\t    && TREE_CODE (gnu_result_type) == VOID_TYPE\n+\t    && Present (cond))\n+\t  {\n+\t    if (reason == CE_Access_Check_Failed)\n+\t      {\n+\t\thandled = true;\n+\t\tgnu_result = build_call_raise_column (reason, gnat_node);\n+\t      }\n+\t    else if ((reason == CE_Index_Check_Failed\n+\t\t      || reason == CE_Range_Check_Failed)\n+\t\t     && Nkind (cond) == N_Op_Not\n+\t\t     && Nkind (Right_Opnd (cond)) == N_In\n+\t\t     && Nkind (Right_Opnd (Right_Opnd (cond))) == N_Range)\n+\t      {\n+\t\tNode_Id op = Right_Opnd (cond);  /* N_In node */\n+\t\tNode_Id index = Left_Opnd (op);\n+\t\tNode_Id type = Etype (index);\n+\n+\t\tif (Is_Type (type)\n+\t\t    && Known_Esize (type)\n+\t\t    && UI_To_Int (Esize (type)) <= 32)\n+\t\t  {\n+\t\t    handled = true;\n+\t\t    gnu_result = build_call_raise_range\n+\t\t      (reason, gnat_node,\n+\t\t       gnat_to_gnu (index),                         /* index */\n+\t\t       gnat_to_gnu (Low_Bound (Right_Opnd (op))),   /* first */\n+\t\t       gnat_to_gnu (High_Bound (Right_Opnd (op)))); /* last  */\n+\t\t  }\n+\t      }\n+\t  }\n+\n+\tif (handled)\n+\t  {\n+\t    set_expr_location_from_node (gnu_result, gnat_node);\n \t    gnu_result = build3 (COND_EXPR, void_type_node,\n-\t\t\t\t gnat_to_gnu (Condition (gnat_node)),\n+\t    \t\t\t gnat_to_gnu (cond),\n \t\t\t\t gnu_result, alloc_stmt_list ());\n-\t}\n-      else\n-\tgnu_result = build1 (NULL_EXPR, gnu_result_type, gnu_result);\n+\t  }\n+\telse\n+\t  {\n+\t    gnu_result = build_call_raise (reason, gnat_node, kind);\n+\n+\t    /* If the type is VOID, this is a statement, so we need to\n+\t       generate the code for the call.  Handle a Condition, if there\n+\t       is one.  */\n+\t    if (TREE_CODE (gnu_result_type) == VOID_TYPE)\n+\t      {\n+\t\tset_expr_location_from_node (gnu_result, gnat_node);\n+\n+\t\tif (Present (cond))\n+\t\t  gnu_result = build3 (COND_EXPR, void_type_node,\n+\t\t\t\t       gnat_to_gnu (cond),\n+\t\t\t\t       gnu_result, alloc_stmt_list ());\n+\t      }\n+\t    else\n+\t      gnu_result = build1 (NULL_EXPR, gnu_result_type, gnu_result);\n+\t  }\n+      }\n       break;\n \n     case N_Validate_Unchecked_Conversion:"}, {"sha": "ef0e8f209fe441af4e7d110e755d6101bf6dfb96", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -79,6 +79,9 @@ tree gnat_std_decls[(int) ADT_LAST];\n /* Functions to call for each of the possible raise reasons.  */\n tree gnat_raise_decls[(int) LAST_REASON_CODE + 1];\n \n+/* Functions to call with extra info for each of the possible raise reasons.  */\n+tree gnat_raise_decls_ext[(int) LAST_REASON_CODE + 1];\n+\n /* Forward declarations for handlers of attributes.  */\n static tree handle_const_attribute (tree *, tree, tree, int, bool *);\n static tree handle_nothrow_attribute (tree *, tree, tree, int, bool *);"}, {"sha": "c7db5a5f20457ff36dd6fe3d806bf22141099bb6", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -1519,6 +1519,113 @@ build_call_raise (int msg, Node_Id gnat_node, char kind)\n \t\t\t       filename),\n \t\t       build_int_cst (NULL_TREE, line_number));\n }\n+\n+/* Similar to build_call_raise, for an index or range check exception as\n+   determined by MSG, with extra information generated of the form\n+   \"INDEX out of range FIRST..LAST\".  */\n+\n+tree\n+build_call_raise_range (int msg, Node_Id gnat_node,\n+\t\t\ttree index, tree first, tree last)\n+{\n+  tree call;\n+  tree fndecl = gnat_raise_decls_ext[msg];\n+  tree filename;\n+  int line_number, column_number;\n+  const char *str;\n+  int len;\n+\n+  str\n+    = (Debug_Flag_NN || Exception_Locations_Suppressed)\n+      ? \"\"\n+      : (gnat_node != Empty && Sloc (gnat_node) != No_Location)\n+        ? IDENTIFIER_POINTER\n+          (get_identifier (Get_Name_String\n+\t\t\t   (Debug_Source_Name\n+\t\t\t    (Get_Source_File_Index (Sloc (gnat_node))))))\n+        : ref_filename;\n+\n+  len = strlen (str);\n+  filename = build_string (len, str);\n+  if (gnat_node != Empty && Sloc (gnat_node) != No_Location)\n+    {\n+      line_number = Get_Logical_Line_Number (Sloc (gnat_node));\n+      column_number = Get_Column_Number (Sloc (gnat_node));\n+    }\n+  else\n+    {\n+      line_number = input_line;\n+      column_number = 0;\n+    }\n+\n+  TREE_TYPE (filename) = build_array_type (unsigned_char_type_node,\n+\t\t\t\t\t   build_index_type (size_int (len)));\n+\n+  call = build_call_nary (TREE_TYPE (TREE_TYPE (fndecl)),\n+                          build_unary_op (ADDR_EXPR, NULL_TREE, fndecl),\n+                          6,\n+\t\t\t  build1 (ADDR_EXPR,\n+\t\t\t\t  build_pointer_type (unsigned_char_type_node),\n+\t\t\t\t  filename),\n+\t\t\t  build_int_cst (NULL_TREE, line_number),\n+\t\t\t  build_int_cst (NULL_TREE, column_number),\n+\t\t\t  convert (integer_type_node, index),\n+\t\t\t  convert (integer_type_node, first),\n+\t\t\t  convert (integer_type_node, last));\n+  TREE_SIDE_EFFECTS (call) = 1;\n+  return call;\n+}\n+\n+/* Similar to build_call_raise, with extra information about the column\n+   where the check failed.  */\n+\n+tree\n+build_call_raise_column (int msg, Node_Id gnat_node)\n+{\n+  tree fndecl = gnat_raise_decls_ext[msg];\n+  tree call;\n+  tree filename;\n+  int line_number, column_number;\n+  const char *str;\n+  int len;\n+\n+  str\n+    = (Debug_Flag_NN || Exception_Locations_Suppressed)\n+      ? \"\"\n+      : (gnat_node != Empty && Sloc (gnat_node) != No_Location)\n+        ? IDENTIFIER_POINTER\n+          (get_identifier (Get_Name_String\n+\t\t\t   (Debug_Source_Name\n+\t\t\t    (Get_Source_File_Index (Sloc (gnat_node))))))\n+        : ref_filename;\n+\n+  len = strlen (str);\n+  filename = build_string (len, str);\n+  if (gnat_node != Empty && Sloc (gnat_node) != No_Location)\n+    {\n+      line_number = Get_Logical_Line_Number (Sloc (gnat_node));\n+      column_number = Get_Column_Number (Sloc (gnat_node));\n+    }\n+  else\n+    {\n+      line_number = input_line;\n+      column_number = 0;\n+    }\n+\n+  TREE_TYPE (filename) = build_array_type (unsigned_char_type_node,\n+\t\t\t\t\t   build_index_type (size_int (len)));\n+\n+  call = build_call_nary (TREE_TYPE (TREE_TYPE (fndecl)),\n+                          build_unary_op (ADDR_EXPR, NULL_TREE, fndecl),\n+                          3,\n+\t\t\t  build1 (ADDR_EXPR,\n+\t\t\t\t  build_pointer_type (unsigned_char_type_node),\n+\t\t\t\t  filename),\n+\t\t\t  build_int_cst (NULL_TREE, line_number),\n+\t\t\t  build_int_cst (NULL_TREE, column_number));\n+  TREE_SIDE_EFFECTS (call) = 1;\n+  return call;\n+}\n \f\n /* qsort comparer for the bit positions of two constructor elements\n    for record components.  */"}, {"sha": "d3353a804fafb4f26ed67e4603d9581d5760344a", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -2444,9 +2444,9 @@ format, as follows:\n @item\n For digits values up to 6, F float format will be used.\n @item\n-For digits values from 7 to 9, G float format will be used.\n+For digits values from 7 to 9, D float format will be used.\n @item\n-For digits values from 10 to 15, F float format will be used.\n+For digits values from 10 to 15, G float format will be used.\n @item\n Digits values above 15 are not allowed.\n @end itemize"}, {"sha": "9e4fe98376bdd476f21de3537d4f8ae7677a97bc", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -4123,6 +4123,12 @@ Specify a configuration pragma file\n Defines a symbol, associated with @var{value}, for preprocessing.\n (@pxref{Integrated Preprocessing}).\n \n+@item -gnateE\n+@cindex @option{-gnateE} (@command{gcc})\n+Generate extra information in exception messages, in particular display\n+extra column information and the value and range associated with index and\n+range check failures, and extra column information for access checks.\n+\n @item -gnatef\n @cindex @option{-gnatef} (@command{gcc})\n Display full source path name in brief error messages."}, {"sha": "a01141704d8ebb42c324053dec0990bf0c6372ff", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -454,10 +454,16 @@ package Opt is\n    --  It is used to set Warn_On_Exception_Propagation True if the restriction\n    --  No_Exception_Propagation is set.\n \n+   Exception_Extra_Info : Boolean := False;\n+   --  GNAT\n+   --  True when switch -gnateE is used. When True, generate extra information\n+   --  associated with exception messages (in particular range and index\n+   --  checks).\n+\n    Exception_Locations_Suppressed : Boolean := False;\n    --  GNAT\n-   --  This flag is set True if a Suppress_Exception_Locations configuration\n-   --  pragma is currently active.\n+   --  Set to True if a Suppress_Exception_Locations configuration pragma is\n+   --  currently active.\n \n    type Exception_Mechanism_Type is\n    --  Determines the handling of exceptions. See Exp_Ch11 for details"}, {"sha": "5891cc671a29c682bc0691e25018002ac09ce5cc", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -4548,6 +4548,8 @@ package body Sem_Eval is\n       T2 : Entity_Id) return Boolean\n    is\n    begin\n+      --  Scalar types\n+\n       if Is_Scalar_Type (T1) then\n \n          --  Definitely compatible if we match\n@@ -4606,10 +4608,19 @@ package body Sem_Eval is\n             end;\n          end if;\n \n+      --  Access types\n+\n       elsif Is_Access_Type (T1) then\n          return not Is_Constrained (T2)\n-           or else Subtypes_Statically_Match\n-                     (Designated_Type (T1), Designated_Type (T2));\n+                  or else Subtypes_Statically_Match\n+                            (Designated_Type (T1), Designated_Type (T2));\n+\n+         --  Also check that null exclusion matches (AI05-0086-1)\n+         --  commented out because this causes many mail test failures ???\n+\n+         --  and then Can_Never_Be_Null (T1) = Can_Never_Be_Null (T2);\n+\n+      --  All other cases\n \n       else\n          return (Is_Composite_Type (T1) and then not Is_Constrained (T2))"}, {"sha": "55576c57f8e1257f1d7d8e45914afd0615fa6de6", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -5569,7 +5569,8 @@ package body Sem_Util is\n    begin\n       Save_Interps (N, New_Prefix);\n \n-      Rewrite (N, Make_Explicit_Dereference (Sloc (N), Prefix => New_Prefix));\n+      Rewrite (N,\n+        Make_Explicit_Dereference (Sloc (Parent (N)), Prefix => New_Prefix));\n \n       Set_Etype (N, Designated_Type (Etype (New_Prefix)));\n "}, {"sha": "d29acf36ebcf22153052037765c045685395689f", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -422,6 +422,12 @@ package body Switch.C is\n                        (\"-gnateD\" & Switch_Chars (Ptr .. Max));\n                      Ptr := Max + 1;\n \n+                  --  -gnateE (extra exception information)\n+\n+                  when 'E' =>\n+                     Exception_Extra_Info := True;\n+                     Ptr := Ptr + 1;\n+\n                   --  -gnatef (full source path for brief error messages)\n \n                   when 'f' =>"}, {"sha": "0d7183df10d193a3e28f7a4dfe0456d2366d44f8", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437f8c1ebec7789abe617b29a710f08327e8003b/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=437f8c1ebec7789abe617b29a710f08327e8003b", "patch": "@@ -177,6 +177,11 @@ begin\n    Write_Switch_Char (\"eD?\");\n    Write_Line (\"Define or redefine preprocessing symbol, e.g. -gnateDsym=val\");\n \n+   --  Line for -gnateE switch\n+\n+   Write_Switch_Char (\"eE\");\n+   Write_Line (\"Generate extra information in exception messages\");\n+\n    --  Line for -gnatef switch\n \n    Write_Switch_Char (\"ef\");"}]}