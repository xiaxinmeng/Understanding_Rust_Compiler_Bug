{"sha": "c16dd6a8559cddeb9a5fdf777d8b1f9cc775a627", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE2ZGQ2YTg1NTljZGRlYjlhNWZkZjc3N2Q4YjFmOWNjNzc1YTYyNw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-10-15T13:55:47Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-10-15T13:55:47Z"}, "message": "re PR libfortran/33055 (Runtime error in INQUIRE unit existance with -fdefault-integer-8)\n\n2007-10-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/33055\n\t* trans-io.c (create_dummy_iostat): New function to create a unique\n\tdummy variable expression to use with IOSTAT.\n\t(gfc_trans_inquire): Use the new function to pass unit number error info\n\tto run-time library if a regular IOSTAT variable was not given.\n\nFrom-SVN: r129328", "tree": {"sha": "bbeaf515e3b99ce10483ffa88f685a6513bb4725", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbeaf515e3b99ce10483ffa88f685a6513bb4725"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c16dd6a8559cddeb9a5fdf777d8b1f9cc775a627", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c16dd6a8559cddeb9a5fdf777d8b1f9cc775a627", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c16dd6a8559cddeb9a5fdf777d8b1f9cc775a627", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c16dd6a8559cddeb9a5fdf777d8b1f9cc775a627/comments", "author": null, "committer": null, "parents": [{"sha": "d4731b80de2a377fdbfa24dec34b15b5b680691c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4731b80de2a377fdbfa24dec34b15b5b680691c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4731b80de2a377fdbfa24dec34b15b5b680691c"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "7ee3b07b44a4ff5ddde5900cd8f86e0bfe29dfd7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c16dd6a8559cddeb9a5fdf777d8b1f9cc775a627/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c16dd6a8559cddeb9a5fdf777d8b1f9cc775a627/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c16dd6a8559cddeb9a5fdf777d8b1f9cc775a627", "patch": "@@ -1,3 +1,11 @@\n+2007-10-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/33055\n+\t* trans-io.c (create_dummy_iostat): New function to create a unique\n+\tdummy variable expression to use with IOSTAT.\n+\t(gfc_trans_inquire): Use the new function to pass unit number error info\n+\tto run-time library if a regular IOSTAT variable was not given.\n+\n 2007-10-14  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/33745"}, {"sha": "6c438496bb7a90e01f377bff2f147c46ad42bd16", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 37, "deletions": 2, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c16dd6a8559cddeb9a5fdf777d8b1f9cc775a627/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c16dd6a8559cddeb9a5fdf777d8b1f9cc775a627/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=c16dd6a8559cddeb9a5fdf777d8b1f9cc775a627", "patch": "@@ -1083,6 +1083,32 @@ gfc_trans_flush (gfc_code * code)\n }\n \n \n+/* Create a dummy iostat variable to catch any error due to bad unit.  */\n+\n+static gfc_expr *\n+create_dummy_iostat (void)\n+{\n+  gfc_symtree *st;\n+  gfc_expr *e;\n+\n+  gfc_get_ha_sym_tree (\"@iostat\", &st);\n+  st->n.sym->ts.type = BT_INTEGER;\n+  st->n.sym->ts.kind = gfc_default_integer_kind;\n+  gfc_set_sym_referenced (st->n.sym);\n+  st->n.sym->backend_decl\n+\t= gfc_create_var (gfc_get_int_type (st->n.sym->ts.kind),\n+\t\t\t  st->n.sym->name);\n+\n+  e = gfc_get_expr ();\n+  e->expr_type = EXPR_VARIABLE;\n+  e->symtree = st;\n+  e->ts.type = BT_INTEGER;\n+  e->ts.kind = st->n.sym->ts.kind;\n+\n+  return e;\n+}\n+\n+\n /* Translate the non-IOLENGTH form of an INQUIRE statement.  */\n \n tree\n@@ -1122,8 +1148,17 @@ gfc_trans_inquire (gfc_code * code)\n \t\t\tp->file);\n \n   if (p->exist)\n-    mask |= set_parameter_ref (&block, &post_block, var, IOPARM_inquire_exist,\n-\t\t\t       p->exist);\n+    {\n+      mask |= set_parameter_ref (&block, &post_block, var, IOPARM_inquire_exist,\n+\t\t\t\t p->exist);\n+    \n+      if (p->unit && !p->iostat)\n+\t{\n+\t  p->iostat = create_dummy_iostat ();\n+\t  mask |= set_parameter_ref (&block, &post_block, var,\n+\t\t\t\t     IOPARM_common_iostat, p->iostat);\n+\t}\n+    }\n \n   if (p->opened)\n     mask |= set_parameter_ref (&block, &post_block, var, IOPARM_inquire_opened,"}]}