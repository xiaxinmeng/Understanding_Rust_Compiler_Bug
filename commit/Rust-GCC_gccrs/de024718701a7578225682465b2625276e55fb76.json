{"sha": "de024718701a7578225682465b2625276e55fb76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUwMjQ3MTg3MDFhNzU3ODIyNTY4MjQ2NWIyNjI1Mjc2ZTU1ZmI3Ng==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-30T10:35:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-30T10:35:50Z"}, "message": "Merge #652\n\n652: A few more location patches  r=philberty a=dkm\n\nFrom Mark Wieelard: https://gcc.gnu.org/pipermail/gcc-rust/2021-August/000160.html\r\n\r\n> Here are a couple of little patches to improve or simplify locations a\r\n> bit\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>", "tree": {"sha": "8b19a2081e62c09ad03e37ab842822b93f3056c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b19a2081e62c09ad03e37ab842822b93f3056c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de024718701a7578225682465b2625276e55fb76", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhLLSGCRBK7hj4Ov3rIwAAseoIAA4boLk+6FQ8QIb4PgQ9uLJO\n8Ge62pbFSWCjLyj3U9LBbPG5cTucb8wu6AsfCogUg2i243H/aDTuCNeaGy+RuFpM\nQeBXz8Vb+6wJrOSlLl8fTj1pV6i/615AEEWyhUFjJUZyHWb6lg3hA6vXnUeD38eM\naub0zmZCfaax6MWbGxSyHiRGszfy+5ph3xDndTffz7gYf8VFuWE/G2usSuNbpI/N\n5r2Ipinhc/XK9F8dpH9uI8AxAe5eEA4yF89CWFujXz1lT8o+yq2JbanX+f/RbbzO\nC3FsUmsbTdrfVjjD36ssWmGw0mpDWvJMFRVwoASYMasfGnyRrdvOPYlaqWpt1oQ=\n=yzql\n-----END PGP SIGNATURE-----\n", "payload": "tree 8b19a2081e62c09ad03e37ab842822b93f3056c0\nparent 58f2f624ef364525bd5e3e57427457ad03625102\nparent 69728c595537f5a32348e0b17510338d9f2efec0\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1630319750 +0000\ncommitter GitHub <noreply@github.com> 1630319750 +0000\n\nMerge #652\n\n652: A few more location patches  r=philberty a=dkm\n\nFrom Mark Wieelard: https://gcc.gnu.org/pipermail/gcc-rust/2021-August/000160.html\r\n\r\n> Here are a couple of little patches to improve or simplify locations a\r\n> bit\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de024718701a7578225682465b2625276e55fb76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de024718701a7578225682465b2625276e55fb76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de024718701a7578225682465b2625276e55fb76/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58f2f624ef364525bd5e3e57427457ad03625102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58f2f624ef364525bd5e3e57427457ad03625102", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58f2f624ef364525bd5e3e57427457ad03625102"}, {"sha": "69728c595537f5a32348e0b17510338d9f2efec0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69728c595537f5a32348e0b17510338d9f2efec0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69728c595537f5a32348e0b17510338d9f2efec0"}], "stats": {"total": 59, "additions": 5, "deletions": 54}, "files": [{"sha": "fdd5041d6022e825169abb99d3e1a9681b4eb755", "filename": "gcc/rust/hir/rust-ast-lower-stmt.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de024718701a7578225682465b2625276e55fb76/gcc%2Frust%2Fhir%2Frust-ast-lower-stmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de024718701a7578225682465b2625276e55fb76/gcc%2Frust%2Fhir%2Frust-ast-lower-stmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-stmt.h?ref=de024718701a7578225682465b2625276e55fb76", "patch": "@@ -133,12 +133,10 @@ class ASTLoweringStmt : public ASTLoweringBase\n \t\t\t\t     mappings->get_next_localdef_id (\n \t\t\t\t       crate_num));\n \n-      // FIXME\n-      // AST::TupleField is missing Location info\n-      Location field_locus;\n       HIR::TupleField translated_field (mapping,\n \t\t\t\t\tstd::unique_ptr<HIR::Type> (type), vis,\n-\t\t\t\t\tfield_locus, field.get_outer_attrs ());\n+\t\t\t\t\tfield.get_locus (),\n+\t\t\t\t\tfield.get_outer_attrs ());\n       fields.push_back (std::move (translated_field));\n       return true;\n     });"}, {"sha": "7a2c267682585bc2df24fd32f93683ca5e79c7b2", "filename": "gcc/rust/hir/tree/rust-hir-item.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de024718701a7578225682465b2625276e55fb76/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de024718701a7578225682465b2625276e55fb76/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h?ref=de024718701a7578225682465b2625276e55fb76", "patch": "@@ -1126,8 +1126,6 @@ class Function : public VisItem, public ImplItem\n \n   Location get_locus () const override final { return locus; }\n \n-  Location get_impl_locus () const final { return get_locus (); }\n-\n   void accept_vis (HIRVisitor &vis) override;\n \n   Analysis::NodeMapping get_impl_mappings () const override\n@@ -1268,8 +1266,6 @@ class TypeAlias : public VisItem, public ImplItem\n \n   Location get_locus () const override final { return locus; }\n \n-  Location get_impl_locus () const final { return get_locus (); }\n-\n   void accept_vis (HIRVisitor &vis) override;\n \n   std::vector<std::unique_ptr<GenericParam> > &get_generic_params ()\n@@ -2017,8 +2013,6 @@ class ConstantItem : public VisItem, public ImplItem\n \n   Location get_locus () const override final { return locus; }\n \n-  Location get_impl_locus () const final { return get_locus (); }\n-\n   void accept_vis (HIRVisitor &vis) override;\n \n   Type *get_type () { return type.get (); }"}, {"sha": "8ba6308fdea9c5cfeedae196018604149fd02b0e", "filename": "gcc/rust/hir/tree/rust-hir.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de024718701a7578225682465b2625276e55fb76/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de024718701a7578225682465b2625276e55fb76/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h?ref=de024718701a7578225682465b2625276e55fb76", "patch": "@@ -663,7 +663,7 @@ class ImplItem\n \n   virtual Analysis::NodeMapping get_impl_mappings () const = 0;\n \n-  virtual Location get_impl_locus () const = 0;\n+  virtual Location get_locus () const = 0;\n };\n \n // A crate HIR object - holds all the data for a single compilation unit"}, {"sha": "9a2c7fe3c07f96f02c8e883a6aac3f8e92054a7c", "filename": "gcc/rust/typecheck/rust-hir-inherent-impl-overlap.h", "status": "modified", "additions": 2, "deletions": 43, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de024718701a7578225682465b2625276e55fb76/gcc%2Frust%2Ftypecheck%2Frust-hir-inherent-impl-overlap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de024718701a7578225682465b2625276e55fb76/gcc%2Frust%2Ftypecheck%2Frust-hir-inherent-impl-overlap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-inherent-impl-overlap.h?ref=de024718701a7578225682465b2625276e55fb76", "patch": "@@ -64,39 +64,6 @@ class ImplItemToName : public TypeCheckBase\n   std::string &result;\n };\n \n-class GetLocusFromImplItem : public TypeCheckBase\n-{\n-  using Rust::Resolver::TypeCheckBase::visit;\n-\n-public:\n-  static bool Resolve (HIR::ImplItem *query, Location &locus)\n-  {\n-    GetLocusFromImplItem resolver (locus);\n-    query->accept_vis (resolver);\n-    return resolver.ok;\n-  }\n-\n-  void visit (HIR::ConstantItem &constant) override\n-  {\n-    ok = true;\n-    locus = constant.get_locus ();\n-  }\n-\n-  void visit (HIR::Function &function) override\n-  {\n-    ok = true;\n-    locus = function.get_locus ();\n-  }\n-\n-private:\n-  GetLocusFromImplItem (Location &locus)\n-    : TypeCheckBase (), ok (false), locus (locus)\n-  {}\n-\n-  bool ok;\n-  Location &locus;\n-};\n-\n class OverlappingImplItemPass : public TypeCheckBase\n {\n   using Rust::Resolver::TypeCheckBase::visit;\n@@ -185,16 +152,8 @@ class OverlappingImplItemPass : public TypeCheckBase\n   void collision_detected (HIR::ImplItem *query, HIR::ImplItem *dup,\n \t\t\t   const std::string &name)\n   {\n-    Location qlocus; // query\n-    bool ok = GetLocusFromImplItem::Resolve (query, qlocus);\n-    rust_assert (ok);\n-\n-    Location dlocus; // dup\n-    ok = GetLocusFromImplItem::Resolve (dup, dlocus);\n-    rust_assert (ok);\n-\n-    RichLocation r (qlocus);\n-    r.add_range (dlocus);\n+    RichLocation r (query->get_locus ());\n+    r.add_range (dup->get_locus ());\n     rust_error_at (r, \"duplicate definitions with name %s\", name.c_str ());\n   }\n "}]}