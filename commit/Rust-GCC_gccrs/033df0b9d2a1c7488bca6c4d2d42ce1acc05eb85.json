{"sha": "033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMzZGYwYjlkMmExYzc0ODhiY2E2YzRkMmQ0MmNlMWFjYzA1ZWI4NQ==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2008-05-08T11:32:55Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2008-05-08T11:32:55Z"}, "message": "calls.c (compute_argument_block_size ): Add ATTRIBUTE_UNUSED to fndecl argument.\n\n2008-05-08  Kai Tietz  <kai.tietz@onevision.com>\n\n\tPR/36180\n\t* calls.c (compute_argument_block_size ): Add ATTRIBUTE_UNUSED to\n\tfndecl argument.\n\t(emit_library_call_value_1): Add ATTRIBUTE_UNUSED to variable\n\tfndecl.\n\t* target-def.h: Check that TARGET_RETURN_IN_MEMORY isn't declared in front.\n\nFrom-SVN: r135079", "tree": {"sha": "1961e8e0bc587bdc6794357138121267ec4c8320", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1961e8e0bc587bdc6794357138121267ec4c8320"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85/comments", "author": null, "committer": null, "parents": [{"sha": "a1b6607115feb11d2d36f7e62ed0dae17f7fe88c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1b6607115feb11d2d36f7e62ed0dae17f7fe88c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1b6607115feb11d2d36f7e62ed0dae17f7fe88c"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "9c0cdb8fc0509deb2d2997b8e793a4fd604801f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85", "patch": "@@ -1,3 +1,12 @@\n+2008-05-08  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\tPR/36180\n+\t* calls.c (compute_argument_block_size ): Add ATTRIBUTE_UNUSED to\n+\tfndecl argument.\n+\t(emit_library_call_value_1): Add ATTRIBUTE_UNUSED to variable\n+\tfndecl.\n+\t* target-def.h: Check that TARGET_RETURN_IN_MEMORY isn't declared in front.\n+\n 2008-05-08  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-data-ref.c (dr_analyze_alias): Do not set DR_SUBVARS."}, {"sha": "bbb9b769c490765fcedc1f0f2c018232ad76c8cd", "filename": "gcc/calls.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85", "patch": "@@ -1189,7 +1189,7 @@ initialize_argument_information (int num_actuals ATTRIBUTE_UNUSED,\n static int\n compute_argument_block_size (int reg_parm_stack_space,\n \t\t\t     struct args_size *args_size,\n-\t\t\t     tree fndecl,\n+\t\t\t     tree fndecl ATTRIBUTE_UNUSED,\n \t\t\t     int preferred_stack_boundary ATTRIBUTE_UNUSED)\n {\n   int unadjusted_args_size = args_size->constant;\n@@ -3281,7 +3281,7 @@ emit_library_call_value_1 (int retval, rtx orgfun, rtx value,\n   rtx fun;\n   /* Todo, choose the correct decl type of orgfun. Sadly this information\n      isn't present here, so we default to native calling abi here.  */\n-  tree fndecl = NULL_TREE; /* library calls default to host calling abi ? */\n+  tree fndecl ATTRIBUTE_UNUSED = NULL_TREE; /* library calls default to host calling abi ? */\n   int inc;\n   int count;\n   rtx argblock = 0;"}, {"sha": "c4bc6962a61897882499494de2dc728ef177eb6d", "filename": "gcc/target-def.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=033df0b9d2a1c7488bca6c4d2d42ce1acc05eb85", "patch": "@@ -545,7 +545,9 @@\n #define TARGET_PROMOTE_PROTOTYPES hook_bool_const_tree_false\n \n #define TARGET_STRUCT_VALUE_RTX hook_rtx_tree_int_null\n+#ifndef TARGET_RETURN_IN_MEMORY\n #define TARGET_RETURN_IN_MEMORY default_return_in_memory\n+#endif\n #define TARGET_RETURN_IN_MSB hook_bool_const_tree_false\n \n #define TARGET_EXPAND_BUILTIN_SAVEREGS default_expand_builtin_saveregs"}]}