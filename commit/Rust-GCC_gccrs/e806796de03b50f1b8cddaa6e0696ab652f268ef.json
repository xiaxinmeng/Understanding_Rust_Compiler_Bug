{"sha": "e806796de03b50f1b8cddaa6e0696ab652f268ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgwNjc5NmRlMDNiNTBmMWI4Y2RkYWE2ZTA2OTZhYjY1MmYyNjhlZg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-02-03T08:20:02Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-02-03T08:20:02Z"}, "message": "Fix memory leaks in IPA CP (PR ipa/79337).\n\n2017-02-03  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/79337\n\t* ipa-prop.c (ipa_node_params_t::insert): Remove current\n\timplementation.\n\t(ipa_node_params_t::remove): Likewise.\n\t* ipa-prop.h (ipa_node_params::ipa_node_params): Make default\n\tinitialization from removed ipa_node_params_t::insert.\n\t(ipa_node_params::~ipa_node_params): Move from removed\n\tipa_node_params_t::release.\n\t* symbol-summary.h (symbol_summary::m_released): New member.\n\tDo not release a summary twice.  Do not allow to call finalizer\n\tfor types of a summary that live in GGC memory.\n\nFrom-SVN: r245145", "tree": {"sha": "fdc17253740fdcce9e854af3c077c20bd504fc47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdc17253740fdcce9e854af3c077c20bd504fc47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e806796de03b50f1b8cddaa6e0696ab652f268ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e806796de03b50f1b8cddaa6e0696ab652f268ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e806796de03b50f1b8cddaa6e0696ab652f268ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e806796de03b50f1b8cddaa6e0696ab652f268ef/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d5b4f9e713a7e6804d589dfef76ce8cad3d0f02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d5b4f9e713a7e6804d589dfef76ce8cad3d0f02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d5b4f9e713a7e6804d589dfef76ce8cad3d0f02"}], "stats": {"total": 101, "additions": 52, "deletions": 49}, "files": [{"sha": "1d8bf2b4339bb912ed9ae77ed13e1754baf9cb74", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e806796de03b50f1b8cddaa6e0696ab652f268ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e806796de03b50f1b8cddaa6e0696ab652f268ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e806796de03b50f1b8cddaa6e0696ab652f268ef", "patch": "@@ -1,3 +1,17 @@\n+2017-02-03  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/79337\n+\t* ipa-prop.c (ipa_node_params_t::insert): Remove current\n+\timplementation.\n+\t(ipa_node_params_t::remove): Likewise.\n+\t* ipa-prop.h (ipa_node_params::ipa_node_params): Make default\n+\tinitialization from removed ipa_node_params_t::insert.\n+\t(ipa_node_params::~ipa_node_params): Move from removed\n+\tipa_node_params_t::release.\n+\t* symbol-summary.h (symbol_summary::m_released): New member.\n+\tDo not release a summary twice.  Do not allow to call finalizer\n+\tfor types of a summary that live in GGC memory.\n+\n 2017-02-02  Naveen H.S  <Naveen.Hurugalawadi@cavium.com>\n \n \t* config/aarch64/aarch64.c (thunderx2t99_tunings): Enable AES and"}, {"sha": "d031a70caa4667fc79fb49638ba3c1eeb7b1520f", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e806796de03b50f1b8cddaa6e0696ab652f268ef/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e806796de03b50f1b8cddaa6e0696ab652f268ef/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=e806796de03b50f1b8cddaa6e0696ab652f268ef", "patch": "@@ -3736,38 +3736,6 @@ ipa_add_new_function (cgraph_node *node, void *data ATTRIBUTE_UNUSED)\n     ipa_analyze_node (node);\n }\n \n-/* Initialize a newly created param info.  */\n-\n-void\n-ipa_node_params_t::insert (cgraph_node *, ipa_node_params *info)\n-{\n-  info->lattices = NULL;\n-  info->ipcp_orig_node = NULL;\n-  info->known_csts = vNULL;\n-  info->known_contexts = vNULL;\n-  info->analysis_done = 0;\n-  info->node_enqueued = 0;\n-  info->do_clone_for_all_contexts = 0;\n-  info->is_all_contexts_clone = 0;\n-  info->node_dead = 0;\n-  info->node_within_scc = 0;\n-  info->node_calling_single_call = 0;\n-  info->versionable = 0;\n-}\n-\n-/* Frees all dynamically allocated structures that the param info points\n-   to.  */\n-\n-void\n-ipa_node_params_t::remove (cgraph_node *, ipa_node_params *info)\n-{\n-  free (info->lattices);\n-  /* Lattice values and their sources are deallocated with their alocation\n-     pool.  */\n-  info->known_csts.release ();\n-  info->known_contexts.release ();\n-}\n-\n /* Hook that is called by summary when a node is duplicated.  */\n \n void"}, {"sha": "8f7eb088813dfb0c78cf26d12c10df7117938d39", "filename": "gcc/ipa-prop.h", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e806796de03b50f1b8cddaa6e0696ab652f268ef/gcc%2Fipa-prop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e806796de03b50f1b8cddaa6e0696ab652f268ef/gcc%2Fipa-prop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.h?ref=e806796de03b50f1b8cddaa6e0696ab652f268ef", "patch": "@@ -320,6 +320,12 @@ struct GTY(()) ipa_param_descriptor\n \n struct GTY((for_user)) ipa_node_params\n {\n+  /* Default constructor.  */\n+  ipa_node_params ();\n+\n+  /* Default destructor.  */\n+  ~ipa_node_params ();\n+\n   /* Information about individual formal parameters that are gathered when\n      summaries are generated. */\n   vec<ipa_param_descriptor, va_gc> *descriptors;\n@@ -356,6 +362,24 @@ struct GTY((for_user)) ipa_node_params\n   unsigned versionable : 1;\n };\n \n+inline\n+ipa_node_params::ipa_node_params ()\n+: descriptors (NULL), lattices (NULL), ipcp_orig_node (NULL),\n+  known_csts (vNULL), known_contexts (vNULL), analysis_done (0),\n+  node_enqueued (0), do_clone_for_all_contexts (0), is_all_contexts_clone (0),\n+  node_dead (0), node_within_scc (0), node_calling_single_call (0),\n+  versionable (0)\n+{\n+}\n+\n+inline\n+ipa_node_params::~ipa_node_params ()\n+{\n+  free (lattices);\n+  known_csts.release ();\n+  known_contexts.release ();\n+}\n+\n /* Intermediate information that we get from alias analysis about a particular\n    parameter in a particular basic_block.  When a parameter or the memory it\n    references is marked modified, we use that information in all dominated\n@@ -579,10 +603,6 @@ class GTY((user)) ipa_node_params_t: public function_summary <ipa_node_params *>\n   ipa_node_params_t (symbol_table *table, bool ggc):\n     function_summary<ipa_node_params *> (table, ggc) { }\n \n-  /* Hook that is called by summary when a node is deleted.  */\n-  virtual void insert (cgraph_node *, ipa_node_params *info);\n-  /* Hook that is called by summary when a node is deleted.  */\n-  virtual void remove (cgraph_node *, ipa_node_params *info);\n   /* Hook that is called by summary when a node is duplicated.  */\n   virtual void duplicate (cgraph_node *node,\n \t\t\t  cgraph_node *node2,"}, {"sha": "3bcd14522c8e59a25fe9b7ac40c128ac5021fc93", "filename": "gcc/symbol-summary.h", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e806796de03b50f1b8cddaa6e0696ab652f268ef/gcc%2Fsymbol-summary.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e806796de03b50f1b8cddaa6e0696ab652f268ef/gcc%2Fsymbol-summary.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymbol-summary.h?ref=e806796de03b50f1b8cddaa6e0696ab652f268ef", "patch": "@@ -37,7 +37,8 @@ class GTY((user)) function_summary <T *>\n public:\n   /* Default construction takes SYMTAB as an argument.  */\n   function_summary (symbol_table *symtab, bool ggc = false): m_ggc (ggc),\n-    m_map (13, ggc), m_insertion_enabled (true), m_symtab (symtab)\n+    m_map (13, ggc), m_insertion_enabled (true), m_released (false),\n+    m_symtab (symtab)\n   {\n     m_symtab_insertion_hook =\n       symtab->add_cgraph_insertion_hook\n@@ -60,23 +61,19 @@ class GTY((user)) function_summary <T *>\n   /* Destruction method that can be called for GGT purpose.  */\n   void release ()\n   {\n-    if (m_symtab_insertion_hook)\n-      m_symtab->remove_cgraph_insertion_hook (m_symtab_insertion_hook);\n+    if (m_released)\n+      return;\n \n-    if (m_symtab_removal_hook)\n-      m_symtab->remove_cgraph_removal_hook (m_symtab_removal_hook);\n-\n-    if (m_symtab_duplication_hook)\n-      m_symtab->remove_cgraph_duplication_hook (m_symtab_duplication_hook);\n-\n-    m_symtab_insertion_hook = NULL;\n-    m_symtab_removal_hook = NULL;\n-    m_symtab_duplication_hook = NULL;\n+    m_symtab->remove_cgraph_insertion_hook (m_symtab_insertion_hook);\n+    m_symtab->remove_cgraph_removal_hook (m_symtab_removal_hook);\n+    m_symtab->remove_cgraph_duplication_hook (m_symtab_duplication_hook);\n \n     /* Release all summaries.  */\n     typedef typename hash_map <map_hash, T *>::iterator map_iterator;\n     for (map_iterator it = m_map.begin (); it != m_map.end (); ++it)\n       release ((*it).second);\n+\n+    m_released = true;\n   }\n \n   /* Traverses all summarys with a function F called with\n@@ -99,7 +96,9 @@ class GTY((user)) function_summary <T *>\n   /* Allocates new data that are stored within map.  */\n   T* allocate_new ()\n   {\n-    return m_ggc ? new (ggc_alloc <T> ()) T() : new T () ;\n+    /* Call gcc_internal_because we do not want to call finalizer for\n+       a type T.  We call dtor explicitly.  */\n+    return m_ggc ? new (ggc_internal_alloc (sizeof (T))) T () : new T () ;\n   }\n \n   /* Release an item that is stored within map.  */\n@@ -216,6 +215,8 @@ class GTY((user)) function_summary <T *>\n   cgraph_2node_hook_list *m_symtab_duplication_hook;\n   /* Indicates if insertion hook is enabled.  */\n   bool m_insertion_enabled;\n+  /* Indicates if the summary is released.  */\n+  bool m_released;\n   /* Symbol table the summary is registered to.  */\n   symbol_table *m_symtab;\n "}]}