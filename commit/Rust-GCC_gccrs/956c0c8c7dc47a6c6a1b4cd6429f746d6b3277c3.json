{"sha": "956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "node_id": "C_kwDOANBUbNoAKDk1NmMwYzhjN2RjNDdhNmM2YTFiNGNkNjQyOWY3NDZkNmIzMjc3YzM", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-06T12:09:45Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T05:58:04Z"}, "message": "RISC-V: Add vmulhsu.vv C API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv_m-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv_m-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv_m-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv_mu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv_mu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv_mu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv_tu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv_tu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv_tu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv_tum-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv_tum-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv_tum-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv_tumu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv_tumu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmulhsu_vv_tumu-3.c: New test.", "tree": {"sha": "e778c01e38a04828f1cee8cf806dd7250c8e6d35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e778c01e38a04828f1cee8cf806dd7250c8e6d35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f95ada62f3f0935de3b9b258c3ba36c1b0e85dd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f95ada62f3f0935de3b9b258c3ba36c1b0e85dd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f95ada62f3f0935de3b9b258c3ba36c1b0e85dd8"}], "stats": {"total": 2880, "additions": 2880, "deletions": 0}, "files": [{"sha": "7a92b84434922ae69b305e59ea5caf9b68308059", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv-1.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv-1.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8(vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8(op1,op2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4(vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4(op1,op2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2(vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2(op1,op2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1(vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1(op1,op2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2(vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2(op1,op2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4(vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4(op1,op2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8(vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8(op1,op2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4(vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4(op1,op2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2(vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2(op1,op2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1(vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1(op1,op2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2(vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2(op1,op2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4(vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4(op1,op2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8(vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8(op1,op2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2(vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2(op1,op2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1(vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1(op1,op2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2(vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2(op1,op2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4(vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4(op1,op2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8(vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8(op1,op2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1(vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1(op1,op2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2(vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2(op1,op2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4(vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4(op1,op2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8(vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8(op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "e605c7341dc092045f87f4643d69f70f080c72fb", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv-2.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv-2.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8(vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8(op1,op2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4(vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4(op1,op2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2(vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2(op1,op2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1(vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1(op1,op2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2(vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2(op1,op2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4(vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4(op1,op2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8(vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8(op1,op2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4(vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4(op1,op2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2(vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2(op1,op2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1(vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1(op1,op2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2(vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2(op1,op2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4(vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4(op1,op2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8(vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8(op1,op2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2(vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2(op1,op2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1(vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1(op1,op2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2(vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2(op1,op2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4(vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4(op1,op2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8(vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8(op1,op2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1(vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1(op1,op2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2(vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2(op1,op2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4(vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4(op1,op2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8(vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8(op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "d4f666113ebc2555a933a7920ee437aa5e8e2f36", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv-3.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv-3.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8(vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8(op1,op2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4(vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4(op1,op2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2(vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2(op1,op2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1(vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1(op1,op2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2(vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2(op1,op2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4(vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4(op1,op2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8(vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8(op1,op2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4(vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4(op1,op2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2(vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2(op1,op2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1(vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1(op1,op2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2(vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2(op1,op2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4(vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4(op1,op2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8(vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8(op1,op2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2(vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2(op1,op2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1(vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1(op1,op2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2(vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2(op1,op2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4(vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4(op1,op2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8(vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8(op1,op2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1(vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1(op1,op2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2(vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2(op1,op2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4(vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4(op1,op2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8(vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8(op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "ed6bc750e54b00d59edcd565af34046ad47aa225", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv_m-1.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_m-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_m-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_m-1.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8_m(vbool64_t mask,vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4_m(vbool32_t mask,vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2_m(vbool16_t mask,vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1_m(vbool8_t mask,vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2_m(vbool4_t mask,vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4_m(vbool2_t mask,vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8_m(vbool1_t mask,vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4_m(vbool64_t mask,vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2_m(vbool32_t mask,vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1_m(vbool16_t mask,vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2_m(vbool8_t mask,vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4_m(vbool4_t mask,vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8_m(vbool2_t mask,vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2_m(vbool64_t mask,vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1_m(vbool32_t mask,vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2_m(vbool16_t mask,vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4_m(vbool8_t mask,vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8_m(vbool4_t mask,vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1_m(vbool64_t mask,vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2_m(vbool32_t mask,vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4_m(vbool16_t mask,vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8_m(vbool8_t mask,vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8_m(mask,op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "a82cabc895fa32fcf14f31435007e0d7d6990695", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv_m-2.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_m-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_m-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_m-2.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8_m(vbool64_t mask,vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8_m(mask,op1,op2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4_m(vbool32_t mask,vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4_m(mask,op1,op2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2_m(vbool16_t mask,vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2_m(mask,op1,op2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1_m(vbool8_t mask,vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1_m(mask,op1,op2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2_m(vbool4_t mask,vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2_m(mask,op1,op2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4_m(vbool2_t mask,vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4_m(mask,op1,op2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8_m(vbool1_t mask,vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8_m(mask,op1,op2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4_m(vbool64_t mask,vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4_m(mask,op1,op2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2_m(vbool32_t mask,vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2_m(mask,op1,op2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1_m(vbool16_t mask,vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1_m(mask,op1,op2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2_m(vbool8_t mask,vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2_m(mask,op1,op2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4_m(vbool4_t mask,vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4_m(mask,op1,op2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8_m(vbool2_t mask,vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8_m(mask,op1,op2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2_m(vbool64_t mask,vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2_m(mask,op1,op2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1_m(vbool32_t mask,vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1_m(mask,op1,op2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2_m(vbool16_t mask,vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2_m(mask,op1,op2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4_m(vbool8_t mask,vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4_m(mask,op1,op2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8_m(vbool4_t mask,vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8_m(mask,op1,op2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1_m(vbool64_t mask,vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1_m(mask,op1,op2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2_m(vbool32_t mask,vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2_m(mask,op1,op2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4_m(vbool16_t mask,vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4_m(mask,op1,op2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8_m(vbool8_t mask,vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8_m(mask,op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "1e659d5baf1882819bb60a773fac7550e6a6ac3c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv_m-3.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_m-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_m-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_m-3.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8_m(vbool64_t mask,vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8_m(mask,op1,op2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4_m(vbool32_t mask,vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4_m(mask,op1,op2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2_m(vbool16_t mask,vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2_m(mask,op1,op2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1_m(vbool8_t mask,vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1_m(mask,op1,op2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2_m(vbool4_t mask,vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2_m(mask,op1,op2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4_m(vbool2_t mask,vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4_m(mask,op1,op2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8_m(vbool1_t mask,vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8_m(mask,op1,op2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4_m(vbool64_t mask,vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4_m(mask,op1,op2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2_m(vbool32_t mask,vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2_m(mask,op1,op2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1_m(vbool16_t mask,vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1_m(mask,op1,op2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2_m(vbool8_t mask,vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2_m(mask,op1,op2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4_m(vbool4_t mask,vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4_m(mask,op1,op2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8_m(vbool2_t mask,vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8_m(mask,op1,op2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2_m(vbool64_t mask,vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2_m(mask,op1,op2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1_m(vbool32_t mask,vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1_m(mask,op1,op2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2_m(vbool16_t mask,vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2_m(mask,op1,op2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4_m(vbool8_t mask,vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4_m(mask,op1,op2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8_m(vbool4_t mask,vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8_m(mask,op1,op2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1_m(vbool64_t mask,vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1_m(mask,op1,op2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2_m(vbool32_t mask,vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2_m(mask,op1,op2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4_m(vbool16_t mask,vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4_m(mask,op1,op2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8_m(vbool8_t mask,vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8_m(mask,op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "0e92fc7c4ae6cc89d15d77a3ce830c2b8c07c5e1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv_mu-1.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_mu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_mu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_mu-1.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8_mu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4_mu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2_mu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1_mu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2_mu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4_mu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8_mu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1_mu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2_mu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4_mu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8_mu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "34df04da3ce952340174afd8a293b061ffa4f3c2", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv_mu-2.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_mu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_mu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_mu-2.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8_mu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4_mu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2_mu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1_mu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2_mu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4_mu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8_mu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1_mu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2_mu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4_mu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8_mu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "fed27121722ee458ec2c23ec4fee9bacd7b9058a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv_mu-3.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_mu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_mu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_mu-3.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8_mu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4_mu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2_mu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1_mu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2_mu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4_mu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8_mu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1_mu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2_mu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4_mu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8_mu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "f2640bce8dd8ce490412a45d3ac8d7555d2c6427", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv_tu-1.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tu-1.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8_tu(vint8mf8_t merge,vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4_tu(vint8mf4_t merge,vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2_tu(vint8mf2_t merge,vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1_tu(vint8m1_t merge,vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2_tu(vint8m2_t merge,vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4_tu(vint8m4_t merge,vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8_tu(vint8m8_t merge,vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4_tu(vint16mf4_t merge,vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2_tu(vint16mf2_t merge,vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1_tu(vint16m1_t merge,vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2_tu(vint16m2_t merge,vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4_tu(vint16m4_t merge,vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8_tu(vint16m8_t merge,vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2_tu(vint32mf2_t merge,vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1_tu(vint32m1_t merge,vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2_tu(vint32m2_t merge,vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4_tu(vint32m4_t merge,vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8_tu(vint32m8_t merge,vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1_tu(vint64m1_t merge,vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2_tu(vint64m2_t merge,vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4_tu(vint64m4_t merge,vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8_tu(vint64m8_t merge,vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8_tu(merge,op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "347851aa44bc47a9ba26ab27ea1217ae5f6ecb02", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv_tu-2.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tu-2.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8_tu(vint8mf8_t merge,vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4_tu(vint8mf4_t merge,vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2_tu(vint8mf2_t merge,vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1_tu(vint8m1_t merge,vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2_tu(vint8m2_t merge,vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4_tu(vint8m4_t merge,vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8_tu(vint8m8_t merge,vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4_tu(vint16mf4_t merge,vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2_tu(vint16mf2_t merge,vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1_tu(vint16m1_t merge,vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2_tu(vint16m2_t merge,vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4_tu(vint16m4_t merge,vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8_tu(vint16m8_t merge,vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2_tu(vint32mf2_t merge,vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1_tu(vint32m1_t merge,vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2_tu(vint32m2_t merge,vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4_tu(vint32m4_t merge,vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8_tu(vint32m8_t merge,vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1_tu(vint64m1_t merge,vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2_tu(vint64m2_t merge,vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4_tu(vint64m4_t merge,vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8_tu(vint64m8_t merge,vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8_tu(merge,op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "a3ecf4a4796a21a44f2bf4d8ac92e4d75e189f7f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv_tu-3.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tu-3.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8_tu(vint8mf8_t merge,vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4_tu(vint8mf4_t merge,vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2_tu(vint8mf2_t merge,vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1_tu(vint8m1_t merge,vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2_tu(vint8m2_t merge,vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4_tu(vint8m4_t merge,vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8_tu(vint8m8_t merge,vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4_tu(vint16mf4_t merge,vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2_tu(vint16mf2_t merge,vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1_tu(vint16m1_t merge,vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2_tu(vint16m2_t merge,vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4_tu(vint16m4_t merge,vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8_tu(vint16m8_t merge,vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2_tu(vint32mf2_t merge,vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1_tu(vint32m1_t merge,vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2_tu(vint32m2_t merge,vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4_tu(vint32m4_t merge,vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8_tu(vint32m8_t merge,vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1_tu(vint64m1_t merge,vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2_tu(vint64m2_t merge,vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4_tu(vint64m4_t merge,vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8_tu(vint64m8_t merge,vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8_tu(merge,op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "deaede5607f5c57ca6c79d28e4009b178c0949bc", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv_tum-1.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tum-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tum-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tum-1.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8_tum(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4_tum(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2_tum(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1_tum(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2_tum(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4_tum(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8_tum(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1_tum(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2_tum(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4_tum(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8_tum(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "637265840f10ad21abf1c09ceef122d341e9dfbd", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv_tum-2.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tum-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tum-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tum-2.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8_tum(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4_tum(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2_tum(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1_tum(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2_tum(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4_tum(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8_tum(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1_tum(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2_tum(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4_tum(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8_tum(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "aa530a5e72a3c325ce87ebee81fbb96b44da1b0e", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv_tum-3.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tum-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tum-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tum-3.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8_tum(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4_tum(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2_tum(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1_tum(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2_tum(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4_tum(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8_tum(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1_tum(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2_tum(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4_tum(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8_tum(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "4dd6a0b524bc68d3d76309258039208b973b7c68", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv_tumu-1.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tumu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tumu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tumu-1.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8_tumu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4_tumu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2_tumu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1_tumu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2_tumu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4_tumu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8_tumu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1_tumu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2_tumu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4_tumu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8_tumu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "5a8466ed6d540e3bcadfb2e235041477fb55028e", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv_tumu-2.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tumu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tumu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tumu-2.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8_tumu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4_tumu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2_tumu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1_tumu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2_tumu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4_tumu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8_tumu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1_tumu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2_tumu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4_tumu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8_tumu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "712edb734bda9c21b6b66b219987fd2d667b9c11", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmulhsu_vv_tumu-3.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tumu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tumu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmulhsu_vv_tumu-3.c?ref=956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmulhsu_vv_i8mf8_tumu(vbool64_t mask,vint8mf8_t merge,vint8mf8_t op1,vuint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf8_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmulhsu_vv_i8mf4_tumu(vbool32_t mask,vint8mf4_t merge,vint8mf4_t op1,vuint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf4_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmulhsu_vv_i8mf2_tumu(vbool16_t mask,vint8mf2_t merge,vint8mf2_t op1,vuint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8mf2_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vmulhsu_vv_i8m1_tumu(vbool8_t mask,vint8m1_t merge,vint8m1_t op1,vuint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m1_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vmulhsu_vv_i8m2_tumu(vbool4_t mask,vint8m2_t merge,vint8m2_t op1,vuint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m2_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vmulhsu_vv_i8m4_tumu(vbool2_t mask,vint8m4_t merge,vint8m4_t op1,vuint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m4_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vmulhsu_vv_i8m8_tumu(vbool1_t mask,vint8m8_t merge,vint8m8_t op1,vuint8m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i8m8_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmulhsu_vv_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,vint16mf4_t op1,vuint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf4_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmulhsu_vv_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,vint16mf2_t op1,vuint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16mf2_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vmulhsu_vv_i16m1_tumu(vbool16_t mask,vint16m1_t merge,vint16m1_t op1,vuint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m1_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vmulhsu_vv_i16m2_tumu(vbool8_t mask,vint16m2_t merge,vint16m2_t op1,vuint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m2_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vmulhsu_vv_i16m4_tumu(vbool4_t mask,vint16m4_t merge,vint16m4_t op1,vuint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m4_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vmulhsu_vv_i16m8_tumu(vbool2_t mask,vint16m8_t merge,vint16m8_t op1,vuint16m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i16m8_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmulhsu_vv_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint32mf2_t op1,vuint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32mf2_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vmulhsu_vv_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint32m1_t op1,vuint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m1_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vmulhsu_vv_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint32m2_t op1,vuint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m2_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vmulhsu_vv_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint32m4_t op1,vuint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m4_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vmulhsu_vv_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint32m8_t op1,vuint32m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i32m8_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vmulhsu_vv_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint64m1_t op1,vuint64m1_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m1_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vmulhsu_vv_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint64m2_t op1,vuint64m2_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m2_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vmulhsu_vv_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint64m4_t op1,vuint64m4_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m4_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vmulhsu_vv_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint64m8_t op1,vuint64m8_t op2,size_t vl)\n+{\n+    return __riscv_vmulhsu_vv_i64m8_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vmulhsu\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}]}