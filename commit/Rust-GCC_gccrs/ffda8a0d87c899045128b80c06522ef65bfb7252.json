{"sha": "ffda8a0d87c899045128b80c06522ef65bfb7252", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZkYThhMGQ4N2M4OTkwNDUxMjhiODBjMDY1MjJlZjY1YmZiNzI1Mg==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2010-09-23T16:15:44Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2010-09-23T16:15:44Z"}, "message": "arm.h (OUTPUT_ADDR_CONST_EXTRA): Remove.\n\n\t* config/arm/arm.h (OUTPUT_ADDR_CONST_EXTRA): Remove.\n\t* config/arm/arm-protos.h (arm_output_addr_const_extra): Remove.\n\t* config/arm/arm.c (TARGET_ASM_OUTPUT_ADDR_CONST_EXTRA): Define.\n\t(arm_output_addr_const_extra): Make static.\n\nFrom-SVN: r164568", "tree": {"sha": "3bc9129a0b31d16c4943087863e08115b077a28e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bc9129a0b31d16c4943087863e08115b077a28e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffda8a0d87c899045128b80c06522ef65bfb7252", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffda8a0d87c899045128b80c06522ef65bfb7252", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffda8a0d87c899045128b80c06522ef65bfb7252", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffda8a0d87c899045128b80c06522ef65bfb7252/comments", "author": null, "committer": null, "parents": [{"sha": "17eba94716651dad5794c22ef649c65776c74cb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17eba94716651dad5794c22ef649c65776c74cb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17eba94716651dad5794c22ef649c65776c74cb8"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "66552a64927de76e3e4b927a41e5657c6e528f08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffda8a0d87c899045128b80c06522ef65bfb7252/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffda8a0d87c899045128b80c06522ef65bfb7252/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ffda8a0d87c899045128b80c06522ef65bfb7252", "patch": "@@ -1,3 +1,10 @@\n+2010-09-23  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/arm/arm.h (OUTPUT_ADDR_CONST_EXTRA): Remove.\n+\t* config/arm/arm-protos.h (arm_output_addr_const_extra): Remove.\n+\t* config/arm/arm.c (TARGET_ASM_OUTPUT_ADDR_CONST_EXTRA): Define.\n+\t(arm_output_addr_const_extra): Make static.\n+\n 2010-09-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (UNSPECV_NOPS): Rename from UNSPEC_NOPS and"}, {"sha": "c861bb6a361e335966e0025fbb76954c624ac909", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffda8a0d87c899045128b80c06522ef65bfb7252/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffda8a0d87c899045128b80c06522ef65bfb7252/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=ffda8a0d87c899045128b80c06522ef65bfb7252", "patch": "@@ -151,8 +151,6 @@ extern const char *arm_output_memory_barrier (rtx *);\n extern const char *arm_output_sync_insn (rtx, rtx *);\n extern unsigned int arm_sync_loop_insns (rtx , rtx *);\n \n-extern bool arm_output_addr_const_extra (FILE *, rtx);\n-\n #if defined TREE_CODE\n extern void arm_init_cumulative_args (CUMULATIVE_ARGS *, tree, rtx, tree);\n extern bool arm_pad_arg_upward (enum machine_mode, const_tree);"}, {"sha": "782bc985a1e34fddb2b0e11832bc112ecb968c8f", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffda8a0d87c899045128b80c06522ef65bfb7252/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffda8a0d87c899045128b80c06522ef65bfb7252/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=ffda8a0d87c899045128b80c06522ef65bfb7252", "patch": "@@ -224,6 +224,7 @@ static bool arm_cannot_copy_insn_p (rtx);\n static bool arm_tls_symbol_p (rtx x);\n static int arm_issue_rate (void);\n static void arm_output_dwarf_dtprel (FILE *, int, rtx) ATTRIBUTE_UNUSED;\n+static bool arm_output_addr_const_extra (FILE *, rtx);\n static bool arm_allocate_stack_slots_for_args (void);\n static const char *arm_invalid_parameter_type (const_tree t);\n static const char *arm_invalid_return_type (const_tree t);\n@@ -309,6 +310,9 @@ static const struct attribute_spec arm_attribute_table[] =\n #undef TARGET_PRINT_OPERAND_PUNCT_VALID_P\n #define TARGET_PRINT_OPERAND_PUNCT_VALID_P arm_print_operand_punct_valid_p\n \n+#undef TARGET_ASM_OUTPUT_ADDR_CONST_EXTRA\n+#define TARGET_ASM_OUTPUT_ADDR_CONST_EXTRA arm_output_addr_const_extra\n+\n #undef  TARGET_ASM_FUNCTION_PROLOGUE\n #define TARGET_ASM_FUNCTION_PROLOGUE arm_output_function_prologue\n \n@@ -22451,7 +22455,9 @@ arm_output_dwarf_dtprel (FILE *file, int size, rtx x)\n   fputs (\"(tlsldo)\", file);\n }\n \n-bool\n+/* Implement TARGET_ASM_OUTPUT_ADDR_CONST_EXTRA.  */\n+\n+static bool\n arm_output_addr_const_extra (FILE *fp, rtx x)\n {\n   if (GET_CODE (x) == UNSPEC && XINT (x, 1) == UNSPEC_TLS)"}, {"sha": "9bd1c69e849b21a8506c612d8bd98809d2cc3c7a", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffda8a0d87c899045128b80c06522ef65bfb7252/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffda8a0d87c899045128b80c06522ef65bfb7252/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=ffda8a0d87c899045128b80c06522ef65bfb7252", "patch": "@@ -2419,10 +2419,6 @@ extern int making_const_table;\n \t  & ~ (unsigned HOST_WIDE_INT) 0xffffffff)\t\t\\\n        : 0))))\n \n-#define OUTPUT_ADDR_CONST_EXTRA(file, x, fail)\t\t\\\n-  if (arm_output_addr_const_extra (file, x) == FALSE)\t\\\n-    goto fail\n-\n /* A C expression whose value is RTL representing the value of the return\n    address for the frame COUNT steps up from the current frame.  */\n "}]}