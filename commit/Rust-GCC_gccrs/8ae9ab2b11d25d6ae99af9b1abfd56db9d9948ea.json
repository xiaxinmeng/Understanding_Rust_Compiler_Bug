{"sha": "8ae9ab2b11d25d6ae99af9b1abfd56db9d9948ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFlOWFiMmIxMWQyNWQ2YWU5OWFmOWIxYWJmZDU2ZGI5ZDk5NDhlYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-10-28T13:51:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-10-28T13:51:28Z"}, "message": "tree-ssa-math-opts.c (find_bswap_or_nop_1): Use uint64_t type for the left shift in CASE_CONVERT case.\n\n\t* tree-ssa-math-opts.c (find_bswap_or_nop_1): Use uint64_t\n\ttype for the left shift in CASE_CONVERT case.\n\nFrom-SVN: r216793", "tree": {"sha": "e660de05b85d32d6e26e89fd9e21b832f8040d88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e660de05b85d32d6e26e89fd9e21b832f8040d88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ae9ab2b11d25d6ae99af9b1abfd56db9d9948ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ae9ab2b11d25d6ae99af9b1abfd56db9d9948ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ae9ab2b11d25d6ae99af9b1abfd56db9d9948ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ae9ab2b11d25d6ae99af9b1abfd56db9d9948ea/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4519ff2ed42b08c79ff4fb84043860828797d23a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4519ff2ed42b08c79ff4fb84043860828797d23a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4519ff2ed42b08c79ff4fb84043860828797d23a"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "f57bfd8a96e25a550ca624dda39bc1473377c23a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae9ab2b11d25d6ae99af9b1abfd56db9d9948ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae9ab2b11d25d6ae99af9b1abfd56db9d9948ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ae9ab2b11d25d6ae99af9b1abfd56db9d9948ea", "patch": "@@ -1,3 +1,8 @@\n+2014-10-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree-ssa-math-opts.c (find_bswap_or_nop_1): Use uint64_t\n+\ttype for the left shift in CASE_CONVERT case.\n+\n 2014-10-28  Max Ostapenko  <m.ostapenko@partner.samsung.com>\n \n \t* asan.h (asan_intercepted_p): New function."}, {"sha": "e0f29247cdd0a04eae945744ec92ebbc3e08b6c1", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae9ab2b11d25d6ae99af9b1abfd56db9d9948ea/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae9ab2b11d25d6ae99af9b1abfd56db9d9948ea/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=8ae9ab2b11d25d6ae99af9b1abfd56db9d9948ea", "patch": "@@ -1926,7 +1926,7 @@ find_bswap_or_nop_1 (gimple stmt, struct symbolic_number *n, int limit)\n \t    if (!TYPE_UNSIGNED (n->type) && type_size > old_type_size\n \t\t&& HEAD_MARKER (n->n, old_type_size))\n \t      for (i = 0; i < type_size - old_type_size; i++)\n-\t\tn->n |= MARKER_BYTE_UNKNOWN\n+\t\tn->n |= (uint64_t) MARKER_BYTE_UNKNOWN\n \t\t\t<< ((type_size - 1 - i) * BITS_PER_MARKER);\n \n \t    if (type_size < 64 / BITS_PER_MARKER)"}]}