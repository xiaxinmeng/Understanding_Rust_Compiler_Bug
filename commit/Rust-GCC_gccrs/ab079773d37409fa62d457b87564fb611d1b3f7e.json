{"sha": "ab079773d37409fa62d457b87564fb611d1b3f7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIwNzk3NzNkMzc0MDlmYTYyZDQ1N2I4NzU2NGZiNjExZDFiM2Y3ZQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2011-07-12T10:29:39Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2011-07-12T10:29:39Z"}, "message": "cgraph.h (cgraph_get_node_or_alias): Removed declaration.\n\n2011-07-12  Martin Jambor  <mjambor@suse.cz>\n\n\t* cgraph.h (cgraph_get_node_or_alias): Removed declaration.\n\t* cgraph.c (cgraph_get_node_or_alias): Removed.\n\t(change_decl_assembler_name): Changed all calls to\n\tcgraph_get_node_or_alias to a call to cgraph_get_node.\n\t(cgraph_make_decl_local): Likewise.\n\t* lto-symtab.c (lto_symtab_resolve_symbols): Likewise.\n\t* varasm.c (default_binds_local_p_1): Likewise.\n\t(decl_binds_to_current_def_p): Likewise.\n\nFrom-SVN: r176196", "tree": {"sha": "a04dc3565788ff2e63b0e35430afcd50fda331d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a04dc3565788ff2e63b0e35430afcd50fda331d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab079773d37409fa62d457b87564fb611d1b3f7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab079773d37409fa62d457b87564fb611d1b3f7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab079773d37409fa62d457b87564fb611d1b3f7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab079773d37409fa62d457b87564fb611d1b3f7e/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d5fed62d7296fd18f8cd55d95cafef1de7f62816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5fed62d7296fd18f8cd55d95cafef1de7f62816", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5fed62d7296fd18f8cd55d95cafef1de7f62816"}], "stats": {"total": 47, "additions": 17, "deletions": 30}, "files": [{"sha": "d121c5c40f1e2a2c555db71975f63d545242ec55", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab079773d37409fa62d457b87564fb611d1b3f7e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab079773d37409fa62d457b87564fb611d1b3f7e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab079773d37409fa62d457b87564fb611d1b3f7e", "patch": "@@ -1,3 +1,14 @@\n+2011-07-12  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* cgraph.h (cgraph_get_node_or_alias): Removed declaration.\n+\t* cgraph.c (cgraph_get_node_or_alias): Removed.\n+\t(change_decl_assembler_name): Changed all calls to\n+\tcgraph_get_node_or_alias to a call to cgraph_get_node.\n+\t(cgraph_make_decl_local): Likewise.\n+\t* lto-symtab.c (lto_symtab_resolve_symbols): Likewise.\n+\t* varasm.c (default_binds_local_p_1): Likewise.\n+\t(decl_binds_to_current_def_p): Likewise.\n+\n 2011-07-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/49712"}, {"sha": "c37158d20c7124f9be661f1bbd6850718e666f46", "filename": "gcc/cgraph.c", "status": "modified", "additions": 3, "deletions": 26, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab079773d37409fa62d457b87564fb611d1b3f7e/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab079773d37409fa62d457b87564fb611d1b3f7e/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=ab079773d37409fa62d457b87564fb611d1b3f7e", "patch": "@@ -638,29 +638,6 @@ cgraph_add_thunk (struct cgraph_node *decl_node ATTRIBUTE_UNUSED,\n   return node;\n }\n \n-/* Returns the cgraph node assigned to DECL or NULL if no cgraph node\n-   is assigned.  */\n-\n-struct cgraph_node *\n-cgraph_get_node_or_alias (const_tree decl)\n-{\n-  struct cgraph_node key, *node = NULL, **slot;\n-\n-  gcc_assert (TREE_CODE (decl) == FUNCTION_DECL);\n-\n-  if (!cgraph_hash)\n-    return NULL;\n-\n-  key.decl = CONST_CAST2 (tree, const_tree, decl);\n-\n-  slot = (struct cgraph_node **) htab_find_slot (cgraph_hash, &key,\n-\t\t\t\t\t\t NO_INSERT);\n-\n-  if (slot && *slot)\n-    node = *slot;\n-  return node;\n-}\n-\n /* Returns the cgraph node assigned to DECL or NULL if no cgraph node\n    is assigned.  */\n \n@@ -1984,7 +1961,7 @@ change_decl_assembler_name (tree decl, tree name)\n \n       if (assembler_name_hash\n \t  && TREE_CODE (decl) == FUNCTION_DECL\n-\t  && (node = cgraph_get_node_or_alias (decl)) != NULL)\n+\t  && (node = cgraph_get_node (decl)) != NULL)\n \t{\n \t  tree old_name = DECL_ASSEMBLER_NAME (decl);\n \t  slot = htab_find_slot_with_hash (assembler_name_hash, old_name,\n@@ -2002,7 +1979,7 @@ change_decl_assembler_name (tree decl, tree name)\n     }\n   if (assembler_name_hash\n       && TREE_CODE (decl) == FUNCTION_DECL\n-      && (node = cgraph_get_node_or_alias (decl)) != NULL)\n+      && (node = cgraph_get_node (decl)) != NULL)\n     {\n       slot = htab_find_slot_with_hash (assembler_name_hash, name,\n \t\t\t\t       decl_assembler_name_hash (name),\n@@ -2525,7 +2502,7 @@ cgraph_make_decl_local (tree decl)\n \t  old_name  = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n \t  if (TREE_CODE (decl) == FUNCTION_DECL)\n \t    {\n-\t      struct cgraph_node *node = cgraph_get_node_or_alias (decl);\n+\t      struct cgraph_node *node = cgraph_get_node (decl);\n \t      change_decl_assembler_name (decl,\n \t\t\t\t\t  clone_function_name (decl, \"local\"));\n \t      if (node->local.lto_file_data)"}, {"sha": "cfc24795917dd997c36062062417edd3224202e6", "filename": "gcc/cgraph.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab079773d37409fa62d457b87564fb611d1b3f7e/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab079773d37409fa62d457b87564fb611d1b3f7e/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=ab079773d37409fa62d457b87564fb611d1b3f7e", "patch": "@@ -480,7 +480,6 @@ struct cgraph_edge *cgraph_create_indirect_edge (struct cgraph_node *, gimple,\n \t\t\t\t\t\t int, gcov_type, int);\n struct cgraph_indirect_call_info *cgraph_allocate_init_indirect_info (void);\n struct cgraph_node * cgraph_get_node (const_tree);\n-struct cgraph_node * cgraph_get_node_or_alias (const_tree);\n struct cgraph_node * cgraph_create_node (tree);\n struct cgraph_node * cgraph_get_create_node (tree);\n struct cgraph_node * cgraph_same_body_alias (struct cgraph_node *, tree, tree);"}, {"sha": "3a7c783f770efb3da8aa9facfd9c4ffe3b70f9fb", "filename": "gcc/lto-symtab.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab079773d37409fa62d457b87564fb611d1b3f7e/gcc%2Flto-symtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab079773d37409fa62d457b87564fb611d1b3f7e/gcc%2Flto-symtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-symtab.c?ref=ab079773d37409fa62d457b87564fb611d1b3f7e", "patch": "@@ -438,7 +438,7 @@ lto_symtab_resolve_symbols (void **slot)\n   for (e = (lto_symtab_entry_t) *slot; e; e = e->next)\n     {\n       if (TREE_CODE (e->decl) == FUNCTION_DECL)\n-\te->node = cgraph_get_node_or_alias (e->decl);\n+\te->node = cgraph_get_node (e->decl);\n       else if (TREE_CODE (e->decl) == VAR_DECL)\n \te->vnode = varpool_get_node (e->decl);\n     }"}, {"sha": "045d6192e2c08dcfb637bea5001a54489ee7bc16", "filename": "gcc/varasm.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab079773d37409fa62d457b87564fb611d1b3f7e/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab079773d37409fa62d457b87564fb611d1b3f7e/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=ab079773d37409fa62d457b87564fb611d1b3f7e", "patch": "@@ -6720,7 +6720,7 @@ default_binds_local_p_1 (const_tree exp, int shlib)\n     }\n   else if (TREE_CODE (exp) == FUNCTION_DECL && TREE_PUBLIC (exp))\n     {\n-      struct cgraph_node *node = cgraph_get_node_or_alias (exp);\n+      struct cgraph_node *node = cgraph_get_node (exp);\n       if (node\n \t  && resolution_local_p (node->resolution))\n \tresolved_locally = true;\n@@ -6808,7 +6808,7 @@ decl_binds_to_current_def_p (tree decl)\n     }\n   else if (TREE_CODE (decl) == FUNCTION_DECL)\n     {\n-      struct cgraph_node *node = cgraph_get_node_or_alias (decl);\n+      struct cgraph_node *node = cgraph_get_node (decl);\n       if (node\n \t  && node->resolution != LDPR_UNKNOWN)\n \treturn resolution_to_local_definition_p (node->resolution);"}]}