{"sha": "f457c50cd95684173f68fe0e7c1b14b2533a62b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ1N2M1MGNkOTU2ODQxNzNmNjhmZTBlN2MxYjE0YjI1MzNhNjJiMg==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@linux-m68k.org", "date": "2012-10-28T09:19:54Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2012-10-28T09:19:54Z"}, "message": "cppopts.texi: Fix use of @item vs.\n\n* doc/cppopts.texi: Fix use of @item vs. @itemx inside @table.\n* doc/extend.texi: Likewise.\n* doc/generic.texi: Likewise.\n* doc/invoke.texi: Likewise.\n* doc/md.texi: Likewise.\n* doc/sourcebuild.texi: Likewise.\n\nFrom-SVN: r192887", "tree": {"sha": "9d508fd5e462fe399339715a0b1bf262b707e852", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d508fd5e462fe399339715a0b1bf262b707e852"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f457c50cd95684173f68fe0e7c1b14b2533a62b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f457c50cd95684173f68fe0e7c1b14b2533a62b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f457c50cd95684173f68fe0e7c1b14b2533a62b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f457c50cd95684173f68fe0e7c1b14b2533a62b2/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d8aa4b1e0369dea3320b59f3e5042eafc7ad0c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d8aa4b1e0369dea3320b59f3e5042eafc7ad0c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d8aa4b1e0369dea3320b59f3e5042eafc7ad0c1"}], "stats": {"total": 69, "additions": 38, "deletions": 31}, "files": [{"sha": "e3e6c29de878637f383df6d4a2fcef44882acd72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f457c50cd95684173f68fe0e7c1b14b2533a62b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f457c50cd95684173f68fe0e7c1b14b2533a62b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f457c50cd95684173f68fe0e7c1b14b2533a62b2", "patch": "@@ -1,5 +1,12 @@\n 2012-10-28  Andreas Schwab  <schwab@linux-m68k.org>\n \n+\t* doc/cppopts.texi: Fix use of @item vs. @itemx inside @table.\n+\t* doc/extend.texi: Likewise.\n+\t* doc/generic.texi: Likewise.\n+\t* doc/invoke.texi: Likewise.\n+\t* doc/md.texi: Likewise.\n+\t* doc/sourcebuild.texi: Likewise.\n+\n \t* doc/tm.texi.in (Misc): Add newline before @end.\n \t* doc/tm.texi: Update.\n "}, {"sha": "a2eb79d06f931967652658d98c092a6c3160ab11", "filename": "gcc/doc/cppopts.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f457c50cd95684173f68fe0e7c1b14b2533a62b2/gcc%2Fdoc%2Fcppopts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f457c50cd95684173f68fe0e7c1b14b2533a62b2/gcc%2Fdoc%2Fcppopts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppopts.texi?ref=f457c50cd95684173f68fe0e7c1b14b2533a62b2", "patch": "@@ -1,5 +1,5 @@\n @c Copyright (c) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,\n-@c 2010, Free Software Foundation, Inc.\n+@c 2010, 2012, Free Software Foundation, Inc.\n @c This is part of the CPP and GCC manuals.\n @c For copying conditions, see the file gcc.texi.\n \n@@ -805,7 +805,7 @@ Replacement:      [    ]    @{    @}    #    \\    ^    |    ~\n Enable special code to work around file systems which only permit very\n short file names, such as MS-DOS@.\n \n-@itemx --help\n+@item --help\n @itemx --target-help\n @opindex help\n @opindex target-help"}, {"sha": "5c4f8fd6544662f37968f281c77adbedc740baeb", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f457c50cd95684173f68fe0e7c1b14b2533a62b2/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f457c50cd95684173f68fe0e7c1b14b2533a62b2/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=f457c50cd95684173f68fe0e7c1b14b2533a62b2", "patch": "@@ -1251,10 +1251,10 @@ The @code{__flash} qualifier will locate data in the\n instruction. Pointers to this address space are 16 bits wide.\n \n @item __flash1\n-@item __flash2\n-@item __flash3\n-@item __flash4\n-@item __flash5\n+@itemx __flash2\n+@itemx __flash3\n+@itemx __flash4\n+@itemx __flash5\n @cindex @code{__flash1} AVR Named Address Spaces\n @cindex @code{__flash2} AVR Named Address Spaces\n @cindex @code{__flash3} AVR Named Address Spaces"}, {"sha": "e87881176da44a1e8b4ea37dfb4dd4d07ea705a5", "filename": "gcc/doc/generic.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f457c50cd95684173f68fe0e7c1b14b2533a62b2/gcc%2Fdoc%2Fgeneric.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f457c50cd95684173f68fe0e7c1b14b2533a62b2/gcc%2Fdoc%2Fgeneric.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgeneric.texi?ref=f457c50cd95684173f68fe0e7c1b14b2533a62b2", "patch": "@@ -1,4 +1,4 @@\n-@c Copyright (c) 2004, 2005, 2007, 2008, 2010 Free Software Foundation, Inc.\n+@c Copyright (c) 2004, 2005, 2007, 2008, 2010, 2012 Free Software Foundation, Inc.\n @c Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gcc.texi.\n@@ -1417,13 +1417,13 @@ generate these expressions anyhow, if it can tell that strictness does\n not matter.  The type of the operands and that of the result are\n always of @code{BOOLEAN_TYPE} or @code{INTEGER_TYPE}.\n \n-@itemx POINTER_PLUS_EXPR\n+@item POINTER_PLUS_EXPR\n This node represents pointer arithmetic.  The first operand is always\n a pointer/reference type.  The second operand is always an unsigned\n integer type compatible with sizetype.  This is the only binary\n arithmetic operand that can operate on pointer types.\n \n-@itemx PLUS_EXPR\n+@item PLUS_EXPR\n @itemx MINUS_EXPR\n @itemx MULT_EXPR\n These nodes represent various binary arithmetic operations."}, {"sha": "15ecaf1270344712d352e64a3e331323492c1aad", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f457c50cd95684173f68fe0e7c1b14b2533a62b2/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f457c50cd95684173f68fe0e7c1b14b2533a62b2/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f457c50cd95684173f68fe0e7c1b14b2533a62b2", "patch": "@@ -1617,7 +1617,7 @@ GNU dialect of ISO C99.  When ISO C99 is fully implemented in GCC,\n this will become the default.  The name @samp{gnu9x} is deprecated.\n \n @item gnu11\n-@item gnu1x\n+@itemx gnu1x\n GNU dialect of ISO C11.  Support is incomplete and experimental.  The\n name @samp{gnu1x} is deprecated.\n \n@@ -5310,7 +5310,7 @@ is set by this option.\n For example, with @option{-fdbg-cnt=dce:10,tail_call:0},\n @code{dbg_cnt(dce)} returns true only for first 10 invocations.\n \n-@itemx -fenable-@var{kind}-@var{pass}\n+@item -fenable-@var{kind}-@var{pass}\n @itemx -fdisable-@var{kind}-@var{pass}=@var{range-list}\n @opindex fdisable-\n @opindex fenable-\n@@ -5464,11 +5464,11 @@ Dump after duplicating the computed gotos.\n @option{-fdump-rtl-ce3} enable dumping after the three\n if conversion passes.\n \n-@itemx -fdump-rtl-cprop_hardreg\n+@item -fdump-rtl-cprop_hardreg\n @opindex fdump-rtl-cprop_hardreg\n Dump after hard register copy propagation.\n \n-@itemx -fdump-rtl-csa\n+@item -fdump-rtl-csa\n @opindex fdump-rtl-csa\n Dump after combining stack adjustments.\n \n@@ -5479,11 +5479,11 @@ Dump after combining stack adjustments.\n @option{-fdump-rtl-cse1} and @option{-fdump-rtl-cse2} enable dumping after\n the two common subexpression elimination passes.\n \n-@itemx -fdump-rtl-dce\n+@item -fdump-rtl-dce\n @opindex fdump-rtl-dce\n Dump after the standalone dead code elimination passes.\n \n-@itemx -fdump-rtl-dbr\n+@item -fdump-rtl-dbr\n @opindex fdump-rtl-dbr\n Dump after delayed branch scheduling.\n \n@@ -5528,7 +5528,7 @@ Dump after the initialization of the registers.\n @opindex fdump-rtl-initvals\n Dump after the computation of the initial value sets.\n \n-@itemx -fdump-rtl-into_cfglayout\n+@item -fdump-rtl-into_cfglayout\n @opindex fdump-rtl-into_cfglayout\n Dump after converting to cfglayout mode.\n \n@@ -5558,7 +5558,7 @@ Dump after removing redundant mode switches.\n @opindex fdump-rtl-rnreg\n Dump after register renumbering.\n \n-@itemx -fdump-rtl-outof_cfglayout\n+@item -fdump-rtl-outof_cfglayout\n @opindex fdump-rtl-outof_cfglayout\n Dump after converting from cfglayout mode.\n \n@@ -10815,10 +10815,10 @@ integer multiply, or integer multiply-and-accumulate.\n The default is @option{-mfp-mode=caller}\n \n @item -mnosplit-lohi\n+@itemx -mno-postinc\n+@itemx -mno-postmodify\n @opindex mnosplit-lohi\n-@item -mno-postinc\n @opindex mno-postinc\n-@item -mno-postmodify\n @opindex mno-postmodify\n Code generation tweaks that disable, respectively, splitting of 32-bit\n loads, generation of post-increment addresses, and generation of\n@@ -10901,7 +10901,7 @@ statically linked only.\n Do not assume that unaligned memory references will be handled by the system.\n \n @item -momit-leaf-frame-pointer\n-@item -mno-omit-leaf-frame-pointer\n+@itemx -mno-omit-leaf-frame-pointer\n @opindex momit-leaf-frame-pointer\n @opindex mno-omit-leaf-frame-pointer\n Omit or keep the frame pointer in leaf functions.  The former behaviour is the\n@@ -11739,7 +11739,7 @@ This is the case for devices with at least 16@tie{}KiB of program\n memory.\n \n @item __AVR_HAVE_EIJMP_EICALL__\n-@item __AVR_3_BYTE_PC__\n+@itemx __AVR_3_BYTE_PC__\n The device has the @code{EIJMP} and @code{EICALL} instructions.\n This is the case for devices with more than 128@tie{}KiB of program memory.\n This also means that the program counter\n@@ -11750,31 +11750,31 @@ The program counter (PC) is 2@tie{}bytes wide. This is the case for devices\n with up to 128@tie{}KiB of program memory.\n \n @item __AVR_HAVE_8BIT_SP__\n-@item __AVR_HAVE_16BIT_SP__\n+@itemx __AVR_HAVE_16BIT_SP__\n The stack pointer (SP) register is treated as 8-bit respectively\n 16-bit register by the compiler.\n The definition of these macros is affected by @code{-mtiny-stack}.\n \n @item __AVR_HAVE_SPH__\n-@item __AVR_SP8__\n+@itemx __AVR_SP8__\n The device has the SPH (high part of stack pointer) special function\n register or has an 8-bit stack pointer, respectively.\n The definition of these macros is affected by @code{-mmcu=} and\n in the cases of @code{-mmcu=avr2} and @code{-mmcu=avr25} also\n by @code{-msp8}.\n \n @item __AVR_HAVE_RAMPD__\n-@item __AVR_HAVE_RAMPX__\n-@item __AVR_HAVE_RAMPY__\n-@item __AVR_HAVE_RAMPZ__\n+@itemx __AVR_HAVE_RAMPX__\n+@itemx __AVR_HAVE_RAMPY__\n+@itemx __AVR_HAVE_RAMPZ__\n The device has the @code{RAMPD}, @code{RAMPX}, @code{RAMPY},\n @code{RAMPZ} special function register, respectively.\n \n @item __NO_INTERRUPTS__\n This macro reflects the @code{-mno-interrupts} command line option.\n \n @item __AVR_ERRATA_SKIP__\n-@item __AVR_ERRATA_SKIP_JMP_CALL__\n+@itemx __AVR_ERRATA_SKIP_JMP_CALL__\n Some AVR devices (AT90S8515, ATmega103) must not skip 32-bit\n instructions because of a hardware erratum.  Skip instructions are\n @code{SBRS}, @code{SBRC}, @code{SBIS}, @code{SBIC} and @code{CPSE}.\n@@ -18457,7 +18457,7 @@ Mark the @code{MAC} register as call-clobbered, even if\n @option{-mhitachi} is given.\n \n @item -mieee\n-@item -mno-ieee\n+@itemx -mno-ieee\n @opindex mieee\n @opindex mnoieee\n Control the IEEE compliance of floating-point comparisons, which affects the"}, {"sha": "bca0d8fa656bf8c8cb2c47c69fabee1df11275bf", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f457c50cd95684173f68fe0e7c1b14b2533a62b2/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f457c50cd95684173f68fe0e7c1b14b2533a62b2/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=f457c50cd95684173f68fe0e7c1b14b2533a62b2", "patch": "@@ -4483,8 +4483,8 @@ means of constraints requiring operands 1 and 0 to be the same location.\n @cindex @code{ior@var{m}3} instruction pattern\n @cindex @code{xor@var{m}3} instruction pattern\n @item @samp{ssadd@var{m}3}, @samp{usadd@var{m}3}\n-@item @samp{sub@var{m}3}, @samp{sssub@var{m}3}, @samp{ussub@var{m}3}\n-@item @samp{mul@var{m}3}, @samp{ssmul@var{m}3}, @samp{usmul@var{m}3}\n+@itemx @samp{sub@var{m}3}, @samp{sssub@var{m}3}, @samp{ussub@var{m}3}\n+@itemx @samp{mul@var{m}3}, @samp{ssmul@var{m}3}, @samp{usmul@var{m}3}\n @itemx @samp{div@var{m}3}, @samp{ssdiv@var{m}3}\n @itemx @samp{udiv@var{m}3}, @samp{usdiv@var{m}3}\n @itemx @samp{mod@var{m}3}, @samp{umod@var{m}3}"}, {"sha": "ec8263f4087dc5753293d4b7ad7465900abb661a", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f457c50cd95684173f68fe0e7c1b14b2533a62b2/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f457c50cd95684173f68fe0e7c1b14b2533a62b2/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=f457c50cd95684173f68fe0e7c1b14b2533a62b2", "patch": "@@ -691,7 +691,7 @@ standard rule in @file{gcc/Makefile.in} to the variable\n @code{lang_checks}.\n \n @table @code\n-@itemx all.cross\n+@item all.cross\n @itemx start.encap\n @itemx rest.encap\n FIXME: exactly what goes in each of these targets?"}]}