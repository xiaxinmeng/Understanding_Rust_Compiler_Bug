{"sha": "9f4afcd44f9052bacea254f54f9ba6432fa3d6a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY0YWZjZDQ0ZjkwNTJiYWNlYTI1NGY1NGY5YmE2NDMyZmEzZDZhMg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-10-17T10:39:11Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-10-17T10:39:11Z"}, "message": "* gcc-interface/trans.c (addressable_p): Handle bitwise operations.\n\nFrom-SVN: r152932", "tree": {"sha": "61f02d17f476344dc3fc67f638c91c91f0e45a24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61f02d17f476344dc3fc67f638c91c91f0e45a24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f4afcd44f9052bacea254f54f9ba6432fa3d6a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f4afcd44f9052bacea254f54f9ba6432fa3d6a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f4afcd44f9052bacea254f54f9ba6432fa3d6a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f4afcd44f9052bacea254f54f9ba6432fa3d6a2/comments", "author": null, "committer": null, "parents": [{"sha": "0046b1a727f73f0848733e28219069426b2dc218", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0046b1a727f73f0848733e28219069426b2dc218", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0046b1a727f73f0848733e28219069426b2dc218"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "d74fccebda6650a6cdac4db5d4d47c85fa564ece", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4afcd44f9052bacea254f54f9ba6432fa3d6a2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4afcd44f9052bacea254f54f9ba6432fa3d6a2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9f4afcd44f9052bacea254f54f9ba6432fa3d6a2", "patch": "@@ -1,3 +1,7 @@\n+2009-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (addressable_p): Handle bitwise operations.\n+\n 2009-10-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/ada-tree.h (TYPE_FAT_POINTER_P): Swap with..."}, {"sha": "271581a65e83161736fa6bff7d75edc91d4c97b8", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4afcd44f9052bacea254f54f9ba6432fa3d6a2/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4afcd44f9052bacea254f54f9ba6432fa3d6a2/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=9f4afcd44f9052bacea254f54f9ba6432fa3d6a2", "patch": "@@ -6949,6 +6949,10 @@ addressable_p (tree gnu_expr, tree gnu_type)\n     case CALL_EXPR:\n     case PLUS_EXPR:\n     case MINUS_EXPR:\n+    case BIT_IOR_EXPR:\n+    case BIT_XOR_EXPR:\n+    case BIT_AND_EXPR:\n+    case BIT_NOT_EXPR:\n       /* All rvalues are deemed addressable since taking their address will\n \t force a temporary to be created by the middle-end.  */\n       return true;"}, {"sha": "217c0d718617f5c9a175f9a51de54fe6aa66ff61", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4afcd44f9052bacea254f54f9ba6432fa3d6a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4afcd44f9052bacea254f54f9ba6432fa3d6a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f4afcd44f9052bacea254f54f9ba6432fa3d6a2", "patch": "@@ -1,3 +1,7 @@\n+2009-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/unchecked_convert4.adb: New test.\n+\n 2009-10-15  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/38798"}, {"sha": "4f766ae04feddcacfea33f882643d83233d47b57", "filename": "gcc/testsuite/gnat.dg/unchecked_convert4.adb", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4afcd44f9052bacea254f54f9ba6432fa3d6a2/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_convert4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4afcd44f9052bacea254f54f9ba6432fa3d6a2/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_convert4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funchecked_convert4.adb?ref=9f4afcd44f9052bacea254f54f9ba6432fa3d6a2", "patch": "@@ -0,0 +1,23 @@\n+-- { dg-do compile }\n+\n+with Unchecked_Conversion;\n+\n+procedure Unchecked_Convert4 is\n+\n+  type Uint32 is mod 2**32;\n+\n+  type Rec is record\n+    I : Uint32;\n+  end record;\n+  pragma Atomic (Rec);\n+\n+  function Conv is new Unchecked_Conversion (Uint32, Rec);\n+\n+  function F return Uint32;\n+  pragma Import (Ada, F);\n+\n+  procedure Proc (R : Rec) is begin null; end;\n+\n+begin\n+  Proc (Conv (F or 1));\n+end;"}]}