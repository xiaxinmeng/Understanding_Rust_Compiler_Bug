{"sha": "81ea3024cac22aa75bd589fa455b132895e1a82f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFlYTMwMjRjYWMyMmFhNzViZDU4OWZhNDU1YjEzMjg5NWUxYTgyZg==", "commit": {"author": {"name": "Ricardo Catalinas Jim\u00e9nez", "email": "jimenezrick@gmail.com", "date": "2012-08-25T22:55:27Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2012-08-25T22:55:27Z"}, "message": "* doc/extend.texi (__atomic Builtins): Remove space before comma.\n\nFrom-SVN: r190671", "tree": {"sha": "54c70afc7924e831fa844d7b0920d660ce3b40c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54c70afc7924e831fa844d7b0920d660ce3b40c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81ea3024cac22aa75bd589fa455b132895e1a82f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81ea3024cac22aa75bd589fa455b132895e1a82f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81ea3024cac22aa75bd589fa455b132895e1a82f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81ea3024cac22aa75bd589fa455b132895e1a82f/comments", "author": {"login": "jimenezrick", "id": 358560, "node_id": "MDQ6VXNlcjM1ODU2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/358560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimenezrick", "html_url": "https://github.com/jimenezrick", "followers_url": "https://api.github.com/users/jimenezrick/followers", "following_url": "https://api.github.com/users/jimenezrick/following{/other_user}", "gists_url": "https://api.github.com/users/jimenezrick/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimenezrick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimenezrick/subscriptions", "organizations_url": "https://api.github.com/users/jimenezrick/orgs", "repos_url": "https://api.github.com/users/jimenezrick/repos", "events_url": "https://api.github.com/users/jimenezrick/events{/privacy}", "received_events_url": "https://api.github.com/users/jimenezrick/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca97b221ce77e693274135e3dbba50221bf298a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca97b221ce77e693274135e3dbba50221bf298a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca97b221ce77e693274135e3dbba50221bf298a3"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "e1ae3c90bf257b82f3d9f2c5ac7660e2a37d2afa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81ea3024cac22aa75bd589fa455b132895e1a82f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81ea3024cac22aa75bd589fa455b132895e1a82f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=81ea3024cac22aa75bd589fa455b132895e1a82f", "patch": "@@ -1,3 +1,7 @@\n+2012-08-26  Ricardo Catalinas Jim\u00e9nez <jimenezrick@gmail.com>\n+\n+\t* doc/extend.texi (__atomic Builtins): Remove space before comma.\n+\n 2012-08-25  Richard Sandiford  <rdsandiford@googlemail.com>\n             Andrew Pinski  <apinski@cavium.com>\n "}, {"sha": "cea5ddabd281f97f0a66cf17acdb020c3a0f2eca", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81ea3024cac22aa75bd589fa455b132895e1a82f/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81ea3024cac22aa75bd589fa455b132895e1a82f/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=81ea3024cac22aa75bd589fa455b132895e1a82f", "patch": "@@ -7175,7 +7175,7 @@ Full barrier in both directions and synchronizes with acquire loads and\n release stores in all threads.\n @end table\n \n-When implementing patterns for these built-in functions , the memory model\n+When implementing patterns for these built-in functions, the memory model\n parameter can be ignored as long as the pattern implements the most\n restrictive @code{__ATOMIC_SEQ_CST} model.  Any of the other memory models\n will execute correctly with this memory model but they may not execute as"}]}