{"sha": "e7fceebce65739f184ad8e090d0fac712336df34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdmY2VlYmNlNjU3MzlmMTg0YWQ4ZTA5MGQwZmFjNzEyMzM2ZGYzNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-19T08:31:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-19T08:31:55Z"}, "message": "[multiple changes]\n\n2011-09-19  Robert Dewar  <dewar@adacore.com>\n\n\t* err_vars.ads, errout.ads: Minor reformatting.\n\n2011-09-19  Robert Dewar  <dewar@adacore.com>\n\n\t* aspects.ads (Impl_Defined_Aspects): New array\n\t* lib-writ.adb (No_Dependences): New name for No_Dependence\n\t* restrict.adb (No_Dependences): New name for No_Dependence\n\t(Check_Restriction_No_Specification_Of_Aspect): New\n\tprocedure.\n\t(Set_Restriction_No_Specification_Of_Aspect): New procedure\n\t(Restricted_Profile_Result): New variable\n\t(No_Specification_Of_Aspects): New variable\n\t(No_Specification_Of_Aspect_Warning): New variable\n\t* restrict.ads (No_Dependences): New name for No_Dependence\n\t(Check_Restriction_No_Specification_Of_Aspect): New procedure\n\t(Set_Restriction_No_Specification_Of_Aspect): New procedure\n\t* s-rident.ads: Add restriction\n\tNo_Implementation_Aspect_Specifications, this is also added to\n\tthe No_Implementation_Extensions profile.\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Check\n\tNo_Implementation_Defined_Aspects\n\t(Analyze_Aspect_Specifications): Check No_Specification_Of_Aspect\n\t* sem_prag.adb (Analyze_Aspect_Specifications): Check\n\tNo_Implementation_Aspects\n\t(Analyze_Aspect_Specifications): Check No_Specification_Of_Aspect\n\t* snames.ads-tmpl (Name_No_Specification_Of_Aspect): New name\n\n2011-09-19  Yannick Moy  <moy@adacore.com>\n\n\t* lib-xref.adb (Generate_Reference): Take into account multiple\n\trenamings for Alfa refs.\n\n2011-09-19  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-socthi-mingw.adb: Minor reformatting.\n\n2011-09-19  Yannick Moy  <moy@adacore.com>\n\n\t* gnat1drv.adb (Adjust_Global_Switches): Set tagged type\n\texpansion to False in mode Alfa\n\n2011-09-19  Pascal Obry  <obry@adacore.com>\n\n\t* mingw32.h: Remove obsolete code needed for old versions\n\tof MingW.\n\nFrom-SVN: r178959", "tree": {"sha": "c350911e688b574ce53d0acc701833d4510f317e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c350911e688b574ce53d0acc701833d4510f317e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7fceebce65739f184ad8e090d0fac712336df34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7fceebce65739f184ad8e090d0fac712336df34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7fceebce65739f184ad8e090d0fac712336df34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7fceebce65739f184ad8e090d0fac712336df34/comments", "author": null, "committer": null, "parents": [{"sha": "e5a163fc25ad3c12e3e02be166bb10a392d4bf9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5a163fc25ad3c12e3e02be166bb10a392d4bf9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5a163fc25ad3c12e3e02be166bb10a392d4bf9e"}], "stats": {"total": 318, "additions": 257, "deletions": 61}, "files": [{"sha": "f57c46dc9e90248e1504522cc82c5a32ea31d900", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e7fceebce65739f184ad8e090d0fac712336df34", "patch": "@@ -1,3 +1,51 @@\n+2011-09-19  Robert Dewar  <dewar@adacore.com>\n+\n+\t* err_vars.ads, errout.ads: Minor reformatting.\n+\n+2011-09-19  Robert Dewar  <dewar@adacore.com>\n+\n+\t* aspects.ads (Impl_Defined_Aspects): New array\n+\t* lib-writ.adb (No_Dependences): New name for No_Dependence\n+\t* restrict.adb (No_Dependences): New name for No_Dependence\n+\t(Check_Restriction_No_Specification_Of_Aspect): New\n+\tprocedure.\n+\t(Set_Restriction_No_Specification_Of_Aspect): New procedure\n+\t(Restricted_Profile_Result): New variable\n+\t(No_Specification_Of_Aspects): New variable\n+\t(No_Specification_Of_Aspect_Warning): New variable\n+\t* restrict.ads (No_Dependences): New name for No_Dependence\n+\t(Check_Restriction_No_Specification_Of_Aspect): New procedure\n+\t(Set_Restriction_No_Specification_Of_Aspect): New procedure\n+\t* s-rident.ads: Add restriction\n+\tNo_Implementation_Aspect_Specifications, this is also added to\n+\tthe No_Implementation_Extensions profile.\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): Check\n+\tNo_Implementation_Defined_Aspects\n+\t(Analyze_Aspect_Specifications): Check No_Specification_Of_Aspect\n+\t* sem_prag.adb (Analyze_Aspect_Specifications): Check\n+\tNo_Implementation_Aspects\n+\t(Analyze_Aspect_Specifications): Check No_Specification_Of_Aspect\n+\t* snames.ads-tmpl (Name_No_Specification_Of_Aspect): New name\n+\n+2011-09-19  Yannick Moy  <moy@adacore.com>\n+\n+\t* lib-xref.adb (Generate_Reference): Take into account multiple\n+\trenamings for Alfa refs.\n+\n+2011-09-19  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-socthi-mingw.adb: Minor reformatting.\n+\n+2011-09-19  Yannick Moy  <moy@adacore.com>\n+\n+\t* gnat1drv.adb (Adjust_Global_Switches): Set tagged type\n+\texpansion to False in mode Alfa\n+\n+2011-09-19  Pascal Obry  <obry@adacore.com>\n+\n+\t* mingw32.h: Remove obsolete code needed for old versions\n+\tof MingW.\n+\n 2011-09-19  Robert Dewar  <dewar@adacore.com>\n \n \t* errout.ads: Minor reformatting."}, {"sha": "dfca9b12af19677b362593a7319b2c51fc293cf3", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=e7fceebce65739f184ad8e090d0fac712336df34", "patch": "@@ -144,6 +144,31 @@ package Aspects is\n                         Aspect_Post          => True,\n                         others               => False);\n \n+   --  The following array identifies all implementation defined aspects\n+\n+   Impl_Defined_Aspects : constant array (Aspect_Id) of Boolean :=\n+                            (Aspect_Object_Size          => True,\n+                             Aspect_Predicate            => True,\n+                             Aspect_Test_Case            => True,\n+                             Aspect_Value_Size           => True,\n+                             Aspect_Compiler_Unit        => True,\n+                             Aspect_Preelaborate_05      => True,\n+                             Aspect_Pure_05              => True,\n+                             Aspect_Universal_Data       => True,\n+                             Aspect_Ada_2005             => True,\n+                             Aspect_Ada_2012             => True,\n+                             Aspect_Favor_Top_Level      => True,\n+                             Aspect_Inline_Always        => True,\n+                             Aspect_Persistent_BSS       => True,\n+                             Aspect_Pure_Function        => True,\n+                             Aspect_Shared               => True,\n+                             Aspect_Suppress_Debug_Info  => True,\n+                             Aspect_Universal_Aliasing   => True,\n+                             Aspect_Unmodified           => True,\n+                             Aspect_Unreferenced         => True,\n+                             Aspect_Unreferenced_Objects => True,\n+                             others                      => False);\n+\n    --  The following array indicates aspects for which multiple occurrences of\n    --  the same aspect attached to the same declaration are allowed.\n "}, {"sha": "90f149157610f95a1dc54c4466eb4fc05e8083ef", "filename": "gcc/ada/err_vars.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Ferr_vars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Ferr_vars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferr_vars.ads?ref=e7fceebce65739f184ad8e090d0fac712336df34", "patch": "@@ -143,7 +143,9 @@ package Err_Vars is\n \n    Error_Msg_Warn : Boolean;\n    --  Used if current message contains a < insertion character to indicate\n-   --  if the current message is a warning message.\n+   --  if the current message is a warning message. Must be set appropriately\n+   --  before any call to Error_Msg_xxx with a < insertion character present.\n+   --  Setting is irrelevant if no < insertion character is present.\n \n    Error_Msg_String : String (1 .. 4096);\n    Error_Msg_Strlen : Natural;"}, {"sha": "5c1c92ce6b54078661d190ef4b0d02047f3992a9", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=e7fceebce65739f184ad8e090d0fac712336df34", "patch": "@@ -451,7 +451,9 @@ package Errout is\n \n    Error_Msg_Warn : Boolean renames Err_Vars.Error_Msg_Warn;\n    --  Used if current message contains a < insertion character to indicate\n-   --  if the current message is a warning message. ??? who turns this off???\n+   --  if the current message is a warning message. Must be set appropriately\n+   --  before any call to Error_Msg_xxx with a < insertion character present.\n+   --  Setting is irrelevant if no < insertion character is present.\n \n    Error_Msg_String : String  renames Err_Vars.Error_Msg_String;\n    Error_Msg_Strlen : Natural renames Err_Vars.Error_Msg_Strlen;"}, {"sha": "972940221ffc2b374cb8df71b7377e5fbde9ba4d", "filename": "gcc/ada/g-socthi-mingw.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Fg-socthi-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Fg-socthi-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.adb?ref=e7fceebce65739f184ad8e090d0fac712336df34", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                    Copyright (C) 2001-2010, AdaCore                      --\n+--                    Copyright (C) 2001-2011, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -275,8 +275,8 @@ package body GNAT.Sockets.Thin is\n       use type C.size_t;\n \n       Fill  : constant Boolean :=\n-        SOSC.MSG_WAITALL /= -1\n-          and then (C.unsigned (Flags) and SOSC.MSG_WAITALL) /= 0;\n+                SOSC.MSG_WAITALL /= -1\n+                  and then (C.unsigned (Flags) and SOSC.MSG_WAITALL) /= 0;\n       --  Is the MSG_WAITALL flag set? If so we need to fully fill all vectors\n \n       Res   : C.int;"}, {"sha": "8a8c8050cd5040fe6154bfb54b699cfe38226597", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=e7fceebce65739f184ad8e090d0fac712336df34", "patch": "@@ -477,12 +477,9 @@ procedure Gnat1drv is\n \n          Global_Discard_Names := True;\n \n-         --  We would prefer to suppress the expansion of tagged types and\n-         --  dispatching calls, so that one day GNATprove can handle them\n-         --  directly. Unfortunately, this is causing problems in some cases,\n-         --  so keep this expansion for the time being. To be investigated ???\n+         --  Suppress the expansion of tagged types and dispatching calls\n \n-         Tagged_Type_Expansion := True;\n+         Tagged_Type_Expansion := False;\n       end if;\n    end Adjust_Global_Switches;\n "}, {"sha": "25c2559e559de22878e9276701e4cb1863b5e577", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=e7fceebce65739f184ad8e090d0fac712336df34", "patch": "@@ -1161,13 +1161,13 @@ package body Lib.Writ is\n \n       --  Output R lines for No_Dependence entries\n \n-      for J in No_Dependence.First .. No_Dependence.Last loop\n-         if In_Extended_Main_Source_Unit (No_Dependence.Table (J).Unit)\n-           and then not No_Dependence.Table (J).Warn\n+      for J in No_Dependences.First .. No_Dependences.Last loop\n+         if In_Extended_Main_Source_Unit (No_Dependences.Table (J).Unit)\n+           and then not No_Dependences.Table (J).Warn\n          then\n             Write_Info_Initiate ('R');\n             Write_Info_Char (' ');\n-            Write_Unit_Name (No_Dependence.Table (J).Unit);\n+            Write_Unit_Name (No_Dependences.Table (J).Unit);\n             Write_Info_EOL;\n          end if;\n       end loop;"}, {"sha": "f50406f3d760fd46bea589d32de5ab8b0131d46d", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=e7fceebce65739f184ad8e090d0fac712336df34", "patch": "@@ -391,6 +391,10 @@ package body Lib.Xref is\n       Kind : Entity_Kind;\n       --  If Formal is non-Empty, then its Ekind, otherwise E_Void\n \n+      function Get_Through_Renamings (E : Entity_Id) return Entity_Id;\n+      --  Get the enclosing entity through renamings, which may come from\n+      --  source or from the translation of generic instantiations.\n+\n       function Is_On_LHS (Node : Node_Id) return Boolean;\n       --  Used to check if a node is on the left hand side of an assignment.\n       --  The following cases are handled:\n@@ -412,6 +416,22 @@ package body Lib.Xref is\n       --  exceptions where we do not want to set this flag, see body for\n       --  details of these exceptional cases.\n \n+      ---------------------------\n+      -- Get_Through_Renamings --\n+      ---------------------------\n+\n+      function Get_Through_Renamings (E : Entity_Id) return Entity_Id is\n+         Result : Entity_Id := E;\n+      begin\n+         while Present (Result)\n+           and then Is_Object (Result)\n+           and then Present (Renamed_Object (Result))\n+         loop\n+            Result := Get_Enclosing_Object (Renamed_Object (Result));\n+         end loop;\n+         return Result;\n+      end Get_Through_Renamings;\n+\n       ---------------\n       -- Is_On_LHS --\n       ---------------\n@@ -955,11 +975,8 @@ package body Lib.Xref is\n          --  the renaming, which is needed to compute a valid set of effects\n          --  (reads, writes) for the enclosing subprogram.\n \n-         if Alfa_Mode\n-           and then Is_Object (Ent)\n-           and then Present (Renamed_Object (Ent))\n-         then\n-            Ent := Get_Enclosing_Object (Renamed_Object (Ent));\n+         if Alfa_Mode then\n+            Ent := Get_Through_Renamings (Ent);\n \n             --  If no enclosing object, then it could be a reference to any\n             --  location not tracked individually, like heap-allocated data."}, {"sha": "67bfd2cccfe16d5a54b864d7270f285df6cd0876", "filename": "gcc/ada/mingw32.h", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmingw32.h?ref=e7fceebce65739f184ad8e090d0fac712336df34", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 2002-2009, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 2002-2011, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -38,28 +38,8 @@\n \n #include <_mingw.h>\n \n-/* The unicode support is activated by default starting with the 3.9 MingW\n-   version. It is not possible to use it with previous version due to a bug\n-   in the MingW runtime.  */\n-\n-#if (((__MINGW32_MAJOR_VERSION == 3 \\\n-\t\t   && __MINGW32_MINOR_VERSION >= 9) \\\n-     || (__MINGW32_MAJOR_VERSION >= 4) \\\n-     || defined (__MINGW64))\t       \\\n-     && !defined (RTX))\n+#ifndef RTX\n #define GNAT_UNICODE_SUPPORT\n-\n-#else\n-\n-/*  Older MingW versions have no definition for _tfreopen, add it here to have a\n-    proper build without unicode support.  */\n-#ifndef _tfreopen\n-#define _tfreopen   freopen\n-#endif\n-\n-#endif\n-\n-#ifdef GNAT_UNICODE_SUPPORT\n #define _UNICODE /* For C runtime */\n #define UNICODE  /* For Win32 API */\n #endif"}, {"sha": "813568deea6462a2dd18b465794b2a3c4919a17e", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 87, "deletions": 13, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=e7fceebce65739f184ad8e090d0fac712336df34", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Aspects;  use Aspects;\n with Atree;    use Atree;\n with Casing;   use Casing;\n with Einfo;    use Einfo;\n@@ -41,14 +42,28 @@ with Uname;    use Uname;\n package body Restrict is\n \n    Restricted_Profile_Result : Boolean := False;\n-   --  This switch memoizes the result of Restricted_Profile function\n-   --  calls for improved efficiency. Its setting is valid only if\n-   --  Restricted_Profile_Cached is True. Note that if this switch\n-   --  is ever set True, it need never be turned off again.\n+   --  This switch memoizes the result of Restricted_Profile function calls for\n+   --  improved efficiency. Valid only if Restricted_Profile_Cached is True.\n+   --  Note: if this switch is ever set True, it is never turned off again.\n \n    Restricted_Profile_Cached : Boolean := False;\n-   --  This flag is set to True if the Restricted_Profile_Result\n-   --  contains the correct cached result of Restricted_Profile calls.\n+   --  This flag is set to True if the Restricted_Profile_Result contains the\n+   --  correct cached result of Restricted_Profile calls.\n+\n+   No_Specification_Of_Aspects : array (Aspect_Id) of Source_Ptr :=\n+                                   (others => No_Location);\n+   --  Entries in this array are set to point to a previously occuring pragma\n+   --  that activates a No_Specification_Of_Aspect check.\n+\n+   No_Specification_Of_Aspect_Warning : array (Aspect_Id) of Boolean :=\n+                                          (others => True);\n+   --  An entry in this array is set False in reponse to a previous call to\n+   --  Set_No_Speficiation_Of_Aspect for pragmas in the main unit that\n+   --  specify Warning as False. Once set False, an entry is never reset.\n+\n+   No_Specification_Of_Aspect_Set : Boolean := False;\n+   --  Set True if any entry of No_Specifcation_Of_Aspects has been set True.\n+   --  Once set True, this is never turned off again.\n \n    -----------------------\n    -- Local Subprograms --\n@@ -461,14 +476,14 @@ package body Restrict is\n \n       --  Loop through entries in No_Dependence table to check each one in turn\n \n-      for J in No_Dependence.First .. No_Dependence.Last loop\n-         DU := No_Dependence.Table (J).Unit;\n+      for J in No_Dependences.First .. No_Dependences.Last loop\n+         DU := No_Dependences.Table (J).Unit;\n \n          if Same_Unit (U, DU) then\n             Error_Msg_Sloc := Sloc (DU);\n             Error_Msg_Node_1 := DU;\n \n-            if No_Dependence.Table (J).Warn then\n+            if No_Dependences.Table (J).Warn then\n                Error_Msg\n                  (\"?violation of restriction `No_Dependence '='> &`#\",\n                   Sloc (Err));\n@@ -483,6 +498,44 @@ package body Restrict is\n       end loop;\n    end Check_Restriction_No_Dependence;\n \n+   --------------------------------------------------\n+   -- Check_Restriction_No_Specification_Of_Aspect --\n+   --------------------------------------------------\n+\n+   procedure Check_Restriction_No_Specification_Of_Aspect (N : Node_Id) is\n+      A_Id : Aspect_Id;\n+      Id   : Node_Id;\n+\n+   begin\n+      --  Ignore call if no instances of this restriction set\n+\n+      if not No_Specification_Of_Aspect_Set then\n+         return;\n+      end if;\n+\n+      --  Ignore call if node N is not in the main source unit, since we only\n+      --  give messages for . This avoids giving messages for aspects that are\n+      --  specified in withed units.\n+\n+      if not In_Extended_Main_Source_Unit (N) then\n+         return;\n+      end if;\n+\n+      Id := Identifier (N);\n+      A_Id := Get_Aspect_Id (Chars (Id));\n+      pragma Assert (A_Id /= No_Aspect);\n+\n+      Error_Msg_Sloc := No_Specification_Of_Aspects (A_Id);\n+\n+      if Error_Msg_Sloc /= No_Location then\n+         Error_Msg_Node_1 := Id;\n+         Error_Msg_Warn := No_Specification_Of_Aspect_Warning (A_Id);\n+         Error_Msg_N\n+           (\"<violation of restriction `No_Specification_Of_Aspect '='> &`#\",\n+            Id);\n+      end if;\n+   end Check_Restriction_No_Specification_Of_Aspect;\n+\n    --------------------------------------\n    -- Check_Wide_Character_Restriction --\n    --------------------------------------\n@@ -1059,16 +1112,16 @@ package body Restrict is\n    begin\n       --  Loop to check for duplicate entry\n \n-      for J in No_Dependence.First .. No_Dependence.Last loop\n+      for J in No_Dependences.First .. No_Dependences.Last loop\n \n          --  Case of entry already in table\n \n-         if Same_Unit (Unit, No_Dependence.Table (J).Unit) then\n+         if Same_Unit (Unit, No_Dependences.Table (J).Unit) then\n \n             --  Error has precedence over warning\n \n             if not Warn then\n-               No_Dependence.Table (J).Warn := False;\n+               No_Dependences.Table (J).Warn := False;\n             end if;\n \n             return;\n@@ -1077,9 +1130,30 @@ package body Restrict is\n \n       --  Entry is not currently in table\n \n-      No_Dependence.Append ((Unit, Warn, Profile));\n+      No_Dependences.Append ((Unit, Warn, Profile));\n    end Set_Restriction_No_Dependence;\n \n+   ------------------------------------------------\n+   -- Set_Restriction_No_Specification_Of_Aspect --\n+   ------------------------------------------------\n+\n+   procedure Set_Restriction_No_Specification_Of_Aspect\n+     (N       : Node_Id;\n+      Warning : Boolean)\n+   is\n+      A_Id : constant Aspect_Id := Get_Aspect_Id (Chars (N));\n+      pragma Assert (A_Id /= No_Aspect);\n+\n+   begin\n+      No_Specification_Of_Aspects (A_Id) := Sloc (N);\n+\n+      if Warning = False then\n+         No_Specification_Of_Aspect_Warning (A_Id) := False;\n+      end if;\n+\n+      No_Specification_Of_Aspect_Set := True;\n+   end Set_Restriction_No_Specification_Of_Aspect;\n+\n    ----------------------------------\n    -- Suppress_Restriction_Message --\n    ----------------------------------"}, {"sha": "10875025e2bae169f16960572bf5181e160172fb", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=e7fceebce65739f184ad8e090d0fac712336df34", "patch": "@@ -166,13 +166,13 @@ package Restrict is\n       --  No_Profile if a pragma Restriction set the No_Dependence entry.\n    end record;\n \n-   package No_Dependence is new Table.Table (\n+   package No_Dependences is new Table.Table (\n      Table_Component_Type => ND_Entry,\n      Table_Index_Type     => Int,\n      Table_Low_Bound      => 0,\n      Table_Initial        => 200,\n      Table_Increment      => 200,\n-     Table_Name           => \"Name_No_Dependence\");\n+     Table_Name           => \"Name_No_Dependences\");\n \n    -------------------------------\n    -- SPARK Restriction Control --\n@@ -255,6 +255,11 @@ package Restrict is\n    --  an explicit WITH clause). U is a node for the unit involved, and Err is\n    --  the node to which an error will be attached if necessary.\n \n+   procedure Check_Restriction_No_Specification_Of_Aspect (N : Node_Id);\n+   --  N is the node id for an N_Aspect_Specification. An error message\n+   --  (warning) will be issued if a restriction (warning) was previous set\n+   --  for this aspect using Set_No_Specification_Of_Aspect.\n+\n    procedure Check_Elaboration_Code_Allowed (N : Node_Id);\n    --  Tests to see if elaboration code is allowed by the current restrictions\n    --  settings. This function is called by Gigi when it needs to define an\n@@ -409,6 +414,15 @@ package Restrict is\n    --  this flag is not set. Profile is set to a non-default value if the\n    --  No_Dependence restriction comes from a Profile pragma.\n \n+   procedure Set_Restriction_No_Specification_Of_Aspect\n+     (N       : Node_Id;\n+      Warning : Boolean);\n+   --  N is the node id for an identifier from a pragma Restrictions for the\n+   --  No_Specification_Of_Aspect pragma. An error message will be issued if\n+   --  the identifier is not a valid aspect name. Warning is set True for the\n+   --  case of a Restriction_Warnings pragma specifying this restriction and\n+   --  False for a Restrictions pragma specifying this restriction.\n+\n    function Tasking_Allowed return Boolean;\n    pragma Inline (Tasking_Allowed);\n    --  Tests if tasking operations are allowed by the current restrictions"}, {"sha": "dd9ef16b22c0e7ec1552a0a02c3078fcfef41201", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=e7fceebce65739f184ad8e090d0fac712336df34", "patch": "@@ -125,6 +125,7 @@ package System.Rident is\n       --  The following cases do not require consistency checking\n \n       Immediate_Reclamation,                   -- (RM H.4(10))\n+      No_Implementation_Aspect_Specifications, -- Ada 2012 AI-241\n       No_Implementation_Attributes,            -- Ada 2005 AI-257\n       No_Implementation_Identifiers,           -- Ada 2012 AI-246\n       No_Implementation_Pragmas,               -- Ada 2005 AI-257\n@@ -349,11 +350,12 @@ package System.Rident is\n                         --  Restrictions for Restricted profile\n \n                        (Set   =>\n-                          (No_Implementation_Attributes    => True,\n-                           No_Implementation_Identifiers   => True,\n-                           No_Implementation_Pragmas       => True,\n-                           No_Implementation_Units         => True,\n-                           others                          => False),\n+                          (No_Implementation_Aspect_Specifications => True,\n+                           No_Implementation_Attributes            => True,\n+                           No_Implementation_Identifiers           => True,\n+                           No_Implementation_Pragmas               => True,\n+                           No_Implementation_Units                 => True,\n+                           others                                  => False),\n \n                         --  Value settings for Restricted profile (none\n "}, {"sha": "0895eb686522ff39e9a6ac18c31fb6f27260e148", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=e7fceebce65739f184ad8e090d0fac712336df34", "patch": "@@ -804,6 +804,19 @@ package body Sem_Ch13 is\n                goto Continue;\n             end if;\n \n+            --  Check restriction No_Implementation_Aspect_Specifications\n+\n+            if Impl_Defined_Aspects (A_Id) then\n+               Check_Restriction\n+                 (No_Implementation_Aspect_Specifications, Aspect);\n+            end if;\n+\n+            --  Check restriction No_Specification_Of_Aspect\n+\n+            Check_Restriction_No_Specification_Of_Aspect (Aspect);\n+\n+            --  Analyze this aspect\n+\n             Set_Analyzed (Aspect);\n             Set_Entity (Aspect, E);\n             Ent := New_Occurrence_Of (E, Sloc (Id));"}, {"sha": "74d889e283a7957d58d7e9356aafb145a6ea0866", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=e7fceebce65739f184ad8e090d0fac712336df34", "patch": "@@ -29,6 +29,7 @@\n --  to complete the syntax checks. Certain pragmas are handled partially or\n --  completely by the parser (see Par.Prag for further details).\n \n+with Aspects;  use Aspects;\n with Atree;    use Atree;\n with Casing;   use Casing;\n with Checks;   use Checks;\n@@ -5314,6 +5315,26 @@ package body Sem_Prag is\n             elsif Id = Name_No_Dependence then\n                Check_Unit_Name (Expr);\n \n+            --  Case of No_Specification_Of_Aspect => Identifier.\n+\n+            elsif Id = Name_No_Specification_Of_Aspect then\n+               declare\n+                  A_Id : Aspect_Id;\n+\n+               begin\n+                  if Nkind (Expr) /= N_Identifier then\n+                     A_Id := No_Aspect;\n+                  else\n+                     A_Id := Get_Aspect_Id (Chars (Expr));\n+                  end if;\n+\n+                  if A_Id = No_Aspect then\n+                     Error_Pragma_Arg (\"invalid restriction name\", Arg);\n+                  else\n+                     Set_Restriction_No_Specification_Of_Aspect (Expr, Warn);\n+                  end if;\n+               end;\n+\n             --  All other cases of restriction identifier present\n \n             else"}, {"sha": "a68e5e85112e8f19da8faf5dc5981c9f3c1cbeb5", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7fceebce65739f184ad8e090d0fac712336df34/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=e7fceebce65739f184ad8e090d0fac712336df34", "patch": "@@ -663,6 +663,7 @@ package Snames is\n    Name_No_Implementation_Extensions   : constant Name_Id := N + $;\n    Name_No_Requeue                     : constant Name_Id := N + $;\n    Name_No_Requeue_Statements          : constant Name_Id := N + $;\n+   Name_No_Specification_Of_Aspect     : constant Name_Id := N + $;\n    Name_No_Task_Attributes             : constant Name_Id := N + $;\n    Name_No_Task_Attributes_Package     : constant Name_Id := N + $;\n    Name_Nominal                        : constant Name_Id := N + $;"}]}