{"sha": "3a3eda000fdf4f8754c9a2535191091f1db0c2a2", "node_id": "C_kwDOANBUbNoAKDNhM2VkYTAwMGZkZjRmODc1NGM5YTI1MzUxOTEwOTFmMWRiMGMyYTI", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-05-02T07:30:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-05-02T08:43:40Z"}, "message": "tree-optimization/105437 - BB vect with extern defs of throwing stmts\n\nWe have to watch out for vectorized stmt insert locations if the\ndef from the last stmt alters control flow.  We constrain region\nbuilding so we know the def is outside of the current region\nand thus we can insert at the region start point.\n\n2022-05-02  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/105437\n\t* tree-vect-slp.cc (vect_schedule_slp_node): Handle the\n\tcase where last_stmt alters control flow.\n\n\t* g++.dg/vect/pr105437.cc: New testcase.", "tree": {"sha": "2a87f4a9948f63e93e70a215daedc2ac9c45d70c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a87f4a9948f63e93e70a215daedc2ac9c45d70c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a3eda000fdf4f8754c9a2535191091f1db0c2a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a3eda000fdf4f8754c9a2535191091f1db0c2a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a3eda000fdf4f8754c9a2535191091f1db0c2a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a3eda000fdf4f8754c9a2535191091f1db0c2a2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82a344f206725ba002af4fed318f37dfb7e566a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82a344f206725ba002af4fed318f37dfb7e566a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82a344f206725ba002af4fed318f37dfb7e566a0"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "b3b440debefaaba63d064aaeb45b4378844afc0e", "filename": "gcc/testsuite/g++.dg/vect/pr105437.cc", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3eda000fdf4f8754c9a2535191091f1db0c2a2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr105437.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3eda000fdf4f8754c9a2535191091f1db0c2a2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr105437.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr105437.cc?ref=3a3eda000fdf4f8754c9a2535191091f1db0c2a2", "patch": "@@ -0,0 +1,24 @@\n+// { dg-do compile }\n+\n+struct ControlClass\n+{\n+    virtual ~ControlClass();\n+\n+    int Width;\n+    int Height;\n+    unsigned IsToRepaint : 1;\n+};\n+\n+struct SelectClass : ControlClass\n+{\n+    SelectClass(void);\n+};\n+\n+int Non_Folded_Value();\n+\n+SelectClass::SelectClass(void)\n+{\n+    int factor = Non_Folded_Value();\n+    Width = 32 << factor;\n+    Height = 24 << factor;\n+}"}, {"sha": "0d400c00df1c3c6e78ef7c99093fec66a885a98e", "filename": "gcc/tree-vect-slp.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3eda000fdf4f8754c9a2535191091f1db0c2a2/gcc%2Ftree-vect-slp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3eda000fdf4f8754c9a2535191091f1db0c2a2/gcc%2Ftree-vect-slp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.cc?ref=3a3eda000fdf4f8754c9a2535191091f1db0c2a2", "patch": "@@ -7302,6 +7302,13 @@ vect_schedule_slp_node (vec_info *vinfo,\n \t  gcc_assert (seen_vector_def);\n \t  si = gsi_after_labels (as_a <bb_vec_info> (vinfo)->bbs[0]);\n \t}\n+      else if (is_ctrl_altering_stmt (last_stmt))\n+\t{\n+\t  /* We split regions to vectorize at control altering stmts\n+\t     with a definition so this must be an external which\n+\t     we can insert at the start of the region.  */\n+\t  si = gsi_after_labels (as_a <bb_vec_info> (vinfo)->bbs[0]);\n+\t}\n       else if (is_a <bb_vec_info> (vinfo)\n \t       && gimple_bb (last_stmt) != gimple_bb (stmt_info->stmt)\n \t       && gimple_could_trap_p (stmt_info->stmt))"}]}