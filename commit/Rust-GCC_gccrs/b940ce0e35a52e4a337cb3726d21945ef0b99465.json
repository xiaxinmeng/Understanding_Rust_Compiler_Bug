{"sha": "b940ce0e35a52e4a337cb3726d21945ef0b99465", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk0MGNlMGUzNWE1MmU0YTMzN2NiMzcyNmQyMTk0NWVmMGI5OTQ2NQ==", "commit": {"author": {"name": "Dorit Nuzman", "email": "dorit@il.ibm.com", "date": "2005-07-27T15:19:45Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2005-07-27T15:19:45Z"}, "message": "re PR tree-optimization/23073 (testsuite failure, gcc.dg/tree-ssa/ifc-20040816-2.c)\n\n        PR tree-optimization/23073\n        * tree-vect-analyze.c (vect_analyze_data_refs_alignment): Call\n        vect_print_dump_info before fprintf.\n\nFrom-SVN: r102431", "tree": {"sha": "6c63f03b22547f30e56dc15e80be8a92a5de17bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c63f03b22547f30e56dc15e80be8a92a5de17bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b940ce0e35a52e4a337cb3726d21945ef0b99465", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b940ce0e35a52e4a337cb3726d21945ef0b99465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b940ce0e35a52e4a337cb3726d21945ef0b99465", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b940ce0e35a52e4a337cb3726d21945ef0b99465/comments", "author": null, "committer": null, "parents": [{"sha": "26c406400e471a956f256173189fc5d556e064d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26c406400e471a956f256173189fc5d556e064d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26c406400e471a956f256173189fc5d556e064d7"}], "stats": {"total": 57, "additions": 48, "deletions": 9}, "files": [{"sha": "0f5218b7e2dba153832bfe203bcbc4e1db0b5237", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b940ce0e35a52e4a337cb3726d21945ef0b99465/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b940ce0e35a52e4a337cb3726d21945ef0b99465/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b940ce0e35a52e4a337cb3726d21945ef0b99465", "patch": "@@ -1,3 +1,9 @@\n+2005-07-27  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\tPR tree-optimization/23073\n+\t* tree-vect-analyze.c (vect_analyze_data_refs_alignment): Call \n+\tvect_print_dump_info before fprintf.\n+\n 2005-07-27  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \tPR tree-optimize/22348"}, {"sha": "cffece4810e3388296a8d6219915c36c83ed08c8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b940ce0e35a52e4a337cb3726d21945ef0b99465/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b940ce0e35a52e4a337cb3726d21945ef0b99465/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b940ce0e35a52e4a337cb3726d21945ef0b99465", "patch": "@@ -1,3 +1,9 @@\n+2005-07-27  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\tPR tree-optimization/23073\n+\t* gcc.dg/vect/nodump-pr23073.c: New test.\n+\t* gcc.dg/vect/vect.exp: Allow running some tests without dump flags.\n+\n 2005-07-27  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \tPR tree-optimize/22348"}, {"sha": "d13279919ab3a73115fdd1e7301c08166dc1d52b", "filename": "gcc/testsuite/gcc.dg/vect/nodump-pr23073.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b940ce0e35a52e4a337cb3726d21945ef0b99465/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fnodump-pr23073.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b940ce0e35a52e4a337cb3726d21945ef0b99465/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fnodump-pr23073.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fnodump-pr23073.c?ref=b940ce0e35a52e4a337cb3726d21945ef0b99465", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+\n+extern struct {\n+  int o[2];\n+  int p[2];\n+} d;\n+\n+void C()\n+{\n+  int i;\n+\n+  for( i=0; i<2; ++i )\n+    {\n+      d.o[i] = 0;\n+      d.p[i] = 0;\n+    }\n+  return;\n+}"}, {"sha": "ccfe0543aa849e155abd9aa3a25f0cc15831b145", "filename": "gcc/testsuite/gcc.dg/vect/vect.exp", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b940ce0e35a52e4a337cb3726d21945ef0b99465/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b940ce0e35a52e4a337cb3726d21945ef0b99465/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp?ref=b940ce0e35a52e4a337cb3726d21945ef0b99465", "patch": "@@ -23,8 +23,7 @@ load_lib gcc-dg.exp\n set DEFAULT_VECTCFLAGS \"\"\n \n # These flags are used for all targets.\n-lappend DEFAULT_VECTCFLAGS \"-O2\" \"-ftree-vectorize\" \\\n-  \"-ftree-vectorizer-verbose=4\" \"-fdump-tree-vect-stats\"\n+lappend DEFAULT_VECTCFLAGS \"-O2\" \"-ftree-vectorize\"\n \n # If the target system supports vector instructions, the default action\n # for a test is 'run', otherwise it's 'compile'.  Save current default.\n@@ -75,6 +74,12 @@ if [istarget \"powerpc*-*-*\"] {\n # Initialize `dg'.\n dg-init\n \n+# Tests that should be run without generating dump info\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/nodump-*.\\[cS\\]]]  \\\n+\t\"\" $DEFAULT_VECTCFLAGS\n+\n+lappend DEFAULT_VECTCFLAGS \"-ftree-vectorizer-verbose=4\" \"-fdump-tree-vect-stats\"\n+\n # Main loop.\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/pr*.\\[cS\\]]]  \\\n \t\"\" $DEFAULT_VECTCFLAGS"}, {"sha": "6786161312b9d0026e8aefedda7141538f95776f", "filename": "gcc/tree-vect-analyze.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b940ce0e35a52e4a337cb3726d21945ef0b99465/gcc%2Ftree-vect-analyze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b940ce0e35a52e4a337cb3726d21945ef0b99465/gcc%2Ftree-vect-analyze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-analyze.c?ref=b940ce0e35a52e4a337cb3726d21945ef0b99465", "patch": "@@ -1056,13 +1056,16 @@ vect_analyze_data_refs_alignment (loop_vec_info loop_vinfo)\n       supportable_dr_alignment = vect_supportable_dr_alignment (dr);\n       if (!supportable_dr_alignment)\n \t{\n-            if (DR_IS_READ (dr))\n-              fprintf (vect_dump,\n-                       \"not vectorized: unsupported unaligned load.\");\n-            else\n-              fprintf (vect_dump,\n-                       \"not vectorized: unsupported unaligned store.\");\n- \t    return false;\n+\t  if (vect_print_dump_info (REPORT_UNVECTORIZED_LOOPS))\n+\t    {\n+\t      if (DR_IS_READ (dr))\n+\t\tfprintf (vect_dump,\n+\t\t\t \"not vectorized: unsupported unaligned load.\");\n+\t      else\n+\t\tfprintf (vect_dump,\n+\t\t\t \"not vectorized: unsupported unaligned store.\");\n+\t    }\n+\t  return false;\n \t}\n       if (supportable_dr_alignment != dr_aligned \n \t  && (vect_print_dump_info (REPORT_ALIGNMENT)))"}]}