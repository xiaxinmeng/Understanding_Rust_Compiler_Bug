{"sha": "1b688c0e01dfc54f3e5a77c2e76892ebb4dae43b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI2ODhjMGUwMWRmYzU0ZjNlNWE3N2MyZTc2ODkyZWJiNGRhZTQzYg==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-10-18T15:23:04Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-10-18T15:23:04Z"}, "message": "re PR fortran/50420 ([Coarray] lcobound doesn't accept coarray subcomponents)\n\n\tPR fortran/50420\n\t* gfortran.dg/coarray_subobject_1.f90: New test.\n\t* gfortran.dg/coarray/subobject_1.f90: New test.\n\nFrom-SVN: r180153", "tree": {"sha": "ba1d08c056f170265784a94006175698481ef94e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba1d08c056f170265784a94006175698481ef94e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b688c0e01dfc54f3e5a77c2e76892ebb4dae43b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b688c0e01dfc54f3e5a77c2e76892ebb4dae43b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b688c0e01dfc54f3e5a77c2e76892ebb4dae43b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b688c0e01dfc54f3e5a77c2e76892ebb4dae43b/comments", "author": null, "committer": null, "parents": [{"sha": "fef8962802d6a69b56eb31aba37b7c841a992ef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fef8962802d6a69b56eb31aba37b7c841a992ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fef8962802d6a69b56eb31aba37b7c841a992ef6"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "d44d2c5fa2932fce597f4de5c427615dd6c8bc43", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b688c0e01dfc54f3e5a77c2e76892ebb4dae43b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b688c0e01dfc54f3e5a77c2e76892ebb4dae43b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b688c0e01dfc54f3e5a77c2e76892ebb4dae43b", "patch": "@@ -1,3 +1,9 @@\n+2011-10-18  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/50420\n+\t* gfortran.dg/coarray_subobject_1.f90: New test.\n+\t* gfortran.dg/coarray/subobject_1.f90: New test.\n+\n 2011-10-18  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR rtl-optimization/50205"}, {"sha": "02536866b4db92519e8063dc0d6c91f137f28848", "filename": "gcc/testsuite/gfortran.dg/coarray/subobject_1.f90", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b688c0e01dfc54f3e5a77c2e76892ebb4dae43b/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fsubobject_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b688c0e01dfc54f3e5a77c2e76892ebb4dae43b/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fsubobject_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fsubobject_1.f90?ref=1b688c0e01dfc54f3e5a77c2e76892ebb4dae43b", "patch": "@@ -0,0 +1,43 @@\n+! { dg-do run }\n+!\n+! PR fortran/50420\n+! Coarray subobjects were not accepted as valid coarrays\n+\n+  integer  :: i\n+  integer, parameter :: la = 4, lb = 5, lc = 8\n+  integer, parameter :: init(la) = -4 + (/ (i, i=1,la) /)\n+  \n+  type t\n+    integer :: i\n+  end type t\n+  type t2\n+    type(t), allocatable :: a[:]\n+  end type t2\n+  type t3\n+    type(t), allocatable :: a(:)[:]\n+  end type t3\n+\n+  type(t2) :: b\n+  type(t3) :: c\n+\n+  allocate(b%a[lb:*])\n+  b%a%i = 7\n+  if (b%a%i /= 7) call abort\n+  if (any (lcobound(b%a) /= (/ lb /))) call abort\n+  if (ucobound(b%a, dim=1) /= this_image() + lb - 1) call abort\n+  if (any (lcobound(b%a%i) /= (/ lb /))) call abort\n+  if (ucobound(b%a%i, dim=1) /= this_image() + lb - 1) call abort\n+  allocate(c%a(la)[lc:*])\n+  c%a%i = init\n+  if (any(c%a%i /= init)) call abort\n+  if (any (lcobound(c%a) /= (/ lc /))) call abort\n+  if (ucobound(c%a, dim=1) /= this_image() + lc - 1) call abort\n+  if (any (lcobound(c%a%i) /= (/ lc /))) call abort\n+  if (ucobound(c%a%i, dim=1) /= this_image() + lc - 1) call abort\n+  if (c%a(2)%i /= init(2)) call abort\n+  if (any (lcobound(c%a(2)) /= (/ lc /))) call abort\n+  if (ucobound(c%a(2), dim=1) /= this_image() + lc - 1) call abort\n+  if (any (lcobound(c%a(2)%i) /= (/ lc /))) call abort\n+  if (ucobound(c%a(2)%i, dim=1) /= this_image() + lc - 1) call abort\n+  deallocate(b%a, c%a)\n+end"}, {"sha": "52c65e149b537cb4f913c1f02a71c51424445afd", "filename": "gcc/testsuite/gfortran.dg/coarray_subobject_1.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b688c0e01dfc54f3e5a77c2e76892ebb4dae43b/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_subobject_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b688c0e01dfc54f3e5a77c2e76892ebb4dae43b/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_subobject_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_subobject_1.f90?ref=1b688c0e01dfc54f3e5a77c2e76892ebb4dae43b", "patch": "@@ -0,0 +1,31 @@\n+! { dg-do compile }\n+! { dg-options \"-fcoarray=single\" }\n+!\n+! PR fortran/50420\n+! Coarray subobjects were not accepted as valid coarrays\n+! They should still be rejected if one of the component reference is allocatable\n+! or pointer\n+\n+type t\n+  integer :: i\n+end type t\n+type t2\n+  type(t), allocatable :: a\n+  type(t), pointer     :: c\n+end type t2\n+type(t2) :: b[5:*]\n+allocate(b%a)\n+allocate(b%c)\n+b%a%i = 7\n+b%c%i = 13\n+if (b%a%i /= 7) call abort\n+if (any (lcobound(b%a) /= (/ 5 /))) call abort             ! { dg-error \"Expected coarray variable\" }\n+if (ucobound(b%a, dim=1) /= this_image() + 4) call abort   ! { dg-error \"Expected coarray variable\" }\n+if (any (lcobound(b%a%i) /= (/ 5 /))) call abort           ! { dg-error \"Expected coarray variable\" }\n+if (ucobound(b%a%i, dim=1) /= this_image() + 4) call abort ! { dg-error \"Expected coarray variable\" }\n+if (b%c%i /= 13) call abort\n+if (any (lcobound(b%c) /= (/ 5 /))) call abort             ! { dg-error \"Expected coarray variable\" }\n+if (ucobound(b%c, dim=1) /= this_image() + 4) call abort   ! { dg-error \"Expected coarray variable\" }\n+if (any (lcobound(b%c%i) /= (/ 5 /))) call abort           ! { dg-error \"Expected coarray variable\" }\n+if (ucobound(b%c%i, dim=1) /= this_image() + 4) call abort ! { dg-error \"Expected coarray variable\" }\n+end"}]}