{"sha": "3102b57f3105a301e54d7dc0586eb8e2b1724891", "node_id": "C_kwDOANBUbNoAKDMxMDJiNTdmMzEwNWEzMDFlNTRkN2RjMDU4NmViOGUyYjE3MjQ4OTE", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-21T08:04:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-21T08:04:06Z"}, "message": "libstdc++: Don't call 4-5 argument to_chars with chars_format{}\n\nIn Fedora build libstdc++.so is built with assertions enabled and\nFAIL: 20_util/to_chars/float128_c++23.cc execution test\nwas failing on all arches.  The problem is that it called 5 argument version\nof to_chars with chars_format{}, which C++ says is invalid:\nhttp://eel.is/c++draft/charconv.to.chars#12\nPreconditions: fmt has the value of one of the enumerators of chars_format.\n\nThe following patch fixes it by skipping the second part of the test\nwhich needs the 5 argument to_chars for chars_format{}, but because\nit is strictly speaking invalid also for 4 argument to_chars, it uses\n3 argument to_chars instead of 4 argument to_chars with last argument\nchars_format{}.\n\n2022-12-21  Jakub Jelinek  <jakub@redhat.com>\n\n\t* testsuite/20_util/to_chars/float16_c++23.cc (test): Use 3 argument\n\tstd::to_chars if fmt is std::chars_format{}, rather than 4 argument.\n\t* testsuite/20_util/to_chars/float128_c++23.cc (test): Likewise, and\n\tskip second part of testing that requires 5 argument std::to_chars.", "tree": {"sha": "af1e5e2f4ddba0802b76d01374c9096bca48501c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af1e5e2f4ddba0802b76d01374c9096bca48501c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3102b57f3105a301e54d7dc0586eb8e2b1724891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3102b57f3105a301e54d7dc0586eb8e2b1724891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3102b57f3105a301e54d7dc0586eb8e2b1724891", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3102b57f3105a301e54d7dc0586eb8e2b1724891/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18fc70aa9c753d17c00211cea9fa5bd843fe94fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18fc70aa9c753d17c00211cea9fa5bd843fe94fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18fc70aa9c753d17c00211cea9fa5bd843fe94fd"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "32b328bbd7e0f3945e6120bd5b8744cd0276c978", "filename": "libstdc++-v3/testsuite/20_util/to_chars/float128_c++23.cc", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3102b57f3105a301e54d7dc0586eb8e2b1724891/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2Ffloat128_c%2B%2B23.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3102b57f3105a301e54d7dc0586eb8e2b1724891/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2Ffloat128_c%2B%2B23.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2Ffloat128_c%2B%2B23.cc?ref=3102b57f3105a301e54d7dc0586eb8e2b1724891", "patch": "@@ -60,7 +60,9 @@ test(std::chars_format fmt = std::chars_format{})\n   char str1[10000], str2[10000];\n   for (auto u : tests)\n     {\n-      auto [ptr1, ec1] = std::to_chars(str1, str1 + sizeof(str1), u, fmt);\n+      auto [ptr1, ec1] = (fmt == std::chars_format{}\n+\t\t\t  ? std::to_chars(str1, str1 + sizeof(str1), u)\n+\t\t\t  : std::to_chars(str1, str1 + sizeof(str1), u, fmt));\n       VERIFY( ec1 == std::errc() );\n //    std::cout << u << ' ' << std::string_view (str1, ptr1) << '\\n';\n       if (fmt == std::chars_format::fixed)\n@@ -77,13 +79,14 @@ test(std::chars_format fmt = std::chars_format{})\n       VERIFY( ec4 == std::errc() && ptr4 == ptr1 );\n       VERIFY( u == v );\n \n+      if (fmt == std::chars_format{})\n+\tcontinue;\n+\n       auto [ptr5, ec5] = std::to_chars(str1, str1 + sizeof(str1), u, fmt, 90);\n       VERIFY( ec5 == std::errc() );\n //    std::cout << u << ' ' << std::string_view (str1, ptr5) << '\\n';\n       v = 4.0f128;\n-      auto [ptr6, ec6] = std::from_chars(str1, ptr5, v,\n-\t\t\t\t\t fmt == std::chars_format{}\n-\t\t\t\t\t ? std::chars_format::general : fmt);\n+      auto [ptr6, ec6] = std::from_chars(str1, ptr5, v, fmt);\n       VERIFY( ec6 == std::errc() && ptr6 == ptr5 );\n       if (fmt == std::chars_format::fixed && u > 0.0f128 && u < 0.000001f128)\n \tVERIFY( v == 0.0 );"}, {"sha": "c51f802cf25f48577d0b574ecc51806b7244002a", "filename": "libstdc++-v3/testsuite/20_util/to_chars/float16_c++23.cc", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3102b57f3105a301e54d7dc0586eb8e2b1724891/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2Ffloat16_c%2B%2B23.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3102b57f3105a301e54d7dc0586eb8e2b1724891/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2Ffloat16_c%2B%2B23.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2Ffloat16_c%2B%2B23.cc?ref=3102b57f3105a301e54d7dc0586eb8e2b1724891", "patch": "@@ -36,9 +36,16 @@ test(std::chars_format fmt = std::chars_format{})\n   for (int i = 0; i <= (unsigned short) ~0; ++i)\n     {\n       u.s = i;\n-      auto [ptr1, ec1] = std::to_chars(str1, str1 + sizeof(str1), u.f, fmt);\n-      auto [ptr2, ec2] = std::to_chars(str2, str2 + sizeof(str2), std::float32_t(u.f), fmt);\n-      VERIFY( ec1 == std::errc() && ec2 == std::errc());\n+      auto [ptr1, ec1] = (fmt == std::chars_format{}\n+\t\t\t  ? std::to_chars(str1, str1 + sizeof(str1), u.f)\n+\t\t\t  : std::to_chars(str1, str1 + sizeof(str1), u.f,\n+\t\t\t\t\t  fmt));\n+      auto [ptr2, ec2] = (fmt == std::chars_format{}\n+\t\t\t  ? std::to_chars(str2, str2 + sizeof(str2),\n+\t\t\t\t\t  std::float32_t(u.f))\n+\t\t\t  : std::to_chars(str2, str2 + sizeof(str2),\n+\t\t\t\t\t  std::float32_t(u.f), fmt));\n+      VERIFY( ec1 == std::errc() && ec2 == std::errc() );\n //    std::cout << i << ' ' << std::string_view (str1, ptr1)\n //\t<< '\\t' << std::string_view (str2, ptr2) << '\\n';\n       if (fmt == std::chars_format::fixed)"}]}