{"sha": "97d17ac21c4835251b1b485584fafaa5b187968d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdkMTdhYzIxYzQ4MzUyNTFiMWI0ODU1ODRmYWZhYTViMTg3OTY4ZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-01-28T00:21:01Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-01-28T00:21:01Z"}, "message": "(declare_function_name): If char_array_type_node isn't large enough\nfor the name, make a larger type.\n\nFrom-SVN: r3368", "tree": {"sha": "be66600f445fa39265d1b3e4e6ab46e154f602c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be66600f445fa39265d1b3e4e6ab46e154f602c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97d17ac21c4835251b1b485584fafaa5b187968d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d17ac21c4835251b1b485584fafaa5b187968d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97d17ac21c4835251b1b485584fafaa5b187968d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d17ac21c4835251b1b485584fafaa5b187968d/comments", "author": null, "committer": null, "parents": [{"sha": "e15762df9d0d7f48680b2d839a3da37536461b1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e15762df9d0d7f48680b2d839a3da37536461b1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e15762df9d0d7f48680b2d839a3da37536461b1a"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "3c51f0bf7b5736a7f2ccc188e8696b19801fc4d5", "filename": "gcc/c-common.c", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d17ac21c4835251b1b485584fafaa5b187968d/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d17ac21c4835251b1b485584fafaa5b187968d/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=97d17ac21c4835251b1b485584fafaa5b187968d", "patch": "@@ -29,8 +29,9 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n void\n declare_function_name ()\n {\n-  tree decl, init;\n+  tree decl, type, init;\n   char *name, *printable_name;\n+  int len;\n \n   if (current_function_decl == NULL)\n     {\n@@ -50,29 +51,43 @@ declare_function_name ()\n       printable_name = (*decl_printable_name) (current_function_decl, &kind);\n     }\n \n+  /* If the default size of char arrays isn't big enough for the name,\n+     make a bigger one.  */\n+  len = strlen (name) + 1;\n+  type = char_array_type_node;\n+  if (TREE_INT_CST_LOW (TYPE_MAX_VALUE (TREE_TYPE (char_array_type_node)))\n+      < len)\n+    type = build_array_type (char_type_node,\n+\t\t\t     build_index_type (build_int_2 (len, 0)));\n+\n   push_obstacks_nochange ();\n-  decl = build_decl (VAR_DECL, get_identifier (\"__FUNCTION__\"),\n-\t\t     char_array_type_node);\n+  decl = build_decl (VAR_DECL, get_identifier (\"__FUNCTION__\"), type);\n   TREE_STATIC (decl) = 1;\n   TREE_READONLY (decl) = 1;\n   DECL_SOURCE_LINE (decl) = 0;\n   DECL_IN_SYSTEM_HEADER (decl) = 1;\n   DECL_IGNORED_P (decl) = 1;\n-  init = build_string (strlen (name) + 1, name);\n-  TREE_TYPE (init) = char_array_type_node;\n+  init = build_string (len, name);\n+  TREE_TYPE (init) = type;\n   DECL_INITIAL (decl) = init;\n   finish_decl (pushdecl (decl), init, NULL_TREE);\n \n+  len = strlen (printable_name) + 1;\n+  type = char_array_type_node;\n+  if (TREE_INT_CST_LOW (TYPE_MAX_VALUE (TREE_TYPE (char_array_type_node)))\n+      < len)\n+    type = build_array_type (char_type_node,\n+\t\t\t     build_index_type (build_int_2 (len, 0)));\n+\n   push_obstacks_nochange ();\n-  decl = build_decl (VAR_DECL, get_identifier (\"__PRETTY_FUNCTION__\"),\n-\t\t     char_array_type_node);\n+  decl = build_decl (VAR_DECL, get_identifier (\"__PRETTY_FUNCTION__\"), type);\n   TREE_STATIC (decl) = 1;\n   TREE_READONLY (decl) = 1;\n   DECL_SOURCE_LINE (decl) = 0;\n   DECL_IN_SYSTEM_HEADER (decl) = 1;\n   DECL_IGNORED_P (decl) = 1;\n-  init = build_string (strlen (printable_name) + 1, printable_name);\n-  TREE_TYPE (init) = char_array_type_node;\n+  init = build_string (len, printable_name);\n+  TREE_TYPE (init) = type;\n   DECL_INITIAL (decl) = init;\n   finish_decl (pushdecl (decl), init, NULL_TREE);\n }"}]}