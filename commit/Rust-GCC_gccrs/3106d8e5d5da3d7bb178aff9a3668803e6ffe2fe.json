{"sha": "3106d8e5d5da3d7bb178aff9a3668803e6ffe2fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEwNmQ4ZTVkNWRhM2Q3YmIxNzhhZmY5YTM2Njg4MDNlNmZmZTJmZQ==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2009-01-05T06:09:07Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2009-01-05T06:09:07Z"}, "message": "sparc.h (SECONDARY_MEMORY_NEEDED_RTX): Delete.\n\n\t* config/sparc/sparc.h (SECONDARY_MEMORY_NEEDED_RTX): Delete.\n\t(STARTING_FRAME_OFFSET): Always set to zero.\n\nFrom-SVN: r143069", "tree": {"sha": "198322903dbea5edf981cb77470ff623cb072828", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/198322903dbea5edf981cb77470ff623cb072828"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3106d8e5d5da3d7bb178aff9a3668803e6ffe2fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3106d8e5d5da3d7bb178aff9a3668803e6ffe2fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3106d8e5d5da3d7bb178aff9a3668803e6ffe2fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3106d8e5d5da3d7bb178aff9a3668803e6ffe2fe/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c94106c82f36f4a9af15a62b6b217128b69bc5c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c94106c82f36f4a9af15a62b6b217128b69bc5c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c94106c82f36f4a9af15a62b6b217128b69bc5c5"}], "stats": {"total": 21, "additions": 6, "deletions": 15}, "files": [{"sha": "4a0b9361e07e79fc569ee41494cdaf129f110bcc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3106d8e5d5da3d7bb178aff9a3668803e6ffe2fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3106d8e5d5da3d7bb178aff9a3668803e6ffe2fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3106d8e5d5da3d7bb178aff9a3668803e6ffe2fe", "patch": "@@ -1,3 +1,8 @@\n+2009-01-04  David S. Miller  <davem@davemloft.net>\n+\n+\t* config/sparc/sparc.h (SECONDARY_MEMORY_NEEDED_RTX): Delete.\n+\t(STARTING_FRAME_OFFSET): Always set to zero.\n+\n 2009-01-04  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* tree.def (LSHIFT_EXPR, RSHIFT_EXPR): Add commentary."}, {"sha": "bf279fad7967ce4e7ff51f13c6d6c303b3655221", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3106d8e5d5da3d7bb178aff9a3668803e6ffe2fe/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3106d8e5d5da3d7bb178aff9a3668803e6ffe2fe/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=3106d8e5d5da3d7bb178aff9a3668803e6ffe2fe", "patch": "@@ -1317,16 +1317,6 @@ extern char leaf_reg_remap[];\n #define SECONDARY_MEMORY_NEEDED(CLASS1, CLASS2, MODE) \\\n   (FP_REG_CLASS_P (CLASS1) != FP_REG_CLASS_P (CLASS2))\n \n-/* Return the stack location to use for secondary memory needed reloads.\n-   We want to use the reserved location just below the frame pointer.\n-   However, we must ensure that there is a frame, so use assign_stack_local\n-   if the frame size is zero.  */\n-#define SECONDARY_MEMORY_NEEDED_RTX(MODE) \\\n-  (get_frame_size () == 0\t\t\t\t\t\t\\\n-   ? assign_stack_local (MODE, GET_MODE_SIZE (MODE), 0)\t\t\t\\\n-   : gen_rtx_MEM (MODE, plus_constant (frame_pointer_rtx,\t\t\\\n-\t\t\t\t       STARTING_FRAME_OFFSET)))\n-\n /* Get_secondary_mem widens its argument to BITS_PER_WORD which loses on v9\n    because the movsi and movsf patterns don't handle r/f moves.\n    For v8 we copy the default definition.  */\n@@ -1362,11 +1352,7 @@ extern char leaf_reg_remap[];\n    If FRAME_GROWS_DOWNWARD, this is the offset to the END of the\n    first local allocated.  Otherwise, it is the offset to the BEGINNING\n    of the first local allocated.  */\n-/* This allows space for one TFmode floating point value, which is used\n-   by SECONDARY_MEMORY_NEEDED_RTX.  */\n-#define STARTING_FRAME_OFFSET \\\n-  (TARGET_ARCH64 ? -16 \\\n-   : (-SPARC_STACK_ALIGN (LONG_DOUBLE_TYPE_SIZE / BITS_PER_UNIT)))\n+#define STARTING_FRAME_OFFSET 0\n \n /* Offset of first parameter from the argument pointer register value.\n    !v9: This is 64 for the ins and locals, plus 4 for the struct-return reg"}]}