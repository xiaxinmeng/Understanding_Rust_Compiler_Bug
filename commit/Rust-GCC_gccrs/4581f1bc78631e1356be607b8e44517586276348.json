{"sha": "4581f1bc78631e1356be607b8e44517586276348", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU4MWYxYmM3ODYzMWUxMzU2YmU2MDdiOGU0NDUxNzU4NjI3NjM0OA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-10-11T18:11:03Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-10-11T18:11:03Z"}, "message": "ButtonPeer.java, [...]: Removed redundant modifiers.\n\n2003-10-11  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/peer/ButtonPeer.java,\n\tjava/awt/peer/CheckboxMenuItemPeer.java,\n\tjava/awt/peer/CheckboxPeer.java,\n\tjava/awt/peer/ChoicePeer.java,\n\tjava/awt/peer/ComponentPeer.java,\n\tjava/awt/peer/ContainerPeer.java,\n\tjava/awt/peer/DialogPeer.java,\n\tjava/awt/peer/FileDialogPeer.java,\n\tjava/awt/peer/FramePeer.java,\n\tjava/awt/peer/LabelPeer.java,\n\tjava/awt/peer/ListPeer.java,\n\tjava/awt/peer/MenuBarPeer.java,\n\tjava/awt/peer/MenuComponentPeer.java,\n\tjava/awt/peer/MenuItemPeer.java,\n\tjava/awt/peer/MenuPeer.java,\n\tjava/awt/peer/PopupMenuPeer.java,\n\tjava/awt/peer/RobotPeer.java,\n\tjava/awt/peer/ScrollPanePeer.java,\n\tjava/awt/peer/ScrollbarPeer.java,\n\tjava/awt/peer/TextAreaPeer.java,\n\tjava/awt/peer/TextComponentPeer.java,\n\tjava/awt/peer/TextFieldPeer.java,\n\tjava/awt/peer/WindowPeer.java:\n\tRemoved redundant modifiers.\n\nFrom-SVN: r72347", "tree": {"sha": "258ed36c57a0558c39177a0a547b2303d72a7536", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/258ed36c57a0558c39177a0a547b2303d72a7536"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4581f1bc78631e1356be607b8e44517586276348", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4581f1bc78631e1356be607b8e44517586276348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4581f1bc78631e1356be607b8e44517586276348", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4581f1bc78631e1356be607b8e44517586276348/comments", "author": null, "committer": null, "parents": [{"sha": "1b2bfbc218abba92181ad9287deea23209481bca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b2bfbc218abba92181ad9287deea23209481bca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b2bfbc218abba92181ad9287deea23209481bca"}], "stats": {"total": 357, "additions": 205, "deletions": 152}, "files": [{"sha": "6dae033181b7e42d6144fe734593da52da5e2447", "filename": "libjava/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -1,3 +1,30 @@\n+2003-10-11  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/peer/ButtonPeer.java,\n+\tjava/awt/peer/CheckboxMenuItemPeer.java,\n+\tjava/awt/peer/CheckboxPeer.java,\n+\tjava/awt/peer/ChoicePeer.java,\n+\tjava/awt/peer/ComponentPeer.java,\n+\tjava/awt/peer/ContainerPeer.java,\n+\tjava/awt/peer/DialogPeer.java,\n+\tjava/awt/peer/FileDialogPeer.java,\n+\tjava/awt/peer/FramePeer.java,\n+\tjava/awt/peer/LabelPeer.java,\n+\tjava/awt/peer/ListPeer.java,\n+\tjava/awt/peer/MenuBarPeer.java,\n+\tjava/awt/peer/MenuComponentPeer.java,\n+\tjava/awt/peer/MenuItemPeer.java,\n+\tjava/awt/peer/MenuPeer.java,\n+\tjava/awt/peer/PopupMenuPeer.java,\n+\tjava/awt/peer/RobotPeer.java,\n+\tjava/awt/peer/ScrollPanePeer.java,\n+\tjava/awt/peer/ScrollbarPeer.java,\n+\tjava/awt/peer/TextAreaPeer.java,\n+\tjava/awt/peer/TextComponentPeer.java,\n+\tjava/awt/peer/TextFieldPeer.java,\n+\tjava/awt/peer/WindowPeer.java:\n+\tRemoved redundant modifiers.\n+\n 2003-10-11  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/nio/NIOSocket.java (setChannel): Initialize impl."}, {"sha": "42eabc853a89b56857bebc3a638066f4041818bf", "filename": "libjava/java/awt/peer/ButtonPeer.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FButtonPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FButtonPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FButtonPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -40,6 +40,7 @@\n \n public interface ButtonPeer extends ComponentPeer\n {\n-  public void setLabel(String label);\n+  void setLabel (String label);\n+  \n } // interface ButtonPeer\n "}, {"sha": "f791d389ef3849a5cab3aef9c0ca078689e535bf", "filename": "libjava/java/awt/peer/CheckboxMenuItemPeer.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FCheckboxMenuItemPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FCheckboxMenuItemPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FCheckboxMenuItemPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -40,6 +40,7 @@\n \n public interface CheckboxMenuItemPeer extends MenuItemPeer\n {\n-  public void setState(boolean state);\n+  void setState (boolean state);\n+  \n } // interface CheckboxMenuItemPeer\n "}, {"sha": "ad245be58f1ebd4ac5d28c78cc06434bade3e581", "filename": "libjava/java/awt/peer/CheckboxPeer.java", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FCheckboxPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FCheckboxPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FCheckboxPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -38,10 +38,15 @@\n \n package java.awt.peer;\n \n+import java.awt.CheckboxGroup;\n+\n public interface CheckboxPeer extends ComponentPeer\n {\n-  public void setCheckboxGroup(java.awt.CheckboxGroup group);\n-  public void setLabel(String label);\n-  public void setState(boolean state);\n+  void setCheckboxGroup (CheckboxGroup group);\n+\n+  void setLabel (String label);\n+\n+  void setState (boolean state);\n+\n } // interface CheckboxPeer\n "}, {"sha": "c4a4cc010b01103da8f982a08e6b1ec4649df5c6", "filename": "libjava/java/awt/peer/ChoicePeer.java", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FChoicePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FChoicePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FChoicePeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -40,10 +40,15 @@\n \n public interface ChoicePeer extends ComponentPeer\n {\n-  public void add(String item, int index);\n-  public void addItem(String item, int index);\n-  public void remove(int index);\n-  public void removeAll();\n-  public void select(int index);  \n+  void add (String item, int index);\n+\n+  void addItem (String item, int index);\n+\n+  void remove (int index);\n+\n+  void removeAll();\n+\n+  void select (int index);  \n+\n } // interface ChoicePeer \n "}, {"sha": "077690433e947652fb8b5569d8fe969c508b8baa", "filename": "libjava/java/awt/peer/ComponentPeer.java", "status": "modified", "additions": 50, "deletions": 47, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FComponentPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -39,7 +39,10 @@\n package java.awt.peer;\n \n import java.awt.AWTEvent;\n+import java.awt.AWTException;\n+import java.awt.BufferCapabilities;\n import java.awt.Color;\n+import java.awt.Component;\n import java.awt.Cursor;\n import java.awt.Dimension;\n import java.awt.Font;\n@@ -57,79 +60,79 @@\n \n public interface ComponentPeer\n {\n-  public int checkImage(Image img, int width, int height, \n-\t\t\tImageObserver ob);\n-  public Image createImage(ImageProducer prod);\n-  public Image createImage(int width, int height);\n-  public void disable();\n-  public void dispose();\n-  public void enable();\n-  public ColorModel getColorModel();\n-  public FontMetrics getFontMetrics(Font f);\n-  public Graphics getGraphics();\n-  public Point getLocationOnScreen();\n-  public Dimension getMinimumSize();\n-  public Dimension getPreferredSize();\n-  public Toolkit getToolkit();\n-  public void handleEvent(AWTEvent e);\n-  public void hide();\n+  int checkImage(Image img, int width, int height, \n+\t\t ImageObserver ob);\n+  Image createImage(ImageProducer prod);\n+  Image createImage(int width, int height);\n+  void disable();\n+  void dispose();\n+  void enable();\n+  ColorModel getColorModel();\n+  FontMetrics getFontMetrics(Font f);\n+  Graphics getGraphics();\n+  Point getLocationOnScreen();\n+  Dimension getMinimumSize();\n+  Dimension getPreferredSize();\n+  Toolkit getToolkit();\n+  void handleEvent(AWTEvent e);\n+  void hide();\n \n   /**\n    * Part of the earlier 1.1 API, replaced by isFocusable().\n    */\n-  public boolean isFocusTraversable();\n-  public boolean isFocusable();\n-  public Dimension minimumSize();\n-  public Dimension preferredSize();\n-  public void paint(Graphics graphics);\n-  public boolean prepareImage(Image img, int width, int height,\n+  boolean isFocusTraversable();\n+  boolean isFocusable();\n+  Dimension minimumSize();\n+  Dimension preferredSize();\n+  void paint(Graphics graphics);\n+  boolean prepareImage(Image img, int width, int height,\n \t\t\t      ImageObserver ob);\n-  public void print(Graphics graphics);\n-  public void repaint(long tm, int x, int y, int width, int height);\n+  void print(Graphics graphics);\n+  void repaint(long tm, int x, int y, int width, int height);\n \n   /**\n    * Part of the earlier 1.1 API, apparently replaced by argument \n    * form of the same method.\n    */\n-  public void requestFocus();\n-  public boolean requestFocus(java.awt.Component source, boolean bool1, boolean bool2, long x);\n+  void requestFocus();\n+  boolean requestFocus (Component source, boolean bool1, boolean bool2, long x);\n \n-  public void reshape(int x, int y, int width, int height);\n-  public void setBackground(Color color);\n-  public void setBounds(int x, int y, int width, int height);\n+  void reshape(int x, int y, int width, int height);\n+  void setBackground(Color color);\n+  void setBounds(int x, int y, int width, int height);\n \n   /**\n    * Part of the earlier 1.1 API, apparently no longer needed.\n    */\n-  public void setCursor(Cursor cursor);\n+  void setCursor(Cursor cursor);\n \n-  public void setEnabled(boolean enabled);\n-  public void setFont(Font font);\n-  public void setForeground(Color color);\n-  public void setVisible(boolean visible);\n-  public void show();\n+  void setEnabled(boolean enabled);\n+  void setFont(Font font);\n+  void setForeground(Color color);\n+  void setVisible(boolean visible);\n+  void show();\n \n   /** \n    * Get the graphics configuration of the component. The color model\n    * of the component can be derived from the configuration.\n    */\n-  public GraphicsConfiguration getGraphicsConfiguration();\n+  GraphicsConfiguration getGraphicsConfiguration();\n \n   /**\n    * Part of an older API, no longer needed.\n    */\n-  public void setEventMask (long mask);\n+  void setEventMask (long mask);\n \n   // Methods below are introduced since 1.1\n-  public boolean isObscured();\n-  public boolean canDetermineObscurity();\n-  public void coalescePaintEvent(PaintEvent e);\n-  public void updateCursorImmediately();\n-  public VolatileImage createVolatileImage(int width, int height);\n-  public boolean handlesWheelScrolling();\n-  public void createBuffers(int x, java.awt.BufferCapabilities capabilities) throws java.awt.AWTException;\n-  public java.awt.Image getBackBuffer();\n-  public void flip(java.awt.BufferCapabilities.FlipContents contents);\n-  public void destroyBuffers();\n+  boolean isObscured();\n+  boolean canDetermineObscurity();\n+  void coalescePaintEvent(PaintEvent e);\n+  void updateCursorImmediately();\n+  VolatileImage createVolatileImage(int width, int height);\n+  boolean handlesWheelScrolling();\n+  void createBuffers(int x, BufferCapabilities capabilities) throws AWTException;\n+  Image getBackBuffer();\n+  void flip(BufferCapabilities.FlipContents contents);\n+  void destroyBuffers();\n   \n }"}, {"sha": "f06fe2fc54ac0bfb496bf8fc77024d6cce55c609", "filename": "libjava/java/awt/peer/ContainerPeer.java", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FContainerPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FContainerPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FContainerPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -41,12 +41,19 @@\n \n public interface ContainerPeer extends ComponentPeer\n {\n-  public Insets insets();\n-  public Insets getInsets();\n-  public void beginValidate();\n-  public void endValidate();\n-  public void beginLayout();\n-  public void endLayout();\n-  public boolean isPaintPending();\n+  Insets insets();\n+\n+  Insets getInsets();\n+\n+  void beginValidate();\n+\n+  void endValidate();\n+\n+  void beginLayout();\n+\n+  void endLayout();\n+\n+  boolean isPaintPending();\n+\n } // interface ContainerPeer \n "}, {"sha": "86d5dcd163b6a5381852cad814042da5166b37d4", "filename": "libjava/java/awt/peer/DialogPeer.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FDialogPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -40,7 +40,9 @@\n \n public interface DialogPeer extends WindowPeer\n {\n-  public void setResizable(boolean resizeable);\n-  public void setTitle(String title);\n+  void setResizable (boolean resizeable);\n+\n+  void setTitle (String title);\n+\n } // interface DialogPeer \n "}, {"sha": "cfce64211100129c4b040df9850bd4944ec44d15", "filename": "libjava/java/awt/peer/FileDialogPeer.java", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FFileDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FFileDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FFileDialogPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -42,8 +42,11 @@\n \n public interface FileDialogPeer extends DialogPeer\n {\n-  public void setFile(String file);\n-  public void setDirectory(String dir);\n-  public void setFilenameFilter(FilenameFilter ff);\n+  void setFile (String file);\n+\n+  void setDirectory (String dir);\n+\n+  void setFilenameFilter (FilenameFilter ff);\n+\n } // interface FileDialogPeer \n "}, {"sha": "4d1af2bdd089460b013c339293170414d51faa8a", "filename": "libjava/java/awt/peer/FramePeer.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FFramePeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -44,12 +44,12 @@\n \n public interface FramePeer extends WindowPeer\n {\n-  public void setIconImage(Image image);\n-  public void setMenuBar(MenuBar mb);\n-  public void setResizable(boolean resizable);\n-  public void setTitle(String title);\n-  public int getState();\n-  public void setState(int state);\n-  public void setMaximizedBounds(Rectangle r);\n+  void setIconImage(Image image);\n+  void setMenuBar(MenuBar mb);\n+  void setResizable(boolean resizable);\n+  void setTitle(String title);\n+  int getState();\n+  void setState(int state);\n+  void setMaximizedBounds(Rectangle r);\n } // interface FramePeer\n "}, {"sha": "3020bc6107227bc51c2ee14314d4afe62ddb746a", "filename": "libjava/java/awt/peer/LabelPeer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FLabelPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FLabelPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FLabelPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -40,7 +40,7 @@\n \n public interface LabelPeer extends ComponentPeer\n {\n-  public void setAlignment(int alignment);\n-  public void setText(String text);\n+  void setAlignment(int alignment);\n+  void setText(String text);\n } // interface LabelPeer \n "}, {"sha": "f1c2dfe414e31366b0baa155f2fe636503b85c7a", "filename": "libjava/java/awt/peer/ListPeer.java", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FListPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FListPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FListPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -42,21 +42,20 @@\n \n public interface ListPeer extends ComponentPeer\n {\n-  \n-  public void add(String item, int index);\n-  public void addItem(String item, int index);\n-  public void clear();\n-  public void delItems(int start_index, int end_index);\n-  public void deselect(int index);\n-  public int[] getSelectedIndexes();\n-  public void makeVisible(int index);\n-  public Dimension minimumSize(int s);\n-  public Dimension preferredSize(int s);\n-  public void removeAll();\n-  public void select(int index);\n-  public void setMultipleMode(boolean multi);\n-  public void setMultipleSelections(boolean multi);\n-  public Dimension getPreferredSize(int s);\n-  public Dimension getMinimumSize(int s);\n+  void add(String item, int index);\n+  void addItem(String item, int index);\n+  void clear();\n+  void delItems(int start_index, int end_index);\n+  void deselect(int index);\n+  int[] getSelectedIndexes();\n+  void makeVisible(int index);\n+  Dimension minimumSize(int s);\n+  Dimension preferredSize(int s);\n+  void removeAll();\n+  void select(int index);\n+  void setMultipleMode(boolean multi);\n+  void setMultipleSelections(boolean multi);\n+  Dimension getPreferredSize(int s);\n+  Dimension getMinimumSize(int s);\n } // interface ListPeer \n "}, {"sha": "38f57ecdbb43fe290afd03695db30949f9d3bb11", "filename": "libjava/java/awt/peer/MenuBarPeer.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FMenuBarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FMenuBarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FMenuBarPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -42,8 +42,8 @@\n \n public interface MenuBarPeer extends MenuComponentPeer\n {\n-  public void addHelpMenu(Menu menu);\n-  public void addMenu(Menu menu);\n-  public void delMenu(int index);\n+  void addHelpMenu(Menu menu);\n+  void addMenu(Menu menu);\n+  void delMenu(int index);\n } // interface MenuBarPeer \n "}, {"sha": "ebc21b6b8b0ccf44760c67a7a95ad7f533132419", "filename": "libjava/java/awt/peer/MenuComponentPeer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FMenuComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FMenuComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FMenuComponentPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -40,6 +40,6 @@\n \n public interface MenuComponentPeer\n {\n-  public void dispose();\n+  void dispose();\n } // interface MenuComponentPeer\n "}, {"sha": "e34c2e733b598c3ab72b133e255775bf06956a46", "filename": "libjava/java/awt/peer/MenuItemPeer.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FMenuItemPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FMenuItemPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FMenuItemPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -40,9 +40,9 @@\n \n public interface MenuItemPeer extends MenuComponentPeer\n {\n-  public void disable();\n-  public void enable();\n-  public void setEnabled(boolean enabled);\n-  public void setLabel(String text);\n+  void disable();\n+  void enable();\n+  void setEnabled(boolean enabled);\n+  void setLabel(String text);\n } // interface MenuItemPeer \n "}, {"sha": "67f213fda036d41ab64de78b63094b0cb001d856", "filename": "libjava/java/awt/peer/MenuPeer.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FMenuPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FMenuPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FMenuPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -42,8 +42,8 @@\n \n public interface MenuPeer extends MenuItemPeer\n {\n-  public void addItem (MenuItem item);\n-  public void addSeparator ();\n-  public void delItem (int index);\n+  void addItem (MenuItem item);\n+  void addSeparator ();\n+  void delItem (int index);\n }\n "}, {"sha": "bb8202ef7329b8d86655467a0cdbe42d24c1fa7a", "filename": "libjava/java/awt/peer/PopupMenuPeer.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FPopupMenuPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FPopupMenuPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FPopupMenuPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -43,11 +43,11 @@\n \n public interface PopupMenuPeer extends MenuPeer\n {\n-  \n   /**\n    * Part of the older API, replaced by event version instead.\n    */\n-  public void show (Component origin, int x, int y);\n-  public void show (Event e);\n+  void show (Component origin, int x, int y);\n+\n+  void show (Event e);\n } // interface PopupMenuPeer\n "}, {"sha": "2daa14d5e117b560344e6267cd520f492d8166a4", "filename": "libjava/java/awt/peer/RobotPeer.java", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FRobotPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FRobotPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FRobotPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -42,13 +42,13 @@\n \n public interface RobotPeer\n {\n-  public void mouseMove (int x, int y);\n-  public void mousePress (int x);\n-  public void mouseRelease (int x);\n-  public void mouseWheel (int x);\n-  public void keyPress (int x);\n-  public void keyRelease (int x);\n-  public int getRGBPixel (int x, int y);\n-  public int[] getRGBPixels (Rectangle r);\n+  void mouseMove (int x, int y);\n+  void mousePress (int x);\n+  void mouseRelease (int x);\n+  void mouseWheel (int x);\n+  void keyPress (int x);\n+  void keyRelease (int x);\n+  int getRGBPixel (int x, int y);\n+  int[] getRGBPixels (Rectangle r);\n } // interface RobotPeer\n "}, {"sha": "a81b91f111235661eabf016e50958291e3297df2", "filename": "libjava/java/awt/peer/ScrollPanePeer.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FScrollPanePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FScrollPanePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FScrollPanePeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -42,11 +42,11 @@\n \n public interface ScrollPanePeer extends ContainerPeer\n {\n-  public int getHScrollbarHeight();\n-  public int getVScrollbarWidth();\n-  public void setScrollPosition(int h, int v);\n-  public void childResized(int width, int height);\n-  public void setUnitIncrement(Adjustable item, int inc);\n-  public void setValue(Adjustable item, int value);\n+  int getHScrollbarHeight();\n+  int getVScrollbarWidth();\n+  void setScrollPosition(int h, int v);\n+  void childResized(int width, int height);\n+  void setUnitIncrement(Adjustable item, int inc);\n+  void setValue(Adjustable item, int value);\n } // interface ScollPanePeer\n "}, {"sha": "fc8c54ffd3bfcf1559fd1e5f6fc53d0487461e5e", "filename": "libjava/java/awt/peer/ScrollbarPeer.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FScrollbarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FScrollbarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FScrollbarPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -40,8 +40,8 @@\n \n public interface ScrollbarPeer extends ComponentPeer\n {\n-  public void setLineIncrement(int inc);\n-  public void setPageIncrement(int inc);\n-  public void setValues(int value, int visible, int min, int max);\n+  void setLineIncrement(int inc);\n+  void setPageIncrement(int inc);\n+  void setValues(int value, int visible, int min, int max);\n } // interface ScrollbarPeer \n "}, {"sha": "2500914a1ca90a1de3472790be5d0ab3a693fdae", "filename": "libjava/java/awt/peer/TextAreaPeer.java", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FTextAreaPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FTextAreaPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FTextAreaPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -42,12 +42,12 @@\n \n public interface TextAreaPeer extends TextComponentPeer\n {\n-  public void insert(String text, int pos);\n-  public void insertText(String text, int pos);\n-  public Dimension minimumSize(int rows, int cols);\n-  public Dimension getMinimumSize(int rows, int cols);\n-  public Dimension preferredSize(int rows, int cols);\n-  public Dimension getPreferredSize(int rows, int cols);\n-  public void replaceRange(String text, int start_pos, int end_pos);\n-  public void replaceText(String text, int start_pos, int end_pos);\n+  void insert(String text, int pos);\n+  void insertText(String text, int pos);\n+  Dimension minimumSize(int rows, int cols);\n+  Dimension getMinimumSize(int rows, int cols);\n+  Dimension preferredSize(int rows, int cols);\n+  Dimension getPreferredSize(int rows, int cols);\n+  void replaceRange(String text, int start_pos, int end_pos);\n+  void replaceText(String text, int start_pos, int end_pos);\n } // interface TextAreaPeer"}, {"sha": "62a2f420613ca8762ea45ad242b1063dd6cf96ba", "filename": "libjava/java/awt/peer/TextComponentPeer.java", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FTextComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FTextComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FTextComponentPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -42,16 +42,16 @@\n \n public interface TextComponentPeer extends ComponentPeer\n {\n-  public int getSelectionEnd();\n-  public int getSelectionStart();\n-  public String getText();\n-  public void setText(String text);\n-  public void select(int start_pos, int end_pos);\n-  public void setEditable(boolean editable);\n-  public int getCaretPosition();\n-  public void setCaretPosition(int pos);\n-  public int getIndexAtPoint(int x, int y);\n-  public Rectangle getCharacterBounds(int pos);\n-  public long filterEvents(long filter);\n+  int getSelectionEnd();\n+  int getSelectionStart();\n+  String getText();\n+  void setText(String text);\n+  void select(int start_pos, int end_pos);\n+  void setEditable(boolean editable);\n+  int getCaretPosition();\n+  void setCaretPosition(int pos);\n+  int getIndexAtPoint(int x, int y);\n+  Rectangle getCharacterBounds(int pos);\n+  long filterEvents(long filter);\n } // interface TextComponentPeer \n "}, {"sha": "a29bb55340e67a8c775a03c9852eb8666481cdc2", "filename": "libjava/java/awt/peer/TextFieldPeer.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FTextFieldPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FTextFieldPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FTextFieldPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -42,11 +42,11 @@\n \n public interface TextFieldPeer extends TextComponentPeer\n {\n-  public Dimension minimumSize(int len);\n-  public Dimension preferredSize(int len);\n-  public Dimension getMinimumSize(int len);\n-  public Dimension getPreferredSize(int len);\n-  public void setEchoChar(char echo_char);\n-  public void setEchoCharacter(char echo_char);  \n+  Dimension minimumSize(int len);\n+  Dimension preferredSize(int len);\n+  Dimension getMinimumSize(int len);\n+  Dimension getPreferredSize(int len);\n+  void setEchoChar(char echo_char);\n+  void setEchoCharacter(char echo_char);  \n } // interface TextFieldPeer \n "}, {"sha": "c98b1dacc1cdabcaa6b56a0099a2e3b07a6700a4", "filename": "libjava/java/awt/peer/WindowPeer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4581f1bc78631e1356be607b8e44517586276348/libjava%2Fjava%2Fawt%2Fpeer%2FWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FWindowPeer.java?ref=4581f1bc78631e1356be607b8e44517586276348", "patch": "@@ -40,7 +40,7 @@\n \n public interface WindowPeer extends ContainerPeer\n {\n-  public void toBack();\n-  public void toFront();\n+  void toBack();\n+  void toFront();\n } // interface WindowPeer \n "}]}