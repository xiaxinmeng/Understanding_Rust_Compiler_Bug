{"sha": "18802917af53a9423fe496aa68cf6c2aa67f8ca9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg4MDI5MTdhZjUzYTk0MjNmZTQ5NmFhNjhjZjZjMmFhNjdmOGNhOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2008-09-09T21:41:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2008-09-09T21:41:58Z"}, "message": "re PR c++/37439 (ICE using auto return-type in template function)\n\n        PR c++/37439\n        * pt.c (tsubst_copy) [PARM_DECL]: Don't abort if the parm has\n        DECL_CONTEXT set.\n\nFrom-SVN: r140176", "tree": {"sha": "c9d38611b6899084054743883bcdac7c4b2b8b22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9d38611b6899084054743883bcdac7c4b2b8b22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18802917af53a9423fe496aa68cf6c2aa67f8ca9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18802917af53a9423fe496aa68cf6c2aa67f8ca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18802917af53a9423fe496aa68cf6c2aa67f8ca9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18802917af53a9423fe496aa68cf6c2aa67f8ca9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07ebe945c734b0c9c4bee05ca6186c7e052e3a4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07ebe945c734b0c9c4bee05ca6186c7e052e3a4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07ebe945c734b0c9c4bee05ca6186c7e052e3a4e"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "9760ccfca040ecdfa56be47339d327d1f955cb64", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18802917af53a9423fe496aa68cf6c2aa67f8ca9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18802917af53a9423fe496aa68cf6c2aa67f8ca9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=18802917af53a9423fe496aa68cf6c2aa67f8ca9", "patch": "@@ -1,3 +1,9 @@\n+2008-09-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/37439\n+\t* pt.c (tsubst_copy) [PARM_DECL]: Don't abort if the parm has\n+\tDECL_CONTEXT set.\n+\n 2008-09-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/37389"}, {"sha": "cdaae59914e2792898a8c9f1d5a69bd3053de9b8", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18802917af53a9423fe496aa68cf6c2aa67f8ca9/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18802917af53a9423fe496aa68cf6c2aa67f8ca9/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=18802917af53a9423fe496aa68cf6c2aa67f8ca9", "patch": "@@ -9809,7 +9809,7 @@ tsubst_copy (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t     Replace it with an arbitrary expression with the same type\n \t     (*(T*)0).  This should only occur in an unevaluated context\n \t     (i.e. decltype).  */\n-\t  gcc_assert (skip_evaluation && DECL_CONTEXT (t) == NULL_TREE);\n+\t  gcc_assert (skip_evaluation);\n \t  r = non_reference (TREE_TYPE (t));\n \t  r = tsubst (r, args, complain, in_decl);\n \t  r = build_pointer_type (r);"}, {"sha": "713583a1a48ab1082197e4c8731bf74ad66c58ba", "filename": "gcc/testsuite/g++.dg/cpp0x/auto6.C", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18802917af53a9423fe496aa68cf6c2aa67f8ca9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18802917af53a9423fe496aa68cf6c2aa67f8ca9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto6.C?ref=18802917af53a9423fe496aa68cf6c2aa67f8ca9", "patch": "@@ -6,7 +6,10 @@ auto f() -> int\n }\n \n template<class T, class U>\n-auto add(T t, U u) -> decltype (t+u);\n+auto add(T t, U u) -> decltype (t+u)\n+{\n+  return t+u;\n+}\n \n template<class T, class U>\n decltype(T()+U()) add2(T t, U u);"}]}