{"sha": "5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM4Y2ViZTdkNmFjYjQ3ODMwOWQ2ZTAzZmQ0ZGY3ZTA1ZDFiMGYxZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-02-16T12:01:23Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-02-16T12:01:23Z"}, "message": "re PR tree-optimization/84417 (internal compiler error: verify_gimple failed)\n\n2018-02-16  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/84417\n\t* tree-ssa.c (non_rewritable_mem_ref_base): Properly constrain\n\tthe MEM_REF offset when conversion to BIT_FIELD_REF is desired.\n\t(non_rewritable_lvalue_p): Likewise, use poly-ints.\n\n\t* gcc.dg/torture/pr84417.c: New testcase.\n\nFrom-SVN: r257731", "tree": {"sha": "1cdeff7b2f6541e3ca45316fdd9e7ab725a954ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cdeff7b2f6541e3ca45316fdd9e7ab725a954ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95df04335bea92a715501271ad7d854e854706b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95df04335bea92a715501271ad7d854e854706b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95df04335bea92a715501271ad7d854e854706b3"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "c43637aac5e6d2a343fc341e92373ca76c4bacff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e", "patch": "@@ -1,3 +1,10 @@\n+2018-02-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84417\n+\t* tree-ssa.c (non_rewritable_mem_ref_base): Properly constrain\n+\tthe MEM_REF offset when conversion to BIT_FIELD_REF is desired.\n+\t(non_rewritable_lvalue_p): Likewise, use poly-ints.\n+\n 2018-02-16  Martin Liska  <mliska@suse.cz>\n \n \tPR sanitizer/84307"}, {"sha": "2d98e2e80249c0f6e58440b4672004431f229dc4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e", "patch": "@@ -1,3 +1,8 @@\n+2018-02-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84417\n+\t* gcc.dg/torture/pr84417.c: New testcase.\n+\n 2018-02-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/84272"}, {"sha": "9c2b023254b675927d1cbec695f272b9d0a6d883", "filename": "gcc/testsuite/gcc.dg/torture/pr84417.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr84417.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr84417.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr84417.c?ref=5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target int32plus } */\n+\n+void fn1()\n+{\n+  __attribute__((__vector_size__(sizeof(double)))) double x;\n+  double *a = (double *)&x;\n+  *a + *(a + 8446744073709551615LL);\n+}"}, {"sha": "d197f99bdd231e0e7a1eab12b158920150596834", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=5c8cebe7d6acb478309d6e03fd4df7e05d1b0f1e", "patch": "@@ -1434,6 +1434,7 @@ non_rewritable_mem_ref_base (tree ref)\n \t   || TREE_CODE (TREE_TYPE (decl)) == COMPLEX_TYPE)\n \t  && useless_type_conversion_p (TREE_TYPE (base),\n \t\t\t\t\tTREE_TYPE (TREE_TYPE (decl)))\n+\t  && known_ge (mem_ref_offset (base), 0)\n \t  && known_gt (wi::to_poly_offset (TYPE_SIZE_UNIT (TREE_TYPE (decl))),\n \t\t       mem_ref_offset (base))\n \t  && multiple_of_p (sizetype, TREE_OPERAND (base, 1),\n@@ -1516,11 +1517,11 @@ non_rewritable_lvalue_p (tree lhs)\n \t  && TYPE_MODE (TREE_TYPE (decl)) != BLKmode\n \t  && operand_equal_p (TYPE_SIZE_UNIT (TREE_TYPE (lhs)),\n \t\t\t      TYPE_SIZE_UNIT (TREE_TYPE (TREE_TYPE (decl))), 0)\n-\t  && tree_fits_uhwi_p (TREE_OPERAND (lhs, 1))\n-\t  && tree_int_cst_lt (TREE_OPERAND (lhs, 1),\n-\t\t\t      TYPE_SIZE_UNIT (TREE_TYPE (decl)))\n-\t  && (tree_to_uhwi (TREE_OPERAND (lhs, 1))\n-\t      % tree_to_uhwi (TYPE_SIZE_UNIT (TREE_TYPE (lhs)))) == 0)\n+\t  && known_ge (mem_ref_offset (lhs), 0)\n+\t  && known_gt (wi::to_poly_offset (TYPE_SIZE_UNIT (TREE_TYPE (decl))),\n+\t\t       mem_ref_offset (lhs))\n+\t  && multiple_of_p (sizetype, TREE_OPERAND (lhs, 1),\n+\t\t\t    TYPE_SIZE_UNIT (TREE_TYPE (lhs))))\n \treturn false;\n     }\n "}]}