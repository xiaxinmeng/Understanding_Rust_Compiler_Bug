{"sha": "98c18e040e2c65db93f1498bb421e83165da3738", "node_id": "C_kwDOANBUbNoAKDk4YzE4ZTA0MGUyYzY1ZGI5M2YxNDk4YmI0MjFlODMxNjVkYTM3Mzg", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-06-29T16:27:08Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-06-29T16:27:08Z"}, "message": "d: Fix build on aarch64-suse-linux\n\nThe variables being used to get the result out of TYPE_VECTOR_SUBPARTS\nwere being flagged by -Werror=maybe-uninitialized.  As they have already\nbeen checked for being constant earlier, use `to_constant' instead.\n\ngcc/d/ChangeLog:\n\n\t* intrinsics.cc (build_shuffle_mask_type): Use to_constant when\n\tgetting the number of subparts from a vector type.\n\t(expand_intrinsic_vec_shufflevector): Likewise.", "tree": {"sha": "83f955f9ea1042cbd90383a8025c9ec42c08f867", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83f955f9ea1042cbd90383a8025c9ec42c08f867"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98c18e040e2c65db93f1498bb421e83165da3738", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c18e040e2c65db93f1498bb421e83165da3738", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98c18e040e2c65db93f1498bb421e83165da3738", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c18e040e2c65db93f1498bb421e83165da3738/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b01c075e7e6d84da846c2ff9087433a30ebeb0d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b01c075e7e6d84da846c2ff9087433a30ebeb0d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b01c075e7e6d84da846c2ff9087433a30ebeb0d2"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "75d431869096bbcee3d459fdfc90dd548b75225c", "filename": "gcc/d/intrinsics.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c18e040e2c65db93f1498bb421e83165da3738/gcc%2Fd%2Fintrinsics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c18e040e2c65db93f1498bb421e83165da3738/gcc%2Fd%2Fintrinsics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fintrinsics.cc?ref=98c18e040e2c65db93f1498bb421e83165da3738", "patch": "@@ -273,8 +273,7 @@ build_shuffle_mask_type (tree type)\n      printed (this should really be handled by a D tree printer).  */\n   Type *t = build_frontend_type (inner);\n   gcc_assert (t != NULL);\n-  unsigned HOST_WIDE_INT nunits;\n-  TYPE_VECTOR_SUBPARTS (type).is_constant (&nunits);\n+  unsigned HOST_WIDE_INT nunits = TYPE_VECTOR_SUBPARTS (type).to_constant ();\n \n   return build_ctype (TypeVector::create (t->sarrayOf (nunits)));\n }\n@@ -1190,9 +1189,10 @@ expand_intrinsic_vec_shufflevector (tree callexp)\n   tree vec0 = CALL_EXPR_ARG (callexp, 0);\n   tree vec1 = CALL_EXPR_ARG (callexp, 1);\n \n-  unsigned HOST_WIDE_INT v0elems, v1elems;\n-  TYPE_VECTOR_SUBPARTS (TREE_TYPE (vec0)).is_constant (&v0elems);\n-  TYPE_VECTOR_SUBPARTS (TREE_TYPE (vec1)).is_constant (&v1elems);\n+  unsigned HOST_WIDE_INT v0elems =\n+    TYPE_VECTOR_SUBPARTS (TREE_TYPE (vec0)).to_constant ();\n+  unsigned HOST_WIDE_INT v1elems =\n+    TYPE_VECTOR_SUBPARTS (TREE_TYPE (vec1)).to_constant ();\n \n   unsigned HOST_WIDE_INT num_indices = call_expr_nargs (callexp) - 2;\n   unsigned HOST_WIDE_INT masklen = MAX (num_indices, MAX (v0elems, v1elems));"}]}