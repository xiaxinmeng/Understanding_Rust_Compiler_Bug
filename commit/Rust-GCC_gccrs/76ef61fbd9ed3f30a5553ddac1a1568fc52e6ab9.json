{"sha": "76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZlZjYxZmJkOWVkM2YzMGE1NTUzZGRhYzFhMTU2OGZjNTJlNmFiOQ==", "commit": {"author": {"name": "Edgar E. Iglesias", "email": "edgar.iglesias@gmail.com", "date": "2013-02-08T16:02:47Z"}, "committer": {"name": "Michael Eager", "email": "eager@gcc.gnu.org", "date": "2013-02-08T16:02:47Z"}, "message": "config.gcc (microblaze*-linux*): Add TARGET_BIG_ENDIAN_DEFAULT\n\ngcc:\n\t* config.gcc (microblaze*-linux*): Add TARGET_BIG_ENDIAN_DEFAULT\n\t(microblaze*-*-elf): Likewise\n\t* config/microblaze/linux.h: Add -mbig-endian / -mlittle-endian to \n\tLINK_SPEC\n\t* config/microblaze/microblaze-c.c: Add builtin defines for _LITTLE_ENDIAN \n\tand _BIG_ENDIAN\n\t* config/microblaze/microblaze.h: Add TARGET_ENDIAN_DEFAULT and add to \n\tTARGET_DEFAULT flags.\n\tExpand ASM_SPEC and LINK_SPEC.\n\tUpdate BYTES_BIG_ENDIAN and WORDS_BIG_ENDIAN\n\t* config/microblaze/microblaze.md: Update extendsidi2 and movdi_internal \n\tinstructions to use low-order / high-order reg print_operands\n\t* config/microblaze/microblaze.opt: Add mbig-endian and mlittle-endian \n\toptions and inversemask / mask of LITTLE_ENDIAN\n\t* config/microblaze/t-microblaze: Expand multilib options to include mlittle-\n\tendian (le) and update exceptions patterns\ngcc/testsuite:\n\t* 20101011-1.c: Add __MICROBLAZE__ exception to set DO_TEST 0\n\nFrom-SVN: r195893", "tree": {"sha": "e89c91d4a2ac443eb8452695e07233cfe95d791e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e89c91d4a2ac443eb8452695e07233cfe95d791e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/comments", "author": {"login": "edgarigl", "id": 86901, "node_id": "MDQ6VXNlcjg2OTAx", "avatar_url": "https://avatars.githubusercontent.com/u/86901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgarigl", "html_url": "https://github.com/edgarigl", "followers_url": "https://api.github.com/users/edgarigl/followers", "following_url": "https://api.github.com/users/edgarigl/following{/other_user}", "gists_url": "https://api.github.com/users/edgarigl/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgarigl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgarigl/subscriptions", "organizations_url": "https://api.github.com/users/edgarigl/orgs", "repos_url": "https://api.github.com/users/edgarigl/repos", "events_url": "https://api.github.com/users/edgarigl/events{/privacy}", "received_events_url": "https://api.github.com/users/edgarigl/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5df813131d18e4db50fb4f9c940ff782b8496a94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5df813131d18e4db50fb4f9c940ff782b8496a94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5df813131d18e4db50fb4f9c940ff782b8496a94"}], "stats": {"total": 112, "additions": 98, "deletions": 14}, "files": [{"sha": "513a79405f37fd053e68e9179f65dde14ad7017a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "patch": "@@ -1,3 +1,22 @@\n+2013-02-08  Edgar E. Iglesias <edgar.iglesias@gmail.com>\n+\n+\t* config.gcc (microblaze*-linux*): Add TARGET_BIG_ENDIAN_DEFAULT\n+\t(microblaze*-*-elf): Likewise\n+\t* config/microblaze/linux.h: Add -mbig-endian / -mlittle-endian to \n+\tLINK_SPEC\n+\t* config/microblaze/microblaze-c.c: Add builtin defines for _LITTLE_ENDIAN \n+\tand _BIG_ENDIAN\n+\t* config/microblaze/microblaze.h: Add TARGET_ENDIAN_DEFAULT and add to \n+\tTARGET_DEFAULT flags.\n+\tExpand ASM_SPEC and LINK_SPEC.\n+\tUpdate BYTES_BIG_ENDIAN and WORDS_BIG_ENDIAN\n+\t* config/microblaze/microblaze.md: Update extendsidi2 and movdi_internal \n+\tinstructions to use low-order / high-order reg print_operands\n+\t* config/microblaze/microblaze.opt: Add mbig-endian and mlittle-endian \n+\toptions and inversemask / mask of LITTLE_ENDIAN\n+\t* config/microblaze/t-microblaze: Expand multilib options to include mlittle-\n+\tendian (le) and update exceptions patterns\n+\t\n 2013-02-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/56195"}, {"sha": "fce3796384c7e3ea071dd2b0e91248dbd2a0c8d8", "filename": "gcc/config.gcc", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "patch": "@@ -1737,11 +1737,20 @@ mep-*-*)\n \tuse_gcc_stdint=wrap\n \t;;\n microblaze*-linux*)\n+\tcase $target in\n+\t\tmicroblazeel-*)\n+\t\t\ttm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=0\"\n+\t\t\t;;\n+\t\tmicroblaze-*)\n+\t\t\ttm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=4321\"\n+\t\t\t;;\n+\tesac\n \ttm_file=\"${tm_file} dbxelf.h gnu-user.h linux.h microblaze/linux.h\"\n \ttm_file=\"${tm_file} glibc-stdint.h\"\n \tc_target_objs=\"${c_target_objs} microblaze-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} microblaze-c.o\"\n \ttmake_file=\"${tmake_file} microblaze/t-microblaze\"\n+\ttmake_file=\"${tmake_file} microblaze/t-microblaze-linux\"\n \t;;\n microblaze*-*-rtems*)\n \ttm_file=\"${tm_file} dbxelf.h\"\n@@ -1752,6 +1761,14 @@ microblaze*-*-rtems*)\n \ttmake_file=\"${tmake_file} t-rtems microblaze/t-rtems\"\n         ;;\n microblaze*-*-elf)\n+\tcase $target in\n+\t\tmicroblazeel-*)\n+\t\t\ttm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=0\"\n+\t\t\t;;\n+\t\tmicroblaze-*)\n+\t\t\ttm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=4321\"\n+\t\t\t;;\n+\tesac\n \ttm_file=\"${tm_file} dbxelf.h newlib-stdint.h\"\n \tc_target_objs=\"${c_target_objs} microblaze-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} microblaze-c.o\""}, {"sha": "7455ec7ca42af8d306fd48252094e2f44111ea8d", "filename": "gcc/config/microblaze/linux.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Fconfig%2Fmicroblaze%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Fconfig%2Fmicroblaze%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Flinux.h?ref=76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "patch": "@@ -31,7 +31,9 @@\n     %{!static: \\\n       %{rdynamic:-export-dynamic} \\\n       -dynamic-linker %(dynamic_linker)} \\\n-    %{static:-static}}\"\n+    %{static:-static}} \\\n+  %{mbig-endian:-EB} \\\n+  %{mlittle-endian:-EL}\"\n \n /* For the microblaze-*-linux* subtarget.  */\n #undef TARGET_OS_CPP_BUILTINS"}, {"sha": "a1a20b74346f2ffaf64d7df6c6520e5287cf448f", "filename": "gcc/config/microblaze/microblaze-c.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze-c.c?ref=76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "patch": "@@ -41,6 +41,19 @@ microblaze_cpp_define (cpp_reader *pfile)\n   builtin_assert (\"cpu=microblaze\");\n   builtin_assert (\"machine=microblaze\");\n   builtin_define (\"__MICROBLAZE__\");\n+  builtin_define (\"__microblaze__\");\n+  if (TARGET_LITTLE_ENDIAN)\n+    {\n+      builtin_define (\"_LITTLE_ENDIAN\");\n+      builtin_define (\"__LITTLE_ENDIAN__\");\n+      builtin_define (\"__MICROBLAZEEL__\");\n+    }\n+  else\n+    {\n+      builtin_define (\"_BIG_ENDIAN\");\n+      builtin_define (\"__BIG_ENDIAN__\");\n+      builtin_define (\"__MICROBLAZEEB__\");\n+    }\n   if (!TARGET_SOFT_MUL) \n     {\n       if (!flag_iso)"}, {"sha": "5b64e39bcfe53f093c7fdf175c84f5a0fe91cc5b", "filename": "gcc/config/microblaze/microblaze.h", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h?ref=76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "patch": "@@ -46,8 +46,17 @@ extern enum pipeline_type microblaze_pipe;\n \n #define OBJECT_FORMAT_ELF\n \n+#if TARGET_BIG_ENDIAN_DEFAULT\n+#define TARGET_ENDIAN_DEFAULT    0\n+#define TARGET_ENDIAN_OPTION     \"mbig-endian\"\n+#else\n+#define TARGET_ENDIAN_DEFAULT    MASK_LITTLE_ENDIAN\n+#define TARGET_ENDIAN_OPTION     \"mlittle-endian\"\n+#endif\n+\n /* Default target_flags if no switches are specified  */\n-#define TARGET_DEFAULT      (MASK_SOFT_MUL | MASK_SOFT_DIV | MASK_SOFT_FLOAT)\n+#define TARGET_DEFAULT      (MASK_SOFT_MUL | MASK_SOFT_DIV | MASK_SOFT_FLOAT \\\n+                             | TARGET_ENDIAN_DEFAULT)\n \n /* What is the default setting for -mcpu= . We set it to v4.00.a even though \n    we are actually ahead. This is safest version that has generate code \n@@ -77,12 +86,16 @@ extern enum pipeline_type microblaze_pipe;\n #define TARGET_ASM_SPEC \"\"\n \n #define ASM_SPEC \"\\\n-%(target_asm_spec)\"\n+%(target_asm_spec) \\\n+%{mbig-endian:-EB} \\\n+%{mlittle-endian:-EL}\"\n \n /* Extra switches sometimes passed to the linker.  */\n /* -xl-mode-xmdstub translated to -Zxl-mode-xmdstub -- deprecated.  */\n \n #define LINK_SPEC \"%{shared:-shared} -N -relax \\\n+  %{mbig-endian:-EB --oformat=elf32-microblaze} \\\n+  %{mlittle-endian:-EL --oformat=elf32-microblazeel} \\\n   %{Zxl-mode-xmdstub:-defsym _TEXT_START_ADDR=0x800} \\\n   %{mxl-mode-xmdstub:-defsym _TEXT_START_ADDR=0x800} \\\n   %{mxl-gp-opt:%{G*}} %{!mxl-gp-opt: -G 0} \\\n@@ -167,8 +180,8 @@ extern enum pipeline_type microblaze_pipe;\n /* Target machine storage layout */\n \n #define BITS_BIG_ENDIAN 0\n-#define BYTES_BIG_ENDIAN 1\n-#define WORDS_BIG_ENDIAN 1\n+#define BYTES_BIG_ENDIAN (TARGET_LITTLE_ENDIAN == 0)\n+#define WORDS_BIG_ENDIAN (BYTES_BIG_ENDIAN)\n #define BITS_PER_UNIT           8\n #define BITS_PER_WORD           32\n #define UNITS_PER_WORD          4"}, {"sha": "69df59220525ee79677ddc1a292d56bbb813f532", "filename": "gcc/config/microblaze/microblaze.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.md?ref=76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "patch": "@@ -822,14 +822,14 @@\n   \"\"\n   { \n      if (which_alternative == 0)\n-       output_asm_insn (\"addk\\t%D0,r0,%1\", operands);\n+       output_asm_insn (\"addk\\t%L0,r0,%1\", operands);\n      else\n-       output_asm_insn (\"lw%i1\\t%D0,%1\", operands);\n+       output_asm_insn (\"lw%i1\\t%L0,%1\", operands);\n \n-     output_asm_insn (\"add\\t%0,%D0,%D0\", operands);\n-     output_asm_insn (\"addc\\t%0,r0,r0\", operands);\n-     output_asm_insn (\"beqi\\t%0,.+8\", operands);\n-     return \"addi\\t%0,r0,0xffffffff\";\n+     output_asm_insn (\"add\\t%M0,%L0,%L0\", operands);\n+     output_asm_insn (\"addc\\t%M0,r0,r0\", operands);\n+     output_asm_insn (\"beqi\\t%M0,.+8\", operands);\n+     return \"addi\\t%M0,r0,0xffffffff\";\n   }\n   [(set_attr \"type\"\t\"multi,multi,multi\")\n   (set_attr \"mode\"\t\"DI\")\n@@ -887,7 +887,7 @@\n       case 0:\n         return \"addk\\t%0,%1\\n\\taddk\\t%D0,%d1\";\n       case 1:\n-\treturn \"addik\\t%0,r0,%h1\\n\\taddik\\t%D0,r0,%j1 #li => la\";\n+\treturn \"addik\\t%M0,r0,%h1\\n\\taddik\\t%L0,r0,%j1 #li => la\";\n       case 2:\n \t  return \"addk\\t%0,r0,r0\\n\\taddk\\t%D0,r0,r0\";\n       case 3:"}, {"sha": "fc7d0cdd1d0b1b7525675bdf2fd2e4b7a18cd23f", "filename": "gcc/config/microblaze/microblaze.opt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.opt?ref=76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "patch": "@@ -55,6 +55,14 @@ mmemcpy\n Target Mask(MEMCPY)\n Don't optimize block moves, use memcpy\n \n+mbig-endian\n+Target Report RejectNegative InverseMask(LITTLE_ENDIAN)\n+Assume target CPU is configured as big endian\n+\n+mlittle-endian\n+Target Report RejectNegative Mask(LITTLE_ENDIAN)\n+Assume target CPU is configured as little endian\n+\n mxl-soft-mul\n Target Mask(SOFT_MUL)\n Use the soft multiply emulation (default)"}, {"sha": "41fa9a92081b47fe08ce52a8ab3fd74119b23e07", "filename": "gcc/config/microblaze/t-microblaze", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Fconfig%2Fmicroblaze%2Ft-microblaze", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Fconfig%2Fmicroblaze%2Ft-microblaze", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Ft-microblaze?ref=76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "patch": "@@ -1,6 +1,8 @@\n-MULTILIB_OPTIONS = mxl-barrel-shift mno-xl-soft-mul mxl-multiply-high\n-MULTILIB_DIRNAMES = bs m mh\n+MULTILIB_OPTIONS = mxl-barrel-shift mno-xl-soft-mul mxl-multiply-high mlittle-endian\n+MULTILIB_DIRNAMES = bs m mh le\n MULTILIB_EXCEPTIONS = *mxl-barrel-shift/mxl-multiply-high mxl-multiply-high\n+MULTILIB_EXCEPTIONS += *mxl-barrel-shift/mxl-multiply-high/mlittle-endian\n+MULTILIB_EXCEPTIONS += mxl-multiply-high/mlittle-endian\n \n # Extra files\n microblaze-c.o: $(srcdir)/config/microblaze/microblaze-c.c \\"}, {"sha": "e8e8f3c87de8241d85a7a729f6bfbcf89c4cdbb1", "filename": "gcc/config/microblaze/t-microblaze-linux", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Fconfig%2Fmicroblaze%2Ft-microblaze-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Fconfig%2Fmicroblaze%2Ft-microblaze-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Ft-microblaze-linux?ref=76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "patch": "@@ -0,0 +1,3 @@\n+MULTILIB_OPTIONS = mxl-barrel-shift mno-xl-soft-mul mxl-multiply-high\n+MULTILIB_DIRNAMES = bs m mh\n+MULTILIB_EXCEPTIONS = *mxl-barrel-shift/mxl-multiply-high mxl-multiply-high"}, {"sha": "d816f184b250c86f5373f47c400704e3b89d4b02", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "patch": "@@ -1,3 +1,7 @@\n+2013-02-08  Edgar E. Iglesias <edgar.iglesias@gmail.com>\n+\n+\t* 20101011-1.c: Add __MICROBLAZE__ exception to set DO_TEST 0\n+\n 2013-02-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/56195"}, {"sha": "8d821839b1a4be330ee6645e68cc31ffef36ff89", "filename": "gcc/testsuite/gcc.c-torture/execute/20101011-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20101011-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20101011-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20101011-1.c?ref=76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "patch": "@@ -29,6 +29,9 @@\n   /* Not all Linux kernels deal correctly the breakpoints generated by\n      MIPS16 divisions by zero.  They show up as a SIGTRAP instead.  */\n # define DO_TEST 0\n+#elif defined (__MICROBLAZE__)\n+/* We cannot rely on division by zero generating a trap. */\n+# define DO_TEST 0\n #elif defined (__epiphany__)\n   /* Epiphany does not have hardware division, and the software implementation\n      has truly undefined behaviour for division by 0.  */"}]}