{"sha": "80b841ba52a689712da44a91954c17a8aeace5c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBiODQxYmE1MmE2ODk3MTJkYTQ0YTkxOTU0YzE3YThhZWFjZTVjOA==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2016-10-17T15:56:22Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2016-10-17T15:56:22Z"}, "message": "Explicitly list all tree codes in gcc/tree-streamer.c:record_common_node\n\n\tgcc/\n\t* tree-streamer.c (record_common_node): Explicitly list expected\n\ttree codes.\n\nFrom-SVN: r241246", "tree": {"sha": "2eb53f543881c5d45f7aa40d6daece5e288e9eb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2eb53f543881c5d45f7aa40d6daece5e288e9eb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80b841ba52a689712da44a91954c17a8aeace5c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b841ba52a689712da44a91954c17a8aeace5c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80b841ba52a689712da44a91954c17a8aeace5c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b841ba52a689712da44a91954c17a8aeace5c8/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12d3f34b33bc41f5f3d010435fa7eb03fb344c5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d3f34b33bc41f5f3d010435fa7eb03fb344c5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12d3f34b33bc41f5f3d010435fa7eb03fb344c5f"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "9acc738accce32779b5832b77cb163347690e3c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b841ba52a689712da44a91954c17a8aeace5c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b841ba52a689712da44a91954c17a8aeace5c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80b841ba52a689712da44a91954c17a8aeace5c8", "patch": "@@ -1,3 +1,8 @@\n+2016-10-17  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* tree-streamer.c (record_common_node): Explicitly list expected\n+\ttree codes.\n+\n 2016-10-17  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/77988"}, {"sha": "2139e96634e0331fa01e7ee88cdb12bbaf376e2b", "filename": "gcc/tree-streamer.c", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b841ba52a689712da44a91954c17a8aeace5c8/gcc%2Ftree-streamer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b841ba52a689712da44a91954c17a8aeace5c8/gcc%2Ftree-streamer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer.c?ref=80b841ba52a689712da44a91954c17a8aeace5c8", "patch": "@@ -277,12 +277,28 @@ record_common_node (struct streamer_tree_cache_d *cache, tree node)\n      in the cache as hash value.  */\n   streamer_tree_cache_append (cache, node, cache->nodes.length ());\n \n-  if (POINTER_TYPE_P (node)\n-      || TREE_CODE (node) == COMPLEX_TYPE\n-      || TREE_CODE (node) == ARRAY_TYPE)\n-    record_common_node (cache, TREE_TYPE (node));\n-  else if (TREE_CODE (node) == RECORD_TYPE)\n+  switch (TREE_CODE (node))\n     {\n+    case ERROR_MARK:\n+    case FIELD_DECL:\n+    case FIXED_POINT_TYPE:\n+    case IDENTIFIER_NODE:\n+    case INTEGER_CST:\n+    case INTEGER_TYPE:\n+    case POINTER_BOUNDS_TYPE:\n+    case REAL_TYPE:\n+    case TREE_LIST:\n+    case VOID_CST:\n+    case VOID_TYPE:\n+      /* No recursive trees.  */\n+      break;\n+    case ARRAY_TYPE:\n+    case COMPLEX_TYPE:\n+    case POINTER_TYPE:\n+    case REFERENCE_TYPE:\n+      record_common_node (cache, TREE_TYPE (node));\n+      break;\n+    case RECORD_TYPE:\n       /* The FIELD_DECLs of structures should be shared, so that every\n \t COMPONENT_REF uses the same tree node when referencing a field.\n \t Pointer equality between FIELD_DECLs is used by the alias\n@@ -291,6 +307,10 @@ record_common_node (struct streamer_tree_cache_d *cache, tree node)\n \t nonoverlapping_component_refs_of_decl_p).  */\n       for (tree f = TYPE_FIELDS (node); f; f = TREE_CHAIN (f))\n \trecord_common_node (cache, f);\n+      break;\n+    default:\n+      /* Unexpected tree code.  */\n+      gcc_unreachable ();\n     }\n }\n "}]}