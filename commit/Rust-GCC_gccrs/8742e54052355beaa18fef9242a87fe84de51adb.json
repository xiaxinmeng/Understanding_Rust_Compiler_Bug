{"sha": "8742e54052355beaa18fef9242a87fe84de51adb", "node_id": "C_kwDOANBUbNoAKDg3NDJlNTQwNTIzNTViZWFhMThmZWY5MjQyYTg3ZmU4NGRlNTFhZGI", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2023-01-04T20:12:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-04T20:12:07Z"}, "message": "Merge #1716\n\n1716: rust: add bound parsing in parse_generic_arg. r=philberty a=TuringKi\n\nThis patch adds parsing for generic parameters like: <F: Foo<Bar: Foo>>. In current version, this pattern  leads to endless loop.\r\n\n\nCo-authored-by: mxlol233 <mxlol233@outlook.com>", "tree": {"sha": "f5caa54136169a942ef603b7a6dca571516432a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5caa54136169a942ef603b7a6dca571516432a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8742e54052355beaa18fef9242a87fe84de51adb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjtd2XCRBK7hj4Ov3rIwAAm9QIAKZLnvac2i3YPXH/HKcaj2xg\nb8lFnuKHHbwfU731P7vM7mov4ygKXc7ovHpnv26+Fex6YnOMi5KhAlt9jLNBfcjY\nfkt2yCCI0GX6T7CrVjsDE40UZL3fom1jnzc+CMKRhgTju6nqCCzWrBx+H17rzxev\nwzEwFq85eifrzf8sKBxYw3yjf42JLSOiCtFvojR4P2FxSDoUWCNlmTLHC5P8hU94\n+NHo63EYig1nnPVmJP+c3MDKw0+il4+mBgEDk7PKPH8PpYAN427Yq0G2xCb0WDj3\nHyDxuUIEYi8GNUYYC6QYMMV0HKiHUZNdfn5t1b8ojbUDwdpHQye4/2oS4pYVZMU=\n=0M/b\n-----END PGP SIGNATURE-----\n", "payload": "tree f5caa54136169a942ef603b7a6dca571516432a9\nparent 0152926ab36ba52153f3f457f6f3bb02bb274073\nparent 2f36f38054279e66b1af55995e41dd14e56beb25\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1672863127 +0000\ncommitter GitHub <noreply@github.com> 1672863127 +0000\n\nMerge #1716\n\n1716: rust: add bound parsing in parse_generic_arg. r=philberty a=TuringKi\n\nThis patch adds parsing for generic parameters like: <F: Foo<Bar: Foo>>. In current version, this pattern  leads to endless loop.\r\n\n\nCo-authored-by: mxlol233 <mxlol233@outlook.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8742e54052355beaa18fef9242a87fe84de51adb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8742e54052355beaa18fef9242a87fe84de51adb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8742e54052355beaa18fef9242a87fe84de51adb/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0152926ab36ba52153f3f457f6f3bb02bb274073", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0152926ab36ba52153f3f457f6f3bb02bb274073", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0152926ab36ba52153f3f457f6f3bb02bb274073"}, {"sha": "2f36f38054279e66b1af55995e41dd14e56beb25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f36f38054279e66b1af55995e41dd14e56beb25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f36f38054279e66b1af55995e41dd14e56beb25"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "86124ee658e6b22e31ab2c2b9de9050db3ba6302", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8742e54052355beaa18fef9242a87fe84de51adb/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8742e54052355beaa18fef9242a87fe84de51adb/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=8742e54052355beaa18fef9242a87fe84de51adb", "patch": "@@ -6189,6 +6189,23 @@ Parser<ManagedTokenSource>::parse_generic_arg ()\n \t    else\n \t      return AST::GenericArg::create_error ();\n \t  }\n+\telse if (next_tok->get_id () == COLON)\n+\t  {\n+\t    lexer.skip_token (); // skip ident\n+\t    lexer.skip_token (); // skip colon\n+\n+\t    auto tok = lexer.peek_token ();\n+\t    std::vector<std::unique_ptr<AST::TypeParamBound>> bounds\n+\t      = parse_type_param_bounds ();\n+\n+\t    auto type = std::unique_ptr<AST::TraitObjectType> (\n+\t      new AST::TraitObjectType (std::move (bounds), tok->get_locus (),\n+\t\t\t\t\tfalse));\n+\t    if (type)\n+\t      return AST::GenericArg::create_type (std::move (type));\n+\t    else\n+\t      return AST::GenericArg::create_error ();\n+\t  }\n \tlexer.skip_token ();\n \treturn AST::GenericArg::create_ambiguous (tok->get_str (),\n \t\t\t\t\t\t  tok->get_locus ());"}, {"sha": "ecb10d81f65f37148dceef0fe48b62458f02770c", "filename": "gcc/testsuite/rust/compile/bounds.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8742e54052355beaa18fef9242a87fe84de51adb/gcc%2Ftestsuite%2Frust%2Fcompile%2Fbounds.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8742e54052355beaa18fef9242a87fe84de51adb/gcc%2Ftestsuite%2Frust%2Fcompile%2Fbounds.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fbounds.rs?ref=8742e54052355beaa18fef9242a87fe84de51adb", "patch": "@@ -0,0 +1,10 @@\n+trait Foo {\n+    type Bar;\n+}\n+\n+trait Copy {}\n+\n+\n+fn c<F: Foo<Bar: Foo>>() where F::Bar: Copy { // { dg-warning \"function is never used: 'c'\" }\n+}\n+"}]}