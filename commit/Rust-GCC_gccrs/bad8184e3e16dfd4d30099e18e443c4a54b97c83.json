{"sha": "bad8184e3e16dfd4d30099e18e443c4a54b97c83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFkODE4NGUzZTE2ZGZkNGQzMDA5OWUxOGU0NDNjNGE1NGI5N2M4Mw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-01-06T09:12:44Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-03T10:01:25Z"}, "message": "[Ada] Put a couple of options in alphabetical order\n\n2020-06-03  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* opt.ads (Disable_FE_Inline): Move around.\n\t(Disable_FE_Inline_Always): Likewise.", "tree": {"sha": "a92a937d65a772ef5b64746e31f64a077dbba0de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a92a937d65a772ef5b64746e31f64a077dbba0de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bad8184e3e16dfd4d30099e18e443c4a54b97c83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bad8184e3e16dfd4d30099e18e443c4a54b97c83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bad8184e3e16dfd4d30099e18e443c4a54b97c83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bad8184e3e16dfd4d30099e18e443c4a54b97c83/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf9e38295f751336e2ce4bc08fe8bf9f7b3ae898", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf9e38295f751336e2ce4bc08fe8bf9f7b3ae898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf9e38295f751336e2ce4bc08fe8bf9f7b3ae898"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "d60380db45a8f09909c0e94fb2f1776b0fc91046", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bad8184e3e16dfd4d30099e18e443c4a54b97c83/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bad8184e3e16dfd4d30099e18e443c4a54b97c83/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=bad8184e3e16dfd4d30099e18e443c4a54b97c83", "patch": "@@ -492,6 +492,15 @@ package Opt is\n    --  PROJECT MANAGER\n    --  Set to False with switch -f of gnatclean and gprclean\n \n+   Disable_FE_Inline        : Boolean := False;\n+   Disable_FE_Inline_Always : Boolean := False;\n+   --  GNAT\n+   --  Request to disable front end inlining from pragma Inline or pragma\n+   --  Inline_Always out of the presence of the -fno-inline back end flag\n+   --  on the command line, regardless of any other switches that are set.\n+   --  It remains the back end's reponsibility to honor -fno-inline at the\n+   --  back end level.\n+\n    Display_Compilation_Progress : Boolean := False;\n    --  GNATMAKE, GPRBUILD\n    --  Set True (-d switch) to display information on progress while compiling\n@@ -1514,15 +1523,6 @@ package Opt is\n    --  with'ed indirectly. It is set True by use of either the -gnatg or\n    --  -gnaty switches, but not by use of the Style_Checks pragma.\n \n-   Disable_FE_Inline        : Boolean := False;\n-   Disable_FE_Inline_Always : Boolean := False;\n-   --  GNAT\n-   --  Request to disable front end inlining from pragma Inline or pragma\n-   --  Inline_Always out of the presence of the -fno-inline back end flag\n-   --  on the command line, regardless of any other switches that are set.\n-   --  It remains the back end's reponsibility to honor -fno-inline at the\n-   --  back end level.\n-\n    Suppress_Control_Flow_Optimizations : Boolean := False;\n    --  GNAT\n    --  Set by -fpreserve-control-flow. Suppresses control flow optimizations"}]}