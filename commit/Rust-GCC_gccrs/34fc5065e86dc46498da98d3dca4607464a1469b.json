{"sha": "34fc5065e86dc46498da98d3dca4607464a1469b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRmYzUwNjVlODZkYzQ2NDk4ZGE5OGQzZGNhNDYwNzQ2NGExNDY5Yg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-10-24T08:12:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-10-24T08:12:04Z"}, "message": "re PR tree-optimization/29567 (ICE in build2_stat, at tree.c:2963)\n\n2006-10-24  Richard Guenther  <rguenther@suse.de>\n\n        PR tree-optimization/29567\n\t* tree-vrp.c (register_edge_assert_for_1): Fix wrong logic\n\tfor TRUTH_NOT_EXPR.  Clarify comments.\n\n\t* gfortran.fortran-torture/compile/vrp_1.f90: New testcase.\n\nFrom-SVN: r117997", "tree": {"sha": "adf831429b5156bf1ef5d0145644fdcd63bb9308", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adf831429b5156bf1ef5d0145644fdcd63bb9308"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34fc5065e86dc46498da98d3dca4607464a1469b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34fc5065e86dc46498da98d3dca4607464a1469b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34fc5065e86dc46498da98d3dca4607464a1469b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34fc5065e86dc46498da98d3dca4607464a1469b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b52dd66cc0e3ce80b12a1f72f5153643bd22c450", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b52dd66cc0e3ce80b12a1f72f5153643bd22c450", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b52dd66cc0e3ce80b12a1f72f5153643bd22c450"}], "stats": {"total": 44, "additions": 35, "deletions": 9}, "files": [{"sha": "1505a0814072392a3b0319feeaca46c6081cb11b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34fc5065e86dc46498da98d3dca4607464a1469b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34fc5065e86dc46498da98d3dca4607464a1469b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34fc5065e86dc46498da98d3dca4607464a1469b", "patch": "@@ -1,3 +1,9 @@\n+2006-10-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/29567\n+\t* tree-vrp.c (register_edge_assert_for_1): Fix wrong logic\n+\tfor TRUTH_NOT_EXPR.  Clarify comments.\n+\n 2006-10-24  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtins.c (fold_builtin_exponent): Evaluate constant arguments"}, {"sha": "91362860100e9bae521ffa2d2689b82336b229d1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34fc5065e86dc46498da98d3dca4607464a1469b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34fc5065e86dc46498da98d3dca4607464a1469b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=34fc5065e86dc46498da98d3dca4607464a1469b", "patch": "@@ -1,3 +1,8 @@\n+2006-10-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/29567\n+\t* gfortran.fortran-torture/compile/vrp_1.f90: New testcase.\n+\n 2006-10-23  Zdenek Dvorak <dvorakz@suse.cz>\n \n \tPR tree-optimization/14784"}, {"sha": "a8d0c295c848869b8b52631092820a8f17449923", "filename": "gcc/testsuite/gfortran.fortran-torture/compile/vrp_1.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34fc5065e86dc46498da98d3dca4607464a1469b/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fvrp_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34fc5065e86dc46498da98d3dca4607464a1469b/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fvrp_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fvrp_1.f90?ref=34fc5065e86dc46498da98d3dca4607464a1469b", "patch": "@@ -0,0 +1,17 @@\n+      SUBROUTINE STONUM(STRVAR,LENGTH)\n+      CHARACTER STRVAR*(*) , CHK\n+      LOGICAL MEND , NMARK , MMARK , EMARK\n+      NMARK = .FALSE.\n+      MMARK = .FALSE.\n+      DO WHILE ( .NOT.MEND )\n+            IF ( CHK.GE.'0' .AND. CHK.LE.'9' ) THEN\n+               IF ( CHK.EQ.'E' ) THEN\n+                  NMARK = .TRUE.\n+               ELSEIF ( .NOT.MMARK .AND. CHK.EQ.'*' .AND. .NOT.NMARK )  &\n+     &                  THEN\n+                  MMARK = .TRUE.\n+               ENDIF\n+            ENDIF\n+      ENDDO\n+      END\n+"}, {"sha": "88c1d304d491858f23a7a5f0c17470f9ce76a3c5", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34fc5065e86dc46498da98d3dca4607464a1469b/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34fc5065e86dc46498da98d3dca4607464a1469b/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=34fc5065e86dc46498da98d3dca4607464a1469b", "patch": "@@ -2777,7 +2777,7 @@ static bool\n register_edge_assert_for_1 (tree op, enum tree_code code,\n \t\t\t    edge e, block_stmt_iterator bsi)\n {\n-  bool invert, retval = false;\n+  bool retval = false;\n   tree op_def, rhs, val;\n \n   /* We only care about SSA_NAMEs.  */\n@@ -2804,11 +2804,11 @@ register_edge_assert_for_1 (tree op, enum tree_code code,\n   if (TREE_CODE (op_def) != MODIFY_EXPR)\n     return retval;\n \n-  invert = (code == EQ_EXPR ? true : false);\n   rhs = TREE_OPERAND (op_def, 1);\n \n   if (COMPARISON_CLASS_P (rhs))\n     {\n+      bool invert = (code == EQ_EXPR ? true : false);\n       tree op0 = TREE_OPERAND (rhs, 0);\n       tree op1 = TREE_OPERAND (rhs, 1);\n \n@@ -2848,24 +2848,22 @@ register_edge_assert_for_1 (tree op, enum tree_code code,\n     }\n   else if (TREE_CODE (rhs) == TRUTH_NOT_EXPR)\n     {\n-      invert = !invert;\n-      /* Recurse, flipping the tense of INVERT.  */\n+      /* Recurse, flipping CODE.  */\n+      code = invert_tree_comparison (code, false);\n       retval |= register_edge_assert_for_1 (TREE_OPERAND (rhs, 0),\n-\t\t\t\t\t    invert, e, bsi);\n+\t\t\t\t\t    code, e, bsi);\n     }\n   else if (TREE_CODE (rhs) == SSA_NAME)\n     {\n-      /* Recurse through the copy, the tense of INVERT remains\n-\t unchanged.  */\n+      /* Recurse through the copy.  */\n       retval |= register_edge_assert_for_1 (rhs, code, e, bsi);\n     }\n   else if (TREE_CODE (rhs) == NOP_EXPR\n \t   || TREE_CODE (rhs) == CONVERT_EXPR\n \t   || TREE_CODE (rhs) == VIEW_CONVERT_EXPR\n \t   || TREE_CODE (rhs) == NON_LVALUE_EXPR)\n     { \n-      /* Recurse through the type conversion, the tense of INVERT \n-\t remains unchanged.  */\n+      /* Recurse through the type conversion.  */\n       retval |= register_edge_assert_for_1 (TREE_OPERAND (rhs, 0),\n \t\t\t\t\t    code, e, bsi);\n     }"}]}