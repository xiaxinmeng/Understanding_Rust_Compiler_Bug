{"sha": "a9c6464d87cc4ddcd1adff1d030caf91ad974753", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTljNjQ2NGQ4N2NjNGRkY2QxYWRmZjFkMDMwY2FmOTFhZDk3NDc1Mw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-25T11:55:11Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-25T11:55:11Z"}, "message": "(simplify_unary_operation): If operand mode is VOIDmode for\nUNSIGNED_FLOAT and operand looks negative, can't simplify.\n\nFrom-SVN: r9081", "tree": {"sha": "c687e075676a041a280cd1a81add9bedecab55e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c687e075676a041a280cd1a81add9bedecab55e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9c6464d87cc4ddcd1adff1d030caf91ad974753", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9c6464d87cc4ddcd1adff1d030caf91ad974753", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9c6464d87cc4ddcd1adff1d030caf91ad974753", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9c6464d87cc4ddcd1adff1d030caf91ad974753/comments", "author": null, "committer": null, "parents": [{"sha": "7a96832ab0f1a65a968c8dd8766eb359f5a4c80e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a96832ab0f1a65a968c8dd8766eb359f5a4c80e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a96832ab0f1a65a968c8dd8766eb359f5a4c80e"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "9cbc0c2aa542a903c15ec2fc94a12a3e50824fb7", "filename": "gcc/cse.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9c6464d87cc4ddcd1adff1d030caf91ad974753/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9c6464d87cc4ddcd1adff1d030caf91ad974753/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=a9c6464d87cc4ddcd1adff1d030caf91ad974753", "patch": "@@ -2972,7 +2972,14 @@ simplify_unary_operation (code, mode, op, op_mode)\n       else\n \tlv = CONST_DOUBLE_LOW (op),  hv = CONST_DOUBLE_HIGH (op);\n \n-      if (GET_MODE_BITSIZE (op_mode) >= HOST_BITS_PER_WIDE_INT * 2)\n+      if (op_mode == VOIDmode)\n+\t{\n+\t  /* We don't know how to interpret negative-looking numbers in\n+\t     this case, so don't try to fold those.  */\n+\t  if (hv < 0)\n+\t    return 0;\n+\t}\n+      else if (GET_MODE_BITSIZE (op_mode) >= HOST_BITS_PER_WIDE_INT * 2)\n \t;\n       else\n \thv = 0, lv &= GET_MODE_MASK (op_mode);"}]}