{"sha": "be43ab4e01784fedf2cb1eca843783e5eecd3535", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU0M2FiNGUwMTc4NGZlZGYyY2IxZWNhODQzNzgzZTVlZWNkMzUzNQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-06-15T14:56:32Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-06-15T14:56:32Z"}, "message": "c-opts.c (lang_flags): Update for new spelling of flags.\n\n\t* c-opts.c (lang_flags): Update for new spelling of flags.\n\t(write_langs): Similarly.\n\t* c.opt: Specify languages.\n\t* opts.h: Remove languages.\n\t* opts.sh: Recognise front-end defined languages.\nada:\n\t* lang.opt: Declare Ada.\n\t* misc.c (gnat_init_options): Update.\ndoc:\n\t* sourcebuild.texi: Update.\nf:\n\t* lang.opt: Declare F77.\njava:\n\t* lang.opt: Declare Java.\n\t* lang.c (java_init_options): Update.\ntreelang:\n\t* lang.opt: Declare Treelang.  Update.\n\t* tree1.c (treelang_init_options): Update.\n\nFrom-SVN: r67976", "tree": {"sha": "bb53c4922fdf27602a271638fead41e6077d92ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb53c4922fdf27602a271638fead41e6077d92ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be43ab4e01784fedf2cb1eca843783e5eecd3535", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be43ab4e01784fedf2cb1eca843783e5eecd3535", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be43ab4e01784fedf2cb1eca843783e5eecd3535", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be43ab4e01784fedf2cb1eca843783e5eecd3535/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4682ae0463c9fcc254fe1c8ede9da9133a9956bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4682ae0463c9fcc254fe1c8ede9da9133a9956bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4682ae0463c9fcc254fe1c8ede9da9133a9956bc"}], "stats": {"total": 235, "additions": 103, "deletions": 132}, "files": [{"sha": "dbdc371caf693b89eee4d373db800dded524393b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -1,3 +1,13 @@\n+2003-06-15  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* c-opts.c (lang_flags): Update for new spelling of flags.\n+\t(write_langs): Similarly.\n+\t* c.opt: Specify languages.\n+\t* opts.h: Remove languages.\n+\t* opts.sh: Recognise front-end defined languages.\n+doc:\n+\t* sourcebuild.texi: Update.\n+\n 2003-06-15  Andreas Jaeger  <aj@suse.de>\n \n \t* alloc-pool.c: Convert to ISO C90 prototypes."}, {"sha": "aaadc708f7297180f158c410f990062e560fdd91", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -1,3 +1,8 @@\n+2003-06-15  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* lang.opt: Declare Ada.\n+\t* misc.c (gnat_init_options): Update.\n+\n 2003-06-14  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* utils.c (begin_subprog_body): Adjust init_function_start call."}, {"sha": "9d8b7ab221ddbb26f72d0ebe597d13b096ec8fb6", "filename": "gcc/ada/lang.opt", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fada%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fada%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flang.opt?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -18,29 +18,13 @@\n ; Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n ; 02111-1307, USA.\n \n-\n-; This file is processed by the script opts.sh.  It is a database of\n-; command line options, with each record separated by a blank line,\n-; and each field appearing on its own line.  The first field is the\n-; command-line switch with the leading \"-\" removed.  All options\n-; beginning with \"f\" or \"W\" are implicitly assumed to take a \"no-\"\n-; form; this form should not be listed.  If you do not want this\n-; negative form and you want it to be automatically rejected, add\n-; RejectNegative to the second field.\n-\n-; The second field should contain \"Ada\".  If the switch takes an\n-; argument, then you should also specify \"Joined\" and/or \"Separate\" to\n-; indicate where the argument can appear.\n-\n-; Comments can appear on their own line anwhere in the file, preceded\n-; by a semicolon.  Whitespace is permitted before the semicolon.\n-\n-; For each switch XXX below, an enumeration constant is created by the\n-; script opts.sh spelt OPT_XXX, but with all non-alphanumeric\n-; characters replaced with an underscore.\n+; See c.opt for a description of this file's format.\n \n ; Please try to keep this file in ASCII collating order.\n \n+Language\n+Ada\n+\n I\n Ada Joined Separate\n "}, {"sha": "81bc3d948761bd92e0507b5eb456b5c0e0b4ff3f", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -294,7 +294,7 @@ gnat_init_options ()\n   gnat_argv[0] = save_argv[0];     /* name of the command */ \n   gnat_argc = 1;\n \n-  return CL_ADA;\n+  return CL_Ada;\n }\n \n /* Here is the function to handle the compiler error processing in GCC.  */"}, {"sha": "680c3cbb72284d0da465aee9e97bb0e10d8ac9b3", "filename": "gcc/c-opts.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -50,7 +50,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n # define TARGET_EBCDIC 0\n #endif\n \n-static const int lang_flags[] = {CL_C, CL_OBJC, CL_CXX, CL_OBJCXX};\n+static const int lang_flags[] = {CL_C, CL_ObjC, CL_CXX, CL_ObjCXX};\n \n static int saved_lineno;\n \n@@ -1537,7 +1537,7 @@ write_langs (buf, flags)\n   *buf = '\\0';\n   if (flags & CL_C)\n     strcat (buf, \"C\");\n-  if (flags & CL_OBJC)\n+  if (flags & CL_ObjC)\n     {\n       if (*buf)\n \tstrcat (buf, \"/\");"}, {"sha": "f277512efbca6f77637c42b83a969ef9f9228320", "filename": "gcc/c.opt", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -29,10 +29,10 @@\n ; RejectNegative to the second field.\n \n ; The second field is a space-separated list of which parts of the\n-; compiler recognize the switch.  Current valid entries are \"C\",\n-; \"ObjC\", \"C++\" and \"ObjC++\".  If the switch takes an argument, then\n-; you should also specify \"Joined\" and/or \"Separate\" to indicate where\n-; the argument can appear.\n+; compiler recognize the switch, as declared by \"Language\" entries.\n+; If the switch takes an argument, then you should also specify\n+; \"Joined\" and/or \"Separate\" to indicate where the argument can\n+; appear.\n \n ; Comments can appear on their own line anwhere in the file, preceded\n ; by a semicolon.  Whitespace is permitted before the semicolon.\n@@ -43,6 +43,18 @@\n \n ; Please try to keep this file in ASCII collating order.\n \n+Language\n+C\n+\n+Language\n+ObjC\n+\n+Language\n+C++\n+\n+Language\n+ObjC++\n+\n -help\n C ObjC C++ ObjC++\n "}, {"sha": "a079bce266f16eb51bb82234efc4487221af210d", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -450,9 +450,6 @@ Details of source file suffixes for that language and @option{-x\n Entries in @code{default_compilers} in @file{gcc.c} for source file\n suffixes for that language.\n @item\n-A bitmask in @file{opts.h} that flags each switch accepted by\n-the front end, for example @code{CL_JAVA}.\n-@item\n Preferably test suites, which may be under @file{gcc/testsuite} or\n runtime library directories.  FIXME: document somewhere how to write\n test suite harnesses.\n@@ -605,9 +602,8 @@ Move to the stage directory files not included in @code{stagestuff} in\n \n @item lang.opt\n This file registers the set of switches that the front end accepts on\n-the command line.  The file format is documented in each\n-@file{lang.opt} file in the GCC tree.  @file{lang.opt} is processed\n-by the script @file{opts.sh}.\n+the command line.  The file format is documented in the file\n+@file{c.opt}.  These files are processed by the script @file{opts.sh}.\n @item lang-options.h\n This file provides entries for @code{documented_lang_options} in\n @file{toplev.c} describing command-line options the front end accepts"}, {"sha": "f1923fad5841934be9da71ec56d385d457f785fa", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -1,3 +1,7 @@\n+Sun Jun 15 15:56:51 2003  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* lang.opt: Declare F77.\n+\n Sat Jun 14 18:13:00 2003  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* com.c (stor_parm_decls): Adjust init_function_start call."}, {"sha": "c6e453e9c57d1cc6cb13532682aa2b8519526ec8", "filename": "gcc/f/lang.opt", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Ff%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Ff%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flang.opt?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -18,29 +18,13 @@\n ; Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n ; 02111-1307, USA.\n \n-\n-; This file is processed by the script opts.sh.  It is a database of\n-; command line options, with each record separated by a blank line,\n-; and each field appearing on its own line.  The first field is the\n-; command-line switch with the leading \"-\" removed.  All options\n-; beginning with \"f\" or \"W\" are implicitly assumed to take a \"no-\"\n-; form; this form should not be listed.  If you do not want this\n-; negative form and you want it to be automatically rejected, add\n-; RejectNegative to the second field.\n-\n-; The second field should contain \"F77\".  If the switch takes an\n-; argument, then you should also specify \"Joined\" and/or \"Separate\" to\n-; indicate where the argument can appear.\n-\n-; Comments can appear on their own line anwhere in the file, preceded\n-; by a semicolon.  Whitespace is permitted before the semicolon.\n-\n-; For each switch XXX below, an enumeration constant is created by the\n-; script opts.sh spelt OPT_XXX, but with all non-alphanumeric\n-; characters replaced with an underscore.\n+; See c.opt for a description of this file's format.\n \n ; Please try to keep this file in ASCII collating order.\n \n+Language\n+F77\n+\n I\n F77 Joined\n "}, {"sha": "e2c58664bd34b06eec776555d9db4b18abc7fe8e", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -1,3 +1,8 @@\n+2003-06-15  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* lang.opt: Declare Java.\n+\t* lang.c (java_init_options): Update.\n+\n 2003-06-15  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* lang.c (version_flag): Rename to v_flag to avoid clash w/ toplev.h."}, {"sha": "ff20985fc50cc89ee3f9e19407d94609d0b83dd6", "filename": "gcc/java/lang.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -695,7 +695,7 @@ java_init_options (void)\n \n   jcf_path_init ();\n \n-  return CL_JAVA;\n+  return CL_Java;\n }\n \n static bool"}, {"sha": "e108fb72c2c6553cb936ee12647252508f6c18a8", "filename": "gcc/java/lang.opt", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fjava%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fjava%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.opt?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -18,29 +18,13 @@\n ; Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n ; 02111-1307, USA.\n \n-\n-; This file is processed by the script opts.sh.  It is a database of\n-; command line options, with each record separated by a blank line,\n-; and each field appearing on its own line.  The first field is the\n-; command-line switch with the leading \"-\" removed.  All options\n-; beginning with \"f\" or \"W\" are implicitly assumed to take a \"no-\"\n-; form; this form should not be listed.  If you do not want this\n-; negative form and you want it to be automatically rejected, add\n-; RejectNegative to the second field.\n-\n-; The second field should contain \"Java\".  If the switch takes an\n-; argument, then you should also specify \"Joined\" and/or \"Separate\" to\n-; indicate where the argument can appear.\n-\n-; Comments can appear on their own line anwhere in the file, preceded\n-; by a semicolon.  Whitespace is permitted before the semicolon.\n-\n-; For each switch XXX below, an enumeration constant is created by the\n-; script opts.sh spelt OPT_XXX, but with all non-alphanumeric\n-; characters replaced with an underscore.\n+; See c.opt for a description of this file's format.\n \n ; Please try to keep this file in ASCII collating order.\n \n+Language\n+Java\n+\n I\n Java Joined\n "}, {"sha": "31c6e8e7f312925b15fd218f1fa63975423c18ee", "filename": "gcc/opts.h", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fopts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fopts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.h?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -33,18 +33,9 @@ struct cl_option\n extern const struct cl_option cl_options[];\n extern const unsigned int cl_options_count;\n \n-#define CL_C\t\t\t(1 << 0) /* Only C.  */\n-#define CL_OBJC\t\t\t(1 << 1) /* Only ObjC.  */\n-#define CL_CXX\t\t\t(1 << 2) /* Only C++.  */\n-#define CL_OBJCXX\t\t(1 << 3) /* Only ObjC++.  */\n-#define CL_F77\t\t\t(1 << 4) /* Only Fortran.  */\n-#define CL_JAVA\t\t\t(1 << 5) /* Only Java.  */\n-#define CL_ADA\t\t\t(1 << 6) /* Only Ada.  */\n-#define CL_TREELANG\t\t(1 << 7) /* Only Treelang.  */\n-#define CL_COMMON\t\t(1 << 8) /* Language-independent.  */\n-\n #define CL_JOINED\t\t(1 << 24) /* If takes joined argument.  */\n #define CL_SEPARATE\t\t(1 << 25) /* If takes a separate argument.  */\n #define CL_REJECT_NEGATIVE\t(1 << 26) /* Reject no- form.  */\n+#define CL_COMMON\t\t(1 << 27) /* Language-independent.  */\n \n #endif"}, {"sha": "dbff2f8cf313dbe074c96068c4607bb14dc49060", "filename": "gcc/opts.sh", "status": "modified", "additions": 29, "deletions": 22, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fopts.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Fopts.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.sh?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -42,37 +42,38 @@ ${AWK} '\n \t/^[ \\t]*(;|$)/\t{ next }\n \t/^[^ \\t]/ \t{ gsub (\"\\n\", \"\\034\", $0); print }\n ' \"$@\" | ${SORT} | ${AWK} '\n-    function switch_flags (langs,   flags)\n+    function switch_flags (flags,   result)\n     {\n-\tlangs = \":\" langs \":\"\n-\tgsub( \" \", \":\", langs)\n-\tflags = \"0\"\n-        if (langs ~ \":C:\") flags = flags \" | CL_C\"\n-        if (langs ~ \":ObjC:\") flags = flags \" | CL_OBJC\"\n-        if (langs ~ \":C\\\\+\\\\+:\") flags = flags \" | CL_CXX\"\n-        if (langs ~ \":ObjC\\\\+\\\\+:\") flags = flags \" | CL_OBJCXX\"\n-        if (langs ~ \":F77:\") flags = flags \" | CL_F77\"\n-        if (langs ~ \":Java:\") flags = flags \" | CL_JAVA\"\n-        if (langs ~ \":Ada:\") flags = flags \" | CL_ADA\"\n-        if (langs ~ \":Tree:\") flags = flags \" | CL_TREELANG\"\n-        if (langs ~ \":Common:\") flags = flags \" | CL_COMMON\"\n-        if (langs ~ \":Joined:\") flags = flags \" | CL_JOINED\"\n-        if (langs ~ \":Separate:\") flags = flags \" | CL_SEPARATE\"\n-        if (langs ~ \":RejectNegative:\") flags = flags \" | CL_REJECT_NEGATIVE\"\n-\tsub( \"^0 \\\\| \", \"\", flags )\n-\treturn flags\n+\tflags = \" \" flags \" \"\n+\tresult = \"0\"\n+\tfor (j = 0; j < n_langs; j++) {\n+\t    if (flags ~ \" \" langs[j] \" \")\n+\t\tresult = result \" | \" macros[j]\n+\t}\n+        if (flags ~ \" Common \") result = result \" | CL_COMMON\"\n+        if (flags ~ \" Joined \") result = result \" | CL_JOINED\"\n+        if (flags ~ \" Separate \") result = result \" | CL_SEPARATE\"\n+        if (flags ~ \" RejectNegative \") result = result \" | CL_REJECT_NEGATIVE\"\n+\tsub( \"^0 \\\\| \", \"\", result )\n+\treturn result\n     }\n \n     BEGIN {\n \tFS = \"\\034\"\n \tn_opts = 0\n+\tn_langs = 0\n     }\n \n # Collect the text and flags of each option into an array\n     {\n-\topts[n_opts] = $1\n-\tflags[n_opts] = $2\n-\tn_opts++;\n+\tif ($1 == \"Language\") {\n+\t\tlangs[n_langs] = $2\n+\t\tn_langs++;\n+\t} else {\n+\t\topts[n_opts] = $1\n+\t\tflags[n_opts] = $2\n+\t\tn_opts++;\n+\t}\n     }\n \n # Dump out an enumeration into a .h file, and an array of options into a\n@@ -83,7 +84,13 @@ ${AWK} '\n \tcomma = \",\"\n \n \tprint \"/* This file is auto-generated by opts.sh.  */\\n\" > h_file\n-\tprint \"enum opt_code\\n{\"\t\t\t>> h_file\n+\tfor (i = 0; i < n_langs; i++) {\n+\t    macros[i] = \"CL_\" langs[i]\n+\t    gsub( \"[^A-Za-z0-9_]\", \"X\", macros[i] )\n+\t    s = substr(\"         \", length (macros[i]))\n+\t    print \"#define \" macros[i] s \" (1 << \" i \")\" >> h_file\n+\t}\n+\tprint \"\\nenum opt_code\\n{\"\t\t\t>> h_file\n \n \tprint \"/* This file is auto-generated by opts.sh.  */\\n\" > c_file\n \tprint \"#include \\\"\" h_file \"\\\"\"\t\t\t>> c_file"}, {"sha": "e74996778076c6b457fb605c55c6a1c77570087f", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -1,3 +1,8 @@\n+2003-06-15  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* lang.opt: Declare Treelang.  Update.\n+\t* tree1.c (treelang_init_options): Update.\n+\n 2003-06-14  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* treetree.c (tree_code_create_function_initial): Adjust"}, {"sha": "a8fd70b068e6e75d45c5c801b13a6a0952b8e105", "filename": "gcc/treelang/lang.opt", "status": "modified", "additions": 9, "deletions": 25, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Ftreelang%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Ftreelang%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Flang.opt?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -18,42 +18,26 @@\n ; Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n ; 02111-1307, USA.\n \n-\n-; This file is processed by the script opts.sh.  It is a database of\n-; command line options, with each record separated by a blank line,\n-; and each field appearing on its own line.  The first field is the\n-; command-line switch with the leading \"-\" removed.  All options\n-; beginning with \"f\" or \"W\" are implicitly assumed to take a \"no-\"\n-; form; this form should not be listed.  If you do not want this\n-; negative form and you want it to be automatically rejected, add\n-; RejectNegative to the second field.\n-\n-; The second field should contain \"Tree\".  If the switch takes an\n-; argument, then you should also specify \"Joined\" and/or \"Separate\" to\n-; indicate where the argument can appear.\n-\n-; Comments can appear on their own line anwhere in the file, preceded\n-; by a semicolon.  Whitespace is permitted before the semicolon.\n-\n-; For each switch XXX below, an enumeration constant is created by the\n-; script opts.sh spelt OPT_XXX, but with all non-alphanumeric\n-; characters replaced with an underscore.\n+; See c.opt for a description of this file's format.\n \n ; Please try to keep this file in ASCII collating order.\n \n+Language\n+Treelang\n+\n -help\n-Tree\n+Treelang\n \n flexer-trace\n-Tree\n+Treelang\n \n fparser-trace\n-Tree\n+Treelang\n \n v\n-Tree\n+Treelang\n \n y\n-Tree\n+Treelang\n \n ; This comment is to ensure we retain the blank line above."}, {"sha": "4c1a8468def8685c6fa38b152396a6062da7093f", "filename": "gcc/treelang/tree1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Ftreelang%2Ftree1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be43ab4e01784fedf2cb1eca843783e5eecd3535/gcc%2Ftreelang%2Ftree1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Ftree1.c?ref=be43ab4e01784fedf2cb1eca843783e5eecd3535", "patch": "@@ -92,7 +92,7 @@ static unsigned int work_nesting_level = 0;\n int\n treelang_init_options (void)\n {\n-  return CL_TREELANG;\n+  return CL_Treelang;\n }\n \n /* Process a switch - called by opts.c.  */"}]}