{"sha": "bcea2185485a81975e4ebebde90e219bc8f4bf4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNlYTIxODU0ODVhODE5NzVlNGViZWJkZTkwZTIxOWJjOGY0YmY0ZA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-28T13:43:23Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-28T13:43:23Z"}, "message": "(__builtin_new): Avoid passing 0 to malloc.\n\nFrom-SVN: r2267", "tree": {"sha": "1c53e37f80e7431dec2cbfb984dc1421d7c2e52d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c53e37f80e7431dec2cbfb984dc1421d7c2e52d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcea2185485a81975e4ebebde90e219bc8f4bf4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcea2185485a81975e4ebebde90e219bc8f4bf4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcea2185485a81975e4ebebde90e219bc8f4bf4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcea2185485a81975e4ebebde90e219bc8f4bf4d/comments", "author": null, "committer": null, "parents": [{"sha": "560df144a9f65ee814113fb2c7ce13c9c8f2ef7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/560df144a9f65ee814113fb2c7ce13c9c8f2ef7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/560df144a9f65ee814113fb2c7ce13c9c8f2ef7d"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "00c3909d19643c27df8d964e9a98dbed9bf68c37", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcea2185485a81975e4ebebde90e219bc8f4bf4d/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcea2185485a81975e4ebebde90e219bc8f4bf4d/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=bcea2185485a81975e4ebebde90e219bc8f4bf4d", "patch": "@@ -1209,6 +1209,9 @@ __builtin_new (sz)\n {\n   void *p;\n \n+  /* malloc (0) is unpredictable; avoid it.  */\n+  if (sz == 0)\n+    sz = 1;\n   p = (void *) malloc (sz);\n   if (p == 0)\n     (*__new_handler) ();"}]}