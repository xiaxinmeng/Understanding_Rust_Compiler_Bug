{"sha": "58cc255ca031b2e0f5da7646347021248cc48805", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThjYzI1NWNhMDMxYjJlMGY1ZGE3NjQ2MzQ3MDIxMjQ4Y2M0ODgwNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-04-15T21:17:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-04-15T21:17:29Z"}, "message": "constexpr.c (cxx_eval_store_expression): Ignore clobbers.\n\n\t* constexpr.c (cxx_eval_store_expression): Ignore clobbers.\n\t(build_constexpr_constructor_member_initializers): Loop to find\n\tthe BIND_EXPR.\n\t* decl.c (start_preparsed_function): Clobber the object at the\n\tbeginning of a constructor.\n\nFrom-SVN: r222135", "tree": {"sha": "7ece978236340d6784aa4b3997ddc119b2cb5fd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ece978236340d6784aa4b3997ddc119b2cb5fd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58cc255ca031b2e0f5da7646347021248cc48805", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58cc255ca031b2e0f5da7646347021248cc48805", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58cc255ca031b2e0f5da7646347021248cc48805", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58cc255ca031b2e0f5da7646347021248cc48805/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "efb5e8170a77bb24bab9eb6f3331d815e255c8ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efb5e8170a77bb24bab9eb6f3331d815e255c8ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efb5e8170a77bb24bab9eb6f3331d815e255c8ee"}], "stats": {"total": 68, "additions": 64, "deletions": 4}, "files": [{"sha": "bbfba2b1dfe22314c7f4c5a793afc7c9ef5864fd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cc255ca031b2e0f5da7646347021248cc48805/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cc255ca031b2e0f5da7646347021248cc48805/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=58cc255ca031b2e0f5da7646347021248cc48805", "patch": "@@ -1,5 +1,11 @@\n 2015-04-15  Jason Merrill  <jason@redhat.com>\n \n+\t* constexpr.c (cxx_eval_store_expression): Ignore clobbers.\n+\t(build_constexpr_constructor_member_initializers): Loop to find\n+\tthe BIND_EXPR.\n+\t* decl.c (start_preparsed_function): Clobber the object at the\n+\tbeginning of a constructor.\n+\n \t* decl.c (grokmethod): Only set DECL_COMDAT if TREE_PUBLIC is set.\n \t* method.c (implicitly_declare_fn): Likewise.\n \t* decl2.c (vague_linkage_p): Check TREE_PUBLIC first."}, {"sha": "2990519b4bc0626266bc4c13cf1d3f9d40dc403f", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cc255ca031b2e0f5da7646347021248cc48805/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cc255ca031b2e0f5da7646347021248cc48805/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=58cc255ca031b2e0f5da7646347021248cc48805", "patch": "@@ -543,7 +543,16 @@ build_constexpr_constructor_member_initializers (tree type, tree body)\n       || TREE_CODE (body) == EH_SPEC_BLOCK)\n     body = TREE_OPERAND (body, 0);\n   if (TREE_CODE (body) == STATEMENT_LIST)\n-    body = STATEMENT_LIST_HEAD (body)->stmt;\n+    {\n+      tree_stmt_iterator i = tsi_start (body);\n+      while (true)\n+\t{\n+\t  body = tsi_stmt (i);\n+\t  if (TREE_CODE (body) == BIND_EXPR)\n+\t    break;\n+\t  tsi_next (&i);\n+\t}\n+    }\n   body = BIND_EXPR_BODY (body);\n   if (TREE_CODE (body) == CLEANUP_POINT_EXPR)\n     {\n@@ -2552,6 +2561,11 @@ cxx_eval_store_expression (const constexpr_ctx *ctx, tree t,\n {\n   constexpr_ctx new_ctx = *ctx;\n \n+  tree init = TREE_OPERAND (t, 1);\n+  if (TREE_CLOBBER_P (init))\n+    /* Just ignore clobbers.  */\n+    return void_node;\n+\n   /* First we figure out where we're storing to.  */\n   tree target = TREE_OPERAND (t, 0);\n   target = cxx_eval_constant_expression (ctx, target,\n@@ -2633,9 +2647,8 @@ cxx_eval_store_expression (const constexpr_ctx *ctx, tree t,\n       new_ctx.object = target;\n     }\n \n-  tree init = cxx_eval_constant_expression (&new_ctx, TREE_OPERAND (t, 1),\n-\t\t\t\t\t    false,\n-\t\t\t\t\t    non_constant_p, overflow_p);\n+  init = cxx_eval_constant_expression (&new_ctx, init, false,\n+\t\t\t\t       non_constant_p, overflow_p);\n   if (target == object)\n     /* The hash table might have moved since the get earlier.  */\n     ctx->values->put (object, init);"}, {"sha": "965f07cfbd79437a3315ebd468b86c69fab01d89", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cc255ca031b2e0f5da7646347021248cc48805/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cc255ca031b2e0f5da7646347021248cc48805/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=58cc255ca031b2e0f5da7646347021248cc48805", "patch": "@@ -13708,6 +13708,20 @@ start_preparsed_function (tree decl1, tree attrs, int flags)\n \n   store_parm_decls (current_function_parms);\n \n+  if (!processing_template_decl\n+      && flag_lifetime_dse && DECL_CONSTRUCTOR_P (decl1))\n+    {\n+      /* Insert a clobber to let the back end know that the object storage\n+\t is dead when we enter the constructor.  */\n+      tree btype = CLASSTYPE_AS_BASE (current_class_type);\n+      tree clobber = build_constructor (btype, NULL);\n+      TREE_THIS_VOLATILE (clobber) = true;\n+      tree bref = build_nop (build_reference_type (btype), current_class_ptr);\n+      bref = convert_from_reference (bref);\n+      tree exprstmt = build2 (MODIFY_EXPR, btype, bref, clobber);\n+      finish_expr_stmt (exprstmt);\n+    }\n+\n   return true;\n }\n "}, {"sha": "16d9a7487819f73ea63d8c039af39650857119c5", "filename": "gcc/testsuite/g++.dg/opt/flifetime-dse2.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cc255ca031b2e0f5da7646347021248cc48805/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fflifetime-dse2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cc255ca031b2e0f5da7646347021248cc48805/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fflifetime-dse2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fflifetime-dse2.C?ref=58cc255ca031b2e0f5da7646347021248cc48805", "patch": "@@ -0,0 +1,27 @@\n+// { dg-options \"-O3 -flifetime-dse\" }\n+// { dg-do run }\n+\n+typedef __SIZE_TYPE__ size_t;\n+inline void * operator new (size_t, void *p) { return p; }\n+\n+struct A\n+{\n+  int i;\n+  A() {}\n+  ~A() {}\n+};\n+\n+int main()\n+{\n+  int ar[1] = { 42 };\n+  A* ap = new(ar) A;\n+\n+  // When the constructor starts the object has indeterminate value.\n+  if (ap->i == 42) __builtin_abort();\n+\n+  ap->i = 42;\n+  ap->~A();\n+\n+  // When the destructor ends the object no longer exists.\n+  if (ar[0] == 42) __builtin_abort();\n+}"}]}