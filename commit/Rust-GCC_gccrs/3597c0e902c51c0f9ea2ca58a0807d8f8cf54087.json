{"sha": "3597c0e902c51c0f9ea2ca58a0807d8f8cf54087", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU5N2MwZTkwMmM1MWMwZjllYTJjYTU4YTA4MDdkOGY4Y2Y1NDA4Nw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-08-30T14:12:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-30T14:12:00Z"}, "message": "opt.ads, [...]: Update comment.\n\n2011-08-30  Robert Dewar  <dewar@adacore.com>\n\n\t* opt.ads, s-soflin.adb, exp_ch9.adb, sem_res.adb: Update comment.\n\tMinor code reorg/reformatting.\n\nFrom-SVN: r178314", "tree": {"sha": "961cd44bd2570bce0e1a6ce098fe4e1c7c71a44b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/961cd44bd2570bce0e1a6ce098fe4e1c7c71a44b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3597c0e902c51c0f9ea2ca58a0807d8f8cf54087", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3597c0e902c51c0f9ea2ca58a0807d8f8cf54087", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3597c0e902c51c0f9ea2ca58a0807d8f8cf54087", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3597c0e902c51c0f9ea2ca58a0807d8f8cf54087/comments", "author": null, "committer": null, "parents": [{"sha": "da94696d33e93be999d7f9f5ec838cdfa9627385", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da94696d33e93be999d7f9f5ec838cdfa9627385", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da94696d33e93be999d7f9f5ec838cdfa9627385"}], "stats": {"total": 40, "additions": 22, "deletions": 18}, "files": [{"sha": "e39ed6ae2cec42eb12ccafb5b1b867d090bf5c6e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3597c0e902c51c0f9ea2ca58a0807d8f8cf54087/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3597c0e902c51c0f9ea2ca58a0807d8f8cf54087/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3597c0e902c51c0f9ea2ca58a0807d8f8cf54087", "patch": "@@ -1,3 +1,8 @@\n+2011-08-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* opt.ads, s-soflin.adb, exp_ch9.adb, sem_res.adb: Update comment.\n+\tMinor code reorg/reformatting.\n+\n 2011-08-30  Yannick Moy  <moy@adacore.com>\n \n \t* opt.adb, opt.ads (Full_Expander_Active): New function defines a"}, {"sha": "58d6df00bf600a00bdc47b2b9cd20a47a90c07d0", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3597c0e902c51c0f9ea2ca58a0807d8f8cf54087/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3597c0e902c51c0f9ea2ca58a0807d8f8cf54087/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=3597c0e902c51c0f9ea2ca58a0807d8f8cf54087", "patch": "@@ -4905,6 +4905,7 @@ package body Exp_Ch9 is\n \n    begin\n       if Full_Expander_Active then\n+\n          --  If we have no handled statement sequence, we may need to build\n          --  a dummy sequence consisting of a null statement. This can be\n          --  skipped if the trivial accept optimization is permitted.\n@@ -11504,6 +11505,7 @@ package body Exp_Ch9 is\n          return;\n \n       elsif Full_Expander_Active then\n+\n          --  Associate discriminals with the first subprogram or entry body to\n          --  be expanded.\n "}, {"sha": "d50f77b6ac7d85d20435aa883a4274350e261a6d", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3597c0e902c51c0f9ea2ca58a0807d8f8cf54087/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3597c0e902c51c0f9ea2ca58a0807d8f8cf54087/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=3597c0e902c51c0f9ea2ca58a0807d8f8cf54087", "patch": "@@ -1832,14 +1832,6 @@ package Opt is\n    --  behavior can be disabled using switch -gnatd.t which will set this flag\n    --  to False and revert to the previous dynamic behavior.\n \n-   function Full_Expander_Active return Boolean;\n-   --  Returns the value of (Expander_Active and not ALFA_Mode). This \"flag\"\n-   --  indicates that expansion is fully active, that is, not in the reduced\n-   --  mode for Alfa (True) or that expansion is either deactivated, or active\n-   --  in the reduced mode for Alfa (False). For more information on full\n-   --  expansion, see package Expander. For more information on reduced\n-   --  Alfa expansion, see package Exp_Alfa.\n-\n    -----------------------\n    -- Tree I/O Routines --\n    -----------------------\n@@ -1876,17 +1868,24 @@ package Opt is\n    --  Used to store the ASIS version number read from a tree file to check if\n    --  it is the same as stored in the ASIS version number in Tree_IO.\n \n-   ----------------------------------\n-   -- Mode for Formal Verification --\n-   ----------------------------------\n-\n-   --  This mode is currently defined through a debug flag\n+   -----------------------------------\n+   -- Modes for Formal Verification --\n+   -----------------------------------\n \n    ALFA_Mode : Boolean := False;\n    --  Specific compiling mode targeting formal verification through the\n    --  generation of Why code for those parts of the input code that belong to\n    --  the ALFA subset of Ada. Set by debug flag -gnatd.F.\n \n+   function Full_Expander_Active return Boolean;\n+   pragma Inline (Full_Expander_Active);\n+   --  Returns the value of (Expander_Active and not ALFA_Mode). This \"flag\"\n+   --  indicates that expansion is fully active, that is, not in the reduced\n+   --  mode for Alfa (True) or that expansion is either deactivated, or active\n+   --  in the reduced mode for Alfa (False). For more information on full\n+   --  expansion, see package Expander. For more information on reduced\n+   --  Alfa expansion, see package Exp_Alfa.\n+\n private\n \n    --  The following type is used to save and restore settings of switches in"}, {"sha": "ca3df4ae544941c7129209799b2e383cdd3e59e9", "filename": "gcc/ada/s-soflin.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3597c0e902c51c0f9ea2ca58a0807d8f8cf54087/gcc%2Fada%2Fs-soflin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3597c0e902c51c0f9ea2ca58a0807d8f8cf54087/gcc%2Fada%2Fs-soflin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-soflin.adb?ref=3597c0e902c51c0f9ea2ca58a0807d8f8cf54087", "patch": "@@ -120,11 +120,8 @@ package body System.Soft_Links is\n    ----------------\n \n    procedure Create_TSD (New_TSD : in out TSD) is\n-      use type Parameters.Size_Type;\n-\n-      SS_Ratio_Dynamic : constant Boolean :=\n-                          Parameters.Sec_Stack_Percentage = Parameters.Dynamic;\n-\n+      use Parameters;\n+      SS_Ratio_Dynamic : constant Boolean := Sec_Stack_Percentage = Dynamic;\n    begin\n       if SS_Ratio_Dynamic then\n          SST.SS_Init"}, {"sha": "074f5f2817b37166bcaffafb89312cc6c98e00a8", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3597c0e902c51c0f9ea2ca58a0807d8f8cf54087/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3597c0e902c51c0f9ea2ca58a0807d8f8cf54087/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=3597c0e902c51c0f9ea2ca58a0807d8f8cf54087", "patch": "@@ -8095,6 +8095,7 @@ package body Sem_Res is\n          Expander_Mode_Restore;\n \n       --  In ALFA_Mode, no magic needed, we just resolve the underlying nodes\n+      --  But why is this special handling for ALFA_Mode required ???\n \n       else\n          Resolve (Condition (N), Typ);"}]}