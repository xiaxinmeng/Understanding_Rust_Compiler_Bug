{"sha": "6e2446b6df8e0838e824b14d81fc161bd87f2351", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUyNDQ2YjZkZjhlMDgzOGU4MjRiMTRkODFmYzE2MWJkODdmMjM1MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-04-10T14:24:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-04-10T14:24:00Z"}, "message": "PR debug/65821 - wrong location for main().\n\n\t* call.c (clear_location_r): New.\n\t(convert_default_arg): Use it.\n\t* tree.c (bot_manip): Remove builtin_LINE/FILE handling.\n\nFrom-SVN: r259278", "tree": {"sha": "a818b1dcf483ed1a8e9abfad5e1f2cf895f4d2a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a818b1dcf483ed1a8e9abfad5e1f2cf895f4d2a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e2446b6df8e0838e824b14d81fc161bd87f2351", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e2446b6df8e0838e824b14d81fc161bd87f2351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e2446b6df8e0838e824b14d81fc161bd87f2351", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e2446b6df8e0838e824b14d81fc161bd87f2351/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "05c602a135224b1fbc573fc54e3c925196503187", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05c602a135224b1fbc573fc54e3c925196503187", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05c602a135224b1fbc573fc54e3c925196503187"}], "stats": {"total": 56, "additions": 40, "deletions": 16}, "files": [{"sha": "42c3771b98da03080cf3d61ea37c13cb3ff88613", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2446b6df8e0838e824b14d81fc161bd87f2351/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2446b6df8e0838e824b14d81fc161bd87f2351/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6e2446b6df8e0838e824b14d81fc161bd87f2351", "patch": "@@ -1,5 +1,10 @@\n 2018-04-10  Jason Merrill  <jason@redhat.com>\n \n+\tPR debug/65821 - wrong location for main().\n+\t* call.c (clear_location_r): New.\n+\t(convert_default_arg): Use it.\n+\t* tree.c (bot_manip): Remove builtin_LINE/FILE handling.\n+\n \tPR c++/85285 - ICE with flexible array after substitution.\n \t* pt.c (instantiate_class_template_1): Check for flexible array in\n \tunion."}, {"sha": "94226d6ea7194369cee9f65c9b68156ec817bc27", "filename": "gcc/cp/call.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2446b6df8e0838e824b14d81fc161bd87f2351/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2446b6df8e0838e824b14d81fc161bd87f2351/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=6e2446b6df8e0838e824b14d81fc161bd87f2351", "patch": "@@ -7296,6 +7296,21 @@ cxx_type_promotes_to (tree type)\n   return promote;\n }\n \n+/* walk_tree callback to override EXPR_LOCATION in an expression tree.  */\n+\n+tree\n+clear_location_r (tree *tp, int *walk_subtrees, void */*data*/)\n+{\n+  if (!EXPR_P (*tp))\n+    {\n+      *walk_subtrees = 0;\n+      return NULL_TREE;\n+    }\n+  if (EXPR_HAS_LOCATION (*tp))\n+    SET_EXPR_LOCATION (*tp, input_location);\n+  return NULL_TREE;\n+}\n+\n /* ARG is a default argument expression being passed to a parameter of\n    the indicated TYPE, which is a parameter to FN.  PARMNUM is the\n    zero-based argument number.  Do any required conversions.  Return\n@@ -7360,6 +7375,11 @@ convert_default_arg (tree type, tree arg, tree fn, int parmnum,\n   /* We must make a copy of ARG, in case subsequent processing\n      alters any part of it.  */\n   arg = break_out_target_exprs (arg);\n+\n+  /* The use of a default argument has the location of the call, not where it\n+     was originally written.  */\n+  cp_walk_tree_without_duplicates (&arg, clear_location_r, NULL);\n+\n   arg = convert_for_initialization (0, type, arg, LOOKUP_IMPLICIT,\n \t\t\t\t    ICR_DEFAULT_ARGUMENT, fn, parmnum,\n \t\t\t\t    complain);"}, {"sha": "18e7793b86924bf27acb9a47bd9310d507f161fc", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2446b6df8e0838e824b14d81fc161bd87f2351/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2446b6df8e0838e824b14d81fc161bd87f2351/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=6e2446b6df8e0838e824b14d81fc161bd87f2351", "patch": "@@ -2992,22 +2992,7 @@ bot_manip (tree* tp, int* walk_subtrees, void* data)\n   /* Make a copy of this node.  */\n   t = copy_tree_r (tp, walk_subtrees, NULL);\n   if (TREE_CODE (*tp) == CALL_EXPR)\n-    {\n-      set_flags_from_callee (*tp);\n-\n-      /* builtin_LINE and builtin_FILE get the location where the default\n-\t argument is expanded, not where the call was written.  */\n-      tree callee = get_callee_fndecl (*tp);\n-      if (callee && DECL_BUILT_IN_CLASS (callee) == BUILT_IN_NORMAL)\n-\tswitch (DECL_FUNCTION_CODE (callee))\n-\t  {\n-\t  case BUILT_IN_FILE:\n-\t  case BUILT_IN_LINE:\n-\t    SET_EXPR_LOCATION (*tp, input_location);\n-\t  default:\n-\t    break;\n-\t  }\n-    }\n+    set_flags_from_callee (*tp);\n   return t;\n }\n "}, {"sha": "d8edffe1a8c330ecac0bb9b7f16233c6bc42253f", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/default-arg1.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2446b6df8e0838e824b14d81fc161bd87f2351/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fdefault-arg1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2446b6df8e0838e824b14d81fc161bd87f2351/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fdefault-arg1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fdefault-arg1.C?ref=6e2446b6df8e0838e824b14d81fc161bd87f2351", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/65821\n+// { dg-options \"-gdwarf-2 -dA\" }\n+\n+int b = 12;\n+\n+inline void foo(const int &x = (b+3))\n+{\n+  b = x;\n+}\n+\n+int main()\n+{\n+  foo();\t      // { dg-final { scan-assembler-not \"default-arg1.C:6\" } }\n+}"}]}