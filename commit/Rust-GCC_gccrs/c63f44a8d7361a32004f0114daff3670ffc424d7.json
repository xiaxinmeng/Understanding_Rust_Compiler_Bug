{"sha": "c63f44a8d7361a32004f0114daff3670ffc424d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYzZjQ0YThkNzM2MWEzMjAwNGYwMTE0ZGFmZjM2NzBmZmM0MjRkNw==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2018-06-06T21:38:49Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2018-06-06T21:38:49Z"}, "message": "builtins-3.c: Move tests requiring -mvsx to builtins-4.c.\n\ngcc/testsuite/ChangeLog:\n\n2018-06-06  Carl Love  <cel@us.ibm.com>\n\n\t* gcc.target/powerpc/builtins-3.c: Move tests requiring -mvsx\n\tto builtins-4.c.\n\t* gcc.target/powerpc/builtins-4.c: New test file for tests\n\tthat need -mvsx.\n\nFrom-SVN: r261247", "tree": {"sha": "69ff62c3baba63e414a95384d8fdaf1c22b36d04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69ff62c3baba63e414a95384d8fdaf1c22b36d04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c63f44a8d7361a32004f0114daff3670ffc424d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c63f44a8d7361a32004f0114daff3670ffc424d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c63f44a8d7361a32004f0114daff3670ffc424d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c63f44a8d7361a32004f0114daff3670ffc424d7/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c765c8cb73b0bb91e9f0401ab6567b6218b910e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c765c8cb73b0bb91e9f0401ab6567b6218b910e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c765c8cb73b0bb91e9f0401ab6567b6218b910e5"}], "stats": {"total": 338, "additions": 179, "deletions": 159}, "files": [{"sha": "32c661d74c3bd48a192d9a60a98d796a54b1bea7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c63f44a8d7361a32004f0114daff3670ffc424d7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c63f44a8d7361a32004f0114daff3670ffc424d7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c63f44a8d7361a32004f0114daff3670ffc424d7", "patch": "@@ -1,3 +1,10 @@\n+2018-06-06  Carl Love  <cel@us.ibm.com>\n+\n+\t* gcc.target/powerpc/builtins-3.c: Move tests requiring -mvsx\n+\tto builtins-4.c.\n+\t* gcc.target/powerpc/builtins-4.c: New test file for tests\n+\tthat need -mvsx.\n+\n 2018-06-06  Michael Meissner  <meissner@linux.ibm.com>\n \n \tPR target/85657"}, {"sha": "fc4fd6003de20bef1af48f61c4a5e6d7fdf81f3b", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3.c", "status": "modified", "additions": 5, "deletions": 159, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c63f44a8d7361a32004f0114daff3670ffc424d7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c63f44a8d7361a32004f0114daff3670ffc424d7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c?ref=c63f44a8d7361a32004f0114daff3670ffc424d7", "patch": "@@ -22,12 +22,6 @@ test_eq_int (vector bool int x, vector bool int y)\n \treturn vec_cmpeq (x, y);\n }\n \n-vector double\n-test_shift_left_double (vector double x, vector double y)\n-{\n-\treturn vec_sld (x, y, /* shift_by */ 10);\n-}\n-\n vector signed char\n test_nabs_char (vector signed char x)\n {\n@@ -46,18 +40,6 @@ test_nabs_int (vector int x)\n   return vec_nabs (x);\n }\n \n-vector float\n-test_nabs_float (vector float x)\n-{\n-  return vec_nabs (x);\n-}\n-\n-vector double\n-test_nabs_double (vector double x)\n-{\n-\treturn vec_nabs (x);\n-}\n-\n vector signed char\n test_sll_vsc_vsc_vsuc (vector signed char x, vector unsigned char y)\n {\n@@ -82,40 +64,6 @@ test_sll_vui_vui_vuc (vector unsigned int x, vector unsigned char y)\n \treturn vec_sll (x, y);\n }\n \n-vector signed int long long\n-test_sll_vsill_vsill_vuc (vector signed long long int x,\n-\t\t\t  vector unsigned char y)\n-{\n-\treturn vec_sll (x, y);\n-}\n-\n-vector unsigned int long long\n-test_sll_vuill_vuill_vuc (vector unsigned long long int x,\n-\t\t\t  vector unsigned char y)\n-{\n-\treturn vec_sll (x, y);\n-}\n-\n-vector bool long long\n-test_sll_vbll_vbll_vuc (vector bool long long x,\n-\t\t\tvector unsigned char y)\n-{\n-\treturn vec_sll (x, y);\n-}\n-\n-vector bool long long\n-test_sll_vbll_vbll_vull (vector bool long long x,\n-\t\t\tvector unsigned long long y)\n-{\n-\treturn vec_sll (x, y);\n-}\n-\n-vector bool long long\n-test_sll_vbll_vbll_vus (vector bool long long x,\n-\t\t\tvector unsigned short y)\n-{\n-\treturn vec_sll (x, y);\n-}\n vector pixel\n test_sll_vp_vp_vuc (vector pixel x, vector unsigned char y)\n {\n@@ -182,30 +130,6 @@ test_slo_vui_vui_vuc (vector unsigned int x, vector unsigned char y)\n \treturn vec_slo (x, y);\n }\n \n-vector signed long long\n-test_slo_vsll_slo_vsll_vsc (vector signed long long x, vector signed char y)\n-{\n-\treturn vec_slo (x, y);\n-}\n-\n-vector signed long long\n-test_slo_vsll_slo_vsll_vuc (vector signed long long x, vector unsigned char y)\n-{\n-\treturn vec_slo (x, y);\n-}\n-\n-vector unsigned long long\n-test_slo_vull_slo_vull_vsc (vector unsigned long long x, vector signed char y)\n-{\n-\treturn vec_slo (x, y);\n-}\n-\n-vector unsigned long long\n-test_slo_vull_slo_vull_vuc (vector unsigned long long x,\n-\t\t\t    vector unsigned char y)\n-{\n-\treturn vec_slo (x, y);\n-}\n \n vector pixel\n test_slo_vp_vp_vsc (vector pixel int x, vector signed char y)\n@@ -255,57 +179,6 @@ test_slo_vf_vf_vuc (vector float x, vector unsigned char y)\n \treturn vec_slo (x, y);\n }\n \n-vector signed char\n-test_vsc_sldw_vsc_vsc (vector signed char x, vector signed char y)\n-{\n-\treturn vec_sldw (x, y, 1);\n-}\n-\n-vector unsigned char\n-test_vuc_sldw_vuc_vuc (vector unsigned char x, vector unsigned char y)\n-{\n-\treturn vec_sldw (x, y, 3);\n-}\n-\n-vector signed short int\n-test_vssi_sldw_vssi_vssi (vector signed short int x,\n-                          vector signed short int y)\n-{\n-\treturn vec_sldw (x, y, 1);\n-}\n-\n-vector unsigned short int\n-test_vusi_sldw_vusi_vusi (vector unsigned short int x,\n-                          vector unsigned short int y)\n-{\n-\treturn vec_sldw (x, y, 3);\n-}\n-\n-vector signed int\n-test_vsi_sldw_vsi_vsi (vector signed int x, vector signed int y)\n-{\n-\treturn vec_sldw (x, y, 1);\n-}\n-\n-vector unsigned int\n-test_vui_sldw_vui_vui (vector unsigned int x, vector unsigned int y)\n-{\n-\treturn vec_sldw (x, y, 3);\n-}\n-\n-vector signed long long\n-test_vsl_sldw_vsl_vsl (vector signed long long x, vector signed long long y)\n-{\n-\treturn vec_sldw (x, y, 1);\n-}\n-\n-vector unsigned long long\n-test_vul_sldw_vul_vul (vector unsigned long long x,\n-                       vector unsigned long long y)\n-{\n-\treturn vec_sldw (x, y, 3);\n-}\n-\n vector int\n test_cmpb_float (vector float x, vector float y)\n {\n@@ -317,21 +190,13 @@ test_cmpb_float (vector float x, vector float y)\n      test_eq_char              1 vcmpequb inst\n      test_eq_short             1 vcmpequh inst\n      test_eq_int               1 vcmpequw inst\n-     test_shift_left_double    1 vsldoi inst\n-     test_nabs_char            1 vspltisw, 1 vsububm, 1 vminsb\n-     test_nabs_short           1 vspltisw, 1 vsubuhm, 1 vminsh\n-     test_nabs_int             1 vspltisw, 1 vsubuwm, 1 vminsw\n-     test_nabs_float           1 xvnabssp\n-     test_nabs_double          1 xvnabsdp\n+     test_nabs_char            1 vsububm, 1 vminsb\n+     test_nabs_short           1 vsubuhm, 1 vminsh\n+     test_nabs_int             1 vsubuwm, 1 vminsw\n      test_sll_vsc_vsc_vsuc     1 vsl\n      test_sll_vuc_vuc_vuc      1 vsl\n      test_sll_vsi_vsi_vuc      1 vsl\n      test_sll_vui_vui_vuc      1 vsl\n-     test_sll_vsill_vsill_vuc  1 vsl\n-     test_sll_vuill_vuill_vuc  1 vsl\n-     test_sll_vbll_vbll_vuc    1 vsl\n-     test_sll_vbll_vbll_vull   1 vsl\n-     test_sll_vbll_vbll_vus    1 vsl\n      test_sll_vp_vp_vuc        1 vsl\n      test_sll_vssi_vssi_vuc    1 vsl\n      test_sll_vusi_vusi_vuc    1 vsl\n@@ -343,10 +208,6 @@ test_cmpb_float (vector float x, vector float y)\n      test_slo_vsi_vsi_vuc      1 vslo\n      test_slo_vui_vui_vsc      1 vslo\n      test_slo_vui_vui_vuc      1 vslo\n-     test_slo_vsll_slo_vsll_vsc 1 vslo\n-     test_slo_vsll_slo_vsll_vuc 1 vslo\n-     test_slo_vull_slo_vull_vsc 1 vslo\n-     test_slo_vull_slo_vull_vuc 1 vslo\n      test_slo_vp_vp_vsc        1 vslo\n      test_slo_vp_vp_vuc        1 vslo\n      test_slo_vssi_vssi_vsc    1 vslo\n@@ -355,32 +216,17 @@ test_cmpb_float (vector float x, vector float y)\n      test_slo_vusi_vusi_vuc    1 vslo\n      test_slo_vf_vf_vsc        1 vslo\n      test_slo_vf_vf_vuc        1 vslo\n-     test_vsc_sldw_vsc_vsc     1 xxsldwi\n-     test_vuc_sldw_vuc_vuc     1 xxsldwi\n-     test_vssi_sldw_vssi_vssi  1 xxsldwi\n-     test_vusi_sldw_vusi_vusi  1 xxsldwi\n-     test_vsi_sldw_vsi_vsi     1 xxsldwi\n-     test_vui_sldw_vui_vui     1 xxsldwi\n-     test_vsl_sldw_vsl_vsl     1 xxsldwi\n-     test_vul_sldw_vul_vul     1 xxsldwi\n      test_cmpb_float           1 vcmpbfp */\n \n /* { dg-final { scan-assembler-times \"vcmpequb\" 1 } } */\n /* { dg-final { scan-assembler-times \"vcmpequh\" 1 } } */\n /* { dg-final { scan-assembler-times \"vcmpequw\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vsldoi\"   1 } } */\n /* { dg-final { scan-assembler-times \"vsububm\"  1 } } */\n /* { dg-final { scan-assembler-times \"vsubuhm\"  1 } } */\n /* { dg-final { scan-assembler-times \"vsubuwm\"  1 } } */\n /* { dg-final { scan-assembler-times \"vminsb\"   1 } } */\n /* { dg-final { scan-assembler-times \"vminsh\"   1 } } */\n /* { dg-final { scan-assembler-times \"vminsw\"   1 } } */\n-/* { dg-final { scan-assembler-times \"vspltisw\" 3 } } */\n-/* { dg-final { scan-assembler-times \"xvnabssp\" 1 } } */\n-/* { dg-final { scan-assembler-times \"xvnabsdp\" 1 } } */\n-/* { dg-final { scan-assembler-times \"vslo\"    20 } } */\n-/* { dg-final { scan-assembler-times \"xxsldwi\"  8 } } */\n+/* { dg-final { scan-assembler-times \"vslo\"    16 } } */\n /* { dg-final { scan-assembler-times \"vcmpbfp\"  1 } } */\n-/* { dg-final { scan-assembler-times \"vsl\"     68 { target le } } } */\n-/* { dg-final { scan-assembler-times \"vsl\"     68 { target { be && ilp32 } } } } */\n-/* { dg-final { scan-assembler-times \"vsl\"     82 { target { be && lp64  } } } } */\n+/* { dg-final { scan-assembler-times \"vsl\"     23 } } */"}, {"sha": "c5249fe8a028ac94dd0bf8effce65d64d58d43d5", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-4.c", "status": "added", "additions": 167, "deletions": 0, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c63f44a8d7361a32004f0114daff3670ffc424d7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c63f44a8d7361a32004f0114daff3670ffc424d7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-4.c?ref=c63f44a8d7361a32004f0114daff3670ffc424d7", "patch": "@@ -0,0 +1,167 @@\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-mvsx\" } */\n+\n+#include <altivec.h>\n+\n+vector double\n+test_shift_left_double (vector double x, vector double y)\n+{\n+\treturn vec_sld (x, y, /* shift_by */ 10);\n+}\n+\n+vector float\n+test_nabs_float (vector float x)\n+{\n+  return vec_nabs (x);\n+}\n+\n+vector double\n+test_nabs_double (vector double x)\n+{\n+\treturn vec_nabs (x);\n+}\n+\n+vector bool long long\n+test_sll_vbll_vbll_vuc (vector bool long long x,\n+\t\t\tvector unsigned char y)\n+{\n+\treturn vec_sll (x, y);\n+}\n+\n+vector bool long long\n+test_sll_vbll_vbll_vull (vector bool long long x,\n+\t\t\tvector unsigned long long y)\n+{\n+\treturn vec_sll (x, y);\n+}\n+\n+vector bool long long\n+test_sll_vbll_vbll_vus (vector bool long long x,\n+\t\t\tvector unsigned short y)\n+{\n+\treturn vec_sll (x, y);\n+}\n+\n+vector signed long long\n+test_slo_vsll_slo_vsll_vsc (vector signed long long x, vector signed char y)\n+{\n+\treturn vec_slo (x, y);\n+}\n+\n+vector signed long long\n+test_slo_vsll_slo_vsll_vuc (vector signed long long x, vector unsigned char y)\n+{\n+\treturn vec_slo (x, y);\n+}\n+\n+vector unsigned long long\n+test_slo_vull_slo_vull_vsc (vector unsigned long long x, vector signed char y)\n+{\n+\treturn vec_slo (x, y);\n+}\n+\n+vector unsigned long long\n+test_slo_vull_slo_vull_vuc (vector unsigned long long x,\n+\t\t\t    vector unsigned char y)\n+{\n+\treturn vec_slo (x, y);\n+}\n+\n+vector signed char\n+test_vsc_sldw_vsc_vsc (vector signed char x, vector signed char y)\n+{\n+\treturn vec_sldw (x, y, 1);\n+}\n+\n+vector unsigned char\n+test_vuc_sldw_vuc_vuc (vector unsigned char x, vector unsigned char y)\n+{\n+\treturn vec_sldw (x, y, 3);\n+}\n+\n+vector signed short int\n+test_vssi_sldw_vssi_vssi (vector signed short int x,\n+                          vector signed short int y)\n+{\n+\treturn vec_sldw (x, y, 1);\n+}\n+\n+vector unsigned short int\n+test_vusi_sldw_vusi_vusi (vector unsigned short int x,\n+                          vector unsigned short int y)\n+{\n+\treturn vec_sldw (x, y, 3);\n+}\n+\n+vector signed int\n+test_vsi_sldw_vsi_vsi (vector signed int x, vector signed int y)\n+{\n+\treturn vec_sldw (x, y, 1);\n+}\n+\n+vector unsigned int\n+test_vui_sldw_vui_vui (vector unsigned int x, vector unsigned int y)\n+{\n+\treturn vec_sldw (x, y, 3);\n+}\n+\n+vector signed long long\n+test_vsl_sldw_vsl_vsl (vector signed long long x, vector signed long long y)\n+{\n+\treturn vec_sldw (x, y, 1);\n+}\n+\n+vector unsigned long long\n+test_vul_sldw_vul_vul (vector unsigned long long x,\n+                       vector unsigned long long y)\n+{\n+\treturn vec_sldw (x, y, 3);\n+}\n+\n+vector signed int long long\n+test_sll_vsill_vsill_vuc (vector signed long long int x,\n+\t\t\t  vector unsigned char y)\n+{\n+\treturn vec_sll (x, y);\n+}\n+\n+vector unsigned int long long\n+test_sll_vuill_vuill_vuc (vector unsigned long long int x,\n+\t\t\t  vector unsigned char y)\n+{\n+\treturn vec_sll (x, y);\n+}\n+\n+\n+/* Expected test results:\n+\n+     test_shift_left_double        1 vsldoi\n+     test_nabs_float               1 xvnabssp\n+     test_nabs_double              1 xvnabsdp\n+     test_sll_vbll_vbll_vuc        1 vsl\n+     test_sll_vbll_vbll_vull       1 vsl\n+     test_sll_vbll_vbll_vus        1 vsl\n+     test_slo_vsll_slo_vsll_vsc    1 vslo\n+     test_slo_vsll_slo_vsll_vuc    1 vslo\n+     test_slo_vull_slo_vull_vsc    1 vslo\n+     test_slo_vull_slo_vull_vuc    1 vslo\n+     test_vsc_sldw_vsc_vsc         1 xxlor\n+     test_vuc_sldw_vuc_vuc         1 xxlor\n+     test_vssi_sldw_vssi_vssi      1 xxlor\n+     test_vusi_sldw_vusi_vusi      1 xxlor\n+     test_vsi_sldw_vsi_vsi         1 xxlor\n+     test_vui_sldw_vui_vui         1 xxlor\n+     test_vsl_sldw_vsl_vsl         1 xxlor\n+     test_vul_sldw_vul_vul         1 xxlor\n+     test_sll_vsill_vsill_vuc      1 vsl\n+     test_sll_vuill_vuill_vuc      1 vsl  */\n+\n+/* { dg-final { scan-assembler-times \"vsldoi\"    1 } } */\n+/* { dg-final { scan-assembler-times \"xvnabssp\"  1 } } */\n+/* { dg-final { scan-assembler-times \"xvnabsdp\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vslo\"      4 } } */\n+/* { dg-final { scan-assembler-times \"xxlor\"     30 } } */\n+/* { dg-final { scan-assembler-times \"vsl\"     45 { target le } } } */\n+/* { dg-final { scan-assembler-times \"vsl\"     45 { target { be && ilp32 } } } } */\n+/* { dg-final { scan-assembler-times \"vsl\"     59 { target { be && lp64  } } } } */"}]}