{"sha": "4c33b2daeb5a87aedef77993971db1a1a1c291e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMzM2IyZGFlYjVhODdhZWRlZjc3OTkzOTcxZGIxYTFhMWMyOTFlNg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-01-20T19:38:12Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-01-23T09:19:16Z"}, "message": "testsuite: Add target/xfail argument to check-function-bodies\n\ncheck-function-bodies allows individual function tests to be\nannotated with target/xfail selectors, but sometimes it's\nuseful to have the same selector for all functions.\n\n2020-01-23  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* doc/sourcebuild.texi (check-function-bodies): Add an\n\toptional target/xfail selector.\n\ngcc/testsuite/\n\t* lib/scanasm.exp (check-function-bodies): Add an optional\n\ttarget/xfail selector.", "tree": {"sha": "e9f3c076eac4a89f2a8604a93bacd5fbb2497841", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9f3c076eac4a89f2a8604a93bacd5fbb2497841"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c33b2daeb5a87aedef77993971db1a1a1c291e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c33b2daeb5a87aedef77993971db1a1a1c291e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c33b2daeb5a87aedef77993971db1a1a1c291e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c33b2daeb5a87aedef77993971db1a1a1c291e6/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccb68179642cf7ba5ee05a0d8571a95d0145e3a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccb68179642cf7ba5ee05a0d8571a95d0145e3a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccb68179642cf7ba5ee05a0d8571a95d0145e3a2"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "d634b378afc487fcb8237675d609d1b45f95f1eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c33b2daeb5a87aedef77993971db1a1a1c291e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c33b2daeb5a87aedef77993971db1a1a1c291e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c33b2daeb5a87aedef77993971db1a1a1c291e6", "patch": "@@ -1,3 +1,8 @@\n+2020-01-23  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* doc/sourcebuild.texi (check-function-bodies): Add an\n+\toptional target/xfail selector.\n+\n 2020-01-23  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR rtl-optimization/93124"}, {"sha": "1f412ded2bb77bd12338ae5a928963d4caba190a", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c33b2daeb5a87aedef77993971db1a1a1c291e6/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c33b2daeb5a87aedef77993971db1a1a1c291e6/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=4c33b2daeb5a87aedef77993971db1a1a1c291e6", "patch": "@@ -2723,7 +2723,7 @@ assembly output.\n Passes if @var{symbol} is not defined as a hidden symbol in the test's\n assembly output.\n \n-@item check-function-bodies @var{prefix} @var{terminator} [@var{option}]\n+@item check-function-bodies @var{prefix} @var{terminator} [@var{option} [@{ target/xfail @var{selector} @}]]\n Looks through the source file for comments that give the expected assembly\n output for selected functions.  Each line of expected output starts with the\n prefix string @var{prefix} and the expected output for a function as a whole"}, {"sha": "04f3e802873f27a1add21683ee5f40839fd688bf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c33b2daeb5a87aedef77993971db1a1a1c291e6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c33b2daeb5a87aedef77993971db1a1a1c291e6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c33b2daeb5a87aedef77993971db1a1a1c291e6", "patch": "@@ -1,3 +1,8 @@\n+2020-01-23  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* lib/scanasm.exp (check-function-bodies): Add an optional\n+\ttarget/xfail selector.\n+\n 2020-01-23  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.dg/torture/pr93124.c: New test."}, {"sha": "5ca58d4042027683da12bc2a1d161195cd6439e7", "filename": "gcc/testsuite/lib/scanasm.exp", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c33b2daeb5a87aedef77993971db1a1a1c291e6/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c33b2daeb5a87aedef77993971db1a1a1c291e6/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanasm.exp?ref=4c33b2daeb5a87aedef77993971db1a1a1c291e6", "patch": "@@ -604,19 +604,19 @@ proc check_function_body { functions name body_regexp } {\n \n # Check the implementations of functions against expected output.  Used as:\n #\n-# { dg-do { check-function-bodies PREFIX TERMINATOR[ OPTION] } }\n+# { dg-do { check-function-bodies PREFIX TERMINATOR[ OPTION[ SELECTOR]] } }\n #\n # See sourcebuild.texi for details.\n \n proc check-function-bodies { args } {\n     if { [llength $args] < 2 } {\n \terror \"too few arguments to check-function-bodies\"\n     }\n-    if { [llength $args] > 3 } {\n+    if { [llength $args] > 4 } {\n \terror \"too many arguments to check-function-bodies\"\n     }\n \n-    if { [llength $args] == 3 } {\n+    if { [llength $args] >= 3 } {\n \tset required_flag [lindex $args 2]\n \n \tupvar 2 dg-extra-tool-flags extra_tool_flags\n@@ -631,6 +631,16 @@ proc check-function-bodies { args } {\n \t}\n     }\n \n+    set xfail_all 0\n+    if { [llength $args] >= 4 } {\n+\tswitch [dg-process-target [lindex $args 3]] {\n+\t    \"S\" { }\n+\t    \"N\" { return }\n+\t    \"F\" { set xfail_all 1 }\n+\t    \"P\" { }\n+\t}\n+    }\n+\n     set testcase [testname-for-summary]\n     # The name might include a list of options; extract the file name.\n     set filename [lindex $testcase 0]\n@@ -694,7 +704,7 @@ proc check-function-bodies { args } {\n \t    }\n \t} elseif { [string equal -length $terminator_len $line $terminator] } {\n \t    if { ![string equal $selector \"N\"] } {\n-\t\tif { [string equal $selector \"F\"] } {\n+\t\tif { $xfail_all || [string equal $selector \"F\"] } {\n \t\t    setup_xfail \"*-*-*\"\n \t\t}\n \t\tset testname \"$testcase check-function-bodies $function_name\""}]}