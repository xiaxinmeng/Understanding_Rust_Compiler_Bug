{"sha": "db5e449c5e7cf20de09adb88e1d0eb22e9def100", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI1ZTQ0OWM1ZTdjZjIwZGUwOWFkYjg4ZTFkMGViMjJlOWRlZjEwMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-13T20:40:10Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-13T20:40:10Z"}, "message": "(RETURN_IN_MEMORY): Do nothing for structs and unions.\n\n(EXTRA_CONSTRAINT): During reload, accept pseudo reg for Q.\n\nFrom-SVN: r1199", "tree": {"sha": "11a98a71acf8949a565bd449723ba9a6db928a18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11a98a71acf8949a565bd449723ba9a6db928a18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db5e449c5e7cf20de09adb88e1d0eb22e9def100", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db5e449c5e7cf20de09adb88e1d0eb22e9def100", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db5e449c5e7cf20de09adb88e1d0eb22e9def100", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db5e449c5e7cf20de09adb88e1d0eb22e9def100/comments", "author": null, "committer": null, "parents": [{"sha": "48b70616007696918b16f336d7d39275c5625903", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48b70616007696918b16f336d7d39275c5625903", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48b70616007696918b16f336d7d39275c5625903"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "c9da4b79b82610ca860f1f96c1dda91ae2a5ee25", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db5e449c5e7cf20de09adb88e1d0eb22e9def100/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db5e449c5e7cf20de09adb88e1d0eb22e9def100/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=db5e449c5e7cf20de09adb88e1d0eb22e9def100", "patch": "@@ -1059,16 +1059,19 @@ extern union tree_node *current_function_decl;\n #define REG_OK_FOR_BASE_P(X) (((unsigned) REGNO (X)) - 32 >= 32 && REGNO (X) != 0)\n \n #define EXTRA_CONSTRAINT(OP, C)\t\t\t\t\\\n-  ((C) == 'Q' ?\t\t\t\t\t\t\\\n-   ((GET_CODE (OP) == MEM\t\t\t\t\\\n-     && memory_address_p (GET_MODE (OP), XEXP (OP, 0))\t\\\n-     && ! symbolic_memory_operand (OP, VOIDmode)))\t\\\n-   : ((C) == 'R' ?\t\t\t\t\t\\\n-      (GET_CODE (OP) == LO_SUM\t\t\t\t\\\n-       && GET_CODE (XEXP (OP, 0)) == REG\t\t\\\n-       && REG_OK_FOR_BASE_P (XEXP (OP, 0)))\t\t\\\n-      : ((C) == 'S'\t\t\t\t\t\\\n-\t ? CONSTANT_P (OP) || memory_address_p (Pmode, OP) : 0)))\n+  ((C) == 'Q'\t\t\t\t\t\t\\\n+   ? ((GET_CODE (OP) == MEM\t\t\t\t\\\n+       && memory_address_p (GET_MODE (OP), XEXP (OP, 0))\t\\\n+       && ! symbolic_memory_operand (OP, VOIDmode))\t\\\n+      || (reload_in_progress && GET_CODE (OP) == REG\t\\\n+\t  && REGNO (OP) >= FIRST_PSEUDO_REGISTER))\t\\\n+   : (C) == 'R'\t\t\t\t\t\t\\\n+   ? (GET_CODE (OP) == LO_SUM\t\t\t\t\\\n+      && GET_CODE (XEXP (OP, 0)) == REG\t\t\t\\\n+      && REG_OK_FOR_BASE_P (XEXP (OP, 0)))\t\t\\\n+   : (C) == 'S'\t\t\t\t\t\t\\\n+   ? (CONSTANT_P (OP) || memory_address_p (Pmode, OP))\t\\\n+   : 0)\n \n #else\n "}]}