{"sha": "c97d7285d9b949ac05ad04f0d76112579c50e240", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk3ZDcyODVkOWI5NDlhYzA1YWQwNGYwZDc2MTEyNTc5YzUwZTI0MA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-24T15:07:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-24T15:07:09Z"}, "message": "2014-02-24  Sergey Rybin  <rybin@adacore.com frybin>\n\n\t* gnat_ugn.texi: Misc updates.\n\n2014-02-24  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_prag.adb (Expand_Old): Set the type of the generated temporary.\n\n2014-02-24  Gary Dismukes  <dismukes@adacore.com>\n\n\t* layout.adb (Layout_Variant_Record): Instantiate\n\tGeneric_Check_Choices and call Check_Choices before calling\n\tBuild_Discr_Checking_Funcs, since we need Others_Discrete_Choices\n\tset to prevent generating incorrect discriminant-checking\n\tfunctions for 'others' variants (functions that unconditionally\n\treturn True rather than accounting for the values covered by the\n\t'others' choice).\n\t* sem_eval.ads (Subtypes_Statically_Compatible): Add formal\n\tFormal_Derived_Matching.\n\t(Subtypes_Statically_Match): Add formal Formal_Derived_Matching.\n\t* sem_eval.adb (Subtypes_Statically_Compatible): Pass new\n\tFormal_Derived_Matching formal to Subtypes_Statically_Match.\n\t(Subtypes_Statically_Match): Suppress the Object_Size matching\n\ttest in the case where Formal_Derived_Matching is True.\n\t* sem_ch12.adb (Validate_Derived_Type_Instance): Pass\n\tTrue for Formal_Derived_Matching_Formal on the call to\n\tSubtypes_Statically_Compatible.\n\nFrom-SVN: r208068", "tree": {"sha": "122167c89fc81d8688b17d1d508f3c1a21a863a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/122167c89fc81d8688b17d1d508f3c1a21a863a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c97d7285d9b949ac05ad04f0d76112579c50e240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c97d7285d9b949ac05ad04f0d76112579c50e240", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c97d7285d9b949ac05ad04f0d76112579c50e240", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c97d7285d9b949ac05ad04f0d76112579c50e240/comments", "author": null, "committer": null, "parents": [{"sha": "f3fec19fb8f6ae5c4b95acb6e2b1b76846a84c44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3fec19fb8f6ae5c4b95acb6e2b1b76846a84c44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3fec19fb8f6ae5c4b95acb6e2b1b76846a84c44"}], "stats": {"total": 192, "additions": 173, "deletions": 19}, "files": [{"sha": "3a936730beaa95a1d7d1a31b690c4995972cbd16", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c97d7285d9b949ac05ad04f0d76112579c50e240/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c97d7285d9b949ac05ad04f0d76112579c50e240/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c97d7285d9b949ac05ad04f0d76112579c50e240", "patch": "@@ -1,3 +1,31 @@\n+2014-02-24  Sergey Rybin  <rybin@adacore.com frybin>\n+\n+\t* gnat_ugn.texi: Misc updates.\n+\n+2014-02-24  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_prag.adb (Expand_Old): Set the type of the generated temporary.\n+\n+2014-02-24  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* layout.adb (Layout_Variant_Record): Instantiate\n+\tGeneric_Check_Choices and call Check_Choices before calling\n+\tBuild_Discr_Checking_Funcs, since we need Others_Discrete_Choices\n+\tset to prevent generating incorrect discriminant-checking\n+\tfunctions for 'others' variants (functions that unconditionally\n+\treturn True rather than accounting for the values covered by the\n+\t'others' choice).\n+\t* sem_eval.ads (Subtypes_Statically_Compatible): Add formal\n+\tFormal_Derived_Matching.\n+\t(Subtypes_Statically_Match): Add formal Formal_Derived_Matching.\n+\t* sem_eval.adb (Subtypes_Statically_Compatible): Pass new\n+\tFormal_Derived_Matching formal to Subtypes_Statically_Match.\n+\t(Subtypes_Statically_Match): Suppress the Object_Size matching\n+\ttest in the case where Formal_Derived_Matching is True.\n+\t* sem_ch12.adb (Validate_Derived_Type_Instance): Pass\n+\tTrue for Formal_Derived_Matching_Formal on the call to\n+\tSubtypes_Statically_Compatible.\n+\n 2014-02-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/Make-lang.in (ADA_TOOLS_FLAGS_TO_PASS): Robustify."}, {"sha": "1925012b8459ee2fa25e0960c10802d75fcda1e6", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c97d7285d9b949ac05ad04f0d76112579c50e240/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c97d7285d9b949ac05ad04f0d76112579c50e240/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=c97d7285d9b949ac05ad04f0d76112579c50e240", "patch": "@@ -436,6 +436,7 @@ package body Exp_Prag is\n             then\n                Pref := Prefix (N);\n                Temp := Make_Temporary (Loc, 'T', Pref);\n+               Set_Etype (Temp, Etype (Pref));\n \n                --  Generate a temporary to capture the value of the prefix:\n                --    Temp : <Pref type>;"}, {"sha": "10285e775add5c41d1ac2ab2443fc33ef30fed59", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 62, "deletions": 3, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c97d7285d9b949ac05ad04f0d76112579c50e240/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c97d7285d9b949ac05ad04f0d76112579c50e240/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=c97d7285d9b949ac05ad04f0d76112579c50e240", "patch": "@@ -14643,6 +14643,31 @@ Display Copyright and version, then exit disregarding all other options.\n @cindex @option{--help} @command{gnatpp}\n Display usage, then exit disregarding all other options.\n \n+@item -P @var{file}\n+@cindex @option{-P} @command{gnatpp}\n+Indicates the name of the project file that describes the set of sources\n+to be processed. The exact set of argument sources depends on other options\n+specified, see below.\n+\n+@item -U\n+@cindex @option{-U} @command{gnatpp}\n+If a project file is specified and no argument source is explicitly\n+specified (either directly or by means of @option{-files} option), process\n+all the units of the closure of the argument project. Otherwise this option\n+has no effect.\n+\n+@item -U @var{main_unit}\n+If a project file is specified and no argument source is explicitly\n+specified (either directly or by means of @option{-files} option), process\n+the closure of units rooted at @var{main_unit}. Otherwise this option\n+has no effect.\n+\n+@item -X@var{name}=@var{value}\n+@cindex @option{-X} @command{gnatpp}\n+Indicates that external variable @var{name} in the argument project\n+has the @var{value} value. Has no effect if no project is specified as\n+tool argument.\n+\n @item --pp-off=@var{xxx}\n @cindex @option{--pp-off} @command{gnatpp}\n Use @code{--xxx} as the command to turn off pretty printing, instead\n@@ -14692,6 +14717,13 @@ Warning mode;\n a required layout in the result source.\n @end table\n \n+@noindent\n+If a project file is specified and no argument source is explicitly\n+specified (either directly or by means of @option{-files} option), and no\n+@option{-U} is specified, then the set of processed sources is\n+all the immediate units of the argument project.\n+\n+\n @node Formatting Rules\n @section Formatting Rules\n \n@@ -15318,6 +15350,23 @@ Options:\n -h\n --help -- generate usage information and quit, ignoring all other options\n \n+-P @file{file} -- indicates the name of the project file that describes\n+      the set of sources to be processed. The exact set of argument\n+      sources depends on other options specified, see below.\n+\n+-U -- if a project file is specified and no argument source is explicitly\n+      specified, process all the units of the closure of the argument project.\n+      Otherwise this option has no effect.\n+\n+-U @var{main_unit} -- if a project file is specified and no argument source\n+      is explicitly specified (either directly or by means of @option{-files}\n+      option), process the closure of units rooted at @var{main_unit}.\n+      Otherwise this option has no effect.\n+\n+-X@var{name}=@var{value} -- indicates that external variable @var{name} in\n+      the argument project has the @var{value} value. Has no effect if no\n+      project is specified as tool argument.\n+\n -mdir -- generate one .xml file for each Ada source file, in directory\n          @file{dir}. (Default is to generate the XML to standard output.)\n \n@@ -15340,6 +15389,11 @@ Options:\n @end smallexample\n \n @noindent\n+If a project file is specified and no argument source is explicitly\n+specified, and no @option{-U} is specified, then the set of processed\n+sources is all the immediate units of the argument project.\n+\n+\n You can generate the ``tree files'' ahead of time using the -gnatct switch:\n \n @smallexample\n@@ -16697,7 +16751,14 @@ tool argument.\n Use the specified subdirectory of the project objects file (or of the\n project file directory if the project does not specify an object directory)\n for tool output files. Has no effect if no project is specified as\n-tool argument.\n+tool argument r if @option{--no_objects_dir} is specified.\n+\n+@item --no_objects_dir\n+@cindex @option{--no_objects_dir} @command{gnatmetric}\n+Place all the result files into the current directory instead of\n+project objects directory. This corresponds to the @command{gnatcheck}\n+behavior when it is called with the project file from the\n+GNAT driver. Has no effect if no project is specified.\n \n @item ^-files @var{filename}^/FILES=@var{filename}^\n @cindex @option{^-files^/FILES^} (@code{gnatmetric})\n@@ -16729,13 +16790,11 @@ a trace of sources being processed.\n Quiet mode.\n @end table\n \n-@ignore\n @noindent\n If a project file is specified and no argument source is explicitly\n specified (either directly or by means of @option{-files} option), and no\n @option{-U} is specified, then the set of processed sources is\n all the immediate units of the argument project.\n-@end ignore\n \n \n @ignore"}, {"sha": "829d75c2eb923d233b1b578ee19b4df0e40cf0ae", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c97d7285d9b949ac05ad04f0d76112579c50e240/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c97d7285d9b949ac05ad04f0d76112579c50e240/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=c97d7285d9b949ac05ad04f0d76112579c50e240", "patch": "@@ -37,6 +37,7 @@ with Opt;      use Opt;\n with Repinfo;  use Repinfo;\n with Sem;      use Sem;\n with Sem_Aux;  use Sem_Aux;\n+with Sem_Case; use Sem_Case;\n with Sem_Ch13; use Sem_Ch13;\n with Sem_Eval; use Sem_Eval;\n with Sem_Util; use Sem_Util;\n@@ -2224,9 +2225,54 @@ package body Layout is\n             end if;\n          end Layout_Component_List;\n \n+         Others_Present : Boolean;\n+         pragma Warnings (Off, Others_Present);\n+         --  Indicates others present, not used in this case\n+\n+         procedure Non_Static_Choice_Error (Choice : Node_Id);\n+         --  Error routine invoked by the generic instantiation below when\n+         --  the variant part has a nonstatic choice.\n+\n+         package Variant_Choices_Processing is new\n+           Generic_Check_Choices\n+             (Process_Empty_Choice      => No_OP,\n+              Process_Non_Static_Choice => Non_Static_Choice_Error,\n+              Process_Associated_Node   => No_OP);\n+         use Variant_Choices_Processing;\n+\n+         -----------------------------\n+         -- Non_Static_Choice_Error --\n+         -----------------------------\n+\n+         procedure Non_Static_Choice_Error (Choice : Node_Id) is\n+         begin\n+            Flag_Non_Static_Expr\n+              (\"choice given in case expression is not static!\", Choice);\n+         end Non_Static_Choice_Error;\n+\n       --  Start of processing for Layout_Variant_Record\n \n       begin\n+         --  Call Check_Choices here to ensure that Others_Discrete_Choices\n+         --  gets set on any 'others' choice before the discriminant-checking\n+         --  functions are generated. Otherwise the function for the 'others'\n+         --  alternative will unconditionally return True, causing discriminant\n+         --  checks to fail. However, Check_Choices is now normally delayed\n+         --  until the type's freeze entity is processed, due to requirements\n+         --  coming from subtype predicates, so doing it at this point is\n+         --  probably not right in general, but it's not clear how else to deal\n+         --  with this situation. Perhaps we should only generate declarations\n+         --  for the checking functions here, and somehow delay generation of\n+         --  their bodies, but that would be a nontrivial change. ???\n+\n+         declare\n+            VP : constant Node_Id :=\n+                   Variant_Part (Component_List (Type_Definition (Decl)));\n+         begin\n+            Check_Choices\n+              (VP, Variants (VP), Etype (Name (VP)), Others_Present);\n+         end;\n+\n          --  We need the discriminant checking functions, since we generate\n          --  calls to these functions for the RM_Size expression, so make\n          --  sure that these functions have been constructed in time."}, {"sha": "59fc323b349c9a638d31ab418062820574af67c9", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c97d7285d9b949ac05ad04f0d76112579c50e240/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c97d7285d9b949ac05ad04f0d76112579c50e240/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=c97d7285d9b949ac05ad04f0d76112579c50e240", "patch": "@@ -11124,7 +11124,9 @@ package body Sem_Ch12 is\n                Abandon_Instantiation (Actual);\n             end if;\n \n-            if not Subtypes_Statically_Compatible (Act_T, Ancestor) then\n+            if not Subtypes_Statically_Compatible\n+                     (Act_T, Ancestor, Formal_Derived_Matching => True)\n+            then\n                Error_Msg_N\n                  (\"constraint on actual is incompatible with formal\", Actual);\n                Abandon_Instantiation (Actual);"}, {"sha": "e8c85f9a50d4f276b0ccd9ceeeae5d6aae1cd790", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c97d7285d9b949ac05ad04f0d76112579c50e240/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c97d7285d9b949ac05ad04f0d76112579c50e240/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=c97d7285d9b949ac05ad04f0d76112579c50e240", "patch": "@@ -4786,8 +4786,9 @@ package body Sem_Eval is\n    ------------------------------------\n \n    function Subtypes_Statically_Compatible\n-     (T1 : Entity_Id;\n-      T2 : Entity_Id) return Boolean\n+     (T1                      : Entity_Id;\n+      T2                      : Entity_Id;\n+      Formal_Derived_Matching : Boolean := False) return Boolean\n    is\n    begin\n       --  Scalar types\n@@ -4863,7 +4864,7 @@ package body Sem_Eval is\n \n       else\n          return (Is_Composite_Type (T1) and then not Is_Constrained (T2))\n-           or else Subtypes_Statically_Match (T1, T2);\n+           or else Subtypes_Statically_Match (T1, T2, Formal_Derived_Matching);\n       end if;\n    end Subtypes_Statically_Compatible;\n \n@@ -4877,19 +4878,28 @@ package body Sem_Eval is\n    --  values match (RM 4.9.1(1)).\n \n    --  In addition, in GNAT, the object size (Esize) values of the types must\n-   --  match if they are set. The use of 'Object_Size can cause this to be\n-   --  false even if the types would otherwise match in the RM sense.\n-\n-   function Subtypes_Statically_Match (T1, T2 : Entity_Id) return Boolean is\n+   --  match if they are set (unless checking an actual for a formal derived\n+   --  type). The use of 'Object_Size can cause this to be false even if the\n+   --  types would otherwise match in the RM sense.\n+\n+   function Subtypes_Statically_Match\n+     (T1                      : Entity_Id;\n+      T2                      : Entity_Id;\n+      Formal_Derived_Matching : Boolean := False) return Boolean\n+   is\n    begin\n       --  A type always statically matches itself\n \n       if T1 = T2 then\n          return True;\n \n-      --  No match if sizes different (from use of 'Object_Size)\n+      --  No match if sizes different (from use of 'Object_Size). This test\n+      --  is excluded if Formal_Derived_Matching is True, as the base types\n+      --  can be different in that case and typically have different sizes\n+      --  (and Esizes can be set when Frontend_Layout_On_Target is True).\n \n-      elsif Known_Static_Esize (T1) and then Known_Static_Esize (T2)\n+      elsif not Formal_Derived_Matching\n+        and then Known_Static_Esize (T1) and then Known_Static_Esize (T2)\n         and then Esize (T1) /= Esize (T2)\n       then\n          return False;"}, {"sha": "8bd8761f0da2a37fb0af188e86449c7ea3dff817", "filename": "gcc/ada/sem_eval.ads", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c97d7285d9b949ac05ad04f0d76112579c50e240/gcc%2Fada%2Fsem_eval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c97d7285d9b949ac05ad04f0d76112579c50e240/gcc%2Fada%2Fsem_eval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.ads?ref=c97d7285d9b949ac05ad04f0d76112579c50e240", "patch": "@@ -214,17 +214,25 @@ package Sem_Eval is\n    --  static, or because one or the other bound raises CE).\n \n    function Subtypes_Statically_Compatible\n-     (T1 : Entity_Id;\n-      T2 : Entity_Id) return Boolean;\n+     (T1                      : Entity_Id;\n+      T2                      : Entity_Id;\n+      Formal_Derived_Matching : Boolean := False) return Boolean;\n    --  Returns true if the subtypes are unconstrained or the constraint on\n    --  on T1 is statically compatible with T2 (as defined by 4.9.1(4)).\n-   --  Otherwise returns false.\n-\n-   function Subtypes_Statically_Match (T1, T2 : Entity_Id) return Boolean;\n+   --  Otherwise returns false. Formal_Derived_Matching indicates whether\n+   --  the type T1 is a generic actual being checked against ancestor T2\n+   --  in a formal derived type association.\n+\n+   function Subtypes_Statically_Match\n+     (T1                      : Entity_Id;\n+      T2                      : Entity_Id;\n+      Formal_Derived_Matching : Boolean := False) return Boolean;\n    --  Determine whether two types T1, T2, which have the same base type,\n    --  are statically matching subtypes (RM 4.9.1(1-2)). Also includes the\n    --  extra GNAT rule that object sizes must match (this can be false for\n-   --  types that match in the RM sense because of use of 'Object_Size).\n+   --  types that match in the RM sense because of use of 'Object_Size),\n+   --  except when testing a generic actual T1 against an ancestor T2 in a\n+   --  formal derived type association (indicated by Formal_Derived_Matching).\n \n    function Compile_Time_Known_Value (Op : Node_Id) return Boolean;\n    --  Returns true if Op is an expression not raising Constraint_Error whose"}]}