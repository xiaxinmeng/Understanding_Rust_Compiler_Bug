{"sha": "4e2d94a91774249326515786963ada455c0dcd6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUyZDk0YTkxNzc0MjQ5MzI2NTE1Nzg2OTYzYWRhNDU1YzBkY2Q2ZA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2005-12-22T01:16:57Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-12-22T01:16:57Z"}, "message": "tree-vrp.c (extract_range_from_binary_expr): Clean up uses of vr0.type.\n\n\t* tree-vrp.c (extract_range_from_binary_expr): Clean up uses\n\tof vr0.type.\n\nFrom-SVN: r108935", "tree": {"sha": "989e1293dd57648294bb4682a5040af44a4a3334", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/989e1293dd57648294bb4682a5040af44a4a3334"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e2d94a91774249326515786963ada455c0dcd6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e2d94a91774249326515786963ada455c0dcd6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e2d94a91774249326515786963ada455c0dcd6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e2d94a91774249326515786963ada455c0dcd6d/comments", "author": null, "committer": null, "parents": [{"sha": "8ccfa1ccb9c9845f9cd59b36164b0ec4918ef407", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ccfa1ccb9c9845f9cd59b36164b0ec4918ef407", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ccfa1ccb9c9845f9cd59b36164b0ec4918ef407"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "cdc10e038b633cc565ae8ffcfdc52e8d397b58c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2d94a91774249326515786963ada455c0dcd6d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2d94a91774249326515786963ada455c0dcd6d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e2d94a91774249326515786963ada455c0dcd6d", "patch": "@@ -1,3 +1,8 @@\n+2005-12-22  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* tree-vrp.c (extract_range_from_binary_expr): Clean up uses\n+\tof vr0.type.\n+\n 2005-12-21  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR middle-end/24998"}, {"sha": "b9503865fcf2a25b5f816267d66a6192374195a6", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2d94a91774249326515786963ada455c0dcd6d/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2d94a91774249326515786963ada455c0dcd6d/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=4e2d94a91774249326515786963ada455c0dcd6d", "patch": "@@ -1167,6 +1167,7 @@ static void\n extract_range_from_binary_expr (value_range_t *vr, tree expr)\n {\n   enum tree_code code = TREE_CODE (expr);\n+  enum value_range_type type;\n   tree op0, op1, min, max;\n   int cmp;\n   value_range_t vr0 = { VR_UNDEFINED, NULL_TREE, NULL_TREE, NULL };\n@@ -1220,6 +1221,9 @@ extract_range_from_binary_expr (value_range_t *vr, tree expr)\n       return;\n     }\n \n+  /* The type of the resulting value range defaults to VR0.TYPE.  */\n+  type = vr0.type;\n+\n   /* Refuse to operate on VARYING ranges, ranges of different kinds\n      and symbolic ranges.  As an exception, we allow BIT_AND_EXPR\n      because we may be able to derive a useful range even if one of\n@@ -1425,7 +1429,7 @@ extract_range_from_binary_expr (value_range_t *vr, tree expr)\n \t  && tree_expr_nonnegative_p (vr1.max)\n \t  && TREE_CODE (vr1.max) == INTEGER_CST)\n \t{\n-\t  vr0.type = VR_RANGE;\n+\t  type = VR_RANGE;\n \t  min = fold_convert (TREE_TYPE (expr), integer_zero_node);\n \t  max = vr1.max;\n \t}\n@@ -1455,7 +1459,7 @@ extract_range_from_binary_expr (value_range_t *vr, tree expr)\n       set_value_range_to_varying (vr);\n     }\n   else\n-    set_value_range (vr, vr0.type, min, max, NULL);\n+    set_value_range (vr, type, min, max, NULL);\n }\n \n "}]}