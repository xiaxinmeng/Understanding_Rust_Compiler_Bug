{"sha": "46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY4NDBiY2Q1MmNkZjBlNmRmNzAyY2FkM2E4YzM5YjdhYjRhYTllNA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-04-11T18:52:31Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-04-11T18:52:31Z"}, "message": "acinclude.m4: AC_CHECK_TOOL for expect.\n\n\n2001-04-11  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* acinclude.m4: AC_CHECK_TOOL for expect.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* testsuite/Makefile.am (RUNTEST): Use substituted.\n\t(EXPECT): Same.\n\n\t* configure.in: Remove xcompiling substitution.\n\t* tests_flags.in (CROSS_LIB_PATH): Remove.\n\t(xcompiling): Remove.\n\t(CXX): Use substituted CXX.\n\nFrom-SVN: r41262", "tree": {"sha": "26c1b4dcbc3d0ff6bd0acd4ee5ca67baf8ca33cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26c1b4dcbc3d0ff6bd0acd4ee5ca67baf8ca33cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/comments", "author": null, "committer": null, "parents": [{"sha": "04f378ce1ebde11a2db9a528e211f6a42c87b00b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04f378ce1ebde11a2db9a528e211f6a42c87b00b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04f378ce1ebde11a2db9a528e211f6a42c87b00b"}], "stats": {"total": 1854, "additions": 1000, "deletions": 854}, "files": [{"sha": "cd935e2f86f46d894993b61a6811555894e9f52e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "patch": "@@ -1,7 +1,19 @@\n-2001-04-10  Richard Henderson  <rth@redhat.com>\n+2001-04-11  Benjamin Kosnik  <bkoz@redhat.com>\n+\t\n+\t* acinclude.m4: AC_CHECK_TOOL for expect.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* testsuite/Makefile.am (RUNTEST): Use substituted.\n+\t(EXPECT): Same.\n+\n+\t* configure.in: Remove xcompiling substitution.\n+\t* tests_flags.in (CROSS_LIB_PATH): Remove.\n+\t(xcompiling): Remove.\n+\t(CXX): Use substituted CXX.\n+\t\n+2001-04-11  Richard Henderson  <rth@redhat.com>\n \n-\t* testsuite/lib/libstdc++.exp (dg-test): Explicitly run\n-\tthe program in the current directory.\n+\t* testsuite/lib/libstdc++.exp: Specify path for output_file.\n \n 2001-04-08  Gabriel Dos Reis  <gdr@codesourcery.com>\n "}, {"sha": "1205bfd4baa9fd181d6be798a97156ae5c82eefc", "filename": "libstdc++-v3/Makefile.am", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.am?ref=46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "patch": "@@ -120,9 +120,6 @@ AM_MAKEFLAGS = \\\n \t\"PICFLAG=$(PICFLAG)\" \\\n \t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \\\n \t\"SHELL=$(SHELL)\" \\\n-\t\"EXPECT=$(EXPECT)\" \\\n-\t\"RUNTEST=$(RUNTEST)\" \\\n-\t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \\\n \t\"exec_prefix=$(exec_prefix)\" \\\n \t\"infodir=$(infodir)\" \\\n \t\"libdir=$(libdir)\" \\\n@@ -131,8 +128,6 @@ AM_MAKEFLAGS = \\\n \t\"tooldir=$(tooldir)\" \\\n \t\"AR=$(AR)\" \\\n \t\"AS=$(AS)\" \\\n-\t\"CC=$(CC)\" \\\n-\t\"CXX=$(CXX)\" \\\n \t\"LD=$(LD)\" \\\n \t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n \t\"PICFLAG=$(PICFLAG)\" \\\n@@ -142,3 +137,5 @@ AM_MAKEFLAGS = \\\n \t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \\\n \t\"DESTDIR=$(DESTDIR)\" \\\n \t\"WERROR=$(WERROR)\" \n+\n+"}, {"sha": "c53bbcbca82c57b1ba1bc4db3fcdc6df3239dc77", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "patch": "@@ -71,7 +71,6 @@ CSHADOW_FLAGS = @CSHADOW_FLAGS@\n CSTD_INCLUDES = @CSTD_INCLUDES@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n-CXX_libstdcxx = @CXX_libstdcxx@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n DEBUG_FLAGS = @DEBUG_FLAGS@\n DLLTOOL = @DLLTOOL@\n@@ -105,14 +104,16 @@ WARN_FLAGS = @WARN_FLAGS@\n WERROR = @WERROR@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n+glibcpp_CXX = @glibcpp_CXX@\n glibcpp_basedir = @glibcpp_basedir@\n+glibcpp_expect = @glibcpp_expect@\n+glibcpp_runtest = @glibcpp_runtest@\n glibcpp_toolexecdir = @glibcpp_toolexecdir@\n glibcpp_toolexeclibdir = @glibcpp_toolexeclibdir@\n gxx_include_dir = @gxx_include_dir@\n ifGNUmake = @ifGNUmake@\n libio_la = @libio_la@\n toplevel_srcdir = @toplevel_srcdir@\n-xcompiling = @xcompiling@\n \n AUTOMAKE_OPTIONS = 1.3 cygnus\n MAINT_CHARSET = latin1\n@@ -135,7 +136,7 @@ MULTICLEAN = true\n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n # friends when we are called from the top level Makefile.\n-AM_MAKEFLAGS =  \t\"AR_FLAGS=$(AR_FLAGS)\" \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \t\"CFLAGS=$(CFLAGS)\" \t\"CXXFLAGS=$(CXXFLAGS)\" \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \t\"INSTALL=$(INSTALL)\" \t\"INSTALL_DATA=$(INSTALL_DATA)\" \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \t\"LDFLAGS=$(LDFLAGS)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \t\"MAKE=$(MAKE)\" \t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \t\"SHELL=$(SHELL)\" \t\"EXPECT=$(EXPECT)\" \t\"RUNTEST=$(RUNTEST)\" \t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \t\"exec_prefix=$(exec_prefix)\" \t\"infodir=$(infodir)\" \t\"libdir=$(libdir)\" \t\"includedir=$(includedir)\" \t\"prefix=$(prefix)\" \t\"tooldir=$(tooldir)\" \t\"AR=$(AR)\" \t\"AS=$(AS)\" \t\"CC=$(CC)\" \t\"CXX=$(CXX)\" \t\"LD=$(LD)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"RANLIB=$(RANLIB)\" \t\"NM=$(NM)\" \t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \t\"DESTDIR=$(DESTDIR)\" \t\"WERROR=$(WERROR)\" \n+AM_MAKEFLAGS =  \t\"AR_FLAGS=$(AR_FLAGS)\" \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \t\"CFLAGS=$(CFLAGS)\" \t\"CXXFLAGS=$(CXXFLAGS)\" \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \t\"INSTALL=$(INSTALL)\" \t\"INSTALL_DATA=$(INSTALL_DATA)\" \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \t\"LDFLAGS=$(LDFLAGS)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \t\"MAKE=$(MAKE)\" \t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \t\"SHELL=$(SHELL)\" \t\"exec_prefix=$(exec_prefix)\" \t\"infodir=$(infodir)\" \t\"libdir=$(libdir)\" \t\"includedir=$(includedir)\" \t\"prefix=$(prefix)\" \t\"tooldir=$(tooldir)\" \t\"AR=$(AR)\" \t\"AS=$(AS)\" \t\"LD=$(LD)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"RANLIB=$(RANLIB)\" \t\"NM=$(NM)\" \t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \t\"DESTDIR=$(DESTDIR)\" \t\"WERROR=$(WERROR)\" \n \n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n CONFIG_HEADER = config.h"}, {"sha": "8f3073e78d0b55cbaba82bd2b9d1ebfc69f40615", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "patch": "@@ -78,15 +78,14 @@ AC_DEFUN(LIB_AC_PROG_CXX,\n [AC_BEFORE([$0], [AC_PROG_CXXCPP])dnl\n dnl Fool anybody using AC_PROG_CXX.\n AC_PROVIDE([AC_PROG_CXX])\n-# Use CXX_libstdcxx so that we do not cause CXX to be cached with the\n+# Use glibcpp_CXX so that we do not cause CXX to be cached with the\n # flags that come in CXX while configuring libstdc++.  They're different\n # from those used for all other target libraries.  If CXX is set in\n # the environment, respect that here.\n-CXX_libstdcxx=$CXX\n-AC_CHECK_PROGS(CXX_libstdcxx, $CCC c++ g++ gcc CC cxx cc++, gcc)\n-CXX=$CXX_libstdcxx\n-AC_SUBST(CXX)\n-test -z \"$CXX\" && AC_MSG_ERROR([no acceptable c++ found in \\$PATH])\n+glibcpp_CXX=$CXX\n+AC_CHECK_PROGS(glibcpp_CXX, $CCC c++ g++ gcc CC cxx cc++, gcc)\n+AC_SUBST(glibcpp_CXX)\n+test -z \"$glibcpp_CXX\" && AC_MSG_ERROR([no acceptable c++ found in \\$PATH])\n \n AC_PROG_CXX_GNU\n \n@@ -116,8 +115,11 @@ LIB_AC_PROG_CXX\n \n   AC_CHECK_TOOL(AS, as)\n   AC_CHECK_TOOL(AR, ar)\n-  AC_CHECK_TOOL(RANLIB, ranlib, :)\n-\n+  AC_CHECK_TOOL(RANLIB, ranlib, ranlib-not-found-in-path-error)\n+  AC_CHECK_TOOL(glibcpp_expect, expect, expect-not-found-in-path-error)\n+  AC_CHECK_TOOL(glibcpp_runtest, runtest, runtest-not-found-in-path-error)\n+  AC_SUBST(glibcpp_expect)\n+  AC_SUBST(glibcpp_runtest)\n   AC_PROG_INSTALL\n \n   AM_MAINTAINER_MODE"}, {"sha": "74298f6bef02935c2212eba939412bd865e8af7b", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "patch": "@@ -90,15 +90,14 @@ AC_DEFUN(LIB_AC_PROG_CXX,\n [AC_BEFORE([$0], [AC_PROG_CXXCPP])dnl\n dnl Fool anybody using AC_PROG_CXX.\n AC_PROVIDE([AC_PROG_CXX])\n-# Use CXX_libstdcxx so that we do not cause CXX to be cached with the\n+# Use glibcpp_CXX so that we do not cause CXX to be cached with the\n # flags that come in CXX while configuring libstdc++.  They're different\n # from those used for all other target libraries.  If CXX is set in\n # the environment, respect that here.\n-CXX_libstdcxx=$CXX\n-AC_CHECK_PROGS(CXX_libstdcxx, $CCC c++ g++ gcc CC cxx cc++, gcc)\n-CXX=$CXX_libstdcxx\n-AC_SUBST(CXX)\n-test -z \"$CXX\" && AC_MSG_ERROR([no acceptable c++ found in \\$PATH])\n+glibcpp_CXX=$CXX\n+AC_CHECK_PROGS(glibcpp_CXX, $CCC c++ g++ gcc CC cxx cc++, gcc)\n+AC_SUBST(glibcpp_CXX)\n+test -z \"$glibcpp_CXX\" && AC_MSG_ERROR([no acceptable c++ found in \\$PATH])\n \n AC_PROG_CXX_GNU\n \n@@ -128,8 +127,11 @@ LIB_AC_PROG_CXX\n \n   AC_CHECK_TOOL(AS, as)\n   AC_CHECK_TOOL(AR, ar)\n-  AC_CHECK_TOOL(RANLIB, ranlib, :)\n-\n+  AC_CHECK_TOOL(RANLIB, ranlib, ranlib-not-found-in-path-error)\n+  AC_CHECK_TOOL(glibcpp_expect, expect, expect-not-found-in-path-error)\n+  AC_CHECK_TOOL(glibcpp_runtest, runtest, runtest-not-found-in-path-error)\n+  AC_SUBST(glibcpp_expect)\n+  AC_SUBST(glibcpp_runtest)\n   AC_PROG_INSTALL\n \n   AM_MAINTAINER_MODE"}, {"sha": "372d79c1e02702ea6ccce915c65c1ec75bc499bd", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 927, "deletions": 794, "changes": 1721, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4"}, {"sha": "ebb9dcba6e84a8824d52ded29f68642d33cc8cc9", "filename": "libstdc++-v3/configure.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.in?ref=46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "patch": "@@ -236,7 +236,6 @@ AC_LINK_FILES($ATOMICITYH/bits/atomicity.h, include/bits/atomicity.h)\n AM_CONDITIONAL(NULL_TARGET, test \"$NULL_TARGET\" = yes)\n AM_CONDITIONAL(NATIVE, test \"$NATIVE\" = yes || test \"$NULL_TARGET\" = yes)\n AM_CONDITIONAL(CANADIAN, test \"$CANADIAN\" = yes)\n-AC_SUBST(xcompiling)\n  \n AC_CACHE_SAVE\n AC_LC_MESSAGES"}, {"sha": "ae7b75599ffaaa2a3c98bc95329c10007f746a3f", "filename": "libstdc++-v3/libio/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.in?ref=46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "patch": "@@ -71,7 +71,6 @@ CSHADOW_FLAGS = @CSHADOW_FLAGS@\n CSTD_INCLUDES = @CSTD_INCLUDES@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n-CXX_libstdcxx = @CXX_libstdcxx@\n DEBUG_FLAGS = @DEBUG_FLAGS@\n DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n@@ -99,14 +98,16 @@ WARN_FLAGS = @WARN_FLAGS@\n WERROR = @WERROR@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n+glibcpp_CXX = @glibcpp_CXX@\n glibcpp_basedir = @glibcpp_basedir@\n+glibcpp_expect = @glibcpp_expect@\n+glibcpp_runtest = @glibcpp_runtest@\n glibcpp_toolexecdir = @glibcpp_toolexecdir@\n glibcpp_toolexeclibdir = @glibcpp_toolexeclibdir@\n gxx_include_dir = @gxx_include_dir@\n ifGNUmake = @ifGNUmake@\n libio_la = @libio_la@\n toplevel_srcdir = @toplevel_srcdir@\n-xcompiling = @xcompiling@\n \n AUTOMAKE_OPTIONS = 1.3 cygnus\n "}, {"sha": "b8140f3b823133ef5059e2472454a185e86321b2", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "patch": "@@ -71,7 +71,6 @@ CSHADOW_FLAGS = @CSHADOW_FLAGS@\n CSTD_INCLUDES = @CSTD_INCLUDES@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n-CXX_libstdcxx = @CXX_libstdcxx@\n DEBUG_FLAGS = @DEBUG_FLAGS@\n DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n@@ -99,14 +98,16 @@ WARN_FLAGS = @WARN_FLAGS@\n WERROR = @WERROR@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n+glibcpp_CXX = @glibcpp_CXX@\n glibcpp_basedir = @glibcpp_basedir@\n+glibcpp_expect = @glibcpp_expect@\n+glibcpp_runtest = @glibcpp_runtest@\n glibcpp_toolexecdir = @glibcpp_toolexecdir@\n glibcpp_toolexeclibdir = @glibcpp_toolexeclibdir@\n gxx_include_dir = @gxx_include_dir@\n ifGNUmake = @ifGNUmake@\n libio_la = @libio_la@\n toplevel_srcdir = @toplevel_srcdir@\n-xcompiling = @xcompiling@\n \n AUTOMAKE_OPTIONS = 1.3 cygnus\n "}, {"sha": "77606c667e1f03a6dfa05845563c6ce406e30795", "filename": "libstdc++-v3/libsupc++/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am?ref=46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "patch": "@@ -27,6 +27,7 @@ MAINT_CHARSET = latin1\n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n \n # Cross compiler and multilib support.\n+CXX = @glibcpp_CXX@\n toolexecdir = @glibcpp_toolexecdir@\n toolexeclibdir = @glibcpp_toolexeclibdir@\n "}, {"sha": "6a13b482a10517aef9362c875addd62152c68509", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "patch": "@@ -68,9 +68,7 @@ AS = @AS@\n CC = @CC@\n CPP = @CPP@\n CSHADOW_FLAGS = @CSHADOW_FLAGS@\n-CXX = @CXX@\n CXXCPP = @CXXCPP@\n-CXX_libstdcxx = @CXX_libstdcxx@\n DEBUG_FLAGS = @DEBUG_FLAGS@\n DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n@@ -97,21 +95,24 @@ WARN_FLAGS = @WARN_FLAGS@\n WERROR = @WERROR@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n+glibcpp_CXX = @glibcpp_CXX@\n glibcpp_basedir = @glibcpp_basedir@\n+glibcpp_expect = @glibcpp_expect@\n+glibcpp_runtest = @glibcpp_runtest@\n glibcpp_toolexecdir = @glibcpp_toolexecdir@\n glibcpp_toolexeclibdir = @glibcpp_toolexeclibdir@\n gxx_include_dir = @gxx_include_dir@\n ifGNUmake = @ifGNUmake@\n libio_la = @libio_la@\n toplevel_srcdir = @toplevel_srcdir@\n-xcompiling = @xcompiling@\n \n AUTOMAKE_OPTIONS = 1.3 cygnus\n MAINT_CHARSET = latin1\n \n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n \n # Cross compiler and multilib support.\n+CXX = @glibcpp_CXX@\n toolexecdir = @glibcpp_toolexecdir@\n toolexeclibdir = @glibcpp_toolexeclibdir@\n "}, {"sha": "2c42430156d94689c2ac9b6062282c2fba6fc13d", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "patch": "@@ -21,14 +21,15 @@\n ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n ## USA.\n \n-## $Id: Makefile.am,v 1.81 2001/04/03 00:26:58 pme Exp $\n+## $Id: Makefile.am,v 1.82 2001/04/06 06:08:17 bkoz Exp $\n \n AUTOMAKE_OPTIONS = 1.3 gnits\n MAINT_CHARSET = latin1\n \n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n \n # Cross compiler and multilib support.\n+CXX = @glibcpp_CXX@\n toolexecdir = @glibcpp_toolexecdir@\n toolexeclibdir = @glibcpp_toolexeclibdir@\n toolexeclib_LTLIBRARIES = libstdc++.la"}, {"sha": "62122eaf01b7127b42c3d4583ef7c111bbea8c7f", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "patch": "@@ -67,9 +67,7 @@ AS = @AS@\n CC = @CC@\n CPP = @CPP@\n CSHADOW_FLAGS = @CSHADOW_FLAGS@\n-CXX = @CXX@\n CXXCPP = @CXXCPP@\n-CXX_libstdcxx = @CXX_libstdcxx@\n DEBUG_FLAGS = @DEBUG_FLAGS@\n DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n@@ -96,20 +94,23 @@ WARN_FLAGS = @WARN_FLAGS@\n WERROR = @WERROR@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n+glibcpp_CXX = @glibcpp_CXX@\n glibcpp_basedir = @glibcpp_basedir@\n+glibcpp_expect = @glibcpp_expect@\n+glibcpp_runtest = @glibcpp_runtest@\n glibcpp_toolexecdir = @glibcpp_toolexecdir@\n glibcpp_toolexeclibdir = @glibcpp_toolexeclibdir@\n ifGNUmake = @ifGNUmake@\n libio_la = @libio_la@\n toplevel_srcdir = @toplevel_srcdir@\n-xcompiling = @xcompiling@\n \n AUTOMAKE_OPTIONS = 1.3 gnits\n MAINT_CHARSET = latin1\n \n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n \n # Cross compiler and multilib support.\n+CXX = @glibcpp_CXX@\n toolexecdir = @glibcpp_toolexecdir@\n toolexeclibdir = @glibcpp_toolexeclibdir@\n toolexeclib_LTLIBRARIES = libstdc++.la"}, {"sha": "93778445266465627d2f58fd7ce0852d95f8a098", "filename": "libstdc++-v3/tests_flags.in", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Ftests_flags.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Ftests_flags.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftests_flags.in?ref=46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "patch": "@@ -56,7 +56,7 @@ check_options() {\n     \n     # Then, see if we understand the job we're asked for\n     case $2 in\n-\t--compiler|--built-library|--installed-library)\n+\t--compiler | --built-library | --installed-library)\n \t# OK\n \t;;\n \t*) \n@@ -132,13 +132,11 @@ case ${query} in\n     --built-library)\n       LIB_PATH=${BUILD_DIR}/src\n       GCC_LIB_PATH=${BUILD_DIR}/../../gcc\n-      CROSS_LIB_PATH=${BUILD_DIR}/../newlib\n-      CXX=\"${BUILD_DIR}/../../gcc/g++ -B${BUILD_DIR}/../../gcc/\"\n+      CXX='@glibcpp_CXX@'\n       ;;\n     --installed-library)\n       LIB_PATH=${PREFIX_DIR}/lib\n       GCC_LIB_PATH=\n-      CROSS_LIB_PATH=\n       CXX=${PREFIX_DIR}/bin/g++\n       ;;\n esac\n@@ -151,9 +149,6 @@ CXXFLAGS=\"-ggdb3 -DDEBUG_ASSERT @SECTION_FLAGS@ @SECTION_LDFLAGS@\"\n case ${query} in\n     --built-library)\n       LIBS=\"${LIB_PATH}/libstdc++.la -no-install -rpath ${GCC_LIB_PATH}\"\n-      if test x@xcompiling@ = x1; then\n-        LIBS=\"${LIBS} -B${CROSS_LIB_PATH}/\"\n-      fi\n     case @target_os@ in\n         *cygwin*)  \n \t  LIBS=\"${LIBS} -nodefaultlibs -lgcc -lcygwin -luser32"}, {"sha": "99ff168ca674c2ff8659a0643661c76766c6aea1", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "patch": "@@ -21,14 +21,14 @@\n ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n ## USA.\n \n-AUTOMAKE_OPTIONS =  foreign dejagnu no-installinfo\n+AUTOMAKE_OPTIONS =  foreign dejagnu\n \n DEJATOOL = libstdc++\n \n-EXPECT = `if [ -f $(top_builddir)/../expect/expect ] ; then \\\n-            echo $(top_builddir)/../expect/expect ; \\\n-          else echo expect ; fi`\n+EXPECT = @glibcpp_expect@\n+\n+RUNTEST = @glibcpp_runtest@\n+\n+\n+\n \n-RUNTEST = `if [ -f $(top_srcdir)/../dejagnu/runtest ] ; then \\\n-\t       echo $(top_srcdir)/../dejagnu/runtest ; \\\n-\t    else echo runtest; fi`"}, {"sha": "edf9b1866581a319122d83b48f308388bd043152", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=46840bcd52cdf0e6df702cad3a8c39b7ab4aa9e4", "patch": "@@ -71,7 +71,6 @@ CSHADOW_FLAGS = @CSHADOW_FLAGS@\n CSTD_INCLUDES = @CSTD_INCLUDES@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n-CXX_libstdcxx = @CXX_libstdcxx@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n DEBUG_FLAGS = @DEBUG_FLAGS@\n DLLTOOL = @DLLTOOL@\n@@ -105,24 +104,24 @@ WARN_FLAGS = @WARN_FLAGS@\n WERROR = @WERROR@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n+glibcpp_CXX = @glibcpp_CXX@\n glibcpp_basedir = @glibcpp_basedir@\n+glibcpp_expect = @glibcpp_expect@\n+glibcpp_runtest = @glibcpp_runtest@\n glibcpp_toolexecdir = @glibcpp_toolexecdir@\n glibcpp_toolexeclibdir = @glibcpp_toolexeclibdir@\n gxx_include_dir = @gxx_include_dir@\n ifGNUmake = @ifGNUmake@\n libio_la = @libio_la@\n toplevel_srcdir = @toplevel_srcdir@\n-xcompiling = @xcompiling@\n \n-AUTOMAKE_OPTIONS = foreign dejagnu no-installinfo\n+AUTOMAKE_OPTIONS = foreign dejagnu\n \n DEJATOOL = libstdc++\n \n-EXPECT = `if [ -f $(top_builddir)/../expect/expect ] ; then             echo $(top_builddir)/../expect/expect ;           else echo expect ; fi`\n-\n-\n-RUNTEST = `if [ -f $(top_srcdir)/../dejagnu/runtest ] ; then \t       echo $(top_srcdir)/../dejagnu/runtest ; \t    else echo runtest; fi`\n+EXPECT = @glibcpp_expect@\n \n+RUNTEST = @glibcpp_runtest@\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = "}]}