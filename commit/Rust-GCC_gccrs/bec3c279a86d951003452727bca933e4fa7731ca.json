{"sha": "bec3c279a86d951003452727bca933e4fa7731ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVjM2MyNzlhODZkOTUxMDAzNDUyNzI3YmNhOTMzZTRmYTc3MzFjYQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2019-10-18T06:53:34Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2019-10-18T06:53:34Z"}, "message": "re PR target/86040 ([avr]: RAMPZ is not always cleared after loading __flashN data)\n\n\tPR target/86040\n\t* config/avr/avr.c (avr_out_lpm): Do not shortcut-return.\n\nFrom-SVN: r277143", "tree": {"sha": "4903f501579b963b075fd9463196a78b5c2b1256", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4903f501579b963b075fd9463196a78b5c2b1256"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bec3c279a86d951003452727bca933e4fa7731ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec3c279a86d951003452727bca933e4fa7731ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bec3c279a86d951003452727bca933e4fa7731ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec3c279a86d951003452727bca933e4fa7731ca/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d1a718e0685688e763d768d357e8ed84db22d30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d1a718e0685688e763d768d357e8ed84db22d30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d1a718e0685688e763d768d357e8ed84db22d30"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "2f4906eb0c2b05995e398e14709d3fc2c46e73ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec3c279a86d951003452727bca933e4fa7731ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec3c279a86d951003452727bca933e4fa7731ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bec3c279a86d951003452727bca933e4fa7731ca", "patch": "@@ -1,3 +1,8 @@\n+2019-10-18  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/86040\n+\t* config/avr/avr.c (avr_out_lpm): Do not shortcut-return.\n+\n 2019-10-18  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \t    Richard Sandiford  <richard.sandiford@arm.com>\n "}, {"sha": "fc213895091da1ebdb5a8d01338b9368380fc03c", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec3c279a86d951003452727bca933e4fa7731ca/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec3c279a86d951003452727bca933e4fa7731ca/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=bec3c279a86d951003452727bca933e4fa7731ca", "patch": "@@ -3771,13 +3771,14 @@ avr_out_lpm (rtx_insn *insn, rtx *op, int *plen)\n           gcc_unreachable();\n \n         case 1:\n-          return avr_asm_len (\"%4lpm %0,%a2\", xop, plen, 1);\n+          avr_asm_len (\"%4lpm %0,%a2\", xop, plen, 1);\n+          break;\n \n         case 2:\n           if (REGNO (dest) == REG_Z)\n-            return avr_asm_len (\"%4lpm %5,%a2+\" CR_TAB\n-                                \"%4lpm %B0,%a2\" CR_TAB\n-                                \"mov %A0,%5\", xop, plen, 3);\n+            avr_asm_len (\"%4lpm %5,%a2+\" CR_TAB\n+                         \"%4lpm %B0,%a2\" CR_TAB\n+                         \"mov %A0,%5\", xop, plen, 3);\n           else\n             {\n               avr_asm_len (\"%4lpm %A0,%a2+\" CR_TAB\n@@ -3806,9 +3807,9 @@ avr_out_lpm (rtx_insn *insn, rtx *op, int *plen)\n                        \"%4lpm %B0,%a2+\", xop, plen, 2);\n \n           if (REGNO (dest) == REG_Z - 2)\n-            return avr_asm_len (\"%4lpm %5,%a2+\" CR_TAB\n-                                \"%4lpm %C0,%a2\" CR_TAB\n-                                \"mov %D0,%5\", xop, plen, 3);\n+            avr_asm_len (\"%4lpm %5,%a2+\" CR_TAB\n+                         \"%4lpm %C0,%a2\" CR_TAB\n+                         \"mov %D0,%5\", xop, plen, 3);\n           else\n             {\n               avr_asm_len (\"%4lpm %C0,%a2+\" CR_TAB"}]}