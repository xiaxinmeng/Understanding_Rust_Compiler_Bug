{"sha": "18dae8141c435922e4571e399c99bda2af1f93b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThkYWU4MTQxYzQzNTkyMmU0NTcxZTM5OWM5OWJkYTJhZjFmOTNiMw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2015-01-07T08:49:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-07T08:49:42Z"}, "message": "prj.ads, [...]: Minor reformatting.\n\n2015-01-07  Robert Dewar  <dewar@adacore.com>\n\n\t* prj.ads, i-cpoint.adb, freeze.adb, ghost.adb, prj-err.adb: Minor\n\treformatting.\n\n2015-01-07  Robert Dewar  <dewar@adacore.com>\n\n\t* restrict.adb (Check_Restriction_No_Use_Of_Attribute):\n\tNew procedure.\n\t(OK_No_Use_Of_Entity_Name): New function.\n\t(Set_Restriction_No_Use_Of_Entity): New procedure.\n\t* restrict.ads (Check_Restriction_No_Use_Of_Attribute):\n\tNew procedure.\n\t(OK_No_Use_Of_Entity_Name): New function.\n\t(Set_Restriction_No_Use_Of_Entity): New procedure.\n\t* sem_ch8.adb (Find_Direct_Name): Add check for violation of\n\tNo_Use_Of_Entity.\n\t* sem_prag.adb (Process_Restrictions_Or_Restriction_Warnings):\n\tAdd processing for new restriction No_Use_Of_Entity.\n\nFrom-SVN: r219282", "tree": {"sha": "0ef00988e6c21e125c8ed2a1737dc25fc10e6521", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ef00988e6c21e125c8ed2a1737dc25fc10e6521"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18dae8141c435922e4571e399c99bda2af1f93b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18dae8141c435922e4571e399c99bda2af1f93b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18dae8141c435922e4571e399c99bda2af1f93b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18dae8141c435922e4571e399c99bda2af1f93b3/comments", "author": null, "committer": null, "parents": [{"sha": "7806a9ed84c45d9424667c07e3501a618d763050", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7806a9ed84c45d9424667c07e3501a618d763050", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7806a9ed84c45d9424667c07e3501a618d763050"}], "stats": {"total": 328, "additions": 288, "deletions": 40}, "files": [{"sha": "25920e38cd194bd558ee2b3b1d9e53d67ea60c17", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=18dae8141c435922e4571e399c99bda2af1f93b3", "patch": "@@ -1,3 +1,23 @@\n+2015-01-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* prj.ads, i-cpoint.adb, freeze.adb, ghost.adb, prj-err.adb: Minor\n+\treformatting.\n+\n+2015-01-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* restrict.adb (Check_Restriction_No_Use_Of_Attribute):\n+\tNew procedure.\n+\t(OK_No_Use_Of_Entity_Name): New function.\n+\t(Set_Restriction_No_Use_Of_Entity): New procedure.\n+\t* restrict.ads (Check_Restriction_No_Use_Of_Attribute):\n+\tNew procedure.\n+\t(OK_No_Use_Of_Entity_Name): New function.\n+\t(Set_Restriction_No_Use_Of_Entity): New procedure.\n+\t* sem_ch8.adb (Find_Direct_Name): Add check for violation of\n+\tNo_Use_Of_Entity.\n+\t* sem_prag.adb (Process_Restrictions_Or_Restriction_Warnings):\n+\tAdd processing for new restriction No_Use_Of_Entity.\n+\n 2015-01-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* freeze.adb (Freeze_Array_Type): Apply same handling to Is_Atomic"}, {"sha": "ab128f242b72521904e7a2962f4e4eb3b6a88bf1", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=18dae8141c435922e4571e399c99bda2af1f93b3", "patch": "@@ -2435,8 +2435,8 @@ package body Freeze is\n             --  packing or explicit component size clause given.\n \n             if (Has_Aliased_Components (Arr)\n-                  or else\n-                Has_Atomic_Components (Arr) or else Is_Atomic (Ctyp))\n+                 or else Has_Atomic_Components (Arr)\n+                 or else Is_Atomic (Ctyp))\n               and then\n                 (Has_Component_Size_Clause (Arr) or else Is_Packed (Arr))\n             then\n@@ -7801,11 +7801,16 @@ package body Freeze is\n          if (SSO_Set_Low_By_Default (T) or else SSO_Set_High_By_Default (T))\n \n            --  For a record type, if bit order is specified explicitly, then\n-           --  do not set SSO from default if not consistent.\n+           --  do not set SSO from default if not consistent. Note that we\n+           --  do not want to look at a Bit_Order attribute definition for\n+           --  a parent: if we were to inherit Bit_Order, then both\n+           --  SSO_Set_*_By_Default flags would have been cleared already\n+           --  (by Inherit_Aspects_At_Freeze_Point).\n \n            and then not\n              (Is_Record_Type (T)\n-               and then Has_Rep_Item (T, Name_Bit_Order)\n+               and then Has_Rep_Item (T,\n+                          Name_Bit_Order, Check_Parents => False)\n                and then Reverse_Bit_Order (T) /= Reversed)\n          then\n             --  If flags cause reverse storage order, then set the result. Note"}, {"sha": "2c3be8f4e439c8be636c2667a726de17655709fa", "filename": "gcc/ada/ghost.adb", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Fghost.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Fghost.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fghost.adb?ref=18dae8141c435922e4571e399c99bda2af1f93b3", "patch": "@@ -82,7 +82,7 @@ package body Ghost is\n       for Index in reverse Ignored_Ghost_Units.First ..\n                            Ignored_Ghost_Units.Last\n       loop\n-         --  The unit is already present in the table, do not add it again\n+         --  If the unit is already present in the table, do not add it again\n \n          if Unit = Ignored_Ghost_Units.Table (Index) then\n             return;\n@@ -260,11 +260,10 @@ package body Ghost is\n                Ref : Node_Id;\n \n             begin\n-               Ref := N;\n-\n                --  When the reference extracts a subcomponent, recover the\n                --  related object (SPARK RM 6.9(1)).\n \n+               Ref := N;\n                while Nkind_In (Ref, N_Explicit_Dereference,\n                                     N_Indexed_Component,\n                                     N_Selected_Component,\n@@ -884,11 +883,10 @@ package body Ghost is\n       elsif Nkind_In (N, N_Assignment_Statement,\n                          N_Procedure_Call_Statement)\n       then\n-         Nam := Name (N);\n-\n          --  When the reference extracts a subcomponent, recover the related\n          --  object (SPARK RM 6.9(1)).\n \n+         Nam := Name (N);\n          while Nkind_In (Nam, N_Explicit_Dereference,\n                               N_Indexed_Component,\n                               N_Selected_Component,\n@@ -922,10 +920,8 @@ package body Ghost is\n    begin\n       if Is_Checked_Ghost_Entity (Id) then\n          Ghost_Mode := Check;\n-\n       elsif Is_Ignored_Ghost_Entity (Id) then\n          Ghost_Mode := Ignore;\n-\n          Propagate_Ignored_Ghost_Code (N);\n       end if;\n    end Set_Ghost_Mode_For_Freeze;\n@@ -936,11 +932,9 @@ package body Ghost is\n \n    procedure Set_Is_Ghost_Entity (Id : Entity_Id) is\n       Policy : constant Name_Id := Policy_In_Effect (Name_Ghost);\n-\n    begin\n       if Policy = Name_Check then\n          Set_Is_Checked_Ghost_Entity (Id);\n-\n       elsif Policy = Name_Ignore then\n          Set_Is_Ignored_Ghost_Entity (Id);\n       end if;"}, {"sha": "afcb96b9d4ca569ac9441c946f5d1a5018041581", "filename": "gcc/ada/i-cpoint.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Fi-cpoint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Fi-cpoint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cpoint.adb?ref=18dae8141c435922e4571e399c99bda2af1f93b3", "patch": "@@ -109,22 +109,22 @@ package body Interfaces.C.Pointers is\n       if Source = null or else Target = null then\n          raise Dereference_Error;\n \n+      --  Forward copy\n+\n       elsif To_Addr (Target) <= To_Addr (Source) then\n-         --  Forward copy\n          T := Target;\n          S := Source;\n-\n          for J in 1 .. Length loop\n             T.all := S.all;\n             Increment (T);\n             Increment (S);\n          end loop;\n \n+      --  Backward copy\n+\n       else\n-         --  Backward copy\n          T := Target + Length;\n          S := Source + Length;\n-\n          for J in 1 .. Length loop\n             Decrement (T);\n             Decrement (S);"}, {"sha": "44ad905c21ab70015a2498ba8a6b31948f9dafc4", "filename": "gcc/ada/prj-err.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Fprj-err.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Fprj-err.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-err.adb?ref=18dae8141c435922e4571e399c99bda2af1f93b3", "patch": "@@ -72,6 +72,8 @@ package body Prj.Err is\n       Real_Location : Source_Ptr := Location;\n \n    begin\n+      --  Don't post message if incompleted with's (avoid junk cascaded errors)\n+\n       if Flags.Incomplete_Withs then\n          return;\n       end if;"}, {"sha": "ac55681e6571220c37e428481cf4797d4c1186ee", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=18dae8141c435922e4571e399c99bda2af1f93b3", "patch": "@@ -2052,7 +2052,7 @@ private\n       Missing_Source_Files       : Error_Warning;\n       Ignore_Missing_With        : Boolean;\n \n-      Incomplete_Withs           : Boolean := False;\n+      Incomplete_Withs : Boolean := False;\n       --  This flag is set to True when the projects are parsed while ignoring\n       --  missing withed project and some withed projects are not found.\n "}, {"sha": "661a05ada5356c94b9ce7dca1d66b211595b9532", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 189, "deletions": 0, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=18dae8141c435922e4571e399c99bda2af1f93b3", "patch": "@@ -128,6 +128,10 @@ package body Restrict is\n    --  real violation, serious vs non-serious, implicit vs explicit, the second\n    --  message giving the profile name if needed, and the location information.\n \n+   function Same_Entity (E1, E2 : Node_Id) return Boolean;\n+   --  Returns True iff E1 and E2 represent the same entity. Used for handling\n+   --  of No_Use_Of_Entity => fully_qualified_ENTITY restriction case.\n+\n    function Same_Unit (U1, U2 : Node_Id) return Boolean;\n    --  Returns True iff U1 and U2 represent the same library unit. Used for\n    --  handling of No_Dependence => Unit restriction case.\n@@ -680,6 +684,98 @@ package body Restrict is\n       end if;\n    end Check_Restriction_No_Use_Of_Attribute;\n \n+   ----------------------------------------\n+   -- Check_Restriction_No_Use_Of_Entity --\n+   ----------------------------------------\n+\n+   procedure Check_Restriction_No_Use_Of_Entity (N : Node_Id) is\n+   begin\n+      --  Error defence (not clearly necessary, but better safe)\n+\n+      if No (Entity (N)) then\n+         return;\n+      end if;\n+\n+      --  If simple name of entity not flagged with Boolean2 flag, then there\n+      --  cannot be a matching entry in the table, so skip the search.\n+\n+      if Get_Name_Table_Boolean2 (Chars (Entity (N))) = False then\n+         return;\n+      end if;\n+\n+      --  Restriction is only recognized within a configuration\n+      --  pragma file, or within a unit of the main extended\n+      --  program. Note: the test for Main_Unit is needed to\n+      --  properly include the case of configuration pragma files.\n+\n+      if Current_Sem_Unit /= Main_Unit\n+        and then not In_Extended_Main_Source_Unit (N)\n+      then\n+         return;\n+      end if;\n+\n+      --  Here we must search the table\n+\n+      for J in No_Use_Of_Entity.First .. No_Use_Of_Entity.Last loop\n+         declare\n+            NE_Ent : NE_Entry renames No_Use_Of_Entity.Table (J);\n+            Ent    : Entity_Id;\n+            Expr   : Node_Id;\n+\n+         begin\n+            Ent  := Entity (N);\n+            Expr := NE_Ent.Entity;\n+            loop\n+               --  Here if at outer level of entity name in reference\n+\n+               if Scope (Ent) = Standard_Standard then\n+                  if Nkind_In (Expr, N_Identifier, N_Operator_Symbol)\n+                    and then Chars (Ent) = Chars (Expr)\n+                  then\n+                     Error_Msg_Node_1 := N;\n+                     Error_Msg_Warn := NE_Ent.Warn;\n+                     Error_Msg_Sloc := Sloc (NE_Ent.Entity);\n+                     Error_Msg_N\n+                       (\"<*<reference to & violates restriction \"\n+                        & \"No_Use_Of_Entity #\", N);\n+                     return;\n+\n+                  else\n+                     goto Continue;\n+                  end if;\n+\n+               --  Here if at outer level of entity name in table\n+\n+               elsif Nkind_In (Expr, N_Identifier, N_Operator_Symbol) then\n+                  goto Continue;\n+\n+               --  Here if neither at the outer level\n+\n+               else\n+                  pragma Assert (Nkind (Expr) = N_Selected_Component);\n+\n+                  if Chars (Selector_Name (Expr)) /= Chars (Ent) then\n+                     goto Continue;\n+                  end if;\n+               end if;\n+\n+               --  Move up a level\n+\n+               loop\n+                  Ent := Scope (Ent);\n+                  exit when not Is_Internal_Name (Chars (Ent));\n+               end loop;\n+\n+               Expr := Prefix (Expr);\n+\n+               --  Entry did not match\n+\n+               <<Continue>> null;\n+            end loop;\n+         end;\n+      end loop;\n+   end Check_Restriction_No_Use_Of_Entity;\n+\n    ----------------------------------------\n    -- Check_Restriction_No_Use_Of_Pragma --\n    ----------------------------------------\n@@ -864,6 +960,27 @@ package body Restrict is\n       end if;\n    end OK_No_Dependence_Unit_Name;\n \n+   ------------------------------\n+   -- OK_No_Use_Of_Entity_Name --\n+   ------------------------------\n+\n+   function OK_No_Use_Of_Entity_Name (N : Node_Id) return Boolean is\n+   begin\n+      if Nkind (N) = N_Selected_Component then\n+         return\n+           OK_No_Use_Of_Entity_Name (Prefix (N))\n+             and then\n+           OK_No_Use_Of_Entity_Name (Selector_Name (N));\n+\n+      elsif Nkind_In (N, N_Identifier, N_Operator_Symbol) then\n+         return True;\n+\n+      else\n+         Error_Msg_N (\"wrong form for entity name for No_Use_Of_Entity\", N);\n+         return False;\n+      end if;\n+   end OK_No_Use_Of_Entity_Name;\n+\n    ----------------------------------\n    -- Process_Restriction_Synonyms --\n    ----------------------------------\n@@ -1146,6 +1263,30 @@ package body Restrict is\n       end if;\n    end Restriction_Msg;\n \n+   -----------------\n+   -- Same_Entity --\n+   -----------------\n+\n+   function Same_Entity (E1, E2 : Node_Id) return Boolean is\n+   begin\n+      if Nkind_In (E1, N_Identifier, N_Operator_Symbol)\n+           and then\n+         Nkind_In (E2, N_Identifier, N_Operator_Symbol)\n+      then\n+         return Chars (E1) = Chars (E2);\n+\n+      elsif Nkind_In (E1, N_Selected_Component, N_Expanded_Name)\n+              and then\n+            Nkind_In (E2, N_Selected_Component, N_Expanded_Name)\n+      then\n+         return Same_Unit (Prefix (E1), Prefix (E2))\n+                  and then\n+                Same_Unit (Selector_Name (E1), Selector_Name (E2));\n+      else\n+         return False;\n+      end if;\n+   end Same_Entity;\n+\n    ---------------\n    -- Same_Unit --\n    ---------------\n@@ -1360,6 +1501,54 @@ package body Restrict is\n       No_Dependences.Append ((Unit, Warn, Profile));\n    end Set_Restriction_No_Dependence;\n \n+   --------------------------------------\n+   -- Set_Restriction_No_Use_Of_Entity --\n+   --------------------------------------\n+\n+   procedure Set_Restriction_No_Use_Of_Entity\n+     (Entity  : Node_Id;\n+      Warn    : Boolean;\n+      Profile : Profile_Name := No_Profile)\n+   is\n+      Nam : Node_Id;\n+\n+   begin\n+      --  Loop to check for duplicate entry\n+\n+      for J in No_Use_Of_Entity.First .. No_Use_Of_Entity.Last loop\n+\n+         --  Case of entry already in table\n+\n+         if Same_Entity (Entity, No_Use_Of_Entity.Table (J).Entity) then\n+\n+            --  Error has precedence over warning\n+\n+            if not Warn then\n+               No_Use_Of_Entity.Table (J).Warn := False;\n+            end if;\n+\n+            return;\n+         end if;\n+      end loop;\n+\n+      --  Entry is not currently in table\n+\n+      No_Use_Of_Entity.Append ((Entity, Warn, Profile));\n+\n+      --  Now we need to find the direct name and set Boolean2 flag\n+\n+      if Nkind_In (Entity, N_Identifier, N_Operator_Symbol) then\n+         Nam := Entity;\n+\n+      else\n+         pragma Assert (Nkind (Entity) = N_Selected_Component);\n+         Nam := Selector_Name (Entity);\n+         pragma Assert (Nkind_In (Nam, N_Identifier, N_Operator_Symbol));\n+      end if;\n+\n+      Set_Name_Table_Boolean2 (Chars (Nam), True);\n+   end Set_Restriction_No_Use_Of_Entity;\n+\n    ------------------------------------------------\n    -- Set_Restriction_No_Specification_Of_Aspect --\n    ------------------------------------------------"}, {"sha": "e683a7154807ed6019f8c2c15ea64d2f4216c99f", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 32, "deletions": 10, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=18dae8141c435922e4571e399c99bda2af1f93b3", "patch": "@@ -273,16 +273,6 @@ package Restrict is\n    --  Wrapper on Check_Restriction with Msg_Issued, with the out-parameter\n    --  being ignored here.\n \n-   procedure Check_Restriction_No_Use_Of_Attribute (N : Node_Id);\n-   --  N is the node of an attribute definition clause. An error message\n-   --  (warning) will be issued if a restriction (warning) was previously set\n-   --  for this attribute using Set_No_Use_Of_Attribute.\n-\n-   procedure Check_Restriction_No_Use_Of_Pragma (N : Node_Id);\n-   --  N is the node of a pragma. An error message (warning) will be issued\n-   --  if a restriction (warning) was previously set for this pragma using\n-   --  Set_No_Use_Of_Pragma.\n-\n    procedure Check_Restriction_No_Dependence (U : Node_Id; Err : Node_Id);\n    --  Called when a dependence on a unit is created (either implicitly, or by\n    --  an explicit WITH clause). U is a node for the unit involved, and Err is\n@@ -293,6 +283,21 @@ package Restrict is\n    --  (warning) will be issued if a restriction (warning) was previous set\n    --  for this aspect using Set_No_Specification_Of_Aspect.\n \n+   procedure Check_Restriction_No_Use_Of_Attribute (N : Node_Id);\n+   --  N is the node of an attribute definition clause. An error message\n+   --  (warning) will be issued if a restriction (warning) was previously set\n+   --  for this attribute using Set_No_Use_Of_Attribute.\n+\n+   procedure Check_Restriction_No_Use_Of_Entity (N : Node_Id);\n+   --  N is the node id for an entity reference. An error message (warning)\n+   --  will be issued if a restriction (warning) was previous set for this\n+   --  entity name using Set_No_Use_Of_Entity.\n+\n+   procedure Check_Restriction_No_Use_Of_Pragma (N : Node_Id);\n+   --  N is the node of a pragma. An error message (warning) will be issued\n+   --  if a restriction (warning) was previously set for this pragma using\n+   --  Set_No_Use_Of_Pragma.\n+\n    procedure Check_Elaboration_Code_Allowed (N : Node_Id);\n    --  Tests to see if elaboration code is allowed by the current restrictions\n    --  settings. This function is called by Gigi when it needs to define an\n@@ -356,6 +361,11 @@ package Restrict is\n    --  pragma Restrictions_Warning, or attribute Restriction_Set. Returns\n    --  True if N has the proper form for a unit name, False otherwise.\n \n+   function OK_No_Use_Of_Entity_Name (N : Node_Id) return Boolean;\n+   --  Used in checking No_Use_Of_Entity argument of pragma Restrictions or\n+   --  pragma Restrictions_Warning, or attribute Restriction_Set. Returns\n+   --  True if N has the proper form for an entity name, False otherwise.\n+\n    function Is_In_Hidden_Part_In_SPARK (Loc : Source_Ptr) return Boolean;\n    --  Determine if given location is covered by a hidden region range in the\n    --  SPARK hides table.\n@@ -460,6 +470,18 @@ package Restrict is\n    --  No_Use_Of_Attribute. Caller has verified that this is a valid attribute\n    --  designator.\n \n+   procedure Set_Restriction_No_Use_Of_Entity\n+     (Entity  : Node_Id;\n+      Warn    : Boolean;\n+      Profile : Profile_Name := No_Profile);\n+   --  Sets given No_Use_Of_Entity restriction in table if not there already.\n+   --  Warn is True if from Restriction_Warnings, or for Restrictions if the\n+   --  flag Treat_Restrictions_As_Warnings is set. False if from Restrictions\n+   --  and this flag is not set. Profile is set to a non-default value if the\n+   --  No_Dependence restriction comes from a Profile pragma. This procedure\n+   --  also takes care of setting the Boolean2 flag of the simple name for\n+   --  the entity  (to optimize table searches).\n+\n    procedure Set_Restriction_No_Use_Of_Pragma\n      (N       : Node_Id;\n       Warning : Boolean);"}, {"sha": "26b697f3c3a5ef63ced0431bef8b848cde093b5d", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=18dae8141c435922e4571e399c99bda2af1f93b3", "patch": "@@ -5235,7 +5235,7 @@ package body Sem_Ch8 is\n          Nvis_Messages;\n       end if;\n \n-      return;\n+      goto Done;\n \n       --  Processing for a potentially use visible entry found. We must search\n       --  the rest of the homonym chain for two reasons. First, if there is a\n@@ -5345,7 +5345,7 @@ package body Sem_Ch8 is\n                end loop;\n \n                Nvis_Messages;\n-               return;\n+               goto Done;\n \n             elsif\n               Is_Predefined_File_Name (Unit_File_Name (Current_Sem_Unit))\n@@ -5372,7 +5372,7 @@ package body Sem_Ch8 is\n \n             else\n                Nvis_Messages;\n-               return;\n+               goto Done;\n             end if;\n          end if;\n       end;\n@@ -5477,9 +5477,8 @@ package body Sem_Ch8 is\n            and then Expander_Active\n            and then Get_PCS_Name /= Name_No_DSA\n          then\n-            Rewrite (N,\n-              New_Occurrence_Of (Equivalent_Type (E), Sloc (N)));\n-            return;\n+            Rewrite (N, New_Occurrence_Of (Equivalent_Type (E), Sloc (N)));\n+            goto Done;\n          end if;\n \n          --  Set the entity. Note that the reason we call Set_Entity for the\n@@ -5634,6 +5633,11 @@ package body Sem_Ch8 is\n             end if;\n          end if;\n       end;\n+\n+   --  Come here with entity set\n+\n+   <<Done>>\n+      Check_Restriction_No_Use_Of_Entity (N);\n    end Find_Direct_Name;\n \n    ------------------------"}, {"sha": "59a54ee332c47d795d0b1940e65ead6ef229ba5c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18dae8141c435922e4571e399c99bda2af1f93b3/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=18dae8141c435922e4571e399c99bda2af1f93b3", "patch": "@@ -8895,12 +8895,25 @@ package body Sem_Prag is\n                   Set_Restriction_No_Use_Of_Attribute (Expr, Warn);\n                end if;\n \n-            --  Case of No_Use_Of_Entity => fully-qualified-name. Note that the\n-            --  parser already processed this case commpletely, including error\n-            --  checking and making an entry in the No_Use_Of_Entity table.\n+            --  Case of No_Use_Of_Entity => fully-qualified-name\n \n             elsif Id = Name_No_Use_Of_Entity then\n-               null;\n+\n+               --  Restriction is only recognized within a configuration\n+               --  pragma file, or within a unit of the main extended\n+               --  program. Note: the test for Main_Unit is needed to\n+               --  properly include the case of configuration pragma files.\n+\n+               if Current_Sem_Unit = Main_Unit\n+                 or else In_Extended_Main_Source_Unit (N)\n+               then\n+                  if not OK_No_Dependence_Unit_Name (Expr) then\n+                     Error_Msg_N (\"wrong form for entity name\", Expr);\n+                  else\n+                     Set_Restriction_No_Use_Of_Entity\n+                       (Expr, Warn, No_Profile);\n+                  end if;\n+               end if;\n \n             --  Case of No_Use_Of_Pragma => pragma-identifier\n \n@@ -8909,7 +8922,6 @@ package body Sem_Prag is\n                  or else not Is_Pragma_Name (Chars (Expr))\n                then\n                   Error_Msg_N (\"unknown pragma name??\", Expr);\n-\n                else\n                   Set_Restriction_No_Use_Of_Pragma (Expr, Warn);\n                end if;\n@@ -14941,7 +14953,7 @@ package body Sem_Prag is\n          -- Independent_Components --\n          ----------------------------\n \n-         --  pragma Atomic_Components (array_or_record_LOCAL_NAME);\n+         --  pragma Independent_Components (array_or_record_LOCAL_NAME);\n \n          when Pragma_Independent_Components => Independent_Components : declare\n             E_Id : Node_Id;"}]}