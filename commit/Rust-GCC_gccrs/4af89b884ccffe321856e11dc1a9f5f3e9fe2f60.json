{"sha": "4af89b884ccffe321856e11dc1a9f5f3e9fe2f60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFmODliODg0Y2NmZmUzMjE4NTZlMTFkYzFhOWY1ZjNlOWZlMmY2MA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2010-06-05T03:13:50Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2010-06-05T03:13:50Z"}, "message": "genautomata.c (get_excl_set): Do work per element, not per char.\n\n2010-06-05  Segher Boessenkool  <segher@kernel.crashing.org>\n\n        genautomata.c (get_excl_set): Do work per element, not per char.\n        (check_presence_pattern_sets): Similar.\n        (check_absence_pattern_sets): Similar.\n\nFrom-SVN: r160307", "tree": {"sha": "c1aec2ddb0975324fbcea50ce00eda286d536f1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1aec2ddb0975324fbcea50ce00eda286d536f1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4af89b884ccffe321856e11dc1a9f5f3e9fe2f60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4af89b884ccffe321856e11dc1a9f5f3e9fe2f60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4af89b884ccffe321856e11dc1a9f5f3e9fe2f60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4af89b884ccffe321856e11dc1a9f5f3e9fe2f60/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99d9820095f285a5b80668bce1b2cc516e6cd548", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99d9820095f285a5b80668bce1b2cc516e6cd548", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99d9820095f285a5b80668bce1b2cc516e6cd548"}], "stats": {"total": 56, "additions": 28, "deletions": 28}, "files": [{"sha": "e492b28845ed5995f35e8948e75f0607ca61bf3d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4af89b884ccffe321856e11dc1a9f5f3e9fe2f60/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4af89b884ccffe321856e11dc1a9f5f3e9fe2f60/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4af89b884ccffe321856e11dc1a9f5f3e9fe2f60", "patch": "@@ -1,3 +1,9 @@\n+2010-06-05  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tgenautomata.c (get_excl_set): Do work per element, not per char.\n+\t(check_presence_pattern_sets): Similar.\n+\t(check_absence_pattern_sets): Similar.\n+\n 2010-06-05  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* genautomata.c (curr_state_pass_num): Delete."}, {"sha": "ad7caa611b595e9a4d77ff62d41b1a62c1b4a4db", "filename": "gcc/genautomata.c", "status": "modified", "additions": 22, "deletions": 28, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4af89b884ccffe321856e11dc1a9f5f3e9fe2f60/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4af89b884ccffe321856e11dc1a9f5f3e9fe2f60/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=4af89b884ccffe321856e11dc1a9f5f3e9fe2f60", "patch": "@@ -4174,20 +4174,18 @@ initiate_excl_sets (void)\n static reserv_sets_t\n get_excl_set (reserv_sets_t in_set)\n {\n-  int excl_char_num;\n-  int chars_num;\n-  int i;\n+  int el;\n+  unsigned int i;\n   int start_unit_num;\n   int unit_num;\n \n-  chars_num = els_in_cycle_reserv * sizeof (set_el_t);\n-  memset (excl_set, 0, chars_num);\n-  for (excl_char_num = 0; excl_char_num < chars_num; excl_char_num++)\n-    if (((unsigned char *) in_set) [excl_char_num])\n-      for (i = CHAR_BIT - 1; i >= 0; i--)\n-\tif ((((unsigned char *) in_set) [excl_char_num] >> i) & 1)\n+  memset (excl_set, 0, els_in_cycle_reserv * sizeof (set_el_t));\n+  for (el = 0; el < els_in_cycle_reserv; el++)\n+    if (in_set[el])\n+      for (i = 0; i < CHAR_BIT * sizeof (set_el_t); i++)\n+\tif ((in_set[el] >> i) & 1)\n \t  {\n-\t    start_unit_num = excl_char_num * CHAR_BIT + i;\n+\t    start_unit_num = el * CHAR_BIT * sizeof (set_el_t) + i;\n \t    if (start_unit_num >= description->units_num)\n \t      return excl_set;\n \t    for (unit_num = 0; unit_num < els_in_cycle_reserv; unit_num++)\n@@ -4286,21 +4284,19 @@ check_presence_pattern_sets (reserv_sets_t checked_set,\n \t\t\t     reserv_sets_t original_set,\n \t\t\t     int final_p)\n {\n-  int char_num;\n-  int chars_num;\n-  int i;\n+  int el;\n+  unsigned int i;\n   int start_unit_num;\n   int unit_num;\n   int presence_p;\n   pattern_reserv_t pat_reserv;\n \n-  chars_num = els_in_cycle_reserv * sizeof (set_el_t);\n-  for (char_num = 0; char_num < chars_num; char_num++)\n-    if (((unsigned char *) original_set) [char_num])\n-      for (i = CHAR_BIT - 1; i >= 0; i--)\n-\tif ((((unsigned char *) original_set) [char_num] >> i) & 1)\n+  for (el = 0; el < els_in_cycle_reserv; el++)\n+    if (original_set[el])\n+      for (i = 0; i < CHAR_BIT * sizeof (set_el_t); i++)\n+\tif ((original_set[el] >> i) & 1)\n \t  {\n-\t    start_unit_num = char_num * CHAR_BIT + i;\n+\t    start_unit_num = el * CHAR_BIT * sizeof (set_el_t) + i;\n \t    if (start_unit_num >= description->units_num)\n \t      break;\n \t    if ((final_p\n@@ -4335,20 +4331,18 @@ check_absence_pattern_sets (reserv_sets_t checked_set,\n \t\t\t    reserv_sets_t original_set,\n \t\t\t    int final_p)\n {\n-  int char_num;\n-  int chars_num;\n-  int i;\n+  int el;\n+  unsigned int i;\n   int start_unit_num;\n   int unit_num;\n   pattern_reserv_t pat_reserv;\n \n-  chars_num = els_in_cycle_reserv * sizeof (set_el_t);\n-  for (char_num = 0; char_num < chars_num; char_num++)\n-    if (((unsigned char *) original_set) [char_num])\n-      for (i = CHAR_BIT - 1; i >= 0; i--)\n-\tif ((((unsigned char *) original_set) [char_num] >> i) & 1)\n+  for (el = 0; el < els_in_cycle_reserv; el++)\n+    if (original_set[el])\n+      for (i = 0; i < CHAR_BIT * sizeof (set_el_t); i++)\n+\tif ((original_set[el] >> i) & 1)\n \t  {\n-\t    start_unit_num = char_num * CHAR_BIT + i;\n+\t    start_unit_num = el * CHAR_BIT * sizeof (set_el_t) + i;\n \t    if (start_unit_num >= description->units_num)\n \t      break;\n \t    for (pat_reserv = (final_p"}]}