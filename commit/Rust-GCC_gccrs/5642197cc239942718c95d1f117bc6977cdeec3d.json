{"sha": "5642197cc239942718c95d1f117bc6977cdeec3d", "node_id": "C_kwDOANBUbNoAKDU2NDIxOTdjYzIzOTk0MjcxOGM5NWQxZjExN2JjNjk3N2NkZWVjM2Q", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-09-05T12:17:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-09-05T13:15:03Z"}, "message": "debug () for predicates\n\nThe following adds a debug () member to the predicate class.\n\n\t* gimple-predicate-analysis.h (predicate::debug): New.\n\t(predicate::dump): Add FILE * argument, add base overload.\n\t* gimple-predicate-analysis.cc (debug): New.\n\t(dump_pred_info): Add FILE * argument.\n\t(dump_pred_chain): Likewise.\n\t(predicate::dump): Split out preamble into overload.  Add\n\tFILE * argument.\n\t(predicate::debug): New.\n\t(predicate::simplify): Adjust.\n\t(predicate::normalize): Likewise.\n\t(predicate::init_from_control_deps): Likewise.", "tree": {"sha": "389681860611a7df13683ff6148a7926da82c59f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/389681860611a7df13683ff6148a7926da82c59f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5642197cc239942718c95d1f117bc6977cdeec3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5642197cc239942718c95d1f117bc6977cdeec3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5642197cc239942718c95d1f117bc6977cdeec3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5642197cc239942718c95d1f117bc6977cdeec3d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d29ecf23f0b046de720a25171c3b3980fa8a0a22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d29ecf23f0b046de720a25171c3b3980fa8a0a22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d29ecf23f0b046de720a25171c3b3980fa8a0a22"}], "stats": {"total": 86, "additions": 52, "deletions": 34}, "files": [{"sha": "5629a6dc277eda074ab2c4acd5d7bd63c0aa2555", "filename": "gcc/gimple-predicate-analysis.cc", "status": "modified", "additions": 49, "deletions": 33, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5642197cc239942718c95d1f117bc6977cdeec3d/gcc%2Fgimple-predicate-analysis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5642197cc239942718c95d1f117bc6977cdeec3d/gcc%2Fgimple-predicate-analysis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-predicate-analysis.cc?ref=5642197cc239942718c95d1f117bc6977cdeec3d", "patch": "@@ -150,34 +150,34 @@ format_edge_vecs (const vec<edge> eva[], unsigned n)\n   return str;\n }\n \n-/* Dump a single pred_info to DUMP_FILE.  */\n+/* Dump a single pred_info to F.  */\n \n static void\n-dump_pred_info (const pred_info &pred)\n+dump_pred_info (FILE *f, const pred_info &pred)\n {\n   if (pred.invert)\n-    fprintf (dump_file, \"NOT (\");\n-  print_generic_expr (dump_file, pred.pred_lhs);\n-  fprintf (dump_file, \" %s \", op_symbol_code (pred.cond_code));\n-  print_generic_expr (dump_file, pred.pred_rhs);\n+    fprintf (f, \"NOT (\");\n+  print_generic_expr (f, pred.pred_lhs);\n+  fprintf (f, \" %s \", op_symbol_code (pred.cond_code));\n+  print_generic_expr (f, pred.pred_rhs);\n   if (pred.invert)\n-    fputc (')', dump_file);\n+    fputc (')', f);\n }\n \n-/* Dump a pred_chain to DUMP_FILE.  */\n+/* Dump a pred_chain to F.  */\n \n static void\n-dump_pred_chain (const pred_chain &chain)\n+dump_pred_chain (FILE *f, const pred_chain &chain)\n {\n   unsigned np = chain.length ();\n   for (unsigned j = 0; j < np; j++)\n     {\n       if (j > 0)\n-\tfprintf (dump_file, \" AND (\");\n+\tfprintf (f, \" AND (\");\n       else\n-\tfputc ('(', dump_file);\n-      dump_pred_info (chain[j]);\n-      fputc (')', dump_file);\n+\tfputc ('(', f);\n+      dump_pred_info (f, chain[j]);\n+      fputc (')', f);\n     }\n }\n \n@@ -1405,7 +1405,7 @@ predicate::simplify (gimple *use_or_def, bool is_use)\n   if (dump_file && dump_flags & TDF_DETAILS)\n     {\n       fprintf (dump_file, \"Before simplication \");\n-      dump (use_or_def, is_use ? \"[USE]:\\n\" : \"[DEF]:\\n\");\n+      dump (dump_file, use_or_def, is_use ? \"[USE]:\\n\" : \"[DEF]:\\n\");\n     }\n \n   unsigned n = m_preds.length ();\n@@ -1641,7 +1641,7 @@ predicate::normalize (gimple *use_or_def, bool is_use)\n   if (dump_file && dump_flags & TDF_DETAILS)\n     {\n       fprintf (dump_file, \"Before normalization \");\n-      dump (use_or_def, is_use ? \"[USE]:\\n\" : \"[DEF]:\\n\");\n+      dump (dump_file, use_or_def, is_use ? \"[USE]:\\n\" : \"[DEF]:\\n\");\n     }\n \n   predicate norm_preds;\n@@ -1658,7 +1658,7 @@ predicate::normalize (gimple *use_or_def, bool is_use)\n   if (dump_file)\n     {\n       fprintf (dump_file, \"After normalization \");\n-      dump (use_or_def, is_use ? \"[USE]:\\n\" : \"[DEF]:\\n\");\n+      dump (dump_file, use_or_def, is_use ? \"[USE]:\\n\" : \"[DEF]:\\n\");\n     }\n }\n \n@@ -1748,7 +1748,7 @@ predicate::init_from_control_deps (const vec<edge> *dep_chains,\n \t\t{\n \t\t  fprintf (dump_file, \"%d -> %d: one_pred = \",\n \t\t\t   e->src->index, e->dest->index);\n-\t\t  dump_pred_info (one_pred);\n+\t\t  dump_pred_info (dump_file, one_pred);\n \t\t  fputc ('\\n', dump_file);\n \t\t}\n \n@@ -1845,7 +1845,7 @@ predicate::init_from_control_deps (const vec<edge> *dep_chains,\n     }\n \n   if (DEBUG_PREDICATE_ANALYZER && dump_file)\n-    dump (NULL, \"\");\n+    dump (dump_file);\n }\n \n /* Store a PRED in *THIS.  */\n@@ -1858,35 +1858,51 @@ predicate::push_pred (const pred_info &pred)\n   m_preds.safe_push (chain);\n }\n \n-/* Dump predicates in *THIS for STMT prepended by MSG.  */\n+/* Dump predicates in *THIS to F.  */\n \n void\n-predicate::dump (gimple *stmt, const char *msg) const\n+predicate::dump (FILE *f) const\n {\n-  fprintf (dump_file, \"%s\", msg);\n-  if (stmt)\n-    {\n-      fputc ('\\t', dump_file);\n-      print_gimple_stmt (dump_file, stmt, 0);\n-      fprintf (dump_file, \"  is conditional on:\\n\");\n-    }\n-\n   unsigned np = m_preds.length ();\n   if (np == 0)\n     {\n-      fprintf (dump_file, \"\\tTRUE (empty)\\n\");\n+      fprintf (f, \"\\tTRUE (empty)\\n\");\n       return;\n     }\n \n   for (unsigned i = 0; i < np; i++)\n     {\n       if (i > 0)\n-\tfprintf (dump_file, \"\\tOR (\");\n+\tfprintf (f, \"\\tOR (\");\n       else\n-\tfprintf (dump_file, \"\\t(\");\n-      dump_pred_chain (m_preds[i]);\n-      fprintf (dump_file, \")\\n\");\n+\tfprintf (f, \"\\t(\");\n+      dump_pred_chain (f, m_preds[i]);\n+      fprintf (f, \")\\n\");\n+    }\n+}\n+\n+/* Dump predicates in *THIS to stderr.  */\n+\n+void\n+predicate::debug () const\n+{\n+  dump (stderr);\n+}\n+\n+/* Dump predicates in *THIS for STMT prepended by MSG to F.  */\n+\n+void\n+predicate::dump (FILE *f, gimple *stmt, const char *msg) const\n+{\n+  fprintf (f, \"%s\", msg);\n+  if (stmt)\n+    {\n+      fputc ('\\t', f);\n+      print_gimple_stmt (f, stmt, 0);\n+      fprintf (f, \"  is conditional on:\\n\");\n     }\n+\n+  dump (f);\n }\n \n /* Initialize USE_PREDS with the predicates of the control dependence chains"}, {"sha": "972af5e0b2da1e56125f7db86b79c3a2f406651a", "filename": "gcc/gimple-predicate-analysis.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5642197cc239942718c95d1f117bc6977cdeec3d/gcc%2Fgimple-predicate-analysis.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5642197cc239942718c95d1f117bc6977cdeec3d/gcc%2Fgimple-predicate-analysis.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-predicate-analysis.h?ref=5642197cc239942718c95d1f117bc6977cdeec3d", "patch": "@@ -67,7 +67,9 @@ class predicate\n \n   void init_from_control_deps (const vec<edge> *, unsigned, bool);\n \n-  void dump (gimple *, const char *) const;\n+  void dump (FILE *) const;\n+  void dump (FILE *, gimple *, const char *) const;\n+  void debug () const;\n \n   void normalize (gimple * = NULL, bool = false);\n   void simplify (gimple * = NULL, bool = false);"}]}