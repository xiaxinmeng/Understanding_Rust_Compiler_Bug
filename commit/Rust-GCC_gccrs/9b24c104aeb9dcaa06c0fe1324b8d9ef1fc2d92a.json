{"sha": "9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIyNGMxMDRhZWI5ZGNhYTA2YzBmZTEzMjRiOGQ5ZWYxZmMyZDkyYQ==", "commit": {"author": {"name": "Fritz Reese", "email": "fritzoreese@gmail.com", "date": "2017-11-14T01:25:26Z"}, "committer": {"name": "Fritz Reese", "email": "foreese@gcc.gnu.org", "date": "2017-11-14T01:25:26Z"}, "message": "re PR fortran/78240 (ICE in match_clist_expr, at fortran/decl.c:728)\n\n2017-11-13  Fritz Reese <fritzoreese@gmail.com>\n\n    PR fortran/78240\n\n    gcc/fortran/ChangeLog:\n\n\tPR fortran/78240\n\t* decl.c (match_clist_expr): Replace gcc_assert with proper\n\thandling of bad result from spec_size().\n\t* resolve.c (check_data_variable): Avoid NULL dereference when passing\n\tlocus to gfc_error.\n\n    gcc/testsuite/ChangeLog:\n\n\tPR fortran/78240\n\t* gfortran.dg/dec_structure_23.f90: New.\n\t* gfortran.dg/pr78240.f90: New.\n\nFrom-SVN: r254718", "tree": {"sha": "53863fbd54133dd5150bccbeab8db5263c8a0a0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53863fbd54133dd5150bccbeab8db5263c8a0a0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a/comments", "author": {"login": "fritzr", "id": 2230564, "node_id": "MDQ6VXNlcjIyMzA1NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2230564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzr", "html_url": "https://github.com/fritzr", "followers_url": "https://api.github.com/users/fritzr/followers", "following_url": "https://api.github.com/users/fritzr/following{/other_user}", "gists_url": "https://api.github.com/users/fritzr/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzr/subscriptions", "organizations_url": "https://api.github.com/users/fritzr/orgs", "repos_url": "https://api.github.com/users/fritzr/repos", "events_url": "https://api.github.com/users/fritzr/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "728649ebf00526e69d14c334affbf4b162c0f154", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/728649ebf00526e69d14c334affbf4b162c0f154", "html_url": "https://github.com/Rust-GCC/gccrs/commit/728649ebf00526e69d14c334affbf4b162c0f154"}], "stats": {"total": 84, "additions": 70, "deletions": 14}, "files": [{"sha": "54877ff50a949ea787fc025f5961091938f9ef90", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a", "patch": "@@ -1,3 +1,11 @@\n+2017-11-13  Fritz Reese <fritzoreese@gmail.com>\n+\n+\tPR fortran/78240\n+\t* decl.c (match_clist_expr): Replace gcc_assert with proper\n+\thandling of bad result from spec_size().\n+\t* resolve.c (check_data_variable): Avoid NULL dereference when passing\n+\tlocus to gfc_error.\n+\n 2017-11-11  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/82932"}, {"sha": "e57cfded5407e0c1c232da094573c464d33a4f40", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 24, "deletions": 13, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a", "patch": "@@ -632,14 +632,13 @@ match_clist_expr (gfc_expr **result, gfc_typespec *ts, gfc_array_spec *as)\n   gfc_expr *expr = NULL;\n   match m;\n   locus where;\n-  mpz_t repeat, size;\n+  mpz_t repeat, cons_size, as_size;\n   bool scalar;\n   int cmp;\n \n   gcc_assert (ts);\n \n   mpz_init_set_ui (repeat, 0);\n-  mpz_init (size);\n   scalar = !as || !as->rank;\n \n   /* We have already matched '/' - now look for a constant list, as with\n@@ -733,16 +732,30 @@ match_clist_expr (gfc_expr **result, gfc_typespec *ts, gfc_array_spec *as)\n       expr->rank = as->rank;\n       expr->shape = gfc_get_shape (expr->rank);\n \n-      /* Validate sizes. */\n-      gcc_assert (gfc_array_size (expr, &size));\n-      gcc_assert (spec_size (as, &repeat));\n-      cmp = mpz_cmp (size, repeat);\n-      if (cmp < 0)\n-        gfc_error (\"Not enough elements in array initializer at %C\");\n-      else if (cmp > 0)\n-        gfc_error (\"Too many elements in array initializer at %C\");\n+      /* Validate sizes.  We built expr ourselves, so cons_size will be\n+\t constant (we fail above for non-constant expressions).\n+\t We still need to verify that the array-spec has constant size.  */\n+      cmp = 0;\n+      gcc_assert (gfc_array_size (expr, &cons_size));\n+      if (!spec_size (as, &as_size))\n+\t{\n+\t  gfc_error (\"Expected constant array-spec in initializer list at %L\",\n+\t\t     as->type == AS_EXPLICIT ? &as->upper[0]->where : &where);\n+\t  cmp = -1;\n+\t}\n+      else\n+\t{\n+\t  /* Make sure the specs are of the same size.  */\n+\t  cmp = mpz_cmp (cons_size, as_size);\n+\t  if (cmp < 0)\n+\t    gfc_error (\"Not enough elements in array initializer at %C\");\n+\t  else if (cmp > 0)\n+\t    gfc_error (\"Too many elements in array initializer at %C\");\n+\t  mpz_clear (as_size);\n+\t}\n+      mpz_clear (cons_size);\n       if (cmp)\n-        goto cleanup;\n+\tgoto cleanup;\n     }\n \n   /* Make sure scalar types match. */\n@@ -754,7 +767,6 @@ match_clist_expr (gfc_expr **result, gfc_typespec *ts, gfc_array_spec *as)\n     expr->ts.u.cl->length_from_typespec = 1;\n \n   *result = expr;\n-  mpz_clear (size);\n   mpz_clear (repeat);\n   return MATCH_YES;\n \n@@ -766,7 +778,6 @@ match_clist_expr (gfc_expr **result, gfc_typespec *ts, gfc_array_spec *as)\n     expr->value.constructor = NULL;\n   gfc_free_expr (expr);\n   gfc_constructor_free (array_head);\n-  mpz_clear (size);\n   mpz_clear (repeat);\n   return MATCH_ERROR;\n }"}, {"sha": "bdb4015b34decfacf7ffc1127408942242c9671e", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a", "patch": "@@ -15286,7 +15286,7 @@ check_data_variable (gfc_data_variable *var, locus *where)\n       if (!gfc_array_size (e, &size))\n \t{\n \t  gfc_error (\"Nonconstant array section at %L in DATA statement\",\n-\t\t     &e->where);\n+\t\t     where);\n \t  mpz_clear (offset);\n \t  return false;\n \t}"}, {"sha": "3c4c37d517bf464c4d7890685030a32915b5e71a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a", "patch": "@@ -1,3 +1,9 @@\n+2017-11-13  Fritz Reese <fritzoreese@gmail.com>\n+\n+\tPR fortran/78240\n+\t* gfortran.dg/dec_structure_23.f90: New.\n+\t* gfortran.dg/pr78240.f90: New.\n+\n 2017-11-13 Carl Love  <cel@us.ibm.com>\n \n \t* gcc.target/powerpc/builtin-vec-sums-be-int.c: New test file."}, {"sha": "3c68489c4bdb5b7272720c2910a20882d7033f3c", "filename": "gcc/testsuite/gfortran.dg/dec_structure_23.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_23.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_23.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_23.f90?ref=9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do compile }\n+! { dg-options \"-fdec-structure\" }\n+!\n+! PR fortran/78240\n+!\n+! Test a regression where an ICE occurred attempting to create array variables\n+! with non-constant array-specs in legacy clist initializers.\n+!\n+\n+program p\n+  implicit none\n+  integer :: nn\n+  real :: rr\n+  structure /s/\n+    integer x(n)    /1/   ! { dg-error \"xpected constant\" }\n+    integer xx(nn)  /1/   ! { dg-error \"xpected constant\" }\n+    integer xxx(rr) /1.0/ ! { dg-error \"xpected constant\" }\n+  end structure\n+end"}, {"sha": "76542bfbab2669ac20a8c7fda3a198ce654125c1", "filename": "gcc/testsuite/gfortran.dg/pr78240.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78240.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78240.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78240.f90?ref=9b24c104aeb9dcaa06c0fe1324b8d9ef1fc2d92a", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+!\n+! PR fortran/78240\n+!\n+! Test a regression where an ICE occurred by passing an invalid reference\n+! to the error handling routine for non-constant array-specs in DATA list\n+! initializers.\n+!\n+\n+program p\n+  integer x(n)    /1/   ! { dg-error \"Nonconstant array\" }\n+end"}]}