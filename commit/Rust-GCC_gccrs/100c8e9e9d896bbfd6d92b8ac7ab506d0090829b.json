{"sha": "100c8e9e9d896bbfd6d92b8ac7ab506d0090829b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAwYzhlOWU5ZDg5NmJiZmQ2ZDkyYjhhYzdhYjUwNmQwMDkwODI5Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-05-04T19:52:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-05-04T19:52:33Z"}, "message": "re PR middle-end/65984 (ICE: definition in block 4 does not dominate use in block 2 with -fnon-call-exceptions -fsanitize=enum)\n\n\tPR tree-optimization/65984\n\t* ubsan.c: Include tree-cfg.h.\n\t(instrument_bool_enum_load): Use stmt_ends_bb_p instead of\n\tstmt_could_throw_p test, rename can_throw variable to ends_bb.\n\n\t* c-c++-common/ubsan/pr65984.c: New test.\n\nFrom-SVN: r222775", "tree": {"sha": "84db2409acab690605ecd708b51fa26e9e7a8c22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84db2409acab690605ecd708b51fa26e9e7a8c22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/100c8e9e9d896bbfd6d92b8ac7ab506d0090829b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/100c8e9e9d896bbfd6d92b8ac7ab506d0090829b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/100c8e9e9d896bbfd6d92b8ac7ab506d0090829b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/100c8e9e9d896bbfd6d92b8ac7ab506d0090829b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f4eb706df3bf10b82f571b0910df14317d1ff27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f4eb706df3bf10b82f571b0910df14317d1ff27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f4eb706df3bf10b82f571b0910df14317d1ff27"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "4837a9178af348191cd1c5799ac3fcaf5328aa49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100c8e9e9d896bbfd6d92b8ac7ab506d0090829b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100c8e9e9d896bbfd6d92b8ac7ab506d0090829b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=100c8e9e9d896bbfd6d92b8ac7ab506d0090829b", "patch": "@@ -1,3 +1,10 @@\n+2015-05-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/65984\n+\t* ubsan.c: Include tree-cfg.h.\n+\t(instrument_bool_enum_load): Use stmt_ends_bb_p instead of\n+\tstmt_could_throw_p test, rename can_throw variable to ends_bb.\n+\n 2015-05-04  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c: Change GET_CODE (...) == CONST_DOUBLE check"}, {"sha": "9525115e9d86f9a3cd2c82afaecee8c001a5c701", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100c8e9e9d896bbfd6d92b8ac7ab506d0090829b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100c8e9e9d896bbfd6d92b8ac7ab506d0090829b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=100c8e9e9d896bbfd6d92b8ac7ab506d0090829b", "patch": "@@ -1,3 +1,8 @@\n+2015-05-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/65984\n+\t* c-c++-common/ubsan/pr65984.c: New test.\n+\n 2015-05-04  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/tree-ssa/shorten-1.c: New test."}, {"sha": "94ba0110b0b2e6e07ab2342c30fa75e2ac56be52", "filename": "gcc/testsuite/c-c++-common/ubsan/pr65984.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100c8e9e9d896bbfd6d92b8ac7ab506d0090829b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr65984.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100c8e9e9d896bbfd6d92b8ac7ab506d0090829b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr65984.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr65984.c?ref=100c8e9e9d896bbfd6d92b8ac7ab506d0090829b", "patch": "@@ -0,0 +1,23 @@\n+/* PR tree-optimization/65984 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fnon-call-exceptions -fsanitize=bool,enum\" } */\n+\n+#ifndef __cplusplus\n+#define bool _Bool\n+#endif\n+\n+enum E { E0, E1, E2 };\n+enum E e[2];\n+bool *b;\n+\n+int\n+foo (int i)\n+{\n+  return e[i];\n+}\n+\n+int\n+bar (int i)\n+{\n+  return b[i];\n+}"}, {"sha": "96536c50881a5429b15ed48ca103038104b44dba", "filename": "gcc/ubsan.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100c8e9e9d896bbfd6d92b8ac7ab506d0090829b/gcc%2Fubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100c8e9e9d896bbfd6d92b8ac7ab506d0090829b/gcc%2Fubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fubsan.c?ref=100c8e9e9d896bbfd6d92b8ac7ab506d0090829b", "patch": "@@ -87,6 +87,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"builtins.h\"\n #include \"tree-object-size.h\"\n #include \"tree-eh.h\"\n+#include \"tree-cfg.h\"\n \n /* Map from a tree to a VAR_DECL tree.  */\n \n@@ -1420,7 +1421,7 @@ instrument_bool_enum_load (gimple_stmt_iterator *gsi)\n       || TREE_CODE (gimple_assign_lhs (stmt)) != SSA_NAME)\n     return;\n \n-  bool can_throw = stmt_could_throw_p (stmt);\n+  bool ends_bb = stmt_ends_bb_p (stmt);\n   location_t loc = gimple_location (stmt);\n   tree lhs = gimple_assign_lhs (stmt);\n   tree ptype = build_pointer_type (TREE_TYPE (rhs));\n@@ -1432,7 +1433,7 @@ instrument_bool_enum_load (gimple_stmt_iterator *gsi)\n   tree mem = build2 (MEM_REF, utype, gimple_assign_lhs (g),\n \t\t     build_int_cst (atype, 0));\n   tree urhs = make_ssa_name (utype);\n-  if (can_throw)\n+  if (ends_bb)\n     {\n       gimple_assign_set_lhs (stmt, urhs);\n       g = gimple_build_assign (lhs, NOP_EXPR, urhs);\n@@ -1469,7 +1470,7 @@ instrument_bool_enum_load (gimple_stmt_iterator *gsi)\n   gimple_set_location (g, loc);\n   gsi_insert_after (gsi, g, GSI_NEW_STMT);\n \n-  if (!can_throw)\n+  if (!ends_bb)\n     {\n       gimple_assign_set_rhs_with_ops (&gsi2, NOP_EXPR, urhs);\n       update_stmt (stmt);"}]}