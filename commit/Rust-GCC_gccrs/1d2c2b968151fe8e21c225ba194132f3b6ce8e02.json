{"sha": "1d2c2b968151fe8e21c225ba194132f3b6ce8e02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQyYzJiOTY4MTUxZmU4ZTIxYzIyNWJhMTk0MTMyZjNiNmNlOGUwMg==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2006-10-25T13:31:21Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2006-10-25T13:31:21Z"}, "message": "dwarf2out.c (gen_compile_unit_die): Use IS_ABSOLUTE_PATH.\n\n        * dwarf2out.c (gen_compile_unit_die): Use IS_ABSOLUTE_PATH.\n        (file_table_relative_p): Likewise.\n        (dwarf2out_finish): Likewise.\n        (file_name_acquire): Use DIR_SEPARATOR and DIR_SEPARATOR_2.\n\nFrom-SVN: r118033", "tree": {"sha": "2d8c2eb8318621d7cf876ffa591de23643793bd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d8c2eb8318621d7cf876ffa591de23643793bd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d2c2b968151fe8e21c225ba194132f3b6ce8e02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d2c2b968151fe8e21c225ba194132f3b6ce8e02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d2c2b968151fe8e21c225ba194132f3b6ce8e02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d2c2b968151fe8e21c225ba194132f3b6ce8e02/comments", "author": null, "committer": null, "parents": [{"sha": "80ba94327e268caddf88c9ea3bd1dd6061c55569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80ba94327e268caddf88c9ea3bd1dd6061c55569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80ba94327e268caddf88c9ea3bd1dd6061c55569"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "d6849155d18eda4a638c294ce0df43d79fb506b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d2c2b968151fe8e21c225ba194132f3b6ce8e02/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d2c2b968151fe8e21c225ba194132f3b6ce8e02/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d2c2b968151fe8e21c225ba194132f3b6ce8e02", "patch": "@@ -1,3 +1,10 @@\n+2006-10-24  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+        * dwarf2out.c (gen_compile_unit_die): Use IS_ABSOLUTE_PATH.\n+        (file_table_relative_p): Likewise.\n+        (dwarf2out_finish): Likewise.\n+        (file_name_acquire): Use DIR_SEPARATOR and DIR_SEPARATOR_2.\n+\n 2006-10-25  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-ssa-structalias.c (intra_create_variable_infos):"}, {"sha": "6c714f9f384d5b0b1ec7f328c17ddf31011c1ca1", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d2c2b968151fe8e21c225ba194132f3b6ce8e02/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d2c2b968151fe8e21c225ba194132f3b6ce8e02/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=1d2c2b968151fe8e21c225ba194132f3b6ce8e02", "patch": "@@ -7657,7 +7657,7 @@ file_name_acquire (void ** slot, void *data)\n \n   /* Skip all leading \"./\".  */\n   f = d->filename;\n-  while (f[0] == '.' && f[1] == '/')\n+  while (f[0] == '.' && IS_DIR_SEPARATOR (f[1]))\n     f += 2;\n   \n   /* Create a new array entry.  */\n@@ -7666,7 +7666,19 @@ file_name_acquire (void ** slot, void *data)\n   fi->file_idx = d;\n   \n   /* Search for the file name part.  */\n-  f = strrchr (f, '/');\n+  f = strrchr (f, DIR_SEPARATOR);\n+#if defined (DIR_SEPARATOR_2)\n+  {\n+    char *g = strrchr (files[i].path, DIR_SEPARATOR_2);\n+\n+    if (g != NULL)\n+      {\n+\tif (f == NULL || f < g)\n+\t  f = g;\n+      }\n+  }\n+#endif\n+\n   fi->fname = f == NULL ? fi->path : f + 1;\n   return 1;\n }\n@@ -12288,7 +12300,7 @@ gen_compile_unit_die (const char *filename)\n     {\n       add_name_attribute (die, filename);\n       /* Don't add cwd for <built-in>.  */\n-      if (filename[0] != DIR_SEPARATOR && filename[0] != '<')\n+      if (!IS_ABSOLUTE_PATH (filename) && filename[0] != '<')\n \tadd_comp_dir_attribute (die);\n     }\n \n@@ -14188,7 +14200,7 @@ file_table_relative_p (void ** slot, void *param)\n {\n   bool *p = param;\n   struct dwarf_file_data *d = *slot;\n-  if (d->emitted_number && d->filename[0] != DIR_SEPARATOR)\n+  if (d->emitted_number && !IS_ABSOLUTE_PATH (d->filename))\n     {\n       *p = true;\n       return 0;\n@@ -14208,7 +14220,7 @@ dwarf2out_finish (const char *filename)\n   /* Add the name for the main input file now.  We delayed this from\n      dwarf2out_init to avoid complications with PCH.  */\n   add_name_attribute (comp_unit_die, filename);\n-  if (filename[0] != DIR_SEPARATOR)\n+  if (!IS_ABSOLUTE_PATH (filename))\n     add_comp_dir_attribute (comp_unit_die);\n   else if (get_AT (comp_unit_die, DW_AT_comp_dir) == NULL)\n     {"}]}