{"sha": "4152a9e5936f1964a5874dfb71e6364fc50a6fd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE1MmE5ZTU5MzZmMTk2NGE1ODc0ZGZiNzFlNjM2NGZjNTBhNmZkMw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-27T21:08:00Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-27T21:08:00Z"}, "message": "Initial revision\n\nFrom-SVN: r19441", "tree": {"sha": "27ae4f7ab4a16cdadab19b67179ff721cf6c1b8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27ae4f7ab4a16cdadab19b67179ff721cf6c1b8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4152a9e5936f1964a5874dfb71e6364fc50a6fd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4152a9e5936f1964a5874dfb71e6364fc50a6fd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4152a9e5936f1964a5874dfb71e6364fc50a6fd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4152a9e5936f1964a5874dfb71e6364fc50a6fd3/comments", "author": null, "committer": null, "parents": [{"sha": "122bfcd59687c76f06afab03448cbfe0ce5ad375", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/122bfcd59687c76f06afab03448cbfe0ce5ad375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/122bfcd59687c76f06afab03448cbfe0ce5ad375"}], "stats": {"total": 188, "additions": 188, "deletions": 0}, "files": [{"sha": "8066dc29962f378d782cc6422cab33bd91a9cbca", "filename": "gcc/intl/explodename.c", "status": "added", "additions": 188, "deletions": 0, "changes": 188, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4152a9e5936f1964a5874dfb71e6364fc50a6fd3/gcc%2Fintl%2Fexplodename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4152a9e5936f1964a5874dfb71e6364fc50a6fd3/gcc%2Fintl%2Fexplodename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl%2Fexplodename.c?ref=4152a9e5936f1964a5874dfb71e6364fc50a6fd3", "patch": "@@ -0,0 +1,188 @@\n+/* Copyright (C) 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n+   Contributed by Ulrich Drepper <drepper@gnu.ai.mit.edu>, 1995.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software Foundation,\n+   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifdef HAVE_CONFIG_H\n+# include <config.h>\n+#endif\n+\n+#if defined STDC_HEADERS || defined _LIBC\n+# include <stdlib.h>\n+#endif\n+\n+#if defined HAVE_STRING_H || defined _LIBC\n+# include <string.h>\n+#else\n+# include <strings.h>\n+#endif\n+#include <sys/types.h>\n+\n+#include \"loadinfo.h\"\n+\n+/* On some strange systems still no definition of NULL is found.  Sigh!  */\n+#ifndef NULL\n+# if defined __STDC__ && __STDC__\n+#  define NULL ((void *) 0)\n+# else\n+#  define NULL 0\n+# endif\n+#endif\n+\n+/* @@ end of prolog @@ */\n+\n+int\n+_nl_explode_name (name, language, modifier, territory, codeset,\n+\t\t  normalized_codeset, special, sponsor, revision)\n+     char *name;\n+     const char **language;\n+     const char **modifier;\n+     const char **territory;\n+     const char **codeset;\n+     const char **normalized_codeset;\n+     const char **special;\n+     const char **sponsor;\n+     const char **revision;\n+{\n+  enum { undecided, xpg, cen } syntax;\n+  char *cp;\n+  int mask;\n+\n+  *modifier = NULL;\n+  *territory = NULL;\n+  *codeset = NULL;\n+  *normalized_codeset = NULL;\n+  *special = NULL;\n+  *sponsor = NULL;\n+  *revision = NULL;\n+\n+  /* Now we determine the single parts of the locale name.  First\n+     look for the language.  Termination symbols are `_' and `@' if\n+     we use XPG4 style, and `_', `+', and `,' if we use CEN syntax.  */\n+  mask = 0;\n+  syntax = undecided;\n+  *language = cp = name;\n+  while (cp[0] != '\\0' && cp[0] != '_' && cp[0] != '@'\n+\t && cp[0] != '+' && cp[0] != ',')\n+    ++cp;\n+\n+  if (*language == cp)\n+    /* This does not make sense: language has to be specified.  Use\n+       this entry as it is without exploding.  Perhaps it is an alias.  */\n+    cp = strchr (*language, '\\0');\n+  else if (cp[0] == '_')\n+    {\n+      /* Next is the territory.  */\n+      cp[0] = '\\0';\n+      *territory = ++cp;\n+\n+      while (cp[0] != '\\0' && cp[0] != '.' && cp[0] != '@'\n+\t     && cp[0] != '+' && cp[0] != ',' && cp[0] != '_')\n+\t++cp;\n+\n+      mask |= TERRITORY;\n+\n+      if (cp[0] == '.')\n+\t{\n+\t  /* Next is the codeset.  */\n+\t  syntax = xpg;\n+\t  cp[0] = '\\0';\n+\t  *codeset = ++cp;\n+\n+\t  while (cp[0] != '\\0' && cp[0] != '@')\n+\t    ++cp;\n+\n+\t  mask |= XPG_CODESET;\n+\n+\t  if (*codeset != cp && (*codeset)[0] != '\\0')\n+\t    {\n+\t      *normalized_codeset = _nl_normalize_codeset (*codeset,\n+\t\t\t\t\t\t\t   cp - *codeset);\n+\t      if (strcmp (*codeset, *normalized_codeset) == 0)\n+\t\tfree ((char *) *normalized_codeset);\n+\t      else\n+\t\tmask |= XPG_NORM_CODESET;\n+\t    }\n+\t}\n+    }\n+\n+  if (cp[0] == '@' || (syntax != xpg && cp[0] == '+'))\n+    {\n+      /* Next is the modifier.  */\n+      syntax = cp[0] == '@' ? xpg : cen;\n+      cp[0] = '\\0';\n+      *modifier = ++cp;\n+\n+      while (syntax == cen && cp[0] != '\\0' && cp[0] != '+'\n+\t     && cp[0] != ',' && cp[0] != '_')\n+\t++cp;\n+\n+      mask |= XPG_MODIFIER | CEN_AUDIENCE;\n+    }\n+\n+  if (syntax != xpg && (cp[0] == '+' || cp[0] == ',' || cp[0] == '_'))\n+    {\n+      syntax = cen;\n+\n+      if (cp[0] == '+')\n+\t{\n+ \t  /* Next is special application (CEN syntax).  */\n+\t  cp[0] = '\\0';\n+\t  *special = ++cp;\n+\n+\t  while (cp[0] != '\\0' && cp[0] != ',' && cp[0] != '_')\n+\t    ++cp;\n+\n+\t  mask |= CEN_SPECIAL;\n+\t}\n+\n+      if (cp[0] == ',')\n+\t{\n+ \t  /* Next is sponsor (CEN syntax).  */\n+\t  cp[0] = '\\0';\n+\t  *sponsor = ++cp;\n+\n+\t  while (cp[0] != '\\0' && cp[0] != '_')\n+\t    ++cp;\n+\n+\t  mask |= CEN_SPONSOR;\n+\t}\n+\n+      if (cp[0] == '_')\n+\t{\n+ \t  /* Next is revision (CEN syntax).  */\n+\t  cp[0] = '\\0';\n+\t  *revision = ++cp;\n+\n+\t  mask |= CEN_REVISION;\n+\t}\n+    }\n+\n+  /* For CEN syntax values it might be important to have the\n+     separator character in the file name, not for XPG syntax.  */\n+  if (syntax == xpg)\n+    {\n+      if (*territory != NULL && (*territory)[0] == '\\0')\n+\tmask &= ~TERRITORY;\n+\n+      if (*codeset != NULL && (*codeset)[0] == '\\0')\n+\tmask &= ~XPG_CODESET;\n+\n+      if (*modifier != NULL && (*modifier)[0] == '\\0')\n+\tmask &= ~XPG_MODIFIER;\n+    }\n+\n+  return mask;\n+}"}]}