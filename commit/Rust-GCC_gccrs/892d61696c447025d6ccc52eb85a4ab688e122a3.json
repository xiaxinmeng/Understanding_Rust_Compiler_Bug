{"sha": "892d61696c447025d6ccc52eb85a4ab688e122a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkyZDYxNjk2YzQ0NzAyNWQ2Y2NjNTJlYjg1YTRhYjY4OGUxMjJhMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-05-30T07:49:00Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-05-30T07:49:00Z"}, "message": "re PR tree-optimization/80876 (ICE in verify_loop_structure, at cfgloop.c:1644 (error: loop 1's latch does not have an edge to its header))\n\n2017-05-30  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/80876\n\t* cfgexpand.c (expand_gimple_cond): Fixup preserving loops again.\n\n\t* gcc.dg/torture/pr80876.c: New testcase.\n\nFrom-SVN: r248633", "tree": {"sha": "08f4e9146de208eae527980905c222ef699cd61b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08f4e9146de208eae527980905c222ef699cd61b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/892d61696c447025d6ccc52eb85a4ab688e122a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/892d61696c447025d6ccc52eb85a4ab688e122a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/892d61696c447025d6ccc52eb85a4ab688e122a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/892d61696c447025d6ccc52eb85a4ab688e122a3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "63523736d018998672b707e669d0536d10cb735e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63523736d018998672b707e669d0536d10cb735e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63523736d018998672b707e669d0536d10cb735e"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "cf7edfd02528f7834e3dec7a5e36badaf5d16ecc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/892d61696c447025d6ccc52eb85a4ab688e122a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/892d61696c447025d6ccc52eb85a4ab688e122a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=892d61696c447025d6ccc52eb85a4ab688e122a3", "patch": "@@ -1,3 +1,8 @@\n+2017-05-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/80876\n+\t* cfgexpand.c (expand_gimple_cond): Fixup preserving loops again.\n+\n 2017-05-30  Martin Liska  <mliska@suse.cz>\n \n \t* dumpfile.c: Use newly added macro DUMP_FILE_INFO."}, {"sha": "c5b4d70f4a32db3926d565ff378761e306ddd877", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/892d61696c447025d6ccc52eb85a4ab688e122a3/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/892d61696c447025d6ccc52eb85a4ab688e122a3/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=892d61696c447025d6ccc52eb85a4ab688e122a3", "patch": "@@ -2504,9 +2504,9 @@ expand_gimple_cond (basic_block bb, gcond *stmt)\n   new_bb->count = false_edge->count;\n   new_bb->frequency = EDGE_FREQUENCY (false_edge);\n   add_bb_to_loop (new_bb, dest->loop_father);\n-  if (bb->loop_father->latch == bb\n-      && bb->loop_father->header == dest)\n-    bb->loop_father->latch = new_bb;\n+  if (dest->loop_father->latch == bb\n+      && dest->loop_father->header == dest)\n+    dest->loop_father->latch = new_bb;\n   new_edge = make_edge (new_bb, dest, 0);\n   new_edge->probability = REG_BR_PROB_BASE;\n   new_edge->count = new_bb->count;"}, {"sha": "682f95fe0746b781551078d1fc77a996850a094d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/892d61696c447025d6ccc52eb85a4ab688e122a3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/892d61696c447025d6ccc52eb85a4ab688e122a3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=892d61696c447025d6ccc52eb85a4ab688e122a3", "patch": "@@ -1,3 +1,8 @@\n+2017-05-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/80876\n+\t* gcc.dg/torture/pr80876.c: New testcase.\n+\n 2017-05-29  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/80891 (#5)"}, {"sha": "35f9f509a64a50da2837d5ee5be5906a82cc9e0b", "filename": "gcc/testsuite/gcc.dg/torture/pr80876.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/892d61696c447025d6ccc52eb85a4ab688e122a3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr80876.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/892d61696c447025d6ccc52eb85a4ab688e122a3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr80876.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr80876.c?ref=892d61696c447025d6ccc52eb85a4ab688e122a3", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-do compile } */\n+\n+int sy;\n+\n+void\n+fo (char o5)\n+{\n+  char yh = 0;\n+\n+  if (o5 == 0)\n+    return;\n+\n+  while (o5 != 0)\n+    if (0)\n+      {\n+\twhile (yh != 0)\n+\t  {\n+\t    o5 = 0;\n+\t    while (o5 < 2)\n+\t      {\n+\t\tsy &= yh;\n+\t\tif (sy != 0)\n+\t\t  {\n+km:\n+\t\t    sy = yh;\n+\t\t  }\n+\t      }\n+\t    ++yh;\n+\t  }\n+      }\n+    else\n+      {\n+\to5 = sy;\n+\tgoto km;\n+      }\n+}\n+\n+void\n+on (void)\n+{\n+  fo (sy);\n+}"}]}