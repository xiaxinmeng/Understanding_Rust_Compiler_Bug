{"sha": "12e4afe4e10558fce82b33bd41a0091bc412a0dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJlNGFmZTRlMTA1NThmY2U4MmIzM2JkNDFhMDA5MWJjNDEyYTBkZA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-08-01T11:36:25Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-08-01T11:36:25Z"}, "message": "invoke.texi: In the MIPS options section...\n\n\t* doc/invoke.texi: In the MIPS options section, remove the passage\n\tsaying that -mexplicit-relocs is usually disabled for -mabicalls\n\t-fno-unit-at-a-time.\n\t* config/mips/mips.c (override_options): Remove the code that enforced\n\tthis rule.\n\nFrom-SVN: r85406", "tree": {"sha": "ea3a6cd55f7407435f8c369786ee4df14d72b200", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea3a6cd55f7407435f8c369786ee4df14d72b200"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12e4afe4e10558fce82b33bd41a0091bc412a0dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e4afe4e10558fce82b33bd41a0091bc412a0dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12e4afe4e10558fce82b33bd41a0091bc412a0dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e4afe4e10558fce82b33bd41a0091bc412a0dd/comments", "author": null, "committer": null, "parents": [{"sha": "b8b044f117805342a401401483c7d62f8a62cc59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8b044f117805342a401401483c7d62f8a62cc59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8b044f117805342a401401483c7d62f8a62cc59"}], "stats": {"total": 40, "additions": 10, "deletions": 30}, "files": [{"sha": "118e96a90e73a80728b42b903185674de3f7abee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e4afe4e10558fce82b33bd41a0091bc412a0dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e4afe4e10558fce82b33bd41a0091bc412a0dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12e4afe4e10558fce82b33bd41a0091bc412a0dd", "patch": "@@ -1,3 +1,11 @@\n+2004-08-01  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* doc/invoke.texi: In the MIPS options section, remove the passage\n+\tsaying that -mexplicit-relocs is usually disabled for -mabicalls\n+\t-fno-unit-at-a-time.\n+\t* config/mips/mips.c (override_options): Remove the code that enforced\n+\tthis rule.\n+\n 2004-08-01  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.md (cprestore): Provide two alternatives, one for"}, {"sha": "b77fcbd88e2d97fb40cacb549b514841019abd2f", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e4afe4e10558fce82b33bd41a0091bc412a0dd/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e4afe4e10558fce82b33bd41a0091bc412a0dd/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=12e4afe4e10558fce82b33bd41a0091bc412a0dd", "patch": "@@ -4476,28 +4476,6 @@ override_options (void)\n       && (target_flags_explicit & MASK_EXPLICIT_RELOCS) == 0)\n     target_flags &= ~MASK_EXPLICIT_RELOCS;\n \n-  /* Make -mabicalls -fno-unit-at-a-time imply -mno-explicit-relocs\n-     unless the user says otherwise.\n-\n-     There are two problems here:\n-\n-       (1) The value of an R_MIPS_GOT16 relocation depends on whether\n-\t   the symbol is local or global.  We therefore need to know\n-\t   a symbol's binding before referring to it using %got().\n-\n-       (2) R_MIPS_CALL16 can only be applied to global symbols.\n-\n-     When not using -funit-at-a-time, a symbol's binding may change\n-     after it has been used.  For example, the C++ front-end will\n-     initially assume that the typeinfo for an incomplete type will be\n-     comdat, on the basis that the type could be completed later in the\n-     file.  But if the type never is completed, the typeinfo will become\n-     local instead.  */\n-  if (!flag_unit_at_a_time\n-      && TARGET_ABICALLS\n-      && (target_flags_explicit & MASK_EXPLICIT_RELOCS) == 0)\n-    target_flags &= ~MASK_EXPLICIT_RELOCS;\n-\n   /* -mvr4130-align is a \"speed over size\" optimization: it usually produces\n      faster code, but at the expense of more nops.  Enable it at -O3 and\n      above.  */"}, {"sha": "902df3e61f07f13dbcbb66eec5306601681c604b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e4afe4e10558fce82b33bd41a0091bc412a0dd/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e4afe4e10558fce82b33bd41a0091bc412a0dd/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=12e4afe4e10558fce82b33bd41a0091bc412a0dd", "patch": "@@ -9193,14 +9193,8 @@ Use (do not use) assembler relocation operators when dealing with symbolic\n addresses.  The alternative, selected by @option{-mno-explicit-relocs},\n is to use assembler macros instead.\n \n-@option{-mexplicit-relocs} is usually the default if GCC was configured\n-to use an assembler that supports relocation operators.  However, the\n-combination of @option{-mabicalls} and @option{-fno-unit-at-a-time}\n-implies @option{-mno-explicit-relocs} unless explicitly overridden.\n-This is because, when generating abicalls, the choice of relocation\n-depends on whether a symbol is local or global.  In some rare cases,\n-GCC will not be able to decide this until the whole compilation unit\n-has been read.\n+@option{-mexplicit-relocs} is the default if GCC was configured\n+to use an assembler that supports relocation operators.\n \n @item -mcheck-zero-division\n @itemx -mno-check-zero-division"}]}