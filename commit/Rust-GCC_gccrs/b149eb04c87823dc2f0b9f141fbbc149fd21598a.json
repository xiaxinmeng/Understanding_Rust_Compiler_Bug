{"sha": "b149eb04c87823dc2f0b9f141fbbc149fd21598a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE0OWViMDRjODc4MjNkYzJmMGI5ZjE0MWZiYmMxNDlmZDIxNTk4YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-03-15T03:08:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-03-15T03:08:24Z"}, "message": "PR c++/81236 - auto variable and auto function\n\n\t* pt.c (tsubst_baselink): Update the type of the BASELINK after\n\tmark_used.\n\nFrom-SVN: r258547", "tree": {"sha": "9a613c3cf8b5ba5489411f04e27d1c803a6df8a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a613c3cf8b5ba5489411f04e27d1c803a6df8a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b149eb04c87823dc2f0b9f141fbbc149fd21598a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b149eb04c87823dc2f0b9f141fbbc149fd21598a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b149eb04c87823dc2f0b9f141fbbc149fd21598a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b149eb04c87823dc2f0b9f141fbbc149fd21598a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e786e485a7e6dda1c6d0ecf8981edade93d73110", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e786e485a7e6dda1c6d0ecf8981edade93d73110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e786e485a7e6dda1c6d0ecf8981edade93d73110"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "fc124b440bba7d90bced78663efc22bd0f6113fb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b149eb04c87823dc2f0b9f141fbbc149fd21598a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b149eb04c87823dc2f0b9f141fbbc149fd21598a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b149eb04c87823dc2f0b9f141fbbc149fd21598a", "patch": "@@ -1,3 +1,9 @@\n+2018-03-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/81236 - auto variable and auto function\n+\t* pt.c (tsubst_baselink): Update the type of the BASELINK after\n+\tmark_used.\n+\n 2018-03-14  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/83916 - ICE with template template parameters."}, {"sha": "2ea5fc79a2c124536ef3f766c690a0384d16484f", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b149eb04c87823dc2f0b9f141fbbc149fd21598a/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b149eb04c87823dc2f0b9f141fbbc149fd21598a/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=b149eb04c87823dc2f0b9f141fbbc149fd21598a", "patch": "@@ -14700,9 +14700,16 @@ tsubst_baselink (tree baselink, tree object_type,\n   /* If lookup found a single function, mark it as used at this point.\n      (If lookup found multiple functions the one selected later by\n      overload resolution will be marked as used at that point.)  */\n-  if (!template_id_p && !really_overloaded_fn (fns)\n-      && !mark_used (OVL_FIRST (fns), complain) && !(complain & tf_error))\n-    return error_mark_node;\n+  if (!template_id_p && !really_overloaded_fn (fns))\n+    {\n+      tree fn = OVL_FIRST (fns);\n+      bool ok = mark_used (fn, complain);\n+      if (!ok && !(complain & tf_error))\n+\treturn error_mark_node;\n+      if (ok && BASELINK_P (baselink))\n+\t/* We might have instantiated an auto function.  */\n+\tTREE_TYPE (baselink) = TREE_TYPE (fn);\n+    }\n \n   if (BASELINK_P (baselink))\n     {"}, {"sha": "bf9448e793eb538e036e113a8e66ac07af8ea5f5", "filename": "gcc/testsuite/g++.dg/cpp1y/auto-fn48.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b149eb04c87823dc2f0b9f141fbbc149fd21598a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b149eb04c87823dc2f0b9f141fbbc149fd21598a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn48.C?ref=b149eb04c87823dc2f0b9f141fbbc149fd21598a", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile { target c++14 } }\n+\n+template <class T> struct A\n+{\n+  static auto fn() { }\n+  static void f()\n+  {\n+    auto x = fn;\n+  }\n+};\n+\n+int main()\n+{\n+  A<int>::f();\n+}"}, {"sha": "d2e490604a7073e8c80304a7dc19acae56aaa188", "filename": "gcc/testsuite/g++.dg/cpp1y/auto-fn49.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b149eb04c87823dc2f0b9f141fbbc149fd21598a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn49.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b149eb04c87823dc2f0b9f141fbbc149fd21598a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn49.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn49.C?ref=b149eb04c87823dc2f0b9f141fbbc149fd21598a", "patch": "@@ -0,0 +1,12 @@\n+// CWG issue 2335\n+// { dg-do compile { target c++14 } }\n+\n+template <class... Ts> struct partition_indices {\n+  static auto compute_right () {}\n+  static constexpr auto right = compute_right;\n+};\n+auto foo () -> partition_indices<>;\n+void f() {\n+  auto x = foo();\n+  auto y = x.right;\n+}"}]}