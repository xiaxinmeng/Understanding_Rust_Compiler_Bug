{"sha": "ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E4NzQ0ZGIzZTU2YmZjZjBjZjNmMGUyYTBiZjc2NDUwYWVmOTQzOA==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-12T20:32:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-12T20:32:05Z"}, "message": "Merge #362\n\n362: [testsuite] Scan for warning diagnostics, too r=philberty a=tschwinge\n\n\n\nCo-authored-by: Thomas Schwinge <thomas@codesourcery.com>", "tree": {"sha": "8ebf7fb3865acd5ada5094feb61b2eab9d415f44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ebf7fb3865acd5ada5094feb61b2eab9d415f44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgdK5FCRBK7hj4Ov3rIwAAdHIIABuvvgO+LuN8ancPSW6KfrQb\nx+C9OhdX+6q2x98WEOxQJ23C7Fl9NklQxHHeuapKT/JAFThAThnJ9HRSCLvRkbx1\nHODpz65l7Rrt6ed0XV3ISVOR/v7K/nn2LGwS77Pe+zEMwcW8VS0MnqbZQFlpuYnT\niso22skQD6dyNfllsZDoNfnWKcLrryeH/PBe7rjxG/lFyItRHJl6EmsaaCv2iA1M\nbdbFCxDJKgPaMddyAOQZZ4gBrL/eJzCBWwKbQT0BGdo7wv61s/zHz/4GQQQ9ftGe\n7OR/X6UyrTGmTqWQEvwgOrsti8/EiaooX6U1BbF839CbDOCrybD4o7enCT5J0KY=\n=Jz4y\n-----END PGP SIGNATURE-----\n", "payload": "tree 8ebf7fb3865acd5ada5094feb61b2eab9d415f44\nparent 5439d353fe51610046d4b572db8c5c6c04c4f47a\nparent 4a2e0fc882ab2cbce0233bb51fb7011028e225e6\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1618259525 +0000\ncommitter GitHub <noreply@github.com> 1618259525 +0000\n\nMerge #362\n\n362: [testsuite] Scan for warning diagnostics, too r=philberty a=tschwinge\n\n\n\nCo-authored-by: Thomas Schwinge <thomas@codesourcery.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5439d353fe51610046d4b572db8c5c6c04c4f47a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5439d353fe51610046d4b572db8c5c6c04c4f47a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5439d353fe51610046d4b572db8c5c6c04c4f47a"}, {"sha": "4a2e0fc882ab2cbce0233bb51fb7011028e225e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a2e0fc882ab2cbce0233bb51fb7011028e225e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a2e0fc882ab2cbce0233bb51fb7011028e225e6"}], "stats": {"total": 165, "additions": 150, "deletions": 15}, "files": [{"sha": "7d2896b454cad4aa1312a1761d0f6fc2af8b6fea", "filename": "gcc/testsuite/lib/rust.exp", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Flib%2Frust.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Flib%2Frust.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Frust.exp?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -178,11 +178,10 @@ proc rust_target_compile { source dest type options } {\n     set options [concat \"$ALWAYS_RUSTFLAGS\" $options]\n     set options [dg-additional-files-options $options $source]\n \n-    ## FIXME: until the compiler is made less verbose, we need to prune its output completely.\n-    # Only keep line containing error so that the test will correctly report the error and the test\n-    # can FAIL or XFAIL\n+    ## FIXME: until the compiler is made less verbose, we need to prune its output almost completely.\n+    # Only keep lines containing certain diagnostics so that we can check these.\n     global additional_prunes\n-    set additional_prunes \"^((?!error).)*$\"\n+    lappend additional_prunes \"^((?!(error: |warning: )).)*$\"\n \n     return [target_compile $source $dest $type $options]\n }"}, {"sha": "4c3ee77c835418b7a4093b65c7d35c56e1040594", "filename": "gcc/testsuite/rust.test/compile/arithmetic_expressions1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farithmetic_expressions1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farithmetic_expressions1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farithmetic_expressions1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,3 +1,5 @@\n+// { dg-prune-output \"warning: unused name\" } as there are many of these expected.\n+\n fn main() {\n     let a: i32 = 1;\n     let b: f32 = 5f32;"}, {"sha": "6f21bf2420cb31397280beee18f3c268b70f1eef", "filename": "gcc/testsuite/rust.test/compile/array_type_infer.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farray_type_infer.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farray_type_infer.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farray_type_infer.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,3 +1,4 @@\n fn main() {\n     let arr: [_; 5] = [1, 2, 3, 4, 5];\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "3155b1c48c03ea66605f2683412f4a1aca540ab0", "filename": "gcc/testsuite/rust.test/compile/array_zero_length.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farray_zero_length.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farray_zero_length.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farray_zero_length.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,3 +1,4 @@\n fn main() {\n     let arr = [\"Hello\"; 0];\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "7250e0fa2af54efdb2cf0ade2efa2d0c175b8622", "filename": "gcc/testsuite/rust.test/compile/arrays1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -3,5 +3,7 @@ fn main() {\n     let xy = [6, 7, 8];\n \n     let a = xs[0];\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let b = xy[2];\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "55491f345249557e36346d5e639b4b048a3cd0dc", "filename": "gcc/testsuite/rust.test/compile/arrays2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays2.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -2,6 +2,7 @@ fn main() {\n     let mut array: [i32; 3] = [0; 3];\n \n     let a = array[0];\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let mut c;\n     c = array[2];\n }"}, {"sha": "1fe5de91bcf1930f41aa0e3a62ce5a2c0d892058", "filename": "gcc/testsuite/rust.test/compile/arrays_index1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays_index1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays_index1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Farrays_index1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -2,6 +2,7 @@ fn main() {\n     let mut array: [i32; 3] = [0; 3];\n \n     let a = array[0];\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let x = 0;\n     let mut c;\n     c = array[x+1];"}, {"sha": "011cc1fc89d59ebe30cc4ad7843bec255c58ce1f", "filename": "gcc/testsuite/rust.test/compile/block_expr1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -20,7 +20,9 @@ fn test5(x: i32) -> i32 {\n \n fn main() {\n     let call3: i32 = { test3(3) + 2 };\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let call5 = {\n+        // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n         let a = test5(5);\n         a + 1\n     };"}, {"sha": "7c3ff6980974b85e9948e0eb80fbe6021dd52223", "filename": "gcc/testsuite/rust.test/compile/block_expr2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr2.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -5,6 +5,7 @@ fn test() -> i32 {\n fn main() {\n     let a = { test() };\n     let b = {\n+        // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n         if a > 10 {\n             a - 1\n         } else {"}, {"sha": "6914b6379d717e4bf524b3deb88162ab2d26e710", "filename": "gcc/testsuite/rust.test/compile/block_expr3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr3.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -2,6 +2,7 @@ fn main() {\n     let x = 111;\n \n     let a = {\n+        // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n         if x == 10 {\n             123\n         } else if x < 10 {"}, {"sha": "da033ef9ef4e087eb09e7274386bab5325796231", "filename": "gcc/testsuite/rust.test/compile/block_expr4.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr4.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -4,4 +4,5 @@ fn foo() -> isize {\n \n fn main() {\n     let a = foo();\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "468aace9881a78b4732ba3d1da0808545a73eb65", "filename": "gcc/testsuite/rust.test/compile/block_expr_parser_bug.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr_parser_bug.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr_parser_bug.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fblock_expr_parser_bug.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,4 +1,5 @@\n fn main() {\n     let a = 123;\n     let b = if a > 10 { a - 1 } else { a + 1 };\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "1915f34eeb63ccb565f7c090e4fb31413bc77016", "filename": "gcc/testsuite/rust.test/compile/cfg_attr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcfg_attr.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcfg_attr.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcfg_attr.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -2,6 +2,7 @@ use std::env; // Add one line so gccrs doesn't believe we're parsing a shebang\n \n #[cfg_attr(feature = \"somefeature\", attribute = \"someattr\")]\n struct Feature;\n+// { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n fn main() {\n }"}, {"sha": "ed71ec890253525dede896ce39a87470d55606ff", "filename": "gcc/testsuite/rust.test/compile/comparison_expr1.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcomparison_expr1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcomparison_expr1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcomparison_expr1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -28,7 +28,11 @@ fn main() {\n     let c: bool = is_positive(3);\n     let d: bool = is_negative(4);\n     let e: bool = is_positive_or_zero(5);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let f: bool = is_negative_or_zero(6);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let g: bool = a || b;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let h: bool = c && d;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "7c92d7aa142e9d6aa454159c0794f2131240b25c", "filename": "gcc/testsuite/rust.test/compile/compile.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcompile.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcompile.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fcompile.exp?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -28,7 +28,7 @@ dg-init\n set saved-dg-do-what-default ${dg-do-what-default}\n \n set dg-do-what-default \"compile\"\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.rs]] \"\" \"-w\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.rs]] \"\" \"\"\n set dg-do-what-default ${saved-dg-do-what-default}\n \n # All done."}, {"sha": "57bcb0b497020159efb623ee835eccf11990e2b5", "filename": "gcc/testsuite/rust.test/compile/constant1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fconstant1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fconstant1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fconstant1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -5,4 +5,5 @@ fn main() {\n     x = x + 1;\n \n     let mut y = x + TEST_CONST;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "1ba646f5c56a7f6f42a33df96fc20c7e3f688dea", "filename": "gcc/testsuite/rust.test/compile/deadcode1.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fdeadcode1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fdeadcode1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fdeadcode1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,5 +1,6 @@\n fn test1() -> i32 {\n     return 2;\n+    // { dg-warning \"unreachable expression\" \"\" { target *-*-* } .+1 }\n     1\n }\n \n@@ -9,10 +10,13 @@ fn test2(x: i32) -> i32 {\n     } else {\n         return 0;\n     }\n+    // { dg-warning \"unreachable statement\" \"\" { target *-*-* } .+1 }\n     return 1;\n }\n \n fn main() {\n     let call1 = test1();\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let call2 = test2(2);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "d715ce96c7921b6df3fe724100914838061fb46b", "filename": "gcc/testsuite/rust.test/compile/deref1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fderef1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fderef1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fderef1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -2,4 +2,5 @@ fn main() {\n     let a = 123;\n     let b = &a;\n     let c = *b;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "fbe8938226726a9250cf7afbbf9cbbc6f6c865ec", "filename": "gcc/testsuite/rust.test/compile/float1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffloat1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffloat1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffloat1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -5,4 +5,5 @@ fn test(x: f32) -> f32 {\n fn main() {\n     let a_float = 5.123;\n     let call_test = test(a_float + 1.0);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "7d3d298a1bbf47fd117d3197197c41ebfbb774d4", "filename": "gcc/testsuite/rust.test/compile/float_types.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffloat_types.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffloat_types.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffloat_types.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,3 +1,5 @@\n+// { dg-prune-output \"warning: unused name\" } as there are many of these expected.\n+\n fn main() {\n     let a1: f32 = 1.0f32;\n     let a2: f64 = 2.0f64;"}, {"sha": "b8403f9b97f880d1a48356d41cf7e0201dc22ddb", "filename": "gcc/testsuite/rust.test/compile/forward_decl_1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -3,6 +3,7 @@ fn main() {\n     an_integer = test(1) + 3;\n \n     let call_test = test(1);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }\n \n fn test(x: i32) -> i32 {"}, {"sha": "efc3b0dc5650d88433acc1ecd60191f6347db0b1", "filename": "gcc/testsuite/rust.test/compile/forward_decl_2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_2.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,5 +1,6 @@\n fn main() {\n     let y = x + 1;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }\n \n static x: i32 = 3;"}, {"sha": "0028ca5c1d42d79fe3f38436977e3c6fbeaf4765", "filename": "gcc/testsuite/rust.test/compile/forward_decl_3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_3.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,5 +1,6 @@\n fn main() {\n     let struct_test = Foo { one: 1, two: 2 };\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }\n \n struct Foo {"}, {"sha": "e1fe51f9025e67d278073380f488ccf4afbee5d2", "filename": "gcc/testsuite/rust.test/compile/forward_decl_4.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fforward_decl_4.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -3,6 +3,7 @@ fn main() {\n     x = x + 1;\n \n     let mut y = x + TEST_CONST;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }\n \n const TEST_CONST: i32 = 10;"}, {"sha": "dfbd01bdbdcc2d524ab6b7874745aa6f9093114c", "filename": "gcc/testsuite/rust.test/compile/function_reference1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -5,4 +5,5 @@ fn test(a: i32) -> i32 {\n fn main() {\n     let a = test;\n     let b = a(1);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "3c3e7c10910c9b636c8f9f723a660e3598e4a0fd", "filename": "gcc/testsuite/rust.test/compile/function_reference2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference2.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -5,4 +5,5 @@ fn test(a: i32) -> i32 {\n fn main() {\n     let a: fn(i32) -> i32 = test;\n     let b = a(1);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "0cb3181f4a16f024e7ed87195d903db135563acd", "filename": "gcc/testsuite/rust.test/compile/function_reference3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference3.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -9,10 +9,12 @@ fn test(a: i32) -> i32 {\n \n fn main() {\n     let a = test(1);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let b: fn(i32) -> i32 = test;\n     let c = b(1);\n \n     let d = Foo { a: test, b: c };\n     let e = (d.a)(d.b);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "977e4c9721593ab38af8f2bef07722d9b7e01312", "filename": "gcc/testsuite/rust.test/compile/function_reference4.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ffunction_reference4.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -5,4 +5,5 @@ fn test(a: i32) -> i32 {\n fn main() {\n     let a: fn(_) -> _ = test;\n     let b = a(1);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "87bcdc8f305d4ce011775f24185b92bd3e5249db", "filename": "gcc/testsuite/rust.test/compile/generics1.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -13,29 +13,39 @@ fn main() {\n     a1 = Foo { a: 1.0, b: false };\n \n     let b1: f32 = a1.a;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let c1: bool = a1.b;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let a2: GenericStruct<i8>;\n     a2 = GenericStruct::<i8> { a: 1, b: 456 };\n \n     let b2: i8 = a2.a;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let c2: usize = a2.b;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let a3;\n     a3 = GenericStruct::<i32> { a: 123, b: 456 };\n \n     let b3: i32 = a3.a;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let c3: usize = a3.b;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let a4;\n     a4 = GenericStruct { a: 1.0, b: 456 };\n \n     let b4: f32 = a4.a;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let c4: usize = a4.b;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let a5;\n     a5 = GenericStruct::<_> { a: true, b: 456 };\n \n     let b5: bool = a5.a;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let c5: usize = a5.b;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "9526149efcf6aa545e63be8eb9253c7239d47e74", "filename": "gcc/testsuite/rust.test/compile/generics10.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics10.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics10.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics10.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -15,4 +15,5 @@ fn main() {\n         b: true,\n     };\n     let b: Foo<i32> = test(a);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "f31be584e09b518113eb8c863a788c4c0243b5e4", "filename": "gcc/testsuite/rust.test/compile/generics12.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics12.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics12.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics12.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -13,4 +13,5 @@ impl GenericStruct<i32> {\n fn main() {\n     let a: GenericStruct<i32> = GenericStruct::<i32>::new(123, 456);\n     let aa: i32 = a.get();\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "da0ab992243fe435b94517073e0044ca5d0ff999", "filename": "gcc/testsuite/rust.test/compile/generics2.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics2.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -7,29 +7,39 @@ fn main() {\n     a1 = Foo(1.0, false);\n \n     let b1: f32 = a1.0;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let c1: bool = a1.1;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let a2: GenericStruct<i8>;\n     a2 = GenericStruct::<i8>(1, 456);\n \n     let b2: i8 = a2.0;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let c2: usize = a2.1;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let a3;\n     a3 = GenericStruct::<i32>(123, 456);\n \n     let b3: i32 = a3.0;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let c3: usize = a3.1;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let a4;\n     a4 = GenericStruct(1.0, 456);\n \n     let b4: f32 = a4.0;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let c4: usize = a4.1;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let a5;\n     a5 = GenericStruct::<_>(true, 456);\n \n     let b5: bool = a5.0;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let c5: usize = a5.1;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "ceec8f7d9c64ee0761c9d43382aa0f21425b9251", "filename": "gcc/testsuite/rust.test/compile/generics3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics3.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -6,8 +6,10 @@ fn main() {\n     let a;\n     a = test(123);\n     let aa: i32 = a;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let b;\n     b = test::<u32>(456);\n     let bb: u32 = b;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "3ae3861f6fdff47f97af5f03588ea09800772f57", "filename": "gcc/testsuite/rust.test/compile/generics4.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics4.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -9,5 +9,7 @@ fn test<T>(a: T) -> Foo<T> {\n \n fn main() {\n     let a: Foo<i32> = test(123);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let b: Foo<u32> = test(456);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "b7f430289926046bebcaa3462dc06b35b0271a38", "filename": "gcc/testsuite/rust.test/compile/generics5.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics5.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -4,5 +4,7 @@ fn test<T>(a: T) -> T {\n \n fn main() {\n     let a: i32 = test(123);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let b: i32 = test(456);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "283a11878b3d1a3425b174d3d1f924508e21abae", "filename": "gcc/testsuite/rust.test/compile/generics6.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics6.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics6.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics6.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -11,4 +11,5 @@ fn main() {\n         b: true,\n     };\n     let b: i32 = a.a.0;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "2e89ce14640ef2fa07e8edf6fa5085822840daad", "filename": "gcc/testsuite/rust.test/compile/generics7.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics7.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics7.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics7.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -9,4 +9,5 @@ fn main() {\n     let a = Foo::<i32>(123);\n     let b: Bar = Bar { a: a, b: true };\n     let c: i32 = b.a.0;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "036d85568f0cfd059cc815ee4f0e60e31516c55f", "filename": "gcc/testsuite/rust.test/compile/generics8.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics8.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics8.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics8.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -8,8 +8,11 @@ impl<T> GenericStruct<T> {\n \n fn main() {\n     let a: GenericStruct<i32> = GenericStruct::<i32>::new(123, 456);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let b: GenericStruct<u32> = GenericStruct::<_>::new(123, 456);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let c: GenericStruct<f32> = GenericStruct::new(123f32, 456);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "307c34f3e9b18dfcc9622dca652a32072bac14eb", "filename": "gcc/testsuite/rust.test/compile/generics9.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics9.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics9.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics9.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -13,10 +13,13 @@ impl<T> GenericStruct<T> {\n fn main() {\n     let a: GenericStruct<i32> = GenericStruct::<i32>::new(123, 456);\n     let aa: i32 = a.get();\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let b: GenericStruct<u32> = GenericStruct::<_>::new(123, 456);\n     let bb: u32 = b.get();\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let c: GenericStruct<f32> = GenericStruct::new(123f32, 456);\n     let cc: f32 = c.get();\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "65ed7f7a23aaa9f824d003da369adbcae9f0f6a9", "filename": "gcc/testsuite/rust.test/compile/if_elif_else_expr1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fif_elif_else_expr1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fif_elif_else_expr1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fif_elif_else_expr1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -10,4 +10,5 @@ fn test(x: i32) -> i32 {\n \n fn main() {\n     let a = test(1);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "78ec4595edac6adad7d8d0f5a5074991555cf396", "filename": "gcc/testsuite/rust.test/compile/impl_block3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimpl_block3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimpl_block3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimpl_block3.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -28,4 +28,5 @@ fn main() {\n     let p1 = Point::origin();\n     let p2 = Point::new(3.0, 4.0);\n     let rect = Rectangle::from(p1, p2);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "54cc8b3aea805d26d426a1be6c977343445ab9a3", "filename": "gcc/testsuite/rust.test/compile/implicit_returns1.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimplicit_returns1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimplicit_returns1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fimplicit_returns1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -55,11 +55,19 @@ fn test8() -> i32 {\n \n fn main() {\n     let call1 = test1();\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let call2 = test2();\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let call3 = test3(3);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let call4 = test4(4);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let call5 = test5(5);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let call6 = test6(6);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let call7 = test7(7);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let call8 = test8();\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "aabfcef895b381e320c2f18175f6de6660fa865b", "filename": "gcc/testsuite/rust.test/compile/infer_type1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finfer_type1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finfer_type1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finfer_type1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,3 +1,4 @@\n fn main() {\n     let array: [_; 2] = [111, 222];\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "582ae77caa49f1a84452c47f065259bdb00fc419", "filename": "gcc/testsuite/rust.test/compile/integer_inference_var3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var3.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -7,4 +7,5 @@ fn main() {\n     param = 123;\n \n     let a = test(param);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "051de1d652059f1b60e11dec9e48b4084ddecda5", "filename": "gcc/testsuite/rust.test/compile/integer_inference_var5.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_inference_var5.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -6,6 +6,7 @@ fn test(x: u32) -> u32 {\n \n fn main() {\n     let x = TEST_CONST;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let a = 1u32;\n     let b = a;\n@@ -20,4 +21,5 @@ fn main() {\n     param = 123;\n \n     let test_call = test(param);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "95a73780bb1af8dea771204948f46772f12de840", "filename": "gcc/testsuite/rust.test/compile/integer_types.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_types.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_types.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Finteger_types.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,3 +1,5 @@\n+// { dg-prune-output \"warning: unused name\" } as there are many of these expected.\n+\n fn main() {\n     let a1: i8 = 1i8;\n     let a2: i16 = 2i16;"}, {"sha": "cf021e295d29d9247d3e5762ceb91165bced6a84", "filename": "gcc/testsuite/rust.test/compile/literals1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fliterals1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fliterals1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fliterals1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,3 +1,5 @@\n+// { dg-prune-output \"warning: unused name\" } as there are many of these expected.\n+\n fn main() {\n     let hex: i32 = 0xFF;\n     let binary: i32 = 0b11110000;"}, {"sha": "06f5f9e45ab41b0374febb65ec10aa2d64d2614d", "filename": "gcc/testsuite/rust.test/compile/loop5.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop5.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -4,6 +4,7 @@ fn main() {\n \n     // first number in Fibonacci sequence over 10:\n     let _fib = loop {\n+        // { dg-bogus \"unused name\" \"#361\" { xfail *-*-* } .-1 }\n         if b > 10 {\n             break b;\n         }"}, {"sha": "647df13af40ed2066daa4aaf1798d4d0e7a6f2a7", "filename": "gcc/testsuite/rust.test/compile/loop7.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop7.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop7.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Floop7.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -3,6 +3,7 @@ fn main() {\n     let mut b = 1;\n \n     let _fib = loop {\n+        // { dg-bogus \"unused name\" \"#361\" { xfail *-*-* } .-1 }\n         if (a % 2 == 0) {\n             continue;\n         }"}, {"sha": "df3663f38ba7f899f5438e4a00611f7f3cc16812", "filename": "gcc/testsuite/rust.test/compile/methods1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fmethods1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fmethods1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fmethods1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -36,4 +36,5 @@ fn main() {\n     let rect = Rectangle::from(p1, p2);\n \n     let sum = rect.sum_x();\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "72ba29c433852f2fddc259b071929708f779bdc2", "filename": "gcc/testsuite/rust.test/compile/methods2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fmethods2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fmethods2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fmethods2.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -30,6 +30,7 @@ fn main() {\n     let rect = Rectangle::from(p1, p2);\n \n     let sum = rect.sum_x();\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }\n \n impl Rectangle {"}, {"sha": "b0cb78f5b27afcb236d51a597c95ad078571e2c7", "filename": "gcc/testsuite/rust.test/compile/methods3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fmethods3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fmethods3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fmethods3.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -36,6 +36,8 @@ fn main() {\n     let rect = Rectangle::from(p1, p2);\n \n     let sum = rect.sum_x();\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     // multiple MethodCallExpr were causing issue #310\n     let sum = rect.sum_x();\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "56ce0530acb5d70e593b74384eb87af066e250d1", "filename": "gcc/testsuite/rust.test/compile/nested_struct1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fnested_struct1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fnested_struct1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fnested_struct1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -14,4 +14,5 @@ fn main() {\n     let rect = Rectangle { p1, p2 };\n \n     let a = rect.p1.x;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "448e9603a9414723e88484d39183eb775a5d80f1", "filename": "gcc/testsuite/rust.test/compile/parameter_usage1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fparameter_usage1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fparameter_usage1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fparameter_usage1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -4,4 +4,5 @@ fn test(a: i32, b: i32) -> i32 {\n \n fn main() {\n     let a = test(1, 4);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "795eb96080501239e61c6df60187e624faaa0ba9", "filename": "gcc/testsuite/rust.test/compile/parens1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fparens1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fparens1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fparens1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,4 +1,5 @@\n fn main() {\n     let a = 123;\n     let b = a + (a * 2);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "e13b41f70bd3dc03ac56230811730aca835e2429", "filename": "gcc/testsuite/rust.test/compile/recursive_fn1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Frecursive_fn1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Frecursive_fn1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Frecursive_fn1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -8,4 +8,5 @@ fn gcd(x: i32, y: i32) -> i32 {\n \n fn main() {\n     let a = gcd(100, 5);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "8bc8ede5f7c27f2f899fcd87e718cf3658d64bb4", "filename": "gcc/testsuite/rust.test/compile/scoping1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fscoping1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fscoping1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fscoping1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -7,4 +7,5 @@ fn main() {\n         }\n     }\n     let x = x + 1;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "b60e7936de9876786dc711a3759a6eee83e45218", "filename": "gcc/testsuite/rust.test/compile/shadow1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fshadow1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fshadow1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fshadow1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,5 +1,6 @@\n fn main() {\n     let mut x = 5;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let mut x;\n     x = true;\n }"}, {"sha": "161dc380a0792898ffdac26c6dbb99fe9a535f91", "filename": "gcc/testsuite/rust.test/compile/shadow2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fshadow2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fshadow2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fshadow2.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,4 +1,5 @@\n fn main() {\n     let x = 1;\n     let x = x + 1;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "8e3a379502373f1f4b60d09dc7ac4ebfb62acb00", "filename": "gcc/testsuite/rust.test/compile/static_function.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstatic_function.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstatic_function.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstatic_function.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -4,4 +4,5 @@ fn test(x: i32) -> i32 {\n \n fn main() {\n     let call_test = test(1);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "5be0e75ce728f650c787e1b412b3baeb2710d145", "filename": "gcc/testsuite/rust.test/compile/static_var1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstatic_var1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstatic_var1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstatic_var1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -2,4 +2,5 @@ static x:i32 = 3;\n \n fn main() {\n     let y = x +1;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "ec85d289fb523575920228be806376c045f0d1ff", "filename": "gcc/testsuite/rust.test/compile/struct_access1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_access1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_access1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_access1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -6,5 +6,7 @@ struct Foo {\n fn main() {\n     let struct_test = Foo { one: 1, two: 2 };\n     let a = struct_test.one;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let b = struct_test.two;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "781265ac83b582da22f0c79db144173de27fad09", "filename": "gcc/testsuite/rust.test/compile/struct_base_init_1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_base_init_1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_base_init_1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_base_init_1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -9,4 +9,5 @@ fn foo() -> Foo {\n \n fn main() {\n     let _f = Foo { a: 10, ..foo() };\n+    // { dg-bogus \"unused name\" \"#361\" { xfail *-*-* } .-1 }\n }"}, {"sha": "be0b9630ec3313a18bfeb20b2ed9e77fa7ffe35e", "filename": "gcc/testsuite/rust.test/compile/struct_init.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -5,4 +5,5 @@ struct Foo {\n \n fn main() {\n     let struct_test = Foo { one: 1, two: 2 };\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "d7040d3d96df40b086fa2264de17a7c7dafced94", "filename": "gcc/testsuite/rust.test/compile/struct_init_2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_2.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -2,4 +2,5 @@ struct Foo(f32, f32);\n \n fn main() {\n     let a = Foo { 0: 10.0, 1: 20.0 };\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "5e52d09d3ac3a2ae32563e28923c57567c6d8a8b", "filename": "gcc/testsuite/rust.test/compile/struct_init_3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_3.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -7,4 +7,5 @@ fn main() {\n     let a = 1;\n     let b = 2;\n     let c = Foo { a, b };\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "57b6bd4899679aabfd0bf6cd3bb1e38a0d6022ff", "filename": "gcc/testsuite/rust.test/compile/struct_init_4.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_4.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -6,4 +6,5 @@ struct Foo {\n fn main() {\n     let a = Foo { a: 1, b: 2 };\n     let b = Foo { a: 3, b: 4, ..a };\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "891f64540fe9288e96907888a4478e104893fe57", "filename": "gcc/testsuite/rust.test/compile/struct_init_5.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_5.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -6,4 +6,5 @@ struct Foo {\n fn main() {\n     let a = Foo { a: 1, b: 2 };\n     let b = Foo { ..a };\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "e7f8a12b303802467287081e2d2704d7b4d34567", "filename": "gcc/testsuite/rust.test/compile/struct_init_6.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_6.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_6.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_6.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -6,4 +6,5 @@ struct Foo {\n fn main() {\n     let a = Foo { a: 1, b: 2 };\n     let b = Foo { a: 1, ..a };\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "a8c80504875e23e8c586d0781c27423a41b060fd", "filename": "gcc/testsuite/rust.test/compile/struct_init_7.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_7.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_7.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_7.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -6,4 +6,5 @@ struct Foo {\n fn main() {\n     let a = Foo { a: 1, b: 2f32 };\n     let b = Foo { b: 4f32, ..a };\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "411ff7d1c6f6418a857536d1bd56fcfeac9a9ba6", "filename": "gcc/testsuite/rust.test/compile/struct_init_8.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_8.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_8.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fstruct_init_8.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -3,4 +3,5 @@ struct Foo(f32, i32);\n fn main() {\n     let a = Foo { 1: 1, 0: 2f32 };\n     let b = Foo { ..a };\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "9e6f613f682226978734ac0e034c55eb7a2d5aeb", "filename": "gcc/testsuite/rust.test/compile/tuple1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,5 +1,6 @@\n fn main() {\n     let a: (i32, bool) = (123, true);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let b;\n     b = (456, 5f32);\n }"}, {"sha": "ab3d0b8715b370c1a2ecba11a394a1a7441f6f56", "filename": "gcc/testsuite/rust.test/compile/tuple2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple2.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,4 +1,5 @@\n fn main() {\n     let a = 123;\n     let b = (a,);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "0ac19b179a94cb4d41edf9a481e85bc821b31074", "filename": "gcc/testsuite/rust.test/compile/tuple_struct1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple_struct1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple_struct1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftuple_struct1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -2,4 +2,5 @@ struct Foo(i32, i32, bool);\n \n fn main() {\n     let a = Foo(1, 2, true);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "a3e3f4e6851cea7003c99cd4db1bf344e752af65", "filename": "gcc/testsuite/rust.test/compile/type-alias2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype-alias2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype-alias2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype-alias2.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -2,5 +2,7 @@ type x = u32;\n \n fn main() {\n     let x: x = 1;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let y: x = 2;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "b6502b50d3d4f82c0ca52fc628758ea2d0643516", "filename": "gcc/testsuite/rust.test/compile/type_infer1.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -9,11 +9,14 @@ fn test(x: i32) -> i32 {\n \n fn main() {\n     let logical: bool = true;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let an_integer = 5;\n     let mut default_integer = 7;\n \n     default_integer = 1 + an_integer;\n \n     let call_test = test(1);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let struct_test = Foo { one: 1, two: 2 };\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "dcddda4272934dde4a6d09b23c80443bfce746a4", "filename": "gcc/testsuite/rust.test/compile/type_infer2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer2.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -5,4 +5,5 @@ fn test(x: i32) -> i32 {\n fn main() {\n     let an_integer = 5;\n     let call_test = test(an_integer + 1);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "303dd3d1f18cf27d605e77250557fb6ad20dea05", "filename": "gcc/testsuite/rust.test/compile/type_infer3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer3.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -10,4 +10,5 @@ fn main() {\n     x = 1;\n \n     let call_test = test(1);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "77a919f262a57307ef696bfe710b3b6d508bedc1", "filename": "gcc/testsuite/rust.test/compile/type_infer4.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer4.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -3,7 +3,9 @@ fn main() {\n     let xy = [6, 7, 8];\n \n     let a = xs[0];\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let b = xy[2];\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let mut c;\n     c = xs[0];\n }"}, {"sha": "1bccb4c68cbb3753306a68df156db7d5b36c1f8a", "filename": "gcc/testsuite/rust.test/compile/type_infer5.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer5.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -8,4 +8,5 @@ fn main() {\n     a = Foo { a: 1, b: 2 };\n \n     let b = a.a;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "6f5863f01072a7e94859e9b802a6147b8190875f", "filename": "gcc/testsuite/rust.test/compile/type_infer6.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer6.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer6.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Ftype_infer6.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -6,7 +6,9 @@ fn main() {\n     let a;\n     a = 1;\n     let b = test(a);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let c = 1;\n     let d = test(c + 1);\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "9be729c04e37b102f91eac0a3334152b7fb0b81f", "filename": "gcc/testsuite/rust.test/compile/unary_operators.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funary_operators.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funary_operators.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funary_operators.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,3 +1,5 @@\n+// { dg-prune-output \"warning: unused name\" } as there are many of these expected.\n+\n fn main() {\n     let a: i32 = -1;\n     let b: i32 = 3 - -1;"}, {"sha": "d5f73575745132dd83f45f277b1fec1e9f0ba165", "filename": "gcc/testsuite/rust.test/compile/unit_type1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funit_type1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funit_type1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funit_type1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,5 +1,6 @@\n fn main() {\n     let a: () = ();\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n \n     let b;\n     b = ();"}, {"sha": "a4987b5a3b19ba69ca05c4cb48d9fae8d2ccc449", "filename": "gcc/testsuite/rust.test/compile/unused.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funused.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funused.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funused.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,8 +1,9 @@\n-\n+// { dg-warning \"function is never used: `bar`\" \"\" { target *-*-* } .+1 }\n fn bar() {\n     foo();\n }\n \n+// { dg-warning \"function is never used: `foo`\" \"\" { target *-*-* } .+1 }\n fn foo() {\n     bar();\n }"}, {"sha": "3b4873c761f440873a8d41eefb2eab051dc59020", "filename": "gcc/testsuite/rust.test/compile/unused1.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funused1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funused1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Funused1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -3,10 +3,14 @@ fn test() -> i32 {\n }\n \n fn unused() -> i32 {\n+    // { dg-warning \"function is never used: `unused`\" \"\" { target *-*-* } .-1 }\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-2 }\n     2\n }\n \n fn main() {\n     let a = 1;\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n     let b = test();\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "ba1d5c603208d676291bcfae77c04fa859251e86", "filename": "gcc/testsuite/rust.test/compile/usize1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fusize1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fusize1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fusize1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -2,4 +2,5 @@ fn main() {\n     let a = [1, 2, 3];\n     let b: usize = 1;\n     let c = a[b];\n+    // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n }"}, {"sha": "f4deaa19c53946a4be20d64b6720939804dca961", "filename": "gcc/testsuite/rust.test/execute/execute.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fexecute%2Fexecute.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fexecute%2Fexecute.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fexecute%2Fexecute.exp?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -28,7 +28,7 @@ dg-init\n set saved-dg-do-what-default ${dg-do-what-default}\n \n set dg-do-what-default \"run\"\n-gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.rs]] \"\" \"-w\"\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.rs]] \"\" \"\"\n set dg-do-what-default ${saved-dg-do-what-default}\n \n # All done."}, {"sha": "c3d0d9f2480f05727449717969bbaf5c5f9a9d52", "filename": "gcc/testsuite/rust.test/execute/exit_error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fexecute%2Fexit_error.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fexecute%2Fexit_error.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fexecute%2Fexit_error.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,5 +1,5 @@\n // { dg-xfail-run-if \"\" { *-*-* } }\n-// { dg-excess-errors \"Noisy debug print\" }\n+\n fn main() -> i32 {\n     1\n }"}, {"sha": "75f4db4db05b36f765ffa85fda6ad3f2c25d0448", "filename": "gcc/testsuite/rust.test/xfail_compile/implicit_returns_err2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimplicit_returns_err2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimplicit_returns_err2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fimplicit_returns_err2.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -2,6 +2,7 @@\n \n fn test(x: i32) -> i32 {\n     return 1;\n+    // { dg-warning \"unreachable expression\" \"\" { target *-*-* } .+1 }\n     true\n }\n "}, {"sha": "bb9d19cb5c1c4a1465c41744514d3d648492f9fb", "filename": "gcc/testsuite/rust.test/xfail_compile/redef_error1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error1.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,4 +1,3 @@\n-// { dg-excess-errors \"Noisy error and debug\" }\n struct S1 { // { dg-error \"was defined here\" }\n     x: f64,\n     y: f64,"}, {"sha": "013404861fb3463de4c1356b6a235f60fb97022a", "filename": "gcc/testsuite/rust.test/xfail_compile/redef_error2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error2.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,4 +1,3 @@\n-// { dg-excess-errors \"Noisy error and debug\" }\n const TEST: i32 = 2;  // { dg-error \"was defined here\" }\n const TEST: f32 = 3.0;  // { dg-error \"redefined multiple times\" }\n "}, {"sha": "32cea6ef8dcbe655d4b3e7979d3b9beaed3fc2b2", "filename": "gcc/testsuite/rust.test/xfail_compile/redef_error3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error3.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,4 +1,3 @@\n-// { dg-excess-errors \"Noisy error and debug\" }\n fn test() -> bool {  // { dg-error \"was defined here\" }\n     true\n }"}, {"sha": "648534676b771d8b4fde3a03f167ea5669bce1f4", "filename": "gcc/testsuite/rust.test/xfail_compile/redef_error4.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error4.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,5 +1,3 @@\n-// { dg-excess-errors \"Noisy error and debug\" }\n-\n struct Foo(i32, bool);\n \n impl Foo {"}, {"sha": "4ca37c675a734793a26f5c0183294c81de803f1b", "filename": "gcc/testsuite/rust.test/xfail_compile/redef_error5.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fredef_error5.rs?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -1,4 +1,3 @@\n-// { dg-excess-errors \"Noisy error and debug\" }\n struct Foo(i32, bool);\n \n impl Foo {"}, {"sha": "19365875dcf7770edf5b7b63cb743a8c0520bf33", "filename": "gcc/testsuite/rust.test/xfail_compile/xfail_compile.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fxfail_compile.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fxfail_compile.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fxfail_compile%2Fxfail_compile.exp?ref=ca8744db3e56bfcf0cf3f0e2a0bf76450aef9438", "patch": "@@ -29,7 +29,7 @@ dg-init\n set saved-dg-do-what-default ${dg-do-what-default}\n \n set dg-do-what-default \"compile\"\n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.rs]] \"\" \"-w\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.rs]] \"\" \"\"\n set dg-do-what-default ${saved-dg-do-what-default}\n \n # All done."}]}