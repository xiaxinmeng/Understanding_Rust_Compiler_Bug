{"sha": "8e1e69c8651236a4d6a97d6c3871720d2b5c680d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUxZTY5Yzg2NTEyMzZhNGQ2YTk3ZDZjMzg3MTcyMGQyYjVjNjgwZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-16T20:27:09Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-16T20:27:09Z"}, "message": "(rs6000_convert_preincs): Delete.\n\nFrom-SVN: r7310", "tree": {"sha": "4e000ae26e7c42c63f4ac33ac44d8be7c9266427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e000ae26e7c42c63f4ac33ac44d8be7c9266427"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e1e69c8651236a4d6a97d6c3871720d2b5c680d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1e69c8651236a4d6a97d6c3871720d2b5c680d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e1e69c8651236a4d6a97d6c3871720d2b5c680d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1e69c8651236a4d6a97d6c3871720d2b5c680d/comments", "author": null, "committer": null, "parents": [{"sha": "4255474beb0701025b957aaf35a6165c297ce0cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4255474beb0701025b957aaf35a6165c297ce0cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4255474beb0701025b957aaf35a6165c297ce0cf"}], "stats": {"total": 28, "additions": 0, "deletions": 28}, "files": [{"sha": "37191e78b5f735d92b65a73ecb2894a1618621e3", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1e69c8651236a4d6a97d6c3871720d2b5c680d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1e69c8651236a4d6a97d6c3871720d2b5c680d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=8e1e69c8651236a4d6a97d6c3871720d2b5c680d", "patch": "@@ -173,34 +173,6 @@ rs6000_override_options ()\n     }\n }\n \f\n-/* Look for an PRE_INC address in X that are marked as dying in INSN.\n-   Convert the addresses to a PLUS form if one is found.  */\n-\n-void\n-rs6000_convert_preincs (x, insn)\n-     rtx x;\n-     rtx insn;\n-{\n-  enum rtx_code code = GET_CODE (x);\n-  char *fmt;\n-  int i, j;\n-\n-  if (code == MEM && GET_CODE (XEXP (x, 0)) == PRE_INC\n-      && find_reg_note (insn, REG_DEAD, XEXP (XEXP (x, 0), 0)))\n-    XEXP (x, 0) = plus_constant (XEXP (XEXP (x, 0), 0),\n-\t\t\t\t GET_MODE_SIZE (GET_MODE (x)));\n-  else\n-    for (i = GET_RTX_LENGTH (code) - 1, fmt = GET_RTX_FORMAT (code);\n-\t i >= 0; i--)\n-      {\n-\tif (fmt[i] == 'e')\n-\t  rs6000_convert_preincs (XEXP (x, i), insn);\n-\telse if (fmt[i] == 'E')\n-\t  for (j = XVECLEN (x, i) - 1; j >= 0; j--)\n-\t    rs6000_convert_preincs (XVECEXP (x, i, j), insn);\n-      }\n-}\n-\f\n /* Return non-zero if this function is known to have a null epilogue.  */\n \n int"}]}