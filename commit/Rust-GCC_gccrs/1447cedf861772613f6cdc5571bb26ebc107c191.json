{"sha": "1447cedf861772613f6cdc5571bb26ebc107c191", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ0N2NlZGY4NjE3NzI2MTNmNmNkYzU1NzFiYjI2ZWJjMTA3YzE5MQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-07-13T13:54:26Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-07-13T13:54:26Z"}, "message": "Cleanup #2 of Pascal references.\n\n2017-07-13  Martin Liska  <mliska@suse.cz>\n\n\t* dwarf2out.c (gen_pointer_type_die): Remove dead code.\n\t(gen_reference_type_die): Likewise.\n\t* stor-layout.c: Remove Pascal-related comment.\n\nFrom-SVN: r250184", "tree": {"sha": "17c0115f2c73f3c2408b007874812c9303877b3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17c0115f2c73f3c2408b007874812c9303877b3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1447cedf861772613f6cdc5571bb26ebc107c191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1447cedf861772613f6cdc5571bb26ebc107c191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1447cedf861772613f6cdc5571bb26ebc107c191", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1447cedf861772613f6cdc5571bb26ebc107c191/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f914a1e291319daebae373b3f886c7300dfdeec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f914a1e291319daebae373b3f886c7300dfdeec1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f914a1e291319daebae373b3f886c7300dfdeec1"}], "stats": {"total": 49, "additions": 7, "deletions": 42}, "files": [{"sha": "3246378038b7ee5feabcf4e84c59cb8cf11008de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1447cedf861772613f6cdc5571bb26ebc107c191/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1447cedf861772613f6cdc5571bb26ebc107c191/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1447cedf861772613f6cdc5571bb26ebc107c191", "patch": "@@ -1,3 +1,9 @@\n+2017-07-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* dwarf2out.c (gen_pointer_type_die): Remove dead code.\n+\t(gen_reference_type_die): Likewise.\n+\t* stor-layout.c: Remove Pascal-related comment.\n+\n 2017-07-13  Martin Liska  <mliska@suse.cz>\n \n \t* opts.c (finish_options): Add quotes to error messages."}, {"sha": "e4e776f1bac0701be13c0e7df68287d0a7accf05", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1447cedf861772613f6cdc5571bb26ebc107c191/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1447cedf861772613f6cdc5571bb26ebc107c191/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=1447cedf861772613f6cdc5571bb26ebc107c191", "patch": "@@ -23305,46 +23305,6 @@ gen_field_die (tree decl, struct vlr_context *ctx, dw_die_ref context_die)\n   equate_decl_number_to_die (decl, decl_die);\n }\n \n-#if 0\n-/* Don't generate either pointer_type DIEs or reference_type DIEs here.\n-   Use modified_type_die instead.\n-   We keep this code here just in case these types of DIEs may be needed to\n-   represent certain things in other languages (e.g. Pascal) someday.  */\n-\n-static void\n-gen_pointer_type_die (tree type, dw_die_ref context_die)\n-{\n-  dw_die_ref ptr_die\n-    = new_die (DW_TAG_pointer_type, scope_die_for (type, context_die), type);\n-\n-  equate_type_number_to_die (type, ptr_die);\n-  add_type_attribute (ptr_die, TREE_TYPE (type), TYPE_UNQUALIFIED, false,\n-\t\t      context_die);\n-  add_AT_unsigned (mod_type_die, DW_AT_byte_size, PTR_SIZE);\n-}\n-\n-/* Don't generate either pointer_type DIEs or reference_type DIEs here.\n-   Use modified_type_die instead.\n-   We keep this code here just in case these types of DIEs may be needed to\n-   represent certain things in other languages (e.g. Pascal) someday.  */\n-\n-static void\n-gen_reference_type_die (tree type, dw_die_ref context_die)\n-{\n-  dw_die_ref ref_die, scope_die = scope_die_for (type, context_die);\n-\n-  if (TYPE_REF_IS_RVALUE (type) && dwarf_version >= 4)\n-    ref_die = new_die (DW_TAG_rvalue_reference_type, scope_die, type);\n-  else\n-    ref_die = new_die (DW_TAG_reference_type, scope_die, type);\n-\n-  equate_type_number_to_die (type, ref_die);\n-  add_type_attribute (ref_die, TREE_TYPE (type), TYPE_UNQUALIFIED, false,\n-\t\t      context_die);\n-  add_AT_unsigned (mod_type_die, DW_AT_byte_size, PTR_SIZE);\n-}\n-#endif\n-\n /* Generate a DIE for a pointer to a member type.  TYPE can be an\n    OFFSET_TYPE, for a pointer to data member, or a RECORD_TYPE, for a\n    pointer to member function.  */"}, {"sha": "f733b1e46091ea53fe0193e51bcd1b29340b0c89", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1447cedf861772613f6cdc5571bb26ebc107c191/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1447cedf861772613f6cdc5571bb26ebc107c191/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=1447cedf861772613f6cdc5571bb26ebc107c191", "patch": "@@ -2647,8 +2647,7 @@ set_min_and_max_values_for_integral_type (tree type,\n \n /* Set the extreme values of TYPE based on its precision in bits,\n    then lay it out.  Used when make_signed_type won't do\n-   because the tree code is not INTEGER_TYPE.\n-   E.g. for Pascal, when the -fsigned-char option is given.  */\n+   because the tree code is not INTEGER_TYPE.  */\n \n void\n fixup_signed_type (tree type)"}]}