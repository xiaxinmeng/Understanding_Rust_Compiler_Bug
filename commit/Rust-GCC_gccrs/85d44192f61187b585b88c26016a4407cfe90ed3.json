{"sha": "85d44192f61187b585b88c26016a4407cfe90ed3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVkNDQxOTJmNjExODdiNTg1Yjg4YzI2MDE2YTQ0MDdjZmU5MGVkMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-01-29T12:47:20Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-01-29T12:47:20Z"}, "message": "atomic_base.h: Use __always_inline__ instead of always_inline.\n\n\t* include/bits/atomic_base.h: Use __always_inline__ instead of\n\talways_inline.\n\t* include/bits/atomic_futex.h: Likewise.\n\t* include/bits/c++config: Use __abi_tag__ instead of abi_tag.\n\t* include/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp: Use\n\t__packed__ instead of packed.\n\t* include/std/shared_mutex: Use __unused__ instead of unused.\n\t* testsuite/17_intro/headers/c++1998/all_attributes.cc: New.\n\t* testsuite/17_intro/headers/c++200x/all_attributes.cc: New.\n\t* testsuite/17_intro/headers/c++2014/all_attributes.cc: New.\n\nFrom-SVN: r220243", "tree": {"sha": "3c311fee55539ef3b0ea1ac56cec12a78a905a35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c311fee55539ef3b0ea1ac56cec12a78a905a35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85d44192f61187b585b88c26016a4407cfe90ed3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d44192f61187b585b88c26016a4407cfe90ed3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85d44192f61187b585b88c26016a4407cfe90ed3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d44192f61187b585b88c26016a4407cfe90ed3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d290bb1d72b5ef24be30d43abcaa17caa387c3c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d290bb1d72b5ef24be30d43abcaa17caa387c3c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d290bb1d72b5ef24be30d43abcaa17caa387c3c6"}], "stats": {"total": 141, "additions": 134, "deletions": 7}, "files": [{"sha": "ea7b5d5792385a6b586c447a8b77ed39a81e38c8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=85d44192f61187b585b88c26016a4407cfe90ed3", "patch": "@@ -1,3 +1,16 @@\n+2015-01-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/atomic_base.h: Use __always_inline__ instead of\n+\talways_inline.\n+\t* include/bits/atomic_futex.h: Likewise.\n+\t* include/bits/c++config: Use __abi_tag__ instead of abi_tag.\n+\t* include/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp: Use\n+\t__packed__ instead of packed.\n+\t* include/std/shared_mutex: Use __unused__ instead of unused.\n+\t* testsuite/17_intro/headers/c++1998/all_attributes.cc: New.\n+\t* testsuite/17_intro/headers/c++200x/all_attributes.cc: New.\n+\t* testsuite/17_intro/headers/c++2014/all_attributes.cc: New.\n+\n 2015-01-27  Caroline Tice  <cmtice@google.com>\n \n \tCommitting VTV Cywin/Ming patch for Patrick Wollgast"}, {"sha": "fe6524f41b7374d4ecf07cd734a11b23bef81e8d", "filename": "libstdc++-v3/include/bits/atomic_base.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_base.h?ref=85d44192f61187b585b88c26016a4407cfe90ed3", "patch": "@@ -37,7 +37,7 @@\n #include <bits/atomic_lockfree_defines.h>\n \n #ifndef _GLIBCXX_ALWAYS_INLINE\n-#define _GLIBCXX_ALWAYS_INLINE inline __attribute__((always_inline))\n+#define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))\n #endif\n \n namespace std _GLIBCXX_VISIBILITY(default)"}, {"sha": "ca3260d4ee2cad6e026ccdb11857951f5c1cf713", "filename": "libstdc++-v3/include/bits/atomic_futex.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_futex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_futex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_futex.h?ref=85d44192f61187b585b88c26016a4407cfe90ed3", "patch": "@@ -41,7 +41,7 @@\n #endif\n \n #ifndef _GLIBCXX_ALWAYS_INLINE\n-#define _GLIBCXX_ALWAYS_INLINE inline __attribute__((always_inline))\n+#define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))\n #endif\n \n namespace std _GLIBCXX_VISIBILITY(default)"}, {"sha": "46ffa1f5d0a36c085879785e62e180bc9239b5b3", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=85d44192f61187b585b88c26016a4407cfe90ed3", "patch": "@@ -215,7 +215,7 @@ namespace std\n #if _GLIBCXX_USE_CXX11_ABI\n namespace std\n {\n-  inline namespace __cxx11 __attribute__((abi_tag)) { }\n+  inline namespace __cxx11 __attribute__((__abi_tag__)) { }\n }\n # define _GLIBCXX_NAMESPACE_CXX11 __cxx11::\n # define _GLIBCXX_BEGIN_NAMESPACE_CXX11 namespace __cxx11 {\n@@ -290,7 +290,7 @@ namespace std\n # endif\n \n # if _GLIBCXX_USE_CXX11_ABI\n-  inline namespace __cxx11 __attribute__((abi_tag)) { }\n+  inline namespace __cxx11 __attribute__((__abi_tag__)) { }\n # endif\n   }\n "}, {"sha": "a402bef3a61947846fc98fb06c87bda7d8f942a8", "filename": "libstdc++-v3/include/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fgp_ht_map_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fgp_ht_map_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fgp_ht_map_.hpp?ref=85d44192f61187b585b88c26016a4407cfe90ed3", "patch": "@@ -162,7 +162,7 @@ namespace __gnu_pbds\n \t  empty_entry_status,\n \t  valid_entry_status,\n \t  erased_entry_status\n-\t} __attribute__ ((packed));\n+\t} __attribute__ ((__packed__));\n \n       struct entry : public traits_base::stored_data_type\n       {"}, {"sha": "5dcc295746b3c7b8eb3ef9c8fc22bda98f574b90", "filename": "libstdc++-v3/include/std/shared_mutex", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fshared_mutex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fshared_mutex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fshared_mutex?ref=85d44192f61187b585b88c26016a4407cfe90ed3", "patch": "@@ -78,7 +78,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     ~shared_timed_mutex()\n     {\n-      int __ret __attribute((unused)) = pthread_rwlock_destroy(&_M_rwlock);\n+      int __ret __attribute((__unused__)) = pthread_rwlock_destroy(&_M_rwlock);\n       // Errors not handled: EBUSY, EINVAL\n       _GLIBCXX_DEBUG_ASSERT(__ret == 0);\n     }\n@@ -155,7 +155,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     void\n     unlock()\n     {\n-      int __ret __attribute((unused)) = pthread_rwlock_unlock(&_M_rwlock);\n+      int __ret __attribute((__unused__)) = pthread_rwlock_unlock(&_M_rwlock);\n       // Errors not handled: EPERM, EBUSY, EINVAL\n       _GLIBCXX_DEBUG_ASSERT(__ret == 0);\n     }"}, {"sha": "c7ed8aea01c7039672a88ca73a1d51109b66a99e", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++1998/all_attributes.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B1998%2Fall_attributes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B1998%2Fall_attributes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B1998%2Fall_attributes.cc?ref=85d44192f61187b585b88c26016a4407cfe90ed3", "patch": "@@ -0,0 +1,38 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++98\" }\n+// { dg-do compile }\n+\n+// Ensure the library only uses the __name__ form for attributes.\n+// Don't test 'const' because it is reserved anyway.\n+#define abi_tag 1\n+#define always_inline 1\n+#define deprecated 1\n+#define noreturn 1\n+#define packed 1\n+#define pure 1\n+#define unused 1\n+#define visibility 1\n+\n+#include <bits/stdc++.h> // TODO: this is missing from <bits/extc++.h>\n+#include <bits/extc++.h>\n+\n+int\n+main()\n+{\n+}"}, {"sha": "c7ec27ae5505f7b0d07955320bd68dd9c6d05bbd", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++200x/all_attributes.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fall_attributes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fall_attributes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fall_attributes.cc?ref=85d44192f61187b585b88c26016a4407cfe90ed3", "patch": "@@ -0,0 +1,38 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Ensure the library only uses the __name__ form for attributes.\n+// Don't test 'const' and 'noreturn' because they are reserved anyway.\n+#define abi_tag 1\n+#define always_inline 1\n+#define deprecated 1\n+#define packed 1\n+#define pure 1\n+#define unused 1\n+#define visibility 1\n+\n+#include <bits/stdc++.h> // TODO: this is missing from <bits/extc++.h>\n+#include <codecvt>       // TODO: this is missing from <bits/stdc++.h>\n+#include <bits/extc++.h>\n+\n+int\n+main()\n+{\n+}"}, {"sha": "533a6f14e9a30214e13489544edce6332206976b", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++2014/all_attributes.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fall_attributes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d44192f61187b585b88c26016a4407cfe90ed3/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fall_attributes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B2014%2Fall_attributes.cc?ref=85d44192f61187b585b88c26016a4407cfe90ed3", "patch": "@@ -0,0 +1,38 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++14\" }\n+// { dg-do compile }\n+\n+// Ensure the library only uses the __name__ form for attributes.\n+// Don't test 'const' and 'noreturn' because they are reserved anyway.\n+#define abi_tag 1\n+#define always_inline 1\n+#define deprecated 1\n+#define packed 1\n+#define pure 1\n+#define unused 1\n+#define visibility 1\n+\n+#include <bits/stdc++.h> // TODO: this is missing from <bits/extc++.h>\n+#include <shared_mutex>  // TODO: this is missing from <bits/stdc++.h>\n+#include <bits/extc++.h>\n+\n+int\n+main()\n+{\n+}"}]}