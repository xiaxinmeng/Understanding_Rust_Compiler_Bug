{"sha": "00625faea4cda0dfc67ab80eb96ece62fecc7423", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA2MjVmYWVhNGNkYTBkZmM2N2FiODBlYjk2ZWNlNjJmZWNjNzQyMw==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2008-09-30T15:19:25Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-09-30T15:19:25Z"}, "message": "re PR fortran/36592 (F2003: Procedure pointer in COMMON)\n\n2008-09-30  Janus Weil  <janus@gcc.gnu.org>\n\n        PR fortran/36592\n        * symbol.c (check_conflict): If a symbol in a COMMON block is a\n        procedure, it must be a procedure pointer.\n        (gfc_add_in_common): Symbols in COMMON blocks may be variables or\n        procedure pointers.\n        * trans-types.c (gfc_sym_type): Make procedure pointers in\n        * COMMON\n        blocks work.\n\n\n2008-09-30  Janus Weil  <janus@gcc.gnu.org>\n\n        PR fortran/36592\n        * gfortran.dg/proc_ptr_common_1.f90: New.\n        * gfortran.dg/proc_ptr_common_2.f90: New.\n\nFrom-SVN: r140790", "tree": {"sha": "75cd54d881deff55c9d3b96eaeece2630d5c9711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75cd54d881deff55c9d3b96eaeece2630d5c9711"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00625faea4cda0dfc67ab80eb96ece62fecc7423", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00625faea4cda0dfc67ab80eb96ece62fecc7423", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00625faea4cda0dfc67ab80eb96ece62fecc7423", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00625faea4cda0dfc67ab80eb96ece62fecc7423/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f249018cc269d703667b34af30285b451b20391c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f249018cc269d703667b34af30285b451b20391c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f249018cc269d703667b34af30285b451b20391c"}], "stats": {"total": 89, "additions": 80, "deletions": 9}, "files": [{"sha": "253caa2b8d18532dc550089a82e024e5fe3a9f8e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00625faea4cda0dfc67ab80eb96ece62fecc7423/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00625faea4cda0dfc67ab80eb96ece62fecc7423/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=00625faea4cda0dfc67ab80eb96ece62fecc7423", "patch": "@@ -1,3 +1,13 @@\n+2008-09-30  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/36592\n+\t* symbol.c (check_conflict): If a symbol in a COMMON block is a\n+\tprocedure, it must be a procedure pointer.\n+\t(gfc_add_in_common): Symbols in COMMON blocks may be variables or\n+\tprocedure pointers.\n+\t* trans-types.c (gfc_sym_type): Make procedure pointers in COMMON\n+\tblocks work.\n+\n 2008-09-25  Jerry DeLisle  <jvdelisle@gcc.gnu.org\n \n \tPR fortran/37498"}, {"sha": "42df574ebcc3e8eeade3e7b29e17dccd00c48d14", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00625faea4cda0dfc67ab80eb96ece62fecc7423/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00625faea4cda0dfc67ab80eb96ece62fecc7423/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=00625faea4cda0dfc67ab80eb96ece62fecc7423", "patch": "@@ -636,10 +636,12 @@ check_conflict (symbol_attribute *attr, const char *name, locus *where)\n \t  conf2 (threadprivate);\n \t}\n \n+      if (!attr->proc_pointer)\n+\tconf2 (in_common);\n+\n       switch (attr->proc)\n \t{\n \tcase PROC_ST_FUNCTION:\n-\t  conf2 (in_common);\n \t  conf2 (dummy);\n \t  break;\n \n@@ -649,7 +651,6 @@ check_conflict (symbol_attribute *attr, const char *name, locus *where)\n \n \tcase PROC_DUMMY:\n \t  conf2 (result);\n-\t  conf2 (in_common);\n \t  conf2 (threadprivate);\n \t  break;\n \n@@ -1133,13 +1134,7 @@ gfc_add_in_common (symbol_attribute *attr, const char *name, locus *where)\n \n   /* Duplicate attribute already checked for.  */\n   attr->in_common = 1;\n-  if (check_conflict (attr, name, where) == FAILURE)\n-    return FAILURE;\n-\n-  if (attr->flavor == FL_VARIABLE)\n-    return SUCCESS;\n-\n-  return gfc_add_flavor (attr, FL_VARIABLE, name, where);\n+  return check_conflict (attr, name, where);\n }\n \n "}, {"sha": "c3d2a9180409e59ae881da430ed76c82982c1dd7", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00625faea4cda0dfc67ab80eb96ece62fecc7423/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00625faea4cda0dfc67ab80eb96ece62fecc7423/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=00625faea4cda0dfc67ab80eb96ece62fecc7423", "patch": "@@ -1627,6 +1627,16 @@ gfc_sym_type (gfc_symbol * sym)\n   tree type;\n   int byref;\n \n+  /* Procedure Pointers inside COMMON blocks.  */\n+  if (sym->attr.proc_pointer && sym->attr.in_common)\n+    {\n+      /* Unset proc_pointer as gfc_get_function_type calls gfc_sym_type.  */\n+      sym->attr.proc_pointer = 0;\n+      type = build_pointer_type (gfc_get_function_type (sym));\n+      sym->attr.proc_pointer = 1;\n+      return type;\n+    }\n+\n   if (sym->attr.flavor == FL_PROCEDURE && !sym->attr.function)\n     return void_type_node;\n "}, {"sha": "02eb3b3cd82917a120ac91ab5142adc85c02c873", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00625faea4cda0dfc67ab80eb96ece62fecc7423/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00625faea4cda0dfc67ab80eb96ece62fecc7423/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=00625faea4cda0dfc67ab80eb96ece62fecc7423", "patch": "@@ -1,3 +1,9 @@\n+2008-09-30  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/36592\n+\t* gfortran.dg/proc_ptr_common_1.f90: New.\n+\t* gfortran.dg/proc_ptr_common_2.f90: New.\n+\n 2008-09-30  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* g++.dg/warn/if-empty-1.C: Copy from gcc.dg/if-empty-1.c."}, {"sha": "0cfdec03d5adcfeaf49a4c616b4fefde3bd2dd06", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_common_1.f90", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00625faea4cda0dfc67ab80eb96ece62fecc7423/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_common_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00625faea4cda0dfc67ab80eb96ece62fecc7423/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_common_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_common_1.f90?ref=00625faea4cda0dfc67ab80eb96ece62fecc7423", "patch": "@@ -0,0 +1,30 @@\n+! { dg-do run }\n+\n+! PR fortran/36592\n+!\n+! Procedure Pointers inside COMMON blocks.\n+!\n+! Contributed by Janus Weil <janus@gcc.gnu.org>.\n+\n+subroutine one()\n+  implicit none\n+  common /com/ p1,p2,a,b\n+  procedure(real), pointer :: p1,p2\n+  integer :: a,b\n+  if (a/=5 .or. b/=-9 .or. p1(0.0)/=1.0 .or. p2(0.0)/=0.0) call abort()\n+end subroutine one\n+\n+program main\n+  implicit none\n+  integer :: x,y\n+  intrinsic sin,cos\n+  procedure(real), pointer :: func1\n+  external func2\n+  pointer func2\n+  common /com/ func1,func2,x,y\n+  x = 5\n+  y = -9\n+  func1 => cos\n+  func2 => sin\n+  call one()\n+end program main "}, {"sha": "f401c3a15c379d000681035ae2fc93b4e5ff6257", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_common_2.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00625faea4cda0dfc67ab80eb96ece62fecc7423/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_common_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00625faea4cda0dfc67ab80eb96ece62fecc7423/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_common_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_common_2.f90?ref=00625faea4cda0dfc67ab80eb96ece62fecc7423", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do compile }\n+\n+! PR fortran/36592\n+!\n+! Procedure Pointers inside COMMON blocks.\n+!\n+! Contributed by Tobias Burnus <burnus@gcc.gnu.org>.\n+\n+abstract interface\n+ subroutine foo() bind(C)\n+ end subroutine foo\n+end interface\n+\n+procedure(foo), pointer, bind(C) :: proc\n+common /com/ proc,r\n+\n+common s\n+call s()  ! { dg-error \"PROCEDURE attribute conflicts with COMMON attribute\" }\n+\n+end "}]}