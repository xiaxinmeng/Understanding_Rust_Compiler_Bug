{"sha": "5a33401eabe208e602a94bbb1921ec1b19b1f185", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWEzMzQwMWVhYmUyMDhlNjAyYTk0YmJiMTkyMWVjMWIxOWIxZjE4NQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-04-22T01:32:14Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-04-22T01:32:14Z"}, "message": "re PR ipa/65076 (16% tramp3d-v4.cpp compile time regression)\n\n\tPR ipa/65076\n\t* passes.def (early_optimizations): Add pass_dse.\n\n\t* g++.dg/tree-ssa/pr61034.C: Update template.\n\t* g++.dg/warn/Warray-bounds.C: Harden for DSE.\n\t* gcc.dg/Warray-bounds-11.c: Likewise.\n\t* gcc.dg/Warray-bounds.c: Likewise.\n\nFrom-SVN: r222305", "tree": {"sha": "0cf6448d2193e3d8eab8d2eca4091ff512fb348d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cf6448d2193e3d8eab8d2eca4091ff512fb348d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a33401eabe208e602a94bbb1921ec1b19b1f185", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a33401eabe208e602a94bbb1921ec1b19b1f185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a33401eabe208e602a94bbb1921ec1b19b1f185", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a33401eabe208e602a94bbb1921ec1b19b1f185/comments", "author": null, "committer": null, "parents": [{"sha": "6e37129a8d084acccf4f1ae345def97fe9a6f0d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e37129a8d084acccf4f1ae345def97fe9a6f0d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e37129a8d084acccf4f1ae345def97fe9a6f0d5"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "6959c061a06a230bc401315ad1621c6f466ef2db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a33401eabe208e602a94bbb1921ec1b19b1f185/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a33401eabe208e602a94bbb1921ec1b19b1f185/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a33401eabe208e602a94bbb1921ec1b19b1f185", "patch": "@@ -1,3 +1,8 @@\n+2015-04-21  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/65076\n+\t* passes.def (early_optimizations): Add pass_dse.\n+\n 2015-04-21  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* defaults.h (INSN_REFERENCES_ARE_DELAYED): New definition."}, {"sha": "4c20cdf0dfce1153f2855baf1498a5a084df1678", "filename": "gcc/passes.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a33401eabe208e602a94bbb1921ec1b19b1f185/gcc%2Fpasses.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a33401eabe208e602a94bbb1921ec1b19b1f185/gcc%2Fpasses.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.def?ref=5a33401eabe208e602a94bbb1921ec1b19b1f185", "patch": "@@ -89,6 +89,7 @@ along with GCC; see the file COPYING3.  If not see\n \t  NEXT_PASS (pass_build_ealias);\n \t  NEXT_PASS (pass_fre);\n \t  NEXT_PASS (pass_merge_phi);\n+          NEXT_PASS (pass_dse);\n \t  NEXT_PASS (pass_cd_dce);\n \t  NEXT_PASS (pass_early_ipa_sra);\n \t  NEXT_PASS (pass_tail_recursion);"}, {"sha": "8b2b177e8848d5cf99d7d2ad8b5c3ecc89008a15", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a33401eabe208e602a94bbb1921ec1b19b1f185/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a33401eabe208e602a94bbb1921ec1b19b1f185/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a33401eabe208e602a94bbb1921ec1b19b1f185", "patch": "@@ -1,3 +1,11 @@\n+2015-04-21 Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/65076\n+\t* g++.dg/tree-ssa/pr61034.C: Update template.\n+\t* g++.dg/warn/Warray-bounds.C: Harden for DSE.\n+\t* gcc.dg/Warray-bounds-11.c: Likewise.\n+\t* gcc.dg/Warray-bounds.c: Likewise.\n+\n 2015-04-21 Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/65234"}, {"sha": "91e694eae141a32178127a181c0cde294f87355e", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr61034.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a33401eabe208e602a94bbb1921ec1b19b1f185/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr61034.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a33401eabe208e602a94bbb1921ec1b19b1f185/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr61034.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr61034.C?ref=5a33401eabe208e602a94bbb1921ec1b19b1f185", "patch": "@@ -42,6 +42,6 @@ bool f(I a, I b, I c, I d) {\n // This works only if everything is inlined into 'f'.\n \n // { dg-final { scan-tree-dump-times \";; Function\" 1 \"fre2\" } }\n-// { dg-final { scan-tree-dump-times \"free\" 19 \"fre2\" } }\n+// { dg-final { scan-tree-dump-times \"free\" 18 \"fre2\" } }\n // { dg-final { scan-tree-dump-times \"unreachable\" 11 \"fre2\" } }\n // { dg-final { cleanup-tree-dump \"fre2\" } }"}, {"sha": "574e9de0fea9754742e087585b4655d0820bc651", "filename": "gcc/testsuite/g++.dg/warn/Warray-bounds.C", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a33401eabe208e602a94bbb1921ec1b19b1f185/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a33401eabe208e602a94bbb1921ec1b19b1f185/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds.C?ref=5a33401eabe208e602a94bbb1921ec1b19b1f185", "patch": "@@ -11,6 +11,7 @@ static inline int n(void) {\n \n void g(int *p);\n void h(int p);\n+void bar (void *);\n \n int* f(void) {\n     int b[10];\n@@ -27,6 +28,7 @@ int* f(void) {\n     a[ 9] = 0;\n     a[10] = 0;             /* { dg-warning \"array subscript\" } */\n     a[11] = 0;             /* { dg-warning \"array subscript\" } */\n+    bar (a);\n     a[2 * n() - 11] = 1;    /* { dg-warning \"array subscript\" } */\n     a[2 * n() - 10] = 1;\n     a[2 * n() -  1] = 1;\n@@ -38,6 +40,7 @@ int* f(void) {\n     b[ 9] = 0;\n     b[10] = 0;             /* { dg-warning \"array subscript\" } */\n     b[11] = 0;             /* { dg-warning \"array subscript\" } */\n+    bar (b);\n     b[2 * n() - 11] = 1;    /* { dg-warning \"array subscript\" } */\n     b[2 * n() - 10] = 1;\n     b[2 * n() -  1] = 1;\n@@ -49,6 +52,7 @@ int* f(void) {\n     c.c[ 9] = 0;\n     c.c[10] = 0;           /* { dg-warning \"array subscript\" } */\n     c.c[11] = 0;           /* { dg-warning \"array subscript\" } */\n+    bar (&c);\n     c.c[2 * n() - 11] = 1;  /* { dg-warning \"array subscript\" } */\n     c.c[2 * n() - 10] = 1;\n     c.c[2 * n() -  1] = 1;\n@@ -87,6 +91,8 @@ int* f(void) {\n     if (-1 >= 0)\n        c.c[-1] = 0;\n \n+    bar (b);\n+    bar (&c);\n     return a;\n }\n "}, {"sha": "92e92c070ea6a114f54b91869788682b00b4f3bc", "filename": "gcc/testsuite/gcc.dg/Warray-bounds-11.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a33401eabe208e602a94bbb1921ec1b19b1f185/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a33401eabe208e602a94bbb1921ec1b19b1f185/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-11.c?ref=5a33401eabe208e602a94bbb1921ec1b19b1f185", "patch": "@@ -92,5 +92,11 @@ void foo(int (*a)[3])\n \tbar(c);\n \tbar(e);\n \tbar(f.f);\n+\tbar(h1->j);\n+\tbar(h3->j);\n+\tbar(h3b->j);\n+\tbar(h1b->j);\n+\tbar(h->j);\n+\tbar(h0->j);\n }\n "}, {"sha": "925f562bcd0933076523b58c166fd87d926c8086", "filename": "gcc/testsuite/gcc.dg/Warray-bounds.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a33401eabe208e602a94bbb1921ec1b19b1f185/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a33401eabe208e602a94bbb1921ec1b19b1f185/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds.c?ref=5a33401eabe208e602a94bbb1921ec1b19b1f185", "patch": "@@ -11,6 +11,8 @@ static inline int n(void) {\n void g(int *p);\n void h(int p);\n \n+void bar (void *);\n+\n int* f(void) {\n     int b[10];\n     int i;\n@@ -26,17 +28,20 @@ int* f(void) {\n     a[ 9] = 0;\n     a[10] = 0;             /* { dg-warning \"6:array subscript\" } */\n     a[11] = 0;             /* { dg-warning \"6:array subscript\" } */\n+    bar (a);\n     a[2 * n() - 11] = 1;    /* { dg-warning \"6:array subscript\" } */\n     a[2 * n() - 10] = 1;\n     a[2 * n() -  1] = 1;\n     a[2 * n() -  0] = 1;    /* { dg-warning \"6:array subscript\" } */\n+    bar (a);\n \n     b[-1] = 0;             /* { dg-warning \"6:array subscript\" } */\n     b[ 0] = 0;\n     b[ 1] = 0;\n     b[ 9] = 0;\n     b[10] = 0;             /* { dg-warning \"6:array subscript\" } */\n     b[11] = 0;             /* { dg-warning \"6:array subscript\" } */\n+    bar (b);\n     b[2 * n() - 11] = 1;    /* { dg-warning \"6:array subscript\" } */\n     b[2 * n() - 10] = 1;\n     b[2 * n() -  1] = 1;\n@@ -48,6 +53,7 @@ int* f(void) {\n     c.c[ 9] = 0;\n     c.c[10] = 0;           /* { dg-warning \"8:array subscript\" } */\n     c.c[11] = 0;           /* { dg-warning \"8:array subscript\" } */\n+    bar (&c);\n     c.c[2 * n() - 11] = 1;  /* { dg-warning \"8:array subscript\" } */\n     c.c[2 * n() - 10] = 1;\n     c.c[2 * n() -  1] = 1;\n@@ -88,6 +94,8 @@ int* f(void) {\n     for (i = 20; i < 30; ++i)\n              a[i] = 1;       /* { dg-warning \"15:array subscript\" } */\n \n+    bar (b);\n+    bar (&c);\n     return a;\n }\n "}]}