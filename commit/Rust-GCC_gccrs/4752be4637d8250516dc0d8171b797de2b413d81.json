{"sha": "4752be4637d8250516dc0d8171b797de2b413d81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc1MmJlNDYzN2Q4MjUwNTE2ZGMwZDgxNzFiNzk3ZGUyYjQxM2Q4MQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2017-07-03T07:21:34Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2017-07-03T07:21:34Z"}, "message": "Don't tail-merge blocks from different loops\n\n2017-07-03  Tom de Vries  <tom@codesourcery.com>\n\n\tPR tree-optimization/81192\n\t* tree-ssa-tail-merge.c (same_succ_hash): Use bb->loop_father->num in\n\thash.\n\t(same_succ::equal): Don't find bbs to be equal if bb->loop_father\n\tdiffers.\n\t(find_same_succ_bb): Remove obsolete test on bb->loop_father->latch.\n\n\t* gcc.dg/pr81192.c: Update.\n\nFrom-SVN: r249894", "tree": {"sha": "f8f4d7078d0922fe65de98e7f897120309acaf7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8f4d7078d0922fe65de98e7f897120309acaf7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4752be4637d8250516dc0d8171b797de2b413d81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4752be4637d8250516dc0d8171b797de2b413d81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4752be4637d8250516dc0d8171b797de2b413d81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4752be4637d8250516dc0d8171b797de2b413d81/comments", "author": null, "committer": null, "parents": [{"sha": "0bbfd5540d15befe675f8bac6a5aa55df9064436", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bbfd5540d15befe675f8bac6a5aa55df9064436", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bbfd5540d15befe675f8bac6a5aa55df9064436"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "18f23c09f3166928696c155b3f75ba4e0a5bf721", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4752be4637d8250516dc0d8171b797de2b413d81/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4752be4637d8250516dc0d8171b797de2b413d81/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4752be4637d8250516dc0d8171b797de2b413d81", "patch": "@@ -1,3 +1,12 @@\n+2017-07-03  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/81192\n+\t* tree-ssa-tail-merge.c (same_succ_hash): Use bb->loop_father->num in\n+\thash.\n+\t(same_succ::equal): Don't find bbs to be equal if bb->loop_father\n+\tdiffers.\n+\t(find_same_succ_bb): Remove obsolete test on bb->loop_father->latch.\n+\n 2017-07-03  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/81192"}, {"sha": "12d441eb0109c1341944d23651769b9461654585", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4752be4637d8250516dc0d8171b797de2b413d81/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4752be4637d8250516dc0d8171b797de2b413d81/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4752be4637d8250516dc0d8171b797de2b413d81", "patch": "@@ -1,3 +1,8 @@\n+2017-07-03  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/81192\n+\t* gcc.dg/pr81192.c: Update.\n+\n 2017-07-03  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/81192"}, {"sha": "8b3a77a60612b13374bb2792cdf4f8b739d6b0a3", "filename": "gcc/testsuite/gcc.dg/pr81192.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4752be4637d8250516dc0d8171b797de2b413d81/gcc%2Ftestsuite%2Fgcc.dg%2Fpr81192.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4752be4637d8250516dc0d8171b797de2b413d81/gcc%2Ftestsuite%2Fgcc.dg%2Fpr81192.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr81192.c?ref=4752be4637d8250516dc0d8171b797de2b413d81", "patch": "@@ -19,4 +19,4 @@ fn2 (void)\n       ;\n }\n \n-/* { dg-final { scan-tree-dump-times \"(?n)find_duplicates: <bb .*> duplicate of <bb .*>\" 1 \"pre\" } } */\n+/* { dg-final { scan-tree-dump-not \"(?n)find_duplicates: <bb .*> duplicate of <bb .*>\" \"pre\" } } */"}, {"sha": "6fa4e5b2ad91805bd91c821f15f3242d38a93159", "filename": "gcc/tree-ssa-tail-merge.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4752be4637d8250516dc0d8171b797de2b413d81/gcc%2Ftree-ssa-tail-merge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4752be4637d8250516dc0d8171b797de2b413d81/gcc%2Ftree-ssa-tail-merge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-tail-merge.c?ref=4752be4637d8250516dc0d8171b797de2b413d81", "patch": "@@ -479,6 +479,8 @@ same_succ_hash (const same_succ *e)\n   hstate.add_int (size);\n   BB_SIZE (bb) = size;\n \n+  hstate.add_int (bb->loop_father->num);\n+\n   for (i = 0; i < e->succ_flags.length (); ++i)\n     {\n       flags = e->succ_flags[i];\n@@ -568,6 +570,9 @@ same_succ::equal (const same_succ *e1, const same_succ *e2)\n   if (BB_SIZE (bb1) != BB_SIZE (bb2))\n     return 0;\n \n+  if (bb1->loop_father != bb2->loop_father)\n+    return 0;\n+\n   gsi1 = gsi_start_nondebug_bb (bb1);\n   gsi2 = gsi_start_nondebug_bb (bb2);\n   gsi_advance_fw_nondebug_nonlocal (&gsi1);\n@@ -695,15 +700,7 @@ find_same_succ_bb (basic_block bb, same_succ **same_p)\n   edge_iterator ei;\n   edge e;\n \n-  if (bb == NULL\n-      /* Be conservative with loop structure.  It's not evident that this test\n-\t is sufficient.  Before tail-merge, we've just called\n-\t loop_optimizer_finalize, and LOOPS_MAY_HAVE_MULTIPLE_LATCHES is now\n-\t set, so there's no guarantee that the loop->latch value is still valid.\n-\t But we assume that, since we've forced LOOPS_HAVE_SIMPLE_LATCHES at the\n-\t start of pre, we've kept that property intact throughout pre, and are\n-\t keeping it throughout tail-merge using this test.  */\n-      || bb->loop_father->latch == bb)\n+  if (bb == NULL)\n     return;\n   bitmap_set_bit (same->bbs, bb->index);\n   FOR_EACH_EDGE (e, ei, bb->succs)"}]}