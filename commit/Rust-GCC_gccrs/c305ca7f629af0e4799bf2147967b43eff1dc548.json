{"sha": "c305ca7f629af0e4799bf2147967b43eff1dc548", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMwNWNhN2Y2MjlhZjBlNDc5OWJmMjE0Nzk2N2I0M2VmZjFkYzU0OA==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-10-14T08:45:17Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-10-14T08:45:17Z"}, "message": "AVX-512. 70/n. Add vpmaxmin.\n\ngcc/\n\t* config/i386/sse.md\n\t(define_insn \"*sse4_1_<code><mode>3<mask_name>\"): Add masking.\n\t(define_insn \"*sse4_1_<code><mode>3<mask_name>\"): Ditto.\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r216187", "tree": {"sha": "56dd3dd7412f8d99dcb056bd681c56cf1363854c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56dd3dd7412f8d99dcb056bd681c56cf1363854c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c305ca7f629af0e4799bf2147967b43eff1dc548", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c305ca7f629af0e4799bf2147967b43eff1dc548", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c305ca7f629af0e4799bf2147967b43eff1dc548", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c305ca7f629af0e4799bf2147967b43eff1dc548/comments", "author": null, "committer": null, "parents": [{"sha": "cf25c30945764f5b0cbdaccb53980bb7132e75bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf25c30945764f5b0cbdaccb53980bb7132e75bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf25c30945764f5b0cbdaccb53980bb7132e75bc"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "351615149c3f3511bf1a5696a54d872606c3bf16", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c305ca7f629af0e4799bf2147967b43eff1dc548/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c305ca7f629af0e4799bf2147967b43eff1dc548/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c305ca7f629af0e4799bf2147967b43eff1dc548", "patch": "@@ -1,3 +1,16 @@\n+2014-10-14  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(define_insn \"*sse4_1_<code><mode>3<mask_name>\"): Add masking.\n+\t(define_insn \"*sse4_1_<code><mode>3<mask_name>\"): Ditto.\n+\n 2014-10-14  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "1de21e4b687ffd988c0c1c724165c4b4c6f4f497", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c305ca7f629af0e4799bf2147967b43eff1dc548/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c305ca7f629af0e4799bf2147967b43eff1dc548/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=c305ca7f629af0e4799bf2147967b43eff1dc548", "patch": "@@ -10096,15 +10096,17 @@\n     }\n })\n \n-(define_insn \"*sse4_1_<code><mode>3\"\n-  [(set (match_operand:VI14_128 0 \"register_operand\" \"=x,x\")\n+(define_insn \"*sse4_1_<code><mode>3<mask_name>\"\n+  [(set (match_operand:VI14_128 0 \"register_operand\" \"=x,v\")\n \t(smaxmin:VI14_128\n-\t  (match_operand:VI14_128 1 \"nonimmediate_operand\" \"%0,x\")\n-\t  (match_operand:VI14_128 2 \"nonimmediate_operand\" \"xm,xm\")))]\n-  \"TARGET_SSE4_1 && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+\t  (match_operand:VI14_128 1 \"nonimmediate_operand\" \"%0,v\")\n+\t  (match_operand:VI14_128 2 \"nonimmediate_operand\" \"xm,vm\")))]\n+  \"TARGET_SSE4_1\n+   && <mask_mode512bit_condition>\n+   && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n   \"@\n    p<maxmin_int><ssemodesuffix>\\t{%2, %0|%0, %2}\n-   vp<maxmin_int><ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+   vp<maxmin_int><ssemodesuffix>\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n   [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"sseiadd\")\n    (set_attr \"prefix_extra\" \"1,*\")\n@@ -10177,15 +10179,17 @@\n     }\n })\n \n-(define_insn \"*sse4_1_<code><mode>3\"\n-  [(set (match_operand:VI24_128 0 \"register_operand\" \"=x,x\")\n+(define_insn \"*sse4_1_<code><mode>3<mask_name>\"\n+  [(set (match_operand:VI24_128 0 \"register_operand\" \"=x,v\")\n \t(umaxmin:VI24_128\n-\t  (match_operand:VI24_128 1 \"nonimmediate_operand\" \"%0,x\")\n-\t  (match_operand:VI24_128 2 \"nonimmediate_operand\" \"xm,xm\")))]\n-  \"TARGET_SSE4_1 && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+\t  (match_operand:VI24_128 1 \"nonimmediate_operand\" \"%0,v\")\n+\t  (match_operand:VI24_128 2 \"nonimmediate_operand\" \"xm,vm\")))]\n+  \"TARGET_SSE4_1\n+   && <mask_mode512bit_condition>\n+   && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n   \"@\n    p<maxmin_int><ssemodesuffix>\\t{%2, %0|%0, %2}\n-   vp<maxmin_int><ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+   vp<maxmin_int><ssemodesuffix>\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n   [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"sseiadd\")\n    (set_attr \"prefix_extra\" \"1,*\")"}]}