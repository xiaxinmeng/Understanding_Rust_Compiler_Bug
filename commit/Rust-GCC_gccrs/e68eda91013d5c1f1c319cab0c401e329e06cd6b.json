{"sha": "e68eda91013d5c1f1c319cab0c401e329e06cd6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY4ZWRhOTEwMTNkNWMxZjFjMzE5Y2FiMGM0MDFlMzI5ZTA2Y2Q2Yg==", "commit": {"author": {"name": "Philip Blundell", "email": "pb@nexus.co.uk", "date": "1999-09-15T14:27:19Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "1999-09-15T14:27:19Z"}, "message": "Fix profiling support and unique section support.\n\nFrom-SVN: r29436", "tree": {"sha": "bf9b8902c1a6be7c764efbf82ee15bee6dcdffbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf9b8902c1a6be7c764efbf82ee15bee6dcdffbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e68eda91013d5c1f1c319cab0c401e329e06cd6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68eda91013d5c1f1c319cab0c401e329e06cd6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e68eda91013d5c1f1c319cab0c401e329e06cd6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68eda91013d5c1f1c319cab0c401e329e06cd6b/comments", "author": null, "committer": null, "parents": [{"sha": "23fb21ff10deb6f32e430d9924c30b14a2d3a022", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23fb21ff10deb6f32e430d9924c30b14a2d3a022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23fb21ff10deb6f32e430d9924c30b14a2d3a022"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "d4bc5495e36c31f8b1f22f8abf4b9ea4f5b9a0b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68eda91013d5c1f1c319cab0c401e329e06cd6b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68eda91013d5c1f1c319cab0c401e329e06cd6b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e68eda91013d5c1f1c319cab0c401e329e06cd6b", "patch": "@@ -1,3 +1,11 @@\n+Wed Sep 15 15:23:28 1999  Philip Blundell  <pb@nexus.co.uk>\n+\n+\t* config/arm/linux-elf.h (MAKE_DECL_ONE_ONLY): Copy definition\n+\tfrom config/svr4.h.\n+\t(UNIQUE_SECTION_P, UNIQUE_SECTION): Likewise.\n+\t(FUNCTION_PROFILER): Redefine appropriately for Linux.\n+\t(CC1_SPEC): Likewise.\n+\n Wed Sep 15 10:09:48 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* genattr.c (main): Add extern prototype.  Call return, not exit."}, {"sha": "f7bd3b29fa2ff5998b5d12ab13d7361b13e26185", "filename": "gcc/config/arm/linux-elf.h", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68eda91013d5c1f1c319cab0c401e329e06cd6b/gcc%2Fconfig%2Farm%2Flinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68eda91013d5c1f1c319cab0c401e329e06cd6b/gcc%2Fconfig%2Farm%2Flinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-elf.h?ref=e68eda91013d5c1f1c319cab0c401e329e06cd6b", "patch": "@@ -224,6 +224,44 @@ const_section ()\t\t\t\t\t\t\t\\\n     const_section ();\t\t\t\t\t\t\t\\\n }\n \n+#define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n+#define UNIQUE_SECTION_P(DECL)   (DECL_ONE_ONLY (DECL))\n+\n+#define UNIQUE_SECTION(DECL, RELOC)\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      int len;\t\t\t\t\t\t\t\\\n+      char * name;\t\t\t\t\t\t\\\n+      char * string;\t\t\t\t\t\t\\\n+      char * prefix;\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+      name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (DECL));\t\\\n+      \t\t\t\t\t\t\t\t\\\n+      if (! DECL_ONE_ONLY (DECL))\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  prefix = \".\";                                         \\\n+\t  if (TREE_CODE (DECL) == FUNCTION_DECL)\t\t\\\n+\t    prefix = \".text.\";\t\t\t\t\t\\\n+\t  else if (DECL_READONLY_SECTION (DECL, RELOC))\t\t\\\n+\t    prefix = \".rodata.\";\t\t\t\t\\\n+\t  else\t\t\t\t\t\t\t\\\n+\t    prefix = \".data.\";\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      else if (TREE_CODE (DECL) == FUNCTION_DECL)\t\t\\\n+\tprefix = \".gnu.linkonce.t.\";\t\t\t\t\\\n+      else if (DECL_READONLY_SECTION (DECL, RELOC))\t\t\\\n+\tprefix = \".gnu.linkonce.r.\";\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\\\n+\tprefix = \".gnu.linkonce.d.\";\t\t\t\t\\\n+      \t\t\t\t\t\t\t\t\\\n+      len = strlen (name) + strlen (prefix);\t\t\t\\\n+      string = alloca (len + 1);\t\t\t\t\\\n+      sprintf (string, \"%s%s\", prefix, name);\t\t\t\\\n+      \t\t\t\t\t\t\t\t\\\n+      DECL_SECTION_NAME (DECL) = build_string (len, string);\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  while (0)\n+\n /* A C statement or statements to switch to the appropriate\n    section for output of RTX in mode MODE.  RTX is some kind\n    of constant in RTL.  The argument MODE is redundant except\n@@ -267,3 +305,13 @@ const_section ()\t\t\t\t\t\t\t\\\n /* NWFPE always understands FPA instructions.  */\n #undef  FP_DEFAULT\n #define FP_DEFAULT FP_SOFT3\n+\n+/* Call the function profiler with a given profile label.  */\n+#undef  FUNCTION_PROFILER\n+#define FUNCTION_PROFILER(STREAM, LABELNO)  \t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  fprintf (STREAM, \"\\tbl\\tmcount%s\\n\", NEED_PLT_RELOC ? \"(PLT)\" : \"\");\t\\\n+}\n+\n+#undef  CC1_SPEC\n+#define CC1_SPEC \"%{profile:-p}\""}]}