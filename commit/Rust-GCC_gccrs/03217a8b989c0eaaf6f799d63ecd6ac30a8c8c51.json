{"sha": "03217a8b989c0eaaf6f799d63ecd6ac30a8c8c51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMyMTdhOGI5ODljMGVhYWY2Zjc5OWQ2M2VjZDZhYzMwYThjOGM1MQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-02-01T00:23:18Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-02-01T00:23:18Z"}, "message": "(sched_analyze_insn): Add use dependencies for registers\nmentioned in REG_DEAD notes.\n\nFrom-SVN: r6453", "tree": {"sha": "1068f9082cd755aa909a3aac5c8baa9165dd906b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1068f9082cd755aa909a3aac5c8baa9165dd906b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03217a8b989c0eaaf6f799d63ecd6ac30a8c8c51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03217a8b989c0eaaf6f799d63ecd6ac30a8c8c51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03217a8b989c0eaaf6f799d63ecd6ac30a8c8c51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03217a8b989c0eaaf6f799d63ecd6ac30a8c8c51/comments", "author": null, "committer": null, "parents": [{"sha": "80901ed81879564eedb79cc92bb563a708fde713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80901ed81879564eedb79cc92bb563a708fde713", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80901ed81879564eedb79cc92bb563a708fde713"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "ea10959a0ddfb3288a1eb89da495b669ea68fdc3", "filename": "gcc/sched.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03217a8b989c0eaaf6f799d63ecd6ac30a8c8c51/gcc%2Fsched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03217a8b989c0eaaf6f799d63ecd6ac30a8c8c51/gcc%2Fsched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched.c?ref=03217a8b989c0eaaf6f799d63ecd6ac30a8c8c51", "patch": "@@ -2024,6 +2024,27 @@ sched_analyze_insn (x, insn)\n   else\n     sched_analyze_2 (x, insn);\n \n+  /* After reload, it is possible for an instruction to have a REG_DEAD note\n+     for a register that actually dies a few instructions earlier.  For\n+     example, this can happen with SECONDARY_MEMORY_NEEDED reloads.\n+     In this case, we must consider the insn to use the register mentioned\n+     in the REG_DEAD note.  Otherwise, we may accidentally move this insn\n+     after another insn that sets the register, thus getting obviously invalid\n+     rtl.  This confuses reorg which believes that REG_DEAD notes are still\n+     meaningful.\n+\n+     ??? We would get better code if we fixed reload to put the REG_DEAD\n+     notes in the right places, but that may not be worth the effort.  */\n+\n+  if (reload_completed)\n+    {\n+      rtx note;\n+\n+      for (note = REG_NOTES (insn); note; note = XEXP (note, 1))\n+\tif (REG_NOTE_KIND (note) == REG_DEAD)\n+\t  sched_analyze_2 (XEXP (note, 0), insn);\n+    }\n+\n   /* Handle function calls and function returns created by the epilogue\n      threading code.  */\n   if (GET_CODE (insn) == CALL_INSN || GET_CODE (insn) == JUMP_INSN)"}]}