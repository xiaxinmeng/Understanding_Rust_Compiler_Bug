{"sha": "5230c3d825aee39da28c73705bc5852fae9f92a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIzMGMzZDgyNWFlZTM5ZGEyOGM3MzcwNWJjNTg1MmZhZTlmOTJhNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-11-14T07:54:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-11-14T07:54:50Z"}, "message": "Implement P0217R3 - C++17 structured bindings\n\n\tImplement P0217R3 - C++17 structured bindings\n\t* g++.dg/cpp1z/decomp1.C: New test.\n\t* g++.dg/cpp1z/decomp2.C: New test.\n\t* g++.dg/cpp1z/decomp3.C: New test.\n\t* g++.dg/cpp1z/decomp4.C: New test.\n\t* g++.dg/cpp1z/decomp5.C: New test.\n\t* g++.dg/cpp1z/decomp6.C: New test.\n\t* g++.dg/cpp1z/decomp7.C: New test.\n\t* g++.dg/cpp1z/decomp8.C: New test.\n\t* g++.dg/cpp1z/decomp9.C: New test.\n\t* g++.dg/cpp1z/decomp10.C: New test.\n\nCo-Authored-By: Jason Merrill <jason@redhat.com>\n\nFrom-SVN: r242378", "tree": {"sha": "070ac00f0eeede86cb6f63f03c2212f258bce831", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/070ac00f0eeede86cb6f63f03c2212f258bce831"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5230c3d825aee39da28c73705bc5852fae9f92a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5230c3d825aee39da28c73705bc5852fae9f92a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5230c3d825aee39da28c73705bc5852fae9f92a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5230c3d825aee39da28c73705bc5852fae9f92a6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70f40fea6a317d7be82d1f02defb59381c7752e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f40fea6a317d7be82d1f02defb59381c7752e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70f40fea6a317d7be82d1f02defb59381c7752e7"}], "stats": {"total": 577, "additions": 577, "deletions": 0}, "files": [{"sha": "385a2b65361b18c17f6d5fedfa23d065446ac3e0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5230c3d825aee39da28c73705bc5852fae9f92a6", "patch": "@@ -1,3 +1,18 @@\n+2016-11-14  Jakub Jelinek  <jakub@redhat.com>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\tImplement P0217R3 - C++17 structured bindings\n+\t* g++.dg/cpp1z/decomp1.C: New test.\n+\t* g++.dg/cpp1z/decomp2.C: New test.\n+\t* g++.dg/cpp1z/decomp3.C: New test.\n+\t* g++.dg/cpp1z/decomp4.C: New test.\n+\t* g++.dg/cpp1z/decomp5.C: New test.\n+\t* g++.dg/cpp1z/decomp6.C: New test.\n+\t* g++.dg/cpp1z/decomp7.C: New test.\n+\t* g++.dg/cpp1z/decomp8.C: New test.\n+\t* g++.dg/cpp1z/decomp9.C: New test.\n+\t* g++.dg/cpp1z/decomp10.C: New test.\n+\n 2016-11-13  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \t* g++.dg/torture/pr78268.C: New test."}, {"sha": "98f60905e1ad8018b845e7c91de4b4a693e50831", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp1.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp1.C?ref=5230c3d825aee39da28c73705bc5852fae9f92a6", "patch": "@@ -0,0 +1,35 @@\n+// { dg-do run { target c++11 } }\n+// { dg-options \"\" }\n+\n+int a[2] = { 1, 2 };\n+struct S { int a; signed char b; float c; } s = { 6, 7, 8.0f };\n+\n+int\n+main ()\n+{\n+  auto & [ c, d ] = a;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [ e, f ] = a;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [ g, h, i ] = s;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto & [ j, k, l ] = s;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  c++;\n+  d++;\n+  e += 6;\n+  f += 7;\n+  g++;\n+  h++;\n+  j += 10;\n+  k += 11;\n+  if (c != 2 || &c != &a[0]\n+      || d != 3 || &d != &a[1]\n+      || e != 7 || &e == &a[0]\n+      || f != 9 || &f == &a[1]\n+      || g != 7 || &g == &s.a\n+      || h != 8 || &h == &s.b\n+      || i != 8.0f || &i == &s.c\n+      || j != 16 || &j != &s.a\n+      || k != 18 || &k != &s.b\n+      || l != 8.0f || &l != &s.c\n+      || a[0] != 2 || a[1] != 3\n+      || s.a != 16 || s.b != 18 || s.c != 8.0f)\n+    __builtin_abort ();\n+}"}, {"sha": "316cea988118474fbf15f43ce5f95acc7b4df899", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp10.C", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp10.C?ref=5230c3d825aee39da28c73705bc5852fae9f92a6", "patch": "@@ -0,0 +1,48 @@\n+// { dg-options -std=c++1z }\n+\n+namespace std {\n+  template<typename T> struct tuple_size;\n+  template<int, typename> struct tuple_element;\n+}\n+\n+struct A1 { int i,j; } a1;\n+template<> struct std::tuple_size<A1> {  };\n+void f1() { auto [ x ] = a1; }\t// { dg-error \"decomposes into 2\" }\n+\n+struct A2 { int i,j; } a2;\n+template<> struct std::tuple_size<A2> { enum { value = 5 }; };\n+void f2() { auto [ x ] = a2; }\t// { dg-error \"decomposes into 5\" }\n+\n+struct A3 { int i,j; } a3;\n+template<> struct std::tuple_size<A3> { enum { value = 1 }; };\n+void f3() { auto [ x ] = a3; }\t// { dg-error \"get\" }\n+\n+struct A3a { int i,j; int get(); } a3a;\n+template<> struct std::tuple_size<A3a> { enum { value = 1 }; };\n+void f3a() { auto [ x ] = a3a; }\t// { dg-error \"get<0>\" }\n+\n+struct A3b { int i,j; } a3b;\n+int get(A3b&&);\n+template<> struct std::tuple_size<A3b> { enum { value = 1 }; };\n+void f3b() { auto [ x ] = a3b; }\t// { dg-error \"get<0>\" }\n+\n+struct A4 {\n+  int ar[3];\n+  template <int I> int& get() { return ar[I]; }\n+} a4;\n+template<> struct std::tuple_size<A4> { enum { value = 3 }; };\n+template <int I> \n+void f4() { auto [ x, y, z ] = a4; }\t// { dg-error \"tuple_element\" }\n+\n+struct A5 { } a5;\n+template <int I> int& get(A5&& a);\n+template<> struct std::tuple_size<A5> { enum { value = 3 }; };\n+template <int I> \n+void f5() { auto [ x, y, z ] = a5; }\t// { dg-error \"tuple_element\" }\n+\n+struct A6 { } a6;\n+template <int I> int& get(A6&& a);\n+template<> struct std::tuple_size<A6> { enum { value = 3 }; };\n+template<> struct std::tuple_element<0, A6> { };\n+template <int I> \n+void f6() { auto [ x, y, z ] = a6; }\t// { dg-error \"no type named .type\" }"}, {"sha": "5831fc74940f112587eb6e3246b7dcd83ea34bf8", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp2.C", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp2.C?ref=5230c3d825aee39da28c73705bc5852fae9f92a6", "patch": "@@ -0,0 +1,54 @@\n+// { dg-do run { target c++11 } }\n+// { dg-options \"\" }\n+\n+typedef int V __attribute__((vector_size (4 * sizeof (int))));\n+V a = (V) { 1, 2, 3, 4 };\n+__complex__ double b = 5.0 + 6.0i;\n+__complex__ int c = 7 + 8i;\n+\n+int\n+main ()\n+{\n+  auto & [ d, e, f, g ] = a;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [ h, i, j, k ] = a;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [ l, m ] = b;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto & [ n, o ] = b;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto & [ p, q ] = c;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [ r, s ] = c;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  d += 10;\n+  e += 11;\n+  f += 12;\n+  g += 13;\n+  h += 14;\n+  i += 15;\n+  j += 16;\n+  k += 17;\n+  l = l * 2.;\n+  m = m * 3.;\n+  n = n * 3.;\n+  o = o * 2.;\n+  p += 18;\n+  q += 19;\n+  r += 22;\n+  s += 23;\n+  if (d != 11 || &d != &a[0]\n+      || e != 13 || &e != &a[1]\n+      || f != 15 || &f != &a[2]\n+      || g != 17 || &g != &a[3]\n+      || h != 15 || &h == &a[0]\n+      || i != 17 || &i == &a[1]\n+      || j != 19 || &j == &a[2]\n+      || k != 21 || &k == &a[3]\n+      || l != 10.0 || &l == &__real__ b\n+      || m != 18.0 || &m == &__imag__ b\n+      || n != 15.0 || &n != &__real__ b\n+      || o != 12.0 || &o != &__imag__ b\n+      || p != 25 || &p != &__real__ c\n+      || q != 27 || &q != &__imag__ c\n+      || r != 29 || &r == &__real__ c\n+      || s != 31 || &s == &__imag__ c\n+      || a[0] != 11 || a[1] != 13 || a[2] != 15 || a[3] != 17\n+      || b != 15.0 + 12.0i\n+      || c != 25 + 27i)\n+    __builtin_abort ();\n+}"}, {"sha": "a739d3ace375fd811f220a6c8b1e5f119df45e4e", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp3.C", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp3.C?ref=5230c3d825aee39da28c73705bc5852fae9f92a6", "patch": "@@ -0,0 +1,66 @@\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+struct A { int a, b; float c; };\n+A &bar ();\n+struct B { int d; };\n+B baz ();\n+\n+void\n+test (A &b, B c)\n+{\n+  int && [ d ] = c;\t\t\t// { dg-error \"decomposition declaration cannot be declared with type 'int'\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  char & [ e, f, ff ] { b };\t\t// { dg-error \"decomposition declaration cannot be declared with type 'char'\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  auto&[g,h,i]=b;\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } }\n+  decltype (auto) [ j ] = c;\t\t// { dg-error \"decomposition declaration cannot be declared with type 'decltype.auto.'\" \"\" { target c++14 } }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t// { dg-error \"expected primary-expression before 'decltype'\" \"\" { target c++11_down } .-2 }\n+  auto & & && & [ m, n, o ] = b;\t// { dg-error \"multiple ref-qualifiers\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  constexpr auto [ p ] = c;\t\t// { dg-error \"decomposition declaration cannot be declared 'constexpr'\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  friend auto [ q ] = c;\t\t// { dg-error \"'friend' used outside of class\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  typedef auto [ r ] = c;\t\t// { dg-error \"decomposition declaration cannot be declared 'typedef'\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  inline auto [ s ] = c;\t\t// { dg-error \"decomposition declaration cannot be declared 'inline'\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  __restrict auto [ t ] = c;\t\t// { dg-error \"invalid use of 'restrict'\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  long long auto [ u ] = c;\t\t// { dg-error \"'long long' invalid for 'decomposition'\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  virtual auto [ v ] = c;\t\t// { dg-error \"'virtual' outside class declaration\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  explicit auto [ w ] = c;\t\t// { dg-error \"'explicit' outside class declaration\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  static auto [ x ] = c;\t\t// { dg-error \"decomposition declaration cannot be declared 'static'\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  extern auto [ y ] { c };\t\t// { dg-error \"decomposition declaration cannot be declared 'extern'\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+}\n+\n+void\n+test2 (auto & [ p ] = bar ())\t\t// { dg-error \"'p' was not declared in this scope\" }\n+{\n+}\n+\n+int arr[4];\n+\n+void\n+test3 (A &b, B c)\n+{\n+  auto [ d, e, f ] = arr;\t\t// { dg-error \"only 3 names provided while 'int .4.' decomposes into 4 elements\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  auto & [ g, h, i, j, k ] = arr;\t// { dg-error \"5 names provided while 'int .4.' decomposes into 4 elements\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  auto [ l, m ] = b;\t\t\t// { dg-error \"only 2 names provided while 'A' decomposes into 3 elements\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  auto & [ n, o, p, q ] = b;\t\t// { dg-error \"4 names provided while 'A' decomposes into 3 elements\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  auto [] { c };\t\t\t// { dg-error \"empty decomposition declaration\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  auto [ r, s ] = c;\t\t\t// { dg-error \"2 names provided while 'B' decomposes into 1 elements\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+}"}, {"sha": "95a02ec27df9f337771d575117bd7fa24396dd34", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp4.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp4.C?ref=5230c3d825aee39da28c73705bc5852fae9f92a6", "patch": "@@ -0,0 +1,32 @@\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+struct A { int a; struct { int b; }; };\n+struct B { int a; union { int c; long d; }; };\n+struct C { int a; private: int b; };\n+struct D { int a; private: static int b; };\n+struct E { protected: int a; };\n+struct F { int a; };\n+struct G : public F { int b; };\n+struct H { int b; };\n+struct I : public F, H {};\n+\n+void\n+test (A &a, B &b, C &c, D &d, E &e, F &f, G &g, H &h, I &i)\n+{\n+  auto [ j ] = a;\t\t\t// { dg-error \"cannot decompose class type 'A' because it has an anonymous struct member\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  auto [ k ] { b };\t\t\t// { dg-error \"cannot decompose class type 'B' because it has an anonymous union member\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  auto [ l ] = c;\t\t\t// { dg-error \"cannot decompose non-public member 'C::b' of 'C'\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  auto [ m ] = d;\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } }\n+  auto [ n ] { e };\t\t\t// { dg-error \"cannot decompose non-public member 'E::a' of 'E'\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  auto [ o ] { f };\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } }\n+  auto & [ p ] { g };\t\t\t// { dg-error \"cannot decompose class type 'G': both it and its base class 'F' have non-static data members\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+  auto [ q ] { h };\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } }\n+  auto [ r ] { i };\t\t\t// { dg-error \"cannot decompose class type 'I': its base classes 'F' and 'H' have non-static data members\" }\n+\t\t\t\t\t// { dg-warning \"decomposition declaration only available with -std=c..1z or -std=gnu..1z\" \"\" { target c++14_down } .-1 }\n+}"}, {"sha": "86b2c22f37a57bbbd81228305dc5fd5e374d9453", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp5.C", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp5.C?ref=5230c3d825aee39da28c73705bc5852fae9f92a6", "patch": "@@ -0,0 +1,40 @@\n+// { dg-do run { target c++11 } }\n+// { dg-options \"\" }\n+\n+struct A { int i; long long j; } a[64];\n+\n+int\n+main ()\n+{\n+  int i = 0;\n+  for (auto &x : a)\n+    {\n+      x.i = i;\n+      x.j = 2 * i++;\n+    }\n+  for (auto & [ x, y ] : a)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+    {\n+      x += 2;\n+      y += 3;\n+    }\n+  i = 0;\n+  for (const auto [ u, v ] : a)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+    {\n+      if (u != i + 2 || v != 2 * i++ + 3)\n+\t__builtin_abort ();\n+    }\n+  i = 0;\n+  for (auto [ x, y ] : a)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+    {\n+      x += 4;\n+      y += 5;\n+      if (x != i + 6 || y != 2 * i++ + 8)\n+\t__builtin_abort ();\n+    }\n+  i = 0;\n+  for (const auto x : a)\n+    {\n+      if (x.i != i + 2 || x.j != 2 * i++ + 3)\n+\t__builtin_abort ();\n+    }\n+}"}, {"sha": "ed6fce49ec5b5fa5d0ab25e0acc2ab23bd954591", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp6.C", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp6.C?ref=5230c3d825aee39da28c73705bc5852fae9f92a6", "patch": "@@ -0,0 +1,92 @@\n+// { dg-do run { target c++11 } }\n+// { dg-options \"\" }\n+\n+int ccnt, dcnt, cccnt, tccnt;\n+\n+struct A\n+{\n+  A () : a (6) { ccnt++; }\n+  ~A () { dcnt++; }\n+  explicit A (const A &x) : a (x.a) { cccnt++; }\n+  template <typename T>\n+  A (const T &x) : a (x.a) { tccnt++; }\n+  int a;\n+};\n+\n+int\n+main ()\n+{\n+  if (ccnt || dcnt || cccnt || tccnt)\n+    __builtin_abort ();\n+  {\n+    A a[6];\n+    if (ccnt != 6 || dcnt || cccnt || tccnt)\n+      __builtin_abort ();\n+    {\n+      auto [b,c,d,e,f,g] = a;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+      if (ccnt != 6 || dcnt || cccnt || tccnt != 6)\n+\t__builtin_abort ();\n+      b.a++;\n+      c.a += 2;\n+      f.a += 3;\n+      if (b.a != 7 || c.a != 8 || d.a != 6 || e.a != 6 || f.a != 9 || g.a != 6)\n+\t__builtin_abort ();\n+      if (&b == &a[0] || &c == &a[1] || &d == &a[2] || &e == &a[3] || &f == &a[4] || &g == &a[5])\n+\t__builtin_abort ();\n+      {\n+\tauto&[ h, i, j, k, l, m ] = a;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+\tif (ccnt != 6 || dcnt || cccnt || tccnt != 6)\n+\t  __builtin_abort ();\n+\tj.a += 4;\n+\tk.a += 5;\n+\tm.a += 6;\n+\tif (a[0].a != 6 || a[1].a != 6 || a[2].a != 10 || a[3].a != 11 || a[4].a != 6 || a[5].a != 12)\n+\t  __builtin_abort ();\n+\tif (&h != &a[0] || &i != &a[1] || &j != &a[2] || &k != &a[3] || &l != &a[4] || &m != &a[5])\n+\t  __builtin_abort ();\n+      }\n+      if (ccnt != 6 || dcnt || cccnt || tccnt != 6)\n+\t__builtin_abort ();\n+    }\n+    if (ccnt != 6 || dcnt != 6 || cccnt || tccnt != 6)\n+      __builtin_abort ();\n+  }\n+  if (ccnt != 6 || dcnt != 12 || cccnt || tccnt != 6)\n+    __builtin_abort ();\n+\n+  {\n+    A a[6];\n+    if (ccnt != 12 || dcnt != 12 || cccnt || tccnt != 6)\n+      __builtin_abort ();\n+    {\n+      auto [b,c,d,e,f,g] { a };\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+      if (ccnt != 12 || dcnt != 12 || cccnt != 6 || tccnt != 6)\n+\t__builtin_abort ();\n+      b.a++;\n+      c.a += 2;\n+      f.a += 3;\n+      if (b.a != 7 || c.a != 8 || d.a != 6 || e.a != 6 || f.a != 9 || g.a != 6)\n+\t__builtin_abort ();\n+      if (&b == &a[0] || &c == &a[1] || &d == &a[2] || &e == &a[3] || &f == &a[4] || &g == &a[5])\n+\t__builtin_abort ();\n+      {\n+\tauto&[ h, i, j, k, l, m ] {a};\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+\tif (ccnt != 12 || dcnt != 12 || cccnt != 6 || tccnt != 6)\n+\t  __builtin_abort ();\n+\tj.a += 4;\n+\tk.a += 5;\n+\tm.a += 6;\n+\tif (a[0].a != 6 || a[1].a != 6 || a[2].a != 10 || a[3].a != 11 || a[4].a != 6 || a[5].a != 12)\n+\t  __builtin_abort ();\n+\tif (&h != &a[0] || &i != &a[1] || &j != &a[2] || &k != &a[3] || &l != &a[4] || &m != &a[5])\n+\t  __builtin_abort ();\n+      }\n+      if (ccnt != 12 || dcnt != 12 || cccnt != 6 || tccnt != 6)\n+\t__builtin_abort ();\n+    }\n+    if (ccnt != 12 || dcnt != 18 || cccnt != 6 || tccnt != 6)\n+      __builtin_abort ();\n+  }\n+  if (ccnt != 12 || dcnt != 24 || cccnt != 6 || tccnt != 6)\n+    __builtin_abort ();\n+}"}, {"sha": "d366adecc4c6be376ddd8160d557c61599f23b64", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp7.C", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp7.C?ref=5230c3d825aee39da28c73705bc5852fae9f92a6", "patch": "@@ -0,0 +1,60 @@\n+// { dg-do run { target c++11 } }\n+// { dg-options \"\" }\n+\n+int a[2] = { 1, 2 };\n+int b[2] = { 4, 5 };\n+struct S { int a; signed char b; float c; } sa = { 6, 7, 8.0f };\n+S sb = { 9, 10, 11.0f };\n+\n+template <typename T, typename U>\n+void\n+foo (T &x, U &y)\n+{\n+  auto & [ c, d ] = a;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [ e, f ] = a;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [ g, h, i ] = sa;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto & [ j, k, l ] = sa;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto & [ m, n ] = x;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [ o, p ] = x;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto [ q, r, s ] = y;\t\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  auto & [ t, u, v ] = y;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  c += 1;\n+  e += 2;\n+  g += 3;\n+  j += 4;\n+  m += 5;\n+  o += 6;\n+  q += 7;\n+  t += 8;\n+  if (c != 2 || &c != &a[0]\n+      || d != 2 || &d != &a[1]\n+      || e != 3 || &e == &a[0]\n+      || f != 2 || &f == &a[1]\n+      || g != 9 || &g == &sa.a\n+      || h != 7 || &h == &sa.b\n+      || i != 8.0f || &i == &sa.c\n+      || j != 10 || &j != &sa.a\n+      || k != 7 || &k != &sa.b\n+      || l != 8.0f || &l != &sa.c\n+      || m != 9 || &m != &b[0]\n+      || n != 5 || &n != &b[1]\n+      || o != 10 || &o == &b[0]\n+      || p != 5 || &p == &b[1]\n+      || q != 16 || &q == &sb.a\n+      || r != 10 || &r == &sb.b\n+      || s != 11.0f || &s == &sb.c\n+      || t != 17 || &t != &sb.a\n+      || u != 10 || &u != &sb.b\n+      || v != 11.0f || &v != &sb.c\n+      || a[0] != 2 || a[1] != 2\n+      || sa.a != 10 || sa.b != 7 || sa.c != 8.0f\n+      || b[0] != 9 || b[1] != 5\n+      || sb.a != 17 || sb.b != 10 || sb.c != 11.0f)\n+    __builtin_abort ();\n+}\n+\n+int\n+main ()\n+{\n+  foo (b, sb);\n+}"}, {"sha": "9e1ea5d5da19c3980d7d7776e11ae836bf1eee27", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp8.C", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp8.C?ref=5230c3d825aee39da28c73705bc5852fae9f92a6", "patch": "@@ -0,0 +1,88 @@\n+// { dg-do run { target c++11 } }\n+// { dg-options \"\" }\n+\n+struct A { int i; long long j; } a[64];\n+A b[32];\n+\n+template <typename T>\n+void\n+foo (T &b)\n+{\n+  int i = 0;\n+  for (auto &x : a)\n+    {\n+      x.i = i;\n+      x.j = 2 * i++;\n+    }\n+  for (auto & [ x, y ] : a)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+    {\n+      x += 2;\n+      y += 3;\n+    }\n+  i = 0;\n+  for (const auto [ u, v ] : a)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+    {\n+      if (u != i + 2 || v != 2 * i++ + 3)\n+\t__builtin_abort ();\n+    }\n+  i = 0;\n+  for (auto [ x, y ] : a)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+    {\n+      x += 4;\n+      y += 5;\n+      if (x != i + 6 || y != 2 * i++ + 8)\n+\t__builtin_abort ();\n+    }\n+  i = 0;\n+  for (const auto x : a)\n+    {\n+      if (x.i != i + 2 || x.j != 2 * i++ + 3)\n+\t__builtin_abort ();\n+    }\n+  i = 0;\n+  for (auto &x : b)\n+    {\n+      x.i = i;\n+      x.j = 2 * i++;\n+    }\n+  for (auto & [ x, y ] : b)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+    {\n+      x -= 2;\n+      y -= 3;\n+    }\n+  i = 0;\n+  for (const auto [ u, v ] : b)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+    {\n+      if (u != i - 2 || v != 2 * i++ - 3)\n+\t__builtin_abort ();\n+    }\n+  i = 0;\n+  for (auto [ x, y ] : b)\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+    {\n+      x -= 4;\n+      y -= 5;\n+      if (x != i - 6 || y != 2 * i++ - 8)\n+\t__builtin_abort ();\n+    }\n+  i = 0;\n+  for (const auto x : b)\n+    {\n+      if (x.i != i - 2 || x.j != 2 * i++ - 3)\n+\t__builtin_abort ();\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  foo (b);\n+  for (int i = 0; i < 64; i++)\n+    {\n+      if (a[i].i != i + 2 || a[i].j != 2 * i + 3)\n+\t__builtin_abort ();\n+      if (i >= 32)\n+\tcontinue;\n+      if (b[i].i != i - 2 || b[i].j != 2 * i - 3)\n+\t__builtin_abort ();\n+    }\n+}"}, {"sha": "f7c6f56b8d51166681b744f14a1909c615e5a684", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp9.C", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5230c3d825aee39da28c73705bc5852fae9f92a6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp9.C?ref=5230c3d825aee39da28c73705bc5852fae9f92a6", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do run }\n+// { dg-options -std=c++1z }\n+\n+#define assert(X) do { if (!(X)) __builtin_abort(); } while (0)\n+\n+namespace std {\n+  template<typename T> struct tuple_size;\n+  template<int, typename> struct tuple_element;\n+}\n+\n+struct A {\n+  int i;\n+  template <int I> int& get() { return i; }\n+};\n+\n+template<> struct std::tuple_size<A> { static const int value = 2; };\n+template<int I> struct std::tuple_element<I,A> { using type = int; };\n+\n+struct B {\n+  int i;\n+};\n+template <int I> int& get(B&& b) { return b.i; }\n+template <int I> int& get(B& b) { return b.i; }\n+\n+template<> struct std::tuple_size<B> { static const int value = 2; };\n+template<int I> struct std::tuple_element<I,B> { using type = int; };\n+\n+int main()\n+{\n+  {\n+    A a = { 42 };\n+    auto& [ x, y ] = a;\n+    assert (&x == &y && &x == &a.i && x == 42);\n+\n+    auto [ x2, y2 ] = a;\n+    assert (&x2 == &y2 && &x2 != &a.i && x2 == 42);\n+  }\n+\n+  {\n+    B b = { 42 };\n+    auto& [ x, y ] = b;\n+    assert (&x == &y && &x == &b.i && x == 42);\n+\n+    auto [ x2, y2 ] = b;\n+    assert (&x2 == &y2 && &x2 != &b.i && x2 == 42);\n+  }\n+}"}]}