{"sha": "0f41b5e02fa47db2080b77e4e1f7cd3305457c05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY0MWI1ZTAyZmE0N2RiMjA4MGI3N2U0ZTFmN2NkMzMwNTQ1N2MwNQ==", "commit": {"author": {"name": "Dennis Zhang", "email": "dennis.zh@live.com", "date": "2020-10-22T00:09:33Z"}, "committer": {"name": "Dennis Zhang", "email": "dennis.zh@live.com", "date": "2020-10-22T00:09:33Z"}, "message": "arm: Auto-vectorization for MVE: vmul\n\nThis patch enables MVE vmul instructions for auto-vectorization.\nIt includes MVE in expander mul<mode>3 to enable vectorization for MVE.\nRelated MVE vmul insns are modified to support the expander by using\nexpression 'mult' instead of unspec.\nThe mul<mode>3 for vectorization in vec-common.md uses mode iterator\nVDQWH instead of VALLW to cover all supported modes.\nThe macros ARM_HAVE_NEON_<MODE>_ARITH are used to select supported\nmodes for different targets.\nThe redundant mul<mode>3 in neon.md is removed.\n\ngcc/ChangeLog:\n\n2020-10-22  Dennis Zhang  <dennis.zhang@arm.com>\n\n\t* config/arm/mve.md (mve_vmulq<mode>): New entry for vmul instruction\n\tusing expression 'mult'.\n\t(mve_vmulq_f<mode>): Use mult instead of VMULQ_F.\n\t* config/arm/neon.md (mul<mode>3): Removed.\n\t* config/arm/vec-common.md (mul<mode>3): Use the new mode macros\n\tARM_HAVE_<MODE>_ARITH. Use mode iterator VDQWH instead of VALLW.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/simd/mve-vmul_1.c: New test.", "tree": {"sha": "fb604198a910464fbb37f7d83da87304460f8b85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb604198a910464fbb37f7d83da87304460f8b85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f41b5e02fa47db2080b77e4e1f7cd3305457c05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f41b5e02fa47db2080b77e4e1f7cd3305457c05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f41b5e02fa47db2080b77e4e1f7cd3305457c05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f41b5e02fa47db2080b77e4e1f7cd3305457c05/comments", "author": {"login": "solarock", "id": 109078, "node_id": "MDQ6VXNlcjEwOTA3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/109078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solarock", "html_url": "https://github.com/solarock", "followers_url": "https://api.github.com/users/solarock/followers", "following_url": "https://api.github.com/users/solarock/following{/other_user}", "gists_url": "https://api.github.com/users/solarock/gists{/gist_id}", "starred_url": "https://api.github.com/users/solarock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solarock/subscriptions", "organizations_url": "https://api.github.com/users/solarock/orgs", "repos_url": "https://api.github.com/users/solarock/repos", "events_url": "https://api.github.com/users/solarock/events{/privacy}", "received_events_url": "https://api.github.com/users/solarock/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solarock", "id": 109078, "node_id": "MDQ6VXNlcjEwOTA3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/109078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solarock", "html_url": "https://github.com/solarock", "followers_url": "https://api.github.com/users/solarock/followers", "following_url": "https://api.github.com/users/solarock/following{/other_user}", "gists_url": "https://api.github.com/users/solarock/gists{/gist_id}", "starred_url": "https://api.github.com/users/solarock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solarock/subscriptions", "organizations_url": "https://api.github.com/users/solarock/orgs", "repos_url": "https://api.github.com/users/solarock/repos", "events_url": "https://api.github.com/users/solarock/events{/privacy}", "received_events_url": "https://api.github.com/users/solarock/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca5f4666f7a9404cdb04832324de3dd7d71e35c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5f4666f7a9404cdb04832324de3dd7d71e35c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca5f4666f7a9404cdb04832324de3dd7d71e35c3"}], "stats": {"total": 117, "additions": 95, "deletions": 22}, "files": [{"sha": "d6a326cbbc0d8b88a0f14770bf281b1419442d46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f41b5e02fa47db2080b77e4e1f7cd3305457c05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f41b5e02fa47db2080b77e4e1f7cd3305457c05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f41b5e02fa47db2080b77e4e1f7cd3305457c05", "patch": "@@ -1,3 +1,12 @@\n+2020-10-22  Dennis Zhang  <dennis.zhang@arm.com>\n+\n+\t* config/arm/mve.md (mve_vmulq<mode>): New entry for vmul instruction\n+\tusing expression 'mult'.\n+\t(mve_vmulq_f<mode>): Use mult instead of VMULQ_F.\n+\t* config/arm/neon.md (mul<mode>3): Removed.\n+\t* config/arm/vec-common.md (mul<mode>3): Use the new mode macros\n+\tARM_HAVE_<MODE>_ARITH. Use mode iterator VDQWH instead of VALLW.\n+\n 2020-10-20  Andrew MacLeod  <amacleod@redhat.com>\n \n \tPR tree-optimization/97505"}, {"sha": "764e20163160ca1a41531f147e2f574a2923a566", "filename": "gcc/config/arm/mve.md", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f41b5e02fa47db2080b77e4e1f7cd3305457c05/gcc%2Fconfig%2Farm%2Fmve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f41b5e02fa47db2080b77e4e1f7cd3305457c05/gcc%2Fconfig%2Farm%2Fmve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmve.md?ref=0f41b5e02fa47db2080b77e4e1f7cd3305457c05", "patch": "@@ -1551,6 +1551,17 @@\n   [(set_attr \"type\" \"mve_move\")\n ])\n \n+(define_insn \"mve_vmulq<mode>\"\n+  [\n+   (set (match_operand:MVE_2 0 \"s_register_operand\" \"=w\")\n+\t(mult:MVE_2 (match_operand:MVE_2 1 \"s_register_operand\" \"w\")\n+\t\t    (match_operand:MVE_2 2 \"s_register_operand\" \"w\")))\n+  ]\n+  \"TARGET_HAVE_MVE\"\n+  \"vmul.i%#<V_sz_elem>\\t%q0, %q1, %q2\"\n+  [(set_attr \"type\" \"mve_move\")\n+])\n+\n ;;\n ;; [vornq_u, vornq_s])\n ;;\n@@ -2562,9 +2573,8 @@\n (define_insn \"mve_vmulq_f<mode>\"\n   [\n    (set (match_operand:MVE_0 0 \"s_register_operand\" \"=w\")\n-\t(unspec:MVE_0 [(match_operand:MVE_0 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:MVE_0 2 \"s_register_operand\" \"w\")]\n-\t VMULQ_F))\n+\t(mult:MVE_0 (match_operand:MVE_0 1 \"s_register_operand\" \"w\")\n+\t\t    (match_operand:MVE_0 2 \"s_register_operand\" \"w\")))\n   ]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n   \"vmul.f%#<V_sz_elem>\t%q0, %q1, %q2\""}, {"sha": "e459b9ac8ef84cf46f142083b0da2830384c60ca", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f41b5e02fa47db2080b77e4e1f7cd3305457c05/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f41b5e02fa47db2080b77e4e1f7cd3305457c05/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=0f41b5e02fa47db2080b77e4e1f7cd3305457c05", "patch": "@@ -1732,17 +1732,6 @@\n                     (const_string \"neon_mul_<V_elem_ch><q>\")))]\n )\n \n-(define_insn \"mul<mode>3\"\n- [(set\n-   (match_operand:VH 0 \"s_register_operand\" \"=w\")\n-   (mult:VH\n-    (match_operand:VH 1 \"s_register_operand\" \"w\")\n-    (match_operand:VH 2 \"s_register_operand\" \"w\")))]\n-  \"ARM_HAVE_NEON_<MODE>_ARITH\"\n-  \"vmul.f16\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n- [(set_attr \"type\" \"neon_mul_<VH_elem_ch><q>\")]\n-)\n-\n (define_insn \"neon_vmulf<mode>\"\n  [(set\n    (match_operand:VH 0 \"s_register_operand\" \"=w\")"}, {"sha": "45db60e7411c14170e493e53bae5c967a7b16ce2", "filename": "gcc/config/arm/vec-common.md", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f41b5e02fa47db2080b77e4e1f7cd3305457c05/gcc%2Fconfig%2Farm%2Fvec-common.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f41b5e02fa47db2080b77e4e1f7cd3305457c05/gcc%2Fconfig%2Farm%2Fvec-common.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvec-common.md?ref=0f41b5e02fa47db2080b77e4e1f7cd3305457c05", "patch": "@@ -101,14 +101,11 @@\n })\n \n (define_expand \"mul<mode>3\"\n-  [(set (match_operand:VALLW 0 \"s_register_operand\")\n-        (mult:VALLW (match_operand:VALLW 1 \"s_register_operand\")\n-\t\t    (match_operand:VALLW 2 \"s_register_operand\")))]\n-  \"(TARGET_NEON && ((<MODE>mode != V2SFmode && <MODE>mode != V4SFmode)\n-\t\t    || flag_unsafe_math_optimizations))\n-   || (<MODE>mode == V4HImode && TARGET_REALLY_IWMMXT)\"\n-{\n-})\n+  [(set (match_operand:VDQWH 0 \"s_register_operand\")\n+\t(mult:VDQWH (match_operand:VDQWH 1 \"s_register_operand\")\n+\t\t    (match_operand:VDQWH 2 \"s_register_operand\")))]\n+  \"ARM_HAVE_<MODE>_ARITH\"\n+)\n \n (define_expand \"smin<mode>3\"\n   [(set (match_operand:VALLW 0 \"s_register_operand\")"}, {"sha": "eb55a64b8f8672d833b4db42cbeda4f7eedf5538", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f41b5e02fa47db2080b77e4e1f7cd3305457c05/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f41b5e02fa47db2080b77e4e1f7cd3305457c05/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f41b5e02fa47db2080b77e4e1f7cd3305457c05", "patch": "@@ -1,3 +1,7 @@\n+2020-10-22  Dennis Zhang  <dennis.zhang@arm.com>\n+\n+\t* gcc.target/arm/simd/mve-vmul_1.c: New test.\n+\n 2020-10-20  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/Wbuiltin-declaration-mismatch-9.c: Improve pruning of"}, {"sha": "514f292c15e63787ea73f00071e55e9d78600882", "filename": "gcc/testsuite/gcc.target/arm/simd/mve-vmul_1.c", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f41b5e02fa47db2080b77e4e1f7cd3305457c05/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vmul_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f41b5e02fa47db2080b77e4e1f7cd3305457c05/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vmul_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vmul_1.c?ref=0f41b5e02fa47db2080b77e4e1f7cd3305457c05", "patch": "@@ -0,0 +1,64 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n+/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-additional-options \"-O3\" } */\n+\n+#include <stdint.h>\n+\n+void test_vmul_i32 (int32_t * dest, int32_t * a, int32_t * b) {\n+  int i;\n+  for (i=0; i<4; i++) {\n+    dest[i] = a[i] * b[i];\n+  }\n+}\n+\n+void test_vmul_i32_u (uint32_t * dest, uint32_t * a, uint32_t * b) {\n+  int i;\n+  for (i=0; i<4; i++) {\n+    dest[i] = a[i] * b[i];\n+  }\n+}\n+\n+/* { dg-final { scan-assembler-times {vmul\\.i32\\tq[0-9]+, q[0-9]+, q[0-9]+} 2 } } */\n+\n+void test_vmul_i16 (int16_t * dest, int16_t * a, int16_t * b) {\n+  int i;\n+  for (i=0; i<8; i++) {\n+    dest[i] = a[i] * b[i];\n+  }\n+}\n+\n+void test_vmul_i16_u (uint16_t * dest, uint16_t * a, uint16_t * b) {\n+  int i;\n+  for (i=0; i<8; i++) {\n+    dest[i] = a[i] * b[i];\n+  }\n+}\n+\n+/* { dg-final { scan-assembler-times {vmul\\.i16\\tq[0-9]+, q[0-9]+, q[0-9]+} 2 } } */\n+\n+void test_vmul_i8 (int8_t * dest, int8_t * a, int8_t * b) {\n+  int i;\n+  for (i=0; i<16; i++) {\n+    dest[i] = a[i] * b[i];\n+  }\n+}\n+\n+void test_vmul_i8_u (uint8_t * dest, uint8_t * a, uint8_t * b) {\n+  int i;\n+  for (i=0; i<16; i++) {\n+    dest[i] = a[i] * b[i];\n+  }\n+}\n+\n+/* { dg-final { scan-assembler-times {vmul\\.i8\\tq[0-9]+, q[0-9]+, q[0-9]+} 2 } } */\n+\n+void test_vmul_f32 (float * dest, float * a, float * b) {\n+  int i;\n+  for (i=0; i<4; i++) {\n+    dest[i] = a[i] * b[i];\n+  }\n+}\n+\n+/* { dg-final { scan-assembler-times {vmul\\.f32\\tq[0-9]+, q[0-9]+, q[0-9]+} 1 } } */\n+"}]}