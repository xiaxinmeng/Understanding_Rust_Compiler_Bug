{"sha": "ba7b35df7a028e664d54a302bcbb73feca32eafe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE3YjM1ZGY3YTAyOGU2NjRkNTRhMzAyYmNiYjczZmVjYTMyZWFmZQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-07-22T23:54:46Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-07-22T23:54:46Z"}, "message": "(output_call_frame_info): Change FDE CIE offset to be section name rather than 0.\n\n(output_call_frame_info): Change FDE CIE offset to\nbe section name rather than 0.\n(gen_subprogram_die): Only emit DW_AT_external if origin is NULL.\nOnly call equate_decl_number_to_die if origin is NULL.\n(dwarfout_begin_function): In code that computes offset of frame\npointer, change 4 to UNITS_PER_WORD.\n\nFrom-SVN: r12545", "tree": {"sha": "cf250dad558734142e54fbb10b2035cc93ae388c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf250dad558734142e54fbb10b2035cc93ae388c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba7b35df7a028e664d54a302bcbb73feca32eafe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba7b35df7a028e664d54a302bcbb73feca32eafe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba7b35df7a028e664d54a302bcbb73feca32eafe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba7b35df7a028e664d54a302bcbb73feca32eafe/comments", "author": null, "committer": null, "parents": [{"sha": "845fc87500e000788b5af93d5fc73ddb520a1fc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845fc87500e000788b5af93d5fc73ddb520a1fc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/845fc87500e000788b5af93d5fc73ddb520a1fc8"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "4e06da64100e71a5d53722a0a4bf7cec2c1cd210", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7b35df7a028e664d54a302bcbb73feca32eafe/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7b35df7a028e664d54a302bcbb73feca32eafe/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=ba7b35df7a028e664d54a302bcbb73feca32eafe", "patch": "@@ -3733,7 +3733,7 @@ output_call_frame_info ()\n \t\t   ASM_COMMENT_START);\n \t}\n       fputc ('\\n', asm_out_file);\n-      ASM_OUTPUT_DWARF_DATA4 (asm_out_file, 0);\n+      ASM_OUTPUT_DWARF_ADDR (asm_out_file, stripattributes (FRAME_SECTION));\n       if (flag_verbose_asm)\n \t{\n \t  fprintf (asm_out_file, \"\\t%s FDE CIE offset\",\n@@ -6085,22 +6085,22 @@ gen_subprogram_die (decl, context_die)\n   register tree outer_scope;\n   register tree label;\n \n-  if (TREE_PUBLIC (decl) || DECL_EXTERNAL (decl))\n-    {\n-      add_AT_flag (subr_die, DW_AT_external, 1);\n-    }\n   if (origin != NULL)\n     {\n       add_abstract_origin_attribute (subr_die, origin);\n     }\n   else\n     {\n-      type = TREE_TYPE (decl);\n+      if (TREE_PUBLIC (decl) || DECL_EXTERNAL (decl))\n+\t{\n+\t  add_AT_flag (subr_die, DW_AT_external, 1);\n+\t}\n       add_name_and_src_coords_attributes (subr_die, decl);\n       if (DECL_INLINE (decl))\n \t{\n \t  add_AT_unsigned (subr_die, DW_AT_inline, DW_INL_inlined);\n \t}\n+      type = TREE_TYPE (decl);\n       add_prototyped_attribute (subr_die, type);\n       add_member_attribute (subr_die, DECL_CONTEXT (decl));\n       add_type_attribute (subr_die, TREE_TYPE (type), 0, 0, context_die);\n@@ -6112,7 +6112,8 @@ gen_subprogram_die (decl, context_die)\n     }\n   else if (!DECL_EXTERNAL (decl))\n     {\n-      equate_decl_number_to_die (decl, subr_die);\n+      if (origin == NULL)\n+\tequate_decl_number_to_die (decl, subr_die);\n       add_AT_lbl_id (subr_die, DW_AT_low_pc, function_start_label (decl));\n       sprintf (label_id, FUNC_END_LABEL_FMT, current_funcdef_number);\n       add_AT_lbl_id (subr_die, DW_AT_high_pc, label_id);\n@@ -7381,7 +7382,7 @@ dwarfout_begin_function ()\n   if (current_frame_info.mask & (1 << 30))\n     {\n       offset = (current_frame_info.gp_save_offset\n-\t         - (((current_frame_info.mask >> 31) & 1) * 4))\n+\t         - (((current_frame_info.mask >> 31) & 1) * UNITS_PER_WORD))\n                / DWARF_CIE_DATA_ALIGNMENT;\n       assert (offset >= 0);\n       cfi = new_cfi ();"}]}