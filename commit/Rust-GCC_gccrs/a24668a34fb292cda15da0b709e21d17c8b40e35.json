{"sha": "a24668a34fb292cda15da0b709e21d17c8b40e35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI0NjY4YTM0ZmIyOTJjZGExNWRhMGI3MDllMjFkMTdjOGI0MGUzNQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-07-03T22:14:55Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-07-03T22:14:55Z"}, "message": "re PR fortran/32432 (SEGV/endless loop after: \"ERROR: ... already is initialized\")\n\n2007-07-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/32432\n\t* gfortran.h: Change type of gfc_assign_data_value from void to try.\n\t* data.c (gfc_assign_data_value): Return FAILURE if error found.\n\t* resolve.c (check_data_variable): If gfc_assign_data_value returns\n\tfailure, break out of loop and return failure.\n\nFrom-SVN: r126282", "tree": {"sha": "4352b8947dcf2586ceea4b93620531d88a0240f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4352b8947dcf2586ceea4b93620531d88a0240f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a24668a34fb292cda15da0b709e21d17c8b40e35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a24668a34fb292cda15da0b709e21d17c8b40e35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a24668a34fb292cda15da0b709e21d17c8b40e35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a24668a34fb292cda15da0b709e21d17c8b40e35/comments", "author": null, "committer": null, "parents": [{"sha": "f9faf95474a8a0009af1f6fd19097b1e96d8eefc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9faf95474a8a0009af1f6fd19097b1e96d8eefc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9faf95474a8a0009af1f6fd19097b1e96d8eefc"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "2fe400ca13afa3441a83fcb354ab568878e9366b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a24668a34fb292cda15da0b709e21d17c8b40e35/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a24668a34fb292cda15da0b709e21d17c8b40e35/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a24668a34fb292cda15da0b709e21d17c8b40e35", "patch": "@@ -1,3 +1,11 @@\n+2007-07-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/32432\n+\t* gfortran.h: Change type of gfc_assign_data_value from void to try.\n+\t* data.c (gfc_assign_data_value): Return FAILURE if error found.\n+\t* resolve.c (check_data_variable): If gfc_assign_data_value returns\n+\tfailure, break out of loop and return failure.\n+\n 2007-07-03  Christopher D. Rickett  <crickett@lanl.gov>\n \n \tPR fortran/32579"}, {"sha": "3c86bc860d481b2d4f34d70844c3973a57f461d1", "filename": "gcc/fortran/data.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a24668a34fb292cda15da0b709e21d17c8b40e35/gcc%2Ffortran%2Fdata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a24668a34fb292cda15da0b709e21d17c8b40e35/gcc%2Ffortran%2Fdata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdata.c?ref=a24668a34fb292cda15da0b709e21d17c8b40e35", "patch": "@@ -245,7 +245,7 @@ create_character_intializer (gfc_expr *init, gfc_typespec *ts,\n    LVALUE already has an initialization, we extend this, otherwise we\n    create a new one.  */\n \n-void\n+try\n gfc_assign_data_value (gfc_expr *lvalue, gfc_expr *rvalue, mpz_t index)\n {\n   gfc_ref *ref;\n@@ -293,8 +293,7 @@ gfc_assign_data_value (gfc_expr *lvalue, gfc_expr *rvalue, mpz_t index)\n \t      gfc_error (\"'%s' at %L already is initialized at %L\",\n \t\t\t lvalue->symtree->n.sym->name, &lvalue->where,\n \t\t\t &init->where);\n-\t      gfc_free_expr (init);\n-\t      init = NULL;\n+\t      return FAILURE;\n \t    }\n \n \t  if (init == NULL)\n@@ -423,6 +422,8 @@ gfc_assign_data_value (gfc_expr *lvalue, gfc_expr *rvalue, mpz_t index)\n     symbol->value = expr;\n   else\n     last_con->expr = expr;\n+\n+  return SUCCESS;\n }\n \n "}, {"sha": "158abe02327f6a8086cc30661cbb038f23d04505", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a24668a34fb292cda15da0b709e21d17c8b40e35/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a24668a34fb292cda15da0b709e21d17c8b40e35/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=a24668a34fb292cda15da0b709e21d17c8b40e35", "patch": "@@ -7472,7 +7472,9 @@ check_data_variable (gfc_data_variable *var, locus *where)\n \t  values.left -= 1;\n \t  mpz_sub_ui (size, size, 1);\n \n-\t  gfc_assign_data_value (var->expr, values.vnode->expr, offset);\n+\t  t = gfc_assign_data_value (var->expr, values.vnode->expr, offset);\n+\t  if (t == FAILURE)\n+\t    break;\n \n \t  if (mark == AR_FULL)\n \t    mpz_add_ui (offset, offset, 1);"}]}