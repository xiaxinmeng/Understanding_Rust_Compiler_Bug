{"sha": "b8c752c8d3069e5077e52b68356091a2dd9f8f48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhjNzUyYzhkMzA2OWU1MDc3ZTUyYjY4MzU2MDkxYTJkZDlmOGY0OA==", "commit": {"author": {"name": "Ulrich Drepper", "email": "drepper@gcc.gnu.org", "date": "2000-04-16T00:08:56Z"}, "committer": {"name": "Ulrich Drepper", "email": "drepper@gcc.gnu.org", "date": "2000-04-16T00:08:56Z"}, "message": "(ix86_expand_epilogue): Yes, the x86 can pop 64k at once using ret $N.\n\nFrom-SVN: r33174", "tree": {"sha": "85e155e86f2463c9257ba7b0c7892ffa9297feaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85e155e86f2463c9257ba7b0c7892ffa9297feaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8c752c8d3069e5077e52b68356091a2dd9f8f48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8c752c8d3069e5077e52b68356091a2dd9f8f48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8c752c8d3069e5077e52b68356091a2dd9f8f48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8c752c8d3069e5077e52b68356091a2dd9f8f48/comments", "author": null, "committer": null, "parents": [{"sha": "409f8483d4e8ec848d99de44bd92a909877e6c6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/409f8483d4e8ec848d99de44bd92a909877e6c6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/409f8483d4e8ec848d99de44bd92a909877e6c6a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "516c274493475676c48be594ad403568d876c717", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8c752c8d3069e5077e52b68356091a2dd9f8f48/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8c752c8d3069e5077e52b68356091a2dd9f8f48/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b8c752c8d3069e5077e52b68356091a2dd9f8f48", "patch": "@@ -2106,11 +2106,11 @@ ix86_expand_epilogue (emit_return)\n     {\n       rtx popc = GEN_INT (current_function_pops_args);\n \n-      /* i386 can only pop 32K bytes (maybe 64K?  Is it signed?).  If\n-\t asked to pop more, pop return address, do explicit add, and jump\n-\t indirectly to the caller. */\n+      /* i386 can only pop 64K bytes.  If asked to pop more, pop\n+\t return address, do explicit add, and jump indirectly to the\n+\t caller. */\n \n-      if (current_function_pops_args >= 32768)\n+      if (current_function_pops_args >= 65536)\n \t{\n \t  rtx ecx = gen_rtx_REG (SImode, 2);\n "}]}