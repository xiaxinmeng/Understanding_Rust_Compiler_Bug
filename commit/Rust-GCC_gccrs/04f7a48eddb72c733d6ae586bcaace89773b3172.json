{"sha": "04f7a48eddb72c733d6ae586bcaace89773b3172", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRmN2E0OGVkZGI3MmM3MzNkNmFlNTg2YmNhYWNlODk3NzNiMzE3Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-12-01T05:40:54Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-12-01T05:40:54Z"}, "message": "re PR c++/51009 (ICE in verify_gimple_stmt)\n\n\tPR c++/51009\n\t* name-lookup.c (push_to_top_level): Set stmts_are_full_exprs_p.\n\t* decl.c (build_aggr_init_full_exprs): Just assert that it's true.\n\t(check_initializer): Here too.\n\nFrom-SVN: r181872", "tree": {"sha": "9db7a238bb7693a1c77f147672720e5b06a94c0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9db7a238bb7693a1c77f147672720e5b06a94c0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04f7a48eddb72c733d6ae586bcaace89773b3172", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04f7a48eddb72c733d6ae586bcaace89773b3172", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04f7a48eddb72c733d6ae586bcaace89773b3172", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04f7a48eddb72c733d6ae586bcaace89773b3172/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "06dd33ac5ee441630b4fbc9fca33cf0bef5856bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06dd33ac5ee441630b4fbc9fca33cf0bef5856bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06dd33ac5ee441630b4fbc9fca33cf0bef5856bc"}], "stats": {"total": 58, "additions": 41, "deletions": 17}, "files": [{"sha": "8ef95aa0b17a4c5c240810eae5e0a62ff7343a81", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04f7a48eddb72c733d6ae586bcaace89773b3172/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04f7a48eddb72c733d6ae586bcaace89773b3172/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=04f7a48eddb72c733d6ae586bcaace89773b3172", "patch": "@@ -487,18 +487,13 @@ struct GTY(()) stmt_tree_s {\n   VEC(tree,gc) *x_cur_stmt_list;\n \n   /* In C++, Nonzero if we should treat statements as full\n-     expressions.  In particular, this variable is no-zero if at the\n+     expressions.  In particular, this variable is non-zero if at the\n      end of a statement we should destroy any temporaries created\n      during that statement.  Similarly, if, at the end of a block, we\n      should destroy any local variables in this block.  Normally, this\n      variable is nonzero, since those are the normal semantics of\n      C++.\n \n-     However, in order to represent aggregate initialization code as\n-     tree structure, we use statement-expressions.  The statements\n-     within the statement expression should not result in cleanups\n-     being run until the entire enclosing statement is complete.\n-\n      This flag has no effect in C.  */\n   int stmts_are_full_exprs_p;\n };"}, {"sha": "55addacfe464d945523c99809f15b7064942a3dd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04f7a48eddb72c733d6ae586bcaace89773b3172/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04f7a48eddb72c733d6ae586bcaace89773b3172/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=04f7a48eddb72c733d6ae586bcaace89773b3172", "patch": "@@ -1,3 +1,10 @@\n+2011-11-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51009\n+\t* name-lookup.c (push_to_top_level): Set stmts_are_full_exprs_p.\n+\t* decl.c (build_aggr_init_full_exprs): Just assert that it's true.\n+\t(check_initializer): Here too.\n+\n 2011-11-30  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51299"}, {"sha": "055c1b2020f014c51c6e88e57ffc2fc99de176ca", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04f7a48eddb72c733d6ae586bcaace89773b3172/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04f7a48eddb72c733d6ae586bcaace89773b3172/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=04f7a48eddb72c733d6ae586bcaace89773b3172", "patch": "@@ -5367,17 +5367,8 @@ static tree\n build_aggr_init_full_exprs (tree decl, tree init, int flags)\n      \n {\n-  int saved_stmts_are_full_exprs_p = 0;\n-  if (building_stmt_list_p ())\n-    {\n-      saved_stmts_are_full_exprs_p = stmts_are_full_exprs_p ();\n-      current_stmt_tree ()->stmts_are_full_exprs_p = 1;\n-    }\n-  init = build_aggr_init (decl, init, flags, tf_warning_or_error);\n-  if (building_stmt_list_p ())\n-    current_stmt_tree ()->stmts_are_full_exprs_p =\n-      saved_stmts_are_full_exprs_p;\n-  return init;\n+  gcc_assert (stmts_are_full_exprs_p ());\n+  return build_aggr_init (decl, init, flags, tf_warning_or_error);\n }\n \n /* Verify INIT (the initializer for DECL), and record the\n@@ -5550,7 +5541,13 @@ check_initializer (tree decl, tree init, int flags, VEC(tree,gc) **cleanups)\n \n       if (init && TREE_CODE (init) != TREE_VEC)\n \t{\n+\t  /* In aggregate initialization of a variable, each element\n+\t     initialization is a full-expression because there is no\n+\t     enclosing expression.  */\n+\t  gcc_assert (stmts_are_full_exprs_p ());\n+\n \t  init_code = store_init_value (decl, init, cleanups, flags);\n+\n \t  if (pedantic && TREE_CODE (type) == ARRAY_TYPE\n \t      && DECL_INITIAL (decl)\n \t      && TREE_CODE (DECL_INITIAL (decl)) == STRING_CST"}, {"sha": "ceecdef3e8ddcf21ffbb517e1f0d54d82185f427", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04f7a48eddb72c733d6ae586bcaace89773b3172/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04f7a48eddb72c733d6ae586bcaace89773b3172/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=04f7a48eddb72c733d6ae586bcaace89773b3172", "patch": "@@ -5916,6 +5916,7 @@ push_to_top_level (void)\n   s->function_decl = current_function_decl;\n   s->unevaluated_operand = cp_unevaluated_operand;\n   s->inhibit_evaluation_warnings = c_inhibit_evaluation_warnings;\n+  s->x_stmt_tree.stmts_are_full_exprs_p = true;\n \n   scope_chain = s;\n   current_function_decl = NULL_TREE;"}, {"sha": "8e29dab0ade33c36e4f3b084409273d4932e1f5f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04f7a48eddb72c733d6ae586bcaace89773b3172/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04f7a48eddb72c733d6ae586bcaace89773b3172/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=04f7a48eddb72c733d6ae586bcaace89773b3172", "patch": "@@ -1,3 +1,8 @@\n+2011-11-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51009\n+\t* g++.dg/init/aggr8.C: New.\n+\n 2011-11-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/50725"}, {"sha": "7e6edc9ad6c81b910fadc9670968283eb0745ef5", "filename": "gcc/testsuite/g++.dg/init/aggr8.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04f7a48eddb72c733d6ae586bcaace89773b3172/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Faggr8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04f7a48eddb72c733d6ae586bcaace89773b3172/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Faggr8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Faggr8.C?ref=04f7a48eddb72c733d6ae586bcaace89773b3172", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/51009\n+\n+struct A\n+{\n+  ~A();\n+};\n+\n+struct B\n+{\n+  A a;\n+  B(const A& = A());\n+};\n+\n+struct C\n+{\n+  B b1, b2;\n+};\n+\n+C c = {};"}]}