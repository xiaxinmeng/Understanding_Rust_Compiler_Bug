{"sha": "a3e7e012bf455a184a521162aa9ec8856a1e3622", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNlN2UwMTJiZjQ1NWExODRhNTIxMTYyYWE5ZWM4ODU2YTFlMzYyMg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2010-03-30T13:53:10Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2010-03-30T13:53:10Z"}, "message": "s390.c (s390_emit_prologue): Omit issuing a dynamic stack check if the mask would be zero.\n\n2010-03-30  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* config/s390/s390.c (s390_emit_prologue): Omit issuing a dynamic\n\tstack check if the mask would be zero.\n\n2010-03-30  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* gcc.target/s390/stackcheck1.c: New testcase.\n\nFrom-SVN: r157825", "tree": {"sha": "5d882f52e9f05f24e25574be825ca4c24ef599b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d882f52e9f05f24e25574be825ca4c24ef599b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3e7e012bf455a184a521162aa9ec8856a1e3622", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3e7e012bf455a184a521162aa9ec8856a1e3622", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3e7e012bf455a184a521162aa9ec8856a1e3622", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3e7e012bf455a184a521162aa9ec8856a1e3622/comments", "author": null, "committer": null, "parents": [{"sha": "40ae6799329ad23721e9e0c6bf3b2347e0d3bb05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40ae6799329ad23721e9e0c6bf3b2347e0d3bb05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40ae6799329ad23721e9e0c6bf3b2347e0d3bb05"}], "stats": {"total": 60, "additions": 51, "deletions": 9}, "files": [{"sha": "3dae6a056de284e985efbb744b5315a4377f6c29", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e7e012bf455a184a521162aa9ec8856a1e3622/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e7e012bf455a184a521162aa9ec8856a1e3622/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3e7e012bf455a184a521162aa9ec8856a1e3622", "patch": "@@ -1,3 +1,8 @@\n+2010-03-30  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_emit_prologue): Omit issuing a dynamic\n+\tstack check if the mask would be zero.\n+\n 2010-03-30  Seongbae Park <seongbae.park@gmail.com>\n \t    Jack Howarth <howarth@bromo.med.uc.edu>\n "}, {"sha": "c2cf3d4a828d864192b3165097bbcd5cbf054ef6", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 28, "deletions": 9, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e7e012bf455a184a521162aa9ec8856a1e3622/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e7e012bf455a184a521162aa9ec8856a1e3622/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=a3e7e012bf455a184a521162aa9ec8856a1e3622", "patch": "@@ -7802,16 +7802,35 @@ s390_emit_prologue (void)\n \t    }\n \t  else\n \t    {\n-\t      HOST_WIDE_INT stack_check_mask = ((s390_stack_size - 1)\n-\t\t\t\t\t\t& ~(stack_guard - 1));\n-\t      rtx t = gen_rtx_AND (Pmode, stack_pointer_rtx,\n-\t\t\t\t   GEN_INT (stack_check_mask));\n-\t      if (TARGET_64BIT)\n-\t        emit_insn (gen_ctrapdi4 (gen_rtx_EQ (VOIDmode, t, const0_rtx),\n-\t\t\t\t         t, const0_rtx, const0_rtx));\n+\t      /* stack_guard has to be smaller than s390_stack_size.\n+\t\t Otherwise we would emit an AND with zero which would\n+\t\t not match the test under mask pattern.  */\n+\t      if (stack_guard >= s390_stack_size)\n+\t\t{\n+\t\t  warning (0, \"frame size of function %qs is \"\n+\t\t\t   HOST_WIDE_INT_PRINT_DEC\n+\t\t\t   \" bytes which is more than half the stack size. \"\n+\t\t\t   \"The dynamic check would not be reliable. \"\n+\t\t\t   \"No check emitted for this function.\",\n+\t\t\t   current_function_name(),\n+\t\t\t   cfun_frame_layout.frame_size);\n+\t\t}\n \t      else\n-\t        emit_insn (gen_ctrapsi4 (gen_rtx_EQ (VOIDmode, t, const0_rtx),\n-\t\t\t\t         t, const0_rtx, const0_rtx));\n+\t\t{\n+\t\t  HOST_WIDE_INT stack_check_mask = ((s390_stack_size - 1)\n+\t\t\t\t\t\t    & ~(stack_guard - 1));\n+\n+\t\t  rtx t = gen_rtx_AND (Pmode, stack_pointer_rtx,\n+\t\t\t\t       GEN_INT (stack_check_mask));\n+\t\t  if (TARGET_64BIT)\n+\t\t    emit_insn (gen_ctrapdi4 (gen_rtx_EQ (VOIDmode,\n+\t\t\t\t\t\t\t t, const0_rtx),\n+\t\t\t\t\t     t, const0_rtx, const0_rtx));\n+\t\t  else\n+\t\t    emit_insn (gen_ctrapsi4 (gen_rtx_EQ (VOIDmode,\n+\t\t\t\t\t\t\t t, const0_rtx),\n+\t\t\t\t\t     t, const0_rtx, const0_rtx));\n+\t\t}\n \t    }\n   \t}\n "}, {"sha": "21738c254bcb2f748d8d50a5ed5eb74fa404b215", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e7e012bf455a184a521162aa9ec8856a1e3622/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e7e012bf455a184a521162aa9ec8856a1e3622/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a3e7e012bf455a184a521162aa9ec8856a1e3622", "patch": "@@ -1,3 +1,7 @@\n+2010-03-30  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* gcc.target/s390/stackcheck1.c: New testcase.\n+\n 2010-03-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/43265"}, {"sha": "f588833d899eb30e9f577313b2e669ebcd03d867", "filename": "gcc/testsuite/gcc.target/s390/stackcheck1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e7e012bf455a184a521162aa9ec8856a1e3622/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fstackcheck1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e7e012bf455a184a521162aa9ec8856a1e3622/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fstackcheck1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fstackcheck1.c?ref=a3e7e012bf455a184a521162aa9ec8856a1e3622", "patch": "@@ -0,0 +1,14 @@\n+/* The automatically chosen stack guard value caused an ICE in that\n+   case.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mstack-size=4096\" } */\n+\n+extern void bar (char *);\n+\n+void\n+foo ()\n+{\n+  char a[2500];\n+  bar (a);\n+}"}]}