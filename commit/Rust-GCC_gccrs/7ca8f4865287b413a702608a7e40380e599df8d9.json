{"sha": "7ca8f4865287b413a702608a7e40380e599df8d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NhOGY0ODY1Mjg3YjQxM2E3MDI2MDhhN2U0MDM4MGU1OTlkZjhkOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2012-04-21T23:59:25Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2012-04-21T23:59:25Z"}, "message": "method.c (make_alias_for): Do not set TREE_SYMBOL_REFERENCED.\n\n\n\t* method.c (make_alias_for): Do not set TREE_SYMBOL_REFERENCED.\n\t* decl2.c (mark_needed): Likewise.\n\t(decl_needed_p): Do not test TREE_SYMBOL_REFERENCED.\n\n\t* decl2.c (cxx_callgraph_analyze_expr): Remove.\n\t* cp-objcp-common.h (LANG_HOOKS_CALLGRAPH_ANALYZE_EXPR): Remove.\n\t* cp-tree.h (cxx_callgraph_analyze_expr): Remove.\n\nFrom-SVN: r186658", "tree": {"sha": "b14ae5952a223b6eca47cc438390ee318e018c26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b14ae5952a223b6eca47cc438390ee318e018c26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ca8f4865287b413a702608a7e40380e599df8d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ca8f4865287b413a702608a7e40380e599df8d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ca8f4865287b413a702608a7e40380e599df8d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ca8f4865287b413a702608a7e40380e599df8d9/comments", "author": null, "committer": null, "parents": [{"sha": "9e412ca3ebe589537430ce89c4342ca08f251d69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e412ca3ebe589537430ce89c4342ca08f251d69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e412ca3ebe589537430ce89c4342ca08f251d69"}], "stats": {"total": 62, "additions": 12, "deletions": 50}, "files": [{"sha": "1ad0588439f270438589511767ff3633be73bfb0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ca8f4865287b413a702608a7e40380e599df8d9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ca8f4865287b413a702608a7e40380e599df8d9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7ca8f4865287b413a702608a7e40380e599df8d9", "patch": "@@ -1,3 +1,13 @@\n+2012-04-21  Jan Hubicka  <jh@suse.cz>\n+\n+\t* method.c (make_alias_for): Do not set TREE_SYMBOL_REFERENCED.\n+\t* decl2.c (mark_needed): Likewise.\n+\t(decl_needed_p): Do not test TREE_SYMBOL_REFERENCED.\n+\n+\t* decl2.c (cxx_callgraph_analyze_expr): Remove.\n+\t* cp-objcp-common.h (LANG_HOOKS_CALLGRAPH_ANALYZE_EXPR): Remove.\n+\t* cp-tree.h (cxx_callgraph_analyze_expr): Remove.\n+\n 2012-04-21  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR 35441"}, {"sha": "06cc796050b6f6aadfbb3c067872a0cf1cf9e2b1", "filename": "gcc/cp/cp-objcp-common.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ca8f4865287b413a702608a7e40380e599df8d9/gcc%2Fcp%2Fcp-objcp-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ca8f4865287b413a702608a7e40380e599df8d9/gcc%2Fcp%2Fcp-objcp-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.h?ref=7ca8f4865287b413a702608a7e40380e599df8d9", "patch": "@@ -110,9 +110,6 @@ extern void cp_common_init_ts (void);\n #undef LANG_HOOKS_TREE_DUMP_TYPE_QUALS_FN\n #define LANG_HOOKS_TREE_DUMP_TYPE_QUALS_FN cp_type_quals\n \n-#undef LANG_HOOKS_CALLGRAPH_ANALYZE_EXPR\n-#define LANG_HOOKS_CALLGRAPH_ANALYZE_EXPR cxx_callgraph_analyze_expr\n-\n #undef LANG_HOOKS_MAKE_TYPE\n #define LANG_HOOKS_MAKE_TYPE cxx_make_type\n #undef LANG_HOOKS_TYPE_FOR_MODE"}, {"sha": "429ac2c5c744168f6ca739c99a94efbb6ba84232", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ca8f4865287b413a702608a7e40380e599df8d9/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ca8f4865287b413a702608a7e40380e599df8d9/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=7ca8f4865287b413a702608a7e40380e599df8d9", "patch": "@@ -5136,7 +5136,6 @@ extern tree cp_build_parm_decl\t\t\t(tree, tree);\n extern tree get_guard\t\t\t\t(tree);\n extern tree get_guard_cond\t\t\t(tree);\n extern tree set_guard\t\t\t\t(tree);\n-extern tree cxx_callgraph_analyze_expr\t\t(tree *, int *);\n extern void mark_needed\t\t\t\t(tree);\n extern bool decl_needed_p\t\t\t(tree);\n extern void note_vague_linkage_fn\t\t(tree);"}, {"sha": "23b98f5401b267cdc3a5b134a538b3bba1c1bb1d", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 45, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ca8f4865287b413a702608a7e40380e599df8d9/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ca8f4865287b413a702608a7e40380e599df8d9/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=7ca8f4865287b413a702608a7e40380e599df8d9", "patch": "@@ -1782,10 +1782,7 @@ var_finalized_p (tree var)\n void\n mark_needed (tree decl)\n {\n-  /* It's possible that we no longer need to set\n-     TREE_SYMBOL_REFERENCED here directly, but doing so is\n-     harmless.  */\n-  TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (decl)) = 1;\n+  TREE_USED (decl) = 1;\n   mark_decl_referenced (decl);\n }\n \n@@ -1811,9 +1808,7 @@ decl_needed_p (tree decl)\n     return true;\n   /* If this entity was used, let the back end see it; it will decide\n      whether or not to emit it into the object file.  */\n-  if (TREE_USED (decl)\n-      || (DECL_ASSEMBLER_NAME_SET_P (decl)\n-\t  && TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (decl))))\n+  if (TREE_USED (decl))\n       return true;\n   /* Functions marked \"dllexport\" must be emitted so that they are\n      visible to other DLLs.  */\n@@ -3436,44 +3431,6 @@ generate_ctor_and_dtor_functions_for_priority (splay_tree_node n, void * data)\n   return 0;\n }\n \n-/* Called via LANGHOOK_CALLGRAPH_ANALYZE_EXPR.  It is supposed to mark\n-   decls referenced from front-end specific constructs; it will be called\n-   only for language-specific tree nodes.\n-\n-   Here we must deal with member pointers.  */\n-\n-tree\n-cxx_callgraph_analyze_expr (tree *tp, int *walk_subtrees ATTRIBUTE_UNUSED)\n-{\n-  tree t = *tp;\n-\n-  switch (TREE_CODE (t))\n-    {\n-    case PTRMEM_CST:\n-      if (TYPE_PTRMEMFUNC_P (TREE_TYPE (t)))\n-\tcgraph_mark_address_taken_node (\n-\t\t\t      cgraph_get_create_node (PTRMEM_CST_MEMBER (t)));\n-      break;\n-    case BASELINK:\n-      if (TREE_CODE (BASELINK_FUNCTIONS (t)) == FUNCTION_DECL)\n-\tcgraph_mark_address_taken_node (\n-\t\t\t      cgraph_get_create_node (BASELINK_FUNCTIONS (t)));\n-      break;\n-    case VAR_DECL:\n-      if (DECL_CONTEXT (t)\n-\t  && flag_use_repository\n-\t  && TREE_CODE (DECL_CONTEXT (t)) == FUNCTION_DECL)\n-\t/* If we need a static variable in a function, then we\n-\t   need the containing function.  */\n-\tmark_decl_referenced (DECL_CONTEXT (t));\n-      break;\n-    default:\n-      break;\n-    }\n-\n-  return NULL;\n-}\n-\n /* Java requires that we be able to reference a local address for a\n    method, and not be confused by PLT entries.  If hidden aliases are\n    supported, collect and return all the functions for which we should"}, {"sha": "cea44d491d3f8ca49c4f287e9e5b2d3565aff5b2", "filename": "gcc/cp/method.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ca8f4865287b413a702608a7e40380e599df8d9/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ca8f4865287b413a702608a7e40380e599df8d9/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=7ca8f4865287b413a702608a7e40380e599df8d9", "patch": "@@ -244,7 +244,6 @@ make_alias_for (tree target, tree newid)\n   TREE_ADDRESSABLE (alias) = 1;\n   TREE_USED (alias) = 1;\n   SET_DECL_ASSEMBLER_NAME (alias, DECL_NAME (alias));\n-  TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (alias)) = 1;\n   return alias;\n }\n "}]}