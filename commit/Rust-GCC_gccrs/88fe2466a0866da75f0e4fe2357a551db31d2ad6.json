{"sha": "88fe2466a0866da75f0e4fe2357a551db31d2ad6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhmZTI0NjZhMDg2NmRhNzVmMGU0ZmUyMzU3YTU1MWRiMzFkMmFkNg==", "commit": {"author": {"name": "Tim Josling", "email": "tej@melbpc.org.au", "date": "2002-08-17T23:13:12Z"}, "committer": {"name": "Tim Josling", "email": "timjosling@gcc.gnu.org", "date": "2002-08-17T23:13:12Z"}, "message": "treelang fixes to accommodate chaqnges elsewhere.\n\nFrom-SVN: r56412", "tree": {"sha": "22a551203849ff5843e7a506bba4373f235f0057", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22a551203849ff5843e7a506bba4373f235f0057"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88fe2466a0866da75f0e4fe2357a551db31d2ad6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88fe2466a0866da75f0e4fe2357a551db31d2ad6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88fe2466a0866da75f0e4fe2357a551db31d2ad6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88fe2466a0866da75f0e4fe2357a551db31d2ad6/comments", "author": null, "committer": null, "parents": [{"sha": "2984fe64968ad7140e84f8137c877c9e6d25136a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2984fe64968ad7140e84f8137c877c9e6d25136a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2984fe64968ad7140e84f8137c877c9e6d25136a"}], "stats": {"total": 76, "additions": 15, "deletions": 61}, "files": [{"sha": "1d19169bd8ed5760d4a726510ddddaf91451ee8e", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88fe2466a0866da75f0e4fe2357a551db31d2ad6/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88fe2466a0866da75f0e4fe2357a551db31d2ad6/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=88fe2466a0866da75f0e4fe2357a551db31d2ad6", "patch": "@@ -1,3 +1,17 @@\n+2002-08-16  Tim Josling  <tej@melbpc.org.au>\n+\n+        Remove variables and functions now defined elsewhere.\n+\t\n+\t* treetree.c (maybe_objc_comptypes): Remove.\n+\t(warn_format, warn_format_y2k, warn_format_extra_args,\n+\twarn_format_nonliteral, warn_format_security,\n+\twarn_format_zero_length): Remove.\n+\t(maybe_building_objc_message_expr): Remove.\n+\t(cpp_post_options): Remove.\n+\t(maybe_objc_check_decl): Remove.\n+\t(integer_types): Remove.\n+\n+\n 2002-08-13  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* treelang.c: Remove cpp_post_options."}, {"sha": "78c96c97717f359c3fcb2bca6f535a1a3f139479", "filename": "gcc/treelang/treetree.c", "status": "modified", "additions": 1, "deletions": 61, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88fe2466a0866da75f0e4fe2357a551db31d2ad6/gcc%2Ftreelang%2Ftreetree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88fe2466a0866da75f0e4fe2357a551db31d2ad6/gcc%2Ftreelang%2Ftreetree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Ftreetree.c?ref=88fe2466a0866da75f0e4fe2357a551db31d2ad6", "patch": "@@ -90,16 +90,6 @@\n extern int option_main;\n extern char **file_names;\n \n-/* Flags etc required by c code.  */\n-\n-int warn_format = 0;\n-int warn_format_y2k = 0;\n-int warn_format_extra_args = 0;\n-int warn_format_nonliteral = 0;\n-int warn_format_security = 0;\n-int warn_format_zero_length = 0;\n-\n-\n /* The front end language hooks (addresses of code for this front\n    end).  Mostly just use the C routines.  */\n \n@@ -850,21 +840,6 @@ tree_ggc_storage_always_used (void * m)\n \n /* Following  from c-lang.c.  */\n \n-/* Tell the c code we are not objective C.  */\n-\n-int\n-maybe_objc_comptypes (tree lhs ATTRIBUTE_UNUSED,\n-                      tree rhs ATTRIBUTE_UNUSED,\n-                      int reflexive ATTRIBUTE_UNUSED);\n-\n-int\n-maybe_objc_comptypes (tree lhs ATTRIBUTE_UNUSED,\n-                      tree rhs ATTRIBUTE_UNUSED,\n-                      int reflexive ATTRIBUTE_UNUSED)\n-{\n-  return -1;\n-}\n-\n /* Used by c-typeck.c (build_external_ref), but only for objc.  */\n \n tree\n@@ -885,17 +860,6 @@ check_function_format (int *status ATTRIBUTE_UNUSED,\n \n /* Tell the c code we are not objective C.  */\n \n-tree\n-maybe_building_objc_message_expr (void);\n-\n-tree\n-maybe_building_objc_message_expr ()\n-{\n-  return 0;\n-}\n-\n-/* Tell the c code we are not objective C.  */\n-\n int\n objc_comptypes (tree lhs ATTRIBUTE_UNUSED, \n                 tree rhs ATTRIBUTE_UNUSED, \n@@ -972,14 +936,6 @@ cpp_create_reader (enum c_lang lang ATTRIBUTE_UNUSED)\n \n /* Should not be called for treelang.   */\n \n-void\n-cpp_post_options (cpp_reader *pfile ATTRIBUTE_UNUSED)\n-{\n-  abort ();\n-}\n-\n-/* Should not be called for treelang.   */\n-\n const char *\n init_c_lex (const char *filename ATTRIBUTE_UNUSED)\n {\n@@ -1063,17 +1019,6 @@ set_Wformat (int setting ATTRIBUTE_UNUSED)\n   abort ();\n }\n \n-/* Should not be called for treelang.   */\n-\n-void\n-maybe_objc_check_decl (tree decl ATTRIBUTE_UNUSED);\n-\n-void\n-maybe_objc_check_decl (tree decl ATTRIBUTE_UNUSED)\n-{\n-  abort ();\n-}\n-\n /* Used for objective C.  */\n \n void\n@@ -1082,6 +1027,7 @@ objc_check_decl (tree decl ATTRIBUTE_UNUSED);\n void\n objc_check_decl (tree decl ATTRIBUTE_UNUSED)\n {\n+  abort ();\n }\n \n /* Tell the c code we are not objective C.  */\n@@ -1202,12 +1148,6 @@ cpp_get_callbacks (cpp_reader * cr ATTRIBUTE_UNUSED)\n      Note that stddef.h uses `unsigned long',\n      and this must agree, even if long and int are the same size.  */\n \n-/* This variable keeps a table for types for each precision so that we\n-   only allocate each of them once.  Signed and unsigned types are\n-   kept separate.  */\n-\n-tree integer_types[itk_none] = { NULL_TREE};\n-\n /* The reserved keyword table.  */\n struct resword\n {"}]}