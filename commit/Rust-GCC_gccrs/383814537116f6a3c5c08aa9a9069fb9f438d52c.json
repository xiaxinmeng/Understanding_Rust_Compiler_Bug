{"sha": "383814537116f6a3c5c08aa9a9069fb9f438d52c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgzODE0NTM3MTE2ZjZhM2M1YzA4YWE5YTkwNjlmYjlmNDM4ZDUyYw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-11-30T13:54:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-17T10:49:21Z"}, "message": "[Ada] Better diagnostic for new language features\n\ngcc/ada/\n\n\t* par-ch12.adb (P_Formal_Derived_Type_Definition): Complain\n\tabout formal type with aspect specification, which only become\n\tlegal in Ada 2020.\n\t* par-ch9.adb (P_Protected_Operation_Declaration_Opt): Reuse\n\tError_Msg_Ada_2005_Extension.\n\t(P_Entry_Declaration): Likewise.\n\t* scng.adb (Scan): Improve diagnostics for target_name; emit\n\terror, but otherwise continue in earlier than Ada 2020 modes.", "tree": {"sha": "99118d37a58b63bf5eaabb44a5386dc1e5476c10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99118d37a58b63bf5eaabb44a5386dc1e5476c10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/383814537116f6a3c5c08aa9a9069fb9f438d52c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/383814537116f6a3c5c08aa9a9069fb9f438d52c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/383814537116f6a3c5c08aa9a9069fb9f438d52c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/383814537116f6a3c5c08aa9a9069fb9f438d52c/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11ad366da5edd79b64095d809c0e9debe80edfb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11ad366da5edd79b64095d809c0e9debe80edfb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11ad366da5edd79b64095d809c0e9debe80edfb2"}], "stats": {"total": 43, "additions": 19, "deletions": 24}, "files": [{"sha": "a4799c75a78227943fdc117ba0e12763c45eb842", "filename": "gcc/ada/par-ch12.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383814537116f6a3c5c08aa9a9069fb9f438d52c/gcc%2Fada%2Fpar-ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383814537116f6a3c5c08aa9a9069fb9f438d52c/gcc%2Fada%2Fpar-ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch12.adb?ref=383814537116f6a3c5c08aa9a9069fb9f438d52c", "patch": "@@ -949,20 +949,21 @@ package body Ch12 is\n \n       if Token = Tok_With then\n \n-         if Ada_Version >= Ada_2020 and not Next_Token_Is (Tok_Private) then\n-\n+         if Next_Token_Is (Tok_Private) then\n+            Scan; -- past WITH\n+            Set_Private_Present (Def_Node, True);\n+            T_Private;\n+         else\n             --  Formal type has aspect specifications, parsed later.\n             --  Otherwise this is a formal derived type. Note that it may\n             --  also include later aspect specifications, as in:\n \n-            --    type DT is new T with private with atomic;\n+            --    type DT is new T with private with Atomic;\n \n-            return Def_Node;\n+            Error_Msg_Ada_2020_Feature\n+              (\"formal type with aspect specification\", Token_Ptr);\n \n-         else\n-            Scan; -- past WITH\n-            Set_Private_Present (Def_Node, True);\n-            T_Private;\n+            return Def_Node;\n          end if;\n \n       elsif Token = Tok_Tagged then"}, {"sha": "151656ca13d5f2215e2be78ca2aa590d96236ac0", "filename": "gcc/ada/par-ch9.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383814537116f6a3c5c08aa9a9069fb9f438d52c/gcc%2Fada%2Fpar-ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383814537116f6a3c5c08aa9a9069fb9f438d52c/gcc%2Fada%2Fpar-ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch9.adb?ref=383814537116f6a3c5c08aa9a9069fb9f438d52c", "patch": "@@ -752,8 +752,7 @@ package body Ch9 is\n \n          if Is_Overriding or else Not_Overriding then\n             if Ada_Version < Ada_2005 then\n-               Error_Msg_SP (\"overriding indicator is an Ada 2005 extension\");\n-               Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n+               Error_Msg_Ada_2005_Extension (\"overriding indicator\");\n \n             elsif Token = Tok_Entry then\n                Decl := P_Entry_Declaration;\n@@ -962,9 +961,7 @@ package body Ch9 is\n \n       if Is_Overriding or else Not_Overriding then\n          if Ada_Version < Ada_2005 then\n-            Error_Msg_SP (\"overriding indicator is an Ada 2005 extension\");\n-            Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n-\n+            Error_Msg_Ada_2005_Extension (\"overriding indicator\");\n          elsif Token /= Tok_Entry then\n             Error_Msg_SC -- CODEFIX\n               (\"ENTRY expected!\");"}, {"sha": "df6a6892d4e921bae674a686895ac5732a80804d", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383814537116f6a3c5c08aa9a9069fb9f438d52c/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383814537116f6a3c5c08aa9a9069fb9f438d52c/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=383814537116f6a3c5c08aa9a9069fb9f438d52c", "patch": "@@ -25,6 +25,7 @@\n \n with Atree;    use Atree;\n with Csets;    use Csets;\n+with Errout;   use Errout;\n with Hostparm; use Hostparm;\n with Namet;    use Namet;\n with Opt;      use Opt;\n@@ -1299,19 +1300,15 @@ package body Scng is\n                return;\n             end if;\n \n-         when '@' =>\n-            if Ada_Version < Ada_2020 then\n-               Error_Msg (\"target_name is an Ada 202x feature\", Scan_Ptr);\n-               Scan_Ptr := Scan_Ptr + 1;\n+         --  AI12-0125-03 : @ is target_name\n \n-            else\n-               --  AI12-0125-03 : @ is target_name\n+         when '@' =>\n+            Error_Msg_Ada_2020_Feature (\"target name\", Token_Ptr);\n \n-               Accumulate_Checksum ('@');\n-               Scan_Ptr := Scan_Ptr + 1;\n-               Token := Tok_At_Sign;\n-               return;\n-            end if;\n+            Accumulate_Checksum ('@');\n+            Scan_Ptr := Scan_Ptr + 1;\n+            Token := Tok_At_Sign;\n+            return;\n \n          --  Asterisk (can be multiplication operator or double asterisk which\n          --  is the exponentiation compound delimiter)."}]}