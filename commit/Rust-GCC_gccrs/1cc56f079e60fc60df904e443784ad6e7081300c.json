{"sha": "1cc56f079e60fc60df904e443784ad6e7081300c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNjNTZmMDc5ZTYwZmM2MGRmOTA0ZTQ0Mzc4NGFkNmU3MDgxMzAwYw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-06-13T15:14:48Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-06-13T15:14:48Z"}, "message": "PR libstdc++/86127 avoid unnecessary allocator conversions\n\nThere is no need to use an allocator of the correct value_type when\ncalling allocator_traits::construct and allocator_traits::destroy. The\nexisting node allocator can be used, instead of constructing a new\nallocator object every time.\n\nThere's also no benefit to using __gnu_cxx::__alloc_traits instead of\nstd::allocator_traits to get the pointer and const_pointer types.\nstd::forward_list is only available for C++11 and later, when\nstd::allocator_traits is available too.\n\n\tPR libstdc++/86127\n\t* include/bits/forward_list.h (_Fwd_list_base::_Tp_alloc_type): Remove\n\tunused typedef.\n\t(_Fwd_list_base::_Node_alloc_traits): Use allocator_traits instead of\n\t__gnu_cxx::__alloc_traits.\n\t(_Fwd_list_base::_M_create_node, _Fwd_list_base::_M_erase_after):\n\tUse node allocator to create and destroy elements.\n\t(forward_list::_Tp_alloc_type): Remove unused typedef.\n\t(forward_list::_Alloc_traits): Use allocator_traits instead of\n\t__gnu_cxx::__alloc_traits.\n\nFrom-SVN: r261554", "tree": {"sha": "e7c88fc2dfec795bd2110d8e2b6ea279fe0daf89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7c88fc2dfec795bd2110d8e2b6ea279fe0daf89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cc56f079e60fc60df904e443784ad6e7081300c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cc56f079e60fc60df904e443784ad6e7081300c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cc56f079e60fc60df904e443784ad6e7081300c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cc56f079e60fc60df904e443784ad6e7081300c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b76867b211f2db8df2f98926ef47fb8c9ea29ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b76867b211f2db8df2f98926ef47fb8c9ea29ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b76867b211f2db8df2f98926ef47fb8c9ea29ee"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "9f33999563bcd1239075e21595951eb909242290", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cc56f079e60fc60df904e443784ad6e7081300c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cc56f079e60fc60df904e443784ad6e7081300c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1cc56f079e60fc60df904e443784ad6e7081300c", "patch": "@@ -1,3 +1,16 @@\n+2018-06-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/86127\n+\t* include/bits/forward_list.h (_Fwd_list_base::_Tp_alloc_type): Remove\n+\tunused typedef.\n+\t(_Fwd_list_base::_Node_alloc_traits): Use allocator_traits instead of\n+\t__gnu_cxx::__alloc_traits.\n+\t(_Fwd_list_base::_M_create_node, _Fwd_list_base::_M_erase_after):\n+\tUse node allocator to create and destroy elements.\n+\t(forward_list::_Tp_alloc_type): Remove unused typedef.\n+\t(forward_list::_Alloc_traits): Use allocator_traits instead of\n+\t__gnu_cxx::__alloc_traits.\n+\n 2018-06-13  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/debug/debug.h (__glibcxx_requires_can_increment_range): New."}, {"sha": "8c4c074e454733e41130b419b8526de9749131c7", "filename": "libstdc++-v3/include/bits/forward_list.h", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cc56f079e60fc60df904e443784ad6e7081300c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cc56f079e60fc60df904e443784ad6e7081300c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h?ref=1cc56f079e60fc60df904e443784ad6e7081300c", "patch": "@@ -289,7 +289,6 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     struct _Fwd_list_base\n     {\n     protected:\n-      typedef __alloc_rebind<_Alloc, _Tp> \t\t  _Tp_alloc_type;\n       typedef __alloc_rebind<_Alloc, _Fwd_list_node<_Tp>> _Node_alloc_type;\n       typedef __gnu_cxx::__alloc_traits<_Node_alloc_type> _Node_alloc_traits;\n \n@@ -363,11 +362,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t  _Node* __node = this->_M_get_node();\n \t  __try\n \t    {\n-\t      _Tp_alloc_type __a(_M_get_Node_allocator());\n-\t      typedef allocator_traits<_Tp_alloc_type> _Alloc_traits;\n \t      ::new ((void*)__node) _Node;\n-\t      _Alloc_traits::construct(__a, __node->_M_valptr(),\n-\t\t\t\t       std::forward<_Args>(__args)...);\n+\t      _Node_alloc_traits::construct(_M_get_Node_allocator(),\n+\t\t\t\t\t    __node->_M_valptr(),\n+\t\t\t\t\t    std::forward<_Args>(__args)...);\n \t    }\n \t  __catch(...)\n \t    {\n@@ -437,10 +435,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       typedef _Fwd_list_base<_Tp, _Alloc>\t\t_Base;\n       typedef _Fwd_list_node<_Tp>\t\t\t_Node;\n       typedef _Fwd_list_node_base\t\t\t_Node_base;\n-      typedef typename _Base::_Tp_alloc_type\t\t_Tp_alloc_type;\n       typedef typename _Base::_Node_alloc_type\t\t_Node_alloc_type;\n       typedef typename _Base::_Node_alloc_traits\t_Node_alloc_traits;\n-      typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>\t_Alloc_traits;\n+      typedef allocator_traits<__alloc_rebind<_Alloc, _Tp>>\t_Alloc_traits;\n \n     public:\n       // types:"}, {"sha": "b41fbbb52f2c9433a156781989a4cb4adcb76c60", "filename": "libstdc++-v3/include/bits/forward_list.tcc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cc56f079e60fc60df904e443784ad6e7081300c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cc56f079e60fc60df904e443784ad6e7081300c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.tcc?ref=1cc56f079e60fc60df904e443784ad6e7081300c", "patch": "@@ -65,8 +65,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     {\n       _Node* __curr = static_cast<_Node*>(__pos->_M_next);\n       __pos->_M_next = __curr->_M_next;\n-      _Tp_alloc_type __a(_M_get_Node_allocator());\n-      allocator_traits<_Tp_alloc_type>::destroy(__a, __curr->_M_valptr());\n+      _Node_alloc_traits::destroy(_M_get_Node_allocator(),\n+\t\t\t\t  __curr->_M_valptr());\n       __curr->~_Node();\n       _M_put_node(__curr);\n       return __pos->_M_next;\n@@ -83,8 +83,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t{\n \t  _Node* __temp = __curr;\n \t  __curr = static_cast<_Node*>(__curr->_M_next);\n-\t  _Tp_alloc_type __a(_M_get_Node_allocator());\n-\t  allocator_traits<_Tp_alloc_type>::destroy(__a, __temp->_M_valptr());\n+\t  _Node_alloc_traits::destroy(_M_get_Node_allocator(),\n+\t\t\t\t      __temp->_M_valptr());\n \t  __temp->~_Node();\n \t  _M_put_node(__temp);\n \t}"}]}