{"sha": "345b912f506bad61fcd703b6aa405a3a94f01024", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ1YjkxMmY1MDZiYWQ2MWZjZDcwM2I2YWE0MDVhM2E5NGYwMTAyNA==", "commit": {"author": {"name": "Dhruv Matani", "email": "dhruvbird@gmx.net", "date": "2004-06-07T21:56:16Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-06-07T21:56:16Z"}, "message": "2004-06-07  Dhruv Matani  <dhruvbird@gmx.net>\n\t    Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/testsuite_performance.h\n\t(resource_counter::allocated_memory): Make it return the right\n\tnumber of bytes requested by the allocators/application. This is\n\tthe sbrk+mmaped memory.\n\nCo-Authored-By: Paolo Carlini <pcarlini@suse.de>\n\nFrom-SVN: r82725", "tree": {"sha": "6e35a5c861a70677daa5f1bfb65b1d67caa7ae1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e35a5c861a70677daa5f1bfb65b1d67caa7ae1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/345b912f506bad61fcd703b6aa405a3a94f01024", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/345b912f506bad61fcd703b6aa405a3a94f01024", "html_url": "https://github.com/Rust-GCC/gccrs/commit/345b912f506bad61fcd703b6aa405a3a94f01024", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/345b912f506bad61fcd703b6aa405a3a94f01024/comments", "author": null, "committer": null, "parents": [{"sha": "85bbb21f8f810152bf51558180f7c6520aca6571", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85bbb21f8f810152bf51558180f7c6520aca6571", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85bbb21f8f810152bf51558180f7c6520aca6571"}], "stats": {"total": 46, "additions": 36, "deletions": 10}, "files": [{"sha": "8e210ce852fb6f1382c7371c21697e2e1c5acf04", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345b912f506bad61fcd703b6aa405a3a94f01024/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345b912f506bad61fcd703b6aa405a3a94f01024/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=345b912f506bad61fcd703b6aa405a3a94f01024", "patch": "@@ -1,3 +1,11 @@\n+2004-06-07  Dhruv Matani  <dhruvbird@gmx.net>\n+\t    Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/testsuite_performance.h\n+\t(resource_counter::allocated_memory): Make it return the right\n+\tnumber of bytes requested by the allocators/application. This is\n+\tthe sbrk+mmaped memory.\n+\n 2004-06-02  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* include/std/std_complex.h (log): Tidy."}, {"sha": "a0d0c2991d978ec3b9681916e517893b17b5252d", "filename": "libstdc++-v3/testsuite/testsuite_performance.h", "status": "modified", "additions": 28, "deletions": 10, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345b912f506bad61fcd703b6aa405a3a94f01024/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_performance.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345b912f506bad61fcd703b6aa405a3a94f01024/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_performance.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_performance.h?ref=345b912f506bad61fcd703b6aa405a3a94f01024", "patch": "@@ -43,16 +43,33 @@\n #elif defined (__FreeBSD__)\n extern \"C\"\n {\n-  struct mallinfo { int uordblks; };\n-  struct mallinfo mallinfo(void)\n-    { struct mallinfo m = { (((size_t) sbrk (0) + 1023) / 1024) }; return m; }\n+  struct mallinfo\n+  {\n+    int uordblks;\n+    int hblkhd;\n+  };\n+\n+  struct mallinfo\n+  mallinfo(void)\n+  {\n+    struct mallinfo m = { (((size_t) sbrk (0) + 1023) / 1024), 0 };\n+    return m;\n+  }\n }\n #else\n extern \"C\"\n {\n-  struct mallinfo { int uordblks; };\n-  struct mallinfo empty = { 0 };\n-  struct mallinfo mallinfo(void) { return empty; }\n+  struct mallinfo\n+  {\n+    int uordblks;\n+    int hblkhd;\n+  };\n+\n+  struct mallinfo empty = { 0, 0 };\n+\n+  struct mallinfo\n+  mallinfo(void)\n+  { return empty; }\n }\n #endif\n \n@@ -101,9 +118,9 @@ namespace __gnu_test\n \n   class resource_counter\n   {\n-    int\t\twho;\n-    rusage\trusage_begin;\n-    rusage\trusage_end;\n+    int                 who;\n+    rusage\t        rusage_begin;\n+    rusage\t        rusage_end;\n     struct mallinfo  \tallocation_begin;\n     struct mallinfo  \tallocation_end;\n \n@@ -139,7 +156,8 @@ namespace __gnu_test\n \n     int\n     allocated_memory() const\n-    { return allocation_end.uordblks - allocation_begin.uordblks; }\n+    { return ((allocation_end.uordblks - allocation_begin.uordblks)\n+\t      + (allocation_end.hblkhd - allocation_begin.hblkhd)); }\n     \n     long \n     hard_page_fault() const"}]}