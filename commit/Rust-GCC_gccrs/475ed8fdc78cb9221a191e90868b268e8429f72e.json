{"sha": "475ed8fdc78cb9221a191e90868b268e8429f72e", "node_id": "C_kwDOANBUbNoAKDQ3NWVkOGZkYzc4Y2I5MjIxYTE5MWU5MDg2OGIyNjhlODQyOWY3MmU", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-08-13T00:16:54Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-08-13T00:16:54Z"}, "message": "Daily bump.", "tree": {"sha": "ad894f2c93783b864b400d89fcb3561196185ed2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad894f2c93783b864b400d89fcb3561196185ed2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/475ed8fdc78cb9221a191e90868b268e8429f72e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/475ed8fdc78cb9221a191e90868b268e8429f72e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/475ed8fdc78cb9221a191e90868b268e8429f72e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/475ed8fdc78cb9221a191e90868b268e8429f72e/comments", "author": null, "committer": null, "parents": [{"sha": "b748d46ab15f5e745437af0653329059f9b35669", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b748d46ab15f5e745437af0653329059f9b35669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b748d46ab15f5e745437af0653329059f9b35669"}], "stats": {"total": 129, "additions": 128, "deletions": 1}, "files": [{"sha": "dad7ce90c723e8163bfbf5de706e8af0b63edc67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/475ed8fdc78cb9221a191e90868b268e8429f72e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/475ed8fdc78cb9221a191e90868b268e8429f72e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=475ed8fdc78cb9221a191e90868b268e8429f72e", "patch": "@@ -1,3 +1,47 @@\n+2022-08-12  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n+\n+\t* doc/invoke.texi (Arm Options): Document -mcpu=cortex-m55 options.\n+\n+2022-08-12  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR middle-end/106057\n+\t* ipa-devirt.cc (type_or_derived_type_possibly_instantiated_p): New\n+\tfunction.\n+\t(possible_polymorphic_call_targets): Use it.\n+\n+2022-08-12  Andrew Carlotti  <andrew.carlotti@arm.com>\n+\n+\t* tree-ssa-loop.h: Improve comment\n+\n+2022-08-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/106506\n+\t* tree-ssa-phiopt.cc (spaceship_replacement): Don't punt for\n+\tis_cast or orig_use_lhs cases if phi_bb has 3 predecessors.\n+\n+2022-08-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106593\n+\t* tree-ssa-threadbackward.cc (back_threader::find_paths):\n+\tIf the imports from the conditional do not satisfy\n+\tgimple_range_ssa_p don't try to thread anything.\n+\n+2022-08-12  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR target/106524\n+\t* config/aarch64/aarch64-sve.md (*fcmuo<mode>_nor_combine,\n+\t*fcmuo<mode>_bic_combine): Don't accept comparisons against zero.\n+\n+2022-08-12  Tim Lange  <mail@tim-lange.me>\n+\n+\tPR analyzer/106000\n+\t* doc/invoke.texi: Add Wanalyzer-out-of-bounds.\n+\n+2022-08-12  Andrew Pinski  <apinski@marvell.com>\n+\n+\t* config/aarch64/aarch64.md: Remove comment\n+\tabout MD_INCLUDES as it is out of date and not needed.\n+\n 2022-08-11  Richard Biener  <rguenther@suse.de>\n \n \t* gimple-range-path.cc (path_range_query::compute_imports):"}, {"sha": "763830cfe05354885cdce8b902006143cbd9b15b", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/475ed8fdc78cb9221a191e90868b268e8429f72e/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/475ed8fdc78cb9221a191e90868b268e8429f72e/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=475ed8fdc78cb9221a191e90868b268e8429f72e", "patch": "@@ -1 +1 @@\n-20220812\n+20220813"}, {"sha": "2f03c556cae9628f9805dab41b116c31c5d93fee", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/475ed8fdc78cb9221a191e90868b268e8429f72e/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/475ed8fdc78cb9221a191e90868b268e8429f72e/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=475ed8fdc78cb9221a191e90868b268e8429f72e", "patch": "@@ -1,3 +1,42 @@\n+2022-08-12  Tim Lange  <mail@tim-lange.me>\n+\n+\tPR analyzer/106000\n+\t* analyzer.opt: Add Wanalyzer-out-of-bounds.\n+\t* region-model.cc (class out_of_bounds): Diagnostics base class\n+\tfor all out-of-bounds diagnostics.\n+\t(class past_the_end): Base class derived from out_of_bounds for\n+\tthe buffer_overflow and buffer_overread diagnostics.\n+\t(class buffer_overflow): Buffer overflow diagnostics.\n+\t(class buffer_overread): Buffer overread diagnostics.\n+\t(class buffer_underflow): Buffer underflow diagnostics.\n+\t(class buffer_underread): Buffer overread diagnostics.\n+\t(region_model::check_region_bounds): New function to check region\n+\tbounds for out-of-bounds accesses.\n+\t(region_model::check_region_access):\n+\tAdd call to check_region_bounds.\n+\t(region_model::get_representative_tree): New function that accepts\n+\ta region instead of an svalue.\n+\t* region-model.h (class region_model):\n+\tAdd region_model::check_region_bounds.\n+\t* region.cc (region::symbolic_p): New predicate.\n+\t(offset_region::get_byte_size_sval): Only return the remaining\n+\tbyte size on offset_regions.\n+\t* region.h: Add region::symbolic_p.\n+\t* store.cc (byte_range::intersects_p):\n+\tAdd new function equivalent to bit_range::intersects_p.\n+\t(byte_range::exceeds_p): New function.\n+\t(byte_range::falls_short_of_p): New function.\n+\t* store.h (struct byte_range): Add byte_range::intersects_p,\n+\tbyte_range::exceeds_p and byte_range::falls_short_of_p.\n+\n+2022-08-12  Tim Lange  <mail@tim-lange.me>\n+\n+\tPR analyzer/106539\n+\t* region-model-impl-calls.cc (region_model::impl_call_realloc):\n+\tUse the result of get_copied_size as the size for the\n+\tsized_regions in realloc.\n+\t(success_with_move::get_copied_size): New function.\n+\n 2022-08-11  Immad Mir  <mirimmad@outlook.com>\n \n \tPR analyzer/106551"}, {"sha": "b61e5a25442e40a9aa207b8bfa2062722f25bca5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/475ed8fdc78cb9221a191e90868b268e8429f72e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/475ed8fdc78cb9221a191e90868b268e8429f72e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=475ed8fdc78cb9221a191e90868b268e8429f72e", "patch": "@@ -1,3 +1,47 @@\n+2022-08-12  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR middle-end/106057\n+\t* g++.dg/tree-ssa/pr101839.C: New test.\n+\n+2022-08-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/106506\n+\t* g++.dg/opt/pr94589-2.C: New test.\n+\n+2022-08-12  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR target/106524\n+\t* gcc.target/aarch64/sve/pr106524.c: New test.\n+\n+2022-08-12  Tim Lange  <mail@tim-lange.me>\n+\n+\tPR analyzer/106000\n+\t* g++.dg/analyzer/pr100244.C: Disable out-of-bounds warning.\n+\t* gcc.dg/analyzer/allocation-size-3.c:\n+\tDisable out-of-bounds warning.\n+\t* gcc.dg/analyzer/memcpy-2.c: Disable out-of-bounds warning.\n+\t* gcc.dg/analyzer/pr101962.c: Add dg-warning.\n+\t* gcc.dg/analyzer/pr96764.c: Disable out-of-bounds warning.\n+\t* gcc.dg/analyzer/pr97029.c:\n+\tAdd dummy buffer to prevent an out-of-bounds warning.\n+\t* gcc.dg/analyzer/realloc-5.c: Add dg-warning.\n+\t* gcc.dg/analyzer/test-setjmp.h:\n+\tAdd dummy buffer to prevent an out-of-bounds warning.\n+\t* gcc.dg/analyzer/zlib-3.c: Add dg-bogus.\n+\t* g++.dg/analyzer/out-of-bounds-placement-new.C: New test.\n+\t* gcc.dg/analyzer/out-of-bounds-1.c: New test.\n+\t* gcc.dg/analyzer/out-of-bounds-2.c: New test.\n+\t* gcc.dg/analyzer/out-of-bounds-3.c: New test.\n+\t* gcc.dg/analyzer/out-of-bounds-container_of.c: New test.\n+\t* gcc.dg/analyzer/out-of-bounds-coreutils.c: New test.\n+\t* gcc.dg/analyzer/out-of-bounds-curl.c: New test.\n+\n+2022-08-12  Tim Lange  <mail@tim-lange.me>\n+\n+\tPR analyzer/106539\n+\t* gcc.dg/analyzer/pr106539.c: New test.\n+\t* gcc.dg/analyzer/realloc-5.c: New test.\n+\n 2022-08-11  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gcc.dg/analyzer/fd-4.c: Define _MODE_T on AIX."}]}