{"sha": "970676420b393e14a8857887876b731552331e44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcwNjc2NDIwYjM5M2UxNGE4ODU3ODg3ODc2YjczMTU1MjMzMWU0NA==", "commit": {"author": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2005-07-19T21:15:36Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2005-07-19T21:15:36Z"}, "message": "Makefile.am (nodist_libffi_la_SOURCES): Add POWERPC_FREEBSD.\n\n2005-07-19  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* Makefile.am (nodist_libffi_la_SOURCES): Add POWERPC_FREEBSD.\n\t* Makefile.in: Regenerate.\n\t* include/Makefile.in: Likewise.\n\t* testsuite/Makefile.in: Likewise.\n\t* configure.ac: Add POWERPC_FREEBSD rules.\n\t* configure: Regenerate.\n\t* src/powerpc/ffitarget.h: Add POWERPC_FREEBSD rules.\n\t(FFI_SYSV_TYPE_SMALL_STRUCT): Define.\n\t* src/powerpc/ffi.c: Add flags to handle small structure returns\n\tin ffi_call_SYSV.\n\t(ffi_prep_cif_machdep): Handle small structures for SYSV 4 ABI.\n\tAka FFI_SYSV.\n\t(ffi_closure_helper_SYSV): Likewise.\n\t* src/powerpc/ppc_closure.S: Add return types for small structures.\n\t* src/powerpc/sysv.S: Add bits to handle small structures for\n\tfinal SYSV 4 ABI\n\nFrom-SVN: r102174", "tree": {"sha": "21351941ab537791da38bac3a026c412d513b438", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21351941ab537791da38bac3a026c412d513b438"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/970676420b393e14a8857887876b731552331e44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/970676420b393e14a8857887876b731552331e44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/970676420b393e14a8857887876b731552331e44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/970676420b393e14a8857887876b731552331e44/comments", "author": null, "committer": null, "parents": [{"sha": "af62f6f9a440d24b135f7d5023173180566a780e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af62f6f9a440d24b135f7d5023173180566a780e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af62f6f9a440d24b135f7d5023173180566a780e"}], "stats": {"total": 282, "additions": 229, "deletions": 53}, "files": [{"sha": "89a2426b32d90956abde5cdfc9ea86f3e132fc2f", "filename": "libffi/Makefile.am", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/970676420b393e14a8857887876b731552331e44/libffi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/970676420b393e14a8857887876b731552331e44/libffi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.am?ref=970676420b393e14a8857887876b731552331e44", "patch": "@@ -117,6 +117,9 @@ endif\n if POWERPC_DARWIN\n nodist_libffi_la_SOURCES += src/powerpc/ffi_darwin.c src/powerpc/darwin.S src/powerpc/darwin_closure.S\n endif\n+if POWERPC_FREEBSD\n+nodist_libffi_la_SOURCES += src/powerpc/ffi.c src/powerpc/sysv.S src/powerpc/ppc_closure.S\n+endif\n if ARM\n nodist_libffi_la_SOURCES += src/arm/sysv.S src/arm/ffi.c\n endif"}, {"sha": "c012a8a390f0bd27a5d11d09a21a4d210247c570", "filename": "libffi/Makefile.in", "status": "modified", "additions": 31, "deletions": 23, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/970676420b393e14a8857887876b731552331e44/libffi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/970676420b393e14a8857887876b731552331e44/libffi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.in?ref=970676420b393e14a8857887876b731552331e44", "patch": "@@ -51,14 +51,15 @@ target_triplet = @target@\n @POWERPC_TRUE@am__append_10 = src/powerpc/ffi.c src/powerpc/sysv.S src/powerpc/ppc_closure.S src/powerpc/linux64.S src/powerpc/linux64_closure.S\n @POWERPC_AIX_TRUE@am__append_11 = src/powerpc/ffi_darwin.c src/powerpc/aix.S src/powerpc/aix_closure.S\n @POWERPC_DARWIN_TRUE@am__append_12 = src/powerpc/ffi_darwin.c src/powerpc/darwin.S src/powerpc/darwin_closure.S\n-@ARM_TRUE@am__append_13 = src/arm/sysv.S src/arm/ffi.c\n-@LIBFFI_CRIS_TRUE@am__append_14 = src/cris/sysv.S src/cris/ffi.c\n-@FRV_TRUE@am__append_15 = src/frv/eabi.S src/frv/ffi.c\n-@S390_TRUE@am__append_16 = src/s390/sysv.S src/s390/ffi.c\n-@X86_64_TRUE@am__append_17 = src/x86/ffi64.c src/x86/unix64.S src/x86/ffi.c src/x86/sysv.S\n-@SH_TRUE@am__append_18 = src/sh/sysv.S src/sh/ffi.c\n-@SH64_TRUE@am__append_19 = src/sh64/sysv.S src/sh64/ffi.c\n-@PA_TRUE@am__append_20 = src/pa/linux.S src/pa/ffi.c\n+@POWERPC_FREEBSD_TRUE@am__append_13 = src/powerpc/ffi.c src/powerpc/sysv.S src/powerpc/ppc_closure.S\n+@ARM_TRUE@am__append_14 = src/arm/sysv.S src/arm/ffi.c\n+@LIBFFI_CRIS_TRUE@am__append_15 = src/cris/sysv.S src/cris/ffi.c\n+@FRV_TRUE@am__append_16 = src/frv/eabi.S src/frv/ffi.c\n+@S390_TRUE@am__append_17 = src/s390/sysv.S src/s390/ffi.c\n+@X86_64_TRUE@am__append_18 = src/x86/ffi64.c src/x86/unix64.S src/x86/ffi.c src/x86/sysv.S\n+@SH_TRUE@am__append_19 = src/sh/sysv.S src/sh/ffi.c\n+@SH64_TRUE@am__append_20 = src/sh64/sysv.S src/sh64/ffi.c\n+@PA_TRUE@am__append_21 = src/pa/linux.S src/pa/ffi.c\n DIST_COMMON = README $(am__configure_deps) $(srcdir)/../compile \\\n \t$(srcdir)/../config.guess $(srcdir)/../config.sub \\\n \t$(srcdir)/../depcomp $(srcdir)/../install-sh \\\n@@ -111,36 +112,40 @@ am_libffi_la_OBJECTS = src/debug.lo src/prep_cif.lo src/types.lo \\\n @POWERPC_DARWIN_TRUE@am__objects_12 = src/powerpc/ffi_darwin.lo \\\n @POWERPC_DARWIN_TRUE@\tsrc/powerpc/darwin.lo \\\n @POWERPC_DARWIN_TRUE@\tsrc/powerpc/darwin_closure.lo\n-@ARM_TRUE@am__objects_13 = src/arm/sysv.lo src/arm/ffi.lo\n-@LIBFFI_CRIS_TRUE@am__objects_14 = src/cris/sysv.lo src/cris/ffi.lo\n-@FRV_TRUE@am__objects_15 = src/frv/eabi.lo src/frv/ffi.lo\n-@S390_TRUE@am__objects_16 = src/s390/sysv.lo src/s390/ffi.lo\n-@X86_64_TRUE@am__objects_17 = src/x86/ffi64.lo src/x86/unix64.lo \\\n+@POWERPC_FREEBSD_TRUE@am__objects_13 = src/powerpc/ffi.lo \\\n+@POWERPC_FREEBSD_TRUE@\tsrc/powerpc/sysv.lo \\\n+@POWERPC_FREEBSD_TRUE@\tsrc/powerpc/ppc_closure.lo\n+@ARM_TRUE@am__objects_14 = src/arm/sysv.lo src/arm/ffi.lo\n+@LIBFFI_CRIS_TRUE@am__objects_15 = src/cris/sysv.lo src/cris/ffi.lo\n+@FRV_TRUE@am__objects_16 = src/frv/eabi.lo src/frv/ffi.lo\n+@S390_TRUE@am__objects_17 = src/s390/sysv.lo src/s390/ffi.lo\n+@X86_64_TRUE@am__objects_18 = src/x86/ffi64.lo src/x86/unix64.lo \\\n @X86_64_TRUE@\tsrc/x86/ffi.lo src/x86/sysv.lo\n-@SH_TRUE@am__objects_18 = src/sh/sysv.lo src/sh/ffi.lo\n-@SH64_TRUE@am__objects_19 = src/sh64/sysv.lo src/sh64/ffi.lo\n-@PA_TRUE@am__objects_20 = src/pa/linux.lo src/pa/ffi.lo\n+@SH_TRUE@am__objects_19 = src/sh/sysv.lo src/sh/ffi.lo\n+@SH64_TRUE@am__objects_20 = src/sh64/sysv.lo src/sh64/ffi.lo\n+@PA_TRUE@am__objects_21 = src/pa/linux.lo src/pa/ffi.lo\n nodist_libffi_la_OBJECTS = $(am__objects_1) $(am__objects_2) \\\n \t$(am__objects_3) $(am__objects_4) $(am__objects_5) \\\n \t$(am__objects_6) $(am__objects_7) $(am__objects_8) \\\n \t$(am__objects_9) $(am__objects_10) $(am__objects_11) \\\n \t$(am__objects_12) $(am__objects_13) $(am__objects_14) \\\n \t$(am__objects_15) $(am__objects_16) $(am__objects_17) \\\n-\t$(am__objects_18) $(am__objects_19) $(am__objects_20)\n+\t$(am__objects_18) $(am__objects_19) $(am__objects_20) \\\n+\t$(am__objects_21)\n libffi_la_OBJECTS = $(am_libffi_la_OBJECTS) \\\n \t$(nodist_libffi_la_OBJECTS)\n libffi_convenience_la_LIBADD =\n-am__objects_21 = src/debug.lo src/prep_cif.lo src/types.lo \\\n+am__objects_22 = src/debug.lo src/prep_cif.lo src/types.lo \\\n \tsrc/raw_api.lo src/java_raw_api.lo\n-am_libffi_convenience_la_OBJECTS = $(am__objects_21)\n-am__objects_22 = $(am__objects_1) $(am__objects_2) $(am__objects_3) \\\n+am_libffi_convenience_la_OBJECTS = $(am__objects_22)\n+am__objects_23 = $(am__objects_1) $(am__objects_2) $(am__objects_3) \\\n \t$(am__objects_4) $(am__objects_5) $(am__objects_6) \\\n \t$(am__objects_7) $(am__objects_8) $(am__objects_9) \\\n \t$(am__objects_10) $(am__objects_11) $(am__objects_12) \\\n \t$(am__objects_13) $(am__objects_14) $(am__objects_15) \\\n \t$(am__objects_16) $(am__objects_17) $(am__objects_18) \\\n-\t$(am__objects_19) $(am__objects_20)\n-nodist_libffi_convenience_la_OBJECTS = $(am__objects_22)\n+\t$(am__objects_19) $(am__objects_20) $(am__objects_21)\n+nodist_libffi_convenience_la_OBJECTS = $(am__objects_23)\n libffi_convenience_la_OBJECTS = $(am_libffi_convenience_la_OBJECTS) \\\n \t$(nodist_libffi_convenience_la_OBJECTS)\n DEFAULT_INCLUDES = -I. -I$(srcdir) -I.\n@@ -259,6 +264,8 @@ POWERPC_AIX_TRUE = @POWERPC_AIX_TRUE@\n POWERPC_DARWIN_FALSE = @POWERPC_DARWIN_FALSE@\n POWERPC_DARWIN_TRUE = @POWERPC_DARWIN_TRUE@\n POWERPC_FALSE = @POWERPC_FALSE@\n+POWERPC_FREEBSD_FALSE = @POWERPC_FREEBSD_FALSE@\n+POWERPC_FREEBSD_TRUE = @POWERPC_FREEBSD_TRUE@\n POWERPC_TRUE = @POWERPC_TRUE@\n RANLIB = @RANLIB@\n S390_FALSE = @S390_FALSE@\n@@ -404,7 +411,8 @@ nodist_libffi_la_SOURCES = $(am__append_1) $(am__append_2) \\\n \t$(am__append_9) $(am__append_10) $(am__append_11) \\\n \t$(am__append_12) $(am__append_13) $(am__append_14) \\\n \t$(am__append_15) $(am__append_16) $(am__append_17) \\\n-\t$(am__append_18) $(am__append_19) $(am__append_20)\n+\t$(am__append_18) $(am__append_19) $(am__append_20) \\\n+\t$(am__append_21)\n libffi_convenience_la_SOURCES = $(libffi_la_SOURCES)\n nodist_libffi_convenience_la_SOURCES = $(nodist_libffi_la_SOURCES)\n AM_CFLAGS = -Wall -g -fexceptions"}, {"sha": "e2dab2f95141cbfb80bb1acc02b46c2bab84644a", "filename": "libffi/configure", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/970676420b393e14a8857887876b731552331e44/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/970676420b393e14a8857887876b731552331e44/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=970676420b393e14a8857887876b731552331e44", "patch": "@@ -310,7 +310,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CC ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CFLAGS CCAS CCASFLAGS LN_S RANLIB ac_ct_RANLIB LIBTOOL MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT CPP CPPFLAGS EGREP TESTSUBDIR_TRUE TESTSUBDIR_FALSE AM_RUNTESTFLAGS MIPS_IRIX_TRUE MIPS_IRIX_FALSE MIPS_LINUX_TRUE MIPS_LINUX_FALSE SPARC_TRUE SPARC_FALSE X86_TRUE X86_FALSE X86_WIN32_TRUE X86_WIN32_FALSE ALPHA_TRUE ALPHA_FALSE IA64_TRUE IA64_FALSE M32R_TRUE M32R_FALSE M68K_TRUE M68K_FALSE POWERPC_TRUE POWERPC_FALSE POWERPC_AIX_TRUE POWERPC_AIX_FALSE POWERPC_DARWIN_TRUE POWERPC_DARWIN_FALSE ARM_TRUE ARM_FALSE LIBFFI_CRIS_TRUE LIBFFI_CRIS_FALSE FRV_TRUE FRV_FALSE S390_TRUE S390_FALSE X86_64_TRUE X86_64_FALSE SH_TRUE SH_FALSE SH64_TRUE SH64_FALSE PA_TRUE PA_FALSE ALLOCA HAVE_LONG_DOUBLE TARGET TARGETDIR toolexecdir toolexeclibdir LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CC ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CFLAGS CCAS CCASFLAGS LN_S RANLIB ac_ct_RANLIB LIBTOOL MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT CPP CPPFLAGS EGREP TESTSUBDIR_TRUE TESTSUBDIR_FALSE AM_RUNTESTFLAGS MIPS_IRIX_TRUE MIPS_IRIX_FALSE MIPS_LINUX_TRUE MIPS_LINUX_FALSE SPARC_TRUE SPARC_FALSE X86_TRUE X86_FALSE X86_WIN32_TRUE X86_WIN32_FALSE ALPHA_TRUE ALPHA_FALSE IA64_TRUE IA64_FALSE M32R_TRUE M32R_FALSE M68K_TRUE M68K_FALSE POWERPC_TRUE POWERPC_FALSE POWERPC_AIX_TRUE POWERPC_AIX_FALSE POWERPC_DARWIN_TRUE POWERPC_DARWIN_FALSE POWERPC_FREEBSD_TRUE POWERPC_FREEBSD_FALSE ARM_TRUE ARM_FALSE LIBFFI_CRIS_TRUE LIBFFI_CRIS_FALSE FRV_TRUE FRV_FALSE S390_TRUE S390_FALSE X86_64_TRUE X86_64_FALSE SH_TRUE SH_FALSE SH64_TRUE SH64_FALSE PA_TRUE PA_FALSE ALLOCA HAVE_LONG_DOUBLE TARGET TARGETDIR toolexecdir toolexeclibdir LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -5403,6 +5403,7 @@ powerpc*-*-linux* | powerpc-*-sysv*) TARGET=POWERPC; TARGETDIR=powerpc;;\n powerpc-*-beos*) TARGET=POWERPC; TARGETDIR=powerpc;;\n powerpc-*-darwin*) TARGET=POWERPC_DARWIN; TARGETDIR=powerpc;;\n powerpc-*-aix*) TARGET=POWERPC_AIX; TARGETDIR=powerpc;;\n+powerpc-*-freebsd*) TARGET=POWERPC_FREEBSD; TARGETDIR=powerpc;;\n powerpc*-*-rtems*) TARGET=POWERPC; TARGETDIR=powerpc;;\n rs6000-*-aix*) TARGET=POWERPC_AIX; TARGETDIR=powerpc;;\n arm*-*-linux-*) TARGET=ARM; TARGETDIR=arm;;\n@@ -5548,6 +5549,16 @@ fi\n \n \n \n+if test x$TARGET = xPOWERPC_FREEBSD; then\n+  POWERPC_FREEBSD_TRUE=\n+  POWERPC_FREEBSD_FALSE='#'\n+else\n+  POWERPC_FREEBSD_TRUE='#'\n+  POWERPC_FREEBSD_FALSE=\n+fi\n+\n+\n+\n if test x$TARGET = xARM; then\n   ARM_TRUE=\n   ARM_FALSE='#'\n@@ -7799,6 +7810,13 @@ echo \"$as_me: error: conditional \\\"POWERPC_DARWIN\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n+if test -z \"${POWERPC_FREEBSD_TRUE}\" && test -z \"${POWERPC_FREEBSD_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"POWERPC_FREEBSD\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"POWERPC_FREEBSD\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n if test -z \"${ARM_TRUE}\" && test -z \"${ARM_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"ARM\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n@@ -8498,6 +8516,8 @@ s,@POWERPC_AIX_TRUE@,$POWERPC_AIX_TRUE,;t t\n s,@POWERPC_AIX_FALSE@,$POWERPC_AIX_FALSE,;t t\n s,@POWERPC_DARWIN_TRUE@,$POWERPC_DARWIN_TRUE,;t t\n s,@POWERPC_DARWIN_FALSE@,$POWERPC_DARWIN_FALSE,;t t\n+s,@POWERPC_FREEBSD_TRUE@,$POWERPC_FREEBSD_TRUE,;t t\n+s,@POWERPC_FREEBSD_FALSE@,$POWERPC_FREEBSD_FALSE,;t t\n s,@ARM_TRUE@,$ARM_TRUE,;t t\n s,@ARM_FALSE@,$ARM_FALSE,;t t\n s,@LIBFFI_CRIS_TRUE@,$LIBFFI_CRIS_TRUE,;t t"}, {"sha": "35c12319a9d478d3abe3276cff32e2e1157ffa88", "filename": "libffi/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/970676420b393e14a8857887876b731552331e44/libffi%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/970676420b393e14a8857887876b731552331e44/libffi%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.ac?ref=970676420b393e14a8857887876b731552331e44", "patch": "@@ -68,6 +68,7 @@ powerpc*-*-linux* | powerpc-*-sysv*) TARGET=POWERPC; TARGETDIR=powerpc;;\n powerpc-*-beos*) TARGET=POWERPC; TARGETDIR=powerpc;;\n powerpc-*-darwin*) TARGET=POWERPC_DARWIN; TARGETDIR=powerpc;;\n powerpc-*-aix*) TARGET=POWERPC_AIX; TARGETDIR=powerpc;;\n+powerpc-*-freebsd*) TARGET=POWERPC_FREEBSD; TARGETDIR=powerpc;;\n powerpc*-*-rtems*) TARGET=POWERPC; TARGETDIR=powerpc;;\n rs6000-*-aix*) TARGET=POWERPC_AIX; TARGETDIR=powerpc;;\n arm*-*-linux-*) TARGET=ARM; TARGETDIR=arm;;\n@@ -101,6 +102,7 @@ AM_CONDITIONAL(M68K, test x$TARGET = xM68K)\n AM_CONDITIONAL(POWERPC, test x$TARGET = xPOWERPC)\n AM_CONDITIONAL(POWERPC_AIX, test x$TARGET = xPOWERPC_AIX)\n AM_CONDITIONAL(POWERPC_DARWIN, test x$TARGET = xPOWERPC_DARWIN)\n+AM_CONDITIONAL(POWERPC_FREEBSD, test x$TARGET = xPOWERPC_FREEBSD)\n AM_CONDITIONAL(ARM, test x$TARGET = xARM)\n AM_CONDITIONAL(LIBFFI_CRIS, test x$TARGET = xLIBFFI_CRIS)\n AM_CONDITIONAL(FRV, test x$TARGET = xFRV)"}, {"sha": "4e89fe509f5fe6c5f398546928fd6f4809005750", "filename": "libffi/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/970676420b393e14a8857887876b731552331e44/libffi%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/970676420b393e14a8857887876b731552331e44/libffi%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2FMakefile.in?ref=970676420b393e14a8857887876b731552331e44", "patch": "@@ -137,6 +137,8 @@ POWERPC_AIX_TRUE = @POWERPC_AIX_TRUE@\n POWERPC_DARWIN_FALSE = @POWERPC_DARWIN_FALSE@\n POWERPC_DARWIN_TRUE = @POWERPC_DARWIN_TRUE@\n POWERPC_FALSE = @POWERPC_FALSE@\n+POWERPC_FREEBSD_FALSE = @POWERPC_FREEBSD_FALSE@\n+POWERPC_FREEBSD_TRUE = @POWERPC_FREEBSD_TRUE@\n POWERPC_TRUE = @POWERPC_TRUE@\n RANLIB = @RANLIB@\n S390_FALSE = @S390_FALSE@"}, {"sha": "b337aa74c1102fa61925e334e6b40e10f1beda9b", "filename": "libffi/src/powerpc/ffi.c", "status": "modified", "additions": 42, "deletions": 13, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/970676420b393e14a8857887876b731552331e44/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/970676420b393e14a8857887876b731552331e44/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffi.c?ref=970676420b393e14a8857887876b731552331e44", "patch": "@@ -41,6 +41,7 @@ extern void hidden ffi_closure_LINUX64(void);\n \n enum {\n   /* The assembly depends on these exact flags.  */\n+  FLAG_RETURNS_SMST\t= 1 << (31-31), /* Used for FFI_SYSV small structs.  */\n   FLAG_RETURNS_NOTHING  = 1 << (31-30), /* These go in cr7 */\n   FLAG_RETURNS_FP       = 1 << (31-29),\n   FLAG_RETURNS_64BITS   = 1 << (31-28),\n@@ -462,6 +463,7 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n   unsigned flags = 0;\n   unsigned struct_copy_size = 0;\n   unsigned type = cif->rtype->type;\n+  unsigned size = cif->rtype->size;\n \n   if (cif->abi != FFI_LINUX64)\n     {\n@@ -518,15 +520,30 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n       break;\n \n     case FFI_TYPE_STRUCT:\n-      if (cif->abi != FFI_GCC_SYSV && cif->abi != FFI_LINUX64)\n+      if (cif->abi == FFI_SYSV)\n \t{\n-\t  if (cif->rtype->size <= 4)\n-\t    break;\n-\t  else if (cif->rtype->size <= 8)\n-\t    {\n-\t      flags |= FLAG_RETURNS_64BITS;\n+\t  /* The final SYSV ABI says that structures smaller or equal 8 bytes\n+\t     are returned in r3/r4. The FFI_GCC_SYSV ABI instead returns them\n+\t     in memory.  */\n+\n+\t  /* Treat structs with size <= 8 bytes.  */\n+\t  if (size <= 8) {\n+\t    flags |= FLAG_RETURNS_SMST;\n+\t    /* These structs are returned in r3. We pack the type and the\n+\t       precalculated shift value (needed in the sysv.S) into flags.\n+\t       The same applies for the structs returned in r3/r4.  */\n+\t    if (size <= 4) {\n+\t      flags |= 1 << (31 - FFI_SYSV_TYPE_SMALL_STRUCT - 1 )\n+\t\t| (8 * (4 - size) << 4);\n \t      break;\n \t    }\n+\t    /* These structs are returned in r3 and r4. See above.   */\n+\t    if  (size <= 8) {\n+\t      flags |= 1 << (31 - FFI_SYSV_TYPE_SMALL_STRUCT - 2 )\n+\t\t| (8 * (8 - size) << 4);\n+\t    break;\n+\t    }\n+\t  }\n \t}\n       /* else fall through.  */\n #if FFI_TYPE_LONGDOUBLE != FFI_TYPE_DOUBLE\n@@ -573,7 +590,7 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n \t    /* 'long long' arguments are passed as two words, but\n \t       either both words must fit in registers or both go\n \t       on the stack.  If they go on the stack, they must\n-\t       be 8-byte-aligned.  \n+\t       be 8-byte-aligned.\n \n \t       Also, only certain register pairs can be used for\n \t       passing long long int -- specifically (r3,r4), (r5,r6),\n@@ -770,7 +787,7 @@ ffi_prep_closure (ffi_closure* closure,\n #else\n   unsigned int *tramp;\n \n-  FFI_ASSERT (cif->abi == FFI_GCC_SYSV);\n+  FFI_ASSERT (cif->abi == FFI_GCC_SYSV || cif->abi == FFI_SYSV);\n \n   tramp = (unsigned int *) &closure->tramp[0];\n   tramp[0] = 0x7c0802a6;  /*   mflr    r0 */\n@@ -829,20 +846,27 @@ ffi_closure_helper_SYSV (ffi_closure* closure, void * rvalue,\n   long             ng;   /* number of general registers already used */\n   ffi_cif *        cif;\n   double           temp;\n+  unsigned         size;\n \n   cif = closure->cif;\n   avalue = alloca(cif->nargs * sizeof(void *));\n+  size = cif->rtype->size;\n \n   nf = 0;\n   ng = 0;\n \n   /* Copy the caller's structure return value address so that the closure\n-     returns the data directly to the caller.  */\n+     returns the data directly to the caller.\n+     For FFI_SYSV the result is passed in r3/r4 if the struct size is less\n+     or equal 8 bytes.  */\n+\n   if (cif->rtype->type == FFI_TYPE_STRUCT)\n     {\n-      rvalue = (void *) *pgr;\n-      ng++;\n-      pgr++;\n+      if (!((cif->abi == FFI_SYSV) && (size <= 8))) {\n+\trvalue = (void *) *pgr;\n+\tng++;\n+\tpgr++;\n+      }\n     }\n \n   i = 0;\n@@ -986,7 +1010,12 @@ ffi_closure_helper_SYSV (ffi_closure* closure, void * rvalue,\n \n   (closure->fun) (cif, rvalue, avalue, closure->user_data);\n \n-  /* Tell ffi_closure_SYSV how to perform return type promotions.  */\n+  /* Tell ffi_closure_SYSV how to perform return type promotions.\n+     Because the FFI_SYSV ABI returns the structures <= 8 bytes in r3/r4\n+     we have to tell ffi_closure_SYSV how to treat them.  */\n+  if (cif->abi == FFI_SYSV && cif->rtype->type == FFI_TYPE_STRUCT\n+      && size <= 8)\n+    return FFI_SYSV_TYPE_SMALL_STRUCT + size;\n   return cif->rtype->type;\n \n }"}, {"sha": "af63796c77c4c342194990e475f353c4f804bb8c", "filename": "libffi/src/powerpc/ffitarget.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/970676420b393e14a8857887876b731552331e44/libffi%2Fsrc%2Fpowerpc%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/970676420b393e14a8857887876b731552331e44/libffi%2Fsrc%2Fpowerpc%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffitarget.h?ref=970676420b393e14a8857887876b731552331e44", "patch": "@@ -62,6 +62,13 @@ typedef enum ffi_abi {\n   FFI_DEFAULT_ABI = FFI_DARWIN,\n #endif\n \n+#ifdef POWERPC_FREEBSD\n+  FFI_SYSV,\n+  FFI_GCC_SYSV,\n+  FFI_LINUX64,\n+  FFI_DEFAULT_ABI = FFI_SYSV,\n+#endif\n+\n   FFI_LAST_ABI = FFI_DEFAULT_ABI + 1\n } ffi_abi;\n #endif\n@@ -71,6 +78,9 @@ typedef enum ffi_abi {\n #define FFI_CLOSURES 1\n #define FFI_NATIVE_RAW_API 0\n \n+/* Needed for FFI_SYSV small structure returns.  */\n+#define FFI_SYSV_TYPE_SMALL_STRUCT  (FFI_TYPE_LAST)\n+\n #if defined(POWERPC64) || defined(POWERPC_AIX)\n #define FFI_TRAMPOLINE_SIZE 24\n #else /* POWERPC || POWERPC_AIX */"}, {"sha": "b45ccd6bd54b6349743738adefcd5ceb78867306", "filename": "libffi/src/powerpc/ppc_closure.S", "status": "modified", "additions": 94, "deletions": 16, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/970676420b393e14a8857887876b731552331e44/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/970676420b393e14a8857887876b731552331e44/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S?ref=970676420b393e14a8857887876b731552331e44", "patch": "@@ -63,9 +63,22 @@ ENTRY(ffi_closure_SYSV)\n \t# so use it to look up in a table\n \t# so we know how to deal with each type\n \n+\t# Extract the size of the return type for small structures.\n+\t# Then calculate (4 - size) and multiply the result by 8.\n+\t# This gives the value needed for the shift operation below.\n+\t# This part is only needed for FFI_SYSV and small structures.\n+\taddi\t%r5,%r3,-(FFI_SYSV_TYPE_SMALL_STRUCT)\n+\tcmpwi\tcr0,%r5,4\n+\tble\tcr0,.Lnext\n+\taddi\t%r5,%r5,-4\n+.Lnext:\n+\taddi\t%r5,%r5,-4\n+\tneg\t%r5,%r5\n+\tslwi\t%r5,%r5,3\n+\n \t# look up the proper starting point in table\n \t# by using return type as offset\n-\taddi %r5,%r1,112   # get pointer to results area\n+\taddi %r6,%r1,112   # get pointer to results area\n \tbl .Lget_ret_type0_addr # get pointer to .Lret_type0 into LR\n \tmflr %r4           # move to r4\n \tslwi %r3,%r3,4     # now multiply return type by 16\n@@ -94,85 +107,85 @@ ENTRY(ffi_closure_SYSV)\n \n # case FFI_TYPE_INT\n .Lret_type1:\n-\tlwz %r3,0(%r5)\n+\tlwz %r3,0(%r6)\n \tb .Lfinish\n \tnop\n \tnop\n \n # case FFI_TYPE_FLOAT\n .Lret_type2:\n-\tlfs %f1,0(%r5)\n+\tlfs %f1,0(%r6)\n \tb .Lfinish\n \tnop\n \tnop\n \n # case FFI_TYPE_DOUBLE\n .Lret_type3:\n-\tlfd %f1,0(%r5)\n+\tlfd %f1,0(%r6)\n \tb .Lfinish\n \tnop\n \tnop\n \n # case FFI_TYPE_LONGDOUBLE\n .Lret_type4:\n-\tlfd %f1,0(%r5)\n+\tlfd %f1,0(%r6)\n \tb .Lfinish\n \tnop\n \tnop\n \n # case FFI_TYPE_UINT8\n .Lret_type5:\n-\tlbz %r3,3(%r5)\n+\tlbz %r3,3(%r6)\n \tb .Lfinish\n \tnop\n \tnop\n \n # case FFI_TYPE_SINT8\n .Lret_type6:\n-\tlbz %r3,3(%r5)\n+\tlbz %r3,3(%r6)\n \textsb %r3,%r3\n \tb .Lfinish\n \tnop\n \n # case FFI_TYPE_UINT16\n .Lret_type7:\n-\tlhz %r3,2(%r5)\n+\tlhz %r3,2(%r6)\n \tb .Lfinish\n \tnop\n \tnop\n \n # case FFI_TYPE_SINT16\n .Lret_type8:\n-\tlha %r3,2(%r5)\n+\tlha %r3,2(%r6)\n \tb .Lfinish\n \tnop\n \tnop\n \n # case FFI_TYPE_UINT32\n .Lret_type9:\n-\tlwz %r3,0(%r5)\n+\tlwz %r3,0(%r6)\n \tb .Lfinish\n \tnop\n \tnop\n \n # case FFI_TYPE_SINT32\n .Lret_type10:\n-\tlwz %r3,0(%r5)\n+\tlwz %r3,0(%r6)\n \tb .Lfinish\n \tnop\n \tnop\n \n # case FFI_TYPE_UINT64\n .Lret_type11:\n-\tlwz %r3,0(%r5)\n-\tlwz %r4,4(%r5)\n+\tlwz %r3,0(%r6)\n+\tlwz %r4,4(%r6)\n \tb .Lfinish\n \tnop\n \n # case FFI_TYPE_SINT64\n .Lret_type12:\n-\tlwz %r3,0(%r5)\n-\tlwz %r4,4(%r5)\n+\tlwz %r3,0(%r6)\n+\tlwz %r4,4(%r6)\n \tb .Lfinish\n \tnop\n \n@@ -185,10 +198,75 @@ ENTRY(ffi_closure_SYSV)\n \n # case FFI_TYPE_POINTER\n .Lret_type14:\n-\tlwz %r3,0(%r5)\n+\tlwz %r3,0(%r6)\n+\tb .Lfinish\n+\tnop\n+\tnop\n+\n+# The return types below are only used when the ABI type is FFI_SYSV.\n+# case FFI_SYSV_TYPE_SMALL_STRUCT + 1. One byte struct.\n+.Lret_type15:\n+# fall through.\n+\tnop\n+\tnop\n+\tnop\n+\tnop\n+\n+# case FFI_SYSV_TYPE_SMALL_STRUCT + 2. Two byte struct.\n+.Lret_type16:\n+# fall through.\n+\tnop\n+\tnop\n+\tnop\n+\tnop\n+\n+# case FFI_SYSV_TYPE_SMALL_STRUCT + 3. Three byte struct.\n+.Lret_type17:\n+# fall through.\n+\tnop\n+\tnop\n+\tnop\n+\tnop\n+\n+# case FFI_SYSV_TYPE_SMALL_STRUCT + 4. Four byte struct.\n+.Lret_type18:\n+# this one handles the structs from above too.\n+\tlwz %r3,0(%r6)\n+\tsrw %r3,%r3,%r5\n \tb .Lfinish\n \tnop\n+\n+# case FFI_SYSV_TYPE_SMALL_STRUCT + 5. Five byte struct.\n+.Lret_type19:\n+# fall through.\n+\tnop\n+\tnop\n+\tnop\n+\tnop\n+\n+# case FFI_SYSV_TYPE_SMALL_STRUCT + 6. Six byte struct.\n+.Lret_type20:\n+# fall through.\n+\tnop\n \tnop\n+\tnop\n+\tnop\n+\n+# case FFI_SYSV_TYPE_SMALL_STRUCT + 7. Seven byte struct.\n+.Lret_type21:\n+# fall through.\n+\tnop\n+\tnop\n+\tnop\n+\tnop\n+\n+# case FFI_SYSV_TYPE_SMALL_STRUCT + 8. Eight byte struct.\n+.Lret_type22:\n+# this one handles the above unhandled structs.\n+\tlwz %r3,0(%r6)\n+\tlwz %r4,4(%r6)\n+\tbl __lshrdi3\t# libgcc function to shift r3/r4, shift value in r5.\n+\tb .Lfinish\n \n # case done\n .Lfinish:"}, {"sha": "eba70fbd8f775cc672ae7636276e80eac97fe86a", "filename": "libffi/src/powerpc/sysv.S", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/970676420b393e14a8857887876b731552331e44/libffi%2Fsrc%2Fpowerpc%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/970676420b393e14a8857887876b731552331e44/libffi%2Fsrc%2Fpowerpc%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fsysv.S?ref=970676420b393e14a8857887876b731552331e44", "patch": "@@ -99,6 +99,7 @@ ENTRY(ffi_call_SYSV)\n \n \t/* Now, deal with the return value.  */\n \tmtcrf\t0x01,%r31\n+\tbt-\t31,L(small_struct_return_value)\n \tbt-\t30,L(done_return_value)\n \tbt-\t29,L(fp_return_value)\n \tstw\t%r3,0(%r30)\n@@ -124,6 +125,27 @@ L(fp_return_value):\n L(float_return_value):\n \tstfs\t%f1,0(%r30)\n \tb\tL(done_return_value)\n+\n+L(small_struct_return_value):\n+\tmtcrf\t0x10,%r31\t/* cr3  */\n+\tbt-\t15,L(smst_one_register)\n+\tmtcrf\t0x08,%r31\t/* cr4  */\n+\tbt-\t16,L(smst_two_register)\n+\tb       L(done_return_value)\n+\n+L(smst_one_register):\n+\trlwinm  %r5,%r31,5+23,32-5,31 /* Extract the value to shift.  */\n+\tslw\t%r3,%r3,%r5\n+\tstw\t%r3,0(%r30)\n+\tb\tL(done_return_value)\n+L(smst_two_register):\n+\trlwinm  %r5,%r31,5+23,32-5,31 /* Extract the value to shift.  */\n+\tbl\t__ashldi3  /* libgcc function to shift r3/r4,\n+\t\t\t      shift value in r5.  */\n+\tstw\t%r3,0(%r30)\n+\tstw\t%r4,4(%r30)\n+\tb\tL(done_return_value)\n+\n .LFE1:\n END(ffi_call_SYSV)\n "}, {"sha": "7e814f309c055b68c9ea7bf5551b06e64f952bbc", "filename": "libffi/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/970676420b393e14a8857887876b731552331e44/libffi%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/970676420b393e14a8857887876b731552331e44/libffi%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2FMakefile.in?ref=970676420b393e14a8857887876b731552331e44", "patch": "@@ -123,6 +123,8 @@ POWERPC_AIX_TRUE = @POWERPC_AIX_TRUE@\n POWERPC_DARWIN_FALSE = @POWERPC_DARWIN_FALSE@\n POWERPC_DARWIN_TRUE = @POWERPC_DARWIN_TRUE@\n POWERPC_FALSE = @POWERPC_FALSE@\n+POWERPC_FREEBSD_FALSE = @POWERPC_FREEBSD_FALSE@\n+POWERPC_FREEBSD_TRUE = @POWERPC_FREEBSD_TRUE@\n POWERPC_TRUE = @POWERPC_TRUE@\n RANLIB = @RANLIB@\n S390_FALSE = @S390_FALSE@"}]}