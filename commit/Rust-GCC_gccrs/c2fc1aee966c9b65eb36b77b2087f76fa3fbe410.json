{"sha": "c2fc1aee966c9b65eb36b77b2087f76fa3fbe410", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJmYzFhZWU5NjZjOWI2NWViMzZiNzdiMjA4N2Y3NmZhM2ZiZTQxMA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-19T16:00:59Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-19T16:00:59Z"}, "message": "BB_NOTE_LIST scaffolding\n\ngcc/\n2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n\n\t* sel-sched-ir.h (BB_NOTE_LIST): struct sel_region_bb_info_def's\n\t\"note_list\" field will eventually be an rtx_insn *.  To help with\n\ttransition, for now, convert from an access macro into a pair of\n\tfunctions: BB_NOTE_LIST, returning an rtx_insn *, and...\n\t(SET_BB_NOTE_LIST): New function, for use where BB_NOTE_LIST is\n\tused as an lvalue.\n\n\t* sel-sched.c (create_block_for_bookkeeping): Update lvalue usage\n\tof BB_NOTE_LIST to SET_BB_NOTE_LIST.\n\n\t* sel-sched-ir.c (init_bb): Likewise.\n\t(sel_restore_notes): Likewise.\n\t(move_bb_info): Likewise.\n\t(BB_NOTE_LIST): New function, adding a checked cast to rtx_insn *.\n\t(SET_BB_NOTE_LIST): New function.\n\n/\n2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n\n\t* rtx-classes-status.txt (TODO): Add SET_BB_NOTE_LIST.\n\nFrom-SVN: r214167", "tree": {"sha": "40b0cac54f1e679a9fa754cd12c4b470e4479066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40b0cac54f1e679a9fa754cd12c4b470e4479066"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2fc1aee966c9b65eb36b77b2087f76fa3fbe410", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2fc1aee966c9b65eb36b77b2087f76fa3fbe410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2fc1aee966c9b65eb36b77b2087f76fa3fbe410", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2fc1aee966c9b65eb36b77b2087f76fa3fbe410/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f4f5c9ad5536025c531a8702af9254ffe97a0ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f4f5c9ad5536025c531a8702af9254ffe97a0ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f4f5c9ad5536025c531a8702af9254ffe97a0ca"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "b06346ce702839e62b7e168d89d10604b1e0bcb3", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2fc1aee966c9b65eb36b77b2087f76fa3fbe410/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2fc1aee966c9b65eb36b77b2087f76fa3fbe410/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=c2fc1aee966c9b65eb36b77b2087f76fa3fbe410", "patch": "@@ -1,3 +1,7 @@\n+2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* rtx-classes-status.txt (TODO): Add SET_BB_NOTE_LIST.\n+\n 2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n \n \t* rtx-classes-status.txt (TODO): Add SET_VINSN_INSN_RTX."}, {"sha": "2d0e649daa8faecae706b7912a587f6530784ae8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2fc1aee966c9b65eb36b77b2087f76fa3fbe410/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2fc1aee966c9b65eb36b77b2087f76fa3fbe410/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2fc1aee966c9b65eb36b77b2087f76fa3fbe410", "patch": "@@ -1,3 +1,21 @@\n+2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* sel-sched-ir.h (BB_NOTE_LIST): struct sel_region_bb_info_def's\n+\t\"note_list\" field will eventually be an rtx_insn *.  To help with\n+\ttransition, for now, convert from an access macro into a pair of\n+\tfunctions: BB_NOTE_LIST, returning an rtx_insn *, and...\n+\t(SET_BB_NOTE_LIST): New function, for use where BB_NOTE_LIST is\n+\tused as an lvalue.\n+\n+\t* sel-sched.c (create_block_for_bookkeeping): Update lvalue usage\n+\tof BB_NOTE_LIST to SET_BB_NOTE_LIST.\n+\n+\t* sel-sched-ir.c (init_bb): Likewise.\n+\t(sel_restore_notes): Likewise.\n+\t(move_bb_info): Likewise.\n+\t(BB_NOTE_LIST): New function, adding a checked cast to rtx_insn *.\n+\t(SET_BB_NOTE_LIST): New function.\n+\n 2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n \n \t* sel-sched-ir.h (VINSN_INSN_RTX): struct vinsn_def's \"insn_rtx\""}, {"sha": "91656499a7ffa1e54f684358f5962da2d7ac9a59", "filename": "gcc/sel-sched-ir.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2fc1aee966c9b65eb36b77b2087f76fa3fbe410/gcc%2Fsel-sched-ir.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2fc1aee966c9b65eb36b77b2087f76fa3fbe410/gcc%2Fsel-sched-ir.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.c?ref=c2fc1aee966c9b65eb36b77b2087f76fa3fbe410", "patch": "@@ -4620,7 +4620,7 @@ static void\n init_bb (basic_block bb)\n {\n   remove_notes (bb_note (bb), BB_END (bb));\n-  BB_NOTE_LIST (bb) = note_list;\n+  SET_BB_NOTE_LIST (bb) = note_list;\n }\n \n void\n@@ -4655,7 +4655,7 @@ sel_restore_notes (void)\n \t{\n \t  note_list = BB_NOTE_LIST (first);\n \t  restore_other_notes (NULL, first);\n-\t  BB_NOTE_LIST (first) = NULL_RTX;\n+\t  SET_BB_NOTE_LIST (first) = NULL_RTX;\n \n \t  FOR_BB_INSNS (first, insn)\n \t    if (NONDEBUG_INSN_P (insn))\n@@ -5263,8 +5263,8 @@ move_bb_info (basic_block merge_bb, basic_block empty_bb)\n {\n   if (in_current_region_p (merge_bb))\n     concat_note_lists (BB_NOTE_LIST (empty_bb),\n-\t\t       &BB_NOTE_LIST (merge_bb));\n-  BB_NOTE_LIST (empty_bb) = NULL_RTX;\n+\t\t       &SET_BB_NOTE_LIST (merge_bb));\n+  SET_BB_NOTE_LIST (empty_bb) = NULL_RTX;\n \n }\n \n@@ -6452,4 +6452,15 @@ rtx& SET_VINSN_INSN_RTX (vinsn_t vi)\n   return vi->insn_rtx;\n }\n \n+rtx_insn *BB_NOTE_LIST (basic_block bb)\n+{\n+  rtx note_list = SEL_REGION_BB_INFO (bb)->note_list;\n+  return safe_as_a <rtx_insn *> (note_list);\n+}\n+\n+rtx& SET_BB_NOTE_LIST (basic_block bb)\n+{\n+  return SEL_REGION_BB_INFO (bb)->note_list;\n+}\n+\n #endif"}, {"sha": "81accaf6e7c79fae10bd2001aa0c59d93fa4ee72", "filename": "gcc/sel-sched-ir.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2fc1aee966c9b65eb36b77b2087f76fa3fbe410/gcc%2Fsel-sched-ir.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2fc1aee966c9b65eb36b77b2087f76fa3fbe410/gcc%2Fsel-sched-ir.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.h?ref=c2fc1aee966c9b65eb36b77b2087f76fa3fbe410", "patch": "@@ -920,7 +920,8 @@ extern vec<sel_region_bb_info_def> sel_region_bb_info;\n    A note_list is a list of various notes that was scattered across BB\n    before scheduling, and will be appended at the beginning of BB after\n    scheduling is finished.  */\n-#define BB_NOTE_LIST(BB) (SEL_REGION_BB_INFO (BB)->note_list)\n+extern rtx_insn *BB_NOTE_LIST (basic_block);\n+extern rtx& SET_BB_NOTE_LIST (basic_block);\n \n #define BB_AV_SET(BB) (SEL_REGION_BB_INFO (BB)->av_set)\n #define BB_AV_LEVEL(BB) (SEL_REGION_BB_INFO (BB)->av_level)"}, {"sha": "2d9bc81b27ab09ba03f0fabf1bcd7e24468c96d5", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2fc1aee966c9b65eb36b77b2087f76fa3fbe410/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2fc1aee966c9b65eb36b77b2087f76fa3fbe410/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=c2fc1aee966c9b65eb36b77b2087f76fa3fbe410", "patch": "@@ -4585,8 +4585,8 @@ create_block_for_bookkeeping (edge e1, edge e2)\n \n   /* Move note_list from the upper bb.  */\n   gcc_assert (BB_NOTE_LIST (new_bb) == NULL_RTX);\n-  BB_NOTE_LIST (new_bb) = BB_NOTE_LIST (bb);\n-  BB_NOTE_LIST (bb) = NULL_RTX;\n+  SET_BB_NOTE_LIST (new_bb) = BB_NOTE_LIST (bb);\n+  SET_BB_NOTE_LIST (bb) = NULL_RTX;\n \n   gcc_assert (e2->dest == bb);\n "}, {"sha": "ea0941a03bd69b8875f989febe64e9bb237e5683", "filename": "rtx-classes-status.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2fc1aee966c9b65eb36b77b2087f76fa3fbe410/rtx-classes-status.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2fc1aee966c9b65eb36b77b2087f76fa3fbe410/rtx-classes-status.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/rtx-classes-status.txt?ref=c2fc1aee966c9b65eb36b77b2087f76fa3fbe410", "patch": "@@ -16,6 +16,7 @@ TODO: \"Scaffolding\" to be removed\n =================================\n * DF_REF_INSN\n * SET_BB_HEAD, SET_BB_END, SET_BB_HEADER, SET_BB_FOOTER\n+* SET_BB_NOTE_LIST\n * SET_DEP_PRO, SET_DEP_CON\n * SET_NEXT_INSN, SET_PREV_INSN\n * SET_VINSN_INSN_RTX"}]}