{"sha": "3faa6313d1548d90255dabc7607a417a3c269057", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZhYTYzMTNkMTU0OGQ5MDI1NWRhYmM3NjA3YTQxN2EzYzI2OTA1Nw==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2009-09-24T18:58:22Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2009-09-24T18:58:22Z"}, "message": "rs6000.h (FUNCTION_VALUE): Remove macro.\n\n\t* config/rs6000/rs6000.h (FUNCTION_VALUE): Remove macro.\n\t* config/rs6000/rs6000-protos.h (rs6000_function_value): Remove.\n\t* config/rs6000/rs6000.c (rs6000_function_value): Make static, add\n\t'outgoing' argument.\n\t(TARGET_FUNCTION_VALUE): Define.\n\nFrom-SVN: r152137", "tree": {"sha": "3f74843fd388c6c0a30cfb7e79f09ed94da0f978", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f74843fd388c6c0a30cfb7e79f09ed94da0f978"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3faa6313d1548d90255dabc7607a417a3c269057", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3faa6313d1548d90255dabc7607a417a3c269057", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3faa6313d1548d90255dabc7607a417a3c269057", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3faa6313d1548d90255dabc7607a417a3c269057/comments", "author": null, "committer": null, "parents": [{"sha": "4851726d28a60d59345e8a8ab06575885d98e74f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4851726d28a60d59345e8a8ab06575885d98e74f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4851726d28a60d59345e8a8ab06575885d98e74f"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "bc7a023cfd8ed80e62c215b86153b3ef6bc11e62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3faa6313d1548d90255dabc7607a417a3c269057/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3faa6313d1548d90255dabc7607a417a3c269057/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3faa6313d1548d90255dabc7607a417a3c269057", "patch": "@@ -1,3 +1,11 @@\n+2009-09-24  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/rs6000/rs6000.h (FUNCTION_VALUE): Remove macro.\n+\t* config/rs6000/rs6000-protos.h (rs6000_function_value): Remove.\n+\t* config/rs6000/rs6000.c (rs6000_function_value): Make static, add\n+\t'outgoing' argument.\n+\t(TARGET_FUNCTION_VALUE): Define.\n+\n 2009-09-24  Iain Sandoe  <iain.sandoe@sandoe-acoustics.co.uk>\n \n \t* config/darwin.h (DWARF2_DEBUGGING_INFO): Define as 1."}, {"sha": "ca5e5848f7fad575cd07a013df944d3e36c7681f", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3faa6313d1548d90255dabc7607a417a3c269057/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3faa6313d1548d90255dabc7607a417a3c269057/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=3faa6313d1548d90255dabc7607a417a3c269057", "patch": "@@ -141,7 +141,6 @@ extern void function_arg_advance (CUMULATIVE_ARGS *, enum machine_mode,\n extern int function_arg_boundary (enum machine_mode, tree);\n extern rtx function_arg (CUMULATIVE_ARGS *, enum machine_mode, tree, int);\n extern tree altivec_resolve_overloaded_builtin (location_t, tree, void *);\n-extern rtx rs6000_function_value (const_tree, const_tree);\n extern rtx rs6000_libcall_value (enum machine_mode);\n extern rtx rs6000_va_arg (tree, tree);\n extern int function_ok_for_sibcall (tree);"}, {"sha": "2967ff5afe512f30f60be282f7aaf6836fb09323", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3faa6313d1548d90255dabc7607a417a3c269057/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3faa6313d1548d90255dabc7607a417a3c269057/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=3faa6313d1548d90255dabc7607a417a3c269057", "patch": "@@ -846,6 +846,7 @@ static void rs6000_output_mi_thunk (FILE *, tree, HOST_WIDE_INT, HOST_WIDE_INT,\n \t\t\t\t    tree);\n static rtx rs6000_emit_set_long_const (rtx, HOST_WIDE_INT, HOST_WIDE_INT);\n static bool rs6000_return_in_memory (const_tree, const_tree);\n+static rtx rs6000_function_value (const_tree, const_tree, bool);\n static void rs6000_file_start (void);\n #if TARGET_ELF\n static int rs6000_elf_reloc_rw_mask (void);\n@@ -1471,6 +1472,9 @@ static const struct attribute_spec rs6000_attribute_table[] =\n #undef TARGET_TRAMPOLINE_INIT\n #define TARGET_TRAMPOLINE_INIT rs6000_trampoline_init\n \n+#undef TARGET_FUNCTION_VALUE\n+#define TARGET_FUNCTION_VALUE rs6000_function_value\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n /* Return number of consecutive hard regs needed starting at reg REGNO\n@@ -25099,18 +25103,17 @@ rs6000_complex_function_value (enum machine_mode mode)\n   return gen_rtx_PARALLEL (mode, gen_rtvec (2, r1, r2));\n }\n \n-/* Define how to find the value returned by a function.\n-   VALTYPE is the data type of the value (as a tree).\n-   If the precise function being called is known, FUNC is its FUNCTION_DECL;\n-   otherwise, FUNC is 0.\n+/* Target hook for TARGET_FUNCTION_VALUE.\n \n    On the SPE, both FPs and vectors are returned in r3.\n \n    On RS/6000 an integer value is in r3 and a floating-point value is in\n    fp1, unless -msoft-float.  */\n \n rtx\n-rs6000_function_value (const_tree valtype, const_tree func ATTRIBUTE_UNUSED)\n+rs6000_function_value (const_tree valtype,\n+\t\t       const_tree fn_decl_or_type ATTRIBUTE_UNUSED,\n+\t\t       bool outgoing ATTRIBUTE_UNUSED)\n {\n   enum machine_mode mode;\n   unsigned int regno;"}, {"sha": "9116f476cbc584c8c15e1725c88c673ca4b20340", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3faa6313d1548d90255dabc7607a417a3c269057/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3faa6313d1548d90255dabc7607a417a3c269057/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=3faa6313d1548d90255dabc7607a417a3c269057", "patch": "@@ -1518,13 +1518,6 @@ extern enum rs6000_abi rs6000_current_abi;\t/* available for use by subtarget */\n \n #define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n-/* Define how to find the value returned by a function.\n-   VALTYPE is the data type of the value (as a tree).\n-   If the precise function being called is known, FUNC is its FUNCTION_DECL;\n-   otherwise, FUNC is 0.  */\n-\n-#define FUNCTION_VALUE(VALTYPE, FUNC) rs6000_function_value ((VALTYPE), (FUNC))\n-\n /* Define how to find the value returned by a library function\n    assuming the value has mode MODE.  */\n "}]}