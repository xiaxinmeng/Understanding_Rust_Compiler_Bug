{"sha": "209173363403d9894743b76cff0d803186ce66a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA5MTczMzYzNDAzZDk4OTQ3NDNiNzZjZmYwZDgwMzE4NmNlNjZhOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-04-20T19:04:36Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-04-20T19:04:36Z"}, "message": "re PR target/78090 ([x86_64]: GCC allows integer register for inter unit conversion under -mtune-ctrl=^inter_unit_conversions .)\n\n\tPR target/78090\n\t* config/i386/constraints.md (Yc): New register constraint.\n\t* config/i386/i386.md (*float<SWI48:mode><MODEF:mode>2_mixed):\n\tUse Yc constraint for alternative 2 of operand 0.  Remove\n\tpreferred_for_speed attribute.\n\ntestsuite/ChangeLog:\n\n\tPR target/78090\n\t* gcc.target/i386/conversion-2.c: Remove obsolete test.\n\nFrom-SVN: r247036", "tree": {"sha": "fcaa89f2aa91beb01f2a89e1a45d9ce2db821322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcaa89f2aa91beb01f2a89e1a45d9ce2db821322"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/209173363403d9894743b76cff0d803186ce66a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/209173363403d9894743b76cff0d803186ce66a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/209173363403d9894743b76cff0d803186ce66a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/209173363403d9894743b76cff0d803186ce66a8/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2414b02252e999ce19e493dbf6f62b1f4186b7b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2414b02252e999ce19e493dbf6f62b1f4186b7b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2414b02252e999ce19e493dbf6f62b1f4186b7b7"}], "stats": {"total": 60, "additions": 19, "deletions": 41}, "files": [{"sha": "f4cb9193169ffb4f4c22d6c039a1bc8bbf81497f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209173363403d9894743b76cff0d803186ce66a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209173363403d9894743b76cff0d803186ce66a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=209173363403d9894743b76cff0d803186ce66a8", "patch": "@@ -1,3 +1,11 @@\n+2017-04-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/78090\n+\t* config/i386/constraints.md (Yc): New register constraint.\n+\t* config/i386/i386.md (*float<SWI48:mode><MODEF:mode>2_mixed):\n+\tUse Yc constraint for alternative 2 of operand 0.  Remove\n+\tpreferred_for_speed attribute.\n+\n 2017-04-20  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* omp-low.c (lower_lastprivate_clauses): Correct handling of linear and"}, {"sha": "816704fd2e1390bfe41273cc4e8758774bee1d00", "filename": "gcc/config/i386/constraints.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209173363403d9894743b76cff0d803186ce66a8/gcc%2Fconfig%2Fi386%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209173363403d9894743b76cff0d803186ce66a8/gcc%2Fconfig%2Fi386%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fconstraints.md?ref=209173363403d9894743b76cff0d803186ce66a8", "patch": "@@ -99,6 +99,7 @@\n \n ;; We use the Y prefix to denote any number of conditional register sets:\n ;;  z\tFirst SSE register.\n+;;  c\tSSE inter-unit conversions enabled\n ;;  i\tSSE2 inter-unit moves to SSE register enabled\n ;;  j\tSSE2 inter-unit moves from SSE register enabled\n ;;  m\tMMX inter-unit moves to MMX register enabled\n@@ -117,6 +118,10 @@\n (define_register_constraint \"Yz\" \"TARGET_SSE ? SSE_FIRST_REG : NO_REGS\"\n  \"First SSE register (@code{%xmm0}).\")\n \n+(define_register_constraint \"Yc\"\n+ \"TARGET_SSE && TARGET_INTER_UNIT_CONVERSIONS ? ALL_SSE_REGS : NO_REGS\"\n+ \"@internal Any SSE register, when SSE and inter-unit conversions are enabled.\")\n+\n (define_register_constraint \"Yi\"\n  \"TARGET_SSE2 && TARGET_INTER_UNIT_MOVES_TO_VEC ? ALL_SSE_REGS : NO_REGS\"\n  \"@internal Any SSE register, when SSE2 and inter-unit moves to vector registers are enabled.\")"}, {"sha": "1a902eebf5065bfa7cd7c9bf28ace3abaa186298", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209173363403d9894743b76cff0d803186ce66a8/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209173363403d9894743b76cff0d803186ce66a8/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=209173363403d9894743b76cff0d803186ce66a8", "patch": "@@ -5207,7 +5207,7 @@\n })\n \n (define_insn \"*float<SWI48:mode><MODEF:mode>2_mixed\"\n-  [(set (match_operand:MODEF 0 \"register_operand\" \"=f,v,v\")\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"=f,Yc,v\")\n \t(float:MODEF\n \t  (match_operand:SWI48 1 \"nonimmediate_operand\" \"m,r,m\")))]\n   \"SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\"\n@@ -5236,10 +5236,6 @@\n                            && X87_ENABLE_FLOAT (<MODEF:MODE>mode,\n                                                 <SWI48:MODE>mode)\")\n            ]\n-           (symbol_ref \"true\")))\n-   (set (attr \"preferred_for_speed\")\n-     (cond [(eq_attr \"alternative\" \"1\")\n-              (symbol_ref \"TARGET_INTER_UNIT_CONVERSIONS\")]\n            (symbol_ref \"true\")))])\n \n (define_insn \"*float<SWI48x:mode><MODEF:mode>2_i387\""}, {"sha": "b5b5c02a89916626259bdbbdd33b7e6e85678945", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209173363403d9894743b76cff0d803186ce66a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209173363403d9894743b76cff0d803186ce66a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=209173363403d9894743b76cff0d803186ce66a8", "patch": "@@ -1,3 +1,8 @@\n+2017-04-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/78090\n+\t* gcc.target/i386/conversion-2.c: Remove obsolete test.\n+\n 2017-04-20  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* g++/opt/pr80436.C: XFAIL on AIX."}, {"sha": "cca149a616655a04d03ac4dec3309154f78c6b54", "filename": "gcc/testsuite/gcc.target/i386/conversion-2.c", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2414b02252e999ce19e493dbf6f62b1f4186b7b7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fconversion-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2414b02252e999ce19e493dbf6f62b1f4186b7b7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fconversion-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fconversion-2.c?ref=2414b02252e999ce19e493dbf6f62b1f4186b7b7", "patch": "@@ -1,36 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-O2 -fno-toplevel-reorder -mtune=bdver2\" } */\n-/* { dg-additional-options \"-mregparm=1 -msse -mfpmath=sse\" { target ia32 } } */\n-\n-void __attribute__ ((hot))\n-f1 (int x)\n-{\n-  register float f asm (\"%xmm0\") = x;\n-  asm volatile (\"\" :: \"x\" (f));\n-}\n-\n-void __attribute__ ((cold))\n-f2 (int x)\n-{\n-  register float f asm (\"%xmm1\") = x;\n-  asm volatile (\"\" :: \"x\" (f));\n-}\n-\n-void __attribute__ ((hot))\n-f3 (int x)\n-{\n-  register float f asm (\"%xmm2\") = x;\n-  asm volatile (\"\" :: \"x\" (f));\n-}\n-\n-void __attribute__ ((cold))\n-f4 (int x)\n-{\n-  register float f asm (\"%xmm3\") = x;\n-  asm volatile (\"\" :: \"x\" (f));\n-}\n-\n-/* { dg-final { scan-assembler \"sp\\\\\\), %xmm0\" } } */\n-/* { dg-final { scan-assembler \"(ax|di), %xmm1\" } } */\n-/* { dg-final { scan-assembler \"sp\\\\\\), %xmm2\" } } */\n-/* { dg-final { scan-assembler \"(ax|di), %xmm3\" } } */"}]}