{"sha": "b52e15202c8a0ed1afeff92bba72fd2811c9dac1", "node_id": "C_kwDOANBUbNoAKGI1MmUxNTIwMmM4YTBlZDFhZmVmZjkyYmJhNzJmZDI4MTFjOWRhYzE", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-09-29T10:16:38Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-11T13:38:10Z"}, "message": "[Ada] Simplify detection of record components with default initialization\n\ngcc/ada/\n\n\t* exp_aggr.adb (Has_Default_Init_Comps): Simplify.", "tree": {"sha": "99d2ea49685beb1141507e2418bbda03c709a37f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99d2ea49685beb1141507e2418bbda03c709a37f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b52e15202c8a0ed1afeff92bba72fd2811c9dac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b52e15202c8a0ed1afeff92bba72fd2811c9dac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b52e15202c8a0ed1afeff92bba72fd2811c9dac1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b52e15202c8a0ed1afeff92bba72fd2811c9dac1/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dc58f3fc27ac9620b469dc56c44d55b7ee9d1a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dc58f3fc27ac9620b469dc56c44d55b7ee9d1a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dc58f3fc27ac9620b469dc56c44d55b7ee9d1a6"}], "stats": {"total": 43, "additions": 19, "deletions": 24}, "files": [{"sha": "187bb5f47b66f30bfb906aac60aaa39beb79766e", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 19, "deletions": 24, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52e15202c8a0ed1afeff92bba72fd2811c9dac1/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52e15202c8a0ed1afeff92bba72fd2811c9dac1/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=b52e15202c8a0ed1afeff92bba72fd2811c9dac1", "patch": "@@ -8897,46 +8897,41 @@ package body Exp_Aggr is\n    ----------------------------\n \n    function Has_Default_Init_Comps (N : Node_Id) return Boolean is\n-      Comps : constant List_Id := Component_Associations (N);\n-      C     : Node_Id;\n+      Assoc : Node_Id;\n       Expr  : Node_Id;\n+      --  Component association and expression, respectively\n \n    begin\n       pragma Assert (Nkind (N) in N_Aggregate | N_Extension_Aggregate);\n \n-      if No (Comps) then\n-         return False;\n-      end if;\n-\n       if Has_Self_Reference (N) then\n          return True;\n       end if;\n \n-      --  Check if any direct component has default initialized components\n+      Assoc := First (Component_Associations (N));\n+      while Present (Assoc) loop\n+         --  Each component association has either a box or an expression\n \n-      C := First (Comps);\n-      while Present (C) loop\n-         if Box_Present (C) then\n-            return True;\n-         end if;\n+         pragma Assert (Box_Present (Assoc) xor Present (Expression (Assoc)));\n \n-         Next (C);\n-      end loop;\n+         --  Check if any direct component has default initialized components\n \n-      --  Recursive call in case of aggregate expression\n+         if Box_Present (Assoc) then\n+            return True;\n \n-      C := First (Comps);\n-      while Present (C) loop\n-         Expr := Expression (C);\n+         --  Recursive call in case of aggregate expression\n \n-         if Present (Expr)\n-           and then Nkind (Expr) in N_Aggregate | N_Extension_Aggregate\n-           and then Has_Default_Init_Comps (Expr)\n-         then\n-            return True;\n+         else\n+            Expr := Expression (Assoc);\n+\n+            if Nkind (Expr) in N_Aggregate | N_Extension_Aggregate\n+              and then Has_Default_Init_Comps (Expr)\n+            then\n+               return True;\n+            end if;\n          end if;\n \n-         Next (C);\n+         Next (Assoc);\n       end loop;\n \n       return False;"}]}