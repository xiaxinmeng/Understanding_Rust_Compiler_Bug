{"sha": "af557050fd011a03d21dc26b31959033061a0443", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY1NTcwNTBmZDAxMWEwM2QyMWRjMjZiMzE5NTkwMzMwNjFhMDQ0Mw==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-04-17T17:08:55Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-04-17T17:08:55Z"}, "message": "[OpenMP] Fix 'omp exit data' for Fortran arrays (PR 94635)\n\n\tPR middle-end/94635\n\t* gimplify.c (gimplify_scan_omp_clauses): Turn MAP_TO_PSET to\n\tMAP_DELETE.\n\n\tPR middle-end/94635\n\t* testsuite/libgomp.fortran/target-enter-data-2.F90: New.", "tree": {"sha": "ab3da9c086828fce51a0e921179aa31a94e5ce62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab3da9c086828fce51a0e921179aa31a94e5ce62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af557050fd011a03d21dc26b31959033061a0443", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af557050fd011a03d21dc26b31959033061a0443", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af557050fd011a03d21dc26b31959033061a0443", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af557050fd011a03d21dc26b31959033061a0443/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "875d6cb3b4919b58ae5e6313db715bc4dd3ddd6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/875d6cb3b4919b58ae5e6313db715bc4dd3ddd6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/875d6cb3b4919b58ae5e6313db715bc4dd3ddd6c"}], "stats": {"total": 63, "additions": 59, "deletions": 4}, "files": [{"sha": "93badc209ae17760e6a5f0b8a17aad6adde38360", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af557050fd011a03d21dc26b31959033061a0443/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af557050fd011a03d21dc26b31959033061a0443/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af557050fd011a03d21dc26b31959033061a0443", "patch": "@@ -1,3 +1,9 @@\n+2020-04-17  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR middle-end/94635\n+\t* gimplify.c (gimplify_scan_omp_clauses): Turn MAP_TO_PSET to\n+\tMAP_DELETE.\n+\n 2020-04-17  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_advsimd_ldp_stp_p): New function."}, {"sha": "2f2c51b2d894e8070e4e62e014acf438e4be12cb", "filename": "gcc/gimplify.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af557050fd011a03d21dc26b31959033061a0443/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af557050fd011a03d21dc26b31959033061a0443/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=af557050fd011a03d21dc26b31959033061a0443", "patch": "@@ -8785,10 +8785,14 @@ gimplify_scan_omp_clauses (tree *list_p, gimple_seq *pre_p,\n \t     'exit data' - and in particular for 'delete:' - having an 'alloc:'\n \t     does not make sense.  Likewise, for 'update' only transferring the\n \t     data itself is needed as the rest has been handled in previous\n-\t     directives.  */\n-\t  if ((code == OMP_TARGET_EXIT_DATA || code == OMP_TARGET_UPDATE)\n-\t      && (OMP_CLAUSE_MAP_KIND (c) == GOMP_MAP_POINTER\n-\t\t  || OMP_CLAUSE_MAP_KIND (c) == GOMP_MAP_TO_PSET))\n+\t     directives.  However, for 'exit data', the array descriptor needs\n+\t     to be delete; hence, we turn the MAP_TO_PSET into a MAP_DELETE.  */\n+\t  if (code == OMP_TARGET_EXIT_DATA\n+\t      && OMP_CLAUSE_MAP_KIND (c) == GOMP_MAP_TO_PSET)\n+\t    OMP_CLAUSE_SET_MAP_KIND (c, GOMP_MAP_DELETE);\n+\t  else if ((code == OMP_TARGET_EXIT_DATA || code == OMP_TARGET_UPDATE)\n+\t\t   && (OMP_CLAUSE_MAP_KIND (c) == GOMP_MAP_POINTER\n+\t\t       || OMP_CLAUSE_MAP_KIND (c) == GOMP_MAP_TO_PSET))\n \t    remove = true;\n \n \t  if (remove)"}, {"sha": "ce71ac6e78320bf5b0cf2acb95432eabd9d57ec6", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af557050fd011a03d21dc26b31959033061a0443/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af557050fd011a03d21dc26b31959033061a0443/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=af557050fd011a03d21dc26b31959033061a0443", "patch": "@@ -1,3 +1,8 @@\n+2020-04-17  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR middle-end/94635\n+\t* testsuite/libgomp.fortran/target-enter-data-2.F90: New.\n+\n 2020-04-13  Thomas Schwinge  <thomas@codesourcery.com>\n \n \tPR libgomp/92843"}, {"sha": "320d8bf419f4f45c22a90ee03030fd0f16738b06", "filename": "libgomp/testsuite/libgomp.fortran/target-enter-data-2.F90", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af557050fd011a03d21dc26b31959033061a0443/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget-enter-data-2.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af557050fd011a03d21dc26b31959033061a0443/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget-enter-data-2.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftarget-enter-data-2.F90?ref=af557050fd011a03d21dc26b31959033061a0443", "patch": "@@ -0,0 +1,40 @@\n+! { dg-additional-options \"-DMEM_SHARED\" { target offload_device_shared_as } }\n+!\n+! PR middle-end/94635\n+  implicit none\n+  integer, parameter :: N = 20\n+  integer, allocatable, dimension(:) :: my1DPtr\n+  integer, dimension(N) :: my1DArr\n+  integer :: i\n+\n+  allocate(my1DPtr(N))\n+  my1DPtr = 43\n+\n+  !$omp target enter data map(alloc: my1DPtr)\n+    !$omp target\n+      my1DPtr = [(i , i = 1, N)]\n+    !$omp end target\n+\n+    !$omp target map(from: my1DArr) \n+      my1DArr = my1DPtr\n+    !$omp end target\n+  !$omp target exit data map(delete: my1DPtr)\n+\n+  if (any (my1DArr /= [(i, i = 1, N)])) stop 1\n+#if MEM_SHARED\n+  if (any (my1DArr /= my1DPtr)) stop 2\n+#else\n+  if (any (43 /= my1DPtr)) stop 3\n+#endif\n+\n+  my1DPtr = [(2*N-i, i = 1, N)]\n+  my1DArr = 42\n+ \n+  !$omp target map(tofrom: my1DArr) map(tofrom: my1DPtr(:))\n+    my1DArr = my1DPtr\n+    my1DPtr = 20\n+  !$omp end target\n+\n+  if (any (my1DArr /= [(2*N-i, i = 1, N)])) stop 4\n+  if (any (20 /= my1DPtr)) stop 6\n+end"}]}