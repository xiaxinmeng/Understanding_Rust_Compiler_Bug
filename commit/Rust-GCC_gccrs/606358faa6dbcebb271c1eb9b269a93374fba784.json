{"sha": "606358faa6dbcebb271c1eb9b269a93374fba784", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA2MzU4ZmFhNmRiY2ViYjI3MWMxZWI5YjI2OWE5MzM3NGZiYTc4NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-10-16T22:19:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-10-16T22:19:13Z"}, "message": "decl.c (cxx_maybe_build_cleanup): When clearing location of cleanup...\n\n\t* decl.c (cxx_maybe_build_cleanup): When clearing location of cleanup,\n\tif cleanup is a nop, clear location of its operand too.\n\nFrom-SVN: r277084", "tree": {"sha": "55866dc71381db11539b5b330089d26094286b7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55866dc71381db11539b5b330089d26094286b7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/606358faa6dbcebb271c1eb9b269a93374fba784", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/606358faa6dbcebb271c1eb9b269a93374fba784", "html_url": "https://github.com/Rust-GCC/gccrs/commit/606358faa6dbcebb271c1eb9b269a93374fba784", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/606358faa6dbcebb271c1eb9b269a93374fba784/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5b04038edcea3b3f65dec5bd34a0d018b45c1b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5b04038edcea3b3f65dec5bd34a0d018b45c1b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5b04038edcea3b3f65dec5bd34a0d018b45c1b1"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "6c1e6b46377b1be3bf684becde8279540a4f101b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/606358faa6dbcebb271c1eb9b269a93374fba784/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/606358faa6dbcebb271c1eb9b269a93374fba784/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=606358faa6dbcebb271c1eb9b269a93374fba784", "patch": "@@ -1,3 +1,8 @@\n+2019-10-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* decl.c (cxx_maybe_build_cleanup): When clearing location of cleanup,\n+\tif cleanup is a nop, clear location of its operand too.\n+\n 2019-10-15  Nathan Sidwell  <nathan@acm.org>\n \n \t* class.c (build_clones): Break out of clone_function_decl.  Just"}, {"sha": "5e510c91aa30c0c35afe49669a60895203f0719c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/606358faa6dbcebb271c1eb9b269a93374fba784/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/606358faa6dbcebb271c1eb9b269a93374fba784/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=606358faa6dbcebb271c1eb9b269a93374fba784", "patch": "@@ -16864,6 +16864,8 @@ cxx_maybe_build_cleanup (tree decl, tsubst_flags_t complain)\n      the end of the block.  So let's unset the location of the\n      destructor call instead.  */\n   protected_set_expr_location (cleanup, UNKNOWN_LOCATION);\n+  if (cleanup && CONVERT_EXPR_P (cleanup))\n+    protected_set_expr_location (TREE_OPERAND (cleanup, 0), UNKNOWN_LOCATION);\n \n   if (cleanup\n       && DECL_P (decl)"}]}