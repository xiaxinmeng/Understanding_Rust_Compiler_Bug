{"sha": "fefab9536e9d986ed0ffbdeeb0ef851578385564", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVmYWI5NTM2ZTlkOTg2ZWQwZmZiZGVlYjBlZjg1MTU3ODM4NTU2NA==", "commit": {"author": {"name": "Igor Tsimbalist", "email": "igor.v.tsimbalist@intel.com", "date": "2017-12-22T11:41:02Z"}, "committer": {"name": "Igor Tsimbalist", "email": "itsimbal@gcc.gnu.org", "date": "2017-12-22T11:41:02Z"}, "message": "This is a follow up patch for pr83488 to fix an error in setting...\n\nThis is a follow up patch for pr83488 to fix an error in setting\nOPTION_MASK_ISA_AVX512VNNI_SET and OPTION_MASK_ISA_AVX512F_SET bits.\nThere were both set in ix86_isa_flags2 while being defined in\ndifferent ISA sets. Additionally move OPTION_MASK_ISA_AVX512VNNI_SET\nto ix86_isa_flags as it can be used with OPTION_MASK_ISA_AVX512VL_SET.\n\ngcc/\n\t* common/config/i386/i386-common.c (OPTION_MASK_ISA_AVX512VNNI_SET):\n\tOr in OPTION_MASK_ISA_AVX512F_SET.\n\t(OPTION_MASK_ISA_AVX512F_UNSET): Or in\n\tOPTION_MASK_ISA_AVX512VNNI_UNSET.\n\t(ix86_handle_option): Adjust for\n\tOPTION_MASK_ISA_AVX512VNNI_*SET being in ix86_isa_flags.\n\t* config/i386/i386-builtin.def: Move VNNI builtins from ARGS2\n\tsection to ARGS.\n\t* config/i386/i386-c.c: Check for OPTION_MASK_ISA_AVX512VNNI in\n\tisa_flag instead of isa_flag2.\n\t* config/i386/i386.c (ix86_target_string): Move -mavx512vnni from\n\tisa_opts2 to isa_opts.\n\t* config/i386/i386.opt (mavx512vnni): Move from ix86_isa_flags2\n\tto ix86_isa_flags.\n\nFrom-SVN: r255974", "tree": {"sha": "73e5ce64bfc3c9ce1ec82d3a5a96faaec8eeedd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73e5ce64bfc3c9ce1ec82d3a5a96faaec8eeedd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fefab9536e9d986ed0ffbdeeb0ef851578385564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fefab9536e9d986ed0ffbdeeb0ef851578385564", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fefab9536e9d986ed0ffbdeeb0ef851578385564", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fefab9536e9d986ed0ffbdeeb0ef851578385564/comments", "author": {"login": "itsimbal", "id": 29258612, "node_id": "MDQ6VXNlcjI5MjU4NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/29258612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itsimbal", "html_url": "https://github.com/itsimbal", "followers_url": "https://api.github.com/users/itsimbal/followers", "following_url": "https://api.github.com/users/itsimbal/following{/other_user}", "gists_url": "https://api.github.com/users/itsimbal/gists{/gist_id}", "starred_url": "https://api.github.com/users/itsimbal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itsimbal/subscriptions", "organizations_url": "https://api.github.com/users/itsimbal/orgs", "repos_url": "https://api.github.com/users/itsimbal/repos", "events_url": "https://api.github.com/users/itsimbal/events{/privacy}", "received_events_url": "https://api.github.com/users/itsimbal/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "170a8bd604a4c960b8a378d50f7cc6c66cbdaf5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/170a8bd604a4c960b8a378d50f7cc6c66cbdaf5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/170a8bd604a4c960b8a378d50f7cc6c66cbdaf5c"}], "stats": {"total": 123, "additions": 70, "deletions": 53}, "files": [{"sha": "efef50ac25e756c6719115da9dbdc041472c04b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fefab9536e9d986ed0ffbdeeb0ef851578385564/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fefab9536e9d986ed0ffbdeeb0ef851578385564/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fefab9536e9d986ed0ffbdeeb0ef851578385564", "patch": "@@ -1,3 +1,20 @@\n+2017-12-22  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\t* common/config/i386/i386-common.c (OPTION_MASK_ISA_AVX512VNNI_SET):\n+\tOr in OPTION_MASK_ISA_AVX512F_SET.\n+\t(OPTION_MASK_ISA_AVX512F_UNSET): Or in\n+\tOPTION_MASK_ISA_AVX512VNNI_UNSET.\n+\t(ix86_handle_option): Adjust for\n+\tOPTION_MASK_ISA_AVX512VNNI_*SET being in ix86_isa_flags.\n+\t* config/i386/i386-builtin.def: Move VNNI builtins from ARGS2\n+\tsection to ARGS.\n+\t* config/i386/i386-c.c: Check for OPTION_MASK_ISA_AVX512VNNI in\n+\tisa_flag instead of isa_flag2.\n+\t* config/i386/i386.c (ix86_target_string): Move -mavx512vnni from\n+\tisa_opts2 to isa_opts.\n+\t* config/i386/i386.opt (mavx512vnni): Move from ix86_isa_flags2\n+\tto ix86_isa_flags.\n+\n 2017-12-22  Mike Stump  <mikestump@comcast.net>\n             Eric Botcazou  <ebotcazou@adacore.com>\n "}, {"sha": "421b450b207d48f0a200bceb4bb9106780846b90", "filename": "gcc/common/config/i386/i386-common.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fefab9536e9d986ed0ffbdeeb0ef851578385564/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fefab9536e9d986ed0ffbdeeb0ef851578385564/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c?ref=fefab9536e9d986ed0ffbdeeb0ef851578385564", "patch": "@@ -82,7 +82,8 @@ along with GCC; see the file COPYING3.  If not see\n #define OPTION_MASK_ISA_AVX5124VNNIW_SET OPTION_MASK_ISA_AVX5124VNNIW\n #define OPTION_MASK_ISA_AVX512VBMI2_SET \\\n   (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512F_SET)\n-#define OPTION_MASK_ISA_AVX512VNNI_SET OPTION_MASK_ISA_AVX512VNNI\n+#define OPTION_MASK_ISA_AVX512VNNI_SET \\\n+  (OPTION_MASK_ISA_AVX512VNNI | OPTION_MASK_ISA_AVX512F_SET)\n #define OPTION_MASK_ISA_AVX512VPOPCNTDQ_SET OPTION_MASK_ISA_AVX512VPOPCNTDQ\n #define OPTION_MASK_ISA_RTM_SET OPTION_MASK_ISA_RTM\n #define OPTION_MASK_ISA_PRFCHW_SET OPTION_MASK_ISA_PRFCHW\n@@ -184,7 +185,8 @@ along with GCC; see the file COPYING3.  If not see\n   (OPTION_MASK_ISA_AVX512F | OPTION_MASK_ISA_AVX512CD_UNSET \\\n    | OPTION_MASK_ISA_AVX512PF_UNSET | OPTION_MASK_ISA_AVX512ER_UNSET \\\n    | OPTION_MASK_ISA_AVX512DQ_UNSET | OPTION_MASK_ISA_AVX512BW_UNSET \\\n-   | OPTION_MASK_ISA_AVX512VL_UNSET | OPTION_MASK_ISA_AVX512VBMI2_UNSET)\n+   | OPTION_MASK_ISA_AVX512VL_UNSET | OPTION_MASK_ISA_AVX512VBMI2_UNSET \\\n+   | OPTION_MASK_ISA_AVX512VNNI_UNSET)\n #define OPTION_MASK_ISA_AVX512CD_UNSET OPTION_MASK_ISA_AVX512CD\n #define OPTION_MASK_ISA_AVX512PF_UNSET OPTION_MASK_ISA_AVX512PF\n #define OPTION_MASK_ISA_AVX512ER_UNSET OPTION_MASK_ISA_AVX512ER\n@@ -616,15 +618,13 @@ ix86_handle_option (struct gcc_options *opts,\n     case OPT_mavx512vnni:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_AVX512VNNI_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_AVX512VNNI_SET;\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_AVX512F_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_AVX512F_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512VNNI_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX512VNNI_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_AVX512VNNI_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_AVX512VNNI_UNSET;\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_AVX512VNNI_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX512VNNI_UNSET;\n \t}\n       return true;\n "}, {"sha": "3365cea46ab018047b1848a9cb61f58871fe68ee", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fefab9536e9d986ed0ffbdeeb0ef851578385564/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fefab9536e9d986ed0ffbdeeb0ef851578385564/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=fefab9536e9d986ed0ffbdeeb0ef851578385564", "patch": "@@ -2549,6 +2549,48 @@ BDESC (OPTION_MASK_ISA_GFNI | OPTION_MASK_ISA_AVX512BW, CODE_FOR_vgf2p8mulb_v32q\n BDESC (OPTION_MASK_ISA_GFNI | OPTION_MASK_ISA_SSE, CODE_FOR_vgf2p8mulb_v16qi, \"__builtin_ia32_vgf2p8mulb_v16qi\", IX86_BUILTIN_VGF2P8MULB128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n BDESC (OPTION_MASK_ISA_GFNI | OPTION_MASK_ISA_AVX512BW, CODE_FOR_vgf2p8mulb_v16qi_mask, \"__builtin_ia32_vgf2p8mulb_v16qi_mask\", IX86_BUILTIN_VGF2P8MULB128MASK, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI_V16QI_UHI)\n \n+/* VNNI */\n+\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v16si, \"__builtin_ia32_vpdpbusd_v16si\", IX86_BUILTIN_VPDPBUSDV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v16si_mask, \"__builtin_ia32_vpdpbusd_v16si_mask\", IX86_BUILTIN_VPDPBUSDV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v16si_maskz, \"__builtin_ia32_vpdpbusd_v16si_maskz\", IX86_BUILTIN_VPDPBUSDV16SI_MASKZ, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v8si, \"__builtin_ia32_vpdpbusd_v8si\", IX86_BUILTIN_VPDPBUSDV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v8si_mask, \"__builtin_ia32_vpdpbusd_v8si_mask\", IX86_BUILTIN_VPDPBUSDV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v8si_maskz, \"__builtin_ia32_vpdpbusd_v8si_maskz\", IX86_BUILTIN_VPDPBUSDV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v4si, \"__builtin_ia32_vpdpbusd_v4si\", IX86_BUILTIN_VPDPBUSDV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v4si_mask, \"__builtin_ia32_vpdpbusd_v4si_mask\", IX86_BUILTIN_VPDPBUSDV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v4si_maskz, \"__builtin_ia32_vpdpbusd_v4si_maskz\", IX86_BUILTIN_VPDPBUSDV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v16si, \"__builtin_ia32_vpdpbusds_v16si\", IX86_BUILTIN_VPDPBUSDSV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v16si_mask, \"__builtin_ia32_vpdpbusds_v16si_mask\", IX86_BUILTIN_VPDPBUSDSV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v16si_maskz, \"__builtin_ia32_vpdpbusds_v16si_maskz\", IX86_BUILTIN_VPDPBUSDSV16SI_MASKZ, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v8si, \"__builtin_ia32_vpdpbusds_v8si\", IX86_BUILTIN_VPDPBUSDSV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v8si_mask, \"__builtin_ia32_vpdpbusds_v8si_mask\", IX86_BUILTIN_VPDPBUSDSV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v8si_maskz, \"__builtin_ia32_vpdpbusds_v8si_maskz\", IX86_BUILTIN_VPDPBUSDSV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v4si, \"__builtin_ia32_vpdpbusds_v4si\", IX86_BUILTIN_VPDPBUSDSV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v4si_mask, \"__builtin_ia32_vpdpbusds_v4si_mask\", IX86_BUILTIN_VPDPBUSDSV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v4si_maskz, \"__builtin_ia32_vpdpbusds_v4si_maskz\", IX86_BUILTIN_VPDPBUSDSV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v16si, \"__builtin_ia32_vpdpwssd_v16si\", IX86_BUILTIN_VPDPWSSDV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v16si_mask, \"__builtin_ia32_vpdpwssd_v16si_mask\", IX86_BUILTIN_VPDPWSSDV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v16si_maskz, \"__builtin_ia32_vpdpwssd_v16si_maskz\", IX86_BUILTIN_VPDPWSSDV16SI_MASKZ, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v8si, \"__builtin_ia32_vpdpwssd_v8si\", IX86_BUILTIN_VPDPWSSDV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v8si_mask, \"__builtin_ia32_vpdpwssd_v8si_mask\", IX86_BUILTIN_VPDPWSSDV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v8si_maskz, \"__builtin_ia32_vpdpwssd_v8si_maskz\", IX86_BUILTIN_VPDPWSSDV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v4si, \"__builtin_ia32_vpdpwssd_v4si\", IX86_BUILTIN_VPDPWSSDV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v4si_mask, \"__builtin_ia32_vpdpwssd_v4si_mask\", IX86_BUILTIN_VPDPWSSDV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v4si_maskz, \"__builtin_ia32_vpdpwssd_v4si_maskz\", IX86_BUILTIN_VPDPWSSDV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v16si, \"__builtin_ia32_vpdpwssds_v16si\", IX86_BUILTIN_VPDPWSSDSV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v16si_mask, \"__builtin_ia32_vpdpwssds_v16si_mask\", IX86_BUILTIN_VPDPWSSDSV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v16si_maskz, \"__builtin_ia32_vpdpwssds_v16si_maskz\", IX86_BUILTIN_VPDPWSSDSV16SI_MASKZ, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v8si, \"__builtin_ia32_vpdpwssds_v8si\", IX86_BUILTIN_VPDPWSSDSV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v8si_mask, \"__builtin_ia32_vpdpwssds_v8si_mask\", IX86_BUILTIN_VPDPWSSDSV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v8si_maskz, \"__builtin_ia32_vpdpwssds_v8si_maskz\", IX86_BUILTIN_VPDPWSSDSV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v4si, \"__builtin_ia32_vpdpwssds_v4si\", IX86_BUILTIN_VPDPWSSDSV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v4si_mask, \"__builtin_ia32_vpdpwssds_v4si_mask\", IX86_BUILTIN_VPDPWSSDSV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v4si_maskz, \"__builtin_ia32_vpdpwssds_v4si_maskz\", IX86_BUILTIN_VPDPWSSDSV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n+\n /* VPCLMULQDQ */\n BDESC (OPTION_MASK_ISA_VPCLMULQDQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_vpclmulqdq_v2di, \"__builtin_ia32_vpclmulqdq_v2di\", IX86_BUILTIN_VPCLMULQDQ2, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_INT)\n BDESC (OPTION_MASK_ISA_VPCLMULQDQ | OPTION_MASK_ISA_AVX, CODE_FOR_vpclmulqdq_v4di, \"__builtin_ia32_vpclmulqdq_v4di\", IX86_BUILTIN_VPCLMULQDQ4, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_INT)\n@@ -2749,48 +2791,6 @@ BDESC (OPTION_MASK_ISA_AVX512VPOPCNTDQ, CODE_FOR_vpopcountv8di_mask, \"__builtin_\n /* RDPID */\n BDESC (OPTION_MASK_ISA_RDPID, CODE_FOR_rdpid, \"__builtin_ia32_rdpid\", IX86_BUILTIN_RDPID, UNKNOWN, (int) UNSIGNED_FTYPE_VOID)\n \n-/* VNNI */\n-\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v16si, \"__builtin_ia32_vpdpbusd_v16si\", IX86_BUILTIN_VPDPBUSDV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v16si_mask, \"__builtin_ia32_vpdpbusd_v16si_mask\", IX86_BUILTIN_VPDPBUSDV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v16si_maskz, \"__builtin_ia32_vpdpbusd_v16si_maskz\", IX86_BUILTIN_VPDPBUSDV16SI_MASKZ, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v8si, \"__builtin_ia32_vpdpbusd_v8si\", IX86_BUILTIN_VPDPBUSDV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v8si_mask, \"__builtin_ia32_vpdpbusd_v8si_mask\", IX86_BUILTIN_VPDPBUSDV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v8si_maskz, \"__builtin_ia32_vpdpbusd_v8si_maskz\", IX86_BUILTIN_VPDPBUSDV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v4si, \"__builtin_ia32_vpdpbusd_v4si\", IX86_BUILTIN_VPDPBUSDV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v4si_mask, \"__builtin_ia32_vpdpbusd_v4si_mask\", IX86_BUILTIN_VPDPBUSDV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusd_v4si_maskz, \"__builtin_ia32_vpdpbusd_v4si_maskz\", IX86_BUILTIN_VPDPBUSDV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n-\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v16si, \"__builtin_ia32_vpdpbusds_v16si\", IX86_BUILTIN_VPDPBUSDSV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v16si_mask, \"__builtin_ia32_vpdpbusds_v16si_mask\", IX86_BUILTIN_VPDPBUSDSV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v16si_maskz, \"__builtin_ia32_vpdpbusds_v16si_maskz\", IX86_BUILTIN_VPDPBUSDSV16SI_MASKZ, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v8si, \"__builtin_ia32_vpdpbusds_v8si\", IX86_BUILTIN_VPDPBUSDSV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v8si_mask, \"__builtin_ia32_vpdpbusds_v8si_mask\", IX86_BUILTIN_VPDPBUSDSV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v8si_maskz, \"__builtin_ia32_vpdpbusds_v8si_maskz\", IX86_BUILTIN_VPDPBUSDSV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v4si, \"__builtin_ia32_vpdpbusds_v4si\", IX86_BUILTIN_VPDPBUSDSV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v4si_mask, \"__builtin_ia32_vpdpbusds_v4si_mask\", IX86_BUILTIN_VPDPBUSDSV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpbusds_v4si_maskz, \"__builtin_ia32_vpdpbusds_v4si_maskz\", IX86_BUILTIN_VPDPBUSDSV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n-\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v16si, \"__builtin_ia32_vpdpwssd_v16si\", IX86_BUILTIN_VPDPWSSDV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v16si_mask, \"__builtin_ia32_vpdpwssd_v16si_mask\", IX86_BUILTIN_VPDPWSSDV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v16si_maskz, \"__builtin_ia32_vpdpwssd_v16si_maskz\", IX86_BUILTIN_VPDPWSSDV16SI_MASKZ, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v8si, \"__builtin_ia32_vpdpwssd_v8si\", IX86_BUILTIN_VPDPWSSDV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v8si_mask, \"__builtin_ia32_vpdpwssd_v8si_mask\", IX86_BUILTIN_VPDPWSSDV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v8si_maskz, \"__builtin_ia32_vpdpwssd_v8si_maskz\", IX86_BUILTIN_VPDPWSSDV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v4si, \"__builtin_ia32_vpdpwssd_v4si\", IX86_BUILTIN_VPDPWSSDV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v4si_mask, \"__builtin_ia32_vpdpwssd_v4si_mask\", IX86_BUILTIN_VPDPWSSDV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssd_v4si_maskz, \"__builtin_ia32_vpdpwssd_v4si_maskz\", IX86_BUILTIN_VPDPWSSDV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n-\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v16si, \"__builtin_ia32_vpdpwssds_v16si\", IX86_BUILTIN_VPDPWSSDSV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v16si_mask, \"__builtin_ia32_vpdpwssds_v16si_mask\", IX86_BUILTIN_VPDPWSSDSV16SI_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v16si_maskz, \"__builtin_ia32_vpdpwssds_v16si_maskz\", IX86_BUILTIN_VPDPWSSDSV16SI_MASKZ, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v8si, \"__builtin_ia32_vpdpwssds_v8si\", IX86_BUILTIN_VPDPWSSDSV8SI, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v8si_mask, \"__builtin_ia32_vpdpwssds_v8si_mask\", IX86_BUILTIN_VPDPWSSDSV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v8si_maskz, \"__builtin_ia32_vpdpwssds_v8si_maskz\", IX86_BUILTIN_VPDPWSSDSV8SI_MASKZ, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v4si, \"__builtin_ia32_vpdpwssds_v4si\", IX86_BUILTIN_VPDPWSSDSV4SI, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v4si_mask, \"__builtin_ia32_vpdpwssds_v4si_mask\", IX86_BUILTIN_VPDPWSSDSV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n-BDESC (OPTION_MASK_ISA_AVX512VNNI, CODE_FOR_vpdpwssds_v4si_maskz, \"__builtin_ia32_vpdpwssds_v4si_maskz\", IX86_BUILTIN_VPDPWSSDSV4SI_MASKZ, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_INT)\n-\n /* VAES */\n BDESC (OPTION_MASK_ISA_VAES, CODE_FOR_vaesdec_v16qi, \"__builtin_ia32_vaesdec_v16qi\", IX86_BUILTIN_VAESDEC16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n BDESC (OPTION_MASK_ISA_VAES, CODE_FOR_vaesdec_v32qi, \"__builtin_ia32_vaesdec_v32qi\", IX86_BUILTIN_VAESDEC32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)"}, {"sha": "d9de37bfeffc9d6e804827b69967d850e6368eae", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fefab9536e9d986ed0ffbdeeb0ef851578385564/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fefab9536e9d986ed0ffbdeeb0ef851578385564/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=fefab9536e9d986ed0ffbdeeb0ef851578385564", "patch": "@@ -396,7 +396,7 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     def_or_undef (parse_in, \"__AVX5124VNNIW__\");\n   if (isa_flag & OPTION_MASK_ISA_AVX512VBMI2)\n     def_or_undef (parse_in, \"__AVX512VBMI2__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_AVX512VNNI)\n+  if (isa_flag & OPTION_MASK_ISA_AVX512VNNI)\n     def_or_undef (parse_in, \"__AVX512VNNI__\");\n   if (isa_flag2 & OPTION_MASK_ISA_SGX)\n     def_or_undef (parse_in, \"__SGX__\");"}, {"sha": "575e75abe718dc92419a74c453ae086955d160dc", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fefab9536e9d986ed0ffbdeeb0ef851578385564/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fefab9536e9d986ed0ffbdeeb0ef851578385564/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=fefab9536e9d986ed0ffbdeeb0ef851578385564", "patch": "@@ -2753,7 +2753,6 @@ ix86_target_string (HOST_WIDE_INT isa, HOST_WIDE_INT isa2,\n   {\n     { \"-mcx16\",\t\tOPTION_MASK_ISA_CX16 },\n     { \"-mmpx\",\t\tOPTION_MASK_ISA_MPX },\n-    { \"-mavx512vnni\",\tOPTION_MASK_ISA_AVX512VNNI },\n     { \"-mvaes\",\t\tOPTION_MASK_ISA_VAES },\n     { \"-mrdpid\",\tOPTION_MASK_ISA_RDPID },\n     { \"-msgx\",\t\tOPTION_MASK_ISA_SGX },\n@@ -2770,6 +2769,7 @@ ix86_target_string (HOST_WIDE_INT isa, HOST_WIDE_INT isa2,\n   {\n     { \"-mvpclmulqdq\",\tOPTION_MASK_ISA_VPCLMULQDQ },\n     { \"-mgfni\",\t\tOPTION_MASK_ISA_GFNI },\n+    { \"-mavx512vnni\",\tOPTION_MASK_ISA_AVX512VNNI },\n     { \"-mavx512vbmi2\",\tOPTION_MASK_ISA_AVX512VBMI2 },\n     { \"-mavx512vbmi\",\tOPTION_MASK_ISA_AVX512VBMI },\n     { \"-mavx512ifma\",\tOPTION_MASK_ISA_AVX512IFMA },"}, {"sha": "9e7bccef4ce5353f27dc1b77779b343bb5335386", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fefab9536e9d986ed0ffbdeeb0ef851578385564/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fefab9536e9d986ed0ffbdeeb0ef851578385564/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=fefab9536e9d986ed0ffbdeeb0ef851578385564", "patch": "@@ -742,7 +742,7 @@ Target Report Mask(ISA_AVX512VBMI2) Var(ix86_isa_flags) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX512F and AVX512VBMI2 built-in functions and code generation.\n \n mavx512vnni\n-Target Report Mask(ISA_AVX512VNNI) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA_AVX512VNNI) Var(ix86_isa_flags) Save\n Support AVX512VNNI built-in functions and code generation.\n \n mfma"}]}