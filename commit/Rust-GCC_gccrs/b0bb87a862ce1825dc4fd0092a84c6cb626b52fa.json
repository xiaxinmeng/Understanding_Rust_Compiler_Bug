{"sha": "b0bb87a862ce1825dc4fd0092a84c6cb626b52fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBiYjg3YTg2MmNlMTgyNWRjNGZkMDA5MmE4NGM2Y2I2MjZiNTJmYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2007-10-10T23:06:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2007-10-10T23:06:08Z"}, "message": "guard.cc (struct mutex_wrapper): Move into anonymous namespace.\n\n        * libsupc++/guard.cc (struct mutex_wrapper): Move into\n        anonymous namespace.\n\nFrom-SVN: r129218", "tree": {"sha": "8a6079433025a4a4739e3653a1ccbcd01df3f32f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a6079433025a4a4739e3653a1ccbcd01df3f32f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0bb87a862ce1825dc4fd0092a84c6cb626b52fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0bb87a862ce1825dc4fd0092a84c6cb626b52fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0bb87a862ce1825dc4fd0092a84c6cb626b52fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0bb87a862ce1825dc4fd0092a84c6cb626b52fa/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc8c030d88acdc9fba0cb1f6bc4bd647a41bb246", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc8c030d88acdc9fba0cb1f6bc4bd647a41bb246", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc8c030d88acdc9fba0cb1f6bc4bd647a41bb246"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "3b4e0286b73bf3d40904ac730574451c44db0449", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0bb87a862ce1825dc4fd0092a84c6cb626b52fa/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0bb87a862ce1825dc4fd0092a84c6cb626b52fa/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b0bb87a862ce1825dc4fd0092a84c6cb626b52fa", "patch": "@@ -1,3 +1,8 @@\n+2007-10-10  Jason Merrill  <jason@redhat.com>\n+\n+\t* libsupc++/guard.cc (struct mutex_wrapper): Move into\n+\tanonymous namespace.\n+\n 2007-10-10  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/debug/list (list<>::list(list&&)): Fix."}, {"sha": "6cf83b1c1f4238fc5c2d34ce1e8c7693962cc2fd", "filename": "libstdc++-v3/libsupc++/guard.cc", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0bb87a862ce1825dc4fd0092a84c6cb626b52fa/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fguard.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0bb87a862ce1825dc4fd0092a84c6cb626b52fa/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fguard.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fguard.cc?ref=b0bb87a862ce1825dc4fd0092a84c6cb626b52fa", "patch": "@@ -60,6 +60,20 @@ namespace\n     __gthread_once(&once, init);\n     return *static_mutex;\n   }\n+\n+  // Simple wrapper for exception safety.\n+  struct mutex_wrapper\n+  {\n+    bool unlock;\n+    mutex_wrapper() : unlock(true)\n+    { get_static_mutex().lock(); }\n+\n+    ~mutex_wrapper()\n+    {\n+      if (unlock)\n+\tstatic_mutex->unlock();\n+    }\n+  };\n }\n \n #ifdef __GTHREAD_HAS_COND\n@@ -199,22 +213,6 @@ namespace __cxxabiv1\n     return 1;\n   }\n \n-  // Simple wrapper for exception safety.\n-  struct mutex_wrapper\n-  {\n-#ifdef __GTHREADS\n-    bool unlock;\n-    mutex_wrapper() : unlock(true)\n-    { get_static_mutex().lock(); }\n-\n-    ~mutex_wrapper()\n-    {\n-      if (unlock)\n-\tstatic_mutex->unlock();\n-    }\n-#endif\n-  };\n-\n   extern \"C\"\n   int __cxa_guard_acquire (__guard *g) \n   {"}]}