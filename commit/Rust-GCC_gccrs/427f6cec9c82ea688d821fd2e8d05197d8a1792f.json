{"sha": "427f6cec9c82ea688d821fd2e8d05197d8a1792f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI3ZjZjZWM5YzgyZWE2ODhkODIxZmQyZThkMDUxOTdkOGExNzkyZg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2011-01-20T16:56:25Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2011-01-20T16:56:25Z"}, "message": "re PR tree-optimization/46583 (-fcompare-debug failure with -O -fno-inline -fipa-cp -fipa-cp-clone)\n\ngcc/ChangeLog:\nPR debug/46583\n* tree-ssa-live.c (remove_unused_scope_block_p): Keep type decls.\ngcc/testsuite/ChangeLog:\nPR debug/46583\n* g++.dg/debug/pr46583.C: New.\n\nFrom-SVN: r169058", "tree": {"sha": "14a8302aec3d91db81012ed7e00e5de1ecf7e409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14a8302aec3d91db81012ed7e00e5de1ecf7e409"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/427f6cec9c82ea688d821fd2e8d05197d8a1792f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/427f6cec9c82ea688d821fd2e8d05197d8a1792f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/427f6cec9c82ea688d821fd2e8d05197d8a1792f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/427f6cec9c82ea688d821fd2e8d05197d8a1792f/comments", "author": null, "committer": null, "parents": [{"sha": "583ac69ceb5c573aa3fd016f209f222b8ad704cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/583ac69ceb5c573aa3fd016f209f222b8ad704cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/583ac69ceb5c573aa3fd016f209f222b8ad704cb"}], "stats": {"total": 65, "additions": 60, "deletions": 5}, "files": [{"sha": "dcc3530650123a8104c945486080c740ccd55764", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427f6cec9c82ea688d821fd2e8d05197d8a1792f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427f6cec9c82ea688d821fd2e8d05197d8a1792f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=427f6cec9c82ea688d821fd2e8d05197d8a1792f", "patch": "@@ -1,3 +1,8 @@\n+2011-01-20  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR debug/46583\n+\t* tree-ssa-live.c (remove_unused_scope_block_p): Keep type decls.\n+\n 2011-01-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/47283"}, {"sha": "baf5732df073d493716eaba4409655bf22de4166", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427f6cec9c82ea688d821fd2e8d05197d8a1792f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427f6cec9c82ea688d821fd2e8d05197d8a1792f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=427f6cec9c82ea688d821fd2e8d05197d8a1792f", "patch": "@@ -1,3 +1,8 @@\n+2011-01-20  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR debug/46583\n+\t* g++.dg/debug/pr46583.C: New.\n+\n 2011-01-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/47283"}, {"sha": "a4e94238eced648f2558cb6bca5bab8f088e792a", "filename": "gcc/testsuite/g++.dg/debug/pr46583.C", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427f6cec9c82ea688d821fd2e8d05197d8a1792f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr46583.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427f6cec9c82ea688d821fd2e8d05197d8a1792f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr46583.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr46583.C?ref=427f6cec9c82ea688d821fd2e8d05197d8a1792f", "patch": "@@ -0,0 +1,40 @@\n+// PR debug/46583\n+// { dg-do compile }\n+// { dg-options \"-O -fno-inline -fipa-cp -fipa-cp-clone -fcompare-debug\" }\n+\n+template < typename = unsigned long >struct A\n+{\n+  unsigned long elems[3];\n+  unsigned long *begin ()\n+  {\n+    return 0;\n+  }\n+};\n+\n+void\n+bar (unsigned long *a1, unsigned long, unsigned long *a3, unsigned const &)\n+{\n+  *a3 = *a1;\n+}\n+\n+A < >operatorM (A < >a1, unsigned long a2)\n+{\n+  typedef A < >G;\n+  G a3;\n+  bar (a1.begin (), a2, a3.begin (), 0);\n+  return a3;\n+}\n+\n+struct B\n+{\n+  B (A < >m):n (operatorM (m, 1))\n+  {\n+  }\n+  A < >n;\n+};\n+\n+void\n+foo ()\n+{\n+  B (A < >());\n+}"}, {"sha": "0fa906b79c7d70bb19d6ec3824c4b94ed1a8e010", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427f6cec9c82ea688d821fd2e8d05197d8a1792f/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427f6cec9c82ea688d821fd2e8d05197d8a1792f/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=427f6cec9c82ea688d821fd2e8d05197d8a1792f", "patch": "@@ -490,11 +490,16 @@ remove_unused_scope_block_p (tree scope)\n \t can be considered dead.  We only want to keep around blocks user can\n \t breakpoint into and ask about value of optimized out variables.\n \n-\t Similarly we need to keep around types at least until all variables of\n-\t all nested blocks are gone.  We track no information on whether given\n-\t type is used or not.  */\n-\n-      else if (debug_info_level == DINFO_LEVEL_NORMAL\n+\t Similarly we need to keep around types at least until all\n+\t variables of all nested blocks are gone.  We track no\n+\t information on whether given type is used or not, so we have\n+\t to keep them even when not emitting debug information,\n+\t otherwise we may end up remapping variables and their (local)\n+\t types in different orders depending on whether debug\n+\t information is being generated.  */\n+\n+      else if (TREE_CODE (*t) == TYPE_DECL\n+\t       || debug_info_level == DINFO_LEVEL_NORMAL\n \t       || debug_info_level == DINFO_LEVEL_VERBOSE)\n \t;\n       else"}]}