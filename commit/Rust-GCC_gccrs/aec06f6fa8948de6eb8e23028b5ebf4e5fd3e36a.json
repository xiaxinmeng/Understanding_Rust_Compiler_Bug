{"sha": "aec06f6fa8948de6eb8e23028b5ebf4e5fd3e36a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVjMDZmNmZhODk0OGRlNmViOGUyMzAyOGI1ZWJmNGU1ZmQzZTM2YQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2012-10-12T12:14:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-10-12T12:14:03Z"}, "message": "re PR lto/54898 (ICE in uniquify_nodes, at lto/lto.c:1898)\n\n2012-10-12  Richard Biener  <rguenther@suse.de>\n\n\tPR lto/54898\n\t* lto.c (gimple_types_compatible_p_1): Also compare\n\tTYPE_MAIN_VARIANT.\n\t(iterative_hash_gimple_type): Also hash TYPE_MAIN_VARIANT.\n\nFrom-SVN: r192397", "tree": {"sha": "cf9b66a87e39b21415229b72d1cec0c02098e5f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf9b66a87e39b21415229b72d1cec0c02098e5f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aec06f6fa8948de6eb8e23028b5ebf4e5fd3e36a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aec06f6fa8948de6eb8e23028b5ebf4e5fd3e36a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aec06f6fa8948de6eb8e23028b5ebf4e5fd3e36a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aec06f6fa8948de6eb8e23028b5ebf4e5fd3e36a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "87218838b83c5af78da5baad882b9d42a7b55445", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87218838b83c5af78da5baad882b9d42a7b55445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87218838b83c5af78da5baad882b9d42a7b55445"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "49b8af0235df0193e5cc76b0454fbd0f23d91694", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aec06f6fa8948de6eb8e23028b5ebf4e5fd3e36a/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aec06f6fa8948de6eb8e23028b5ebf4e5fd3e36a/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=aec06f6fa8948de6eb8e23028b5ebf4e5fd3e36a", "patch": "@@ -1,3 +1,10 @@\n+2012-10-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/54898\n+\t* lto.c (gimple_types_compatible_p_1): Also compare\n+\tTYPE_MAIN_VARIANT.\n+\t(iterative_hash_gimple_type): Also hash TYPE_MAIN_VARIANT.\n+\n 2012-10-09  Tobias Burnus  <burnus@net-b.de>\n \n \t* lto-lang.c (lto_register_builtin_type): Avoid useless"}, {"sha": "7f64daee2192c9f0d47d145ea13409e6f6d6ef30", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aec06f6fa8948de6eb8e23028b5ebf4e5fd3e36a/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aec06f6fa8948de6eb8e23028b5ebf4e5fd3e36a/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=aec06f6fa8948de6eb8e23028b5ebf4e5fd3e36a", "patch": "@@ -581,6 +581,15 @@ gimple_types_compatible_p_1 (tree t1, tree t2, type_pair_t p,\n   if (!compare_type_names_p (t1, t2))\n     goto different_types;\n \n+  /* The main variant of both types should compare equal.  */\n+  if (TYPE_MAIN_VARIANT (t1) != t1\n+      || TYPE_MAIN_VARIANT (t2) != t2)\n+    {\n+      if (!gtc_visit (TYPE_MAIN_VARIANT (t1), TYPE_MAIN_VARIANT (t2),\n+\t\t      state, sccstack, sccstate, sccstate_obstack))\n+\tgoto different_types;\n+    }\n+\n   /* We may not merge typedef types to the same type in different\n      contexts.  */\n   if (TYPE_NAME (t1)\n@@ -1101,6 +1110,12 @@ iterative_hash_gimple_type (tree type, hashval_t val,\n       && TYPE_P (DECL_CONTEXT (TYPE_NAME (type))))\n     v = visit (DECL_CONTEXT (TYPE_NAME (type)), state, v,\n \t       sccstack, sccstate, sccstate_obstack);\n+\n+  /* Factor in the variant structure.  */\n+  if (TYPE_MAIN_VARIANT (type) != type)\n+    v = visit (TYPE_MAIN_VARIANT (type), state, v,\n+\t       sccstack, sccstate, sccstate_obstack);\n+\n   v = iterative_hash_hashval_t (TREE_CODE (type), v);\n   v = iterative_hash_hashval_t (TYPE_QUALS (type), v);\n   v = iterative_hash_hashval_t (TREE_ADDRESSABLE (type), v);"}]}