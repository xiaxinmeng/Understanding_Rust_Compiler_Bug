{"sha": "200cfbe7b94cb12757dc3089401c20aa679a2c01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAwY2ZiZTdiOTRjYjEyNzU3ZGMzMDg5NDAxYzIwYWE2NzlhMmMwMQ==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargls@comcast.net", "date": "2005-08-19T09:05:03Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2005-08-19T09:05:03Z"}, "message": "re PR fortran/23065 (MAXPATHLEN usage in fortran/{scanner,module}.c)\n\n2005-08-19  Steven G. Kargl  <kargls@comcast.net>\n\n\tPR fortran/23065\n\t* gfortran.h: Remove PATH_MAX definition.\n\t* module.c (write_module, gfc_dump_module): Use alloca to allocate\n\tbuffers.\n\t* scanner.s (gfc_release_include_path, form_from_filename): Ditto.\n\nFrom-SVN: r103271", "tree": {"sha": "76fe83ed6ce18e79b36af6aade13bf9037e75278", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76fe83ed6ce18e79b36af6aade13bf9037e75278"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/200cfbe7b94cb12757dc3089401c20aa679a2c01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/200cfbe7b94cb12757dc3089401c20aa679a2c01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/200cfbe7b94cb12757dc3089401c20aa679a2c01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/200cfbe7b94cb12757dc3089401c20aa679a2c01/comments", "author": null, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4221d00ae06c662c15c8bf0d7ae64c94bf550604", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4221d00ae06c662c15c8bf0d7ae64c94bf550604", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4221d00ae06c662c15c8bf0d7ae64c94bf550604"}], "stats": {"total": 54, "additions": 30, "deletions": 24}, "files": [{"sha": "84dc94a4c005f33b7a306ae029cc0f66b4ce95de", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200cfbe7b94cb12757dc3089401c20aa679a2c01/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200cfbe7b94cb12757dc3089401c20aa679a2c01/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=200cfbe7b94cb12757dc3089401c20aa679a2c01", "patch": "@@ -1,11 +1,19 @@\n+2005-08-19  Steven G. Kargl  <kargls@comcast.net>\n+\n+\tPR fortran/23065\n+\t* gfortran.h: Remove PATH_MAX definition.\n+\t* module.c (write_module, gfc_dump_module): Use alloca to allocate\n+\tbuffers.\n+\t* scanner.s (gfc_release_include_path, form_from_filename): Ditto.\n+\n 2004-08-16  Huang Chun  <chunhuang73@hotmail.com>\n \n \t* trans-expr.c (gfc_conv_power_op): Evaluate the expression before\n \texpand.\n \n 2005-08-14  Asher Langton  <langton2@llnl.gov>\n \n-\t* parse.c (match): Enclosed macro in do...while(0) and braces.\n+\t* parse.c (match): Enclose macro in do...while(0) and braces.\n \n 2005-08-14  Paul Thomas  <pault@gcc.gnu.org>\n "}, {"sha": "8c33274fd630731f4c4a72749f75380df9a1b7f1", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200cfbe7b94cb12757dc3089401c20aa679a2c01/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200cfbe7b94cb12757dc3089401c20aa679a2c01/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=200cfbe7b94cb12757dc3089401c20aa679a2c01", "patch": "@@ -517,13 +517,6 @@ typedef struct\n #endif\n \n \n-#include <limits.h>\n-#ifndef PATH_MAX\n-# include <sys/param.h>\n-# define PATH_MAX MAXPATHLEN\n-#endif\n-\n-\n extern int gfc_suppress_error;\n \n "}, {"sha": "db510fdbc3651df5ae6086428d3f542e8f919759", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200cfbe7b94cb12757dc3089401c20aa679a2c01/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200cfbe7b94cb12757dc3089401c20aa679a2c01/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=200cfbe7b94cb12757dc3089401c20aa679a2c01", "patch": "@@ -3479,14 +3479,22 @@ write_module (void)\n void\n gfc_dump_module (const char *name, int dump_flag)\n {\n-  char filename[PATH_MAX], *p;\n+  int n;\n+  char *filename, *p;\n   time_t now;\n \n-  filename[0] = '\\0';\n+  n = strlen (name) + strlen (MODULE_EXTENSION) + 1;\n   if (gfc_option.module_dir != NULL)\n-    strcpy (filename, gfc_option.module_dir);\n-\n-  strcat (filename, name);\n+    {\n+      filename = (char *) alloca (n + strlen (gfc_option.module_dir));\n+      strcpy (filename, gfc_option.module_dir);\n+      strcat (filename, name);\n+    }\n+  else\n+    {\n+      filename = (char *) alloca (n);\n+      strcpy (filename, name);\n+    }\n   strcat (filename, MODULE_EXTENSION);\n \n   if (!dump_flag)\n@@ -3532,10 +3540,12 @@ gfc_dump_module (const char *name, int dump_flag)\n void\n gfc_use_module (void)\n {\n-  char filename[GFC_MAX_SYMBOL_LEN + 5];\n+  char *filename;\n   gfc_state_data *p;\n   int c, line;\n \n+  filename = (char *) alloca(strlen(module_name) + strlen(MODULE_EXTENSION)\n+\t\t\t     + 1);\n   strcpy (filename, module_name);\n   strcat (filename, MODULE_EXTENSION);\n "}, {"sha": "68af79d977f59ee895b41a86a04c477b34886bfc", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200cfbe7b94cb12757dc3089401c20aa679a2c01/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200cfbe7b94cb12757dc3089401c20aa679a2c01/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=200cfbe7b94cb12757dc3089401c20aa679a2c01", "patch": "@@ -164,7 +164,7 @@ gfc_release_include_path (void)\n FILE *\n gfc_open_included_file (const char *name)\n {\n-  char fullname[PATH_MAX];\n+  char *fullname;\n   gfc_directorylist *p;\n   FILE *f;\n \n@@ -174,9 +174,7 @@ gfc_open_included_file (const char *name)\n \n   for (p = include_dirs; p; p = p->next)\n     {\n-      if (strlen (p->path) + strlen (name) + 1 > PATH_MAX)\n-\tcontinue;\n-\n+      fullname = (char *) alloca(strlen (p->path) + strlen (name) + 1);\n       strcpy (fullname, p->path);\n       strcat (fullname, name);\n \n@@ -1133,15 +1131,12 @@ form_from_filename (const char *filename)\n   const char *fileext;\n   int i;\n \n-  /* Find end of file name.  */\n+  /* Find end of file name.  Note, filename is either a NULL pointer or\n+     a NUL terminated string.  */\n   i = 0;\n-  while ((i < PATH_MAX) && (filename[i] != '\\0'))\n+  while (filename[i] != '\\0')\n     i++;\n \n-  /* Improperly terminated or too-long filename.  */\n-  if (i == PATH_MAX)\n-    return FORM_UNKNOWN;\n-\n   /* Find last period.  */\n   while (i >= 0 && (filename[i] != '.'))\n     i--;"}]}