{"sha": "8e7e536500c31b0d3b8890d5aee90c9f644138da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU3ZTUzNjUwMGMzMWIwZDNiODg5MGQ1YWVlOTBjOWY2NDQxMzhkYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-05-06T09:44:05Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-05-06T09:44:05Z"}, "message": "(simplify_binary_operation, simplify_relational_operation): Check for\nMODE_CC modes, not just CCmode.\n\nFrom-SVN: r4352", "tree": {"sha": "413a84315319519d36e7527a98500694697f450e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/413a84315319519d36e7527a98500694697f450e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e7e536500c31b0d3b8890d5aee90c9f644138da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7e536500c31b0d3b8890d5aee90c9f644138da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e7e536500c31b0d3b8890d5aee90c9f644138da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7e536500c31b0d3b8890d5aee90c9f644138da/comments", "author": null, "committer": null, "parents": [{"sha": "d9d27c6e362dcc66164fdfedfaf4b9808d6ecd89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9d27c6e362dcc66164fdfedfaf4b9808d6ecd89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9d27c6e362dcc66164fdfedfaf4b9808d6ecd89"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "3d2702fbbe3c3ccc093d3acaead7038a3b5d9261", "filename": "gcc/cse.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7e536500c31b0d3b8890d5aee90c9f644138da/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7e536500c31b0d3b8890d5aee90c9f644138da/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=8e7e536500c31b0d3b8890d5aee90c9f644138da", "patch": "@@ -1,5 +1,5 @@\n /* Common subexpression elimination for GNU compiler.\n-   Copyright (C) 1987, 1988, 1989, 1992 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1989, 1992. 1993 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -3599,7 +3599,7 @@ simplify_binary_operation (code, mode, op0, op1)\n \t  if (((GET_CODE (op0) == NOT && rtx_equal_p (XEXP (op0, 0), op1))\n \t       || (GET_CODE (op1) == NOT && rtx_equal_p (XEXP (op1, 0), op0)))\n \t      && ! side_effects_p (op0)\n-\t      && mode != CCmode)\n+\t      && GET_MODE_CLASS (mode) != MODE_CC)\n \t    return constm1_rtx;\n \t  break;\n \n@@ -3610,7 +3610,7 @@ simplify_binary_operation (code, mode, op0, op1)\n \t      && (INTVAL (op1) & GET_MODE_MASK (mode)) == GET_MODE_MASK (mode))\n \t    return gen_rtx (NOT, mode, op0);\n \t  if (op0 == op1 && ! side_effects_p (op0)\n-\t      && mode != CCmode)\n+\t      && GET_MODE_CLASS (mode) != MODE_CC)\n \t    return const0_rtx;\n \t  break;\n \n@@ -3621,13 +3621,13 @@ simplify_binary_operation (code, mode, op0, op1)\n \t      && (INTVAL (op1) & GET_MODE_MASK (mode)) == GET_MODE_MASK (mode))\n \t    return op0;\n \t  if (op0 == op1 && ! side_effects_p (op0)\n-\t      && mode != CCmode)\n+\t      && GET_MODE_CLASS (mode) != MODE_CC)\n \t    return op0;\n \t  /* A & (~A) -> 0 */\n \t  if (((GET_CODE (op0) == NOT && rtx_equal_p (XEXP (op0, 0), op1))\n \t       || (GET_CODE (op1) == NOT && rtx_equal_p (XEXP (op1, 0), op0)))\n \t      && ! side_effects_p (op0)\n-\t      && mode != CCmode)\n+\t      && GET_MODE_CLASS (mode) != MODE_CC)\n \t    return const0_rtx;\n \t  break;\n \n@@ -4163,9 +4163,9 @@ simplify_relational_operation (code, mode, op0, op1)\n   if (GET_CODE (op0) == COMPARE && op1 == const0_rtx)\n     op1 = XEXP (op0, 1), op0 = XEXP (op0, 0);\n \n-  /* What to do with CCmode isn't clear yet.\n+  /* What to do with MODE_CC isn't clear yet.\n      Let's make sure nothing erroneous is done.  */\n-  if (GET_MODE (op0) == CCmode)\n+  if (GET_MODE_CLASS (GET_MODE (op0)) == MODE_CC)\n     return 0;\n \n   /* Unlike the arithmetic operations, we can do the comparison whether"}]}