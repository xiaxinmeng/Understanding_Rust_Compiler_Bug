{"sha": "6e28e5162a44473169a5a55ce24b9eebdfcdd3e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUyOGU1MTYyYTQ0NDczMTY5YTVhNTVjZTI0YjllZWJkZmNkZDNlMA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-06-11T10:42:44Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-06-11T10:42:44Z"}, "message": "* match.pd: Use single_use throughout.\n\nFrom-SVN: r224368", "tree": {"sha": "7e6f322565df076e73cdf41ad2004edfc332198e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e6f322565df076e73cdf41ad2004edfc332198e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e28e5162a44473169a5a55ce24b9eebdfcdd3e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e28e5162a44473169a5a55ce24b9eebdfcdd3e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e28e5162a44473169a5a55ce24b9eebdfcdd3e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e28e5162a44473169a5a55ce24b9eebdfcdd3e0/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "06b8f7acf3786fafb54e402ebdf794e7ee3caa3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06b8f7acf3786fafb54e402ebdf794e7ee3caa3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06b8f7acf3786fafb54e402ebdf794e7ee3caa3e"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "cfa86f6ac08b8aa1393b6e6653d4ae3bc01a92e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e28e5162a44473169a5a55ce24b9eebdfcdd3e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e28e5162a44473169a5a55ce24b9eebdfcdd3e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e28e5162a44473169a5a55ce24b9eebdfcdd3e0", "patch": "@@ -1,3 +1,7 @@\n+2015-06-11  Marek Polacek  <polacek@redhat.com>\n+\n+\t* match.pd: Use single_use throughout.\n+\n 2015-06-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm.c (arm_option_params_internal): When optimising"}, {"sha": "33fa717c8447a43b9fa2f1c89b356c70273724c0", "filename": "gcc/match.pd", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e28e5162a44473169a5a55ce24b9eebdfcdd3e0/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e28e5162a44473169a5a55ce24b9eebdfcdd3e0/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=6e28e5162a44473169a5a55ce24b9eebdfcdd3e0", "patch": "@@ -301,15 +301,15 @@ along with GCC; see the file COPYING3.  If not see\n /* x + (x & 1) -> (x + 1) & ~1 */\n (simplify\n  (plus:c @0 (bit_and@2 @0 integer_onep@1))\n- (if (TREE_CODE (@2) != SSA_NAME || has_single_use (@2))\n+ (if (single_use (@2))\n   (bit_and (plus @0 @1) (bit_not @1))))\n \n /* x & ~(x & y) -> x & ~y */\n /* x | ~(x | y) -> x | ~y  */\n (for bitop (bit_and bit_ior)\n  (simplify\n   (bitop:c @0 (bit_not (bitop:c@2 @0 @1)))\n-   (if (TREE_CODE (@2) != SSA_NAME || has_single_use (@2))\n+   (if (single_use (@2))\n     (bitop @0 (bit_not @1)))))\n \n /* (x | y) & ~x -> y & ~x */\n@@ -449,15 +449,14 @@ along with GCC; see the file COPYING3.  If not see\n /* (x & ~m) | (y & m) -> ((x ^ y) & m) ^ x */\n (simplify\n   (bit_ior:c (bit_and:c@3 @0 (bit_not @2)) (bit_and:c@4 @1 @2))\n-  (if ((TREE_CODE (@3) != SSA_NAME || has_single_use (@3))\n-\t&& (TREE_CODE (@4) != SSA_NAME || has_single_use (@4)))\n+  (if (single_use (@3) && single_use (@4))\n    (bit_xor (bit_and (bit_xor @0 @1) @2) @0)))\n \n \n /* Associate (p +p off1) +p off2 as (p +p (off1 + off2)).  */\n (simplify\n   (pointer_plus (pointer_plus@2 @0 @1) @3)\n-  (if (TREE_CODE (@2) != SSA_NAME || has_single_use (@2))\n+  (if (single_use (@2))\n    (pointer_plus @0 (plus @1 @3))))\n \n /* Pattern match"}]}