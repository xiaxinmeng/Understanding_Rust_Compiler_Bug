{"sha": "fd793c7a43adb98e4559e60f07329ad0225eedcb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ3OTNjN2E0M2FkYjk4ZTQ1NTllNjBmMDczMjlhZDAyMjVlZWRjYg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-01-31T07:50:11Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-01-31T07:50:11Z"}, "message": "avoidpaste1.c: Update.\n\n        * gcc.dg/cpp/avoidpaste1.c: Update.\n        * gcc.dg/cpp/paste4.c: Update.\n\nFrom-SVN: r39367", "tree": {"sha": "cb34e91ccec60a79845c9ce2d4cc47c3b7c28065", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb34e91ccec60a79845c9ce2d4cc47c3b7c28065"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd793c7a43adb98e4559e60f07329ad0225eedcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd793c7a43adb98e4559e60f07329ad0225eedcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd793c7a43adb98e4559e60f07329ad0225eedcb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd793c7a43adb98e4559e60f07329ad0225eedcb/comments", "author": null, "committer": null, "parents": [{"sha": "ec1a23e60be615ad0d491952df1dad0a96b2b1e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec1a23e60be615ad0d491952df1dad0a96b2b1e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec1a23e60be615ad0d491952df1dad0a96b2b1e5"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "c865b936d4c7703e3f06c5c62b3a53deb6a93711", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd793c7a43adb98e4559e60f07329ad0225eedcb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd793c7a43adb98e4559e60f07329ad0225eedcb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fd793c7a43adb98e4559e60f07329ad0225eedcb", "patch": "@@ -1,3 +1,8 @@\n+2001-01-31  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+        * gcc.dg/cpp/avoidpaste1.c: Update.\n+        * gcc.dg/cpp/paste4.c: Update.\n+\n 2001-01-30  Jeffrey Oldham  <oldham@codesourcery.com>\n \n \t* gcc.dg/c99-float-1.c: XFAIL FLT_EVAL_METHOD and DECIMAL_DIG"}, {"sha": "ce885b15458ab3dd9b4054a7f6854490eda4ce38", "filename": "gcc/testsuite/gcc.dg/cpp/avoidpaste1.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd793c7a43adb98e4559e60f07329ad0225eedcb/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Favoidpaste1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd793c7a43adb98e4559e60f07329ad0225eedcb/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Favoidpaste1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Favoidpaste1.c?ref=fd793c7a43adb98e4559e60f07329ad0225eedcb", "patch": "@@ -10,22 +10,23 @@\n \n #define f(x) x\n #define g\n+#define tricky 1.0e ## -1\n \n /* This should preprocess as\n \n-:: : : : : :^:\n+:: : : : : :^: 1.0e- 1\n : : : .. . 0\n \n It relies on the fact that even when preprocessing C we bother to separate\n the colons of C++'s :: operator.  If we confine this behaviour to C++\n in future, this test needs to change.  */\n \n-:: :g: :f(): :f(^):\n+:: :g: :f(): :f(^): tricky\n :f(:): .. .__INCLUDE_LEVEL__\t/* Check builtins, too.  */\n \n /*\n    { dg-final { if ![file exists avoidpaste1.i] { return }                } }\n-   { dg-final { if { [grep avoidpaste1.i \":: : : : : :\\\\^:\"] != \"\" } \\{   } }\n+   { dg-final { if { [grep avoidpaste1.i \":: : : : : :\\\\^: 1.0e- 1\"] != \"\" } \\{   } }\n    { dg-final { if { [grep avoidpaste1.i \": : : \\\\\\.\\\\\\. \\\\\\. 0\"] != \"\" } \\{  } }\n    { dg-final { return \\} \\}                                              } }\n    { dg-final { fail \"avoidpaste1.c: paste avoidance\"                     } }"}, {"sha": "6f9d9d1253a07db718c91c9051fa204721ecd295", "filename": "gcc/testsuite/gcc.dg/cpp/paste4.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd793c7a43adb98e4559e60f07329ad0225eedcb/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpaste4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd793c7a43adb98e4559e60f07329ad0225eedcb/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpaste4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpaste4.c?ref=fd793c7a43adb98e4559e60f07329ad0225eedcb", "patch": "@@ -1,9 +1,11 @@\n /* Copyright (C) 2000 Free Software Foundation, Inc.  */\n /* { dg-do compile } */\n+/* { dg-options -save-temps } */\n \n /* Since 1.0e and + form the pasted token, 1 is a separate token and\n    so should be output with a preceding space.  The old preprocessor\n-   gets this wrong.  */\n+   gets this wrong.  We use -save-temps to avoid direct use of the\n+   integrated preprocessor.  */\n \n #define glue(x, y) x ## y\n "}]}