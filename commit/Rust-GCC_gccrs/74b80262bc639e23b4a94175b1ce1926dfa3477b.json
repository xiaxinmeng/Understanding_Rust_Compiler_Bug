{"sha": "74b80262bc639e23b4a94175b1ce1926dfa3477b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRiODAyNjJiYzYzOWUyM2I0YTk0MTc1YjFjZTE5MjZkZmEzNDc3Yg==", "commit": {"author": {"name": "Shujing Zhao", "email": "pearly.zhao@oracle.com", "date": "2010-05-14T03:19:32Z"}, "committer": {"name": "Shujing Zhao", "email": "pzhao@gcc.gnu.org", "date": "2010-05-14T03:19:32Z"}, "message": "re PR c++/30566 (-Wshadow warns about clashes between nested function parameters in C++)\n\ngcc/cp/\n2010-05-14  Shujing Zhao  <pearly.zhao@oracle.com>\n\n        PR c++/30566\n        * name-lookup.c (pushdecl_maybe_friend): Avoid the warnings about\n        shadowing the outer parameter or variables by the declaration of\n        nested function in nested structure or class. Warn the shadowing by\n        the declaration of nested lambda expression.\n\ngcc/testsuite/\n2010-05-14  Shujing Zhao  <pearly.zhao@oracle.com>\n\n        PR c++/30566\n        * testsuite/g++.dg/warn/Wshadow-4.C: Adjust.\n        * testsuite/g++.dg/warn/Wshadow-5.C: New test.\n        * testsuite/g++.dg/warn/Wshadow-6.C: New test.\n\nFrom-SVN: r159383", "tree": {"sha": "f4ce482422a000b01c2eb294d32765fb926b0447", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4ce482422a000b01c2eb294d32765fb926b0447"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74b80262bc639e23b4a94175b1ce1926dfa3477b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74b80262bc639e23b4a94175b1ce1926dfa3477b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74b80262bc639e23b4a94175b1ce1926dfa3477b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74b80262bc639e23b4a94175b1ce1926dfa3477b/comments", "author": null, "committer": null, "parents": [{"sha": "e15a8cbe1a7d51072a1b998ccfa6f1977b8688fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e15a8cbe1a7d51072a1b998ccfa6f1977b8688fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e15a8cbe1a7d51072a1b998ccfa6f1977b8688fc"}], "stats": {"total": 151, "additions": 129, "deletions": 22}, "files": [{"sha": "d21c7137eede07efb4f7c9cfd19bddbfde699070", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74b80262bc639e23b4a94175b1ce1926dfa3477b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74b80262bc639e23b4a94175b1ce1926dfa3477b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=74b80262bc639e23b4a94175b1ce1926dfa3477b", "patch": "@@ -1,3 +1,11 @@\n+2010-05-14  Shujing Zhao  <pearly.zhao@oracle.com>\n+\n+\tPR c++/30566\n+\t* name-lookup.c (pushdecl_maybe_friend): Avoid the warnings about\n+\tshadowing the outer parameter or variables by the declaration of\n+\tnested function in nested structure or class. Warn the shadowing by\n+\tthe declaration of nested lambda expression.\n+\n 2010-05-13  Jason Merrill  <jason@redhat.com>\n \n \t* typeck.c (cp_build_array_ref): Factor out from..."}, {"sha": "405bf164c92b9c03a74e94adc3bd62683761a960", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 38, "deletions": 18, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74b80262bc639e23b4a94175b1ce1926dfa3477b/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74b80262bc639e23b4a94175b1ce1926dfa3477b/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=74b80262bc639e23b4a94175b1ce1926dfa3477b", "patch": "@@ -1016,15 +1016,18 @@ pushdecl_maybe_friend (tree x, bool is_friend)\n \t  else if (oldlocal != NULL_TREE && !DECL_EXTERNAL (x)\n \t\t   /* Inline decls shadow nothing.  */\n \t\t   && !DECL_FROM_INLINE (x)\n-\t\t   && TREE_CODE (oldlocal) == PARM_DECL\n+\t\t   && (TREE_CODE (oldlocal) == PARM_DECL\n+\t\t       || TREE_CODE (oldlocal) == VAR_DECL)\n \t\t   /* Don't check the `this' parameter.  */\n-\t\t   && !DECL_ARTIFICIAL (oldlocal))\n+\t\t   && !DECL_ARTIFICIAL (oldlocal)\n+\t\t   && !DECL_ARTIFICIAL (x))\n \t    {\n-\t      bool err = false;\n+\t      bool nowarn = false;\n \n \t      /* Don't complain if it's from an enclosing function.  */\n \t      if (DECL_CONTEXT (oldlocal) == current_function_decl\n-\t\t  && TREE_CODE (x) != PARM_DECL)\n+\t\t  && TREE_CODE (x) != PARM_DECL\n+\t\t  && TREE_CODE (oldlocal) == PARM_DECL)\n \t\t{\n \t\t  /* Go to where the parms should be and see if we find\n \t\t     them there.  */\n@@ -1038,16 +1041,41 @@ pushdecl_maybe_friend (tree x, bool is_friend)\n \t\t  if (b->kind == sk_function_parms)\n \t\t    {\n \t\t      error (\"declaration of %q#D shadows a parameter\", x);\n-\t\t      err = true;\n+\t\t      nowarn = true;\n \t\t    }\n \t\t}\n \n-\t      if (warn_shadow && !err)\n+\t      /* The local structure or class can't use parameters of\n+\t\t the containing function anyway.  */\n+\t      if (DECL_CONTEXT (oldlocal) != current_function_decl)\n \t\t{\n-\t\t  warning_at (input_location, OPT_Wshadow,\n-\t\t\t      \"declaration of %q#D shadows a parameter\", x);\n-\t\t  warning_at (DECL_SOURCE_LOCATION (oldlocal), OPT_Wshadow,\n-\t\t\t      \"shadowed declaration is here\");\n+\t\t  cxx_scope *scope = current_binding_level;\n+\t\t  tree context = DECL_CONTEXT (oldlocal);\n+\t\t  for (; scope; scope = scope->level_chain)\n+\t\t   {\n+\t\t     if (scope->kind == sk_function_parms\n+\t\t\t && scope->this_entity == context)\n+\t\t      break;\n+\t\t     if (scope->kind == sk_class\n+\t\t\t && !LAMBDA_TYPE_P (scope->this_entity))\n+\t\t       {\n+\t\t\t nowarn = true;\n+\t\t\t break;\n+\t\t       }\n+\t\t   }\n+\t\t}\n+\n+\t      if (warn_shadow && !nowarn)\n+\t\t{\n+\t\t  if (TREE_CODE (oldlocal) == PARM_DECL)\n+\t\t    warning_at (input_location, OPT_Wshadow,\n+\t\t\t\t\"declaration of %q#D shadows a parameter\", x);\n+\t\t  else\n+\t\t    warning_at (input_location, OPT_Wshadow,\n+\t\t\t\t\"declaration of %qD shadows a previous local\",\n+\t\t\t\tx);\n+\t\t   warning_at (DECL_SOURCE_LOCATION (oldlocal), OPT_Wshadow,\n+\t\t\t       \"shadowed declaration is here\");\n \t\t}\n \t    }\n \n@@ -1074,14 +1102,6 @@ pushdecl_maybe_friend (tree x, bool is_friend)\n \t\t  warning (OPT_Wshadow, \"declaration of %qD shadows a member of 'this'\",\n \t\t\t   x);\n \t\t}\n-\t      else if (oldlocal != NULL_TREE\n-\t\t       && TREE_CODE (oldlocal) == VAR_DECL)\n-\t\t{\n-\t\t  warning_at (input_location, OPT_Wshadow,\n-\t\t\t      \"declaration of %qD shadows a previous local\", x);\n-\t\t  warning_at (DECL_SOURCE_LOCATION (oldlocal), OPT_Wshadow,\n-\t\t\t      \"shadowed declaration is here\");\n-\t\t}\n \t      else if (oldglobal != NULL_TREE\n \t\t       && TREE_CODE (oldglobal) == VAR_DECL)\n \t\t/* XXX shadow warnings in outer-more namespaces */"}, {"sha": "6320390802fabe9f6c598263899f36cfdd3251e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74b80262bc639e23b4a94175b1ce1926dfa3477b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74b80262bc639e23b4a94175b1ce1926dfa3477b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=74b80262bc639e23b4a94175b1ce1926dfa3477b", "patch": "@@ -1,3 +1,10 @@\n+2010-05-14  Shujing Zhao  <pearly.zhao@oracle.com>\n+\n+\tPR c++/30566\n+\t* testsuite/g++.dg/warn/Wshadow-4.C: Adjust.\n+\t* testsuite/g++.dg/warn/Wshadow-5.C: New test.\n+\t* testsuite/g++.dg/warn/Wshadow-6.C: New test\n+\n 2010-05-13  Daniel Franke  <franke.daniel@gmail.com>\n \n         PR fortran/35779"}, {"sha": "c033028d727fa49bf2567cf9b9bd3d5fe2a3d2ab", "filename": "gcc/testsuite/g++.dg/warn/Wshadow-4.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74b80262bc639e23b4a94175b1ce1926dfa3477b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74b80262bc639e23b4a94175b1ce1926dfa3477b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-4.C?ref=74b80262bc639e23b4a94175b1ce1926dfa3477b", "patch": "@@ -8,25 +8,25 @@ public:\n     int GetMainURL() const;\n };\n \n-int foo(int infoo)\t\t// { dg-warning \"shadowed declaration\" }\n+int foo(int infoo)\t\t// { dg-bogus \"shadowed declaration\" }\n {\n   int outfoo( INetURLObject( infoo ).GetMainURL()); // { dg-bogus \"shadows\" }\n   extern void f(int infoo);\n   struct A\n   {\n-    void f(int infoo) { }\t// { dg-warning \"shadows a parameter\" }\n+    void f(int infoo) { }\t// { dg-bogus \"shadows a parameter\" }\n   };\n   return outfoo;\n }\n \n // PR c++/39763\n int foo2(void)\n {\n-    int infoo = 0;\t\t// { dg-warning \"shadowed declaration\" }\n+    int infoo = 0;\t\t// { dg-bogus \"shadowed declaration\" }\n     int outfoo( INetURLObject( infoo ).GetMainURL()); // { dg-bogus \"shadows\" }\n     struct A\n     {\n-      void f(int infoo) { }\t// { dg-warning \"shadows a previous local\" }\n+      void f(int infoo) { }\t// { dg-bogus \"shadows a previous local\" }\n     };\n     return outfoo;\n }"}, {"sha": "66232913f0e64a7f810bc84ad41ff642c259ecfa", "filename": "gcc/testsuite/g++.dg/warn/Wshadow-5.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74b80262bc639e23b4a94175b1ce1926dfa3477b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74b80262bc639e23b4a94175b1ce1926dfa3477b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-5.C?ref=74b80262bc639e23b4a94175b1ce1926dfa3477b", "patch": "@@ -0,0 +1,33 @@\n+// Wshadows was giving warnings for nested function parameters in nested class\n+// or structure that we didn't want.\n+// { dg-do compile }\n+// { dg-options \"-Wshadow\" }\n+\n+// PR c++/41825\n+int f (int n)\n+{\n+    int bar (int n) { return n++; } // { dg-error \"a function-definition is not allowed here\" }\n+    return bar (n); // { dg-error \"was not declared in this scope\" }\n+}\n+\n+int g (int i)\n+{\n+    struct {\n+        int bar (int i) { return i++; } // { dg-bogus \"shadows\" }\n+    } s;\n+\n+    return s.bar (i);\n+}\n+\n+// PR c++/30566\n+void h( int x )\n+{\n+  class InnerClass\n+    {\n+      public:\n+              static int g( int x ) // { dg-bogus \"shadows\" }\n+                {\n+                  // empty\n+                }\n+    };\n+}"}, {"sha": "9b13e3ae79e211effb63c099eaec0c9e15c67afb", "filename": "gcc/testsuite/g++.dg/warn/Wshadow-6.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74b80262bc639e23b4a94175b1ce1926dfa3477b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74b80262bc639e23b4a94175b1ce1926dfa3477b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-6.C?ref=74b80262bc639e23b4a94175b1ce1926dfa3477b", "patch": "@@ -0,0 +1,39 @@\n+// Test the declaration of nested lambda function shadows\n+// a parameter or previous local.\n+// { dg-do compile }\n+// { dg-options \"-std=c++0x -Wshadow\" }\n+\n+struct S {};\n+int f1(int x)   // { dg-warning \"shadowed declaration\" }\n+{\n+ int t = 0;\n+ int m = 0;     // { dg-warning \"shadowed declaration\" }\n+ [&t] (int x) { // { dg-warning \"shadows a parameter\" }\n+   int m = 1;   // { dg-warning \"shadows a previous local\" }\n+   t = t + x + m;\n+ };\n+ return t;\n+}\n+\n+void f2(struct S i, int j) {\n+  struct A {\n+    struct S x;\n+    void g(struct S i) { // { dg-warning \"shadowed declaration\" }\n+\t  struct S x;    // { dg-warning \"shadows a member of\" }\n+\t  struct S y;    // { dg-warning \"shadowed declaration\" }\n+\t  int t;\n+\t   [&t](struct S i){   // { dg-warning \"shadows a parameter\" }\n+\t\t int j = 1;    // { dg-bogus \"shadows\" }\n+\t\t struct S y;   // { dg-warning \"shadows a previous local\" }\n+ \t\t t = j;\n+\t   };\n+    }\n+  };\n+}\n+\n+void f3(int i) {\n+ [=]{\n+   int j = i;\n+   int i; // { dg-warning \"shadows a member of\" }\n+ };\n+}"}]}