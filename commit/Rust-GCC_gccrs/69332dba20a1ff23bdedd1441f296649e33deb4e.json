{"sha": "69332dba20a1ff23bdedd1441f296649e33deb4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkzMzJkYmEyMGExZmYyM2JkZWRkMTQ0MWYyOTY2NDllMzNkZWI0ZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-08-02T13:32:02Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-08-02T13:32:02Z"}, "message": "Make TR1 special function tests support C++98\n\n\t* testsuite/tr1/5_numerical_facilities/special_functions/\n\t08_cyl_bessel_i/check_value.cc: Use __attribute__((unused)) instead\n\tof [[gnu::unused]].\n\t* testsuite/tr1/5_numerical_facilities/special_functions/\n\t09_cyl_bessel_j/check_value.cc: Likewise.\n\t* testsuite/tr1/5_numerical_facilities/special_functions/\n\t10_cyl_bessel_k/check_value.cc: Likewise.\n\t* testsuite/tr1/5_numerical_facilities/special_functions/\n\t11_cyl_neumann/check_value.cc: Likewise.\n\t* testsuite/tr1/5_numerical_facilities/special_functions/\n\t21_sph_bessel/check_value.cc: Likewise.\n\t* testsuite/tr1/5_numerical_facilities/special_functions/\n\t23_sph_neumann/check_value.cc: Likewise.\n\nFrom-SVN: r238985", "tree": {"sha": "88410cfa2904c46d8f3f076a32fea2fbf2131d9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88410cfa2904c46d8f3f076a32fea2fbf2131d9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69332dba20a1ff23bdedd1441f296649e33deb4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69332dba20a1ff23bdedd1441f296649e33deb4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69332dba20a1ff23bdedd1441f296649e33deb4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69332dba20a1ff23bdedd1441f296649e33deb4e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e15396276ef3d52c45ca76cfcf23129342ee2883", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e15396276ef3d52c45ca76cfcf23129342ee2883", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e15396276ef3d52c45ca76cfcf23129342ee2883"}], "stats": {"total": 244, "additions": 130, "deletions": 114}, "files": [{"sha": "e6d43257e94891f4ad0602849da0baa99494e80c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69332dba20a1ff23bdedd1441f296649e33deb4e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69332dba20a1ff23bdedd1441f296649e33deb4e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=69332dba20a1ff23bdedd1441f296649e33deb4e", "patch": "@@ -1,3 +1,19 @@\n+2016-08-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/tr1/5_numerical_facilities/special_functions/\n+\t08_cyl_bessel_i/check_value.cc: Use __attribute__((unused)) instead\n+\tof [[gnu::unused]].\n+\t* testsuite/tr1/5_numerical_facilities/special_functions/\n+\t09_cyl_bessel_j/check_value.cc: Likewise.\n+\t* testsuite/tr1/5_numerical_facilities/special_functions/\n+\t10_cyl_bessel_k/check_value.cc: Likewise.\n+\t* testsuite/tr1/5_numerical_facilities/special_functions/\n+\t11_cyl_neumann/check_value.cc: Likewise.\n+\t* testsuite/tr1/5_numerical_facilities/special_functions/\n+\t21_sph_bessel/check_value.cc: Likewise.\n+\t* testsuite/tr1/5_numerical_facilities/special_functions/\n+\t23_sph_neumann/check_value.cc: Likewise.\n+\n 2016-08-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/abi/post/solaris2.10/baseline_symbols.txt: Regenerate."}, {"sha": "78028bbdf07fc33bd3e0ad5122701f137f622629", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/special_functions/08_cyl_bessel_i/check_value.cc", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69332dba20a1ff23bdedd1441f296649e33deb4e/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F08_cyl_bessel_i%2Fcheck_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69332dba20a1ff23bdedd1441f296649e33deb4e/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F08_cyl_bessel_i%2Fcheck_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F08_cyl_bessel_i%2Fcheck_value.cc?ref=69332dba20a1ff23bdedd1441f296649e33deb4e", "patch": "@@ -69,7 +69,7 @@ template<typename Tp>\n   void\n   test001()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -123,7 +123,7 @@ template<typename Tp>\n   void\n   test002()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -177,7 +177,7 @@ template<typename Tp>\n   void\n   test003()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -231,7 +231,7 @@ template<typename Tp>\n   void\n   test004()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -285,7 +285,7 @@ template<typename Tp>\n   void\n   test005()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -339,7 +339,7 @@ template<typename Tp>\n   void\n   test006()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -393,7 +393,7 @@ template<typename Tp>\n   void\n   test007()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -447,7 +447,7 @@ template<typename Tp>\n   void\n   test008()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -501,7 +501,7 @@ template<typename Tp>\n   void\n   test009()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -556,7 +556,7 @@ template<typename Tp>\n   void\n   test010()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -610,7 +610,7 @@ template<typename Tp>\n   void\n   test011()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -664,7 +664,7 @@ template<typename Tp>\n   void\n   test012()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -718,7 +718,7 @@ template<typename Tp>\n   void\n   test013()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -772,7 +772,7 @@ template<typename Tp>\n   void\n   test014()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -826,7 +826,7 @@ template<typename Tp>\n   void\n   test015()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -880,7 +880,7 @@ template<typename Tp>\n   void\n   test016()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -934,7 +934,7 @@ template<typename Tp>\n   void\n   test017()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -988,7 +988,7 @@ template<typename Tp>\n   void\n   test018()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -1042,7 +1042,7 @@ template<typename Tp>\n   void\n   test019()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -1096,7 +1096,7 @@ template<typename Tp>\n   void\n   test020()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);"}, {"sha": "d7cc1c63f1c1c61646fe0483784a6b04feb6890e", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/special_functions/09_cyl_bessel_j/check_value.cc", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69332dba20a1ff23bdedd1441f296649e33deb4e/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F09_cyl_bessel_j%2Fcheck_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69332dba20a1ff23bdedd1441f296649e33deb4e/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F09_cyl_bessel_j%2Fcheck_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F09_cyl_bessel_j%2Fcheck_value.cc?ref=69332dba20a1ff23bdedd1441f296649e33deb4e", "patch": "@@ -69,7 +69,7 @@ template<typename Tp>\n   void\n   test001()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -123,7 +123,7 @@ template<typename Tp>\n   void\n   test002()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -177,7 +177,7 @@ template<typename Tp>\n   void\n   test003()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -231,7 +231,7 @@ template<typename Tp>\n   void\n   test004()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -285,7 +285,7 @@ template<typename Tp>\n   void\n   test005()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -339,7 +339,7 @@ template<typename Tp>\n   void\n   test006()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -393,7 +393,7 @@ template<typename Tp>\n   void\n   test007()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -447,7 +447,7 @@ template<typename Tp>\n   void\n   test008()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -501,7 +501,7 @@ template<typename Tp>\n   void\n   test009()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -556,7 +556,7 @@ template<typename Tp>\n   void\n   test010()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -610,7 +610,7 @@ template<typename Tp>\n   void\n   test011()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -664,7 +664,7 @@ template<typename Tp>\n   void\n   test012()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -718,7 +718,7 @@ template<typename Tp>\n   void\n   test013()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -772,7 +772,7 @@ template<typename Tp>\n   void\n   test014()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -826,7 +826,7 @@ template<typename Tp>\n   void\n   test015()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -880,7 +880,7 @@ template<typename Tp>\n   void\n   test016()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -934,7 +934,7 @@ template<typename Tp>\n   void\n   test017()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -988,7 +988,7 @@ template<typename Tp>\n   void\n   test018()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -1042,7 +1042,7 @@ template<typename Tp>\n   void\n   test019()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -1096,7 +1096,7 @@ template<typename Tp>\n   void\n   test020()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);"}, {"sha": "d664d1eaf065ad6a36e9aaa9ba9fd01378089685", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/special_functions/10_cyl_bessel_k/check_value.cc", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69332dba20a1ff23bdedd1441f296649e33deb4e/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F10_cyl_bessel_k%2Fcheck_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69332dba20a1ff23bdedd1441f296649e33deb4e/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F10_cyl_bessel_k%2Fcheck_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F10_cyl_bessel_k%2Fcheck_value.cc?ref=69332dba20a1ff23bdedd1441f296649e33deb4e", "patch": "@@ -68,7 +68,7 @@ template<typename Tp>\n   void\n   test001()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -121,7 +121,7 @@ template<typename Tp>\n   void\n   test002()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -174,7 +174,7 @@ template<typename Tp>\n   void\n   test003()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -227,7 +227,7 @@ template<typename Tp>\n   void\n   test004()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -280,7 +280,7 @@ template<typename Tp>\n   void\n   test005()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -333,7 +333,7 @@ template<typename Tp>\n   void\n   test006()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -386,7 +386,7 @@ template<typename Tp>\n   void\n   test007()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -439,7 +439,7 @@ template<typename Tp>\n   void\n   test008()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -492,7 +492,7 @@ template<typename Tp>\n   void\n   test009()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -545,7 +545,7 @@ template<typename Tp>\n   void\n   test010()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -598,7 +598,7 @@ template<typename Tp>\n   void\n   test011()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -652,7 +652,7 @@ template<typename Tp>\n   void\n   test012()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -705,7 +705,7 @@ template<typename Tp>\n   void\n   test013()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -758,7 +758,7 @@ template<typename Tp>\n   void\n   test014()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -811,7 +811,7 @@ template<typename Tp>\n   void\n   test015()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -864,7 +864,7 @@ template<typename Tp>\n   void\n   test016()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -917,7 +917,7 @@ template<typename Tp>\n   void\n   test017()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -970,7 +970,7 @@ template<typename Tp>\n   void\n   test018()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -1023,7 +1023,7 @@ template<typename Tp>\n   void\n   test019()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -1076,7 +1076,7 @@ template<typename Tp>\n   void\n   test020()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -1129,7 +1129,7 @@ template<typename Tp>\n   void\n   test021()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -1182,7 +1182,7 @@ template<typename Tp>\n   void\n   test022()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);"}, {"sha": "f6262d0d399e9ee2e3a7e727de4ffc46ce0bf36b", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/special_functions/11_cyl_neumann/check_value.cc", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69332dba20a1ff23bdedd1441f296649e33deb4e/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F11_cyl_neumann%2Fcheck_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69332dba20a1ff23bdedd1441f296649e33deb4e/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F11_cyl_neumann%2Fcheck_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F11_cyl_neumann%2Fcheck_value.cc?ref=69332dba20a1ff23bdedd1441f296649e33deb4e", "patch": "@@ -68,7 +68,7 @@ template<typename Tp>\n   void\n   test001()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -121,7 +121,7 @@ template<typename Tp>\n   void\n   test002()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -174,7 +174,7 @@ template<typename Tp>\n   void\n   test003()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -227,7 +227,7 @@ template<typename Tp>\n   void\n   test004()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -273,7 +273,7 @@ template<typename Tp>\n   void\n   test005()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -326,7 +326,7 @@ template<typename Tp>\n   void\n   test006()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -372,7 +372,7 @@ template<typename Tp>\n   void\n   test007()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -425,7 +425,7 @@ template<typename Tp>\n   void\n   test008()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -478,7 +478,7 @@ template<typename Tp>\n   void\n   test009()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -531,7 +531,7 @@ template<typename Tp>\n   void\n   test010()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -584,7 +584,7 @@ template<typename Tp>\n   void\n   test011()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -638,7 +638,7 @@ template<typename Tp>\n   void\n   test012()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -691,7 +691,7 @@ template<typename Tp>\n   void\n   test013()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -744,7 +744,7 @@ template<typename Tp>\n   void\n   test014()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -797,7 +797,7 @@ template<typename Tp>\n   void\n   test015()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -850,7 +850,7 @@ template<typename Tp>\n   void\n   test016()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -903,7 +903,7 @@ template<typename Tp>\n   void\n   test017()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -956,7 +956,7 @@ template<typename Tp>\n   void\n   test018()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -1009,7 +1009,7 @@ template<typename Tp>\n   void\n   test019()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -1062,7 +1062,7 @@ template<typename Tp>\n   void\n   test020()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -1115,7 +1115,7 @@ template<typename Tp>\n   void\n   test021()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -1168,7 +1168,7 @@ template<typename Tp>\n   void\n   test022()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);"}, {"sha": "d4f32814ecf9ba488fab1ee39ad3209949456109", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/special_functions/21_sph_bessel/check_value.cc", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69332dba20a1ff23bdedd1441f296649e33deb4e/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F21_sph_bessel%2Fcheck_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69332dba20a1ff23bdedd1441f296649e33deb4e/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F21_sph_bessel%2Fcheck_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F21_sph_bessel%2Fcheck_value.cc?ref=69332dba20a1ff23bdedd1441f296649e33deb4e", "patch": "@@ -69,7 +69,7 @@ template<typename Tp>\n   void\n   test001()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -123,7 +123,7 @@ template<typename Tp>\n   void\n   test002()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -177,7 +177,7 @@ template<typename Tp>\n   void\n   test003()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -231,7 +231,7 @@ template<typename Tp>\n   void\n   test004()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -285,7 +285,7 @@ template<typename Tp>\n   void\n   test005()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -339,7 +339,7 @@ template<typename Tp>\n   void\n   test006()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -394,7 +394,7 @@ template<typename Tp>\n   void\n   test007()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -448,7 +448,7 @@ template<typename Tp>\n   void\n   test008()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -502,7 +502,7 @@ template<typename Tp>\n   void\n   test009()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -556,7 +556,7 @@ template<typename Tp>\n   void\n   test010()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -610,7 +610,7 @@ template<typename Tp>\n   void\n   test011()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -664,7 +664,7 @@ template<typename Tp>\n   void\n   test012()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -718,7 +718,7 @@ template<typename Tp>\n   void\n   test013()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -772,7 +772,7 @@ template<typename Tp>\n   void\n   test014()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);"}, {"sha": "000cdfc633467a5d2c8e3e3e51bd8a44176737c8", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/special_functions/23_sph_neumann/check_value.cc", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69332dba20a1ff23bdedd1441f296649e33deb4e/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F23_sph_neumann%2Fcheck_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69332dba20a1ff23bdedd1441f296649e33deb4e/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F23_sph_neumann%2Fcheck_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F23_sph_neumann%2Fcheck_value.cc?ref=69332dba20a1ff23bdedd1441f296649e33deb4e", "patch": "@@ -68,7 +68,7 @@ template<typename Tp>\n   void\n   test001()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -121,7 +121,7 @@ template<typename Tp>\n   void\n   test002()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -174,7 +174,7 @@ template<typename Tp>\n   void\n   test003()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -227,7 +227,7 @@ template<typename Tp>\n   void\n   test004()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -280,7 +280,7 @@ template<typename Tp>\n   void\n   test005()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -333,7 +333,7 @@ template<typename Tp>\n   void\n   test006()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -386,7 +386,7 @@ template<typename Tp>\n   void\n   test007()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -439,7 +439,7 @@ template<typename Tp>\n   void\n   test008()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -493,7 +493,7 @@ template<typename Tp>\n   void\n   test009()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -546,7 +546,7 @@ template<typename Tp>\n   void\n   test010()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -599,7 +599,7 @@ template<typename Tp>\n   void\n   test011()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -652,7 +652,7 @@ template<typename Tp>\n   void\n   test012()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -705,7 +705,7 @@ template<typename Tp>\n   void\n   test013()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -758,7 +758,7 @@ template<typename Tp>\n   void\n   test014()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -811,7 +811,7 @@ template<typename Tp>\n   void\n   test015()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);\n@@ -864,7 +864,7 @@ template<typename Tp>\n   void\n   test016()\n   {\n-    bool test [[gnu::unused]] = true;\n+    bool test __attribute__((unused)) = true;\n     const Tp eps = std::numeric_limits<Tp>::epsilon();\n     Tp max_abs_diff = -Tp(1);\n     Tp max_abs_frac = -Tp(1);"}]}