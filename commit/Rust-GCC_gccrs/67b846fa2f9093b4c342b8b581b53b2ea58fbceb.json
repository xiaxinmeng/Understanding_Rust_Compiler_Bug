{"sha": "67b846fa2f9093b4c342b8b581b53b2ea58fbceb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdiODQ2ZmEyZjkwOTNiNGMzNDJiOGI1ODFiNTNiMmVhNThmYmNlYg==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2009-01-09T15:19:08Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2009-01-09T15:19:08Z"}, "message": "pa.c (last_address): Change to unsigned.\n\n\t* pa.c (last_address): Change to unsigned.\n\t(update_total_code_bytes): Change argument to unsigned.  Don't\n\tcheck if insn addresses are set.\n\t(pa_output_function_epilogue): Set last_address to UINT_MAX if insn\n\taddresses are not set.\n\t(pa_asm_output_mi_thunk): Handle wrap when updating last_address.\n\nFrom-SVN: r143207", "tree": {"sha": "7a2062e174e17bddb5fc278e4a7c74f6f96a164a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a2062e174e17bddb5fc278e4a7c74f6f96a164a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67b846fa2f9093b4c342b8b581b53b2ea58fbceb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67b846fa2f9093b4c342b8b581b53b2ea58fbceb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67b846fa2f9093b4c342b8b581b53b2ea58fbceb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67b846fa2f9093b4c342b8b581b53b2ea58fbceb/comments", "author": null, "committer": null, "parents": [{"sha": "73f971b716256c5c37753748fa7c8ade3c49da21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f971b716256c5c37753748fa7c8ade3c49da21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73f971b716256c5c37753748fa7c8ade3c49da21"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "5404248303449094d7261955529d3e619d49b4a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67b846fa2f9093b4c342b8b581b53b2ea58fbceb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67b846fa2f9093b4c342b8b581b53b2ea58fbceb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=67b846fa2f9093b4c342b8b581b53b2ea58fbceb", "patch": "@@ -1,3 +1,12 @@\n+2009-01-09  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa.c (last_address): Change to unsigned.\n+\t(update_total_code_bytes): Change argument to unsigned.  Don't\n+\tcheck if insn addresses are set.\n+\t(pa_output_function_epilogue): Set last_address to UINT_MAX if insn\n+\taddresses are not set.\n+\t(pa_asm_output_mi_thunk): Handle wrap when updating last_address.\n+\n 2009-01-09  Nick Clifton  <nickc@redhat.com>\n \n \t* config/sh/symbian.c: Replace uses of DECL_INLINE with"}, {"sha": "44ded73f90894ab9c17e80adf6b3dcc945e4dce8", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67b846fa2f9093b4c342b8b581b53b2ea58fbceb/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67b846fa2f9093b4c342b8b581b53b2ea58fbceb/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=67b846fa2f9093b4c342b8b581b53b2ea58fbceb", "patch": "@@ -103,7 +103,7 @@ static void store_reg_modify (int, int, HOST_WIDE_INT);\n static void load_reg (int, HOST_WIDE_INT, int);\n static void set_reg_plus_d (int, int, HOST_WIDE_INT, int);\n static void pa_output_function_prologue (FILE *, HOST_WIDE_INT);\n-static void update_total_code_bytes (int);\n+static void update_total_code_bytes (unsigned int);\n static void pa_output_function_epilogue (FILE *, HOST_WIDE_INT);\n static int pa_adjust_cost (rtx, rtx, rtx, int);\n static int pa_adjust_priority (rtx, int);\n@@ -191,7 +191,7 @@ unsigned long total_code_bytes;\n /* The last address of the previous function plus the number of bytes in\n    associated thunks that have been output.  This is used to determine if\n    a thunk can use an IA-relative branch to reach its target function.  */\n-static int last_address;\n+static unsigned int last_address;\n \n /* Variables to handle plabels that we discover are necessary at assembly\n    output time.  They are output after the current function.  */\n@@ -3986,23 +3986,18 @@ load_reg (int reg, HOST_WIDE_INT disp, int base)\n /* Update the total code bytes output to the text section.  */\n \n static void\n-update_total_code_bytes (int nbytes)\n+update_total_code_bytes (unsigned int nbytes)\n {\n   if ((TARGET_PORTABLE_RUNTIME || !TARGET_GAS || !TARGET_SOM)\n       && !IN_NAMED_SECTION_P (cfun->decl))\n     {\n-      if (INSN_ADDRESSES_SET_P ())\n-\t{\n-\t  unsigned long old_total = total_code_bytes;\n+      unsigned int old_total = total_code_bytes;\n \n-\t  total_code_bytes += nbytes;\n+      total_code_bytes += nbytes;\n \n-\t  /* Be prepared to handle overflows.  */\n-\t  if (old_total > total_code_bytes)\n-\t    total_code_bytes = -1;\n-\t}\n-      else\n-\ttotal_code_bytes = -1;\n+      /* Be prepared to handle overflows.  */\n+      if (old_total > total_code_bytes)\n+        total_code_bytes = UINT_MAX;\n     }\n }\n \n@@ -4066,6 +4061,8 @@ pa_output_function_epilogue (FILE *file, HOST_WIDE_INT size ATTRIBUTE_UNUSED)\n       last_address = ((last_address + FUNCTION_BOUNDARY / BITS_PER_UNIT - 1)\n \t\t      & ~(FUNCTION_BOUNDARY / BITS_PER_UNIT - 1));\n     }\n+  else\n+    last_address = UINT_MAX;\n \n   /* Finally, update the total number of code bytes output so far.  */\n   update_total_code_bytes (last_address);\n@@ -7944,7 +7941,7 @@ pa_asm_output_mi_thunk (FILE *file, tree thunk_fndecl, HOST_WIDE_INT delta,\n {\n   static unsigned int current_thunk_number;\n   int val_14 = VAL_14_BITS_P (delta);\n-  int nbytes = 0;\n+  unsigned int old_last_address = last_address, nbytes = 0;\n   char label[16];\n   rtx xoperands[4];\n \n@@ -8177,6 +8174,8 @@ pa_asm_output_mi_thunk (FILE *file, tree thunk_fndecl, HOST_WIDE_INT delta,\n   nbytes = ((nbytes + FUNCTION_BOUNDARY / BITS_PER_UNIT - 1)\n \t    & ~(FUNCTION_BOUNDARY / BITS_PER_UNIT - 1));\n   last_address += nbytes;\n+  if (old_last_address > last_address)\n+    last_address = UINT_MAX;\n   update_total_code_bytes (nbytes);\n }\n "}]}