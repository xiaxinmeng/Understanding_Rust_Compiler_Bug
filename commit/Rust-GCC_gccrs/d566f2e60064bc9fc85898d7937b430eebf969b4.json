{"sha": "d566f2e60064bc9fc85898d7937b430eebf969b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU2NmYyZTYwMDY0YmM5ZmM4NTg5OGQ3OTM3YjQzMGVlYmY5NjliNA==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2007-07-12T14:29:23Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2007-07-12T14:29:23Z"}, "message": "target-support.exp (check_ultrasparc_hw_available): New function.\n\n\t* lib/target-support.exp (check_ultrasparc_hw_available):\n\tNew function.\n\t(is-effective-target): Check $arg for ultrasparc_hw.\n\t(is-effective-target-keyword): Likewise.\n\t* gcc.dg/vect/vect.exp: Call check_effective_target_ultrasparc_hw\n\twhen determining what to do on sparc platforms.\n\t* gcc.dg/20001013-1.c: Check for an ultrasparc_hw target.\n\t* gcc.dg/20001101-1.c: Likewise.\n\t* gcc.dg/20001101-2.c: Likewise.\n\t* gcc.dg/ultrasp9.c: Likewise.\n\t* gcc.dg/ultrasp10.c: Likewise.\n\t* gcc.target/sparc/pdist-3.c: Likewise.\n\nFrom-SVN: r126589", "tree": {"sha": "d299479069c8713f906f48fb8d97db6491f0a829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d299479069c8713f906f48fb8d97db6491f0a829"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d566f2e60064bc9fc85898d7937b430eebf969b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d566f2e60064bc9fc85898d7937b430eebf969b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d566f2e60064bc9fc85898d7937b430eebf969b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d566f2e60064bc9fc85898d7937b430eebf969b4/comments", "author": null, "committer": null, "parents": [{"sha": "d872ada0175de73128885455c0ea198dfff236e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d872ada0175de73128885455c0ea198dfff236e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d872ada0175de73128885455c0ea198dfff236e8"}], "stats": {"total": 77, "additions": 71, "deletions": 6}, "files": [{"sha": "9a1145a20640459fb8d5139cd047c2e0dc503dd2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d566f2e60064bc9fc85898d7937b430eebf969b4", "patch": "@@ -1,3 +1,18 @@\n+2007-07-12  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* lib/target-support.exp (check_ultrasparc_hw_available):\n+\tNew function.\n+\t(is-effective-target): Check $arg for ultrasparc_hw.\n+\t(is-effective-target-keyword): Likewise.\n+\t* gcc.dg/vect/vect.exp: Call check_effective_target_ultrasparc_hw\n+\twhen determining what to do on sparc platforms.\n+\t* gcc.dg/20001013-1.c: Check for an ultrasparc_hw target.\n+\t* gcc.dg/20001101-1.c: Likewise.\n+\t* gcc.dg/20001101-2.c: Likewise.\n+\t* gcc.dg/ultrasp9.c: Likewise.\n+\t* gcc.dg/ultrasp10.c: Likewise.\n+\t* gcc.target/sparc/pdist-3.c: Likewise.\n+\n 2007-07-12  Daniel Jacobowitz  <dan@codesourcery.com>\n \n \t* gcc.target/mips/save-restore-5.c: Add -mno-abicalls."}, {"sha": "8634a1928200f669aa6cfb54d9d5b0013fd5c084", "filename": "gcc/testsuite/gcc.dg/20001013-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2Fgcc.dg%2F20001013-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2Fgcc.dg%2F20001013-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20001013-1.c?ref=d566f2e60064bc9fc85898d7937b430eebf969b4", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target sparc*-*-* } } */\n+/* { dg-do run { target { sparc*-*-* && ultrasparc_hw } } } */\n /* { dg-options \"-O2 -mcpu=ultrasparc -mvis\" } */\n \n extern void abort (void);"}, {"sha": "151a6cc19debfa1c27533bce76edc4226c0e7e1d", "filename": "gcc/testsuite/gcc.dg/20001101-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2Fgcc.dg%2F20001101-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2Fgcc.dg%2F20001101-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20001101-1.c?ref=d566f2e60064bc9fc85898d7937b430eebf969b4", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target sparc*-*-* } } */\n+/* { dg-do run { target { sparc*-*-* && ultrasparc_hw } } } */\n /* { dg-options \"-O2 -mcpu=ultrasparc -mvis\" } */\n \n extern void abort (void);"}, {"sha": "62266a38164de5012945fc6d056f16cfc82ed838", "filename": "gcc/testsuite/gcc.dg/20001102-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2Fgcc.dg%2F20001102-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2Fgcc.dg%2F20001102-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20001102-1.c?ref=d566f2e60064bc9fc85898d7937b430eebf969b4", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target sparc*-*-* } } */\n+/* { dg-do run { target { sparc*-*-* && ultrasparc_hw } } } */\n /* { dg-options \"-O2 -mcpu=ultrasparc -mvis\" } */\n \n extern void abort (void);"}, {"sha": "7cc5c93aaf7de155bda9b69ef0680f5231e84b15", "filename": "gcc/testsuite/gcc.dg/ultrasp10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2Fgcc.dg%2Fultrasp10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2Fgcc.dg%2Fultrasp10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fultrasp10.c?ref=d566f2e60064bc9fc85898d7937b430eebf969b4", "patch": "@@ -1,6 +1,6 @@\n /* PR target/11965 */\n /* Originator: <jk@tools.de> */\n-/* { dg-do run { target sparc*-*-* } } */\n+/* { dg-do run { target { sparc*-*-* && ultrasparc_hw } } } */\n /* { dg-options \"-O -mcpu=ultrasparc\" } */\n \n /* This used to fail on 32-bit Ultrasparc because GCC emitted"}, {"sha": "0af2c7e860153c59687e0aca623071be689464a2", "filename": "gcc/testsuite/gcc.dg/ultrasp9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2Fgcc.dg%2Fultrasp9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2Fgcc.dg%2Fultrasp9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fultrasp9.c?ref=d566f2e60064bc9fc85898d7937b430eebf969b4", "patch": "@@ -1,6 +1,6 @@\n /* PR optimization/11018 */\n /* Originator: <partain@dcs.gla.ac.uk> */\n-/* { dg-do run { target sparc*-*-* } } */\n+/* { dg-do run { target { sparc*-*-* && ultrasparc_hw } } } */\n /* { dg-options \"-O2 -mcpu=ultrasparc\" } */\n \n /* This used to fail on 32-bit Ultrasparc because"}, {"sha": "6ad377bdcdf204c8e52eddb2569faff4f3df4e7b", "filename": "gcc/testsuite/gcc.dg/vect/vect.exp", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp?ref=d566f2e60064bc9fc85898d7937b430eebf969b4", "patch": "@@ -63,7 +63,11 @@ if [istarget \"powerpc*-*-*\"] {\n     set dg-do-what-default run\n } elseif [istarget \"sparc*-*-*\"] {\n     lappend DEFAULT_VECTCFLAGS \"-mcpu=ultrasparc\" \"-mvis\"\n-    set dg-do-what-default run\n+    if [check_effective_target_ultrasparc_hw] {\n+\tset dg-do-what-default run\n+    } else {\n+\tset dg-do-what-default compile\n+    }\n } elseif [istarget \"alpha*-*-*\"] {\n     # Alpha's vectorization capabilities are extremely limited.\n     # It's more effort than its worth disabling all of the tests"}, {"sha": "03df4d96dc40ec6a5de59c355f397eca1ff6e97c", "filename": "gcc/testsuite/gcc.target/sparc/pdist-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fpdist-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fpdist-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fpdist-3.c?ref=d566f2e60064bc9fc85898d7937b430eebf969b4", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do run } */\n+/* { dg-require-effective-target ultrasparc_hw } */\n /* { dg-options \"-mcpu=ultrasparc -mvis -O1\" } */\n \n typedef long long int64_t;"}, {"sha": "028cb34e56dfbc32857f2d672941f0c90f63b48e", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d566f2e60064bc9fc85898d7937b430eebf969b4/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=d566f2e60064bc9fc85898d7937b430eebf969b4", "patch": "@@ -1528,6 +1528,51 @@ proc check_effective_target_powerpc_altivec { } {\n     }\n }\n \n+# The VxWorks SPARC simulator accepts only EM_SPARC executables and\n+# chokes on EM_SPARC32PLUS or EM_SPARCV9 executables.  Return 1 if the\n+# test environment appears to run executables on such a simulator.\n+\n+proc check_effective_target_ultrasparc_hw { } {\n+    global et_ultrasparc_hw_saved\n+    global tool\n+\n+    if [info exists et_ultrasparc_hw_saved] {\n+\tverbose \"check_ultrasparc_hw_available returning saved $et_ultrasparc_hw_saved\" 2\n+    } else {\n+\tset et_ultrasparc_hw_saved 0\n+\n+\t# Set up, compile, and execute a simple test program.  The\n+\t# program will be compiled with -mcpu=ultrasparc to instruct the\n+\t# assembler to produce EM_SPARC32PLUS executables.\n+\tset src svect[pid].c\n+\tset exe svect[pid].x\n+\n+\tset f [open $src \"w\"]\n+\tputs $f \"int main() { return 0; }\"\n+\tclose $f\n+\n+\tverbose \"check_ultrasparc_hw_available compiling testfile $src\" 2\n+\tset lines [${tool}_target_compile $src $exe executable \"additional_flags=-mcpu=ultrasparc\"]\n+\tfile delete $src\n+\n+\tif [string match \"\" $lines] then {\n+\t    # No error message, compilation succeeded.\n+\t    set result [${tool}_load \"./$exe\" \"\" \"\"]\n+\t    set status [lindex $result 0]\n+\t    remote_file build delete $exe\n+\t    verbose \"check_ultrasparc_hw_available testfile status is <$status>\" 2\n+\n+\t    if { $status == \"pass\" } then {\n+\t\tset et_ultrasparc_hw_saved 1\n+\t    }\n+\t} else {\n+\t    verbose \"check_ultrasparc_hw_available testfile compilation failed\" 2\n+\t}\n+    }\n+\n+    return $et_ultrasparc_hw_saved\n+}\n+\n # Return 1 if the target supports hardware vector shift operation.\n \n proc check_effective_target_vect_shift { } {"}]}