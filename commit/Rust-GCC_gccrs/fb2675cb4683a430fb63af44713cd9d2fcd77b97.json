{"sha": "fb2675cb4683a430fb63af44713cd9d2fcd77b97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIyNjc1Y2I0NjgzYTQzMGZiNjNhZjQ0NzEzY2Q5ZDJmY2Q3N2I5Nw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2016-11-23T10:06:07Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2016-11-23T10:06:07Z"}, "message": "system.h (HAVE_DESIGNATED_INITIALIZERS, [...]): Do not use \"defined\" in macros.\n\ngcc:\n2016-11-23  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* system.h (HAVE_DESIGNATED_INITIALIZERS,\n\tHAVE_DESIGNATED_UNION_INITIALIZERS): Do not use\n\t\"defined\" in macros.\n\t* doc/cpp.texi (Defined): Mention -Wexpansion-to-defined.\n\t* doc/cppopts.texi (Invocation): Document -Wexpansion-to-defined.\n\t* doc/invoke.texi (Warning Options): Document -Wexpansion-to-defined.\n\ngcc/c-family:\n2016-11-23  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* c.opt (Wexpansion-to-defined): New.\n\ngcc/testsuite:\n2016-11-23  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* gcc.dg/cpp/defined.c: Mark newly introduced warnings and\n\tadjust for warning->pedwarn change.\n\t* gcc.dg/cpp/defined-syshdr.c,\n\tgcc.dg/cpp/defined-Wexpansion-to-defined.c,\n\tgcc.dg/cpp/defined-Wextra-Wno-expansion-to-defined.c,\n\tgcc.dg/cpp/defined-Wextra.c,\n\tgcc.dg/cpp/defined-Wno-expansion-to-defined.c: New testcases.\n\nlibcpp:\n2016-11-23  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* include/cpplib.h (struct cpp_options): Add new member\n\twarn_expansion_to_defined.\n\t(CPP_W_EXPANSION_TO_DEFINED): New enum member.\n\t* expr.c (parse_defined): Warn for all uses of \"defined\"\n\tin macros, and tie warning to CPP_W_EXPANSION_TO_DEFINED.\n\tMake it a pedwarning instead of a warning.\n\t* system.h (HAVE_DESIGNATED_INITIALIZERS): Do not use\n\t\"defined\" in macros.\n\nFrom-SVN: r242743", "tree": {"sha": "08fdcd7bc342d222856765ef9f8cff24381b75a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08fdcd7bc342d222856765ef9f8cff24381b75a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb2675cb4683a430fb63af44713cd9d2fcd77b97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb2675cb4683a430fb63af44713cd9d2fcd77b97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb2675cb4683a430fb63af44713cd9d2fcd77b97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb2675cb4683a430fb63af44713cd9d2fcd77b97/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "baf53c4739a68b3307ce28bfeffc903fa641b946", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baf53c4739a68b3307ce28bfeffc903fa641b946", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baf53c4739a68b3307ce28bfeffc903fa641b946"}], "stats": {"total": 250, "additions": 232, "deletions": 18}, "files": [{"sha": "b4e5acff78bc80efe7a5b61547ea79ef762efd6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -1,3 +1,12 @@\n+2016-11-23  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* system.h (HAVE_DESIGNATED_INITIALIZERS,\n+\tHAVE_DESIGNATED_UNION_INITIALIZERS): Do not use\n+\t\"defined\" in macros.\n+\t* doc/cpp.texi (Defined): Mention -Wexpansion-to-defined.\n+\t* doc/cppopts.texi (Invocation): Document -Wexpansion-to-defined.\n+\t* doc/invoke.texi (Warning Options): Document -Wexpansion-to-defined.\n+\n 2016-11-23  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/60300"}, {"sha": "6b86dd2355f13ca3bf1895145f62330971602966", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -1,3 +1,7 @@\n+2016-11-23  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* c.opt (Wexpansion-to-defined): New.\n+\n 2016-11-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/78451"}, {"sha": "2d47d54563aea7e0f4c2858644f1fc302234dd67", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -573,6 +573,10 @@ Wdouble-promotion\n C ObjC C++ ObjC++ Var(warn_double_promotion) Warning\n Warn about implicit conversions from \\\"float\\\" to \\\"double\\\".\n \n+Wexpansion-to-defined\n+C ObjC C++ ObjC++ CPP(warn_expansion_to_defined) CppReason(CPP_W_EXPANSION_TO_DEFINED) Var(cpp_warn_expansion_to_defined) Init(0) Warning EnabledBy(Wextra || Wpedantic)\n+Warn if \\\"defined\\\" is used outside #if.\n+\n Wimplicit-function-declaration\n C ObjC Var(warn_implicit_function_declaration) Init(-1) Warning LangEnabledBy(C ObjC,Wimplicit)\n Warn about implicit function declarations."}, {"sha": "49aa95369a0ec5364dce5b78cbd880c261f569b7", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -3369,7 +3369,9 @@ If the @code{defined} operator appears as a result of a macro expansion,\n the C standard says the behavior is undefined.  GNU cpp treats it as a\n genuine @code{defined} operator and evaluates it normally.  It will warn\n wherever your code uses this feature if you use the command-line option\n-@option{-pedantic}, since other compilers may handle it differently.\n+@option{-Wpedantic}, since other compilers may handle it differently.  The\n+warning is also enabled by @option{-Wextra}, and can also be enabled\n+individually with @option{-Wexpansion-to-defined}.\n \n @node Else\n @subsection Else"}, {"sha": "e349555909c7e7ca1472a472b9355b27fe09161c", "filename": "gcc/doc/cppopts.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Fdoc%2Fcppopts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Fdoc%2Fcppopts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppopts.texi?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -120,6 +120,12 @@ Warn whenever an identifier which is not a macro is encountered in an\n @samp{#if} directive, outside of @samp{defined}.  Such identifiers are\n replaced with zero.\n \n+@item -Wexpansion-to-defined\n+@opindex Wexpansion-to-defined\n+Warn whenever @samp{defined} is encountered in the expansion of a macro\n+(including the case where the macro is expanded by an @samp{#if} directive).\n+Such usage is not portable.\n+\n @item -Wunused-macros\n @opindex Wunused-macros\n Warn about macros defined in the main file that are unused.  A macro"}, {"sha": "32c7a083be09cd3308e3ca37dc789a1fe237c510", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -5320,6 +5320,11 @@ Warn when a declaration is found after a statement in a block.  This\n construct, known from C++, was introduced with ISO C99 and is by default\n allowed in GCC@.  It is not supported by ISO C90.  @xref{Mixed Declarations}.\n \n+@item -Wexpansion-to-defined\n+@opindex Wexpansion-to-defined\n+Warn whenever @samp{defined} is encountered in the expansion of a macro.\n+This warning is also enabled by @option{-Wpedantic} and @option{-Wextra}.\n+\n @item -Wundef\n @opindex Wundef\n @opindex Wno-undef"}, {"sha": "3e120176c2b74d0eef2979912a69ff4ff914dee2", "filename": "gcc/system.h", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -577,15 +577,21 @@ extern int vsnprintf (char *, size_t, const char *, va_list);\n \n /* 1 if we have C99 designated initializers.  */\n #if !defined(HAVE_DESIGNATED_INITIALIZERS)\n+#ifdef __cplusplus\n+#define HAVE_DESIGNATED_INITIALIZERS 0\n+#else\n #define HAVE_DESIGNATED_INITIALIZERS \\\n-  (((GCC_VERSION >= 2007) || (__STDC_VERSION__ >= 199901L)) \\\n-   && !defined(__cplusplus))\n+  (((GCC_VERSION >= 2007) || (__STDC_VERSION__ >= 199901L))\n+#endif\n #endif\n \n #if !defined(HAVE_DESIGNATED_UNION_INITIALIZERS)\n+#ifdef __cplusplus\n+#define HAVE_DESIGNATED_UNION_INITIALIZERS (GCC_VERSION >= 4007)\n+#else\n #define HAVE_DESIGNATED_UNION_INITIALIZERS \\\n-  (((GCC_VERSION >= 2007) || (__STDC_VERSION__ >= 199901L)) \\\n-   && (!defined(__cplusplus) || (GCC_VERSION >= 4007)))\n+  (((GCC_VERSION >= 2007) || (__STDC_VERSION__ >= 199901L))\n+#endif\n #endif\n \n #if HAVE_SYS_STAT_H"}, {"sha": "b9ccccc3d5160c57f986aaab11bd0a02693e2dc3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -1,3 +1,13 @@\n+2016-11-23  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* gcc.dg/cpp/defined.c: Mark newly introduced warnings and\n+\tadjust for warning->pedwarn change.\n+\t* gcc.dg/cpp/defined-syshdr.c,\n+\tgcc.dg/cpp/defined-Wexpansion-to-defined.c,\n+\tgcc.dg/cpp/defined-Wextra-Wno-expansion-to-defined.c,\n+\tgcc.dg/cpp/defined-Wextra.c,\n+\tgcc.dg/cpp/defined-Wno-expansion-to-defined.c: New testcases.\n+\n 2016-11-23  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n \n \t* gcc.dg/uninit-19.c: Add -finline-small-functions for avr."}, {"sha": "9823c764df07d37671e9ced136e1ad5fe856d397", "filename": "gcc/testsuite/gcc.dg/cpp/defined-Wexpansion-to-defined.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined-Wexpansion-to-defined.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined-Wexpansion-to-defined.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined-Wexpansion-to-defined.c?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -0,0 +1,30 @@\n+/* Copyright (C) 2000 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+/* { dg-options \"-Wexpansion-to-defined\" } */\n+\n+/* Use of defined in different contexts.  */\n+\n+/*  Source: Neil Booth, 29 Oct 2000, Zack Weinberg 11 Dec 2000.  */\n+\n+#define Z\n+\n+#define bad0 defined Z\n+#if !bad0                       /* { dg-warning \"may not be portable\" } */\n+#error Z is defined\n+#endif\n+\n+#define bad1 defined\n+#if !bad1 Z\t\t\t/* { dg-warning \"may not be portable\" } */\n+#error Z is defined\n+#endif \n+\n+#if !bad1 (Z)\t\t\t/* { dg-warning \"may not be portable\" } */\n+#error Z is defined\n+#endif \n+\n+#define bad2 defined (Z\n+#if !bad2)\t\t\t/* { dg-warning \"may not be portable\" } */\n+#error Z is defined\n+#endif \n+"}, {"sha": "16a641db001804b57595b2931da7e03ecc3ba1fa", "filename": "gcc/testsuite/gcc.dg/cpp/defined-Wextra-Wno-expansion-to-defined.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined-Wextra-Wno-expansion-to-defined.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined-Wextra-Wno-expansion-to-defined.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined-Wextra-Wno-expansion-to-defined.c?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -0,0 +1,30 @@\n+/* Copyright (C) 2000 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+/* { dg-options \"-Wextra -Wno-expansion-to-defined\" } */\n+\n+/* Use of defined in different contexts.  */\n+\n+/*  Source: Neil Booth, 29 Oct 2000, Zack Weinberg 11 Dec 2000.  */\n+\n+#define Z\n+\n+#define bad0 defined Z\n+#if !bad0                       /* { dg-bogus \"may not be portable\" } */\n+#error Z is defined\n+#endif\n+\n+#define bad1 defined\n+#if !bad1 Z\t\t\t/* { dg-bogus \"may not be portable\" } */\n+#error Z is defined\n+#endif \n+\n+#if !bad1 (Z)\t\t\t/* { dg-bogus \"may not be portable\" } */\n+#error Z is defined\n+#endif \n+\n+#define bad2 defined (Z\n+#if !bad2)\t\t\t/* { dg-bogus \"may not be portable\" } */\n+#error Z is defined\n+#endif \n+"}, {"sha": "460a1cb43b2a150ef2e05b96262c3d70c2fe8c96", "filename": "gcc/testsuite/gcc.dg/cpp/defined-Wextra.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined-Wextra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined-Wextra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined-Wextra.c?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -0,0 +1,30 @@\n+/* Copyright (C) 2000 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+/* { dg-options \"-Wextra\" } */\n+\n+/* Use of defined in different contexts.  */\n+\n+/*  Source: Neil Booth, 29 Oct 2000, Zack Weinberg 11 Dec 2000.  */\n+\n+#define Z\n+\n+#define bad0 defined Z\n+#if !bad0                       /* { dg-warning \"may not be portable\" } */\n+#error Z is defined\n+#endif\n+\n+#define bad1 defined\n+#if !bad1 Z\t\t\t/* { dg-warning \"may not be portable\" } */\n+#error Z is defined\n+#endif \n+\n+#if !bad1 (Z)\t\t\t/* { dg-warning \"may not be portable\" } */\n+#error Z is defined\n+#endif \n+\n+#define bad2 defined (Z\n+#if !bad2)\t\t\t/* { dg-warning \"may not be portable\" } */\n+#error Z is defined\n+#endif \n+"}, {"sha": "ddd015b75accaa2340c59758ea5801dfa5b08504", "filename": "gcc/testsuite/gcc.dg/cpp/defined-Wno-expansion-to-defined.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined-Wno-expansion-to-defined.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined-Wno-expansion-to-defined.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined-Wno-expansion-to-defined.c?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -0,0 +1,30 @@\n+/* Copyright (C) 2000 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+/* { dg-options \"-ansi -pedantic-errors -Wno-expansion-to-defined\" } */\n+\n+/* Use of defined in different contexts.  */\n+\n+/*  Source: Neil Booth, 29 Oct 2000, Zack Weinberg 11 Dec 2000.  */\n+\n+#define Z\n+\n+#define bad0 defined Z\n+#if !bad0                       /* { dg-bogus \"may not be portable\" } */\n+#error Z is defined\n+#endif\n+\n+#define bad1 defined\n+#if !bad1 Z\t\t\t/* { dg-bogus \"may not be portable\" } */\n+#error Z is defined\n+#endif \n+\n+#if !bad1 (Z)\t\t\t/* { dg-bogus \"may not be portable\" } */\n+#error Z is defined\n+#endif \n+\n+#define bad2 defined (Z\n+#if !bad2)\t\t\t/* { dg-bogus \"may not be portable\" } */\n+#error Z is defined\n+#endif \n+"}, {"sha": "9c3846cddf1b6e945eaadc60cecaad486ced7ec8", "filename": "gcc/testsuite/gcc.dg/cpp/defined-syshdr.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined-syshdr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined-syshdr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined-syshdr.c?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -0,0 +1,27 @@\n+# 1 \"defined-syshdr.c\" 1\n+/* { dg-do preprocess } */\n+/* { dg-options \"-Wexpansion-to-defined\" } */\n+\n+#define defined_outside_sys_hdr   defined FOO\n+\n+# 36 \"some-system-header.h\" 1 3\n+\n+#define defined_inside_sys_hdr    defined FOO\n+\n+/* In a system header, it's acceptable.  */\n+#if defined_outside_sys_hdr   /* { dg-bogus \"may not be portable\" } */\n+#endif\n+\n+# 16 \"defined-syshdr.c\" 2\n+\n+/* Back to _not_ in a system header */\n+\n+#if defined_outside_sys_hdr   /* { dg-message \"may not be portable\" } */\n+#endif\n+\n+/* Currently we warn about this, but it is probably a good idea not to.  */\n+\n+#if defined_inside_sys_hdr   /* { dg-bogus \"may not be portable\" \"\" { xfail *-*-* } } */\n+#endif\n+\n+int x;"}, {"sha": "44567e4b8e06effa1685f0cc7663a42322a2d96f", "filename": "gcc/testsuite/gcc.dg/cpp/defined.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fdefined.c?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -21,7 +21,7 @@\n \n /* The behavior of \"defined\" when it comes from a macro expansion is\n    now documented.  */\n-#if is_Z_defined\n+#if is_Z_defined                /* { dg-error \"may not be portable\" } */\n #error Macro expanding into defined operator test 1\n #endif\n \n@@ -31,7 +31,7 @@\n #error Z is defined\n #endif\n \n-#if !is_Z_defined\n+#if !is_Z_defined               /* { dg-error \"may not be portable\" } */\n #error Macro expanding into defined operator test 2\n #endif\n \n@@ -53,7 +53,7 @@\n \n /* The behavior of \"defined\" when it comes from a macro expansion is\n    now documented.  */\n-#if is_Z_defined\n+#if is_Z_defined                /* { dg-error \"may not be portable\" } */\n #error Macro expanding into defined operator test 1\n #endif\n \n@@ -63,23 +63,23 @@\n #error Z is defined\n #endif\n \n-#if !is_Z_defined\n+#if !is_Z_defined               /* { dg-error \"may not be portable\" } */\n #error Macro expanding into defined operator test 2\n #endif\n \n /* Use of defined in different contexts.  */\n \n #define bad1 defined\n-#if !bad1 Z\t\t\t/* { dg-warning \"may not be portable\" } */\n+#if !bad1 Z\t\t\t/* { dg-error \"may not be portable\" } */\n #error Z is defined\n #endif \n \n-#if !bad1 (Z)\t\t\t/* { dg-warning \"may not be portable\" } */\n+#if !bad1 (Z)\t\t\t/* { dg-error \"may not be portable\" } */\n #error Z is defined\n #endif \n \n #define bad2 defined (Z\n-#if !bad2)\t\t\t/* { dg-warning \"may not be portable\" } */\n+#if !bad2)\t\t\t/* { dg-error \"may not be portable\" } */\n #error Z is defined\n #endif \n "}, {"sha": "1a7e737cd95285e62fa67936f6467bf701194c0c", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -1,3 +1,14 @@\n+2016-11-23  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* include/cpplib.h (struct cpp_options): Add new member\n+\twarn_expansion_to_defined.\n+\t(CPP_W_EXPANSION_TO_DEFINED): New enum member.\n+\t* expr.c (parse_defined): Warn for all uses of \"defined\"\n+\tin macros, and tie warning to CPP_W_EXPANSION_TO_DEFINED.\n+\tMake it a pedwarning instead of a warning.\n+\t* system.h (HAVE_DESIGNATED_INITIALIZERS): Do not use\n+\t\"defined\" in macros.\n+\n 2016-11-17  David Malcolm  <dmalcolm@redhat.com>\n \n \t* charset.c (cpp_interpret_string_1): Skip locations from"}, {"sha": "a4cf750595835f86e61d410aee161dda21025071", "filename": "libcpp/expr.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/libcpp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/libcpp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fexpr.c?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -1031,9 +1031,11 @@ parse_defined (cpp_reader *pfile)\n \n   if (node)\n     {\n-      if (pfile->context != initial_context && CPP_PEDANTIC (pfile))\n-\tcpp_error (pfile, CPP_DL_WARNING,\n-\t\t   \"this use of \\\"defined\\\" may not be portable\");\n+      if ((pfile->context != initial_context\n+\t   || initial_context != &pfile->base_context)\n+\t  && CPP_OPTION (pfile, warn_expansion_to_defined))\n+        cpp_pedwarning (pfile, CPP_W_EXPANSION_TO_DEFINED,\n+\t\t        \"this use of \\\"defined\\\" may not be portable\");\n \n       _cpp_mark_macro_used (node);\n       if (!(node->flags & NODE_USED))"}, {"sha": "56c2491d2ee8a7cd4d00392dc0b382b998dac6cf", "filename": "libcpp/include/cpplib.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/libcpp%2Finclude%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/libcpp%2Finclude%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fcpplib.h?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -415,6 +415,10 @@ struct cpp_options\n   /* Nonzero means warn if undefined identifiers are evaluated in an #if.  */\n   unsigned char warn_undef;\n \n+  /* Nonzero means warn if \"defined\" is encountered in a place other than\n+     an #if.  */\n+  unsigned char warn_expansion_to_defined;\n+\n   /* Nonzero means warn of unused macros from the main file.  */\n   unsigned char warn_unused_macros;\n \n@@ -1040,7 +1044,8 @@ enum {\n   CPP_W_DATE_TIME,\n   CPP_W_PEDANTIC,\n   CPP_W_C90_C99_COMPAT,\n-  CPP_W_CXX11_COMPAT\n+  CPP_W_CXX11_COMPAT,\n+  CPP_W_EXPANSION_TO_DEFINED\n };\n \n /* Output a diagnostic of some kind.  */"}, {"sha": "67b02bb4578cba9709f2247f5edcd4c0cba627c0", "filename": "libcpp/system.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb2675cb4683a430fb63af44713cd9d2fcd77b97/libcpp%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb2675cb4683a430fb63af44713cd9d2fcd77b97/libcpp%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fsystem.h?ref=fb2675cb4683a430fb63af44713cd9d2fcd77b97", "patch": "@@ -375,9 +375,12 @@ extern void abort (void);\n    ??? C99 designated initializers are not supported by most C++\n    compilers, including G++.  -- gdr, 2005-05-18  */\n #if !defined(HAVE_DESIGNATED_INITIALIZERS)\n+#ifdef __cplusplus\n+#define HAVE_DESIGNATED_INITIALIZERS 0\n+#else\n #define HAVE_DESIGNATED_INITIALIZERS \\\n-  (!defined(__cplusplus) \\\n-   && ((GCC_VERSION >= 2007) || (__STDC_VERSION__ >= 199901L)))\n+   ((GCC_VERSION >= 2007) || (__STDC_VERSION__ >= 199901L))\n+#endif\n #endif\n \n #ifndef offsetof"}]}