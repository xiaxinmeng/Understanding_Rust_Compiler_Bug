{"sha": "c767899ef26cac6092786591518ff9e5a54dbe04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc2Nzg5OWVmMjZjYWM2MDkyNzg2NTkxNTE4ZmY5ZTVhNTRkYmUwNA==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2009-08-24T21:23:22Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2009-08-24T21:23:22Z"}, "message": "convert.c (convert_to_integer): Don't assume an input pointer is POINTER_SIZE wide.\n\n        * convert.c (convert_to_integer): Don't assume an input pointer is\n        POINTER_SIZE wide.  Fetch from the type instead.\n\nFrom-SVN: r151060", "tree": {"sha": "30ea226563257ca2559d6f9e7614fcc3b8ea38f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30ea226563257ca2559d6f9e7614fcc3b8ea38f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c767899ef26cac6092786591518ff9e5a54dbe04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c767899ef26cac6092786591518ff9e5a54dbe04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c767899ef26cac6092786591518ff9e5a54dbe04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c767899ef26cac6092786591518ff9e5a54dbe04/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df58e64872d2ba904d38bd8a5bdf65527fa817da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df58e64872d2ba904d38bd8a5bdf65527fa817da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df58e64872d2ba904d38bd8a5bdf65527fa817da"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "2d031187c420d48f1951df269c77dd1af9e7f224", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c767899ef26cac6092786591518ff9e5a54dbe04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c767899ef26cac6092786591518ff9e5a54dbe04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c767899ef26cac6092786591518ff9e5a54dbe04", "patch": "@@ -1,3 +1,8 @@\n+2009-08-24  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* convert.c (convert_to_integer): Don't assume an input pointer is\n+\tPOINTER_SIZE wide.  Fetch from the type instead.\n+\n 2009-08-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure.ac (AC_PREREQ): Bump to 2.64."}, {"sha": "a833418d273a377d8c61711bd8df09ce16631333", "filename": "gcc/convert.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c767899ef26cac6092786591518ff9e5a54dbe04/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c767899ef26cac6092786591518ff9e5a54dbe04/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=c767899ef26cac6092786591518ff9e5a54dbe04", "patch": "@@ -530,10 +530,13 @@ convert_to_integer (tree type, tree expr)\n       if (integer_zerop (expr))\n \treturn build_int_cst (type, 0);\n \n-      /* Convert to an unsigned integer of the correct width first,\n-\t and from there widen/truncate to the required type.  */\n+      /* Convert to an unsigned integer of the correct width first, and from\n+\t there widen/truncate to the required type.  Some targets support the\n+\t coexistence of multiple valid pointer sizes, so fetch the one we need\n+\t from the type.  */\n       expr = fold_build1 (CONVERT_EXPR,\n-\t\t\t  lang_hooks.types.type_for_size (POINTER_SIZE, 0),\n+\t\t\t  lang_hooks.types.type_for_size\n+\t\t\t    (TYPE_PRECISION (intype), 0),\n \t\t\t  expr);\n       return fold_convert (type, expr);\n "}]}