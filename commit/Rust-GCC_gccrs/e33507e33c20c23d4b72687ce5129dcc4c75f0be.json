{"sha": "e33507e33c20c23d4b72687ce5129dcc4c75f0be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMzNTA3ZTMzYzIwYzIzZDRiNzI2ODdjZTUxMjlkY2M0Yzc1ZjBiZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-10-18T14:35:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-10-18T14:35:26Z"}, "message": "re PR tree-optimization/82591 ([graphite] Compile-time hog w/ -O2 -floop-nest-optimize)\n\n2017-10-18  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/82591\n\t* graphite.c (graphite_transform_loops): Move code gen message\n\tprinting ...\n\t* graphite-isl-ast-to-gimple.c (graphite_regenerate_ast_isl):\n\tHere.  Handle scop_to_isl_ast failing.\n\t(scop_to_isl_ast): Limit the number of ISL operations.\n\nFrom-SVN: r253856", "tree": {"sha": "be6a92ce13525c5b2590ffb52581b59cce3f76a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be6a92ce13525c5b2590ffb52581b59cce3f76a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e33507e33c20c23d4b72687ce5129dcc4c75f0be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e33507e33c20c23d4b72687ce5129dcc4c75f0be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e33507e33c20c23d4b72687ce5129dcc4c75f0be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e33507e33c20c23d4b72687ce5129dcc4c75f0be/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "30c4440c6ad1034e6e69fa7370659aaa9bb19912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30c4440c6ad1034e6e69fa7370659aaa9bb19912", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30c4440c6ad1034e6e69fa7370659aaa9bb19912"}], "stats": {"total": 68, "additions": 55, "deletions": 13}, "files": [{"sha": "51ad45e7964e7eb5776cac8fa951ee322659d1a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33507e33c20c23d4b72687ce5129dcc4c75f0be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33507e33c20c23d4b72687ce5129dcc4c75f0be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e33507e33c20c23d4b72687ce5129dcc4c75f0be", "patch": "@@ -1,3 +1,12 @@\n+2017-10-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82591\n+\t* graphite.c (graphite_transform_loops): Move code gen message\n+\tprinting ...\n+\t* graphite-isl-ast-to-gimple.c (graphite_regenerate_ast_isl):\n+\tHere.  Handle scop_to_isl_ast failing.\n+\t(scop_to_isl_ast): Limit the number of ISL operations.\n+\n 2017-10-18  Richard Biener  <rguenther@suse.de>\n \n \t* graphite-isl-ast-to-gimple.c"}, {"sha": "e929193219ddce2b80fbf36cc89350722edf425a", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 39, "deletions": 4, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33507e33c20c23d4b72687ce5129dcc4c75f0be/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33507e33c20c23d4b72687ce5129dcc4c75f0be/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=e33507e33c20c23d4b72687ce5129dcc4c75f0be", "patch": "@@ -56,6 +56,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfganal.h\"\n #include \"value-prof.h\"\n #include \"tree-ssa.h\"\n+#include \"tree-vectorizer.h\"\n #include \"graphite.h\"\n \n struct ast_build_info\n@@ -1350,6 +1351,13 @@ ast_build_before_for (__isl_keep isl_ast_build *build, void *user)\n __isl_give isl_ast_node *translate_isl_ast_to_gimple::\n scop_to_isl_ast (scop_p scop)\n {\n+  int old_err = isl_options_get_on_error (scop->isl_context);\n+  int old_max_operations = isl_ctx_get_max_operations (scop->isl_context);\n+  int max_operations = PARAM_VALUE (PARAM_MAX_ISL_OPERATIONS);\n+  if (max_operations)\n+    isl_ctx_set_max_operations (scop->isl_context, max_operations);\n+  isl_options_set_on_error (scop->isl_context, ISL_ON_ERROR_CONTINUE);\n+\n   gcc_assert (scop->transformed_schedule);\n \n   /* Set the separate option to reduce control flow overhead.  */\n@@ -1368,6 +1376,27 @@ scop_to_isl_ast (scop_p scop)\n   isl_ast_node *ast_isl = isl_ast_build_node_from_schedule\n     (context_isl, schedule);\n   isl_ast_build_free (context_isl);\n+\n+  isl_options_set_on_error (scop->isl_context, old_err);\n+  isl_ctx_reset_operations (scop->isl_context);\n+  isl_ctx_set_max_operations (scop->isl_context, old_max_operations);\n+  if (isl_ctx_last_error (scop->isl_context) != isl_error_none)\n+    {\n+      location_t loc = find_loop_location\n+\t(scop->scop_info->region.entry->dest->loop_father);\n+      if (isl_ctx_last_error (scop->isl_context) == isl_error_quota)\n+\tdump_printf_loc (MSG_MISSED_OPTIMIZATION, loc,\n+\t\t\t \"loop nest not optimized, AST generation timed out \"\n+\t\t\t \"after %d operations [--param max-isl-operations]\\n\",\n+\t\t\t max_operations);\n+      else\n+\tdump_printf_loc (MSG_MISSED_OPTIMIZATION, loc,\n+\t\t\t \"loop nest not optimized, ISL AST generation \"\n+\t\t\t \"signalled an error\\n\");\n+      isl_ast_node_free (ast_isl);\n+      return NULL;\n+    }\n+\n   return ast_isl;\n }\n \n@@ -1416,6 +1445,12 @@ graphite_regenerate_ast_isl (scop_p scop)\n   timevar_push (TV_GRAPHITE_CODE_GEN);\n   t.add_parameters_to_ivs_params (scop, ip);\n   root_node = t.scop_to_isl_ast (scop);\n+  if (! root_node)\n+    {\n+      ivs_params_clear (ip);\n+      timevar_pop (TV_GRAPHITE_CODE_GEN);\n+      return false;\n+    }\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n@@ -1456,10 +1491,10 @@ graphite_regenerate_ast_isl (scop_p scop)\n \n   if (t.codegen_error_p ())\n     {\n-      if (dump_file)\n-\tfprintf (dump_file, \"codegen error: \"\n-\t\t \"reverting back to the original code.\\n\");\n-      set_ifsese_condition (if_region, integer_zero_node);\n+      location_t loc = find_loop_location\n+\t(scop->scop_info->region.entry->dest->loop_father);\n+      dump_printf_loc (MSG_MISSED_OPTIMIZATION, loc,\n+\t\t       \"loop nest not optimized, code generation error\\n\");\n \n       /* Remove the unreachable region.  */\n       remove_edge_and_dominated_blocks (if_region->true_region->region.entry);"}, {"sha": "5e0d66d107bb122bda33fb61b0639f752d767aa0", "filename": "gcc/graphite.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33507e33c20c23d4b72687ce5129dcc4c75f0be/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33507e33c20c23d4b72687ce5129dcc4c75f0be/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=e33507e33c20c23d4b72687ce5129dcc4c75f0be", "patch": "@@ -378,16 +378,14 @@ graphite_transform_loops (void)\n \tif (!apply_poly_transforms (scop))\n \t  continue;\n \n-\tlocation_t loc = find_loop_location\n-\t  (scops[i]->scop_info->region.entry->dest->loop_father);\n-\n \tchanged = true;\n-\tif (!graphite_regenerate_ast_isl (scop))\n-\t  dump_printf_loc (MSG_MISSED_OPTIMIZATION, loc,\n-\t\t\t   \"loop nest not optimized, code generation error\\n\");\n-\telse\n-\t  dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, loc,\n-\t\t\t   \"loop nest optimized\\n\");\n+\tif (graphite_regenerate_ast_isl (scop))\n+\t  {\n+\t    location_t loc = find_loop_location\n+\t      (scops[i]->scop_info->region.entry->dest->loop_father);\n+\t    dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, loc,\n+\t\t\t     \"loop nest optimized\\n\");\n+\t  }\n       }\n \n   if (changed)"}]}