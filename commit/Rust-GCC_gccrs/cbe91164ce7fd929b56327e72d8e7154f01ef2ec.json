{"sha": "cbe91164ce7fd929b56327e72d8e7154f01ef2ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JlOTExNjRjZTdmZDkyOWI1NjMyN2U3MmQ4ZTcxNTRmMDFlZjJlYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2016-07-04T12:47:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-07-04T12:47:30Z"}, "message": "Cleanups.\n\nFrom-SVN: r237977", "tree": {"sha": "7547ffdc36707ecc60b7e7ddaa1b9c36ef8162f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7547ffdc36707ecc60b7e7ddaa1b9c36ef8162f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbe91164ce7fd929b56327e72d8e7154f01ef2ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbe91164ce7fd929b56327e72d8e7154f01ef2ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbe91164ce7fd929b56327e72d8e7154f01ef2ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbe91164ce7fd929b56327e72d8e7154f01ef2ec/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0c3f76bac4d10283ab9d6fc9a64ccb0140a0b91e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c3f76bac4d10283ab9d6fc9a64ccb0140a0b91e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c3f76bac4d10283ab9d6fc9a64ccb0140a0b91e"}], "stats": {"total": 225, "additions": 155, "deletions": 70}, "files": [{"sha": "44ee116c01722a1cc117b7aaae5f8c995d273355", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbe91164ce7fd929b56327e72d8e7154f01ef2ec/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbe91164ce7fd929b56327e72d8e7154f01ef2ec/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cbe91164ce7fd929b56327e72d8e7154f01ef2ec", "patch": "@@ -1,3 +1,7 @@\n+2016-07-04  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gcc-interface/Makefile.in: Cleanups.\n+\n 2016-07-04  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_attr.adb (Analyze_Attribute_Old_Result): The attributes can"}, {"sha": "0df7f899278d9650b0c96ec216ece27379cb9beb", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 151, "deletions": 70, "changes": 221, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbe91164ce7fd929b56327e72d8e7154f01ef2ec/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbe91164ce7fd929b56327e72d8e7154f01ef2ec/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=cbe91164ce7fd929b56327e72d8e7154f01ef2ec", "patch": "@@ -444,6 +444,15 @@ EXTRA_LIBGNAT_OBJS=\n # specific header files required to rebuild the runtime library from sources.\n EXTRA_LIBGNAT_SRCS=\n \n+# Subsets of extra libgnat sources that always go together\n+VX_SIGTRAMP_EXTRA_SRCS=sigtramp.h sigtramp-vxworks-target.inc\n+\n+# Additional object files that should go in the same directory as libgnat,\n+# aside the library itself. Typically useful for crtbegin/crtend kind of files.\n+EXTRA_ADALIB_OBJS=\n+\n+VX_CRTBE_EXTRA_ADALIB_OBJS=vx_crtbegin.o vx_crtbegin_auto.o vx_crtend.o\n+\n # GCC spec files to be installed in $(libsubdir), so --specs=<spec-filename>\n # finds them at runtime. Sequences of alphanum characters prefixed with '_' in\n # the filename are stripped off at installation time. This is used to strip\n@@ -571,7 +580,6 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks vxworks7,$(target_cpu) $(target_\n     system.ads<system-vxworks-$(ARCH_STR)-rtp.ads\n \n     EH_MECHANISM=-gcc\n-    EXTRA_LIBGNAT_OBJS+=sigtramp-vxworks.o\n   else\n     ifeq ($(strip $(filter-out rtp-smp,$(THREAD_KIND))),)\n       LIBGNAT_TARGET_PAIRS += \\\n@@ -582,8 +590,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks vxworks7,$(target_cpu) $(target_\n       system.ads<$(SVX)-$(ARCH_STR)-rtp-smp.ads\n \n       EH_MECHANISM=-gcc\n-      EXTRA_LIBGNAT_OBJS+=affinity.o sigtramp-vxworks.o\n-      EXTRA_LIBGNAT_SRCS+=sigtramp.h\n+      EXTRA_LIBGNAT_OBJS+=affinity.o\n     else\n       ifeq ($(strip $(filter-out kernel-smp,$(THREAD_KIND))),)\n         LIBGNAT_TARGET_PAIRS += \\\n@@ -613,17 +620,18 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks vxworks7,$(target_cpu) $(target_\n         endif\n       endif\n       EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n-      EXTRA_LIBGNAT_OBJS+=sigtramp-vxworks.o\n-      EXTRA_LIBGNAT_SRCS+=sigtramp.h\n     endif\n   endif\n \n   EXTRA_GNATRTL_TASKING_OBJS += s-vxwork.o s-vxwext.o\n \n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n \n+  EXTRA_ADALIB_OBJS+=$(VX_CRTBE_EXTRA_ADALIB_OBJS)\n+  EXTRA_LIBGNAT_SRCS+=vx_crtbegin.inc\n+  GCC_SPEC_FILES+=vxworks-gnat-crtbe-link.spec\n+\n   GCC_SPEC_FILES+=vxworks-$(ARCH_STR)-link.spec\n-  GCC_SPEC_FILES+=vxworks-crtbe-link.spec\n endif\n \n # PowerPC and e500v2 VxWorks 653\n@@ -661,6 +669,8 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksae,$(target_cpu) $(target_vendor)\n   $(ATOMICS_TARGET_PAIRS) \\\n   $(ATOMICS_BUILTINS_TARGET_PAIRS)\n \n+  EH_MECHANISM=-gcc\n+\n   TOOLS_TARGET_PAIRS=\\\n   mlib-tgt-specific.adb<mlib-tgt-specific-vxworks.adb \\\n   indepsw.adb<indepsw-gnu.adb\n@@ -669,7 +679,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksae,$(target_cpu) $(target_vendor)\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o s-vxwext.o\n \n   EXTRA_LIBGNAT_OBJS+=sigtramp-vxworks.o\n-  EXTRA_LIBGNAT_SRCS+=sigtramp.h\n+  EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n \n   # Extra pairs for the vthreads runtime\n   ifeq ($(strip $(filter-out vthreads,$(THREAD_KIND))),)\n@@ -712,6 +722,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksmils,$(target_cpu) $(target_vendo\n   s-osinte.adb<s-osinte-vxworks.adb \\\n   s-osinte.ads<s-osinte-vxworks.ads \\\n   s-osprim.adb<s-osprim-vxworks.adb \\\n+  s-osvers.ads<s-osvers-vxworks-mils.ads \\\n   s-parame.ads<s-parame-ae653.ads \\\n   s-parame.adb<s-parame-vxworks.adb \\\n   s-stchop.adb<s-stchop-vxworks.adb \\\n@@ -720,7 +731,6 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksmils,$(target_cpu) $(target_vendo\n   s-tasinf.ads<s-tasinf-vxworks.ads \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-thread.adb<s-thread-ae653.adb \\\n-  s-osvers.ads<s-osvers-vxworks-mils.ads \\\n   s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n   s-vxwork.ads<s-vxwork-ppc.ads \\\n   system.ads<system-vxworks-ppc-mils.ads \\\n@@ -735,8 +745,11 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksmils,$(target_cpu) $(target_vendo\n   EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-thread.o s-osvers.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o s-vxwext.o\n \n-  EXTRA_LIBGNAT_OBJS+=vx_stack_info.o sigtramp-vxworks.o\n-  EXTRA_LIBGNAT_SRCS+=sigtramp.h\n+  EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n+\n+  EXTRA_LIBGNAT_OBJS+=sigtramp-vxworks.o\n+  EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n+\n   GNATRTL_SOCKETS_OBJS =\n \n   ifeq ($(strip $(filter-out yes,$(TRACE))),)\n@@ -777,6 +790,8 @@ ifeq ($(strip $(filter-out %86 wrs vxworksae,$(target_cpu) $(target_vendor) $(ta\n   $(ATOMICS_TARGET_PAIRS) \\\n   $(ATOMICS_BUILTINS_TARGET_PAIRS)\n \n+  EH_MECHANISM=-gcc\n+\n   TOOLS_TARGET_PAIRS=\\\n   mlib-tgt-specific.adb<mlib-tgt-specific-vxworks.adb \\\n   indepsw.adb<indepsw-gnu.adb\n@@ -865,21 +880,26 @@ ifeq ($(strip $(filter-out sparc% wrs vx%,$(target_cpu) $(target_vendor) $(targe\n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n endif\n \n-# x86 VxWorks\n-ifeq ($(strip $(filter-out %86 wrs vxworks vxworks7,$(target_cpu) $(target_vendor) $(target_os))),)\n+# x86/x86_64 VxWorks\n+ifeq ($(strip $(filter-out %86 x86_64 wrs vxworks vxworks7,$(target_cpu) $(target_vendor) $(target_os))),)\n+\n+  EH_MECHANISM=-gcc\n \n   ifeq ($(strip $(filter-out vxworks7%, $(target_os))),)\n      SVX=system-vxworks7\n   else\n      SVX=system-vxworks\n-     EH_MECHANISM=-gcc\n   endif\n \n-  EXTRA_LIBGNAT_OBJS+=sigtramp-vxworks.o sigtramp-vxworks-vxsim.o\n-  EXTRA_LIBGNAT_OBJS+=init-vxsim.o\n-  EXTRA_LIBGNAT_SRCS+=sigtramp.h sigtramp-vxworks-target.inc\n+  ifeq ($(strip $(filter-out x86_64, $(target_cpu))),)\n+     X86CPU=x86_64\n+     LIBGNAT_TARGET_PAIRS=$(X86_64_TARGET_PAIRS)\n+  else\n+     X86CPU=x86\n+     LIBGNAT_TARGET_PAIRS=$(X86_TARGET_PAIRS)\n+  endif\n \n-  LIBGNAT_TARGET_PAIRS = \\\n+  LIBGNAT_TARGET_PAIRS+= \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   i-vxwork.ads<i-vxwork-x86.ads \\\n   s-osinte.adb<s-osinte-vxworks.adb \\\n@@ -900,7 +920,9 @@ ifeq ($(strip $(filter-out %86 wrs vxworks vxworks7,$(target_cpu) $(target_vendo\n   g-socthi.adb<g-socthi-vxworks.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n   $(ATOMICS_TARGET_PAIRS) \\\n-  $(X86_TARGET_PAIRS)\n+  $(CERTMATH_TARGET_PAIRS) \\\n+  $(CERTMATH_TARGET_PAIRS_SQRT_FPU) \\\n+  $(CERTMATH_TARGET_PAIRS_X86TRA)\n \n   TOOLS_TARGET_PAIRS=\\\n   mlib-tgt-specific.adb<mlib-tgt-specific-vxworks.adb \\\n@@ -933,39 +955,39 @@ ifeq ($(strip $(filter-out %86 wrs vxworks vxworks7,$(target_cpu) $(target_vendo\n   # runtime to be called if a program is running on VxSim vs real hardware\n   # (due to differences in signal context for unwinding).\n \n-  VXSIM_CPU =\n-\n-  ifeq ($(strip $(filter-out vxworks rtp rtp-smp,$(target_os) $(THREAD_KIND))),)\n+  ifneq ($(strip $(filter-out vxworks7, $(target_os))),)\n+    ifeq ($(strip $(filter-out vxworks rtp rtp-smp,$(target_os) $(THREAD_KIND))),)\n       VXSIM_CPU = SIMPENTIUM\n-  else\n-    ifeq ($(strip $(filter-out kernel kernel-smp rtp rtp-smp,$(THREAD_KIND))),)\n-      ifeq ($(strip $(filter-out linux%,$(host_os))),)\n-        # Linux\n-        VXSIM_CPU = SIMLINUX\n-      else\n-        # Windows\n-        VXSIM_CPU = SIMNT\n+    else\n+      ifeq ($(strip $(filter-out kernel kernel-smp rtp rtp-smp,$(THREAD_KIND))),)\n+        ifeq ($(strip $(filter-out linux%,$(host_os))),)\n+          # Linux\n+          VXSIM_CPU = SIMLINUX\n+        else\n+          # Windows\n+          VXSIM_CPU = SIMNT\n+        endif\n       endif\n     endif\n-  endif\n \n-  GNATLIBCFLAGS_FOR_C := $(GNATLIBCFLAGS_FOR_C) -D__VXSIM_CPU__=$(VXSIM_CPU)\n+    GNATLIBCFLAGS_FOR_C := $(GNATLIBCFLAGS_FOR_C) -D__VXSIM_CPU__=$(VXSIM_CPU)\n+  endif\n \n   ifeq ($(strip $(filter-out rtp,$(THREAD_KIND))),)\n     # Runtime N/A for VxWorks7 (non-existent system file)\n     LIBGNAT_TARGET_PAIRS += \\\n     s-vxwext.ads<s-vxwext-rtp.ads \\\n     s-vxwext.adb<s-vxwext-rtp.adb \\\n     s-tpopsp.adb<s-tpopsp-vxworks-rtp.adb \\\n-    system.ads<$(SVX)-x86-rtp.ads\n+    system.ads<system-vxworks-x86-rtp.ads\n   else\n     ifeq ($(strip $(filter-out rtp-smp, $(THREAD_KIND))),)\n       LIBGNAT_TARGET_PAIRS += \\\n       s-mudido.adb<s-mudido-affinity.adb \\\n       s-vxwext.ads<s-vxwext-rtp.ads \\\n       s-vxwext.adb<s-vxwext-rtp-smp.adb \\\n       s-tpopsp.adb<s-tpopsp-vxworks-tls.adb \\\n-      system.ads<$(SVX)-x86-rtp-smp.ads\n+      system.ads<$(SVX)-$(X86CPU)-rtp-smp.ads\n \n       EXTRA_LIBGNAT_OBJS+=affinity.o\n     else\n@@ -976,7 +998,7 @@ ifeq ($(strip $(filter-out %86 wrs vxworks vxworks7,$(target_cpu) $(target_vendo\n         s-tpopsp.adb<s-tpopsp-vxworks-tls.adb \\\n         s-vxwext.ads<s-vxwext-kernel.ads \\\n         s-vxwext.adb<s-vxwext-kernel-smp.adb \\\n-        system.ads<$(SVX)-x86-kernel.ads\n+        system.ads<$(SVX)-$(X86CPU)-kernel.ads\n \n         EXTRA_LIBGNAT_OBJS+=affinity.o\n       else\n@@ -999,12 +1021,21 @@ ifeq ($(strip $(filter-out %86 wrs vxworks vxworks7,$(target_cpu) $(target_vendo\n       EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n     endif\n   endif\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS += \\\n+    $(CERTMATH_GNATRTL_OBJS) $(CERTMATH_GNATRTL_X86TRA_OBJS)\n   EXTRA_GNATRTL_TASKING_OBJS += s-vxwork.o s-vxwext.o\n \n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n \n+  EXTRA_LIBGNAT_OBJS+=sigtramp-vxworks.o\n+  EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n+\n+  EXTRA_ADALIB_OBJS+=$(VX_CRTBE_EXTRA_ADALIB_OBJS)\n+  EXTRA_LIBGNAT_SRCS+=vx_crtbegin.inc\n+  GCC_SPEC_FILES+=vxworks-gnat-crtbe-link.spec\n+\n   ifneq ($(strip $(filter-out vxworks7%, $(target_os))),)\n-    GCC_SPEC_FILES+=vxworks-crtbe-link.spec\n     GCC_SPEC_FILES+=vxworks-x86-link.spec\n     GCC_SPEC_FILES+=vxworks-cert-x86-link.spec\n     GCC_SPEC_FILES+=vxworks-smp-x86-link.spec\n@@ -1016,8 +1047,12 @@ ifeq ($(strip $(filter-out arm% coff wrs vx%,$(target_cpu) $(target_vendor) $(ta\n \n   ifeq ($(strip $(filter-out vxworks7%, $(target_os))),)\n      SVX=system-vxworks7\n+     EH_MECHANISM=-arm\n+     SIGTRAMP_OBJ=sigtramp-armvxworks.o\n   else\n      SVX=system-vxworks\n+     EH_MECHANISM=-gcc\n+     SIGTRAMP_OBJ=sigtramp-vxworks.o\n   endif\n \n   LIBGNAT_TARGET_PAIRS = \\\n@@ -1047,44 +1082,42 @@ ifeq ($(strip $(filter-out arm% coff wrs vx%,$(target_cpu) $(target_vendor) $(ta\n   indepsw.adb<indepsw-gnu.adb\n \n   ifeq ($(strip $(filter-out rtp-smp,$(THREAD_KIND))),)\n-    EH_MECHANISM=-gcc\n-\n     LIBGNAT_TARGET_PAIRS += \\\n     s-mudido.adb<s-mudido-affinity.adb \\\n     s-vxwext.ads<s-vxwext-rtp.ads \\\n     s-vxwext.adb<s-vxwext-rtp-smp.adb \\\n     s-tpopsp.adb<s-tpopsp-vxworks-tls.adb \\\n     system.ads<$(SVX)-arm-rtp-smp.ads\n \n-    EXTRA_LIBGNAT_OBJS+=affinity.o sigtramp-vxworks.o\n-    EXTRA_LIBGNAT_SRCS+=sigtramp.h\n+    EXTRA_LIBGNAT_OBJS+=affinity.o\n+\n+    EXTRA_LIBGNAT_OBJS+=$(SIGTRAMP_OBJ)\n+    EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n   else\n     ifeq ($(strip $(filter-out kernel-smp,$(THREAD_KIND))),)\n-      EH_MECHANISM=-gcc\n-\n       LIBGNAT_TARGET_PAIRS += \\\n       s-mudido.adb<s-mudido-affinity.adb \\\n       s-tpopsp.adb<s-tpopsp-vxworks-tls.adb \\\n       s-vxwext.ads<s-vxwext-kernel.ads \\\n       s-vxwext.adb<s-vxwext-kernel-smp.adb \\\n-      system.ads<system-vxworks-arm.ads\n+      system.ads<$(SVX)-arm.ads\n+\n+      EXTRA_LIBGNAT_OBJS+=affinity.o\n \n-      EXTRA_LIBGNAT_OBJS+=affinity.o sigtramp-vxworks.o\n-      EXTRA_LIBGNAT_SRCS+=sigtramp.h\n+      EXTRA_LIBGNAT_OBJS+=$(SIGTRAMP_OBJ)\n+      EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n     else\n       LIBGNAT_TARGET_PAIRS += \\\n       s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n-      system.ads<system-vxworks-arm.ads\n+      system.ads<$(SVX)-arm.ads\n \n       ifeq ($(strip $(filter-out kernel,$(THREAD_KIND))),)\n-        EH_MECHANISM=-gcc\n-\n         LIBGNAT_TARGET_PAIRS += \\\n         s-vxwext.ads<s-vxwext-kernel.ads \\\n         s-vxwext.adb<s-vxwext-kernel.adb\n \n-        EXTRA_LIBGNAT_OBJS+=sigtramp-vxworks.o\n-        EXTRA_LIBGNAT_SRCS+=sigtramp.h\n+        EXTRA_LIBGNAT_OBJS+=$(SIGTRAMP_OBJ)\n+        EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n       endif\n     endif\n   endif\n@@ -1094,9 +1127,14 @@ ifeq ($(strip $(filter-out arm% coff wrs vx%,$(target_cpu) $(target_vendor) $(ta\n \n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n \n-  GCC_SPEC_FILES+=vxworks-crtbe-link.spec\n-  GCC_SPEC_FILES+=vxworks-arm-link.spec\n-  GCC_SPEC_FILES+=vxworks-smp-arm-link.spec\n+  ifneq (-arm,$(EH_MECHANISM))\n+    EXTRA_ADALIB_OBJS+=$(VX_CRTBE_EXTRA_ADALIB_OBJS)\n+    EXTRA_LIBGNAT_SRCS+=vx_crtbegin.inc\n+    GCC_SPEC_FILES+=vxworks-gnat-crtbe-link.spec\n+\n+    GCC_SPEC_FILES+=vxworks-arm-link.spec\n+    GCC_SPEC_FILES+=vxworks-smp-arm-link.spec\n+  endif\n endif\n \n # MIPS VxWorks\n@@ -1138,7 +1176,10 @@ ifeq ($(strip $(filter-out mips% wrs vx%,$(target_cpu) $(target_vendor) $(target\n     s-vxwext.adb<s-vxwext-rtp-smp.adb \\\n     s-tpopsp.adb<s-tpopsp-vxworks-tls.adb\n \n-    EXTRA_LIBGNAT_OBJS+=affinity.o sigtramp-vxworks.o\n+    EXTRA_LIBGNAT_OBJS+=affinity.o\n+\n+    EXTRA_LIBGNAT_OBJS+=sigtramp-vxworks.o\n+    EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n   else\n     ifeq ($(strip $(filter-out kernel-smp,$(THREAD_KIND))),)\n       LIBGNAT_TARGET_PAIRS += \\\n@@ -1179,17 +1220,15 @@ ifeq ($(strip $(filter-out arm% linux-androideabi,$(target_cpu) $(target_os))),)\n   s-taprop.adb<s-taprop-posix.adb \\\n   s-taspri.ads<s-taspri-posix.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-  system.ads<system-linux-armel.ads \\\n-  a-exexpr.adb<a-exexpr-gcc.adb \\\n-  s-excmac.ads<s-excmac-arm.ads\n+  system.ads<system-linux-armel.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n \n   EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n-  EXTRA_LIBGNAT_OBJS+=raise-gcc.o sigtramp-armdroid.o\n-  EXTRA_GNATRTL_NONTASKING_OBJS+=g-cppexc.o s-excmac.o\n+  EXTRA_LIBGNAT_OBJS+=sigtramp-armdroid.o\n+  EXTRA_LIBGNAT_SRCS+=sigtramp.h\n   EH_MECHANISM=-arm\n   THREADSLIB =\n   GNATLIB_SHARED = gnatlib-shared-dual\n@@ -1980,18 +2019,14 @@ ifeq ($(strip $(filter-out arm% linux-gnueabi%,$(target_cpu) $(target_os))),)\n   else\n     EH_MECHANISM=-arm\n     LIBGNAT_TARGET_PAIRS += \\\n-    system.ads<system-linux-armel.ads \\\n-    a-exexpr.adb<a-exexpr-gcc.adb \\\n-    s-excmac.ads<s-excmac-arm.ads\n+    system.ads<system-linux-armel.ads\n   endif\n \n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n \n   EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n-  EXTRA_LIBGNAT_OBJS+=raise-gcc.o\n-  EXTRA_GNATRTL_NONTASKING_OBJS+=g-cppexc.o s-excmac.o\n   THREADSLIB = -lpthread\n   GNATLIB_SHARED = gnatlib-shared-dual\n   GMEM_LIB = gmemlib\n@@ -2348,6 +2383,8 @@ ifeq ($(strip $(filter-out darwin%,$(target_os))),)\n     LIBGNAT_TARGET_PAIRS += \\\n       s-intman.adb<s-intman-susv3.adb \\\n       s-osprim.adb<s-osprim-darwin.adb \\\n+      a-exetim.ads<a-exetim-default.ads \\\n+      a-exetim.adb<a-exetim-darwin.adb \\\n       $(ATOMICS_TARGET_PAIRS)\n \n     ifeq ($(strip $(MULTISUBDIR)),/i386)\n@@ -2362,6 +2399,7 @@ ifeq ($(strip $(filter-out darwin%,$(target_os))),)\n     endif\n \n     EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n+    EXTRA_GNATRTL_TASKING_OBJS=a-exetim.o\n   endif\n \n   ifeq ($(strip $(filter-out powerpc%,$(target_cpu))),)\n@@ -2401,6 +2439,8 @@ ifeq ($(strip $(filter-out darwin%,$(target_os))),)\n       $(ATOMICS_TARGET_PAIRS) \\\n       $(ATOMICS_BUILTINS_TARGET_PAIRS)\n \n+    EXTRA_LIBGNAT_OBJS+=sigtramp-ios.o\n+    EXTRA_LIBGNAT_SRCS+=sigtramp.h\n     LIBGNAT_TARGET_PAIRS += \\\n       system.ads<system-darwin-arm64.ads\n   endif\n@@ -2425,6 +2465,14 @@ ifeq ($(EH_MECHANISM),-gcc)\n   EXTRA_GNATRTL_NONTASKING_OBJS+=g-cppexc.o s-excmac.o\n endif\n \n+ifeq ($(EH_MECHANISM),-arm)\n+  LIBGNAT_TARGET_PAIRS += \\\n+    a-exexpr.adb<a-exexpr-gcc.adb \\\n+    s-excmac.ads<s-excmac-arm.ads\n+  EXTRA_LIBGNAT_OBJS+=raise-gcc.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS+=g-cppexc.o s-excmac.o\n+endif\n+\n # Use the Ada 2005 version of Ada.Exceptions by default, unless specified\n # explicitly already. The base files (a-except.ad?) are used only for building\n # the compiler and other basic tools.\n@@ -2488,7 +2536,7 @@ ADA_EXCLUDE_SRCS =\\\n   g-allein.ads g-alleve.adb g-alleve.ads g-altcon.adb g-altcon.ads \\\n   g-altive.ads g-alveop.adb g-alveop.ads g-alvety.ads g-alvevi.ads \\\n   g-intpri.ads g-regist.adb g-regist.ads g-sse.ads    g-ssvety.ads \\\n-  i-vxwoio.adb i-vxwoio.ads i-vxwork.ads \\\n+  i-vxwoio.adb i-vxwoio.ads i-vxwork.ads i-bit_types.ads \\\n   s-bb.ads     s-bbbosu.ads s-bbcaco.ads s-bbcppr.ads s-bbexti.adb \\\n   s-bbexti.ads s-bbinte.adb s-bbinte.ads s-bbprot.adb s-bbprot.ads \\\n   s-bbsle3.ads s-bbsuer.ads s-bbsule.ads s-bbthqu.adb s-bbthqu.ads \\\n@@ -2499,8 +2547,8 @@ ADA_EXCLUDE_SRCS =\\\n   s-init.ads   s-init.adb   s-linux.ads  s-macres.ads \\\n   s-memcom.adb s-memcom.ads s-memmov.adb s-memmov.ads s-memset.adb \\\n   s-memset.ads s-mufalo.adb s-mufalo.ads s-musplo.adb s-musplo.ads \\\n-  s-sopco3.adb s-sopco3.ads s-sopco4.adb s-sopco4.ads \\\n-  s-sopco5.adb s-sopco5.ads s-stache.adb s-stache.ads \\\n+  s-sam4.ads   s-sopco3.adb s-sopco3.ads s-sopco4.adb s-sopco4.ads \\\n+  s-sopco5.adb s-sopco5.ads s-stache.adb s-stache.ads s-stm32.ads \\\n   s-strcom.adb s-strcom.ads s-thread.ads \\\n   s-vxwexc.adb s-vxwexc.ads s-vxwext.adb s-vxwext.ads \\\n   s-win32.ads  s-winext.ads\n@@ -2686,7 +2734,7 @@ install-gnatlib: ../stamp-gnatlib-$(RTSDIR) install-gcc-specs\n \t    $(INSTALL_DATA) $$file $(DESTDIR)$(ADA_RTL_OBJ_DIR); \\\n \t    $(RANLIB_FOR_TARGET) $(DESTDIR)$(ADA_RTL_OBJ_DIR)/$$file; \\\n \tdone\n-\t-$(foreach file, $(EXTRA_ADALIB_FILES), \\\n+\t-$(foreach file, $(EXTRA_ADALIB_OBJS), \\\n \t    $(INSTALL_DATA_DATE) $(RTSDIR)/$(file) $(DESTDIR)$(ADA_RTL_OBJ_DIR) && \\\n \t) true\n #     Install the shared libraries, if any, using $(INSTALL) instead\n@@ -2803,7 +2851,7 @@ gnatlib: ../stamp-gnatlib1-$(RTSDIR) ../stamp-gnatlib2-$(RTSDIR) $(RTSDIR)/s-osc\n                 CFLAGS=\"$(GNATLIBCFLAGS_FOR_C)\" \\\n \t        FORCE_DEBUG_ADAFLAGS=\"$(FORCE_DEBUG_ADAFLAGS)\" \\\n \t\tsrcdir=$(fsrcdir) \\\n-\t        -f ../Makefile $(LIBGNAT_OBJS)\n+\t        -f ../Makefile $(LIBGNAT_OBJS) $(EXTRA_ADALIB_OBJS)\n # Ada files\n \t$(MAKE) -C $(RTSDIR) \\\n \t\tCC=\"`echo \\\"$(GCC_FOR_TARGET)\\\" \\\n@@ -2858,6 +2906,16 @@ gnatlib-shared-default:\n \tcd $(RTSDIR); $(LN_S) libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\tlibgnarl$(soext)\n \n+\t# Create static libgnat and libgnarl compiled with -fPIC\n+\t$(RM) $(RTSDIR)/libgnat_pic$(arext) $(RTSDIR)/libgnarl_pic$(arext)\n+\t$(AR_FOR_TARGET) $(AR_FLAGS) $(RTSDIR)/libgnat_pic$(arext) \\\n+\t   $(addprefix $(RTSDIR)/,$(GNATRTL_NONTASKING_OBJS) $(LIBGNAT_OBJS))\n+\t$(RANLIB_FOR_TARGET) $(RTSDIR)/libgnat_pic$(arext)\n+\t$(AR_FOR_TARGET) $(AR_FLAGS) $(RTSDIR)/libgnarl_pic$(arext) \\\n+\t   $(addprefix $(RTSDIR)/,$(GNATRTL_TASKING_OBJS))\n+\t$(RANLIB_FOR_TARGET) $(RTSDIR)/libgnarl_pic$(arext)\n+\n+\n gnatlib-shared-dual:\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n              GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n@@ -2867,6 +2925,8 @@ gnatlib-shared-dual:\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n              gnatlib-shared-default\n \t$(MV) $(RTSDIR)/libgna*$(soext) .\n+\t$(MV) $(RTSDIR)/libgnat_pic$(arext) .\n+\t$(MV) $(RTSDIR)/libgnarl_pic$(arext) .\n \t$(RM) ../stamp-gnatlib2-$(RTSDIR)\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n              GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n@@ -2876,6 +2936,8 @@ gnatlib-shared-dual:\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n              gnatlib\n \t$(MV) libgna*$(soext) $(RTSDIR)\n+\t$(MV) libgnat_pic$(arext) $(RTSDIR)\n+\t$(MV) libgnarl_pic$(arext) $(RTSDIR)\n \n gnatlib-shared-dual-win32:\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n@@ -2910,6 +2972,8 @@ gnatlib-shared-win32:\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n              gnatlib\n \t$(RM) $(RTSDIR)/libgna*$(soext)\n+\t$(CP) $(RTSDIR)/libgnat$(arext) $(RTSDIR)/libgnat_pic$(arext)\n+\t$(CP) $(RTSDIR)/libgnarl$(arext) $(RTSDIR)/libgnarl_pic$(arext)\n \tcd $(RTSDIR); `echo \"$(GCC_FOR_TARGET)\" \\\n                 | sed -e 's,\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'` -shared -shared-libgcc \\\n \t\t$(PICFLAG_FOR_TARGET) \\\n@@ -3106,8 +3170,10 @@ socket.o  : socket.c gsocket.h\n sysdep.o  : sysdep.c\n raise.o   : raise.c raise.h\n sigtramp-armdroid.o      : sigtramp-armdroid.c sigtramp.h\n-sigtramp-vxworks.o       : sigtramp-vxworks.c sigtramp.h sigtramp-vxworks-target.inc\n-sigtramp-vxworks-vxsim.o : sigtramp-vxworks-vxsim.c sigtramp.h sigtramp-vxworks-target.inc\n+sigtramp-armvxworks.o    : sigtramp-armvxworks.c sigtramp.h\n+sigtramp-ios.o           : sigtramp-ios.c sigtramp.h\n+sigtramp-vxworks.o       : sigtramp-vxworks.c $(VX_SIGTRAMP_EXTRA_SRCS)\n+sigtramp-vxworks-vxsim.o : sigtramp-vxworks-vxsim.c $(VX_SIGTRAMP_EXTRA_SRCS)\n terminals.o : terminals.c\n vx_stack_info.o : vx_stack_info.c\n \n@@ -3124,6 +3190,21 @@ init.o    : init.c adaint.h raise.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n+vx_crtbegin.o : vx_crtbegin.c vx_crtbegin.inc\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n+\t\t -iquote $(srcdir) -iquote $(ftop_srcdir)/libgcc \\\n+\t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n+\n+vx_crtbegin_auto.o : vx_crtbegin_auto.c vx_crtbegin.inc\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n+\t\t -iquote $(srcdir) -iquote $(ftop_srcdir)/libgcc \\\n+\t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n+\n+vx_crtend.o : vx_crtend.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n+\t\t -iquote $(srcdir) -iquote $(ftop_srcdir)/libgcc \\\n+\t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n+\n init-vxsim.o : init-vxsim.c\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)"}]}