{"sha": "05402ca65a6696a8f20a3dbcb18f47ba3bdfa268", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU0MDJjYTY1YTY2OTZhOGYyMGEzZGJjYjE4ZjQ3YmEzYmRmYTI2OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-02-13T15:08:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-02-13T15:08:29Z"}, "message": "passes: Enable split4 with selective scheduling 2 [PR98439]\n\nAs mentioned in the PR, we have 5 split passes (+ splitting during final).\nsplit1 is before RA and is unconditional,\nsplit2 is after RA and is gated on optimize > 0,\nsplit3 is before sched2 and is gated on\n  defined(INSN_SCHEDULING) && optimize > 0 && flag_schedule_insns_after_reload\nsplit4 is before regstack and is gated on\n  HAVE_ATTR_length && defined (STACK_REGS) && !gate (split3)\nsplit5 is before shorten_branches and is gated on\n  HAVE_ATTR_length && !defined (STACK_REGS)\nand the splitting during final works only when !HAVE_ATTR_length.\nSTACK_REGS is a macro enabled only on i386/x86_64.\n\nThe problem with the following testcase is that split3 before sched2\nis the last splitting pass for the target/command line options set,\nbut selective scheduling unlike normal scheduling can create new\ninstructions that need to be split, which means we ICE during final as\nthere are insns that require splitting but nothing split them.\n\nThis patch fixes it by doing split4 also when -fselective-scheduling2\nis enabled on x86 and split3 has been run.  As that option isn't on\nby default, it should slow down compilation only for those that enable\nthat option.\n\n2021-02-13  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/98439\n\t* recog.c (pass_split_before_regstack::gate): Enable even when\n\tpass_split_before_sched2 is enabled if -fselective-scheduling2 is\n\ton.\n\n\t* gcc.target/i386/pr98439.c: New test.", "tree": {"sha": "21e3c50b311a119d118cbc9032b206707afb9b1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21e3c50b311a119d118cbc9032b206707afb9b1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05402ca65a6696a8f20a3dbcb18f47ba3bdfa268", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05402ca65a6696a8f20a3dbcb18f47ba3bdfa268", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05402ca65a6696a8f20a3dbcb18f47ba3bdfa268", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05402ca65a6696a8f20a3dbcb18f47ba3bdfa268/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3b38b7781622babb5ca68c621367770a65012fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b38b7781622babb5ca68c621367770a65012fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3b38b7781622babb5ca68c621367770a65012fa"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "abbc49f3f9b8da3facb4bec835a209e2c1224d70", "filename": "gcc/recog.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05402ca65a6696a8f20a3dbcb18f47ba3bdfa268/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05402ca65a6696a8f20a3dbcb18f47ba3bdfa268/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=05402ca65a6696a8f20a3dbcb18f47ba3bdfa268", "patch": "@@ -4532,8 +4532,13 @@ pass_split_before_regstack::gate (function *)\n   /* If flow2 creates new instructions which need splitting\n      and scheduling after reload is not done, they might not be\n      split until final which doesn't allow splitting\n-     if HAVE_ATTR_length.  */\n+     if HAVE_ATTR_length.  Selective scheduling can result in\n+     further instructions that need splitting.  */\n+#ifdef INSN_SCHEDULING\n+  return !enable_split_before_sched2 () || flag_selective_scheduling2;\n+#else\n   return !enable_split_before_sched2 ();\n+#endif\n #else\n   return false;\n #endif"}, {"sha": "02fc40abd4d2b2aa0728abf630687b706fb355ba", "filename": "gcc/testsuite/gcc.target/i386/pr98439.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05402ca65a6696a8f20a3dbcb18f47ba3bdfa268/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98439.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05402ca65a6696a8f20a3dbcb18f47ba3bdfa268/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98439.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98439.c?ref=05402ca65a6696a8f20a3dbcb18f47ba3bdfa268", "patch": "@@ -0,0 +1,12 @@\n+/* PR rtl-optimization/98439 */\n+/* { dg-do compile } */\n+/* { dg-options \"-march=nehalem -O2 -fselective-scheduling2 -fno-cprop-registers\" } */\n+\n+int v;\n+int bar (int, int, int, int, int, int, int);\n+\n+int\n+foo (void)\n+{\n+  return bar (0, 0, 0, 0, 0, 0, v > 0 ? v : 0);\n+}"}]}