{"sha": "2d1a1007a08a449f45c830d78e955ed9bb2a23ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQxYTEwMDdhMDhhNDQ5ZjQ1YzgzMGQ3OGU5NTVlZDliYjJhMjNjYQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "andrew_pinski@playstation.sony.com", "date": "2007-07-04T04:39:26Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2007-07-04T04:39:26Z"}, "message": "tree-ssa-loop-ivopts.c (strip_offset_1): Treat POINTER_PLUS_EXPR like PLUS_EXPR.\n\n2007-07-03  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n        * tree-ssa-loop-ivopts.c (strip_offset_1): Treat POINTER_PLUS_EXPR\n        like PLUS_EXPR.\n        (rewrite_use_nonlinear_expr): Likewise.\n\nFrom-SVN: r126298", "tree": {"sha": "236f463bef02f6702038ffc5f6ea1966a3010bf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/236f463bef02f6702038ffc5f6ea1966a3010bf5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d1a1007a08a449f45c830d78e955ed9bb2a23ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d1a1007a08a449f45c830d78e955ed9bb2a23ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d1a1007a08a449f45c830d78e955ed9bb2a23ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d1a1007a08a449f45c830d78e955ed9bb2a23ca/comments", "author": null, "committer": null, "parents": [{"sha": "cc0ca512037ada71ad22dc1da54fa9fd79b11fca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc0ca512037ada71ad22dc1da54fa9fd79b11fca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc0ca512037ada71ad22dc1da54fa9fd79b11fca"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "dc785cb7d895b159259a3e58eedb42181c7f8366", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1a1007a08a449f45c830d78e955ed9bb2a23ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1a1007a08a449f45c830d78e955ed9bb2a23ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d1a1007a08a449f45c830d78e955ed9bb2a23ca", "patch": "@@ -1,3 +1,9 @@\n+2007-07-03  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\t* tree-ssa-loop-ivopts.c (strip_offset_1): Treat POINTER_PLUS_EXPR\n+\tlike PLUS_EXPR.\n+\t(rewrite_use_nonlinear_expr): Likewise.\n+\n 2007-07-03  Seongbae Park  <seongbae.park@gmail.com>\n \n \t* rtl.def (UNSPEC, USE, CLOBBER): More comments."}, {"sha": "f99a6ebf9901f961c3ee7909d2bbd936fb3482e7", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1a1007a08a449f45c830d78e955ed9bb2a23ca/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1a1007a08a449f45c830d78e955ed9bb2a23ca/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=2d1a1007a08a449f45c830d78e955ed9bb2a23ca", "patch": "@@ -1759,6 +1759,7 @@ strip_offset_1 (tree expr, bool inside_addr, bool top_compref,\n       *offset = int_cst_value (expr);\n       return build_int_cst (orig_type, 0);\n \n+    case POINTER_PLUS_EXPR:\n     case PLUS_EXPR:\n     case MINUS_EXPR:\n       op0 = TREE_OPERAND (expr, 0);\n@@ -1767,7 +1768,7 @@ strip_offset_1 (tree expr, bool inside_addr, bool top_compref,\n       op0 = strip_offset_1 (op0, false, false, &off0);\n       op1 = strip_offset_1 (op1, false, false, &off1);\n \n-      *offset = (code == PLUS_EXPR ? off0 + off1 : off0 - off1);\n+      *offset = (code == MINUS_EXPR ? off0 - off1 : off0 + off1);\n       if (op0 == TREE_OPERAND (expr, 0)\n \t  && op1 == TREE_OPERAND (expr, 1))\n \treturn orig_expr;\n@@ -1776,10 +1777,10 @@ strip_offset_1 (tree expr, bool inside_addr, bool top_compref,\n \texpr = op0;\n       else if (integer_zerop (op0))\n \t{\n-\t  if (code == PLUS_EXPR)\n-\t    expr = op1;\n-\t  else\n+\t  if (code == MINUS_EXPR)\n \t    expr = fold_build1 (NEGATE_EXPR, type, op1);\n+\t  else\n+\t    expr = op1;\n \t}\n       else\n \texpr = fold_build2 (code, type, op0, op1);\n@@ -4893,11 +4894,12 @@ rewrite_use_nonlinear_expr (struct ivopts_data *data,\n \t thus leading to ICE.  */\n       op = GIMPLE_STMT_OPERAND (use->stmt, 1);\n       if (TREE_CODE (op) == PLUS_EXPR\n-\t  || TREE_CODE (op) == MINUS_EXPR)\n+\t  || TREE_CODE (op) == MINUS_EXPR\n+\t  || TREE_CODE (op) == POINTER_PLUS_EXPR)\n \t{\n \t  if (TREE_OPERAND (op, 0) == cand->var_before)\n \t    op = TREE_OPERAND (op, 1);\n-\t  else if (TREE_CODE (op) == PLUS_EXPR\n+\t  else if (TREE_CODE (op) != MINUS_EXPR\n \t\t   && TREE_OPERAND (op, 1) == cand->var_before)\n \t    op = TREE_OPERAND (op, 0);\n \t  else"}]}