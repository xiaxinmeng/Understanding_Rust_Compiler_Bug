{"sha": "32c5cac2a5b73cc2ad5e8017ffc21c1f4da00025", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJjNWNhYzJhNWI3M2NjMmFkNWU4MDE3ZmZjMjFjMWY0ZGEwMDAyNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-21T16:18:56Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-21T16:18:56Z"}, "message": "(PROMOTE_FUNCTION_ARGS, PROMOTE_FUNCTION_RETURN): Define.\n\nFrom-SVN: r10260", "tree": {"sha": "f6ccf778f407fa3b87f51afda116c727608649c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6ccf778f407fa3b87f51afda116c727608649c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32c5cac2a5b73cc2ad5e8017ffc21c1f4da00025", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32c5cac2a5b73cc2ad5e8017ffc21c1f4da00025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32c5cac2a5b73cc2ad5e8017ffc21c1f4da00025", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32c5cac2a5b73cc2ad5e8017ffc21c1f4da00025/comments", "author": null, "committer": null, "parents": [{"sha": "46d81ffa4acfe8c6ae8a2701b1458d95a403dac8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46d81ffa4acfe8c6ae8a2701b1458d95a403dac8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46d81ffa4acfe8c6ae8a2701b1458d95a403dac8"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "6c37a996b2b7b95c1487928006d1913ad063e60e", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32c5cac2a5b73cc2ad5e8017ffc21c1f4da00025/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32c5cac2a5b73cc2ad5e8017ffc21c1f4da00025/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=32c5cac2a5b73cc2ad5e8017ffc21c1f4da00025", "patch": "@@ -1430,10 +1430,12 @@ extern int pragma_interrupt;\n       && GET_MODE_SIZE (MODE) < UNITS_PER_WORD)\t\t\\\n     MODE = SImode;\n \n-/* PROMOTE_FUNCTION_ARGS and PROMOTE_FUNCTION_RETURN appear to have no\n-   effect, because all unprototyped char/shorts are already promoted to\n-   int, and because PROMOTE_PROTOTYPES causes all prototypes char/shorts\n-   to be promoted to it.  */\n+/* Defining PROMOTE_FUNCTION_ARGS eliminates some unnecessary zero/sign\n+   extensions applied to char/short functions arguments.  Defining\n+   PROMOTE_FUNCTION_RETURN does the same for function returns.  */\n+\n+#define PROMOTE_FUNCTION_ARGS\n+#define PROMOTE_FUNCTION_RETURN\n \n /* ??? Define ACCUMULATE_OUTGOING_ARGS?  This is more efficient than pushing\n    and poping arguments.  However, we do have push/pop instructions, and"}]}