{"sha": "12877f09db217202ba7105136a6b944425295ff5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI4NzdmMDlkYjIxNzIwMmJhNzEwNTEzNmE2Yjk0NDQyNTI5NWZmNQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2002-05-12T00:01:54Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2002-05-12T00:01:54Z"}, "message": "pa32-regs.h (HARD_REGNO_MODE_OK): Revise sets of general registers used for DImode and TImode.\n\n\t* pa/pa32-regs.h (HARD_REGNO_MODE_OK): Revise sets of general registers\n\tused for DImode and TImode.\n\nFrom-SVN: r53387", "tree": {"sha": "ceb4fe308949f01c063a9f63f510ed81892a8c17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ceb4fe308949f01c063a9f63f510ed81892a8c17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12877f09db217202ba7105136a6b944425295ff5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12877f09db217202ba7105136a6b944425295ff5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12877f09db217202ba7105136a6b944425295ff5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12877f09db217202ba7105136a6b944425295ff5/comments", "author": null, "committer": null, "parents": [{"sha": "387f9e323b1b61d355b3ee6a0d843e26d21bf2de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/387f9e323b1b61d355b3ee6a0d843e26d21bf2de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/387f9e323b1b61d355b3ee6a0d843e26d21bf2de"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "d02a3a542de8bb4e4289631e32cfb3b18465035e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12877f09db217202ba7105136a6b944425295ff5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12877f09db217202ba7105136a6b944425295ff5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12877f09db217202ba7105136a6b944425295ff5", "patch": "@@ -1,3 +1,8 @@\n+2002-05-11  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* pa/pa32-regs.h (HARD_REGNO_MODE_OK): Revise sets of general registers\n+\tused for DImode and TImode.\n+\n 2002-05-11  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cpplex.c (_cpp_lex_direct): When in a directive at EOF"}, {"sha": "19553c95f38d34e1610e823e5a3d38b9b10483a8", "filename": "gcc/config/pa/pa32-regs.h", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12877f09db217202ba7105136a6b944425295ff5/gcc%2Fconfig%2Fpa%2Fpa32-regs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12877f09db217202ba7105136a6b944425295ff5/gcc%2Fconfig%2Fpa%2Fpa32-regs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa32-regs.h?ref=12877f09db217202ba7105136a6b944425295ff5", "patch": "@@ -164,18 +164,23 @@\n    : ((GET_MODE_SIZE (MODE) + UNITS_PER_WORD - 1) / UNITS_PER_WORD))\n \n /* Value is 1 if hard register REGNO can hold a value of machine-mode MODE.\n-   On the HP-PA, the cpu registers can hold any mode.  We\n-   force this to be an even register is it cannot hold the full mode.  */\n+   On the HP-PA, the cpu registers can hold any mode.  For DImode, we\n+   choose a set of general register that includes the incoming arguments\n+   and the return value.  We specify a set with no overlaps so that we don't\n+   have to specify that the destination register in patterns using this mode\n+   is an early clobber.  */\n #define HARD_REGNO_MODE_OK(REGNO, MODE) \\\n   ((REGNO) == 0 ? (MODE) == CCmode || (MODE) == CCFPmode\t\t\\\n    /* On 1.0 machines, don't allow wide non-fp modes in fp regs.  */\t\\\n    : !TARGET_PA_11 && FP_REGNO_P (REGNO)\t\t\t\t\\\n      ? GET_MODE_SIZE (MODE) <= 4 || GET_MODE_CLASS (MODE) == MODE_FLOAT\t\\\n    : FP_REGNO_P (REGNO)\t\t\t\t\t\t\t\\\n      ? GET_MODE_SIZE (MODE) <= 4 || ((REGNO) & 1) == 0\t\t\t\\\n-   /* Make wide modes be in aligned registers.  */\t\t\t\\\n    : (GET_MODE_SIZE (MODE) <= UNITS_PER_WORD\t\t\t\t\\\n-      || (GET_MODE_SIZE (MODE) <= 4 * UNITS_PER_WORD && ((REGNO) & 1) == 0)))\n+      || (GET_MODE_SIZE (MODE) == 2 * UNITS_PER_WORD\t\t\t\\\n+\t  && ((((REGNO) & 1) == 1 && (REGNO) <= 25) || (REGNO) == 28))\t\\\n+      || (GET_MODE_SIZE (MODE) == 4 * UNITS_PER_WORD\t\t\t\\\n+\t  && (((REGNO) & 3) == 3 && (REGNO) <= 23))))\n \n /* How to renumber registers for dbx and gdb.\n "}]}