{"sha": "c586d12794533da0614e70b7d17cd01ab8ebf049", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU4NmQxMjc5NDUzM2RhMDYxNGU3MGI3ZDE3Y2QwMWFiOGViZjA0OQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-10-18T17:51:47Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-10-18T17:51:47Z"}, "message": "Security.java (loadProviders): Removed unused `pname' variable.\n\n\t* java/security/Security.java (loadProviders): Removed unused\n\t`pname' variable.  Don't create `File' object.  Don't update\n\t`providerCount'.\n\t(providerCount): Removed.\n\t(insertProviderAt): Don't use `providerCount'.\n\t(addProvider(Provider,int)): Likewise.\n\t(removeProvider): Likewise.\n\t(addProvider(Provider)): Rewrote.\n\t(getProviders): Rewrote.\n\t(getProvider): Don't use `providerCount'.\n\nFrom-SVN: r46332", "tree": {"sha": "7e68460c1cc2f879087bb6b55871dcd3bedee149", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e68460c1cc2f879087bb6b55871dcd3bedee149"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c586d12794533da0614e70b7d17cd01ab8ebf049", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c586d12794533da0614e70b7d17cd01ab8ebf049", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c586d12794533da0614e70b7d17cd01ab8ebf049", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c586d12794533da0614e70b7d17cd01ab8ebf049/comments", "author": null, "committer": null, "parents": [{"sha": "bf911a9a73fcb85470695f17360b0d9df24a59b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf911a9a73fcb85470695f17360b0d9df24a59b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf911a9a73fcb85470695f17360b0d9df24a59b5"}], "stats": {"total": 65, "additions": 27, "deletions": 38}, "files": [{"sha": "1fd3a3331ab6f08510c11e45e14e922165cda880", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c586d12794533da0614e70b7d17cd01ab8ebf049/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c586d12794533da0614e70b7d17cd01ab8ebf049/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c586d12794533da0614e70b7d17cd01ab8ebf049", "patch": "@@ -1,3 +1,16 @@\n+2001-10-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/security/Security.java (loadProviders): Removed unused\n+\t`pname' variable.  Don't create `File' object.  Don't update\n+\t`providerCount'.\n+\t(providerCount): Removed.\n+\t(insertProviderAt): Don't use `providerCount'.\n+\t(addProvider(Provider,int)): Likewise.\n+\t(removeProvider): Likewise.\n+\t(addProvider(Provider)): Rewrote.\n+\t(getProviders): Rewrote.\n+\t(getProvider): Don't use `providerCount'.\n+\n 2001-10-17  Tom Tromey  <tromey@redhat.com>\n \n \t* gnu/java/security/provider/SHA1PRNG.java (engineNextBytes):"}, {"sha": "eba476d381b6eadba925bb632a883351a017b0d8", "filename": "libjava/java/security/Security.java", "status": "modified", "additions": 14, "deletions": 38, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c586d12794533da0614e70b7d17cd01ab8ebf049/libjava%2Fjava%2Fsecurity%2FSecurity.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c586d12794533da0614e70b7d17cd01ab8ebf049/libjava%2Fjava%2Fsecurity%2FSecurity.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSecurity.java?ref=c586d12794533da0614e70b7d17cd01ab8ebf049", "patch": "@@ -44,7 +44,6 @@ interface to security properties.\n public final class Security extends Object\n {\n   private static Vector providers = new Vector();\n-  private static int providerCount = 0;\n   private static Properties secprops;\n \n   static\n@@ -69,17 +68,14 @@ private static void loadProviders(String vendor)\n \t\t\t separator + \"security\" +\n \t\t\t separator + vendor + \".security\");\n \n-    providerCount = 0;\n     try\n       {\n-\tFile secFile = new File(secfilestr);\n-\tFileInputStream fin = new FileInputStream(secFile);\n+\tFileInputStream fin = new FileInputStream(secfilestr);\n \tsecprops = new Properties();\n \tsecprops.load(fin);\n \n \tint i = 1;\n \tString name;\n-\tStringBuffer pname = new StringBuffer(\"security.provider.\");\n \n \twhile ((name = secprops.getProperty(\"security.provider.\" + i++)) !=\n \t       null)\n@@ -89,7 +85,6 @@ private static void loadProviders(String vendor)\n \t    try\n \t      {\n \t\tproviders.addElement(Class.forName(name).newInstance());\n-\t\tproviderCount++;\n \t\ti++;\n \t      }\n \t    catch (ClassNotFoundException x)\n@@ -162,20 +157,20 @@ public static int insertProviderAt(Provider provider, int position)\n     if (sm != null)\n       sm.checkSecurityAccess(\"insertProvider.\" + provider.getName());\n \n-    for (int i = 0; i < providerCount; i++)\n+    int max = providers.size ();\n+    for (int i = 0; i < max; i++)\n       {\n \tif (((Provider) providers.elementAt(i)).getName() ==\n \t    provider.getName())\n \t  return -1;\n       }\n \n     if (position < 0)\n-        position = 0;\n-    if (position > providerCount)\n-      position = providerCount;\n+      position = 0;\n+    if (position > max)\n+      position = max;\n \n     providers.insertElementAt(provider, position);\n-    providerCount++;\n \n     return position;\n   }\n@@ -199,22 +194,7 @@ public static int insertProviderAt(Provider provider, int position)\n    */\n   public static int addProvider(Provider provider)\n   {\n-    SecurityManager sm = System.getSecurityManager();\n-\n-    if (sm != null)\n-      sm.checkSecurityAccess(\"insertProvider.\" + provider.getName());\n-\n-    for (int i = 0; i < providerCount; i++)\n-      {\n-\tif (((Provider) providers.elementAt(i)).getName() ==\n-\t    provider.getName())\n-\t  return -1;\n-      }\n-\n-    providers.addElement(provider);\n-    providerCount++;\n-\n-    return providerCount - 1;\n+    return insertProviderAt (provider, providers.size ());\n   }\n \n   /**\n@@ -238,19 +218,15 @@ public static void removeProvider(String name)\n       sm.checkSecurityAccess(\"removeProvider.\" + name);\n \n     Provider p = null;\n-    for (int i = 0; i < providerCount; i++)\n+    int max = providers.size ();\n+    for (int i = 0; i < max; i++)\n       {\n \tif (((Provider) providers.elementAt(i)).getName() == name)\n \t  {\n-\t    p = (Provider) providers.elementAt(i);\n+\t    providers.remove(i);\n \t    break;\n \t  }\n       }\n-\n-    if (p != null)\n-      if (providers.removeElement(p))\n-\t  providerCount--;\n-\n   }\n \n   /**\n@@ -261,9 +237,8 @@ public static void removeProvider(String name)\n    */\n   public static Provider[] getProviders()\n   {\n-    Provider array[] = new Provider[providerCount];\n-    for (int i = 0; i < providerCount; i++)\n-      array[i] = (Provider) providers.elementAt(i);\n+    Provider array[] = new Provider[providers.size ()];\n+    providers.copyInto (array);\n     return array;\n   }\n \n@@ -278,7 +253,8 @@ public static Provider[] getProviders()\n   public static Provider getProvider(String name)\n   {\n     Provider p = null;\n-    for (int i = 0; i < providerCount; i++)\n+    int max = providers.size ();\n+    for (int i = 0; i < max; i++)\n       {\n \tp = (Provider) providers.elementAt(i);\n \tif (p.getName() == name)"}]}