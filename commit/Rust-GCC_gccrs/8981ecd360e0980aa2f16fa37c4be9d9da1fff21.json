{"sha": "8981ecd360e0980aa2f16fa37c4be9d9da1fff21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk4MWVjZDM2MGUwOTgwYWEyZjE2ZmEzN2M0YmU5ZDlkYTFmZmYyMQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-18T22:12:59Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-18T22:12:59Z"}, "message": "h8300-protos.h: Add a prototype for h8300_expand_branch.\n\n\t* config/h8300/h8300-protos.h: Add a prototype for\n\th8300_expand_branch.\n\t* config/h8300/h8300.c (h8300_expand_branch): New.\n\t* config/h8300/h8300.md (ble, bleu, bge, bgeu, blt, bltu, bgt,\n\tbgtu, beq, bne): Call h8300_expand_branch().\n\nFrom-SVN: r78052", "tree": {"sha": "d4030985d9c2416412f28e8e10ee1ec46b9f3ab5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4030985d9c2416412f28e8e10ee1ec46b9f3ab5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8981ecd360e0980aa2f16fa37c4be9d9da1fff21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8981ecd360e0980aa2f16fa37c4be9d9da1fff21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8981ecd360e0980aa2f16fa37c4be9d9da1fff21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8981ecd360e0980aa2f16fa37c4be9d9da1fff21/comments", "author": null, "committer": null, "parents": [{"sha": "07ee3b586d70c3596f1cf284b7154024ed27aeb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07ee3b586d70c3596f1cf284b7154024ed27aeb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07ee3b586d70c3596f1cf284b7154024ed27aeb6"}], "stats": {"total": 103, "additions": 43, "deletions": 60}, "files": [{"sha": "8face630335fdd39bc7210ddb9cdd40d930f9594", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8981ecd360e0980aa2f16fa37c4be9d9da1fff21/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8981ecd360e0980aa2f16fa37c4be9d9da1fff21/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8981ecd360e0980aa2f16fa37c4be9d9da1fff21", "patch": "@@ -1,3 +1,11 @@\n+2004-02-18  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300-protos.h: Add a prototype for\n+\th8300_expand_branch.\n+\t* config/h8300/h8300.c (h8300_expand_branch): New.\n+\t* config/h8300/h8300.md (ble, bleu, bge, bgeu, blt, bltu, bgt,\n+\tbgtu, beq, bne): Call h8300_expand_branch().\n+\n 2004-02-18  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300-protos.h: Add prototypes for"}, {"sha": "7ad2df861cdc8d1c9c0b9147c5d1ba367906840f", "filename": "gcc/config/h8300/h8300-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8981ecd360e0980aa2f16fa37c4be9d9da1fff21/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8981ecd360e0980aa2f16fa37c4be9d9da1fff21/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h?ref=8981ecd360e0980aa2f16fa37c4be9d9da1fff21", "patch": "@@ -45,6 +45,7 @@ extern const char *output_logical_op (enum machine_mode, rtx *);\n extern unsigned int compute_logical_op_length (enum machine_mode,\n \t\t\t\t\t       rtx *);\n extern int compute_logical_op_cc (enum machine_mode, rtx *);\n+extern void h8300_expand_branch (enum rtx_code, rtx);\n extern void expand_a_shift (enum machine_mode, int, rtx[]);\n extern int h8300_shift_needs_scratch_p (int, enum machine_mode);\n extern int expand_a_rotate (rtx[]);"}, {"sha": "ad509558dbaa25bc41c56c8984b134c2d68fdb0e", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8981ecd360e0980aa2f16fa37c4be9d9da1fff21/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8981ecd360e0980aa2f16fa37c4be9d9da1fff21/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=8981ecd360e0980aa2f16fa37c4be9d9da1fff21", "patch": "@@ -2675,6 +2675,20 @@ compute_logical_op_cc (enum machine_mode mode, rtx *operands)\n   return cc;\n }\n \f\n+/* Expand a conditional branch.  */\n+\n+void\n+h8300_expand_branch (enum rtx_code code, rtx label)\n+{\n+  rtx tmp;\n+\n+  tmp = gen_rtx_fmt_ee (code, VOIDmode, cc0_rtx, const0_rtx);\n+  tmp = gen_rtx_IF_THEN_ELSE (VOIDmode, tmp,\n+\t\t\t      gen_rtx_LABEL_REF (VOIDmode, label),\n+\t\t\t      pc_rtx);\n+  emit_jump_insn (gen_rtx_SET (VOIDmode, pc_rtx, tmp));\n+}\n+\f\n /* Shifts.\n \n    We devote a fair bit of code to getting efficient shifts since we"}, {"sha": "25462cfc1bd512027c3869027c3db4a37ab70474", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 20, "deletions": 60, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8981ecd360e0980aa2f16fa37c4be9d9da1fff21/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8981ecd360e0980aa2f16fa37c4be9d9da1fff21/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=8981ecd360e0980aa2f16fa37c4be9d9da1fff21", "patch": "@@ -1566,94 +1566,54 @@\n ;; Conditional jump instructions\n \n (define_expand \"ble\"\n-  [(set (pc)\n-\t(if_then_else (le (cc0)\n-\t\t\t  (const_int 0))\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))\n-\t\t      (pc)))]\n+  [(match_operand 0 \"\" \"\")]\n   \"\"\n-  \"\")\n+  \"h8300_expand_branch (LE, operands[0]); DONE;\")\n \n (define_expand \"bleu\"\n-  [(set (pc)\n-\t(if_then_else (leu (cc0)\n-\t\t\t   (const_int 0))\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))\n-\t\t      (pc)))]\n+  [(match_operand 0 \"\" \"\")]\n   \"\"\n-  \"\")\n+  \"h8300_expand_branch (LEU, operands[0]); DONE;\")\n \n (define_expand \"bge\"\n-  [(set (pc)\n-\t(if_then_else (ge (cc0)\n-\t\t\t  (const_int 0))\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))\n-\t\t      (pc)))]\n+  [(match_operand 0 \"\" \"\")]\n   \"\"\n-  \"\")\n+  \"h8300_expand_branch (GE, operands[0]); DONE;\")\n \n (define_expand \"bgeu\"\n-  [(set (pc)\n-\t(if_then_else (geu (cc0)\n-\t\t\t   (const_int 0))\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))\n-\t\t      (pc)))]\n+  [(match_operand 0 \"\" \"\")]\n   \"\"\n-  \"\")\n+  \"h8300_expand_branch (GEU, operands[0]); DONE;\")\n \n (define_expand \"blt\"\n-  [(set (pc)\n-\t(if_then_else (lt (cc0)\n-\t\t\t  (const_int 0))\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))\n-\t\t      (pc)))]\n+  [(match_operand 0 \"\" \"\")]\n   \"\"\n-  \"\")\n+  \"h8300_expand_branch (LT, operands[0]); DONE;\")\n \n (define_expand \"bltu\"\n-  [(set (pc)\n-\t(if_then_else (ltu (cc0)\n-\t\t\t   (const_int 0))\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))\n-\t\t      (pc)))]\n+  [(match_operand 0 \"\" \"\")]\n   \"\"\n-  \"\")\n+  \"h8300_expand_branch (LTU, operands[0]); DONE;\")\n \n (define_expand \"bgt\"\n-  [(set (pc)\n-\t(if_then_else (gt (cc0)\n-\t\t\t  (const_int 0))\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))\n-\t\t      (pc)))]\n+  [(match_operand 0 \"\" \"\")]\n   \"\"\n-  \"\")\n+  \"h8300_expand_branch (GT, operands[0]); DONE;\")\n \n (define_expand \"bgtu\"\n-  [(set (pc)\n-\t(if_then_else (gtu (cc0)\n-\t\t\t   (const_int 0))\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))\n-\t\t      (pc)))]\n+  [(match_operand 0 \"\" \"\")]\n   \"\"\n-  \"\")\n+  \"h8300_expand_branch (GTU, operands[0]); DONE;\")\n \n (define_expand \"beq\"\n-  [(set (pc)\n-\t(if_then_else (eq (cc0)\n-\t\t\t  (const_int 0))\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))\n-\t\t      (pc)))]\n+  [(match_operand 0 \"\" \"\")]\n   \"\"\n-  \"\")\n+  \"h8300_expand_branch (EQ, operands[0]); DONE;\")\n \n (define_expand \"bne\"\n-  [(set (pc)\n-\t(if_then_else (ne (cc0)\n-\t\t\t  (const_int 0))\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))\n-\t\t      (pc)))]\n+  [(match_operand 0 \"\" \"\")]\n   \"\"\n-  \"\")\n+  \"h8300_expand_branch (NE, operands[0]); DONE;\")\n \n (define_insn \"branch_true\"\n   [(set (pc)"}]}