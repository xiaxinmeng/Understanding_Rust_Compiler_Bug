{"sha": "276116fdcca02afc42d1da59056497f075b742f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc2MTE2ZmRjY2EwMmFmYzQyZDFkYTU5MDU2NDk3ZjA3NWI3NDJmMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-10-02T00:12:50Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-10-02T00:12:50Z"}, "message": "random (xor_combine<>::_M_initialize_max_aux): New.\n\n2006-10-01  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1/random (xor_combine<>::_M_initialize_max_aux): New.\n\t(xor_combine<>::operator()()): Tweak per N2079.\n\t* include/tr1/random.tcc (xor_combine<>::_M_initialize_max_aux):\n\tDefine.\n\t(xor_combine<>::_M_initialize_max): Use it.\n\t* testsuite/tr1/5_numerical_facilities/random/xor_combine/\n\tcons/default.cc: Adjust.\n\t* docs/html/ext/tr1.html: Adjust.\n\nFrom-SVN: r117353", "tree": {"sha": "c70f68e068607d9065c930cb53c10a09a1fe71dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c70f68e068607d9065c930cb53c10a09a1fe71dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/276116fdcca02afc42d1da59056497f075b742f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/276116fdcca02afc42d1da59056497f075b742f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/276116fdcca02afc42d1da59056497f075b742f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/276116fdcca02afc42d1da59056497f075b742f2/comments", "author": null, "committer": null, "parents": [{"sha": "a40776a29588b73758d83ced0bf31488023de9ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40776a29588b73758d83ced0bf31488023de9ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a40776a29588b73758d83ced0bf31488023de9ad"}], "stats": {"total": 98, "additions": 73, "deletions": 25}, "files": [{"sha": "8115f0de8a4422e82fa0aca40e9ec5b8b9fdf757", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276116fdcca02afc42d1da59056497f075b742f2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276116fdcca02afc42d1da59056497f075b742f2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=276116fdcca02afc42d1da59056497f075b742f2", "patch": "@@ -1,3 +1,14 @@\n+2006-10-01  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1/random (xor_combine<>::_M_initialize_max_aux): New.\n+\t(xor_combine<>::operator()()): Tweak per N2079.\n+\t* include/tr1/random.tcc (xor_combine<>::_M_initialize_max_aux):\n+\tDefine.\n+\t(xor_combine<>::_M_initialize_max): Use it.\n+\t* testsuite/tr1/5_numerical_facilities/random/xor_combine/\n+\tcons/default.cc: Adjust.\n+\t* docs/html/ext/tr1.html: Adjust.\n+\n 2006-10-01  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/ext/type_traits.h: Avoid _T, badname for some targets;"}, {"sha": "d8ae3971540c27aa1fe1f86d3fcaf21fbcd98825", "filename": "libstdc++-v3/docs/html/ext/tr1.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276116fdcca02afc42d1da59056497f075b742f2/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Ftr1.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276116fdcca02afc42d1da59056497f075b742f2/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Ftr1.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Ftr1.html?ref=276116fdcca02afc42d1da59056497f075b742f2", "patch": "@@ -706,7 +706,7 @@ <h1 align=\"center\">\n       <td>done</td>\n       <td></td>\n       <td></td>\n-      <td>Buggy min() and max()</td>\n+      <td>operator()() per N2079</td>\n     </tr>\n     <tr>\n       <td>5.1.5</td>\n@@ -2307,7 +2307,7 @@ <h3>Footnotes</h3>\n <table width=\"100%\" border=\"0\">\n <tr>\n   <td>\n-    <!-- IGNORE DIFF -->Last modified 2006-08-25\n+    <!-- IGNORE DIFF -->Last modified 2006-10-01\n   </td>\n   <td align=\"right\" valign=\"bottom\">\n     <a href=\"http://validator.w3.org/check/referer\">"}, {"sha": "543378ea9e9e1735e2ed06c03428c750a27a52a6", "filename": "libstdc++-v3/include/tr1/random", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276116fdcca02afc42d1da59056497f075b742f2/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276116fdcca02afc42d1da59056497f075b742f2/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom?ref=276116fdcca02afc42d1da59056497f075b742f2", "patch": "@@ -1262,7 +1262,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n     public:\n       /** The type of the generated random value. */\n-      typedef typename __gnu_cxx::__conditional_type<(sizeof(_Result_type1) > sizeof(_Result_type2)),\n+      typedef typename __gnu_cxx::__conditional_type<(sizeof(_Result_type1)\n+\t\t\t\t\t\t      > sizeof(_Result_type2)),\n \t_Result_type1, _Result_type2>::__type result_type;\n \n       // parameter values\n@@ -1310,7 +1311,6 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n       base2() const\n       { return _M_b2; }\n \n-      // XXX Per N2032, but aren't always right...\n       result_type\n       min() const\n       { return 0; }\n@@ -1322,9 +1322,13 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n       /**\n        * Gets the next random number in the sequence.\n        */\n+      // NB: Not exactly the TR1 formula, per N2079 instead.\n       result_type\n       operator()()\n-      { return ((_M_b1() << shift1) ^ (_M_b2() << shift2)); }\n+      {\n+\treturn ((result_type(_M_b1() - _M_b1.min()) << shift1)\n+\t\t^ (result_type(_M_b2() - _M_b2.min()) << shift2));\n+      }\n \n       /**\n        * Compares two %xor_combine random number generator objects of\n@@ -1397,6 +1401,9 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n       void\n       _M_initialize_max();\n \n+      result_type\n+      _M_initialize_max_aux(result_type, result_type, int);\n+\n       base1_type  _M_b1;\n       base2_type  _M_b2;\n       result_type _M_max;"}, {"sha": "46d73dad56e3360d5c60d6e77572e6bd1a263959", "filename": "libstdc++-v3/include/tr1/random.tcc", "status": "modified", "additions": 49, "deletions": 19, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276116fdcca02afc42d1da59056497f075b742f2/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276116fdcca02afc42d1da59056497f075b742f2/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom.tcc?ref=276116fdcca02afc42d1da59056497f075b742f2", "patch": "@@ -619,30 +619,59 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \t\t_UniformRandomNumberGenerator2, __s2>::\n     _M_initialize_max()\n     {\n-      const int __lshift = std::abs(__s1 - __s2);\n+      const int __w = std::numeric_limits<result_type>::digits;\n \n-      result_type __m1 = _M_b1.max() - _M_b1.min();\n-      result_type __m2 = _M_b2.max() - _M_b2.min();\n+      const result_type __m1 =\n+\tstd::min(result_type(_M_b1.max() - _M_b1.min()),\n+\t\t _Shift<result_type, __w - __s1>::__value - 1);\n \n-      // NB: in TR1 s1 is not required to be >= s2.\n-      if (__s1 >= __s2)\n-\t__m1 <<= __lshift;\n+      const result_type __m2 =\n+\tstd::min(result_type(_M_b2.max() - _M_b2.min()),\n+\t\t _Shift<result_type, __w - __s2>::__value - 1);\n+\n+      // NB: In TR1 s1 is not required to be >= s2.\n+      if (__s1 < __s2)\n+\t_M_max = _M_initialize_max_aux(__m2, __m1, __s2 - __s1) << __s1;\n       else\n-\t__m2 <<= __lshift;\n+\t_M_max = _M_initialize_max_aux(__m1, __m2, __s1 - __s2) << __s2;\n+    }\n+\n+  template<class _UniformRandomNumberGenerator1, int __s1,\n+\t   class _UniformRandomNumberGenerator2, int __s2>\n+    typename xor_combine<_UniformRandomNumberGenerator1, __s1,\n+\t\t\t _UniformRandomNumberGenerator2, __s2>::result_type\n+    xor_combine<_UniformRandomNumberGenerator1, __s1,\n+\t\t_UniformRandomNumberGenerator2, __s2>::\n+    _M_initialize_max_aux(result_type __a, result_type __b, int __d)\n+    {\n+      const result_type __two2d = result_type(1) << __d;\n+      const result_type __c = __a * __two2d;\n \n-      result_type __a = __m1 & __m2;\n-      const result_type __b = __m1 | __m2;      \n+      if (__a == 0 || __b < __two2d)\n+\treturn __c + __b;\n \n-      result_type __c = 0;\n-      if (__a)\n-\t{\n-\t  result_type __k;\n-\t  for (__k = 0; __a != 1; __a >>= 1)\n-\t    ++__k;\n-\t  __c = (result_type(1) << __k) - 1;\n-\t}\n+      const result_type __t = std::max(__c, __b);\n+      const result_type __u = std::min(__c, __b);\n+\n+      result_type __ub = __u;\n+      result_type __p;\n+      for (__p = 0; __ub != 1; __ub >>= 1)\n+\t++__p;\n \n-      _M_max = (__c | __b) << __lshift; \n+      const result_type __two2p = result_type(1) << __p;\n+      const result_type __k = __t / __two2p;\n+\n+      if (__k & 1)\n+\treturn (__k + 1) * __two2p - 1;\n+\n+      if (__c >= __b)\n+\treturn (__k + 1) * __two2p + _M_initialize_max_aux((__t % __two2p)\n+\t\t\t\t\t\t\t   / __two2d,\n+\t\t\t\t\t\t\t   __u % __two2p, __d);\n+      else\n+\treturn (__k + 1) * __two2p + _M_initialize_max_aux((__u % __two2p)\n+\t\t\t\t\t\t\t   / __two2d,\n+\t\t\t\t\t\t\t   __t % __two2p, __d);\n     }\n \n   template<class _UniformRandomNumberGenerator1, int __s1,\n@@ -852,7 +881,8 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \t\t      continue;\n \t\t  }\n \t\telse if (__u <= __c3)\n-\t\t  // XXX This case not in the book, nor in the Errata...\n+\t\t  // NB: This case not in the book, nor in the Errata,\n+\t\t  // but should be ok...\n \t\t  __x = -1;\n \t\telse if (__u <= __c4)\n \t\t  __x = 0;"}, {"sha": "83ff51b5b97d3343db616931e3d0069d3b5f5e86", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/random/xor_combine/cons/default.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276116fdcca02afc42d1da59056497f075b742f2/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fxor_combine%2Fcons%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276116fdcca02afc42d1da59056497f075b742f2/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fxor_combine%2Fcons%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Frandom%2Fxor_combine%2Fcons%2Fdefault.cc?ref=276116fdcca02afc42d1da59056497f075b742f2", "patch": "@@ -36,7 +36,7 @@ test01()\n     minstd_rand0, 2\n     > x;\n \n-  VERIFY( x() == 32642 );\n+  VERIFY( x() == 32644 );\n }\n \n int main()"}]}