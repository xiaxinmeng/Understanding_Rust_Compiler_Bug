{"sha": "7a649ef59f9c32dd164a8e62b6eddb778cd7cb12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E2NDllZjU5ZjljMzJkZDE2NGE4ZTYyYjZlZGRiNzc4Y2Q3Y2IxMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-06-07T21:08:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-06-07T21:08:26Z"}, "message": "Avoid constexpr garbage for implicit conversion to void.\n\n\t* constexpr.c (cxx_eval_constant_expression): Call\n\tSTRIP_ANY_LOCATION_WRAPPER early.\n\t[CONVERT_EXPR]: Don't build anything for conversion to void.\n\t[ADDR_EXPR]: ggc_free unused ADDR_EXPR.\n\nFrom-SVN: r272054", "tree": {"sha": "c0133a4dfda8d83caa31588f64debe04a1819739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0133a4dfda8d83caa31588f64debe04a1819739"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a649ef59f9c32dd164a8e62b6eddb778cd7cb12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a649ef59f9c32dd164a8e62b6eddb778cd7cb12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a649ef59f9c32dd164a8e62b6eddb778cd7cb12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a649ef59f9c32dd164a8e62b6eddb778cd7cb12/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1b4c4f49131f16686ace6aa6b3291edd7048e82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b4c4f49131f16686ace6aa6b3291edd7048e82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1b4c4f49131f16686ace6aa6b3291edd7048e82"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "c0720404b75fb3bc591d7b27b8f7b22a61259d9c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a649ef59f9c32dd164a8e62b6eddb778cd7cb12/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a649ef59f9c32dd164a8e62b6eddb778cd7cb12/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7a649ef59f9c32dd164a8e62b6eddb778cd7cb12", "patch": "@@ -1,3 +1,10 @@\n+2019-06-07  Jason Merrill  <jason@redhat.com>\n+\n+\t* constexpr.c (cxx_eval_constant_expression): Call\n+\tSTRIP_ANY_LOCATION_WRAPPER early.\n+\t[CONVERT_EXPR]: Don't build anything for conversion to void.\n+\t[ADDR_EXPR]: ggc_free unused ADDR_EXPR.\n+\n 2019-06-05  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/90737"}, {"sha": "10afc419a3313a6c349cfb4843e71753c9dec824", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a649ef59f9c32dd164a8e62b6eddb778cd7cb12/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a649ef59f9c32dd164a8e62b6eddb778cd7cb12/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=7a649ef59f9c32dd164a8e62b6eddb778cd7cb12", "patch": "@@ -4382,9 +4382,6 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \t\t\t      bool *non_constant_p, bool *overflow_p,\n \t\t\t      tree *jump_target /* = NULL */)\n {\n-  constexpr_ctx new_ctx;\n-  tree r = t;\n-\n   if (jump_target && *jump_target)\n     {\n       /* If we are jumping, ignore all statements/expressions except those\n@@ -4415,6 +4412,9 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n       *non_constant_p = true;\n       return t;\n     }\n+\n+  STRIP_ANY_LOCATION_WRAPPER (t);\n+\n   if (CONSTANT_CLASS_P (t))\n     {\n       if (TREE_OVERFLOW (t))\n@@ -4439,8 +4439,7 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n     }\n \n   /* Avoid excessively long constexpr evaluations.  */\n-  if (!location_wrapper_p (t)\n-      && ++*ctx->constexpr_ops_count >= constexpr_ops_limit)\n+  if (++*ctx->constexpr_ops_count >= constexpr_ops_limit)\n     {\n       if (!ctx->quiet)\n \terror_at (cp_expr_loc_or_loc (t, input_location),\n@@ -4452,6 +4451,9 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n       return t;\n     }\n \n+  constexpr_ctx new_ctx;\n+  tree r = t;\n+\n   tree_code tcode = TREE_CODE (t);\n   switch (tcode)\n     {\n@@ -4752,7 +4754,10 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \t/* This function does more aggressive folding than fold itself.  */\n \tr = build_fold_addr_expr_with_type (op, TREE_TYPE (t));\n \tif (TREE_CODE (r) == ADDR_EXPR && TREE_OPERAND (r, 0) == oldop)\n-\t  return t;\n+\t  {\n+\t    ggc_free (r);\n+\t    return t;\n+\t  }\n \tbreak;\n       }\n \n@@ -5065,6 +5070,8 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \t  r = op;\n \telse if (tcode == UNARY_PLUS_EXPR)\n \t  r = fold_convert (TREE_TYPE (t), op);\n+\telse if (VOID_TYPE_P (type))\n+\t  r = void_node;\n \telse\n \t  r = fold_build1 (tcode, type, op);\n "}]}