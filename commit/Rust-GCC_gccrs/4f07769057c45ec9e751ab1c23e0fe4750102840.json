{"sha": "4f07769057c45ec9e751ab1c23e0fe4750102840", "node_id": "C_kwDOANBUbNoAKDRmMDc3NjkwNTdjNDVlYzllNzUxYWIxYzIzZTBmZTQ3NTAxMDI4NDA", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-09-28T09:38:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-09-28T09:38:03Z"}, "message": "openmp: Don't call omp_finish_clause on implicitly added private clauses on simd [PR102492]\n\nThe gimplifier adds implicit private clauses on SIMD constructs for local\nvariables in the SIMD body if they are addressable to make sure they use\nthe magic arrays with \"omp simd array\" attribute (such that each SIMD lane\nhas its own copy), but we actually don't need to default privatize etc. those,\nthe construction for them is done in the SIMD body and so is destruction.\nomp_finish_clause for C++ now requires default constructor (and dtor) for private,\nso that OpenMP 5.1 default(private) works, but that will never be needed on\nSIMD.  So, this patch just doesn't call omp_finish_clause for private on simd.\nThe C and Fortran langhooks don't do anything for private.\n\n2021-09-28  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/102492\n\t* gimplify.c (gimplify_adjust_omp_clauses_1): Don't call the\n\tomp_finish_clause langhook on implicitly added OMP_CLAUSE_PRIVATE\n\tclauses on SIMD constructs.\n\n\t* g++.dg/gomp/simd-3.C: New test.", "tree": {"sha": "072fdbebc9cbf4b5dd17cd5630569e6504cf6b07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/072fdbebc9cbf4b5dd17cd5630569e6504cf6b07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f07769057c45ec9e751ab1c23e0fe4750102840", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f07769057c45ec9e751ab1c23e0fe4750102840", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f07769057c45ec9e751ab1c23e0fe4750102840", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f07769057c45ec9e751ab1c23e0fe4750102840/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb8b72ebb5b0bf40f7dfef9154c42320ce46f2a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb8b72ebb5b0bf40f7dfef9154c42320ce46f2a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb8b72ebb5b0bf40f7dfef9154c42320ce46f2a7"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "1067113b1639d60aff447bef145f6e35b6b69478", "filename": "gcc/gimplify.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f07769057c45ec9e751ab1c23e0fe4750102840/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f07769057c45ec9e751ab1c23e0fe4750102840/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=4f07769057c45ec9e751ab1c23e0fe4750102840", "patch": "@@ -10917,8 +10917,12 @@ gimplify_adjust_omp_clauses_1 (splay_tree_node n, void *data)\n   *list_p = clause;\n   struct gimplify_omp_ctx *ctx = gimplify_omp_ctxp;\n   gimplify_omp_ctxp = ctx->outer_context;\n-  lang_hooks.decls.omp_finish_clause (clause, pre_p,\n-\t\t\t\t      (ctx->region_type & ORT_ACC) != 0);\n+  /* Don't call omp_finish_clause on implicitly added OMP_CLAUSE_PRIVATE\n+     in simd.  Those are only added for the local vars inside of simd body\n+     and they don't need to be e.g. default constructible.  */\n+  if (code != OMP_CLAUSE_PRIVATE || ctx->region_type != ORT_SIMD) \n+    lang_hooks.decls.omp_finish_clause (clause, pre_p,\n+\t\t\t\t\t(ctx->region_type & ORT_ACC) != 0);\n   if (gimplify_omp_ctxp)\n     for (; clause != chain; clause = OMP_CLAUSE_CHAIN (clause))\n       if (OMP_CLAUSE_CODE (clause) == OMP_CLAUSE_MAP"}, {"sha": "db66c0801758fe35d3fc6e0190417dd37cac1d04", "filename": "gcc/testsuite/g++.dg/gomp/simd-3.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f07769057c45ec9e751ab1c23e0fe4750102840/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fsimd-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f07769057c45ec9e751ab1c23e0fe4750102840/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fsimd-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fsimd-3.C?ref=4f07769057c45ec9e751ab1c23e0fe4750102840", "patch": "@@ -0,0 +1,16 @@\n+// PR middle-end/102492\n+// { dg-do compile }\n+\n+struct S { S (int); };\n+void bar (S &);\n+\n+void\n+foo ()\n+{\n+  #pragma omp simd\n+  for (int i = 0; i < 64; i++)\n+    {\n+      S s = 26;\n+      bar (s);\n+    }\n+}"}]}