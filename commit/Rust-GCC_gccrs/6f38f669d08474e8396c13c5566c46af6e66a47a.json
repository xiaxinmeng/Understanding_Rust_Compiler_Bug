{"sha": "6f38f669d08474e8396c13c5566c46af6e66a47a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYzOGY2NjlkMDg0NzRlODM5NmMxM2M1NTY2YzQ2YWY2ZTY2YTQ3YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-24T12:38:37Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-24T12:38:37Z"}, "message": "(decl_attribute): Verify that alignment and format argument numbers are all integer constants.\n\n(decl_attribute): Verify that alignment and format argument numbers are all\ninteger constants.\nContinue on to next attribute if one is in error.\n\nFrom-SVN: r6300", "tree": {"sha": "f72494b3b44f58b15fe615ed452417745adcf9e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f72494b3b44f58b15fe615ed452417745adcf9e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f38f669d08474e8396c13c5566c46af6e66a47a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f38f669d08474e8396c13c5566c46af6e66a47a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f38f669d08474e8396c13c5566c46af6e66a47a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f38f669d08474e8396c13c5566c46af6e66a47a/comments", "author": null, "committer": null, "parents": [{"sha": "ba09c753fb601de49a8c9d9f51de5bad63218e22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba09c753fb601de49a8c9d9f51de5bad63218e22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba09c753fb601de49a8c9d9f51de5bad63218e22"}], "stats": {"total": 59, "additions": 49, "deletions": 10}, "files": [{"sha": "9a9c8ba1c023da443bb1c069385e9d6c204291e4", "filename": "gcc/c-common.c", "status": "modified", "additions": 49, "deletions": 10, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f38f669d08474e8396c13c5566c46af6e66a47a/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f38f669d08474e8396c13c5566c46af6e66a47a/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=6f38f669d08474e8396c13c5566c46af6e66a47a", "patch": "@@ -257,8 +257,23 @@ decl_attributes (decl, attributes)\n \t     && TREE_CODE (TREE_VALUE (a)) == TREE_LIST\n \t     && TREE_PURPOSE (TREE_VALUE (a)) == get_identifier (\"aligned\"))\n       {\n-\tint align = TREE_INT_CST_LOW (TREE_VALUE (TREE_VALUE (a)))\n-\t\t    * BITS_PER_UNIT;\n+\ttree align_expr = TREE_VALUE (TREE_VALUE (a));\n+\tint align;\n+\n+\t/* Strip any NOPs of any kind.  */\n+\twhile (TREE_CODE (align_expr) == NOP_EXPR\n+\t       || TREE_CODE (align_expr) == CONVERT_EXPR\n+\t       || TREE_CODE (align_expr) == NON_LVALUE_EXPR)\n+\t  align_expr = TREE_OPERAND (align_expr, 0);\n+\n+\tif (TREE_CODE (align_expr) != INTEGER_CST)\n+\t  {\n+\t    error_with_decl (decl,\n+\t\t\t     \"requested alignment of `%s' is not a constant\");\n+\t    continue;\n+\t  }\n+\n+\talign = TREE_INT_CST_LOW (align_expr) * BITS_PER_UNIT;\n \t\n \tif (exact_log2 (align) == -1)\n \t  error_with_decl (decl,\n@@ -276,8 +291,10 @@ decl_attributes (decl, attributes)\n       {\n         tree list = TREE_VALUE (TREE_VALUE (a));\n         tree format_type = TREE_PURPOSE (list);\n-\tint format_num = TREE_INT_CST_LOW (TREE_PURPOSE (TREE_VALUE (list)));\n-\tint first_arg_num = TREE_INT_CST_LOW (TREE_VALUE (TREE_VALUE (list)));\n+\ttree format_num_expr = TREE_PURPOSE (TREE_VALUE (list));\n+\ttree first_arg_num_expr = TREE_VALUE (TREE_VALUE (list));\n+\tint format_num;\n+\tint first_arg_num;\n \tint is_scan;\n \ttree argument;\n \tint arg_num;\n@@ -286,7 +303,7 @@ decl_attributes (decl, attributes)\n \t  {\n \t    error_with_decl (decl,\n \t\t\t     \"argument format specified for non-function `%s'\");\n-\t    return;\n+\t    continue;\n \t  }\n \t\n \tif (format_type == get_identifier (\"printf\"))\n@@ -296,14 +313,36 @@ decl_attributes (decl, attributes)\n \telse\n \t  {\n \t    error_with_decl (decl, \"unrecognized format specifier for `%s'\");\n-\t    return;\n+\t    continue;\n \t  }\n \t\n+\t/* Strip any conversions from the string index and first arg number\n+\t   and verify they are constants.  */\n+\twhile (TREE_CODE (format_num_expr) == NOP_EXPR\n+\t       || TREE_CODE (format_num_expr) == CONVERT_EXPR\n+\t       || TREE_CODE (format_num_expr) == NON_LVALUE_EXPR)\n+\t  format_num_expr = TREE_OPERAND (format_num_expr, 0);\n+\n+\twhile (TREE_CODE (first_arg_num_expr) == NOP_EXPR\n+\t       || TREE_CODE (first_arg_num_expr) == CONVERT_EXPR\n+\t       || TREE_CODE (first_arg_num_expr) == NON_LVALUE_EXPR)\n+\t  first_arg_num_expr = TREE_OPERAND (first_arg_num_expr, 0);\n+\n+\tif (TREE_CODE (format_num_expr) != INTEGER_CST\n+\t    || TREE_CODE (first_arg_num_expr) != INTEGER_CST)\n+\t  {\n+\t    error_with_decl (decl,\n+\t\t   \"format string for `%s' has non-constant operand number\");\n+\t    continue;\n+\t  }\n+\n+\tformat_num = TREE_INT_CST_LOW (format_num_expr);\n+\tfirst_arg_num = TREE_INT_CST_LOW (first_arg_num_expr);\n \tif (first_arg_num != 0 && first_arg_num <= format_num)\n \t  {\n \t    error_with_decl (decl,\n-\t\t\"format string arg follows the args to be formatted, for `%s'\");\n-\t    return;\n+\t      \"format string arg follows the args to be formatted, for `%s'\");\n+\t    continue;\n \t  }\n \n \t/* Verify that the format_num argument is actually a string, in case\n@@ -322,7 +361,7 @@ decl_attributes (decl, attributes)\n \t  {\n \t    error_with_decl (decl,\n \t\t\t     \"format string arg not a string type, for `%s'\");\n-\t    return;\n+\t    continue;\n \t  }\n \tif (first_arg_num != 0)\n \t  {\n@@ -333,7 +372,7 @@ decl_attributes (decl, attributes)\n \t      {\n \t\terror_with_decl (decl,\n \t\t\t\t \"args to be formatted is not ..., for `%s'\");\n-\t\treturn;\n+\t\tcontinue;\n \t      }\n \t  }\n "}]}