{"sha": "718625ad3a786a3df0405d2e080c211ccad915f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE4NjI1YWQzYTc4NmEzZGYwNDA1ZDJlMDgwYzIxMWNjYWQ5MTVmNA==", "commit": {"author": {"name": "Kugan Vivekanandarajah", "email": "kuganv@linaro.org", "date": "2016-10-17T23:37:57Z"}, "committer": {"name": "Kugan Vivekanandarajah", "email": "kugan@gcc.gnu.org", "date": "2016-10-17T23:37:57Z"}, "message": "Use get/set_ptr_nonnull in ipa-vrp\n\nUse get/set_ptr_nonnull in ipa-vrp\ngcc/ChangeLog:\n\n2016-10-18  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\t* ipa-prop.c (ipa_compute_jump_functions_for_edge): Set value range\n\tfor pointer type too.\n\t(ipcp_update_vr): set_ptr_nonnull for pointer.\n\ngcc/testsuite/ChangeLog:\n\n2016-10-18  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\t* gcc.dg/ipa/vrp4.c: New test.\n\nFrom-SVN: r241288", "tree": {"sha": "4deb2aee11e68e2871a823202f2ebc40fadbcc59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4deb2aee11e68e2871a823202f2ebc40fadbcc59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/718625ad3a786a3df0405d2e080c211ccad915f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/718625ad3a786a3df0405d2e080c211ccad915f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/718625ad3a786a3df0405d2e080c211ccad915f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/718625ad3a786a3df0405d2e080c211ccad915f4/comments", "author": null, "committer": null, "parents": [{"sha": "735b8f9fc4b14384b246b39dfccbf529402b7791", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/735b8f9fc4b14384b246b39dfccbf529402b7791", "html_url": "https://github.com/Rust-GCC/gccrs/commit/735b8f9fc4b14384b246b39dfccbf529402b7791"}], "stats": {"total": 94, "additions": 78, "deletions": 16}, "files": [{"sha": "1c6034685254d9845581fa0e61479a20e097bba0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/718625ad3a786a3df0405d2e080c211ccad915f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/718625ad3a786a3df0405d2e080c211ccad915f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=718625ad3a786a3df0405d2e080c211ccad915f4", "patch": "@@ -1,3 +1,9 @@\n+2016-10-18  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\t* ipa-prop.c (ipa_compute_jump_functions_for_edge): Set value range\n+\tfor pointer type too.\n+\t(ipcp_update_vr): set_ptr_nonnull for pointer.\n+\n 2016-10-18  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \t* tree-ssa-alias.h (pt_solution_singleton_or_null_p): Renamed from"}, {"sha": "353b63821a95384f0c9fcf7fa1e4fdf5f44bc669", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 41, "deletions": 16, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/718625ad3a786a3df0405d2e080c211ccad915f4/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/718625ad3a786a3df0405d2e080c211ccad915f4/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=718625ad3a786a3df0405d2e080c211ccad915f4", "patch": "@@ -1668,7 +1668,22 @@ ipa_compute_jump_functions_for_edge (struct ipa_func_body_info *fbi,\n \t    useful_context = true;\n \t}\n \n-      if (!POINTER_TYPE_P (TREE_TYPE (arg)))\n+      if (POINTER_TYPE_P (TREE_TYPE (arg)))\n+\t{\n+\t  if (TREE_CODE (arg) == SSA_NAME\n+\t      && param_type\n+\t      && get_ptr_nonnull (arg))\n+\t    {\n+\t      jfunc->vr_known = true;\n+\t      jfunc->m_vr.type = VR_ANTI_RANGE;\n+\t      jfunc->m_vr.min = build_int_cst (TREE_TYPE (arg), 0);\n+\t      jfunc->m_vr.max = build_int_cst (TREE_TYPE (arg), 0);\n+\t      jfunc->m_vr.equiv = NULL;\n+\t    }\n+\t  else\n+\t    gcc_assert (!jfunc->vr_known);\n+\t}\n+      else\n \t{\n \t  wide_int min, max;\n \t  value_range_type type;\n@@ -5602,27 +5617,37 @@ ipcp_update_vr (struct cgraph_node *node)\n \tcontinue;\n \n       if (vr[i].known\n-\t  && INTEGRAL_TYPE_P (TREE_TYPE (ddef))\n-\t  && !POINTER_TYPE_P (TREE_TYPE (ddef))\n \t  && (vr[i].type == VR_RANGE || vr[i].type == VR_ANTI_RANGE))\n \t{\n \t  tree type = TREE_TYPE (ddef);\n \t  unsigned prec = TYPE_PRECISION (type);\n-\t  if (dump_file)\n+\t  if (INTEGRAL_TYPE_P (TREE_TYPE (ddef)))\n+\t    {\n+\t      if (dump_file)\n+\t\t{\n+\t\t  fprintf (dump_file, \"Setting value range of param %u \", i);\n+\t\t  fprintf (dump_file, \"%s[\",\n+\t\t\t   (vr[i].type == VR_ANTI_RANGE) ? \"~\" : \"\");\n+\t\t  print_decs (vr[i].min, dump_file);\n+\t\t  fprintf (dump_file, \", \");\n+\t\t  print_decs (vr[i].max, dump_file);\n+\t\t  fprintf (dump_file, \"]\\n\");\n+\t\t}\n+\t      set_range_info (ddef, vr[i].type,\n+\t\t\t      wide_int_storage::from (vr[i].min, prec,\n+\t\t\t\t\t\t      TYPE_SIGN (type)),\n+\t\t\t      wide_int_storage::from (vr[i].max, prec,\n+\t\t\t\t\t\t      TYPE_SIGN (type)));\n+\t    }\n+\t  else if (POINTER_TYPE_P (TREE_TYPE (ddef))\n+\t\t   && vr[i].type == VR_ANTI_RANGE\n+\t\t   && wi::eq_p (vr[i].min, 0)\n+\t\t   && wi::eq_p (vr[i].max, 0))\n \t    {\n-\t      fprintf (dump_file, \"Setting value range of param %u \", i);\n-\t      fprintf (dump_file, \"%s[\",\n-\t\t       (vr[i].type == VR_ANTI_RANGE) ? \"~\" : \"\");\n-\t      print_decs (vr[i].min, dump_file);\n-\t      fprintf (dump_file, \", \");\n-\t      print_decs (vr[i].max, dump_file);\n-\t      fprintf (dump_file, \"]\\n\");\n+\t      if (dump_file)\n+\t\tfprintf (dump_file, \"Setting nonnull for %u\\n\", i);\n+\t      set_ptr_nonnull (ddef);\n \t    }\n-\t  set_range_info (ddef, vr[i].type,\n-\t\t\t  wide_int_storage::from (vr[i].min, prec,\n-\t\t\t\t\t\t  TYPE_SIGN (type)),\n-\t\t\t  wide_int_storage::from (vr[i].max, prec,\n-\t\t\t\t\t\t  TYPE_SIGN (type)));\n \t}\n     }\n }"}, {"sha": "94048db18e5790ff89b770e533f170b2cadac9d2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/718625ad3a786a3df0405d2e080c211ccad915f4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/718625ad3a786a3df0405d2e080c211ccad915f4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=718625ad3a786a3df0405d2e080c211ccad915f4", "patch": "@@ -1,3 +1,7 @@\n+2016-10-18  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\t* gcc.dg/ipa/vrp4.c: New test.\n+\n 2016-10-18  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \t* gcc.dg/torture/pr39074-2.c: Adjust testcase."}, {"sha": "d7e1f26d23bcbdb1d26967b9adcc9fdfe569047a", "filename": "gcc/testsuite/gcc.dg/ipa/vrp4.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/718625ad3a786a3df0405d2e080c211ccad915f4/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fvrp4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/718625ad3a786a3df0405d2e080c211ccad915f4/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fvrp4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fvrp4.c?ref=718625ad3a786a3df0405d2e080c211ccad915f4", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-ipa-cp-details\" } */\n+\n+static __attribute__((noinline, noclone))\n+int foo (int *p)\n+{\n+  if (!p)\n+    return 0;\n+  *p = 1;\n+}\n+\n+struct st\n+{\n+  int a;\n+  int b;\n+};\n+\n+int bar (struct st *s)\n+{\n+\n+  if (!s)\n+    return 0;\n+  foo (&s->a);\n+  foo (&s->b);\n+}\n+\n+/* { dg-final { scan-ipa-dump \"Setting nonnull for 0\" \"cp\" } } */"}]}