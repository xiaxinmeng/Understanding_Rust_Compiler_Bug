{"sha": "5db8bc343fc5ff9aad66c8f480e15424f7a975d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRiOGJjMzQzZmM1ZmY5YWFkNjZjOGY0ODBlMTU0MjRmN2E5NzVkMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-29T16:24:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-29T16:24:26Z"}, "message": "Resync\n\nFrom-SVN: r97192", "tree": {"sha": "8bef30af353ba46ac1aa1a5ac8914fc81b06a5a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bef30af353ba46ac1aa1a5ac8914fc81b06a5a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5db8bc343fc5ff9aad66c8f480e15424f7a975d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db8bc343fc5ff9aad66c8f480e15424f7a975d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5db8bc343fc5ff9aad66c8f480e15424f7a975d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db8bc343fc5ff9aad66c8f480e15424f7a975d2/comments", "author": null, "committer": null, "parents": [{"sha": "1197b8ba5c0797e84dd1dbf1ac02ed417395fb70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1197b8ba5c0797e84dd1dbf1ac02ed417395fb70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1197b8ba5c0797e84dd1dbf1ac02ed417395fb70"}], "stats": {"total": 293, "additions": 293, "deletions": 0}, "files": [{"sha": "451e970c8f67e24072e21f8e7bca429549fc71a3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 293, "deletions": 0, "changes": 293, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db8bc343fc5ff9aad66c8f480e15424f7a975d2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db8bc343fc5ff9aad66c8f480e15424f7a975d2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5db8bc343fc5ff9aad66c8f480e15424f7a975d2", "patch": "@@ -1,3 +1,296 @@\n+2005-03-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Real_Literal): Generate warning if static\n+\tfixed-point expression has value that is not a multiple of the Small\n+\tvalue.\n+\n+\t* opt.ads (Warn_On_Bad_Fixed_Value): New flag\n+\n+\t* s-taprop-tru64.adb (RT_Resolution): Return an integer number of\n+\tnanoseconds.\n+\n+\t* ug_words: Add entry for [NO_]BAD_FIXED_VALUES for -gnatwb/-gnatwB\n+\n+2005-03-29  Vincent Celier  <celier@adacore.com>\n+\n+\t* mlib-tgt-vms-ia64.adb, mlib-tgt-vms-alpha.adb\n+\t(Build_Dynamic_Library.Version_String): Return the empty string when\n+\tLib_Version is empty or when the symbol policy is not Autonomous.\n+\n+\t* symbols-vms-alpha.adb (Finalize): For symbol policy Compliant, when\n+\ta symbol is not in the reference symbol file, increase the Major ID\n+\tand set the Minor ID to 0.\n+\tUse gsmatch=lequal instead of gsmatch=equal\n+\n+2005-03-29  Doug Rupp  <rupp@adacore.com>\n+\n+\t* adaint.c (__gnat_to_canonical_file_spec [VMS]): Check for logical\n+\tname and translate.\n+\n+2005-03-29  Javier Miranda  <miranda@adacore.com>\n+\n+\t* a-tags.ads, a-tags.adb (Get_TSD): Subprogram removed.\n+\t(Inherit_DT): The first formal has been redefined as a Tag.\n+\tThis allows us the removal of the subprogram Get_TSD.\n+\t(TSD): Replace the call to Get_TSD by the actual code.\n+\n+\t* exp_disp.ads, exp_disp.adb: Remove support to call Get_TSD.\n+\t(Make_DT): Upgrade the call to Inherit_TSD according to the\n+\tnew interface: the first formal is now a Tag.\n+\n+\t* i-cpp.ads, i-cpp.adb (CPP_Inherit_DT): The first formal has been\n+\tredefined as a Tag.\n+\tThis change allows us to remove the subprogram Get_TSD.\n+\t(CPP_Get_TSD): Subprogram removed.\n+\t(TSD): Replace the call to CPP_Get_TSD by the actual code.\n+\n+\t* rtsfind.ads: Remove support to call the run-time\n+\tsubprogram Get_TSD\n+\n+2005-03-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* errutil.adb, errout.adb: \n+\tMinor comment updates on Line_Terminator references\n+\n+\t* par-ch10.adb: Add ??? comment about line terminator\n+\n+\t* styleg.adb (Check_Line_Terminator): Add check for new switch -gnatyd\n+\t(check dos line terminator).\n+\t(Check_Line_Max_Length): New procedure, split off from the existing\n+\tCheck_Line_Terminator routine. Separating this out allows -gnatyf to\n+\tbe properly recognized.\n+\n+\t* styleg.adb: Add ??? comment for line terminator reference\n+\n+\t* scng.adb (Check_End_Of_Line): Fix bug of -gnatyf being ignored\n+\t(Check_End_Of_Line): Add -gnatyd handling (check dos line terminators)\n+\n+\t* styleg.ads (Check_Line_Terminator): Add check for new switch -gnatyd\n+\t(check dos line terminator).\n+\t(Check_Line_Max_Length): New procedure, split off from the existing\n+\tCheck_Line_Terminator routine. Separating this out allows -gnatyf to\n+\tbe properly recognized.\n+\n+\t* stylesw.ads, stylesw.adb: \n+\tAdd handling for new -gnatyd switch (check dos line terminator)\n+\n+\t* switch-c.adb: Recognize new -gnatyd switch (check dos line terminator)\n+\tRecognize -gnatwb/-gnatwB switches\n+\tInclude Warn_On_Bad_Fixed_Value for -gnatg\n+\n+\t* usage.adb: \n+\tAdd line for new -gnatyd switch (check dos line terminator)\n+\n+\t* usage.adb: Add lines for -gnatwb/-gnatwB\n+\n+\t* vms_data.ads: Add entry for NOCRLF (-gnatyd)\n+\n+\t* vms_data.ads: [NO_]BAD_FIXED_VALUES synonym for -gnatwb/-gnatwB\n+\n+\t* gnat_ugn.texi: Fix overlong lines\n+\tDocument new -gnatyd switch\n+\tDocument new -gnatwb/-gnatwB switches\n+\n+2005-03-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch4.adb (Has_Unconstrained_UU_Component): Use the base type in\n+\torder to retrieve the component list of the type, before examining\n+\tindividual components.\n+\n+\t* sem_type.adb (Covers): Types are compatible if one is the base type\n+\tof the other, even though their base types might differ when private\n+\tviews are involved.\n+\n+2005-03-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_dist.adb (Add_RAST_Features, PolyORB version): Set the From_Any,\n+\tTo_Any and TypeCode TSSs on RAS types directly using Set_TSS, instead\n+\tof using Set_Renaming_TSS. This ensures that the TSS bodies are not\n+\tanalyzed if expansion is disabled (which could otherwise cause spurious\n+\terror messages if expansion has been disabled due to previous\n+\t(unrelated) errors).\n+\n+\t* sem_prag.adb (Analyze_Pragma, case Asynchronous): If RAS expansion\n+\tis disabled, the entity denoted by the argument is the access type\n+\titself, not an underlying record type, so there is no need to go back\n+\tto the Corresponding_Remote_Type.\n+\n+2005-03-29  Gary Dismukes  <dismukes@adacore.com>\n+\t    Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_intr.adb (Expand_Dispatching_Constructor_Call): New procedure to\n+\texpand a call to an instance of\n+\tAda.Tags.Generic_Dispatching_Constructor into a dispatching call to the\n+\tConstructor actual of the instance. A class-wide membership\n+\tcheck is also generated, to ensure that the tag passed to the instance\n+\tdenotes a type in the class.\n+\t(Expand_Intrinsic_Call): Call Expand_Dispatching_Constructor in the case\n+\tof Name_Generic_Dispatching_Constructor.\n+\n+\t* Makefile.rtl: Add a-tgdico.ads to the list of library units (new Ada\n+\t05 unit for AI-260-02).\n+\n+\t* a-tgdico.ads: New file.\n+\n+\t* impunit.adb (Non_Imp_File_Names_05): Add entry \"a-tgdico\" for new\n+\tpredefined Ada 05 generic unit Ada.Tags.Generic_Dispatching_Constructor.\n+\n+\t* snames.ads, snames.adb (Preset_Names): Add entry for\n+\tGeneric_Dispatching_Constructor.\n+\n+\tPR ada/20300\n+\n+\t* sem_ch8.adb (Find_Direct_Name): Go to root type for check of\n+\tcharacter type cases.\n+\t(Analyze_Subprogram_Renaming): Add special handling for\n+\tthe case of renaming of stream attributes when the renaming denotes a\n+\tgeneric formal subprogram association for an abstract formal subprogram.\n+\tCheck that the attribute is a primitive stream attribute (and not\n+\ta class-wide stream attribute) and then rewrite the attribute name\n+\tas the name of the appropriate compiler-generated stream primitive.\n+\n+2005-03-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_util.adb (Remove_Side_Effects): Properly propagate arguments to\n+\trecursive calls.\n+\t(Is_Possibly_Unaligned_Object): Correct typo that\n+\tresulted in inaccurate result for unaligned scalars within records.\n+\n+2005-03-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Freeze_Record_Type): If the type of the component is an\n+\titype whose parent is controlled and not yet frozen, do not create a\n+\tfreeze node for the itype if expansion is disabled.\n+\n+2005-03-29  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Gnatmake): Don't fail if the main project file is declared\n+\tas having no Ada sources. Do not display message \"no sources to\n+\tcompile\" in quiet output.\n+\n+2005-03-29  Doug Rupp  <rupp@adacore.com>\n+\n+\t* Makefile.in [VMS] (EXTRA_GNATTOOLS): Add vms_help and gnat.hlp as\n+\textra tools.\n+\n+2005-03-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par-ch12.adb (P_Generic): Give better msg for illegal private generic\n+\tchild.\n+\n+2005-03-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par-ch3.adb (P_Type_Declaration): Fix bad error recovery after\n+\tmissing TYPE Improve the error message generated when compiling a\n+\tlimited interface in Ada83 or Ada95 mode.\n+\n+2005-03-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par-ch4.adb (P_Name): When a bad attribute is returned, return error,\n+\trather than proceed ahead using a junk attribute name.\n+\n+2005-03-29  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj.ads, prj.adb: (Project_Data): Add new component Display_Name\n+\n+\t* prj-part.adb (Parse_Single_Project): Set the location of a project\n+\ton its defining identifier, rather than on the reserved word \"project\".\n+\n+\t* prj-proc.adb (Expression): Adapt to the fact that default of external\n+\treferences may be string expressions, not always literal strings.\n+\t(Recursive_Process): Set Display_Name equal to Name\n+\twhen Location is No_Location, that is when there is no actual file.\n+\tGet the Display_Name of the project from the source, when it is not a\n+\tvirtual project.\n+\t(Process): Use the Display_Name in error messages\n+\n+\t* prj-strt.adb (External_Reference): Allow default to be string\n+\texpressions, not only literal strings.\n+\n+2005-03-29  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Check_Stand_Alone_Library): Do not forbid the symbol\n+\tfile and the reference symbol file to be the same file.\n+\n+2005-03-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_cat.adb (Validate_Remote_Types_Type_Conversion): Perform check to\n+\tforbid conversion of a local access-to-subprogram type to a remote one.\n+\n+\t* sem_util.adb (Wrong_Type): For a record type that is the expanded\n+\tequivalent type for a remote access-to-subprogram type, go back to the\n+\toriginal RAS entity when displaying an error message, so the casing is\n+\tthe original source casing.\n+\n+2005-03-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch11.adb (Analyze_Raise_Statement): Change message for warning\n+\ton param update.\n+\n+2005-03-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Selected_Component): Do not generate an actual\n+\tsubtype if code is being pre-analyzed, to prevent un-expanded\n+\treferences to protected formals, among others.\n+\t(Analyze_Explicit_Dereference): If the overloaded prefix includes some\n+\tinterpretation that can be a call, include the result of the call as a\n+\tpossible interpretation of the dereference.\n+\n+\t* sem_ch5.adb (Process_Bounds): Determine type of range by\n+\tpre-analyzing a copy of the original range, and then analyze the range\n+\twith the expected type.\n+\n+\t* sem_res.adb (Check_Parameterless_Call): For an explicit dereference\n+\twith an overloaded prefix where not all interpretations yield an\n+\taccess to subprogram, do not rewrite node as a call.\n+\t(Resolve_Explicit_Dereference): Recognize the previous case and rewrite\n+\tthe node as a call once the context identifies the interpretation of\n+\tthe prefix whose call yields the context type.\n+\t(Valid_Conversion): For the case of a conversion between\n+\tlocal access-to-subprogram types, check subtype conformance using\n+\tCheck_Subtype_Conformant instead of Subtype_Conformant, to have a more\n+\tdetailed error message.\n+\n+2005-03-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Set_Formal_Mode): If the subtype has a non_null\n+\tindicator, indicate that the formal can never be null.\n+\t(Process_Formals): If a formal has a non_null indicator, insert the\n+\tresulting subtype immediately before the enclosing subprogram decl,\n+\tand not at the beginning of the corresponding declarative part, to\n+\tprevent access before elaboration (Ada2005).\n+\n+2005-03-29  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\tPR ada/19956\n+\t* utils.c (finish_record_type): Use variable_size when setting sizes.\n+\n+2005-03-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* xtreeprs.adb, xnmake.adb: Use Stream_IO instead of Text_IO to\n+\tguarantee Unix style line terminators for the output files, even when\n+\trunning on windows.\n+\n+2005-03-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-direct.ads, a-direct.adb (Start_Search): Free allocated search\n+\tbuffer if an exception is raised.\n+\n+2005-03-29  Ed Falis  <falis@adacore.com>\n+\n+\t* cio.c: Undefine putchar and getchar for VTHREADS: incompatible with\n+\tVxWorks 653 1.4\n+\n+2005-03-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_util.ads: Minor reformatting\n+\t* gnat_rm.texi: Minor editing.\n+\n+2005-03-29  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* decl.c (gnat_to_gnu_entity) <E_Variable>: Rework comment.\n+\t* trans.c (tree_transform) <N_Identifier>: Use correct predicates.\n+\n 2005-03-24  Aaron W. LaFramboise  <aaronavay62@aaronwl.com>\n \n \t* adaint.c (__gnat_portable_spawn): Adjust cast."}]}