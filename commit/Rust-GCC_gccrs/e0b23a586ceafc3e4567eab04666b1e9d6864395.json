{"sha": "e0b23a586ceafc3e4567eab04666b1e9d6864395", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBiMjNhNTg2Y2VhZmMzZTQ1NjdlYWIwNDY2NmIxZTlkNjg2NDM5NQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-03-26T01:50:32Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-03-26T01:50:32Z"}, "message": "g++.exp (g++_link_flags): Use gcc-set-multilib-library-path.\n\n\t* lib/g++.exp (g++_link_flags): Use gcc-set-multilib-library-path.\n\t(g++_init): Make sure that CXXFLAGS is set.\n\t* lib/gcc-defs.exp (gcc-set-multilib-library-path): New function.\n\t* lib/gcc-dg.exp: Use gcc-set-multilib-library-path.\n\t* lib/gfortran.exp (gfortran_link_flags): Likewise.\n\t* lib/objc.exp (objc_init): Likewise.\n\t* lib/treelang.exp (treelang_init): Likewise.\n\nFrom-SVN: r97076", "tree": {"sha": "a87c475c4c91b947de6978dff563ef45abec8781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a87c475c4c91b947de6978dff563ef45abec8781"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0b23a586ceafc3e4567eab04666b1e9d6864395", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0b23a586ceafc3e4567eab04666b1e9d6864395", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0b23a586ceafc3e4567eab04666b1e9d6864395", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0b23a586ceafc3e4567eab04666b1e9d6864395/comments", "author": null, "committer": null, "parents": [{"sha": "c4803fca61d9a219fbffffbd3e5575045bf51e90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4803fca61d9a219fbffffbd3e5575045bf51e90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4803fca61d9a219fbffffbd3e5575045bf51e90"}], "stats": {"total": 134, "additions": 54, "deletions": 80}, "files": [{"sha": "9e5cdf9fedc37a596671d280472eb4a7ac60d618", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0b23a586ceafc3e4567eab04666b1e9d6864395/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0b23a586ceafc3e4567eab04666b1e9d6864395/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e0b23a586ceafc3e4567eab04666b1e9d6864395", "patch": "@@ -1,3 +1,13 @@\n+2005-03-25  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* lib/g++.exp (g++_link_flags): Use gcc-set-multilib-library-path.\n+\t(g++_init): Make sure that CXXFLAGS is set.\n+\t* lib/gcc-defs.exp (gcc-set-multilib-library-path): New function.\n+\t* lib/gcc-dg.exp: Use gcc-set-multilib-library-path.\n+\t* lib/gfortran.exp (gfortran_link_flags): Likewise. \n+\t* lib/objc.exp (objc_init): Likewise.\n+\t* lib/treelang.exp (treelang_init): Likewise.\n+\n 2005-03-25  Pat Haugen  <pthaugen@us.ibm.com>\n \n \tPR tree-optimization/20470"}, {"sha": "e1fa69f836b1ade7fc53b18933c41f966b75f71c", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 6, "deletions": 16, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0b23a586ceafc3e4567eab04666b1e9d6864395/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0b23a586ceafc3e4567eab04666b1e9d6864395/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=e0b23a586ceafc3e4567eab04666b1e9d6864395", "patch": "@@ -97,7 +97,6 @@ proc g++_include_flags { paths } {\n #\n \n proc g++_link_flags { paths } {\n-    global rootme\n     global srcdir\n     global ld_library_path\n     global GXX_UNDER_TEST\n@@ -129,21 +128,7 @@ proc g++_link_flags { paths } {\n       if [file exists \"${gccpath}/librx/librx.a\"] {\n           append flags \"-L${gccpath}/librx \"\n       }\n-      append ld_library_path \":${rootme}\"\n-      set compiler [lindex $GXX_UNDER_TEST 0]\n-      if { [is_remote host] == 0 && [which $compiler] != 0 } {\n-\tforeach i \"[exec $compiler --print-multi-lib]\" {\n-\t  set mldir \"\"\n-\t  regexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n-\t  set mldir [string trimright $mldir \"\\;@\"]\n-\t  if { \"$mldir\" == \".\" } {\n-\t    continue\n-\t  }\n-\t  if { [llength [glob -nocomplain ${rootme}/${mldir}/libgcc_s*.so.*]] >= 1 } {\n-\t    append ld_library_path \":${rootme}/${mldir}\"\n-\t  }\n-\t}\n-      }\n+      append ld_library_path [gcc-set-multilib-library-path $GXX_UNDER_TEST]\n     } else {\n       global tool_root_dir\n \n@@ -185,6 +170,7 @@ proc g++_init { args } {\n     global gluefile wrap_flags\n     global objdir srcdir\n     global ALWAYS_CXXFLAGS\n+    global CXXFLAGS\n     global TOOL_EXECUTABLE TOOL_OPTIONS\n     global GXX_UNDER_TEST\n     global TESTING_IN_BUILD_TREE\n@@ -227,6 +213,10 @@ proc g++_init { args } {\n \n     g++_maybe_build_wrapper \"${tmpdir}/g++-testglue.o\"\n \n+    if {![info exists CXXFLAGS]} {\n+\tset CXXFLAGS \"\"\n+    }\n+\n     set ALWAYS_CXXFLAGS \"\"\n \n     if ![is_remote host] {"}, {"sha": "c48b5399ac08a28766354ba62625e98dbf5ef0e1", "filename": "gcc/testsuite/lib/gcc-defs.exp", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0b23a586ceafc3e4567eab04666b1e9d6864395/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0b23a586ceafc3e4567eab04666b1e9d6864395/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp?ref=e0b23a586ceafc3e4567eab04666b1e9d6864395", "patch": "@@ -219,3 +219,35 @@ proc dg-additional-files-options { options source } {\n \n     return $options\n }\n+\n+# Return a colon-separate list of directories to search for libraries\n+# for COMPILER, including multilib directories.\n+\n+proc gcc-set-multilib-library-path { compiler } {\n+    global rootme\n+\n+    # ??? rootme will not be set when testing an installed compiler.\n+    # In that case, we should perhaps use some other method to find\n+    # libraries.\n+    if {![info exists rootme]} {\n+\treturn \"\"\n+    }\n+\n+    set libpath \":${rootme}\"\n+    set compiler [lindex $compiler 0]\n+    if { [is_remote host] == 0 && [which $compiler] != 0 } {\n+\tforeach i \"[exec $compiler --print-multi-lib]\" {\n+\t    set mldir \"\"\n+\t    regexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n+\t    set mldir [string trimright $mldir \"\\;@\"]\n+\t    if { \"$mldir\" == \".\" } {\n+\t\tcontinue\n+\t    }\n+\t    if { [llength [glob -nocomplain ${rootme}/${mldir}/libgcc_s*.so.*]] >= 1 } {\n+\t\tappend libpath \":${rootme}/${mldir}\"\n+\t    }\n+\t}\n+    }\n+\n+    return $libpath\n+}"}, {"sha": "aecce0f5eb5d586d1bc013be3073cb047d4f107b", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0b23a586ceafc3e4567eab04666b1e9d6864395/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0b23a586ceafc3e4567eab04666b1e9d6864395/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=e0b23a586ceafc3e4567eab04666b1e9d6864395", "patch": "@@ -52,28 +52,12 @@ if ![info exists GCC_UNDER_TEST] {\n     set GCC_UNDER_TEST \"[find_gcc]\"\n }\n \n-global rootme\n-global ld_library_path\n global orig_environment_saved\n \n # This file may be sourced, so don't override environment settings\n # that have been previously setup.\n if { $orig_environment_saved == 0 } {\n-    set ld_library_path \"${rootme}\"\n-    set compiler [lindex $GCC_UNDER_TEST 0]\n-    if { [is_remote host] == 0 && [which $compiler] != 0 } {\n-\tforeach i \"[exec $compiler --print-multi-lib]\" {\n-\t    set mldir \"\"\n-\t    regexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n-\t    set mldir [string trimright $mldir \"\\;@\"]\n-\t    if { \"$mldir\" == \".\" } {\n-\t\tcontinue\n-\t    }\n-\t    if { [llength [glob -nocomplain ${rootme}/${mldir}/libgcc_s*.so.*]] >= 1 } {\n-\t\tappend ld_library_path \":${rootme}/${mldir}\"\n-\t    }\n-\t}\n-    }\n+    append ld_library_path [gcc-set-multilib-library-path $GCC_UNDER_TEST]\n     set_ld_library_path_env_vars\n }\n "}, {"sha": "43a104e1f51301f2cf5cf5618163d1fa964021bb", "filename": "gcc/testsuite/lib/gfortran.exp", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0b23a586ceafc3e4567eab04666b1e9d6864395/gcc%2Ftestsuite%2Flib%2Fgfortran.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0b23a586ceafc3e4567eab04666b1e9d6864395/gcc%2Ftestsuite%2Flib%2Fgfortran.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgfortran.exp?ref=e0b23a586ceafc3e4567eab04666b1e9d6864395", "patch": "@@ -73,7 +73,6 @@ proc gfortran_version { } {\n #\n \n proc gfortran_link_flags { paths } {\n-    global rootme\n     global srcdir\n     global ld_library_path\n     global GFORTRAN_UNDER_TEST\n@@ -94,21 +93,8 @@ proc gfortran_link_flags { paths } {\n       if [file exists \"${gccpath}/libiberty/libiberty.a\"] {\n           append flags \"-L${gccpath}/libiberty \"\n       }\n-      append ld_library_path \":${rootme}\"\n-      set compiler [lindex $GFORTRAN_UNDER_TEST 0]\n-      if { [is_remote host] == 0 && [which $compiler] != 0 } {\n-\tforeach i \"[exec $compiler --print-multi-lib]\" {\n-\t  set mldir \"\"\n-\t  regexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n-\t  set mldir [string trimright $mldir \"\\;@\"]\n-\t  if { \"$mldir\" == \".\" } {\n-\t    continue\n-\t  }\n-\t  if { [llength [glob -nocomplain ${rootme}/${mldir}/libgcc_s*.so.*]] >= 1 } {\n-\t    append ld_library_path \":${rootme}/${mldir}\"\n-\t  }\n-\t}\n-      }\n+      append ld_library_path \\\n+\t[gcc-set-multilib-library-path $GFORTRAN_UNDER_TEST]\n     }\n \n     set_ld_library_path_env_vars"}, {"sha": "fe86b0e2bff4389fea7aba8145c126cc6b23817f", "filename": "gcc/testsuite/lib/objc.exp", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0b23a586ceafc3e4567eab04666b1e9d6864395/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0b23a586ceafc3e4567eab04666b1e9d6864395/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobjc.exp?ref=e0b23a586ceafc3e4567eab04666b1e9d6864395", "patch": "@@ -115,21 +115,7 @@ proc objc_init { args } {\n \n     objc_maybe_build_wrapper \"${tmpdir}/objc-testglue.o\"\n \n-    set objc_libgcc_s_path \"${rootme}\"\n-    set compiler [lindex $OBJC_UNDER_TEST 0]\n-    if { [is_remote host] == 0 && [which $compiler] != 0 } {\n-\tforeach i \"[exec $compiler --print-multi-lib]\" {\n-\t    set mldir \"\"\n-\t    regexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n-\t    set mldir [string trimright $mldir \"\\;@\"]\n-\t    if { \"$mldir\" == \".\" } {\n-\t\tcontinue\n-\t    }\n-\t    if { [llength [glob -nocomplain ${rootme}/${mldir}/libgcc_s*.so.*]] >= 1 } {\n-\t\tappend objc_libgcc_s_path \":${rootme}/${mldir}\"\n-\t    }\n-\t}\n-    }\n+    append objc_libgcc_s_path [gcc-set-multilib-library-path $OBJC_UNDER_TEST]\n }\n \n proc objc_target_compile { source dest type options } {"}, {"sha": "aba9379793c072c531aa263e443d64687fe4183e", "filename": "gcc/testsuite/lib/treelang.exp", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0b23a586ceafc3e4567eab04666b1e9d6864395/gcc%2Ftestsuite%2Flib%2Ftreelang.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0b23a586ceafc3e4567eab04666b1e9d6864395/gcc%2Ftestsuite%2Flib%2Ftreelang.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftreelang.exp?ref=e0b23a586ceafc3e4567eab04666b1e9d6864395", "patch": "@@ -84,7 +84,6 @@ proc default_treelang_version { } {\n set treelang_initialized 0\n \n proc treelang_init { args } {\n-    global rootme\n     global tmpdir\n     global libdir\n     global gluefile wrap_flags\n@@ -115,21 +114,8 @@ proc treelang_init { args } {\n \n     treelang_maybe_build_wrapper \"${tmpdir}/treelang-testglue.o\"\n \n-    set treelang_libgcc_s_path \"${rootme}\"\n-    set compiler [lindex $TREELANG_UNDER_TEST 0]\n-    if { [is_remote host] == 0 && [which $compiler] != 0 } {\n-\tforeach i \"[exec $compiler --print-multi-lib]\" {\n-\t    set mldir \"\"\n-\t    regexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n-\t    set mldir [string trimright $mldir \"\\;@\"]\n-\t    if { \"$mldir\" == \".\" } {\n-\t\tcontinue\n-\t    }\n-\t    if { [llength [glob -nocomplain ${rootme}/${mldir}/libgcc_s*.so.*]] >= 1 } {\n-\t\tappend treelang_libgcc_s_path \":${rootme}/${mldir}\"\n-\t    }\n-\t}\n-    }\n+    set treelang_libgcc_s_path \\\n+\t[gcc-set-multilib-library-path $TREELANG_UNDER_TEST]\n }\n \n proc treelang_target_compile { source dest type options } {"}]}