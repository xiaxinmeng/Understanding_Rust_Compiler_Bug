{"sha": "7ee2468b9274dd08bac00909fbbe8308f92c68e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VlMjQ2OGI5Mjc0ZGQwOGJhYzAwOTA5ZmJiZTgzMDhmOTJjNjhlNQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-07-16T11:32:42Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-07-16T11:32:42Z"}, "message": "system.h (dump_file): Do not define.\n\ngcc/\n\t* system.h (dump_file): Do not define.\n\t* tree-pass.h: Include dumpfile.h, which is a new file containing...\n\t(enum tree_dump_index, TDF_*, get_dump_file_name, dump_enabled_p,\n\tdump_initialized_p, dump_begin, dump_end, dump_node, dump_switch_p,\n\tdump_flag_name, dump_file, dump_flags, dump_file_name,\n\tget_dump_file_info, struct dump_file_info): all of this, moved to...\n\t* dumpfile.h: Here, new file.\n\t* tree-dump.h: Include dumpfile.h, but not tree-pass.h.\n\t(dump_stmt): Remove prototype for C++ specific function.\n\t(dump_enumerated_decls): Move prototype from here...\n\t* tree-flow.h (dump_enumerated_decls): ... to here.\n\t(get_ref_base_and_extent) Move prototype from here ...\n\t* tree.h (get_ref_base_and_extent) ... to here.\n\t* tree-ssa-live.c: Do not inclde tree-pretty-print.h, because\n\tgimple-pretty-print.h is enough.  Do not include tree-dump.h,\n\tinclude timevar.h and dumpfile.h instead.\n\t(struct numbered_tree_d, compare_decls_by_uid,\n\tdump_enumerated_decls_push, dump_enumerated_decls): Move from here ...\n\t* tree-dfa.c:(struct numbered_tree_d, compare_decls_by_uid,\n\tdump_enumerated_decls_push, dump_enumerated_decls):... to here.\n\tDo not include timevar.h.\n\t* tree.c: Do not include timevar.h.\n\t* tree-cfg.c: Do not include langhooks.h, tree-pretty-print.h, and\n\ttimevar.h.\n\t(dump_cfg_stats): Use current_function_name.\n\t(gimple_cfg2vcg): Likewise.\n\t(dump_function_to_file): Likewise.\n\t* df-scan.c: Do not include tree-pass.h and timevar.h.\n\tInclude dumpfile.h.\n\t(df_entry_block_bitmap_verify, df_exit_block_bitmap_verify): Do not\n\tuse print_current_pass.\n\t* df-problems.c: Include dumpfile.h.\n\tAlways define REG_DEAD_DEBUGGING, avoid #ifdef code, because it\n\tleads to errors in the code not selected.\n\t(df_note_compute): Do not print_rtl_with_bb here.  Fix compilation\n\tbug if REG_DEAD_DEBUGGING is not 0, get_insns is not available here.\n\t* lcm.c: Include dumpfile.h.\n\tRemove obsolete include of insn-attr.h.\n\t* dojump.c (do_compare_rtx_and_jump): Remove failure printing for\n\tmissing probability notes.\n\t* stmt.c: Include dumpfile.h.\n\t(emit_case_decision_tree): Re-enable printing expand details only\n\tif TDF_DETAILS.\n\t* alias.c, auto-inc-dec.c, bb-reorder.c, caller-save.c, cfg.c, \n\tcfgcleanup.c, cfgexpand.c, cfgloop.c, cfgloopmanip.c, cgraph.c, \n\tcgraphclones.c, cgraphunit.c, combine.c, combine-stack-adj.c, \n\tcoverage.c, cprop.c, cse.c, cselib.c, dbgcnt.c, dce.c, df-core.c, \n\tdse.c, dwarf2out.c, emit-rtl.c, except.c, expr.c, final.c, \n\tfunction.c, fwprop.c, gcse.c, gimple-fold.c, \n\tgimple-pretty-print.c, gimple-ssa-strength-reduction.c, \n\tgimplify.c, graphite-blocking.c, graphite-clast-to-gimple.c, \n\tgraphite-dependences.c, graphite-interchange.c, \n\tgraphite-optimize-isl.c, graphite-poly.c, \n\tgraphite-sese-to-poly.c, haifa-sched.c, hw-doloop.c, ifcvt.c, \n\tipa.c, ipa-cp.c, ipa-inline-analysis.c, ipa-inline.c, \n\tipa-inline-transform.c, ipa-prop.c, ipa-pure-const.c, \n\tipa-reference.c, ipa-split.c, ipa-utils.c, ira.c, ira-emit.c, \n\tjump.c, loop-doloop.c, loop-init.c, loop-invariant.c, loop-iv.c, \n\tloop-unroll.c, loop-unswitch.c, lower-subreg.c, \n\tlto-section-out.c, lto-streamer-in.c, matrix-reorg.c, mcf.c, \n\tmode-switching.c, modulo-sched.c, omega.c, omp-low.c, passes.c, \n\tplugin.c, postreload.c, postreload-gcse.c, predict.c, print-rtl.c, \n\tprint-tree.c, profile.c, recog.c, ree.c, regcprop.c, reginfo.c, \n\tregmove.c, regrename.c, reg-stack.c, reload1.c, reorg.c, \n\tsched-rgn.c, sched-vis.c, sel-sched.c, sel-sched-ir.c, \n\tstore-motion.c, tracer.c, trans-mem.c, tree-affine.c, \n\ttree-call-cdce.c, tree-cfgcleanup.c, tree-chrec.c, \n\ttree-data-ref.c, tree-diagnostic.c, tree-dump.c,\n\ttree-eh.c, tree-flow-inline.h, tree-if-conv.c, tree-into-ssa.c, \n\ttree-mudflap.c, tree-nrv.c, tree-object-size.c, \n\ttree-optimize.c, tree-outof-ssa.c, tree-predcom.c, \n\ttree-pretty-print.c, tree-profile.c, tree-scalar-evolution.c, \n\ttree-sra.c, tree-ssa-address.c, tree-ssa-alias.c, tree-ssa.c, \n\ttree-ssa-ccp.c, tree-ssa-coalesce.c, tree-ssa-copy.c, \n\ttree-ssa-copyrename.c,, tree-ssa-dce.c, tree-ssa-dom.c, \n\ttree-ssa-dse.c, tree-ssa-forwprop.c, tree-ssa-ifcombine.c, \n\ttree-ssa-loop.c, tree-ssa-loop-ch.c, tree-ssa-loop-im.c, \n\ttree-ssa-loop-ivcanon.c, tree-ssa-loop-ivopts.c, \n\ttree-ssa-loop-manip.c, tree-ssa-loop-niter.c, \n\ttree-ssa-loop-prefetch.c, tree-ssa-loop-unswitch.c, \n\ttree-ssa-math-opts.c, tree-ssa-operands.c, tree-ssa-phiopt.c, \n\ttree-ssa-phiprop.c, tree-ssa-pre.c, tree-ssa-propagate.c, \n\ttree-ssa-reassoc.c, tree-ssa-sccvn.c, tree-ssa-sink.c, \n\ttree-ssa-structalias.c, tree-ssa-tail-merge.c, tree-ssa-ter.c, \n\ttree-ssa-threadedge.c, tree-ssa-threadupdate.c, \n\ttree-ssa-uncprop.c, tree-ssa-uninit.c, \n\ttree-switch-conversion.c, tree-tailcall.c, \n\ttree-vect-data-refs.c, tree-vect-loop.c, \n\ttree-vect-loop-manip.c, tree-vectorizer.c, \n\ttree-vect-patterns.c, tree-vect-slp.c, tree-vect-stmts.c, \n\ttree-vrp.c, value-prof.c, var-tracking.c, web.c: Include tree-pass.h\n\tonly if needed.  If tree-pass.h is included, do not include timevar.h\n\tand dumpfile.h.  If tree-pass.h is not included but dump_file, or\n\tdump_flags, or the TDF_* flags are used, include dumpfile.h.\n\tIf gimple-pretty-print.h is included, don't include tree-pretty-print.h.\n\tRemove assorted unnecessary includes.\n\n\t* config/mn10300/mn10300.c, config/c6x/c6x.c, config/ia64/ia64.c,\n\tconfig/arm/arm.c, config/bfin/bfin.c, config/frv/frv.c,\n\tconfig/spu/spu.c, config/mep/mep.c, config/i386/i386.c:\n\tInclude dumpfile.h.\n\t* config/rl78/rl78.c: Include dumpfile.h instead of tree-pass.h.\n\t* arm/t-arm, avr/t-avr, i386/t-i386, ia64/t-ia64, mep/t-mep,\n\tspu/t-spu-elf: Fix dependencies.\n\nc-family/\n\t* c-gimplify.c: Include dumpfile.h instead of tree-dump.h.\n\t* c-ada-spec.c: Likewise.\n\t* c-dump.c (dump_stmt): Move to cp/dump.c, the only user.\n\nc/\n\t* c-decl.c: Include dumpfile.h instead of tree-dump.h.\n\t* Make-lang.in: Fix dependencies.\n\ncp/\n\t* dump.c (dump_stmt): Moved here from c-dump.c.\n\t* optimize.c: Include dumpfile.h instead of tree-dump.h.\n\t* class.c: Likewise.\n\t* decl2.c: Likewise.\n\t* Make-lang.in: Fix dependencies.\n\nfortran/\n\t* f95-lang.c: Include dumpfile.h instead of tree-dump.h.\n\t* Make-lang.in: Fix dependencies.\n\njava/\n\t* java-gimplify.c Include dumpfile.h instead of tree-dump.h\n\t* Make-lang.in: Fix dependencies.\n\nlto/\n\t* lto.c: Do not include timevar.h.\n\t* Make-lang.in: Fix dependencies.\n\nada/\n\t* gcc-interface/utils.c: Include timevar.h.\n\t* Make-lang.in: Fix dependencies.\n\nFrom-SVN: r189519", "tree": {"sha": "efc5d943947f757e56cc312a7a5902b26d667498", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efc5d943947f757e56cc312a7a5902b26d667498"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ee2468b9274dd08bac00909fbbe8308f92c68e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ee2468b9274dd08bac00909fbbe8308f92c68e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ee2468b9274dd08bac00909fbbe8308f92c68e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ee2468b9274dd08bac00909fbbe8308f92c68e5/comments", "author": null, "committer": null, "parents": [{"sha": "9e227d605e3adef6f379ab76424e197cc06ec275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e227d605e3adef6f379ab76424e197cc06ec275", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e227d605e3adef6f379ab76424e197cc06ec275"}], "stats": {"total": 1692, "additions": 819, "deletions": 873}, "files": [{"sha": "e32642275304c966d964f1d9432370d15125d7b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -1,3 +1,110 @@\n+2012-07-16  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* system.h (dump_file): Do not define.\n+\t* tree-pass.h: Include dumpfile.h, which is a new file containing...\n+\t(enum tree_dump_index, TDF_*, get_dump_file_name, dump_enabled_p,\n+\tdump_initialized_p, dump_begin, dump_end, dump_node, dump_switch_p,\n+\tdump_flag_name, dump_file, dump_flags, dump_file_name,\n+\tget_dump_file_info, struct dump_file_info): all of this, moved to...\n+\t* dumpfile.h: Here, new file.\n+\t* tree-dump.h: Include dumpfile.h, but not tree-pass.h.\n+\t(dump_stmt): Remove prototype for C++ specific function.\n+\t(dump_enumerated_decls): Move prototype from here...\n+\t* tree-flow.h (dump_enumerated_decls): ... to here.\n+\t(get_ref_base_and_extent) Move prototype from here ...\n+\t* tree.h (get_ref_base_and_extent) ... to here.\n+\t* tree-ssa-live.c: Do not inclde tree-pretty-print.h, because\n+\tgimple-pretty-print.h is enough.  Do not include tree-dump.h,\n+\tinclude timevar.h and dumpfile.h instead.\n+\t(struct numbered_tree_d, compare_decls_by_uid,\n+\tdump_enumerated_decls_push, dump_enumerated_decls): Move from here ...\n+\t* tree-dfa.c:(struct numbered_tree_d, compare_decls_by_uid,\n+\tdump_enumerated_decls_push, dump_enumerated_decls):... to here.\n+\tDo not include timevar.h.\n+\t* tree.c: Do not include timevar.h.\n+\t* tree-cfg.c: Do not include langhooks.h, tree-pretty-print.h, and\n+\ttimevar.h.\n+\t(dump_cfg_stats): Use current_function_name.\n+\t(gimple_cfg2vcg): Likewise.\n+\t(dump_function_to_file): Likewise.\n+\t* df-scan.c: Do not include tree-pass.h and timevar.h.\n+\tInclude dumpfile.h.\n+\t(df_entry_block_bitmap_verify, df_exit_block_bitmap_verify): Do not\n+\tuse print_current_pass.\n+\t* df-problems.c: Include dumpfile.h.\n+\tAlways define REG_DEAD_DEBUGGING, avoid #ifdef code, because it\n+\tleads to errors in the code not selected.\n+\t(df_note_compute): Do not print_rtl_with_bb here.  Fix compilation\n+\tbug if REG_DEAD_DEBUGGING is not 0, get_insns is not available here.\n+\t* lcm.c: Include dumpfile.h.\n+\tRemove obsolete include of insn-attr.h.\n+\t* dojump.c (do_compare_rtx_and_jump): Remove failure printing for\n+\tmissing probability notes.\n+\t* stmt.c: Include dumpfile.h.\n+\t(emit_case_decision_tree): Re-enable printing expand details only\n+\tif TDF_DETAILS.\n+\t* alias.c, auto-inc-dec.c, bb-reorder.c, caller-save.c, cfg.c, \n+\tcfgcleanup.c, cfgexpand.c, cfgloop.c, cfgloopmanip.c, cgraph.c, \n+\tcgraphclones.c, cgraphunit.c, combine.c, combine-stack-adj.c, \n+\tcoverage.c, cprop.c, cse.c, cselib.c, dbgcnt.c, dce.c, df-core.c, \n+\tdse.c, dwarf2out.c, emit-rtl.c, except.c, expr.c, final.c, \n+\tfunction.c, fwprop.c, gcse.c, gimple-fold.c, \n+\tgimple-pretty-print.c, gimple-ssa-strength-reduction.c, \n+\tgimplify.c, graphite-blocking.c, graphite-clast-to-gimple.c, \n+\tgraphite-dependences.c, graphite-interchange.c, \n+\tgraphite-optimize-isl.c, graphite-poly.c, \n+\tgraphite-sese-to-poly.c, haifa-sched.c, hw-doloop.c, ifcvt.c, \n+\tipa.c, ipa-cp.c, ipa-inline-analysis.c, ipa-inline.c, \n+\tipa-inline-transform.c, ipa-prop.c, ipa-pure-const.c, \n+\tipa-reference.c, ipa-split.c, ipa-utils.c, ira.c, ira-emit.c, \n+\tjump.c, loop-doloop.c, loop-init.c, loop-invariant.c, loop-iv.c, \n+\tloop-unroll.c, loop-unswitch.c, lower-subreg.c, \n+\tlto-section-out.c, lto-streamer-in.c, matrix-reorg.c, mcf.c, \n+\tmode-switching.c, modulo-sched.c, omega.c, omp-low.c, passes.c, \n+\tplugin.c, postreload.c, postreload-gcse.c, predict.c, print-rtl.c, \n+\tprint-tree.c, profile.c, recog.c, ree.c, regcprop.c, reginfo.c, \n+\tregmove.c, regrename.c, reg-stack.c, reload1.c, reorg.c, \n+\tsched-rgn.c, sched-vis.c, sel-sched.c, sel-sched-ir.c, \n+\tstore-motion.c, tracer.c, trans-mem.c, tree-affine.c, \n+\ttree-call-cdce.c, tree-cfgcleanup.c, tree-chrec.c, \n+\ttree-data-ref.c, tree-diagnostic.c, tree-dump.c,\n+\ttree-eh.c, tree-flow-inline.h, tree-if-conv.c, tree-into-ssa.c, \n+\ttree-mudflap.c, tree-nrv.c, tree-object-size.c, \n+\ttree-optimize.c, tree-outof-ssa.c, tree-predcom.c, \n+\ttree-pretty-print.c, tree-profile.c, tree-scalar-evolution.c, \n+\ttree-sra.c, tree-ssa-address.c, tree-ssa-alias.c, tree-ssa.c, \n+\ttree-ssa-ccp.c, tree-ssa-coalesce.c, tree-ssa-copy.c, \n+\ttree-ssa-copyrename.c,, tree-ssa-dce.c, tree-ssa-dom.c, \n+\ttree-ssa-dse.c, tree-ssa-forwprop.c, tree-ssa-ifcombine.c, \n+\ttree-ssa-loop.c, tree-ssa-loop-ch.c, tree-ssa-loop-im.c, \n+\ttree-ssa-loop-ivcanon.c, tree-ssa-loop-ivopts.c, \n+\ttree-ssa-loop-manip.c, tree-ssa-loop-niter.c, \n+\ttree-ssa-loop-prefetch.c, tree-ssa-loop-unswitch.c, \n+\ttree-ssa-math-opts.c, tree-ssa-operands.c, tree-ssa-phiopt.c, \n+\ttree-ssa-phiprop.c, tree-ssa-pre.c, tree-ssa-propagate.c, \n+\ttree-ssa-reassoc.c, tree-ssa-sccvn.c, tree-ssa-sink.c, \n+\ttree-ssa-structalias.c, tree-ssa-tail-merge.c, tree-ssa-ter.c, \n+\ttree-ssa-threadedge.c, tree-ssa-threadupdate.c, \n+\ttree-ssa-uncprop.c, tree-ssa-uninit.c, \n+\ttree-switch-conversion.c, tree-tailcall.c, \n+\ttree-vect-data-refs.c, tree-vect-loop.c, \n+\ttree-vect-loop-manip.c, tree-vectorizer.c, \n+\ttree-vect-patterns.c, tree-vect-slp.c, tree-vect-stmts.c, \n+\ttree-vrp.c, value-prof.c, var-tracking.c, web.c: Include tree-pass.h\n+\tonly if needed.  If tree-pass.h is included, do not include timevar.h\n+\tand dumpfile.h.  If tree-pass.h is not included but dump_file, or\n+\tdump_flags, or the TDF_* flags are used, include dumpfile.h.\n+\tIf gimple-pretty-print.h is included, don't include tree-pretty-print.h.\n+\tRemove assorted unnecessary includes.\n+\n+\t* config/mn10300/mn10300.c, config/c6x/c6x.c, config/ia64/ia64.c,\n+\tconfig/arm/arm.c, config/bfin/bfin.c, config/frv/frv.c,\n+\tconfig/spu/spu.c, config/mep/mep.c, config/i386/i386.c:\n+\tInclude dumpfile.h.\n+\t* config/rl78/rl78.c: Include dumpfile.h instead of tree-pass.h.\n+\t* arm/t-arm, avr/t-avr, i386/t-i386, ia64/t-ia64, mep/t-mep,\n+\tspu/t-spu-elf: Fix dependencies.\n+\n 2012-07-16  Dehao Chen  <dehao@google.com>\n \n \tRevert"}, {"sha": "46c7a40c36e70b8744225cc5e0ab1b8ef3e25df7", "filename": "gcc/Makefile.in", "status": "modified", "additions": 265, "deletions": 259, "changes": 524, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -930,8 +930,8 @@ MKDEPS_H = $(srcdir)/../libcpp/include/mkdeps.h\n SYMTAB_H = $(srcdir)/../libcpp/include/symtab.h $(OBSTACK_H)\n CPP_ID_DATA_H = $(CPPLIB_H) $(srcdir)/../libcpp/include/cpp-id-data.h\n CPP_INTERNAL_H = $(srcdir)/../libcpp/internal.h $(CPP_ID_DATA_H)\n-TREE_PASS_H = tree-pass.h $(TIMEVAR_H)\n-TREE_DUMP_H = tree-dump.h $(SPLAY_TREE_H) $(TREE_PASS_H)\n+TREE_DUMP_H = tree-dump.h $(SPLAY_TREE_H)\n+TREE_PASS_H = tree-pass.h $(TIMEVAR_H) dumpfile.h\n TREE_FLOW_H = tree-flow.h tree-flow-inline.h tree-ssa-operands.h \\\n \t\t$(BITMAP_H) sbitmap.h $(BASIC_BLOCK_H) $(GIMPLE_H) \\\n \t\t$(HASHTAB_H) $(CGRAPH_H) $(IPA_REFERENCE_H) \\\n@@ -1945,7 +1945,7 @@ c-family/c-gimplify.o : c-family/c-gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H)\n \t$(C_COMMON_H) $(DIAGNOSTIC_CORE_H) $(GIMPLE_H) \\\n \t$(FLAGS_H) langhooks.h $(LANGHOOKS_DEF_H) \\\n \t$(TM_H) coretypes.h $(C_PRETTY_PRINT_H) $(CGRAPH_H) \\\n-\t$(TREE_DUMP_H) $(TREE_INLINE_H)\n+\tdumpfile.h $(TREE_INLINE_H)\n \n c-family/c-lex.o : c-family/c-lex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(TM_H) $(TREE_H) $(FIXED_VALUE_H) debug.h $(C_COMMON_H) $(SPLAY_TREE_H) \\\n@@ -1989,7 +1989,7 @@ c-family/c-semantics.o : c-family/c-semantics.c $(CONFIG_H) $(SYSTEM_H) \\\n \n c-family/c-ada-spec.o : c-family/c-ada-spec.c c-family/c-ada-spec.h \\\n \t$(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(CPP_ID_DATA_H) $(TM_H) \\\n-\tcoretypes.h tree-iterator.h $(TREE_PASS_H)\n+\tcoretypes.h tree-iterator.h dumpfile.h\n \n c-family/stub-objc.o : c-family/stub-objc.c $(CONFIG_H) $(SYSTEM_H) \\\n \tcoretypes.h $(TREE_H) $(C_COMMON_H) c-family/c-objc.h\n@@ -2161,7 +2161,7 @@ lto-streamer-in.o: lto-streamer-in.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) toplev.h $(DIAGNOSTIC_CORE_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n    $(HASHTAB_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(TREE_PASS_H) $(CGRAPH_H) \\\n    $(FUNCTION_H) $(GGC_H) $(DIAGNOSTIC_H) $(LIBFUNCS_H) $(EXCEPT_H) debug.h \\\n-   $(TIMEVAR_H) $(IPA_UTILS_H) $(LTO_STREAMER_H) toplev.h \\\n+   $(IPA_UTILS_H) $(LTO_STREAMER_H) toplev.h \\\n    $(DATA_STREAMER_H) $(GIMPLE_STREAMER_H) $(TREE_STREAMER_H)\n lto-streamer-out.o : lto-streamer-out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(DIAGNOSTIC_CORE_H) $(TREE_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) input.h \\\n@@ -2177,7 +2177,7 @@ lto-section-in.o: lto-section-in.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(LTO_STREAMER_H) lto-compress.h\n lto-section-out.o : lto-section-out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(DIAGNOSTIC_CORE_H) $(TREE_H) $(EXPR_H) $(PARAMS_H) input.h \\\n-   $(HASHTAB_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(TREE_PASS_H) \\\n+   $(HASHTAB_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n    $(CGRAPH_H) $(FUNCTION_H) $(GGC_H) $(EXCEPT_H) pointer-set.h \\\n    $(BITMAP_H) langhooks.h $(LTO_STREAMER_H) lto-compress.h \\\n    $(DATA_STREAMER_H)\n@@ -2191,7 +2191,7 @@ lto-streamer.o: lto-streamer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h   \\\n    $(TM_H) $(TREE_H) $(GIMPLE_H) $(BITMAP_H) $(LTO_STREAMER_H) $(FLAGS_H) \\\n    $(TREE_FLOW_H) $(DIAGNOSTIC_CORE_H) $(LTO_SYMTAB_H) toplev.h \\\n    $(DIAGNOSTIC_CORE_H) $(STREAMER_HOOKS_H)\n-langhooks.o : langhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+langhooks.o : langhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TIMEVAR_H) \\\n    $(TREE_H) toplev.h $(DIAGNOSTIC_CORE_H) $(TREE_INLINE_H) $(RTL_H) insn-config.h \\\n    langhooks.h $(TARGET_H) $(LANGHOOKS_DEF_H) $(FLAGS_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n    intl.h $(GIMPLE_H) $(CGRAPH_H) output.h tree-diagnostic.h\n@@ -2200,7 +2200,7 @@ tree.o: tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    toplev.h $(DIAGNOSTIC_CORE_H) $(GGC_H) $(HASHTAB_H) $(TARGET_H) output.h $(TM_P_H) \\\n    langhooks.h gt-tree.h $(TREE_INLINE_H) tree-iterator.h \\\n    $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(OBSTACK_H) pointer-set.h \\\n-   $(TREE_PASS_H) $(LANGHOOKS_DEF_H) $(DIAGNOSTIC_H) $(CGRAPH_H) $(TIMEVAR_H) \\\n+   $(TREE_PASS_H) $(LANGHOOKS_DEF_H) $(DIAGNOSTIC_H) $(CGRAPH_H) \\\n    $(EXCEPT_H) debug.h intl.h tree-diagnostic.h $(TREE_PRETTY_PRINT_H) \\\n    $(COMMON_TARGET_H)\n tree-dump.o: tree-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -2213,117 +2213,116 @@ tree-inline.o : tree-inline.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    debug.h $(DIAGNOSTIC_H) $(EXCEPT_H) $(TREE_FLOW_H) tree-iterator.h tree-mudflap.h \\\n    $(IPA_PROP_H) value-prof.h $(TREE_PASS_H) $(TARGET_H) \\\n    $(TREE_PRETTY_PRINT_H)\n-print-tree.o : print-tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(GGC_H) langhooks.h tree-iterator.h \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_PASS_H) $(GIMPLE_PRETTY_PRINT_H)\n+print-tree.o : print-tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h \\\n+   $(TM_H) $(TREE_H) $(GGC_H) langhooks.h tree-iterator.h \\\n+   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(GIMPLE_PRETTY_PRINT_H)\n stor-layout.o : stor-layout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(PARAMS_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) $(RTL_H) \\\n    $(GGC_H) $(TM_P_H) $(TARGET_H) langhooks.h $(REGS_H) gt-stor-layout.h \\\n    $(DIAGNOSTIC_CORE_H) $(CGRAPH_H) $(TREE_INLINE_H) $(TREE_DUMP_H) $(GIMPLE_H)\n tree-ssa-tail-merge.o: tree-ssa-tail-merge.c \\\n    $(SYSTEM_H) $(CONFIG_H) coretypes.h $(TM_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) \\\n-   $(GIMPLE_H) $(FUNCTION_H) \\\n-   $(TIMEVAR_H) tree-ssa-sccvn.h \\\n+   $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) $(TREE_DUMP_H) \\\n+   $(GIMPLE_H) $(FUNCTION_H) tree-ssa-sccvn.h \\\n    $(CGRAPH_H) $(GIMPLE_PRETTY_PRINT_H) $(PARAMS_H)\n tree-ssa-structalias.o: tree-ssa-structalias.c \\\n    $(SYSTEM_H) $(CONFIG_H) coretypes.h $(TM_H) $(GGC_H) $(OBSTACK_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) \\\n    $(GIMPLE_H) $(HASHTAB_H) $(FUNCTION_H) $(CGRAPH_H) \\\n-   $(TREE_PASS_H) $(TIMEVAR_H) alloc-pool.h $(SPLAY_TREE_H) $(PARAMS_H) \\\n+   $(TREE_PASS_H) alloc-pool.h $(SPLAY_TREE_H) $(PARAMS_H) \\\n    $(CGRAPH_H) $(ALIAS_H) pointer-set.h\n tree-ssa-uninit.o : tree-ssa-uninit.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(DIAGNOSTIC_H) \\\n-   $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) langhooks.h $(TREE_PASS_H) $(BASIC_BLOCK_H) $(BITMAP_H) \\\n+   $(FUNCTION_H) $(TM_H) coretypes.h \\\n+   $(TREE_PASS_H) $(BASIC_BLOCK_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(HASHTAB_H) pointer-set.h \\\n    $(GIMPLE_H) $(TREE_INLINE_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa.o : tree-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(EXPR_H) $(DIAGNOSTIC_H) \\\n-   toplev.h $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) langhooks.h $(TREE_PASS_H) $(BASIC_BLOCK_H) $(BITMAP_H) \\\n+   toplev.h $(FUNCTION_H) $(TM_H) coretypes.h \\\n+   langhooks.h $(TREE_PASS_H) $(BASIC_BLOCK_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(GGC_H) $(HASHTAB_H) pointer-set.h \\\n    $(GIMPLE_H) $(TREE_INLINE_H) $(TARGET_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) $(CFGLOOP_H)\n tree-into-ssa.o : tree-into-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(DIAGNOSTIC_H) \\\n-   $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(FUNCTION_H) $(TM_H) coretypes.h \\\n    langhooks.h domwalk.h $(TREE_PASS_H) $(PARAMS_H) $(BASIC_BLOCK_H) \\\n    $(BITMAP_H) $(CFGLOOP_H) $(FLAGS_H) $(HASHTAB_H) \\\n    $(GIMPLE_H) $(TREE_INLINE_H) vecprim.h \\\n    $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-ter.o : tree-ssa-ter.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h dumpfile.h \\\n    $(TREE_SSA_LIVE_H) $(BITMAP_H) $(FLAGS_H) \\\n    $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-coalesce.o : tree-ssa-coalesce.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h dumpfile.h \\\n    $(TREE_SSA_LIVE_H) $(BITMAP_H) $(FLAGS_H) $(HASHTAB_H) \\\n    $(TREE_PRETTY_PRINT_H)\n tree-outof-ssa.o : tree-outof-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TREE_PASS_H) $(TREE_SSA_LIVE_H) $(BASIC_BLOCK_H) $(BITMAP_H) $(GGC_H) \\\n+   $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h dumpfile.h \\\n+   $(TREE_SSA_LIVE_H) $(BASIC_BLOCK_H) $(BITMAP_H) $(GGC_H) \\\n    $(EXPR_H) $(SSAEXPAND_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-dse.o : tree-ssa-dse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) domwalk.h $(FLAGS_H) \\\n-   $(GIMPLE_PRETTY_PRINT_H) $(TIMEVAR_H) langhooks.h\n+   $(TREE_FLOW_H) $(TREE_PASS_H) domwalk.h $(FLAGS_H) \\\n+   $(GIMPLE_PRETTY_PRINT_H) langhooks.h\n tree-ssa-forwprop.o : tree-ssa-forwprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n+   $(TREE_FLOW_H) $(TREE_PASS_H) $(DIAGNOSTIC_H) \\\n    langhooks.h $(FLAGS_H) $(GIMPLE_H) $(GIMPLE_PRETTY_PRINT_H) $(EXPR_H)\n tree-ssa-phiprop.o : tree-ssa-phiprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n+   $(TREE_FLOW_H) $(TREE_PASS_H) $(DIAGNOSTIC_H) \\\n    langhooks.h $(FLAGS_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-ifcombine.o : tree-ssa-ifcombine.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n+   $(TREE_FLOW_H) $(TREE_PASS_H) $(DIAGNOSTIC_H) \\\n    $(TREE_PRETTY_PRINT_H)\n tree-ssa-phiopt.o : tree-ssa-phiopt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) langhooks.h $(FLAGS_H) \\\n-   $(DIAGNOSTIC_H) $(TIMEVAR_H) pointer-set.h domwalk.h $(CFGLOOP_H) \\\n+   $(TREE_FLOW_H) $(TREE_PASS_H) langhooks.h $(FLAGS_H) \\\n+   $(DIAGNOSTIC_H) pointer-set.h domwalk.h $(CFGLOOP_H) \\\n    $(TREE_DATA_REF_H) $(TREE_PRETTY_PRINT_H) $(GIMPLE_PRETTY_PRINT_H) \\\n    insn-config.h $(EXPR_H) $(OPTABS_H)\n tree-nrv.o : tree-nrv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(FUNCTION_H) $(BASIC_BLOCK_H) $(FLAGS_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TREE_DUMP_H) $(TREE_PASS_H) \\\n+   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_PASS_H) \\\n    langhooks.h $(TREE_PRETTY_PRINT_H)\n tree-ssa-copy.o : tree-ssa-copy.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n-   $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(FUNCTION_H) $(TM_H) coretypes.h \\\n    $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h tree-ssa-propagate.h \\\n    $(FLAGS_H) $(CFGLOOP_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-propagate.o : tree-ssa-propagate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h \\\n+   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TM_H) coretypes.h dumpfile.h \\\n+   $(BASIC_BLOCK_H) langhooks.h \\\n    tree-ssa-propagate.h $(VEC_H) value-prof.h gt-tree-ssa-propagate.h $(FLAGS_H) \\\n    $(GIMPLE_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-dom.o : tree-ssa-dom.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(DIAGNOSTIC_H) \\\n-   $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(FUNCTION_H) $(TM_H) coretypes.h \\\n    $(BASIC_BLOCK_H) domwalk.h $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n    tree-ssa-propagate.h $(CFGLOOP_H) $(PARAMS_H) \\\n    $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-uncprop.o : tree-ssa-uncprop.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(BASIC_BLOCK_H) domwalk.h $(TREE_PASS_H) $(FLAGS_H) \\\n-   langhooks.h tree-ssa-propagate.h\n+   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TM_H) coretypes.h \\\n+   $(BASIC_BLOCK_H) domwalk.h $(TREE_PASS_H) $(FLAGS_H) \\\n+   tree-ssa-propagate.h\n tree-ssa-threadedge.o : tree-ssa-threadedge.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(FLAGS_H) $(TM_P_H) \\\n+   $(SYSTEM_H) coretypes.h dumpfile.h $(TM_H) $(TREE_H) $(FLAGS_H) $(TM_P_H) \\\n    $(BASIC_BLOCK_H) $(CFGLOOP_H) \\\n-   $(FUNCTION_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TREE_DUMP_H) $(TREE_FLOW_H) \\\n-   $(TREE_PASS_H) tree-ssa-propagate.h langhooks.h \\\n+   $(FUNCTION_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TREE_FLOW_H) \\\n+   tree-ssa-propagate.h langhooks.h \\\n    $(PARAMS_H)\n tree-ssa-threadupdate.o : tree-ssa-threadupdate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(BASIC_BLOCK_H) $(FLAGS_H) $(TREE_PASS_H) $(CFGLOOP_H)\n+   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TM_H) coretypes.h dumpfile.h \\\n+   $(BASIC_BLOCK_H) $(FLAGS_H) $(CFGLOOP_H)\n tree-ssanames.o : tree-ssanames.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_PASS_H)\n tree-phinodes.o : tree-phinodes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -2332,116 +2331,116 @@ tree-phinodes.o : tree-phinodes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n domwalk.o : domwalk.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(BASIC_BLOCK_H) domwalk.h sbitmap.h\n tree-ssa-live.o : tree-ssa-live.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h dumpfile.h $(TIMEVAR_H) \\\n    $(TREE_SSA_LIVE_H) $(BITMAP_H) debug.h $(FLAGS_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) $(GIMPLE_H)\n tree-ssa-copyrename.o : tree-ssa-copyrename.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) \\\n-   $(TREE_PASS_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_SSA_LIVE_H) \\\n+   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(FUNCTION_H) \\\n+   $(TREE_PASS_H) $(TM_H) coretypes.h $(TREE_SSA_LIVE_H) \\\n    $(BASIC_BLOCK_H) $(BITMAP_H) $(FLAGS_H) $(HASHTAB_H) langhooks.h \\\n    $(GIMPLE_H) $(TREE_INLINE_H) $(GIMPLE_H)\n tree-ssa-pre.o : tree-ssa-pre.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(FIBHEAP_H) \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n+   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) \\\n+   $(TM_H) coretypes.h $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n    $(CFGLOOP_H) alloc-pool.h $(BASIC_BLOCK_H) $(BITMAP_H) $(HASHTAB_H) \\\n    $(GIMPLE_H) $(TREE_INLINE_H) tree-iterator.h tree-ssa-sccvn.h $(PARAMS_H) \\\n    $(DBGCNT_H) tree-scalar-evolution.h $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-sccvn.o : tree-ssa-sccvn.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(FIBHEAP_H) \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(CFGLOOP_H) \\\n-   alloc-pool.h $(BASIC_BLOCK_H) $(BITMAP_H) langhooks.h $(HASHTAB_H) $(GIMPLE_H) \\\n-   $(TREE_INLINE_H) tree-iterator.h tree-ssa-propagate.h tree-ssa-sccvn.h \\\n+   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) \\\n+   $(TM_H) coretypes.h dumpfile.h $(FLAGS_H) $(CFGLOOP_H) \\\n+   alloc-pool.h $(BASIC_BLOCK_H) $(BITMAP_H) $(HASHTAB_H) $(GIMPLE_H) \\\n+   $(TREE_INLINE_H) tree-ssa-propagate.h tree-ssa-sccvn.h \\\n    $(PARAMS_H) $(GIMPLE_PRETTY_PRINT_H) gimple-fold.h\n gimple-ssa-strength-reduction.o : gimple-ssa-strength-reduction.c $(CONFIG_H) \\\n    $(SYSTEM_H) coretypes.h $(TREE_H) $(GIMPLE_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_PASS_H) $(TIMEVAR_H) $(CFGLOOP_H) $(TREE_PRETTY_PRINT_H) \\\n+   $(TREE_PASS_H) $(CFGLOOP_H) $(TREE_PRETTY_PRINT_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) alloc-pool.h $(TREE_FLOW_H) domwalk.h \\\n    pointer-set.h\n tree-vrp.o : tree-vrp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_CORE_H) $(GGC_H) \\\n+   $(TREE_FLOW_H) $(TREE_PASS_H) $(DIAGNOSTIC_CORE_H) $(GGC_H) \\\n    $(BASIC_BLOCK_H) tree-ssa-propagate.h $(FLAGS_H) $(TREE_DUMP_H) \\\n-   $(CFGLOOP_H) $(SCEV_H) $(TIMEVAR_H) intl.h \\\n+   $(CFGLOOP_H) $(SCEV_H) intl.h \\\n    $(GIMPLE_PRETTY_PRINT_H) gimple-fold.h $(OPTABS_H) $(EXPR_H)\n tree-cfg.o : tree-cfg.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(GGC_H) $(FLAGS_H) \\\n-   $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(CFGLOOP_H) $(TREE_PASS_H) \\\n+   $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) $(TM_H) coretypes.h \\\n+   $(TREE_DUMP_H) $(EXCEPT_H) $(CFGLOOP_H) $(TREE_PASS_H) \\\n    $(BASIC_BLOCK_H) \\\n    value-prof.h tree-ssa-propagate.h $(TREE_INLINE_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-cfgcleanup.o : tree-cfgcleanup.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(GGC_H) $(FLAGS_H) \\\n-   $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(CFGLOOP_H) $(TREE_PASS_H) \\\n+   $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) $(TM_H) coretypes.h \\\n+   $(EXCEPT_H) langhooks.h $(CFGLOOP_H) $(TREE_PASS_H) \\\n    $(BASIC_BLOCK_H) $(HASHTAB_H)  \\\n    tree-ssa-propagate.h $(SCEV_H)\n tree-tailcall.o : tree-tailcall.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(FUNCTION_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(EXCEPT_H) $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n+   $(EXCEPT_H) $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n    $(BASIC_BLOCK_H) $(DBGCNT_H) $(GIMPLE_PRETTY_PRINT_H) $(TARGET_H) \\\n    $(COMMON_TARGET_H)\n tree-ssa-sink.o : tree-ssa-sink.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) alloc-pool.h \\\n-   $(BASIC_BLOCK_H) $(BITMAP_H) $(CFGLOOP_H) $(FIBHEAP_H) $(HASHTAB_H) \\\n-   langhooks.h $(GIMPLE_H) $(TREE_INLINE_H) tree-iterator.h \\\n+   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) \\\n+   $(TM_H) coretypes.h $(TREE_PASS_H) $(FLAGS_H) alloc-pool.h \\\n+   $(BASIC_BLOCK_H) $(BITMAP_H) $(CFGLOOP_H) $(HASHTAB_H) \\\n+   $(GIMPLE_H) $(TREE_INLINE_H) tree-iterator.h \\\n    $(GIMPLE_PRETTY_PRINT_H)\n tree-nested.o: tree-nested.c $(CONFIG_H) $(SYSTEM_H) $(TM_H) $(TREE_H) \\\n    $(TM_P_H) $(FUNCTION_H) $(TREE_DUMP_H) $(TREE_INLINE_H) \\\n    tree-iterator.h $(GIMPLE_H) $(CGRAPH_H) $(EXPR_H) langhooks.h \\\n    gt-tree-nested.h coretypes.h $(TREE_FLOW_H) pointer-set.h\n tree-if-conv.o: tree-if-conv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(FLAGS_H) $(TIMEVAR_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n+   $(TREE_H) $(FLAGS_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n    $(CFGLOOP_H) $(TREE_DATA_REF_H) $(TREE_PASS_H) $(DIAGNOSTIC_H) \\\n-   $(TREE_DUMP_H) $(DBGCNT_H) $(GIMPLE_PRETTY_PRINT_H)\n+   $(DBGCNT_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-iterator.o : tree-iterator.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n    coretypes.h $(GGC_H) tree-iterator.h $(GIMPLE_H) gt-tree-iterator.h\n tree-dfa.o : tree-dfa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n    $(TREE_INLINE_H) $(HASHTAB_H) pointer-set.h $(FLAGS_H) $(FUNCTION_H) \\\n-   $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h $(TREE_DUMP_H) \\\n+   convert.h $(TM_H) coretypes.h langhooks.h \\\n    $(TREE_PASS_H) $(PARAMS_H) $(CGRAPH_H) $(BASIC_BLOCK_H) $(GIMPLE_H) \\\n    $(TREE_PRETTY_PRINT_H)\n tree-ssa-operands.o : tree-ssa-operands.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \\\n-   $(FLAGS_H) $(FUNCTION_H) $(TM_H) $(TIMEVAR_H) $(TREE_PASS_H) \\\n-   coretypes.h langhooks.h $(IPA_REFERENCE_H) $(GIMPLE_PRETTY_PRINT_H)\n+   $(FLAGS_H) $(FUNCTION_H) $(TM_H) $(TIMEVAR_H) \\\n+   coretypes.h dumpfile.h langhooks.h $(IPA_REFERENCE_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-eh.o : tree-eh.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_H) $(FLAGS_H) $(FUNCTION_H) $(EXCEPT_H) langhooks.h \\\n-   $(GGC_H) $(TREE_PASS_H) coretypes.h $(TIMEVAR_H) pointer-set.h \\\n-   $(TREE_DUMP_H) $(TREE_INLINE_H) tree-iterator.h toplev.h \\\n+   $(GGC_H) $(TREE_PASS_H) coretypes.h pointer-set.h \\\n+   $(TREE_INLINE_H) tree-iterator.h toplev.h \\\n    $(DIAGNOSTIC_CORE_H) $(TARGET_H) $(CFGLOOP_H)\n tree-ssa-loop.o : tree-ssa-loop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TREE_PASS_H) $(TIMEVAR_H) \\\n+   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_PASS_H) \\\n    $(CFGLOOP_H) $(FLAGS_H) $(TREE_INLINE_H) $(SCEV_H) $(DIAGNOSTIC_CORE_H) $(TREE_VECTORIZER_H)\n tree-ssa-loop-unswitch.o : tree-ssa-loop-unswitch.c $(TREE_FLOW_H) \\\n    $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) \\\n-   $(PARAMS_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n-   coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(BASIC_BLOCK_H) \\\n+   $(PARAMS_H) $(DIAGNOSTIC_H) $(TM_H) \\\n+   coretypes.h $(TREE_PASS_H) $(BASIC_BLOCK_H) \\\n     $(TREE_INLINE_H)\n tree-ssa-address.o : tree-ssa-address.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) \\\n-   $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TREE_PASS_H) $(FLAGS_H) $(TREE_INLINE_H) $(RECOG_H) insn-config.h \\\n+   $(DIAGNOSTIC_H) $(TM_H) coretypes.h dumpfile.h \\\n+   $(FLAGS_H) $(TREE_INLINE_H) $(RECOG_H) insn-config.h \\\n    $(EXPR_H) gt-tree-ssa-address.h $(GGC_H) tree-affine.h $(TARGET_H) \\\n    $(TREE_PRETTY_PRINT_H)\n tree-ssa-loop-niter.o : tree-ssa-loop-niter.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n-   $(TREE_INLINE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(TREE_PASS_H) $(TREE_DATA_REF_H) \\\n+   $(TREE_INLINE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h dumpfile.h \\\n+   $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(TREE_DATA_REF_H) \\\n    $(BASIC_BLOCK_H) $(GGC_H) intl.h $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-loop-ivcanon.o : tree-ssa-loop-ivcanon.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n-   $(TREE_INLINE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(TREE_INLINE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h \\\n    $(FLAGS_H) $(TREE_PASS_H) $(SCEV_H) $(BASIC_BLOCK_H) $(TARGET_H) \\\n    $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-loop-ch.o : tree-ssa-loop-ch.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(TREE_INLINE_H) \\\n-   $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(DIAGNOSTIC_H) $(TM_H) coretypes.h \\\n    $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H)\n tree-ssa-loop-prefetch.o: tree-ssa-loop-prefetch.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(EXPR_H) \\\n-   $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(DIAGNOSTIC_H) $(TM_H) coretypes.h \\\n    $(TREE_PASS_H) $(RECOG_H) insn-config.h $(HASHTAB_H) \\\n    $(CFGLOOP_H) $(PARAMS_H) langhooks.h $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_CORE_H) langhooks.h $(TREE_INLINE_H) $(TREE_DATA_REF_H) \\\n@@ -2452,46 +2451,47 @@ tree-predcom.o: tree-predcom.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_P_H) \\\n    tree-affine.h $(TREE_INLINE_H) $(TREE_PRETTY_PRINT_H)\n tree-ssa-loop-ivopts.o : tree-ssa-loop-ivopts.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(EXPR_H) \\\n-   $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n+   $(DIAGNOSTIC_H) $(TM_H) coretypes.h \\\n    $(TREE_PASS_H) $(GGC_H) $(RECOG_H) insn-config.h $(HASHTAB_H) $(SCEV_H) \\\n    $(CFGLOOP_H) $(PARAMS_H) langhooks.h $(BASIC_BLOCK_H) \\\n    tree-affine.h pointer-set.h $(TARGET_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) tree-ssa-propagate.h\n tree-affine.o : tree-affine.c tree-affine.h $(CONFIG_H) pointer-set.h \\\n    $(SYSTEM_H) $(TREE_H) $(GIMPLE_H) \\\n-   coretypes.h $(TREE_DUMP_H) $(FLAGS_H) \\\n+   coretypes.h dumpfile.h $(FLAGS_H) \\\n    $(TREE_PRETTY_PRINT_H)\n tree-ssa-loop-manip.o : tree-ssa-loop-manip.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n-   $(TIMEVAR_H) $(CFGLOOP_H) $(TREE_PASS_H) \\\n+   $(SYSTEM_H) coretypes.h dumpfile.h $(TM_H) $(TREE_H) \\\n+   $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) \\\n+   $(CFGLOOP_H) $(TREE_PASS_H) \\\n    $(SCEV_H) $(PARAMS_H) $(TREE_INLINE_H) langhooks.h\n tree-ssa-loop-im.o : tree-ssa-loop-im.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) domwalk.h \\\n-   $(PARAMS_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n+   $(PARAMS_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h \\\n+   $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n    pointer-set.h tree-affine.h tree-ssa-propagate.h $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-math-opts.o : tree-ssa-math-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(FLAGS_H) $(TREE_H) $(TREE_FLOW_H) $(TIMEVAR_H) \\\n+   $(TM_H) $(FLAGS_H) $(TREE_H) $(TREE_FLOW_H) \\\n    $(TREE_PASS_H) alloc-pool.h $(BASIC_BLOCK_H) $(TARGET_H) \\\n    $(DIAGNOSTIC_H) $(RTL_H) $(EXPR_H) $(OPTABS_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-alias.o : tree-ssa-alias.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(GGC_H) $(TREE_INLINE_H) $(FLAGS_H) \\\n-   $(FUNCTION_H) $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h \\\n-   $(TREE_DUMP_H) $(TREE_PASS_H) $(PARAMS_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n+   $(FUNCTION_H) $(TIMEVAR_H) convert.h $(TM_H) coretypes.h dumpfile.h \\\n+   langhooks.h \\\n+   $(PARAMS_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n    $(GIMPLE_H) $(VEC_H) $(TARGET_H) \\\n    vecprim.h pointer-set.h alloc-pool.h \\\n    $(TREE_PRETTY_PRINT_H)\n tree-ssa-reassoc.o : tree-ssa-reassoc.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) \\\n+   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) \\\n+   $(TM_H) coretypes.h $(TREE_PASS_H) $(FLAGS_H) \\\n    tree-iterator.h $(BASIC_BLOCK_H) $(GIMPLE_H) $(TREE_INLINE_H) \\\n    $(VEC_H) langhooks.h alloc-pool.h pointer-set.h $(CFGLOOP_H) \\\n    $(TARGET_H) $(GIMPLE_PRETTY_PRINT_H) $(DIAGNOSTIC_CORE_H)\n tree-optimize.o : tree-optimize.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(GGC_H) \\\n-   $(DIAGNOSTIC_H) $(BASIC_BLOCK_H) $(FLAGS_H) $(TIMEVAR_H) $(TM_H) \\\n-   coretypes.h $(TREE_DUMP_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) langhooks.h \\\n+   $(DIAGNOSTIC_H) $(BASIC_BLOCK_H) $(FLAGS_H) $(TM_H) \\\n+   coretypes.h toplev.h $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) langhooks.h \\\n    $(FLAGS_H) $(CGRAPH_H) $(PLUGIN_H) \\\n    $(TREE_INLINE_H) $(GGC_H) graph.h $(CGRAPH_H) \\\n    $(TREE_PASS_H) $(CFGLOOP_H) $(EXCEPT_H)\n@@ -2504,98 +2504,98 @@ gimplify.o : gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(GIMPLE_H) \\\n    $(SPLAY_TREE_H) $(VEC_H) tree-iterator.h $(TREE_PASS_H) $(TREE_PRETTY_PRINT_H)\n gimple-iterator.o : gimple-iterator.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_H) $(GIMPLE_H) $(TREE_FLOW_H) value-prof.h\n-gimple-fold.o : gimple-fold.c $(TREE_FLOW_H) $(CONFIG_H) \\\n+gimple-fold.o : gimple-fold.c $(TREE_FLOW_H) $(CONFIG_H) coretypes.h dumpfile.h \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(GGC_H) \\\n-   $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h \\\n+   $(FUNCTION_H) $(TM_H) $(BASIC_BLOCK_H) langhooks.h \\\n    tree-ssa-propagate.h $(FLAGS_H) $(TARGET_H) gimple-fold.h\n gimple-low.o : gimple-low.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n    $(DIAGNOSTIC_CORE_H) $(GIMPLE_H) $(TREE_INLINE_H) langhooks.h \\\n-   $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n+   $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(TM_H) coretypes.h \\\n    $(EXCEPT_H) $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(TREE_PASS_H) \\\n    $(HASHTAB_H) $(DIAGNOSTIC_CORE_H) tree-iterator.h\n omp-low.o : omp-low.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(GIMPLE_H) $(TREE_INLINE_H) langhooks.h $(DIAGNOSTIC_CORE_H) \\\n-   $(TREE_FLOW_H) $(TIMEVAR_H) $(FLAGS_H) $(EXPR_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(TREE_FLOW_H) $(FLAGS_H) $(EXPR_H) $(DIAGNOSTIC_CORE_H) \\\n    $(TREE_PASS_H) $(GGC_H) $(EXCEPT_H) $(SPLAY_TREE_H) $(OPTABS_H) \\\n    $(CFGLOOP_H) tree-iterator.h gt-omp-low.h\n tree-browser.o : tree-browser.c tree-browser.def $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TREE_H) $(TREE_PRETTY_PRINT_H)\n-omega.o : omega.c $(OMEGA_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n-   $(DIAGNOSTIC_CORE_H) $(TREE_PASS_H)\n-tree-chrec.o : tree-chrec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TREE_PRETTY_PRINT_H) $(CFGLOOP_H) $(TREE_FLOW_H) $(SCEV_H) $(TREE_PASS_H) \\\n+omega.o : omega.c $(OMEGA_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h \\\n+   $(TREE_H) $(DIAGNOSTIC_CORE_H)\n+tree-chrec.o : tree-chrec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h \\\n+   $(TREE_PRETTY_PRINT_H) $(CFGLOOP_H) $(TREE_FLOW_H) $(SCEV_H) \\\n    $(PARAMS_H)\n tree-scalar-evolution.o : tree-scalar-evolution.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(GIMPLE_PRETTY_PRINT_H) $(TREE_FLOW_H) $(CFGLOOP_H) $(SCEV_H) \\\n-   $(TREE_PASS_H) $(PARAMS_H) gt-tree-scalar-evolution.h\n-tree-data-ref.o : tree-data-ref.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+   coretypes.h dumpfile.h $(GIMPLE_PRETTY_PRINT_H) $(TREE_FLOW_H) $(CFGLOOP_H) $(SCEV_H) \\\n+   $(PARAMS_H) gt-tree-scalar-evolution.h\n+tree-data-ref.o : tree-data-ref.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h \\\n    $(GIMPLE_PRETTY_PRINT_H) $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n-   $(TREE_PASS_H) langhooks.h tree-affine.h $(PARAMS_H)\n+   langhooks.h tree-affine.h $(PARAMS_H)\n sese.o : sese.c sese.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_PRETTY_PRINT_H) \\\n    $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) $(TREE_PASS_H) value-prof.h\n graphite.o : graphite.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(DIAGNOSTIC_CORE_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) sese.h \\\n    $(DBGCNT_H) graphite-poly.h graphite-scop-detection.h \\\n    graphite-clast-to-gimple.h graphite-sese-to-poly.h\n graphite-blocking.o : graphite-blocking.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n+   coretypes.h dumpfile.h $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n    sese.h graphite-poly.h\n graphite-clast-to-gimple.o : graphite-clast-to-gimple.c $(CONFIG_H) \\\n-   $(SYSTEM_H) coretypes.h $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n+   $(SYSTEM_H) coretypes.h dumpfile.h $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) \\\n    $(CFGLOOP_H) $(TREE_DATA_REF_H) sese.h \\\n    graphite-poly.h graphite-clast-to-gimple.h\n graphite-dependences.o : graphite-dependences.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n+   coretypes.h dumpfile.h $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n    sese.h graphite-poly.h\n graphite-interchange.o : graphite-interchange.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n+   coretypes.h dumpfile.h $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) \\\n    sese.h graphite-poly.h\n-graphite-poly.o : graphite-poly.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(GIMPLE_PRETTY_PRINT_H) \\\n+graphite-poly.o : graphite-poly.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h \\\n+   $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(GIMPLE_PRETTY_PRINT_H) \\\n    $(CFGLOOP_H) $(TREE_DATA_REF_H) sese.h graphite-poly.h\n graphite-scop-detection.o : graphite-scop-detection.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) $(TREE_PASS_H) \\\n    sese.h graphite-poly.h graphite-scop-detection.h\n graphite-sese-to-poly.o : graphite-sese-to-poly.c $(CONFIG_H) \\\n-   $(SYSTEM_H) coretypes.h $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) \\\n+   $(SYSTEM_H) coretypes.h dumpfile.h $(TREE_FLOW_H) $(CFGLOOP_H) \\\n    $(TREE_DATA_REF_H) domwalk.h sese.h graphite-poly.h \\\n    graphite-sese-to-poly.h\n graphite-optimize-isl.o : graphite-optimize-isl.c $(CONFIG_H) $(SYSTEM_H) \\\n-    coretypes.h $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) $(SCEV_H) \\\n-    $(TREE_DUMP_H) sese.h graphite-poly.h\n+    coretypes.h dumpfile.h $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) $(SCEV_H) \\\n+    sese.h graphite-poly.h\n tree-vect-loop.o: tree-vect-loop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n-   $(TREE_DUMP_H) $(CFGLOOP_H) $(EXPR_H) $(RECOG_H) $(OPTABS_H) \\\n+   $(CFGLOOP_H) $(EXPR_H) $(RECOG_H) $(OPTABS_H) \\\n    $(DIAGNOSTIC_CORE_H) $(SCEV_H) $(TREE_VECTORIZER_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) $(TARGET_H) $(TREE_DATA_REF_H)\n tree-vect-loop-manip.o: tree-vect-loop-manip.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(TREE_FLOW_H) $(CFGLOOP_H) $(DIAGNOSTIC_CORE_H) \\\n    $(SCEV_H) $(TREE_VECTORIZER_H) langhooks.h $(GIMPLE_PRETTY_PRINT_H)\n-tree-vect-patterns.o: tree-vect-patterns.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+tree-vect-patterns.o: tree-vect-patterns.c $(CONFIG_H) $(SYSTEM_H) \\\n+   coretypes.h dumpfile.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) $(EXPR_H) $(OPTABS_H) $(PARAMS_H) \\\n+   $(TREE_FLOW_H) $(CFGLOOP_H) $(EXPR_H) $(OPTABS_H) $(PARAMS_H) \\\n    $(TREE_DATA_REF_H) $(TREE_VECTORIZER_H) $(RECOG_H) $(DIAGNOSTIC_CORE_H) \\\n    $(GIMPLE_PRETTY_PRINT_H)\n tree-vect-slp.o: tree-vect-slp.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) \\\n+   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(CFGLOOP_H) \\\n    $(EXPR_H) $(RECOG_H) $(OPTABS_H) $(TREE_VECTORIZER_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) $(TREE_DATA_REF_H) langhooks.h\n tree-vect-stmts.o: tree-vect-stmts.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) \\\n+   coretypes.h dumpfile.h $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) \\\n+   $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(CFGLOOP_H) \\\n    $(EXPR_H) $(RECOG_H) $(OPTABS_H) $(TREE_VECTORIZER_H) \\\n    langhooks.h $(GIMPLE_PRETTY_PRINT_H)\n tree-vect-data-refs.o: tree-vect-data-refs.c $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) $(TREE_DUMP_H) $(CFGLOOP_H) \\\n+   coretypes.h dumpfile.h $(TM_H) $(GGC_H) $(TREE_H) $(TARGET_H) $(BASIC_BLOCK_H) \\\n+   $(TREE_FLOW_H) $(CFGLOOP_H) \\\n    $(EXPR_H) $(OPTABS_H) $(SCEV_H) $(TREE_VECTORIZER_H) \\\n    $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-vectorizer.o: tree-vectorizer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(GGC_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n-   $(CFGLOOP_H) $(TREE_PASS_H) $(TREE_VECTORIZER_H) $(TIMEVAR_H) \\\n+   $(TM_H) $(GGC_H) $(TREE_H) $(TREE_FLOW_H) \\\n+   $(CFGLOOP_H) $(TREE_PASS_H) $(TREE_VECTORIZER_H) \\\n    $(TREE_PRETTY_PRINT_H)\n tree-loop-distribution.o: tree-loop-distribution.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TREE_FLOW_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) $(TREE_PASS_H)\n@@ -2615,12 +2615,13 @@ gimple.o : gimple.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n    $(TREE_FLOW_H) value-prof.h $(FLAGS_H) $(DEMANGLE_H) \\\n    $(TARGET_H) $(ALIAS_H)\n gimple-pretty-print.o : gimple-pretty-print.c $(CONFIG_H) $(SYSTEM_H) \\\n+   coretypes.h dumpfile.h \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) $(TREE_FLOW_H) \\\n-   $(TM_H) coretypes.h $(TREE_PASS_H) $(GIMPLE_H) value-prof.h \\\n+   $(TM_H) $(GIMPLE_H) value-prof.h \\\n    $(TRANS_MEM_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-mudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TREE_INLINE_H) \\\n    $(GIMPLE_H) $(DIAGNOSTIC_H) $(DEMANGLE_H) $(HASHTAB_H) langhooks.h tree-mudflap.h \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(CGRAPH_H) $(GGC_H) \\\n+   $(TM_H) coretypes.h $(TREE_PASS_H) $(CGRAPH_H) $(GGC_H) \\\n    gt-tree-mudflap.h $(BASIC_BLOCK_H) $(FLAGS_H) $(FUNCTION_H) \\\n    $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_CORE_H) $(GIMPLE_H) tree-iterator.h\n tree-nomudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TREE_INLINE_H) \\\n@@ -2629,11 +2630,11 @@ tree-nomudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TREE_INLINE_H) \\\n    $(GGC_H) gt-tree-mudflap.h $(TREE_PASS_H) $(DIAGNOSTIC_CORE_H)\n tree-pretty-print.o : tree-pretty-print.c $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) $(TREE_FLOW_H) \\\n-   $(TM_H) coretypes.h tree-iterator.h $(SCEV_H) langhooks.h \\\n-   $(TREE_PASS_H) value-prof.h output.h $(TREE_PRETTY_PRINT_H)\n-tree-diagnostic.o : tree-diagnostic.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+   $(TM_H) coretypes.h dumpfile.h tree-iterator.h $(SCEV_H) langhooks.h \\\n+   value-prof.h output.h $(TREE_PRETTY_PRINT_H)\n+tree-diagnostic.o : tree-diagnostic.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h \\\n    $(TREE_H) $(DIAGNOSTIC_H) tree-diagnostic.h langhooks.h $(LANGHOOKS_DEF_H) \\\n-   $(VEC_H) $(TREE_PRETTY_PRINT_H) $(TREE_PASS_H)\n+   $(VEC_H) $(TREE_PRETTY_PRINT_H)\n fold-const.o : fold-const.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(FLAGS_H) $(DIAGNOSTIC_CORE_H) $(HASHTAB_H) $(EXPR_H) $(RTL_H) \\\n    $(GGC_H) $(TM_P_H) langhooks.h $(MD5_H) intl.h $(TARGET_H) \\\n@@ -2687,7 +2688,7 @@ passes.o : passes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(FUNCTION_H) $(FLAGS_H) $(INPUT_H) $(INSN_ATTR_H) output.h \\\n    $(DIAGNOSTIC_CORE_H) debug.h insn-config.h intl.h $(RECOG_H) toplev.h \\\n    $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) \\\n-   graph.h $(EXCEPT_H) $(REGS_H) $(TIMEVAR_H) value-prof.h \\\n+   graph.h $(EXCEPT_H) $(REGS_H) value-prof.h \\\n    $(PARAMS_H) $(TM_P_H) reload.h $(TARGET_H) \\\n    langhooks.h insn-flags.h $(CFGLOOP_H) \\\n    hosthooks.h $(CGRAPH_H) $(COVERAGE_H) $(TREE_PASS_H) $(TREE_DUMP_H) \\\n@@ -2710,9 +2711,9 @@ rtl-error.o: rtl-error.c $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n rtl.o : rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n   $(GGC_H) $(BCONFIG_H) insn-notes.def reg-notes.def $(DIAGNOSTIC_CORE_H)\n \n-print-rtl.o : print-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+print-rtl.o : print-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h $(TM_H) \\\n     $(RTL_H) $(TREE_H) hard-reg-set.h $(BASIC_BLOCK_H) $(FLAGS_H) \\\n-    $(BCONFIG_H) $(DIAGNOSTIC_H) cselib.h $(TREE_PASS_H) $(TREE_PRETTY_PRINT_H) \\\n+    $(BCONFIG_H) $(DIAGNOSTIC_H) cselib.h $(TREE_PRETTY_PRINT_H) \\\n     $(DWARF2OUT_H)\n rtlanal.o : rtlanal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(DIAGNOSTIC_CORE_H) \\\n    $(RTL_H) hard-reg-set.h $(TM_P_H) insn-config.h $(RECOG_H) \\\n@@ -2730,11 +2731,11 @@ function.o : function.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_\n    $(OPTABS_H) $(LIBFUNCS_H) $(REGS_H) hard-reg-set.h insn-config.h $(RECOG_H) \\\n    output.h  $(EXCEPT_H) $(HASHTAB_H) $(GGC_H) $(TM_P_H) langhooks.h \\\n    gt-function.h $(TARGET_H) $(BASIC_BLOCK_H) $(PREDICT_H) \\\n-   $(TREE_PASS_H) $(DF_H) $(TIMEVAR_H) vecprim.h $(PARAMS_H) bb-reorder.h \\\n+   $(TREE_PASS_H) $(DF_H) vecprim.h $(PARAMS_H) bb-reorder.h \\\n    $(COMMON_TARGET_H)\n statistics.o : statistics.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_PASS_H) $(TREE_DUMP_H) $(HASHTAB_H) statistics.h $(FUNCTION_H)\n-stmt.o : stmt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+stmt.o : stmt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(FUNCTION_H) insn-config.h hard-reg-set.h $(EXPR_H) \\\n    $(LIBFUNCS_H) $(EXCEPT_H) $(RECOG_H) $(DIAGNOSTIC_CORE_H) \\\n    output.h $(GGC_H) $(TM_P_H) langhooks.h $(PREDICT_H) $(OPTABS_H) \\\n@@ -2745,7 +2746,7 @@ except.o : except.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    langhooks.h insn-config.h hard-reg-set.h $(BASIC_BLOCK_H) output.h \\\n    dwarf2asm.h $(DWARF2OUT_H) toplev.h $(DIAGNOSTIC_CORE_H) $(HASHTAB_H) intl.h $(GGC_H) \\\n    gt-except.h $(CGRAPH_H) $(DIAGNOSTIC_H) $(DWARF2_H) \\\n-   $(TARGET_H) $(TM_P_H) $(TREE_PASS_H) $(TIMEVAR_H) $(TREE_FLOW_H) \\\n+   $(TARGET_H) $(TM_P_H) $(TREE_PASS_H) $(TREE_FLOW_H) \\\n    $(TREE_PRETTY_PRINT_H) sbitmap.h $(COMMON_TARGET_H) $(CFGLOOP_H)\n expr.o : expr.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(FUNCTION_H) $(REGS_H) $(EXPR_H) $(OPTABS_H) \\\n@@ -2793,13 +2794,13 @@ sdbout.o : sdbout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) debug.h \\\n    $(TREE_H) $(GGC_H) $(RTL_H) $(REGS_H) $(FLAGS_H) insn-config.h \\\n    output.h $(DIAGNOSTIC_CORE_H) $(TM_P_H) gsyms.h langhooks.h $(TARGET_H) sdbout.h \\\n    gt-sdbout.h reload.h\n-dwarf2out.o : dwarf2out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+dwarf2out.o : dwarf2out.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h $(TM_H) \\\n    $(TREE_H) version.h $(RTL_H) $(DWARF2_H) debug.h $(FLAGS_H) insn-config.h \\\n    output.h $(DIAGNOSTIC_H) hard-reg-set.h $(REGS_H) $(EXPR_H) \\\n    $(LIBFUNCS_H) toplev.h $(DIAGNOSTIC_CORE_H) $(DWARF2OUT_H) reload.h \\\n    $(GGC_H) $(EXCEPT_H) dwarf2asm.h $(TM_P_H) langhooks.h $(HASHTAB_H) \\\n    gt-dwarf2out.h $(TARGET_H) $(CGRAPH_H) $(MD5_H) $(INPUT_H) $(FUNCTION_H) \\\n-   $(GIMPLE_H) $(TREE_PASS_H) $(TREE_FLOW_H) \\\n+   $(GIMPLE_H) $(TREE_FLOW_H) \\\n    $(TREE_PRETTY_PRINT_H) $(COMMON_TARGET_H) $(OPTS_H)\n dwarf2cfi.o : dwarf2cfi.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    version.h $(RTL_H) $(EXPR_H) $(REGS_H) $(FUNCTION_H) output.h \\\n@@ -2831,34 +2832,35 @@ jump.o : jump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) hard-reg-set.h $(REGS_H) insn-config.h $(RECOG_H) $(EXPR_H) \\\n    $(EXCEPT_H) $(FUNCTION_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) \\\n    $(DIAGNOSTIC_CORE_H) $(DIAGNOSTIC_CORE_H) $(INSN_ATTR_H) $(TM_P_H) reload.h \\\n-   $(PREDICT_H) $(TIMEVAR_H) $(TARGET_H)\n+   $(PREDICT_H) $(TARGET_H)\n simplify-rtx.o : simplify-rtx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(RECOG_H) $(EXPR_H) $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) $(GGC_H) $(TM_P_H) \\\n    $(TREE_H) $(TARGET_H)\n symtab.o : symtab.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    langhooks.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) $(TARGET_H) $(CGRAPH_H) \\\n-   $(HASHTAB_H) gt-symtab.h\n-cgraph.o : cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+   $(TIMEVAR_H) $(HASHTAB_H) gt-symtab.h\n+cgraph.o : cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h \\\n+   $(TM_H) $(TREE_H) $(TIMEVAR_H) \\\n    langhooks.h toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) $(TARGET_H) $(CGRAPH_H) \\\n    gt-cgraph.h intl.h $(BASIC_BLOCK_H) debug.h $(HASHTAB_H) \\\n-   $(TREE_INLINE_H) $(TREE_DUMP_H) $(TREE_FLOW_H) cif-code.def \\\n+   $(TREE_INLINE_H) $(TREE_FLOW_H) cif-code.def \\\n    value-prof.h $(EXCEPT_H) $(IPA_UTILS_H) $(DIAGNOSTIC_CORE_H) \\\n    ipa-inline.h $(LTO_STREAMER_H) $(CFGLOOP_H) $(GIMPLE_PRETTY_PRINT_H)\n cgraphunit.o : cgraphunit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(TREE_INLINE_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) \\\n    $(TARGET_H) $(CGRAPH_H) intl.h pointer-set.h $(FUNCTION_H) $(GIMPLE_H) \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) debug.h $(DIAGNOSTIC_H) \\\n-   $(FIBHEAP_H) output.h $(PARAMS_H) $(RTL_H) $(TIMEVAR_H) $(IPA_PROP_H) \\\n+   $(FIBHEAP_H) output.h $(PARAMS_H) $(RTL_H) $(IPA_PROP_H) \\\n    gt-cgraphunit.h tree-iterator.h $(COVERAGE_H) $(TREE_DUMP_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) ipa-inline.h $(IPA_UTILS_H) \\\n    $(LTO_STREAMER_H) output.h $(REGSET_H) $(EXCEPT_H) $(GCC_PLUGIN_H) plugin.h\n cgraphclones.o : cgraphclones.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(TREE_INLINE_H) toplev.h $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) \\\n    $(TARGET_H) $(CGRAPH_H) intl.h pointer-set.h $(FUNCTION_H) $(GIMPLE_H) \\\n-   $(TREE_FLOW_H) $(TREE_PASS_H) debug.h $(DIAGNOSTIC_H) \\\n-   $(FIBHEAP_H) $(PARAMS_H) $(RTL_H) $(TIMEVAR_H) $(IPA_PROP_H) \\\n-   tree-iterator.h $(COVERAGE_H) $(TREE_DUMP_H) \\\n+   $(TREE_FLOW_H) $(TREE_PASS_H) debug.h $(DIAGNOSTIC_H) $(TREE_DUMP_H) \\\n+   $(PARAMS_H) $(RTL_H) $(IPA_PROP_H) \\\n+   tree-iterator.h $(COVERAGE_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) ipa-inline.h $(IPA_UTILS_H) \\\n    $(LTO_STREAMER_H) $(EXCEPT_H) $(GCC_PLUGIN_H) gt-cgraphclones.h\n cgraphbuild.o : cgraphbuild.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -2870,152 +2872,152 @@ varpool.o : varpool.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(GGC_H) $(TIMEVAR_H) debug.h $(TARGET_H) output.h $(GIMPLE_H) \\\n    $(TREE_FLOW_H) \n ipa.o : ipa.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(CGRAPH_H) \\\n-   $(TREE_PASS_H) $(TIMEVAR_H) $(GIMPLE_H) $(TARGET_H) $(GGC_H) pointer-set.h \\\n+   $(TREE_PASS_H) $(GIMPLE_H) $(TARGET_H) $(GGC_H) pointer-set.h \\\n    $(IPA_UTILS_H)\n ipa-prop.o : ipa-prop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    langhooks.h $(GGC_H) $(TARGET_H) $(CGRAPH_H) $(IPA_PROP_H) $(DIAGNOSTIC_H) \\\n    $(TREE_FLOW_H) $(TM_H) $(TREE_PASS_H) $(FLAGS_H) $(TREE_H) \\\n-   $(TREE_INLINE_H) $(GIMPLE_H) $(TIMEVAR_H) \\\n+   $(TREE_INLINE_H) $(GIMPLE_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) $(LTO_STREAMER_H) \\\n    $(DATA_STREAMER_H) $(TREE_STREAMER_H)\n ipa-ref.o : ipa-ref.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    langhooks.h $(GGC_H) $(TARGET_H) $(CGRAPH_H)  $(TREE_H) $(TARGET_H) \\\n    $(TREE_FLOW_H) $(TM_H) $(TREE_PASS_H) $(FLAGS_H) $(TREE_H) $(GGC_H) \n ipa-cp.o : ipa-cp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n    $(TREE_H) $(TARGET_H) $(GIMPLE_H) $(CGRAPH_H) $(IPA_PROP_H) $(TREE_FLOW_H) \\\n-   $(TREE_PASS_H) $(FLAGS_H) $(TIMEVAR_H) $(DIAGNOSTIC_H) $(TREE_DUMP_H) \\\n-   $(TREE_INLINE_H) $(FIBHEAP_H) $(PARAMS_H) $(TREE_PRETTY_PRINT_H) ipa-inline.h\n+   $(TREE_PASS_H) $(FLAGS_H) $(DIAGNOSTIC_H) \\\n+   $(TREE_INLINE_H) $(PARAMS_H) $(TREE_PRETTY_PRINT_H) ipa-inline.h\n ipa-split.o : ipa-split.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_H) $(TARGET_H) $(CGRAPH_H) $(IPA_PROP_H) $(TREE_FLOW_H) \\\n-   $(TREE_PASS_H) $(FLAGS_H) $(TIMEVAR_H) $(DIAGNOSTIC_H) $(TREE_DUMP_H) \\\n-   $(TREE_INLINE_H) $(FIBHEAP_H) $(PARAMS_H) $(GIMPLE_PRETTY_PRINT_H) ipa-inline.h\n+   $(TREE_PASS_H) $(FLAGS_H) $(DIAGNOSTIC_H) $(TREE_DUMP_H) \\\n+   $(TREE_INLINE_H) $(PARAMS_H) $(GIMPLE_PRETTY_PRINT_H) ipa-inline.h\n matrix-reorg.o : matrix-reorg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n    $(TM_H) $(TREE_H) $(RTL_H) $(TREE_INLINE_H) $(TREE_FLOW_H) \\\n    tree-flow-inline.h langhooks.h $(HASHTAB_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) $(GGC_H) \\\n-   debug.h $(TARGET_H) $(CGRAPH_H) $(DIAGNOSTIC_CORE_H) $(TIMEVAR_H) \\\n-   $(PARAMS_H) $(FIBHEAP_H) intl.h $(FUNCTION_H) $(BASIC_BLOCK_H) \\\n+   debug.h $(TARGET_H) $(CGRAPH_H) $(DIAGNOSTIC_CORE_H) \\\n+   $(PARAMS_H) intl.h $(FUNCTION_H) $(BASIC_BLOCK_H) \\\n    $(CFGLOOP_H) tree-iterator.h $(TREE_PASS_H) $(OPTS_H) $(TREE_DATA_REF_H) \\\n    tree-ssa-sccvn.h\n ipa-inline.o : ipa-inline.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(TREE_INLINE_H) $(FLAGS_H) $(CGRAPH_H) intl.h \\\n-   $(DIAGNOSTIC_H) $(FIBHEAP_H) $(PARAMS_H) $(TIMEVAR_H) $(TREE_PASS_H) \\\n+   $(DIAGNOSTIC_H) $(FIBHEAP_H) $(PARAMS_H) $(TREE_PASS_H) \\\n    $(COVERAGE_H) $(GGC_H) $(TREE_FLOW_H) $(RTL_H) $(IPA_PROP_H) \\\n    $(EXCEPT_H) $(GIMPLE_PRETTY_PRINT_H) ipa-inline.h $(TARGET_H) $(IPA_UTILS_H)\n ipa-inline-analysis.o : ipa-inline-analysis.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(TREE_INLINE_H) $(FLAGS_H) $(CGRAPH_H) intl.h \\\n-   $(DIAGNOSTIC_H) $(PARAMS_H) $(TIMEVAR_H) $(TREE_PASS_H) \\\n+   $(DIAGNOSTIC_H) $(PARAMS_H) $(TREE_PASS_H) \\\n    $(HASHTAB_H) $(COVERAGE_H) $(GGC_H) $(TREE_FLOW_H) $(IPA_PROP_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) ipa-inline.h $(LTO_STREAMER_H) $(DATA_STREAMER_H) \\\n    $(TREE_STREAMER_H)\n ipa-inline-transform.o : ipa-inline-transform.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(TREE_INLINE_H) $(FLAGS_H) $(CGRAPH_H) intl.h \\\n-   $(TIMEVAR_H) $(TREE_PASS_H) \\\n+   $(TREE_PASS_H) \\\n    $(HASHTAB_H) $(COVERAGE_H) $(GGC_H) $(TREE_FLOW_H) $(IPA_PROP_H) \\\n    $(TREE_PASS_H)\n ipa-utils.o : ipa-utils.c $(IPA_UTILS_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n-   pointer-set.h $(GGC_H) $(GIMPLE_H) $(SPLAY_TREE_H) \\\n-   $(CGRAPH_H) $(FLAGS_H) $(TREE_PASS_H) $(TIMEVAR_H) $(DIAGNOSTIC_H)\n+   coretypes.h dumpfile.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) \\\n+   langhooks.h pointer-set.h $(GGC_H) $(GIMPLE_H) $(SPLAY_TREE_H) \\\n+   $(CGRAPH_H) $(FLAGS_H) $(DIAGNOSTIC_H)\n ipa-reference.o : ipa-reference.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_REFERENCE_H) $(IPA_UTILS_H) $(SPLAY_TREE_H) \\\n    $(GIMPLE_H) $(CGRAPH_H) $(FLAGS_H) $(TREE_PASS_H) \\\n-   $(TIMEVAR_H) $(DIAGNOSTIC_H) $(FUNCTION_H) $(LTO_STREAMER_H) \\\n+   $(DIAGNOSTIC_H) $(FUNCTION_H) $(LTO_STREAMER_H) \\\n    $(DIAGNOSTIC_CORE_H) $(DATA_STREAMER_H)\n ipa-pure-const.o : ipa-pure-const.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_UTILS_H) $(TARGET_H) \\\n-   $(GIMPLE_H) $(CGRAPH_H) $(FLAGS_H) $(TREE_PASS_H) $(TIMEVAR_H) \\\n+   $(GIMPLE_H) $(CGRAPH_H) $(FLAGS_H) $(TREE_PASS_H) \\\n    $(DIAGNOSTIC_H) $(CFGLOOP_H) $(SCEV_H) $(LTO_STREAMER_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) $(DATA_STREAMER_H) $(TREE_STREAMER_H)\n-coverage.o : coverage.c $(GCOV_IO_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+coverage.o : coverage.c $(GCOV_IO_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h \\\n    $(TM_H) $(RTL_H) $(TREE_H) $(FLAGS_H) output.h $(REGS_H) $(EXPR_H) \\\n    $(FUNCTION_H) $(BASIC_BLOCK_H) toplev.h $(DIAGNOSTIC_CORE_H) $(GGC_H) langhooks.h $(COVERAGE_H) \\\n-   $(HASHTAB_H) tree-iterator.h $(CGRAPH_H) $(TREE_PASS_H) gcov-io.c $(TM_P_H) \\\n+   $(HASHTAB_H) tree-iterator.h $(CGRAPH_H) gcov-io.c $(TM_P_H) \\\n    $(DIAGNOSTIC_CORE_H) intl.h gt-coverage.h $(TARGET_H)\n-cselib.o : cselib.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+cselib.o : cselib.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(RECOG_H) \\\n-   $(EMIT_RTL_H) $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) $(TREE_PASS_H) \\\n+   $(EMIT_RTL_H) $(DIAGNOSTIC_CORE_H) $(FUNCTION_H) \\\n    cselib.h gt-cselib.h $(GGC_H) $(TM_P_H) $(PARAMS_H) alloc-pool.h \\\n    $(HASHTAB_H) $(TARGET_H) $(BITMAP_H) $(TREE_H)\n cse.o : cse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    hard-reg-set.h $(FLAGS_H) insn-config.h $(RECOG_H) $(EXPR_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n-   $(FUNCTION_H) $(BASIC_BLOCK_H) $(GGC_H) $(TM_P_H) $(TIMEVAR_H) \\\n+   $(FUNCTION_H) $(BASIC_BLOCK_H) $(GGC_H) $(TM_P_H) \\\n    $(EXCEPT_H) $(TARGET_H) $(PARAMS_H) rtlhooks-def.h $(TREE_PASS_H) \\\n    $(DF_H) $(DBGCNT_H)\n dce.o : dce.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) $(EXCEPT_H) $(DF_H) cselib.h \\\n-   $(DBGCNT_H) dce.h $(TIMEVAR_H) $(TREE_PASS_H) $(DBGCNT_H) $(TM_P_H) \\\n+   $(DBGCNT_H) dce.h $(TREE_PASS_H) $(DBGCNT_H) $(TM_P_H) \\\n    $(EMIT_RTL_H)\n dse.o : dse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(TM_P_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(RECOG_H) $(EXPR_H) $(DF_H) cselib.h $(DBGCNT_H) $(TIMEVAR_H) \\\n+   $(RECOG_H) $(EXPR_H) $(DF_H) cselib.h $(DBGCNT_H) \\\n    $(TREE_PASS_H) alloc-pool.h $(ALIAS_H) $(OPTABS_H) $(TARGET_H) \\\n    $(BITMAP_H) $(PARAMS_H) $(TREE_FLOW_H)\n fwprop.o : fwprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(DIAGNOSTIC_CORE_H) insn-config.h $(RECOG_H) $(FLAGS_H) $(OBSTACK_H) $(BASIC_BLOCK_H) \\\n-   $(DF_H) alloc-pool.h $(TIMEVAR_H) $(TREE_PASS_H) $(TARGET_H) \\\n+   $(DF_H) alloc-pool.h $(TREE_PASS_H) $(TARGET_H) \\\n    $(TM_P_H) $(CFGLOOP_H) $(EMIT_RTL_H) domwalk.h sparseset.h\n web.o : web.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(FUNCTION_H) $(DIAGNOSTIC_CORE_H) \\\n-   insn-config.h $(RECOG_H) $(DF_H) $(OBSTACK_H) $(TIMEVAR_H) $(TREE_PASS_H)\n+   insn-config.h $(RECOG_H) $(DF_H) $(OBSTACK_H) $(TREE_PASS_H)\n ree.o : ree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(FUNCTION_H) \\\n-   $(DF_H) $(TIMEVAR_H) $(TREE_PASS_H) $(RECOG_H) $(EXPR_H) \\\n+   $(DF_H) $(TREE_PASS_H) $(RECOG_H) $(EXPR_H) \\\n    $(REGS_H) $(TREE_H) $(TM_P_H) insn-config.h $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) \\\n    $(TARGET_H) $(OPTABS_H) insn-codes.h rtlhooks-def.h $(PARAMS_H) $(CGRAPH_H)\n cprop.o : cprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n-   $(TM_P_H) $(PARAMS_H) cselib.h $(EXCEPT_H) $(TREE_H) $(TIMEVAR_H) \\\n+   $(TM_P_H) $(PARAMS_H) cselib.h $(EXCEPT_H) $(TREE_H) \\\n    intl.h $(OBSTACK_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H) $(TARGET_H) \\\n    $(DF_H) $(CFGLOOP_H)\n gcse.o : gcse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(GGC_H) \\\n    $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n-   $(TM_P_H) $(PARAMS_H) cselib.h $(EXCEPT_H) gt-gcse.h $(TREE_H) $(TIMEVAR_H) \\\n+   $(TM_P_H) $(PARAMS_H) cselib.h $(EXCEPT_H) gt-gcse.h $(TREE_H) \\\n    intl.h $(OBSTACK_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H) $(TARGET_H) \\\n    $(DF_H) gcse.h\n store-motion.o : store-motion.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(GGC_H) \\\n    $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n-   $(TM_P_H) $(EXCEPT_H) $(TREE_H) $(TIMEVAR_H) \\\n+   $(TM_P_H) $(EXCEPT_H) $(TREE_H) \\\n    intl.h $(OBSTACK_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n resource.o : resource.c $(CONFIG_H) $(RTL_H) hard-reg-set.h $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(REGS_H) $(FLAGS_H) output.h $(RESOURCE_H) $(DF_H) \\\n    $(FUNCTION_H) $(DIAGNOSTIC_CORE_H) $(INSN_ATTR_H) $(EXCEPT_H) $(PARAMS_H) $(TM_P_H)\n-lcm.o : lcm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n+lcm.o : lcm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    hard-reg-set.h $(FLAGS_H) insn-config.h $(INSN_ATTR_H) $(RECOG_H) \\\n    $(BASIC_BLOCK_H) $(TM_P_H) $(FUNCTION_H) sbitmap.h\n mode-switching.o : mode-switching.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(INSN_ATTR_H) $(RECOG_H) $(BASIC_BLOCK_H) $(TM_P_H) $(FUNCTION_H) \\\n-   $(TREE_PASS_H) $(TIMEVAR_H) $(DF_H) $(TARGET_H) $(EMIT_RTL_H)\n+   $(TREE_PASS_H) $(DF_H) $(TARGET_H) $(EMIT_RTL_H)\n tree-ssa-dce.o : tree-ssa-dce.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-    $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n-    coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n+    $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TM_H) \\\n+    coretypes.h $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n     $(GGC_H) $(GIMPLE_H) $(CFGLOOP_H) $(SCEV_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-call-cdce.o : tree-call-cdce.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-    $(TREE_FLOW_H) $(TIMEVAR_H) $(TM_H) \\\n-    coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n+    $(TREE_FLOW_H) $(TM_H) \\\n+    coretypes.h $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n     $(GIMPLE_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-ssa-ccp.o : tree-ssa-ccp.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) \\\n-   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h  $(PARAMS_H) \\\n+   $(DIAGNOSTIC_H) $(FUNCTION_H) $(TM_H) coretypes.h \\\n+   $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h  $(PARAMS_H) \\\n    tree-ssa-propagate.h value-prof.h $(FLAGS_H) $(TARGET_H) $(DIAGNOSTIC_CORE_H) \\\n    $(DBGCNT_H) $(GIMPLE_PRETTY_PRINT_H) gimple-fold.h\n tree-ssa-strlen.o : tree-ssa-strlen.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) domwalk.h alloc-pool.h tree-ssa-propagate.h \\\n    $(GIMPLE_PRETTY_PRINT_H) $(PARAMS_H) $(EXPR_H)\n tree-sra.o : tree-sra.c $(CONFIG_H) $(SYSTEM_H) coretypes.h alloc-pool.h \\\n    $(TM_H) $(TREE_H) $(GIMPLE_H) $(CGRAPH_H) $(TREE_FLOW_H) \\\n-   $(IPA_PROP_H) $(DIAGNOSTIC_H) statistics.h $(TREE_DUMP_H) $(TIMEVAR_H) \\\n+   $(IPA_PROP_H) $(DIAGNOSTIC_H) statistics.h \\\n    $(PARAMS_H) $(TARGET_H) $(FLAGS_H) \\\n    $(DBGCNT_H) $(TREE_INLINE_H) $(GIMPLE_PRETTY_PRINT_H)\n tree-switch-conversion.o : tree-switch-conversion.c $(CONFIG_H) $(SYSTEM_H) \\\n     $(TREE_H) $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \\\n-    $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(GIMPLE_H) \\\n+    $(TM_H) coretypes.h $(GIMPLE_H) \\\n     $(TREE_PASS_H) $(FLAGS_H) $(EXPR_H) $(BASIC_BLOCK_H) \\\n     $(GGC_H) $(OBSTACK_H) $(PARAMS_H) $(CPPLIB_H) $(PARAMS_H) \\\n     $(GIMPLE_PRETTY_PRINT_H) langhooks.h\n@@ -3032,57 +3034,57 @@ tree-vect-generic.o : tree-vect-generic.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n     coretypes.h insn-codes.h $(DIAGNOSTIC_H) $(TARGET_H)\n df-core.o : df-core.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    insn-config.h $(RECOG_H) $(FUNCTION_H) $(REGS_H) alloc-pool.h \\\n-   hard-reg-set.h $(BASIC_BLOCK_H) $(DF_H) $(BITMAP_H) sbitmap.h $(TIMEVAR_H) \\\n+   hard-reg-set.h $(BASIC_BLOCK_H) $(DF_H) $(BITMAP_H) sbitmap.h \\\n    $(TM_P_H) $(FLAGS_H) output.h $(TREE_PASS_H) $(PARAMS_H)\n-df-problems.o : df-problems.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+df-problems.o : df-problems.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h $(TM_H) \\\n    $(RTL_H) insn-config.h $(RECOG_H) $(FUNCTION_H) $(REGS_H) alloc-pool.h \\\n    hard-reg-set.h $(BASIC_BLOCK_H) $(DF_H) $(BITMAP_H) sbitmap.h $(TIMEVAR_H) \\\n    $(TM_P_H) $(TARGET_H) $(FLAGS_H) $(EXCEPT_H) dce.h vecprim.h\n-df-scan.o : df-scan.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+df-scan.o : df-scan.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h $(TM_H) $(RTL_H) \\\n    insn-config.h $(RECOG_H) $(FUNCTION_H) $(REGS_H) alloc-pool.h \\\n-   hard-reg-set.h $(BASIC_BLOCK_H) $(DF_H) $(BITMAP_H) sbitmap.h $(TIMEVAR_H) \\\n+   hard-reg-set.h $(BASIC_BLOCK_H) $(DF_H) $(BITMAP_H) sbitmap.h \\\n    $(TM_P_H) $(FLAGS_H) $(TARGET_H) $(TARGET_DEF_H) $(TREE_H) \\\n-   $(TREE_PASS_H) $(EMIT_RTL_H)\n+   $(EMIT_RTL_H)\n regstat.o : regstat.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TM_P_H) $(FLAGS_H) $(REGS_H) $(EXCEPT_H) hard-reg-set.h \\\n    $(BASIC_BLOCK_H) $(TIMEVAR_H) $(DF_H)\n var-tracking.o : var-tracking.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(TREE_H) hard-reg-set.h insn-config.h reload.h $(FLAGS_H) \\\n    $(BASIC_BLOCK_H) bitmap.h alloc-pool.h $(FIBHEAP_H) $(HASHTAB_H) \\\n-   $(REGS_H) $(EXPR_H) $(TIMEVAR_H) $(TREE_PASS_H) $(TREE_FLOW_H) \\\n+   $(REGS_H) $(EXPR_H) $(TREE_PASS_H) $(TREE_FLOW_H) \\\n    cselib.h $(TARGET_H) $(DIAGNOSTIC_CORE_H) $(PARAMS_H) $(DIAGNOSTIC_H) \\\n    pointer-set.h $(RECOG_H) $(TM_P_H) $(TREE_PRETTY_PRINT_H) $(ALIAS_H)\n-profile.o : profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+profile.o : profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(REGS_H) $(EXPR_H) $(FUNCTION_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_CORE_H) $(COVERAGE_H) $(TREE_FLOW_H) value-prof.h \\\n-   $(CFGLOOP_H) $(TIMEVAR_H) $(TREE_PASS_H) profile.h\n-mcf.o : mcf.c profile.h $(CONFIG_H) $(SYSTEM_H) $(TM_H) coretypes.h \\\n+   $(CFGLOOP_H) profile.h\n+mcf.o : mcf.c profile.h $(CONFIG_H) $(SYSTEM_H) $(TM_H) coretypes.h dumpfile.h \\\n    $(BASIC_BLOCK_H) langhooks.h $(GCOV_IO_H) $(TREE_H) \n tree-profile.o : tree-profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TARGET_H) $(TREE_H) $(FLAGS_H) $(FUNCTION_H) \\\n-   $(BASIC_BLOCK_H) $(DIAGNOSTIC_CORE_H) $(COVERAGE_H) $(TREE_H) value-prof.h $(TREE_DUMP_H) \\\n-   $(TREE_PASS_H) $(TREE_FLOW_H) $(TIMEVAR_H) gt-tree-profile.h $(CGRAPH_H)\n-value-prof.o : value-prof.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+   $(BASIC_BLOCK_H) $(DIAGNOSTIC_CORE_H) $(COVERAGE_H) $(TREE_H) value-prof.h \\\n+   $(TREE_PASS_H) $(TREE_FLOW_H) gt-tree-profile.h $(CGRAPH_H)\n+value-prof.o : value-prof.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h $(TM_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h profile.h value-prof.h $(EXPR_H) $(FLAGS_H) \\\n    $(RECOG_H) insn-config.h $(OPTABS_H) $(REGS_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n    $(TREE_H) $(COVERAGE_H) $(RTL_H) $(GCOV_IO_H) $(TREE_FLOW_H) \\\n-   tree-flow-inline.h $(TIMEVAR_H) $(TREE_PASS_H) $(DIAGNOSTIC_CORE_H) pointer-set.h \\\n+   tree-flow-inline.h $(TIMEVAR_H) $(DIAGNOSTIC_CORE_H) pointer-set.h \\\n    $(GIMPLE_PRETTY_PRINT_H)\n-loop-doloop.o : loop-doloop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+loop-doloop.o : loop-doloop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) $(TM_P_H) \\\n    $(DIAGNOSTIC_CORE_H) $(CFGLOOP_H) $(PARAMS_H) $(TARGET_H)\n alloc-pool.o : alloc-pool.c $(CONFIG_H) $(SYSTEM_H) alloc-pool.h $(HASHTAB_H)\n auto-inc-dec.o : auto-inc-dec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(RTL_H) $(TM_P_H) hard-reg-set.h $(BASIC_BLOCK_H) insn-config.h \\\n    $(REGS_H) $(FLAGS_H) $(FUNCTION_H) $(EXCEPT_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) \\\n-   $(EXPR_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H) $(TARGET_H)\n-cfg.o : cfg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(DIAGNOSTIC_CORE_H) $(GGC_H) \\\n-   $(OBSTACK_H) alloc-pool.h $(HASHTAB_H) $(CFGLOOP_H) $(BASIC_BLOCK_H)\n+   $(EXPR_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H) $(TARGET_H)\n+cfg.o : cfg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h $(DIAGNOSTIC_CORE_H) \\\n+   $(GGC_H) $(OBSTACK_H) alloc-pool.h $(HASHTAB_H) $(CFGLOOP_H) $(BASIC_BLOCK_H)\n cfghooks.o: cfghooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(TIMEVAR_H) toplev.h $(DIAGNOSTIC_CORE_H) $(CFGLOOP_H)\n cfgexpand.o : cfgexpand.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n-   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) \\\n-   coretypes.h $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(TREE_PASS_H) $(RTL_H) \\\n+   $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(FUNCTION_H) $(TM_H) \\\n+   coretypes.h $(EXCEPT_H) langhooks.h $(TREE_PASS_H) $(RTL_H) \\\n    $(DIAGNOSTIC_H) toplev.h $(DIAGNOSTIC_CORE_H) $(BASIC_BLOCK_H) $(FLAGS_H) debug.h $(PARAMS_H) \\\n    value-prof.h $(TREE_INLINE_H) $(TARGET_H) $(SSAEXPAND_H) $(REGS_H) \\\n    $(GIMPLE_PRETTY_PRINT_H) $(BITMAP_H) sbitmap.h \\\n@@ -3099,39 +3101,40 @@ cfgbuild.o : cfgbuild.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h $(DIAGNOSTIC_CORE_H) \\\n    $(FUNCTION_H) $(EXCEPT_H) $(TIMEVAR_H) $(TREE_H) $(EXPR_H) sbitmap.h\n cfgcleanup.o : cfgcleanup.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(TIMEVAR_H) hard-reg-set.h $(FLAGS_H) $(RECOG_H) \\\n+   $(RTL_H) hard-reg-set.h $(FLAGS_H) $(RECOG_H) \\\n    $(DIAGNOSTIC_CORE_H) insn-config.h cselib.h $(TARGET_H) $(TM_P_H) $(PARAMS_H) \\\n    $(REGS_H) $(EMIT_RTL_H) $(FUNCTION_H) $(TREE_PASS_H) $(CFGLOOP_H) $(EXPR_H) \\\n    $(DF_H) $(DBGCNT_H) dce.h\n-cfgloop.o : cfgloop.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) coretypes.h $(TM_H) \\\n+cfgloop.o : cfgloop.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) coretypes.h dumpfile.h $(TM_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(FLAGS_H) $(FUNCTION_H) \\\n    $(OBSTACK_H) toplev.h $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_H) pointer-set.h \\\n    $(GGC_H)\n-cfgloopanal.o : cfgloopanal.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) coretypes.h $(TM_H) \\\n+cfgloopanal.o : cfgloopanal.c coretypes.h dumpfile.h $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n+   $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) $(TM_H) \\\n    $(OBSTACK_H) graphds.h $(PARAMS_H)\n graphds.o : graphds.c graphds.h $(CONFIG_H) $(SYSTEM_H) $(BITMAP_H) $(OBSTACK_H) \\\n    coretypes.h $(VEC_H) vecprim.h\n-loop-iv.o : loop-iv.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n-   hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) coretypes.h $(TM_H) $(OBSTACK_H) \\\n+loop-iv.o : loop-iv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h \\\n+   $(RTL_H) $(BASIC_BLOCK_H) \\\n+   hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) $(TM_H) $(OBSTACK_H) \\\n    intl.h $(DIAGNOSTIC_CORE_H) $(DF_H) $(HASHTAB_H)\n-loop-invariant.o : loop-invariant.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) $(RECOG_H) \\\n-   coretypes.h $(TM_H) $(TM_P_H) $(FUNCTION_H) $(FLAGS_H) $(DF_H) \\\n+loop-invariant.o : loop-invariant.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h \\\n+   $(RTL_H) $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) $(RECOG_H) \\\n+   $(TM_H) $(TM_P_H) $(FUNCTION_H) $(FLAGS_H) $(DF_H) \\\n    $(OBSTACK_H) $(HASHTAB_H) $(EXCEPT_H) $(PARAMS_H) $(REGS_H) ira.h\n cfgloopmanip.o : cfgloopmanip.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) \\\n    coretypes.h $(TM_H) $(OBSTACK_H) $(TREE_FLOW_H)\n loop-init.o : loop-init.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(GGC_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) \\\n-   coretypes.h $(TM_H) $(OBSTACK_H) $(TREE_PASS_H) $(TIMEVAR_H) $(FLAGS_H) \\\n+   coretypes.h $(TM_H) $(OBSTACK_H) $(TREE_PASS_H) $(FLAGS_H) \\\n    $(REGS_H) $(DF_H)\n-loop-unswitch.o : loop-unswitch.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TM_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(PARAMS_H) \\\n-   $(EXPR_H) coretypes.h $(TM_H) $(OBSTACK_H)\n-loop-unroll.o: loop-unroll.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TM_H) \\\n-   $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(PARAMS_H) \\\n-   $(EXPR_H) coretypes.h $(TM_H) $(HASHTAB_H) $(RECOG_H) \\\n+loop-unswitch.o : loop-unswitch.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h \\\n+   $(RTL_H) $(TM_H) $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(PARAMS_H) \\\n+   $(EXPR_H) $(TM_H) $(OBSTACK_H)\n+loop-unroll.o: loop-unroll.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h \\\n+   $(RTL_H) $(TM_H) $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(PARAMS_H) \\\n+   $(EXPR_H) $(TM_H) $(HASHTAB_H) $(RECOG_H) \\\n    $(OBSTACK_H)\n dominance.o : dominance.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(BASIC_BLOCK_H) et-forest.h $(OBSTACK_H) $(DIAGNOSTIC_CORE_H) \\\n@@ -3142,12 +3145,12 @@ combine.o : combine.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(FUNCTION_H) insn-config.h $(INSN_ATTR_H) $(REGS_H) $(EXPR_H) \\\n    rtlhooks-def.h $(BASIC_BLOCK_H) $(RECOG_H) hard-reg-set.h \\\n    $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(TREE_H) $(TARGET_H) $(PARAMS_H) $(OPTABS_H) \\\n-   insn-codes.h $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) vecprim.h $(CGRAPH_H) \\\n+   insn-codes.h $(TREE_PASS_H) $(DF_H) vecprim.h $(CGRAPH_H) \\\n    $(OBSTACK_H)\n reginfo.o : reginfo.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) addresses.h $(REGS_H) \\\n    insn-config.h $(RECOG_H) reload.h $(DIAGNOSTIC_CORE_H) \\\n-   $(FUNCTION_H) output.h $(TM_P_H) $(EXPR_H) $(TIMEVAR_H) $(HASHTAB_H) \\\n+   $(FUNCTION_H) output.h $(TM_P_H) $(EXPR_H) $(HASHTAB_H) \\\n    $(TARGET_H) $(TREE_PASS_H) $(DF_H) ira.h\n bitmap.o : bitmap.c $(CONFIG_H) $(SYSTEM_H)  coretypes.h \\\n    $(GGC_H) gt-bitmap.h $(BITMAP_H) $(OBSTACK_H) $(HASHTAB_H)\n@@ -3157,7 +3160,8 @@ reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(FLAGS_H) $(EXPR_H) $(OPTABS_H) reload.h $(RECOG_H) \\\n    hard-reg-set.h insn-config.h $(REGS_H) $(FUNCTION_H) real.h \\\n    addresses.h $(TM_P_H) $(PARAMS_H) $(TARGET_H) $(DF_H) ira.h $(DIAGNOSTIC_CORE_H)\n-reload1.o : reload1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n+reload1.o : reload1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h \\\n+   $(TM_H) $(RTL_ERROR_H) \\\n    $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) hard-reg-set.h insn-config.h \\\n    $(BASIC_BLOCK_H) $(RECOG_H) $(FUNCTION_H)  $(TM_P_H) \\\n    addresses.h $(EXCEPT_H) $(TREE_H) $(FLAGS_H) $(MACHMODE_H) \\\n@@ -3168,13 +3172,14 @@ postreload.o : postreload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) \\\n    hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) $(RECOG_H) \\\n    $(FUNCTION_H) $(DIAGNOSTIC_CORE_H) cselib.h $(TM_P_H) $(EXCEPT_H) $(TREE_H) $(MACHMODE_H) \\\n-   $(OBSTACK_H) $(TARGET_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n+   $(OBSTACK_H) $(TARGET_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n postreload-gcse.o : postreload-gcse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) $(DIAGNOSTIC_CORE_H) \\\n    $(TM_P_H) $(EXCEPT_H) $(TREE_H) $(TARGET_H) $(HASHTAB_H) intl.h $(OBSTACK_H) \\\n-   $(PARAMS_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DBGCNT_H)\n-caller-save.o : caller-save.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   $(PARAMS_H) $(TREE_PASS_H) $(DBGCNT_H)\n+caller-save.o : caller-save.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h \\\n+   $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(REGS_H) hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) $(FUNCTION_H) \\\n    addresses.h $(RECOG_H) reload.h $(EXPR_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) $(DF_H) \\\n    gt-caller-save.h $(GGC_H)\n@@ -3186,12 +3191,12 @@ reorg.o : reorg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    conditions.h hard-reg-set.h $(BASIC_BLOCK_H) $(REGS_H) insn-config.h \\\n    $(INSN_ATTR_H) $(EXCEPT_H) $(RECOG_H) $(FUNCTION_H) $(FLAGS_H) output.h \\\n    $(EXPR_H) $(DIAGNOSTIC_CORE_H) $(PARAMS_H) $(TM_P_H) $(OBSTACK_H) $(RESOURCE_H) \\\n-   $(TIMEVAR_H) $(TARGET_H) $(TREE_PASS_H)\n-alias.o : alias.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   $(TARGET_H) $(TREE_PASS_H)\n+alias.o : alias.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) hard-reg-set.h $(BASIC_BLOCK_H) $(REGS_H) $(DIAGNOSTIC_CORE_H) \\\n    $(ALIAS_H) $(EMIT_RTL_H) $(GGC_H) $(FUNCTION_H) cselib.h $(TREE_H) $(TM_P_H) \\\n    langhooks.h $(TARGET_H) gt-alias.h $(TIMEVAR_H) $(CGRAPH_H) \\\n-   $(SPLAY_TREE_H) $(DF_H) $(TREE_PASS_H) \\\n+   $(SPLAY_TREE_H) $(DF_H) \\\n    tree-ssa-alias.h pointer-set.h $(TREE_FLOW_H)\n stack-ptr-mod.o : stack-ptr-mod.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(RTL_H) $(REGS_H) $(EXPR_H) $(TREE_PASS_H) \\\n@@ -3217,7 +3222,7 @@ ira-color.o: ira-color.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(DF_H) $(IRA_INT_H)\n ira-emit.o: ira-emit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(REGS_H) $(RTL_H) $(TM_P_H) $(TARGET_H) $(FLAGS_H) hard-reg-set.h \\\n-   $(BASIC_BLOCK_H) $(EXPR_H) $(RECOG_H) $(PARAMS_H) $(TIMEVAR_H) \\\n+   $(BASIC_BLOCK_H) $(EXPR_H) $(RECOG_H) $(PARAMS_H) \\\n    $(TREE_PASS_H) reload.h $(DF_H) $(IRA_INT_H)\n ira-lives.o: ira-lives.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TARGET_H) $(RTL_H) $(REGS_H) $(EXCEPT_H) hard-reg-set.h $(FLAGS_H) \\\n@@ -3226,15 +3231,15 @@ ira-lives.o: ira-lives.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n ira.o: ira.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(REGS_H) $(RTL_H) $(TM_P_H) $(TARGET_H) $(FLAGS_H) $(OBSTACK_H) \\\n    $(BITMAP_H) hard-reg-set.h $(BASIC_BLOCK_H) $(DBGCNT_H) $(FUNCTION_H) \\\n-   $(EXPR_H) $(RECOG_H) $(PARAMS_H) $(TIMEVAR_H) $(TREE_PASS_H) output.h \\\n+   $(EXPR_H) $(RECOG_H) $(PARAMS_H) $(TREE_PASS_H) output.h \\\n    $(EXCEPT_H) reload.h toplev.h $(DIAGNOSTIC_CORE_H) $(DF_H) $(GGC_H) $(IRA_INT_H)\n regmove.o : regmove.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   insn-config.h $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) \\\n+   insn-config.h $(TREE_PASS_H) $(DF_H) \\\n    $(RECOG_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) $(FUNCTION_H) \\\n    $(EXPR_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_CORE_H) $(TM_P_H) \\\n    $(EXCEPT_H) ira.h reload.h $(TARGET_H)\n combine-stack-adj.o : combine-stack-adj.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(RTL_H) insn-config.h $(TIMEVAR_H) $(TREE_PASS_H) \\\n+   $(TM_H) $(RTL_H) insn-config.h $(TREE_PASS_H) \\\n    $(RECOG_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) $(FUNCTION_H) \\\n    $(EXPR_H) $(BASIC_BLOCK_H) $(TM_P_H) $(DF_H) $(EXCEPT_H) reload.h\n compare-elim.o : compare-elim.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -3249,9 +3254,10 @@ modulo-sched.o : modulo-sched.c $(DDG_H) $(CONFIG_H) $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TARGET_H) $(DIAGNOSTIC_CORE_H) $(RTL_H) $(TM_P_H) $(REGS_H) $(FUNCTION_H) \\\n    $(FLAGS_H) insn-config.h $(INSN_ATTR_H) $(EXCEPT_H) $(RECOG_H) \\\n    $(SCHED_INT_H) $(CFGLOOP_H) $(EXPR_H) $(PARAMS_H) \\\n-   $(GCOV_IO_H) hard-reg-set.h $(TM_H) $(TIMEVAR_H) $(TREE_PASS_H) \\\n+   $(GCOV_IO_H) hard-reg-set.h $(TM_H) $(TREE_PASS_H) \\\n    $(DF_H) $(DBGCNT_H)\n-haifa-sched.o : haifa-sched.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+haifa-sched.o : haifa-sched.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h \\\n+   $(TM_H) $(RTL_H) \\\n    $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(FUNCTION_H) \\\n    $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(TM_P_H) $(TARGET_H) \\\n    $(PARAMS_H) $(DBGCNT_H) $(CFGLOOP_H) ira.h $(EMIT_RTL_H) $(COMMON_TARGET_H) \\\n@@ -3263,94 +3269,94 @@ sched-deps.o : sched-deps.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n sched-rgn.o : sched-rgn.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(FUNCTION_H) $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n-   $(TM_P_H) sel-sched.h $(TARGET_H) $(TIMEVAR_H) $(TREE_PASS_H)  \\\n+   $(TM_P_H) sel-sched.h $(TARGET_H) $(TREE_PASS_H)  \\\n    $(DBGCNT_H)\n sched-ebb.o : sched-ebb.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(FUNCTION_H) $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(TM_P_H) \\\n    $(PARAMS_H) $(TARGET_H)\n-sched-vis.o : sched-vis.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+sched-vis.o : sched-vis.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h $(TM_H) \\\n    $(RTL_H) $(SCHED_INT_H) hard-reg-set.h $(BASIC_BLOCK_H) $(OBSTACK_H) \\\n-   $(TREE_PASS_H) $(INSN_ATTR_H) $(TREE_H)\n+   $(INSN_ATTR_H) $(TREE_H)\n sel-sched.o : sel-sched.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_ERROR_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(FUNCTION_H) $(INSN_ATTR_H)  $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n-   $(TM_P_H) output.h $(TARGET_H) $(TIMEVAR_H) $(TREE_PASS_H)  \\\n+   $(TM_P_H) output.h $(TARGET_H) $(TREE_PASS_H)  \\\n    $(SCHED_INT_H) $(GGC_H) $(TREE_H) langhooks.h rtlhooks-def.h \\\n    $(SEL_SCHED_IR_H) $(SEL_SCHED_DUMP_H) sel-sched.h $(DBGCNT_H) $(EMIT_RTL_H)\n sel-sched-dump.o : sel-sched-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(FUNCTION_H) $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n-   $(TM_P_H) $(TARGET_H) $(TIMEVAR_H) $(TREE_PASS_H) \\\n+   $(TM_P_H) $(TARGET_H) $(TREE_PASS_H) \\\n    $(SEL_SCHED_DUMP_H) $(GGC_H) $(TREE_H) $(LANGHOOKS_DEF_H) $(SEL_SCHED_IR_H) \\\n    $(BASIC_BLOCK_H) cselib.h\n sel-sched-ir.o : sel-sched-ir.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(FUNCTION_H) $(INSN_ATTR_H) $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n-   $(TM_P_H) $(TARGET_H) $(TIMEVAR_H) $(TREE_PASS_H) $(SCHED_INT_H) $(GGC_H) \\\n+   $(TM_P_H) $(TARGET_H) $(TREE_PASS_H) $(SCHED_INT_H) $(GGC_H) \\\n    $(TREE_H) langhooks.h rtlhooks-def.h $(SEL_SCHED_IR_H) $(SEL_SCHED_DUMP_H) \\\n    $(EMIT_RTL_H)\n final.o : final.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(TREE_H) $(FLAGS_H) intl.h $(REGS_H) $(RECOG_H) conditions.h \\\n    insn-config.h $(INSN_ATTR_H) $(FUNCTION_H) output.h hard-reg-set.h \\\n    $(EXCEPT_H) debug.h xcoffout.h toplev.h $(DIAGNOSTIC_CORE_H) reload.h $(DWARF2OUT_H) \\\n    $(TREE_PASS_H) $(BASIC_BLOCK_H) $(TM_P_H) $(TARGET_H) $(EXPR_H) \\\n-   dbxout.h $(TIMEVAR_H) $(CGRAPH_H) $(COVERAGE_H) \\\n+   dbxout.h $(CGRAPH_H) $(COVERAGE_H) \\\n    $(DF_H) vecprim.h $(GGC_H) $(CFGLOOP_H) $(PARAMS_H) $(TREE_FLOW_H) \\\n    $(TARGET_DEF_H) $(TREE_PRETTY_PRINT_H)\n recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(FUNCTION_H) $(BASIC_BLOCK_H) $(REGS_H) $(RECOG_H) $(EXPR_H) \\\n    $(FLAGS_H) insn-config.h $(INSN_ATTR_H) reload.h \\\n-   addresses.h $(TM_P_H) $(TIMEVAR_H) $(TREE_PASS_H) hard-reg-set.h \\\n+   addresses.h $(TM_P_H) $(TREE_PASS_H) hard-reg-set.h \\\n    $(DF_H) $(DBGCNT_H) $(TARGET_H) $(DIAGNOSTIC_CORE_H)\n reg-stack.o : reg-stack.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_ERROR_H) $(TREE_H) $(RECOG_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n    insn-config.h reload.h $(FUNCTION_H) $(TM_P_H) $(GGC_H) \\\n-   $(BASIC_BLOCK_H) $(TIMEVAR_H) \\\n+   $(BASIC_BLOCK_H) \\\n    $(TREE_PASS_H) $(TARGET_H) vecprim.h $(DF_H) $(EMIT_RTL_H)\n sreal.o: sreal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h sreal.h\n predict.o: predict.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) \\\n    hard-reg-set.h $(DIAGNOSTIC_CORE_H) $(RECOG_H) $(FUNCTION_H) $(EXCEPT_H) \\\n    $(TM_P_H) $(PREDICT_H) sreal.h $(PARAMS_H) $(TARGET_H) $(CFGLOOP_H) \\\n-   $(COVERAGE_H) $(SCEV_H) $(GGC_H) predict.def $(TIMEVAR_H) $(TREE_DUMP_H) \\\n+   $(COVERAGE_H) $(SCEV_H) $(GGC_H) predict.def \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) $(EXPR_H) pointer-set.h\n lists.o: lists.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(DIAGNOSTIC_CORE_H) \\\n    $(RTL_H) $(GGC_H) gt-lists.h\n bb-reorder.o : bb-reorder.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(FLAGS_H) $(TIMEVAR_H) output.h $(FIBHEAP_H) \\\n+   $(RTL_H) $(FLAGS_H) output.h $(FIBHEAP_H) \\\n    $(TARGET_H) $(FUNCTION_H) $(TM_P_H) $(OBSTACK_H) $(EXPR_H) $(REGS_H) \\\n    $(PARAMS_H) toplev.h $(DIAGNOSTIC_CORE_H) $(TREE_PASS_H) $(DF_H) \\\n    $(EXCEPT_H) bb-reorder.h\n tracer.o : tracer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(BASIC_BLOCK_H) hard-reg-set.h \\\n-   $(FLAGS_H) $(TIMEVAR_H) $(PARAMS_H) $(COVERAGE_H) $(FIBHEAP_H) \\\n+   $(FLAGS_H) $(PARAMS_H) $(COVERAGE_H) $(FIBHEAP_H) \\\n    $(TREE_PASS_H) $(TREE_FLOW_H) $(TREE_INLINE_H) $(CFGLOOP_H)\n timevar.o : timevar.c $(CONFIG_H) $(SYSTEM_H) $(TIMEVAR_H)\n regcprop.o : regcprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n    $(RECOG_H) $(FUNCTION_H) $(OBSTACK_H) $(FLAGS_H) $(TM_P_H) \\\n-   addresses.h reload.h $(DIAGNOSTIC_CORE_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H)\n+   addresses.h reload.h $(DIAGNOSTIC_CORE_H) $(TREE_PASS_H) $(DF_H)\n regrename.o : regrename.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_ERROR_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n    output.h $(RECOG_H) $(FUNCTION_H) $(OBSTACK_H) $(FLAGS_H) $(TM_P_H) \\\n-   addresses.h reload.h $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) $(TARGET_H) \\\n+   addresses.h reload.h $(TREE_PASS_H) $(DF_H) $(TARGET_H) \\\n    regrename.h $(EMIT_RTL_H)\n ifcvt.o : ifcvt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) $(DIAGNOSTIC_CORE_H) $(FLAGS_H) insn-config.h $(FUNCTION_H) $(RECOG_H) \\\n    $(TARGET_H) $(BASIC_BLOCK_H) $(EXPR_H) output.h $(EXCEPT_H) $(TM_P_H) \\\n-   $(OPTABS_H) $(CFGLOOP_H) hard-reg-set.h $(TIMEVAR_H) \\\n+   $(OPTABS_H) $(CFGLOOP_H) hard-reg-set.h \\\n    $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n params.o : params.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(COMMON_TARGET_H) \\\n    $(PARAMS_H) $(DIAGNOSTIC_CORE_H)\n pointer-set.o: pointer-set.c pointer-set.h $(CONFIG_H) $(SYSTEM_H)\n hooks.o: hooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(HOOKS_H)\n pretty-print.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h intl.h $(PRETTY_PRINT_H)\n errors.o : errors.c $(CONFIG_H) $(SYSTEM_H) errors.h\n-dbgcnt.o: dbgcnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(DIAGNOSTIC_CORE_H) $(DBGCNT_H) \\\n-   $(TM_H) $(RTL_H)\n+dbgcnt.o: dbgcnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h \\\n+    $(DIAGNOSTIC_CORE_H) $(DBGCNT_H)\n lower-subreg.o : lower-subreg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(MACHMODE_H) $(TM_H) $(RTL_H) $(TM_P_H) $(TIMEVAR_H) $(FLAGS_H) \\\n+   $(MACHMODE_H) $(TM_H) $(RTL_H) $(TM_P_H) $(FLAGS_H) \\\n    insn-config.h $(BASIC_BLOCK_H) $(RECOG_H) $(OBSTACK_H) $(BITMAP_H) \\\n    $(EXPR_H) $(EXCEPT_H) $(REGS_H) $(TREE_PASS_H) $(DF_H) dce.h \\\n    lower-subreg.h\n@@ -3359,7 +3365,7 @@ target-globals.o : target-globals.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(FLAGS_H) $(REGS_H) $(RTL_H) reload.h expmed.h $(EXPR_H) $(OPTABS_H) \\\n    $(LIBFUNCS_H) $(CFGLOOP_H) $(IRA_INT_H) builtins.h gcse.h bb-reorder.h \\\n    lower-subreg.h\n-hw-doloop.o : hw-doloop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+hw-doloop.o : hw-doloop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) $(TM_P_H) \\\n    $(DF_H) $(CFGLOOP_H) $(RECOG_H) $(TARGET_H) \\\n    $(REGS_H) hw-doloop.h"}, {"sha": "bb8aa3490185217b1adf8518b3c5a4f8ad9add00", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -1,3 +1,8 @@\n+2012-07-16  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* gcc-interface/utils.c: Include timevar.h.\n+\t* Make-lang.in: Fix dependencies.\n+\n 2012-07-16  Vasiliy Fofanov  <fofanov@adacore.com>\n \n \t* ug_words, vms_data.ads: Document VMS qualifiers for -gnatn1/2"}, {"sha": "31cc9cb9c3962e0230e8d11b8de60fc4168c857e", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -1024,7 +1024,7 @@ ada/trans.o : ada/gcc-interface/trans.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n ada/utils.o : ada/gcc-interface/utils.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(FLAGS_H) toplev.h $(RTL_H) output.h debug.h convert.h \\\n    $(TARGET_H) $(COMMON_TARGET_H) function.h langhooks.h \\\n-   $(CGRAPH_H) $(DIAGNOSTIC_H) \\\n+   $(CGRAPH_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    $(TREE_DUMP_H) $(TREE_INLINE_H) tree-iterator.h \\\n    ada/gcc-interface/ada.h ada/types.h ada/atree.h ada/elists.h ada/namet.h \\\n    ada/nlists.h ada/stringt.h ada/uintp.h ada/fe.h ada/sinfo.h ada/einfo.h \\"}, {"sha": "cd91873b4aac718621bb4488779738bdbc322957", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -40,6 +40,7 @@\n #include \"langhooks.h\"\n #include \"cgraph.h\"\n #include \"diagnostic.h\"\n+#include \"timevar.h\"\n #include \"tree-dump.h\"\n #include \"tree-inline.h\"\n #include \"tree-iterator.h\""}, {"sha": "a1050041c429b3a2b9856089bdb9bb6492a22909", "filename": "gcc/alias.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -39,9 +39,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"langhooks.h\"\n #include \"timevar.h\"\n+#include \"dumpfile.h\"\n #include \"target.h\"\n #include \"cgraph.h\"\n-#include \"tree-pass.h\"\n #include \"df.h\"\n #include \"tree-ssa-alias.h\"\n #include \"pointer-set.h\""}, {"sha": "b1074f943b20e212154ee84d4d5d64c440982708", "filename": "gcc/auto-inc-dec.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fauto-inc-dec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fauto-inc-dec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-inc-dec.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"recog.h\"\n #include \"expr.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"df.h\"\n #include \"dbgcnt.h\""}, {"sha": "0d29b2d0c6f2ea7f601841cef1c84cf6a1e59171", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -72,7 +72,6 @@\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"flags.h\"\n-#include \"timevar.h\"\n #include \"output.h\"\n #include \"fibheap.h\"\n #include \"target.h\""}, {"sha": "b6c72553826a121f248d1618175ada452dbb0fa2", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -1,3 +1,9 @@\n+2012-07-16  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* c-gimplify.c: Include dumpfile.h instead of tree-dump.h.\n+\t* c-ada-spec.c: Likewise.\n+\t* c-dump.c (dump_stmt): Move to cp/dump.c, the only user.\n+\n 2012-07-14  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* c-pch.c (CHECK_NO_ASM_OUT_DURING_PCH): Do not define."}, {"sha": "2a97c489dcf609bbfc2c33514f53ef0eaba9cfc5", "filename": "gcc/c-family/c-ada-spec.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -24,7 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"tree-pass.h\"\t/* For TDI_ada and friends.  */\n+#include \"dumpfile.h\"\n #include \"c-ada-spec.h\"\n #include \"cpplib.h\"\n #include \"c-pragma.h\""}, {"sha": "c581755cca93f21362ccf2bc6b1cd0becf2b923a", "filename": "gcc/c-family/c-dump.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fc-family%2Fc-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fc-family%2Fc-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-dump.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -26,15 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-dump.h\"\n #include \"c-common.h\"\n \n-/* Dump information common to statements from STMT.  */\n-\n-void\n-dump_stmt (dump_info_p di, const_tree t)\n-{\n-  if (EXPR_HAS_LOCATION (t))\n-    dump_int (di, \"line\", EXPR_LINENO (t));\n-}\n-\n /* Dump any C-specific tree codes and attributes of common codes.  */\n \n bool"}, {"sha": "821c5d5d1ffcc18903ccaf90f605ff2e948efe5d", "filename": "gcc/c-family/c-gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fc-family%2Fc-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fc-family%2Fc-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-gimplify.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -36,7 +36,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n #include \"flags.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"c-pretty-print.h\"\n #include \"cgraph.h\"\n "}, {"sha": "b50ce9227635a41408d7acb55efa415685720f7a", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -1,3 +1,8 @@\n+2012-07-16  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* c-decl.c: Include dumpfile.h instead of tree-dump.h.\n+\t* Make-lang.in: Fix dependencies.\n+\n 2012-06-29  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* Make-lang.in: New file, rules migrated from gcc/Makefile.in"}, {"sha": "a39c91cc0c69bb8d5e49f2bc92e409ac00082a00", "filename": "gcc/c/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FMake-lang.in?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -163,7 +163,7 @@ c/c-decl.o : c/c-decl.c c/c-lang.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \toutput.h debug.h toplev.h intl.h $(TM_P_H) $(TREE_INLINE_H) \\\n \t$(TIMEVAR_H) $(OPTS_H) $(C_PRAGMA_H) gt-c-c-decl.h $(CGRAPH_H) \\\n \t$(HASHTAB_H) $(LANGHOOKS_DEF_H) \\\n-\t$(TREE_DUMP_H) $(C_COMMON_H) $(CPPLIB_H) $(DIAGNOSTIC_CORE_H) \\\n+\tdumpfile.h $(C_COMMON_H) $(CPPLIB_H) $(DIAGNOSTIC_CORE_H) \\\n \t$(INPUT_H) langhooks.h pointer-set.h tree-iterator.h \\\n \t$(PLUGIN_H) c-family/c-ada-spec.h c-family/c-objc.h\n "}, {"sha": "09df65dee57a35e3616f63bbb479d457302408b2", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -51,7 +51,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"tree-iterator.h\"\n #include \"diagnostic-core.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"cgraph.h\"\n #include \"hashtab.h\"\n #include \"langhooks-def.h\""}, {"sha": "77d299f36cc743a3d525050cf1bf4ad11a68f703", "filename": "gcc/caller-save.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -38,6 +38,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"addresses.h\"\n #include \"ggc.h\"\n+#include \"dumpfile.h\"\n \n #define MOVE_MAX_WORDS (MOVE_MAX / UNITS_PER_WORD)\n "}, {"sha": "b87318639c93d87392f2f8d4b637c4d7ed502814", "filename": "gcc/cfg.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -58,6 +58,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"df.h\"\n #include \"cfgloop.h\" /* FIXME: For struct loop.  */\n+#include \"dumpfile.h\"\n \n \f\n #define RDIV(X,Y) (((X) + (Y) / 2) / (Y))"}, {"sha": "331d87efa8bff234a9460b498b2e0c2401cfd024", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"hard-reg-set.h\"\n #include \"regs.h\"\n-#include \"timevar.h\"\n #include \"insn-config.h\"\n #include \"flags.h\"\n #include \"recog.h\""}, {"sha": "b767fe63ef8b0e1a0e9a63d25ebf4fb9b7972b1c", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -30,13 +30,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"langhooks.h\"\n #include \"tree-flow.h\"\n-#include \"timevar.h\"\n-#include \"tree-dump.h\"\n #include \"tree-pass.h\"\n #include \"except.h\"\n #include \"flags.h\"\n #include \"diagnostic.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"toplev.h\"\n #include \"debug.h\""}, {"sha": "95c173ae3bfd5dbb5d75e7871ccefa62b718e2d3", "filename": "gcc/cfgloop.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcfgloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcfgloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -23,8 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n-#include \"hard-reg-set.h\"\n-#include \"obstack.h\"\n #include \"function.h\"\n #include \"basic-block.h\"\n #include \"cfgloop.h\"\n@@ -34,6 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"pointer-set.h\"\n #include \"ggc.h\"\n+#include \"dumpfile.h\"\n \n static void flow_loops_cfg_dump (FILE *);\n \f"}, {"sha": "b9ca4b024de9fc7d99f3070de1ec9a5f3113361d", "filename": "gcc/cfgloopmanip.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcfgloopmanip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcfgloopmanip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -23,11 +23,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n-#include \"hard-reg-set.h\"\n-#include \"obstack.h\"\n #include \"basic-block.h\"\n #include \"cfgloop.h\"\n #include \"tree-flow.h\"\n+#include \"dumpfile.h\"\n \n static void copy_loops_to (struct loop **, int,\n \t\t\t   struct loop *);"}, {"sha": "c09d319e06f1c104f12991453c71c2e9db720b43", "filename": "gcc/cgraph.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -41,7 +41,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"intl.h\"\n #include \"gimple.h\"\n-#include \"tree-dump.h\"\n+#include \"timevar.h\"\n+#include \"dumpfile.h\"\n #include \"tree-flow.h\"\n #include \"value-prof.h\"\n #include \"except.h\"\n@@ -53,6 +54,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"gimple-pretty-print.h\"\n \n+/* FIXME: Only for PROP_loops, but cgraph shouldn't have to know about this.  */\n+#include \"tree-pass.h\"\n+\n static void cgraph_node_remove_callers (struct cgraph_node *node);\n static inline void cgraph_edge_remove_caller (struct cgraph_edge *e);\n static inline void cgraph_edge_remove_callee (struct cgraph_edge *e);"}, {"sha": "730e70b08e01adac2ba2aa5066b6e7096e7c6358", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -82,15 +82,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"cgraph.h\"\n #include \"diagnostic.h\"\n-#include \"timevar.h\"\n #include \"params.h\"\n-#include \"fibheap.h\"\n #include \"intl.h\"\n #include \"function.h\"\n #include \"ipa-prop.h\"\n #include \"gimple.h\"\n #include \"tree-iterator.h\"\n-#include \"tree-pass.h\"\n #include \"tree-dump.h\"\n #include \"gimple-pretty-print.h\"\n #include \"coverage.h\""}, {"sha": "89765b5e12116258aaa087f3374786095e66f1ba", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -176,7 +176,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"cgraph.h\"\n #include \"diagnostic.h\"\n-#include \"timevar.h\"\n #include \"params.h\"\n #include \"fibheap.h\"\n #include \"intl.h\""}, {"sha": "ff660967566c113ed689a14a696fc6ba28efd935", "filename": "gcc/combine-stack-adj.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcombine-stack-adj.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcombine-stack-adj.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine-stack-adj.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -57,7 +57,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"df.h\"\n #include \"except.h\"\n #include \"reload.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n \n \f"}, {"sha": "a07c046503e3465f904c2bba477c0ae0a5521b1c", "filename": "gcc/combine.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -98,7 +98,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-codes.h\"\n #include \"rtlhooks-def.h\"\n #include \"params.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"df.h\"\n #include \"cgraph.h\""}, {"sha": "f5d3623e060379b9cae58f9ec72d154f622ea26e", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -55,6 +55,7 @@\n #include \"libfuncs.h\"\n #include \"params.h\"\n #include \"opts.h\"\n+#include \"dumpfile.h\"\n \n /* Forward definitions of types.  */\n typedef struct minipool_node    Mnode;"}, {"sha": "731b6146e76a41a82845b96f0a3f695b8ce38ab7", "filename": "gcc/config/arm/t-arm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Farm%2Ft-arm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Farm%2Ft-arm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-arm?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -75,7 +75,7 @@ $(srcdir)/config/arm/arm-tables.opt: $(srcdir)/config/arm/genopt.sh \\\n \n arm.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(RTL_H) $(TREE_H) $(OBSTACK_H) $(REGS_H) hard-reg-set.h \\\n-  insn-config.h conditions.h output.h \\\n+  insn-config.h conditions.h output.h dumpfile.h \\\n   $(INSN_ATTR_H) $(FLAGS_H) reload.h $(FUNCTION_H) \\\n   $(EXPR_H) $(OPTABS_H) $(RECOG_H) $(CGRAPH_H) \\\n   $(GGC_H) except.h $(C_PRAGMA_H) $(TM_P_H) \\"}, {"sha": "f054bb59257df3bc8b6679c5bd301072fd4f191e", "filename": "gcc/config/avr/avr-log.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Favr%2Favr-log.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Favr%2Favr-log.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-log.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -28,7 +28,7 @@\n #include \"input.h\"\n #include \"function.h\"\n #include \"tm_p.h\"\n-#include \"tree-pass.h\"\n+#include \"tree-pass.h\"\t/* for current_pass */\n \n /* This file supplies some functions for AVR back-end developers\n    with a printf-like interface.  The functions are called through"}, {"sha": "255b1aba0aedc8992545faf6667c6e9b9a3e2110", "filename": "gcc/config/avr/t-avr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Favr%2Ft-avr", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Favr%2Ft-avr", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Ft-avr?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -31,7 +31,7 @@ avr-c.o: $(srcdir)/config/avr/avr-c.c \\\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n \n avr-log.o: $(srcdir)/config/avr/avr-log.c \\\n-  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(INPUT_H)\n+  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(INPUT_H) dumpfile.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n \n avr.o avr-c.o: $(srcdir)/config/avr/builtins.def"}, {"sha": "3a4b8af9f9b6c365b774aaa2ee9e4cdcccf16eee", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -56,6 +56,7 @@\n #include \"sel-sched.h\"\n #include \"hw-doloop.h\"\n #include \"opts.h\"\n+#include \"dumpfile.h\"\n \n /* A C structure for machine-specific, per-function data.\n    This is added to the cfun structure.  */"}, {"sha": "a189a1d8375f6685a4d5735cb2d5cf240e1545ba", "filename": "gcc/config/c6x/c6x.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fc6x%2Fc6x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fc6x%2Fc6x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fc6x.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -51,6 +51,7 @@\n #include \"opts.h\"\n #include \"hw-doloop.h\"\n #include \"regrename.h\"\n+#include \"dumpfile.h\"\n \n /* Table of supported architecture variants.  */\n typedef struct"}, {"sha": "b4a193a7e1a27f25acbf2130509fdf93ae887e37", "filename": "gcc/config/epiphany/epiphany.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fepiphany%2Fepiphany.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fepiphany%2Fepiphany.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -45,7 +45,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-codes.h\"\n #include \"ggc.h\"\n #include \"tm-constrs.h\"\n-#include \"tree-pass.h\"\n+#include \"tree-pass.h\"\t/* for current_pass */\n \n /* Which cpu we're compiling for.  */\n int epiphany_cpu_type;"}, {"sha": "28800423f97c9c2cbc9c81fe7bae6d62fe298561", "filename": "gcc/config/frv/frv.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Ffrv%2Ffrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Ffrv%2Ffrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -48,6 +48,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"targhooks.h\"\n #include \"langhooks.h\"\n #include \"df.h\"\n+#include \"dumpfile.h\"\n \n #ifndef FRV_INLINE\n #define FRV_INLINE inline"}, {"sha": "8bdbc05a7462522eb9b6221b3a6a16ffed3016c7", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -61,6 +61,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"fibheap.h\"\n #include \"opts.h\"\n #include \"diagnostic.h\"\n+#include \"dumpfile.h\"\n \n enum upper_128bits_state\n {"}, {"sha": "ea0115c2aa65ddb88edf0ac0d710ae11f3ae1929", "filename": "gcc/config/i386/t-i386", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fi386%2Ft-i386", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fi386%2Ft-i386", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-i386?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -16,7 +16,7 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-i386.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+i386.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h dumpfile.h $(TM_H) \\\n   $(RTL_H) $(TREE_H) $(TM_P_H) $(REGS_H) hard-reg-set.h \\\n   $(REAL_H) insn-config.h conditions.h output.h insn-codes.h \\\n   $(INSN_ATTR_H) $(FLAGS_H) $(C_COMMON_H) except.h $(FUNCTION_H) \\"}, {"sha": "a138ab45cf172062bf71e44a9b3615c6436ad9e6", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -61,6 +61,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"sel-sched.h\"\n #include \"reload.h\"\n #include \"opts.h\"\n+#include \"dumpfile.h\"\n \n /* This is used for communication between ASM_OUTPUT_LABEL and\n    ASM_OUTPUT_LABELREF.  */"}, {"sha": "4b9846b0b7ebb7812118ba01c284da347452a4f7", "filename": "gcc/config/ia64/t-ia64", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fia64%2Ft-ia64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fia64%2Ft-ia64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-ia64?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -26,4 +26,4 @@ ia64-c.o: $(srcdir)/config/ia64/ia64-c.c $(CONFIG_H) $(SYSTEM_H) \\\n # genattrtab generates very long string literals.\n insn-attrtab.o-warn = -Wno-error\n \n-ia64.o: debug.h $(PARAMS_H) sel-sched.h reload.h $(OPTS_H)\n+ia64.o: debug.h $(PARAMS_H) sel-sched.h reload.h $(OPTS_H) dumpfile.h"}, {"sha": "bba032779e68ccf34312cc8b30942e792e457fa3", "filename": "gcc/config/mep/mep.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fmep%2Fmep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fmep%2Fmep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -51,6 +51,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"df.h\"\n #include \"gimple.h\"\n #include \"opts.h\"\n+#include \"dumpfile.h\"\n \n /* Structure of this file:\n "}, {"sha": "34e95810377a6a80dc34522a2871fc04a64f0e57", "filename": "gcc/config/mep/t-mep", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fmep%2Ft-mep", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fmep%2Ft-mep", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Ft-mep?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -40,7 +40,7 @@ MD_INCLUDES = \\\n \t$(srcdir)/config/mep/predicates.md \\\n \t$(srcdir)/config/mep/constraints.md\n \n-mep.o : $(srcdir)/config/mep/mep-intrin.h\n+mep.o : $(srcdir)/config/mep/mep-intrin.h dumpfile.h\n \n # begin-isas\n MEP_CORE = ext_core1"}, {"sha": "b522c2e67a46f78d8df41f97573668707355766e", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -46,6 +46,7 @@\n #include \"df.h\"\n #include \"opts.h\"\n #include \"cfgloop.h\"\n+#include \"dumpfile.h\"\n \n /* This is used in the am33_2.0-linux-gnu port, in which global symbol\n    names are not prefixed by underscores, to tell whether to prefix a"}, {"sha": "f1193528adc95433b93c04d56a2687d2f3e4e3cb", "filename": "gcc/config/rl78/rl78.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Frl78%2Frl78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Frl78%2Frl78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -47,7 +47,7 @@\n #include \"target-def.h\"\n #include \"langhooks.h\"\n #include \"rl78-protos.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\n \f\n static inline bool is_interrupt_func (const_tree decl);\n static inline bool is_brk_interrupt_func (const_tree decl);"}, {"sha": "3c8f69787194619f3108f2eeed6cd710b149a497", "filename": "gcc/config/spu/spu.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fspu%2Fspu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fspu%2Fspu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -52,6 +52,7 @@\n #include \"sbitmap.h\"\n #include \"timevar.h\"\n #include \"df.h\"\n+#include \"dumpfile.h\"\n \n /* Builtin types, data and prototypes. */\n "}, {"sha": "866d910e484569262c0b2e59b901a6b9afd3d09a", "filename": "gcc/config/spu/t-spu-elf", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fspu%2Ft-spu-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fconfig%2Fspu%2Ft-spu-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Ft-spu-elf?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -19,7 +19,7 @@\n MULTILIB_OPTIONS=mea64\n \n spu.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(RTL_H) $(REGS_H) hard-reg-set.h \\\n+  $(RTL_H) $(REGS_H) hard-reg-set.h dumpfile.h \\\n   real.h insn-config.h conditions.h insn-attr.h flags.h $(RECOG_H) \\\n   $(OBSTACK_H) $(TREE_H) $(EXPR_H) $(OPTABS_H) except.h function.h \\\n   output.h $(BASIC_BLOCK_H) $(GGC_H) $(HASHTAB_H) \\"}, {"sha": "e11505d9b3fa74a3eeaf6c7e9e03b7e26e80e9e3", "filename": "gcc/coverage.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -46,7 +46,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hashtab.h\"\n #include \"tree-iterator.h\"\n #include \"cgraph.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\n #include \"diagnostic-core.h\"\n #include \"intl.h\"\n #include \"filenames.h\""}, {"sha": "a1326dde5478d18e1209d41cea2c70d6f1844060", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -1,3 +1,11 @@\n+2012-07-16  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* dump.c (dump_stmt): Moved here from c-dump.c.\n+\t* optimize.c: Include dumpfile.h instead of tree-dump.h.\n+\t* class.c: Likewise.\n+\t* decl2.c: Likewise.\n+\t* Make-lang.in: Fix dependencies.\n+\n 2012-07-13  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/53953"}, {"sha": "6c2285a8c8b358a7c7d9129b92c0b9a7b7278f54", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -279,7 +279,7 @@ cp/decl.o: cp/decl.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) cp/decl.h \\\n   c-family/c-objc.h\n cp/decl2.o: cp/decl2.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) cp/decl.h \\\n   toplev.h $(C_COMMON_H) gt-cp-decl2.h $(CGRAPH_H) \\\n-  $(C_PRAGMA_H) $(TREE_DUMP_H) intl.h $(TARGET_H) $(GIMPLE_H) pointer-set.h \\\n+  $(C_PRAGMA_H) dumpfile.h intl.h $(TARGET_H) $(GIMPLE_H) pointer-set.h \\\n   $(SPLAY_TREE_H) c-family/c-ada-spec.h \\\n   c-family/c-objc.h\n cp/cp-objcp-common.o : cp/cp-objcp-common.c $(CONFIG_H) $(SYSTEM_H) \\\n@@ -292,7 +292,7 @@ cp/typeck.o: cp/typeck.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n   toplev.h $(DIAGNOSTIC_H) convert.h $(C_COMMON_H) $(TARGET_H) \\\n   c-family/c-objc.h\n cp/class.o: cp/class.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h \\\n-  $(TARGET_H) convert.h $(CGRAPH_H) $(TREE_DUMP_H) gt-cp-class.h \\\n+  $(TARGET_H) convert.h $(CGRAPH_H) dumpfile.h gt-cp-class.h \\\n   $(SPLAY_TREE_H) pointer-set.h\n cp/call.o: cp/call.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h \\\n   $(DIAGNOSTIC_CORE_H) intl.h gt-cp-call.h convert.h $(TARGET_H) langhooks.h \\\n@@ -331,7 +331,8 @@ cp/semantics.o: cp/semantics.c $(CXX_TREE_H) $(TM_H) toplev.h \\\n cp/dump.o: cp/dump.c $(CXX_TREE_H) $(TM_H) $(TREE_DUMP_H)\n cp/optimize.o: cp/optimize.c $(CXX_TREE_H) $(TM_H) \\\n   input.h $(PARAMS_H) debug.h $(TREE_INLINE_H) $(GIMPLE_H) \\\n-  $(TARGET_H) tree-iterator.h $(CGRAPH_H) $(DIAGNOSTIC_CORE_H)\n+  $(TARGET_H) tree-iterator.h $(CGRAPH_H) $(DIAGNOSTIC_CORE_H) \\\n+  dumpfile.h\n cp/mangle.o: cp/mangle.c $(CXX_TREE_H) $(TM_H) $(REAL_H) \\\n   gt-cp-mangle.h $(TARGET_H) $(TM_P_H) $(CGRAPH_H)\n cp/parser.o: cp/parser.c $(CXX_TREE_H) $(TM_H) $(DIAGNOSTIC_CORE_H) \\"}, {"sha": "3877a274ae9ff048c7ca995037db2730fe772328", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -35,7 +35,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"convert.h\"\n #include \"cgraph.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"splay-tree.h\"\n #include \"pointer-set.h\"\n "}, {"sha": "281f6ff36f9ea19418035d0b3795abcabb6497a9", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -45,7 +45,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"tree-inline.h\"\n #include \"c-family/c-pragma.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"intl.h\"\n #include \"gimple.h\"\n #include \"pointer-set.h\""}, {"sha": "3e6ef8f7ed522bfd5514dfd4965e83a20c13ea90", "filename": "gcc/cp/dump.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcp%2Fdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcp%2Fdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdump.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -202,6 +202,15 @@ dump_op (dump_info_p di, tree t)\n   }\n }\n \n+/* Dump information common to statements from STMT.  */\n+\n+static void\n+dump_stmt (dump_info_p di, const_tree t)\n+{\n+  if (EXPR_HAS_LOCATION (t))\n+    dump_int (di, \"line\", EXPR_LINENO (t));\n+}\n+\n bool\n cp_dump_tree (void* dump_info, tree t)\n {"}, {"sha": "7011eb6f9f5dc3bc7d8ca6d3eaeebd38d19aa60f", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -34,7 +34,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"langhooks.h\"\n #include \"diagnostic-core.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"gimple.h\"\n #include \"tree-iterator.h\"\n #include \"cgraph.h\""}, {"sha": "77469aa6c0d18450f6325cb605fed23d9c037fa2", "filename": "gcc/cprop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcprop.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -41,7 +41,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cselib.h\"\n #include \"intl.h\"\n #include \"obstack.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"hashtab.h\"\n #include \"df.h\""}, {"sha": "9a54433c6de818868b91aee12d0e0982eac9f9cc", "filename": "gcc/cse.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"toplev.h\"\n #include \"ggc.h\"\n-#include \"timevar.h\"\n #include \"except.h\"\n #include \"target.h\"\n #include \"params.h\""}, {"sha": "ece22400e84259e9958f4470a323aee9284c2800", "filename": "gcc/cselib.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -37,7 +37,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"ggc.h\"\n #include \"hashtab.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\n #include \"cselib.h\"\n #include \"params.h\"\n #include \"alloc-pool.h\""}, {"sha": "f29a9e738fe203adc9c73f34cdce6ade004fc3c6", "filename": "gcc/dbgcnt.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdbgcnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdbgcnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbgcnt.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -23,8 +23,7 @@ See dbgcnt.def for usage information.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"diagnostic-core.h\"\n-#include \"tm.h\"\n-#include \"rtl.h\"\n+#include \"dumpfile.h\"\n \n #include \"dbgcnt.h\"\n "}, {"sha": "c72cdd1712b491c6f11d5ab5d8c63e6bf06e4006", "filename": "gcc/dce.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdce.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"df.h\"\n #include \"cselib.h\"\n #include \"dce.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"dbgcnt.h\"\n #include \"tm_p.h\""}, {"sha": "6613d2aebc3b04febd300f23f1b886e0e449a64e", "filename": "gcc/df-core.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdf-core.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdf-core.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-core.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -391,7 +391,6 @@ are write-only operations.\n #include \"basic-block.h\"\n #include \"sbitmap.h\"\n #include \"bitmap.h\"\n-#include \"timevar.h\"\n #include \"df.h\"\n #include \"tree-pass.h\"\n #include \"params.h\""}, {"sha": "d572b0f73b9c32c874135964420c9bdc918be0e5", "filename": "gcc/df-problems.c", "status": "modified", "additions": 33, "deletions": 61, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdf-problems.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdf-problems.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-problems.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -44,13 +44,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"dce.h\"\n #include \"vecprim.h\"\n+#include \"dumpfile.h\"\n \n /* Note that turning REG_DEAD_DEBUGGING on will cause\n    gcc.c-torture/unsorted/dump-noaddr.c to fail because it prints\n    addresses in the dumps.  */\n-#if 0\n-#define REG_DEAD_DEBUGGING\n-#endif\n+#define REG_DEAD_DEBUGGING 0\n \n #define DF_SPARSE_THRESHOLD 32\n \n@@ -2712,7 +2711,7 @@ df_note_alloc (bitmap all_blocks ATTRIBUTE_UNUSED)\n   df_note->optional_p = true;\n }\n \n-#ifdef REG_DEAD_DEBUGGING\n+/* This is only used if REG_DEAD_DEBUGGING is in effect.  */\n static void\n df_print_note (const char *prefix, rtx insn, rtx note)\n {\n@@ -2723,7 +2722,6 @@ df_print_note (const char *prefix, rtx insn, rtx note)\n       fprintf (dump_file, \"\\n\");\n     }\n }\n-#endif\n \n \n /* After reg-stack, the x86 floating point stack regs are difficult to\n@@ -2772,9 +2770,8 @@ df_kill_notes (rtx insn, bitmap live)\n \t  else\n \t    {\n \t      rtx next = XEXP (link, 1);\n-#ifdef REG_DEAD_DEBUGGING\n-\t      df_print_note (\"deleting: \", insn, link);\n-#endif\n+\t      if (REG_DEAD_DEBUGGING)\n+\t\tdf_print_note (\"deleting: \", insn, link);\n \t      free_EXPR_LIST_node (link);\n \t      *pprev = link = next;\n \t    }\n@@ -2791,9 +2788,8 @@ df_kill_notes (rtx insn, bitmap live)\n \t  else\n \t    {\n \t      rtx next = XEXP (link, 1);\n-#ifdef REG_DEAD_DEBUGGING\n-\t      df_print_note (\"deleting: \", insn, link);\n-#endif\n+\t      if (REG_DEAD_DEBUGGING)\n+\t\tdf_print_note (\"deleting: \", insn, link);\n \t      free_EXPR_LIST_node (link);\n \t      *pprev = link = next;\n \t    }\n@@ -2825,9 +2821,8 @@ df_kill_notes (rtx insn, bitmap live)\n \t    if (deleted)\n \t      {\n \t\trtx next;\n-#ifdef REG_DEAD_DEBUGGING\n-\t\tdf_print_note (\"deleting: \", insn, link);\n-#endif\n+\t\tif (REG_DEAD_DEBUGGING)\n+\t\t  df_print_note (\"deleting: \", insn, link);\n \t\tnext = XEXP (link, 1);\n \t\tfree_EXPR_LIST_node (link);\n \t\t*pprev = link = next;\n@@ -2900,21 +2895,19 @@ df_set_unused_notes_for_mw (rtx insn, struct df_mw_hardreg *mws,\n {\n   unsigned int r;\n \n-#ifdef REG_DEAD_DEBUGGING\n-  if (dump_file)\n+  if (REG_DEAD_DEBUGGING && dump_file)\n     fprintf (dump_file, \"mw_set_unused looking at mws[%d..%d]\\n\",\n \t     mws->start_regno, mws->end_regno);\n-#endif\n \n   if (df_whole_mw_reg_unused_p (mws, live, artificial_uses))\n     {\n       unsigned int regno = mws->start_regno;\n       df_set_note (REG_UNUSED, insn, mws->mw_reg);\n       dead_debug_insert_temp (debug, regno, insn, DEBUG_TEMP_AFTER_WITH_REG);\n \n-#ifdef REG_DEAD_DEBUGGING\n-      df_print_note (\"adding 1: \", insn, REG_NOTES (insn));\n-#endif\n+      if (REG_DEAD_DEBUGGING)\n+\tdf_print_note (\"adding 1: \", insn, REG_NOTES (insn));\n+\n       bitmap_set_bit (do_not_gen, regno);\n       /* Only do this if the value is totally dead.  */\n     }\n@@ -2926,9 +2919,8 @@ df_set_unused_notes_for_mw (rtx insn, struct df_mw_hardreg *mws,\n \t  {\n \t    df_set_note (REG_UNUSED, insn, regno_reg_rtx[r]);\n \t    dead_debug_insert_temp (debug, r, insn, DEBUG_TEMP_AFTER_WITH_REG);\n-#ifdef REG_DEAD_DEBUGGING\n-\t    df_print_note (\"adding 2: \", insn, REG_NOTES (insn));\n-#endif\n+\t    if (REG_DEAD_DEBUGGING)\n+\t      df_print_note (\"adding 2: \", insn, REG_NOTES (insn));\n \t  }\n \tbitmap_set_bit (do_not_gen, r);\n       }\n@@ -2978,8 +2970,7 @@ df_set_dead_notes_for_mw (rtx insn, struct df_mw_hardreg *mws,\n \n   *added_notes_p = false;\n \n-#ifdef REG_DEAD_DEBUGGING\n-  if (dump_file)\n+  if (REG_DEAD_DEBUGGING && dump_file)\n     {\n       fprintf (dump_file, \"mw_set_dead looking at mws[%d..%d]\\n  do_not_gen =\",\n \t       mws->start_regno, mws->end_regno);\n@@ -2989,7 +2980,6 @@ df_set_dead_notes_for_mw (rtx insn, struct df_mw_hardreg *mws,\n       fprintf (dump_file, \"  artificial uses =\");\n       df_print_regset (dump_file, artificial_uses);\n     }\n-#endif\n \n   if (df_whole_mw_reg_dead_p (mws, live, artificial_uses, do_not_gen))\n     {\n@@ -3000,9 +2990,8 @@ df_set_dead_notes_for_mw (rtx insn, struct df_mw_hardreg *mws,\n \t}\n       /* Add a dead note for the entire multi word register.  */\n       df_set_note (REG_DEAD, insn, mws->mw_reg);\n-#ifdef REG_DEAD_DEBUGGING\n-      df_print_note (\"adding 1: \", insn, REG_NOTES (insn));\n-#endif\n+      if (REG_DEAD_DEBUGGING)\n+\tdf_print_note (\"adding 1: \", insn, REG_NOTES (insn));\n     }\n   else\n     {\n@@ -3017,9 +3006,8 @@ df_set_dead_notes_for_mw (rtx insn, struct df_mw_hardreg *mws,\n \t\treturn;\n \t      }\n \t    df_set_note (REG_DEAD, insn, regno_reg_rtx[r]);\n-#ifdef REG_DEAD_DEBUGGING\n-\t    df_print_note (\"adding 2: \", insn, REG_NOTES (insn));\n-#endif\n+\t    if (REG_DEAD_DEBUGGING)\n+\t      df_print_note (\"adding 2: \", insn, REG_NOTES (insn));\n \t  }\n     }\n   return;\n@@ -3036,13 +3024,11 @@ df_create_unused_note (rtx insn, df_ref def,\n {\n   unsigned int dregno = DF_REF_REGNO (def);\n \n-#ifdef REG_DEAD_DEBUGGING\n-  if (dump_file)\n+  if (REG_DEAD_DEBUGGING && dump_file)\n     {\n       fprintf (dump_file, \"  regular looking at def \");\n       df_ref_debug (def, dump_file);\n     }\n-#endif\n \n   if (!((DF_REF_FLAGS (def) & DF_REF_MW_HARDREG)\n \t|| bitmap_bit_p (live, dregno)\n@@ -3053,9 +3039,8 @@ df_create_unused_note (rtx insn, df_ref def,\n                 ? *DF_REF_REAL_LOC (def): DF_REF_REG (def);\n       df_set_note (REG_UNUSED, insn, reg);\n       dead_debug_insert_temp (debug, dregno, insn, DEBUG_TEMP_AFTER_WITH_REG);\n-#ifdef REG_DEAD_DEBUGGING\n-      df_print_note (\"adding 3: \", insn, REG_NOTES (insn));\n-#endif\n+      if (REG_DEAD_DEBUGGING)\n+\tdf_print_note (\"adding 3: \", insn, REG_NOTES (insn));\n     }\n \n   return;\n@@ -3387,23 +3372,20 @@ df_note_bb_compute (unsigned int bb_index,\n   bitmap_copy (live, df_get_live_out (bb));\n   bitmap_clear (artificial_uses);\n \n-#ifdef REG_DEAD_DEBUGGING\n-  if (dump_file)\n+  if (REG_DEAD_DEBUGGING && dump_file)\n     {\n       fprintf (dump_file, \"live at bottom \");\n       df_print_regset (dump_file, live);\n     }\n-#endif\n \n   /* Process the artificial defs and uses at the bottom of the block\n      to begin processing.  */\n   for (def_rec = df_get_artificial_defs (bb_index); *def_rec; def_rec++)\n     {\n       df_ref def = *def_rec;\n-#ifdef REG_DEAD_DEBUGGING\n-      if (dump_file)\n+\n+      if (REG_DEAD_DEBUGGING && dump_file)\n \tfprintf (dump_file, \"artificial def %d\\n\", DF_REF_REGNO (def));\n-#endif\n \n       if ((DF_REF_FLAGS (def) & DF_REF_AT_TOP) == 0)\n \tbitmap_clear_bit (live, DF_REF_REGNO (def));\n@@ -3423,13 +3405,11 @@ df_note_bb_compute (unsigned int bb_index,\n \t}\n     }\n \n-#ifdef REG_DEAD_DEBUGGING\n-  if (dump_file)\n+  if (REG_DEAD_DEBUGGING && dump_file)\n     {\n       fprintf (dump_file, \"live before artificials out \");\n       df_print_regset (dump_file, live);\n     }\n-#endif\n \n   FOR_BB_INSNS_REVERSE (bb, insn)\n     {\n@@ -3448,13 +3428,12 @@ df_note_bb_compute (unsigned int bb_index,\n       /* Process the defs.  */\n       if (CALL_P (insn))\n \t{\n-#ifdef REG_DEAD_DEBUGGING\n-\t  if (dump_file)\n+\t  if (REG_DEAD_DEBUGGING && dump_file)\n \t    {\n \t      fprintf (dump_file, \"processing call %d\\n  live =\", INSN_UID (insn));\n \t      df_print_regset (dump_file, live);\n \t    }\n-#endif\n+\n \t  /* We only care about real sets for calls.  Clobbers cannot\n \t     be depended on to really die.  */\n \t  mws_rec = DF_INSN_UID_MWS (uid);\n@@ -3541,13 +3520,12 @@ df_note_bb_compute (unsigned int bb_index,\n \t  df_ref use = *use_rec;\n \t  unsigned int uregno = DF_REF_REGNO (use);\n \n-#ifdef REG_DEAD_DEBUGGING\n-\t  if (dump_file && !debug_insn)\n+\t  if (REG_DEAD_DEBUGGING && dump_file && !debug_insn)\n \t    {\n \t      fprintf (dump_file, \"  regular looking at use \");\n \t      df_ref_debug (use, dump_file);\n \t    }\n-#endif\n+\n \t  if (!bitmap_bit_p (live, uregno))\n \t    {\n \t      if (debug_insn)\n@@ -3578,9 +3556,8 @@ df_note_bb_compute (unsigned int bb_index,\n                             ? *DF_REF_REAL_LOC (use) : DF_REF_REG (use);\n \t\t  df_set_note (REG_DEAD, insn, reg);\n \n-#ifdef REG_DEAD_DEBUGGING\n-\t\t  df_print_note (\"adding 4: \", insn, REG_NOTES (insn));\n-#endif\n+\t\t  if (REG_DEAD_DEBUGGING)\n+\t\t    df_print_note (\"adding 4: \", insn, REG_NOTES (insn));\n \t\t}\n \t      /* This register is now live.  */\n \t      bitmap_set_bit (live, uregno);\n@@ -3612,11 +3589,6 @@ df_note_compute (bitmap all_blocks)\n   bitmap_initialize (&do_not_gen, &df_bitmap_obstack);\n   bitmap_initialize (&artificial_uses, &df_bitmap_obstack);\n \n-#ifdef REG_DEAD_DEBUGGING\n-  if (dump_file)\n-    print_rtl_with_bb (dump_file, get_insns());\n-#endif\n-\n   EXECUTE_IF_SET_IN_BITMAP (all_blocks, 0, bb_index, bi)\n   {\n     df_note_bb_compute (bb_index, &live, &do_not_gen, &artificial_uses);"}, {"sha": "df903659114f958fa541a3cb23e455f35f766de4", "filename": "gcc/df-scan.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -38,12 +38,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"sbitmap.h\"\n #include \"bitmap.h\"\n-#include \"timevar.h\"\n+#include \"dumpfile.h\"\n #include \"tree.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n #include \"df.h\"\n-#include \"tree-pass.h\"\n #include \"emit-rtl.h\"  /* FIXME: Can go away once crtl is moved to rtl.h.  */\n \n DEF_VEC_P(df_ref);\n@@ -4478,7 +4477,6 @@ df_entry_block_bitmap_verify (bool abort_if_fail)\n \n   if (!is_eq && abort_if_fail)\n     {\n-      print_current_pass (stderr);\n       fprintf (stderr, \"entry_block_defs = \");\n       df_print_regset (stderr, &entry_block_defs);\n       fprintf (stderr, \"df->entry_block_defs = \");\n@@ -4508,7 +4506,6 @@ df_exit_block_bitmap_verify (bool abort_if_fail)\n \n   if (!is_eq && abort_if_fail)\n     {\n-      print_current_pass (stderr);\n       fprintf (stderr, \"exit_block_uses = \");\n       df_print_regset (stderr, &exit_block_uses);\n       fprintf (stderr, \"df->exit_block_uses = \");"}, {"sha": "06b8d04437adb3ecdbd8d5aa6da7ebed61cce7ff", "filename": "gcc/dojump.c", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdojump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdojump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdojump.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -1083,15 +1083,10 @@ do_compare_rtx_and_jump (rtx op0, rtx op1, enum rtx_code code, int unsignedp,\n \t       last = NEXT_INSN (last))\n \t    if (JUMP_P (last))\n \t      break;\n-\t  if (!last\n-\t      || !JUMP_P (last)\n-\t      || NEXT_INSN (last)\n-\t      || !any_condjump_p (last))\n-\t    {\n-\t      if (dump_file)\n-\t\tfprintf (dump_file, \"Failed to add probability note\\n\");\n-\t    }\n-\t  else\n+\t  if (last\n+\t      && JUMP_P (last)\n+\t      && ! NEXT_INSN (last)\n+\t      && any_condjump_p (last))\n \t    {\n \t      gcc_assert (!find_reg_note (last, REG_BR_PROB, 0));\n \t      add_reg_note (last, REG_BR_PROB, GEN_INT (prob));"}, {"sha": "2a5280379fd849314bea1a644d5b1beff2cb1aee", "filename": "gcc/dse.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -37,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"df.h\"\n #include \"cselib.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"alloc-pool.h\"\n #include \"alias.h\""}, {"sha": "936186a85967885a1b4fcd2af18fc0050a3d320a", "filename": "gcc/dumpfile.h", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdumpfile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdumpfile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.h?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -0,0 +1,117 @@\n+/* Definitions for the shared dumpfile.\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n+   Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+\n+#ifndef GCC_DUMPFILE_H\n+#define GCC_DUMPFILE_H 1\n+\n+/* Different tree dump places.  When you add new tree dump places,\n+   extend the DUMP_FILES array in tree-dump.c.  */\n+enum tree_dump_index\n+{\n+  TDI_none,\t\t\t/* No dump */\n+  TDI_cgraph,                   /* dump function call graph.  */\n+  TDI_tu,\t\t\t/* dump the whole translation unit.  */\n+  TDI_class,\t\t\t/* dump class hierarchy.  */\n+  TDI_original,\t\t\t/* dump each function before optimizing it */\n+  TDI_generic,\t\t\t/* dump each function after genericizing it */\n+  TDI_nested,\t\t\t/* dump each function after unnesting it */\n+  TDI_vcg,\t\t\t/* create a VCG graph file for each\n+\t\t\t\t   function's flowgraph.  */\n+  TDI_ada,                      /* dump declarations in Ada syntax.  */\n+  TDI_tree_all,                 /* enable all the GENERIC/GIMPLE dumps.  */\n+  TDI_rtl_all,                  /* enable all the RTL dumps.  */\n+  TDI_ipa_all,                  /* enable all the IPA dumps.  */\n+\n+  TDI_end\n+};\n+\n+/* Bit masks to control dumping. Not all values are applicable to\n+   all dumps. Add new ones at the end. When you define new\n+   values, extend the DUMP_OPTIONS array in tree-dump.c */\n+#define TDF_ADDRESS\t(1 << 0)\t/* dump node addresses */\n+#define TDF_SLIM\t(1 << 1)\t/* don't go wild following links */\n+#define TDF_RAW  \t(1 << 2)\t/* don't unparse the function */\n+#define TDF_DETAILS\t(1 << 3)\t/* show more detailed info about\n+\t\t\t\t\t   each pass */\n+#define TDF_STATS\t(1 << 4)\t/* dump various statistics about\n+\t\t\t\t\t   each pass */\n+#define TDF_BLOCKS\t(1 << 5)\t/* display basic block boundaries */\n+#define TDF_VOPS\t(1 << 6)\t/* display virtual operands */\n+#define TDF_LINENO\t(1 << 7)\t/* display statement line numbers */\n+#define TDF_UID\t\t(1 << 8)\t/* display decl UIDs */\n+\n+#define TDF_TREE\t(1 << 9)\t/* is a tree dump */\n+#define TDF_RTL\t\t(1 << 10)\t/* is a RTL dump */\n+#define TDF_IPA\t\t(1 << 11)\t/* is an IPA dump */\n+#define TDF_STMTADDR\t(1 << 12)\t/* Address of stmt.  */\n+\n+#define TDF_GRAPH\t(1 << 13)\t/* a graph dump is being emitted */\n+#define TDF_MEMSYMS\t(1 << 14)\t/* display memory symbols in expr.\n+                                           Implies TDF_VOPS.  */\n+\n+#define TDF_DIAGNOSTIC\t(1 << 15)\t/* A dump to be put in a diagnostic\n+\t\t\t\t\t   message.  */\n+#define TDF_VERBOSE     (1 << 16)       /* A dump that uses the full tree\n+\t\t\t\t\t   dumper to print stmts.  */\n+#define TDF_RHS_ONLY\t(1 << 17)\t/* a flag to only print the RHS of\n+\t\t\t\t\t   a gimple stmt.  */\n+#define TDF_ASMNAME\t(1 << 18)\t/* display asm names of decls  */\n+#define TDF_EH\t\t(1 << 19)\t/* display EH region number\n+\t\t\t\t\t   holding this gimple statement.  */\n+#define TDF_NOUID\t(1 << 20)\t/* omit UIDs from dumps.  */\n+#define TDF_ALIAS\t(1 << 21)\t/* display alias information  */\n+#define TDF_ENUMERATE_LOCALS (1 << 22)\t/* Enumerate locals by uid.  */\n+#define TDF_CSELIB\t(1 << 23)\t/* Dump cselib details.  */\n+#define TDF_SCEV\t(1 << 24)\t/* Dump SCEV details.  */\n+\n+\n+/* In tree-dump.c */\n+\n+extern char *get_dump_file_name (int);\n+extern int dump_enabled_p (int);\n+extern int dump_initialized_p (int);\n+extern FILE *dump_begin (int, int *);\n+extern void dump_end (int, FILE *);\n+extern void dump_node (const_tree, int, FILE *);\n+extern int dump_switch_p (const char *);\n+extern const char *dump_flag_name (int);\n+\n+/* Global variables used to communicate with passes.  */\n+extern FILE *dump_file;\n+extern int dump_flags;\n+extern const char *dump_file_name;\n+\n+/* Return the dump_file_info for the given phase.  */\n+extern struct dump_file_info *get_dump_file_info (int);\n+\n+/* Define a tree dump switch.  */\n+struct dump_file_info\n+{\n+  const char *suffix;           /* suffix to give output file.  */\n+  const char *swtch;            /* command line switch */\n+  const char *glob;             /* command line glob  */\n+  int flags;                    /* user flags */\n+  int state;                    /* state of play */\n+  int num;                      /* dump file number */\n+};\n+\n+\n+#endif /* GCC_DUMPFILE_H */"}, {"sha": "d4b6831866192fb7cdb5b59a866d34fd871cdc19", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -91,8 +91,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"input.h\"\n #include \"gimple.h\"\n-#include \"tree-pass.h\"\n-#include \"tree-flow.h\"\n+#include \"dumpfile.h\"\n #include \"opts.h\"\n \n static void dwarf2out_source_line (unsigned int, const char *, int, bool);"}, {"sha": "f0cbdb80f7b6a01ebb0c0c20c5a1dcfeb6abce76", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -56,7 +56,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"debug.h\"\n #include \"langhooks.h\"\n-#include \"tree-pass.h\"\n #include \"df.h\"\n #include \"params.h\"\n #include \"target.h\""}, {"sha": "10fc26e1d7ca3864981af7474b3578e7a9d299a8", "filename": "gcc/except.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -141,7 +141,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic.h\"\n #include \"tree-pretty-print.h\"\n #include \"tree-pass.h\"\n-#include \"timevar.h\"\n #include \"tree-flow.h\"\n #include \"cfgloop.h\"\n "}, {"sha": "cf7d2360e7fecf6a9579cb4d88f63acc65cdcc0a", "filename": "gcc/expr.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -45,7 +45,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intl.h\"\n #include \"tm_p.h\"\n #include \"tree-iterator.h\"\n-#include \"tree-pass.h\"\n #include \"tree-flow.h\"\n #include \"target.h\"\n #include \"common/common-target.h\""}, {"sha": "cd49648179aa51b8aea6843c169e6d5c357292a4", "filename": "gcc/final.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -74,7 +74,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"tree-pass.h\"\n #include \"tree-flow.h\"\n-#include \"timevar.h\"\n #include \"cgraph.h\"\n #include \"coverage.h\"\n #include \"df.h\""}, {"sha": "5759d1b2fa0cfa7739bc2f9665c5f08997dcf84d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -1,3 +1,8 @@\n+2012-07-16  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* f95-lang.c: Include dumpfile.h instead of tree-dump.h.\n+\t* Make-lang.in: Fix dependencies.\n+\n 2012-07-16  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/53956"}, {"sha": "a74eb7f72785e02a9e95fd9eeafad9fc1d12b7b6", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -329,7 +329,7 @@ $(F95_PARSER_OBJS): fortran/gfortran.h fortran/libgfortran.h \\\n \t\tfortran/intrinsic.h fortran/match.h fortran/constructor.h \\\n \t\tfortran/parse.h fortran/arith.h fortran/target-memory.h \\\n \t\t$(CONFIG_H) $(SYSTEM_H) $(TM_H) $(TM_P_H) coretypes.h \\\n-\t\t$(RTL_H) $(TREE_H) $(TREE_DUMP_H) $(GGC_H) $(EXPR_H) \\\n+\t\tdumpfile.h $(TREE_H) dumpfile.h $(GGC_H) \\\n \t\t$(FLAGS_H) $(DIAGNOSTIC_H) errors.h $(FUNCTION_H) \\\n \t\tfortran/iso-c-binding.def fortran/iso-fortran-env.def\n fortran/openmp.o: pointer-set.h $(TARGET_H) toplev.h"}, {"sha": "6ff13561278d13e94f74740930e6b85890e20d20", "filename": "gcc/fortran/f95-lang.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ffortran%2Ff95-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ffortran%2Ff95-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -42,7 +42,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"debug.h\"\n #include \"diagnostic.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"cgraph.h\"\n #include \"gfortran.h\"\n #include \"cpp.h\""}, {"sha": "bc9a99f78c58904bcccd0cbe5dba0afbedbabafd", "filename": "gcc/function.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -61,7 +61,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"predict.h\"\n #include \"df.h\"\n-#include \"timevar.h\"\n #include \"vecprim.h\"\n #include \"params.h\"\n #include \"bb-reorder.h\""}, {"sha": "65087adc4d466fa0674b379b287808b8d0676683", "filename": "gcc/fwprop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ffwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ffwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffwprop.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n \n #include \"sparseset.h\"\n-#include \"timevar.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"insn-config.h\""}, {"sha": "fd5a89763a6d6559345f81dadf632350125a5529", "filename": "gcc/gcse.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -158,7 +158,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cselib.h\"\n #include \"intl.h\"\n #include \"obstack.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"hashtab.h\"\n #include \"df.h\""}, {"sha": "b97719a4c1cd00558eea0b7463b1854ab6e2ffb2", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -25,9 +25,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"function.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"tree-flow.h\"\n-#include \"tree-pass.h\"\n #include \"tree-ssa-propagate.h\"\n #include \"target.h\"\n #include \"gimple-fold.h\""}, {"sha": "fc38f8f1302be89516ab38126d0bdf239691d582", "filename": "gcc/gimple-pretty-print.c", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgimple-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgimple-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-pretty-print.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -26,11 +26,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"diagnostic.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"hashtab.h\"\n #include \"tree-flow.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\t/* for dump_flags */\n #include \"gimple.h\"\n #include \"value-prof.h\"\n #include \"trans-mem.h\"\n@@ -832,7 +831,7 @@ dump_gimple_cond (pretty_printer *buffer, gimple gs, int spc, int flags)\n \n /* Dump a GIMPLE_LABEL tuple on the pretty_printer BUFFER, SPC\n    spaces of indent.  FLAGS specifies details to show in the dump (see\n-   TDF_* in tree-pass.h).  */\n+   TDF_* in dumpfils.h).  */\n \n static void\n dump_gimple_label (pretty_printer *buffer, gimple gs, int spc, int flags)\n@@ -853,7 +852,7 @@ dump_gimple_label (pretty_printer *buffer, gimple gs, int spc, int flags)\n \n /* Dump a GIMPLE_GOTO tuple on the pretty_printer BUFFER, SPC\n    spaces of indent.  FLAGS specifies details to show in the dump (see\n-   TDF_* in tree-pass.h).  */\n+   TDF_* in dumpfile.h).  */\n \n static void\n dump_gimple_goto (pretty_printer *buffer, gimple gs, int spc, int flags)\n@@ -868,7 +867,7 @@ dump_gimple_goto (pretty_printer *buffer, gimple gs, int spc, int flags)\n \n /* Dump a GIMPLE_BIND tuple on the pretty_printer BUFFER, SPC\n    spaces of indent.  FLAGS specifies details to show in the dump (see\n-   TDF_* in tree-pass.h).  */\n+   TDF_* in dumpfile.h).  */\n \n static void\n dump_gimple_bind (pretty_printer *buffer, gimple gs, int spc, int flags)\n@@ -901,7 +900,7 @@ dump_gimple_bind (pretty_printer *buffer, gimple gs, int spc, int flags)\n \n /* Dump a GIMPLE_TRY tuple on the pretty_printer BUFFER, SPC spaces of\n    indent.  FLAGS specifies details to show in the dump (see TDF_* in\n-   tree-pass.h).  */\n+   dumpfile.h).  */\n \n static void\n dump_gimple_try (pretty_printer *buffer, gimple gs, int spc, int flags)\n@@ -957,7 +956,7 @@ dump_gimple_try (pretty_printer *buffer, gimple gs, int spc, int flags)\n \n /* Dump a GIMPLE_CATCH tuple on the pretty_printer BUFFER, SPC spaces of\n    indent.  FLAGS specifies details to show in the dump (see TDF_* in\n-   tree-pass.h).  */\n+   dumpfile.h).  */\n \n static void\n dump_gimple_catch (pretty_printer *buffer, gimple gs, int spc, int flags)\n@@ -973,7 +972,7 @@ dump_gimple_catch (pretty_printer *buffer, gimple gs, int spc, int flags)\n \n /* Dump a GIMPLE_EH_FILTER tuple on the pretty_printer BUFFER, SPC spaces of\n    indent.  FLAGS specifies details to show in the dump (see TDF_* in\n-   tree-pass.h).  */\n+   dumpfile.h).  */\n \n static void\n dump_gimple_eh_filter (pretty_printer *buffer, gimple gs, int spc, int flags)\n@@ -1006,7 +1005,7 @@ dump_gimple_eh_must_not_throw (pretty_printer *buffer, gimple gs,\n \n /* Dump a GIMPLE_EH_ELSE tuple on the pretty_printer BUFFER, SPC spaces of\n    indent.  FLAGS specifies details to show in the dump (see TDF_* in\n-   tree-pass.h).  */\n+   dumpfile.h).  */\n \n static void\n dump_gimple_eh_else (pretty_printer *buffer, gimple gs, int spc, int flags)\n@@ -1024,7 +1023,7 @@ dump_gimple_eh_else (pretty_printer *buffer, gimple gs, int spc, int flags)\n \n /* Dump a GIMPLE_RESX tuple on the pretty_printer BUFFER, SPC spaces of\n    indent.  FLAGS specifies details to show in the dump (see TDF_* in\n-   tree-pass.h).  */\n+   dumpfile.h).  */\n \n static void\n dump_gimple_resx (pretty_printer *buffer, gimple gs, int spc, int flags)\n@@ -1051,7 +1050,7 @@ dump_gimple_eh_dispatch (pretty_printer *buffer, gimple gs, int spc, int flags)\n \n /* Dump a GIMPLE_DEBUG tuple on the pretty_printer BUFFER, SPC spaces\n    of indent.  FLAGS specifies details to show in the dump (see TDF_*\n-   in tree-pass.h).  */\n+   in dumpfile.h).  */\n \n static void\n dump_gimple_debug (pretty_printer *buffer, gimple gs, int spc, int flags)\n@@ -1426,7 +1425,7 @@ dump_gimple_transaction (pretty_printer *buffer, gimple gs, int spc, int flags)\n \n /* Dump a GIMPLE_ASM tuple on the pretty_printer BUFFER, SPC spaces of\n    indent.  FLAGS specifies details to show in the dump (see TDF_* in\n-   tree-pass.h).  */\n+   dumpfile.h).  */\n \n static void\n dump_gimple_asm (pretty_printer *buffer, gimple gs, int spc, int flags)\n@@ -1645,7 +1644,7 @@ dump_gimple_phi (pretty_printer *buffer, gimple phi, int spc, int flags)\n \n /* Dump a GIMPLE_OMP_PARALLEL tuple on the pretty_printer BUFFER, SPC spaces\n    of indent.  FLAGS specifies details to show in the dump (see TDF_* in\n-   tree-pass.h).  */\n+   dumpfile.h).  */\n \n static void\n dump_gimple_omp_parallel (pretty_printer *buffer, gimple gs, int spc,\n@@ -1699,7 +1698,7 @@ dump_gimple_omp_parallel (pretty_printer *buffer, gimple gs, int spc,\n \n /* Dump a GIMPLE_OMP_TASK tuple on the pretty_printer BUFFER, SPC spaces\n    of indent.  FLAGS specifies details to show in the dump (see TDF_* in\n-   tree-pass.h).  */\n+   dumpfile.h).  */\n \n static void\n dump_gimple_omp_task (pretty_printer *buffer, gimple gs, int spc,\n@@ -1756,7 +1755,7 @@ dump_gimple_omp_task (pretty_printer *buffer, gimple gs, int spc,\n \n /* Dump a GIMPLE_OMP_ATOMIC_LOAD tuple on the pretty_printer BUFFER, SPC\n    spaces of indent.  FLAGS specifies details to show in the dump (see TDF_*\n-   in tree-pass.h).  */\n+   in dumpfile.h).  */\n \n static void\n dump_gimple_omp_atomic_load (pretty_printer *buffer, gimple gs, int spc,\n@@ -1787,7 +1786,7 @@ dump_gimple_omp_atomic_load (pretty_printer *buffer, gimple gs, int spc,\n \n /* Dump a GIMPLE_OMP_ATOMIC_STORE tuple on the pretty_printer BUFFER, SPC\n    spaces of indent.  FLAGS specifies details to show in the dump (see TDF_*\n-   in tree-pass.h).  */\n+   in dumpfile.h).  */\n \n static void\n dump_gimple_omp_atomic_store (pretty_printer *buffer, gimple gs, int spc,\n@@ -1844,7 +1843,7 @@ dump_gimple_mem_ops (pretty_printer *buffer, gimple gs, int spc, int flags)\n \n /* Dump the gimple statement GS on the pretty printer BUFFER, SPC\n    spaces of indent.  FLAGS specifies details to show in the dump (see\n-   TDF_* in tree-pass.h).  */\n+   TDF_* in dumpfile.h).  */\n \n void\n dump_gimple_stmt (pretty_printer *buffer, gimple gs, int spc, int flags)"}, {"sha": "53630e97b3ee742ccb9ce2d01158e9a4c1bb00b1", "filename": "gcc/gimple-ssa-strength-reduction.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgimple-ssa-strength-reduction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgimple-ssa-strength-reduction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-strength-reduction.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -49,9 +49,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple.h\"\n #include \"basic-block.h\"\n #include \"tree-pass.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"domwalk.h\""}, {"sha": "e14f7279d98ebb664dce740a772c982f530f3229", "filename": "gcc/gimplify.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -44,9 +44,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"splay-tree.h\"\n #include \"vec.h\"\n #include \"gimple.h\"\n-#include \"tree-pass.h\"\n \n-#include \"langhooks-def.h\"\t/* FIXME: for lhd_set_decl_assembler_name.  */\n+#include \"langhooks-def.h\"\t/* FIXME: for lhd_set_decl_assembler_name */\n+#include \"tree-pass.h\"\t\t/* FIXME: only for PROP_gimple_any */\n \n enum gimplify_omp_var_data\n {"}, {"sha": "a9ed9f964801706b1b142f2e123ff23f874735f9", "filename": "gcc/graphite-blocking.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgraphite-blocking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgraphite-blocking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-blocking.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -35,7 +35,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\""}, {"sha": "c89a26b28230243e6c5315bffeac86b7241189bc", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -36,7 +36,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"diagnostic-core.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\""}, {"sha": "01d34462d7778e4669647b0dcbe539ec206a8df5", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -34,7 +34,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\""}, {"sha": "0a8a3bae58a06e53718944373a0fb599d2c25e41", "filename": "gcc/graphite-interchange.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgraphite-interchange.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgraphite-interchange.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-interchange.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -36,7 +36,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\""}, {"sha": "9c17bed6118a75411275945e109b3fab85ee4d11", "filename": "gcc/graphite-optimize-isl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgraphite-optimize-isl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgraphite-optimize-isl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-optimize-isl.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -33,7 +33,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\""}, {"sha": "d81469700165e53ffef1a1b784b63ef609d15878", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -36,7 +36,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"diagnostic-core.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"gimple-pretty-print.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\""}, {"sha": "98a5857b52b500a62921d929021eb58141c6c1a3", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -34,7 +34,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\""}, {"sha": "dcfac6aa336e7b4dab37cf2269b9879f61c698d4", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -149,6 +149,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ira.h\"\n #include \"emit-rtl.h\"  /* FIXME: Can go away once crtl is moved to rtl.h.  */\n #include \"hashtab.h\"\n+#include \"dumpfile.h\"\n \n #ifdef INSN_SCHEDULING\n "}, {"sha": "925039f15bf41da297a02b334efb7e8c843338fa", "filename": "gcc/hw-doloop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fhw-doloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fhw-doloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhw-doloop.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -34,6 +34,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"target.h\"\n #include \"hw-doloop.h\"\n+#include \"dumpfile.h\"\n \n #ifdef HAVE_doloop_end\n "}, {"sha": "d4718f913fa093bd9f5d6b9d13a678ba63af478f", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -40,7 +40,6 @@\n #include \"tm_p.h\"\n #include \"cfgloop.h\"\n #include \"target.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"df.h\"\n #include \"vec.h\""}, {"sha": "7ecd9e2a0d7f527ab31694898f14e65de5c31761", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -112,12 +112,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n #include \"flags.h\"\n-#include \"timevar.h\"\n #include \"diagnostic.h\"\n #include \"tree-pretty-print.h\"\n-#include \"tree-dump.h\"\n #include \"tree-inline.h\"\n-#include \"fibheap.h\"\n #include \"params.h\"\n #include \"ipa-inline.h\"\n #include \"ipa-utils.h\""}, {"sha": "ae321318f143c55fdd7ea924a30160a0c0d09b94", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -76,7 +76,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"diagnostic.h\"\n #include \"gimple-pretty-print.h\"\n-#include \"timevar.h\"\n #include \"params.h\"\n #include \"tree-pass.h\"\n #include \"coverage.h\""}, {"sha": "d64c6129835ce40ce1f8f3d387932a9a8ce1b042", "filename": "gcc/ipa-inline-transform.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-inline-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-inline-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-transform.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"langhooks.h\"\n #include \"cgraph.h\"\n-#include \"timevar.h\"\n #include \"intl.h\"\n #include \"coverage.h\"\n #include \"ggc.h\""}, {"sha": "1a4594d746f7f536146e957586315c2c1a27c363", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -101,7 +101,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"diagnostic.h\"\n #include \"gimple-pretty-print.h\"\n-#include \"timevar.h\"\n #include \"params.h\"\n #include \"fibheap.h\"\n #include \"intl.h\""}, {"sha": "4181c63695a6241dc21bc48a47536215d8985b62", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -32,10 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-inline.h\"\n #include \"gimple.h\"\n #include \"flags.h\"\n-#include \"timevar.h\"\n-#include \"flags.h\"\n #include \"diagnostic.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"lto-streamer.h\"\n #include \"data-streamer.h\""}, {"sha": "a5933f3b130df48d7f3d25334138410b1b4f7087", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -47,7 +47,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple.h\"\n #include \"cgraph.h\"\n #include \"flags.h\"\n-#include \"timevar.h\"\n #include \"diagnostic.h\"\n #include \"gimple-pretty-print.h\"\n #include \"langhooks.h\""}, {"sha": "732f49d71042e8939e00b8cbad33b05ce72c34e4", "filename": "gcc/ipa-reference.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-reference.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-reference.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-reference.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -54,7 +54,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple.h\"\n #include \"cgraph.h\"\n #include \"flags.h\"\n-#include \"timevar.h\"\n #include \"diagnostic.h\"\n #include \"langhooks.h\"\n #include \"data-streamer.h\""}, {"sha": "33cf7d25a53e5ee8a56166e0272833a7a4b83e87", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -85,11 +85,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n #include \"flags.h\"\n-#include \"timevar.h\"\n #include \"diagnostic.h\"\n #include \"tree-dump.h\"\n #include \"tree-inline.h\"\n-#include \"fibheap.h\"\n #include \"params.h\"\n #include \"gimple-pretty-print.h\"\n #include \"ipa-inline.h\""}, {"sha": "bda19fe159e75c2a6ce8b9c01b8acef512a78922", "filename": "gcc/ipa-utils.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-utils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa-utils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-utils.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -25,7 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tree-flow.h\"\n #include \"tree-inline.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\n #include \"langhooks.h\"\n #include \"pointer-set.h\"\n #include \"splay-tree.h\"\n@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple.h\"\n #include \"cgraph.h\"\n #include \"flags.h\"\n-#include \"timevar.h\"\n #include \"diagnostic.h\"\n #include \"langhooks.h\"\n "}, {"sha": "9329d9b2375acca470f4505d6f031a48b42d9658", "filename": "gcc/ipa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"cgraph.h\"\n #include \"tree-pass.h\"\n-#include \"timevar.h\"\n #include \"gimple.h\"\n #include \"ggc.h\"\n #include \"flags.h\""}, {"sha": "dbab53741736bdb51f6ffb8089625668d23aa3dd", "filename": "gcc/ira-emit.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fira-emit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fira-emit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-emit.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -82,8 +82,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"params.h\"\n-#include \"timevar.h\"\n-#include \"tree-pass.h\"\n #include \"reload.h\"\n #include \"df.h\"\n #include \"ira-int.h\""}, {"sha": "3825498bc6765e02ae35b46433200d2503c85351", "filename": "gcc/ira.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -374,7 +374,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"params.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"output.h\"\n #include \"except.h\""}, {"sha": "78a34940b1f13fcecbb7ee423460539e0d1ae09b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -1,3 +1,8 @@\n+2012-07-16  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* java-gimplify.c Include dumpfile.h instead of tree-dump.h\n+\t* Make-lang.in: Fix dependencies.\n+\n 2012-07-11  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* java-tree.h (force_evaluation_order): Remove prototype."}, {"sha": "77de0d35979b2b22010a11d88e584d9d7a194998", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -321,7 +321,7 @@ java/verify-impl.o: java/verify-impl.c $(CONFIG_H) java/verify.h $(SYSTEM_H) \\\n java/zextract.o: java/zextract.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   java/zipfile.h\n java/java-gimplify.o: java/java-gimplify.c $(CONFIG_H) $(SYSTEM_H) \\\n-  coretypes.h $(JAVA_TREE_H) $(GIMPLE_H)\n+  coretypes.h dumpfile.h $(JAVA_TREE_H) $(GIMPLE_H)\n \n # jcf-io.o needs $(ZLIBINC) added to cflags.\n CFLAGS-java/jcf-io.o += $(ZLIBINC)"}, {"sha": "05e69336db27e5dbd9bee4e13665289f046f5f5f", "filename": "gcc/java/java-gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fjava%2Fjava-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fjava%2Fjava-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-gimplify.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -27,7 +27,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"coretypes.h\"\n #include \"tree.h\"\n #include \"java-tree.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"gimple.h\"\n \n static tree java_gimplify_block (tree);"}, {"sha": "59e746aec07cf807a78980cbf7cdd5fc692deb75", "filename": "gcc/jump.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -54,7 +54,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"reload.h\"\n #include \"predict.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"target.h\"\n "}, {"sha": "236dbf351c3b2abf8f2425b930ff7527fe2b83f5", "filename": "gcc/lcm.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Flcm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Flcm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flcm.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -63,10 +63,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"function.h\"\n #include \"sbitmap.h\"\n-\n-/* We want target macros for the mode switching code to be able to refer\n-   to instruction attribute values.  */\n-#include \"insn-attr.h\"\n+#include \"dumpfile.h\"\n \n /* Edge based LCM routines.  */\n static void compute_antinout_edge (sbitmap *, sbitmap *, sbitmap *, sbitmap *);"}, {"sha": "39e6ca92734fb77561c67a2fed000df7b6b2df00", "filename": "gcc/loop-doloop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Floop-doloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Floop-doloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-doloop.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -33,6 +33,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"params.h\"\n #include \"target.h\"\n+#include \"dumpfile.h\"\n \n /* This module is used to modify loops with a determinable number of\n    iterations to use special low-overhead looping instructions."}, {"sha": "a463777a9b63424f2d9b58550a1b9dd2163bc162", "filename": "gcc/loop-init.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Floop-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Floop-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-init.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"cfgloop.h\"\n #include \"tree-pass.h\"\n-#include \"timevar.h\"\n #include \"flags.h\"\n #include \"df.h\"\n #include \"ggc.h\""}, {"sha": "13760832c480de4dea4d49437199a86a0a0e3759", "filename": "gcc/loop-invariant.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -55,6 +55,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"params.h\"\n #include \"regs.h\"\n #include \"ira.h\"\n+#include \"dumpfile.h\"\n \n /* The data stored for the loop.  */\n "}, {"sha": "d31f0fa242df76ef77b71073f53f36e28ad6c6a4", "filename": "gcc/loop-iv.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Floop-iv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Floop-iv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-iv.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -62,6 +62,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"df.h\"\n #include \"hashtab.h\"\n+#include \"dumpfile.h\"\n \n /* Possible return values of iv_get_reaching_def.  */\n "}, {"sha": "a09192597ddea512531dd99dd1512f0d02346fb3", "filename": "gcc/loop-unroll.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Floop-unroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Floop-unroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unroll.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -32,6 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hashtab.h\"\n #include \"recog.h\"\n #include \"target.h\"\n+#include \"dumpfile.h\"\n \n /* This pass performs loop unrolling and peeling.  We only perform these\n    optimizations on innermost loops (with single exception) because"}, {"sha": "a9089a66cdff05f7e17da0875c2692dbda5c6dca", "filename": "gcc/loop-unswitch.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Floop-unswitch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Floop-unswitch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unswitch.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -29,6 +29,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"params.h\"\n #include \"expr.h\"\n+#include \"dumpfile.h\"\n \n /* This pass moves constant conditions out of loops, duplicating the loop\n    in progress, i.e. this code:"}, {"sha": "dfc3954e768f4d2b6a641e6b5d91fbd163a7bf0b", "filename": "gcc/lower-subreg.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Flower-subreg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Flower-subreg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flower-subreg.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n-#include \"timevar.h\"\n #include \"flags.h\"\n #include \"insn-config.h\"\n #include \"obstack.h\""}, {"sha": "ea15efb872c9616a54065413b36ca62c0164e751", "filename": "gcc/lto-section-out.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Flto-section-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Flto-section-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-section-out.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hashtab.h\"\n #include \"basic-block.h\"\n #include \"tree-flow.h\"\n-#include \"tree-pass.h\"\n #include \"cgraph.h\"\n #include \"function.h\"\n #include \"ggc.h\""}, {"sha": "07ae2b38609eb525c13bc8121f154520f6fd7652", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -42,7 +42,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"debug.h\"\n #include \"vec.h\"\n-#include \"timevar.h\"\n #include \"ipa-utils.h\"\n #include \"data-streamer.h\"\n #include \"gimple-streamer.h\""}, {"sha": "676a38824ed31a13eb06bccdbd75f2921caf5726", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -1,3 +1,8 @@\n+2012-07-16  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* lto.c: Do not include timevar.h.\n+\t* Make-lang.in: Fix dependencies.\n+\n 2012-06-18  Lawrence Crowl  <crowl@google.com>\n \n         * lto.c (do_whole_program_analysis):  Rename use of TV_PHASE_CGRAPH to"}, {"sha": "152593a653f466d0fc3fca1e2c31f22af383ac94", "filename": "gcc/lto/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Flto%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Flto%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FMake-lang.in?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -84,7 +84,7 @@ lto/lto.o: lto/lto.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(OPTS_H) \\\n \ttoplev.h $(TREE_H) $(TREE_FLOW_H) $(DIAGNOSTIC_CORE_H) $(TM_H) \\\n \t$(CGRAPH_H) $(GGC_H) tree-ssa-operands.h $(TREE_PASS_H) \\\n \tlanghooks.h $(VEC_H) $(BITMAP_H) pointer-set.h $(IPA_PROP_H) \\\n-\t$(COMMON_H) debug.h $(TIMEVAR_H) $(GIMPLE_H) $(LTO_H) $(LTO_TREE_H) \\\n+\t$(COMMON_H) debug.h $(GIMPLE_H) $(LTO_H) $(LTO_TREE_H) \\\n \t$(LTO_TAGS_H) $(LTO_STREAMER_H) $(SPLAY_TREE_H) gt-lto-lto.h \\\n \t$(TREE_STREAMER_H) lto/lto-partition.h\n lto/lto-partition.o: lto/lto-partition.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\"}, {"sha": "4f8c764b3f37f0e1941571304523c18cca1015c2", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ipa-prop.h\"\n #include \"common.h\"\n #include \"debug.h\"\n-#include \"timevar.h\"\n #include \"gimple.h\"\n #include \"lto.h\"\n #include \"lto-tree.h\""}, {"sha": "048cc7fdd5f7c1cc5a7a84b7850afac0475eebc9", "filename": "gcc/matrix-reorg.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fmatrix-reorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fmatrix-reorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatrix-reorg.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -126,9 +126,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"cgraph.h\"\n #include \"diagnostic-core.h\"\n-#include \"timevar.h\"\n #include \"params.h\"\n-#include \"fibheap.h\"\n #include \"intl.h\"\n #include \"function.h\"\n #include \"basic-block.h\""}, {"sha": "f5985c134abec8d70f7fa923eabc9c25df01fc7e", "filename": "gcc/mcf.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fmcf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fmcf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmcf.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -49,6 +49,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"gcov-io.h\"\n #include \"profile.h\"\n+#include \"dumpfile.h\"\n \n /* CAP_INFINITY: Constant to represent infinite capacity.  */\n #define CAP_INFINITY INTTYPE_MAXIMUM (HOST_WIDEST_INT)"}, {"sha": "d6c7379df6517b5ec9fca2b3ac87272a0bd98587", "filename": "gcc/mode-switching.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fmode-switching.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fmode-switching.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmode-switching.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -33,7 +33,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"function.h\"\n #include \"tree-pass.h\"\n-#include \"timevar.h\"\n #include \"df.h\"\n #include \"emit-rtl.h\"\n "}, {"sha": "af79fb627de55275cfc597a7523769ed9d76b2f2", "filename": "gcc/modulo-sched.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fmodulo-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fmodulo-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmodulo-sched.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -42,7 +42,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"params.h\"\n #include \"gcov-io.h\"\n #include \"ddg.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"dbgcnt.h\"\n #include \"df.h\""}, {"sha": "5f78ed1b0d33c6b4651691cb737259c3c59eabfe", "filename": "gcc/omega.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fomega.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fomega.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomega.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -36,7 +36,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tree.h\"\n #include \"diagnostic-core.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\n #include \"omega.h\"\n \n /* When set to true, keep substitution variables.  When set to false,"}, {"sha": "8f0932b6c36fec4c1b8f6b9c329d829f654f0f5b", "filename": "gcc/omp-low.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"diagnostic-core.h\"\n #include \"tree-flow.h\"\n-#include \"timevar.h\"\n #include \"flags.h\"\n #include \"function.h\"\n #include \"expr.h\""}, {"sha": "dfd797ac716c6b800417bb3ce0a1f059b034f217", "filename": "gcc/passes.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -49,7 +49,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"graph.h\"\n #include \"regs.h\"\n-#include \"timevar.h\"\n #include \"diagnostic-core.h\"\n #include \"params.h\"\n #include \"reload.h\""}, {"sha": "31baccaef58e2b297c4f59a11987e1a212a84d53", "filename": "gcc/plugin.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fplugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fplugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fplugin.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"intl.h\"\n #include \"plugin.h\"\n-#include \"timevar.h\"\n #include \"ggc.h\"\n \n #ifdef ENABLE_PLUGIN"}, {"sha": "b9e9f2525cafb4d06ae33949b2cb6d9436a81a2b", "filename": "gcc/postreload-gcse.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fpostreload-gcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fpostreload-gcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload-gcse.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -41,7 +41,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hashtab.h\"\n #include \"params.h\"\n #include \"target.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"dbgcnt.h\"\n "}, {"sha": "38be0ab45a5d9438acb8808a0e22ce16a197349f", "filename": "gcc/postreload.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -43,7 +43,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"tree.h\"\n #include \"target.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"df.h\"\n #include \"dbgcnt.h\""}, {"sha": "b690bdc2519f32434fac792f6f60008fa44899af", "filename": "gcc/predict.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -53,9 +53,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"tree-flow.h\"\n #include \"ggc.h\"\n-#include \"tree-dump.h\"\n #include \"tree-pass.h\"\n-#include \"timevar.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"cfgloop.h\"\n #include \"pointer-set.h\""}, {"sha": "d6878bc3d7776ce1eb8a5a2d4d373ad7e5b90881", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -42,7 +42,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic.h\"\n #include \"tree-pretty-print.h\"\n #include \"cselib.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\t/* for dump_flags */\n #include \"dwarf2out.h\"\n #endif\n "}, {"sha": "d40fb0865b78d920c8407f8e83a22743045bad7d", "filename": "gcc/print-tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -29,9 +29,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"tree-iterator.h\"\n #include \"diagnostic.h\"\n-#include \"gimple-pretty-print.h\"\n+#include \"gimple-pretty-print.h\" /* FIXME */\n #include \"tree-flow.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\n \n /* Define the hash table of nodes already seen.\n    Such nodes are not repeated; brief cross-references are used.  */"}, {"sha": "c5e60b66dcf661d049cae87ed94bddee86395cbb", "filename": "gcc/profile.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -64,9 +64,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"value-prof.h\"\n #include \"tree.h\"\n #include \"tree-flow.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\n \n #include \"profile.h\"\n "}, {"sha": "a05e8c608f7cd59c01e7ef0f5bbfaee77e4d4069", "filename": "gcc/recog.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"reload.h\"\n #include \"target.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"df.h\"\n "}, {"sha": "697e45f28af1c6f151afb030f95231518e0af5a4", "filename": "gcc/ree.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Free.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Free.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Free.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -233,12 +233,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"diagnostic-core.h\"\n #include \"target.h\"\n-#include \"timevar.h\"\n #include \"optabs.h\"\n #include \"insn-codes.h\"\n #include \"rtlhooks-def.h\"\n #include \"params.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"df.h\"\n #include \"cgraph.h\""}, {"sha": "3deb3445ba4e8c05f832e42f20509859457a4a43", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -167,7 +167,6 @@\n #include \"basic-block.h\"\n #include \"reload.h\"\n #include \"ggc.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"target.h\"\n #include \"df.h\""}, {"sha": "744878d8e63c8fadc6a14b062865ea4da3654b18", "filename": "gcc/regcprop.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fregcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fregcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregcprop.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -35,7 +35,6 @@\n #include \"flags.h\"\n #include \"diagnostic-core.h\"\n #include \"obstack.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"df.h\"\n "}, {"sha": "f8973dfebfe8add541eccf893bb95084403579d7", "filename": "gcc/reginfo.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Freginfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Freginfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freginfo.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -45,7 +45,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"reload.h\"\n #include \"diagnostic-core.h\"\n #include \"output.h\"\n-#include \"timevar.h\"\n #include \"hashtab.h\"\n #include \"target.h\"\n #include \"tree-pass.h\""}, {"sha": "6ff8ef6191c5d0f4ccf456e383b1b004196524e8", "filename": "gcc/regmove.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -41,7 +41,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"diagnostic-core.h\"\n #include \"reload.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"df.h\"\n #include \"ira.h\""}, {"sha": "2366fb59175a569d0aa11eeb63c101e406c78747", "filename": "gcc/regrename.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -35,7 +35,6 @@\n #include \"recog.h\"\n #include \"flags.h\"\n #include \"obstack.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"df.h\"\n #include \"target.h\""}, {"sha": "e6d3a7132edd970e4fb6ae2ad02234266db4f2cb", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -46,6 +46,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ira.h\"\n #include \"target.h\"\n #include \"emit-rtl.h\"\n+#include \"dumpfile.h\"\n \n /* This file contains the reload pass of the compiler, which is\n    run after register allocation has been done.  It checks that"}, {"sha": "667dca1821e460c5cfa9ba11b621f59b1aca9bfd", "filename": "gcc/reorg.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -132,7 +132,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"resource.h\"\n #include \"except.h\"\n #include \"params.h\"\n-#include \"timevar.h\"\n #include \"target.h\"\n #include \"tree-pass.h\"\n "}, {"sha": "97edfae27d52723c389c8ffb6a681d6d94fc67f9", "filename": "gcc/sched-rgn.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fsched-rgn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fsched-rgn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-rgn.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -64,7 +64,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"sched-int.h\"\n #include \"sel-sched.h\"\n #include \"target.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"dbgcnt.h\"\n "}, {"sha": "44c7d595eaf458255904ddc2970c0f8ea7287ce7", "filename": "gcc/sched-vis.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fsched-vis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fsched-vis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-vis.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -32,7 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"insn-attr.h\"\n #include \"sched-int.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\t/* for the TDF_* flags */\n \n static char *safe_concat (char *, char *, const char *);\n "}, {"sha": "4781f059a173b79339d0f8d4b0392a0ba321a3a3", "filename": "gcc/sel-sched-ir.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fsel-sched-ir.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fsel-sched-ir.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -35,8 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"params.h\"\n #include \"target.h\"\n-#include \"timevar.h\"\n-#include \"tree-pass.h\"\n #include \"sched-int.h\"\n #include \"ggc.h\"\n #include \"tree.h\""}, {"sha": "3099b92627a87ce00b0abe5d47ac0de54dcb45c5", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -35,8 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"params.h\"\n #include \"target.h\"\n #include \"output.h\"\n-#include \"timevar.h\"\n-#include \"tree-pass.h\"\n #include \"sched-int.h\"\n #include \"ggc.h\"\n #include \"tree.h\""}, {"sha": "3269de1462ba944d5b890479e08178edfc11b4d5", "filename": "gcc/stmt.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -54,6 +54,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"pretty-print.h\"\n #include \"bitmap.h\"\n #include \"params.h\"\n+#include \"dumpfile.h\"\n \n \f\n /* Functions and data structures for expanding case statements.  */\n@@ -1867,9 +1868,7 @@ emit_case_decision_tree (tree index_expr, tree index_type,\n \n   balance_case_nodes (&case_list, NULL);\n \n-  /* Don't want to include tree-pass.h here.  This code will be moved\n-     to a GIMPLE pass for GCC 4.9 anyway, so for now always dump.  */\n-  if (dump_file && 1/*(dump_flags & TDF_DETAILS)*/)\n+  if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       int indent_step = ceil_log2 (TYPE_PRECISION (index_type)) + 2;\n       fprintf (dump_file, \";; Expanding GIMPLE switch as decision tree:\\n\");"}, {"sha": "1cda4045b7ccad55fe298cac317731dc560700ae", "filename": "gcc/store-motion.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fstore-motion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fstore-motion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstore-motion.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -39,7 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"ggc.h\"\n #include \"intl.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"hashtab.h\"\n #include \"df.h\""}, {"sha": "572271c3c7065015115edb9b4c1af635294ce1d5", "filename": "gcc/system.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -663,14 +663,6 @@ extern int vsnprintf(char *, size_t, const char *, va_list);\n #define __builtin_expect(a, b) (a)\n #endif\n \n-/* Default file in which to dump debug output.  Here for lack of a better\n-   place to put it.  This used to be defined in output.h, but that results\n-   in almost all files including output.h, even if they don't output anything\n-   except, maybe, something to the dump file.  */\n-#ifdef BUFSIZ\n-extern FILE *dump_file;\n-#endif\n-\n /* Redefine abort to report an internal error w/o coredump, and\n    reporting the location of the error in the source file.  */\n extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;"}, {"sha": "bbf973aa215cb78647795a8a6aeb9fe94d4bc337", "filename": "gcc/tracer.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftracer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftracer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftracer.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -44,7 +44,6 @@\n #include \"basic-block.h\"\n #include \"fibheap.h\"\n #include \"flags.h\"\n-#include \"timevar.h\"\n #include \"params.h\"\n #include \"coverage.h\"\n #include \"tree-pass.h\""}, {"sha": "77a33bc7631e6f12458e682fb5014c4e301c5e90", "filename": "gcc/trans-mem.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftrans-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftrans-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftrans-mem.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -32,7 +32,6 @@\n #include \"params.h\"\n #include \"target.h\"\n #include \"langhooks.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"cfgloop.h\"\n "}, {"sha": "495ffe4560358cc5f0a0a8020fd5d04e09afd35b", "filename": "gcc/tree-affine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-affine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-affine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-affine.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -22,11 +22,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tree.h\"\n #include \"tree-pretty-print.h\"\n-#include \"tree-dump.h\"\n #include \"pointer-set.h\"\n #include \"tree-affine.h\"\n #include \"gimple.h\"\n #include \"flags.h\"\n+#include \"dumpfile.h\"\n \n /* Extends CST as appropriate for the affine combinations COMB.  */\n "}, {"sha": "3ad241cf29ddd47ad8384e8e7a98a2bfb858c96e", "filename": "gcc/tree-call-cdce.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-call-cdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-call-cdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-call-cdce.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -28,9 +28,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\"\n-#include \"tree-dump.h\"\n #include \"tree-pass.h\"\n-#include \"timevar.h\"\n #include \"flags.h\"\n \f\n "}, {"sha": "c6ccdfe3799da8378fdf1c047fd8abb22aca1ff7", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -29,11 +29,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"function.h\"\n #include \"ggc.h\"\n-#include \"langhooks.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"timevar.h\"\n #include \"tree-dump.h\"\n #include \"tree-pass.h\"\n #include \"diagnostic-core.h\"\n@@ -2130,9 +2127,7 @@ dump_cfg_stats (FILE *file)\n   const char * const fmt_str_1 = \"%-30s%13d%11lu%c\\n\";\n   const char * const fmt_str_2 = \"%-30s%13ld%11lu%c\\n\";\n   const char * const fmt_str_3 = \"%-43s%11lu%c\\n\";\n-  const char *funcname\n-    = lang_hooks.decl_printable_name (current_function_decl, 2);\n-\n+  const char *funcname = current_function_name ();\n \n   fprintf (file, \"\\nCFG Statistics for %s\\n\\n\", funcname);\n \n@@ -2187,8 +2182,7 @@ gimple_cfg2vcg (FILE *file)\n   edge e;\n   edge_iterator ei;\n   basic_block bb;\n-  const char *funcname\n-    = lang_hooks.decl_printable_name (current_function_decl, 2);\n+  const char *funcname = current_function_name ();\n \n   /* Write the file header.  */\n   fprintf (file, \"graph: { title: \\\"%s\\\"\\n\", funcname);\n@@ -6638,7 +6632,7 @@ dump_function_to_file (tree fn, FILE *file, int flags)\n   tree chain;\n   bool tmclone = TREE_CODE (fn) == FUNCTION_DECL && decl_is_tm_clone (fn);\n \n-  fprintf (file, \"%s %s(\", lang_hooks.decl_printable_name (fn, 2),\n+  fprintf (file, \"%s %s(\", current_function_name (),\n \t   tmclone ? \"[tm-clone] \" : \"\");\n \n   arg = DECL_ARGUMENTS (fn);"}, {"sha": "ca79e79776b6bce9cf21787473b9e37d60ec0e62", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -31,8 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"langhooks.h\"\n #include \"tree-flow.h\"\n-#include \"timevar.h\"\n-#include \"tree-dump.h\"\n #include \"tree-pass.h\"\n #include \"except.h\"\n #include \"cfgloop.h\""}, {"sha": "91599923e87be20cc882416edb8045fab0dee5e2", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -31,7 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"tree-flow.h\"\n #include \"tree-chrec.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\n #include \"params.h\"\n #include \"tree-scalar-evolution.h\"\n "}, {"sha": "38327b0d2c394410e91c97b225f4598e026115df", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -82,7 +82,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"tree-data-ref.h\"\n #include \"tree-scalar-evolution.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\n #include \"langhooks.h\"\n #include \"tree-affine.h\"\n #include \"params.h\""}, {"sha": "7d20f6f1496acfaec84886a9bfbb166c9535b2d4", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 91, "deletions": 2, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -28,13 +28,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"timevar.h\"\n #include \"ggc.h\"\n #include \"langhooks.h\"\n #include \"flags.h\"\n #include \"function.h\"\n #include \"tree-pretty-print.h\"\n-#include \"tree-dump.h\"\n #include \"gimple.h\"\n #include \"tree-flow.h\"\n #include \"tree-inline.h\"\n@@ -939,3 +937,94 @@ stmt_references_abnormal_ssa_name (gimple stmt)\n \n   return false;\n }\n+\n+/* Pair of tree and a sorting index, for dump_enumerated_decls.  */\n+struct GTY(()) numbered_tree_d\n+{\n+  tree t;\n+  int num;\n+};\n+typedef struct numbered_tree_d numbered_tree;\n+\n+DEF_VEC_O (numbered_tree);\n+DEF_VEC_ALLOC_O (numbered_tree, heap);\n+\n+/* Compare two declarations references by their DECL_UID / sequence number.\n+   Called via qsort.  */\n+\n+static int\n+compare_decls_by_uid (const void *pa, const void *pb)\n+{\n+  const numbered_tree *nt_a = ((const numbered_tree *)pa);\n+  const numbered_tree *nt_b = ((const numbered_tree *)pb);\n+\n+  if (DECL_UID (nt_a->t) != DECL_UID (nt_b->t))\n+    return  DECL_UID (nt_a->t) - DECL_UID (nt_b->t);\n+  return nt_a->num - nt_b->num;\n+}\n+\n+/* Called via walk_gimple_stmt / walk_gimple_op by dump_enumerated_decls.  */\n+static tree\n+dump_enumerated_decls_push (tree *tp, int *walk_subtrees, void *data)\n+{\n+  struct walk_stmt_info *wi = (struct walk_stmt_info *) data;\n+  VEC (numbered_tree, heap) **list = (VEC (numbered_tree, heap) **) &wi->info;\n+  numbered_tree nt;\n+\n+  if (!DECL_P (*tp))\n+    return NULL_TREE;\n+  nt.t = *tp;\n+  nt.num = VEC_length (numbered_tree, *list);\n+  VEC_safe_push (numbered_tree, heap, *list, &nt);\n+  *walk_subtrees = 0;\n+  return NULL_TREE;\n+}\n+\n+/* Find all the declarations used by the current function, sort them by uid,\n+   and emit the sorted list.  Each declaration is tagged with a sequence\n+   number indicating when it was found during statement / tree walking,\n+   so that TDF_NOUID comparisons of anonymous declarations are still\n+   meaningful.  Where a declaration was encountered more than once, we\n+   emit only the sequence number of the first encounter.\n+   FILE is the dump file where to output the list and FLAGS is as in\n+   print_generic_expr.  */\n+void\n+dump_enumerated_decls (FILE *file, int flags)\n+{\n+  basic_block bb;\n+  struct walk_stmt_info wi;\n+  VEC (numbered_tree, heap) *decl_list = VEC_alloc (numbered_tree, heap, 40);\n+\n+  memset (&wi, '\\0', sizeof (wi));\n+  wi.info = (void*) decl_list;\n+  FOR_EACH_BB (bb)\n+    {\n+      gimple_stmt_iterator gsi;\n+\n+      for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+\tif (!is_gimple_debug (gsi_stmt (gsi)))\n+\t  walk_gimple_stmt (&gsi, NULL, dump_enumerated_decls_push, &wi);\n+    }\n+  decl_list = (VEC (numbered_tree, heap) *) wi.info;\n+  VEC_qsort (numbered_tree, decl_list, compare_decls_by_uid);\n+  if (VEC_length (numbered_tree, decl_list))\n+    {\n+      unsigned ix;\n+      numbered_tree *ntp;\n+      tree last = NULL_TREE;\n+\n+      fprintf (file, \"Declarations used by %s, sorted by DECL_UID:\\n\",\n+\t       current_function_name ());\n+      FOR_EACH_VEC_ELT (numbered_tree, decl_list, ix, ntp)\n+\t{\n+\t  if (ntp->t == last)\n+\t    continue;\n+\t  fprintf (file, \"%d: \", ntp->num);\n+\t  print_generic_decl (file, ntp->t, flags);\n+\t  fprintf (file, \"\\n\");\n+\t  last = ntp->t;\n+\t}\n+    }\n+  VEC_free (numbered_tree, heap, decl_list);\n+}\n+"}, {"sha": "1276cbea6afded84bd83be0fc05ee6b4b89b4cec", "filename": "gcc/tree-diagnostic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-diagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-diagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-diagnostic.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -27,7 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic.h\"\n #include \"tree-pretty-print.h\"\n #include \"tree-diagnostic.h\"\n-#include \"tree-pass.h\" /* TDF_DIAGNOSTIC */\n+#include \"dumpfile.h\" /* TDF_DIAGNOSTIC */\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n #include \"vec.h\""}, {"sha": "5a1fa3a0dd04003c3d1eae21522837902df1d8c2", "filename": "gcc/tree-dump.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dump.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"toplev.h\"\n #include \"tree-dump.h\"\n-#include \"tree-pass.h\"\n #include \"langhooks.h\"\n #include \"tree-iterator.h\"\n "}, {"sha": "50faf4b84953652eef27b55fcaec7792be8fcadc", "filename": "gcc/tree-dump.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-dump.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-dump.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dump.h?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -23,7 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #define GCC_TREE_DUMP_H\n \n #include \"splay-tree.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\n \n typedef struct dump_info *dump_info_p;\n \n@@ -86,12 +86,10 @@ extern void dump_pointer (dump_info_p, const char *, void *);\n extern void dump_int (dump_info_p, const char *, int);\n extern void dump_string (dump_info_p, const char *);\n extern void dump_string_field (dump_info_p, const char *, const char *);\n-extern void dump_stmt (dump_info_p, const_tree);\n extern void queue_and_dump_index (dump_info_p, const char *, const_tree, int);\n extern void queue_and_dump_type (dump_info_p, const_tree);\n extern void dump_function (int, tree);\n extern void dump_function_to_file (tree, FILE *, int);\n-extern void dump_enumerated_decls (FILE *, int);\n extern void debug_function (tree, int);\n extern int dump_flag (dump_info_p, int, const_tree);\n "}, {"sha": "a5dce621d12e6a8e61884389431672387ff4c032", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -28,11 +28,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"pointer-set.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n #include \"tree-inline.h\"\n-#include \"tree-iterator.h\"\n #include \"tree-pass.h\"\n-#include \"timevar.h\"\n #include \"langhooks.h\"\n #include \"ggc.h\"\n #include \"diagnostic-core.h\""}, {"sha": "42f6a7b35f33439cac83b0abb35d7a594836ea98", "filename": "gcc/tree-flow-inline.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-flow-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-flow-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow-inline.h?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -1233,6 +1233,9 @@ make_ssa_name (tree var, gimple stmt)\n    is not BITS_PER_UNIT-aligned.\n    VALUEIZE if non-NULL is used to valueize SSA names.  It should return\n    its argument or a constant if the argument is known to be constant.  */\n+/* ??? This is a static inline here to avoid the overhead of the indirect calls\n+   to VALUEIZE.  But is this overhead really that significant?  And should we\n+   perhaps just rely on WHOPR to specialize the function?  */\n \n static inline tree\n get_addr_base_and_unit_offset_1 (tree exp, HOST_WIDE_INT *poffset,"}, {"sha": "61742c424db170368b3f83bc87d2fa024146806e", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -498,10 +498,9 @@ extern tree make_rename_temp (tree, const char *);\n extern void set_default_def (tree, tree);\n extern tree gimple_default_def (struct function *, tree);\n extern bool stmt_references_abnormal_ssa_name (gimple);\n-extern tree get_ref_base_and_extent (tree, HOST_WIDE_INT *,\n-\t\t\t\t     HOST_WIDE_INT *, HOST_WIDE_INT *);\n extern tree get_addr_base_and_unit_offset (tree, HOST_WIDE_INT *);\n extern void find_referenced_vars_in (gimple);\n+extern void dump_enumerated_decls (FILE *, int);\n \n /* In tree-phinodes.c  */\n extern void reserve_phi_args_for_new_edge (basic_block);"}, {"sha": "1b816fb57b2899e4c9cdf037894819abeea14475", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -87,12 +87,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"timevar.h\"\n #include \"basic-block.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-data-ref.h\""}, {"sha": "113003822bdb08777e04d24fa30fdf1a4d3db5f0", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -29,15 +29,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"basic-block.h\"\n #include \"function.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"bitmap.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\"\n #include \"tree-inline.h\"\n-#include \"timevar.h\"\n #include \"hashtab.h\"\n-#include \"tree-dump.h\"\n #include \"tree-pass.h\"\n #include \"cfgloop.h\"\n #include \"domwalk.h\""}, {"sha": "e2ba26f869d2d66835c86a6c1912e84127b86817", "filename": "gcc/tree-mudflap.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-mudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-mudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-mudflap.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-iterator.h\"\n #include \"tree-flow.h\"\n #include \"tree-mudflap.h\"\n-#include \"tree-dump.h\"\n #include \"tree-pass.h\"\n #include \"hashtab.h\"\n #include \"diagnostic.h\""}, {"sha": "bac0a069eaf7f6a6f67b67cf0b65e6f56eb2251a", "filename": "gcc/tree-nrv.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-nrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-nrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nrv.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -27,8 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"timevar.h\"\n-#include \"tree-dump.h\"\n #include \"tree-pass.h\"\n #include \"langhooks.h\"\n #include \"flags.h\"\t/* For \"optimize\" in gate_pass_return_slot."}, {"sha": "7e341b0ec72b4184e632e9a2374daacd6809e25d", "filename": "gcc/tree-object-size.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-object-size.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-object-size.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-object-size.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"diagnostic-core.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\""}, {"sha": "d13c04f783c33baabc84efd8737e939afb3f3a71", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -28,8 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"flags.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"function.h\"\n #include \"langhooks.h\"\n #include \"diagnostic-core.h\""}, {"sha": "983099454bec30eb9f1c4d2076e47685f33a782f", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -26,13 +26,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"ggc.h\"\n #include \"basic-block.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"bitmap.h\"\n #include \"tree-flow.h\"\n-#include \"timevar.h\"\n-#include \"tree-dump.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\n #include \"diagnostic-core.h\"\n #include \"ssaexpand.h\"\n "}, {"sha": "081e48c405009c9f804cb9dc6bee4e02e6c8380f", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 1, "deletions": 91, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -24,86 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #define GCC_TREE_PASS_H 1\n \n #include \"timevar.h\"\n-\n-/* Different tree dump places.  When you add new tree dump places,\n-   extend the DUMP_FILES array in tree-dump.c.  */\n-enum tree_dump_index\n-{\n-  TDI_none,\t\t\t/* No dump */\n-  TDI_cgraph,                   /* dump function call graph.  */\n-  TDI_tu,\t\t\t/* dump the whole translation unit.  */\n-  TDI_class,\t\t\t/* dump class hierarchy.  */\n-  TDI_original,\t\t\t/* dump each function before optimizing it */\n-  TDI_generic,\t\t\t/* dump each function after genericizing it */\n-  TDI_nested,\t\t\t/* dump each function after unnesting it */\n-  TDI_vcg,\t\t\t/* create a VCG graph file for each\n-\t\t\t\t   function's flowgraph.  */\n-  TDI_ada,                      /* dump declarations in Ada syntax.  */\n-  TDI_tree_all,                 /* enable all the GENERIC/GIMPLE dumps.  */\n-  TDI_rtl_all,                  /* enable all the RTL dumps.  */\n-  TDI_ipa_all,                  /* enable all the IPA dumps.  */\n-\n-  TDI_end\n-};\n-\n-/* Bit masks to control dumping. Not all values are applicable to\n-   all dumps. Add new ones at the end. When you define new\n-   values, extend the DUMP_OPTIONS array in tree-dump.c */\n-#define TDF_ADDRESS\t(1 << 0)\t/* dump node addresses */\n-#define TDF_SLIM\t(1 << 1)\t/* don't go wild following links */\n-#define TDF_RAW  \t(1 << 2)\t/* don't unparse the function */\n-#define TDF_DETAILS\t(1 << 3)\t/* show more detailed info about\n-\t\t\t\t\t   each pass */\n-#define TDF_STATS\t(1 << 4)\t/* dump various statistics about\n-\t\t\t\t\t   each pass */\n-#define TDF_BLOCKS\t(1 << 5)\t/* display basic block boundaries */\n-#define TDF_VOPS\t(1 << 6)\t/* display virtual operands */\n-#define TDF_LINENO\t(1 << 7)\t/* display statement line numbers */\n-#define TDF_UID\t\t(1 << 8)\t/* display decl UIDs */\n-\n-#define TDF_TREE\t(1 << 9)\t/* is a tree dump */\n-#define TDF_RTL\t\t(1 << 10)\t/* is a RTL dump */\n-#define TDF_IPA\t\t(1 << 11)\t/* is an IPA dump */\n-#define TDF_STMTADDR\t(1 << 12)\t/* Address of stmt.  */\n-\n-#define TDF_GRAPH\t(1 << 13)\t/* a graph dump is being emitted */\n-#define TDF_MEMSYMS\t(1 << 14)\t/* display memory symbols in expr.\n-                                           Implies TDF_VOPS.  */\n-\n-#define TDF_DIAGNOSTIC\t(1 << 15)\t/* A dump to be put in a diagnostic\n-\t\t\t\t\t   message.  */\n-#define TDF_VERBOSE     (1 << 16)       /* A dump that uses the full tree\n-\t\t\t\t\t   dumper to print stmts.  */\n-#define TDF_RHS_ONLY\t(1 << 17)\t/* a flag to only print the RHS of\n-\t\t\t\t\t   a gimple stmt.  */\n-#define TDF_ASMNAME\t(1 << 18)\t/* display asm names of decls  */\n-#define TDF_EH\t\t(1 << 19)\t/* display EH region number\n-\t\t\t\t\t   holding this gimple statement.  */\n-#define TDF_NOUID\t(1 << 20)\t/* omit UIDs from dumps.  */\n-#define TDF_ALIAS\t(1 << 21)\t/* display alias information  */\n-#define TDF_ENUMERATE_LOCALS (1 << 22)\t/* Enumerate locals by uid.  */\n-#define TDF_CSELIB\t(1 << 23)\t/* Dump cselib details.  */\n-#define TDF_SCEV\t(1 << 24)\t/* Dump SCEV details.  */\n-\n-\n-/* In tree-dump.c */\n-\n-extern char *get_dump_file_name (int);\n-extern int dump_enabled_p (int);\n-extern int dump_initialized_p (int);\n-extern FILE *dump_begin (int, int *);\n-extern void dump_end (int, FILE *);\n-extern void dump_node (const_tree, int, FILE *);\n-extern int dump_switch_p (const char *);\n-extern const char *dump_flag_name (int);\n-\n-/* Global variables used to communicate with passes.  */\n-extern FILE *dump_file;\n-extern int dump_flags;\n-extern const char *dump_file_name;\n-\n-/* Return the dump_file_info for the given phase.  */\n-extern struct dump_file_info *get_dump_file_info (int);\n+#include \"dumpfile.h\"\n \n /* Optimization pass type.  */\n enum opt_pass_type\n@@ -216,17 +137,6 @@ struct simple_ipa_opt_pass\n   struct opt_pass pass;\n };\n \n-/* Define a tree dump switch.  */\n-struct dump_file_info\n-{\n-  const char *suffix;           /* suffix to give output file.  */\n-  const char *swtch;            /* command line switch */\n-  const char *glob;             /* command line glob  */\n-  int flags;                    /* user flags */\n-  int state;                    /* state of play */\n-  int num;                      /* dump file number */\n-};\n-\n /* Pass properties.  */\n #define PROP_gimple_any\t\t(1 << 0)\t/* entire gimple grammar */\n #define PROP_gimple_lcf\t\t(1 << 1)\t/* lowered control flow */"}, {"sha": "29080b7e06fb83605fbf9378f8cbf5f570ff9182", "filename": "gcc/tree-predcom.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-predcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-predcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-predcom.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -198,7 +198,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-scalar-evolution.h\"\n #include \"tree-chrec.h\"\n #include \"params.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-pass.h\"\n #include \"tree-affine.h\""}, {"sha": "4ac601c083bd7d63b4f1b9b361822b932c78d58e", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -30,7 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"tree-iterator.h\"\n #include \"tree-chrec.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\n #include \"value-prof.h\"\n #include \"predict.h\"\n \n@@ -126,7 +126,7 @@ print_generic_decl (FILE *file, tree decl, int flags)\n }\n \n /* Print tree T, and its successors, on file FILE.  FLAGS specifies details\n-   to show in the dump.  See TDF_* in tree-pass.h.  */\n+   to show in the dump.  See TDF_* in dumpfile.h.  */\n \n void\n print_generic_stmt (FILE *file, tree t, int flags)\n@@ -137,7 +137,7 @@ print_generic_stmt (FILE *file, tree t, int flags)\n }\n \n /* Print tree T, and its successors, on file FILE.  FLAGS specifies details\n-   to show in the dump.  See TDF_* in tree-pass.h.  The output is indented by\n+   to show in the dump.  See TDF_* in dumpfile.h.  The output is indented by\n    INDENT spaces.  */\n \n void\n@@ -154,7 +154,7 @@ print_generic_stmt_indented (FILE *file, tree t, int flags, int indent)\n }\n \n /* Print a single expression T on file FILE.  FLAGS specifies details to show\n-   in the dump.  See TDF_* in tree-pass.h.  */\n+   in the dump.  See TDF_* in dumpfile.h.  */\n \n void\n print_generic_expr (FILE *file, tree t, int flags)\n@@ -591,7 +591,7 @@ dump_block_node (pretty_printer *buffer, tree block, int spc, int flags)\n \n /* Dump the node NODE on the pretty_printer BUFFER, SPC spaces of\n    indent.  FLAGS specifies details to show in the dump (see TDF_* in\n-   tree-pass.h).  If IS_STMT is true, the object printed is considered\n+   dumpfile.h).  If IS_STMT is true, the object printed is considered\n    to be a statement and it is terminated by ';' if appropriate.  */\n \n int"}, {"sha": "ba6c6ed4cf7ac26efcbe08c595206ecc31b5ac76", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -37,9 +37,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coverage.h\"\n #include \"tree.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n #include \"tree-pass.h\"\n-#include \"timevar.h\"\n #include \"value-prof.h\"\n #include \"cgraph.h\"\n #include \"profile.h\""}, {"sha": "c1e0736e0b09c33ed4664e753952469cfd63f0fd", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -262,7 +262,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-scalar-evolution.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\n #include \"params.h\"\n \n static tree analyze_scalar_evolution_1 (struct loop *, tree, tree);"}, {"sha": "e7ac92628e98c8cbb826f1478f97a2f2685bd2d5", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -80,11 +80,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple.h\"\n #include \"cgraph.h\"\n #include \"tree-flow.h\"\n+#include \"tree-pass.h\"\n #include \"ipa-prop.h\"\n-#include \"tree-pretty-print.h\"\n #include \"statistics.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"params.h\"\n #include \"target.h\"\n #include \"flags.h\""}, {"sha": "5cda20f5f9284137600f066af09263ccba566d63", "filename": "gcc/tree-ssa-address.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-address.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-address.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-address.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -30,9 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n-#include \"tree-pass.h\"\n-#include \"timevar.h\"\n+#include \"dumpfile.h\"\n #include \"flags.h\"\n #include \"tree-inline.h\"\n #include \"tree-affine.h\""}, {"sha": "9631843df414d432e5e761878db93aed7c699b25", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -27,18 +27,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"basic-block.h\"\n-#include \"timevar.h\"\n+#include \"timevar.h\"\t/* for TV_ALIAS_STMT_WALK */\n #include \"ggc.h\"\n #include \"langhooks.h\"\n #include \"flags.h\"\n #include \"function.h\"\n #include \"tree-pretty-print.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"gimple.h\"\n #include \"tree-flow.h\"\n #include \"tree-inline.h\"\n-#include \"tree-pass.h\"\n-#include \"convert.h\"\n #include \"params.h\"\n #include \"vec.h\"\n #include \"bitmap.h\""}, {"sha": "d2ce870a1f00af273b048ac2f0ed7de9563061de", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -119,10 +119,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"function.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n-#include \"timevar.h\"\n-#include \"tree-dump.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n #include \"tree-ssa-propagate.h\""}, {"sha": "5d9e7544e9c6bd039f93321c61e075e109f40ffe", "filename": "gcc/tree-ssa-coalesce.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-coalesce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-coalesce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-coalesce.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -27,9 +27,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"tree-pretty-print.h\"\n #include \"bitmap.h\"\n+#include \"dumpfile.h\"\n #include \"tree-flow.h\"\n #include \"hashtab.h\"\n-#include \"tree-dump.h\"\n #include \"tree-ssa-live.h\"\n #include \"diagnostic-core.h\"\n "}, {"sha": "7686dda1fbdb86f4d4e0cbb1b3591a300c4c9628", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -27,10 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"function.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n-#include \"timevar.h\"\n-#include \"tree-dump.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n #include \"tree-ssa-propagate.h\""}, {"sha": "84d195b9e0f87652e6d53d81b4816e0ffbffbb23", "filename": "gcc/tree-ssa-copyrename.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-copyrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-copyrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copyrename.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -33,9 +33,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"gimple.h\"\n #include \"tree-inline.h\"\n-#include \"timevar.h\"\n #include \"hashtab.h\"\n-#include \"tree-dump.h\"\n #include \"tree-ssa-live.h\"\n #include \"tree-pass.h\"\n #include \"langhooks.h\""}, {"sha": "4d1b620669f13254e8671d7f01cc2b779723609e", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -49,14 +49,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n \n #include \"tree.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"basic-block.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\"\n-#include \"tree-dump.h\"\n #include \"tree-pass.h\"\n-#include \"timevar.h\"\n #include \"flags.h\"\n #include \"cfgloop.h\"\n #include \"tree-scalar-evolution.h\""}, {"sha": "393aa26d270b50edea7b51a1937520fb31dbb7f2", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -29,10 +29,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"cfgloop.h\"\n #include \"function.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n-#include \"timevar.h\"\n-#include \"tree-dump.h\"\n #include \"tree-flow.h\"\n #include \"domwalk.h\"\n #include \"tree-pass.h\""}, {"sha": "f9a0b85fc12190760c7fe4410b842a78f374c235", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -26,11 +26,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"timevar.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n-#include \"tree-dump.h\"\n #include \"domwalk.h\"\n #include \"flags.h\"\n #include \"langhooks.h\""}, {"sha": "2ab4b2375faf1457db038123d94ef83ee9f7aff5", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -25,11 +25,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"timevar.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n-#include \"tree-dump.h\"\n #include \"langhooks.h\"\n #include \"flags.h\"\n #include \"gimple.h\""}, {"sha": "f769d02a25afcecbc2748ccdc6b0c0cf6d840462", "filename": "gcc/tree-ssa-ifcombine.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-ifcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-ifcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ifcombine.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -24,11 +24,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"basic-block.h\"\n-#include \"timevar.h\"\n #include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n-#include \"tree-dump.h\"\n \n /* This pass combines COND_EXPRs to simplify control flow.  It\n    currently recognizes bit tests and comparisons in chains that"}, {"sha": "5c17546dd9bc329876c140f9fcc23f908724350d", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 2, "deletions": 91, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -24,11 +24,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"bitmap.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n+#include \"timevar.h\"\n+#include \"dumpfile.h\"\n #include \"tree-ssa-live.h\"\n #include \"diagnostic-core.h\"\n #include \"debug.h\"\n@@ -1232,95 +1232,6 @@ dump_live_info (FILE *f, tree_live_info_p live, int flag)\n     }\n }\n \n-struct GTY(()) numbered_tree_d\n-{\n-  tree t;\n-  int num;\n-};\n-typedef struct numbered_tree_d numbered_tree;\n-\n-DEF_VEC_O (numbered_tree);\n-DEF_VEC_ALLOC_O (numbered_tree, heap);\n-\n-/* Compare two declarations references by their DECL_UID / sequence number.\n-   Called via qsort.  */\n-\n-static int\n-compare_decls_by_uid (const void *pa, const void *pb)\n-{\n-  const numbered_tree *nt_a = ((const numbered_tree *)pa);\n-  const numbered_tree *nt_b = ((const numbered_tree *)pb);\n-\n-  if (DECL_UID (nt_a->t) != DECL_UID (nt_b->t))\n-    return  DECL_UID (nt_a->t) - DECL_UID (nt_b->t);\n-  return nt_a->num - nt_b->num;\n-}\n-\n-/* Called via walk_gimple_stmt / walk_gimple_op by dump_enumerated_decls.  */\n-static tree\n-dump_enumerated_decls_push (tree *tp, int *walk_subtrees, void *data)\n-{\n-  struct walk_stmt_info *wi = (struct walk_stmt_info *) data;\n-  VEC (numbered_tree, heap) **list = (VEC (numbered_tree, heap) **) &wi->info;\n-  numbered_tree nt;\n-\n-  if (!DECL_P (*tp))\n-    return NULL_TREE;\n-  nt.t = *tp;\n-  nt.num = VEC_length (numbered_tree, *list);\n-  VEC_safe_push (numbered_tree, heap, *list, &nt);\n-  *walk_subtrees = 0;\n-  return NULL_TREE;\n-}\n-\n-/* Find all the declarations used by the current function, sort them by uid,\n-   and emit the sorted list.  Each declaration is tagged with a sequence\n-   number indicating when it was found during statement / tree walking,\n-   so that TDF_NOUID comparisons of anonymous declarations are still\n-   meaningful.  Where a declaration was encountered more than once, we\n-   emit only the sequence number of the first encounter.\n-   FILE is the dump file where to output the list and FLAGS is as in\n-   print_generic_expr.  */\n-void\n-dump_enumerated_decls (FILE *file, int flags)\n-{\n-  basic_block bb;\n-  struct walk_stmt_info wi;\n-  VEC (numbered_tree, heap) *decl_list = VEC_alloc (numbered_tree, heap, 40);\n-\n-  memset (&wi, '\\0', sizeof (wi));\n-  wi.info = (void*) decl_list;\n-  FOR_EACH_BB (bb)\n-    {\n-      gimple_stmt_iterator gsi;\n-\n-      for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n-\tif (!is_gimple_debug (gsi_stmt (gsi)))\n-\t  walk_gimple_stmt (&gsi, NULL, dump_enumerated_decls_push, &wi);\n-    }\n-  decl_list = (VEC (numbered_tree, heap) *) wi.info;\n-  VEC_qsort (numbered_tree, decl_list, compare_decls_by_uid);\n-  if (VEC_length (numbered_tree, decl_list))\n-    {\n-      unsigned ix;\n-      numbered_tree *ntp;\n-      tree last = NULL_TREE;\n-\n-      fprintf (file, \"Declarations used by %s, sorted by DECL_UID:\\n\",\n-\t       current_function_name ());\n-      FOR_EACH_VEC_ELT (numbered_tree, decl_list, ix, ntp)\n-\t{\n-\t  if (ntp->t == last)\n-\t    continue;\n-\t  fprintf (file, \"%d: \", ntp->num);\n-\t  print_generic_decl (file, ntp->t, flags);\n-\t  fprintf (file, \"\\n\");\n-\t  last = ntp->t;\n-\t}\n-    }\n-  VEC_free (numbered_tree, heap, decl_list);\n-}\n-\n #ifdef ENABLE_CHECKING\n /* Verify that SSA_VAR is a non-virtual SSA_NAME.  */\n "}, {"sha": "3d3253d706c00f161356efd3f9993c26c9592899", "filename": "gcc/tree-ssa-loop-ch.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop-ch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop-ch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ch.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -26,9 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n #include \"tree-pass.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-inline.h\"\n #include \"flags.h\""}, {"sha": "541b8c2525295f0ea63db8af906fad2a3bf3b014", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -25,11 +25,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"domwalk.h\"\n #include \"params.h\""}, {"sha": "48fd3f4425b3618a9b7ef6d20cf80e509f464e00", "filename": "gcc/tree-ssa-loop-ivcanon.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop-ivcanon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop-ivcanon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivcanon.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -40,10 +40,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n #include \"cfgloop.h\"\n #include \"tree-pass.h\"\n #include \"tree-chrec.h\""}, {"sha": "b418c599a3e196fff20c6c489585cb3dfd48db36", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -69,11 +69,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-pass.h\"\n #include \"ggc.h\""}, {"sha": "2c8e803f96e7bb58134fe074a1cb7e8d037fa96f", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -26,10 +26,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n+#include \"dumpfile.h\"\n #include \"cfgloop.h\"\n-#include \"tree-pass.h\"\n+#include \"tree-pass.h\"\t/* ??? for TODO_update_ssa but this isn't a pass.  */\n #include \"tree-scalar-evolution.h\"\n #include \"params.h\"\n #include \"tree-inline.h\""}, {"sha": "c719a74d47acf31428c5e9852ee2a33d0c7ec35c", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -25,13 +25,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"intl.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"cfgloop.h\"\n-#include \"tree-pass.h\"\n #include \"ggc.h\"\n #include \"tree-chrec.h\"\n #include \"tree-scalar-evolution.h\""}, {"sha": "144050db36b3f9a484e5871b765c2b5708d99d0e", "filename": "gcc/tree-ssa-loop-prefetch.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop-prefetch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop-prefetch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-prefetch.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -27,8 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"tree-pass.h\"\n #include \"insn-config.h\""}, {"sha": "eaf41e7d6ce42ed320d4eb560f659c332c8b4471", "filename": "gcc/tree-ssa-loop-unswitch.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop-unswitch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop-unswitch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-unswitch.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -25,8 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"params.h\"\n #include \"tree-pass.h\""}, {"sha": "33c00f0fd21103256ae342da67376435d3412602", "filename": "gcc/tree-ssa-loop.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -26,9 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n #include \"tree-pass.h\"\n-#include \"timevar.h\"\n #include \"cfgloop.h\"\n #include \"flags.h\"\n #include \"tree-inline.h\""}, {"sha": "30f78bc35cd68707e8e177399c3ed99c3224a967", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -92,7 +92,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"tree.h\"\n #include \"tree-flow.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"alloc-pool.h\"\n #include \"basic-block.h\""}, {"sha": "50731adc1c4491fa07ac9944e5c2461e64c083f8", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -25,11 +25,11 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"function.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-inline.h\"\n-#include \"tree-pass.h\"\n+#include \"timevar.h\"\n+#include \"dumpfile.h\"\n #include \"ggc.h\"\n #include \"timevar.h\"\n #include \"langhooks.h\""}, {"sha": "5b7d49aa8124a067ad10b22ca2c916ef3d73d64d", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -27,16 +27,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"timevar.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n-#include \"tree-dump.h\"\n #include \"langhooks.h\"\n #include \"pointer-set.h\"\n #include \"domwalk.h\"\n #include \"cfgloop.h\"\n #include \"tree-data-ref.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"insn-config.h\"\n #include \"expr.h\""}, {"sha": "0f107f80427988b073e948e095d98cbc64d75a67", "filename": "gcc/tree-ssa-phiprop.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-phiprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-phiprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiprop.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -25,12 +25,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n-#include \"timevar.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n-#include \"tree-dump.h\"\n #include \"langhooks.h\"\n #include \"flags.h\"\n "}, {"sha": "499cbcb30d6abdb3d3423557d3e75f1515ff39a8", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -26,14 +26,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"basic-block.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-inline.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n-#include \"fibheap.h\"\n #include \"hashtab.h\"\n #include \"tree-iterator.h\"\n #include \"alloc-pool.h\""}, {"sha": "15abdc4c44e10b12128ab2ed7ee41deb10b46cb0", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -29,10 +29,8 @@\n #include \"basic-block.h\"\n #include \"function.h\"\n #include \"gimple-pretty-print.h\"\n-#include \"timevar.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"tree-flow.h\"\n-#include \"tree-pass.h\"\n #include \"tree-ssa-propagate.h\"\n #include \"langhooks.h\"\n #include \"vec.h\""}, {"sha": "5c55fe06a1a4a46156c16e8ca6a5c2b7d279bd4e", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -25,13 +25,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"basic-block.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-inline.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n #include \"tree-iterator.h\"\n #include \"tree-pass.h\"\n #include \"alloc-pool.h\""}, {"sha": "d2661b3c69ce1569d818206513937d4b36f45169", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -25,21 +25,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"basic-block.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-inline.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n-#include \"fibheap.h\"\n+#include \"dumpfile.h\"\n #include \"hashtab.h\"\n-#include \"tree-iterator.h\"\n #include \"alloc-pool.h\"\n-#include \"tree-pass.h\"\n #include \"flags.h\"\n #include \"bitmap.h\"\n-#include \"langhooks.h\"\n #include \"cfgloop.h\"\n #include \"params.h\"\n #include \"tree-ssa-propagate.h\""}, {"sha": "b5495e7558aa6e322724ae59e6856a964598ae27", "filename": "gcc/tree-ssa-sink.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-sink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-sink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sink.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -29,16 +29,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-inline.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n-#include \"fibheap.h\"\n #include \"hashtab.h\"\n #include \"tree-iterator.h\"\n #include \"alloc-pool.h\"\n #include \"tree-pass.h\"\n #include \"flags.h\"\n #include \"bitmap.h\"\n-#include \"langhooks.h\"\n #include \"cfgloop.h\"\n #include \"params.h\"\n "}, {"sha": "caf350632b122d537cdd6be70edbd4b65b996ae4", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -37,7 +37,6 @@\n #include \"function.h\"\n #include \"cgraph.h\"\n #include \"tree-pass.h\"\n-#include \"timevar.h\"\n #include \"alloc-pool.h\"\n #include \"splay-tree.h\"\n #include \"params.h\""}, {"sha": "3912ed568b21109076cd4403adc0cc2ec2baab43", "filename": "gcc/tree-ssa-tail-merge.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-tail-merge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-tail-merge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-tail-merge.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -190,16 +190,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"function.h\"\n #include \"tree-flow.h\"\n-#include \"timevar.h\"\n #include \"bitmap.h\"\n #include \"tree-ssa-alias.h\"\n #include \"params.h\"\n-#include \"tree-pretty-print.h\"\n #include \"hashtab.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-ssa-sccvn.h\"\n #include \"tree-dump.h\"\n \n+/* ??? This currently runs as part of tree-ssa-pre.  Why is this not\n+   a stand-alone GIMPLE pass?  */\n+#include \"tree-pass.h\"\n+\n /* Describes a group of bbs with the same successors.  The successor bbs are\n    cached in succs, and the successor edge flags are cached in succ_flags.\n    If a bb has the EDGE_TRUE/VALSE_VALUE flags swapped compared to succ_flags,"}, {"sha": "6e19e1f6edca20f1c68dde73d1f0f7bf69a2e9c6", "filename": "gcc/tree-ssa-ter.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-ter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-ter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ter.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -25,11 +25,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"bitmap.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"tree-ssa-live.h\"\n #include \"flags.h\"\n "}, {"sha": "65b27e62b3fcc2174adfed4ffd996f4d66aad9bb", "filename": "gcc/tree-ssa-threadedge.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-threadedge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-threadedge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadedge.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -30,9 +30,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"function.h\"\n #include \"timevar.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"tree-flow.h\"\n-#include \"tree-pass.h\"\n #include \"tree-ssa-propagate.h\"\n #include \"langhooks.h\"\n #include \"params.h\""}, {"sha": "a0536db079bb4ebed949960c313c2c45d3ef03b3", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -28,8 +28,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"function.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\n #include \"cfgloop.h\"\n \n /* Given a block B, update the CFG and SSA graph to reflect redirecting"}, {"sha": "49bf65d84a817ba34f04d8e96132d4c821f7a948", "filename": "gcc/tree-ssa-uncprop.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-uncprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-uncprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uncprop.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -27,13 +27,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"function.h\"\n-#include \"timevar.h\"\n-#include \"tree-dump.h\"\n #include \"tree-flow.h\"\n #include \"domwalk.h\"\n #include \"tree-pass.h\"\n #include \"tree-ssa-propagate.h\"\n-#include \"langhooks.h\"\n \n /* The basic structure describing an equivalency created by traversing\n    an edge.  Traversing the edge effectively means that we can assume"}, {"sha": "fec095195e16171b3b228d403c4c1e438618bb20", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"tm_p.h\"\n-#include \"langhooks.h\"\n #include \"basic-block.h\"\n #include \"function.h\"\n #include \"gimple-pretty-print.h\"\n@@ -35,12 +34,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"gimple.h\"\n #include \"tree-inline.h\"\n-#include \"timevar.h\"\n #include \"hashtab.h\"\n-#include \"tree-dump.h\"\n #include \"tree-pass.h\"\n #include \"diagnostic-core.h\"\n-#include \"timevar.h\"\n \n /* This implements the pass that does predicate aware warning on uses of\n    possibly uninitialized variables. The pass first collects the set of"}, {"sha": "36aaffdecc4cf0b3eddde957615415dbe21c558b", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -30,16 +30,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"basic-block.h\"\n #include \"function.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"bitmap.h\"\n #include \"pointer-set.h\"\n #include \"tree-flow.h\"\n #include \"gimple.h\"\n #include \"tree-inline.h\"\n-#include \"timevar.h\"\n #include \"hashtab.h\"\n-#include \"tree-dump.h\"\n #include \"tree-pass.h\"\n #include \"diagnostic-core.h\"\n #include \"cfgloop.h\""}, {"sha": "529c6a02ec823a33611c0eb39d9d8a665ae7cbcc", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -37,8 +37,9 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #include \"tree-ssa-operands.h\"\n #include \"tree-pass.h\"\n #include \"gimple-pretty-print.h\"\n-#include \"tree-dump.h\"\n-#include \"timevar.h\"\n+\n+/* ??? For lang_hooks.types.type_for_mode, but is there a word_mode\n+   type in the GIMPLE type system that is language-independent?  */\n #include \"langhooks.h\"\n \n /* Need to include expr.h and optabs.h for lshift_cheap_p.  */"}, {"sha": "e2e51a45107287a94edac1b044483f7f1e8365d5", "filename": "gcc/tree-tailcall.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-tailcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-tailcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-tailcall.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"function.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n #include \"gimple-pretty-print.h\"\n #include \"except.h\"\n #include \"tree-pass.h\""}, {"sha": "1bec2b1bd298756842103220dfd174c58516c9de", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -29,10 +29,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"basic-block.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n+#include \"dumpfile.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-scalar-evolution.h\""}, {"sha": "3c3b2b022e1203aea27a6866c510414242cc191c", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -27,10 +27,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"basic-block.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n+#include \"tree-pass.h\"\n #include \"cfgloop.h\"\n #include \"diagnostic-core.h\"\n #include \"tree-scalar-evolution.h\""}, {"sha": "d600b67781b33b6878d03d2a3ec65298b892a442", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -27,10 +27,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"basic-block.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n+#include \"tree-pass.h\"\n #include \"cfgloop.h\"\n #include \"expr.h\"\n #include \"recog.h\""}, {"sha": "e8ac42acad7023156c08fba859300d5dee1e34f1", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -29,15 +29,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n #include \"cfgloop.h\"\n #include \"expr.h\"\n #include \"optabs.h\"\n #include \"params.h\"\n #include \"tree-data-ref.h\"\n #include \"tree-vectorizer.h\"\n-#include \"recog.h\"\n+#include \"recog.h\"\t\t/* FIXME: for insn_data */\n #include \"diagnostic-core.h\"\n+#include \"dumpfile.h\"\n \n /* Pattern recognition functions  */\n static gimple vect_recog_widen_sum_pattern (VEC (gimple, heap) **, tree *,"}, {"sha": "c9998f1a3afe32e67fbb6e6f3107c3a8e1735501", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -28,13 +28,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"target.h\"\n #include \"basic-block.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n+#include \"tree-pass.h\"\n #include \"cfgloop.h\"\n #include \"expr.h\"\n-#include \"recog.h\"\n+#include \"recog.h\"\t\t/* FIXME: for insn_data */\n #include \"optabs.h\"\n #include \"tree-vectorizer.h\"\n #include \"langhooks.h\""}, {"sha": "2f372df46ec9a731741d4daf5b36eda34e9cce3b", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -28,18 +28,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"target.h\"\n #include \"basic-block.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n #include \"cfgloop.h\"\n #include \"expr.h\"\n-#include \"recog.h\"\n+#include \"recog.h\"\t\t/* FIXME: for insn_data */\n #include \"optabs.h\"\n #include \"diagnostic-core.h\"\n #include \"tree-vectorizer.h\"\n-#include \"langhooks.h\"\n+#include \"dumpfile.h\"\n \n+/* For lang_hooks.types.type_for_mode.  */\n+#include \"langhooks.h\"\n \n /* Return the vectorized type for the given statement.  */\n "}, {"sha": "89a481e0354e0f78056a7b76f6075e03a9b919c0", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -63,11 +63,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tree-pretty-print.h\"\n #include \"tree-flow.h\"\n-#include \"tree-dump.h\"\n #include \"cfgloop.h\"\n #include \"tree-vectorizer.h\"\n #include \"tree-pass.h\"\n-#include \"timevar.h\"\n \n /* vect_dump will be set to stderr or dump_file if exist.  */\n FILE *vect_dump;"}, {"sha": "f224c6f5b3923341c1d1844c951646304b47c2b7", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -30,8 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"tree-pass.h\"\n #include \"tree-dump.h\"\n-#include \"timevar.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"diagnostic-core.h\"\n #include \"intl.h\""}, {"sha": "f54e89060a5f65197a4445e48bd89b5708252c4d", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -58,7 +58,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-diagnostic.h\"\n #include \"tree-pretty-print.h\"\n #include \"cgraph.h\"\n-#include \"timevar.h\"\n #include \"except.h\"\n #include \"debug.h\"\n #include \"intl.h\""}, {"sha": "e803232093d5e19b3d9e1f95ff204f011ec140a4", "filename": "gcc/tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -5530,6 +5530,8 @@ extern location_t tree_nonartificial_location (tree);\n extern tree block_ultimate_origin (const_tree);\n \n extern tree get_binfo_at_offset (tree, HOST_WIDE_INT, tree);\n+extern tree get_ref_base_and_extent (tree, HOST_WIDE_INT *,\n+\t\t\t\t     HOST_WIDE_INT *, HOST_WIDE_INT *);\n \n /* In tree-nested.c */\n extern tree build_addr (tree, tree);"}, {"sha": "29c3e92b28928c8f926311dd63ae5beed453743f", "filename": "gcc/value-prof.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -36,14 +36,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-flow.h\"\n #include \"tree-flow-inline.h\"\n #include \"diagnostic.h\"\n-#include \"tree-pretty-print.h\"\n #include \"gimple-pretty-print.h\"\n #include \"coverage.h\"\n #include \"tree.h\"\n #include \"gcov-io.h\"\n #include \"cgraph.h\"\n #include \"timevar.h\"\n-#include \"tree-pass.h\"\n+#include \"dumpfile.h\"\n #include \"pointer-set.h\"\n #include \"profile.h\"\n "}, {"sha": "7aef8ea39bf74bec106921d9d883c7333c9556b9", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -104,7 +104,6 @@\n #include \"hashtab.h\"\n #include \"regs.h\"\n #include \"expr.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n #include \"tree-flow.h\"\n #include \"cselib.h\""}, {"sha": "041f0f3863352d21dfcba87c5eab30fe920a8399", "filename": "gcc/web.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fweb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee2468b9274dd08bac00909fbbe8308f92c68e5/gcc%2Fweb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fweb.c?ref=7ee2468b9274dd08bac00909fbbe8308f92c68e5", "patch": "@@ -49,7 +49,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"insn-config.h\"\n #include \"recog.h\"\n-#include \"timevar.h\"\n #include \"tree-pass.h\"\n \n "}]}