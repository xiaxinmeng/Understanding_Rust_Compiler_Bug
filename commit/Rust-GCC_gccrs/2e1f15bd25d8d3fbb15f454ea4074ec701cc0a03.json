{"sha": "2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUxZjE1YmQyNWQ4ZDNmYmIxNWY0NTRlYTQwNzRlYzcwMWNjMGEwMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2006-11-04T23:12:16Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2006-11-04T23:12:16Z"}, "message": "re PR target/26915 (missed sized opt returning -1.0)\n\n        PR target/26915\n        * config/i386/i386.c (standard_80387_constant_p): Treat -0.0 and -1.0\n        as a valid 80387 constant.\n        (standard_80387_constant_opcode): Return \"#\" for -0.0 and -1.0.\n        * config/i386/i386.md (unnamed splitter): Split the load of\n        constant -0.0 or -1.0  into the load of 0.0 or 1.0, followed\n        by negation.\n\ntestsuite/ChangeLog:\n\n        PR target/26915\n        * gcc.target/i386/387-12.c: New test.\n~\n\nFrom-SVN: r118484", "tree": {"sha": "1f29387249718cd32722242f7c6193731a127f13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f29387249718cd32722242f7c6193731a127f13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d6910bb551f6d41b9e631d21f3fa3899f65757ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6910bb551f6d41b9e631d21f3fa3899f65757ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6910bb551f6d41b9e631d21f3fa3899f65757ab"}], "stats": {"total": 69, "additions": 66, "deletions": 3}, "files": [{"sha": "81ae94fc47ca48ac94894e49501e164c03ef29e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03", "patch": "@@ -1,3 +1,13 @@\n+2006-11-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/26915\n+\t* config/i386/i386.c (standard_80387_constant_p): Treat -0.0 and -1.0\n+\tas a valid 80387 constant.\n+\t(standard_80387_constant_opcode): Return \"#\" for -0.0 and -1.0.\n+\t* config/i386/i386.md (unnamed splitter): Split the load of\n+\tconstant -0.0 or -1.0  into the load of 0.0 or 1.0, followed\n+\tby negation.\n+\n 2006-11-04  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.c (thumb_legitimate_addres_p): Allow any constant offset\n@@ -8,7 +18,6 @@\n \t* config/i386/i386.md (*movxf_nointeger, *movxf_integer): Enable\n \tpatterns for standard 80387 constants.\n \n-\n 2006-11-03  Paolo Bonzini  <bonzini@gnu.org>\n \t    Steven Bosscher  <steven@gcc.gnu.org>\n "}, {"sha": "cd4162860151ccb9efce00a108779a640ba2bbcd", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03", "patch": "@@ -4575,6 +4575,8 @@ init_ext_80387_constants (void)\n int\n standard_80387_constant_p (rtx x)\n {\n+  REAL_VALUE_TYPE r;\n+\n   if (GET_CODE (x) != CONST_DOUBLE || !FLOAT_MODE_P (GET_MODE (x)))\n     return -1;\n \n@@ -4583,23 +4585,30 @@ standard_80387_constant_p (rtx x)\n   if (x == CONST1_RTX (GET_MODE (x)))\n     return 2;\n \n+  REAL_VALUE_FROM_CONST_DOUBLE (r, x);\n+\n   /* For XFmode constants, try to find a special 80387 instruction when\n      optimizing for size or on those CPUs that benefit from them.  */\n   if (GET_MODE (x) == XFmode\n       && (optimize_size || x86_ext_80387_constants & TUNEMASK))\n     {\n-      REAL_VALUE_TYPE r;\n       int i;\n \n       if (! ext_80387_constants_init)\n \tinit_ext_80387_constants ();\n \n-      REAL_VALUE_FROM_CONST_DOUBLE (r, x);\n       for (i = 0; i < 5; i++)\n         if (real_identical (&r, &ext_80387_constants_table[i]))\n \t  return i + 3;\n     }\n \n+  /* Load of the constant -0.0 or -1.0 will be split as\n+     fldz;fchs or fld1;fchs sequence.  */\n+  if (real_isnegzero (&r))\n+    return 8;\n+  if (real_identical (&r, &dconstm1))\n+    return 9;\n+\n   return 0;\n }\n \n@@ -4625,6 +4634,9 @@ standard_80387_constant_opcode (rtx x)\n       return \"fldl2t\";\n     case 7:\n       return \"fldpi\";\n+    case 8:\n+    case 9:\n+      return \"#\";\n     default:\n       gcc_unreachable ();\n     }"}, {"sha": "28de0a4b7d7c077fde3216db101ad1adf341bc65", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03", "patch": "@@ -2914,6 +2914,26 @@\n   [(set_attr \"type\" \"fxch\")\n    (set_attr \"mode\" \"XF\")])\n \n+;; Split the load of -0.0 or -1.0 into fldz;fchs or fld1;fchs sequence\n+(define_split\n+  [(set (match_operand:X87MODEF 0 \"register_operand\" \"\")\n+\t(match_operand:X87MODEF 1 \"immediate_operand\" \"\"))]\n+  \"reload_completed && FP_REGNO_P (REGNO (operands[0]))\n+   && (standard_80387_constant_p (operands[1]) == 8\n+       || standard_80387_constant_p (operands[1]) == 9)\"\n+  [(set (match_dup 0)(match_dup 1))\n+   (set (match_dup 0)\n+\t(neg:X87MODEF (match_dup 0)))]\n+{\n+  REAL_VALUE_TYPE r;\n+\n+  REAL_VALUE_FROM_CONST_DOUBLE (r, operands[1]);\n+  if (real_isnegzero (&r))\n+    operands[1] = CONST0_RTX (<MODE>mode);\n+  else\n+    operands[1] = CONST1_RTX (<MODE>mode);\n+})\n+\n (define_expand \"movtf\"\n   [(set (match_operand:TF 0 \"nonimmediate_operand\" \"\")\n \t(match_operand:TF 1 \"nonimmediate_operand\" \"\"))]"}, {"sha": "925f5b3d38eb2545c83057d8b0ab935ca23ddddb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03", "patch": "@@ -1,3 +1,8 @@\n+2006-11-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/26915\n+\t* gcc.target/i386/387-12.c: New test.\n+\n 2006-11-04  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR libfortran/29713"}, {"sha": "c653974a2d34f3912697da5ae9fda63f68bd3b74", "filename": "gcc/testsuite/gcc.target/i386/387-12.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-12.c?ref=2e1f15bd25d8d3fbb15f454ea4074ec701cc0a03", "patch": "@@ -0,0 +1,17 @@\n+/* PR target/26915 */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target ilp32 } */\n+/* { dg-options \"-O\" } */\n+\n+double testm0(void)\n+{\n+\treturn -0.0;\n+}\n+\n+double testm1(void)\n+{\n+\treturn -1.0;\n+}\n+\n+/* { dg-final { scan-assembler \"fldz\" } } */\n+/* { dg-final { scan-assembler \"fld1\" } } */"}]}