{"sha": "fa9516946c7076c902f1fd8e96add1a37d83f8b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE5NTE2OTQ2YzcwNzZjOTAyZjFmZDhlOTZhZGQxYTM3ZDgzZjhiNA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2006-10-16T11:17:29Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2006-10-16T11:17:29Z"}, "message": "trans-stmt.c: Fix a typo\n\n2006-10-16  Tobias Burnus <burnus@net-b.de>\n\n       * trans-stmt.c: Fix a typo\n       * invoke.texi: Fix typos\n       * resolve.c: Fix a comment typo\n       * trans-decl.c: Fix a comment typo\n       * primary.c: Fix a comment typo\n\nFrom-SVN: r117781", "tree": {"sha": "7d6261b2f469a88d1a33f37f59e890bf0fc4ce5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d6261b2f469a88d1a33f37f59e890bf0fc4ce5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa9516946c7076c902f1fd8e96add1a37d83f8b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9516946c7076c902f1fd8e96add1a37d83f8b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa9516946c7076c902f1fd8e96add1a37d83f8b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9516946c7076c902f1fd8e96add1a37d83f8b4/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "018c8d88cb5b4dd25dbcd6c8ffab00414f54c6e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/018c8d88cb5b4dd25dbcd6c8ffab00414f54c6e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/018c8d88cb5b4dd25dbcd6c8ffab00414f54c6e0"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "6d7e4c42b2f7c2145db3439b46dc45db5e9cd8fc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9516946c7076c902f1fd8e96add1a37d83f8b4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9516946c7076c902f1fd8e96add1a37d83f8b4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fa9516946c7076c902f1fd8e96add1a37d83f8b4", "patch": "@@ -1,3 +1,11 @@\n+2006-10-16  Tobias Burnus <burnus@net-b.de>\n+\n+\t* trans-stmt.c: Fix a typo\n+\t* invoke.texi: Fix typos\n+\t* resolve.c: Fix a comment typo\n+\t* trans-decl.c: Fix a comment typo\n+\t* primary.c: Fix a comment typo\n+\n 2006-10-15  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/29403"}, {"sha": "46701b7b14ead84b4ba3f6c83d7278712e85680d", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9516946c7076c902f1fd8e96add1a37d83f8b4/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9516946c7076c902f1fd8e96add1a37d83f8b4/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=fa9516946c7076c902f1fd8e96add1a37d83f8b4", "patch": "@@ -845,13 +845,13 @@ with code compiled without this option, and may execute slower.\n @item -frepack-arrays\n @cindex Repacking arrays\n In some circumstances GNU Fortran may pass assumed shape array\n-sections via a descriptor describing a discontiguous area of memory.\n+sections via a descriptor describing a discontinuous area of memory.\n This option adds code to the function prologue to repack the data into\n a contiguous block at runtime.\n \n This should result in faster accesses to the array.  However it can introduce\n significant overhead to the function call, especially  when the passed data\n-is discontiguous.\n+is discontinuous.\n \n @cindex -fshort-enums\n @item -fshort-enums"}, {"sha": "74c7e95a6aa59e6b6ce1e69079fd9184c8f94f1d", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9516946c7076c902f1fd8e96add1a37d83f8b4/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9516946c7076c902f1fd8e96add1a37d83f8b4/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=fa9516946c7076c902f1fd8e96add1a37d83f8b4", "patch": "@@ -463,7 +463,7 @@ match_real_constant (gfc_expr ** result, int signflag)\n       c = gfc_next_char ();\n     }\n \n-  /* Scan significand.  */\n+  /* Scan significant.  */\n   for (;; c = gfc_next_char (), count++)\n     {\n       if (c == '.')"}, {"sha": "2639cabae36b54247a7ccfa99cbe32606e7c9945", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9516946c7076c902f1fd8e96add1a37d83f8b4/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9516946c7076c902f1fd8e96add1a37d83f8b4/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=fa9516946c7076c902f1fd8e96add1a37d83f8b4", "patch": "@@ -1528,7 +1528,7 @@ resolve_function (gfc_expr * expr)\n \t     && expr->value.function.isym->generic_id != GFC_ISYM_LOC\n \t     && expr->value.function.isym->generic_id != GFC_ISYM_PRESENT)\n     {\n-      /* Array instrinsics must also have the last upper bound of an\n+      /* Array intrinsics must also have the last upper bound of an\n \t assumed size array argument.  UBOUND and SIZE have to be\n \t excluded from the check if the second argument is anything\n \t than a constant.  */"}, {"sha": "d12b953cf9e5ed93b9653bbe2bdc266f6c2dd607", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9516946c7076c902f1fd8e96add1a37d83f8b4/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9516946c7076c902f1fd8e96add1a37d83f8b4/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=fa9516946c7076c902f1fd8e96add1a37d83f8b4", "patch": "@@ -701,7 +701,7 @@ gfc_build_dummy_array_decl (gfc_symbol * sym, tree dummy)\n   type = TREE_TYPE (type);\n   if (GFC_DESCRIPTOR_TYPE_P (type))\n     {\n-      /* Create a decriptorless array pointer.  */\n+      /* Create a descriptorless array pointer.  */\n       as = sym->as;\n       packed = 0;\n       if (!gfc_option.flag_repack_arrays)"}, {"sha": "1c49e7b56cb886a3baa44f9263d12c5b19ecfc7b", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa9516946c7076c902f1fd8e96add1a37d83f8b4/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa9516946c7076c902f1fd8e96add1a37d83f8b4/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=fa9516946c7076c902f1fd8e96add1a37d83f8b4", "patch": "@@ -625,7 +625,7 @@ gfc_trans_if (gfc_code * code)\n }\n \n \n-/* Translage an arithmetic IF expression.\n+/* Translate an arithmetic IF expression.\n \n    IF (cond) label1, label2, label3 translates to\n "}]}