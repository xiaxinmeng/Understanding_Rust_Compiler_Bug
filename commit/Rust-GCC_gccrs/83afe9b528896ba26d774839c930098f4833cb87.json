{"sha": "83afe9b528896ba26d774839c930098f4833cb87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNhZmU5YjUyODg5NmJhMjZkNzc0ODM5YzkzMDA5OGY0ODMzY2I4Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-04-03T17:41:17Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-04-03T17:41:17Z"}, "message": "* semantics.c (finish_if_stmt_cond): Use instantiation_dependent_expression_p.\n\nFrom-SVN: r259044", "tree": {"sha": "5450ba70cd208e2464b9131fd7662e06e80993d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5450ba70cd208e2464b9131fd7662e06e80993d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83afe9b528896ba26d774839c930098f4833cb87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83afe9b528896ba26d774839c930098f4833cb87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83afe9b528896ba26d774839c930098f4833cb87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83afe9b528896ba26d774839c930098f4833cb87/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1456e764105702a0bb6c9be13d8eef7f21990a79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1456e764105702a0bb6c9be13d8eef7f21990a79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1456e764105702a0bb6c9be13d8eef7f21990a79"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "8759dc26642e4d62d94e7a0d1a42e374980d8fdf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83afe9b528896ba26d774839c930098f4833cb87/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83afe9b528896ba26d774839c930098f4833cb87/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=83afe9b528896ba26d774839c930098f4833cb87", "patch": "@@ -1,5 +1,8 @@\n 2018-04-03  Jason Merrill  <jason@redhat.com>\n \n+\t* semantics.c (finish_if_stmt_cond): Use\n+\tinstantiation_dependent_expression_p.\n+\n \tPR c++/85149 - generic lambda and constexpr if.\n \t* pt.c (build_extra_args, add_extra_args): Split from\n \ttsubst_pack_expansion."}, {"sha": "ef243f6bf0a764aac0fc60998348cd3f83972c29", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83afe9b528896ba26d774839c930098f4833cb87/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83afe9b528896ba26d774839c930098f4833cb87/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=83afe9b528896ba26d774839c930098f4833cb87", "patch": "@@ -733,7 +733,7 @@ finish_if_stmt_cond (tree cond, tree if_stmt)\n   if (IF_STMT_CONSTEXPR_P (if_stmt)\n       && !type_dependent_expression_p (cond)\n       && require_constant_expression (cond)\n-      && !value_dependent_expression_p (cond)\n+      && !instantiation_dependent_expression_p (cond)\n       /* Wait until instantiation time, since only then COND has been\n \t converted to bool.  */\n       && TREE_TYPE (cond) == boolean_type_node)"}]}