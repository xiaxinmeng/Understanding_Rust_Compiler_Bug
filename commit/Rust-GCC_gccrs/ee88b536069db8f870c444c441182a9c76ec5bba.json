{"sha": "ee88b536069db8f870c444c441182a9c76ec5bba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU4OGI1MzYwNjlkYjhmODcwYzQ0NGM0NDExODJhOWM3NmVjNWJiYQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-08-14T14:48:30Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-08-14T20:56:28Z"}, "message": "analyzer: fix ICE on escaped unknown pointers [PR96611]\n\nPR analyzer/96611 reports an ICE within the handling for unknown\nfunctions, when passing a pointer to something accessed via a\nglobal pointer, after an unknown function has already been called.\n\nThe first unknown function leads to the store being flagged, so\nthe access to the global pointer leads to (*unknown_svalue) for\nthe base region of the argument to the 2nd function, and thus\n*unknown_svalue being reachable by the 2nd unknown function,\ntriggering an assertion failure.\n\nHandle this case by rejecting attempts to get a cluster for\nthe unknown pointer, fixing the ICE.\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/96611\n\t* store.cc (store::mark_as_escaped): Reject attempts to\n\tget a cluster for an unknown pointer.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/96611\n\t* gcc.dg/analyzer/pr96611.c: New test.", "tree": {"sha": "437fb885cb40faf78632bd8965ab2141497c9c40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/437fb885cb40faf78632bd8965ab2141497c9c40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee88b536069db8f870c444c441182a9c76ec5bba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee88b536069db8f870c444c441182a9c76ec5bba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee88b536069db8f870c444c441182a9c76ec5bba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee88b536069db8f870c444c441182a9c76ec5bba/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e625038623df83b341a509ecd9c6a85f7837ecf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e625038623df83b341a509ecd9c6a85f7837ecf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e625038623df83b341a509ecd9c6a85f7837ecf"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "950a7784542b77cdc94790f94f92c501c2dcd9d6", "filename": "gcc/analyzer/store.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee88b536069db8f870c444c441182a9c76ec5bba/gcc%2Fanalyzer%2Fstore.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee88b536069db8f870c444c441182a9c76ec5bba/gcc%2Fanalyzer%2Fstore.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fstore.cc?ref=ee88b536069db8f870c444c441182a9c76ec5bba", "patch": "@@ -1691,6 +1691,9 @@ store::mark_as_escaped (const region *base_reg)\n   gcc_assert (base_reg);\n   gcc_assert (base_reg->get_base_region () == base_reg);\n \n+  if (base_reg->symbolic_for_unknown_ptr_p ())\n+    return;\n+\n   binding_cluster *cluster = get_or_create_cluster (base_reg);\n   cluster->mark_as_escaped ();\n }"}, {"sha": "4f7502361cbdde69523ed71a6e799b91d55082d0", "filename": "gcc/testsuite/gcc.dg/analyzer/pr96611.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee88b536069db8f870c444c441182a9c76ec5bba/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr96611.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee88b536069db8f870c444c441182a9c76ec5bba/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr96611.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr96611.c?ref=ee88b536069db8f870c444c441182a9c76ec5bba", "patch": "@@ -0,0 +1,14 @@\n+struct s { int a; } *ptr;\n+void unknown_int_ptr (int *);\n+void unknown_void (void);\n+\n+void test_1 ()\n+{\n+  unknown_int_ptr (&ptr->a);\n+}\n+\n+void test_2 ()\n+{\n+  unknown_void ();\n+  unknown_int_ptr (&ptr->a);\n+}"}]}