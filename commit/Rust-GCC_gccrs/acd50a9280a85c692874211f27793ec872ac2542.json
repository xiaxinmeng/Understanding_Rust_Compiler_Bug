{"sha": "acd50a9280a85c692874211f27793ec872ac2542", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNkNTBhOTI4MGE4NWM2OTI4NzQyMTFmMjc3OTNlYzg3MmFjMjU0Mg==", "commit": {"author": {"name": "Niibe Yutaka", "email": "gniibe@m17n.org", "date": "2000-08-16T21:17:40Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-08-16T21:17:40Z"}, "message": "lib1funcs.asm (GLOBAL): Define.\n\n* config/sh/lib1funcs.asm (GLOBAL): Define.  Use for all\nreferences to GLOBAL symbols.  Use LOCAL where appropriate.\n\nFrom-SVN: r35752", "tree": {"sha": "25629af8ed44516c6a53b36c68b6e566857b7ac0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25629af8ed44516c6a53b36c68b6e566857b7ac0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acd50a9280a85c692874211f27793ec872ac2542", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acd50a9280a85c692874211f27793ec872ac2542", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acd50a9280a85c692874211f27793ec872ac2542", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acd50a9280a85c692874211f27793ec872ac2542/comments", "author": null, "committer": null, "parents": [{"sha": "7d7aced2884786d16198777c9909cfa280702d96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d7aced2884786d16198777c9909cfa280702d96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d7aced2884786d16198777c9909cfa280702d96"}], "stats": {"total": 287, "additions": 148, "deletions": 139}, "files": [{"sha": "5add95cc397bf16b36d4b785d956264570753821", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acd50a9280a85c692874211f27793ec872ac2542/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acd50a9280a85c692874211f27793ec872ac2542/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=acd50a9280a85c692874211f27793ec872ac2542", "patch": "@@ -1,3 +1,8 @@\n+2000-08-16  Niibe Yutaka  <gniibe@m17n.org>, Kaz Kojima  <kkojima@rr.iij4u.or.jp>\n+\n+\t* config/sh/lib1funcs.asm (GLOBAL): Define.  Use for all\n+\treferences to GLOBAL symbols.  Use LOCAL where appropriate.\n+\n 2000-08-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* configure.in (*-ibm-aix4.[12]*): Delete test for gnu ld.  Always"}, {"sha": "7d7d44c5200ab464f48be6c304a1a05f8ad475fb", "filename": "gcc/config/sh/lib1funcs.asm", "status": "modified", "additions": 143, "deletions": 139, "changes": 282, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acd50a9280a85c692874211f27793ec872ac2542/gcc%2Fconfig%2Fsh%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acd50a9280a85c692874211f27793ec872ac2542/gcc%2Fconfig%2Fsh%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flib1funcs.asm?ref=acd50a9280a85c692874211f27793ec872ac2542", "patch": "@@ -42,126 +42,130 @@ Boston, MA 02111-1307, USA.  */\n #define LOCAL(X) L_##X\n #endif\n \n+#ifndef GLOBAL\n+#define GLOBAL(X) ___##X\n+#endif\n+\n #ifdef L_ashiftrt\n-\t.global\t___ashiftrt_r4_0\n-\t.global\t___ashiftrt_r4_1\n-\t.global\t___ashiftrt_r4_2\n-\t.global\t___ashiftrt_r4_3\n-\t.global\t___ashiftrt_r4_4\n-\t.global\t___ashiftrt_r4_5\n-\t.global\t___ashiftrt_r4_6\n-\t.global\t___ashiftrt_r4_7\n-\t.global\t___ashiftrt_r4_8\n-\t.global\t___ashiftrt_r4_9\n-\t.global\t___ashiftrt_r4_10\n-\t.global\t___ashiftrt_r4_11\n-\t.global\t___ashiftrt_r4_12\n-\t.global\t___ashiftrt_r4_13\n-\t.global\t___ashiftrt_r4_14\n-\t.global\t___ashiftrt_r4_15\n-\t.global\t___ashiftrt_r4_16\n-\t.global\t___ashiftrt_r4_17\n-\t.global\t___ashiftrt_r4_18\n-\t.global\t___ashiftrt_r4_19\n-\t.global\t___ashiftrt_r4_20\n-\t.global\t___ashiftrt_r4_21\n-\t.global\t___ashiftrt_r4_22\n-\t.global\t___ashiftrt_r4_23\n-\t.global\t___ashiftrt_r4_24\n-\t.global\t___ashiftrt_r4_25\n-\t.global\t___ashiftrt_r4_26\n-\t.global\t___ashiftrt_r4_27\n-\t.global\t___ashiftrt_r4_28\n-\t.global\t___ashiftrt_r4_29\n-\t.global\t___ashiftrt_r4_30\n-\t.global\t___ashiftrt_r4_31\n-\t.global\t___ashiftrt_r4_32\n+\t.global\tGLOBAL(ashiftrt_r4_0)\n+\t.global\tGLOBAL(ashiftrt_r4_1)\n+\t.global\tGLOBAL(ashiftrt_r4_2)\n+\t.global\tGLOBAL(ashiftrt_r4_3)\n+\t.global\tGLOBAL(ashiftrt_r4_4)\n+\t.global\tGLOBAL(ashiftrt_r4_5)\n+\t.global\tGLOBAL(ashiftrt_r4_6)\n+\t.global\tGLOBAL(ashiftrt_r4_7)\n+\t.global\tGLOBAL(ashiftrt_r4_8)\n+\t.global\tGLOBAL(ashiftrt_r4_9)\n+\t.global\tGLOBAL(ashiftrt_r4_10)\n+\t.global\tGLOBAL(ashiftrt_r4_11)\n+\t.global\tGLOBAL(ashiftrt_r4_12)\n+\t.global\tGLOBAL(ashiftrt_r4_13)\n+\t.global\tGLOBAL(ashiftrt_r4_14)\n+\t.global\tGLOBAL(ashiftrt_r4_15)\n+\t.global\tGLOBAL(ashiftrt_r4_16)\n+\t.global\tGLOBAL(ashiftrt_r4_17)\n+\t.global\tGLOBAL(ashiftrt_r4_18)\n+\t.global\tGLOBAL(ashiftrt_r4_19)\n+\t.global\tGLOBAL(ashiftrt_r4_20)\n+\t.global\tGLOBAL(ashiftrt_r4_21)\n+\t.global\tGLOBAL(ashiftrt_r4_22)\n+\t.global\tGLOBAL(ashiftrt_r4_23)\n+\t.global\tGLOBAL(ashiftrt_r4_24)\n+\t.global\tGLOBAL(ashiftrt_r4_25)\n+\t.global\tGLOBAL(ashiftrt_r4_26)\n+\t.global\tGLOBAL(ashiftrt_r4_27)\n+\t.global\tGLOBAL(ashiftrt_r4_28)\n+\t.global\tGLOBAL(ashiftrt_r4_29)\n+\t.global\tGLOBAL(ashiftrt_r4_30)\n+\t.global\tGLOBAL(ashiftrt_r4_31)\n+\t.global\tGLOBAL(ashiftrt_r4_32)\n \n \t.align\t1\n-___ashiftrt_r4_32:\n-___ashiftrt_r4_31:\n+GLOBAL(ashiftrt_r4_32):\n+GLOBAL(ashiftrt_r4_31):\n \trotcl\tr4\n \trts\n \tsubc\tr4,r4\n \n-___ashiftrt_r4_30:\n+GLOBAL(ashiftrt_r4_30):\n \tshar\tr4\n-___ashiftrt_r4_29:\n+GLOBAL(ashiftrt_r4_29):\n \tshar\tr4\n-___ashiftrt_r4_28:\n+GLOBAL(ashiftrt_r4_28):\n \tshar\tr4\n-___ashiftrt_r4_27:\n+GLOBAL(ashiftrt_r4_27):\n \tshar\tr4\n-___ashiftrt_r4_26:\n+GLOBAL(ashiftrt_r4_26):\n \tshar\tr4\n-___ashiftrt_r4_25:\n+GLOBAL(ashiftrt_r4_25):\n \tshar\tr4\n-___ashiftrt_r4_24:\n+GLOBAL(ashiftrt_r4_24):\n \tshlr16\tr4\n \tshlr8\tr4\n \trts\n \texts.b\tr4,r4\n \n-___ashiftrt_r4_23:\n+GLOBAL(ashiftrt_r4_23):\n \tshar\tr4\n-___ashiftrt_r4_22:\n+GLOBAL(ashiftrt_r4_22):\n \tshar\tr4\n-___ashiftrt_r4_21:\n+GLOBAL(ashiftrt_r4_21):\n \tshar\tr4\n-___ashiftrt_r4_20:\n+GLOBAL(ashiftrt_r4_20):\n \tshar\tr4\n-___ashiftrt_r4_19:\n+GLOBAL(ashiftrt_r4_19):\n \tshar\tr4\n-___ashiftrt_r4_18:\n+GLOBAL(ashiftrt_r4_18):\n \tshar\tr4\n-___ashiftrt_r4_17:\n+GLOBAL(ashiftrt_r4_17):\n \tshar\tr4\n-___ashiftrt_r4_16:\n+GLOBAL(ashiftrt_r4_16):\n \tshlr16\tr4\n \trts\n \texts.w\tr4,r4\n \n-___ashiftrt_r4_15:\n+GLOBAL(ashiftrt_r4_15):\n \tshar\tr4\n-___ashiftrt_r4_14:\n+GLOBAL(ashiftrt_r4_14):\n \tshar\tr4\n-___ashiftrt_r4_13:\n+GLOBAL(ashiftrt_r4_13):\n \tshar\tr4\n-___ashiftrt_r4_12:\n+GLOBAL(ashiftrt_r4_12):\n \tshar\tr4\n-___ashiftrt_r4_11:\n+GLOBAL(ashiftrt_r4_11):\n \tshar\tr4\n-___ashiftrt_r4_10:\n+GLOBAL(ashiftrt_r4_10):\n \tshar\tr4\n-___ashiftrt_r4_9:\n+GLOBAL(ashiftrt_r4_9):\n \tshar\tr4\n-___ashiftrt_r4_8:\n+GLOBAL(ashiftrt_r4_8):\n \tshar\tr4\n-___ashiftrt_r4_7:\n+GLOBAL(ashiftrt_r4_7):\n \tshar\tr4\n-___ashiftrt_r4_6:\n+GLOBAL(ashiftrt_r4_6):\n \tshar\tr4\n-___ashiftrt_r4_5:\n+GLOBAL(ashiftrt_r4_5):\n \tshar\tr4\n-___ashiftrt_r4_4:\n+GLOBAL(ashiftrt_r4_4):\n \tshar\tr4\n-___ashiftrt_r4_3:\n+GLOBAL(ashiftrt_r4_3):\n \tshar\tr4\n-___ashiftrt_r4_2:\n+GLOBAL(ashiftrt_r4_2):\n \tshar\tr4\n-___ashiftrt_r4_1:\n+GLOBAL(ashiftrt_r4_1):\n \trts\n \tshar\tr4\n \n-___ashiftrt_r4_0:\n+GLOBAL(ashiftrt_r4_0):\n \trts\n \tnop\n #endif\n \n #ifdef L_ashiftrt_n\n \n !\n-! ___ashrsi3\n+! GLOBAL(ashrsi3)\n !\n ! Entry:\n !\n@@ -177,9 +181,9 @@ ___ashiftrt_r4_0:\n ! (none)\n !\n \n-\t.global\t___ashrsi3\n+\t.global\tGLOBAL(ashrsi3)\n \t.align\t2\n-___ashrsi3:\n+GLOBAL(ashrsi3):\n \tmov\t#31,r0\n \tand\tr0,r5\n \tmova\tLOCAL(ashrsi3_table),r0\n@@ -310,7 +314,7 @@ LOCAL(ashrsi3_0):\n #ifdef L_ashiftlt\n \n !\n-! ___ashlsi3\n+! GLOBAL(ashlsi3)\n !\n ! Entry:\n !\n@@ -325,9 +329,9 @@ LOCAL(ashrsi3_0):\n !\n ! (none)\n !\n-\t.global\t___ashlsi3\n+\t.global\tGLOBAL(ashlsi3)\n \t.align\t2\n-___ashlsi3:\n+GLOBAL(ashlsi3):\n \tmov\t#31,r0\n \tand\tr0,r5\n \tmova\tLOCAL(ashlsi3_table),r0\n@@ -467,7 +471,7 @@ LOCAL(ashlsi3_0):\n #ifdef L_lshiftrt\n \n !\n-! ___lshrsi3\n+! GLOBAL(lshrsi3)\n !\n ! Entry:\n !\n@@ -482,9 +486,9 @@ LOCAL(ashlsi3_0):\n !\n ! (none)\n !\n-\t.global\t___lshrsi3\n+\t.global\tGLOBAL(lshrsi3)\n \t.align\t2\n-___lshrsi3:\n+GLOBAL(lshrsi3):\n \tmov\t#31,r0\n \tand\tr0,r5\n \tmova\tLOCAL(lshrsi3_table),r0\n@@ -628,84 +632,84 @@ LOCAL(lshrsi3_0):\n ! jump to movstr+\n done:\n \tadd\t#64,r5\n-\tmova\t___movstrSI0,r0\n+\tmova\tGLOBAL(movstrSI0),r0\n \tshll2\tr6\n \tadd\tr6,r0\n \tjmp\t@r0\n \tadd\t#64,r4\n \t.align\t4\n-\t.global\t___movstrSI64\n-___movstrSI64:\n+\t.global\tGLOBAL(movstrSI64)\n+GLOBAL(movstrSI64):\n \tmov.l\t@(60,r5),r0\n \tmov.l\tr0,@(60,r4)\n-\t.global\t___movstrSI60\n-___movstrSI60:\n+\t.global\tGLOBAL(movstrSI60)\n+GLOBAL(movstrSI60):\n \tmov.l\t@(56,r5),r0\n \tmov.l\tr0,@(56,r4)\n-\t.global\t___movstrSI56\n-___movstrSI56:\n+\t.global\tGLOBAL(movstrSI56)\n+GLOBAL(movstrSI56):\n \tmov.l\t@(52,r5),r0\n \tmov.l\tr0,@(52,r4)\n-\t.global\t___movstrSI52\n-___movstrSI52:\n+\t.global\tGLOBAL(movstrSI52)\n+GLOBAL(movstrSI52):\n \tmov.l\t@(48,r5),r0\n \tmov.l\tr0,@(48,r4)\n-\t.global\t___movstrSI48\n-___movstrSI48:\n+\t.global\tGLOBAL(movstrSI48)\n+GLOBAL(movstrSI48):\n \tmov.l\t@(44,r5),r0\n \tmov.l\tr0,@(44,r4)\n-\t.global\t___movstrSI44\n-___movstrSI44:\n+\t.global\tGLOBAL(movstrSI44)\n+GLOBAL(movstrSI44):\n \tmov.l\t@(40,r5),r0\n \tmov.l\tr0,@(40,r4)\n-\t.global\t___movstrSI40\n-___movstrSI40:\n+\t.global\tGLOBAL(movstrSI40)\n+GLOBAL(movstrSI40):\n \tmov.l\t@(36,r5),r0\n \tmov.l\tr0,@(36,r4)\n-\t.global\t___movstrSI36\n-___movstrSI36:\n+\t.global\tGLOBAL(movstrSI36)\n+GLOBAL(movstrSI36):\n \tmov.l\t@(32,r5),r0\n \tmov.l\tr0,@(32,r4)\n-\t.global\t___movstrSI32\n-___movstrSI32:\n+\t.global\tGLOBAL(movstrSI32)\n+GLOBAL(movstrSI32):\n \tmov.l\t@(28,r5),r0\n \tmov.l\tr0,@(28,r4)\n-\t.global\t___movstrSI28\n-___movstrSI28:\n+\t.global\tGLOBAL(movstrSI28)\n+GLOBAL(movstrSI28):\n \tmov.l\t@(24,r5),r0\n \tmov.l\tr0,@(24,r4)\n-\t.global\t___movstrSI24\n-___movstrSI24:\n+\t.global\tGLOBAL(movstrSI24)\n+GLOBAL(movstrSI24):\n \tmov.l\t@(20,r5),r0\n \tmov.l\tr0,@(20,r4)\n-\t.global\t___movstrSI20\n-___movstrSI20:\n+\t.global\tGLOBAL(movstrSI20)\n+GLOBAL(movstrSI20):\n \tmov.l\t@(16,r5),r0\n \tmov.l\tr0,@(16,r4)\n-\t.global\t___movstrSI16\n-___movstrSI16:\n+\t.global\tGLOBAL(movstrSI16)\n+GLOBAL(movstrSI16):\n \tmov.l\t@(12,r5),r0\n \tmov.l\tr0,@(12,r4)\n-\t.global\t___movstrSI12\n-___movstrSI12:\n+\t.global\tGLOBAL(movstrSI12)\n+GLOBAL(movstrSI12):\n \tmov.l\t@(8,r5),r0\n \tmov.l\tr0,@(8,r4)\n-\t.global\t___movstrSI8\n-___movstrSI8:\n+\t.global\tGLOBAL(movstrSI8)\n+GLOBAL(movstrSI8):\n \tmov.l\t@(4,r5),r0\n \tmov.l\tr0,@(4,r4)\n-\t.global\t___movstrSI4\n-___movstrSI4:\n+\t.global\tGLOBAL(movstrSI4)\n+GLOBAL(movstrSI4):\n \tmov.l\t@(0,r5),r0\n \tmov.l\tr0,@(0,r4)\n-___movstrSI0:\n+GLOBAL(movstrSI0):\n \trts\n \tnop\n \n \t.align\t4\n \n-\t.global\t___movstr\n-___movstr:\n+\t.global\tGLOBAL(movstr)\n+GLOBAL(movstr):\n \tmov.l\t@(60,r5),r0\n \tmov.l\tr0,@(60,r4)\n \n@@ -759,16 +763,16 @@ ___movstr:\n \tbf\tdone\n \n \tadd\t#64,r5\n-\tbra\t___movstr\n+\tbra\tGLOBAL(movstr)\n \tadd\t#64,r4\n #endif\n \n #ifdef L_movstr_i4\n #if defined(__SH4__) || defined(__SH4_SINGLE__) || defined(__SH4_SINGLE_ONLY__)\n \t.text\n-\t.global\t___movstr_i4_even\n-\t.global\t___movstr_i4_odd\n-\t.global\t___movstrSI12_i4\n+\t.global\tGLOBAL(movstr_i4_even)\n+\t.global\tGLOBAL(movstr_i4_odd)\n+\t.global\tGLOBAL(movstrSI12_i4)\n \n \t.p2align\t5\n L_movstr_2mod4_end:\n@@ -778,7 +782,7 @@ L_movstr_2mod4_end:\n \n \t.p2align\t2\n \n-___movstr_i4_odd:\n+GLOBAL(movstr_i4_odd):\n \tmov.l\t@r5+,r1\n \tadd\t#-4,r4\n \tmov.l\t@r5+,r2\n@@ -804,13 +808,13 @@ L_movstr_start_even:\n \trts\n \tmov.l\tr3,@(12,r4)\n \n-___movstr_i4_even:\n+GLOBAL(movstr_i4_even):\n \tmov.l\t@r5+,r0\n \tbra\tL_movstr_start_even\n \tmov.l\t@r5+,r1\n \n \t.p2align\t4\n-___movstrSI12_i4:\n+GLOBAL(movstrSI12_i4):\n \tmov.l\t@r5,r0\n \tmov.l\t@(4,r5),r1\n \tmov.l\t@(8,r5),r2\n@@ -824,7 +828,7 @@ ___movstrSI12_i4:\n #ifdef L_mulsi3\n \n \n-\t.global\t___mulsi3\n+\t.global\tGLOBAL(mulsi3)\n \n ! r4 =       aabb\n ! r5 =       ccdd\n@@ -837,7 +841,7 @@ ___movstrSI12_i4:\n ! aa = bb*dd + (aa*dd*65536) + (cc*bb*65536)\n !\n \n-___mulsi3:\n+GLOBAL(mulsi3):\n \tmulu    r4,r5\t\t! multiply the lsws  macl=bb*dd\n \tmov     r5,r3\t\t! r3 = ccdd\n \tswap.w  r4,r2\t\t! r2 = bbaa\n@@ -865,8 +869,8 @@ hiset:\tsts\tmacl,r0\t\t! r0 = bb*dd\n #ifdef __SH4__\n !! args in r4 and r5, result in fpul, clobber dr0, dr2\n \n-\t.global\t___sdivsi3_i4\n-___sdivsi3_i4:\n+\t.global\tGLOBAL(sdivsi3_i4)\n+GLOBAL(sdivsi3_i4):\n \tlds r4,fpul\n \tfloat fpul,dr0\n \tlds r5,fpul\n@@ -878,8 +882,8 @@ ___sdivsi3_i4:\n #elif defined(__SH4_SINGLE__) || defined(__SH4_SINGLE_ONLY__)\n !! args in r4 and r5, result in fpul, clobber r2, dr0, dr2\n \n-\t.global\t___sdivsi3_i4\n-___sdivsi3_i4:\n+\t.global\tGLOBAL(sdivsi3_i4)\n+GLOBAL(sdivsi3_i4):\n \tsts.l fpscr,@-r15\n \tmov #8,r2\n \tswap.w r2,r2\n@@ -908,8 +912,8 @@ ___sdivsi3_i4:\n \n !! args in r4 and r5, result in r0 clobber r1,r2,r3\n \n-\t.global\t___sdivsi3\n-___sdivsi3:\n+\t.global\tGLOBAL(sdivsi3)\n+GLOBAL(sdivsi3):\n \tmov\tr4,r1\n \tmov\tr5,r0\n \n@@ -1002,8 +1006,8 @@ div0:\trts\n #ifdef __SH4__\n !! args in r4 and r5, result in fpul, clobber r0, r1, r4, r5, dr0, dr2, dr4\n \n-\t.global\t___udivsi3_i4\n-___udivsi3_i4:\n+\t.global\tGLOBAL(udivsi3_i4)\n+GLOBAL(udivsi3_i4):\n \tmov #1,r1\n \tcmp/hi r1,r5\n \tbf trivial\n@@ -1046,8 +1050,8 @@ L1:\n #elif defined(__SH4_SINGLE__) || defined(__SH4_SINGLE_ONLY__)\n !! args in r4 and r5, result in fpul, clobber r0, r1, r4, r5, dr0, dr2, dr4\n \n-\t.global\t___udivsi3_i4\n-___udivsi3_i4:\n+\t.global\tGLOBAL(udivsi3_i4)\n+GLOBAL(udivsi3_i4):\n \tmov #1,r1\n \tcmp/hi r1,r5\n \tbf trivial\n@@ -1109,9 +1113,9 @@ L1:\n !!\n \n !! args in r4 and r5, result in r0, clobbers r4, pr, and t bit\n-\t.global\t___udivsi3\n+\t.global\tGLOBAL(udivsi3)\n \n-___udivsi3:\n+GLOBAL(udivsi3):\n longway:\n \tmov\t#0,r0\n \tdiv0u\n@@ -1163,10 +1167,10 @@ ret:\trts\n #endif\n #ifdef L_set_fpscr\n #if defined (__SH3E__) || defined(__SH4_SINGLE__) || defined(__SH4__) || defined(__SH4_SINGLE_ONLY__)\n-\t.global ___set_fpscr\n-___set_fpscr:\n+\t.global GLOBAL(set_fpscr)\n+GLOBAL(set_fpscr):\n \tlds r4,fpscr\n-\tmov.l ___set_fpscr_L1,r1\n+\tmov.l LOCAL(set_fpscr_L1),r1\n \tswap.w r4,r0\n \tor #24,r0\n #ifndef FMOVD_WORKS\n@@ -1194,12 +1198,12 @@ ___set_fpscr:\n \tmov.l r3,@(4,r1)\n #endif\n \t.align 2\n-___set_fpscr_L1:\n-\t.long ___fpscr_values\n+LOCAL(set_fpscr_L1):\n+\t.long GLOBAL(fpscr_values)\n #ifdef __ELF__\n-        .comm   ___fpscr_values,8,4\n+        .comm   GLOBAL(fpscr_values),8,4\n #else\n-        .comm   ___fpscr_values,8\n+        .comm   GLOBAL(fpscr_values),8\n #endif /* ELF */\n #endif /* SH3E / SH4 */\n #endif /* L_set_fpscr */"}]}