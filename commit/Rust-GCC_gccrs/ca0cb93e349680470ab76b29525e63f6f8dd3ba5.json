{"sha": "ca0cb93e349680470ab76b29525e63f6f8dd3ba5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EwY2I5M2UzNDk2ODA0NzBhYjc2YjI5NTI1ZTYzZjZmOGRkM2JhNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-18T19:48:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-18T19:48:43Z"}, "message": "[multiple changes]\n\n2010-06-18  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb (Build_And_Analyze_Renamed_Body): If the renaming\n\tdeclaration appears in the same unit and ealier than the renamed\n\tentity, retain generated body to prevent order-of-elaboration issues in\n\tgigi.\n\n2010-06-18  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-tpoben.adb: Update comments.\n\n2010-06-18  Robert Dewar  <dewar@adacore.com>\n\n\t* debug.adb: Minor comment change.\n\nFrom-SVN: r161010", "tree": {"sha": "f025f60bafaee20c328c94c38e321e219aa0b1b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f025f60bafaee20c328c94c38e321e219aa0b1b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca0cb93e349680470ab76b29525e63f6f8dd3ba5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca0cb93e349680470ab76b29525e63f6f8dd3ba5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca0cb93e349680470ab76b29525e63f6f8dd3ba5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca0cb93e349680470ab76b29525e63f6f8dd3ba5/comments", "author": null, "committer": null, "parents": [{"sha": "dc2cf706b84723741ca863f04fcfde3834e60747", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc2cf706b84723741ca863f04fcfde3834e60747", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc2cf706b84723741ca863f04fcfde3834e60747"}], "stats": {"total": 68, "additions": 48, "deletions": 20}, "files": [{"sha": "965e7b2f45080961b15d6465e3bc0312189d37c8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0cb93e349680470ab76b29525e63f6f8dd3ba5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0cb93e349680470ab76b29525e63f6f8dd3ba5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ca0cb93e349680470ab76b29525e63f6f8dd3ba5", "patch": "@@ -1,3 +1,18 @@\n+2010-06-18  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Build_And_Analyze_Renamed_Body): If the renaming\n+\tdeclaration appears in the same unit and ealier than the renamed\n+\tentity, retain generated body to prevent order-of-elaboration issues in\n+\tgigi.\n+\n+2010-06-18  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-tpoben.adb: Update comments.\n+\n+2010-06-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* debug.adb: Minor comment change.\n+\n 2010-06-18  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_cg.adb: Code clean up."}, {"sha": "b7f750d506f078986df6662354514299dffc0738", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0cb93e349680470ab76b29525e63f6f8dd3ba5/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0cb93e349680470ab76b29525e63f6f8dd3ba5/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=ca0cb93e349680470ab76b29525e63f6f8dd3ba5", "patch": "@@ -597,8 +597,10 @@ package body Debug is\n    --       scheme has problems.\n \n    --  d.Z  This flag enables the frontend call-graph output associated with\n-   --       dispatching calls. Available only during the development of this\n-   --       new output.\n+   --       dispatching calls. This is a temporary debug flag to be used during\n+   --       development of this output. Once it works, it will always be output\n+   --       (as part of the standard call-graph output) by default, and this\n+   --       flag will be removed.\n \n    --  d1   Error messages have node numbers where possible. Normally error\n    --       messages have only source locations. This option is useful when"}, {"sha": "e69bb765f04f2f66bb4a598f80012deed0721341", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 24, "deletions": 13, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0cb93e349680470ab76b29525e63f6f8dd3ba5/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0cb93e349680470ab76b29525e63f6f8dd3ba5/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=ca0cb93e349680470ab76b29525e63f6f8dd3ba5", "patch": "@@ -36,6 +36,7 @@ with Exp_Pakd; use Exp_Pakd;\n with Exp_Util; use Exp_Util;\n with Exp_Tss;  use Exp_Tss;\n with Layout;   use Layout;\n+with Lib;      use Lib;\n with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n@@ -203,32 +204,42 @@ package body Freeze is\n       New_S : Entity_Id;\n       After : in out Node_Id)\n    is\n-      Body_Node :  Node_Id;\n-      Intr      : Entity_Id;\n-      Body_Decl : constant Node_Id := Unit_Declaration_Node (New_S);\n-      Ent       : constant Entity_Id := Defining_Entity (Decl);\n+      Body_Decl    : constant Node_Id := Unit_Declaration_Node (New_S);\n+      Ent          : constant Entity_Id := Defining_Entity (Decl);\n+      Body_Node    : Node_Id;\n+      Renamed_Subp : Entity_Id;\n \n    begin\n \n       --  if the renamed subprogram is intrinsic, there is no need for a\n       --  wrapper body: we set the alias that will be called and expanded\n-      --  which completes the declaration.\n+      --  which completes the declaration. This transformation is only\n+      --  legal if the renamed entity has already been elaborated.\n+\n       --  Note that it is legal for a renaming_as_body to rename an intrinsic\n       --  subprogram, as long as the renaming occurs before the new entity\n       --  is frozen. See RM 8.5.4 (5).\n \n       if Nkind (Body_Decl) = N_Subprogram_Renaming_Declaration\n          and then Is_Entity_Name (Name (Body_Decl))\n-        and then Is_Intrinsic_Subprogram (Entity (Name (Body_Decl)))\n-        and then Present (Interface_Name (Entity (Name (Body_Decl))))\n       then\n-         Intr := Entity (Name (Body_Decl));\n-         Set_Interface_Name\n-           (Intr, Interface_Name (Entity (Name (Body_Decl))));\n-         if Present (Alias (Intr)) then\n-            Set_Alias (Ent, Alias (Intr));\n+         Renamed_Subp := Entity (Name (Body_Decl));\n+      else\n+         Renamed_Subp := Empty;\n+      end if;\n+\n+      if Present (Renamed_Subp)\n+        and then Is_Intrinsic_Subprogram (Renamed_Subp)\n+        and then Present (Interface_Name (Renamed_Subp))\n+        and then\n+          (not In_Same_Source_Unit (Renamed_Subp, Ent)\n+            or else Sloc (Renamed_Subp) < Sloc (Ent))\n+      then\n+         Set_Interface_Name (Ent, Interface_Name (Renamed_Subp));\n+         if Present (Alias (Renamed_Subp)) then\n+            Set_Alias (Ent, Alias (Renamed_Subp));\n          else\n-            Set_Alias (Ent, Intr);\n+            Set_Alias (Ent, Renamed_Subp);\n          end if;\n \n          Set_Is_Intrinsic_Subprogram (Ent);"}, {"sha": "ba2bf6c267a441769563834378d544f5306f2913", "filename": "gcc/ada/s-tpoben.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0cb93e349680470ab76b29525e63f6f8dd3ba5/gcc%2Fada%2Fs-tpoben.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0cb93e349680470ab76b29525e63f6f8dd3ba5/gcc%2Fada%2Fs-tpoben.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpoben.adb?ref=ca0cb93e349680470ab76b29525e63f6f8dd3ba5", "patch": "@@ -226,12 +226,12 @@ package body System.Tasking.Protected_Objects.Entries is\n          raise Program_Error;\n       end if;\n \n-      --  pragma Assert (Self_Id.Deferral_Level = 0);\n       --  If a PO is created from a controlled operation, abort is already\n-      --  deferred at this point, so we need to use Defer_Abort_Nestable\n-      --  In some cases, the above assertion can be useful to spot\n-      --  inconsistencies, outside the above scenario involving controlled\n-      --  types.\n+      --  deferred at this point, so we need to use Defer_Abort_Nestable. In\n+      --  some cases, the following assertion can help to spot inconsistencies,\n+      --  outside the above scenario involving controlled types.\n+\n+      --  pragma Assert (Self_Id.Deferral_Level = 0);\n \n       Initialization.Defer_Abort_Nestable (Self_ID);\n       Initialize_Lock (Init_Priority, Object.L'Access);"}]}