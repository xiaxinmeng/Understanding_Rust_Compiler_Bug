{"sha": "07f0879956c74d3ae0db9e83e5b35153979f4da3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdmMDg3OTk1NmM3NGQzYWUwZGI5ZTgzZTViMzUxNTM5NzlmNGRhMw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2005-09-30T00:33:26Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-09-30T00:33:26Z"}, "message": "re PR java/24120 (jc1 incorrectly uses libiberty hashes)\n\n\tPR java/24120:\n\t* jcf-io.c (memoized_dirlist_hash): New function.\n\t(caching_stat): Use it.\n\nFrom-SVN: r104809", "tree": {"sha": "83c0b6cc2a21699fc5a0d65372bad7330a01849c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83c0b6cc2a21699fc5a0d65372bad7330a01849c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07f0879956c74d3ae0db9e83e5b35153979f4da3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07f0879956c74d3ae0db9e83e5b35153979f4da3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07f0879956c74d3ae0db9e83e5b35153979f4da3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07f0879956c74d3ae0db9e83e5b35153979f4da3/comments", "author": null, "committer": null, "parents": [{"sha": "edbcf8fd551af7ba17732703950e635bc3fccea5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edbcf8fd551af7ba17732703950e635bc3fccea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edbcf8fd551af7ba17732703950e635bc3fccea5"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "b227a68f7e7b0df08fe5adc29c5319d807f4c1cc", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07f0879956c74d3ae0db9e83e5b35153979f4da3/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07f0879956c74d3ae0db9e83e5b35153979f4da3/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=07f0879956c74d3ae0db9e83e5b35153979f4da3", "patch": "@@ -1,3 +1,9 @@\n+2005-09-29  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR java/24120:\n+\t* jcf-io.c (memoized_dirlist_hash): New function.\n+\t(caching_stat): Use it.\n+\n 2005-09-21  Ranjit Mathew  <rmathew@gcc.gnu.org>\n \n \tPR java/21418"}, {"sha": "9b9be0a4f5a1251c43bb0a1432bb59ff168506ef", "filename": "gcc/java/jcf-io.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07f0879956c74d3ae0db9e83e5b35153979f4da3/gcc%2Fjava%2Fjcf-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07f0879956c74d3ae0db9e83e5b35153979f4da3/gcc%2Fjava%2Fjcf-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-io.c?ref=07f0879956c74d3ae0db9e83e5b35153979f4da3", "patch": "@@ -311,6 +311,14 @@ typedef struct memoized_dirlist_entry\n   struct dirent **files;\n } memoized_dirlist_entry;\n \n+/* A hash function for a memoized_dirlist_entry.  */\n+static hashval_t\n+memoized_dirlist_hash (const void *entry)\n+{\n+  const memoized_dirlist_entry *mde = (const memoized_dirlist_entry *) entry;\n+  return htab_hash_string (mde->dir);\n+}\n+\n /* Returns true if ENTRY (a memoized_dirlist_entry *) corresponds to\n    the directory given by KEY (a char *) giving the directory \n    name.  */\n@@ -341,11 +349,12 @@ caching_stat (char *filename, struct stat *buf)\n   char *base;\n   memoized_dirlist_entry *dent;\n   void **slot;\n+  struct memoized_dirlist_entry temp;\n   \n   /* If the hashtable has not already been created, create it now.  */\n   if (!memoized_dirlists)\n     memoized_dirlists = htab_create (37,\n-\t\t\t\t     htab_hash_string,\n+\t\t\t\t     memoized_dirlist_hash,\n \t\t\t\t     memoized_dirlist_lookup_eq,\n \t\t\t\t     NULL);\n \n@@ -364,8 +373,13 @@ caching_stat (char *filename, struct stat *buf)\n   else\n     base = filename;\n \n-  /* Obtain the entry for this directory from the hash table.  */\n-  slot = htab_find_slot (memoized_dirlists, filename, INSERT);\n+  /* Obtain the entry for this directory from the hash table.  This\n+     approach is ok since we know that the hash function only looks at\n+     the directory name.  */\n+  temp.dir = filename;\n+  temp.num_files = 0;\n+  temp.files = NULL;\n+  slot = htab_find_slot (memoized_dirlists, &temp, INSERT);\n   if (!*slot)\n     {\n       /* We have not already scanned this directory; scan it now.  */"}]}