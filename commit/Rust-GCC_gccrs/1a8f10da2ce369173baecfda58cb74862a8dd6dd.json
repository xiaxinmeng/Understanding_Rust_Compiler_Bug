{"sha": "1a8f10da2ce369173baecfda58cb74862a8dd6dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE4ZjEwZGEyY2UzNjkxNzNiYWVjZmRhNThjYjc0ODYyYThkZDZkZA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2003-03-04T21:21:44Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2003-03-04T21:21:44Z"}, "message": "strstream.cc (strstreambuf::overflow): Make sure operands of min and max have the same type.\n\n* src/strstream.cc (strstreambuf::overflow): Make sure operands of\nmin and max have the same type.\n* include/bits/basic_string.tcc (append, rfind, compare): Likewise.\n\nFrom-SVN: r63802", "tree": {"sha": "c3aaad807a936f27fecc4b2ee33fcdace0f8599b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3aaad807a936f27fecc4b2ee33fcdace0f8599b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a8f10da2ce369173baecfda58cb74862a8dd6dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a8f10da2ce369173baecfda58cb74862a8dd6dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a8f10da2ce369173baecfda58cb74862a8dd6dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a8f10da2ce369173baecfda58cb74862a8dd6dd/comments", "author": null, "committer": null, "parents": [{"sha": "ec4a0419ad5374ad56137458e8de8bc4047cebe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec4a0419ad5374ad56137458e8de8bc4047cebe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec4a0419ad5374ad56137458e8de8bc4047cebe3"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "4ada08799e371a01e8f151aa97a7330f383447a1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a8f10da2ce369173baecfda58cb74862a8dd6dd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a8f10da2ce369173baecfda58cb74862a8dd6dd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1a8f10da2ce369173baecfda58cb74862a8dd6dd", "patch": "@@ -1,3 +1,9 @@\n+2003-03-04  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* src/strstream.cc (strstreambuf::overflow): Make sure operands of\n+\tmin and max have the same type.\n+\t* include/bits/basic_string.tcc (append, rfind, compare): Likewise.\n+\n 2003-03-04  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/Makefile.am (allstamps): Remove stamp-std-precompile."}, {"sha": "78f889ce0e8cdbd383879f3e1ee34f74feaa01fc", "filename": "libstdc++-v3/include/bits/basic_string.tcc", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a8f10da2ce369173baecfda58cb74862a8dd6dd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a8f10da2ce369173baecfda58cb74862a8dd6dd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc?ref=1a8f10da2ce369173baecfda58cb74862a8dd6dd", "patch": "@@ -578,7 +578,8 @@ namespace std\n       // Iff appending itself, string needs to pre-reserve the\n       // correct size so that _M_mutate does not clobber the\n       // iterators formed here.\n-      size_type __len = std::min(__str.size() - __pos, __n) + this->size();\n+      size_type __len = std::min(size_type (__str.size() - __pos),\n+\t\t\t\t __n) + this->size();\n       if (__len > this->capacity())\n \tthis->reserve(__len);\n       return _M_replace_safe(_M_iend(), _M_iend(), __str._M_check(__pos),\n@@ -709,7 +710,7 @@ namespace std\n       size_type __size = this->size();\n       if (__n <= __size)\n \t{\n-\t  __pos = std::min(__size - __n, __pos);\n+\t  __pos = std::min(size_type (__size - __n), __pos);\n \t  const _CharT* __data = _M_data();\n \t  do \n \t    {\n@@ -848,7 +849,7 @@ namespace std\n       if (__pos > __size)\n \t__throw_out_of_range(\"basic_string::compare\");\n       \n-      size_type __rsize= std::min(__size - __pos, __n);\n+      size_type __rsize= std::min(size_type (__size - __pos), __n);\n       size_type __len = std::min(__rsize, __osize);\n       int __r = traits_type::compare(_M_data() + __pos, __str.data(), __len);\n       if (!__r)\n@@ -867,8 +868,8 @@ namespace std\n       if (__pos1 > __size || __pos2 > __osize)\n \t__throw_out_of_range(\"basic_string::compare\");\n       \n-      size_type __rsize = std::min(__size - __pos1, __n1);\n-      size_type __rosize = std::min(__osize - __pos2, __n2);\n+      size_type __rsize = std::min(size_type (__size - __pos1), __n1);\n+      size_type __rosize = std::min(size_type (__osize - __pos2), __n2);\n       size_type __len = std::min(__rsize, __rosize);\n       int __r = traits_type::compare(_M_data() + __pos1, \n \t\t\t\t     __str.data() + __pos2, __len);\n@@ -903,7 +904,7 @@ namespace std\n \t__throw_out_of_range(\"basic_string::compare\");\n       \n       size_type __osize = traits_type::length(__s);\n-      size_type __rsize = std::min(__size - __pos, __n1);\n+      size_type __rsize = std::min(size_type (__size - __pos), __n1);\n       size_type __len = std::min(__rsize, __osize);\n       int __r = traits_type::compare(_M_data() + __pos, __s, __len);\n       if (!__r)\n@@ -922,7 +923,7 @@ namespace std\n \t__throw_out_of_range(\"basic_string::compare\");\n       \n       size_type __osize = std::min(traits_type::length(__s), __n2);\n-      size_type __rsize = std::min(__size - __pos, __n1);\n+      size_type __rsize = std::min(size_type (__size - __pos), __n1);\n       size_type __len = std::min(__rsize, __osize);\n       int __r = traits_type::compare(_M_data() + __pos, __s, __len);\n       if (!__r)"}, {"sha": "a030697f68d218e8995fa5c839066a2c3946e9e4", "filename": "libstdc++-v3/src/strstream.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a8f10da2ce369173baecfda58cb74862a8dd6dd/libstdc%2B%2B-v3%2Fsrc%2Fstrstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a8f10da2ce369173baecfda58cb74862a8dd6dd/libstdc%2B%2B-v3%2Fsrc%2Fstrstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fstrstream.cc?ref=1a8f10da2ce369173baecfda58cb74862a8dd6dd", "patch": "@@ -1,6 +1,6 @@\n // strstream definitions -*- C++ -*-\n \n-// Copyright (C) 2001, 2002 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -148,7 +148,7 @@ namespace std\n     if (pptr() == epptr() && _M_dynamic && !_M_frozen && !_M_constant) \n       {\n \tptrdiff_t old_size = epptr() - pbase();\n-\tptrdiff_t new_size = std::max(2 * old_size, ptrdiff_t(1));\n+\tptrdiff_t new_size = std::max(ptrdiff_t (2 * old_size), ptrdiff_t (1));\n \t\n \tchar* buf = _M_alloc(new_size);\n \tif (buf) "}]}