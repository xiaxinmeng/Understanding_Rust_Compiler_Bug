{"sha": "7a1df4e2d7d4c30d2fce7557ae13e23deb910f20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ExZGY0ZTJkN2Q0YzMwZDJmY2U3NTU3YWUxM2UyM2RlYjkxMGYyMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-06-26T05:21:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-06-26T05:21:25Z"}, "message": "trans-stmt.c (gfc_trans_forall_1): Prefer to use smaller logical type than boolean_type_node.\n\n\t* trans-stmt.c (gfc_trans_forall_1): Prefer to use smaller logical\n\ttype than boolean_type_node.\n\nFrom-SVN: r101331", "tree": {"sha": "274dc1c86917a65489986a9ef531616d122ef086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/274dc1c86917a65489986a9ef531616d122ef086"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a1df4e2d7d4c30d2fce7557ae13e23deb910f20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a1df4e2d7d4c30d2fce7557ae13e23deb910f20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a1df4e2d7d4c30d2fce7557ae13e23deb910f20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a1df4e2d7d4c30d2fce7557ae13e23deb910f20/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03fd9aa2c7184aa67dbbbd9f1d546f395e0c67be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03fd9aa2c7184aa67dbbbd9f1d546f395e0c67be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03fd9aa2c7184aa67dbbbd9f1d546f395e0c67be"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "e18ab3fe1cd3056d53c783a24a37f8d9f3156f4f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a1df4e2d7d4c30d2fce7557ae13e23deb910f20/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a1df4e2d7d4c30d2fce7557ae13e23deb910f20/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7a1df4e2d7d4c30d2fce7557ae13e23deb910f20", "patch": "@@ -1,3 +1,8 @@\n+2005-06-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* trans-stmt.c (gfc_trans_forall_1): Prefer to use smaller logical\n+\ttype than boolean_type_node.\n+\n 2005-06-25  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* all files: Update FSF address in copyright headers."}, {"sha": "8fda557de1b8556b57483d2b2ef10ea6adafdd90", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a1df4e2d7d4c30d2fce7557ae13e23deb910f20/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a1df4e2d7d4c30d2fce7557ae13e23deb910f20/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=7a1df4e2d7d4c30d2fce7557ae13e23deb910f20", "patch": "@@ -2411,11 +2411,17 @@ gfc_trans_forall_1 (gfc_code * code, forall_info * nested_forall_info)\n      For now we assume a mask temporary is needed.  */\n   if (code->expr)\n     {\n+      /* As the mask array can be very big, prefer compact\n+\t boolean types.  */\n+      tree smallest_boolean_type_node\n+\t= gfc_get_logical_type (gfc_logical_kinds[0].kind);\n+\n       /* Allocate the mask temporary.  */\n       bytesize = fold_build2 (MULT_EXPR, gfc_array_index_type, size,\n-\t\t\t      TYPE_SIZE_UNIT (boolean_type_node));\n+\t\t\t      TYPE_SIZE_UNIT (smallest_boolean_type_node));\n \n-      mask = gfc_do_allocate (bytesize, size, &pmask, &block, boolean_type_node);\n+      mask = gfc_do_allocate (bytesize, size, &pmask, &block,\n+\t\t\t      smallest_boolean_type_node);\n \n       maskindex = gfc_create_var_np (gfc_array_index_type, \"mi\");\n       /* Record them in the info structure.  */\n@@ -2434,7 +2440,7 @@ gfc_trans_forall_1 (gfc_code * code, forall_info * nested_forall_info)\n       gfc_add_block_to_block (&body, &se.pre);\n \n       /* Store the mask.  */\n-      se.expr = convert (boolean_type_node, se.expr);\n+      se.expr = convert (smallest_boolean_type_node, se.expr);\n \n       if (pmask)\n \ttmp = gfc_build_indirect_ref (mask);"}]}