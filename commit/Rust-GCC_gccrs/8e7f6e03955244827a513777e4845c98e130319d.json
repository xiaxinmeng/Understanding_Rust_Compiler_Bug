{"sha": "8e7f6e03955244827a513777e4845c98e130319d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU3ZjZlMDM5NTUyNDQ4MjdhNTEzNzc3ZTQ4NDVjOThlMTMwMzE5ZA==", "commit": {"author": {"name": "Jonathan Wright", "email": "jonathan.wright@arm.com", "date": "2021-02-09T01:14:00Z"}, "committer": {"name": "Jonathan Wright", "email": "jonathan.wright@arm.com", "date": "2021-04-28T20:11:35Z"}, "message": "aarch64: Use RTL builtins for vpadal_[su]32 intrinsics\n\nRewrite vpadal_[su]32 Neon intrinsics to use RTL builtins rather than\ninline assembly code, allowing for better scheduling and\noptimization.\n\ngcc/ChangeLog:\n\n2021-02-09  Jonathan Wright  <jonathan.wright@arm.com>\n\n\t* config/aarch64/aarch64-simd-builtins.def: Use VDQV_L\n\titerator to generate [su]adalp RTL builtins.\n\t* config/aarch64/aarch64-simd.md: Use VDQV_L iterator in\n\t[su]adalp RTL pattern.\n\t* config/aarch64/arm_neon.h (vpadal_s32): Use RTL builtin\n\tinstead of inline asm.\n\t(vpadal_u32): Likewise.", "tree": {"sha": "5c545953cf517140fae1005dca5a53662d621253", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c545953cf517140fae1005dca5a53662d621253"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e7f6e03955244827a513777e4845c98e130319d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7f6e03955244827a513777e4845c98e130319d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e7f6e03955244827a513777e4845c98e130319d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7f6e03955244827a513777e4845c98e130319d/comments", "author": {"login": "jwright-arm", "id": 31624044, "node_id": "MDQ6VXNlcjMxNjI0MDQ0", "avatar_url": "https://avatars.githubusercontent.com/u/31624044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwright-arm", "html_url": "https://github.com/jwright-arm", "followers_url": "https://api.github.com/users/jwright-arm/followers", "following_url": "https://api.github.com/users/jwright-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jwright-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwright-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwright-arm/subscriptions", "organizations_url": "https://api.github.com/users/jwright-arm/orgs", "repos_url": "https://api.github.com/users/jwright-arm/repos", "events_url": "https://api.github.com/users/jwright-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jwright-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwright-arm", "id": 31624044, "node_id": "MDQ6VXNlcjMxNjI0MDQ0", "avatar_url": "https://avatars.githubusercontent.com/u/31624044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwright-arm", "html_url": "https://github.com/jwright-arm", "followers_url": "https://api.github.com/users/jwright-arm/followers", "following_url": "https://api.github.com/users/jwright-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jwright-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwright-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwright-arm/subscriptions", "organizations_url": "https://api.github.com/users/jwright-arm/orgs", "repos_url": "https://api.github.com/users/jwright-arm/repos", "events_url": "https://api.github.com/users/jwright-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jwright-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa18085a32df06be6e7d899fd804d537c0149baf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa18085a32df06be6e7d899fd804d537c0149baf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa18085a32df06be6e7d899fd804d537c0149baf"}], "stats": {"total": 22, "additions": 6, "deletions": 16}, "files": [{"sha": "202f69005e58feec2e552e8b0486cdffeb0b647d", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7f6e03955244827a513777e4845c98e130319d/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7f6e03955244827a513777e4845c98e130319d/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=8e7f6e03955244827a513777e4845c98e130319d", "patch": "@@ -170,8 +170,8 @@\n   BUILTIN_VDQ_BHSI (TERNOP, saba, 0, NONE)\n   BUILTIN_VDQ_BHSI (TERNOPU, uaba, 0, NONE)\n \n-  BUILTIN_VDQV_S (BINOP, sadalp, 0, NONE)\n-  BUILTIN_VDQV_S (BINOPU, uadalp, 0, NONE)\n+  BUILTIN_VDQV_L (BINOP, sadalp, 0, NONE)\n+  BUILTIN_VDQV_L (BINOPU, uadalp, 0, NONE)\n \n   /* Implemented by aarch64_<sur>abal<mode>.  */\n   BUILTIN_VD_BHSI (TERNOP, sabal, 0, NONE)"}, {"sha": "565ce5a4071cd093a06b0c4b40129c9e98bf66bb", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7f6e03955244827a513777e4845c98e130319d/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7f6e03955244827a513777e4845c98e130319d/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=8e7f6e03955244827a513777e4845c98e130319d", "patch": "@@ -904,8 +904,8 @@\n \n (define_insn \"aarch64_<sur>adalp<mode>\"\n   [(set (match_operand:<VDBLW> 0 \"register_operand\" \"=w\")\n-\t(unspec:<VDBLW> [(match_operand:VDQV_S 2 \"register_operand\" \"w\")\n-\t\t\t  (match_operand:<VDBLW> 1 \"register_operand\" \"0\")]\n+\t(unspec:<VDBLW> [(match_operand:VDQV_L 2 \"register_operand\" \"w\")\n+\t\t\t (match_operand:<VDBLW> 1 \"register_operand\" \"0\")]\n \tADALP))]\n   \"TARGET_SIMD\"\n   \"<sur>adalp\\t%0.<Vwhalf>, %2.<Vtype>\""}, {"sha": "164c76d3f7bffb8ba287959400d21405bd0239e0", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e7f6e03955244827a513777e4845c98e130319d/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e7f6e03955244827a513777e4845c98e130319d/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=8e7f6e03955244827a513777e4845c98e130319d", "patch": "@@ -8449,12 +8449,7 @@ __extension__ extern __inline int64x1_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vpadal_s32 (int64x1_t __a, int32x2_t __b)\n {\n-  int64x1_t __result;\n-  __asm__ (\"sadalp %0.1d,%2.2s\"\n-           : \"=w\"(__result)\n-           : \"0\"(__a), \"w\"(__b)\n-           : /* No clobbers */);\n-  return __result;\n+  return (int64x1_t) __builtin_aarch64_sadalpv2si (__a[0], __b);\n }\n \n __extension__ extern __inline uint16x4_t\n@@ -8475,12 +8470,7 @@ __extension__ extern __inline uint64x1_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vpadal_u32 (uint64x1_t __a, uint32x2_t __b)\n {\n-  uint64x1_t __result;\n-  __asm__ (\"uadalp %0.1d,%2.2s\"\n-           : \"=w\"(__result)\n-           : \"0\"(__a), \"w\"(__b)\n-           : /* No clobbers */);\n-  return __result;\n+  return (uint64x1_t) __builtin_aarch64_uadalpv2si_uuu (__a[0], __b);\n }\n \n __extension__ extern __inline int16x8_t"}]}