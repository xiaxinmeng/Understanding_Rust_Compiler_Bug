{"sha": "f53ea4f08975910c2e92eda9ebe0785845e42247", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUzZWE0ZjA4OTc1OTEwYzJlOTJlZGE5ZWJlMDc4NTg0NWU0MjI0Nw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-07-30T13:06:04Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-07-30T13:06:04Z"}, "message": "i386.md (int_cond): Remove code iterator.\n\n\t* config/i386/i386.md (int_cond): Remove code iterator.\n\t(fp_cond): Ditto.\n\t(cbranch<mode>4): Use ordered_comparison_operator predicate\n\tfor operator0.\n\t(cstore<mode>4): Ditto for operator1.\n\t(mov<SWIM:mode>cc): Ditto.\n\nFrom-SVN: r162710", "tree": {"sha": "0a77ad39aaf890ee76a80130ef23a74f35091a6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a77ad39aaf890ee76a80130ef23a74f35091a6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f53ea4f08975910c2e92eda9ebe0785845e42247", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f53ea4f08975910c2e92eda9ebe0785845e42247", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f53ea4f08975910c2e92eda9ebe0785845e42247", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f53ea4f08975910c2e92eda9ebe0785845e42247/comments", "author": null, "committer": null, "parents": [{"sha": "1f60f74e3fb70b2e46935120ba577d19b2fee7e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f60f74e3fb70b2e46935120ba577d19b2fee7e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f60f74e3fb70b2e46935120ba577d19b2fee7e7"}], "stats": {"total": 40, "additions": 22, "deletions": 18}, "files": [{"sha": "f8d5da512fa8bf1100cdde553a6711c6154aa5b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f53ea4f08975910c2e92eda9ebe0785845e42247/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f53ea4f08975910c2e92eda9ebe0785845e42247/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f53ea4f08975910c2e92eda9ebe0785845e42247", "patch": "@@ -1,3 +1,12 @@\n+2010-07-29  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (int_cond): Remove code iterator.\n+\t(fp_cond): Ditto.\n+\t(cbranch<mode>4): Use ordered_comparison_operator predicate\n+\tfor operator0.\n+\t(cstore<mode>4): Ditto for operator1.\n+\t(mov<SWIM:mode>cc): Ditto.\n+\n 2010-07-30  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/45141\n@@ -21,11 +30,13 @@\n 2010-07-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tRevert:\n+\t2010-07-27  Bernd Schmidt  <bernds@codesourcery.com>\n+\n \t* rtl.def (NOTE): Swap operands 4 and 5.\n-        * rtl.h (NOTE_DATA, NOTE_DELETED_LABEL_NAME, NOTE_BLOCK,\n+\t* rtl.h (NOTE_DATA, NOTE_DELETED_LABEL_NAME, NOTE_BLOCK,\n \tNOTE_EH_HANDLER, NOTE_BASIC_BLOCK, NOTE_VAR_LOCATION, NOTE_KIND):\n \tAdjust accordingly.\n-        * gengtype.c (adjust_field_rtx_def): Swap operands 4 and 5 of NOTEs.\n+\t* gengtype.c (adjust_field_rtx_def): Swap operands 4 and 5 of NOTEs.\n \n 2010-07-29  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -156,7 +167,7 @@\n 2010-07-29  Ira Rosen  <irar@il.ibm.com>\n \n \t* tree-vect-loop.c (vect_create_epilog_for_reduction): Switch\n-\tto outer loop when creating reduction epilogue for double reduction, \n+\tto outer loop when creating reduction epilogue for double reduction,\n \tand switch back to the inner loop when updating the phi nodes.\n \tUpdate uses of outer loop exit phi nodes in double reduction (instead\n \tof uses of reduction).\n@@ -281,7 +292,7 @@\n \n 2010-07-28  Iain Sandoe  <iains@gcc.gnu.org>\n \n-\t* config/rs6000/rs6000.c (rs6000_override_options): \n+\t* config/rs6000/rs6000.c (rs6000_override_options):\n \tUse TARGET_MACHO inline, move darwin_one_byte_bool from here...\n \t... to darwin_rs6000_override_options.\n \t(rs6000_return_in_memory): Update preceding comment for darwin\n@@ -545,8 +556,9 @@\n 2010-07-27  Jie Zhang  <jie@codesourcery.com>\n \n \tPR target/44290\n-\tRevert\n+\tRevert:\n \t2010-07-23  Jie Zhang  <jie@codesourcery.com>\n+\n \t* tree-sra.c (ipa_sra_preliminary_function_checks): Return\n \tfalse if ! tree_versionable_function_p.\n \n@@ -569,8 +581,7 @@\n \t* hooks.c (hook_bool_constcharptr_size_t_false): Remove.\n \t* hooks.h (hook_bool_constcharptr_size_t_false): Remove.\n \t* langhooks-def.h (LANG_HOOKS_MISSING_ARGUMENT): Remove.\n-\t(LANG_HOOKS_INITIALIZER): Remove missing_argument hook\n-\tinitializer.\n+\t(LANG_HOOKS_INITIALIZER): Remove missing_argument hook initializer.\n \t* langhooks.h (struct lang_hooks): Remove missing_argument.\n \t* optc-gen.awk: Handle MissingArgError and output new structure\n \tfield initializers.\n@@ -604,7 +615,7 @@\n \tPR tree-optimization/44152\n \t* tree-vect-slp.c (vect_build_slp_tree): Collect nodes with\n \tcomplex numbers for further check.\n-\t(vect_supported_load_permutation_p): Check nodes with \n+\t(vect_supported_load_permutation_p): Check nodes with\n \tcomplex numbers.\n \n 2010-07-27  Joseph Myers  <joseph@codesourcery.com>"}, {"sha": "265295a04db4954818d6666b9aa4b5f9ebf8adc4", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f53ea4f08975910c2e92eda9ebe0785845e42247/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f53ea4f08975910c2e92eda9ebe0785845e42247/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=f53ea4f08975910c2e92eda9ebe0785845e42247", "patch": "@@ -684,13 +684,6 @@\n   [(set_attr \"length\" \"128\")\n    (set_attr \"type\" \"multi\")])\n \n-;; All integer comparison codes.\n-(define_code_iterator int_cond [ne eq ge gt le lt geu gtu leu ltu])\n-\n-;; All floating-point comparison codes.\n-(define_code_iterator fp_cond [unordered ordered\n-\t\t\t       uneq unge ungt unle unlt ltgt])\n-\n (define_code_iterator plusminus [plus minus])\n \n (define_code_iterator sat_plusminus [ss_plus us_plus ss_minus us_minus])\n@@ -941,7 +934,7 @@\n \t(compare:CC (match_operand:SDWIM 1 \"nonimmediate_operand\" \"\")\n \t\t    (match_operand:SDWIM 2 \"<general_operand>\" \"\")))\n    (set (pc) (if_then_else\n-\t       (match_operator 0 \"comparison_operator\"\n+\t       (match_operator 0 \"ordered_comparison_operator\"\n \t\t[(reg:CC FLAGS_REG) (const_int 0)])\n \t       (label_ref (match_operand 3 \"\" \"\"))\n \t       (pc)))]\n@@ -960,7 +953,7 @@\n \t(compare:CC (match_operand:SWIM 2 \"nonimmediate_operand\" \"\")\n \t\t    (match_operand:SWIM 3 \"<general_operand>\" \"\")))\n    (set (match_operand:QI 0 \"register_operand\" \"\")\n-\t(match_operator 1 \"comparison_operator\"\n+\t(match_operator 1 \"ordered_comparison_operator\"\n \t  [(reg:CC FLAGS_REG) (const_int 0)]))]\n   \"\"\n {\n@@ -16028,7 +16021,7 @@\n \n (define_expand \"mov<mode>cc\"\n   [(set (match_operand:SWIM 0 \"register_operand\" \"\")\n-\t(if_then_else:SWIM (match_operand 1 \"comparison_operator\" \"\")\n+\t(if_then_else:SWIM (match_operand 1 \"ordered_comparison_operator\" \"\")\n \t\t\t   (match_operand:SWIM 2 \"general_operand\" \"\")\n \t\t\t   (match_operand:SWIM 3 \"general_operand\" \"\")))]\n   \"\""}]}