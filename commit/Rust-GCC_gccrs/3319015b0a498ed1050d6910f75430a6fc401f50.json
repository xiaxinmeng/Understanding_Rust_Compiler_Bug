{"sha": "3319015b0a498ed1050d6910f75430a6fc401f50", "node_id": "C_kwDOANBUbNoAKDMzMTkwMTViMGE0OThlZDEwNTBkNjkxMGY3NTQzMGE2ZmM0MDFmNTA", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2022-05-25T15:51:52Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-04T07:45:56Z"}, "message": "[Ada] Fix missing error on 'Access of constrained array\n\nFor X'Access, the designated subtype of the access type must statically\nmatch the nominal subtype of X.  This patch fixes a bug where the error\nwas not detected when there is an unrelated declaration of the form \"Y :\nT := X;\", where T is an unconstrained array subtype.\n\ngcc/ada/\n\n\t* exp_util.adb (Expand_Subtype_From_Expr): Generate a new\n\tsubtype when Is_Constr_Subt_For_UN_Aliased is True, so the\n\tIs_Constr_Subt_For_U_Nominal flag will not be set on the\n\tpreexisting subtype.\n\t* sem_attr.adb, sem_ch3.adb: Minor.", "tree": {"sha": "6fd43b44b2e5cd783ca893ed67c19599a9e15069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fd43b44b2e5cd783ca893ed67c19599a9e15069"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3319015b0a498ed1050d6910f75430a6fc401f50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3319015b0a498ed1050d6910f75430a6fc401f50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3319015b0a498ed1050d6910f75430a6fc401f50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3319015b0a498ed1050d6910f75430a6fc401f50/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02e41e69d4762937f6ba927059e22abf84801b32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02e41e69d4762937f6ba927059e22abf84801b32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02e41e69d4762937f6ba927059e22abf84801b32"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "2a7afd4fa9efd507234a397e5d2950e8a9a14f3a", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3319015b0a498ed1050d6910f75430a6fc401f50/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3319015b0a498ed1050d6910f75430a6fc401f50/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=3319015b0a498ed1050d6910f75430a6fc401f50", "patch": "@@ -113,7 +113,7 @@ package body Exp_Util is\n      (Header_Num => Type_Map_Header,\n       Key        => Entity_Id,\n       Element    => Node_Or_Entity_Id,\n-      No_element => Empty,\n+      No_Element => Empty,\n       Hash       => Type_Map_Hash,\n       Equal      => \"=\");\n \n@@ -5730,8 +5730,17 @@ package body Exp_Util is\n             or else not Is_Array_Type (Exp_Typ)\n             or else not Aliased_Present (N))\n       then\n-         if Is_Itype (Exp_Typ) then\n+         if Is_Itype (Exp_Typ)\n \n+           --  If Exp_Typ was created for a previous declaration whose nominal\n+           --  subtype is unconstrained, and that declaration is aliased,\n+           --  we need to generate a new subtype, because otherwise the\n+           --  Is_Constr_Subt_For_U_Nominal flag will be set on the wrong\n+           --  subtype, causing failure to detect non-statically-matching\n+           --  subtypes on 'Access of the previously-declared object.\n+\n+           and then not Is_Constr_Subt_For_UN_Aliased (Exp_Typ)\n+         then\n             --  Within an initialization procedure, a selected component\n             --  denotes a component of the enclosing record, and it appears as\n             --  an actual in a call to its own initialization procedure. If\n@@ -5770,7 +5779,7 @@ package body Exp_Util is\n             --  This type is marked as an itype even though it has an explicit\n             --  declaration since otherwise Is_Generic_Actual_Type can get\n             --  set, resulting in the generation of spurious errors. (See\n-            --  sem_ch8.Analyze_Package_Renaming and sem_type.covers)\n+            --  sem_ch8.Analyze_Package_Renaming and Sem_Type.Covers.)\n \n             Set_Is_Itype (T);\n             Set_Associated_Node_For_Itype (T, Exp);"}, {"sha": "ab6c2c6e53667e9cc2799f00ce790ecf1eb0536c", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3319015b0a498ed1050d6910f75430a6fc401f50/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3319015b0a498ed1050d6910f75430a6fc401f50/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=3319015b0a498ed1050d6910f75430a6fc401f50", "patch": "@@ -11632,9 +11632,7 @@ package body Sem_Attr is\n                end if;\n             end if;\n \n-            if (Attr_Id = Attribute_Access\n-                  or else\n-                Attr_Id = Attribute_Unchecked_Access)\n+            if Attr_Id in Attribute_Access | Attribute_Unchecked_Access\n               and then (Ekind (Btyp) = E_General_Access_Type\n                          or else Ekind (Btyp) = E_Anonymous_Access_Type)\n             then"}, {"sha": "84971e3c0b10350af041d13d060c8197fb1d3cd3", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3319015b0a498ed1050d6910f75430a6fc401f50/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3319015b0a498ed1050d6910f75430a6fc401f50/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=3319015b0a498ed1050d6910f75430a6fc401f50", "patch": "@@ -18276,7 +18276,7 @@ package body Sem_Ch3 is\n \n    begin\n       --  If the parent is a component_definition node we climb to the\n-      --  component_declaration node\n+      --  component_declaration node.\n \n       if Nkind (P) = N_Component_Definition then\n          P := Parent (P);"}]}