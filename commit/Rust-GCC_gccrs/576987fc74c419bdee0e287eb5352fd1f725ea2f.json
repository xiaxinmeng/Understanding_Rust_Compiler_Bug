{"sha": "576987fc74c419bdee0e287eb5352fd1f725ea2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc2OTg3ZmM3NGM0MTliZGVlMGUyODdlYjUzNTJmZDFmNzI1ZWEyZg==", "commit": {"author": {"name": "Dominik Vogt", "email": "vogt@linux.vnet.ibm.com", "date": "2016-09-23T09:44:15Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2016-09-23T09:44:15Z"}, "message": "S/390: Mode attrs \"bitoff[_plus]\" simplify risbg instructions.\n\nAdd a new mode attribute to simplify some instruction patterns.\n\ngcc/ChangeLog:\n\n2016-09-23  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\t* config/s390/s390.md (bitoff, bitoff_plus): Neq mode attributes.\n\t(\"*extzv<mode>_zEC12\", \"*insv<mode>_zEC12\", \"*insv<mode>_z10\")\n\t(\"*insv<mode>_zEC12_appendbitsleft\")\n\t(\"*insv<mode>_z10_appendbitsleft\", \"*r<noxa>sbg_<mode>_sll\")\n\t(\"*r<noxa>sbg_<mode>_srl\"): Use new attributes.\n\ngcc/testsuite/ChangeLog:\n\n2016-09-23  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\t* gcc.target/s390/md/rXsbg_mode_sXl.c: Adapt expected assembly\n\toutput to the simplified instructions.\n\nFrom-SVN: r240409", "tree": {"sha": "1099f207faaf8da54dc03e8415f82c3de5863f5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1099f207faaf8da54dc03e8415f82c3de5863f5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/576987fc74c419bdee0e287eb5352fd1f725ea2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576987fc74c419bdee0e287eb5352fd1f725ea2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/576987fc74c419bdee0e287eb5352fd1f725ea2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576987fc74c419bdee0e287eb5352fd1f725ea2f/comments", "author": {"login": "vogtd", "id": 9690100, "node_id": "MDQ6VXNlcjk2OTAxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/9690100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vogtd", "html_url": "https://github.com/vogtd", "followers_url": "https://api.github.com/users/vogtd/followers", "following_url": "https://api.github.com/users/vogtd/following{/other_user}", "gists_url": "https://api.github.com/users/vogtd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vogtd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vogtd/subscriptions", "organizations_url": "https://api.github.com/users/vogtd/orgs", "repos_url": "https://api.github.com/users/vogtd/repos", "events_url": "https://api.github.com/users/vogtd/events{/privacy}", "received_events_url": "https://api.github.com/users/vogtd/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "199d1d488f5de5c940f9010a9fdfd1e4d1f24fe1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/199d1d488f5de5c940f9010a9fdfd1e4d1f24fe1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/199d1d488f5de5c940f9010a9fdfd1e4d1f24fe1"}], "stats": {"total": 46, "additions": 31, "deletions": 15}, "files": [{"sha": "bd699e9d0719f8b82de66b65a070a1e41abdb169", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576987fc74c419bdee0e287eb5352fd1f725ea2f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576987fc74c419bdee0e287eb5352fd1f725ea2f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=576987fc74c419bdee0e287eb5352fd1f725ea2f", "patch": "@@ -1,3 +1,11 @@\n+2016-09-23  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390.md (bitoff, bitoff_plus): Neq mode attributes.\n+\t(\"*extzv<mode>_zEC12\", \"*insv<mode>_zEC12\", \"*insv<mode>_z10\")\n+\t(\"*insv<mode>_zEC12_appendbitsleft\")\n+\t(\"*insv<mode>_z10_appendbitsleft\", \"*r<noxa>sbg_<mode>_sll\")\n+\t(\"*r<noxa>sbg_<mode>_srl\"): Use new attributes.\n+\n 2016-09-23  Jakub Jelinek  <jakub@redhat.com>\n \n \t* ipa-cp.c (ipcp_store_vr_results): Avoid static local"}, {"sha": "21ff33ed53962dd75fa96bd95afa5f4e71c1aa38", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576987fc74c419bdee0e287eb5352fd1f725ea2f/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576987fc74c419bdee0e287eb5352fd1f725ea2f/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=576987fc74c419bdee0e287eb5352fd1f725ea2f", "patch": "@@ -761,6 +761,9 @@\n \n ;; In place of GET_MODE_BITSIZE (<MODE>mode)\n (define_mode_attr bitsize [(DI \"64\") (SI \"32\") (HI \"16\") (QI \"8\")])\n+;; 64 - bitsize\n+(define_mode_attr bitoff [(DI \"0\") (SI \"32\") (HI \"48\") (QI \"56\")])\n+(define_mode_attr bitoff_plus [(DI \"\") (SI \"32+\") (HI \"48+\") (QI \"56+\")])\n \n ;; In place of GET_MODE_SIZE (<MODE>mode)\n (define_mode_attr modesize [(DI \"8\") (SI \"4\")])\n@@ -3754,7 +3757,7 @@\n         (match_operand 2 \"const_int_operand\" \"\")   ; size\n         (match_operand 3 \"const_int_operand\" \"\")))] ; start]\n   \"TARGET_ZEC12\"\n-  \"risbgn\\t%0,%1,64-%2,128+63,<bitsize>+%3+%2\" ; dst, src, start, end, shift\n+  \"risbgn\\t%0,%1,64-%2,128+63,<bitoff_plus>%3+%2\" ; dst, src, start, end, shift\n   [(set_attr \"op_type\" \"RIE\")])\n \n (define_insn \"*extzv<mode>_z10\"\n@@ -3846,7 +3849,7 @@\n \t(match_operand:GPR 3 \"nonimmediate_operand\" \"d\"))]\n   \"TARGET_ZEC12\n    && (INTVAL (operands[1]) + INTVAL (operands[2])) <= <bitsize>\"\n-  \"risbgn\\t%0,%3,64-<bitsize>+%2,64-<bitsize>+%2+%1-1,<bitsize>-%2-%1\"\n+  \"risbgn\\t%0,%3,<bitoff_plus>%2,<bitoff_plus>%2+%1-1,<bitsize>-%2-%1\"\n   [(set_attr \"op_type\" \"RIE\")])\n \n (define_insn \"*insv<mode>_z10\"\n@@ -3857,7 +3860,7 @@\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_Z10\n    && (INTVAL (operands[1]) + INTVAL (operands[2])) <= <bitsize>\"\n-  \"risbg\\t%0,%3,64-<bitsize>+%2,64-<bitsize>+%2+%1-1,<bitsize>-%2-%1\"\n+  \"risbg\\t%0,%3,<bitoff_plus>%2,<bitoff_plus>%2+%1-1,<bitsize>-%2-%1\"\n   [(set_attr \"op_type\" \"RIE\")\n    (set_attr \"z10prop\" \"z10_super_E1\")])\n \n@@ -3894,7 +3897,7 @@\n \t\t (ashift:GPR (match_operand:GPR 3 \"nonimmediate_operand\" \"d\")\n \t\t\t     (match_operand:GPR 4 \"nonzero_shift_count_operand\" \"\"))))]\n   \"TARGET_ZEC12 && UINTVAL (operands[2]) == (1UL << UINTVAL (operands[4])) - 1\"\n-  \"risbgn\\t%0,%3,64-<bitsize>,64-%4-1,%4\"\n+  \"risbgn\\t%0,%3,<bitoff>,64-%4-1,%4\"\n   [(set_attr \"op_type\" \"RIE\")\n    (set_attr \"z10prop\" \"z10_super_E1\")])\n \n@@ -3906,7 +3909,7 @@\n \t\t\t     (match_operand:GPR 4 \"nonzero_shift_count_operand\" \"\"))))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_Z10 && !TARGET_ZEC12 && UINTVAL (operands[2]) == (1UL << UINTVAL (operands[4])) - 1\"\n-  \"risbg\\t%0,%3,64-<bitsize>,64-%4-1,%4\"\n+  \"risbg\\t%0,%3,<bitoff>,64-%4-1,%4\"\n   [(set_attr \"op_type\" \"RIE\")\n    (set_attr \"z10prop\" \"z10_super_E1\")])\n \n@@ -4035,7 +4038,7 @@\n \t  (match_operand:GPR 3 \"nonimmediate_operand\" \"0\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_Z10\"\n-  \"r<noxa>sbg\\t%0,%1,64-<bitsize>,63-%2,%2\"\n+  \"r<noxa>sbg\\t%0,%1,<bitoff>,63-%2,%2\"\n   [(set_attr \"op_type\" \"RIE\")])\n \n ;; unsigned {int,long} a, b\n@@ -4050,7 +4053,7 @@\n \t  (match_operand:GPR 3 \"nonimmediate_operand\" \"0\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_Z10\"\n-  \"r<noxa>sbg\\t%0,%1,64-<bitsize>+%2,63,64-%2\"\n+  \"r<noxa>sbg\\t%0,%1,<bitoff_plus>%2,63,64-%2\"\n   [(set_attr \"op_type\" \"RIE\")])\n \n ;; These two are generated by combine for s.bf &= val."}, {"sha": "dd416a6314a9ebd16d078e6533274a376edac1f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576987fc74c419bdee0e287eb5352fd1f725ea2f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576987fc74c419bdee0e287eb5352fd1f725ea2f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=576987fc74c419bdee0e287eb5352fd1f725ea2f", "patch": "@@ -1,3 +1,8 @@\n+2016-09-23  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/md/rXsbg_mode_sXl.c: Adapt expected assembly\n+\toutput to the simplified instructions.\n+\n 2016-09-23  Matthew Wahab  <matthew.wahab@arm.com>\n \n \t* gcc.target/arm/armv8_2_fp16-move-1.c: New."}, {"sha": "ad442dad9317b334f6358bc1ee0cfb39a329d1bc", "filename": "gcc/testsuite/gcc.target/s390/md/rXsbg_mode_sXl.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576987fc74c419bdee0e287eb5352fd1f725ea2f/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2FrXsbg_mode_sXl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576987fc74c419bdee0e287eb5352fd1f725ea2f/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2FrXsbg_mode_sXl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2FrXsbg_mode_sXl.c?ref=576987fc74c419bdee0e287eb5352fd1f725ea2f", "patch": "@@ -39,28 +39,28 @@ rosbg_si_sll (unsigned int a, unsigned int b)\n {\n   return a | (b << 1);\n }\n-/* { dg-final { scan-assembler-times \"rosbg\\t%r.,%r.,64-32,63-1,1\" 1 } } */\n+/* { dg-final { scan-assembler-times \"rosbg\\t%r.,%r.,32,63-1,1\" 1 } } */\n \n __attribute__ ((noinline)) unsigned int\n rosbg_si_srl (unsigned int a, unsigned int b)\n {\n   return a | (b >> 2);\n }\n-/* { dg-final { scan-assembler-times \"rosbg\\t%r.,%r.,64-32\\\\+2,63,64-2\" 1 } } */\n+/* { dg-final { scan-assembler-times \"rosbg\\t%r.,%r.,32\\\\+2,63,64-2\" 1 } } */\n \n __attribute__ ((noinline)) unsigned int\n rxsbg_si_sll (unsigned int a, unsigned int b)\n {\n   return a ^ (b << 1);\n }\n-/* { dg-final { scan-assembler-times \"rxsbg\\t%r.,%r.,64-32,63-1,1\" 1 } } */\n+/* { dg-final { scan-assembler-times \"rxsbg\\t%r.,%r.,32,63-1,1\" 1 } } */\n \n __attribute__ ((noinline)) unsigned int\n rxsbg_si_srl (unsigned int a, unsigned int b)\n {\n   return a ^ (b >> 2);\n }\n-/* { dg-final { scan-assembler-times \"rxsbg\\t%r.,%r.,64-32\\\\+2,63,64-2\" 1 } } */\n+/* { dg-final { scan-assembler-times \"rxsbg\\t%r.,%r.,32\\\\+2,63,64-2\" 1 } } */\n \n __attribute__ ((noinline)) unsigned long long\n di_sll (unsigned long long x)\n@@ -79,28 +79,28 @@ rosbg_di_sll (unsigned long long a, unsigned long long b)\n {\n   return a | (b << 1);\n }\n-/* { dg-final { scan-assembler-times \"rosbg\\t%r.,%r.,64-64,63-1,1\" 1 } } */\n+/* { dg-final { scan-assembler-times \"rosbg\\t%r.,%r.,0,63-1,1\" 1 } } */\n \n __attribute__ ((noinline)) unsigned long long\n rosbg_di_srl (unsigned long long a, unsigned long long b)\n {\n   return a | (b >> 2);\n }\n-/* { dg-final { scan-assembler-times \"rosbg\\t%r.,%r.,64-64\\\\+2,63,64-2\" 1 } } */\n+/* { dg-final { scan-assembler-times \"rosbg\\t%r.,%r.,2,63,64-2\" 1 } } */\n \n __attribute__ ((noinline)) unsigned long long\n rxsbg_di_sll (unsigned long long a, unsigned long long b)\n {\n   return a ^ (b << 1);\n }\n-/* { dg-final { scan-assembler-times \"rxsbg\\t%r.,%r.,64-64,63-1,1\" 1 } } */\n+/* { dg-final { scan-assembler-times \"rxsbg\\t%r.,%r.,0,63-1,1\" 1 } } */\n \n __attribute__ ((noinline)) unsigned long long\n rxsbg_di_srl (unsigned long long a, unsigned long long b)\n {\n   return a ^ (b >> 2);\n }\n-/* { dg-final { scan-assembler-times \"rxsbg\\t%r.,%r.,64-64\\\\+2,63,64-2\" 1 } } */\n+/* { dg-final { scan-assembler-times \"rxsbg\\t%r.,%r.,2,63,64-2\" 1 } } */\n \n int\n main (void)"}]}