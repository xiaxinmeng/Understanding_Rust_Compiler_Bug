{"sha": "5b2eaa1170aa135450a1180a525bf1ed7c34eb3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIyZWFhMTE3MGFhMTM1NDUwYTExODBhNTI1YmYxZWQ3YzM0ZWIzYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-03-01T01:03:54Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-03-01T01:03:54Z"}, "message": "commit 66ac9466852d11e968f8fd2ad6ffc7386cee49e1\n    gotest: avoid using echo inside $()\n    \n    The handling of newlines is not portable between bash and ksh.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/164597\n\nFrom-SVN: r269298", "tree": {"sha": "f9b81d5baa2a1ecaf6abd0ff30d2456986df5f40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9b81d5baa2a1ecaf6abd0ff30d2456986df5f40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b2eaa1170aa135450a1180a525bf1ed7c34eb3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b2eaa1170aa135450a1180a525bf1ed7c34eb3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b2eaa1170aa135450a1180a525bf1ed7c34eb3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b2eaa1170aa135450a1180a525bf1ed7c34eb3a/comments", "author": null, "committer": null, "parents": [{"sha": "1e157582240340948b3f67fd6ea9fab892283f61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e157582240340948b3f67fd6ea9fab892283f61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e157582240340948b3f67fd6ea9fab892283f61"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "b5e9eedb2b6196d644a670b462d837c0c87b6b33", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b2eaa1170aa135450a1180a525bf1ed7c34eb3a/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b2eaa1170aa135450a1180a525bf1ed7c34eb3a/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=5b2eaa1170aa135450a1180a525bf1ed7c34eb3a", "patch": "@@ -1,4 +1,4 @@\n-08f1c400ec95d70a5cf5a08b1600fa5445e42361\n+66ac9466852d11e968f8fd2ad6ffc7386cee49e1\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "c9c14652c76ae0490dbeacf219fbe81d8def451f", "filename": "libgo/testsuite/gotest", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b2eaa1170aa135450a1180a525bf1ed7c34eb3a/libgo%2Ftestsuite%2Fgotest", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b2eaa1170aa135450a1180a525bf1ed7c34eb3a/libgo%2Ftestsuite%2Fgotest", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2Fgotest?ref=5b2eaa1170aa135450a1180a525bf1ed7c34eb3a", "patch": "@@ -619,21 +619,25 @@ symtogo() {\n \t\t    # Turn pairs of spaces into \" \\x20\", because $() will\n \t\t    # drop duplicate spaces.\n \t\t    # Drop trailing spaces, and turn newlines into \\n.\n-\t\t    output=\"$(sed '1 s/\\([Uu]nordered \\)\\?[Oo]utput:[ \t]*//' < example.txt |\n+\t\t    # Remove leading and trailing \\n.\n+\t\t    sed '1 s/\\([Uu]nordered \\)\\?[Oo]utput:[ \t]*//' < example.txt |\n \t\t\t\t sed -e 's/\\\\/\\\\\\\\/g' \\\n \t\t\t\t     -e 's/\"/\\\\\"/g' \\\n \t\t\t\t     -e 's/\t/\\\\t/g' \\\n \t\t\t\t     -e 's/  / \\\\x20/g' \\\n \t\t\t\t     -e 's/[ \t]*$/\\\\n/g' |\n-\t\t\t\t tr -d '\\n')\"\n-\t\t    # Remove leading and trailing \\n.\n-\t\t    output=\"$(echo \"$output\" | sed -e 's/^\\(\\\\n\\)*//' -e 's/\\(\\\\n\\)*$//')\"\n+\t\t\t\t tr -d '\\n' |\n+\t\t\t\t sed -e 's/^\\(\\\\n\\)*//' \\\n+\t\t\t\t     -e 's/\\(\\\\n\\)*$//' > example2.txt\n \t\t    hasoutput=true\n \t\t    rm -f example.txt\n \t\t    break\n \t\tdone\n \t\tif test x$hasoutput = xtrue; then\n-\t\t    echo '\t{\"'$n'\", '$j', \"'\"$output\"'\", '$unordered'},'\n+\t\t    echo '\t{\"'$n'\", '$j','\n+\t\t    sed -e 's/^/\t\t\"/' -e 's/$/\", /' < example2.txt\n+\t\t    echo $unordered'},'\n+\t\t    rm -f example2.txt\n \t\tfi\n \tdone\n \techo '}'"}]}