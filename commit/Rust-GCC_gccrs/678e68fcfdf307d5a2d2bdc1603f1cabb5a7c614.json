{"sha": "678e68fcfdf307d5a2d2bdc1603f1cabb5a7c614", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc4ZTY4ZmNmZGYzMDdkNWEyZDJiZGMxNjAzZjFjYWJiNWE3YzYxNA==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@tuliptree.org", "date": "2003-02-27T17:46:35Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2003-02-27T17:46:35Z"}, "message": "Patch for PR 9255\n\nPatch for PR 9255\n\t* combine.c (simplify_comparison): Require integral mode when\n\tpermuting SUBREG with AND.\n\nFrom-SVN: r63514", "tree": {"sha": "99d4f9c0c06e462c5cf0517920822bea29b518e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99d4f9c0c06e462c5cf0517920822bea29b518e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/678e68fcfdf307d5a2d2bdc1603f1cabb5a7c614", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/678e68fcfdf307d5a2d2bdc1603f1cabb5a7c614", "html_url": "https://github.com/Rust-GCC/gccrs/commit/678e68fcfdf307d5a2d2bdc1603f1cabb5a7c614", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/678e68fcfdf307d5a2d2bdc1603f1cabb5a7c614/comments", "author": {"login": "jim-wilson", "id": 11654017, "node_id": "MDQ6VXNlcjExNjU0MDE3", "avatar_url": "https://avatars.githubusercontent.com/u/11654017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jim-wilson", "html_url": "https://github.com/jim-wilson", "followers_url": "https://api.github.com/users/jim-wilson/followers", "following_url": "https://api.github.com/users/jim-wilson/following{/other_user}", "gists_url": "https://api.github.com/users/jim-wilson/gists{/gist_id}", "starred_url": "https://api.github.com/users/jim-wilson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jim-wilson/subscriptions", "organizations_url": "https://api.github.com/users/jim-wilson/orgs", "repos_url": "https://api.github.com/users/jim-wilson/repos", "events_url": "https://api.github.com/users/jim-wilson/events{/privacy}", "received_events_url": "https://api.github.com/users/jim-wilson/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ffbd0777c9cc458ce64322e0be0c6f3840ce5b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ffbd0777c9cc458ce64322e0be0c6f3840ce5b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ffbd0777c9cc458ce64322e0be0c6f3840ce5b4"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "b836d0742a01cd16b24d346838b293a06c707bfe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/678e68fcfdf307d5a2d2bdc1603f1cabb5a7c614/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/678e68fcfdf307d5a2d2bdc1603f1cabb5a7c614/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=678e68fcfdf307d5a2d2bdc1603f1cabb5a7c614", "patch": "@@ -1,3 +1,8 @@\n+2003-02-27  James E Wilson  <wilson@tuliptree.org>\n+\n+\t* combine.c (simplify_comparison): Require integral mode when\n+\tpermuting SUBREG with AND.\n+\n 2003-02-27  Steve Ellcey  <sje@cup.hp.com>\n \n \t* config/ia64/hpux.h (STARTFILE_PREFIX_SPEC): Remove."}, {"sha": "50b1876eb581751d8ccd4022eba086bfd7cdcd80", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/678e68fcfdf307d5a2d2bdc1603f1cabb5a7c614/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/678e68fcfdf307d5a2d2bdc1603f1cabb5a7c614/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=678e68fcfdf307d5a2d2bdc1603f1cabb5a7c614", "patch": "@@ -11130,6 +11130,9 @@ simplify_comparison (code, pop0, pop1)\n \t     represents the low part, permute the SUBREG and the AND and\n \t     try again.  */\n \t  if (GET_CODE (XEXP (op0, 0)) == SUBREG\n+\t      /* Require an integral mode, to avoid creating something like\n+\t\t (AND:SF ...).  */\n+\t      && SCALAR_INT_MODE_P (GET_MODE (SUBREG_REG (XEXP (op0, 0))))\n \t      /* It is unsafe to commute the AND into the SUBREG if the SUBREG\n \t\t is paradoxical and WORD_REGISTER_OPERATIONS is not defined.\n \t\t As originally written the upper bits have a defined value"}]}