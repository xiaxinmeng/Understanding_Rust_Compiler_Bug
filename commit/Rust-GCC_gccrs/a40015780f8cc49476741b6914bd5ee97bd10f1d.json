{"sha": "a40015780f8cc49476741b6914bd5ee97bd10f1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQwMDE1NzgwZjhjYzQ5NDc2NzQxYjY5MTRiZDVlZTk3YmQxMGYxZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-03T08:08:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-03T08:08:08Z"}, "message": "bswap: Fix up bswap_view_convert after the recent change [PR99882]\n\nMartin reported that my recent change to allow pointer types in bswap\nbroke valgrind.  The bswap_view_convert function used for the initialization\nof vector CONSTRUCTOR from the identity or byte-swapped pieces unfortunately\ndidn't handle pointer types.  The following patch handles it there.\n\n2021-04-03  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/99882\n\t* gimple-ssa-store-merging.c (bswap_view_convert): Handle val with\n\tpointer type.\n\n\t* gcc.dg/pr99882.c: New test.", "tree": {"sha": "be2627e45e56112e7e3e35eab8ae3424cc7558f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be2627e45e56112e7e3e35eab8ae3424cc7558f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a40015780f8cc49476741b6914bd5ee97bd10f1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40015780f8cc49476741b6914bd5ee97bd10f1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a40015780f8cc49476741b6914bd5ee97bd10f1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40015780f8cc49476741b6914bd5ee97bd10f1d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c7473688e78dc41fd4312a983453df195dd7786", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c7473688e78dc41fd4312a983453df195dd7786", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c7473688e78dc41fd4312a983453df195dd7786"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "7eb50d65a20df5dce8a7a8f005acc3a8050b0257", "filename": "gcc/gimple-ssa-store-merging.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40015780f8cc49476741b6914bd5ee97bd10f1d/gcc%2Fgimple-ssa-store-merging.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40015780f8cc49476741b6914bd5ee97bd10f1d/gcc%2Fgimple-ssa-store-merging.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-store-merging.c?ref=a40015780f8cc49476741b6914bd5ee97bd10f1d", "patch": "@@ -985,10 +985,19 @@ class pass_optimize_bswap : public gimple_opt_pass\n static tree\n bswap_view_convert (gimple_stmt_iterator *gsi, tree type, tree val)\n {\n-  gcc_assert (INTEGRAL_TYPE_P (TREE_TYPE (val)));\n+  gcc_assert (INTEGRAL_TYPE_P (TREE_TYPE (val))\n+\t      || POINTER_TYPE_P (TREE_TYPE (val)));\n   if (TYPE_SIZE (type) != TYPE_SIZE (TREE_TYPE (val)))\n     {\n       HOST_WIDE_INT prec = TREE_INT_CST_LOW (TYPE_SIZE (type));\n+      if (POINTER_TYPE_P (TREE_TYPE (val)))\n+\t{\n+\t  gimple *g\n+\t    = gimple_build_assign (make_ssa_name (pointer_sized_int_node),\n+\t\t\t\t   NOP_EXPR, val);\n+\t  gsi_insert_before (gsi, g, GSI_SAME_STMT);\n+\t  val = gimple_assign_lhs (g);\n+\t}\n       tree itype = build_nonstandard_integer_type (prec, 1);\n       gimple *g = gimple_build_assign (make_ssa_name (itype), NOP_EXPR, val);\n       gsi_insert_before (gsi, g, GSI_SAME_STMT);"}, {"sha": "ebc074fd5b63cb821255625a9fb8e2b36151f1f0", "filename": "gcc/testsuite/gcc.dg/pr99882.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40015780f8cc49476741b6914bd5ee97bd10f1d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr99882.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40015780f8cc49476741b6914bd5ee97bd10f1d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr99882.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr99882.c?ref=a40015780f8cc49476741b6914bd5ee97bd10f1d", "patch": "@@ -0,0 +1,37 @@\n+/* PR tree-optimization/99882 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+void\n+foo (char *p, void *q)\n+{\n+  __INTPTR_TYPE__ i = (__INTPTR_TYPE__) q;\n+  p[2] = i;\n+  i >>= 8;\n+  p[3] = i;\n+  i >>= 8;\n+  p[4] = i;\n+  i >>= 8;\n+  p[5] = i;\n+  i >>= 8;\n+  p[6] = i;\n+  i >>= 8;\n+  p[7] = i;\n+  i >>= 8;\n+  p[8] = i;\n+  i >>= 8;\n+  p[9] = i;\n+}\n+\n+void\n+bar (char *p, void *q)\n+{\n+  __INTPTR_TYPE__ i = (__INTPTR_TYPE__) q;\n+  p[2] = i;\n+  i >>= 8;\n+  p[3] = i;\n+  i >>= 8;\n+  p[4] = i;\n+  i >>= 8;\n+  p[5] = i;\n+}"}]}