{"sha": "d05da2b9d529b199ff3589353e91ec4440f5ab1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA1ZGEyYjlkNTI5YjE5OWZmMzU4OTM1M2U5MWVjNDQ0MGY1YWIxZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-08-30T15:28:30Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-08-30T15:28:30Z"}, "message": "re PR c++/50234 (internal compiler error: in cxx_eval_component_reference, at cp/semantics.c:6527)\n\n\tPR c++/50234\n\t* semantics.c (cxx_eval_component_reference): Handle\n\tvalue-initialization for omitted initializers.\n\nFrom-SVN: r178325", "tree": {"sha": "627d1ad552fd4c39a321a083b88fa281ac4f6dc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/627d1ad552fd4c39a321a083b88fa281ac4f6dc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d05da2b9d529b199ff3589353e91ec4440f5ab1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05da2b9d529b199ff3589353e91ec4440f5ab1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d05da2b9d529b199ff3589353e91ec4440f5ab1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05da2b9d529b199ff3589353e91ec4440f5ab1f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5de3524042e0d20785518da4f740ace609c2eae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5de3524042e0d20785518da4f740ace609c2eae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5de3524042e0d20785518da4f740ace609c2eae4"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "9abac29a151e3c19dcedca30d2efe36417db2b90", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05da2b9d529b199ff3589353e91ec4440f5ab1f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05da2b9d529b199ff3589353e91ec4440f5ab1f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d05da2b9d529b199ff3589353e91ec4440f5ab1f", "patch": "@@ -1,3 +1,9 @@\n+2011-08-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/50234\n+\t* semantics.c (cxx_eval_component_reference): Handle\n+\tvalue-initialization for omitted initializers.\n+\n 2011-08-29  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/50224"}, {"sha": "1ad991fab4e085801a7a6a61e88a3c6337114919", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05da2b9d529b199ff3589353e91ec4440f5ab1f/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05da2b9d529b199ff3589353e91ec4440f5ab1f/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=d05da2b9d529b199ff3589353e91ec4440f5ab1f", "patch": "@@ -6518,7 +6518,8 @@ cxx_eval_component_reference (const constexpr_call *call, tree t,\n       if (field == part)\n         return value;\n     }\n-  if (TREE_CODE (TREE_TYPE (whole)) == UNION_TYPE)\n+  if (TREE_CODE (TREE_TYPE (whole)) == UNION_TYPE\n+      && CONSTRUCTOR_NELTS (whole) > 0)\n     {\n       /* DR 1188 says we don't have to deal with this.  */\n       if (!allow_non_constant)\n@@ -6527,8 +6528,12 @@ cxx_eval_component_reference (const constexpr_call *call, tree t,\n       *non_constant_p = true;\n       return t;\n     }\n-  gcc_unreachable();\n-  return error_mark_node;\n+\n+  /* If there's no explicit init for this field, it's value-initialized.  */\n+  value = build_value_init (TREE_TYPE (t), tf_warning_or_error);\n+  return cxx_eval_constant_expression (call, value,\n+\t\t\t\t       allow_non_constant, addr,\n+\t\t\t\t       non_constant_p);\n }\n \n /* Subroutine of cxx_eval_constant_expression."}, {"sha": "237deac888c2a69df431c121f441fbb6c545f37a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05da2b9d529b199ff3589353e91ec4440f5ab1f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05da2b9d529b199ff3589353e91ec4440f5ab1f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d05da2b9d529b199ff3589353e91ec4440f5ab1f", "patch": "@@ -1,3 +1,8 @@\n+2011-08-30  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/50234\n+\t* g++.dg/cpp0x/constexpr-value3.C: New.\n+\n 2011-08-30  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/48571"}, {"sha": "38d89936ec4d29dd6d7ab34845aef19133f3ee5a", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-value3.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05da2b9d529b199ff3589353e91ec4440f5ab1f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-value3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05da2b9d529b199ff3589353e91ec4440f5ab1f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-value3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-value3.C?ref=d05da2b9d529b199ff3589353e91ec4440f5ab1f", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/50234\n+// { dg-options -std=c++0x }\n+\n+#define SA(X) static_assert((X),#X)\n+\n+struct A { int i; };\n+\n+constexpr int f(A a) { return a.i; }\n+\n+SA(f({}) == 0);"}]}