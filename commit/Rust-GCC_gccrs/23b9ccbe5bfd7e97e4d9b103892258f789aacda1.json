{"sha": "23b9ccbe5bfd7e97e4d9b103892258f789aacda1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNiOWNjYmU1YmZkN2U5N2U0ZDliMTAzODkyMjU4Zjc4OWFhY2RhMQ==", "commit": {"author": {"name": "Matthew Wahab", "email": "matthew.wahab@arm.com", "date": "2015-08-26T13:27:03Z"}, "committer": {"name": "Matthew Wahab", "email": "mwahab@gcc.gnu.org", "date": "2015-08-26T13:27:03Z"}, "message": "arm-builtins.c (def_mbuiltin): Test all flags in a feature set.\n\n2015-08-26  Matthew Wahab  <matthew.wahab@arm.com>\n\n\t* config/arm/arm-builtins.c (def_mbuiltin): Test all flags in a\n\tfeature set.\n\t(struct builtin_description): Replace field mask with field\n\tfeatures.\n\t(IWMMXT_BUILTIN): Use ARM_FSET macros for feature flags.\n\t(IWMMXT2_BUILTIN): Likewise.\n\t(IWMMXT2_BUILTIN2): Likewise.\n\t(FP_BUILTIN): Likewise.\n\t(CRC32_BUILTIN): Likewise.\n\t(CRYPTO_BUILTIN): Likewise.\n\t(iwmmx_mbuiltin): Likewise.\n\t(iwmmx2_mbuiltin): Likewise.\n\t(arm_init_iwmmxt_builtins): Likewise. Also, update for change to\n\tstruct builtin_description.\n\nFrom-SVN: r227218", "tree": {"sha": "3d8dd4e0342dc5474570a26ac673254aa12d7101", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d8dd4e0342dc5474570a26ac673254aa12d7101"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23b9ccbe5bfd7e97e4d9b103892258f789aacda1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23b9ccbe5bfd7e97e4d9b103892258f789aacda1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23b9ccbe5bfd7e97e4d9b103892258f789aacda1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23b9ccbe5bfd7e97e4d9b103892258f789aacda1/comments", "author": null, "committer": null, "parents": [{"sha": "a1c54ebfb79e62e27a10a1f8170ae9f8a95558bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c54ebfb79e62e27a10a1f8170ae9f8a95558bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1c54ebfb79e62e27a10a1f8170ae9f8a95558bf"}], "stats": {"total": 62, "additions": 43, "deletions": 19}, "files": [{"sha": "31acd50aa59d0d1e8ef9d5f96c9ce1a318c308d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23b9ccbe5bfd7e97e4d9b103892258f789aacda1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23b9ccbe5bfd7e97e4d9b103892258f789aacda1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23b9ccbe5bfd7e97e4d9b103892258f789aacda1", "patch": "@@ -1,3 +1,20 @@\n+2015-08-26  Matthew Wahab  <matthew.wahab@arm.com>\n+\n+\t* config/arm/arm-builtins.c (def_mbuiltin): Test all flags in a\n+\tfeature set.\n+\t(struct builtin_description): Replace field mask with field\n+\tfeatures.\n+\t(IWMMXT_BUILTIN): Use ARM_FSET macros for feature flags.\n+\t(IWMMXT2_BUILTIN): Likewise.\n+\t(IWMMXT2_BUILTIN2): Likewise.\n+\t(FP_BUILTIN): Likewise.\n+\t(CRC32_BUILTIN): Likewise.\n+\t(CRYPTO_BUILTIN): Likewise.\n+\t(iwmmx_mbuiltin): Likewise.\n+\t(iwmmx2_mbuiltin): Likewise.\n+\t(arm_init_iwmmxt_builtins): Likewise. Also, update for change to\n+\tstruct builtin_description.\n+\n 2015-08-26  Matthew Wahab  <matthew.wahab@arm.com>\n \n \t* config/arm/arm-builtins.c (def_mbuiltin): Use ARM_FSET macro."}, {"sha": "4391f17c6556b8bd9e1fced18cc3c605c37a9994", "filename": "gcc/config/arm/arm-builtins.c", "status": "modified", "additions": 26, "deletions": 19, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23b9ccbe5bfd7e97e4d9b103892258f789aacda1/gcc%2Fconfig%2Farm%2Farm-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23b9ccbe5bfd7e97e4d9b103892258f789aacda1/gcc%2Fconfig%2Farm%2Farm-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.c?ref=23b9ccbe5bfd7e97e4d9b103892258f789aacda1", "patch": "@@ -1101,10 +1101,11 @@ arm_init_neon_builtins (void)\n #undef NUM_DREG_TYPES\n #undef NUM_QREG_TYPES\n \n-#define def_mbuiltin(FLAG, NAME, TYPE, CODE)\t\t\t\t\\\n+#define def_mbuiltin(FLAGS, NAME, TYPE, CODE)\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      if (ARM_FSET_HAS_CPU1 (insn_flags, (FLAG)))\t\t\t\\\n+      const arm_feature_set flags = FLAGS;\t\t\t\t\\\n+      if (ARM_FSET_CPU_SUBSET (flags, insn_flags))\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n \t  tree bdecl;\t\t\t\t\t\t\t\\\n \t  bdecl = add_builtin_function ((NAME), (TYPE), (CODE),\t\t\\\n@@ -1116,7 +1117,7 @@ arm_init_neon_builtins (void)\n \n struct builtin_description\n {\n-  const unsigned long      mask;\n+  const arm_feature_set    features;\n   const enum insn_code     icode;\n   const char * const       name;\n   const enum arm_builtins  code;\n@@ -1127,11 +1128,13 @@ struct builtin_description\n static const struct builtin_description bdesc_2arg[] =\n {\n #define IWMMXT_BUILTIN(code, string, builtin) \\\n-  { FL_IWMMXT, CODE_FOR_##code, \"__builtin_arm_\" string, \\\n+  { ARM_FSET_MAKE_CPU1 (FL_IWMMXT), CODE_FOR_##code, \\\n+    \"__builtin_arm_\" string,\t\t\t     \\\n     ARM_BUILTIN_##builtin, UNKNOWN, 0 },\n \n #define IWMMXT2_BUILTIN(code, string, builtin) \\\n-  { FL_IWMMXT2, CODE_FOR_##code, \"__builtin_arm_\" string, \\\n+  { ARM_FSET_MAKE_CPU1 (FL_IWMMXT2), CODE_FOR_##code, \\\n+    \"__builtin_arm_\" string,\t\t\t      \\\n     ARM_BUILTIN_##builtin, UNKNOWN, 0 },\n \n   IWMMXT_BUILTIN (addv8qi3, \"waddb\", WADDB)\n@@ -1214,10 +1217,12 @@ static const struct builtin_description bdesc_2arg[] =\n   IWMMXT_BUILTIN (iwmmxt_walignr3, \"walignr3\", WALIGNR3)\n \n #define IWMMXT_BUILTIN2(code, builtin) \\\n-  { FL_IWMMXT, CODE_FOR_##code, NULL, ARM_BUILTIN_##builtin, UNKNOWN, 0 },\n+  { ARM_FSET_MAKE_CPU1 (FL_IWMMXT), CODE_FOR_##code, NULL, \\\n+    ARM_BUILTIN_##builtin, UNKNOWN, 0 },\n \n #define IWMMXT2_BUILTIN2(code, builtin) \\\n-  { FL_IWMMXT2, CODE_FOR_##code, NULL, ARM_BUILTIN_##builtin, UNKNOWN, 0 },\n+  { ARM_FSET_MAKE_CPU2 (FL_IWMMXT2), CODE_FOR_##code, NULL, \\\n+    ARM_BUILTIN_##builtin, UNKNOWN, 0 },\n \n   IWMMXT2_BUILTIN2 (iwmmxt_waddbhusm, WADDBHUSM)\n   IWMMXT2_BUILTIN2 (iwmmxt_waddbhusl, WADDBHUSL)\n@@ -1232,16 +1237,16 @@ static const struct builtin_description bdesc_2arg[] =\n \n \n #define FP_BUILTIN(L, U) \\\n-  {0, CODE_FOR_##L, \"__builtin_arm_\"#L, ARM_BUILTIN_##U, \\\n+  {ARM_FSET_EMPTY, CODE_FOR_##L, \"__builtin_arm_\"#L, ARM_BUILTIN_##U, \\\n    UNKNOWN, 0},\n \n   FP_BUILTIN (get_fpscr, GET_FPSCR)\n   FP_BUILTIN (set_fpscr, SET_FPSCR)\n #undef FP_BUILTIN\n \n #define CRC32_BUILTIN(L, U) \\\n-  {0, CODE_FOR_##L, \"__builtin_arm_\"#L, ARM_BUILTIN_##U, \\\n-   UNKNOWN, 0},\n+  {ARM_FSET_EMPTY, CODE_FOR_##L, \"__builtin_arm_\"#L, \\\n+   ARM_BUILTIN_##U, UNKNOWN, 0},\n    CRC32_BUILTIN (crc32b, CRC32B)\n    CRC32_BUILTIN (crc32h, CRC32H)\n    CRC32_BUILTIN (crc32w, CRC32W)\n@@ -1251,9 +1256,9 @@ static const struct builtin_description bdesc_2arg[] =\n #undef CRC32_BUILTIN\n \n \n-#define CRYPTO_BUILTIN(L, U) \\\n-  {0, CODE_FOR_crypto_##L, \"__builtin_arm_crypto_\"#L, ARM_BUILTIN_CRYPTO_##U, \\\n-   UNKNOWN, 0},\n+#define CRYPTO_BUILTIN(L, U)\t\t\t\t\t   \\\n+  {ARM_FSET_EMPTY, CODE_FOR_crypto_##L,\t\"__builtin_arm_crypto_\"#L, \\\n+   ARM_BUILTIN_CRYPTO_##U, UNKNOWN, 0},\n #undef CRYPTO1\n #undef CRYPTO2\n #undef CRYPTO3\n@@ -1509,7 +1514,9 @@ arm_init_iwmmxt_builtins (void)\n       machine_mode mode;\n       tree type;\n \n-      if (d->name == 0 || !(d->mask == FL_IWMMXT || d->mask == FL_IWMMXT2))\n+      if (d->name == 0 ||\n+\t  !(ARM_FSET_HAS_CPU1 (d->features, FL_IWMMXT) ||\n+\t    ARM_FSET_HAS_CPU1 (d->features, FL_IWMMXT2)))\n \tcontinue;\n \n       mode = insn_data[d->icode].operand[1].mode;\n@@ -1533,17 +1540,17 @@ arm_init_iwmmxt_builtins (void)\n \t  gcc_unreachable ();\n \t}\n \n-      def_mbuiltin (d->mask, d->name, type, d->code);\n+      def_mbuiltin (d->features, d->name, type, d->code);\n     }\n \n   /* Add the remaining MMX insns with somewhat more complicated types.  */\n #define iwmmx_mbuiltin(NAME, TYPE, CODE)\t\t\t\\\n-  def_mbuiltin (FL_IWMMXT, \"__builtin_arm_\" NAME, (TYPE),\t\\\n-\t\tARM_BUILTIN_ ## CODE)\n+  def_mbuiltin (ARM_FSET_MAKE_CPU1 (FL_IWMMXT), \"__builtin_arm_\" NAME, \\\n+\t\t(TYPE), ARM_BUILTIN_ ## CODE)\n \n #define iwmmx2_mbuiltin(NAME, TYPE, CODE)                      \\\n-  def_mbuiltin (FL_IWMMXT2, \"__builtin_arm_\" NAME, (TYPE),     \\\n-               ARM_BUILTIN_ ## CODE)\n+  def_mbuiltin (ARM_FSET_MAKE_CPU1 (FL_IWMMXT2), \"__builtin_arm_\" NAME, \\\n+\t\t(TYPE),\tARM_BUILTIN_ ## CODE)\n \n   iwmmx_mbuiltin (\"wzero\", di_ftype_void, WZERO);\n   iwmmx_mbuiltin (\"setwcgr0\", void_ftype_int, SETWCGR0);"}]}