{"sha": "5321dace269bedb0c7fc9ce3d18afa2257cf6099", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMyMWRhY2UyNjliZWRiMGM3ZmM5Y2UzZDE4YWZhMjI1N2NmNjA5OQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2009-01-14T17:33:48Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2009-01-14T17:33:48Z"}, "message": "pr38811.C: New file.\n\n2009-01-14  Vladimir Makarov  <vmakarov@redhat.com>\n\n\t* testsuite/g++.dg/torture/pr38811.C: New file.\n\nFrom-SVN: r143376", "tree": {"sha": "429f053ad82a6bd2a27a55c985f4b3afe465229f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/429f053ad82a6bd2a27a55c985f4b3afe465229f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5321dace269bedb0c7fc9ce3d18afa2257cf6099", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5321dace269bedb0c7fc9ce3d18afa2257cf6099", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5321dace269bedb0c7fc9ce3d18afa2257cf6099", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5321dace269bedb0c7fc9ce3d18afa2257cf6099/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7de2b68817f4da9bfbea781339c27c6e832fd087", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7de2b68817f4da9bfbea781339c27c6e832fd087", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7de2b68817f4da9bfbea781339c27c6e832fd087"}], "stats": {"total": 77, "additions": 77, "deletions": 0}, "files": [{"sha": "e5387ee7e6fb3026684bb79e43c03c1affeaaefd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5321dace269bedb0c7fc9ce3d18afa2257cf6099/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5321dace269bedb0c7fc9ce3d18afa2257cf6099/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5321dace269bedb0c7fc9ce3d18afa2257cf6099", "patch": "@@ -1,3 +1,7 @@\n+2009-01-14  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* testsuite/g++.dg/torture/pr38811.C: New file.\n+\n 2009-01-14  Basile Starynkevitch  <basile@starynkevitch.net>\n \t* doc/gty.texi (Invoking the garbage collector): Added new node\n \tand section documenting ggc_collect."}, {"sha": "e9b304da6e5d1b692c26ac2fa1ab9da37693283e", "filename": "gcc/testsuite/g++.dg/torture/pr38811.C", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5321dace269bedb0c7fc9ce3d18afa2257cf6099/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr38811.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5321dace269bedb0c7fc9ce3d18afa2257cf6099/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr38811.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr38811.C?ref=5321dace269bedb0c7fc9ce3d18afa2257cf6099", "patch": "@@ -0,0 +1,73 @@\n+/* { dg-do compile } */\n+\n+typedef unsigned long ULONG;\n+void iwos_ErrorMessage(long error, const char * const file_name,\n+                       ULONG line_num, const char * const message);\n+class AbcA2d {\n+public:\n+    double x;\n+    double y;\n+    ~AbcA2d() { }\n+};\n+enum AbcZyParamType { ABC_SP_1 };\n+class AbcExtent2d {\n+    AbcA2d m_vMin;\n+    AbcA2d m_vMax;\n+public:\n+    AbcExtent2d(const AbcA2d & rMin, const AbcA2d & rMax);\n+    AbcA2d ClampPoint2d(const AbcA2d & rPoint) const;\n+    AbcA2d GetMax() const { return m_vMax; }\n+    AbcA2d GetMin() const { }\n+    AbcA2d Evaluate(double dNormalizedX, double dNormalizedY) const;\n+};\n+inline AbcExtent2d::AbcExtent2d(const AbcA2d & rMin, const AbcA2d & rMax)\n+{\n+    if (rMin.x > rMax.x || rMin.y > rMax.y)\n+      {\n+        long sErr = (1007);\n+        if (sErr != 1000)\n+          iwos_ErrorMessage(sErr,(const char * const)__null,\n+                            0,(const char * const)__null);\n+      }\n+    else\n+      {\n+        m_vMin = rMin;\n+        m_vMax = rMax;\n+      }\n+}\n+inline AbcA2d AbcExtent2d::ClampPoint2d(const AbcA2d & rPoint) const\n+{\n+    AbcA2d sRet = rPoint;\n+    if (rPoint.x < m_vMin.x)\n+      sRet.x = m_vMin.x;\n+    return sRet;\n+}\n+inline AbcA2d AbcExtent2d::Evaluate(double dNormalizedX, double dNormalizedY)\n+const\n+{\n+    AbcA2d sRet;\n+    sRet.x = m_vMin.x + dNormalizedX * (m_vMax.x - m_vMin.x);\n+    sRet.y = m_vMin.y + dNormalizedY * (m_vMax.y - m_vMin.y);\n+    return ClampPoint2d(sRet);\n+}\n+class AbcAbcdTracer {\n+    AbcExtent2d m_vUVDomain;\n+    virtual long TestIsoAbcde(AbcZyParamType eZyParam, double dParam,\n+                              int & rbZyxIsSolution);\n+    virtual int DoesPointLieOnAbcde(AbcA2d & rUV, int bRefinePoint) const;\n+};\n+long AbcAbcdTracer::TestIsoAbcde(AbcZyParamType eZyParam, double dParam,\n+                                 int & rbZyxIsSolution)\n+{\n+    AbcA2d sUV1(m_vUVDomain.GetMin());\n+    AbcA2d sUV2(m_vUVDomain.GetMax());\n+    AbcExtent2d sUVIso(sUV1,sUV2);\n+    for (ULONG i=0; i<10; i++)\n+      {\n+        double dT = i / (10 -1.0);\n+        AbcA2d sUV = sUVIso.Evaluate(dT,dT);\n+        if (!DoesPointLieOnAbcde(sUV,0))\n+          ;\n+      }\n+}\n+"}]}