{"sha": "5f2e30efbeb6f361e414de35e7ae9ec5165ff009", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYyZTMwZWZiZWI2ZjM2MWU0MTRkZTM1ZTdhZTllYzUxNjVmZjAwOQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-12-02T16:54:27Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-12-02T16:54:27Z"}, "message": "Revert:\n\n\t2008-09-18  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n\tPR rtl-opt/37451\n\t* loop-doloop.c (doloop_modify): New argument zero_extend_p and\n\tzero extend count after the correction to it is done.\n\t(doloop_optimize): Update call to doloop_modify, don't zero extend\n\tcount before call.\n\n\t2008-11-03  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n\tPR rtl-opt/37782\n\t* loop-doloop.c (doloop_modify): Add from_mode argument that says what\n\tmode count is in.\n\t(doloop_optimize): Update call to doloop_modify.\n\ntestsuite:\n\t* gcc.c-torture/execute/doloop-1.c,\n\tgcc.c-torture/execute/doloop-2.c: New tests.\n\nFrom-SVN: r181929", "tree": {"sha": "20d093eb4b91c136b0ac7c9be852a2dab1f0d03c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20d093eb4b91c136b0ac7c9be852a2dab1f0d03c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f2e30efbeb6f361e414de35e7ae9ec5165ff009", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f2e30efbeb6f361e414de35e7ae9ec5165ff009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f2e30efbeb6f361e414de35e7ae9ec5165ff009", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f2e30efbeb6f361e414de35e7ae9ec5165ff009/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce8d58a2d98f1b3b8271c984ec4d4612c8684672", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce8d58a2d98f1b3b8271c984ec4d4612c8684672", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce8d58a2d98f1b3b8271c984ec4d4612c8684672"}], "stats": {"total": 80, "additions": 66, "deletions": 14}, "files": [{"sha": "e53ba2b772f88facec65a759d1e0cead8644781f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2e30efbeb6f361e414de35e7ae9ec5165ff009/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2e30efbeb6f361e414de35e7ae9ec5165ff009/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f2e30efbeb6f361e414de35e7ae9ec5165ff009", "patch": "@@ -1,3 +1,22 @@\n+2011-12-02  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tRevert:\n+\n+\t2008-09-18  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR rtl-opt/37451\n+\t* loop-doloop.c (doloop_modify): New argument zero_extend_p and\n+\tzero extend count after the correction to it is done.\n+\t(doloop_optimize): Update call to doloop_modify, don't zero extend\n+\tcount before call.\n+\n+\t2008-11-03  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR rtl-opt/37782\n+\t* loop-doloop.c (doloop_modify): Add from_mode argument that says what\n+\tmode count is in.\n+\t(doloop_optimize): Update call to doloop_modify.\n+\n 2011-12-02  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/47259"}, {"sha": "5f645694107582d5c1ba533090e4dbff60dbe844", "filename": "gcc/loop-doloop.c", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2e30efbeb6f361e414de35e7ae9ec5165ff009/gcc%2Floop-doloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2e30efbeb6f361e414de35e7ae9ec5165ff009/gcc%2Floop-doloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-doloop.c?ref=5f2e30efbeb6f361e414de35e7ae9ec5165ff009", "patch": "@@ -394,14 +394,11 @@ add_test (rtx cond, edge *e, basic_block dest)\n    describes the loop, DESC describes the number of iterations of the\n    loop, and DOLOOP_INSN is the low-overhead looping insn to emit at the\n    end of the loop.  CONDITION is the condition separated from the\n-   DOLOOP_SEQ.  COUNT is the number of iterations of the LOOP.\n-   ZERO_EXTEND_P says to zero extend COUNT after the increment of it to\n-   word_mode from FROM_MODE.  */\n+   DOLOOP_SEQ.  COUNT is the number of iterations of the LOOP.  */\n \n static void\n doloop_modify (struct loop *loop, struct niter_desc *desc,\n-\t       rtx doloop_seq, rtx condition, rtx count,\n-\t       bool zero_extend_p, enum machine_mode from_mode)\n+\t       rtx doloop_seq, rtx condition, rtx count)\n {\n   rtx counter_reg;\n   rtx tmp, noloop = NULL_RTX;\n@@ -475,11 +472,7 @@ doloop_modify (struct loop *loop, struct niter_desc *desc,\n     }\n \n   if (increment_count)\n-    count = simplify_gen_binary (PLUS, from_mode, count, const1_rtx);\n-\n-  if (zero_extend_p)\n-    count = simplify_gen_unary (ZERO_EXTEND, word_mode,\n-\t\t\t\tcount, from_mode);\n+    count = simplify_gen_binary (PLUS, mode, count, const1_rtx);\n \n   /* Insert initialization of the count register into the loop header.  */\n   start_sequence ();\n@@ -615,7 +608,6 @@ doloop_optimize (struct loop *loop)\n   struct niter_desc *desc;\n   unsigned word_mode_size;\n   unsigned HOST_WIDE_INT word_mode_max;\n-  bool zero_extend_p = false;\n \n   if (dump_file)\n     fprintf (dump_file, \"Doloop: Processing loop %d.\\n\", loop->num);\n@@ -690,7 +682,8 @@ doloop_optimize (struct loop *loop)\n     {\n       if (word_mode_size > GET_MODE_PRECISION (mode))\n \t{\n-\t  zero_extend_p = true;\n+\t  count = simplify_gen_unary (ZERO_EXTEND, word_mode,\n+\t\t\t\t      count, mode);\n \t  iterations = simplify_gen_unary (ZERO_EXTEND, word_mode,\n \t\t\t\t\t   iterations, mode);\n \t  iterations_max = simplify_gen_unary (ZERO_EXTEND, word_mode,\n@@ -734,8 +727,7 @@ doloop_optimize (struct loop *loop)\n       return false;\n     }\n \n-  doloop_modify (loop, desc, doloop_seq, condition, count,\n-\t\t zero_extend_p, mode);\n+  doloop_modify (loop, desc, doloop_seq, condition, count);\n   return true;\n }\n "}, {"sha": "982cba0bd6b314dd363182f1bfcd33d42aa7da37", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2e30efbeb6f361e414de35e7ae9ec5165ff009/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2e30efbeb6f361e414de35e7ae9ec5165ff009/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5f2e30efbeb6f361e414de35e7ae9ec5165ff009", "patch": "@@ -1,3 +1,8 @@\n+2011-12-02  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.c-torture/execute/doloop-1.c,\n+\tgcc.c-torture/execute/doloop-2.c: New tests.\n+\n 2011-12-02  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/50622"}, {"sha": "d2394a62ec2613295c4660f8778129e6d2c6d5bf", "filename": "gcc/testsuite/gcc.c-torture/execute/doloop-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2e30efbeb6f361e414de35e7ae9ec5165ff009/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fdoloop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2e30efbeb6f361e414de35e7ae9ec5165ff009/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fdoloop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fdoloop-1.c?ref=5f2e30efbeb6f361e414de35e7ae9ec5165ff009", "patch": "@@ -0,0 +1,18 @@\n+#include <limits.h>\n+\n+extern void exit (int);\n+extern void abort (void);\n+\n+volatile unsigned int i;\n+\n+int\n+main (void)\n+{\n+  unsigned char z = 0;\n+\n+  do ++i;\n+  while (--z > 0);\n+  if (i != UCHAR_MAX + 1U)\n+    abort ();\n+  exit (0);\n+}"}, {"sha": "f9811800269506e0b4bac3cf8e687841c1a84264", "filename": "gcc/testsuite/gcc.c-torture/execute/doloop-2.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2e30efbeb6f361e414de35e7ae9ec5165ff009/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fdoloop-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2e30efbeb6f361e414de35e7ae9ec5165ff009/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fdoloop-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fdoloop-2.c?ref=5f2e30efbeb6f361e414de35e7ae9ec5165ff009", "patch": "@@ -0,0 +1,18 @@\n+#include <limits.h>\n+\n+extern void exit (int);\n+extern void abort (void);\n+\n+volatile unsigned int i;\n+\n+int\n+main (void)\n+{\n+  unsigned short z = 0;\n+\n+  do ++i;\n+  while (--z > 0);\n+  if (i != USHRT_MAX + 1U)\n+    abort ();\n+  exit (0);\n+}"}]}