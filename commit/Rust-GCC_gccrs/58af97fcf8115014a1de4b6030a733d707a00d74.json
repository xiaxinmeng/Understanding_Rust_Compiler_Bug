{"sha": "58af97fcf8115014a1de4b6030a733d707a00d74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThhZjk3ZmNmODExNTAxNGExZGU0YjYwMzBhNzMzZDcwN2EwMGQ3NA==", "commit": {"author": {"name": "Tobias Grosser", "email": "grosser@fim.uni-passau.de", "date": "2008-11-05T04:45:49Z"}, "committer": {"name": "Tobias Grosser", "email": "grosser@gcc.gnu.org", "date": "2008-11-05T04:45:49Z"}, "message": "re PR middle-end/37943 ([graphite] ICE : in build_graphite_scops, at graphite.c:1823)\n\n2008-11-05  Tobias Grosser  <grosser@fim.uni-passau.de>\n\n\tPR middle-end/37943\n\n\t* graphite.c (scopdet_basic_block_info): Fix loops with multiple\n\texits and conditions.\n\t* testsuite/gcc.dg/graphite/pr37943.c: New.\n\nFrom-SVN: r141598", "tree": {"sha": "5a3fc4de29e2b86ff5b3c31640600fcd104f3f96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a3fc4de29e2b86ff5b3c31640600fcd104f3f96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58af97fcf8115014a1de4b6030a733d707a00d74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58af97fcf8115014a1de4b6030a733d707a00d74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58af97fcf8115014a1de4b6030a733d707a00d74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58af97fcf8115014a1de4b6030a733d707a00d74/comments", "author": {"login": "tobiasgrosser", "id": 521960, "node_id": "MDQ6VXNlcjUyMTk2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/521960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobiasgrosser", "html_url": "https://github.com/tobiasgrosser", "followers_url": "https://api.github.com/users/tobiasgrosser/followers", "following_url": "https://api.github.com/users/tobiasgrosser/following{/other_user}", "gists_url": "https://api.github.com/users/tobiasgrosser/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobiasgrosser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobiasgrosser/subscriptions", "organizations_url": "https://api.github.com/users/tobiasgrosser/orgs", "repos_url": "https://api.github.com/users/tobiasgrosser/repos", "events_url": "https://api.github.com/users/tobiasgrosser/events{/privacy}", "received_events_url": "https://api.github.com/users/tobiasgrosser/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a28a65ec257285afa3bdad02e7d769abd27ebacb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a28a65ec257285afa3bdad02e7d769abd27ebacb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a28a65ec257285afa3bdad02e7d769abd27ebacb"}], "stats": {"total": 69, "additions": 63, "deletions": 6}, "files": [{"sha": "d3079e9421eed5b3b1c94e3ce34440698840a646", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58af97fcf8115014a1de4b6030a733d707a00d74/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58af97fcf8115014a1de4b6030a733d707a00d74/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=58af97fcf8115014a1de4b6030a733d707a00d74", "patch": "@@ -1,3 +1,11 @@\n+2008-11-05  Tobias Grosser  <grosser@fim.uni-passau.de>\n+\n+\tPR middle-end/37943\n+\n+\t* graphite.c (scopdet_basic_block_info): Fix loops with multiple\n+\texits and conditions.\n+\t* testsuite/gcc.dg/graphite/pr37943.c: New.\n+\n 2008-11-04  Thomas Schwinge  <tschwinge@gnu.org>\n \n \t* MAINTAINERS (Write after approval): Add myself. "}, {"sha": "7df30287fb0c32724f0bb2b845ef18a992505cfe", "filename": "gcc/graphite.c", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58af97fcf8115014a1de4b6030a733d707a00d74/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58af97fcf8115014a1de4b6030a733d707a00d74/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=58af97fcf8115014a1de4b6030a733d707a00d74", "patch": "@@ -1326,11 +1326,29 @@ scopdet_basic_block_info (basic_block bb, VEC (sd_region, heap) **scops,\n         int i;\n         build_scops_1 (bb, &tmp_scops, loop);\n \n-\t/* XXX: Use 'e->src' ot better 'bb'?  */\n+\n+\t/* Start at all bbs dominated by a loop exit that only exists in this\n+\t   loop.  */ \n         for (i = 0; VEC_iterate (edge, exits, i, e); i++)\n-          if (dominated_by_p (CDI_DOMINATORS, e->dest, e->src)\n-              && e->src->loop_father == loop)\n-            build_scops_1 (e->dest, &tmp_scops, e->dest->loop_father);\n+          if (e->src->loop_father == loop)\n+            {  \n+\t      VEC (basic_block, heap) *dominated;\n+\t      basic_block b;\n+\t      int j;\n+\t      dominated = get_dominated_by (CDI_DOMINATORS, e->src);\n+\t      for (j = 0; VEC_iterate (basic_block, dominated, j, b); j++)\n+\t\t/* Loop exit.  */\n+\t\tif (loop_depth (find_common_loop (loop, b->loop_father))\n+\t\t    < loop_depth (loop))\n+\t\t  {\n+\t\t    /* Pass loop_outer to recognize b as loop header in\n+\t\t       build_scops_1.  */\n+\t\t    if (b->loop_father->header == b)\n+\t\t      build_scops_1 (b, &tmp_scops, loop_outer (b->loop_father));\n+\t\t    else\n+\t\t      build_scops_1 (b, &tmp_scops, b->loop_father);\n+\t\t  }\n+\t    }\n \n         result.next = NULL; \n         result.last = NULL;\n@@ -1440,7 +1458,8 @@ scopdet_basic_block_info (basic_block bb, VEC (sd_region, heap) **scops,\n \tfor (i = 0; VEC_iterate (basic_block, dominated, i, dom_bb); i++)\n \t  {\n \t    /* Ignore loop exits: they will be handled after the loop body.  */\n-\t    if (is_loop_exit (loop, dom_bb))\n+\t    if (loop_depth (find_common_loop (loop, dom_bb->loop_father))\n+\t\t< loop_depth (loop))\n \t      {\n \t\tresult.exits = true;\n \t\tcontinue;\n@@ -1790,7 +1809,6 @@ create_sese_edges (VEC (sd_region, heap) *regions)\n   int i;\n   sd_region *s;\n \n-\n   for (i = 0; VEC_iterate (sd_region, regions, i, s); i++)\n     create_single_entry_edge (s);\n "}, {"sha": "f8ec28d916c790fa013effc86a69ff88904e4498", "filename": "gcc/testsuite/gcc.dg/graphite/pr37943.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58af97fcf8115014a1de4b6030a733d707a00d74/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr37943.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58af97fcf8115014a1de4b6030a733d707a00d74/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr37943.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr37943.c?ref=58af97fcf8115014a1de4b6030a733d707a00d74", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-options \"-O3 -fgraphite-identity -fdump-tree-graphite-all\" } */\n+\n+typedef struct\n+{\n+      int mode,state,num,state_out;\n+      unsigned char* bits;\n+      char *out;\n+}test;\n+unsigned char copy( test* s )\n+{\n+   while(1)\n+     {\n+      if (s->mode == 0) break;\n+      if (s->state_out >= s->num) break;\n+      *(s->out) = s->bits[s->state_out];\n+      if (s->mode == 0) s->mode++;\n+     }\n+}\n+unsigned char compress(test *in)\n+{\n+   unsigned char p_in, p_out;\n+   while(1)\n+   {\n+      if (in->state == 1) \n+      {\n+         p_out |= copy(in);\n+         if (in->state_out < in->num) break;\n+      }\n+   }\n+   return p_in || p_out;\n+"}]}