{"sha": "d5b5d21260d1036b078cad42ec2fe88754cd8ca3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDViNWQyMTI2MGQxMDM2YjA3OGNhZDQyZWMyZmU4ODc1NGNkOGNhMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-08-24T14:59:43Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-08-24T14:59:43Z"}, "message": "re PR target/77270 (Flag -mprftchw is shared with 3dnow for -march=k8)\n\n\tPR target/77270\n\t* gcc.dg/tree-ssa/loop-28.c: Also compile on 32bit x86 targets.\n\t(dg-options): Use -march=amdfam10 instead of -march=athlon.\n\t* gcc.dg/tree-ssa/update-unroll-1.c: Ditto.\n\t* gcc.dg/tree-ssa/prefetch-3.c: Ditto.\n\t* gcc.dg/tree-ssa/prefetch-4.c: Ditto.\n\t* gcc.dg/tree-ssa/prefetch-5.c: Ditto.\n\t* gcc.dg/tree-ssa/prefetch-6.c: Ditto.  Do not require sse2\n\teffective target.  Remove scan-assembler-times directives.\n\t* gcc.dg/tree-ssa/prefetch-7.c: Ditto.\n\t* gcc.dg/tree-ssa/prefetch-8.c: Ditto.\n\t* gcc.dg/tree-ssa/prefetch-9.c: Ditto.\n\nFrom-SVN: r239737", "tree": {"sha": "2b99a9b2a44b96dabcea0bb24e14da705e058dfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b99a9b2a44b96dabcea0bb24e14da705e058dfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5b5d21260d1036b078cad42ec2fe88754cd8ca3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5b5d21260d1036b078cad42ec2fe88754cd8ca3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5b5d21260d1036b078cad42ec2fe88754cd8ca3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b9553e20ad92d1c29416d72061816712b7bea39d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9553e20ad92d1c29416d72061816712b7bea39d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9553e20ad92d1c29416d72061816712b7bea39d"}], "stats": {"total": 76, "additions": 33, "deletions": 43}, "files": [{"sha": "354e485de44a17934a0940a19a36ac0b9f8d29ea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d5b5d21260d1036b078cad42ec2fe88754cd8ca3", "patch": "@@ -1,3 +1,18 @@\n+2016-08-24  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/77270\n+\t* gcc.dg/tree-ssa/loop-28.c: Also compile on 32bit x86 targets.\n+\t(dg-options): Use -march=amdfam10 instead of -march=athlon.\n+\t* gcc.dg/tree-ssa/update-unroll-1.c: Ditto.\n+\t* gcc.dg/tree-ssa/prefetch-3.c: Ditto.\n+\t* gcc.dg/tree-ssa/prefetch-4.c: Ditto.\n+\t* gcc.dg/tree-ssa/prefetch-5.c: Ditto.\n+\t* gcc.dg/tree-ssa/prefetch-6.c: Ditto.  Do not require sse2\n+\teffective target.  Remove scan-assembler-times directives.\n+\t* gcc.dg/tree-ssa/prefetch-7.c: Ditto.\n+\t* gcc.dg/tree-ssa/prefetch-8.c: Ditto.\n+\t* gcc.dg/tree-ssa/prefetch-9.c: Ditto.\n+\n 2016-08-24  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n \n \t* gcc.c-torture/execute/pr71083.c: Use UINT32_TYPE instead"}, {"sha": "3ca0ab8ea5fd503616ba7b05051794e3d6af39d8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-28.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-28.c?ref=d5b5d21260d1036b078cad42ec2fe88754cd8ca3", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n-/* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon -fdump-tree-optimized -fdump-tree-aprefetch --param max-unrolled-insns=1000\" } */\n+/* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-options \"-O2 -fprefetch-loop-arrays -march=amdfam10 -fdump-tree-optimized -fdump-tree-aprefetch --param max-unrolled-insns=1000\" } */\n \n char x[100000];\n "}, {"sha": "467903bf3fc57ca9b69db216aa25d9f348910a3b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-3.c?ref=d5b5d21260d1036b078cad42ec2fe88754cd8ca3", "patch": "@@ -1,7 +1,7 @@\n /* Prefetching used to prefer nonsensical unroll factor of 5 in this testcase.  */\n \n-/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n-/* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon -msse2 -mfpmath=sse -fdump-tree-aprefetch-details\" } */\n+/* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-options \"-O2 -fprefetch-loop-arrays -march=amdfam10 -fdump-tree-aprefetch-details\" } */\n \n #define N 1000000\n "}, {"sha": "dc8e40aca27eb1417ca6245e2c90f7498d09768a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-4.c?ref=d5b5d21260d1036b078cad42ec2fe88754cd8ca3", "patch": "@@ -1,7 +1,7 @@\n /* The loop rolls too little, hence the prefetching would not be useful.  */\n \n-/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n-/* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon -fdump-tree-optimized\" } */\n+/* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-options \"-O2 -fprefetch-loop-arrays -march=amdfam10 -fdump-tree-optimized\" } */\n \n int xxx[20];\n "}, {"sha": "7f343b66025e595c5633898eb69b9d84dcce45a5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-5.c?ref=d5b5d21260d1036b078cad42ec2fe88754cd8ca3", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n-/* { dg-options \"-O2 --param min-insn-to-prefetch-ratio=5 -fprefetch-loop-arrays -march=athlon -fdump-tree-aprefetch-details\" } */\n+/* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-options \"-O2 -fprefetch-loop-arrays -march=amdfam10 --param min-insn-to-prefetch-ratio=5 -fdump-tree-aprefetch-details\" } */\n \n /* These are common idioms for writing variable-length arrays at the end\n    of structures.  We should not deduce anything about the number of iterations"}, {"sha": "12f09016943b93ceb04540ae5a31fba765ecf444", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-6.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-6.c?ref=d5b5d21260d1036b078cad42ec2fe88754cd8ca3", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n-/* { dg-require-effective-target sse2 } */\n-/* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon -msse2 -mfpmath=sse --param simultaneous-prefetches=100 --param min-insn-to-prefetch-ratio=6 -fdump-tree-aprefetch-details\" } */\n+/* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-options \"-O2 -fprefetch-loop-arrays -march=amdfam10 --param simultaneous-prefetches=100 --param min-insn-to-prefetch-ratio=6 -fdump-tree-aprefetch-details\" } */\n \n #define N 1000\n #define K 900\n@@ -47,7 +46,3 @@ double test(void)\n \n /* { dg-final { scan-tree-dump-times \"Issued prefetch\" 5 \"aprefetch\" } } */\n /* { dg-final { scan-tree-dump-times \"Issued nontemporal prefetch\" 3 \"aprefetch\" } } */\n-\n-/* { dg-final { scan-assembler-times \"prefetcht\" 5 } } */\n-/* { dg-final { scan-assembler-times \"prefetchnta\" 3 } } */\n-"}, {"sha": "c9f70271892e47ae4ee9f09f88dcde3d47231ef0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-7.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-7.c?ref=d5b5d21260d1036b078cad42ec2fe88754cd8ca3", "patch": "@@ -1,7 +1,5 @@\n-/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n-/* { dg-require-effective-target sse2 } */\n-/* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=athlon\" } } */\n-/* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon -msse2 -mfpmath=sse --param simultaneous-prefetches=100 -fdump-tree-aprefetch-details -fdump-tree-optimized\" } */\n+/* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-options \"-O2 -fprefetch-loop-arrays -march=amdfam10 --param simultaneous-prefetches=100 -fdump-tree-aprefetch-details -fdump-tree-optimized\" } */\n \n #define K 1000000\n int a[K];\n@@ -39,8 +37,3 @@ void test(int *p)\n /* { dg-final { scan-tree-dump-times \"a nontemporal store\" 0 \"aprefetch\" } } */\n \n /* { dg-final { scan-tree-dump-times \"builtin_prefetch\" 7 \"optimized\" } } */\n-\n-/* { dg-final { scan-assembler-times \"prefetchw\" 5 } } */\n-/* { dg-final { scan-assembler-times \"prefetcht\" 1 } } */\n-/* { dg-final { scan-assembler-times \"prefetchnta\" 1 } } */\n-"}, {"sha": "fe433ac3a7f08c0a620f5eb4999c5cbd779d5586", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-8.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-8.c?ref=d5b5d21260d1036b078cad42ec2fe88754cd8ca3", "patch": "@@ -1,7 +1,5 @@\n-/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n-/* { dg-require-effective-target sse2 } */\n-/* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=athlon\" } } */\n-/* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon -msse2 -mfpmath=sse --param simultaneous-prefetches=100 -fdump-tree-aprefetch-details -fdump-tree-optimized\" } */\n+/* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-options \"-O2 -fprefetch-loop-arrays -march=amdfam10 --param simultaneous-prefetches=100 -fdump-tree-aprefetch-details -fdump-tree-optimized\" } */\n \n #define K 1000000\n int a[K];\n@@ -19,7 +17,3 @@ void test()\n \n /* { dg-final { scan-tree-dump \"=\\\\{nt\\\\}\" \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"__builtin_ia32_mfence\" 1 \"optimized\" } } */\n-\n-/* { dg-final { scan-assembler \"movnti\" } } */\n-/* { dg-final { scan-assembler-times \"mfence\" 1 } } */\n-"}, {"sha": "5be9282c9beac92a9ba341a206ddc9f12774cac5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-9.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-9.c?ref=d5b5d21260d1036b078cad42ec2fe88754cd8ca3", "patch": "@@ -1,7 +1,5 @@\n-/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n-/* { dg-require-effective-target sse2 } */\n-/* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=athlon\" } } */\n-/* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon -msse2 -mfpmath=sse --param simultaneous-prefetches=100 -fdump-tree-aprefetch-details -fdump-tree-optimized\" } */\n+/* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-options \"-O2 -fprefetch-loop-arrays -march=amdfam10 --param simultaneous-prefetches=100 -fdump-tree-aprefetch-details -fdump-tree-optimized\" } */\n \n #define K 1000000\n int a[K], b[K];\n@@ -22,8 +20,3 @@ void test()\n /* { dg-final { scan-tree-dump-times \"builtin_prefetch\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump \"=\\\\{nt\\\\}\" \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"__builtin_ia32_mfence\" 1 \"optimized\" } } */\n-\n-/* { dg-final { scan-assembler-times \"prefetchnta\" 1 } } */\n-/* { dg-final { scan-assembler \"movnti\" } } */\n-/* { dg-final { scan-assembler-times \"mfence\" 1 } } */\n-"}, {"sha": "1028c8b06f5e93caae28e2b98f7d4bb381f087d8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/update-unroll-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fupdate-unroll-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5b5d21260d1036b078cad42ec2fe88754cd8ca3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fupdate-unroll-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fupdate-unroll-1.c?ref=d5b5d21260d1036b078cad42ec2fe88754cd8ca3", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n-/* { dg-options \"-O1 -fprefetch-loop-arrays -march=athlon -fdump-tree-aprefetch-blocks\" } */\n+/* { dg-do compile { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-options \"-O1 -fprefetch-loop-arrays -march=amdfam10 -fdump-tree-aprefetch-blocks\" } */\n \n int a[10000];\n "}]}