{"sha": "7a92e0ca3c74c44e476157b82b517cac91b5f7a1", "node_id": "C_kwDOANBUbNoAKDdhOTJlMGNhM2M3NGM0NGU0NzYxNTdiODJiNTE3Y2FjOTFiNWY3YTE", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2021-09-20T22:10:28Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-09-23T11:55:45Z"}, "message": "Remove warnings from v0_mangle functions in rust-mangle.cc\n\nThere were two warnings in rust-mangle.cc\n\nrust-mangle.cc: In function \u2018std::string Rust::Compile::v0_mangle_item\n(const Rust::TyTy::BaseType*, const Rust::Resolver::CanonicalPath&, const string&)\u2019:\nrust-mangle.cc:198:1: warning: no return statement in function returning non-void\n\nrust-mangle.cc: At global scope:\nrust-mangle.cc:201:1: warning: \u2018std::string Rust::Compile::v0_mangle_impl_item\n(const Rust::TyTy::BaseType*, const Rust::TyTy::BaseType*, const string&, const string&)\u2019\n declared \u2018static\u2019 but never defined [-Wunused-function]\n\nThe first results in undefined behaviour, the second points out that the\nfunction isn't ever called/used.\n\nFix the first by adding a gcc_unreachable () to turn the calling of the\nfunction into an abort ().  Fix the second by adding the call in\nMangler::mangle_impl_item. And add an implementation simply calling\ngcc-unreachable (). This turns the warnings and undefined behaviour into\nexplicit runtime aborts when these functions are actually called.", "tree": {"sha": "fc1dca456bb7493e51a18d683cb07d39d1e101a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc1dca456bb7493e51a18d683cb07d39d1e101a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a92e0ca3c74c44e476157b82b517cac91b5f7a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a92e0ca3c74c44e476157b82b517cac91b5f7a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a92e0ca3c74c44e476157b82b517cac91b5f7a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a92e0ca3c74c44e476157b82b517cac91b5f7a1/comments", "author": null, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98359f20cd2d9268df582ea1ee289e0ea69efcb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98359f20cd2d9268df582ea1ee289e0ea69efcb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98359f20cd2d9268df582ea1ee289e0ea69efcb5"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "0e6643c64aebe9dafc961d6f6ddf08566d8fd6cf", "filename": "gcc/rust/backend/rust-mangle.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a92e0ca3c74c44e476157b82b517cac91b5f7a1/gcc%2Frust%2Fbackend%2Frust-mangle.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a92e0ca3c74c44e476157b82b517cac91b5f7a1/gcc%2Frust%2Fbackend%2Frust-mangle.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-mangle.cc?ref=7a92e0ca3c74c44e476157b82b517cac91b5f7a1", "patch": "@@ -195,11 +195,15 @@ v0_mangle_item (const TyTy::BaseType *ty, const Resolver::CanonicalPath &path,\n \t\tconst std::string &crate_name)\n {\n   auto ty_prefix = v0_type_prefix (ty);\n+  gcc_unreachable ();\n }\n \n static std::string\n v0_mangle_impl_item (const TyTy::BaseType *self, const TyTy::BaseType *ty,\n-\t\t     const std::string &name, const std::string &crate_name);\n+\t\t     const std::string &name, const std::string &crate_name)\n+{\n+  gcc_unreachable ();\n+}\n \n std::string\n Mangler::mangle_item (const TyTy::BaseType *ty,\n@@ -227,7 +231,7 @@ Mangler::mangle_impl_item (const TyTy::BaseType *self, const TyTy::BaseType *ty,\n     case Mangler::MangleVersion::LEGACY:\n       return legacy_mangle_impl_item (self, ty, name, crate_name);\n     case Mangler::MangleVersion::V0:\n-      gcc_unreachable ();\n+      return v0_mangle_impl_item (self, ty, name, crate_name);\n     default:\n       gcc_unreachable ();\n     }"}]}