{"sha": "e5f3553320cd121e7952ee7b8ee5cad696336541", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVmMzU1MzMyMGNkMTIxZTc5NTJlZTdiOGVlNWNhZDY5NjMzNjU0MQ==", "commit": {"author": {"name": "Tim Shen", "email": "timshen@google.com", "date": "2015-01-19T23:00:13Z"}, "committer": {"name": "Tim Shen", "email": "timshen@gcc.gnu.org", "date": "2015-01-19T23:00:13Z"}, "message": "re PR libstdc++/64649 (regex_traits::lookup_classname() only works with random access iterators)\n\n\tPR libstdc++/64649\n\t* include/bits/regex.tcc (regex_traits<>::lookup_collatename,\n\tregex_traits<>::lookup_classname): Support forward iterators.\n\t* testsuite/28_regex/traits/char/lookup_classname.cc: New testcases.\n\t* testsuite/28_regex/traits/char/lookup_collatename.cc: New testcase.\n\nFrom-SVN: r219866", "tree": {"sha": "bb52ff3db7595623a6812207d0f1160673585f9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb52ff3db7595623a6812207d0f1160673585f9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5f3553320cd121e7952ee7b8ee5cad696336541", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5f3553320cd121e7952ee7b8ee5cad696336541", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5f3553320cd121e7952ee7b8ee5cad696336541", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5f3553320cd121e7952ee7b8ee5cad696336541/comments", "author": {"login": "timshen91", "id": 1157432, "node_id": "MDQ6VXNlcjExNTc0MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1157432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timshen91", "html_url": "https://github.com/timshen91", "followers_url": "https://api.github.com/users/timshen91/followers", "following_url": "https://api.github.com/users/timshen91/following{/other_user}", "gists_url": "https://api.github.com/users/timshen91/gists{/gist_id}", "starred_url": "https://api.github.com/users/timshen91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timshen91/subscriptions", "organizations_url": "https://api.github.com/users/timshen91/orgs", "repos_url": "https://api.github.com/users/timshen91/repos", "events_url": "https://api.github.com/users/timshen91/events{/privacy}", "received_events_url": "https://api.github.com/users/timshen91/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "60c176fb459c7780f9cb711e2427e41dca12a54a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60c176fb459c7780f9cb711e2427e41dca12a54a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60c176fb459c7780f9cb711e2427e41dca12a54a"}], "stats": {"total": 131, "additions": 66, "deletions": 65}, "files": [{"sha": "fee4452555f4b77a2716130e44263f0dbb21c16d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5f3553320cd121e7952ee7b8ee5cad696336541/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5f3553320cd121e7952ee7b8ee5cad696336541/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e5f3553320cd121e7952ee7b8ee5cad696336541", "patch": "@@ -1,3 +1,11 @@\n+2015-01-19  Tim Shen  <timshen@google.com>\n+\n+\tPR libstdc++/64649\n+\t* include/bits/regex.tcc (regex_traits<>::lookup_collatename,\n+\tregex_traits<>::lookup_classname): Support forward iterators.\n+\t* testsuite/28_regex/traits/char/lookup_classname.cc: New testcases.\n+\t* testsuite/28_regex/traits/char/lookup_collatename.cc: New testcase.\n+\n 2015-01-19  Tim Shen  <timshen@google.com>\n \n \tPR libstdc++/64584"}, {"sha": "3f16e66ab2a468132de1e063425071bc4247f18c", "filename": "libstdc++-v3/include/bits/regex.tcc", "status": "modified", "additions": 24, "deletions": 65, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5f3553320cd121e7952ee7b8ee5cad696336541/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5f3553320cd121e7952ee7b8ee5cad696336541/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.tcc?ref=e5f3553320cd121e7952ee7b8ee5cad696336541", "patch": "@@ -267,53 +267,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  \"right-curly-bracket\",\n \t  \"tilde\",\n \t  \"DEL\",\n-\t  \"\"\n \t};\n \n-      // same as boost\n-      //static const char* __digraphs[] =\n-      //  {\n-      //    \"ae\",\n-      //    \"Ae\",\n-      //    \"AE\",\n-      //    \"ch\",\n-      //    \"Ch\",\n-      //    \"CH\",\n-      //    \"ll\",\n-      //    \"Ll\",\n-      //    \"LL\",\n-      //    \"ss\",\n-      //    \"Ss\",\n-      //    \"SS\",\n-      //    \"nj\",\n-      //    \"Nj\",\n-      //    \"NJ\",\n-      //    \"dz\",\n-      //    \"Dz\",\n-      //    \"DZ\",\n-      //    \"lj\",\n-      //    \"Lj\",\n-      //    \"LJ\",\n-      //    \"\"\n-      //  };\n-\n-      std::string __s(__last - __first, '?');\n-      __fctyp.narrow(__first, __last, '?', &*__s.begin());\n-\n-      for (unsigned int __i = 0; *__collatenames[__i]; __i++)\n-\tif (__s == __collatenames[__i])\n-\t  return string_type(1, __fctyp.widen(static_cast<char>(__i)));\n-\n-      //for (unsigned int __i = 0; *__digraphs[__i]; __i++)\n-      //  {\n-      //    const char* __now = __digraphs[__i];\n-      //    if (__s == __now)\n-      //      {\n-      //\tstring_type ret(__s.size(), __fctyp.widen('?'));\n-      //\t__fctyp.widen(__now, __now + 2/* ouch */, &*ret.begin());\n-      //\treturn ret;\n-      //      }\n-      //  }\n+      string __s(__first, __last);\n+      for (const auto& __it : __collatenames)\n+\tif (__s == __it)\n+\t  return string_type(1, __fctyp.widen(\n+\t    static_cast<char>(&__it - __collatenames)));\n+\n+      // TODO Add digraph support:\n+      // http://boost.sourceforge.net/libs/regex/doc/collating_names.html\n+\n       return string_type();\n     }\n \n@@ -324,12 +288,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     lookup_classname(_Fwd_iter __first, _Fwd_iter __last, bool __icase) const\n     {\n       typedef std::ctype<char_type> __ctype_type;\n-      typedef std::ctype<char> __cctype_type;\n-      typedef const pair<const char*, char_class_type> _ClassnameEntry;\n       const __ctype_type& __fctyp(use_facet<__ctype_type>(_M_locale));\n-      const __cctype_type& __cctyp(use_facet<__cctype_type>(_M_locale));\n \n-      static _ClassnameEntry __classnames[] =\n+      // Mappings from class name to class mask.\n+      static const pair<const char*, char_class_type> __classnames[] =\n       {\n \t{\"d\", ctype_base::digit},\n \t{\"w\", {ctype_base::alnum, _RegexMask::_S_under}},\n@@ -348,22 +310,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t{\"xdigit\", ctype_base::xdigit},\n       };\n \n-      std::string __s(__last - __first, '?');\n-      __fctyp.narrow(__first, __last, '?', &__s[0]);\n-      __cctyp.tolower(&*__s.begin(), &*__s.begin() + __s.size());\n-      for (_ClassnameEntry* __it = __classnames;\n-\t   __it < *(&__classnames + 1);\n-\t   ++__it)\n-\t{\n-\t  if (__s == __it->first)\n-\t    {\n-\t      if (__icase\n-\t\t  && ((__it->second\n-\t\t       & (ctype_base::lower | ctype_base::upper)) != 0))\n-\t\treturn ctype_base::alpha;\n-\t      return __it->second;\n-\t    }\n-\t}\n+      string __s;\n+      for (auto __cur = __first; __cur != __last; ++__cur)\n+\t__s += __fctyp.narrow(__fctyp.tolower(*__cur), '?');\n+\n+      for (const auto& __it : __classnames)\n+\tif (__s == __it.first)\n+\t  {\n+\t    if (__icase\n+\t\t&& ((__it.second\n+\t\t     & (ctype_base::lower | ctype_base::upper)) != 0))\n+\t      return ctype_base::alpha;\n+\t    return __it.second;\n+\t  }\n       return 0;\n     }\n "}, {"sha": "f4c97580ff9ba8c2e8ad68c1233e2e31c544718a", "filename": "libstdc++-v3/testsuite/28_regex/traits/char/lookup_classname.cc", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5f3553320cd121e7952ee7b8ee5cad696336541/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Ftraits%2Fchar%2Flookup_classname.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5f3553320cd121e7952ee7b8ee5cad696336541/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Ftraits%2Fchar%2Flookup_classname.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Ftraits%2Fchar%2Flookup_classname.cc?ref=e5f3553320cd121e7952ee7b8ee5cad696336541", "patch": "@@ -26,6 +26,7 @@\n // 28.7(9) Class template regex_traits [re.traits]\n \n #include <regex>\n+#include <forward_list>\n #include <testsuite_hooks.h>\n \n void\n@@ -47,8 +48,29 @@ test01()\n \tVERIFY( c2 == c3 );\n }\n \n+// Test forward iterator\n+void\n+test02()\n+{\n+  const char strlit[] = \"upper\";\n+  std::forward_list<char> s(strlit, strlit + strlen(strlit));\n+  std::regex_traits<char> traits;\n+  VERIFY(traits.isctype('C', traits.lookup_classname(s.begin(), s.end(), false)));\n+}\n+\n+// icase\n+void\n+test03()\n+{\n+  std::string s(\"lower\");\n+  std::regex_traits<char> traits;\n+  VERIFY(traits.isctype('C', traits.lookup_classname(s.begin(), s.end(), true)));\n+}\n+\n int main()\n {\n \ttest01();\n+\ttest02();\n+\ttest03();\n \treturn 0;\n }"}, {"sha": "fac4a240a9bd65fd37f381b791f2df485b4d3f18", "filename": "libstdc++-v3/testsuite/28_regex/traits/char/lookup_collatename.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5f3553320cd121e7952ee7b8ee5cad696336541/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Ftraits%2Fchar%2Flookup_collatename.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5f3553320cd121e7952ee7b8ee5cad696336541/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Ftraits%2Fchar%2Flookup_collatename.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Ftraits%2Fchar%2Flookup_collatename.cc?ref=e5f3553320cd121e7952ee7b8ee5cad696336541", "patch": "@@ -26,6 +26,7 @@\n // 28.7 (8) Class template regex_traits [re.traits]\n \n #include <regex>\n+#include <forward_list>\n #include <testsuite_hooks.h>\n \n void\n@@ -40,8 +41,19 @@ test01()\n   VERIFY(t.lookup_collatename(name, name+sizeof(name)-1) == \"~\");\n }\n \n+// Test forward iterator.\n+void\n+test02()\n+{\n+  const char strlit[] = \"tilde\";\n+  std::forward_list<char> s(strlit, strlit + strlen(strlit));\n+  std::regex_traits<char> traits;\n+  VERIFY(traits.lookup_collatename(s.begin(), s.end()) == \"~\");\n+}\n+\n int main()\n {\n \ttest01();\n+\ttest02();\n \treturn 0;\n }"}]}