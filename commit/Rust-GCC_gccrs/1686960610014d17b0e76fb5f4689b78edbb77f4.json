{"sha": "1686960610014d17b0e76fb5f4689b78edbb77f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY4Njk2MDYxMDAxNGQxN2IwZTc2ZmI1ZjQ2ODliNzhlZGJiNzdmNA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2008-05-16T10:28:50Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2008-05-16T10:28:50Z"}, "message": "From Jie Zhang  <jie.zhang@analog.com>\n        * config/bfin/t-bfin-elf (MULTILIB_OPTIONS, MULTILIB_DIRNAMES,\n\tMULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Remove mcpu=bf532-0.3,\n\tmcpu=bf561-none and mcpu=bf561-0.2.\n\t* config/bfin/t-bfin-uclinux (MULTILIB_OPTIONS, MULTILIB_DIRNAMES,\n\tMULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Likewise.\n\t* config/bfin/t-bfin-linux (MULTILIB_OPTIONS, MULTILIB_DIRNAMES,\n\tMULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Likewise.\n\t* config/bfin/bfin-protos.h (enum bfin_cpu_type): Add\n\tBFIN_CPU_UNKNOWN.\n\t* config/bfin/elf.h (STARTFILE_SPEC): Use specific CRT for\n\tBF561.\n\t(LIB_SPEC): Use proper linker script for bf561.  Error if no mcpu\n\toption.\n\t* config/bfin/bfin.c (bfin_cpu_type): Set to BFIN_CPU_UNKNOWN.\n\t(cputype_selected): Remove.\n\t(bfin_handle_option): Don't use cputype_selected.\n\t(override_options): When no mcpu option, enable all workarounds.\n\tDon't use bfin_workarounds.\n\t* config/bfin/bfin.h (DRIVER_SELF_SPECS): Don't set default\n\tprocessor type.\n\t(DEFAULT_CPU_TYPE): Don't define.\n\nFrom-SVN: r135413", "tree": {"sha": "e99329ad8e842d3ca072dc3ad47cbff46ae27d93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e99329ad8e842d3ca072dc3ad47cbff46ae27d93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1686960610014d17b0e76fb5f4689b78edbb77f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1686960610014d17b0e76fb5f4689b78edbb77f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1686960610014d17b0e76fb5f4689b78edbb77f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1686960610014d17b0e76fb5f4689b78edbb77f4/comments", "author": null, "committer": null, "parents": [{"sha": "d0569f9fd3d445ceb0235abafeae6e08143b67c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0569f9fd3d445ceb0235abafeae6e08143b67c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0569f9fd3d445ceb0235abafeae6e08143b67c5"}], "stats": {"total": 203, "additions": 167, "deletions": 36}, "files": [{"sha": "e0c5c3549643d47904f3883fa570d7474fbef81a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1686960610014d17b0e76fb5f4689b78edbb77f4", "patch": "@@ -1,3 +1,28 @@\n+2008-05-16  Bernd Schmidt  <bernd.schmidt@analog.com>\n+\n+\tFrom Jie Zhang  <jie.zhang@analog.com>\n+        * config/bfin/t-bfin-elf (MULTILIB_OPTIONS, MULTILIB_DIRNAMES,\n+\tMULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Remove mcpu=bf532-0.3,\n+\tmcpu=bf561-none and mcpu=bf561-0.2.\n+\t* config/bfin/t-bfin-uclinux (MULTILIB_OPTIONS, MULTILIB_DIRNAMES,\n+\tMULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Likewise.\n+\t* config/bfin/t-bfin-linux (MULTILIB_OPTIONS, MULTILIB_DIRNAMES,\n+\tMULTILIB_MATCHES, MULTILIB_EXCEPTIONS): Likewise.\n+\t* config/bfin/bfin-protos.h (enum bfin_cpu_type): Add\n+\tBFIN_CPU_UNKNOWN.\n+\t* config/bfin/elf.h (STARTFILE_SPEC): Use specific CRT for\n+\tBF561.\n+\t(LIB_SPEC): Use proper linker script for bf561.  Error if no mcpu\n+\toption.\n+\t* config/bfin/bfin.c (bfin_cpu_type): Set to BFIN_CPU_UNKNOWN.\n+\t(cputype_selected): Remove.\n+\t(bfin_handle_option): Don't use cputype_selected.\n+\t(override_options): When no mcpu option, enable all workarounds.\n+\tDon't use bfin_workarounds.\n+\t* config/bfin/bfin.h (DRIVER_SELF_SPECS): Don't set default\n+\tprocessor type.\n+\t(DEFAULT_CPU_TYPE): Don't define.\n+\n 2008-05-16  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-propagate.c (substitute_and_fold): Fix stmt walking"}, {"sha": "b068befd0e5d096cf22f8e4e4f8bfce0d7a0acfd", "filename": "gcc/config/bfin/bfin-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fconfig%2Fbfin%2Fbfin-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fconfig%2Fbfin%2Fbfin-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin-protos.h?ref=1686960610014d17b0e76fb5f4689b78edbb77f4", "patch": "@@ -25,6 +25,7 @@\n /* CPU type.  */\n typedef enum bfin_cpu_type\n {\n+  BFIN_CPU_UNKNOWN,\n   BFIN_CPU_BF522,\n   BFIN_CPU_BF523,\n   BFIN_CPU_BF524,"}, {"sha": "d24570f707ef760d1cce33163a0afbd1f34a0bfe", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=1686960610014d17b0e76fb5f4689b78edbb77f4", "patch": "@@ -94,7 +94,7 @@ static int bfin_flag_schedule_insns2;\n static int bfin_flag_var_tracking;\n \n /* -mcpu support */\n-bfin_cpu_t bfin_cpu_type = DEFAULT_CPU_TYPE;\n+bfin_cpu_t bfin_cpu_type = BFIN_CPU_UNKNOWN;\n \n /* -msi-revision support. There are three special values:\n    -1      -msi-revision=none.\n@@ -104,8 +104,6 @@ int bfin_si_revision;\n /* The workarounds enabled */\n unsigned int bfin_workarounds = 0;\n \n-static bool cputype_selected = false;\n-\n struct bfin_cpu\n {\n   const char *name;\n@@ -2378,8 +2376,6 @@ bfin_handle_option (size_t code, const char *arg, int value)\n \n \tq = arg + strlen (p);\n \n-\tcputype_selected = true;\n-\n \tif (*q == '\\0')\n \t  {\n \t    bfin_si_revision = bfin_cpus[i].si_revision;\n@@ -2450,6 +2446,17 @@ bfin_init_machine_status (void)\n void\n override_options (void)\n {\n+  /* If processor type is not specified, enable all workarounds.  */\n+  if (bfin_cpu_type == BFIN_CPU_UNKNOWN)\n+    {\n+      int i;\n+\n+      for (i = 0; bfin_cpus[i].name != NULL; i++)\n+\tbfin_workarounds |= bfin_cpus[i].workarounds;\n+\n+      bfin_si_revision = 0xffff;\n+    }\n+\n   if (bfin_csync_anomaly == 1)\n     bfin_workarounds |= WA_SPECULATIVE_SYNCS;\n   else if (bfin_csync_anomaly == 0)\n@@ -2460,9 +2467,6 @@ override_options (void)\n   else if (bfin_specld_anomaly == 0)\n     bfin_workarounds &= ~WA_SPECULATIVE_LOADS;\n \n-  if (!cputype_selected)\n-    bfin_workarounds |= WA_RETS;\n-\n   if (TARGET_OMIT_LEAF_FRAME_POINTER)\n     flag_omit_frame_pointer = 1;\n \n@@ -2498,6 +2502,18 @@ override_options (void)\n   if (flag_pic && !TARGET_FDPIC && !TARGET_ID_SHARED_LIBRARY)\n     flag_pic = 0;\n \n+  if (TARGET_MULTICORE && bfin_cpu_type != BFIN_CPU_BF561)\n+    error (\"-mmulticore can only be used with BF561\");\n+\n+  if (TARGET_COREA && !TARGET_MULTICORE)\n+    error (\"-mcorea should be used with -mmulticore\");\n+\n+  if (TARGET_COREB && !TARGET_MULTICORE)\n+    error (\"-mcoreb should be used with -mmulticore\");\n+\n+  if (TARGET_COREA && TARGET_COREB)\n+    error (\"-mcorea and -mcoreb can't be used together\");\n+\n   flag_schedule_insns = 0;\n \n   /* Passes after sched2 can break the helpful TImode annotations that"}, {"sha": "042528a554d411e8dee52057201e8dad31a8edae", "filename": "gcc/config/bfin/bfin.h", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fconfig%2Fbfin%2Fbfin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fconfig%2Fbfin%2Fbfin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.h?ref=1686960610014d17b0e76fb5f4689b78edbb77f4", "patch": "@@ -33,10 +33,6 @@\n \n extern int target_flags;\n \n-#ifndef DEFAULT_CPU_TYPE\n-#define DEFAULT_CPU_TYPE BFIN_CPU_BF532\n-#endif\n-\n /* Predefinition in the preprocessor for this target machine */\n #ifndef TARGET_CPU_CPP_BUILTINS\n #define TARGET_CPU_CPP_BUILTINS()\t\t\\\n@@ -148,12 +144,19 @@ extern int target_flags;\n \tbuiltin_define (\"__ID_SHARED_LIB__\");\t\\\n       if (flag_no_builtin)\t\t\t\\\n \tbuiltin_define (\"__NO_BUILTIN\");\t\\\n+      if (TARGET_MULTICORE)\t\t\t\\\n+\tbuiltin_define (\"__BFIN_MULTICORE\");\t\\\n+      if (TARGET_COREA)\t\t\t\t\\\n+\tbuiltin_define (\"__BFIN_COREA\");\t\\\n+      if (TARGET_COREB)\t\t\t\t\\\n+\tbuiltin_define (\"__BFIN_COREB\");\t\\\n+      if (TARGET_SDRAM)\t\t\t\t\\\n+\tbuiltin_define (\"__BFIN_SDRAM\");\t\\\n     }\t\t\t\t\t\t\\\n   while (0)\n #endif\n \n #define DRIVER_SELF_SPECS SUBTARGET_DRIVER_SELF_SPECS\t\"\\\n- %{!mcpu=*:-mcpu=bf532} \\\n  %{mleaf-id-shared-library:%{!mid-shared-library:-mid-shared-library}} \\\n  %{mfdpic:%{!fpic:%{!fpie:%{!fPIC:%{!fPIE:\\\n    \t    %{!fno-pic:%{!fno-pie:%{!fno-PIC:%{!fno-PIE:-fpie}}}}}}}}} \\"}, {"sha": "9df88432d548e3f498c6ba3c9223415d488ef176", "filename": "gcc/config/bfin/bfin.opt", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fconfig%2Fbfin%2Fbfin.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fconfig%2Fbfin%2Fbfin.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.opt?ref=1686960610014d17b0e76fb5f4689b78edbb77f4", "patch": "@@ -79,3 +79,19 @@ Enable inlining of PLT in function calls\n mstack-check-l1\n Target Report Mask(STACK_CHECK_L1)\n Do stack checking using bounds in L1 scratch memory\n+\n+mmulticore\n+Target Report Mask(MULTICORE)\n+Enable multicore support\n+\n+mcorea\n+Target Report Mask(COREA)\n+Build for Core A\n+\n+mcoreb\n+Target Report Mask(COREB)\n+Build for Core B\n+\n+msdram\n+Target Report Mask(SDRAM)\n+Build for SDRAM"}, {"sha": "5d317cd8d7f8999c8721921a057bc431086e0d3d", "filename": "gcc/config/bfin/elf.h", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fconfig%2Fbfin%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fconfig%2Fbfin%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Felf.h?ref=1686960610014d17b0e76fb5f4689b78edbb77f4", "patch": "@@ -1,15 +1,18 @@\n #undef  STARTFILE_SPEC\n #define STARTFILE_SPEC \"\\\n %{msim:%{!shared:crt0%O%s}} \\\n-%{!msim:basiccrt%O%s} \\\n+%{!msim:%{!mcpu=bf561*:%{!msdram:basiccrt%O%s} %{msdram:basiccrts%O%s};: \\\n+\t\t       %{!msdram:basiccrt561%O%s} %{msdram:basiccrt561s%O%s}} \\\n+\t%{mcpu=bf561*:%{mmulticore:%{!mcorea:%{!mcoreb:basiccrt561b%O%s}}}}} \\\n crti%O%s crtbegin%O%s crtlibid%O%s\"\n \n #undef  ENDFILE_SPEC\n #define ENDFILE_SPEC\t\"crtend%O%s crtn%O%s\"\n \n #undef  LIB_SPEC\n #define LIB_SPEC \"--start-group -lc %{msim:-lsim}%{!msim:-lnosys} --end-group \\\n-%{!T*:%{!msim:%{mcpu=bf522*:-T bf522.ld%s}%{mcpu=bf523*:-T bf523.ld%s} \\\n+%{!T*:%{!msim:%{!msdram: \\\n+\t      %{mcpu=bf522*:-T bf522.ld%s}%{mcpu=bf523*:-T bf523.ld%s} \\\n \t      %{mcpu=bf524*:-T bf524.ld%s}%{mcpu=bf525*:-T bf525.ld%s} \\\n \t      %{mcpu=bf526*:-T bf526.ld%s}%{mcpu=bf527*:-T bf527.ld%s} \\\n \t      %{mcpu=bf531*:-T bf531.ld%s}%{mcpu=bf532*:-T bf532.ld%s} \\\n@@ -19,8 +22,14 @@ crti%O%s crtbegin%O%s crtlibid%O%s\"\n \t      %{mcpu=bf542*:-T bf542.ld%s}%{mcpu=bf544*:-T bf544.ld%s} \\\n \t      %{mcpu=bf547*:-T bf547.ld%s}%{mcpu=bf548*:-T bf548.ld%s} \\\n \t      %{mcpu=bf549*:-T bf549.ld%s} \\\n-\t      %{!mcpu=*:-T bf532.ld%s} \\\n-\t      -T bfin-common-sc.ld%s}}\"\n+\t      %{mcpu=bf561*:%{!mmulticore:-T bf561.ld%s} \\\n+\t\t\t    %{mmulticore:%{mcorea:-T bf561a.ld%s}} \\\n+\t\t\t    %{mmulticore:%{mcoreb:-T bf561b.ld%s}} \\\n+\t\t\t    %{mmulticore:%{!mcorea:%{!mcoreb:-T bf561m.ld%s}}}} \\\n+\t      %{!mcpu=*:%eno processor type specified for linking} \\\n+\t      %{!mcpu=bf561*:-T bfin-common-sc.ld%s} \\\n+\t      %{mcpu=bf561*:%{!mmulticore:-T bfin-common-sc.ld%s} \\\n+\t\t\t   %{mmulticore:-T bfin-common-mc.ld%s}}}}}\"\n \n #undef USER_LABEL_PREFIX\n #define USER_LABEL_PREFIX \"_\""}, {"sha": "35fafd2ee80f5f0b1e053f5ff738697c27d27e78", "filename": "gcc/config/bfin/t-bfin-elf", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fconfig%2Fbfin%2Ft-bfin-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fconfig%2Fbfin%2Ft-bfin-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Ft-bfin-elf?ref=1686960610014d17b0e76fb5f4689b78edbb77f4", "patch": "@@ -17,14 +17,22 @@ fp-bit.c: $(srcdir)/config/fp-bit.c\n CRTSTUFF_T_CFLAGS = -fpic\n TARGET_LIBGCC2_CFLAGS = -fpic\n \n-MULTILIB_OPTIONS=mcpu=bf532-none/mcpu=bf532-0.3\n+MULTILIB_OPTIONS=mcpu=bf532-none\n MULTILIB_OPTIONS+=mid-shared-library/msep-data/mfdpic mleaf-id-shared-library\n-MULTILIB_DIRNAMES=bf532-none bf532-0.3 mid-shared-library msep-data mfdpic mleaf-id-shared-library\n-MULTILIB_MATCHES=mcpu?bf532-none=mcpu?bf561\n-MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf531-none mcpu?bf532-none=mcpu?bf533-none mcpu?bf532-none=mcpu?bf534-none mcpu?bf532-none=mcpu?bf536-none mcpu?bf532-none=mcpu?bf537-none mcpu?bf532-none=mcpu?bf561-none mcpu?bf532-none=mcpu?bf561-0.5\n-MULTILIB_MATCHES+=mcpu?bf532-0.3=mcpu?bf531-0.4 mcpu?bf532-0.3=mcpu?bf531-0.3 mcpu?bf532-0.3=mcpu?bf532-0.4 mcpu?bf532-0.3=mcpu?bf534-0.4 mcpu?bf532-0.3=mcpu?bf534-0.3 mcpu?bf532-0.3=mcpu?bf534-0.2 mcpu?bf532-0.3=mcpu?bf534-0.1 mcpu?bf532-0.3=mcpu?bf536-0.2 mcpu?bf532-0.3=mcpu?bf536-0.1 mcpu?bf532-0.3=mcpu?bf537-0.2 mcpu?bf532-0.3=mcpu?bf537-0.1 mcpu?bf532-0.3=mcpu?bf561-0.3 mcpu?bf532-0.3=mcpu?bf561-0.2 mcpu?bf532-0.3=mcpu?bf531-any mcpu?bf532-0.3=mcpu?bf532-any mcpu?bf532-0.3=mcpu?bf533-any mcpu?bf532-0.3=mcpu?bf534-any mcpu?bf532-0.3=mcpu?bf536-any mcpu?bf532-0.3=mcpu?bf537-any mcpu?bf532-0.3=mcpu?bf561-any\n+MULTILIB_DIRNAMES=bf532-none mid-shared-library msep-data mfdpic mleaf-id-shared-library\n+\n+MULTILIB_MATCHES=mcpu?bf532-none=mcpu?bf522-none mcpu?bf532-none=mcpu?bf523-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf524-none mcpu?bf532-none=mcpu?bf525-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf526-none mcpu?bf532-none=mcpu?bf527-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf531-none mcpu?bf532-none=mcpu?bf533-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf534-none mcpu?bf532-none=mcpu?bf536-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf537-none mcpu?bf532-none=mcpu?bf538-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf539-none mcpu?bf532-none=mcpu?bf542-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf544-none mcpu?bf532-none=mcpu?bf547-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf548-none mcpu?bf532-none=mcpu?bf549-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf561-none\n+\n MULTILIB_EXCEPTIONS=mleaf-id-shared-library*\n-MULTILIB_EXCEPTIONS+=mcpu=bf532-0.3/mleaf-id-shared-library*\n MULTILIB_EXCEPTIONS+=mcpu=bf532-none/mleaf-id-shared-library*\n MULTILIB_EXCEPTIONS+=*mfdpic/mleaf-id-shared-library*\n MULTILIB_EXCEPTIONS+=*msep-data/mleaf-id-shared-library*"}, {"sha": "782d0cafd818be6fa2e8719e290ba7aee0ce2869", "filename": "gcc/config/bfin/t-bfin-linux", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fconfig%2Fbfin%2Ft-bfin-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fconfig%2Fbfin%2Ft-bfin-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Ft-bfin-linux?ref=1686960610014d17b0e76fb5f4689b78edbb77f4", "patch": "@@ -17,11 +17,19 @@ fp-bit.c: $(srcdir)/config/fp-bit.c\n CRTSTUFF_T_CFLAGS = -fpic\n TARGET_LIBGCC2_CFLAGS = -fpic\n \n-MULTILIB_OPTIONS=mcpu=bf532-none/mcpu=bf532-0.3\n-MULTILIB_DIRNAMES=bf532-none bf532-0.3\n-MULTILIB_MATCHES=mcpu?bf532-none=mcpu?bf561\n-MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf531-none mcpu?bf532-none=mcpu?bf533-none mcpu?bf532-none=mcpu?bf534-none mcpu?bf532-none=mcpu?bf536-none mcpu?bf532-none=mcpu?bf537-none mcpu?bf532-none=mcpu?bf561-none mcpu?bf532-none=mcpu?bf561-0.5\n-MULTILIB_MATCHES+=mcpu?bf532-0.3=mcpu?bf531-0.4 mcpu?bf532-0.3=mcpu?bf531-0.3 mcpu?bf532-0.3=mcpu?bf532-0.4 mcpu?bf532-0.3=mcpu?bf533-0.4 mcpu?bf532-0.3=mcpu?bf533-0.3 mcpu?bf532-0.3=mcpu?bf534-0.2 mcpu?bf532-0.3=mcpu?bf534-0.1 mcpu?bf532-0.3=mcpu?bf536-0.2 mcpu?bf532-0.3=mcpu?bf536-0.1 mcpu?bf532-0.3=mcpu?bf537-0.2 mcpu?bf532-0.3=mcpu?bf537-0.1 mcpu?bf532-0.3=mcpu?bf561-0.3 mcpu?bf532-0.3=mcpu?bf561-0.2 mcpu?bf532-0.3=mcpu?bf531-any mcpu?bf532-0.3=mcpu?bf532-any mcpu?bf532-0.3=mcpu?bf533-any mcpu?bf532-0.3=mcpu?bf534-any mcpu?bf532-0.3=mcpu?bf536-any mcpu?bf532-0.3=mcpu?bf537-any mcpu?bf532-0.3=mcpu?bf561-any\n+MULTILIB_OPTIONS=mcpu=bf532-none\n+MULTILIB_DIRNAMES=bf532-none\n+\n+MULTILIB_MATCHES=mcpu?bf532-none=mcpu?bf522-none mcpu?bf532-none=mcpu?bf523-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf524-none mcpu?bf532-none=mcpu?bf525-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf526-none mcpu?bf532-none=mcpu?bf527-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf531-none mcpu?bf532-none=mcpu?bf533-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf534-none mcpu?bf532-none=mcpu?bf536-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf537-none mcpu?bf532-none=mcpu?bf538-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf539-none mcpu?bf532-none=mcpu?bf542-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf544-none mcpu?bf532-none=mcpu?bf547-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf548-none mcpu?bf532-none=mcpu?bf549-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf561-none\n \n SHLIB_MAPFILES=$(srcdir)/config/bfin/libgcc-bfin.ver\n "}, {"sha": "437666abb0b3539c246835fdb6324b573d2b058c", "filename": "gcc/config/bfin/t-bfin-uclinux", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fconfig%2Fbfin%2Ft-bfin-uclinux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fconfig%2Fbfin%2Ft-bfin-uclinux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Ft-bfin-uclinux?ref=1686960610014d17b0e76fb5f4689b78edbb77f4", "patch": "@@ -17,14 +17,22 @@ fp-bit.c: $(srcdir)/config/fp-bit.c\n CRTSTUFF_T_CFLAGS = -fpic\n TARGET_LIBGCC2_CFLAGS = -fpic\n \n-MULTILIB_OPTIONS=mcpu=bf532-none/mcpu=bf532-0.3\n+MULTILIB_OPTIONS=mcpu=bf532-none\n MULTILIB_OPTIONS+=mid-shared-library/msep-data mleaf-id-shared-library\n-MULTILIB_DIRNAMES=bf532-none bf532-0.3 mid-shared-library msep-data mleaf-id-shared-library\n-MULTILIB_MATCHES=mcpu?bf532-none=mcpu?bf561\n-MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf531-none mcpu?bf532-none=mcpu?bf533-none mcpu?bf532-none=mcpu?bf534-none mcpu?bf532-none=mcpu?bf536-none mcpu?bf532-none=mcpu?bf537-none mcpu?bf532-none=mcpu?bf561-none mcpu?bf532-none=mcpu?bf561-0.5\n-MULTILIB_MATCHES+=mcpu?bf532-0.3=mcpu?bf531-0.4 mcpu?bf532-0.3=mcpu?bf531-0.3 mcpu?bf532-0.3=mcpu?bf532-0.4 mcpu?bf532-0.3=mcpu?bf533-0.4 mcpu?bf532-0.3=mcpu?bf533-0.3 mcpu?bf532-0.3=mcpu?bf534-0.2 mcpu?bf532-0.3=mcpu?bf534-0.1 mcpu?bf532-0.3=mcpu?bf536-0.2 mcpu?bf532-0.3=mcpu?bf536-0.1 mcpu?bf532-0.3=mcpu?bf537-0.2 mcpu?bf532-0.3=mcpu?bf537-0.1 mcpu?bf532-0.3=mcpu?bf561-0.3 mcpu?bf532-0.3=mcpu?bf561-0.2 mcpu?bf532-0.3=mcpu?bf531-any mcpu?bf532-0.3=mcpu?bf532-any mcpu?bf532-0.3=mcpu?bf533-any mcpu?bf532-0.3=mcpu?bf534-any mcpu?bf532-0.3=mcpu?bf536-any mcpu?bf532-0.3=mcpu?bf537-any mcpu?bf532-0.3=mcpu?bf561-any\n+MULTILIB_DIRNAMES=bf532-none mid-shared-library msep-data mleaf-id-shared-library\n+\n+MULTILIB_MATCHES=mcpu?bf532-none=mcpu?bf522-none mcpu?bf532-none=mcpu?bf523-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf524-none mcpu?bf532-none=mcpu?bf525-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf526-none mcpu?bf532-none=mcpu?bf527-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf531-none mcpu?bf532-none=mcpu?bf533-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf534-none mcpu?bf532-none=mcpu?bf536-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf537-none mcpu?bf532-none=mcpu?bf538-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf539-none mcpu?bf532-none=mcpu?bf542-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf544-none mcpu?bf532-none=mcpu?bf547-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf548-none mcpu?bf532-none=mcpu?bf549-none\n+MULTILIB_MATCHES+=mcpu?bf532-none=mcpu?bf561-none\n+\n MULTILIB_EXCEPTIONS=mleaf-id-shared-library*\n-MULTILIB_EXCEPTIONS+=mcpu=bf532-0.3/mleaf-id-shared-library*\n MULTILIB_EXCEPTIONS+=mcpu=bf532-none/mleaf-id-shared-library*\n MULTILIB_EXCEPTIONS+=*msep-data/mleaf-id-shared-library*\n "}, {"sha": "de658f42aa7a5fb08ddfcfc57a7a4a67a567ef06", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 39, "deletions": 2, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1686960610014d17b0e76fb5f4689b78edbb77f4/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1686960610014d17b0e76fb5f4689b78edbb77f4", "patch": "@@ -452,7 +452,7 @@ Objective-C and Objective-C++ Dialects}.\n -mno-id-shared-library  -mshared-library-id=@var{n} @gol\n -mleaf-id-shared-library  -mno-leaf-id-shared-library @gol\n -msep-data  -mno-sep-data  -mlong-calls  -mno-long-calls @gol\n--mfast-fp -minline-plt}\n+-mfast-fp -minline-plt -mmulticore  -mcorea  -mcoreb  -msdram}\n \n @emph{CRIS Options}\n @gccoptlist{-mcpu=@var{cpu}  -march=@var{cpu}  -mtune=@var{cpu} @gol\n@@ -8981,8 +8981,45 @@ Not-a-Number (NAN), in the interest of performance.\n @opindex minline-plt\n Enable inlining of PLT entries in function calls to functions that are\n not known to bind locally.  It has no effect without @option{-mfdpic}.\n-@end table\n \n+@item -mmulticore\n+@opindex mmulticore\n+Build standalone application for multicore Blackfin processor. Proper\n+start files and link scripts will be used to support multicore.\n+This option defines @code{__BFIN_MULTICORE}. It can only be used with\n+@option{-mcpu=bf561@r{[}-@var{sirevision}@r{]}}. It can be used with\n+@option{-mcorea} or @option{-mcoreb}. If it's used without\n+@option{-mcorea} or @option{-mcoreb}, single application/dual core\n+programming model is used. In this model, the main function of Core B\n+should be named as coreb_main. If it's used with @option{-mcorea} or\n+@option{-mcoreb}, one application per core programming model is used.\n+If this option is not used, single core application programming\n+model is used.\n+\n+@item -mcorea\n+@opindex mcorea\n+Build standalone application for Core A of BF561 when using\n+one application per core programming model. Proper start files\n+and link scripts will be used to support Core A. This option\n+defines @code{__BFIN_COREA}. It must be used with @option{-mmulticore}.\n+\n+@item -mcoreb\n+@opindex mcoreb\n+Build standalone application for Core B of BF561 when using\n+one application per core programming model. Proper start files\n+and link scripts will be used to support Core B. This option\n+defines @code{__BFIN_COREB}. When this option is used, coreb_main\n+should be used instead of main. It must be used with\n+@option{-mmulticore}. \n+\n+@item -msdram\n+@opindex msdram\n+Build standalone application for SDRAM. Proper start files and\n+link scripts will be used to put the application into SDRAM.\n+Loader should initialize SDRAM before loading the application\n+into SDRAM. This option defines @code{__BFIN_SDRAM}.\n+@end table\n+  \n @node CRIS Options\n @subsection CRIS Options\n @cindex CRIS Options"}]}