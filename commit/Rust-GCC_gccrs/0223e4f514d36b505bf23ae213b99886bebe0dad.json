{"sha": "0223e4f514d36b505bf23ae213b99886bebe0dad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIyM2U0ZjUxNGQzNmI1MDViZjIzYWUyMTNiOTk4ODZiZWJlMGRhZA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-03-31T23:34:44Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-03-31T23:34:44Z"}, "message": "re PR c/17855 (modification of function struct return not diagnosed)\n\n\tPR c/17855\n\t* gimplify.c (gimplify_expr): Create a temporary for lvalue\n\tCOND_EXPR and CALL_EXPR.\n\ntestsuite:\n\t* gcc.c-torture/compile/struct-non-lval-1.c,\n\tgcc.c-torture/compile/struct-non-lval-2.c,\n\tgcc.c-torture/compile/struct-non-lval-3.c: New tests.\n\nFrom-SVN: r97352", "tree": {"sha": "7792b0bdd163e128984c1a5dd6701ff7587ff7e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7792b0bdd163e128984c1a5dd6701ff7587ff7e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0223e4f514d36b505bf23ae213b99886bebe0dad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0223e4f514d36b505bf23ae213b99886bebe0dad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0223e4f514d36b505bf23ae213b99886bebe0dad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0223e4f514d36b505bf23ae213b99886bebe0dad/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96ddf8ef2326b2da28955873ff0b5ab921f481c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96ddf8ef2326b2da28955873ff0b5ab921f481c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96ddf8ef2326b2da28955873ff0b5ab921f481c0"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "fac7f920737754ab26f59ee2abdf2bcdde6193d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0223e4f514d36b505bf23ae213b99886bebe0dad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0223e4f514d36b505bf23ae213b99886bebe0dad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0223e4f514d36b505bf23ae213b99886bebe0dad", "patch": "@@ -1,3 +1,9 @@\n+2005-04-01  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR c/17855\n+\t* gimplify.c (gimplify_expr): Create a temporary for lvalue\n+\tCOND_EXPR and CALL_EXPR.\n+\n 2005-03-31  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/20632"}, {"sha": "bd15e045a1653c4a2ce0a78e91f1db55747e03ac", "filename": "gcc/gimplify.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0223e4f514d36b505bf23ae213b99886bebe0dad/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0223e4f514d36b505bf23ae213b99886bebe0dad/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=0223e4f514d36b505bf23ae213b99886bebe0dad", "patch": "@@ -3810,10 +3810,28 @@ gimplify_expr (tree *expr_p, tree *pre_p, tree *post_p,\n \tcase COND_EXPR:\n \t  ret = gimplify_cond_expr (expr_p, pre_p, post_p, NULL_TREE,\n \t\t\t\t    fallback);\n+\t  /* C99 code may assign to an array in a structure value of a\n+\t     conditional expression, and this has undefined behavior\n+\t     only on execution, so create a temporary if an lvalue is\n+\t     required.  */\n+\t  if (fallback == fb_lvalue)\n+\t    {\n+\t      *expr_p = get_initialized_tmp_var (*expr_p, pre_p, post_p);\n+\t      lang_hooks.mark_addressable (*expr_p);\n+\t    }\n \t  break;\n \n \tcase CALL_EXPR:\n \t  ret = gimplify_call_expr (expr_p, pre_p, fallback != fb_none);\n+\t  /* C99 code may assign to an array in a structure returned\n+\t     from a function, and this has undefined behavior only on\n+\t     execution, so create a temporary if an lvalue is\n+\t     required.  */\n+\t  if (fallback == fb_lvalue)\n+\t    {\n+\t      *expr_p = get_initialized_tmp_var (*expr_p, pre_p, post_p);\n+\t      lang_hooks.mark_addressable (*expr_p);\n+\t    }\n \t  break;\n \n \tcase TREE_LIST:"}, {"sha": "f3c2617691581a281f5021daef8f8db8cd13e0f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0223e4f514d36b505bf23ae213b99886bebe0dad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0223e4f514d36b505bf23ae213b99886bebe0dad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0223e4f514d36b505bf23ae213b99886bebe0dad", "patch": "@@ -1,3 +1,10 @@\n+2005-04-01  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR c/17855\n+\t* gcc.c-torture/compile/struct-non-lval-1.c,\n+\tgcc.c-torture/compile/struct-non-lval-2.c,\n+\tgcc.c-torture/compile/struct-non-lval-3.c: New tests.\n+\n 2005-03-31  Janis Johnson  <janis187@us.ibm.com>\n \n \t* gcc.dg/tls/tls.exp: Remove temporary file."}, {"sha": "0924f5cc02d13b1ae9cf5040470cac217a51f254", "filename": "gcc/testsuite/gcc.c-torture/compile/struct-non-lval-1.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0223e4f514d36b505bf23ae213b99886bebe0dad/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstruct-non-lval-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0223e4f514d36b505bf23ae213b99886bebe0dad/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstruct-non-lval-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstruct-non-lval-1.c?ref=0223e4f514d36b505bf23ae213b99886bebe0dad", "patch": "@@ -0,0 +1,7 @@\n+/* Bug c/17855.  */\n+struct foo {char x, y, z[2];};\n+struct foo f();\n+void bar(int baz)\n+{\n+  f().z[baz] = 1;\n+}"}, {"sha": "daa0d17492d78457193ab7c21a933fa40230bd86", "filename": "gcc/testsuite/gcc.c-torture/compile/struct-non-lval-2.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0223e4f514d36b505bf23ae213b99886bebe0dad/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstruct-non-lval-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0223e4f514d36b505bf23ae213b99886bebe0dad/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstruct-non-lval-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstruct-non-lval-2.c?ref=0223e4f514d36b505bf23ae213b99886bebe0dad", "patch": "@@ -0,0 +1,7 @@\n+/* Bug c/17855, using conditional expression for non-lvalue.  */\n+struct foo {char x, y, z[2];};\n+struct foo p, q; int r;\n+void bar(int baz)\n+{\n+  (r ? p : q).z[baz] = 1;\n+}"}, {"sha": "3020194cae07d8fa0e929611c3fcbdbf1ced6ad8", "filename": "gcc/testsuite/gcc.c-torture/compile/struct-non-lval-3.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0223e4f514d36b505bf23ae213b99886bebe0dad/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstruct-non-lval-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0223e4f514d36b505bf23ae213b99886bebe0dad/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstruct-non-lval-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstruct-non-lval-3.c?ref=0223e4f514d36b505bf23ae213b99886bebe0dad", "patch": "@@ -0,0 +1,7 @@\n+/* Bug c/17855, using assignment for non-lvalue.  */\n+struct foo {char x, y, z[2];};\n+struct foo p, q;\n+void bar(int baz)\n+{\n+  (p = q).z[baz] = 1;\n+}"}]}