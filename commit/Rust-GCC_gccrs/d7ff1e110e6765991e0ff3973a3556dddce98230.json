{"sha": "d7ff1e110e6765991e0ff3973a3556dddce98230", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdmZjFlMTEwZTY3NjU5OTFlMGZmMzk3M2EzNTU2ZGRkY2U5ODIzMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-07-07T16:05:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-07-07T16:05:55Z"}, "message": "re PR debug/49522 (Divide by zero in validate_subreg in emit-rtl.c:695)\n\n\tPR debug/49522\n\t* df-problems.c (dead_debug_reset): Remove dead_debug_uses\n\treferencing debug insns that have been reset.\n\t(dead_debug_insert_before): Don't assert reg is non-NULL,\n\tinstead return immediately if it is NULL.\n\n\t* gcc.dg/debug/pr49522.c: New test.\n\n\nM    gcc/ChangeLog\nA    gcc/testsuite/gcc.dg/debug/pr49522.c\nM    gcc/testsuite/ChangeLog\nM    gcc/df-problems.c\n\nFrom-SVN: r175987", "tree": {"sha": "407e91934844e7b9fd941aca5c5cc2edbc64dfc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/407e91934844e7b9fd941aca5c5cc2edbc64dfc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7ff1e110e6765991e0ff3973a3556dddce98230", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7ff1e110e6765991e0ff3973a3556dddce98230", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7ff1e110e6765991e0ff3973a3556dddce98230", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7ff1e110e6765991e0ff3973a3556dddce98230/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2492731a82d9b391d07511dc1ea46944267c9eed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2492731a82d9b391d07511dc1ea46944267c9eed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2492731a82d9b391d07511dc1ea46944267c9eed"}], "stats": {"total": 78, "additions": 76, "deletions": 2}, "files": [{"sha": "88b0d81f3ae0e9cd2b3303e758b7635cc4b5c8ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ff1e110e6765991e0ff3973a3556dddce98230/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ff1e110e6765991e0ff3973a3556dddce98230/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7ff1e110e6765991e0ff3973a3556dddce98230", "patch": "@@ -1,3 +1,11 @@\n+2011-07-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/49522\n+\t* df-problems.c (dead_debug_reset): Remove dead_debug_uses\n+\treferencing debug insns that have been reset.\n+\t(dead_debug_insert_before): Don't assert reg is non-NULL,\n+\tinstead return immediately if it is NULL.\n+\n 2011-07-07  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/i386/t-crtpic, config/i386/t-svr3dbx, config/pa/t-pa:"}, {"sha": "e547b67c55ff50a54f8f7ffcff05e6ae1e89a218", "filename": "gcc/df-problems.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ff1e110e6765991e0ff3973a3556dddce98230/gcc%2Fdf-problems.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ff1e110e6765991e0ff3973a3556dddce98230/gcc%2Fdf-problems.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-problems.c?ref=d7ff1e110e6765991e0ff3973a3556dddce98230", "patch": "@@ -3096,6 +3096,7 @@ static void\n dead_debug_reset (struct dead_debug *debug, unsigned int dregno)\n {\n   struct dead_debug_use **tailp = &debug->head;\n+  struct dead_debug_use **insnp = &debug->head;\n   struct dead_debug_use *cur;\n   rtx insn;\n \n@@ -3113,9 +3114,25 @@ dead_debug_reset (struct dead_debug *debug, unsigned int dregno)\n \t    debug->to_rescan = BITMAP_ALLOC (NULL);\n \t  bitmap_set_bit (debug->to_rescan, INSN_UID (insn));\n \t  XDELETE (cur);\n+\t  /* If the current use isn't the first one attached to INSN, go back\n+\t     to this first use.  We assume that the uses attached to an insn\n+\t     are adjacent.  */                                                                       \n+\t  if (tailp != insnp && DF_REF_INSN ((*insnp)->use) == insn)\n+\t    tailp = insnp;\n+\t  /* Then remove all the other uses attached to INSN.  */\n+\t  while ((cur = *tailp) && DF_REF_INSN (cur->use) == insn)\n+\t    {\n+\t      *tailp = cur->next;\n+\t      XDELETE (cur);\n+\t    }\n+\t  insnp = tailp;\n \t}\n       else\n-\ttailp = &(*tailp)->next;\n+\t{\n+\t  if (DF_REF_INSN ((*insnp)->use) != DF_REF_INSN (cur->use))\n+\t    insnp = tailp;\n+\t  tailp = &(*tailp)->next;\n+\t}\n     }\n }\n \n@@ -3174,7 +3191,10 @@ dead_debug_insert_before (struct dead_debug *debug, unsigned int uregno,\n \ttailp = &(*tailp)->next;\n     }\n \n-  gcc_assert (reg);\n+  /* We may have dangling bits in debug->used for registers that were part\n+     of a multi-register use, one component of which has been reset.  */\n+  if (reg == NULL)\n+    return;\n \n   /* Create DEBUG_EXPR (and DEBUG_EXPR_DECL).  */\n   dval = make_debug_expr_from_rtl (reg);"}, {"sha": "c54bd86e9586e0c4abfa5e717cbbd20156d4b312", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ff1e110e6765991e0ff3973a3556dddce98230/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ff1e110e6765991e0ff3973a3556dddce98230/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d7ff1e110e6765991e0ff3973a3556dddce98230", "patch": "@@ -1,3 +1,8 @@\n+2011-07-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/49522\n+\t* gcc.dg/debug/pr49522.c: New test.\n+\n 2011-07-07  Georg-Johann Lay  <avr@gjlay.de>\n \t\n \t* gcc.dg/pragma-align.c: Run only if target !default_packed."}, {"sha": "3fa3bfb0e92b99f3ced885ea8d8400b72c6f728a", "filename": "gcc/testsuite/gcc.dg/debug/pr49522.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ff1e110e6765991e0ff3973a3556dddce98230/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr49522.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ff1e110e6765991e0ff3973a3556dddce98230/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr49522.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr49522.c?ref=d7ff1e110e6765991e0ff3973a3556dddce98230", "patch": "@@ -0,0 +1,41 @@\n+/* PR debug/49522 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fcompare-debug\" } */\n+\n+int val1 = 0L;\n+volatile int val2 = 7L;\n+long long val3;\n+int *ptr = &val1;\n+\n+static int\n+func1 ()\n+{\n+  return 0;\n+}\n+\n+static short int\n+func2 (short int a, unsigned int b)\n+{\n+  return !b ? a : a >> b;\n+}\n+\n+static unsigned long long\n+func3 (unsigned long long a, unsigned long long b)\n+{\n+  return !b ? a : a % b;\n+}\n+\n+void\n+func4 (unsigned short arg1, int arg2)\n+{\n+  for (arg2 = 0; arg2 < 2; arg2++)\n+    {\n+      *ptr = func3 (func3 (10, func2 (val3, val2)), val3);\n+      for (arg1 = -14; arg1 > 14; arg1 = func1 ())\n+\t{\n+\t  *ptr = -1;\n+\t  if (foo ())\n+\t    ;\n+\t}\n+    }\n+}"}]}