{"sha": "47b79f7801556cc194b099d5bad6409c93cf599c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdiNzlmNzgwMTU1NmNjMTk0YjA5OWQ1YmFkNjQwOWM5M2NmNTk5Yw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-20T10:00:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-20T10:00:15Z"}, "message": "[multiple changes]\n\n2015-10-20  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_ch13.adb: Minor reference change (RM => AARM).\n\n2015-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* make.adb (Check): Skip multilib switches reinstated by the\n\tcompiler only when counting the number of switches, since it is\n\twhat really matters in the regular operating mode.\n\n2015-10-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* einfo.adb: Add extra assertion for small clause.\n\t* cstand.adb: Minor style fix in comment.\n\t* debug.adb: Minor reformatting.\n\t* exp_util.adb: Fix minor typo.\n\n2015-10-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Same_Instantiated_Function): New predicate in\n\tCheck_Formal_Package_Instance, used to verify that the formal\n\tand the actual of an actual package match when both are functions\n\tgiven as attribute references.\n\nFrom-SVN: r229034", "tree": {"sha": "a46cc1b345b5b36131aaf156511be52f5bb1358a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a46cc1b345b5b36131aaf156511be52f5bb1358a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47b79f7801556cc194b099d5bad6409c93cf599c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b79f7801556cc194b099d5bad6409c93cf599c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47b79f7801556cc194b099d5bad6409c93cf599c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b79f7801556cc194b099d5bad6409c93cf599c/comments", "author": null, "committer": null, "parents": [{"sha": "e9f97e793186e04e2a69ef8dc15073b530f2851f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9f97e793186e04e2a69ef8dc15073b530f2851f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9f97e793186e04e2a69ef8dc15073b530f2851f"}], "stats": {"total": 127, "additions": 100, "deletions": 27}, "files": [{"sha": "e285e66d028c70ed5ac9b0c337dfa3942e6d27ad", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b79f7801556cc194b099d5bad6409c93cf599c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b79f7801556cc194b099d5bad6409c93cf599c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=47b79f7801556cc194b099d5bad6409c93cf599c", "patch": "@@ -1,3 +1,27 @@\n+2015-10-20  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_ch13.adb: Minor reference change (RM => AARM).\n+\n+2015-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* make.adb (Check): Skip multilib switches reinstated by the\n+\tcompiler only when counting the number of switches, since it is\n+\twhat really matters in the regular operating mode.\n+\n+2015-10-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* einfo.adb: Add extra assertion for small clause.\n+\t* cstand.adb: Minor style fix in comment.\n+\t* debug.adb: Minor reformatting.\n+\t* exp_util.adb: Fix minor typo.\n+\n+2015-10-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Same_Instantiated_Function): New predicate in\n+\tCheck_Formal_Package_Instance, used to verify that the formal\n+\tand the actual of an actual package match when both are functions\n+\tgiven as attribute references.\n+\n 2015-10-20  Bob Duff  <duff@adacore.com>\n \n \t* a-coinve.ads, a-coinve.adb: Do the same efficiency"}, {"sha": "3d627c8c13f16bb5c1146f4756c1c320e98fbfc9", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b79f7801556cc194b099d5bad6409c93cf599c/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b79f7801556cc194b099d5bad6409c93cf599c/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=47b79f7801556cc194b099d5bad6409c93cf599c", "patch": "@@ -1425,8 +1425,8 @@ package body CStand is\n             Dhi := Intval (Type_High_Bound (Standard_Integer_32));\n             Delta_Val := UR_From_Components (UI_From_Int (20), Uint_3, 10);\n \n-         --  In standard 64-bit mode, the size is 64-bits and the delta and\n-         --  small values are set to nanoseconds (1.0*(10.0**(-9))\n+         --  In 64-bit mode, the size is 64-bits and the delta and\n+         --  small values are set to nanoseconds (1.0*(10.0**(-9)).\n \n          else\n             Dlo := Intval (Type_Low_Bound (Standard_Integer_64));"}, {"sha": "0ee0a9864b25e50b9b2efdfd8d6f4b303359a39d", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b79f7801556cc194b099d5bad6409c93cf599c/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b79f7801556cc194b099d5bad6409c93cf599c/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=47b79f7801556cc194b099d5bad6409c93cf599c", "patch": "@@ -694,8 +694,8 @@ package body Debug is\n \n    --  d.X  A previous version of GNAT allowed indexing aspects to be redefined\n    --       on derived container types, while the default iterator was\n-   --       inherited from the aprent type. This non-standard extension is\n-   --       preserved temporarily for use by the modelling project under debug\n+   --       inherited from the parent type. This nonstandard extension is\n+   --       preserved temporarily for use by the modeling project under debug\n    --       flag d.X.\n \n    --  d.Z  Normally we always enable expansion in configurable run-time mode"}, {"sha": "4e5d083623640f49d751fe50a30eaa6749264ed8", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b79f7801556cc194b099d5bad6409c93cf599c/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b79f7801556cc194b099d5bad6409c93cf599c/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=47b79f7801556cc194b099d5bad6409c93cf599c", "patch": "@@ -1763,6 +1763,7 @@ package body Einfo is\n \n    function Has_Small_Clause (Id : E) return B is\n    begin\n+      pragma Assert (Is_Ordinary_Fixed_Point_Type (Id));\n       return Flag67 (Id);\n    end Has_Small_Clause;\n \n@@ -4663,6 +4664,7 @@ package body Einfo is\n \n    procedure Set_Has_Small_Clause (Id : E; V : B := True) is\n    begin\n+      pragma Assert (Is_Ordinary_Fixed_Point_Type (Id));\n       Set_Flag67 (Id, V);\n    end Set_Has_Small_Clause;\n "}, {"sha": "2ff6d5c83f61daf395f3423a7620c23f54134ecc", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b79f7801556cc194b099d5bad6409c93cf599c/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b79f7801556cc194b099d5bad6409c93cf599c/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=47b79f7801556cc194b099d5bad6409c93cf599c", "patch": "@@ -206,7 +206,7 @@ package body Exp_Util is\n       end case;\n \n       --  Nothing to do for the identifier in an object renaming declaration,\n-      --  the renaming itself does not need atomic syncrhonization.\n+      --  the renaming itself does not need atomic synchronization.\n \n       if Nkind (Parent (N)) = N_Object_Renaming_Declaration then\n          return;"}, {"sha": "e368a9f688064dc5b1f3a676c6dbcbc2fefc55f8", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 32, "deletions": 20, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b79f7801556cc194b099d5bad6409c93cf599c/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b79f7801556cc194b099d5bad6409c93cf599c/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=47b79f7801556cc194b099d5bad6409c93cf599c", "patch": "@@ -1572,12 +1572,21 @@ package body Make is\n       Source_Name : File_Name_Type;\n       Text        : Text_Buffer_Ptr;\n \n-      Prev_Switch : String_Access;\n-      --  Previous switch processed\n+      First_Arg : Arg_Id;\n+      --  Index of the first argument in Args.Table for a given unit\n+\n+      Last_Arg  : Arg_Id;\n+      --  Index of the last argument in Args.Table for a given unit\n \n       Arg : Arg_Id := Arg_Id'First;\n       --  Current index in Args.Table for a given unit (init to stop warning)\n \n+      Number_Of_Switches : Natural;\n+      --  Number of switches recorded for a given unit\n+\n+      Prev_Switch : String_Access;\n+      --  Previous switch processed\n+\n       Switch_Found : Boolean;\n       --  True if a given switch has been found\n \n@@ -1720,17 +1729,12 @@ package body Make is\n \n             for J in 1 .. Last_Argument loop\n \n-               --  Skip -c, -I and -o switches, as well as multilib switches\n-               --  reinstated by the compiler according to lang-specs.h.\n+               --  Skip -c, -I and -o switches\n \n                if Arguments (J) (1) = '-'\n                  and then Arguments (J) (2) /= 'c'\n                  and then Arguments (J) (2) /= 'o'\n                  and then Arguments (J) (2) /= 'I'\n-                 and then not (Arguments (J)'Length = 5\n-                                 and then Arguments (J) (2 .. 5) = \"mrtp\")\n-                 and then not (Arguments (J)'Length = 6\n-                                 and then Arguments (J) (2 .. 6) = \"fsjlj\")\n                then\n                   Normalize_Compiler_Switches\n                     (Arguments (J).all,\n@@ -1745,6 +1749,9 @@ package body Make is\n                end if;\n             end loop;\n \n+            First_Arg := Units.Table (ALIs.Table (ALI).First_Unit).First_Arg;\n+            Last_Arg  := Units.Table (ALIs.Table (ALI).First_Unit).Last_Arg;\n+\n             for J in 1 .. Switches_To_Check.Last loop\n \n                --  Comparing switches is delicate because gcc reorders a number\n@@ -1762,15 +1769,12 @@ package body Make is\n                     Prev_Switch (6) /= Switches_To_Check.Table (J) (6))\n                then\n                   Prev_Switch := Switches_To_Check.Table (J);\n-                  Arg :=\n-                    Units.Table (ALIs.Table (ALI).First_Unit).First_Arg;\n+                  Arg := First_Arg;\n                end if;\n \n                Switch_Found := False;\n \n-               for K in Arg ..\n-                 Units.Table (ALIs.Table (ALI).First_Unit).Last_Arg\n-               loop\n+               for K in Arg .. Last_Arg loop\n                   if\n                     Switches_To_Check.Table (J).all = Args.Table (K).all\n                   then\n@@ -1792,17 +1796,25 @@ package body Make is\n                end if;\n             end loop;\n \n-            if Switches_To_Check.Last /=\n-              Integer (Units.Table (ALIs.Table (ALI).First_Unit).Last_Arg -\n-                       Units.Table (ALIs.Table (ALI).First_Unit).First_Arg + 1)\n-            then\n+            Number_Of_Switches := Natural (Last_Arg - First_Arg + 1);\n+\n+            --  Do not count the multilib switches reinstated by the compiler\n+            --  according to the lang-specs.h.settings.\n+\n+            for K in First_Arg .. Last_Arg loop\n+               if Args.Table (K).all = \"-mrtp\"\n+                  or else Args.Table (K).all = \"-fsjlj\"\n+               then\n+                  Number_Of_Switches := Number_Of_Switches - 1;\n+               end if;\n+            end loop;\n+\n+            if Switches_To_Check.Last /= Number_Of_Switches then\n                if Verbose_Mode then\n                   Verbose_Msg (ALIs.Table (ALI).Sfile,\n                                \"different number of switches\");\n \n-                  for K in Units.Table (ALIs.Table (ALI).First_Unit).First_Arg\n-                    .. Units.Table (ALIs.Table (ALI).First_Unit).Last_Arg\n-                  loop\n+                  for K in First_Arg .. Last_Arg loop\n                      Write_Str (Args.Table (K).all);\n                      Write_Char (' ');\n                   end loop;"}, {"sha": "d546a48e7ee3667a4cd7167c8c9eb6c673b4c9d0", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b79f7801556cc194b099d5bad6409c93cf599c/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b79f7801556cc194b099d5bad6409c93cf599c/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=47b79f7801556cc194b099d5bad6409c93cf599c", "patch": "@@ -5759,6 +5759,11 @@ package body Sem_Ch12 is\n       --  same entity we may have to traverse several definitions to recover\n       --  the ultimate entity that they refer to.\n \n+      function Same_Instantiated_Function (E1, E2 : Entity_Id) return Boolean;\n+      --  The formal and the actual must be identical, but if both are\n+      --  given by attributes they end up renaming different generated bodies,\n+      --  and we must verify that the attributes themselves match.\n+\n       function Same_Instantiated_Variable (E1, E2 : Entity_Id) return Boolean;\n       --  Similarly, if the formal comes from a nested formal package, the\n       --  actual may designate the formal through multiple renamings, which\n@@ -5833,6 +5838,35 @@ package body Sem_Ch12 is\n          return False;\n       end Same_Instantiated_Constant;\n \n+      --------------------------------\n+      -- Same_Instantiated_Function --\n+      --------------------------------\n+\n+      function Same_Instantiated_Function\n+        (E1, E2 : Entity_Id) return Boolean\n+      is\n+         U1, U2 : Node_Id;\n+      begin\n+         if Alias (E1) = Alias (E2) then\n+            return True;\n+\n+         elsif Present (Alias (E2)) then\n+            U1 := Original_Node (Unit_Declaration_Node (E1));\n+            U2 := Original_Node (Unit_Declaration_Node (Alias (E2)));\n+\n+            return Nkind (U1) = N_Subprogram_Renaming_Declaration\n+              and then Nkind (Name (U1)) = N_Attribute_Reference\n+\n+              and then Nkind (U2) = N_Subprogram_Renaming_Declaration\n+              and then Nkind (Name (U2)) = N_Attribute_Reference\n+\n+              and then\n+                Attribute_Name (Name (U1)) = Attribute_Name (Name (U2));\n+         else\n+            return False;\n+         end if;\n+      end Same_Instantiated_Function;\n+\n       --------------------------------\n       -- Same_Instantiated_Variable --\n       --------------------------------\n@@ -6050,7 +6084,8 @@ package body Sem_Ch12 is\n \n             else\n                Check_Mismatch\n-                 (Ekind (E2) /= Ekind (E1) or else (Alias (E1)) /= Alias (E2));\n+                 (Ekind (E2) /= Ekind (E1)\n+                    or else not Same_Instantiated_Function (E1, E2));\n             end if;\n \n          else"}, {"sha": "0c3ff289ef67333bb98dff1bdf2054c214b917f7", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b79f7801556cc194b099d5bad6409c93cf599c/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b79f7801556cc194b099d5bad6409c93cf599c/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=47b79f7801556cc194b099d5bad6409c93cf599c", "patch": "@@ -11420,7 +11420,7 @@ package body Sem_Ch13 is\n             Id : constant Attribute_Id := Get_Attribute_Id (Chars (N));\n          begin\n \n-            --  List of operational items is given in RM 13.1(8.mm/1).\n+            --  List of operational items is given in AARM 13.1(8.mm/1).\n             --  It is clearly incomplete, as it does not include iterator\n             --  aspects, among others.\n "}]}