{"sha": "2a7c93ee56f03c7cc14103b1f2ec5efa51efb3ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE3YzkzZWU1NmYwM2M3Y2MxNDEwM2IxZjJlYzVlZmE1MWVmYjNlZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-08-12T02:26:19Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-08-12T02:26:19Z"}, "message": "Formattign changes.\n\nFrom-SVN: r12616", "tree": {"sha": "739bfa79a6cffc4b6658d398c228808a04269658", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/739bfa79a6cffc4b6658d398c228808a04269658"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a7c93ee56f03c7cc14103b1f2ec5efa51efb3ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a7c93ee56f03c7cc14103b1f2ec5efa51efb3ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a7c93ee56f03c7cc14103b1f2ec5efa51efb3ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a7c93ee56f03c7cc14103b1f2ec5efa51efb3ef/comments", "author": null, "committer": null, "parents": [{"sha": "ca4da59718bed84936c5afac2bfc9c098b606a2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca4da59718bed84936c5afac2bfc9c098b606a2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca4da59718bed84936c5afac2bfc9c098b606a2e"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "21b0880b99151e8329fb354d29b24ff45f5c98f5", "filename": "gcc/objc/sendmsg.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a7c93ee56f03c7cc14103b1f2ec5efa51efb3ef/gcc%2Fobjc%2Fsendmsg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a7c93ee56f03c7cc14103b1f2ec5efa51efb3ef/gcc%2Fobjc%2Fsendmsg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fsendmsg.c?ref=2a7c93ee56f03c7cc14103b1f2ec5efa51efb3ef", "patch": "@@ -339,7 +339,8 @@ void __objc_update_dispatch_table_for_class (Class class)\n   __objc_install_premature_dtable (class); /* someone might require it... */\n   sarray_free (arr);\t\t\t   /* release memory */\n \n-  __objc_install_dispatch_table_for_class (class); /* could have been lazy... */\n+  /* could have been lazy... */\n+  __objc_install_dispatch_table_for_class (class); \n \n   if (class->subclass_list)\t/* Traverse subclasses */\n     for (next = class->subclass_list; next; next = next->sibling_class)\n@@ -488,7 +489,7 @@ __objc_word_forward (id rcv, SEL op, ...)\n    architectural differences on some processors.  i386s for\n    example which uses a floating point stack versus general\n    registers for floating point numbers.  This forward routine \n-   makes sure that GCC restores the proper return values. */\n+   makes sure that GCC restores the proper return values */\n static double\n __objc_double_forward (id rcv, SEL op, ...)\n {\n@@ -584,9 +585,11 @@ void __objc_print_dtable_stats()\n #endif\n \t );\n \n-  printf(\"arrays: %d = %ld bytes\\n\", narrays, (int)narrays*sizeof(struct sarray));\n+  printf(\"arrays: %d = %ld bytes\\n\", narrays, \n+\t (int)narrays*sizeof(struct sarray));\n   total += narrays*sizeof(struct sarray);\n-  printf(\"buckets: %d = %ld bytes\\n\", nbuckets, (int)nbuckets*sizeof(struct sbucket));\n+  printf(\"buckets: %d = %ld bytes\\n\", nbuckets, \n+\t (int)nbuckets*sizeof(struct sbucket));\n   total += nbuckets*sizeof(struct sbucket);\n \n   printf(\"idxtables: %d = %ld bytes\\n\", idxsize, (int)idxsize*sizeof(void*));\n@@ -605,6 +608,3 @@ objc_get_uninstalled_dtable()\n {\n   return __objc_uninstalled_dtable;\n }\n-\n-\n-"}]}