{"sha": "683750ce0915e3703cf50d21c3150ed947b57617", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgzNzUwY2UwOTE1ZTM3MDNjZjUwZDIxYzMxNTBlZDk0N2I1NzYxNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-01-14T11:06:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-01-14T11:06:18Z"}, "message": "re PR middle-end/64415 (ICE: verify_ssa failed / segmentation fault with LTO)\n\n2015-01-14  Richard Biener  <rguenther@suse.de>\n\n\tPR lto/64415\n\t* tree-inline.c (insert_debug_decl_map): Check destination\n\tfunction MAY_HAVE_DEBUG_STMTS.\n\t(insert_init_debug_bind): Likewise.\n\t(insert_init_stmt): Remove redundant check.\n\t(remap_gimple_stmt): Drop debug stmts if the destination\n\tfunction has var-tracking assignments disabled.\n\n\t* gcc.dg/lto/pr64415_0.c: New testcase.\n\t* gcc.dg/lto/pr64415_1.c: Likewise.\n\nFrom-SVN: r219588", "tree": {"sha": "8afd1b515e2f55b1e3d1a9e476a1cfa2999bac63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8afd1b515e2f55b1e3d1a9e476a1cfa2999bac63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/683750ce0915e3703cf50d21c3150ed947b57617", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/683750ce0915e3703cf50d21c3150ed947b57617", "html_url": "https://github.com/Rust-GCC/gccrs/commit/683750ce0915e3703cf50d21c3150ed947b57617", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/683750ce0915e3703cf50d21c3150ed947b57617/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "217c08c57118c5afc573dbaa4bcef5874787616f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/217c08c57118c5afc573dbaa4bcef5874787616f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/217c08c57118c5afc573dbaa4bcef5874787616f"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "c852337d88978d0b046e96e8c420f81b2e159ef1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/683750ce0915e3703cf50d21c3150ed947b57617/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/683750ce0915e3703cf50d21c3150ed947b57617/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=683750ce0915e3703cf50d21c3150ed947b57617", "patch": "@@ -1,3 +1,13 @@\n+2015-01-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/64415\n+\t* tree-inline.c (insert_debug_decl_map): Check destination\n+\tfunction MAY_HAVE_DEBUG_STMTS.\n+\t(insert_init_debug_bind): Likewise.\n+\t(insert_init_stmt): Remove redundant check.\n+\t(remap_gimple_stmt): Drop debug stmts if the destination\n+\tfunction has var-tracking assignments disabled.\n+\n 2015-01-14  Martin Liska  <mliska@suse.cz>\n \n \t* ipa-icf-gimple.c (func_checker::compare_operand): Add support for"}, {"sha": "e2929d3d42fe69c256a751b61259efc9a6ffe1a4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/683750ce0915e3703cf50d21c3150ed947b57617/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/683750ce0915e3703cf50d21c3150ed947b57617/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=683750ce0915e3703cf50d21c3150ed947b57617", "patch": "@@ -1,3 +1,9 @@\n+2015-01-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/64415\n+\t* gcc.dg/lto/pr64415_0.c: New testcase.\n+\t* gcc.dg/lto/pr64415_1.c: Likewise. \n+\n 2015-01-14  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/ipa/pr64307.c: New test."}, {"sha": "fdf9d82550f9c7718d7f52f408e394e3fcdf270e", "filename": "gcc/testsuite/gcc.dg/lto/pr64415_0.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/683750ce0915e3703cf50d21c3150ed947b57617/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr64415_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/683750ce0915e3703cf50d21c3150ed947b57617/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr64415_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr64415_0.c?ref=683750ce0915e3703cf50d21c3150ed947b57617", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-lto-do link } */\n+/* { dg-require-effective-target fpic } */\n+/* { dg-lto-options { { -O -flto -fpic } } } */\n+/* { dg-extra-ld-options { -shared } } */\n+\n+extern void bar(char *, int);\n+\n+extern char *baz;\n+\n+void foo()\n+{\n+  bar(baz, 0);\n+}"}, {"sha": "b98dfbd7935fb0de1f7b57fb283d557f2d4843bf", "filename": "gcc/testsuite/gcc.dg/lto/pr64415_1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/683750ce0915e3703cf50d21c3150ed947b57617/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr64415_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/683750ce0915e3703cf50d21c3150ed947b57617/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr64415_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr64415_1.c?ref=683750ce0915e3703cf50d21c3150ed947b57617", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-g\" } */\n+\n+extern int n;\n+\n+void bar(char *, int);\n+\n+inline void bar(char *s, int i)\n+{\n+  char *p = s;\n+\n+#ifdef V1\n+  if (i)\n+#else\n+  if (n)\n+#endif\n+    *s = 0;\n+}"}, {"sha": "8fe92e4eb4407ced07140d3261661e00a43a4eb0", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/683750ce0915e3703cf50d21c3150ed947b57617/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/683750ce0915e3703cf50d21c3150ed947b57617/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=683750ce0915e3703cf50d21c3150ed947b57617", "patch": "@@ -192,7 +192,7 @@ insert_debug_decl_map (copy_body_data *id, tree key, tree value)\n   if (!gimple_in_ssa_p (id->src_cfun))\n     return;\n \n-  if (!MAY_HAVE_DEBUG_STMTS)\n+  if (!opt_for_fn (id->dst_fn, flag_var_tracking_assignments))\n     return;\n \n   if (!target_for_debug_bind (key))\n@@ -1348,6 +1348,10 @@ remap_gimple_stmt (gimple stmt, copy_body_data *id)\n   bool skip_first = false;\n   gimple_seq stmts = NULL;\n \n+  if (is_gimple_debug (stmt)\n+      && !opt_for_fn (id->dst_fn, flag_var_tracking_assignments))\n+    return stmts;\n+\n   /* Begin by recognizing trees that we'll completely rewrite for the\n      inlining context.  Our output for these trees is completely\n      different from out input (e.g. RETURN_EXPR is deleted, and morphs\n@@ -3007,7 +3011,7 @@ insert_init_debug_bind (copy_body_data *id,\n   if (!gimple_in_ssa_p (id->src_cfun))\n     return NULL;\n \n-  if (!MAY_HAVE_DEBUG_STMTS)\n+  if (!opt_for_fn (id->dst_fn, flag_var_tracking_assignments))\n     return NULL;\n \n   tracked_var = target_for_debug_bind (var);\n@@ -3063,7 +3067,7 @@ insert_init_stmt (copy_body_data *id, basic_block bb, gimple init_stmt)\n       gsi_insert_after (&si, init_stmt, GSI_NEW_STMT);\n       gimple_regimplify_operands (init_stmt, &si);\n \n-      if (!is_gimple_debug (init_stmt) && MAY_HAVE_DEBUG_STMTS)\n+      if (!is_gimple_debug (init_stmt))\n \t{\n \t  tree def = gimple_assign_lhs (init_stmt);\n \t  insert_init_debug_bind (id, bb, def, def, init_stmt);"}]}