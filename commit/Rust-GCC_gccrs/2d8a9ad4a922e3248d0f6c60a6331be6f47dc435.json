{"sha": "2d8a9ad4a922e3248d0f6c60a6331be6f47dc435", "node_id": "C_kwDOANBUbNoAKDJkOGE5YWQ0YTkyMmUzMjQ4ZDBmNmM2MGE2MzMxYmU2ZjQ3ZGM0MzU", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-21T12:08:20Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-23T22:47:00Z"}, "message": "libstdc++: Fix aliasing violation in std::shared_ptr [PR104019]\n\nThe non-atomic store that sets both reference counts to zero uses a\ntype-punned pointer, which has undefined behaviour. We could use memset\nto write 8 bytes, but we don't actually need it to be a single store\nanyway. No other thread can observe the values, that's why it's safe to\nuse non-atomic stores in the first place. So we can just set each count\nto zero.\n\nWith -fstore-merging (which is enabled by default at -O2) GCC produces\nthe same code for this as for memset or the type punned store. Clang\ndoes that store merging even at -O1.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/104019\n\t* include/bits/shared_ptr_base.h (_Sp_counted_base<>::_M_release):\n\tSet members to zero without type punning.", "tree": {"sha": "2e04720702ab3bf795dbd06dbb25b334f260bc1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e04720702ab3bf795dbd06dbb25b334f260bc1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d8a9ad4a922e3248d0f6c60a6331be6f47dc435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8a9ad4a922e3248d0f6c60a6331be6f47dc435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d8a9ad4a922e3248d0f6c60a6331be6f47dc435", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8a9ad4a922e3248d0f6c60a6331be6f47dc435/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2da90ad39bf8fa9ee287e040d1f4411cb7a2e7ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2da90ad39bf8fa9ee287e040d1f4411cb7a2e7ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2da90ad39bf8fa9ee287e040d1f4411cb7a2e7ed"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b2f955b41f786a5874c211e867bd11ebd10b63d7", "filename": "libstdc++-v3/include/bits/shared_ptr_base.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8a9ad4a922e3248d0f6c60a6331be6f47dc435/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8a9ad4a922e3248d0f6c60a6331be6f47dc435/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h?ref=2d8a9ad4a922e3248d0f6c60a6331be6f47dc435", "patch": "@@ -340,7 +340,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t      // we are releasing the last strong reference. No other\n \t      // threads can observe the effects of this _M_release()\n \t      // call (e.g. calling use_count()) without a data race.\n-\t      *(long long*)(&_M_use_count) = 0;\n+\t      _M_weak_count = _M_use_count = 0;\n \t      _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_use_count);\n \t      _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_weak_count);\n \t      _M_dispose();"}]}