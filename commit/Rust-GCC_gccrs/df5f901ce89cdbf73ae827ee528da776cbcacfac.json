{"sha": "df5f901ce89cdbf73ae827ee528da776cbcacfac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY1ZjkwMWNlODljZGJmNzNhZTgyN2VlNTI4ZGE3NzZjYmNhY2ZhYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-12-08T13:16:45Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-04-28T09:38:03Z"}, "message": "[Ada] Incorrect discriminant check on call to access to subprogram\n\ngcc/ada/\n\n\t* exp_ch6.adb: Fix typo in comment.\n\t* sem_ch3.adb (Access_Subprogram_Declaration): Add missing call\n\tto Create_Extra_Formals. Remove obsolete bootstrap check.\n\t* sem_eval.adb (Eval_Selected_Component): Simplify a\n\tselected_component on an aggregate.", "tree": {"sha": "2e141ce7d920fa05a685e7f429a00357a778e5d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e141ce7d920fa05a685e7f429a00357a778e5d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df5f901ce89cdbf73ae827ee528da776cbcacfac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df5f901ce89cdbf73ae827ee528da776cbcacfac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df5f901ce89cdbf73ae827ee528da776cbcacfac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df5f901ce89cdbf73ae827ee528da776cbcacfac/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ba1f7f65b46c1f0e0143ec982a62e6bd9a3ef2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ba1f7f65b46c1f0e0143ec982a62e6bd9a3ef2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ba1f7f65b46c1f0e0143ec982a62e6bd9a3ef2e"}], "stats": {"total": 47, "additions": 38, "deletions": 9}, "files": [{"sha": "6b1465695d44714c6f359a96d346bd2757989e2d", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df5f901ce89cdbf73ae827ee528da776cbcacfac/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df5f901ce89cdbf73ae827ee528da776cbcacfac/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=df5f901ce89cdbf73ae827ee528da776cbcacfac", "patch": "@@ -3801,7 +3801,7 @@ package body Exp_Ch6 is\n                   --  is internally generated code that manipulates addresses,\n                   --  e.g. when building interface tables. No check should\n                   --  occur in this case, and the discriminated object is not\n-                  --  directly a hand.\n+                  --  directly at hand.\n \n                   if not Comes_From_Source (Actual)\n                     and then Nkind (Actual) = N_Unchecked_Type_Conversion"}, {"sha": "41e1e4958fcc3449890a0640778e2c3b8e50dee7", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df5f901ce89cdbf73ae827ee528da776cbcacfac/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df5f901ce89cdbf73ae827ee528da776cbcacfac/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=df5f901ce89cdbf73ae827ee528da776cbcacfac", "patch": "@@ -840,13 +840,6 @@ package body Sem_Ch3 is\n       --  the corresponding semantic routine\n \n       if Present (Access_To_Subprogram_Definition (N)) then\n-\n-         --  Compiler runtime units are compiled in Ada 2005 mode when building\n-         --  the runtime library but must also be compilable in Ada 95 mode\n-         --  (when bootstrapping the compiler).\n-\n-         Check_Compiler_Unit (\"anonymous access to subprogram\", N);\n-\n          Access_Subprogram_Declaration\n            (T_Name => Anon_Type,\n             T_Def  => Access_To_Subprogram_Definition (N));\n@@ -1312,6 +1305,8 @@ package body Sem_Ch3 is\n       Set_Can_Never_Be_Null (T_Name, Null_Exclusion_Present (T_Def));\n \n       Check_Restriction (No_Access_Subprograms, T_Def);\n+\n+      Create_Extra_Formals (Desig_Type);\n    end Access_Subprogram_Declaration;\n \n    ----------------------------"}, {"sha": "263b9fdd530b13f54dca8b675c2a836a262640df", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df5f901ce89cdbf73ae827ee528da776cbcacfac/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df5f901ce89cdbf73ae827ee528da776cbcacfac/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=df5f901ce89cdbf73ae827ee528da776cbcacfac", "patch": "@@ -3830,6 +3830,11 @@ package body Sem_Eval is\n    -----------------------------\n \n    procedure Eval_Selected_Component (N : Node_Id) is\n+      Node : Node_Id;\n+      Comp : Node_Id;\n+      C    : Node_Id;\n+      Nam  : Name_Id;\n+\n    begin\n       --  If an attribute reference or a LHS, nothing to do.\n       --  Also do not fold if N is an [in] out subprogram parameter.\n@@ -3839,7 +3844,36 @@ package body Sem_Eval is\n         and then Is_LHS (N) = No\n         and then not Is_Actual_Out_Or_In_Out_Parameter (N)\n       then\n-         Fold (N);\n+         --  Simplify a selected_component on an aggregate by extracting\n+         --  the field directly.\n+\n+         Node := Prefix (N);\n+\n+         while Nkind (Node) = N_Qualified_Expression loop\n+            Node := Expression (Node);\n+         end loop;\n+\n+         if Nkind (Node) = N_Aggregate then\n+            Comp := First (Component_Associations (Node));\n+            Nam  := Chars (Selector_Name (N));\n+\n+            while Present (Comp) loop\n+               C := First (Choices (Comp));\n+\n+               while Present (C) loop\n+                  if Chars (C) = Nam then\n+                     Rewrite (N, Relocate_Node (Expression (Comp)));\n+                     return;\n+                  end if;\n+\n+                  Next (C);\n+               end loop;\n+\n+               Next (Comp);\n+            end loop;\n+         else\n+            Fold (N);\n+         end if;\n       end if;\n    end Eval_Selected_Component;\n "}]}