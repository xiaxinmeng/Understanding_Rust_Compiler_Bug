{"sha": "60d2a8c3bbc4a7b9f3688929bc518c14ae71db92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBkMmE4YzNiYmM0YTdiOWYzNjg4OTI5YmM1MThjMTRhZTcxZGI5Mg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-11-25T04:55:53Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-11-25T04:55:53Z"}, "message": "graphite-dependences.c (reduction_dr_1): New.\n\n2009-10-06  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-dependences.c (reduction_dr_1): New.\n\t(reduction_dr_p): New.\n\t(graphite_legal_transform_dr): Call reduction_dr_p.\n\t(reduction_ddr): Renamed reduction_ddr_p.\n\t* graphite-poly.h (same_pdr_p): New.\n\t(number_of_write_pdrs): New.\n\t* graphite-sese-to-poly.c (nb_data_writes_in_bb): New.\n\t(split_reduction_stmt): Do not split reduction statements\n\twhen there are no writes to memory.\n\t(translate_scalar_reduction_to_array_for_stmt): Insert the\n\tmemory reduction statement just after the scalar reduction statement.\n\n\t* gcc.dg/graphite/interchange-10.c: Updated to differ from interchange-4.c.\n\tUn-XFAIL-ed.\n\t* gcc.dg/graphite/interchange-3.c: Un-XFAIL-ed.\n\t* gcc.dg/graphite/interchange-4.c: Un-XFAIL-ed.\n\nFrom-SVN: r154564", "tree": {"sha": "691791191c1405beb47bca42a0c50bebbd5d5502", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/691791191c1405beb47bca42a0c50bebbd5d5502"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60d2a8c3bbc4a7b9f3688929bc518c14ae71db92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60d2a8c3bbc4a7b9f3688929bc518c14ae71db92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60d2a8c3bbc4a7b9f3688929bc518c14ae71db92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60d2a8c3bbc4a7b9f3688929bc518c14ae71db92/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95baeff8c0c8cb810972d5ced10f8508260dc70e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95baeff8c0c8cb810972d5ced10f8508260dc70e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95baeff8c0c8cb810972d5ced10f8508260dc70e"}], "stats": {"total": 123, "additions": 116, "deletions": 7}, "files": [{"sha": "7fe430e081fb155c5c2a2b3d7840b82031eb17d1", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60d2a8c3bbc4a7b9f3688929bc518c14ae71db92/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60d2a8c3bbc4a7b9f3688929bc518c14ae71db92/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=60d2a8c3bbc4a7b9f3688929bc518c14ae71db92", "patch": "@@ -1,3 +1,22 @@\n+2009-10-06  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-dependences.c (reduction_dr_1): New.\n+\t(reduction_dr_p): New.\n+\t(graphite_legal_transform_dr): Call reduction_dr_p.\n+\t(reduction_ddr): Renamed reduction_ddr_p.\n+\t* graphite-poly.h (same_pdr_p): New.\n+\t(number_of_write_pdrs): New.\n+\t* graphite-sese-to-poly.c (nb_data_writes_in_bb): New.\n+\t(split_reduction_stmt): Do not split reduction statements\n+\twhen there are no writes to memory.\n+\t(translate_scalar_reduction_to_array_for_stmt): Insert the\n+\tmemory reduction statement just after the scalar reduction statement.\n+\n+\t* gcc.dg/graphite/interchange-10.c: Updated to differ from interchange-4.c.\n+\tUn-XFAIL-ed.\n+\t* gcc.dg/graphite/interchange-3.c: Un-XFAIL-ed.\n+\t* gcc.dg/graphite/interchange-4.c: Un-XFAIL-ed.\n+\n 2009-10-06  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-interchange.c (lst_apply_interchange): New."}, {"sha": "12b48f8bbbb414b0828c6300148e3f660daa3767", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 44, "deletions": 2, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60d2a8c3bbc4a7b9f3688929bc518c14ae71db92/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60d2a8c3bbc4a7b9f3688929bc518c14ae71db92/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=60d2a8c3bbc4a7b9f3688929bc518c14ae71db92", "patch": "@@ -524,6 +524,45 @@ pddr_original_scattering (poly_bb_p pbb1, poly_bb_p pbb2,\n   return pddr;\n }\n \n+/* Return true when the data dependence relation between the data\n+   references PDR1 belonging to PBB1 and PDR2 is part of a\n+   reduction.  */\n+\n+static inline bool\n+reduction_dr_1 (poly_bb_p pbb1, poly_dr_p pdr1, poly_dr_p pdr2)\n+{\n+  int i;\n+  poly_dr_p pdr;\n+\n+  /* PBB1 should be a reduction PBB.  Reduction PBBs should have only\n+     one write.  */\n+  gcc_assert (PBB_IS_REDUCTION (pbb1)\n+\t      && number_of_write_pdrs (pbb1) == 1);\n+\n+  for (i = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb1), i, pdr); i++)\n+    if (PDR_TYPE (pdr) == PDR_WRITE)\n+      break;\n+\n+  return same_pdr_p (pdr, pdr1) && same_pdr_p (pdr, pdr2);\n+}\n+\n+/* Return true when the data dependence relation between the data\n+   references PDR1 belonging to PBB1 and PDR2 belonging to PBB2 is\n+   part of a reduction.  */\n+\n+static inline bool\n+reduction_dr_p (poly_bb_p pbb1, poly_bb_p pbb2,\n+\t\tpoly_dr_p pdr1, poly_dr_p pdr2)\n+{\n+  if (PBB_IS_REDUCTION (pbb1))\n+    return reduction_dr_1 (pbb1, pdr1, pdr2);\n+\n+  if (PBB_IS_REDUCTION (pbb2))\n+    return reduction_dr_1 (pbb2, pdr2, pdr1);\n+\n+  return false;\n+}\n+\n /* Returns true when the PBB_TRANSFORMED_SCATTERING functions of PBB1\n    and PBB2 respect the data dependences of PBB_ORIGINAL_SCATTERING\n    functions.  */\n@@ -542,6 +581,9 @@ graphite_legal_transform_dr (poly_bb_p pbb1, poly_bb_p pbb2,\n   ppl_Pointset_Powerset_C_Polyhedron_t d1 = PBB_DOMAIN (pbb1);\n   ppl_Pointset_Powerset_C_Polyhedron_t d2 = PBB_DOMAIN (pbb2);\n \n+  if (reduction_dr_p (pbb1, pbb2, pdr1, pdr2))\n+    return true;\n+\n   pddr = pddr_original_scattering (pbb1, pbb2, pdr1, pdr2);\n   if (!pddr)\n     return true;\n@@ -589,7 +631,7 @@ graphite_legal_transform_dr (poly_bb_p pbb1, poly_bb_p pbb2,\n    part of a reduction.  */\n \n static inline bool\n-reduction_ddr (poly_bb_p pbb1, poly_bb_p pbb2)\n+reduction_ddr_p (poly_bb_p pbb1, poly_bb_p pbb2)\n {\n   return pbb1 == pbb2 && PBB_IS_REDUCTION (pbb1);\n }\n@@ -609,7 +651,7 @@ graphite_legal_transform_bb (poly_bb_p pbb1, poly_bb_p pbb2)\n   if (!PBB_PDR_DUPLICATES_REMOVED (pbb2))\n     pbb_remove_duplicate_pdrs (pbb2);\n \n-  if (reduction_ddr (pbb1, pbb2))\n+  if (reduction_ddr_p (pbb1, pbb2))\n     return true;\n \n   for (i = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb1), i, pdr1); i++)"}, {"sha": "b3541d6610a3670fcbf657923afd746a222fbeab", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60d2a8c3bbc4a7b9f3688929bc518c14ae71db92/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60d2a8c3bbc4a7b9f3688929bc518c14ae71db92/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=60d2a8c3bbc4a7b9f3688929bc518c14ae71db92", "patch": "@@ -248,6 +248,17 @@ pdr_may_write_p (poly_dr_p pdr)\n   return PDR_TYPE (pdr) == PDR_MAY_WRITE;\n }\n \n+/* Return true when PDR1 and PDR2 are similar data accesses: they have\n+   the same base array, and the same access functions.  */\n+\n+static inline bool\n+same_pdr_p (poly_dr_p pdr1, poly_dr_p pdr2)\n+{\n+  return PDR_TYPE (pdr1) == PDR_TYPE (pdr2)\n+    && PDR_NB_SUBSCRIPTS (pdr1) == PDR_NB_SUBSCRIPTS (pdr2)\n+    && PDR_BASE_OBJECT_SET (pdr1) == PDR_BASE_OBJECT_SET (pdr2);\n+}\n+\n typedef struct poly_scattering *poly_scattering_p;\n \n struct poly_scattering\n@@ -351,6 +362,22 @@ extern void pbb_number_of_iterations (poly_bb_p, graphite_dim_t, Value);\n extern void pbb_number_of_iterations_at_time (poly_bb_p, graphite_dim_t, Value);\n extern void pbb_remove_duplicate_pdrs (poly_bb_p);\n \n+/* Return the number of write data references in PBB.  */\n+\n+static inline int\n+number_of_write_pdrs (poly_bb_p pbb)\n+{\n+  int res = 0;\n+  int i;\n+  poly_dr_p pdr;\n+\n+  for (i = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb), i, pdr); i++)\n+    if (PDR_TYPE (pdr) == PDR_WRITE)\n+      res++;\n+\n+  return res;\n+}\n+\n /* The index of the PBB.  */\n \n static inline int"}, {"sha": "75d10c6986933a8e4a9033e20d34c9ae3c7446d4", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60d2a8c3bbc4a7b9f3688929bc518c14ae71db92/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60d2a8c3bbc4a7b9f3688929bc518c14ae71db92/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=60d2a8c3bbc4a7b9f3688929bc518c14ae71db92", "patch": "@@ -2213,6 +2213,22 @@ nb_pbbs_in_loops (scop_p scop)\n   return res;\n }\n \n+/* Return the number of data references in BB that write in\n+   memory.  */\n+\n+static int\n+nb_data_writes_in_bb (basic_block bb)\n+{\n+  int res = 0;\n+  gimple_stmt_iterator gsi;\n+\n+  for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+    if (gimple_vdef (gsi_stmt (gsi)))\n+      res++;\n+\n+  return res;\n+}\n+\n /* Splits STMT out of its current BB.  */\n \n static basic_block\n@@ -2222,6 +2238,11 @@ split_reduction_stmt (gimple stmt)\n   basic_block bb = gimple_bb (stmt);\n   edge e;\n \n+  /* Do not split basic blocks with no writes to memory: the reduction\n+     will be the only write to memory.  */\n+  if (nb_data_writes_in_bb (bb) == 0)\n+    return bb;\n+\n   split_block (bb, stmt);\n \n   gsi = gsi_last_bb (bb);\n@@ -2444,7 +2465,7 @@ translate_scalar_reduction_to_array_for_stmt (tree red, gimple stmt,\n   gsi_insert_before (&insert_gsi, assign, GSI_SAME_STMT);\n \n   assign = gimple_build_assign (red, gimple_assign_lhs (stmt));\n-  insert_gsi = gsi_last_bb (bb);\n+  insert_gsi = gsi_for_stmt (stmt);\n   gsi_insert_after (&insert_gsi, assign, GSI_SAME_STMT);\n }\n "}, {"sha": "c2a674456317bb94139f49f87d99a236e3b4c7e2", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60d2a8c3bbc4a7b9f3688929bc518c14ae71db92/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60d2a8c3bbc4a7b9f3688929bc518c14ae71db92/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-3.c?ref=60d2a8c3bbc4a7b9f3688929bc518c14ae71db92", "patch": "@@ -17,5 +17,5 @@ int foo(int N, int *res)\n       *res = sum + N;\n }\n \n-/* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" { xfail *-*-* } } } */ \n+/* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" } } */\n /* { dg-final { cleanup-tree-dump \"graphite\" } } */"}, {"sha": "c0ec7fa3c81819994e049744fb91364a91e20fa0", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60d2a8c3bbc4a7b9f3688929bc518c14ae71db92/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60d2a8c3bbc4a7b9f3688929bc518c14ae71db92/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-4.c?ref=60d2a8c3bbc4a7b9f3688929bc518c14ae71db92", "patch": "@@ -7,14 +7,14 @@ int foo(int N, int *res)\n {\n   int i, j;\n   double sum = 0;\n-  for (i = 0; i < N; i++)\t\n+  for (i = 0; i < N; i++)\n     for (j = 0; j < N; j++)\n       sum = sum + u[i + 1335 * j];\n-  \n+\n   for (i = 0; i < N; i++)\n     u[1336 * i] *= 2;\n   *res = sum + N;\n }\n \n-/* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" { xfail *-*-* } } } */ \n+/* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" } } */\n /* { dg-final { cleanup-tree-dump \"graphite\" } } */"}]}