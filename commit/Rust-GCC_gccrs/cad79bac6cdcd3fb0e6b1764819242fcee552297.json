{"sha": "cad79bac6cdcd3fb0e6b1764819242fcee552297", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FkNzliYWM2Y2RjZDNmYjBlNmIxNzY0ODE5MjQyZmNlZTU1MjI5Nw==", "commit": {"author": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-09-10T11:06:38Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-09-10T11:06:38Z"}, "message": "[multiple changes]\n\n2004-09-10  Dalibor Topic <robilad@kaffe.org>\n\n\t* gnu/java/net/protocol/file/Connection.java (permission): New field.\n\t(DEFAULT_PERMISSION): New constant.\n\t(Connection): Create a FilePermission with permission to read file.\n\n2004-09-10  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/net/protocol/file/Connection.java\n\t(getLastModified): Moved around.\n\t(getPermission): Return stored permission.\n\nFrom-SVN: r87291", "tree": {"sha": "2797b4d2b91f5763c932b9f9b6933f44598fbaae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2797b4d2b91f5763c932b9f9b6933f44598fbaae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cad79bac6cdcd3fb0e6b1764819242fcee552297", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cad79bac6cdcd3fb0e6b1764819242fcee552297", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cad79bac6cdcd3fb0e6b1764819242fcee552297", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cad79bac6cdcd3fb0e6b1764819242fcee552297/comments", "author": null, "committer": null, "parents": [{"sha": "8127d0e073d0d792628af20a2df90ddf5177c623", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8127d0e073d0d792628af20a2df90ddf5177c623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8127d0e073d0d792628af20a2df90ddf5177c623"}], "stats": {"total": 68, "additions": 46, "deletions": 22}, "files": [{"sha": "1bd4ccc34c599ea8c00384326ed42761c3bb3391", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cad79bac6cdcd3fb0e6b1764819242fcee552297/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cad79bac6cdcd3fb0e6b1764819242fcee552297/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=cad79bac6cdcd3fb0e6b1764819242fcee552297", "patch": "@@ -1,3 +1,15 @@\n+2004-09-10  Dalibor Topic <robilad@kaffe.org>\n+\n+\t* gnu/java/net/protocol/file/Connection.java (permission): New field.\n+\t(DEFAULT_PERMISSION): New constant.\n+\t(Connection): Create a FilePermission with permission to read file.\n+\n+2004-09-10  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/net/protocol/file/Connection.java\n+\t(getLastModified): Moved around.\n+\t(getPermission): Return stored permission.\n+\n 2004-09-10  Michael Koch  <konqueror@gmx.de>\n \n \t* Makefile.in: Regenerate."}, {"sha": "2754717bb14ac53b69f278734494594b583ba658", "filename": "libjava/gnu/java/net/protocol/file/Connection.java", "status": "modified", "additions": 34, "deletions": 22, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cad79bac6cdcd3fb0e6b1764819242fcee552297/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cad79bac6cdcd3fb0e6b1764819242fcee552297/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java?ref=cad79bac6cdcd3fb0e6b1764819242fcee552297", "patch": "@@ -68,6 +68,11 @@\n  */\n public class Connection extends URLConnection\n {\n+  /**\n+   * Default permission for a file\n+   */\n+  private static final String DEFAULT_PERMISSION = \"read\";\n+\n   /**\n    * HTTP-style DateFormat, used to format the last-modified header.\n    */\n@@ -92,12 +97,19 @@ public class Connection extends URLConnection\n    */\n   private OutputStream outputStream;\n   \n+  /**\n+   * FilePermission to read the file\n+   */\n+  private FilePermission permission;\n+\n   /**\n    * Calls superclass constructor to initialize.\n    */\n   public Connection(URL url)\n   {\n     super (url);\n+\n+    permission = new FilePermission(getURL().getFile(), DEFAULT_PERMISSION);\n   }\n   \n   /**\n@@ -186,6 +198,26 @@ public OutputStream getOutputStream()\n     return outputStream;\n   }\n \n+  /**\n+   * Get the last modified time of the resource.\n+   *\n+   * @return the time since epoch that the resource was modified.\n+   */\n+  public long getLastModified()\n+  {\n+    try\n+      {\n+\tif (!connected)\n+\t  connect();\n+\n+\treturn file.lastModified();\n+      }\n+    catch (IOException e)\n+      {\n+\treturn -1;\n+      }\n+  }\n+  \n   /**\n    *  Get an http-style header field. Just handle a few common ones. \n    */\n@@ -221,33 +253,13 @@ else if (field.equals(\"last-modified\"))\n    * @return the length of the content.\n    */\n   public int getContentLength()\n-  {\n-    try\n-      {\n- \tif (!connected)\n- \t  connect();\n-\n-\treturn (int) file.length();\n-      }\n-    catch (IOException e)\n-      {\n- \treturn -1;\n-      }\n-  }\n-\n-  /**\n-   * Get the last modified time of the resource.\n-   *\n-   * @return the time since epoch that the resource was modified.\n-   */\n-  public long getLastModified()\n   {\n     try\n       {\n \tif (!connected)\n \t  connect();\n         \n-\treturn file.lastModified();\n+\treturn (int) file.length();\n       }\n     catch (IOException e)\n       {\n@@ -265,6 +277,6 @@ public long getLastModified()\n    */\n   public Permission getPermission() throws IOException\n   {\n-    return new FilePermission(getURL().getFile(), \"read\");\n+    return permission;\n   }\n }"}]}