{"sha": "874108a9050af162504c3769020d40fd498a4be1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc0MTA4YTkwNTBhZjE2MjUwNGMzNzY5MDIwZDQwZmQ0OThhNGJlMQ==", "commit": {"author": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2016-01-28T11:34:03Z"}, "committer": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2016-01-28T11:34:03Z"}, "message": "re PR fortran/62536 (ICE (segfault) for invalid END BLOCK statement)\n\ngcc/fortran/ChangeLog:\n\n2016-01-28  Andre Vehreschild  <vehre@gcc.gnu.org>\n\n\tPR fortran/62536\n\t* decl.c (gfc_match_end): Only unnest and remove BLOCK namespaces\n\twhen the END encountered does not match a BLOCK's end.\n\ngcc/testsuite/ChangeLog:\n\n2016-01-28  Andre Vehreschild  <vehre@gcc.gnu.org>\n\n\tPR fortran/62536\n\t* gfortran.dg/block_15.f08: New test.\n\t* gfortran.dg/block_end_error_1.f90: Need to catch additional error\n\ton incorrectly closed BLOCK.\n\nFrom-SVN: r232919", "tree": {"sha": "202e6b9c3587ff2377f83624c9407a69f6045c68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/202e6b9c3587ff2377f83624c9407a69f6045c68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/874108a9050af162504c3769020d40fd498a4be1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874108a9050af162504c3769020d40fd498a4be1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/874108a9050af162504c3769020d40fd498a4be1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874108a9050af162504c3769020d40fd498a4be1/comments", "author": null, "committer": null, "parents": [{"sha": "30480bcd794f8a0d4e489b8eb3f043b2ab72e7e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30480bcd794f8a0d4e489b8eb3f043b2ab72e7e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30480bcd794f8a0d4e489b8eb3f043b2ab72e7e8"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "386bd42028140990cbeadd9326a920165ba71ff7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874108a9050af162504c3769020d40fd498a4be1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874108a9050af162504c3769020d40fd498a4be1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=874108a9050af162504c3769020d40fd498a4be1", "patch": "@@ -1,3 +1,9 @@\n+2016-01-28  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/62536\n+\t* decl.c (gfc_match_end): Only unnest and remove BLOCK namespaces\n+\twhen the END encountered does not match a BLOCK's end.\n+\n 2016-01-27  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/69484"}, {"sha": "df813697a0251389e4b4611f75cd63e6648d1441", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874108a9050af162504c3769020d40fd498a4be1/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874108a9050af162504c3769020d40fd498a4be1/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=874108a9050af162504c3769020d40fd498a4be1", "patch": "@@ -6327,6 +6327,7 @@ gfc_match_end (gfc_statement *st)\n   gfc_namespace *parent_ns, *ns, *prev_ns;\n   gfc_namespace **nsp;\n   bool abreviated_modproc_decl;\n+  bool got_matching_end = false;\n \n   old_loc = gfc_current_locus;\n   if (gfc_match (\"end\") != MATCH_YES)\n@@ -6510,6 +6511,8 @@ gfc_match_end (gfc_statement *st)\n \t\t ? \"END PROCEDURE\" : gfc_ascii_statement(*st), &old_loc);\n       goto cleanup;\n     }\n+  else\n+    got_matching_end = true;\n \n   old_loc = gfc_current_locus;\n   /* If we're at the end, make sure a block name wasn't required.  */\n@@ -6581,7 +6584,7 @@ gfc_match_end (gfc_statement *st)\n   /* If we are missing an END BLOCK, we created a half-ready namespace.\n      Remove it from the parent namespace's sibling list.  */\n \n-  while (state == COMP_BLOCK)\n+  while (state == COMP_BLOCK && !got_matching_end)\n     {\n       parent_ns = gfc_current_ns->parent;\n \n@@ -6601,7 +6604,7 @@ gfc_match_end (gfc_statement *st)\n \t  prev_ns = ns;\n \t  ns = ns->sibling;\n \t}\n-  \n+\n       gfc_free_namespace (gfc_current_ns);\n       gfc_current_ns = parent_ns;\n       gfc_state_stack = gfc_state_stack->previous;"}, {"sha": "63b4b1ff13fbd6536b1ef085fb97684ec742edf4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874108a9050af162504c3769020d40fd498a4be1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874108a9050af162504c3769020d40fd498a4be1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=874108a9050af162504c3769020d40fd498a4be1", "patch": "@@ -1,3 +1,10 @@\n+2016-01-28  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/62536\n+\t* gfortran.dg/block_15.f08: New test.\n+\t* gfortran.dg/block_end_error_1.f90: Need to catch additional error\n+\ton incorrectly closed BLOCK.\n+\n 2016-01-28  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \t* gcc.dg/declare-simd.c: New test."}, {"sha": "4bbe89bba72efe11ad849af64412ed2a1c718f1f", "filename": "gcc/testsuite/gfortran.dg/block_end_error_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874108a9050af162504c3769020d40fd498a4be1/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_end_error_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874108a9050af162504c3769020d40fd498a4be1/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_end_error_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fblock_end_error_1.f90?ref=874108a9050af162504c3769020d40fd498a4be1", "patch": "@@ -6,5 +6,5 @@ subroutine s\n    block\n    end block named ! { dg-error \"Syntax error in END BLOCK statement\" }\n    return\n-endsubroutine\n+endsubroutine ! { dg-error \"Expecting END BLOCK statement\" }\n ! { dg-prune-output \"Unexpected end of file\" }"}]}