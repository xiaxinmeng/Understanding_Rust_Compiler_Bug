{"sha": "5e9defae4f3e7422d3f0fa04fb16e29b676c0d29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU5ZGVmYWU0ZjNlNzQyMmQzZjBmYTA0ZmIxNmUyOWI2NzZjMGQyOQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-01-27T22:11:55Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-27T22:11:55Z"}, "message": "c-lex.c: Include <stdlib.h> and <string.h>/<strings.h>.\n\nd\n\t* c-lex.c: Include <stdlib.h> and <string.h>/<strings.h>.  Add\n\tprototype for `handle_sysv_pragma', and make it static.  Add\n\tparentheses around assignment used as truth value.\n\t* combine.c (combine_instructions): Protect variable `prev' with\n\tmacro HAVE_cc0.\n\t(can_combine_p): Protect variable `link' with AUTO_INC_DEC.\n\t(extract_left_shift): Add parentheses around operand of &.\n\t(merge_outer_ops): Avoid an empty body in an else-statement.\n\t(gen_rtx_combine): Remove unused variable `i'.\n\t* sparc/gmon-sol2.c: Include <fcntl.h>.  Make return type of\n        function monstartup `void'.  Likewise for internal_mcount.  Add\n        `static void' prototype for moncontrol.  Reconcile sprintf format\n        vs. args.\n\t* sparc/sparc.c: Include <stdlib.h> and <string.h>/<strings.h>.\n\tMake return type of function_arg_slotno explicitly `int'.\n\t(reg_unused_after): Add\tparentheses around assignment used as\n\ttruth value.\n\t(save_regs): Add explicit braces to avoid ambiguous `else'.\n\t(function_arg_slotno): Add parentheses around && within ||.\n\t(function_arg_pass_by_reference): Likewise.\n\t(sparc_flat_output_function_prologue): Reconcile fprintf format\n\tvs. args.\n\t* svr4.h (ASM_OUTPUT_LIMITED_STRING): Add parentheses around\n\tassignment used as truth value.\n\t* cplus-dem.c: Include <stdlib.h>.\n\t(demangle_signature): Avoid an empty body in an else-statement.\n\t(do_type): Remove unused variable `lvl'.\n\t* cppexp.c: Don't have <stdlib.h> depend on MULTIBYTE_CHARS.\n\tInclude <string.h>/<strings.h>.\n\t(cpp_lex): Remove unused variable `namelen'.\n\t(cpp_lex): Explicitly declare `num_chars' as an int.\n\t* cpplib.c: Avoid duplicate inclusion of <stdlib.h>, include\n\t<unistd.h> instead.  Explicitly declare is_system_include\n\treturning int.\n\t(make_assertion): Remove unused variable `kt'.\n\t(cpp_expand_to_buffer): Hide variable `obuf'.\n\t(output_line_command): Remove unused variables, `line_end',\n\t`line_cmd_buf' and `len'.\n\t(macarg): Remove unused variable `arg_start'.\n\t(special_symbol): Remove unused variable `i'.  Add parentheses\n\taround assignment used as truth value.\n\t(do_include):  Remove unused variables `pcfname' and `retried',\n\thide `pcf' and `pcfbuflimit'.\n\t(do_line): Remove unused variable `i'.\n\t(finclude): Hide variable `missing_newline'.\n\t(cpp_handle_options): Remove unused variable `j'.\n\t(read_token_list): Remove unused variable `eofp'.\n\t(cpp_error_with_line): Remove unused variable `i'.\n\t(cpp_warning_with_line): Likewise.\n\t(cpp_pedwarn_with_line): Explicitly declare `column' as int.\n\t(cpp_error_from_errno): Remove unused variable `i'.\n\t* cse.c (invalidate): Add parentheses around assignment used as\n\ttruth value.\n\t(find_best_addr): Move declaration of variable `our_cost' inside\n\tthe conditional macro where its used.\n\t(fold_rtx): Avoid an empty body in an if-statement.\n\t(cse_insn): Wrap variables  `this_insn_cc0_mode' and\n\t`this_insn_cc0' in macro HAVE_cc0.\n\t* dwarf2out.c: Include <stdlib.h> and <string.h>/<string.h>.\n\t(ASM_OUTPUT_DWARF_DATA8):  Reconcile format vs. args in fprintf's.\n\t(output_uleb128): Likewise.\n\t(output_sleb128): Likewise.\n\t(output_cfi): Likewise.\n\t(output_call_frame_info): Remove unused variables `j', `fde_size'\n\tand `fde_pad'.\n\t(comp_unit_has_inlines): Hide declaration as per rest of file.\n\t(size_of_line_prolog): Correct typo in prototype.\n\t(add_arange): Likewise.\n\t(output_aranges): Likewise.\n\t(add_name_and_src_coords_attributes): Likewise.\n\t(gen_array_type_die): Likewise.\n\t(gen_inlined_subroutine_die): Likewise.\n\t(equate_decl_number_to_die): Remove unused variable `i'.\n\t(print_die): Reconcile format vs. args in fprintf's.\n\t(print_dwarf_line_table): Likewise.\n\t(output_die): Likewise.\n\t(output_line_info): Likewise.\n\t(add_subscript_info): Avoid an empty body in an else-statement.\n\t(gen_subprogram_die): Remove unused variable `fp_loc'.\n\t* dwarfout.c: Explicitly declare `next_pubname_number' as int.\n\tProtect `ordering_attribute' prototype with USE_ORDERING_ATTRIBUTE\n\tmacro.  Protect `src_coords_attribute' prototype with\n\tDWARF_DECL_COORDINATES macro.  Hide `output_entry_point_die'\n\tprototype as in the rest of the file.  Likewise for\n\t`output_pointer_type_die' and `output_reference_type_die'.  Remove\n\tprototype for `type_of_for_scope'.\n\t(output_unsigned_leb128): Reconcile format vs. args in fprintf.\n\t(type_attribute): Add explicit braces to avoid ambiguous `else'.\n\t* final.c: Include <stdlib.h> and <string.h>/<strings.h>.\n\t(shorten_branches): Protect declaration of tmp_length with\n\tSHORTEN_WITH_ADJUST_INSN_LENGTH and ADJUST_INSN_LENGTH macros.\n\t(profile_function): Protect declaration of `sval' and `cxt'\n\tvariables with appropriate macros.\n\t(final_scan_insn): Likewise for `note' variable.  Add explicit\n\tbraces to avoid empty body in an if-statement.\n\t(output_asm_insn): Move variable `i' inside macro conditional\n\twhere it is used.  Add parentheses around assignment used as truth\n\tvalue.\n\t(asm_fprintf) Likewise, likewise.\n\t* fix-header.c (main): Remove unused variable `done'.  Protect\n\tdeclaration of `i' with FIXPROTO_IGNORE_LIST.\n\t* pexecute.c: Include <unistd.h>.  Prototype `my_strerror'.\n\t* print-rtl.c (print_inline_rtx): Explicitly declare the parameter\n\t`ind'.\n\t* profile.c: Include <string.h>/<strings.h>.\n\t(instrument_arcs): Remove unused variables `note', `inverted',\n\t`zero' and `neg_one'.\n\t(branch_prob): Avoid empty body in an if-statement.\n\t* regclass.c: Include <stdlib.h>.\n\t(reg_alternate_class): Explicitly declare parameter `regno'.\n\t* regmove.c (regmove_optimize): Remove unused variable `p'.  Add\n\tparentheses around assignment used as truth value.\n\t(find_matches):  Remove unused variables `output_operand' and\n\t`matching_operand'.\n\t(fixup_match_1): Remove statement with no effect: \"if (0) ;\".\n\t* scan.c (sstring_append): Explicitly declare `count' as int.\n\t(scan_string): Explicitly declare parameter `init' as int.\n\t* sched.c: Include <stdlib.h>.\n\t(BLOCKAGE_RANGE): Add parentheses around arithmetic in operand of |.\n\t(rank_for_schedule): Add parentheses around assignment used as\n\ttruth value.\n\t(schedule_block): Likewise.\n\t(regno_use_in): Likewise.\n\t(schedule_insns): Remove unused variable `i'.\n\t* toplev.c: Include <stdlib.h> and <string.h>/<strings.h>.\n\t(v_message_with_decl): Remove unused variable `n'.\n\t(botch): Explicitly declare parameter `s' as char *.\n\t(main): Add parentheses around assignment used as truth value.\n\t* tree.c (make_node): Protect the variable `kind' with the\n\tGATHER_STATISTICS macro.\n\t(real_value_from_int_cst): Move variable `e' inside conditional\n\tmacro area where it is used.\n\t(tree_last): Add parentheses around assignment used as truth value.\n\t(build1): Protect the variable `kind' with the GATHER_STATISTICS\n\tmacro.\n\t(print_obstack_statistics): Reconcile format vs. args in fprintf.\n\tProtect variables `i', `total_nodes', and `total_bytes' with the\n\tGATHER_STATISTICS macro.\nLots more -W -Wall warnings disappear.\n\nFrom-SVN: r17518", "tree": {"sha": "d453b7dadb74745113d0a30cdacc0fab3d0aacfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d453b7dadb74745113d0a30cdacc0fab3d0aacfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/comments", "author": null, "committer": null, "parents": [{"sha": "9870475ca00df8883f60db6e569a06bcc9274c84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9870475ca00df8883f60db6e569a06bcc9274c84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9870475ca00df8883f60db6e569a06bcc9274c84"}], "stats": {"total": 358, "additions": 280, "deletions": 78}, "files": [{"sha": "35827e0792118e5bbb3e149ab1f81d8383236957", "filename": "gcc/ChangeLog", "status": "modified", "additions": 162, "deletions": 0, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e9defae4f3e7422d3f0fa04fb16e29b676c0d29", "patch": "@@ -1,3 +1,165 @@\n+Tue Jan 27 23:11:11 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* c-lex.c: Include <stdlib.h> and <string.h>/<strings.h>.  Add\n+\tprototype for `handle_sysv_pragma', and make it static.  Add\n+\tparentheses around assignment used as truth value.\n+\n+\t* combine.c (combine_instructions): Protect variable `prev' with\n+\tmacro HAVE_cc0.\n+\t(can_combine_p): Protect variable `link' with AUTO_INC_DEC.\n+\t(extract_left_shift): Add parentheses around operand of &.\n+\t(merge_outer_ops): Avoid an empty body in an else-statement.\n+\t(gen_rtx_combine): Remove unused variable `i'.\n+\t\n+\t* sparc/gmon-sol2.c: Include <fcntl.h>.  Make return type of\n+        function monstartup `void'.  Likewise for internal_mcount.  Add\n+        `static void' prototype for moncontrol.  Reconcile sprintf format\n+        vs. args.  \n+\n+\t* sparc/sparc.c: Include <stdlib.h> and <string.h>/<strings.h>.\n+\tMake return type of function_arg_slotno explicitly `int'.\n+\t(reg_unused_after): Add\tparentheses around assignment used as\n+\ttruth value.\n+\t(save_regs): Add explicit braces to avoid ambiguous `else'.\n+\t(function_arg_slotno): Add parentheses around && within ||.\n+\t(function_arg_pass_by_reference): Likewise.\n+\t(sparc_flat_output_function_prologue): Reconcile fprintf format\n+\tvs. args.\n+\n+\t* svr4.h (ASM_OUTPUT_LIMITED_STRING): Add parentheses around\n+\tassignment used as truth value.\n+\n+\t* cplus-dem.c: Include <stdlib.h>.\n+\t(demangle_signature): Avoid an empty body in an else-statement.\n+\t(do_type): Remove unused variable `lvl'.\n+\t\n+\t* cppexp.c: Don't have <stdlib.h> depend on MULTIBYTE_CHARS.\n+\tInclude <string.h>/<strings.h>.\n+\t(cpp_lex): Remove unused variable `namelen'.\n+\t(cpp_lex): Explicitly declare `num_chars' as an int.\n+\n+\t* cpplib.c: Avoid duplicate inclusion of <stdlib.h>, include\n+\t<unistd.h> instead.  Explicitly declare is_system_include\n+\treturning int.\n+\t(make_assertion): Remove unused variable `kt'.  \n+\t(cpp_expand_to_buffer): Hide variable `obuf'.\n+\t(output_line_command): Remove unused variables, `line_end',\n+\t`line_cmd_buf' and `len'.\n+\t(macarg): Remove unused variable `arg_start'.\n+\t(special_symbol): Remove unused variable `i'.  Add parentheses\n+\taround assignment used as truth value.  \n+\t(do_include):  Remove unused variables `pcfname' and `retried',\n+\thide `pcf' and `pcfbuflimit'. \n+\t(do_line): Remove unused variable `i'.\n+\t(finclude): Hide variable `missing_newline'.\n+\t(cpp_handle_options): Remove unused variable `j'.\n+\t(read_token_list): Remove unused variable `eofp'.\n+\t(cpp_error_with_line): Remove unused variable `i'.\n+\t(cpp_warning_with_line): Likewise.\n+\t(cpp_pedwarn_with_line): Explicitly declare `column' as int.\n+\t(cpp_error_from_errno): Remove unused variable `i'.\n+\n+\t* cse.c (invalidate): Add parentheses around assignment used as\n+\ttruth value.\n+\t(find_best_addr): Move declaration of variable `our_cost' inside\n+\tthe conditional macro where its used.\n+\t(fold_rtx): Avoid an empty body in an if-statement.\n+\t(cse_insn): Wrap variables  `this_insn_cc0_mode' and\n+\t`this_insn_cc0' in macro HAVE_cc0.\n+\t\n+\t* dwarf2out.c: Include <stdlib.h> and <string.h>/<string.h>.\n+\t(ASM_OUTPUT_DWARF_DATA8):  Reconcile format vs. args in fprintf's.\n+\t(output_uleb128): Likewise.\n+\t(output_sleb128): Likewise.\n+\t(output_cfi): Likewise.\n+\t(output_call_frame_info): Remove unused variables `j', `fde_size'\n+\tand `fde_pad'.\n+\t(comp_unit_has_inlines): Hide declaration as per rest of file.\n+\t(size_of_line_prolog): Correct typo in prototype.\n+\t(add_arange): Likewise.\n+\t(output_aranges): Likewise.\n+\t(add_name_and_src_coords_attributes): Likewise.\n+\t(gen_array_type_die): Likewise.\n+\t(gen_inlined_subroutine_die): Likewise.\n+\t(equate_decl_number_to_die): Remove unused variable `i'.\n+\t(print_die): Reconcile format vs. args in fprintf's.\n+\t(print_dwarf_line_table): Likewise.\n+\t(output_die): Likewise.\n+\t(output_line_info): Likewise.\n+\t(add_subscript_info): Avoid an empty body in an else-statement.\n+\t(gen_subprogram_die): Remove unused variable `fp_loc'.\n+\n+\t* dwarfout.c: Explicitly declare `next_pubname_number' as int.\n+\tProtect `ordering_attribute' prototype with USE_ORDERING_ATTRIBUTE\n+\tmacro.  Protect `src_coords_attribute' prototype with\n+\tDWARF_DECL_COORDINATES macro.  Hide `output_entry_point_die'\n+\tprototype as in the rest of the file.  Likewise for\n+\t`output_pointer_type_die' and `output_reference_type_die'.  Remove\n+\tprototype for `type_of_for_scope'.\n+\t(output_unsigned_leb128): Reconcile format vs. args in fprintf.\n+\t(type_attribute): Add explicit braces to avoid ambiguous `else'.\n+\t\n+\t* final.c: Include <stdlib.h> and <string.h>/<strings.h>.\n+\t(shorten_branches): Protect declaration of tmp_length with\n+\tSHORTEN_WITH_ADJUST_INSN_LENGTH and ADJUST_INSN_LENGTH macros.\n+\t(profile_function): Protect declaration of `sval' and `cxt'\n+\tvariables with appropriate macros.\n+\t(final_scan_insn): Likewise for `note' variable.  Add explicit\n+\tbraces to avoid empty body in an if-statement.\n+\t(output_asm_insn): Move variable `i' inside macro conditional\n+\twhere it is used.  Add parentheses around assignment used as truth\n+\tvalue.\n+\t(asm_fprintf) Likewise, likewise.\n+\t\n+\t* fix-header.c (main): Remove unused variable `done'.  Protect\n+\tdeclaration of `i' with FIXPROTO_IGNORE_LIST.\n+\n+\t* pexecute.c: Include <unistd.h>.  Prototype `my_strerror'.\n+\n+\t* print-rtl.c (print_inline_rtx): Explicitly declare the parameter\n+\t`ind'.\n+\n+\t* profile.c: Include <string.h>/<strings.h>.\n+\t(instrument_arcs): Remove unused variables `note', `inverted',\n+\t`zero' and `neg_one'.\n+\t(branch_prob): Avoid empty body in an if-statement.\n+\n+\t* regclass.c: Include <stdlib.h>.\n+\t(reg_alternate_class): Explicitly declare parameter `regno'.\n+\n+\t* regmove.c (regmove_optimize): Remove unused variable `p'.  Add\n+\tparentheses around assignment used as truth value.\n+\t(find_matches):  Remove unused variables `output_operand' and\n+\t`matching_operand'.\n+\t(fixup_match_1): Remove statement with no effect: \"if (0) ;\".\n+\n+\t* scan.c (sstring_append): Explicitly declare `count' as int.\n+\t(scan_string): Explicitly declare parameter `init' as int.\n+\n+\t* sched.c: Include <stdlib.h>.\n+\t(BLOCKAGE_RANGE): Add parentheses around arithmetic in operand of |.\n+\t(rank_for_schedule): Add parentheses around assignment used as\n+\ttruth value.\n+\t(schedule_block): Likewise.\n+\t(regno_use_in): Likewise.\n+\t(schedule_insns): Remove unused variable `i'.\n+\n+\t* toplev.c: Include <stdlib.h> and <string.h>/<strings.h>.\n+\t(v_message_with_decl): Remove unused variable `n'.\n+\t(botch): Explicitly declare parameter `s' as char *.\n+\t(main): Add parentheses around assignment used as truth value.\n+\n+\t* tree.c (make_node): Protect the variable `kind' with the\n+\tGATHER_STATISTICS macro.\n+\t(real_value_from_int_cst): Move variable `e' inside conditional\n+\tmacro area where it is used.\n+\t(tree_last): Add parentheses around assignment used as truth value.\n+\t(build1): Protect the variable `kind' with the GATHER_STATISTICS\n+\tmacro.\n+\t(print_obstack_statistics): Reconcile format vs. args in fprintf.\n+\tProtect variables `i', `total_nodes', and `total_bytes' with the\n+\tGATHER_STATISTICS macro.\n+\n Tue Jan 27 23:01:55 1998  Mike Stump  (mrs@wrs.com)\n \n \t* m32r.md, mips.md, mn10200.md, mn10300.md, pyr.md: Add"}, {"sha": "384609f43cf14e466fa20979ccdf773f06f60cc1", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 46, "deletions": 31, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=5e9defae4f3e7422d3f0fa04fb16e29b676c0d29", "patch": "@@ -23,6 +23,16 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include <stdio.h>\n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+#ifdef HAVE_STRING_H\n+#include <string.h>\n+#else\n+#ifdef HAVE_STRINGS_H\n+#include <strings.h>\n+#endif\n+#endif\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n@@ -107,7 +117,7 @@ static int save_regs\t\tPROTO((FILE *, int, int, char *,\n \t\t\t\t       int, int, int));\n static int restore_regs\t\tPROTO((FILE *, int, int, char *, int, int));\n static void build_big_number\tPROTO((FILE *, int, char *));\n-static function_arg_slotno\tPROTO((const CUMULATIVE_ARGS *,\n+static int function_arg_slotno\tPROTO((const CUMULATIVE_ARGS *,\n \t\t\t\t       enum machine_mode, tree, int, int,\n \t\t\t\t       int *, int *));\n \n@@ -1307,7 +1317,7 @@ reg_unused_after (reg, insn)\n {\n   enum rtx_code code, prev_code = UNKNOWN;\n \n-  while (insn = NEXT_INSN (insn))\n+  while ((insn = NEXT_INSN (insn)))\n     {\n       if (prev_code == CALL_INSN && call_used_regs[REGNO (reg)])\n \treturn 1;\n@@ -3135,33 +3145,38 @@ save_regs (file, low, high, base, offset, n_regs, real_offset)\n       for (i = low; i < high; i += 2)\n \t{\n \t  if (regs_ever_live[i] && ! call_used_regs[i])\n-\t    if (regs_ever_live[i+1] && ! call_used_regs[i+1])\n-\t      {\n-\t\tfprintf (file, \"\\tstd %s,[%s+%d]\\n\",\n-\t\t\t reg_names[i], base, offset + 4 * n_regs);\n-\t\tif (dwarf2out_do_frame ())\n-\t\t  {\n-\t\t    char *l = dwarf2out_cfi_label ();\n-\t\t    dwarf2out_reg_save (l, i, real_offset + 4 * n_regs);\n-\t\t    dwarf2out_reg_save (l, i+1, real_offset + 4 * n_regs + 4);\n-\t\t  }\n-\t\tn_regs += 2;\n-\t      }\n-\t    else\n-\t      {\n-\t\tfprintf (file, \"\\tst %s,[%s+%d]\\n\",\n-\t\t\t reg_names[i], base, offset + 4 * n_regs);\n-\t\tif (dwarf2out_do_frame ())\n-\t\t  dwarf2out_reg_save (\"\", i, real_offset + 4 * n_regs);\n-\t\tn_regs += 2;\n-\t      }\n-\t  else if (regs_ever_live[i+1] && ! call_used_regs[i+1])\n \t    {\n-\t      fprintf (file, \"\\tst %s,[%s+%d]\\n\",\n-\t\t       reg_names[i+1], base, offset + 4 * n_regs + 4);\n-\t      if (dwarf2out_do_frame ())\n-\t\tdwarf2out_reg_save (\"\", i + 1, real_offset + 4 * n_regs + 4);\n-\t      n_regs += 2;\n+\t      if (regs_ever_live[i+1] && ! call_used_regs[i+1])\n+\t\t{\n+\t\t  fprintf (file, \"\\tstd %s,[%s+%d]\\n\",\n+\t\t\t   reg_names[i], base, offset + 4 * n_regs);\n+\t\t  if (dwarf2out_do_frame ())\n+\t\t    {\n+\t\t      char *l = dwarf2out_cfi_label ();\n+\t\t      dwarf2out_reg_save (l, i, real_offset + 4 * n_regs);\n+\t\t      dwarf2out_reg_save (l, i+1, real_offset + 4 * n_regs + 4);\n+\t\t    }\n+\t\t  n_regs += 2;\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  fprintf (file, \"\\tst %s,[%s+%d]\\n\",\n+\t\t\t   reg_names[i], base, offset + 4 * n_regs);\n+\t\t  if (dwarf2out_do_frame ())\n+\t\t    dwarf2out_reg_save (\"\", i, real_offset + 4 * n_regs);\n+\t\t  n_regs += 2;\n+\t\t}\n+\t    }\n+\t  else\n+\t    {\n+\t      if (regs_ever_live[i+1] && ! call_used_regs[i+1])\n+\t\t{\n+\t\t  fprintf (file, \"\\tst %s,[%s+%d]\\n\",\n+\t\t\t   reg_names[i+1], base, offset + 4 * n_regs + 4);\n+\t\t  if (dwarf2out_do_frame ())\n+\t\t    dwarf2out_reg_save (\"\", i + 1, real_offset + 4 * n_regs + 4);\n+\t\t  n_regs += 2;\n+\t\t}\n \t    }\n \t}\n     }\n@@ -3746,7 +3761,7 @@ function_arg_slotno (cum, mode, type, named, incoming_p, pregno, ppadding)\n \t}\n \n       if (TARGET_ARCH32\n-\t  || type && TREE_CODE (type) == UNION_TYPE)\n+\t  || (type && TREE_CODE (type) == UNION_TYPE))\n \t{\n \t  if (slotno >= SPARC_INT_ARG_MAX)\n \t    return -1;\n@@ -4145,7 +4160,7 @@ function_arg_pass_by_reference (cum, mode, type, named)\n {\n   if (TARGET_ARCH32)\n     {\n-      return (type && AGGREGATE_TYPE_P (type)\n+      return ((type && AGGREGATE_TYPE_P (type))\n \t      || mode == TFmode || mode == TCmode);\n     }\n   else\n@@ -5585,7 +5600,7 @@ sparc_flat_output_function_prologue (file, size)\n \n   /* This is only for the human reader.  */\n   fprintf (file, \"\\t%s#PROLOGUE# 0\\n\", ASM_COMMENT_START);\n-  fprintf (file, \"\\t%s# vars= %d, regs= %d/%d, args= %d, extra= %d\\n\",\n+  fprintf (file, \"\\t%s# vars= %ld, regs= %d/%d, args= %d, extra= %ld\\n\",\n \t   ASM_COMMENT_START,\n \t   current_frame_info.var_size,\n \t   current_frame_info.gp_reg_size / 4,"}, {"sha": "f5ca073694fa9e2c321614449349bb258124c18d", "filename": "gcc/cpplib.c", "status": "modified", "additions": 14, "deletions": 20, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=5e9defae4f3e7422d3f0fa04fb16e29b676c0d29", "patch": "@@ -59,8 +59,8 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n # include <limits.h>\n #endif\n \n-#ifdef HAVE_STDLIB_H\n-# include <stdlib.h>\n+#ifdef HAVE_UNISTD_H\n+# include <unistd.h>\n #endif\n \n #ifdef HAVE_STRING_H\n@@ -271,7 +271,7 @@ extern void fancy_abort ();\n #endif\n static int lookup_import ();\n static int redundant_include_p ();\n-static is_system_include ();\n+static int is_system_include ();\n static struct file_name_map *read_name_map ();\n static char *read_filename_string ();\n static int open_include_file ();\n@@ -615,7 +615,6 @@ make_assertion (pfile, option, str)\n      char *option;\n      U_CHAR *str;\n {\n-  struct directive *kt;\n   U_CHAR *buf, *p, *q;\n \n   /* Copy the entire option so we can modify it.  */\n@@ -1946,7 +1945,9 @@ cpp_expand_to_buffer (pfile, buf, length)\n      int length;\n {\n   register cpp_buffer *ip;\n+#if 0\n   cpp_buffer obuf;\n+#endif\n   U_CHAR *limit = buf + length;\n   U_CHAR *buf1;\n #if 0\n@@ -2087,8 +2088,6 @@ output_line_command (pfile, conditional, file_change)\n      int conditional;\n      enum file_change_code file_change;\n {\n-  int len;\n-  char *line_cmd_buf, *line_end;\n   long line, col;\n   cpp_buffer *ip = CPP_BUFFER (pfile);\n \n@@ -2180,7 +2179,6 @@ macarg (pfile, rest_args)\n {\n   int paren = 0;\n   enum cpp_token token;\n-  long arg_start = CPP_WRITTEN (pfile);\n   char save_put_out_comments = CPP_OPTIONS (pfile)->put_out_comments;\n   CPP_OPTIONS (pfile)->put_out_comments = 0;\n \n@@ -2298,7 +2296,7 @@ special_symbol (hp, pfile)\n      cpp_reader *pfile;\n {\n   char *buf;\n-  int i, len;\n+  int len;\n   int true_indepth;\n   cpp_buffer *ip = NULL;\n   struct tm *timebuf;\n@@ -2438,7 +2436,7 @@ special_symbol (hp, pfile)\n \tgoto oops;\n       if (ip->cur[0] == 'L' && (ip->cur[1] == '\\'' || ip->cur[1] == '\"'))\n \tgoto oops;\n-      if (hp = cpp_lookup (pfile, ip->cur, -1, -1))\n+      if ((hp = cpp_lookup (pfile, ip->cur, -1, -1)))\n \t{\n #if 0\n \t  if (pcp_outfile && pcp_inside_if\n@@ -3105,7 +3103,6 @@ do_include (pfile, keyword, unused1, unused2)\n   int skip_dirs = (keyword->type == T_INCLUDE_NEXT);\n   char *fname;\t\t/* Dynamically allocated fname buffer */\n   char *pcftry;\n-  char *pcfname;\n   U_CHAR *fbeg, *fend;\t\t/* Beginning and end of fname */\n   enum cpp_token token;\n \n@@ -3119,12 +3116,12 @@ do_include (pfile, keyword, unused1, unused2)\n \n   int f;\t\t\t/* file number */\n \n-  int retried = 0;\t\t/* Have already tried macro\n-\t\t\t\t   expanding the include line */\n   int angle_brackets = 0;\t/* 0 for \"...\", 1 for <...> */\n-  int pcf = -1;\n   char *pcfbuf;\n+#if 0\n+  int pcf = -1;\n   char *pcfbuflimit;\n+#endif\n   int pcfnum;\n   f= -1;\t\t\t/* JF we iz paranoid! */\n \n@@ -3730,7 +3727,6 @@ do_line (pfile, keyword)\n   long old_written = CPP_WRITTEN (pfile);\n   enum file_change_code file_change = same_file;\n   enum cpp_token token;\n-  int i;\n \n   token = get_directive_token (pfile);\n \n@@ -5602,7 +5598,9 @@ finclude (pfile, f, fname, system_header_p, dirptr)\n   long i;\n   int length;\n   cpp_buffer *fp;\t\t\t/* For input stack frame */\n+#if 0\n   int missing_newline = 0;\n+#endif\n \n   if (fstat (f, &st) < 0)\n     {\n@@ -6657,7 +6655,6 @@ cpp_handle_options (pfile, argc, argv)\n \t       Let's include also any that were specified earlier\n \t       on the command line.  That way we can get rid of any\n \t       that were passed automatically in from GCC.  */\n-\t    int j;\n \t    opts->inhibit_predefs = 1;\n \t    for (ptr = &opts->pending; *ptr != NULL; )\n \t      {\n@@ -7136,7 +7133,7 @@ read_token_list (pfile, error_flag)\n     {\n       struct arglist *temp;\n       long name_written = CPP_WRITTEN (pfile);\n-      int eofp = 0;  int c;\n+      int c;\n \n       cpp_skip_hspace (pfile);\n \n@@ -7419,7 +7416,6 @@ cpp_error_with_line (pfile, line, column, msg, arg1, arg2, arg3)\n      char *msg;\n      char *arg1, *arg2, *arg3;\n {\n-  int i;\n   cpp_buffer *ip = cpp_file_buffer (pfile);\n \n   cpp_print_containing_files (pfile);\n@@ -7437,7 +7433,6 @@ cpp_warning_with_line (pfile, line, column, msg, arg1, arg2, arg3)\n      char *msg;\n      char *arg1, *arg2, *arg3;\n {\n-  int i;\n   cpp_buffer *ip;\n \n   if (CPP_OPTIONS (pfile)->inhibit_warnings)\n@@ -7459,7 +7454,7 @@ cpp_warning_with_line (pfile, line, column, msg, arg1, arg2, arg3)\n void\n cpp_pedwarn_with_line (pfile, line, column, msg, arg1, arg2, arg3)\n      cpp_reader *pfile;\n-     int line;\n+     int line, column;\n      char *msg;\n      char *arg1, *arg2, *arg3;\n {\n@@ -7545,7 +7540,6 @@ cpp_error_from_errno (pfile, name)\n      cpp_reader *pfile;\n      char *name;\n {\n-  int i;\n   cpp_buffer *ip = cpp_file_buffer (pfile);\n \n   cpp_print_containing_files (pfile);"}, {"sha": "c9fb09e95984dc1706421dc920043c13108dc363", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=5e9defae4f3e7422d3f0fa04fb16e29b676c0d29", "patch": "@@ -248,7 +248,7 @@ static unsigned current_dienum;\n    represents a function or data object defined in this compilation\n    unit which has \"extern\" linkage.  */\n \n-static next_pubname_number = 0;\n+static int next_pubname_number = 0;\n \n #define NEXT_DIE_NUM pending_sibling_stack[pending_siblings-1]\n \n@@ -369,7 +369,9 @@ static inline void fund_type_attribute\tPROTO((unsigned));\n static void mod_fund_type_attribute\tPROTO((tree, int, int));\n static inline void user_def_type_attribute PROTO((tree));\n static void mod_u_d_type_attribute\tPROTO((tree, int, int));\n+#ifdef USE_ORDERING_ATTRIBUTE\n static inline void ordering_attribute\tPROTO((unsigned));\n+#endif /* defined(USE_ORDERING_ATTRIBUTE) */\n static void subscript_data_attribute\tPROTO((tree));\n static void byte_size_attribute\t\tPROTO((tree));\n static inline void bit_offset_attribute\tPROTO((tree));\n@@ -392,7 +394,9 @@ static inline void producer_attribute\tPROTO((char *));\n static inline void inline_attribute\tPROTO((tree));\n static inline void containing_type_attribute PROTO((tree));\n static inline void abstract_origin_attribute PROTO((tree));\n+#ifdef DWARF_DECL_COORDINATES\n static inline void src_coords_attribute PROTO((unsigned, unsigned));\n+#endif /* defined(DWARF_DECL_COORDINATES) */\n static inline void pure_or_virtual_attribute PROTO((tree));\n static void name_and_src_coords_attributes PROTO((tree));\n static void type_attribute\t\tPROTO((tree, int, int));\n@@ -403,7 +407,9 @@ static inline tree member_declared_type PROTO((tree));\n static char *function_start_label\tPROTO((tree));\n static void output_array_type_die\tPROTO((void *));\n static void output_set_type_die\t\tPROTO((void *));\n+#if 0\n static void output_entry_point_die\tPROTO((void *));\n+#endif\n static void output_inlined_enumeration_type_die PROTO((void *));\n static void output_inlined_structure_type_die PROTO((void *));\n static void output_inlined_union_type_die PROTO((void *));\n@@ -416,8 +422,10 @@ static void output_lexical_block_die\tPROTO((void *));\n static void output_inlined_subroutine_die PROTO((void *));\n static void output_local_variable_die\tPROTO((void *));\n static void output_member_die\t\tPROTO((void *));\n+#if 0\n static void output_pointer_type_die\tPROTO((void *));\n static void output_reference_type_die\tPROTO((void *));\n+#endif\n static void output_ptr_to_mbr_type_die\tPROTO((void *));\n static void output_compile_unit_die\tPROTO((void *));\n static void output_string_type_die\tPROTO((void *));\n@@ -432,7 +440,6 @@ static void output_die\t\t\tPROTO((void (*) (), void *));\n static void end_sibling_chain\t\tPROTO((void));\n static void output_formal_types\t\tPROTO((tree));\n static void pend_type\t\t\tPROTO((tree));\n-static inline int type_of_for_scope\tPROTO((tree, tree));\n static void output_pending_types_for_scope PROTO((tree));\n static void output_type\t\t\tPROTO((tree, tree));\n static void output_tagged_type_instantiation PROTO((tree));\n@@ -1243,7 +1250,7 @@ output_unsigned_leb128 (value)\n \tbyte |= 0x80;\n       fprintf (asm_out_file, \"\\t%s\\t0x%x\", ASM_BYTE_OP, (unsigned) byte);\n       if (flag_debug_asm && value == 0)\n-\tfprintf (asm_out_file, \"\\t%s ULEB128 number - value = %u\",\n+\tfprintf (asm_out_file, \"\\t%s ULEB128 number - value = %lu\",\n \t\t ASM_COMMENT_START, orig_value);\n       fputc ('\\n', asm_out_file);\n     }\n@@ -1275,7 +1282,7 @@ output_signed_leb128 (value)\n \t}\n       fprintf (asm_out_file, \"\\t%s\\t0x%x\", ASM_BYTE_OP, (unsigned) byte);\n       if (flag_debug_asm && more == 0)\n-\tfprintf (asm_out_file, \"\\t%s SLEB128 number - value = %d\",\n+\tfprintf (asm_out_file, \"\\t%s SLEB128 number - value = %ld\",\n \t\t ASM_COMMENT_START, orig_value);\n       fputc ('\\n', asm_out_file);\n     }\n@@ -3104,14 +3111,17 @@ type_attribute (type, decl_const, decl_volatile)\n \t\t\t|| TYPE_READONLY (type) || TYPE_VOLATILE (type));\n \n   if (type_is_fundamental (root_type (type)))\n-    if (root_type_modified)\n+    {\n+      if (root_type_modified)\n \tmod_fund_type_attribute (type, decl_const, decl_volatile);\n-    else\n+      else\n \tfund_type_attribute (fundamental_type_code (type));\n+    }\n   else\n-    if (root_type_modified)\n+    {\n+      if (root_type_modified)\n \tmod_u_d_type_attribute (type, decl_const, decl_volatile);\n-    else\n+      else\n \t/* We have to get the type_main_variant here (and pass that to the\n \t   `user_def_type_attribute' routine) because the ..._TYPE node we\n \t   have might simply be a *copy* of some original type node (where\n@@ -3122,6 +3132,7 @@ type_attribute (type, decl_const, decl_volatile)\n \t   only creates labels for DIEs representing *main variants*, and it\n \t   never even knows about non-main-variants.)  */\n \tuser_def_type_attribute (type_main_variant (type));\n+    }\n }\n \n /* Given a tree pointer to a struct, class, union, or enum type node, return"}, {"sha": "535647f95836ad11f48c39a4c82c2f1021bb51fb", "filename": "gcc/regmove.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=5e9defae4f3e7422d3f0fa04fb16e29b676c0d29", "patch": "@@ -507,7 +507,7 @@ regmove_optimize (f, nregs, regmove_dump_file)\n \t       operand_number < insn_n_operands[insn_code_number];\n \t       operand_number++)\n \t    {\n-\t      rtx p, src, dst, src_subreg;\n+\t      rtx src, dst, src_subreg;\n \t      enum reg_class src_class, dst_class;\n \n \t      match_number = match.with[operand_number];\n@@ -788,7 +788,7 @@ regmove_optimize (f, nregs, regmove_dump_file)\n \t\t    }\n \t\t  /* If there is a REG_DEAD note for DST on P, then remove\n \t\t     it, because DST is now set there.  */\n-\t\t  if (dst_note = find_reg_note (p, REG_DEAD, dst))\n+\t\t  if ((dst_note = find_reg_note (p, REG_DEAD, dst)))\n \t\t    remove_note (p, dst_note);\n \n \t\t  dstno = REGNO (dst);\n@@ -868,8 +868,6 @@ find_matches (insn, matchp)\n   for (operand_number = 0; operand_number < insn_n_operands[insn_code_number];\n        operand_number++)\n     {\n-      int output_operand = 0;\n-      int matching_operand = operand_number;\n       char *p, c;\n       int i = 0;\n \n@@ -1218,7 +1216,7 @@ fixup_match_1 (insn, set, src, src_subreg, dst, backward, operand_number,\n \t    }\n \t}\n     }\n-  if (0) ;\n+  \n #if defined (HAVE_PRE_INCREMENT) || defined (HAVE_PRE_DECREMENT)\n   else if ((code == PLUS || code == MINUS) && insn_const\n \t   && try_auto_increment (p, insn, 0, src, insn_const, 1))"}, {"sha": "60cbcc78356d3dfc4698d0c779332cf12d2db37e", "filename": "gcc/sched.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/gcc%2Fsched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/gcc%2Fsched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched.c?ref=5e9defae4f3e7422d3f0fa04fb16e29b676c0d29", "patch": "@@ -119,6 +119,9 @@ Boston, MA 02111-1307, USA.  */\n \f\n #include \"config.h\"\n #include <stdio.h>\n+#if HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n #include \"rtl.h\"\n #include \"basic-block.h\"\n #include \"regs.h\"\n@@ -179,7 +182,7 @@ static unsigned int *insn_blockage;\n #define UNIT_BLOCKED(B) ((B) >> (2 * BLOCKAGE_BITS))\n #define BLOCKAGE_RANGE(B) \\\n   (((((B) >> BLOCKAGE_BITS) & BLOCKAGE_MASK) << (HOST_BITS_PER_INT / 2)) \\\n-   | (B) & BLOCKAGE_MASK)\n+   | ((B) & BLOCKAGE_MASK))\n \n /* Encodings of the `<name>_unit_blockage_range' function.  */\n #define MIN_BLOCKAGE_COST(R) ((R) >> (HOST_BITS_PER_INT / 2))\n@@ -1866,7 +1869,7 @@ rank_for_schedule (x, y)\n   int value;\n \n   /* Choose the instruction with the highest priority, if different.  */\n-  if (value = INSN_PRIORITY (tmp) - INSN_PRIORITY (tmp2))\n+  if ((value = INSN_PRIORITY (tmp) - INSN_PRIORITY (tmp2)))\n     return value;\n \n   if (last_scheduled_insn)\n@@ -1892,7 +1895,7 @@ rank_for_schedule (x, y)\n       else\n \ttmp2_class = 2;\n \n-      if (value = tmp_class - tmp2_class)\n+      if ((value = tmp_class - tmp2_class))\n \treturn value;\n     }\n \n@@ -3181,7 +3184,7 @@ schedule_block (b, file)\n \t  register int stalls;\n \n \t  for (stalls = 1; stalls < INSN_QUEUE_SIZE; stalls++)\n-\t    if (insn = insn_queue[NEXT_Q_AFTER (q_ptr, stalls)])\n+\t    if ((insn = insn_queue[NEXT_Q_AFTER (q_ptr, stalls)]))\n \t      {\n \t\tfor (; insn; insn = NEXT_INSN (insn))\n \t\t  {\n@@ -3565,12 +3568,12 @@ regno_use_in (regno, x)\n     {\n       if (fmt[i] == 'e')\n \t{\n-\t  if (tem = regno_use_in (regno, XEXP (x, i)))\n+\t  if ((tem = regno_use_in (regno, XEXP (x, i))))\n \t    return tem;\n \t}\n       else if (fmt[i] == 'E')\n \tfor (j = XVECLEN (x, i) - 1; j >= 0; j--)\n-\t  if (tem = regno_use_in (regno , XVECEXP (x, i, j)))\n+\t  if ((tem = regno_use_in (regno , XVECEXP (x, i, j))))\n \t    return tem;\n     }\n \n@@ -4238,7 +4241,6 @@ schedule_insns (dump_file)\n {\n   int max_uid = MAX_INSNS_PER_SPLIT * (get_max_uid () + 1);\n   int b;\n-  int i;\n   rtx insn;\n \n   /* Taking care of this degenerate case makes the rest of"}, {"sha": "f7b659e784126fb23e3dbac0b3c8053719d1f070", "filename": "gcc/toplev.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=5e9defae4f3e7422d3f0fa04fb16e29b676c0d29", "patch": "@@ -39,6 +39,16 @@ Boston, MA 02111-1307, USA.  */\n #ifdef HAVE_SYS_PARAM_H\n #include <sys/param.h>\n #endif\n+#if HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+#ifdef HAVE_STRING_H\n+#include <string.h>\n+#else\n+#ifdef HAVE_STRINGS_H\n+#include <strings.h>\n+#endif\n+#endif\n #ifdef HAVE_UNISTD_H\n #include <unistd.h>\n #endif\n@@ -1300,7 +1310,7 @@ v_message_with_decl (decl, prefix, s, ap)\n      char *s;\n      va_list ap;\n {\n-  char *n, *p;\n+  char *p;\n \n   fprintf (stderr, \"%s:%d: \",\n \t   DECL_SOURCE_FILE (decl), DECL_SOURCE_LINE (decl));\n@@ -1906,6 +1916,7 @@ do_abort ()\n \n void\n botch (s)\n+  char * s;\n {\n   abort ();\n }\n@@ -3734,7 +3745,7 @@ main (argc, argv, envp)\n \t    optimize_size = 1;\n \t  else\n \t    {\t    \n-\t      while (c = *p++)\n+\t      while ((c = *p++))\n \t\tif (! (c >= '0' && c <= '9'))\n \t\t  break;\n \t      if (c == 0)"}, {"sha": "e7138f7133a45251c6e5808ab42709dc75dbac55", "filename": "gcc/tree.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9defae4f3e7422d3f0fa04fb16e29b676c0d29/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=5e9defae4f3e7422d3f0fa04fb16e29b676c0d29", "patch": "@@ -948,7 +948,9 @@ make_node (code)\n   register int length;\n   register struct obstack *obstack = current_obstack;\n   register int i;\n+#ifdef GATHER_STATISTICS\n   register tree_node_kind kind;\n+#endif\n \n   switch (type)\n     {\n@@ -1419,9 +1421,6 @@ real_value_from_int_cst (type, i)\n      tree type, i;\n {\n   REAL_VALUE_TYPE d;\n-  REAL_VALUE_TYPE e;\n-  /* Some 386 compilers mishandle unsigned int to float conversions,\n-     so introduce a temporary variable E to avoid those bugs.  */\n \n #ifdef REAL_ARITHMETIC\n   if (! TREE_UNSIGNED (TREE_TYPE (i)))\n@@ -1431,8 +1430,12 @@ real_value_from_int_cst (type, i)\n     REAL_VALUE_FROM_UNSIGNED_INT (d, TREE_INT_CST_LOW (i),\n \t\t\t\t  TREE_INT_CST_HIGH (i), TYPE_MODE (type));\n #else /* not REAL_ARITHMETIC */\n+  /* Some 386 compilers mishandle unsigned int to float conversions,\n+     so introduce a temporary variable E to avoid those bugs.  */\n   if (TREE_INT_CST_HIGH (i) < 0 && ! TREE_UNSIGNED (TREE_TYPE (i)))\n     {\n+      REAL_VALUE_TYPE e;\n+\n       d = (double) (~ TREE_INT_CST_HIGH (i));\n       e = ((double) ((HOST_WIDE_INT) 1 << (HOST_BITS_PER_WIDE_INT / 2))\n \t    * (double) ((HOST_WIDE_INT) 1 << (HOST_BITS_PER_WIDE_INT / 2)));\n@@ -1443,6 +1446,8 @@ real_value_from_int_cst (type, i)\n     }\n   else\n     {\n+      REAL_VALUE_TYPE e;\n+\n       d = (double) (unsigned HOST_WIDE_INT) TREE_INT_CST_HIGH (i);\n       e = ((double) ((HOST_WIDE_INT) 1 << (HOST_BITS_PER_WIDE_INT / 2))\n \t    * (double) ((HOST_WIDE_INT) 1 << (HOST_BITS_PER_WIDE_INT / 2)));\n@@ -1959,7 +1964,7 @@ tree_last (chain)\n {\n   register tree next;\n   if (chain)\n-    while (next = TREE_CHAIN (chain))\n+    while ((next = TREE_CHAIN (chain)))\n       chain = next;\n   return chain;\n }\n@@ -2980,7 +2985,9 @@ build1 (code, type, node)\n {\n   register struct obstack *obstack = expression_obstack;\n   register int i, length;\n+#ifdef GATHER_STATISTICS\n   register tree_node_kind kind;\n+#endif\n   register tree t;\n \n #ifdef GATHER_STATISTICS\n@@ -4611,7 +4618,7 @@ print_obstack_statistics (str, o)\n       n_alloc += chunk->limit - &chunk->contents[0];\n       chunk = chunk->prev;\n     }\n-  fprintf (stderr, \"obstack %s: %lu bytes, %d chunks\\n\",\n+  fprintf (stderr, \"obstack %s: %u bytes, %d chunks\\n\",\n \t   str, n_alloc, n_chunks);\n }\n \n@@ -4621,8 +4628,10 @@ print_obstack_statistics (str, o)\n void\n dump_tree_statistics ()\n {\n+#ifdef GATHER_STATISTICS\n   int i;\n   int total_nodes, total_bytes;\n+#endif\n \n   fprintf (stderr, \"\\n??? tree nodes created\\n\\n\");\n #ifdef GATHER_STATISTICS"}]}