{"sha": "42e4b796dccc43e0a30cd26186037f3fda7639fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJlNGI3OTZkY2NjNDNlMGEzMGNkMjYxODYwMzdmM2ZkYTc2MzlmZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-05-31T10:45:57Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-31T10:45:57Z"}, "message": "[Ada] Post warning on object size clause for subtype\n\nThis ensures that a warning for an object size clause present on a subtype\nis posted on the clause and not on a size clause present on the type.\n\n2018-05-31  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* einfo.ads (Object_Size_Clause): Declare.\n\t* einfo.adb (Object_Size_Clause): New function.\n\t* gcc-interface/utils.c (maybe_pad_type): Test Has_Size_Clause before\n\tretrieving Size_Clause and post the warning on the object size clause\n\tif Has_Object_Size_Clause is true.\n\ngcc/testsuite/\n\n\t* gnat.dg/size_clause1.adb: New testcase.\n\nFrom-SVN: r260998", "tree": {"sha": "8b5c16ea50b86b6a95926011662787278726e603", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b5c16ea50b86b6a95926011662787278726e603"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42e4b796dccc43e0a30cd26186037f3fda7639fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42e4b796dccc43e0a30cd26186037f3fda7639fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42e4b796dccc43e0a30cd26186037f3fda7639fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42e4b796dccc43e0a30cd26186037f3fda7639fd/comments", "author": null, "committer": null, "parents": [{"sha": "59f7c7167a75bdb3992f2c7fb3b358124aea8404", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f7c7167a75bdb3992f2c7fb3b358124aea8404", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59f7c7167a75bdb3992f2c7fb3b358124aea8404"}], "stats": {"total": 53, "additions": 50, "deletions": 3}, "files": [{"sha": "587516cb85b8dd608eb66506b002f57bdbf83295", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e4b796dccc43e0a30cd26186037f3fda7639fd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e4b796dccc43e0a30cd26186037f3fda7639fd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=42e4b796dccc43e0a30cd26186037f3fda7639fd", "patch": "@@ -1,3 +1,11 @@\n+2018-05-31  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* einfo.ads (Object_Size_Clause): Declare.\n+\t* einfo.adb (Object_Size_Clause): New function.\n+\t* gcc-interface/utils.c (maybe_pad_type): Test Has_Size_Clause before\n+\tretrieving Size_Clause and post the warning on the object size clause\n+\tif Has_Object_Size_Clause is true.\n+\n 2018-05-31  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_util.ads, sem_util.adb (Find_Primitive_Eq): New subprogram."}, {"sha": "c41dc30bd908f6bfc47c9697dd129c20ce485187", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e4b796dccc43e0a30cd26186037f3fda7639fd/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e4b796dccc43e0a30cd26186037f3fda7639fd/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=42e4b796dccc43e0a30cd26186037f3fda7639fd", "patch": "@@ -8755,6 +8755,15 @@ package body Einfo is\n       return N;\n    end Number_Formals;\n \n+   ------------------------\n+   -- Object_Size_Clause --\n+   ------------------------\n+\n+   function Object_Size_Clause (Id : E) return N is\n+   begin\n+      return Get_Attribute_Definition_Clause (Id, Attribute_Object_Size);\n+   end Object_Size_Clause;\n+\n    --------------------\n    -- Parameter_Mode --\n    --------------------"}, {"sha": "2df649731c8e3a55c893319233801ddfed735d31", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e4b796dccc43e0a30cd26186037f3fda7639fd/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e4b796dccc43e0a30cd26186037f3fda7639fd/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=42e4b796dccc43e0a30cd26186037f3fda7639fd", "patch": "@@ -1828,7 +1828,7 @@ package Einfo is\n \n --    Has_Object_Size_Clause (Flag172)\n --       Defined in entities for types and subtypes. Set if an Object_Size\n---       clause has been processed for the type Used to prevent multiple\n+--       clause has been processed for the type. Used to prevent multiple\n --       Object_Size clauses for a given entity.\n \n --    Has_Out_Or_In_Out_Parameter (Flag110)\n@@ -3753,6 +3753,15 @@ package Einfo is\n --       Applies to subprograms and subprogram types. Yields the number of\n --       formals as a value of type Pos.\n \n+--    Object_Size_Clause (synthesized)\n+--       Applies to entities for types and subtypes. If an object size clause\n+--       is present in the rep item chain for an entity then the attribute\n+--       definition clause node is returned. Otherwise Object_Size_Clause\n+--       returns Empty if no item is present. Usually this is only meaningful\n+--       if the flag Has_Object_Size_Clause is set. This is because when the\n+--       representation item chain is copied for a derived type, it can inherit\n+--       an object size clause that is not applicable to the entity.\n+\n --    OK_To_Rename (Flag247)\n --       Defined only in entities for variables. If this flag is set, it\n --       means that if the entity is used as the initial value of an object\n@@ -5782,6 +5791,7 @@ package Einfo is\n    --    Is_Access_Protected_Subprogram_Type (synth)\n    --    Is_Atomic_Or_VFA                    (synth)\n    --    Is_Controlled                       (synth)\n+   --    Object_Size_Clause                  (synth)\n    --    Partial_Invariant_Procedure         (synth)\n    --    Predicate_Function                  (synth)\n    --    Predicate_Function_M                (synth)\n@@ -7673,6 +7683,7 @@ package Einfo is\n    function Number_Dimensions                   (Id : E) return Pos;\n    function Number_Entries                      (Id : E) return Nat;\n    function Number_Formals                      (Id : E) return Pos;\n+   function Object_Size_Clause                  (Id : E) return N;\n    function Parameter_Mode                      (Id : E) return Formal_Kind;\n    function Partial_Refinement_Constituents     (Id : E) return L;\n    function Primitive_Operations                (Id : E) return L;"}, {"sha": "7de766375d43c30b5b26d55297c1914cc27b60f4", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e4b796dccc43e0a30cd26186037f3fda7639fd/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e4b796dccc43e0a30cd26186037f3fda7639fd/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=42e4b796dccc43e0a30cd26186037f3fda7639fd", "patch": "@@ -1507,7 +1507,7 @@ maybe_pad_type (tree type, tree size, unsigned int align,\n \t       || TREE_OVERFLOW (orig_size)\n \t       || tree_int_cst_lt (size, orig_size))))\n     {\n-      Node_Id gnat_error_node = Empty;\n+      Node_Id gnat_error_node;\n \n       /* For a packed array, post the message on the original array type.  */\n       if (Is_Packed_Array_Impl_Type (gnat_entity))\n@@ -1517,8 +1517,12 @@ maybe_pad_type (tree type, tree size, unsigned int align,\n \t   || Ekind (gnat_entity) == E_Discriminant)\n \t  && Present (Component_Clause (gnat_entity)))\n \tgnat_error_node = Last_Bit (Component_Clause (gnat_entity));\n-      else if (Present (Size_Clause (gnat_entity)))\n+      else if (Has_Size_Clause (gnat_entity))\n \tgnat_error_node = Expression (Size_Clause (gnat_entity));\n+      else if (Has_Object_Size_Clause (gnat_entity))\n+\tgnat_error_node = Expression (Object_Size_Clause (gnat_entity));\n+      else\n+\tgnat_error_node = Empty;\n \n       /* Generate message only for entities that come from source, since\n \t if we have an entity created by expansion, the message will be"}, {"sha": "0c7a85d2f6c44bef3ae091c25eff1c2d7a2b3348", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e4b796dccc43e0a30cd26186037f3fda7639fd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e4b796dccc43e0a30cd26186037f3fda7639fd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42e4b796dccc43e0a30cd26186037f3fda7639fd", "patch": "@@ -1,3 +1,7 @@\n+2018-05-31  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/size_clause1.adb: New testcase.\n+\n 2018-05-31  Javier Miranda  <miranda@adacore.com>\n \n \t* gnat.dg/tagged1.adb, gnat.dg/tagged1.ads: New testcase."}, {"sha": "fc090eb94095e555dc4669893468ff41a0be7995", "filename": "gcc/testsuite/gnat.dg/size_clause1.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e4b796dccc43e0a30cd26186037f3fda7639fd/gcc%2Ftestsuite%2Fgnat.dg%2Fsize_clause1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e4b796dccc43e0a30cd26186037f3fda7639fd/gcc%2Ftestsuite%2Fgnat.dg%2Fsize_clause1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fsize_clause1.adb?ref=42e4b796dccc43e0a30cd26186037f3fda7639fd", "patch": "@@ -0,0 +1,11 @@\n+procedure Size_Clause1 is\n+\n+  type Modular is mod 2**64;\n+  for Modular'Size use 64;\n+\n+  subtype Enlarged_Modular is Modular;\n+  for Enlarged_Modular'Object_Size use 128; --  { dg-warning \"warning: 64 bits of \\\"Enlarged_Modular\\\" unused\" }\n+\n+begin\n+    null;\n+end Size_Clause1;"}]}