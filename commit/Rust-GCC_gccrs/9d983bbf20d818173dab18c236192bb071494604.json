{"sha": "9d983bbf20d818173dab18c236192bb071494604", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ5ODNiYmYyMGQ4MTgxNzNkYWIxOGMyMzYxOTJiYjA3MTQ5NDYwNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T13:38:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T13:38:12Z"}, "message": "[multiple changes]\n\n2010-09-09  Matthew Heaney  <heaney@adacore.com>\n\n\t* a-convec.adb, a-coinve.adb (Clear, Delete, Delete_Last, Finalize,\n\tMerge, Insert, Insert_Space, Move, Reserve_Capacity, Generic_Sorting,\n\tReplace_Element, Reverse_Elements, Swap): Change exception message to\n\tcorrectly indicate kind of tampering (cursor or element).\n\t* a-cdlili.adb, a-cidlli.adb (Clear, Delete, Delete_First, Delete_Last,\n\tMerge, Generic_Sorting, Insert, Move, Reverse_Elements, Splice,\n\tSwap_Links, Replace_Element, Swap): Ditto.\n\t* a-coorse.adb, a-ciorse.adb (Include, Replace, Replace_Element): Ditto\n\t* a-coorma.adb, a-ciorma.adb (Include, Replace, Replace_Element): Ditto\n\t* a-coormu.adb, a-ciormu.adb (Replace_Element): Ditto\n\t* a-chtgke.adb (Delete_Key_Sans_Free, Generic_Conditional_Insert,\n\tGeneric_Replace_Element): Ditto\n\t* a-chtgop.adb (Clear, Move, Reserve_Capacity): Ditto\n\t* a-cohama.adb, a-cihama.adb (Delete, Include, Replace,\n\tReplace_Element): Ditto.\n\t* a-cohase.adb, a-cihase.adb (Delete, Difference, Intersection,\n\tSymmetric_Difference, Union, Include, Replace): Ditto\n\n2010-09-09  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sprint.adb (Write_Id): If the parent node is an expanded name, check\n\tthat its entity_or_associated_node is an entity before writing it out.\n\t* exp_disp.adb (Make_Tags); if a type is declared in C++ and has no\n\tconstructors, there is no need for a dispatch table pointer because the\n\ttable is fully inherited from the C++ code.\n\n2010-09-09  Thomas Quinot  <quinot@adacore.com>\n\n\t* projects.texi: Fix wrong identifiers on package end lines in project\n\tfiles examples.\n\t* exp_ch6.adb: Minor reformatting.\n\n2010-09-09  Tristan Gingold  <gingold@adacore.com>\n\n\t* gnatcmd.adb, vms_conv.ads, vms_help.adb, vms_cmds.ads: Extract\n\tCommand_Type from vms_conv.ads.\n\n2010-09-09  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* gnat_ugn.texi: Fix description of -O3 optimization level.\n\nFrom-SVN: r164092", "tree": {"sha": "572dfe6b1fb775d2b68e68da8844450085547166", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/572dfe6b1fb775d2b68e68da8844450085547166"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d983bbf20d818173dab18c236192bb071494604", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d983bbf20d818173dab18c236192bb071494604", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d983bbf20d818173dab18c236192bb071494604", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d983bbf20d818173dab18c236192bb071494604/comments", "author": null, "committer": null, "parents": [{"sha": "e999233aec72c62af6523a02e71649d0528ac963", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e999233aec72c62af6523a02e71649d0528ac963", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e999233aec72c62af6523a02e71649d0528ac963"}], "stats": {"total": 345, "additions": 165, "deletions": 180}, "files": [{"sha": "d1ea67277c47bdd7b66b915dbf0e4595aca16370", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -34,8 +34,7 @@\n \n 2010-09-09  Tristan Gingold  <gingold@adacore.com>\n \n-\t* gnatcmd.adb, vms_conv.ads, vms_help.adb, vms_cmds.ads: Extract\n-\tCommand_Type from vms_conv.ads.\n+\t* gnatcmd.adb, vms_conv.ads: Extract Command_Type.\n \n 2010-09-09  Eric Botcazou  <ebotcazou@adacore.com>\n "}, {"sha": "5ca043554b79bf3d8af99c2c0db5937a31731c98", "filename": "gcc/ada/a-cdlili.adb", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-cdlili.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-cdlili.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -151,7 +151,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       while Container.Length > 1 loop\n@@ -227,7 +227,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       for Index in 1 .. Count loop\n@@ -277,7 +277,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       for I in 1 .. Count loop\n@@ -315,7 +315,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       for I in 1 .. Count loop\n@@ -464,12 +464,12 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n          if Target.Busy > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with elements of Target (list is busy)\";\n+              \"attempt to tamper with cursors of Target (list is busy)\";\n          end if;\n \n          if Source.Busy > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with elements of Source (list is busy)\";\n+              \"attempt to tamper with cursors of Source (list is busy)\";\n          end if;\n \n          LI := First (Target);\n@@ -583,7 +583,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n          if Container.Busy > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with elements (list is busy)\";\n+              \"attempt to tamper with cursors (list is busy)\";\n          end if;\n \n          Sort (Front => null, Back => null);\n@@ -638,7 +638,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       New_Node := new Node_Type'(New_Item, null, null);\n@@ -693,7 +693,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       New_Node := new Node_Type;\n@@ -844,7 +844,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       if Source.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements of Source (list is busy)\";\n+           \"attempt to tamper with cursors of Source (list is busy)\";\n       end if;\n \n       Clear (Target);\n@@ -1048,7 +1048,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       if Container.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (list is locked)\";\n+           \"attempt to tamper with elements (list is locked)\";\n       end if;\n \n       pragma Assert (Vet (Position), \"bad cursor in Replace_Element\");\n@@ -1116,7 +1116,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       Container.First := J;\n@@ -1243,12 +1243,12 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       if Target.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements of Target (list is busy)\";\n+           \"attempt to tamper with cursors of Target (list is busy)\";\n       end if;\n \n       if Source.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements of Source (list is busy)\";\n+           \"attempt to tamper with cursors of Source (list is busy)\";\n       end if;\n \n       if Target.Length = 0 then\n@@ -1328,7 +1328,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       if Before.Node = null then\n@@ -1432,12 +1432,12 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       if Target.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements of Target (list is busy)\";\n+           \"attempt to tamper with cursors of Target (list is busy)\";\n       end if;\n \n       if Source.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements of Source (list is busy)\";\n+           \"attempt to tamper with cursors of Source (list is busy)\";\n       end if;\n \n       if Position.Node = Source.First then\n@@ -1536,7 +1536,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       if Container.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (list is locked)\";\n+           \"attempt to tamper with elements (list is locked)\";\n       end if;\n \n       pragma Assert (Vet (I), \"bad I cursor in Swap\");\n@@ -1585,7 +1585,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       pragma Assert (Vet (I), \"bad I cursor in Swap_Links\");"}, {"sha": "89649f33a5d1158388688d34f87fa3fbd51ee252", "filename": "gcc/ada/a-chtgke.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-chtgke.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-chtgke.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chtgke.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -57,7 +57,7 @@ package body Ada.Containers.Hash_Tables.Generic_Keys is\n       if Equivalent_Keys (Key, X) then\n          if HT.Busy > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with elements (container is busy)\";\n+              \"attempt to tamper with cursors (container is busy)\";\n          end if;\n          HT.Buckets (Indx) := Next (X);\n          HT.Length := HT.Length - 1;\n@@ -75,7 +75,7 @@ package body Ada.Containers.Hash_Tables.Generic_Keys is\n          if Equivalent_Keys (Key, X) then\n             if HT.Busy > 0 then\n                raise Program_Error with\n-                 \"attempt to tamper with elements (container is busy)\";\n+                 \"attempt to tamper with cursors (container is busy)\";\n             end if;\n             Set_Next (Node => Prev, Next => Next (X));\n             HT.Length := HT.Length - 1;\n@@ -130,7 +130,7 @@ package body Ada.Containers.Hash_Tables.Generic_Keys is\n       if B = null then\n          if HT.Busy > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with elements (container is busy)\";\n+              \"attempt to tamper with cursors (container is busy)\";\n          end if;\n \n          if HT.Length = Count_Type'Last then\n@@ -160,7 +160,7 @@ package body Ada.Containers.Hash_Tables.Generic_Keys is\n \n       if HT.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (container is busy)\";\n+           \"attempt to tamper with cursors (container is busy)\";\n       end if;\n \n       if HT.Length = Count_Type'Last then\n@@ -212,7 +212,7 @@ package body Ada.Containers.Hash_Tables.Generic_Keys is\n \n          if HT.Lock > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with cursors (container is locked)\";\n+              \"attempt to tamper with elements (container is locked)\";\n          end if;\n \n          --  We can change a node's key to Key (that's what Assign is for), but\n@@ -256,7 +256,7 @@ package body Ada.Containers.Hash_Tables.Generic_Keys is\n \n          if HT.Lock > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with cursors (container is locked)\";\n+              \"attempt to tamper with elements (container is locked)\";\n          end if;\n \n          Assign (Node, Key);\n@@ -269,7 +269,7 @@ package body Ada.Containers.Hash_Tables.Generic_Keys is\n \n       if HT.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (container is busy)\";\n+           \"attempt to tamper with cursors (container is busy)\";\n       end if;\n \n       --  Do the assignment first, before moving the node, so that if Assign"}, {"sha": "d014dc17c096b28ffd7902044895610e5a829f7f", "filename": "gcc/ada/a-chtgop.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-chtgop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-chtgop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chtgop.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -132,7 +132,7 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n    begin\n       if HT.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (container is busy)\";\n+           \"attempt to tamper with cursors (container is busy)\";\n       end if;\n \n       while HT.Length > 0 loop\n@@ -478,7 +478,7 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n \n       if Source.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (container is busy)\";\n+           \"attempt to tamper with cursors (container is busy)\";\n       end if;\n \n       Clear (Target);\n@@ -619,7 +619,7 @@ package body Ada.Containers.Hash_Tables.Generic_Operations is\n \n       if HT.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (container is busy)\";\n+           \"attempt to tamper with cursors (container is busy)\";\n       end if;\n \n       Rehash : declare"}, {"sha": "8d1f8e36439fcadf71987154987f37a3db25e720", "filename": "gcc/ada/a-cidlli.adb", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-cidlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-cidlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cidlli.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -175,7 +175,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       while Container.Length > 1 loop\n@@ -254,7 +254,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       for Index in 1 .. Count loop\n@@ -304,7 +304,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       for I in 1 .. Count loop\n@@ -342,7 +342,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       for I in 1 .. Count loop\n@@ -510,12 +510,12 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n          if Target.Busy > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with elements of Target (list is busy)\";\n+              \"attempt to tamper with cursors of Target (list is busy)\";\n          end if;\n \n          if Source.Busy > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with elements of Source (list is busy)\";\n+              \"attempt to tamper with cursors of Source (list is busy)\";\n          end if;\n \n          LI := First (Target);\n@@ -627,7 +627,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n          if Container.Busy > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with elements (list is busy)\";\n+              \"attempt to tamper with cursors (list is busy)\";\n          end if;\n \n          Sort (Front => null, Back => null);\n@@ -665,7 +665,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n       if Before.Container /= null then\n          if Before.Container /= Container'Unrestricted_Access then\n             raise Program_Error with\n-              \"attempt to tamper with elements (list is busy)\";\n+              \"attempt to tamper with cursors (list is busy)\";\n          end if;\n \n          if Before.Node = null\n@@ -689,7 +689,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       declare\n@@ -867,7 +867,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n       if Source.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements of Source (list is busy)\";\n+           \"attempt to tamper with cursors of Source (list is busy)\";\n       end if;\n \n       Clear (Target);\n@@ -1077,7 +1077,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n       if Container.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (list is locked)\";\n+           \"attempt to tamper with elements (list is locked)\";\n       end if;\n \n       if Position.Node.Element = null then\n@@ -1156,7 +1156,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       Container.First := J;\n@@ -1293,12 +1293,12 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n       if Target.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements of Target (list is busy)\";\n+           \"attempt to tamper with cursors of Target (list is busy)\";\n       end if;\n \n       if Source.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements of Source (list is busy)\";\n+           \"attempt to tamper with cursors of Source (list is busy)\";\n       end if;\n \n       if Target.Length = 0 then\n@@ -1388,7 +1388,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       if Before.Node = null then\n@@ -1504,12 +1504,12 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n       if Target.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements of Target (list is busy)\";\n+           \"attempt to tamper with cursors of Target (list is busy)\";\n       end if;\n \n       if Source.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements of Source (list is busy)\";\n+           \"attempt to tamper with cursors of Source (list is busy)\";\n       end if;\n \n       if Position.Node = Source.First then\n@@ -1608,7 +1608,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n       if Container.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (list is locked)\";\n+           \"attempt to tamper with elements (list is locked)\";\n       end if;\n \n       pragma Assert (Vet (I), \"bad I cursor in Swap\");\n@@ -1654,7 +1654,7 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (list is busy)\";\n+           \"attempt to tamper with cursors (list is busy)\";\n       end if;\n \n       pragma Assert (Vet (I), \"bad I cursor in Swap_Links\");"}, {"sha": "b487394b3665db8578c427f214709c1df635dae8", "filename": "gcc/ada/a-cihama.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-cihama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-cihama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihama.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -197,7 +197,7 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n \n       if Container.HT.Busy > 0 then\n          raise Program_Error with\n-           \"Delete attempted to tamper with elements (map is busy)\";\n+           \"Delete attempted to tamper with cursors (map is busy)\";\n       end if;\n \n       pragma Assert (Vet (Position), \"bad cursor in Delete\");\n@@ -482,7 +482,7 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n       if not Inserted then\n          if Container.HT.Lock > 0 then\n             raise Program_Error with\n-              \"Include attempted to tamper with cursors (map is locked)\";\n+              \"Include attempted to tamper with elements (map is locked)\";\n          end if;\n \n          K := Position.Node.Key;\n@@ -836,7 +836,7 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n \n       if Container.HT.Lock > 0 then\n          raise Program_Error with\n-           \"Replace attempted to tamper with cursors (map is locked)\";\n+           \"Replace attempted to tamper with elements (map is locked)\";\n       end if;\n \n       K := Node.Key;\n@@ -885,7 +885,7 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n \n       if Position.Container.HT.Lock > 0 then\n          raise Program_Error with\n-           \"Replace_Element attempted to tamper with cursors (map is locked)\";\n+           \"Replace_Element attempted to tamper with elements (map is locked)\";\n       end if;\n \n       pragma Assert (Vet (Position), \"bad cursor in Replace_Element\");"}, {"sha": "0a42fb239b3f2c56ed4bc241f1fbb8c8cd48c4f7", "filename": "gcc/ada/a-cihase.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-cihase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-cihase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihase.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -242,7 +242,7 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n \n       if Container.HT.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (set is busy)\";\n+           \"attempt to tamper with cursors (set is busy)\";\n       end if;\n \n       pragma Assert (Vet (Position), \"Position cursor is bad\");\n@@ -275,7 +275,7 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n \n       if Target.HT.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (set is busy)\";\n+           \"attempt to tamper with cursors (set is busy)\";\n       end if;\n \n       if Source.HT.Length < Target.HT.Length then\n@@ -667,7 +667,7 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n       if not Inserted then\n          if Container.HT.Lock > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with cursors (set is locked)\";\n+              \"attempt to tamper with elements (set is locked)\";\n          end if;\n \n          X := Position.Node.Element;\n@@ -776,7 +776,7 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n \n       if Target.HT.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (set is busy)\";\n+           \"attempt to tamper with cursors (set is busy)\";\n       end if;\n \n       Tgt_Node := HT_Ops.First (Target.HT);\n@@ -1145,7 +1145,7 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n \n       if Container.HT.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (set is locked)\";\n+           \"attempt to tamper with elements (set is locked)\";\n       end if;\n \n       X := Node.Element;\n@@ -1220,7 +1220,7 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n \n       if Target.HT.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (set is busy)\";\n+           \"attempt to tamper with cursors (set is busy)\";\n       end if;\n \n       declare\n@@ -1540,7 +1540,7 @@ package body Ada.Containers.Indefinite_Hashed_Sets is\n \n       if Target.HT.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (set is busy)\";\n+           \"attempt to tamper with cursors (set is busy)\";\n       end if;\n \n       declare"}, {"sha": "9cfcd3f5a809e40612fc62acc9741796db642678", "filename": "gcc/ada/a-ciorma.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-ciorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-ciorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorma.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -625,7 +625,7 @@ package body Ada.Containers.Indefinite_Ordered_Maps is\n       if not Inserted then\n          if Container.Tree.Lock > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with cursors (map is locked)\";\n+              \"attempt to tamper with elements (map is locked)\";\n          end if;\n \n          K := Position.Node.Key;\n@@ -1106,7 +1106,7 @@ package body Ada.Containers.Indefinite_Ordered_Maps is\n \n       if Container.Tree.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (map is locked)\";\n+           \"attempt to tamper with elements (map is locked)\";\n       end if;\n \n       K := Node.Key;\n@@ -1155,7 +1155,7 @@ package body Ada.Containers.Indefinite_Ordered_Maps is\n \n       if Container.Tree.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (map is locked)\";\n+           \"attempt to tamper with elements (map is locked)\";\n       end if;\n \n       pragma Assert (Vet (Container.Tree, Position.Node),"}, {"sha": "8c7055b2fef22070b913216117f05f644c2917c2", "filename": "gcc/ada/a-ciormu.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-ciormu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-ciormu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciormu.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1564,7 +1564,7 @@ package body Ada.Containers.Indefinite_Ordered_Multisets is\n       else\n          if Tree.Lock > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with cursors (set is locked)\";\n+              \"attempt to tamper with elements (set is locked)\";\n          end if;\n \n          declare"}, {"sha": "7153c6dd235940dcacea9a320fb45a7495c8fc8e", "filename": "gcc/ada/a-ciorse.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-ciorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-ciorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorse.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -930,7 +930,7 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n       if not Inserted then\n          if Container.Tree.Lock > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with cursors (set is locked)\";\n+              \"attempt to tamper with elements (set is locked)\";\n          end if;\n \n          X := Position.Node.Element;\n@@ -1444,7 +1444,7 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n \n       if Container.Tree.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (set is locked)\";\n+           \"attempt to tamper with elements (set is locked)\";\n       end if;\n \n       X := Node.Element;\n@@ -1499,7 +1499,7 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n \n       X : Element_Access := Node.Element;\n \n-      --  Start of processing for Insert\n+      --  Start of processing for Replace_Element\n \n    begin\n       if Item < Node.Element.all\n@@ -1510,7 +1510,7 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n       else\n          if Tree.Lock > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with cursors (set is locked)\";\n+              \"attempt to tamper with elements (set is locked)\";\n          end if;\n \n          Node.Element := new Element_Type'(Item);\n@@ -1528,7 +1528,7 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n          if Hint = Node then\n             if Tree.Lock > 0 then\n                raise Program_Error with\n-                 \"attempt to tamper with cursors (set is locked)\";\n+                 \"attempt to tamper with elements (set is locked)\";\n             end if;\n \n             Node.Element := new Element_Type'(Item);"}, {"sha": "65247241939b25d7f6f9cc0eabc81536bf22b902", "filename": "gcc/ada/a-cohama.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-cohama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-cohama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohama.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -192,7 +192,7 @@ package body Ada.Containers.Hashed_Maps is\n \n       if Container.HT.Busy > 0 then\n          raise Program_Error with\n-           \"Delete attempted to tamper with elements (map is busy)\";\n+           \"Delete attempted to tamper with cursors (map is busy)\";\n       end if;\n \n       pragma Assert (Vet (Position), \"bad cursor in Delete\");\n@@ -413,7 +413,7 @@ package body Ada.Containers.Hashed_Maps is\n       if not Inserted then\n          if Container.HT.Lock > 0 then\n             raise Program_Error with\n-              \"Include attempted to tamper with cursors (map is locked)\";\n+              \"Include attempted to tamper with elements (map is locked)\";\n          end if;\n \n          Position.Node.Key := Key;\n@@ -755,7 +755,7 @@ package body Ada.Containers.Hashed_Maps is\n \n       if Container.HT.Lock > 0 then\n          raise Program_Error with\n-           \"Replace attempted to tamper with cursors (map is locked)\";\n+           \"Replace attempted to tamper with elements (map is locked)\";\n       end if;\n \n       Node.Key := Key;\n@@ -784,7 +784,7 @@ package body Ada.Containers.Hashed_Maps is\n \n       if Position.Container.HT.Lock > 0 then\n          raise Program_Error with\n-           \"Replace_Element attempted to tamper with cursors (map is locked)\";\n+           \"Replace_Element attempted to tamper with elements (map is locked)\";\n       end if;\n \n       pragma Assert (Vet (Position), \"bad cursor in Replace_Element\");"}, {"sha": "643dde5d964c20ce32185fcef1ca513974a870b2", "filename": "gcc/ada/a-cohase.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-cohase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-cohase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohase.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -230,7 +230,7 @@ package body Ada.Containers.Hashed_Sets is\n \n       if Container.HT.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (set is busy)\";\n+           \"attempt to tamper with cursors (set is busy)\";\n       end if;\n \n       pragma Assert (Vet (Position), \"bad cursor in Delete\");\n@@ -263,7 +263,7 @@ package body Ada.Containers.Hashed_Sets is\n \n       if Target.HT.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (set is busy)\";\n+           \"attempt to tamper with cursors (set is busy)\";\n       end if;\n \n       if Source.HT.Length < Target.HT.Length then\n@@ -614,7 +614,7 @@ package body Ada.Containers.Hashed_Sets is\n       if not Inserted then\n          if Container.HT.Lock > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with cursors (set is locked)\";\n+              \"attempt to tamper with elements (set is locked)\";\n          end if;\n \n          Position.Node.Element := New_Item;\n@@ -713,7 +713,7 @@ package body Ada.Containers.Hashed_Sets is\n \n       if Target.HT.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (set is busy)\";\n+           \"attempt to tamper with cursors (set is busy)\";\n       end if;\n \n       Tgt_Node := HT_Ops.First (Target.HT);\n@@ -1059,7 +1059,7 @@ package body Ada.Containers.Hashed_Sets is\n \n       if Container.HT.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (set is locked)\";\n+           \"attempt to tamper with elements (set is locked)\";\n       end if;\n \n       Node.Element := New_Item;\n@@ -1123,7 +1123,7 @@ package body Ada.Containers.Hashed_Sets is\n \n       if Target.HT.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (set is busy)\";\n+           \"attempt to tamper with cursors (set is busy)\";\n       end if;\n \n       declare\n@@ -1392,7 +1392,7 @@ package body Ada.Containers.Hashed_Sets is\n \n       if Target.HT.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (set is busy)\";\n+           \"attempt to tamper with cursors (set is busy)\";\n       end if;\n \n       declare"}, {"sha": "97d3f8a294a167f4ffe2deabb735dd3f66ff9258", "filename": "gcc/ada/a-coinve.adb", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-coinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-coinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -619,7 +619,7 @@ package body Ada.Containers.Indefinite_Vectors is\n    begin\n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (vector is busy)\";\n+           \"attempt to tamper with cursors (vector is busy)\";\n       end if;\n \n       while Container.Last >= Index_Type'First loop\n@@ -720,7 +720,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (vector is busy)\";\n+           \"attempt to tamper with cursors (vector is busy)\";\n       end if;\n \n       --  We first calculate what's available for deletion starting at\n@@ -911,7 +911,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (vector is busy)\";\n+           \"attempt to tamper with cursors (vector is busy)\";\n       end if;\n \n       --  Elements in an indefinite vector are allocated, so we must iterate\n@@ -1182,7 +1182,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n          if Source.Busy > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with elements (vector is busy)\";\n+              \"attempt to tamper with cursors (vector is busy)\";\n          end if;\n \n          I := Target.Last;  -- original value (before Set_Length)\n@@ -1258,7 +1258,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n          if Container.Lock > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with cursors (vector is locked)\";\n+              \"attempt to tamper with elements (vector is locked)\";\n          end if;\n \n          Sort (Container.Elements.EA (Index_Type'First .. Container.Last));\n@@ -1491,7 +1491,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (vector is busy)\";\n+           \"attempt to tamper with cursors (vector is busy)\";\n       end if;\n \n       if New_Length <= Container.Elements.EA'Length then\n@@ -2210,7 +2210,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (vector is busy)\";\n+           \"attempt to tamper with cursors (vector is busy)\";\n       end if;\n \n       if New_Length <= Container.Elements.EA'Length then\n@@ -2500,7 +2500,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n       if Source.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (Source is busy)\";\n+           \"attempt to tamper with cursors (Source is busy)\";\n       end if;\n \n       Clear (Target);  --  Checks busy-bit\n@@ -2711,7 +2711,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n       if Container.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (vector is locked)\";\n+           \"attempt to tamper with elements (vector is locked)\";\n       end if;\n \n       declare\n@@ -2742,7 +2742,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n       if Container.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (vector is locked)\";\n+           \"attempt to tamper with elements (vector is locked)\";\n       end if;\n \n       declare\n@@ -2812,7 +2812,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n             if Container.Busy > 0 then\n                raise Program_Error with\n-                 \"attempt to tamper with elements (vector is busy)\";\n+                 \"attempt to tamper with cursors (vector is busy)\";\n             end if;\n \n             declare\n@@ -2943,7 +2943,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n             if Container.Busy > 0 then\n                raise Program_Error with\n-                 \"attempt to tamper with elements (vector is busy)\";\n+                 \"attempt to tamper with cursors (vector is busy)\";\n             end if;\n \n             declare\n@@ -2998,7 +2998,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (vector is busy)\";\n+           \"attempt to tamper with cursors (vector is busy)\";\n       end if;\n \n       --  We now allocate a new internal array, having a length different from\n@@ -3042,7 +3042,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n       if Container.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (vector is locked)\";\n+           \"attempt to tamper with elements (vector is locked)\";\n       end if;\n \n       declare\n@@ -3207,7 +3207,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n       if Container.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (vector is locked)\";\n+           \"attempt to tamper with elements (vector is locked)\";\n       end if;\n \n       declare"}, {"sha": "16b6591f6a47a5f44b64090b34d46cdf2d170ddc", "filename": "gcc/ada/a-convec.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-convec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-convec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -440,7 +440,7 @@ package body Ada.Containers.Vectors is\n    begin\n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (vector is busy)\";\n+           \"attempt to tamper with cursors (vector is busy)\";\n       end if;\n \n       Container.Last := No_Index;\n@@ -524,7 +524,7 @@ package body Ada.Containers.Vectors is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (vector is busy)\";\n+           \"attempt to tamper with cursors (vector is busy)\";\n       end if;\n \n       --  We first calculate what's available for deletion starting at\n@@ -653,7 +653,7 @@ package body Ada.Containers.Vectors is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (vector is busy)\";\n+           \"attempt to tamper with cursors (vector is busy)\";\n       end if;\n \n       --  There is no restriction on how large Count can be when deleting\n@@ -717,7 +717,7 @@ package body Ada.Containers.Vectors is\n    begin\n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (vector is busy)\";\n+           \"attempt to tamper with cursors (vector is busy)\";\n       end if;\n \n       Container.Elements := null;\n@@ -862,7 +862,7 @@ package body Ada.Containers.Vectors is\n \n          if Source.Busy > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with elements (vector is busy)\";\n+              \"attempt to tamper with cursors (vector is busy)\";\n          end if;\n \n          Target.Set_Length (Length (Target) + Length (Source));\n@@ -923,7 +923,7 @@ package body Ada.Containers.Vectors is\n \n          if Container.Lock > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with cursors (vector is locked)\";\n+              \"attempt to tamper with elements (vector is locked)\";\n          end if;\n \n          Sort (Container.Elements.EA (Index_Type'First .. Container.Last));\n@@ -1147,7 +1147,7 @@ package body Ada.Containers.Vectors is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (vector is busy)\";\n+           \"attempt to tamper with cursors (vector is busy)\";\n       end if;\n \n       --  An internal array has already been allocated, so we must determine\n@@ -1802,7 +1802,7 @@ package body Ada.Containers.Vectors is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (vector is busy)\";\n+           \"attempt to tamper with cursors (vector is busy)\";\n       end if;\n \n       --  An internal array has already been allocated, so we must determine\n@@ -2102,12 +2102,12 @@ package body Ada.Containers.Vectors is\n \n       if Target.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (Target is busy)\";\n+           \"attempt to tamper with cursors (Target is busy)\";\n       end if;\n \n       if Source.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (Source is busy)\";\n+           \"attempt to tamper with cursors (Source is busy)\";\n       end if;\n \n       declare\n@@ -2303,7 +2303,7 @@ package body Ada.Containers.Vectors is\n \n       if Container.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (vector is locked)\";\n+           \"attempt to tamper with elements (vector is locked)\";\n       end if;\n \n       Container.Elements.EA (Index) := New_Item;\n@@ -2329,7 +2329,7 @@ package body Ada.Containers.Vectors is\n \n       if Container.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (vector is locked)\";\n+           \"attempt to tamper with elements (vector is locked)\";\n       end if;\n \n       Container.Elements.EA (Position.Index) := New_Item;\n@@ -2392,7 +2392,7 @@ package body Ada.Containers.Vectors is\n \n             if Container.Busy > 0 then\n                raise Program_Error with\n-                 \"attempt to tamper with elements (vector is busy)\";\n+                 \"attempt to tamper with cursors (vector is busy)\";\n             end if;\n \n             declare\n@@ -2527,7 +2527,7 @@ package body Ada.Containers.Vectors is\n \n             if Container.Busy > 0 then\n                raise Program_Error with\n-                 \"attempt to tamper with elements (vector is busy)\";\n+                 \"attempt to tamper with cursors (vector is busy)\";\n             end if;\n \n             declare\n@@ -2586,7 +2586,7 @@ package body Ada.Containers.Vectors is\n \n       if Container.Busy > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with elements (vector is busy)\";\n+           \"attempt to tamper with cursors (vector is busy)\";\n       end if;\n \n       --  We now allocate a new internal array, having a length different from\n@@ -2649,7 +2649,7 @@ package body Ada.Containers.Vectors is\n \n       if Container.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (vector is locked)\";\n+           \"attempt to tamper with elements (vector is locked)\";\n       end if;\n \n       declare\n@@ -2801,7 +2801,7 @@ package body Ada.Containers.Vectors is\n \n       if Container.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (vector is locked)\";\n+           \"attempt to tamper with elements (vector is locked)\";\n       end if;\n \n       declare"}, {"sha": "ba865202d24b3337056b1795777d06fc787c84e0", "filename": "gcc/ada/a-coorma.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-coorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-coorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorma.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -537,7 +537,7 @@ package body Ada.Containers.Ordered_Maps is\n       if not Inserted then\n          if Container.Tree.Lock > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with cursors (map is locked)\";\n+              \"attempt to tamper with elements (map is locked)\";\n          end if;\n \n          Position.Node.Key := Key;\n@@ -1018,7 +1018,7 @@ package body Ada.Containers.Ordered_Maps is\n \n       if Container.Tree.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (map is locked)\";\n+           \"attempt to tamper with elements (map is locked)\";\n       end if;\n \n       Node.Key := Key;\n@@ -1047,7 +1047,7 @@ package body Ada.Containers.Ordered_Maps is\n \n       if Container.Tree.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (map is locked)\";\n+           \"attempt to tamper with elements (map is locked)\";\n       end if;\n \n       pragma Assert (Vet (Container.Tree, Position.Node),"}, {"sha": "b59f6f554ef0f20306acaa7161a82130c3a9cb35", "filename": "gcc/ada/a-coormu.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-coormu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-coormu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coormu.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1481,7 +1481,7 @@ package body Ada.Containers.Ordered_Multisets is\n       else\n          if Tree.Lock > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with cursors (set is locked)\";\n+              \"attempt to tamper with elements (set is locked)\";\n          end if;\n \n          Node.Element := Item;"}, {"sha": "d4e73029b2a856f4e6b957c957179e63e5fda275", "filename": "gcc/ada/a-coorse.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-coorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fa-coorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -855,7 +855,7 @@ package body Ada.Containers.Ordered_Sets is\n       if not Inserted then\n          if Container.Tree.Lock > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with cursors (set is locked)\";\n+              \"attempt to tamper with elements (set is locked)\";\n          end if;\n \n          Position.Node.Element := New_Item;\n@@ -1355,7 +1355,7 @@ package body Ada.Containers.Ordered_Sets is\n \n       if Container.Tree.Lock > 0 then\n          raise Program_Error with\n-           \"attempt to tamper with cursors (set is locked)\";\n+           \"attempt to tamper with elements (set is locked)\";\n       end if;\n \n       Node.Element := New_Item;\n@@ -1405,7 +1405,7 @@ package body Ada.Containers.Ordered_Sets is\n       Result    : Node_Access;\n       Inserted  : Boolean;\n \n-      --  Start of processing for Insert\n+      --  Start of processing for Replace_Element\n \n    begin\n       if Item < Node.Element\n@@ -1416,7 +1416,7 @@ package body Ada.Containers.Ordered_Sets is\n       else\n          if Tree.Lock > 0 then\n             raise Program_Error with\n-              \"attempt to tamper with cursors (set is locked)\";\n+              \"attempt to tamper with elements (set is locked)\";\n          end if;\n \n          Node.Element := Item;\n@@ -1432,7 +1432,7 @@ package body Ada.Containers.Ordered_Sets is\n          if Hint = Node then\n             if Tree.Lock > 0 then\n                raise Program_Error with\n-                 \"attempt to tamper with cursors (set is locked)\";\n+                 \"attempt to tamper with elements (set is locked)\";\n             end if;\n \n             Node.Element := Item;"}, {"sha": "26ce78429c1be8cb91eb8336c5d4ee3344a571a1", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -1795,9 +1795,8 @@ package body Exp_Ch6 is\n \n          Append_To (Extra_Actuals,\n            Make_Parameter_Association (Loc,\n-             Explicit_Actual_Parameter => Expr,\n-             Selector_Name =>\n-               Make_Identifier (Loc, Chars (EF))));\n+             Selector_Name             => Make_Identifier (Loc, Chars (EF)),\n+             Explicit_Actual_Parameter => Expr));\n \n          Analyze_And_Resolve (Expr, Etype (EF));\n \n@@ -2174,8 +2173,8 @@ package body Exp_Ch6 is\n                Prev_Orig := Prev;\n             end if;\n \n-            --  Ada 2005 (AI-251): Thunks must propagate the extra actuals\n-            --  of accessibility levels.\n+            --  Ada 2005 (AI-251): Thunks must propagate the extra actuals of\n+            --  accessibility levels.\n \n             if Ekind (Current_Scope) in Subprogram_Kind\n               and then Is_Thunk (Current_Scope)\n@@ -2299,7 +2298,7 @@ package body Exp_Ch6 is\n                               Extra_Accessibility (Formal));\n \n                         --  No other cases of attributes returning access\n-                        --  values that can be passed to access parameters\n+                        --  values that can be passed to access parameters.\n \n                         when others =>\n                            raise Program_Error;"}, {"sha": "fd8f43914dbe0969c9a76b5dfc2bb0b6e77b3361", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -6313,10 +6313,14 @@ package body Exp_Disp is\n       --  For CPP types there is no need to build the dispatch tables since\n       --  they are imported from the C++ side. If the CPP type has an IP\n       --  then we declare now the variable that will store the copy of the\n-      --  C++ tag.\n+      --  C++ tag. If the CPP type is an interface, we need the variable as\n+      --  well, because it becomes the pointer to the corresponding secondary\n+      --  table.\n \n       if Is_CPP_Class (Typ) then\n-         if Has_CPP_Constructors (Typ) then\n+         if Has_CPP_Constructors (Typ)\n+           or else Is_Interface (Typ)\n+         then\n             Append_To (Result,\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => DT_Ptr,"}, {"sha": "5221482908548a242eec0253688664899872bf0c", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -7,7 +7,7 @@\n @c                                                                            o\n @c                             G N A T _ U G N                                o\n @c                                                                            o\n-@c   GNAT is maintained by Ada Core Technologies Inc (http://www.gnat.com).   o\n+@c                     Copyright (C) 1992-2010, AdaCore                       o\n @c                                                                            o\n @c oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n \n@@ -3979,7 +3979,7 @@ effect if this switch is present.\n \n @item -fno-inline-functions\n @cindex @option{-fno-inline-functions} (@command{gcc})\n-Suppresses automatic inlining of simple subprograms, which is enabled\n+Suppresses automatic inlining of subprograms, which is enabled\n if @option{-O3} is used.\n \n @item -fno-inline-small-functions\n@@ -10108,12 +10108,11 @@ generates highly optimized code and has\n the slowest compilation time.\n \n @item ^-O3^/OPTIMIZE=INLINING^\n-Full optimization as in @option{-O2},\n-and also attempts automatic inlining of small\n-subprograms within a unit (@pxref{Inlining of Subprograms}).\n+Full optimization as in @option{-O2};\n+also uses more aggressive automatic inlining of subprograms within a unit (@pxref{Inlining of Subprograms}) and attemps to vectorize loops.\n \n @item ^-Os^/OPTIMIZE=SPACE^\n-Optimize space usage of resulting program.\n+Optimize space usage (code and data) of resulting program.\n @end table\n \n @noindent\n@@ -10142,7 +10141,7 @@ levels.\n \n Note regarding the use of @option{-O3}: The use of this optimization level\n is generally discouraged with GNAT, since it often results in larger\n-executables which run more slowly. See further discussion of this point\n+executables which may run more slowly. See further discussion of this point\n in @ref{Inlining of Subprograms}.\n \n @node Debugging Optimized Code\n@@ -10292,9 +10291,10 @@ subprograms.\n @item\n @cindex pragma Inline\n @findex Inline\n-Either @code{pragma Inline} applies to the subprogram, or it is local\n-to the unit and called once from within it, or it is small and automatic\n-inlining (optimization level @option{-O3}) is specified.\n+Either @code{pragma Inline} applies to the subprogram, or it is local to\n+the unit and called once from within it, or it is small and optimization\n+level @option{-O2} is specified, or automatic inlining (optimization level\n+@option{-O3}) is specified.\n @end itemize\n \n @noindent\n@@ -10378,7 +10378,11 @@ this switch is used to suppress the resulting inlining actions.\n \n @cindex @option{-fno-inline-functions} (@command{gcc})\n Note: The @option{-fno-inline-functions} switch can be used to prevent\n-automatic inlining of small subprograms if @option{-O3} is used.\n+automatic inlining of subprograms if @option{-O3} is used.\n+\n+@cindex @option{-fno-inline-small-functions} (@command{gcc})\n+Note: The @option{-fno-inline-small-functions} switch can be used to prevent\n+automatic inlining of small subprograms if @option{-O2} is used.\n \n @cindex @option{-fno-inline-functions-called-once} (@command{gcc})\n Note: The @option{-fno-inline-functions-called-once} switch"}, {"sha": "87c8ced55bdfbc2c6d354a5446a0761fe7603580", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -56,6 +56,7 @@ with Ada.Text_IO;             use Ada.Text_IO;\n with GNAT.OS_Lib;             use GNAT.OS_Lib;\n \n with VMS_Conv;                use VMS_Conv;\n+with VMS_Cmds;                use VMS_Cmds;\n \n procedure GNATCmd is\n    Project_Node_Tree : Project_Node_Tree_Ref;"}, {"sha": "701de976c588b4c3cec4a01f1ac62e39e254f253", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -575,13 +575,13 @@ packages would be involved in the build process.\n    @b{end} Builder;\n \n    @b{package} Compiler @b{is} --<<<  for the compiler\n-   @b{end} Builder;\n+   @b{end} Compiler;\n \n    @b{package} Binder @b{is}   --<<<  for the binder\n-   @b{end} Builder;\n+   @b{end} Binder;\n \n    @b{package} Linker @b{is}   --<<<  for the linker\n-   @b{end} Builder;\n+   @b{end} Linker;\n @end smallexample\n \n @noindent"}, {"sha": "7e2127f10a2ac042f8d44f0daead3f6d78ee4cb8", "filename": "gcc/ada/vms_conv.ads", "status": "modified", "additions": 2, "deletions": 24, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fvms_conv.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d983bbf20d818173dab18c236192bb071494604/gcc%2Fada%2Fvms_conv.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_conv.ads?ref=9d983bbf20d818173dab18c236192bb071494604", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2003-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,6 +30,7 @@\n \n with Table;\n with VMS_Data; use VMS_Data;\n+with VMS_Cmds; use VMS_Cmds;\n \n with GNAT.OS_Lib; use GNAT.OS_Lib;\n \n@@ -92,29 +93,6 @@ package VMS_Conv is\n    type Parameter_Array is array (Natural range <>) of Parameter_Type;\n    type Parameter_Ref is access all Parameter_Array;\n \n-   type Command_Type is\n-     (Bind,\n-      Chop,\n-      Clean,\n-      Compile,\n-      Check,\n-      Sync,\n-      Elim,\n-      Find,\n-      Krunch,\n-      Link,\n-      List,\n-      Make,\n-      Metric,\n-      Name,\n-      Preprocess,\n-      Pretty,\n-      Shared,\n-      Stack,\n-      Stub,\n-      Xref,\n-      Undefined);\n-\n    type Alternate_Command is (Comp, Ls, Kr, Pp, Prep);\n    --  Alternate command label for non VMS system use\n "}]}