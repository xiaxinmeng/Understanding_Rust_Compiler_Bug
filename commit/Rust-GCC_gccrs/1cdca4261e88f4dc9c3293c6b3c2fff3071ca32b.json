{"sha": "1cdca4261e88f4dc9c3293c6b3c2fff3071ca32b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNkY2E0MjYxZTg4ZjRkYzljMzI5M2M2YjNjMmZmZjMwNzFjYTMyYg==", "commit": {"author": {"name": "Harris Snyder", "email": "hsnyder@structura.bio", "date": "2021-01-27T21:54:04Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2021-01-27T21:57:41Z"}, "message": "Fix strides for C descriptors with stride > 2.\n\nlibgfortran/ChangeLog:\n\n\t* runtime/ISO_Fortran_binding.c (CFI_establish): fixed\n\tstrides for rank >2 arrays.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/ISO_Fortran_binding_18.c: New test.\n\t* gfortran.dg/ISO_Fortran_binding_18.f90: New test.", "tree": {"sha": "b60a25cb6e6547d7d44f7d7444d60f5d7c8fd64c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b60a25cb6e6547d7d44f7d7444d60f5d7c8fd64c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cdca4261e88f4dc9c3293c6b3c2fff3071ca32b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cdca4261e88f4dc9c3293c6b3c2fff3071ca32b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cdca4261e88f4dc9c3293c6b3c2fff3071ca32b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cdca4261e88f4dc9c3293c6b3c2fff3071ca32b/comments", "author": null, "committer": null, "parents": [{"sha": "081c96621da658760b4a67c07530805f770fa22c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/081c96621da658760b4a67c07530805f770fa22c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/081c96621da658760b4a67c07530805f770fa22c"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "4d1c4ecbd72d7b91f43e5153a851947fc0c50d65", "filename": "gcc/testsuite/gfortran.dg/ISO_Fortran_binding_18.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cdca4261e88f4dc9c3293c6b3c2fff3071ca32b/gcc%2Ftestsuite%2Fgfortran.dg%2FISO_Fortran_binding_18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cdca4261e88f4dc9c3293c6b3c2fff3071ca32b/gcc%2Ftestsuite%2Fgfortran.dg%2FISO_Fortran_binding_18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2FISO_Fortran_binding_18.c?ref=1cdca4261e88f4dc9c3293c6b3c2fff3071ca32b", "patch": "@@ -0,0 +1,29 @@\n+#include <ISO_Fortran_binding.h>\n+\n+#include <stdlib.h>\n+#include <string.h>\n+\n+\n+\n+extern int do_loop(CFI_cdesc_t* array);\n+\n+int main(int argc, char ** argv)\n+{\n+\tint nx = 9;\n+\tint ny = 10;\n+\tint nz = 2;\n+\n+\tint arr[nx*ny*nz];\n+\tmemset(arr,0,sizeof(int)*nx*ny*nz);\n+\tCFI_index_t shape[3];\n+\tshape[0] = nz;\n+\tshape[1] = ny;\n+\tshape[2] = nx;\n+\n+\tCFI_CDESC_T(3) farr;\n+\tint rc = CFI_establish((CFI_cdesc_t*)&farr, arr, CFI_attribute_other, CFI_type_int, 0, (CFI_rank_t)3, (const CFI_index_t *)shape);\n+\tif (rc != CFI_SUCCESS) abort();\n+\tint result = do_loop((CFI_cdesc_t*)&farr);\n+\tif (result != nx*ny*nz) abort();\n+\treturn 0;\n+}"}, {"sha": "76be51d22fb7e850345d36182d8b8bddd1c1937f", "filename": "gcc/testsuite/gfortran.dg/ISO_Fortran_binding_18.f90", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cdca4261e88f4dc9c3293c6b3c2fff3071ca32b/gcc%2Ftestsuite%2Fgfortran.dg%2FISO_Fortran_binding_18.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cdca4261e88f4dc9c3293c6b3c2fff3071ca32b/gcc%2Ftestsuite%2Fgfortran.dg%2FISO_Fortran_binding_18.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2FISO_Fortran_binding_18.f90?ref=1cdca4261e88f4dc9c3293c6b3c2fff3071ca32b", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do run }\n+! { dg-additional-sources ISO_Fortran_binding_18.c }\n+\n+module fortran_binding_test_18\n+    use iso_c_binding\n+    implicit none\n+contains\n+\n+    subroutine test(array)\n+        integer(c_int) :: array(:)\n+        array = 1\n+    end subroutine\n+\n+    function do_loop(array) result(the_sum) bind(c)\n+        integer(c_int), intent(in out) :: array(:,:,:)\n+        integer(c_int) :: the_sum, i, j\n+\n+        the_sum = 0  \n+        array = 0\n+        do i=1,size(array,3)\n+            do j=1,size(array,2)\n+                call test(array(:,j,i))\n+            end do\n+        end do\n+        the_sum = sum(array)\n+    end function\n+\n+end module"}, {"sha": "20833ad20252e8f031519e5eea67ffbd512b6064", "filename": "libgfortran/runtime/ISO_Fortran_binding.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cdca4261e88f4dc9c3293c6b3c2fff3071ca32b/libgfortran%2Fruntime%2FISO_Fortran_binding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cdca4261e88f4dc9c3293c6b3c2fff3071ca32b/libgfortran%2Fruntime%2FISO_Fortran_binding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2FISO_Fortran_binding.c?ref=1cdca4261e88f4dc9c3293c6b3c2fff3071ca32b", "patch": "@@ -391,7 +391,12 @@ int CFI_establish (CFI_cdesc_t *dv, void *base_addr, CFI_attribute_t attribute,\n \t  if (i == 0)\n \t    dv->dim[i].sm = dv->elem_len;\n \t  else\n-\t    dv->dim[i].sm = (CFI_index_t)(dv->elem_len * extents[i - 1]);\n+\t    {\n+\t      CFI_index_t extents_product = 1;\n+\t      for (int j = 0; j < i; j++)\n+\t\textents_product *= extents[j];\n+\t      dv->dim[i].sm = (CFI_index_t)(dv->elem_len * extents_product);\n+\t    }\n \t}\n     }\n "}]}