{"sha": "ed882fd5eb508bde08fa692ab08f73399bb826eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ4ODJmZDVlYjUwOGJkZTA4ZmE2OTJhYjA4ZjczMzk5YmI4MjZlYg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-10-06T19:29:21Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-10-06T19:29:21Z"}, "message": "New calling sequence for profiling, old available with -mmcount.\n\nFrom-SVN: r5642", "tree": {"sha": "e698554faedced8744474a7cc36a4d1c98eea34b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e698554faedced8744474a7cc36a4d1c98eea34b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed882fd5eb508bde08fa692ab08f73399bb826eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed882fd5eb508bde08fa692ab08f73399bb826eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed882fd5eb508bde08fa692ab08f73399bb826eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed882fd5eb508bde08fa692ab08f73399bb826eb/comments", "author": null, "committer": null, "parents": [{"sha": "68386e1e3cbcd64346749e822babf7e576fa16aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68386e1e3cbcd64346749e822babf7e576fa16aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68386e1e3cbcd64346749e822babf7e576fa16aa"}], "stats": {"total": 72, "additions": 66, "deletions": 6}, "files": [{"sha": "830bddc1ed27b287cfb3dc16d3c1d5964374f5dd", "filename": "gcc/config/i386/osfrose.h", "status": "modified", "additions": 66, "deletions": 6, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed882fd5eb508bde08fa692ab08f73399bb826eb/gcc%2Fconfig%2Fi386%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed882fd5eb508bde08fa692ab08f73399bb826eb/gcc%2Fconfig%2Fi386%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosfrose.h?ref=ed882fd5eb508bde08fa692ab08f73399bb826eb", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    Intel 386 (OSF/1 with OSF/rose) version.\n-   Copyright (C) 1991 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1992, 1993 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -36,6 +36,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define MASK_NO_IDENT\t\t0x08000000\t/* suppress .ident */\n #define MASK_NO_UNDERSCORES\t0x04000000\t/* suppress leading _ */\n #define MASK_LARGE_ALIGN\t0x02000000\t/* align to >word boundaries */\n+#define MASK_MCOUNT\t\t0x01000000\t/* profiling uses mcount */\n \n #define TARGET_HALF_PIC\t\t(target_flags & MASK_HALF_PIC)\n #define TARGET_DEBUG\t\t(target_flags & MASK_HALF_PIC_DEBUG)\n@@ -45,6 +46,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define TARGET_IDENT\t\t((target_flags & MASK_NO_IDENT) == 0)\n #define TARGET_UNDERSCORES\t((target_flags & MASK_NO_UNDERSCORES) == 0)\n #define TARGET_LARGE_ALIGN\t(target_flags & MASK_LARGE_ALIGN)\n+#define TARGET_MCOUNT\t\t(target_flags & MASK_MCOUNT)\n \n #undef\tSUBTARGET_SWITCHES\n #define SUBTARGET_SWITCHES \\\n@@ -58,8 +60,10 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n      { \"no-ident\",\t MASK_NO_IDENT},\t\t\t\t\\\n      { \"underscores\",\t-MASK_NO_UNDERSCORES},\t\t\t\t\\\n      { \"no-underscores\", MASK_NO_UNDERSCORES},\t\t\t\t\\\n+     { \"large-align\",\t MASK_LARGE_ALIGN},\t\t\t\t\\\n      { \"no-large-align\",-MASK_LARGE_ALIGN},\t\t\t\t\\\n-     { \"large-align\",\t MASK_LARGE_ALIGN},\n+     { \"mcount\",\t MASK_MCOUNT},\t\t\t\t\t\\\n+     { \"no-mcount\",\t-MASK_MCOUNT},\n \n /* OSF/rose uses stabs, not dwarf.  */\n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n@@ -148,11 +152,67 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n /* Temporarily turn off long double being 96 bits.  */\n #undef LONG_DOUBLE_TYPE_SIZE\n \n-/* Tell final.c we don't need a label passed to mcount.  */\n-#define NO_PROFILE_DATA\n-\n #undef  FUNCTION_PROFILER\n-#define FUNCTION_PROFILER(FILE, LABELNO) fprintf (FILE, \"\\tcall _mcount\\n\")\n+#define FUNCTION_PROFILER(FILE, LABELNO)\t\t\t\t\\\n+do\t\t\t\t\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    if (TARGET_MCOUNT && flag_pic)\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tfprintf (FILE, \"\\tleal %sP%d@GOTOFF(%%ebx),%%edx\\n\",\t\t\\\n+\t\t LPREFIX, LABELNO);\t\t\t\t\t\\\n+\tfprintf (FILE, \"\\tcall *_mcount@GOT(%%ebx)\\n\");\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    /* Note that OSF/rose blew it in terms of calling mcount, since\t\\\n+       OSF/rose prepends a leading underscore, but mcount's doesn't.\t\\\n+       OSF/elf fixes this by not prepending leading underscores.  */\t\\\n+    else if (TARGET_MCOUNT)\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tfprintf (FILE, \"\\tmovl $%sP%d,%%edx\\n\", LPREFIX, LABELNO);\t\\\n+\tfprintf (FILE, \"\\tcall _mcount\\n\");\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tchar *underscore = (TARGET_UNDERSCORES) ? \"_\" : \"\";\t\t\\\n+\tchar *func = IDENTIFIER_POINTER (DECL_NAME (current_function_decl)); \\\n+\t\t\t\t\t\t\t\t\t\\\n+\tif (flag_pic)\t\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    fprintf (FILE, \"\\tmovl %s_real_mcount@GOT(%%ebx),%%eax)\\n\",\t\\\n+\t\t     underscore);\t\t\t\t\t\\\n+\t    fprintf (FILE, \"\\tmovl (%%eax),%%eax\\n\");\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+\telse\t\t\t\t\t\t\t\t\\\n+\t  fprintf (FILE, \"\\tmovl %s_real_mcount,%%eax\\n\", underscore);\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+\tif (flag_omit_frame_pointer)\t\t\t\t\t\\\n+\t  abort ();\t\t\t\t\t\t\t\\\n+\telse\t\t\t\t\t\t\t\t\\\n+\t  fprintf (FILE, \"\\tmovl 4(%%ebp),%%ecx\\n\");\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+\tif (flag_pic)\t\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    fprintf (FILE, \"\\tleal %sP%d@GOTOFF(%%ebx),%%edx\\n\",\t\\\n+\t\t     LPREFIX, LABELNO);\t\t\t\t\t\\\n+\t    fprintf (FILE, \"\\tpushl %%edx\\n\");\t\t\t\t\\\n+\t    fprintf (FILE, \"\\tpushl %%ecx\\n\");\t\t\t\t\\\n+\t    fprintf (FILE, \"\\tleal $%s%s@GOTOFF(%%ebx),%%ecx\\n\",\t\\\n+\t\t     underscore, func);\t\t\t\t\t\\\n+\t    fprintf (FILE, \"\\tpushl %%ecx\\n\");\t\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+\telse\t\t\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    fprintf (FILE, \"\\tpushl $%sP%d\\n\", LPREFIX, LABELNO);\t\\\n+\t    fprintf (FILE, \"\\tpushl %%ecx\\n\");\t\t\t\t\\\n+\t    fprintf (FILE, \"\\tpushl $%s%s\\n\", underscore, func);\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+\tfprintf (FILE, \"\\tcall *%%eax\\n\");\t\t\t\t\\\n+\tfprintf (FILE, \"\\taddl $12,%%esp\\n\");\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+  }\t\t\t\t\t\t\t\t\t\\\n+while (0)\n \n /* A C statement or compound statement to output to FILE some\n    assembler code to initialize basic-block profiling for the current"}]}