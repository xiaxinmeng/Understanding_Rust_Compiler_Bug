{"sha": "48aa1f1a6180e8d826ff5efa4a637477be56be48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhhYTFmMWE2MTgwZThkODI2ZmY1ZWZhNGE2Mzc0NzdiZTU2YmU0OA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2005-09-05T07:59:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-09-05T07:59:10Z"}, "message": "sem_ch12.adb (Instantiate_Subprogram_Body): When creating the defining entity for the instance body...\n\n2005-09-01  Ed Schonberg  <schonberg@adacore.com>\n\t    Javier Miranda  <miranda@adacore.com>\n\t    Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_ch12.adb (Instantiate_Subprogram_Body): When creating the\n\tdefining entity for the instance body, make a new defining identifier\n\trather than copying the entity of the spec, to prevent accidental\n\tsharing of the entity list.\n\t(Check_Private_View): When exchanging views of private types, build the\n\tlist of exchanged views as a stack, to ensure that on exit the exchanges\n\tare undone in the proper order.\n\t(Analyze_Package_Instantiation, Analyze_Subprogram_Instantiation):\n\tRestore the compilation environment in case of instantiation_error.\n\t(Analyze_Generic_Subprogram_Declaration): Handle creation of type entity\n\tfor an anonymous access result.\n\t(Instantiate_Generic_Subprogram): Subtype_Mark => Result_Definition\n\t(Formal_Entity): Handle properly the case of a formal package that\n\tdenotes a generic package renaming.\n\nFrom-SVN: r103879", "tree": {"sha": "571518148cb0be159daf3c8e2fd827f57937d3fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/571518148cb0be159daf3c8e2fd827f57937d3fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48aa1f1a6180e8d826ff5efa4a637477be56be48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48aa1f1a6180e8d826ff5efa4a637477be56be48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48aa1f1a6180e8d826ff5efa4a637477be56be48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48aa1f1a6180e8d826ff5efa4a637477be56be48/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f81856470301fd6d3d353e4f872244b4ab7cc2ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f81856470301fd6d3d353e4f872244b4ab7cc2ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f81856470301fd6d3d353e4f872244b4ab7cc2ba"}], "stats": {"total": 81, "additions": 57, "deletions": 24}, "files": [{"sha": "05f89f65e204b54a69e103d32cfc25abf03809b5", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 57, "deletions": 24, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48aa1f1a6180e8d826ff5efa4a637477be56be48/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48aa1f1a6180e8d826ff5efa4a637477be56be48/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=48aa1f1a6180e8d826ff5efa4a637477be56be48", "patch": "@@ -33,7 +33,6 @@ with Fname;    use Fname;\n with Fname.UF; use Fname.UF;\n with Freeze;   use Freeze;\n with Hostparm;\n-with Inline;   use Inline;\n with Lib;      use Lib;\n with Lib.Load; use Lib.Load;\n with Lib.Xref; use Lib.Xref;\n@@ -2240,6 +2239,7 @@ package body Sem_Ch12 is\n       Id          : Entity_Id;\n       Formals     : List_Id;\n       New_N       : Node_Id;\n+      Result_Type : Entity_Id;\n       Save_Parent : Node_Id;\n \n    begin\n@@ -2283,17 +2283,23 @@ package body Sem_Ch12 is\n \n       if Nkind (Spec) = N_Function_Specification then\n          Set_Ekind (Id, E_Generic_Function);\n-         Find_Type (Subtype_Mark (Spec));\n-         Set_Etype (Id, Entity (Subtype_Mark (Spec)));\n+\n+         if Nkind (Result_Definition (Spec)) = N_Access_Definition then\n+            Result_Type := Access_Definition (Spec, Result_Definition (Spec));\n+            Set_Etype (Id, Result_Type);\n+         else\n+            Find_Type (Result_Definition (Spec));\n+            Set_Etype (Id, Entity (Result_Definition (Spec)));\n+         end if;\n+\n       else\n          Set_Ekind (Id, E_Generic_Procedure);\n          Set_Etype (Id, Standard_Void_Type);\n       end if;\n \n-      --  For a library unit, we have reconstructed the entity for the\n-      --  unit, and must reset it in the library tables. We also need\n-      --  to make sure that Body_Required is set properly in the original\n-      --  compilation unit node.\n+      --  For a library unit, we have reconstructed the entity for the unit,\n+      --  and must reset it in the library tables. We also make sure that\n+      --  Body_Required is set properly in the original compilation unit node.\n \n       if Nkind (Parent (N)) = N_Compilation_Unit then\n          Set_Cunit_Entity (Current_Sem_Unit, Id);\n@@ -2315,9 +2321,9 @@ package body Sem_Ch12 is\n    -- Analyze_Package_Instantiation --\n    -----------------------------------\n \n-   --  Note: this procedure is also used for formal package declarations,\n-   --  in which case the argument N is an N_Formal_Package_Declaration\n-   --  node. This should really be noted in the spec! ???\n+   --  Note: this procedure is also used for formal package declarations, in\n+   --  which case the argument N is an N_Formal_Package_Declaration node.\n+   --  This should really be noted in the spec! ???\n \n    procedure Analyze_Package_Instantiation (N : Node_Id) is\n       Loc    : constant Source_Ptr := Sloc (N);\n@@ -2335,6 +2341,7 @@ package body Sem_Ch12 is\n       Is_Actual_Pack : constant Boolean :=\n                          Is_Internal (Defining_Entity (N));\n \n+      Env_Installed    : Boolean := False;\n       Parent_Installed : Boolean := False;\n       Renaming_List    : List_Id;\n       Unit_Renaming    : Node_Id;\n@@ -2428,6 +2435,7 @@ package body Sem_Ch12 is\n       Pre_Analyze_Actuals (N);\n \n       Init_Env;\n+      Env_Installed := True;\n       Check_Generic_Child_Unit (Gen_Id, Parent_Installed);\n       Gen_Unit := Entity (Gen_Id);\n \n@@ -2900,6 +2908,7 @@ package body Sem_Ch12 is\n          end if;\n \n          Restore_Env;\n+         Env_Installed := False;\n       end if;\n \n       Validate_Categorization_Dependency (N, Act_Decl_Id);\n@@ -2933,6 +2942,10 @@ package body Sem_Ch12 is\n          if Parent_Installed then\n             Remove_Parent;\n          end if;\n+\n+         if Env_Installed then\n+            Restore_Env;\n+         end if;\n    end Analyze_Package_Instantiation;\n \n    --------------------------\n@@ -3188,6 +3201,7 @@ package body Sem_Ch12 is\n       Act_Spec    : Node_Id;\n       Act_Tree    : Node_Id;\n \n+      Env_Installed    : Boolean := False;\n       Gen_Unit         : Entity_Id;\n       Gen_Decl         : Node_Id;\n       Pack_Id          : Entity_Id;\n@@ -3364,6 +3378,7 @@ package body Sem_Ch12 is\n       Pre_Analyze_Actuals (N);\n \n       Init_Env;\n+      Env_Installed := True;\n       Check_Generic_Child_Unit (Gen_Id, Parent_Installed);\n       Gen_Unit := Entity (Gen_Id);\n \n@@ -3598,6 +3613,7 @@ package body Sem_Ch12 is\n          end if;\n \n          Restore_Env;\n+         Env_Installed := False;\n          Generic_Renamings.Set_Last (0);\n          Generic_Renamings_HTable.Reset;\n       end if;\n@@ -3607,6 +3623,10 @@ package body Sem_Ch12 is\n          if Parent_Installed then\n             Remove_Parent;\n          end if;\n+\n+         if Env_Installed then\n+            Restore_Env;\n+         end if;\n    end Analyze_Subprogram_Instantiation;\n \n    -------------------------\n@@ -4599,7 +4619,7 @@ package body Sem_Ch12 is\n             elsif Nkind (Parent (N)) = N_Subtype_Declaration\n               or else not In_Private_Part (Scope (Base_Type (T)))\n             then\n-               Append_Elmt (T, Exchanged_Views);\n+               Prepend_Elmt (T, Exchanged_Views);\n                Exchange_Declarations (Etype (Get_Associated_Node (N)));\n             end if;\n \n@@ -4640,7 +4660,7 @@ package body Sem_Ch12 is\n            and then not Is_Generic_Type (BT)\n            and then not In_Open_Scopes (BT)\n          then\n-            Append_Elmt (Full_View (BT), Exchanged_Views);\n+            Prepend_Elmt (Full_View (BT), Exchanged_Views);\n             Exchange_Declarations (BT);\n          end if;\n       end if;\n@@ -6542,14 +6562,25 @@ package body Sem_Ch12 is\n                   Formal_Node : Node_Id;\n                   Formal_Ent  : Entity_Id;\n \n-                  Gen_Decl : constant Node_Id :=\n-                               Unit_Declaration_Node\n-                                 (Entity (Name (Orig_Node)));\n-\n-                  Formals : constant List_Id :=\n-                              Generic_Formal_Declarations (Gen_Decl);\n+                  Gen_Decl : Node_Id;\n+                  Formals  : List_Id;\n \n                begin\n+                  --  The actual may be a renamed generic package, in which\n+                  --  case we want to retrieve the original generic in order\n+                  --  to traverse its formal part.\n+\n+                  if Present (Renamed_Entity (Entity (Name (Orig_Node)))) then\n+                     Gen_Decl :=\n+                       Unit_Declaration_Node (\n+                         Renamed_Entity (Entity (Name (Orig_Node))));\n+                  else\n+                     Gen_Decl :=\n+                        Unit_Declaration_Node (Entity (Name (Orig_Node)));\n+                  end if;\n+\n+                  Formals := Generic_Formal_Declarations (Gen_Decl);\n+\n                   if Present (Formals) then\n                      Formal_Node := First_Non_Pragma (Formals);\n                   else\n@@ -7260,7 +7291,7 @@ package body Sem_Ch12 is\n \n             Prepend (Subt_Decl, List);\n \n-            Append_Elmt (Full_View (Ftyp), Exchanged_Views);\n+            Prepend_Elmt (Full_View (Ftyp), Exchanged_Views);\n             Exchange_Declarations (Ftyp);\n          end if;\n \n@@ -7834,7 +7865,8 @@ package body Sem_Ch12 is\n               Make_Subprogram_Body (Loc,\n                  Specification              =>\n                    Make_Procedure_Specification (Loc,\n-                     Defining_Unit_Name         => New_Copy (Anon_Id),\n+                     Defining_Unit_Name         =>\n+                       Make_Defining_Identifier (Loc, Chars (Anon_Id)),\n                        Parameter_Specifications =>\n                        New_Copy_List\n                          (Parameter_Specifications (Parent (Anon_Id)))),\n@@ -7860,11 +7892,12 @@ package body Sem_Ch12 is\n               Make_Subprogram_Body (Loc,\n                 Specification =>\n                   Make_Function_Specification (Loc,\n-                     Defining_Unit_Name         => New_Copy (Anon_Id),\n+                     Defining_Unit_Name         =>\n+                       Make_Defining_Identifier (Loc, Chars (Anon_Id)),\n                        Parameter_Specifications =>\n                        New_Copy_List\n                          (Parameter_Specifications (Parent (Anon_Id))),\n-                     Subtype_Mark =>\n+                     Result_Definition =>\n                        New_Occurrence_Of (Etype (Anon_Id), Loc)),\n \n                   Declarations               => Empty_List,\n@@ -10165,7 +10198,7 @@ package body Sem_Ch12 is\n       Priv_Elmt := First_Elmt (Private_Dependents (BT));\n \n       if Present (Full_View (BT)) then\n-         Append_Elmt (Full_View (BT), Exchanged_Views);\n+         Prepend_Elmt (Full_View (BT), Exchanged_Views);\n          Exchange_Declarations (BT);\n       end if;\n \n@@ -10184,7 +10217,7 @@ package body Sem_Ch12 is\n          if Present (Full_View (Priv_Sub))\n            and then not Is_Private_Type (Etype (Full_View (Priv_Sub)))\n          then\n-            Append_Elmt (Full_View (Priv_Sub), Exchanged_Views);\n+            Prepend_Elmt (Full_View (Priv_Sub), Exchanged_Views);\n             Exchange_Declarations (Priv_Sub);\n          end if;\n "}]}