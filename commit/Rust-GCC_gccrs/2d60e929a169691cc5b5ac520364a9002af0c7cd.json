{"sha": "2d60e929a169691cc5b5ac520364a9002af0c7cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ2MGU5MjlhMTY5NjkxY2M1YjVhYzUyMDM2NGE5MDAyYWYwYzdjZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-05-25T12:39:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-05-25T12:39:52Z"}, "message": "re PR middle-end/27743 (Wrong code for ((unsigned) ((a) >> 2)) >> 15)\n\n2006-05-25  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/27743\n\t* fold-const.c (fold_binary): Do not look at the stripped\n\top0 for (a OP c1) OP c2 to a OP (c1+c2) shift optimization.\n\n\t* gcc.dg/torture/pr27743.c: New testcase.\n\nFrom-SVN: r114112", "tree": {"sha": "668a674da46ef3465f8087dae52ea497879ab501", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/668a674da46ef3465f8087dae52ea497879ab501"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d60e929a169691cc5b5ac520364a9002af0c7cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d60e929a169691cc5b5ac520364a9002af0c7cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d60e929a169691cc5b5ac520364a9002af0c7cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d60e929a169691cc5b5ac520364a9002af0c7cd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "466a0c362fe022607a2cd05803988f952116d581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/466a0c362fe022607a2cd05803988f952116d581", "html_url": "https://github.com/Rust-GCC/gccrs/commit/466a0c362fe022607a2cd05803988f952116d581"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "368b3de9571c1511a5c4a5eeea5320f48af4df88", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d60e929a169691cc5b5ac520364a9002af0c7cd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d60e929a169691cc5b5ac520364a9002af0c7cd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d60e929a169691cc5b5ac520364a9002af0c7cd", "patch": "@@ -1,3 +1,9 @@\n+2006-05-25  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/27743\n+\t* fold-const.c (fold_binary): Do not look at the stripped\n+\top0 for (a OP c1) OP c2 to a OP (c1+c2) shift optimization.\n+\n 2006-05-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-vrp.c (extract_range_from_assert): Set the range to VARYING"}, {"sha": "a5e57b18dfe6b18e4bf784a44dc4a77810112ae0", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d60e929a169691cc5b5ac520364a9002af0c7cd/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d60e929a169691cc5b5ac520364a9002af0c7cd/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=2d60e929a169691cc5b5ac520364a9002af0c7cd", "patch": "@@ -9786,7 +9786,7 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \treturn NULL_TREE;\n \n       /* Turn (a OP c1) OP c2 into a OP (c1+c2).  */\n-      if (TREE_CODE (arg0) == code && host_integerp (arg1, false)\n+      if (TREE_CODE (op0) == code && host_integerp (arg1, false)\n \t  && TREE_INT_CST_LOW (arg1) < TYPE_PRECISION (type)\n \t  && host_integerp (TREE_OPERAND (arg0, 1), false)\n \t  && TREE_INT_CST_LOW (TREE_OPERAND (arg0, 1)) < TYPE_PRECISION (type))"}, {"sha": "4e3a9b897ad7855144ceeecaa93b8f9a46bc0c78", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d60e929a169691cc5b5ac520364a9002af0c7cd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d60e929a169691cc5b5ac520364a9002af0c7cd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2d60e929a169691cc5b5ac520364a9002af0c7cd", "patch": "@@ -1,3 +1,8 @@\n+2006-05-25  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/27743\n+\t* gcc.dg/torture/pr27743.c: New testcase.\n+\n 2006-05-25  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gfortran.dg/large_real_kind_form_io_2.f90: UnXFAIL on SPARC/Solaris."}, {"sha": "ee9144af258e1225dbdfdcea1399880cb4465dd3", "filename": "gcc/testsuite/gcc.dg/torture/pr27743.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d60e929a169691cc5b5ac520364a9002af0c7cd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr27743.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d60e929a169691cc5b5ac520364a9002af0c7cd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr27743.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr27743.c?ref=2d60e929a169691cc5b5ac520364a9002af0c7cd", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do run } */\n+\n+extern void abort(void);\n+\n+int bar(int a)\n+{\n+  return ((unsigned) ((a) >> 2)) >> 15;\n+}\n+\n+int main()\n+{\n+  if (bar (0xffff3000) != 0x1ffff)\n+    abort ();\n+  return 0;\n+}"}]}