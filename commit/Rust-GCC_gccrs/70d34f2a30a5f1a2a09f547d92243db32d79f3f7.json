{"sha": "70d34f2a30a5f1a2a09f547d92243db32d79f3f7", "node_id": "C_kwDOANBUbNoAKDcwZDM0ZjJhMzBhNWYxYTJhMDlmNTQ3ZDkyMjQzZGIzMmQ3OWYzZjc", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2023-02-01T02:18:10Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2023-02-01T02:18:10Z"}, "message": "analyzer: fix -Wanalyzer-allocation-size false -ve on alloca [PR108616]\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/108616\n\t* pending-diagnostic.cc (fixup_location_in_macro_p): Add \"alloca\"\n\tto macros that we shouldn't unwind inside.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/108616\n\t* gcc.dg/analyzer/allocation-size-multiline-3.c: New test.\n\t* gcc.dg/analyzer/test-alloca.h: New test.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "8963cc2692e3d78872360e3628569e5d2bf99e1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8963cc2692e3d78872360e3628569e5d2bf99e1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70d34f2a30a5f1a2a09f547d92243db32d79f3f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70d34f2a30a5f1a2a09f547d92243db32d79f3f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70d34f2a30a5f1a2a09f547d92243db32d79f3f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70d34f2a30a5f1a2a09f547d92243db32d79f3f7/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a90316c6ceddfbb47b3c2161baf446ccb87df5ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a90316c6ceddfbb47b3c2161baf446ccb87df5ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a90316c6ceddfbb47b3c2161baf446ccb87df5ff"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "e36ed4fd9c1f9ea96f4c42811b252b99cb99f9ed", "filename": "gcc/analyzer/pending-diagnostic.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70d34f2a30a5f1a2a09f547d92243db32d79f3f7/gcc%2Fanalyzer%2Fpending-diagnostic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70d34f2a30a5f1a2a09f547d92243db32d79f3f7/gcc%2Fanalyzer%2Fpending-diagnostic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fpending-diagnostic.cc?ref=70d34f2a30a5f1a2a09f547d92243db32d79f3f7", "patch": "@@ -139,6 +139,12 @@ static bool\n fixup_location_in_macro_p (cpp_hashnode *macro)\n {\n   ht_identifier ident = macro->ident;\n+\n+  /* Don't unwind inside \"alloca\" macro, so that we don't suppress warnings\n+     from it (due to being in system headers).  */\n+  if (ht_ident_eq (ident, \"alloca\"))\n+    return true;\n+\n   /* Don't unwind inside <stdarg.h> macros, so that we don't suppress warnings\n      from them (due to being in system headers).  */\n   if (ht_ident_eq (ident, \"va_start\")"}, {"sha": "e27364a8e8398e3516e5d26970225b846e23091f", "filename": "gcc/testsuite/gcc.dg/analyzer/allocation-size-multiline-3.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70d34f2a30a5f1a2a09f547d92243db32d79f3f7/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-multiline-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70d34f2a30a5f1a2a09f547d92243db32d79f3f7/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-multiline-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-multiline-3.c?ref=70d34f2a30a5f1a2a09f547d92243db32d79f3f7", "patch": "@@ -0,0 +1,44 @@\n+/* Verify that we warn for incorrect uses of \"alloca\" (which may be in a \n+   macro in a system header), and that the output looks correct.  */\n+\n+/* { dg-additional-options \"-fdiagnostics-path-format=inline-events -fdiagnostics-show-caret -fanalyzer-fine-grained\" } */\n+/* { dg-require-effective-target alloca } */\n+\n+#include <stdint.h>\n+#include \"test-alloca.h\"\n+\n+void test_constant_99 (void)\n+{\n+  int32_t *ptr = alloca (99); /* { dg-warning \"allocated buffer size is not a multiple of the pointee's size\" } */\n+}\n+\n+/* { dg-begin-multiline-output \"\" }\n+   int32_t *ptr = alloca (99);\n+                  ^~~~~~\n+  'test_constant_99': events 1-2\n+    |\n+    |   int32_t *ptr = alloca (99);\n+    |                  ^~~~~~\n+    |                  |\n+    |                  (1) allocated 99 bytes here\n+    |                  (2) assigned to 'int32_t *' {aka 'int *'} here; 'sizeof (int32_t {aka int})' is '4'\n+    |\n+   { dg-end-multiline-output \"\" } */\n+\n+void test_symbolic (int n)\n+{\n+  int32_t *ptr = alloca (n * 2); /* { dg-warning \"allocated buffer size is not a multiple of the pointee's size\" } */\n+}\n+\n+/* { dg-begin-multiline-output \"\" }\n+   int32_t *ptr = alloca (n * 2);\n+                  ^~~~~~\n+  'test_symbolic': events 1-2\n+    |\n+    |   int32_t *ptr = alloca (n * 2);\n+    |                  ^~~~~~\n+    |                  |\n+    |                  (1) allocated 'n * 2' bytes here\n+    |                  (2) assigned to 'int32_t *' {aka 'int *'} here; 'sizeof (int32_t {aka int})' is '4'\n+    |\n+   { dg-end-multiline-output \"\" } */"}, {"sha": "f4045f92adce46353308de97e35b5d1cbbb7e501", "filename": "gcc/testsuite/gcc.dg/analyzer/test-alloca.h", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70d34f2a30a5f1a2a09f547d92243db32d79f3f7/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftest-alloca.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70d34f2a30a5f1a2a09f547d92243db32d79f3f7/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftest-alloca.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Ftest-alloca.h?ref=70d34f2a30a5f1a2a09f547d92243db32d79f3f7", "patch": "@@ -0,0 +1,3 @@\n+#pragma GCC system_header\n+\n+#define alloca(X) __builtin_alloca(X)"}]}