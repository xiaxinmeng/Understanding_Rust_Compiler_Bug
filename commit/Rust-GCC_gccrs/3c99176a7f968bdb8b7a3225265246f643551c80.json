{"sha": "3c99176a7f968bdb8b7a3225265246f643551c80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M5OTE3NmE3Zjk2OGJkYjhiN2EzMjI1MjY1MjQ2ZjY0MzU1MWM4MA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2015-02-17T21:25:56Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2015-02-17T21:25:56Z"}, "message": "Add -fipa-cp-alignment\n\nThis patch adds -fipa-cp-alignment to provide a way to enable/disable\nalignment discovery and propagation in IPA-CP.\n\ngcc/\n\n\t* common.opt (fipa-cp-alignment): New.\n\t* ipa-cp.c (ipcp_store_alignment_results): Check\n\tflag_ipa_cp_alignment.\n\t* opts.c (default_options_table): Enable -fipa-cp-alignment for\n\t-O2.\n\t(enable_fdo_optimizations): Set x_flag_ipa_cp_alignment.\n\t* doc/invoke.texi: Document -fipa-cp-alignment.\n\ngcc/testsuite/\n\n\t* gcc.dg/ipa/propalign-3.c: New test.\n\nFrom-SVN: r220773", "tree": {"sha": "d04bf3e89fcf482728834b7a88ea6c6667b145fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d04bf3e89fcf482728834b7a88ea6c6667b145fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c99176a7f968bdb8b7a3225265246f643551c80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c99176a7f968bdb8b7a3225265246f643551c80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c99176a7f968bdb8b7a3225265246f643551c80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c99176a7f968bdb8b7a3225265246f643551c80/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d420206ea581d85273f6d05280e658d3fdab604e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d420206ea581d85273f6d05280e658d3fdab604e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d420206ea581d85273f6d05280e658d3fdab604e"}], "stats": {"total": 100, "additions": 99, "deletions": 1}, "files": [{"sha": "4011f7449196066646f6db518f16d6eb3e05ba77", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c99176a7f968bdb8b7a3225265246f643551c80/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c99176a7f968bdb8b7a3225265246f643551c80/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c99176a7f968bdb8b7a3225265246f643551c80", "patch": "@@ -1,3 +1,13 @@\n+2015-02-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* common.opt (fipa-cp-alignment): New.\n+\t* ipa-cp.c (ipcp_store_alignment_results): Check\n+\tflag_ipa_cp_alignment.\n+\t* opts.c (default_options_table): Enable -fipa-cp-alignment for\n+\t-O2.\n+\t(enable_fdo_optimizations): Set x_flag_ipa_cp_alignment.\n+\t* doc/invoke.texi: Document -fipa-cp-alignment.\n+\n 2015-02-17  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/64793"}, {"sha": "e0d4a1dd828123907cb1f35e57197aafc749473e", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c99176a7f968bdb8b7a3225265246f643551c80/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c99176a7f968bdb8b7a3225265246f643551c80/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=3c99176a7f968bdb8b7a3225265246f643551c80", "patch": "@@ -1458,6 +1458,10 @@ fipa-cp-clone\n Common Report Var(flag_ipa_cp_clone) Optimization\n Perform cloning to make Interprocedural constant propagation stronger\n \n+fipa-cp-alignment\n+Common Report Var(flag_ipa_cp_alignment) Optimization\n+Perform alignment discovery and propagation to make Interprocedural constant propagation stronger\n+\n fipa-profile\n Common Report Var(flag_ipa_profile) Init(0) Optimization\n Perform interprocedural profile propagation"}, {"sha": "931002e2b913dad2472eceb0966a253c93947a98", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c99176a7f968bdb8b7a3225265246f643551c80/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c99176a7f968bdb8b7a3225265246f643551c80/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=3c99176a7f968bdb8b7a3225265246f643551c80", "patch": "@@ -387,7 +387,7 @@ Objective-C and Objective-C++ Dialects}.\n -fgcse-sm -fhoist-adjacent-loads -fif-conversion @gol\n -fif-conversion2 -findirect-inlining @gol\n -finline-functions -finline-functions-called-once -finline-limit=@var{n} @gol\n--finline-small-functions -fipa-cp -fipa-cp-clone @gol\n+-finline-small-functions -fipa-cp -fipa-cp-clone -fipa-cp-alignment @gol\n -fipa-pta -fipa-profile -fipa-pure-const -fipa-reference -fipa-icf @gol\n -fira-algorithm=@var{algorithm} @gol\n -fira-region=@var{region} -fira-hoist-pressure @gol\n@@ -7323,6 +7323,7 @@ also turns on the following optimization flags:\n -finline-small-functions @gol\n -findirect-inlining @gol\n -fipa-cp @gol\n+-fipa-cp-alignment @gol\n -fipa-sra @gol\n -fipa-icf @gol\n -fisolate-erroneous-paths-dereference @gol\n@@ -8302,6 +8303,14 @@ it may significantly increase code size\n (see @option{--param ipcp-unit-growth=@var{value}}).\n This flag is enabled by default at @option{-O3}.\n \n+@item -fipa-cp-alignment\n+@opindex -fipa-cp-alignment\n+When enabled, this optimization propagates alignment of function\n+parameters to support better vectorization and string operations.\n+\n+This flag is enabled by default at @option{-O2} and @option{-Os}.  It\n+requires that @option{-fipa-cp} is enabled.\n+\n @item -fipa-icf\n @opindex fipa-icf\n Perform Identical Code Folding for functions and read-only variables."}, {"sha": "103ac99a6f2e2a9ec0301fe954c4e06d8b6abd53", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c99176a7f968bdb8b7a3225265246f643551c80/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c99176a7f968bdb8b7a3225265246f643551c80/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=3c99176a7f968bdb8b7a3225265246f643551c80", "patch": "@@ -4323,6 +4323,15 @@ ipcp_store_alignment_results (void)\n     bool dumped_sth = false;\n     bool found_useful_result = false;\n \n+    if (!opt_for_fn (node->decl, flag_ipa_cp_alignment))\n+      {\n+\tif (dump_file)\n+\t  fprintf (dump_file, \"Not considering %s for alignment discovery \"\n+\t\t   \"and propagate; -fipa-cp-alignment: disabled.\\n\",\n+\t\t   node->name ());\n+\tcontinue;\n+      }\n+\n    if (info->ipcp_orig_node)\n       info = IPA_NODE_REF (info->ipcp_orig_node);\n "}, {"sha": "39c190d0a17cb13c297ea3d8c466bcc0ce9bef1d", "filename": "gcc/opts.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c99176a7f968bdb8b7a3225265246f643551c80/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c99176a7f968bdb8b7a3225265246f643551c80/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=3c99176a7f968bdb8b7a3225265246f643551c80", "patch": "@@ -493,6 +493,7 @@ static const struct default_options default_options_table[] =\n     { OPT_LEVELS_2_PLUS, OPT_ftree_pre, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_ftree_switch_conversion, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_fipa_cp, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS, OPT_fipa_cp_alignment, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_fdevirtualize, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_fdevirtualize_speculatively, NULL, 1 },\n     { OPT_LEVELS_2_PLUS, OPT_fipa_sra, NULL, 1 },\n@@ -1330,6 +1331,9 @@ enable_fdo_optimizations (struct gcc_options *opts,\n   if (!opts_set->x_flag_ipa_cp_clone\n       && value && opts->x_flag_ipa_cp)\n     opts->x_flag_ipa_cp_clone = value;\n+  if (!opts_set->x_flag_ipa_cp_alignment\n+      && value && opts->x_flag_ipa_cp)\n+    opts->x_flag_ipa_cp_alignment = value;\n   if (!opts_set->x_flag_predictive_commoning)\n     opts->x_flag_predictive_commoning = value;\n   if (!opts_set->x_flag_unswitch_loops)"}, {"sha": "69c7c50e0eaf3233c709bde1c3dad35e6eff2b8c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c99176a7f968bdb8b7a3225265246f643551c80/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c99176a7f968bdb8b7a3225265246f643551c80/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c99176a7f968bdb8b7a3225265246f643551c80", "patch": "@@ -1,3 +1,7 @@\n+2015-02-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* gcc.dg/ipa/propalign-3.c: New test.\n+\n 2015-02-17  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/64793"}, {"sha": "e647cb17befe3ce50ef375f0861b26218c82cb71", "filename": "gcc/testsuite/gcc.dg/ipa/propalign-3.c", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c99176a7f968bdb8b7a3225265246f643551c80/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpropalign-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c99176a7f968bdb8b7a3225265246f643551c80/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpropalign-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpropalign-3.c?ref=3c99176a7f968bdb8b7a3225265246f643551c80", "patch": "@@ -0,0 +1,58 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-ipa-cp-alignment -fno-early-inlining -fdump-ipa-cp -fdump-tree-optimized\" } */\n+\n+#include <stdint.h>\n+\n+extern int fail_the_test(void *);\n+extern int pass_the_test(void *);\n+extern int diversion (void *);\n+\n+struct somestruct\n+{\n+  void *whee;\n+  void *oops;\n+};\n+\n+struct container\n+{\n+  struct somestruct first;\n+  struct somestruct buf[32];\n+};\n+\n+static int __attribute__((noinline))\n+foo (void *p)\n+{\n+  uintptr_t a = (uintptr_t) p;\n+\n+  if (a % 4)\n+    return fail_the_test (p);\n+  else\n+    return pass_the_test (p);\n+}\n+\n+int\n+bar (void)\n+{\n+  struct container c;\n+  return foo (c.buf);\n+}\n+\n+\n+static int\n+through (struct somestruct *p)\n+{\n+  diversion (p);\n+  return foo (&p[16]);\n+}\n+\n+int\n+bar2 (void)\n+{\n+  struct container c;\n+  through (c.buf);\n+}\n+\n+/* { dg-final { scan-ipa-dump-not \"Adjusting alignment of param\" \"cp\" } } */\n+/* { dg-final { scan-tree-dump \"fail_the_test\" \"optimized\" } } */\n+/* { dg-final { cleanup-ipa-dump \"cp\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}]}