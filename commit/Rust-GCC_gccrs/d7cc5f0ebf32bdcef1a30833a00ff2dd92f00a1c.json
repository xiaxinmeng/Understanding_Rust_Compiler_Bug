{"sha": "d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdjYzVmMGViZjMyYmRjZWYxYTMwODMzYTAwZmYyZGQ5MmYwMGExYw==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-09-18T08:45:33Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-09-18T08:45:33Z"}, "message": "[multiple changes]\n\n2017-09-18  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* freeze.adb, sem_ch6.adb, sem_res.adb: Minor reformatting.\n\n2017-09-18  Piotr Trojanek  <trojanek@adacore.com>\n\n\t* einfo.ads (Is_Imported): Update comment, as this\n\troutine also applies to constants.\n\n2017-09-18  Yannick Moy  <moy@adacore.com>\n\n\t* sem_util.adb (Find_Placement_In_State_Space): Allow generic package\n\tholding state.\n\n2017-09-18  Justin Squirek  <squirek@adacore.com>\n\n\t* sem_prag.adb (Is_Non_Significant_Pragma_Reference): Change the\n\tconstant indication for Pragma_Linker_Section.\n\nFrom-SVN: r252910", "tree": {"sha": "82ac272e71bdba69744dced6bfeb5409cafa36af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82ac272e71bdba69744dced6bfeb5409cafa36af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c/comments", "author": null, "committer": null, "parents": [{"sha": "677d7278a316ef461a6c8e2b501c285d2cf356f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/677d7278a316ef461a6c8e2b501c285d2cf356f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/677d7278a316ef461a6c8e2b501c285d2cf356f7"}], "stats": {"total": 53, "additions": 40, "deletions": 13}, "files": [{"sha": "a34f2f224080e250c6f7ed951a6ad4d78ad92184", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c", "patch": "@@ -1,3 +1,22 @@\n+2017-09-18  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* freeze.adb, sem_ch6.adb, sem_res.adb: Minor reformatting.\n+\n+2017-09-18  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* einfo.ads (Is_Imported): Update comment, as this\n+\troutine also applies to constants.\n+\n+2017-09-18  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_util.adb (Find_Placement_In_State_Space): Allow generic package\n+\tholding state.\n+\n+2017-09-18  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_prag.adb (Is_Non_Significant_Pragma_Reference): Change the\n+\tconstant indication for Pragma_Linker_Section.\n+\n 2017-09-18  Bob Duff  <duff@adacore.com>\n \n \tAlternate fix for PR ada/71358"}, {"sha": "22a8b737fec4f412cfaa0c458badad86096273a5", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c", "patch": "@@ -2684,9 +2684,9 @@ package Einfo is\n \n --    Is_Imported (Flag24)\n --       Defined in all entities. Set if the entity is imported. For now we\n---       only allow the import of exceptions, functions, procedures, packages.\n---       and variables. Exceptions, packages and types can only be imported in\n---       the Java VM implementation, which is retired.\n+--       only allow the import of exceptions, functions, procedures, packages,\n+--       constants, and variables. Exceptions, packages, and types can only be\n+--       imported in the Java VM implementation, which is retired.\n \n --    Is_Incomplete_Or_Private_Type (synthesized)\n --       Applies to all entities, true for private and incomplete types"}, {"sha": "794fdf3d09555548549411e442136623bb9a71fd", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c", "patch": "@@ -8237,6 +8237,7 @@ package body Freeze is\n          if No (Extra_Formals (E)) then\n             Create_Extra_Formals (E);\n          end if;\n+\n          Set_Mechanisms (E);\n \n          --  If this is convention Ada and a Valued_Procedure, that's odd"}, {"sha": "5ca3584cf3f63238f82005c12c61d1ef467a9e68", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c", "patch": "@@ -751,8 +751,8 @@ package body Sem_Ch6 is\n         and then Is_Tagged_Type (Etype (Def_Id))\n       then\n          Check_Dynamically_Tagged_Expression\n-           (Expr => Expr,\n-            Typ  => Etype (Def_Id),\n+           (Expr        => Expr,\n+            Typ         => Etype (Def_Id),\n             Related_Nod => Original_Node (N));\n       end if;\n \n@@ -3233,8 +3233,8 @@ package body Sem_Ch6 is\n          --------------------\n \n          function Mask_Type_Refs (Node : Node_Id) return Traverse_Result is\n-\n             procedure Mask_Type (Typ : Entity_Id);\n+            --  ??? what does this do?\n \n             ---------------\n             -- Mask_Type --\n@@ -3256,6 +3256,8 @@ package body Sem_Ch6 is\n                end if;\n             end Mask_Type;\n \n+         --  Start of processing for Mask_Type_Refs\n+\n          begin\n             if Is_Entity_Name (Node) and then Present (Entity (Node)) then\n                Mask_Type (Etype (Entity (Node)));\n@@ -3275,8 +3277,13 @@ package body Sem_Ch6 is\n \n          procedure Mask_References is new Traverse_Proc (Mask_Type_Refs);\n \n+         --  Local variables\n+\n          Return_Stmt : constant Node_Id :=\n                          First (Statements (Handled_Statement_Sequence (N)));\n+\n+      --  Start of processing for Mask_Unfrozen_Types\n+\n       begin\n          pragma Assert (Nkind (Return_Stmt) = N_Simple_Return_Statement);\n \n@@ -3710,9 +3717,9 @@ package body Sem_Ch6 is\n \n          if not Is_Frozen (Spec_Id)\n            and then (Expander_Active\n-                       or else ASIS_Mode\n-                       or else (Operating_Mode = Check_Semantics\n-                                  and then Serious_Errors_Detected = 0))\n+                      or else ASIS_Mode\n+                      or else (Operating_Mode = Check_Semantics\n+                                and then Serious_Errors_Detected = 0))\n          then\n             --  The body generated for an expression function that is not a\n             --  completion is a freeze point neither for the profile nor for"}, {"sha": "69338d4d29b092757177c7e73038d6b498b03ce0", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c", "patch": "@@ -29548,7 +29548,7 @@ package body Sem_Prag is\n       Pragma_Linker_Constructor             => -1,\n       Pragma_Linker_Destructor              => -1,\n       Pragma_Linker_Options                 => -1,\n-      Pragma_Linker_Section                 =>  0,\n+      Pragma_Linker_Section                 => -1,\n       Pragma_List                           =>  0,\n       Pragma_Lock_Free                      =>  0,\n       Pragma_Locking_Policy                 =>  0,"}, {"sha": "6e839580fa333941f09f68c24cce22a0b9a74205", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c", "patch": "@@ -11467,8 +11467,8 @@ package body Sem_Res is\n             S : constant Entity_Id := Current_Scope_No_Loops;\n          begin\n             if Ekind (S) = E_Function\n-              and then Nkind (Original_Node (Unit_Declaration_Node (S)))\n-                                                        = N_Expression_Function\n+              and then Nkind (Original_Node (Unit_Declaration_Node (S))) =\n+                         N_Expression_Function\n             then\n                return;\n             end if;"}, {"sha": "69819ed33409e2225abdb5e5972381b4e569f8a6", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=d7cc5f0ebf32bdcef1a30833a00ff2dd92f00a1c", "patch": "@@ -7922,7 +7922,7 @@ package body Sem_Util is\n \n       Context := Scope (Item_Id);\n       while Present (Context) and then Context /= Standard_Standard loop\n-         if Ekind (Context) = E_Package then\n+         if Is_Package_Or_Generic_Package (Context) then\n             Pack_Id := Context;\n \n             --  A package body is a cut off point for the traversal as the item"}]}