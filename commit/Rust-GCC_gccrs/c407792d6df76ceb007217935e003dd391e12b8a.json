{"sha": "c407792d6df76ceb007217935e003dd391e12b8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQwNzc5MmQ2ZGY3NmNlYjAwNzIxNzkzNWUwMDNkZDM5MWUxMmI4YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-23T02:33:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-23T02:33:12Z"}, "message": "(build_delete): If the TYPE_DOMAIN is not set, give an error instead of core dumping.\n\n(build_delete): If the TYPE_DOMAIN is not set, give an error instead\nof core dumping.\n(build_vec_delete): Resolve an offset ref before we try to use it.\n(member_init_ok_or_else): Don't allow initialization of an ancestor's member\nfrom within a constructor.\n\nFrom-SVN: r10042", "tree": {"sha": "b538526e14eebabcf7985aef85e61b47f95e5c3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b538526e14eebabcf7985aef85e61b47f95e5c3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c407792d6df76ceb007217935e003dd391e12b8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c407792d6df76ceb007217935e003dd391e12b8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c407792d6df76ceb007217935e003dd391e12b8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c407792d6df76ceb007217935e003dd391e12b8a/comments", "author": null, "committer": null, "parents": [{"sha": "75b0bbced9115ced2175703e235ee4f6c1e777e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b0bbced9115ced2175703e235ee4f6c1e777e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75b0bbced9115ced2175703e235ee4f6c1e777e3"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "137c612cc87144719cdfd37aa6a521458a0480bb", "filename": "gcc/cp/init.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c407792d6df76ceb007217935e003dd391e12b8a/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c407792d6df76ceb007217935e003dd391e12b8a/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=c407792d6df76ceb007217935e003dd391e12b8a", "patch": "@@ -840,8 +840,12 @@ member_init_ok_or_else (field, type, member_name)\n   if (DECL_CONTEXT (field) != type\n       && TYPE_NEEDS_CONSTRUCTING (DECL_CONTEXT (field)))\n     {\n-      cp_error (\"member `%D' comes from base class needing constructor\",\n-\t\tfield);\n+      if (current_function_decl && DECL_CONSTRUCTOR_P (current_function_decl))\n+\tcp_error (\"initialization of `%D' inside constructor for `%T'\",\n+\t\t  field, type);\n+      else\n+\tcp_error (\"member `%D' comes from base class needing constructor\",\n+\t\t  field);\n       return 0;\n     }\n   if (TREE_STATIC (field))\n@@ -3592,6 +3596,11 @@ build_delete (type, addr, auto_delete, flags, use_global_delete)\n     handle_array:\n       if (TREE_SIDE_EFFECTS (addr))\n \taddr = save_expr (addr);\n+      if (TYPE_DOMAIN (type) == NULL_TREE)\n+\t{\n+\t  error (\"unknown array size in delete\");\n+\t  return error_mark_node;\n+\t}\n       return build_vec_delete (addr, array_type_nelts (type),\n \t\t\t       c_sizeof_nowarn (TREE_TYPE (type)),\n \t\t\t       auto_delete, integer_two_node,\n@@ -3932,9 +3941,8 @@ build_vec_delete (base, maxindex, elt_size, auto_delete_vec, auto_delete,\n      tree auto_delete_vec, auto_delete;\n      int use_global_delete;\n {\n-  tree ptype = TREE_TYPE (base);\n-  tree type;\n-  tree virtual_size;\n+  tree ptype, type, virtual_size;\n+\n   /* Temporary variables used by the loop.  */\n   tree tbase, size_exp, tbase_init;\n \n@@ -3957,6 +3965,11 @@ build_vec_delete (base, maxindex, elt_size, auto_delete_vec, auto_delete,\n   /* This is the BLOCK to record the symbol binding for debugging.  */\n   tree block;\n \n+  if (TREE_CODE (base) == OFFSET_REF)\n+    base = resolve_offset_ref (base);\n+\n+  ptype = TREE_TYPE (base);\n+\n   base = stabilize_reference (base);\n \n   /* Since we can use base many times, save_expr it. */"}]}