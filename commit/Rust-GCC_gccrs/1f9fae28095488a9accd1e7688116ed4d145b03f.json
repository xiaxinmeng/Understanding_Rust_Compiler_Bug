{"sha": "1f9fae28095488a9accd1e7688116ed4d145b03f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY5ZmFlMjgwOTU0ODhhOWFjY2QxZTc2ODgxMTZlZDRkMTQ1YjAzZg==", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@gcc.gnu.org", "date": "2019-11-27T09:08:20Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@gcc.gnu.org", "date": "2019-11-27T09:08:20Z"}, "message": "[PATCH] Fix PR91790 by considering different first_stmt_info for realign\n\nAs PR91790 exposed, when we have one slp node whose first_stmt_info_for_drptr\nis different from first_stmt_info, it's possible that the first_stmt DR isn't\ninitialized yet before stmt SLP_TREE_SCALAR_STMTS[0] of slp node. So we\nshouldn't use first_stmt_info for vect_setup_realignment, instead we can use\nthe one based on first_stmt_info_for_drptr DR with additional adjustment by\nbumping the distance from first_stmt DR.\n\ngcc/ChangeLog\n\n2019-11-27  Kewen Lin  <linkw@gcc.gnu.org>\n\n    PR tree-optimization/91790\n    * gcc/tree-vect-stmts.c (vectorizable_load): Use the adjusted DR for\n    vect_setup_realignment when first_stmt_info is different from\n    first_stmt_info_for_drptr.\n\nFrom-SVN: r278760", "tree": {"sha": "48e7238b193350c87b3ef4042f14cf3f72c8d8c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48e7238b193350c87b3ef4042f14cf3f72c8d8c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f9fae28095488a9accd1e7688116ed4d145b03f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f9fae28095488a9accd1e7688116ed4d145b03f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f9fae28095488a9accd1e7688116ed4d145b03f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f9fae28095488a9accd1e7688116ed4d145b03f/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66143cdfd1a3575ca5d92a6af788a4eb5c83f1b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66143cdfd1a3575ca5d92a6af788a4eb5c83f1b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66143cdfd1a3575ca5d92a6af788a4eb5c83f1b4"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "78b2f46c2d9ff682ecb6272a4f182402a4eebb05", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9fae28095488a9accd1e7688116ed4d145b03f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9fae28095488a9accd1e7688116ed4d145b03f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f9fae28095488a9accd1e7688116ed4d145b03f", "patch": "@@ -1,3 +1,10 @@\n+2019-11-27  Kewen Lin  <linkw@gcc.gnu.org>\n+\n+\tPR tree-optimization/91790\n+\t* gcc/tree-vect-stmts.c (vectorizable_load): Use the adjusted\n+\tDR for vect_setup_realignment when first_stmt_info is different\n+\tfrom first_stmt_info_for_drptr.\n+\n 2019-11-27  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/92645"}, {"sha": "f555fccde8ef2fe0a7cc0edeb17fa833c4c71a0e", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9fae28095488a9accd1e7688116ed4d145b03f/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9fae28095488a9accd1e7688116ed4d145b03f/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=1f9fae28095488a9accd1e7688116ed4d145b03f", "patch": "@@ -9274,18 +9274,27 @@ vectorizable_load (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n       compute_in_loop = true;\n     }\n \n+  bool diff_first_stmt_info\n+    = first_stmt_info_for_drptr && first_stmt_info != first_stmt_info_for_drptr;\n+\n   if ((alignment_support_scheme == dr_explicit_realign_optimized\n        || alignment_support_scheme == dr_explicit_realign)\n       && !compute_in_loop)\n     {\n-      msq = vect_setup_realignment (first_stmt_info, gsi, &realignment_token,\n-\t\t\t\t    alignment_support_scheme, NULL_TREE,\n-\t\t\t\t    &at_loop);\n+      /* If we have different first_stmt_info, we can't set up realignment\n+\t here, since we can't guarantee first_stmt_info DR has been\n+\t initialized yet, use first_stmt_info_for_drptr DR by bumping the\n+\t distance from first_stmt_info DR instead as below.  */\n+      if (!diff_first_stmt_info)\n+\tmsq = vect_setup_realignment (first_stmt_info, gsi, &realignment_token,\n+\t\t\t\t      alignment_support_scheme, NULL_TREE,\n+\t\t\t\t      &at_loop);\n       if (alignment_support_scheme == dr_explicit_realign_optimized)\n \t{\n \t  phi = as_a <gphi *> (SSA_NAME_DEF_STMT (msq));\n \t  byte_offset = size_binop (MINUS_EXPR, TYPE_SIZE_UNIT (vectype),\n \t\t\t\t    size_one_node);\n+\t  gcc_assert (!first_stmt_info_for_drptr);\n \t}\n     }\n   else\n@@ -9341,8 +9350,7 @@ vectorizable_load (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n \t      dataref_ptr = unshare_expr (DR_BASE_ADDRESS (first_dr_info->dr));\n \t      dataref_offset = build_int_cst (ref_type, 0);\n \t    }\n-\t  else if (first_stmt_info_for_drptr\n-\t\t   && first_stmt_info != first_stmt_info_for_drptr)\n+\t  else if (diff_first_stmt_info)\n \t    {\n \t      dataref_ptr\n \t\t= vect_create_data_ref_ptr (first_stmt_info_for_drptr,\n@@ -9359,6 +9367,14 @@ vectorizable_load (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n \t\t\t\t\t    DR_INIT (ptrdr)));\n \t      dataref_ptr = bump_vector_ptr (dataref_ptr, ptr_incr, gsi,\n \t\t\t\t\t     stmt_info, diff);\n+\t      if (alignment_support_scheme == dr_explicit_realign)\n+\t\t{\n+\t\t  msq = vect_setup_realignment (first_stmt_info_for_drptr, gsi,\n+\t\t\t\t\t\t&realignment_token,\n+\t\t\t\t\t\talignment_support_scheme,\n+\t\t\t\t\t\tdataref_ptr, &at_loop);\n+\t\t  gcc_assert (!compute_in_loop);\n+\t\t}\n \t    }\n \t  else if (STMT_VINFO_GATHER_SCATTER_P (stmt_info))\n \t    vect_get_gather_scatter_ops (loop, stmt_info, &gs_info,"}]}