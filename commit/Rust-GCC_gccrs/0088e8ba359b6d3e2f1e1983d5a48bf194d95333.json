{"sha": "0088e8ba359b6d3e2f1e1983d5a48bf194d95333", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA4OGU4YmEzNTliNmQzZTJmMWUxOTgzZDVhNDhiZjE5NGQ5NTMzMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-03T11:35:45Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-03T11:35:45Z"}, "message": "(ashlsi3, ashrsi3, lshrsi3): Use arith_operand instead of shift_operand.\n\n(ashlsi3, ashrsi3, lshrsi3): Use arith_operand instead of\nshift_operand.  Truncate shift counts to 5 bits.\n\nFrom-SVN: r6182", "tree": {"sha": "4d33c2b84ce49b744e624bec18ea5f7d756d11a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d33c2b84ce49b744e624bec18ea5f7d756d11a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0088e8ba359b6d3e2f1e1983d5a48bf194d95333", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0088e8ba359b6d3e2f1e1983d5a48bf194d95333", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0088e8ba359b6d3e2f1e1983d5a48bf194d95333", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0088e8ba359b6d3e2f1e1983d5a48bf194d95333/comments", "author": null, "committer": null, "parents": [{"sha": "1438de588d378797758bddf8126d19e1f70f009b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1438de588d378797758bddf8126d19e1f70f009b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1438de588d378797758bddf8126d19e1f70f009b"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "126074bf9d3c5ce46e37864f62d0837b23370a55", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 28, "deletions": 7, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0088e8ba359b6d3e2f1e1983d5a48bf194d95333/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0088e8ba359b6d3e2f1e1983d5a48bf194d95333/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=0088e8ba359b6d3e2f1e1983d5a48bf194d95333", "patch": "@@ -1,5 +1,5 @@\n ;;- Machine description for SPARC chip for GNU C compiler\n-;;   Copyright (C) 1987, 1988, 1989, 1992 Free Software Foundation, Inc.\n+;;   Copyright (C) 1987, 1988, 1989, 1992, 1993 Free Software Foundation, Inc.\n ;;   Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n ;; This file is part of GNU CC.\n@@ -2525,9 +2525,16 @@\n (define_insn \"ashlsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(ashift:SI (match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t   (match_operand:SI 2 \"shift_operand\" \"rI\")))]\n+\t\t   (match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"\"\n-  \"sll %1,%2,%0\")\n+  \"*\n+{\n+  if (GET_CODE (operands[2]) == CONST_INT\n+      && (unsigned) INTVAL (operands[2]) > 31)\n+    operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n+\n+  return \\\"sll %1,%2,%0\\\";\n+}\")\n \n (define_insn \"\"\n   [(set (reg:CC_NOOV 0)\n@@ -2551,16 +2558,30 @@\n (define_insn \"ashrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t     (match_operand:SI 2 \"shift_operand\" \"rI\")))]\n+\t\t     (match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"\"\n-  \"sra %1,%2,%0\")\n+  \"*\n+{\n+  if (GET_CODE (operands[2]) == CONST_INT\n+      && (unsigned) INTVAL (operands[2]) > 31)\n+    operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n+\n+  return \\\"sra %1,%2,%0\\\";\n+}\")\n \n (define_insn \"lshrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(lshiftrt:SI (match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t     (match_operand:SI 2 \"shift_operand\" \"rI\")))]\n+\t\t     (match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"\"\n-  \"srl %1,%2,%0\")\n+  \"*\n+{\n+  if (GET_CODE (operands[2]) == CONST_INT\n+      && (unsigned) INTVAL (operands[2]) > 31)\n+    operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n+\n+  return \\\"srl %1,%2,%0\\\";\n+}\")\n \f\n ;; Unconditional and other jump instructions\n ;; On the Sparc, by setting the annul bit on an unconditional branch, the"}]}