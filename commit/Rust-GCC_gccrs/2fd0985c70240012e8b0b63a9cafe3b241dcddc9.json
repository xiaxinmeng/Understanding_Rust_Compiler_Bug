{"sha": "2fd0985c70240012e8b0b63a9cafe3b241dcddc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZkMDk4NWM3MDI0MDAxMmU4YjBiNjNhOWNhZmUzYjI0MWRjZGRjOQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2013-09-02T19:28:01Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2013-09-02T19:28:01Z"}, "message": "re PR ipa/58106 (ICE: in ipa_edge_duplication_hook, at ipa-prop.c:2839)\n\n2013-09-02  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/58106\n\t* ipa-prop.c (ipa_edge_duplication_hook): Always put new rdesc to the\n\tlinked list.  When finding the correct duplicate, also consider also\n\tthe caller in additon to its inlined_to node.\n\ntestsuite/\n\t* gcc.dg/ipa/pr58106.c: New test.\n\nFrom-SVN: r202184", "tree": {"sha": "47a031382aaf04ff140d1c3ab0844d0492fca18d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47a031382aaf04ff140d1c3ab0844d0492fca18d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fd0985c70240012e8b0b63a9cafe3b241dcddc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fd0985c70240012e8b0b63a9cafe3b241dcddc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fd0985c70240012e8b0b63a9cafe3b241dcddc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fd0985c70240012e8b0b63a9cafe3b241dcddc9/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "91bd4114a73ca69e5ce3d904282b402b9f2128d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91bd4114a73ca69e5ce3d904282b402b9f2128d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91bd4114a73ca69e5ce3d904282b402b9f2128d3"}], "stats": {"total": 80, "additions": 72, "deletions": 8}, "files": [{"sha": "ab141db880ffe89da5eb3013dfdce6ea50dafaa2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fd0985c70240012e8b0b63a9cafe3b241dcddc9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fd0985c70240012e8b0b63a9cafe3b241dcddc9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2fd0985c70240012e8b0b63a9cafe3b241dcddc9", "patch": "@@ -1,3 +1,10 @@\n+2013-09-02  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/58106\n+\t* ipa-prop.c (ipa_edge_duplication_hook): Always put new rdesc to the\n+\tlinked list.  When finding the correct duplicate, also consider also\n+\tthe caller in additon to its inlined_to node.\n+\n 2013-09-02  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64-simd-builtins.def"}, {"sha": "177283c72673d89bb8d2547f78fa5a7b3a9c3a9b", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fd0985c70240012e8b0b63a9cafe3b241dcddc9/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fd0985c70240012e8b0b63a9cafe3b241dcddc9/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=2fd0985c70240012e8b0b63a9cafe3b241dcddc9", "patch": "@@ -3015,11 +3015,8 @@ ipa_edge_duplication_hook (struct cgraph_edge *src, struct cgraph_edge *dst,\n \t\t= (struct ipa_cst_ref_desc *) pool_alloc (ipa_refdesc_pool);\n \t      dst_rdesc->cs = dst;\n \t      dst_rdesc->refcount = src_rdesc->refcount;\n-\t      if (dst->caller->global.inlined_to)\n-\t\t{\n-\t\t  dst_rdesc->next_duplicate = src_rdesc->next_duplicate;\n-\t\t  src_rdesc->next_duplicate = dst_rdesc;\n-\t\t}\n+\t      dst_rdesc->next_duplicate = src_rdesc->next_duplicate;\n+\t      src_rdesc->next_duplicate = dst_rdesc;\n \t      dst_jf->value.constant.rdesc = dst_rdesc;\n \t    }\n \t  else\n@@ -3034,9 +3031,14 @@ ipa_edge_duplication_hook (struct cgraph_edge *src, struct cgraph_edge *dst,\n \t      for (dst_rdesc = src_rdesc->next_duplicate;\n \t\t   dst_rdesc;\n \t\t   dst_rdesc = dst_rdesc->next_duplicate)\n-\t\tif (dst_rdesc->cs->caller->global.inlined_to\n-\t\t    == dst->caller->global.inlined_to)\n-\t\t  break;\n+\t\t{\n+\t\t  struct cgraph_node *top;\n+\t\t  top = dst_rdesc->cs->caller->global.inlined_to\n+\t\t    ? dst_rdesc->cs->caller->global.inlined_to\n+\t\t    : dst_rdesc->cs->caller;\n+\t\t  if (dst->caller->global.inlined_to == top)\n+\t\t    break;\n+\t\t}\n \t      gcc_assert (dst_rdesc);\n \t      dst_jf->value.constant.rdesc = dst_rdesc;\n \t    }"}, {"sha": "dd53ef667e38089424031e6fddc4ba9a8cc3816b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fd0985c70240012e8b0b63a9cafe3b241dcddc9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fd0985c70240012e8b0b63a9cafe3b241dcddc9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2fd0985c70240012e8b0b63a9cafe3b241dcddc9", "patch": "@@ -1,3 +1,8 @@\n+2013-09-02  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/58106\n+\t* gcc.dg/ipa/pr58106.c: New test.\n+\n 2013-09-02  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* gcc.target/aarch64/scalar_intrinsics.c"}, {"sha": "b83353c4e9af755aec50242dfa1aecd18a44e5b0", "filename": "gcc/testsuite/gcc.dg/ipa/pr58106.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fd0985c70240012e8b0b63a9cafe3b241dcddc9/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr58106.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fd0985c70240012e8b0b63a9cafe3b241dcddc9/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr58106.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr58106.c?ref=2fd0985c70240012e8b0b63a9cafe3b241dcddc9", "patch": "@@ -0,0 +1,50 @@\n+/* PR 58106 testcase.  Verify that rdesc chain creating and lookup works with\n+   recursive inlining and master clone creation.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\"  } */\n+\n+typedef struct rtx_def *rtx;\n+enum rtx_code {\n+  LAST_AND_UNUSED_RTX_CODE};\n+extern const char * const rtx_format[((int) LAST_AND_UNUSED_RTX_CODE)];\n+struct rtx_def {\n+  enum rtx_code code;\n+};\n+typedef int (*rtx_function) (rtx *, void *);\n+extern int for_each_rtx (rtx *, rtx_function, void *);\n+int\n+replace_label (rtx *x, void *data)\n+{\n+  rtx l = *x;\n+  if (l == (rtx) 0)\n+    {\n+ {\n+   rtx new_c, new_l;\n+   for_each_rtx (&new_c, replace_label, data);\n+ }\n+    }\n+}\n+static int\n+for_each_rtx_1 (rtx exp, int n, rtx_function f, void *data)\n+{\n+  int result, i, j;\n+  const char *format = (rtx_format[(int) (((enum rtx_code) (exp)->code))]);\n+  rtx *x;\n+  for (; format[n] != '\\0'; n++)\n+    {\n+      switch (format[n])\n+ {\n+ case 'e':\n+   result = (*f) (x, data);\n+     {\n+       result = for_each_rtx_1 (*x, i, f, data);\n+     }\n+ }\n+    }\n+}\n+int\n+for_each_rtx (rtx *x, rtx_function f, void *data)\n+{\n+  int i;\n+  return for_each_rtx_1 (*x, i, f, data);\n+}"}]}