{"sha": "e9bf587a8f548c1e05658021d144a5414485a731", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTliZjU4N2E4ZjU0OGMxZTA1NjU4MDIxZDE0NGE1NDE0NDg1YTczMQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-10-21T01:28:58Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-10-21T01:28:58Z"}, "message": "Index: objc/ChangeLog\n2005-10-20  Geoffrey Keating  <geoffk@apple.com>\n\n\t* objc-act.c (synth_module_prologue): Clear TREE_NOTHROW\n\ton objc_msgSend and like builtin functions.\n\nIndex: testsuite/ChangeLog\n2005-10-20  Geoffrey Keating  <geoffk@apple.com>\n\n\t* obj-c++.dg/except-1.mm: New.\n\nFrom-SVN: r105704", "tree": {"sha": "bb20d5cb850a6fdcac2b45205946cebd71cf72e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb20d5cb850a6fdcac2b45205946cebd71cf72e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9bf587a8f548c1e05658021d144a5414485a731", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9bf587a8f548c1e05658021d144a5414485a731", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9bf587a8f548c1e05658021d144a5414485a731", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9bf587a8f548c1e05658021d144a5414485a731/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9738dadd2afb1cae817ede2b8b2c258d80566c38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9738dadd2afb1cae817ede2b8b2c258d80566c38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9738dadd2afb1cae817ede2b8b2c258d80566c38"}], "stats": {"total": 89, "additions": 89, "deletions": 0}, "files": [{"sha": "7418b0bc69d4a83b1e26c94c12953d854d1bb2cc", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bf587a8f548c1e05658021d144a5414485a731/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bf587a8f548c1e05658021d144a5414485a731/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=e9bf587a8f548c1e05658021d144a5414485a731", "patch": "@@ -1,3 +1,8 @@\n+2005-10-20  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* objc-act.c (synth_module_prologue): Clear TREE_NOTHROW\n+\ton objc_msgSend and like builtin functions.\n+\n 2005-10-17  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* objc-act.c (objc_build_component_ref): Adjust call to "}, {"sha": "f889c22e767be85ed2071c0180c5f1c6c5b478d4", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bf587a8f548c1e05658021d144a5414485a731/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bf587a8f548c1e05658021d144a5414485a731/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=e9bf587a8f548c1e05658021d144a5414485a731", "patch": "@@ -1597,6 +1597,10 @@ synth_module_prologue (void)\n \t\t       (xref_tag (RECORD_TYPE,\n \t\t\t\t  get_identifier (UTAG_IVAR_LIST)));\n \n+  /* TREE_NOTHROW is cleared for the message-sending functions,\n+     because the function that gets called can throw in Obj-C++, or\n+     could itself call something that can throw even in Obj-C.  */\n+\n   if (flag_next_runtime)\n     {\n       /* NB: In order to call one of the ..._stret (struct-returning)\n@@ -1626,12 +1630,21 @@ synth_module_prologue (void)\n \t\t\t\t\t\t type, 0, NOT_BUILT_IN,\n \t\t\t\t\t\t NULL, NULL_TREE);\n \n+      /* These can throw, because the function that gets called can throw\n+\t in Obj-C++, or could itself call something that can throw even\n+\t in Obj-C.  */\n+      TREE_NOTHROW (umsg_decl) = 0;\n+      TREE_NOTHROW (umsg_nonnil_decl) = 0;\n+      TREE_NOTHROW (umsg_stret_decl) = 0;\n+      TREE_NOTHROW (umsg_nonnil_stret_decl) = 0;\n+\n       /* id objc_msgSend_Fast (id, SEL, ...)\n \t   __attribute__ ((hard_coded_address (OFFS_MSGSEND_FAST))); */\n #ifdef OFFS_MSGSEND_FAST\n       umsg_fast_decl = builtin_function (TAG_MSGSEND_FAST,\n \t\t\t\t\t type, 0, NOT_BUILT_IN,\n \t\t\t\t\t NULL, NULL_TREE);\n+      TREE_NOTHROW (umsg_fast_decl) = 0;\n       DECL_ATTRIBUTES (umsg_fast_decl) \n \t= tree_cons (get_identifier (\"hard_coded_address\"), \n \t\t     build_int_cst (NULL_TREE, OFFS_MSGSEND_FAST),\n@@ -1654,6 +1667,8 @@ synth_module_prologue (void)\n       umsg_super_stret_decl = builtin_function (TAG_MSGSENDSUPER_STRET,\n \t\t\t\t\t\ttype, 0, NOT_BUILT_IN, 0,\n \t\t\t\t\t\tNULL_TREE);\n+      TREE_NOTHROW (umsg_super_decl) = 0;\n+      TREE_NOTHROW (umsg_super_stret_decl) = 0;\n     }\n   else\n     {\n@@ -1676,6 +1691,7 @@ synth_module_prologue (void)\n       umsg_decl = builtin_function (TAG_MSGSEND,\n \t\t\t\t    type, 0, NOT_BUILT_IN,\n \t\t\t\t    NULL, NULL_TREE);\n+      TREE_NOTHROW (umsg_decl) = 0;\n \n       /* IMP objc_msg_lookup_super (struct objc_super *, SEL); */\n       type\n@@ -1686,6 +1702,7 @@ synth_module_prologue (void)\n       umsg_super_decl = builtin_function (TAG_MSGSENDSUPER,\n \t\t\t\t\t  type, 0, NOT_BUILT_IN,\n \t\t\t\t\t  NULL, NULL_TREE);\n+      TREE_NOTHROW (umsg_super_decl) = 0;\n \n       /* The following GNU runtime entry point is called to initialize\n \t each module:"}, {"sha": "1ba72c7f7f9ac03a813430eae9b49e9dbca2ff36", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bf587a8f548c1e05658021d144a5414485a731/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bf587a8f548c1e05658021d144a5414485a731/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e9bf587a8f548c1e05658021d144a5414485a731", "patch": "@@ -1,5 +1,7 @@\n 2005-10-20  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* obj-c++.dg/except-1.mm: New.\n+\n \t* obj-c++.dg/stubify-2.mm: Update the name of the RTL dump file.\n \n 2005-10-21  Alan Modra  <amodra@bigpond.net.au>"}, {"sha": "79eaf12ddd0b917db352ec19ddd290e86cced941", "filename": "gcc/testsuite/obj-c++.dg/except-1.mm", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9bf587a8f548c1e05658021d144a5414485a731/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexcept-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9bf587a8f548c1e05658021d144a5414485a731/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexcept-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexcept-1.mm?ref=e9bf587a8f548c1e05658021d144a5414485a731", "patch": "@@ -0,0 +1,65 @@\n+/* { dg-do run { target \"*-*-darwin*\" } } */\n+/* { dg-options \"-framework Foundation\" } */\n+\n+/* This tests that exceptions work.  It used to fail because\n+   objc_msgSend was marked with DECL_NOTHROW. \n+   If you include objc/Object.h, the problem goes away, because\n+   that file includes objc/objc-runtime.h which explicitly prototypes\n+   objc_msgSend without 'nothrow'.  */\n+\n+#include <Foundation/Foundation.h>\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+// ObjectiveC class header\n+@interface ObjCclass : NSObject {\n+}\n+-(void)method1;\n+-(void)method2;\n+@end\n+\n+// C++ class header\n+class CPPclass {\n+public:\n+\tvoid function1();\n+};\n+\n+\n+// Main\n+int main(int argc, char *argv[])\n+{\n+\tObjCclass * foo = [[ObjCclass alloc] init];\n+\t[foo method1];\n+\texit (0);\n+}\n+\n+\n+// ObjectiveC implementation\n+@implementation ObjCclass\n+\n+-(void) method1\n+{\n+\ttry {\n+\t\t[self method2];\n+\t}\n+\tcatch(...) {\n+\t\treturn;\n+\t}\n+}\n+\n+-(void) method2\n+{\n+\tCPPclass foo;\n+\tfoo.function1();\n+}\n+\n+@end\n+\n+\n+// C++ implementation\n+void CPPclass::function1()\n+{\n+\tthrow (1);\n+\t/* Shouldn't be here because we threw.  */\n+\tabort ();\n+}"}]}