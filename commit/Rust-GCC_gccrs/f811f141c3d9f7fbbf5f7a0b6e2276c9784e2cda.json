{"sha": "f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjgxMWYxNDFjM2Q5ZjdmYmJmNWY3YTBiNmUyMjc2Yzk3ODRlMmNkYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-08-01T16:00:05Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-08-01T16:00:05Z"}, "message": "[AArch64] XFAIL sve/vcond_[45].c tests\n\nSee PR 86753 for details.\n\n2018-08-01  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/testsuite/\n\tPR target/86753\n\t* gcc.target/aarch64/sve/vcond_4.c: XFAIL positive tests.\n\t* gcc.target/aarch64/sve/vcond_5.c: Likewise.\n\nFrom-SVN: r263227", "tree": {"sha": "f0f2a6c75e16992105c3d9dcc2b743c540aa9d3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0f2a6c75e16992105c3d9dcc2b743c540aa9d3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a19f98d5defb7a173725e89b1fed532c66561f61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a19f98d5defb7a173725e89b1fed532c66561f61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a19f98d5defb7a173725e89b1fed532c66561f61"}], "stats": {"total": 114, "additions": 62, "deletions": 52}, "files": [{"sha": "4f4084c8ee9bd9b410f63352466d3c7e50a3ee4c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda", "patch": "@@ -1,3 +1,9 @@\n+2018-08-01  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR target/86753\n+\t* gcc.target/aarch64/sve/vcond_4.c: XFAIL positive tests.\n+\t* gcc.target/aarch64/sve/vcond_5.c: Likewise.\n+\n 2018-08-01  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.dg/pointer-range-check-1.c: New test."}, {"sha": "00d84760a19729b0365e12323fb17c424ab73ddd", "filename": "gcc/testsuite/gcc.target/aarch64/sve/vcond_4.c", "status": "modified", "additions": 28, "deletions": 26, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvcond_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvcond_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvcond_4.c?ref=f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda", "patch": "@@ -88,52 +88,54 @@ TEST_CMP (nule)\n TEST_CMP (nuge)\n TEST_CMP (nugt)\n \n-/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 5 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 10 } } */\n+/* See PR 86753 for the reason behind the XFAILs.  */\n+\n+/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 5 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 10 { xfail *-*-* } } } */\n \n /* 5 for ne, 5 for ueq and 5 for nueq.  */\n-/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 15 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 30 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 15 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 30 { xfail *-*-* } } } */\n \n /* 5 for lt, 5 for ult and 5 for nult.  */\n-/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 15 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 30 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 15 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 30 { xfail *-*-* } } } */\n \n /* 5 for le, 5 for ule and 5 for nule.  */\n-/* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 15 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 30 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 15 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 30 { xfail *-*-* } } } */\n \n /* 5 for gt, 5 for ugt and 5 for nugt.  */\n-/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 15 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 30 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 15 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 30 { xfail *-*-* } } } */\n \n /* 5 for ge, 5 for uge and 5 for nuge.  */\n-/* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 15 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 30 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} 15 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 30 { xfail *-*-* } } } */\n \n /* { dg-final { scan-assembler-not {\\tfcmuo\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0\\n} } } */\n /* 3 loops * 5 invocations for all 12 unordered comparisons.  */\n-/* { dg-final { scan-assembler-times {\\tfcmuo\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 180 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmuo\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s\\n} 180 { xfail *-*-* } } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 7 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 14 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 7 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 14 { xfail *-*-* } } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 21 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 42 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 21 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 42 { xfail *-*-* } } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 21 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 42 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 21 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 42 { xfail *-*-* } } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 21 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 42 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 21 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 42 { xfail *-*-* } } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 21 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 42 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 21 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 42 { xfail *-*-* } } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 21 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 42 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} 21 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 42 { xfail *-*-* } } } */\n \n /* { dg-final { scan-assembler-not {\\tfcmuo\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0\\n} } } */\n /* 3 loops * 5 invocations, with 2 invocations having ncopies == 2,\n    for all 12 unordered comparisons.  */\n-/* { dg-final { scan-assembler-times {\\tfcmuo\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 252 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmuo\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d\\n} 252 { xfail *-*-* } } } */"}, {"sha": "23bfb7b264982b6d4d2ac5483e9adec60cc85011", "filename": "gcc/testsuite/gcc.target/aarch64/sve/vcond_5.c", "status": "modified", "additions": 28, "deletions": 26, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvcond_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvcond_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fvcond_5.c?ref=f811f141c3d9f7fbbf5f7a0b6e2276c9784e2cda", "patch": "@@ -5,52 +5,54 @@\n \n #include \"vcond_4.c\"\n \n+/* See PR 86753 for the reason behind the XFAILs.  */\n+\n /* 5 for eqand 5 for ueq.  */\n-/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 10 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 20 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 10 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 20 { xfail *-*-* } } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 5 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 10 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 5 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 10 { xfail *-*-* } } } */\n \n /* 5 for lt, 5 for ult, 5 for nueq and 5 for nult.  */\n-/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 20 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 40 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 20 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 40 { xfail *-*-* } } } */\n \n /* 5 for le, 5 for ule and 5 for nule.  */\n-/* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 15 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 30 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 15 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 30 { xfail *-*-* } } } */\n \n /* 5 for gt, 5 for ugt, 5 for nueq and 5 for nugt.  */\n-/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 20 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 40 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 20 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 40 { xfail *-*-* } } } */\n \n /* 5 for ge, 5 for uge and 5 for nuge.  */\n-/* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 15 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 30 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} 15 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 30 { xfail *-*-* } } } */\n \n /* { dg-final { scan-assembler-not {\\tfcmuo\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, #0\\.0} } } */\n /* 3 loops * 5 invocations for ordered, unordered amd ueq.  */\n-/* { dg-final { scan-assembler-times {\\tfcmuo\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 45 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmuo\\tp[0-9]+\\.s, p[0-7]/z, z[0-9]+\\.s, z[0-9]+\\.s} 45 { xfail *-*-* } } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 14 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 28 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 14 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmeq\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 28 { xfail *-*-* } } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 7 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 14 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 7 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmne\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 14 { xfail *-*-* } } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 28 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 56 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 28 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmlt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 56 { xfail *-*-* } } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 21 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 42 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 21 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmle\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 42 { xfail *-*-* } } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 28 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 56 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 28 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmgt\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 56 { xfail *-*-* } } } */\n \n-/* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 21 } } */\n-/* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 42 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} 21 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfcmge\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 42 { xfail *-*-* } } } */\n \n /* { dg-final { scan-assembler-not {\\tfcmuo\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, #0\\.0} } } */\n /* 3 loops * 5 invocations, with 2 invocations having ncopies == 2,\n    for ordered, unordered and ueq.  */\n-/* { dg-final { scan-assembler-times {\\tfcmuo\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 63 } } */\n+/* { dg-final { scan-assembler-times {\\tfcmuo\\tp[0-9]+\\.d, p[0-7]/z, z[0-9]+\\.d, z[0-9]+\\.d} 63 { xfail *-*-* } } } */"}]}