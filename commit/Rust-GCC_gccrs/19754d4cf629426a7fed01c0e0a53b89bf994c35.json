{"sha": "19754d4cf629426a7fed01c0e0a53b89bf994c35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk3NTRkNGNmNjI5NDI2YTdmZWQwMWMwZTBhNTNiODliZjk5NGMzNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-11-26T09:56:56Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-11-26T09:56:56Z"}, "message": "typeck2.c (digest_init): Make copies where appropriate.\n\n\t* typeck2.c (digest_init): Make copies where appropriate.\n\n\t* decl2.c (delete_sanity): resolve_offset_ref.\n\nFrom-SVN: r16727", "tree": {"sha": "4cef68567ca34f5bf3cb90489475575c775c30bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cef68567ca34f5bf3cb90489475575c775c30bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19754d4cf629426a7fed01c0e0a53b89bf994c35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19754d4cf629426a7fed01c0e0a53b89bf994c35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19754d4cf629426a7fed01c0e0a53b89bf994c35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19754d4cf629426a7fed01c0e0a53b89bf994c35/comments", "author": null, "committer": null, "parents": [{"sha": "92f5c1350c047cd68cdb17e66ed5f52d51b019b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92f5c1350c047cd68cdb17e66ed5f52d51b019b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92f5c1350c047cd68cdb17e66ed5f52d51b019b0"}], "stats": {"total": 42, "additions": 30, "deletions": 12}, "files": [{"sha": "dbe470e464e9081ee681d30407d7249b6fa9d139", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19754d4cf629426a7fed01c0e0a53b89bf994c35/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19754d4cf629426a7fed01c0e0a53b89bf994c35/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=19754d4cf629426a7fed01c0e0a53b89bf994c35", "patch": "@@ -1,5 +1,9 @@\n Wed Nov 26 01:11:24 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n+\t* typeck2.c (digest_init): Make copies where appropriate.\n+\n+\t* decl2.c (delete_sanity): resolve_offset_ref.\n+\n \t* except.c (expand_start_catch_block): Fix catching a reference\n \tto pointer.\n "}, {"sha": "7548830396d7b69b2a38503bcb6240f919f0ab91", "filename": "gcc/cp/NEWS", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19754d4cf629426a7fed01c0e0a53b89bf994c35/gcc%2Fcp%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19754d4cf629426a7fed01c0e0a53b89bf994c35/gcc%2Fcp%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FNEWS?ref=19754d4cf629426a7fed01c0e0a53b89bf994c35", "patch": "@@ -1,7 +1,7 @@\n *** Changes since G++ version 2.7.2:\n \n-* A public review copy of the December 1996 Draft of the ANSI/ISO C++\n-  proto-standard is now available. See\n+* A public review copy of the December 1996 Draft of the ISO/ANSI C++\n+  standard is now available. See\n \n \thttp://www.cygnus.com/misc/wp/\n \n@@ -65,8 +65,17 @@\n      + Template friends.\n \n * Exception handling support has been significantly improved and is on by\n-  default.  This can result in significant runtime overhead.  You can turn\n-  it off with -fno-exceptions.\n+  default.  The compiler supports two mechanisms for walking back up the\n+  call stack; one relies on static information about how registers are\n+  saved, and causes no runtime overhead for code that does not throw\n+  exceptions.  The other mechanism uses setjmp and longjmp equivalents, and\n+  can result in quite a bit of runtime overhead.  You can determine which\n+  mechanism is the default for your target by compiling a testcase that\n+  uses exceptions and doing an 'nm' on the object file; if it uses __throw,\n+  it's using the first mechanism.  If it uses __sjthrow, it's using the\n+  second.\n+\n+  You can turn EH support off with -fno-exceptions.\n \n * RTTI support has been rewritten to work properly and is now on by default.\n   This means code that uses virtual functions will have a modest space\n@@ -90,9 +99,9 @@\n \n * New flags:\n \n-     + New flags -Wsign-promo (warn about potentially confusing promotions\n-       in overload resolution), -Wno-pmf-conversion (don't warn about\n-       converting from a bound member function pointer to function pointer).\n+     + New warning -Wno-pmf-conversion (don't warn about\n+       converting from a bound member function pointer to function\n+       pointer).\n \n      + A flag -Weffc++ has been added for violations of some of the style \n        guidelines in Scott Meyers' _Effective C++_ books.\n@@ -145,7 +154,7 @@\n * The name of a class is now implicitly declared in its own scope; A::A\n   refers to A.\n \n-* Local classes are now supported.\n+* Local classes are now supported, though not inside templates.\n \n * __attribute__ can now be attached to types as well as declarations.\n "}, {"sha": "7f207d6381684d2c37cc50477239e77ce9840783", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19754d4cf629426a7fed01c0e0a53b89bf994c35/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19754d4cf629426a7fed01c0e0a53b89bf994c35/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=19754d4cf629426a7fed01c0e0a53b89bf994c35", "patch": "@@ -1242,7 +1242,10 @@ delete_sanity (exp, size, doing_vec, use_global_delete)\n       return t;\n     }\n \n-  t = stabilize_reference (convert_from_reference (exp));\n+  t = exp;\n+  if (TREE_CODE (t) == OFFSET_REF)\n+    t = resolve_offset_ref (t);\n+  t = stabilize_reference (convert_from_reference (t));\n   type = TREE_TYPE (t);\n   code = TREE_CODE (type);\n \n@@ -1270,15 +1273,14 @@ delete_sanity (exp, size, doing_vec, use_global_delete)\n   if (code == POINTER_TYPE)\n     {\n #if 0\n-      /* As of Valley Forge, you can delete a pointer to constant.  */\n-      /* You can't delete a pointer to constant.  */\n+      /* As of Valley Forge, you can delete a pointer to const.  */\n       if (TREE_READONLY (TREE_TYPE (type)))\n \t{\n \t  error (\"`const *' cannot be deleted\");\n \t  return error_mark_node;\n \t}\n #endif\n-      /* You also can't delete functions.  */\n+      /* You can't delete functions.  */\n       if (TREE_CODE (TREE_TYPE (type)) == FUNCTION_TYPE)\n \t{\n \t  error (\"cannot delete a function\");"}, {"sha": "24e3c5cf08b619465ab4b605471c60f423b8df8b", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19754d4cf629426a7fed01c0e0a53b89bf994c35/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19754d4cf629426a7fed01c0e0a53b89bf994c35/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=19754d4cf629426a7fed01c0e0a53b89bf994c35", "patch": "@@ -743,6 +743,9 @@ digest_init (type, init, tail)\n \tinit = DECL_INITIAL (init);\n       else if (TREE_READONLY_DECL_P (init))\n \tinit = decl_constant_value (init);\n+      else if (IS_AGGR_TYPE (type) && TYPE_NEEDS_CONSTRUCTING (type))\n+\tinit = ocp_convert (type, init, CONV_IMPLICIT|CONV_FORCE_TEMP,\n+\t\t\t    LOOKUP_NORMAL);\n       return init;\n     }\n "}]}