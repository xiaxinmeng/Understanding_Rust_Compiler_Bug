{"sha": "cebf212fa5edc019a992981e7aab39517ac93c3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ViZjIxMmZhNWVkYzAxOWE5OTI5ODFlN2FhYjM5NTE3YWM5M2MzZg==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2003-12-18T12:15:37Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2003-12-18T12:15:37Z"}, "message": "loop.c (move_movables): Handle combination of m->consec...\n\nChangeLog:\n\t* loop.c (move_movables): Handle combination of m->consec,\n\tm->move_insn_first, and m->insert_temp all nonzero correctly.\ntestsuite/ChangeLog:\n\t* gcc.dg/20031216-1.c: New test.\n\nFrom-SVN: r74778", "tree": {"sha": "51fe0f4dc22a81daf31e9a158bd8f6610af9ecd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51fe0f4dc22a81daf31e9a158bd8f6610af9ecd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cebf212fa5edc019a992981e7aab39517ac93c3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cebf212fa5edc019a992981e7aab39517ac93c3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cebf212fa5edc019a992981e7aab39517ac93c3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cebf212fa5edc019a992981e7aab39517ac93c3f/comments", "author": null, "committer": null, "parents": [{"sha": "51287c1498c0fad7f7a794e4b170d229ecfce295", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51287c1498c0fad7f7a794e4b170d229ecfce295", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51287c1498c0fad7f7a794e4b170d229ecfce295"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "6d2db65e7d50163025d5f494b8b4713a566d534e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cebf212fa5edc019a992981e7aab39517ac93c3f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cebf212fa5edc019a992981e7aab39517ac93c3f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cebf212fa5edc019a992981e7aab39517ac93c3f", "patch": "@@ -1,3 +1,8 @@\n+2003-12-18  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* loop.c (move_movables): Handle combination of m->consec, \n+\tm->move_insn_first, and m->insert_temp all nonzero correctly.\n+\n 2003-12-18  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* calls.c (load_register_parameters): Don't use"}, {"sha": "d53297550582d68b82ee0ac1d56a31c39c6d4975", "filename": "gcc/loop.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cebf212fa5edc019a992981e7aab39517ac93c3f/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cebf212fa5edc019a992981e7aab39517ac93c3f/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=cebf212fa5edc019a992981e7aab39517ac93c3f", "patch": "@@ -2113,7 +2113,8 @@ move_movables (struct loop *loop, struct loop_movables *movables,\n \t\t\t  /* The SET_SRC might not be invariant, so we must\n \t\t\t     use the REG_EQUAL note.  */\n \t\t\t  start_sequence ();\n-\t\t\t  emit_move_insn (m->set_dest, m->set_src);\n+\t\t\t  emit_move_insn (m->insert_temp ? newreg : m->set_dest,\n+\t\t\t\t\t  m->set_src);\n \t\t\t  seq = get_insns ();\n \t\t\t  end_sequence ();\n "}, {"sha": "33e5eb89ae621c53a7d5aba7c0f99ad0947d6992", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cebf212fa5edc019a992981e7aab39517ac93c3f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cebf212fa5edc019a992981e7aab39517ac93c3f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cebf212fa5edc019a992981e7aab39517ac93c3f", "patch": "@@ -1,3 +1,7 @@\n+2003-12-18  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* gcc.dg/20031216-1.c: New test.\n+\n 2003-12-18  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n \tPR c++/9154"}, {"sha": "d8ee0703d7f6d328dd130572a7f2ca5b46c214f1", "filename": "gcc/testsuite/gcc.dg/20031216-1.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cebf212fa5edc019a992981e7aab39517ac93c3f/gcc%2Ftestsuite%2Fgcc.dg%2F20031216-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cebf212fa5edc019a992981e7aab39517ac93c3f/gcc%2Ftestsuite%2Fgcc.dg%2F20031216-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20031216-1.c?ref=cebf212fa5edc019a992981e7aab39517ac93c3f", "patch": "@@ -0,0 +1,37 @@\n+/* This used to abort due to a loop bug on s390*.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -fPIC\" { target s390*-*-* } } */\n+\n+int count = 0;\n+char *str;\n+\n+void test (int flag)\n+{\n+  char *p;\n+\n+  for (;;)\n+    {\n+      if (count > 5)\n+\treturn;\n+\n+      p = \"test\";\n+\n+      if (flag)\n+\tcount++;\n+\n+      str = p;\n+    }\n+}\n+\n+int main (void)\n+{\n+  test (1);\n+\n+  if (str[0] != 't')\n+    abort ();\n+\n+  return 0;\n+}\n+"}]}