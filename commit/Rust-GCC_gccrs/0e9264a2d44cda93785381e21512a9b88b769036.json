{"sha": "0e9264a2d44cda93785381e21512a9b88b769036", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU5MjY0YTJkNDRjZGE5Mzc4NTM4MWUyMTUxMmE5Yjg4Yjc2OTAzNg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-02-26T01:29:21Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-02-26T01:29:21Z"}, "message": "* c-pragma.c (add_weak); Delete.  Moved into...\n\n        * varasm.c (add_weak): New external function.\n        (declare_weak): If HANDLE_PRAGMA_WEAK, then add the function to\n        the list of weak functions.\n        * c-pragma (add_weak): Declare.\n\nFrom-SVN: r25454", "tree": {"sha": "855d4e599adc29e51930b659de26cb3bd6af975b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/855d4e599adc29e51930b659de26cb3bd6af975b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e9264a2d44cda93785381e21512a9b88b769036", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e9264a2d44cda93785381e21512a9b88b769036", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e9264a2d44cda93785381e21512a9b88b769036", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e9264a2d44cda93785381e21512a9b88b769036/comments", "author": null, "committer": null, "parents": [{"sha": "cdf62c54740df5a4463f449062d8e4a5ab1183f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdf62c54740df5a4463f449062d8e4a5ab1183f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdf62c54740df5a4463f449062d8e4a5ab1183f7"}], "stats": {"total": 62, "additions": 38, "deletions": 24}, "files": [{"sha": "76e57ea69fa4e423f909ce359b748ad602ac8f73", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9264a2d44cda93785381e21512a9b88b769036/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9264a2d44cda93785381e21512a9b88b769036/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e9264a2d44cda93785381e21512a9b88b769036", "patch": "@@ -1,3 +1,11 @@\n+Fri Feb 26 02:24:57 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* c-pragma.c (add_weak); Delete.  Moved into...\n+\t* varasm.c (add_weak): New external function.\n+\t(declare_weak): If HANDLE_PRAGMA_WEAK, then add the function to\n+\tthe list of weak functions.\n+\t* c-pragma (add_weak): Declare.\n+\n Thu Feb 25 23:43:59 1999  Richard Henderson  <rth@cygnus.com>\n \n \tFlow rewrite to use basic block structures and edge lists:"}, {"sha": "09fac1feaabd0e4b9cb8a8fa755724bc1cc73f4f", "filename": "gcc/c-pragma.c", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9264a2d44cda93785381e21512a9b88b769036/gcc%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9264a2d44cda93785381e21512a9b88b769036/gcc%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pragma.c?ref=0e9264a2d44cda93785381e21512a9b88b769036", "patch": "@@ -192,30 +192,6 @@ insert_pack_attributes (node, attributes, prefix)\n }\n #endif /* HANDLE_PRAGMA_PACK_PUSH_POP */\n \f\n-#ifdef HANDLE_PRAGMA_WEAK\n-static int add_weak PROTO((char *, char *));\n-\n-static int\n-add_weak (name, value)\n-     char * name;\n-     char * value;\n-{\n-  struct weak_syms * weak;\n-\n-  weak = (struct weak_syms *) permalloc (sizeof (struct weak_syms));\n-\n-  if (weak == NULL)\n-    return 0;\n-  \n-  weak->next  = weak_decls;\n-  weak->name  = name;\n-  weak->value = value;\n-  weak_decls  = weak;\n-\n-  return 1;\n-}\n-#endif /* HANDLE_PRAGMA_WEAK */\n-\f\n /* Handle one token of a pragma directive.  TOKEN is the current token, and\n    STRING is its printable form.  Some front ends do not support generating\n    tokens, and will only pass in a STRING.  Also some front ends will reuse"}, {"sha": "ddc74d1076e201516813bb23f8fcc74c3edca733", "filename": "gcc/c-pragma.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9264a2d44cda93785381e21512a9b88b769036/gcc%2Fc-pragma.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9264a2d44cda93785381e21512a9b88b769036/gcc%2Fc-pragma.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pragma.h?ref=0e9264a2d44cda93785381e21512a9b88b769036", "patch": "@@ -56,6 +56,8 @@ struct weak_syms\n \n /* Declared in varasm.c */\n extern struct weak_syms * weak_decls;\n+\n+extern int add_weak PROTO((char *, char *));\n #endif /* HANDLE_PRAGMA_WEAK */\n \n "}, {"sha": "a6ee794a3e414f0b94913e8667363f0608fade8e", "filename": "gcc/varasm.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9264a2d44cda93785381e21512a9b88b769036/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9264a2d44cda93785381e21512a9b88b769036/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=0e9264a2d44cda93785381e21512a9b88b769036", "patch": "@@ -4269,6 +4269,31 @@ output_constructor (exp, size)\n     assemble_zeros (size - total_bytes);\n }\n \n+#ifdef HANDLE_PRAGMA_WEAK\n+/* Add function NAME to the weak symbols list.  VALUE is a weak alias\n+   associatd with NAME.  */\n+   \n+int\n+add_weak (name, value)\n+     char *name;\n+     char *value;\n+{\n+  struct weak_syms *weak;\n+\n+  weak = (struct weak_syms *) permalloc (sizeof (struct weak_syms));\n+\n+  if (weak == NULL)\n+    return 0;\n+\n+  weak->next = weak_decls;\n+  weak->name = name;\n+  weak->value = value;\n+  weak_decls = weak;\n+\n+  return 1;\n+}\n+#endif /* HANDLE_PRAGMA_WEAK */\n+\n /* Declare DECL to be a weak symbol.  */\n \n void\n@@ -4281,6 +4306,9 @@ declare_weak (decl)\n     error_with_decl (decl, \"weak declaration of `%s' must precede definition\");\n   else if (SUPPORTS_WEAK)\n     DECL_WEAK (decl) = 1;\n+#ifdef HANDLE_PRAGMA_WEAK\n+   add_weak (IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl)), NULL);\n+#endif\n }\n \n /* Emit any pending weak declarations.  */"}]}