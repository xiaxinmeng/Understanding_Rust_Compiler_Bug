{"sha": "1b4d5fde31787e652ca03dcd9143911d34eab136", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI0ZDVmZGUzMTc4N2U2NTJjYTAzZGNkOTE0MzkxMWQzNGVhYjEzNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-10-14T18:43:27Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-10-14T18:43:27Z"}, "message": "stor-layout.c (do_type_align): New fn, split out from...\n\n        * stor-layout.c (do_type_align): New fn, split out from...\n        (layout_decl): ...here.  Do all alignment calculations for\n        FIELD_DECLs here.\n        (update_alignment_for_field): Not here.\n        (start_record_layout, debug_rli): Remove unpadded_align.\n        * tree.h (struct record_layout_info_s): Remove unpadded_align.\n        * c-decl.c (finish_enum): Don't set DECL_SIZE, DECL_ALIGN\n        or DECL_MODE on the CONST_DECLs.\n        (finish_struct): Don't mess with DECL_ALIGN.\n\nFrom-SVN: r72485", "tree": {"sha": "6ce23fe6c27297992fbc3d02ada01154a587901a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ce23fe6c27297992fbc3d02ada01154a587901a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b4d5fde31787e652ca03dcd9143911d34eab136", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b4d5fde31787e652ca03dcd9143911d34eab136", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b4d5fde31787e652ca03dcd9143911d34eab136", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b4d5fde31787e652ca03dcd9143911d34eab136/comments", "author": null, "committer": null, "parents": [{"sha": "415c96ca6aba0c768f212dce3cffb85ff34dc1d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/415c96ca6aba0c768f212dce3cffb85ff34dc1d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/415c96ca6aba0c768f212dce3cffb85ff34dc1d1"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "e0cfdf70451fd2b15c9d03d399d2d0bffd8a1fc5", "filename": "gcc/testsuite/gcc.dg/pack-test-4.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b4d5fde31787e652ca03dcd9143911d34eab136/gcc%2Ftestsuite%2Fgcc.dg%2Fpack-test-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b4d5fde31787e652ca03dcd9143911d34eab136/gcc%2Ftestsuite%2Fgcc.dg%2Fpack-test-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpack-test-4.c?ref=1b4d5fde31787e652ca03dcd9143911d34eab136", "patch": "@@ -0,0 +1,32 @@\n+// PR c/11885\n+// Bug: flag4 was allocated into the same byte as the other flags.\n+// { dg-do run }\n+\n+typedef unsigned char uint8_t;\n+\n+typedef struct {\n+    \n+    uint8_t flag1:2;\n+    uint8_t flag2:1;\n+    uint8_t flag3:1;\n+   \n+    uint8_t flag4;\n+\n+} __attribute__ ((packed)) MyType;\n+\n+int main (void)\n+{\n+  MyType a;\n+  MyType *b = &a;\n+\n+  b->flag1 = 0;\n+  b->flag2 = 0;\n+  b->flag3 = 0;\n+\n+  b->flag4 = 0;\n+\n+  b->flag4++;\n+    \n+  if (b->flag1 != 0)\n+    abort ();\n+}"}]}