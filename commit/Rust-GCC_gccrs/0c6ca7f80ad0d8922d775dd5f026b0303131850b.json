{"sha": "0c6ca7f80ad0d8922d775dd5f026b0303131850b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM2Y2E3ZjgwYWQwZDg5MjJkNzc1ZGQ1ZjAyNmIwMzAzMTMxODUwYg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2008-12-12T17:28:06Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2008-12-12T17:28:06Z"}, "message": "re PR middle-end/38409 ([graphite] ICE : in canonicalize_loop_ivs, at tree-parloops.c:1384)\n\n2008-12-12  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR middle-end/38409\n\t* gcc.dg/graphite/pr38409.c: New.\n\t* graphite.c (nb_reductions_in_loop): Use simple_iv.\n\nFrom-SVN: r142716", "tree": {"sha": "087e96ac469b200300f2d33c97b0a94b92bf04f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/087e96ac469b200300f2d33c97b0a94b92bf04f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c6ca7f80ad0d8922d775dd5f026b0303131850b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c6ca7f80ad0d8922d775dd5f026b0303131850b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c6ca7f80ad0d8922d775dd5f026b0303131850b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c6ca7f80ad0d8922d775dd5f026b0303131850b/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a280b3566a96f29c7d5ec1cc35ef9d12482abb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a280b3566a96f29c7d5ec1cc35ef9d12482abb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a280b3566a96f29c7d5ec1cc35ef9d12482abb6"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "9bedbaf604995474154ba6bf47bc9fc66bf5a10c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6ca7f80ad0d8922d775dd5f026b0303131850b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6ca7f80ad0d8922d775dd5f026b0303131850b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c6ca7f80ad0d8922d775dd5f026b0303131850b", "patch": "@@ -1,3 +1,8 @@\n+2008-12-12  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/38409\n+\t* graphite.c (nb_reductions_in_loop): Use simple_iv.\n+\n 2008-12-12  Dwarakanath Rajagopal  <dwarak.rajagopal@amd.com>\n \n \t* config/i386/x86intrin.h: New header file to support all x86 "}, {"sha": "eda09f89471b25b834ed3a01e6d9671d8328ec5d", "filename": "gcc/graphite.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6ca7f80ad0d8922d775dd5f026b0303131850b/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6ca7f80ad0d8922d775dd5f026b0303131850b/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=0c6ca7f80ad0d8922d775dd5f026b0303131850b", "patch": "@@ -2119,13 +2119,14 @@ nb_reductions_in_loop (loop_p loop)\n     {\n       gimple phi = gsi_stmt (gsi);\n       tree scev;\n+      affine_iv iv;\n \n       if (!is_gimple_reg (PHI_RESULT (phi)))\n \tcontinue;\n \n       scev = analyze_scalar_evolution (loop, PHI_RESULT (phi));\n       scev = instantiate_parameters (loop, scev);\n-      if (chrec_contains_undetermined (scev))\n+      if (!simple_iv (loop, phi, PHI_RESULT (phi), &iv, true))\n \tres++;\n     }\n "}, {"sha": "34dfb65f071340933eb46aa3e80240083292077b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6ca7f80ad0d8922d775dd5f026b0303131850b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6ca7f80ad0d8922d775dd5f026b0303131850b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0c6ca7f80ad0d8922d775dd5f026b0303131850b", "patch": "@@ -1,3 +1,8 @@\n+2008-12-12  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/38409\n+\t* gcc.dg/graphite/pr38409.c: New.\n+\n 2008-12-12 Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/36355"}, {"sha": "521ac3537aec301feba558d642b190c1c269a4d5", "filename": "gcc/testsuite/gcc.dg/graphite/pr38409.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c6ca7f80ad0d8922d775dd5f026b0303131850b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr38409.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c6ca7f80ad0d8922d775dd5f026b0303131850b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr38409.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr38409.c?ref=0c6ca7f80ad0d8922d775dd5f026b0303131850b", "patch": "@@ -0,0 +1,48 @@\n+/* { dg-options \"-O2 -floop-block\" } */\n+\n+typedef struct test input ;\n+struct test \n+{\n+  int type ;\n+  int symflag ;\n+};\n+Chv_copyEntriesToVector ( input *chv,double *dvec) \n+{\n+  double *entries ;\n+  int mm, nent;\n+  int first, i, k , stride ;\n+  if ( ((chv)->type == 1) ) \n+    {\n+      for ( i = 0 ; i < 10 ; i++)\n+        {\n+\t  dvec[2*mm] = entries[2*k] ;\n+\t  k += stride ;\n+\t  stride -= 2 ;\n+        }\n+    }\n+  return(mm) ; \n+}\n+/* { dg-options \"-O2 -floop-block\" } */\n+\n+typedef struct test input ;\n+struct test \n+{\n+  int type ;\n+  int symflag ;\n+};\n+Chv_copyEntriesToVector ( input *chv,double *dvec) \n+{\n+  double *entries ;\n+  int mm, nent;\n+  int first, i, k , stride ;\n+  if ( ((chv)->type == 1) ) \n+    {\n+      for ( i = 0 ; i < 10 ; i++)\n+        {\n+\t  dvec[2*mm] = entries[2*k] ;\n+\t  k += stride ;\n+\t  stride -= 2 ;\n+        }\n+    }\n+  return(mm) ; \n+}"}]}