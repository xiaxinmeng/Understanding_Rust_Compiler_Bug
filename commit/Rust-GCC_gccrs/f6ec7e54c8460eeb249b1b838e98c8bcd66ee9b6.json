{"sha": "f6ec7e54c8460eeb249b1b838e98c8bcd66ee9b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZlYzdlNTRjODQ2MGVlYjI0OWIxYjgzOGU5OGM4YmNkNjZlZTliNg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-03T21:39:50Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-03T21:39:50Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r870", "tree": {"sha": "654daf56248bb55bd6ff14d6a5a8de00b0634082", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/654daf56248bb55bd6ff14d6a5a8de00b0634082"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6ec7e54c8460eeb249b1b838e98c8bcd66ee9b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ec7e54c8460eeb249b1b838e98c8bcd66ee9b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6ec7e54c8460eeb249b1b838e98c8bcd66ee9b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ec7e54c8460eeb249b1b838e98c8bcd66ee9b6/comments", "author": null, "committer": null, "parents": [{"sha": "17e256d318151f6f6948325f37cf585bd605d6d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17e256d318151f6f6948325f37cf585bd605d6d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17e256d318151f6f6948325f37cf585bd605d6d5"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "4b8a3be570eca0e8ae90c891522ae301a805d51d", "filename": "gcc/gcc.c", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ec7e54c8460eeb249b1b838e98c8bcd66ee9b6/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ec7e54c8460eeb249b1b838e98c8bcd66ee9b6/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=f6ec7e54c8460eeb249b1b838e98c8bcd66ee9b6", "patch": "@@ -70,11 +70,12 @@ compilation is specified by a string called a \"spec\".  */\n \n /* By default there is no special suffix for executables.  */\n #ifndef EXECUTABLE_SUFFIX\n-#if __MSDOS__\n-#define EXECUTABLE_SUFFIX \".exe\"\n-#else\n #define EXECUTABLE_SUFFIX \"\"\n #endif\n+\n+/* By default, colon separates directories in a path.  */\n+#ifndef PATH_SEPARATOR\n+#define PATH_SEPARATOR ':'\n #endif\n \n #define obstack_chunk_alloc xmalloc\n@@ -1073,7 +1074,6 @@ choose_temp_base ()\n putenv (str)\n      char *str;\n {\n-#ifndef __MSDOS__\t\t/* not sure about MS/DOS */\n #ifndef VMS\t\t\t/* nor about VMS */\n \n   extern char **environ;\n@@ -1109,7 +1109,6 @@ putenv (str)\n   bcopy (old_environ, environ+1, sizeof (char *) * (num_envs+1));\n \n #endif\t/* VMS */\n-#endif\t/* __MSDOS__ */\n }\n \n #endif\t/* HAVE_PUTENV */\n@@ -1378,7 +1377,16 @@ pexecute (func, program, argv, not_last)\n     pfatal_with_name (scmd + strlen (program) + 2);\n \n   for (i=1; argv[i]; i++)\n-    fprintf (argfile, \"%s\\n\", argv[i]);\n+  {\n+    char *cp;\n+    for (cp = argv[i]; *cp; cp++)\n+      {\n+\tif (*cp == '\"' || *cp == '\\'' || *cp == '\\\\' || isspace (*cp))\n+\t  fputc ('\\\\', argfile);\n+\tfputc (*cp, argfile);\n+      }\n+    fputc ('\\n', argfile);\n+  }\n   fclose (argfile);\n \n   i = system (scmd);\n@@ -1694,7 +1702,7 @@ process_command (argc, argv)\n       startp = endp = temp;\n       while (1)\n \t{\n-\t  if ((*endp == ':') || (*endp == 0))\n+\t  if (*endp == PATH_SEPARATOR || *endp == 0)\n \t    {\n \t      strncpy (nstore, startp, endp-startp);\n \t      if (endp == startp)\n@@ -1727,7 +1735,7 @@ process_command (argc, argv)\n       startp = endp = temp;\n       while (1)\n \t{\n-\t  if ((*endp == ':') || (*endp == 0))\n+\t  if (*endp == PATH_SEPARATOR || *endp == 0)\n \t    {\n \t      strncpy (nstore, startp, endp-startp);\n \t      if (endp == startp)\n@@ -1763,7 +1771,7 @@ process_command (argc, argv)\n       startp = endp = temp;\n       while (1)\n \t{\n-\t  if ((*endp == ':') || (*endp == 0))\n+\t  if (*endp == PATH_SEPARATOR || *endp == 0)\n \t    {\n \t      strncpy (nstore, startp, endp-startp);\n \t      if (endp == startp)"}]}