{"sha": "3f101e32e2fb616633722fb552779f537e9a9891", "node_id": "C_kwDOANBUbNoAKDNmMTAxZTMyZTJmYjYxNjYzMzcyMmZiNTUyNzc5ZjUzN2U5YTk4OTE", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-15T16:02:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-15T16:02:55Z"}, "message": "c++, libstdc++: Add typeinfo for _Float{16,32,64,128,32x,64x} and __bf16 types [PR108075]\n\nThe following patch adds typeinfos for the extended floating point\ntypes and _Float{32,64}x.\n\n2022-12-15  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR libstdc++/108075\ngcc/cp/\n\t* rtti.cc (emit_support_tinfos): Add pointers to\n\t{bfloat16,float{16,32,64,128,32x,64x,128x}}_type_node to fundamentals\n\tarray.\ngcc/testsuite/\n\t* g++.dg/cpp23/ext-floating13.C: New test.\nlibstdc++-v3/\n\t* config/abi/pre/gnu.ver (CXXABI_1.3.14): Export\n\t_ZTIDF[0-9]*[_bx], _ZTIPDF[0-9]*[_bx] and _ZTIPKDF[0-9]*[_bx].\n\t* testsuite/util/testsuite_abi.cc (check_version): Handle\n\tCXXABI_1.3.14.", "tree": {"sha": "717929595b97ff34d77032d23888a2fbca330711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/717929595b97ff34d77032d23888a2fbca330711"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f101e32e2fb616633722fb552779f537e9a9891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f101e32e2fb616633722fb552779f537e9a9891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f101e32e2fb616633722fb552779f537e9a9891", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f101e32e2fb616633722fb552779f537e9a9891/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85d0d2683b7b00b9ec77ef4dc6a4494df6c7f555", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d0d2683b7b00b9ec77ef4dc6a4494df6c7f555", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85d0d2683b7b00b9ec77ef4dc6a4494df6c7f555"}], "stats": {"total": 52, "additions": 50, "deletions": 2}, "files": [{"sha": "c2cf78d1c097485499da3044c76112fd8404f8b0", "filename": "gcc/cp/rtti.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f101e32e2fb616633722fb552779f537e9a9891/gcc%2Fcp%2Frtti.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f101e32e2fb616633722fb552779f537e9a9891/gcc%2Fcp%2Frtti.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.cc?ref=3f101e32e2fb616633722fb552779f537e9a9891", "patch": "@@ -1603,7 +1603,9 @@ emit_support_tinfos (void)\n     &long_long_integer_type_node, &long_long_unsigned_type_node,\n     &float_type_node, &double_type_node, &long_double_type_node,\n     &dfloat32_type_node, &dfloat64_type_node, &dfloat128_type_node,\n-    &nullptr_type_node,\n+    &bfloat16_type_node, &float16_type_node, &float32_type_node,\n+    &float64_type_node, &float128_type_node, &float32x_type_node,\n+    &float64x_type_node, &float128x_type_node, &nullptr_type_node,\n     0\n   };\n   int ix;"}, {"sha": "fd36c50ceae0ec8d26fb6c095df4f32f311cc71e", "filename": "gcc/testsuite/g++.dg/cpp23/ext-floating13.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f101e32e2fb616633722fb552779f537e9a9891/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fext-floating13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f101e32e2fb616633722fb552779f537e9a9891/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fext-floating13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp23%2Fext-floating13.C?ref=3f101e32e2fb616633722fb552779f537e9a9891", "patch": "@@ -0,0 +1,35 @@\n+// P1467R9 - Extended floating-point types and standard names.\n+// { dg-do link { target c++23 } }\n+// { dg-options \"\" }\n+\n+#include <typeinfo>\n+\n+#ifdef __STDCPP_FLOAT16_T__\n+const std::type_info &a = typeid(decltype(0.0f16));\n+#endif\n+#ifdef __STDCPP_BFLOAT16_T__\n+const std::type_info &b = typeid(decltype(0.0bf16));\n+#endif\n+#ifdef __STDCPP_FLOAT32_T__\n+const std::type_info &c = typeid(decltype(0.0f32));\n+#endif\n+#ifdef __STDCPP_FLOAT64_T__\n+const std::type_info &d = typeid(decltype(0.0f64));\n+#endif\n+#ifdef __STDCPP_FLOAT128_T__\n+const std::type_info &e = typeid(decltype(0.0f128));\n+#endif\n+#ifdef __FLT32X_MAX__\n+const std::type_info &f = typeid(decltype(0.0f32x));\n+#endif\n+#ifdef __FLT64X_MAX__\n+const std::type_info &g = typeid(decltype(0.0f64x));\n+#endif\n+#ifdef __FLT128X_MAX__\n+const std::type_info &h = typeid(decltype(0.0f128x));\n+#endif\n+\n+int\n+main ()\n+{\n+}"}, {"sha": "667cc4dfca4a6e7f20297210750869d6aa90a267", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f101e32e2fb616633722fb552779f537e9a9891/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f101e32e2fb616633722fb552779f537e9a9891/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=3f101e32e2fb616633722fb552779f537e9a9891", "patch": "@@ -2794,6 +2794,16 @@ CXXABI_1.3.13 {\n \n } CXXABI_1.3.12;\n \n+CXXABI_1.3.14 {\n+\n+    # typeinfo for _Float{16,32,64,128,32x,64x,128x} and\n+    # __bf16\n+    _ZTIDF[0-9]*[_bx];\n+    _ZTIPDF[0-9]*[_bx];\n+    _ZTIPKDF[0-9]*[_bx];\n+\n+} CXXABI_1.3.13;\n+\n # Symbols in the support library (libsupc++) supporting transactional memory.\n CXXABI_TM_1 {\n "}, {"sha": "27616f5987ec4f51eda04aeafccbe80efdb56868", "filename": "libstdc++-v3/testsuite/util/testsuite_abi.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f101e32e2fb616633722fb552779f537e9a9891/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f101e32e2fb616633722fb552779f537e9a9891/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_abi.cc?ref=3f101e32e2fb616633722fb552779f537e9a9891", "patch": "@@ -230,6 +230,7 @@ check_version(symbol& test, bool added)\n       known_versions.push_back(\"CXXABI_1.3.11\");\n       known_versions.push_back(\"CXXABI_1.3.12\");\n       known_versions.push_back(\"CXXABI_1.3.13\");\n+      known_versions.push_back(\"CXXABI_1.3.14\");\n       known_versions.push_back(\"CXXABI_IEEE128_1.3.13\");\n       known_versions.push_back(\"CXXABI_TM_1\");\n       known_versions.push_back(\"CXXABI_FLOAT128\");\n@@ -251,7 +252,7 @@ check_version(symbol& test, bool added)\n       bool latestp = (test.version_name == \"GLIBCXX_3.4.31\"\n \t  // XXX remove next line when baselines have been regenerated.\n \t\t     || test.version_name == \"GLIBCXX_IEEE128_3.4.30\"\n-\t\t     || test.version_name == \"CXXABI_1.3.13\"\n+\t\t     || test.version_name == \"CXXABI_1.3.14\"\n \t\t     || test.version_name == \"CXXABI_FLOAT128\"\n \t\t     || test.version_name == \"CXXABI_TM_1\");\n       if (added && !latestp)"}]}