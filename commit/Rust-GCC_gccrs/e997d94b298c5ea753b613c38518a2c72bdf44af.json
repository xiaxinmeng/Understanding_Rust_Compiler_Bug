{"sha": "e997d94b298c5ea753b613c38518a2c72bdf44af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk5N2Q5NGIyOThjNWVhNzUzYjYxM2MzODUxOGEyYzcyYmRmNDRhZg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2020-05-15T15:40:50Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-07T09:27:00Z"}, "message": "[Ada] Avoid crash on node extension\n\ngcc/ada/\n\n\t* treepr.adb (Print_Node): Add code to test Is_Extension.", "tree": {"sha": "714dca955c9704e011351160826bc37f5ca66fa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/714dca955c9704e011351160826bc37f5ca66fa3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e997d94b298c5ea753b613c38518a2c72bdf44af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e997d94b298c5ea753b613c38518a2c72bdf44af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e997d94b298c5ea753b613c38518a2c72bdf44af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e997d94b298c5ea753b613c38518a2c72bdf44af/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a21df0b6a46a7807534c2096bba1642e74e1fbd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a21df0b6a46a7807534c2096bba1642e74e1fbd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a21df0b6a46a7807534c2096bba1642e74e1fbd3"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "b4fd54561659df7a94de92c15c91777b57da2e50", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e997d94b298c5ea753b613c38518a2c72bdf44af/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e997d94b298c5ea753b613c38518a2c72bdf44af/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=e997d94b298c5ea753b613c38518a2c72bdf44af", "patch": "@@ -1006,6 +1006,15 @@ package body Treepr is\n          return;\n       end if;\n \n+      --  Similarly, if N points to an extension, avoid crashing\n+\n+      if Atree_Private_Part.Nodes.Table (N).Is_Extension then\n+         Print_Int (Int (N));\n+         Print_Str (\" is an extension, not a node\");\n+         Print_Eol;\n+         return;\n+      end if;\n+\n       Prefix_Str_Char (Prefix_Str'Range)    := Prefix_Str;\n       Prefix_Str_Char (Prefix_Str'Last + 1) := Prefix_Char;\n "}]}