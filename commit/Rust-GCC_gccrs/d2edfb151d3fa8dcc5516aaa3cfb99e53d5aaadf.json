{"sha": "d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJlZGZiMTUxZDNmYThkY2M1NTE2YWFhM2NmYjk5ZTUzZDVhYWFkZg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2012-10-05T21:18:54Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2012-10-05T21:18:54Z"}, "message": "match: Rename to...\n\n2012-10-05  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/28_regex/algorithms/match: Rename to...\n\t* testsuite/28_regex/algorithms/regex_match: ...this.\n\t* testsuite/28_regex/basic_regex/regex.cc: Rename to...\n\t* testsuite/28_regex/basic_regex/ctors/basic/default.cc: ...this.\n\t* testsuite/util/testsuite_regex.h: New.\n\t* testsuite/28_regex/basic_regex/ctors/basic/raw_string.cc: New.\n\nFrom-SVN: r192146", "tree": {"sha": "d98c9f5cea71b341fff3493d729522dcfb3a5da5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d98c9f5cea71b341fff3493d729522dcfb3a5da5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/comments", "author": null, "committer": null, "parents": [{"sha": "74bf7dbb1e3104041e302d9b917dcec62aab5730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74bf7dbb1e3104041e302d9b917dcec62aab5730", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74bf7dbb1e3104041e302d9b917dcec62aab5730"}], "stats": {"total": 191, "additions": 191, "deletions": 0}, "files": [{"sha": "c651247fb353a754feeda3575c63322a8e715fe1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "patch": "@@ -1,3 +1,12 @@\n+2012-10-05  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/28_regex/algorithms/match: Rename to...\n+\t* testsuite/28_regex/algorithms/regex_match: ...this.\n+\t* testsuite/28_regex/basic_regex/regex.cc: Rename to...\n+\t* testsuite/28_regex/basic_regex/ctors/basic/default.cc: ...this.\n+\t* testsuite/util/testsuite_regex.h: New.\n+\t* testsuite/28_regex/basic_regex/ctors/basic/raw_string.cc: New.\n+\n 2012-10-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* testsuite/20_util/shared_ptr/cons/43820_neg.cc: Adjust line"}, {"sha": "4a7161a79673628d78e7dff24b780439936778c9", "filename": "libstdc++-v3/testsuite/28_regex/algorithms/regex_match/basic/string_01.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fbasic%2Fstring_01.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fbasic%2Fstring_01.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fbasic%2Fstring_01.cc?ref=d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "previous_filename": "libstdc++-v3/testsuite/28_regex/algorithms/match/basic/string_01.cc"}, {"sha": "6c0fdd76f2ce3e832f1ab82727d441f62ad7b775", "filename": "libstdc++-v3/testsuite/28_regex/algorithms/regex_match/basic/string_range_00_03.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fbasic%2Fstring_range_00_03.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fbasic%2Fstring_range_00_03.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fbasic%2Fstring_range_00_03.cc?ref=d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "previous_filename": "libstdc++-v3/testsuite/28_regex/algorithms/match/basic/string_range_00_03.cc"}, {"sha": "3439b544b63b9ce2d2350325fc7cb4fe3c40f4e7", "filename": "libstdc++-v3/testsuite/28_regex/algorithms/regex_match/basic/string_range_01_03.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fbasic%2Fstring_range_01_03.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fbasic%2Fstring_range_01_03.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fbasic%2Fstring_range_01_03.cc?ref=d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "previous_filename": "libstdc++-v3/testsuite/28_regex/algorithms/match/basic/string_range_01_03.cc"}, {"sha": "dfd00a0f3d7d58e1472166f86e9c074407b4492d", "filename": "libstdc++-v3/testsuite/28_regex/algorithms/regex_match/basic/string_range_02_03.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fbasic%2Fstring_range_02_03.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fbasic%2Fstring_range_02_03.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fbasic%2Fstring_range_02_03.cc?ref=d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "previous_filename": "libstdc++-v3/testsuite/28_regex/algorithms/match/basic/string_range_02_03.cc"}, {"sha": "ad0f57e221daac69be274f8ed231aa66ce9e892d", "filename": "libstdc++-v3/testsuite/28_regex/algorithms/regex_match/extended/cstring_plus.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fcstring_plus.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fcstring_plus.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fcstring_plus.cc?ref=d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "previous_filename": "libstdc++-v3/testsuite/28_regex/algorithms/match/extended/cstring_plus.cc"}, {"sha": "21abea456a9ef7c507ee7663b7e35dc1e1bed946", "filename": "libstdc++-v3/testsuite/28_regex/algorithms/regex_match/extended/cstring_questionmark.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fcstring_questionmark.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fcstring_questionmark.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fcstring_questionmark.cc?ref=d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "previous_filename": "libstdc++-v3/testsuite/28_regex/algorithms/match/extended/cstring_questionmark.cc"}, {"sha": "8d3716b1edff424516a0995c61c4c655e0e22c0e", "filename": "libstdc++-v3/testsuite/28_regex/algorithms/regex_match/extended/string_any.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fstring_any.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fstring_any.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fstring_any.cc?ref=d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "previous_filename": "libstdc++-v3/testsuite/28_regex/algorithms/match/extended/string_any.cc"}, {"sha": "a0a2e1fa9d88bacd8656bf5653e2721209eb5417", "filename": "libstdc++-v3/testsuite/28_regex/algorithms/regex_match/extended/string_range_00_03.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fstring_range_00_03.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fstring_range_00_03.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fstring_range_00_03.cc?ref=d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "previous_filename": "libstdc++-v3/testsuite/28_regex/algorithms/match/extended/string_range_00_03.cc"}, {"sha": "b50e07645ab33c42f663ae4da924d8fef88af337", "filename": "libstdc++-v3/testsuite/28_regex/algorithms/regex_match/extended/string_range_01_03.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fstring_range_01_03.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fstring_range_01_03.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fstring_range_01_03.cc?ref=d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "previous_filename": "libstdc++-v3/testsuite/28_regex/algorithms/match/extended/string_range_01_03.cc"}, {"sha": "ca322a8d4cdb1ba42501f72044f945b018ba0d66", "filename": "libstdc++-v3/testsuite/28_regex/algorithms/regex_match/extended/string_range_02_03.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fstring_range_02_03.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fstring_range_02_03.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fextended%2Fstring_range_02_03.cc?ref=d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "previous_filename": "libstdc++-v3/testsuite/28_regex/algorithms/match/extended/string_range_02_03.cc"}, {"sha": "8a803ede81f325ef471bbbbd4c8c32c9ee18661e", "filename": "libstdc++-v3/testsuite/28_regex/basic_regex/ctors/basic/default.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fctors%2Fbasic%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fctors%2Fbasic%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fctors%2Fbasic%2Fdefault.cc?ref=d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "previous_filename": "libstdc++-v3/testsuite/28_regex/basic_regex/regex.cc"}, {"sha": "0ab42ebaca6dbb028d1ff698394d5e9b8947bd39", "filename": "libstdc++-v3/testsuite/28_regex/basic_regex/ctors/basic/raw_string.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fctors%2Fbasic%2Fraw_string.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fctors%2Fbasic%2Fraw_string.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fctors%2Fbasic%2Fraw_string.cc?ref=d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "patch": "@@ -0,0 +1,52 @@\n+// { dg-options \"-std=c++0x\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+// 2012-08-20  Benjamin Kosnik <bkoz@redhat.com>\n+//\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// basic_regex constructors + raw string literals\n+\n+#include <regex>\n+#include <testsuite_regex.h>\n+\n+void\n+test01()\n+{\n+  using namespace __gnu_test;\n+\n+  // raw string literals\n+\n+  //string_type sre0(R\"(\\d{3}-\\d{3}-\\d{4})\"); // expected fail\n+\n+  string_type sre1(R\"( this\\n  and new : forms\\n  )\");\n+\n+  string_type sre2(R\"([:num:]{3}-[:num:]{3}-[:num:]{4})\");\n+\n+  // 1\n+  regex_type re(R\"( this\\n  and new : forms\\n  )\", std::regex::basic);\n+\n+  // 2\n+  regex_sanity_check(sre1);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "dbf4b34553d06da27e9bf44cf82981262350cc6e", "filename": "libstdc++-v3/testsuite/util/testsuite_regex.h", "status": "added", "additions": 130, "deletions": 0, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_regex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_regex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_regex.h?ref=d2edfb151d3fa8dcc5516aaa3cfb99e53d5aaadf", "patch": "@@ -0,0 +1,130 @@\n+// -*- C++ -*-\n+// regex utils for the C++ library testsuite.\n+//\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+\n+#include <regex>\n+#include <stdexcept>\n+#include <iostream>\n+\n+#ifndef _TESTSUITE_REGEX_H\n+#define _TESTSUITE_REGEX_H 1\n+\n+namespace __gnu_test\n+{\n+  // Test on a compilation of simple expressions, throw regex_error on error.\n+  typedef std::regex\t\t\t\tregex_type;\n+  typedef regex_type::flag_type\t\t\tflag_type;\n+  typedef std::regex_constants::error_type\terror_type;\n+  typedef std::size_t\t\t\t\tsize_type;\n+  typedef std::string\t\t\t\tstring_type;\n+\n+  // Utilities\n+  struct regex_expected_fail { };\n+\n+  const error_type regex_error_internal(static_cast<error_type>(-1));\n+\n+  // Stringify error codes for text logging.\n+  const char* regex_error_codes[] =\n+    {\n+    \"error_collate\",\n+    \"error_ctype\",\n+    \"error_escape\",\n+    \"error_backref\",\n+    \"error_brack\",\n+    \"error_paren\",\n+    \"error_brace\",\n+    \"error_badbrace\",\n+    \"error_range\",\n+    \"error_space\",\n+    \"error_badrepeat\",\n+    \"error_complexity\",\n+    \"error_stack\"\n+  };\n+\n+  void\n+  show_regex_error_codes()\n+  {\n+    using namespace std;\n+    using namespace std::regex_constants;\n+    const char tab('\\t');\n+    cout << \"error_collate =   \" << tab << error_collate << endl;\n+    cout << \"error_ctype =     \" << tab << error_ctype << endl;\n+    cout << \"error_escape =    \" << tab << error_escape << endl;\n+    cout << \"error_backref =   \" << tab << error_backref << endl;\n+    cout << \"error_brack =     \" << tab << error_brack << endl;\n+    cout << \"error_paren =     \" << tab << error_paren << endl;\n+    cout << \"error_brace =     \" << tab << error_brace << endl;\n+    cout << \"error_badbrace =  \" << tab << error_badbrace << endl;\n+    cout << \"error_range =     \" << tab << error_range << endl;\n+    cout << \"error_space =     \" << tab << error_space << endl;\n+    cout << \"error_badrepeat = \" << tab << error_badrepeat << endl;\n+    cout << \"error_complexity =\" << tab << error_complexity << endl;\n+    cout << \"error_stack =     \" << tab << error_stack << endl;\n+  }\n+\n+  // Arguments\n+  // string __res: the regular expression string\n+  // flag_type __f: flag\n+  // __error: expected error, if any\n+  void\n+  regex_sanity_check(const string_type& __res,\n+\t\t     flag_type __f = regex_type::basic,\n+\t\t     error_type __error =  regex_error_internal)\n+  {\n+    using namespace std;\n+\n+    try\n+      {\n+\tregex_type reo(__res, __f);\n+\tauto n = reo.mark_count();\n+\tcout << \"regex_type::mark_count \" << n << endl;\n+      }\n+    catch (const regex_error& e)\n+      {\n+\tcout << \"regex_sanity_check: \"  << __res << endl;\n+\tcout << \"regex_error::what \" << e.what() << endl;\n+\n+\tshow_regex_error_codes();\n+\tcout << \"regex_error::code \" << regex_error_codes[e.code()] << endl;\n+\t\n+\tif (__error != regex_error_internal)\n+\t  {\n+\t    // Then expected error_type is __error. Check.\n+\t    if (__error != e.code())\n+\t      {\n+\t\tthrow regex_expected_fail();\n+\t      }\n+\t  }\n+\tthrow;\n+      }\n+    catch (const logic_error& e)\n+      {\n+\tcout << \"logic_error::what \" << e.what() << endl;\n+\tthrow;\n+      }\n+    catch (const std::exception& e)\n+      {\n+\tcout << \"exception: \" << endl;\n+\tthrow;\n+      }\n+  }\n+\n+} // namespace __gnu_test\n+#endif"}]}