{"sha": "f9a577927eb08a413a1f48139e36850fa86628b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjlhNTc3OTI3ZWIwOGE0MTNhMWY0ODEzOWUzNjg1MGZhODY2MjhiMw==", "commit": {"author": {"name": "Marius Hillenbrand", "email": "mhillen@linux.ibm.com", "date": "2021-01-15T13:07:44Z"}, "committer": {"name": "Marius Hillenbrand", "email": "mhillen@linux.ibm.com", "date": "2021-01-15T14:20:31Z"}, "message": "IBM Z: Fix linking to libatomic in target test cases\n\nOne of the test cases failed to link because of missing paths to\nlibatomic. Reuse procedures in lib/atomic-dg.exp to gather these paths.\n\ngcc/testsuite/ChangeLog:\n\n2021-01-15  Marius Hillenbrand  <mhillen@linux.ibm.com>\n\n\t* gcc.target/s390/s390.exp: Call lib atomic-dg.exp to link\n\tlibatomic into testcases in gcc.target/s390/md.\n\t* gcc.target/s390/md/atomic_exchange-1.c: Remove no unnecessary\n\t-latomic.", "tree": {"sha": "5a306c63e4fe9c5274c32c8ad68698e671d757e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a306c63e4fe9c5274c32c8ad68698e671d757e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9a577927eb08a413a1f48139e36850fa86628b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9a577927eb08a413a1f48139e36850fa86628b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9a577927eb08a413a1f48139e36850fa86628b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9a577927eb08a413a1f48139e36850fa86628b3/comments", "author": {"login": "mhillenbrand", "id": 1150167, "node_id": "MDQ6VXNlcjExNTAxNjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1150167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhillenbrand", "html_url": "https://github.com/mhillenbrand", "followers_url": "https://api.github.com/users/mhillenbrand/followers", "following_url": "https://api.github.com/users/mhillenbrand/following{/other_user}", "gists_url": "https://api.github.com/users/mhillenbrand/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhillenbrand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhillenbrand/subscriptions", "organizations_url": "https://api.github.com/users/mhillenbrand/orgs", "repos_url": "https://api.github.com/users/mhillenbrand/repos", "events_url": "https://api.github.com/users/mhillenbrand/events{/privacy}", "received_events_url": "https://api.github.com/users/mhillenbrand/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mhillenbrand", "id": 1150167, "node_id": "MDQ6VXNlcjExNTAxNjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1150167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhillenbrand", "html_url": "https://github.com/mhillenbrand", "followers_url": "https://api.github.com/users/mhillenbrand/followers", "following_url": "https://api.github.com/users/mhillenbrand/following{/other_user}", "gists_url": "https://api.github.com/users/mhillenbrand/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhillenbrand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhillenbrand/subscriptions", "organizations_url": "https://api.github.com/users/mhillenbrand/orgs", "repos_url": "https://api.github.com/users/mhillenbrand/repos", "events_url": "https://api.github.com/users/mhillenbrand/events{/privacy}", "received_events_url": "https://api.github.com/users/mhillenbrand/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63999d751df9bcde4ab9107edb4c635d274b248d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63999d751df9bcde4ab9107edb4c635d274b248d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63999d751df9bcde4ab9107edb4c635d274b248d"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "54e97d34172ae1e4243a4c9097f03db6b3d828f9", "filename": "gcc/testsuite/gcc.target/s390/md/atomic_exchange-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9a577927eb08a413a1f48139e36850fa86628b3/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fatomic_exchange-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9a577927eb08a413a1f48139e36850fa86628b3/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fatomic_exchange-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fatomic_exchange-1.c?ref=f9a577927eb08a413a1f48139e36850fa86628b3", "patch": "@@ -1,7 +1,7 @@\n /* Machine description pattern tests.  */\n \n /* { dg-do compile } */\n-/* { dg-options \"-lpthread -latomic\" } */\n+/* { dg-options \"-lpthread\" } */\n /* { dg-do run { target { s390_useable_hw } } } */\n \n /**/"}, {"sha": "df460600d42d64788ae6872a2187b15d4ea35fa9", "filename": "gcc/testsuite/gcc.target/s390/s390.exp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9a577927eb08a413a1f48139e36850fa86628b3/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9a577927eb08a413a1f48139e36850fa86628b3/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp?ref=f9a577927eb08a413a1f48139e36850fa86628b3", "patch": "@@ -28,6 +28,7 @@ if ![istarget s390*-*-*] then {\n load_lib gcc-dg.exp\n load_lib target-supports.exp\n load_lib gfortran-dg.exp\n+load_lib atomic-dg.exp\n \n # Return 1 if the the assembler understands .machine and .machinemode.  The\n # target attribute needs that feature to work.\n@@ -250,6 +251,8 @@ dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/arch13/*.{c,S}]] \\\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/vxe/*.{c,S}]] \\\n \t\"\" \"-O3 -march=arch12 -mzarch\"\n \n+# Some md tests require libatomic\n+atomic_init\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/md/*.{c,S}]] \\\n \t\"\" $DEFAULT_CFLAGS\n \n@@ -294,4 +297,5 @@ foreach t [list $srcdir/$subdir/pr80080-3.c] {\n }\n \n # All done.\n+atomic_finish\n dg-finish"}]}