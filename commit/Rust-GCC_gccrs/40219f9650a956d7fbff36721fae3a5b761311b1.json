{"sha": "40219f9650a956d7fbff36721fae3a5b761311b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAyMTlmOTY1MGE5NTZkN2ZiZmYzNjcyMWZhZTNhNWI3NjEzMTFiMQ==", "commit": {"author": {"name": "Wu Yongwei", "email": "adah@sh163.net", "date": "2004-09-01T23:18:54Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2004-09-01T23:18:54Z"}, "message": "gthr-win32.h (__gthread_recursive_mutex_t): Use 'unsigned long', not Windows 'DWORD'.\n\n\t* gthr-win32.h (__gthread_recursive_mutex_t): Use 'unsigned long',\n\tnot Windows 'DWORD'.\n\t(__GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION): Correct typo.\n\t(__GTHREAD_RECURSIVE_MUTEX_INIT_DEFAULT): Likewise.\n\t(__gthr_win32_recursive_mutex_init_function): Add prototype for\n\t__GTHREAD_HIDE_WIN32API case..\n\t(__gthr_win32_recursive_mutex_lock): Likewise.\n\t(__gthr_win32_recursive_mutex_trylock): Likewise.\n\t(__gthr_win32_recursive_mutex_unlock): Likewise.\n\t(__gthread_recursive_mutex_init_function); Add definition for\n\t__GTHREAD_HIDE_WIN32API case.\n\t(__gthread_recursive_mutex_lock): Correct call to InterlockedDecrement.\n\t* config/i386/grthr-win32.c (__gthread_recursive_mutex_lock): Correct\n\tcall to InterlockedDecrement.\n\nCo-Authored-By: Danny Smith <dannysmith@users.sourceforge.net>\n\nFrom-SVN: r86939", "tree": {"sha": "c0cf7a4d0974baae80291d2385965871d0eb1773", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0cf7a4d0974baae80291d2385965871d0eb1773"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40219f9650a956d7fbff36721fae3a5b761311b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40219f9650a956d7fbff36721fae3a5b761311b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40219f9650a956d7fbff36721fae3a5b761311b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40219f9650a956d7fbff36721fae3a5b761311b1/comments", "author": null, "committer": null, "parents": [{"sha": "ba2e294dfbbb6790b8f26e654b487a6aae94a1c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba2e294dfbbb6790b8f26e654b487a6aae94a1c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba2e294dfbbb6790b8f26e654b487a6aae94a1c7"}], "stats": {"total": 41, "additions": 36, "deletions": 5}, "files": [{"sha": "47a00dcf14e3faa5e23f7a49f6a9e459ad39acb7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40219f9650a956d7fbff36721fae3a5b761311b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40219f9650a956d7fbff36721fae3a5b761311b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40219f9650a956d7fbff36721fae3a5b761311b1", "patch": "@@ -1,3 +1,21 @@\n+2004-09-01  Wu Yongwei  <adah@sh163.net>\n+\t    Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* gthr-win32.h (__gthread_recursive_mutex_t): Use 'unsigned long',\n+\tnot Windows 'DWORD'.\n+\t(__GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION): Correct typo.\n+\t(__GTHREAD_RECURSIVE_MUTEX_INIT_DEFAULT): Likewise.\n+\t(__gthr_win32_recursive_mutex_init_function): Add prototype for\n+\t__GTHREAD_HIDE_WIN32API case..\n+\t(__gthr_win32_recursive_mutex_lock): Likewise.\n+\t(__gthr_win32_recursive_mutex_trylock): Likewise.\n+\t(__gthr_win32_recursive_mutex_unlock): Likewise.\n+\t(__gthread_recursive_mutex_init_function); Add definition for\n+\t__GTHREAD_HIDE_WIN32API case.\n+\t(__gthread_recursive_mutex_lock): Correct call to InterlockedDecrement.\n+\t* config/i386/grthr-win32.c (__gthread_recursive_mutex_lock): Correct\n+\tcall to InterlockedDecrement.\n+\n 2004-09-01  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* tree-tailcall.c (find_tail_calls): Also fail is statement has"}, {"sha": "d6cd7a98796e269c66251f26d41b40b70213640a", "filename": "gcc/config/i386/gthr-win32.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40219f9650a956d7fbff36721fae3a5b761311b1/gcc%2Fconfig%2Fi386%2Fgthr-win32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40219f9650a956d7fbff36721fae3a5b761311b1/gcc%2Fconfig%2Fi386%2Fgthr-win32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgthr-win32.c?ref=40219f9650a956d7fbff36721fae3a5b761311b1", "patch": "@@ -203,7 +203,7 @@ __gthr_win32_recursive_mutex_lock (__gthread_recursive_mutex_t *mutex)\n     }\n   else if (mutex->owner == me)\n     {\n-      InterlockedDecrement (&mx->lock_idx);\n+      InterlockedDecrement (&mutex->counter);\n       ++(mutex->depth);\n     }\n   else if (WaitForSingleObject (mutex->sema, INFINITE) == WAIT_OBJECT_0)"}, {"sha": "49ea54081c86b6c418e24bfb926f3d61fa08f984", "filename": "gcc/gthr-win32.h", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40219f9650a956d7fbff36721fae3a5b761311b1/gcc%2Fgthr-win32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40219f9650a956d7fbff36721fae3a5b761311b1/gcc%2Fgthr-win32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-win32.h?ref=40219f9650a956d7fbff36721fae3a5b761311b1", "patch": "@@ -346,15 +346,16 @@ typedef struct {\n typedef struct {\n   long counter;\n   long depth;\n-  DWORD owner;\n+  unsigned long owner;\n   void *sema;\n } __gthread_recursive_mutex_t;\n \n #define __GTHREAD_ONCE_INIT {0, -1}\n #define __GTHREAD_MUTEX_INIT_FUNCTION __gthread_mutex_init_function\n #define __GTHREAD_MUTEX_INIT_DEFAULT {-1, 0}\n-#define __GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION __gthread_mutex_init_function\n-#define __GTHREAD_RECURSIVE_MUTEX_INIT_DEFAULT {-1, 0}\n+#define __GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION \\\n+  __gthread_recursive_mutex_init_function\n+#define __GTHREAD_RECURSIVE_MUTEX_INIT_DEFAULT {-1, 0, 0, 0}\n \n #if __MINGW32_MAJOR_VERSION >= 1 || \\\n   (__MINGW32_MAJOR_VERSION == 0 && __MINGW32_MINOR_VERSION > 2)\n@@ -414,6 +415,12 @@ extern void __gthr_win32_mutex_init_function (__gthread_mutex_t *);\n extern int __gthr_win32_mutex_lock (__gthread_mutex_t *);\n extern int __gthr_win32_mutex_trylock (__gthread_mutex_t *);\n extern int __gthr_win32_mutex_unlock (__gthread_mutex_t *);\n+extern void\n+  __gthr_win32_recursive_mutex_init_function (__gthread_recursive_mutex_t *);\n+extern int __gthr_win32_recursive_mutex_lock (__gthread_recursive_mutex_t *);\n+extern int\n+  __gthr_win32_recursive_mutex_trylock (__gthread_recursive_mutex_t *);\n+extern int __gthr_win32_recursive_mutex_unlock (__gthread_recursive_mutex_t *);\n \n static inline int\n __gthread_once (__gthread_once_t *once, void (*func) (void))\n@@ -481,6 +488,12 @@ __gthread_mutex_unlock (__gthread_mutex_t *mutex)\n     return 0;\n }\n \n+static inline void\n+__gthread_recursive_mutex_init_function (__gthread_recursive_mutex_t *mutex)\n+{\n+   __gthr_win32_recursive_mutex_init_function (mutex);\n+}\n+\n static inline int\n __gthread_recursive_mutex_lock (__gthread_recursive_mutex_t *mutex)\n {\n@@ -668,7 +681,7 @@ __gthread_recursive_mutex_lock (__gthread_recursive_mutex_t *mutex)\n \t}\n       else if (mutex->owner == me)\n \t{\n-\t  InterlockedDecrement (&mx->lock_idx);\n+\t  InterlockedDecrement (&mutex->counter);\n \t  ++(mutex->depth);\n \t}\n       else if (WaitForSingleObject (mutex->sema, INFINITE) == WAIT_OBJECT_0)"}]}