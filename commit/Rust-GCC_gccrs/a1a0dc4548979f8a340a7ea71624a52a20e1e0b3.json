{"sha": "a1a0dc4548979f8a340a7ea71624a52a20e1e0b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFhMGRjNDU0ODk3OWY4YTM0MGE3ZWE3MTYyNGE1MmEyMGUxZTBiMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-07-01T20:01:15Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-07-01T20:06:42Z"}, "message": "libstdc++: Remove noexcept from match_results comparisons (PR 94627)\n\nThese functions can't be noexcept because the iterators stored in the\nsub_match objects can throw on any operation.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/94627\n\t* include/bits/regex.h (operator==, operator!=): Remove noexcept\n\tequality comparisons for match_results.\n\t* testsuite/28_regex/match_results/94627.cc: New test.", "tree": {"sha": "1bb35bd3e21f2037987c34fc504e6ab4e533cd48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bb35bd3e21f2037987c34fc504e6ab4e533cd48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1a0dc4548979f8a340a7ea71624a52a20e1e0b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1a0dc4548979f8a340a7ea71624a52a20e1e0b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1a0dc4548979f8a340a7ea71624a52a20e1e0b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1a0dc4548979f8a340a7ea71624a52a20e1e0b3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "039a630d787dc18c76b81f08a322ba1e0d91082d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/039a630d787dc18c76b81f08a322ba1e0d91082d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/039a630d787dc18c76b81f08a322ba1e0d91082d"}], "stats": {"total": 79, "additions": 77, "deletions": 2}, "files": [{"sha": "4032fd7559b647d56e45046b06a131bcf566cebb", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1a0dc4548979f8a340a7ea71624a52a20e1e0b3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1a0dc4548979f8a340a7ea71624a52a20e1e0b3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=a1a0dc4548979f8a340a7ea71624a52a20e1e0b3", "patch": "@@ -2099,7 +2099,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n   template<typename _Bi_iter, typename _Alloc>\n     inline bool\n     operator==(const match_results<_Bi_iter, _Alloc>& __m1,\n-\t       const match_results<_Bi_iter, _Alloc>& __m2) noexcept\n+\t       const match_results<_Bi_iter, _Alloc>& __m2)\n     {\n       if (__m1.ready() != __m2.ready())\n \treturn false;\n@@ -2124,7 +2124,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n   template<typename _Bi_iter, class _Alloc>\n     inline bool\n     operator!=(const match_results<_Bi_iter, _Alloc>& __m1,\n-\t       const match_results<_Bi_iter, _Alloc>& __m2) noexcept\n+\t       const match_results<_Bi_iter, _Alloc>& __m2)\n     { return !(__m1 == __m2); }\n #endif\n "}, {"sha": "dc4883c19a0467d95edb9f19e3dd1f11354a6578", "filename": "libstdc++-v3/testsuite/28_regex/match_results/94627.cc", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1a0dc4548979f8a340a7ea71624a52a20e1e0b3/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fmatch_results%2F94627.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1a0dc4548979f8a340a7ea71624a52a20e1e0b3/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fmatch_results%2F94627.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fmatch_results%2F94627.cc?ref=a1a0dc4548979f8a340a7ea71624a52a20e1e0b3", "patch": "@@ -0,0 +1,75 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run { target c++11 } }\n+\n+#include <regex>\n+#include <testsuite_hooks.h>\n+\n+struct iterator\n+{\n+  using value_type = char;\n+  using difference_type = std::ptrdiff_t;\n+  using reference = char&;\n+  using pointer = char*;\n+  using iterator_category = std::bidirectional_iterator_tag;\n+\n+  iterator() : ptr() { }\n+  explicit iterator(pointer p) : ptr(p) { }\n+\n+  iterator& operator++() { if (bang) throw 1; ++ptr; return *this; }\n+  iterator operator++(int) { auto copy = *this; ++*this; return copy; }\n+  iterator& operator--() { if (bang) throw 1; --ptr; return *this; }\n+  iterator operator--(int) { auto copy = *this; --*this; return copy; }\n+\n+  reference operator*() const noexcept { return *ptr; }\n+  pointer operator->() const noexcept { return ptr; }\n+\n+  bool operator==(iterator rhs) const noexcept { return ptr == rhs.ptr; }\n+  bool operator!=(iterator rhs) const noexcept { return ptr != rhs.ptr; }\n+\n+  static bool bang;\n+\n+private:\n+  pointer ptr;\n+};\n+\n+bool iterator::bang = false;\n+\n+int main()\n+{\n+  char str[] = \"abc\";\n+  std::regex r(str);\n+  std::match_results<iterator> m;\n+  std::regex_match(iterator(str), iterator(str+3), m, r);\n+  iterator::bang = true;\n+  bool caught = false;\n+  try {\n+    (void) (m == m);\n+  } catch (int) {\n+    caught = true;\n+  }\n+  VERIFY( caught );\n+  caught = false;\n+\n+  try {\n+    (void) (m != m);\n+  } catch (int) {\n+    caught = true;\n+  }\n+  VERIFY( caught );\n+}"}]}