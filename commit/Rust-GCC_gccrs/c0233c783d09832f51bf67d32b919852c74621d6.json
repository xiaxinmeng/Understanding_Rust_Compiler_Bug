{"sha": "c0233c783d09832f51bf67d32b919852c74621d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAyMzNjNzgzZDA5ODMyZjUxYmY2N2QzMmI5MTk4NTJjNzQ2MjFkNg==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2015-10-02T08:32:12Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2015-10-02T08:32:12Z"}, "message": "[Patch AArch64] Improve SIMD concatenation with zeroes\n\ngcc/\n\n\t* config/aarch64/aarch64-simd.md (*aarch64_combinez<mode>): Add\n\talternatives for reads from memory and moves from general-purpose\n\tregisters.\n\t(*aarch64_combinez_be<mode>): Likewise.\n\ngcc/testsuite/\n\n\t* gcc.target/aarch64/vect_combine_zeroes_1.c: New.\n\nFrom-SVN: r228374", "tree": {"sha": "1579edabcb4c2a6726e1893c28ad36ba3493f097", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1579edabcb4c2a6726e1893c28ad36ba3493f097"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0233c783d09832f51bf67d32b919852c74621d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0233c783d09832f51bf67d32b919852c74621d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0233c783d09832f51bf67d32b919852c74621d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0233c783d09832f51bf67d32b919852c74621d6/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "547bbe4977c9b9a963f8019b522db185c7e9bcdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/547bbe4977c9b9a963f8019b522db185c7e9bcdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/547bbe4977c9b9a963f8019b522db185c7e9bcdb"}], "stats": {"total": 65, "additions": 55, "deletions": 10}, "files": [{"sha": "6eeb740e59012445f5112512e4405b5b811615a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0233c783d09832f51bf67d32b919852c74621d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0233c783d09832f51bf67d32b919852c74621d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0233c783d09832f51bf67d32b919852c74621d6", "patch": "@@ -1,3 +1,10 @@\n+2015-10-02  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/aarch64/aarch64-simd.md (*aarch64_combinez<mode>): Add\n+\talternatives for reads from memory and moves from general-purpose\n+\tregisters.\n+\t(*aarch64_combinez_be<mode>): Likewise.\n+\n 2015-10-02  Kai Tietz  <ktietz70@googlemail.com>\n \n \tPR target/51726"}, {"sha": "6a2ab619d76c28533ba9c668fb807ae07ed9719d", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0233c783d09832f51bf67d32b919852c74621d6/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0233c783d09832f51bf67d32b919852c74621d6/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=c0233c783d09832f51bf67d32b919852c74621d6", "patch": "@@ -2530,23 +2530,33 @@\n ;; dest vector.\n \n (define_insn \"*aarch64_combinez<mode>\"\n-  [(set (match_operand:<VDBL> 0 \"register_operand\" \"=&w\")\n+  [(set (match_operand:<VDBL> 0 \"register_operand\" \"=w,w,w\")\n         (vec_concat:<VDBL>\n-\t   (match_operand:VD_BHSI 1 \"register_operand\" \"w\")\n-\t   (match_operand:VD_BHSI 2 \"aarch64_simd_imm_zero\" \"Dz\")))]\n+\t   (match_operand:VD_BHSI 1 \"general_operand\" \"w,r,m\")\n+\t   (match_operand:VD_BHSI 2 \"aarch64_simd_imm_zero\" \"Dz,Dz,Dz\")))]\n   \"TARGET_SIMD && !BYTES_BIG_ENDIAN\"\n-  \"mov\\\\t%0.8b, %1.8b\"\n-  [(set_attr \"type\" \"neon_move<q>\")]\n+  \"@\n+   mov\\\\t%0.8b, %1.8b\n+   fmov\\t%d0, %1\n+   ldr\\\\t%d0, %1\"\n+  [(set_attr \"type\" \"neon_move<q>, neon_from_gp, neon_load1_1reg\")\n+   (set_attr \"simd\" \"yes,*,yes\")\n+   (set_attr \"fp\" \"*,yes,*\")]\n )\n \n (define_insn \"*aarch64_combinez_be<mode>\"\n-  [(set (match_operand:<VDBL> 0 \"register_operand\" \"=&w\")\n+  [(set (match_operand:<VDBL> 0 \"register_operand\" \"=w,w,w\")\n         (vec_concat:<VDBL>\n-\t   (match_operand:VD_BHSI 2 \"aarch64_simd_imm_zero\" \"Dz\")\n-\t   (match_operand:VD_BHSI 1 \"register_operand\" \"w\")))]\n+\t   (match_operand:VD_BHSI 2 \"aarch64_simd_imm_zero\" \"Dz,Dz,Dz\")\n+\t   (match_operand:VD_BHSI 1 \"general_operand\" \"w,r,m\")))]\n   \"TARGET_SIMD && BYTES_BIG_ENDIAN\"\n-  \"mov\\\\t%0.8b, %1.8b\"\n-  [(set_attr \"type\" \"neon_move<q>\")]\n+  \"@\n+   mov\\\\t%0.8b, %1.8b\n+   fmov\\t%d0, %1\n+   ldr\\\\t%d0, %1\"\n+  [(set_attr \"type\" \"neon_move<q>, neon_from_gp, neon_load1_1reg\")\n+   (set_attr \"simd\" \"yes,*,yes\")\n+   (set_attr \"fp\" \"*,yes,*\")]\n )\n \n (define_expand \"aarch64_combine<mode>\""}, {"sha": "1028cf765ee386fc59519421f410eb6690a3ba78", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0233c783d09832f51bf67d32b919852c74621d6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0233c783d09832f51bf67d32b919852c74621d6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c0233c783d09832f51bf67d32b919852c74621d6", "patch": "@@ -1,3 +1,7 @@\n+2015-10-02  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* gcc.target/aarch64/vect_combine_zeroes_1.c: New.\n+\n 2015-10-02  Kai Tietz  <ktietz70@googlemail.com>\n \n \tPR target/51726"}, {"sha": "6257fa978dec0cce3ab1921578281d20ada8e181", "filename": "gcc/testsuite/gcc.target/aarch64/vect_combine_zeroes_1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0233c783d09832f51bf67d32b919852c74621d6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect_combine_zeroes_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0233c783d09832f51bf67d32b919852c74621d6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect_combine_zeroes_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect_combine_zeroes_1.c?ref=c0233c783d09832f51bf67d32b919852c74621d6", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-options \"-O2 --save-temps\" } */\n+\n+#include \"arm_neon.h\"\n+\n+int32x4_t\n+foo (int32x2_t *x)\n+{\n+  int32x2_t i = *x;\n+  int32x2_t zeroes = vcreate_s32 (0l);\n+  int32x4_t ret = vcombine_s32 (i, zeroes);\n+  return ret;\n+}\n+\n+int32x4_t\n+bar (int64_t x)\n+{\n+  int32x2_t i = vcreate_s32 (x);\n+  int32x2_t zeroes = vcreate_s32 (0l);\n+  int32x4_t ret = vcombine_s32 (i, zeroes);\n+  return ret;\n+}\n+\n+/* { dg-final { scan-assembler-not \"mov\\tv\\[0-9\\]+.8b, v\\[0-9\\]+.8b\" } } */\n+"}]}