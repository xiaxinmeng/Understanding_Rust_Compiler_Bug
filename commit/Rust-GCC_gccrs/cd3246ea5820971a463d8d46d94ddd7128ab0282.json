{"sha": "cd3246ea5820971a463d8d46d94ddd7128ab0282", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QzMjQ2ZWE1ODIwOTcxYTQ2M2Q4ZDQ2ZDk0ZGRkNzEyOGFiMDI4Mg==", "commit": {"author": {"name": "Philipp Tomsich", "email": "philipp.tomsich@theobroma-systems.com", "date": "2015-01-15T14:48:12Z"}, "committer": {"name": "Philipp Tomsich", "email": "ptomsich@gcc.gnu.org", "date": "2015-01-15T14:48:12Z"}, "message": "arm.md (generic_sched): Specify xgene1 in 'no' list.\n\n2015-01-15  Philipp Tomsich  <philipp.tomsich@theobroma-systems.com>\n\n        * config/arm/arm.md (generic_sched): Specify xgene1 in 'no' list.\n        Include xgene1.md.\n        * config/arm/arm.c (arm_issue_rate): Specify 4 for xgene1.\n        * config/arm/arm-cores.def (xgene1): New entry.\n        * config/arm/arm-tables.opt: Regenerate.\n        * config/arm/arm-tune.md: Regenerate.\n        * config/arm/bpabi.h (BE8_LINK_SPEC): Specify mcpu=xgene1.\n\nFrom-SVN: r219661", "tree": {"sha": "10ba8e544de40b08ea0c31c4213e366fcc3fa369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10ba8e544de40b08ea0c31c4213e366fcc3fa369"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd3246ea5820971a463d8d46d94ddd7128ab0282", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3246ea5820971a463d8d46d94ddd7128ab0282", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd3246ea5820971a463d8d46d94ddd7128ab0282", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3246ea5820971a463d8d46d94ddd7128ab0282/comments", "author": null, "committer": null, "parents": [{"sha": "f5422cbf782d44a6ff0cfe3633833e36a97e9e23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5422cbf782d44a6ff0cfe3633833e36a97e9e23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5422cbf782d44a6ff0cfe3633833e36a97e9e23"}], "stats": {"total": 56, "additions": 52, "deletions": 4}, "files": [{"sha": "21d6a8809f1b598a8b291c3dab6b1ac78eb4458b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd3246ea5820971a463d8d46d94ddd7128ab0282", "patch": "@@ -1,3 +1,13 @@\n+2015-01-15  Philipp Tomsich  <philipp.tomsich@theobroma-systems.com>\n+\n+\t* config/arm/arm.md (generic_sched): Specify xgene1 in 'no' list.\n+\tInclude xgene1.md.\n+\t* config/arm/arm.c (arm_issue_rate): Specify 4 for xgene1.\n+\t* config/arm/arm-cores.def (xgene1): New entry.\n+\t* config/arm/arm-tables.opt: Regenerate.\n+\t* config/arm/arm-tune.md: Regenerate.\n+\t* config/arm/bpabi.h (BE8_LINK_SPEC): Specify mcpu=xgene1.\n+\n 2015-01-15  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \t* tree-if-conv.c: Include hash-map.h."}, {"sha": "fa13eb9d916f17a0b8ac9adbd6936cfaad04f46c", "filename": "gcc/config/arm/arm-cores.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2Fconfig%2Farm%2Farm-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2Fconfig%2Farm%2Farm-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cores.def?ref=cd3246ea5820971a463d8d46d94ddd7128ab0282", "patch": "@@ -167,6 +167,7 @@ ARM_CORE(\"cortex-a17.cortex-a7\", cortexa17cortexa7, cortexa7,\t7A,  FL_LDSCHED |\n /* V8 Architecture Processors */\n ARM_CORE(\"cortex-a53\",\tcortexa53, cortexa53,\t8A, FL_LDSCHED | FL_CRC32, cortex_a53)\n ARM_CORE(\"cortex-a57\",\tcortexa57, cortexa15,\t8A, FL_LDSCHED | FL_CRC32, cortex_a57)\n+ARM_CORE(\"xgene1\",      xgene1,    xgene1,      8A, FL_LDSCHED,            xgene1)\n \n /* V8 big.LITTLE implementations */\n ARM_CORE(\"cortex-a57.cortex-a53\", cortexa57cortexa53, cortexa53, 8A,  FL_LDSCHED | FL_CRC32, cortex_a57)"}, {"sha": "1392429d74fb92bf3e80f12436834f35e0428bf7", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=cd3246ea5820971a463d8d46d94ddd7128ab0282", "patch": "@@ -309,6 +309,9 @@ Enum(processor_type) String(cortex-a53) Value(cortexa53)\n EnumValue\n Enum(processor_type) String(cortex-a57) Value(cortexa57)\n \n+EnumValue\n+Enum(processor_type) String(xgene1) Value(xgene1)\n+\n EnumValue\n Enum(processor_type) String(cortex-a57.cortex-a53) Value(cortexa57cortexa53)\n "}, {"sha": "dcd505423f68e531f8ff2eaf361a39b8dbf7fa97", "filename": "gcc/config/arm/arm-tune.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2Fconfig%2Farm%2Farm-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2Fconfig%2Farm%2Farm-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tune.md?ref=cd3246ea5820971a463d8d46d94ddd7128ab0282", "patch": "@@ -32,5 +32,6 @@\n \tcortexr4f,cortexr5,cortexr7,\n \tcortexm7,cortexm4,cortexm3,\n \tmarvell_pj4,cortexa15cortexa7,cortexa17cortexa7,\n-\tcortexa53,cortexa57,cortexa57cortexa53\"\n+\tcortexa53,cortexa57,xgene1,\n+\tcortexa57cortexa53\"\n \t(const (symbol_ref \"((enum attr_tune) arm_tune)\")))"}, {"sha": "a2cce8e36920abbdf048e94e70476071427cccc8", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=cd3246ea5820971a463d8d46d94ddd7128ab0282", "patch": "@@ -1912,6 +1912,25 @@ const struct tune_params arm_cortex_a57_tune =\n   ARM_FUSE_MOVW_MOVT\t\t\t\t/* Fuseable pairs of instructions.  */\n };\n \n+const struct tune_params arm_xgene1_tune =\n+{\n+  arm_9e_rtx_costs,\n+  &xgene1_extra_costs,\n+  NULL,                                        /* Scheduler cost adjustment.  */\n+  1,                                           /* Constant limit.  */\n+  2,                                           /* Max cond insns.  */\n+  ARM_PREFETCH_NOT_BENEFICIAL,\n+  false,                                       /* Prefer constant pool.  */\n+  arm_default_branch_cost,\n+  true,                                        /* Prefer LDRD/STRD.  */\n+  {true, true},                                /* Prefer non short circuit.  */\n+  &arm_default_vec_cost,                       /* Vectorizer costs.  */\n+  false,                                       /* Prefer Neon for 64-bits bitops.  */\n+  true, true,                                  /* Prefer 32-bit encodings.  */\n+  false,\t\t\t\t       /* Prefer Neon for stringops.  */\n+  32\t\t\t\t\t       /* Maximum insns to inline memset.  */\n+};\n+\n /* Branches can be dual-issued on Cortex-A5, so conditional execution is\n    less appealing.  Set max_insns_skipped to a low value.  */\n \n@@ -27090,6 +27109,9 @@ arm_issue_rate (void)\n {\n   switch (arm_tune)\n     {\n+    case xgene1:\n+      return 4;\n+\n     case cortexa15:\n     case cortexa57:\n       return 3;"}, {"sha": "5e6649a5dd39c58fac66bb26e0ffae32d2b4a6b8", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=cd3246ea5820971a463d8d46d94ddd7128ab0282", "patch": "@@ -109,6 +109,11 @@\n ;; given instruction does not shift one of its input operands.\n (define_attr \"shift\" \"\" (const_int 0))\n \n+;; [For compatibility with AArch64 in pipeline models]\n+;; Attribute that specifies whether or not the instruction touches fp\n+;; registers.\n+(define_attr \"fp\" \"no,yes\" (const_string \"no\"))\n+\n ; Floating Point Unit.  If we only have floating point emulation, then there\n ; is no point in scheduling the floating point insns.  (Well, for best\n ; performance we should try and group them together).\n@@ -386,7 +391,8 @@\n                                 arm926ejs,arm1020e,arm1026ejs,arm1136js,\\\n                                 arm1136jfs,cortexa5,cortexa7,cortexa8,\\\n                                 cortexa9,cortexa12,cortexa15,cortexa17,\\\n-                                cortexa53,cortexm4,cortexm7,marvell_pj4\")\n+                                cortexa53,cortexm4,cortexm7,marvell_pj4,\\\n+\t\t\t\txgene1\")\n \t       (eq_attr \"tune_cortexr4\" \"yes\"))\n           (const_string \"no\")\n           (const_string \"yes\"))))\n@@ -396,7 +402,7 @@\n \t  (and (eq_attr \"fpu\" \"vfp\")\n \t       (eq_attr \"tune\" \"!arm1020e,arm1022e,cortexa5,cortexa7,\\\n                                 cortexa8,cortexa9,cortexa53,cortexm4,\\\n-                                cortexm7,marvell_pj4\")\n+                                cortexm7,marvell_pj4,xgene1\")\n \t       (eq_attr \"tune_cortexr4\" \"no\"))\n \t  (const_string \"yes\")\n \t  (const_string \"no\"))))\n@@ -426,6 +432,7 @@\n (include \"cortex-m4-fpu.md\")\n (include \"vfp11.md\")\n (include \"marvell-pj4.md\")\n+(include \"xgene1.md\")\n \n \f\n ;;---------------------------------------------------------------------------"}, {"sha": "8e164340ac7540c8a4ccc6611e24ea156577c423", "filename": "gcc/config/arm/bpabi.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2Fconfig%2Farm%2Fbpabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2Fconfig%2Farm%2Fbpabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fbpabi.h?ref=cd3246ea5820971a463d8d46d94ddd7128ab0282", "patch": "@@ -71,6 +71,7 @@\n    |mcpu=cortex-a53\t\t\t\t\t\\\n    |mcpu=cortex-a57\t\t\t\t\t\\\n    |mcpu=cortex-a57.cortex-a53\t\t\t\t\\\n+   |mcpu=xgene1                                         \\\n    |mcpu=cortex-m1.small-multiply                       \\\n    |mcpu=cortex-m0.small-multiply                       \\\n    |mcpu=cortex-m0plus.small-multiply\t\t\t\\\n@@ -92,6 +93,7 @@\n    |mcpu=cortex-a53\t\t\t\t\t\\\n    |mcpu=cortex-a57\t\t\t\t\t\\\n    |mcpu=cortex-a57.cortex-a53\t\t\t\t\\\n+   |mcpu=xgene1                                         \\\n    |mcpu=cortex-m1.small-multiply                       \\\n    |mcpu=cortex-m0.small-multiply                       \\\n    |mcpu=cortex-m0plus.small-multiply                   \\"}, {"sha": "4ef38a87f013a0bc3e4b41bc3eda8dcd573caa3b", "filename": "gcc/config/arm/t-arm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2Fconfig%2Farm%2Ft-arm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2Fconfig%2Farm%2Ft-arm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-arm?ref=cd3246ea5820971a463d8d46d94ddd7128ab0282", "patch": "@@ -40,6 +40,7 @@ MD_INCLUDES=\t$(srcdir)/config/arm/arm1020e.md \\\n \t\t$(srcdir)/config/arm/cortex-a9.md \\\n \t\t$(srcdir)/config/arm/cortex-a9-neon.md \\\n \t\t$(srcdir)/config/arm/cortex-a53.md \\\n+\t\t$(srcdir)/config/arm/xgene1.md \\\n \t\t$(srcdir)/config/arm/cortex-m4-fpu.md \\\n \t\t$(srcdir)/config/arm/cortex-m4.md \\\n \t\t$(srcdir)/config/arm/cortex-r4f.md \\"}, {"sha": "96faf0fd5b0971c0466982fa9f5ffd9db8973144", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3246ea5820971a463d8d46d94ddd7128ab0282/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=cd3246ea5820971a463d8d46d94ddd7128ab0282", "patch": "@@ -12979,7 +12979,8 @@ Permissible names are: @samp{arm2}, @samp{arm250},\n @samp{marvell-pj4},\n @samp{xscale}, @samp{iwmmxt}, @samp{iwmmxt2}, @samp{ep9312},\n @samp{fa526}, @samp{fa626},\n-@samp{fa606te}, @samp{fa626te}, @samp{fmp626}, @samp{fa726te}.\n+@samp{fa606te}, @samp{fa626te}, @samp{fmp626}, @samp{fa726te},\n+@samp{xgene1}.\n \n Additionally, this option can specify that GCC should tune the performance\n of the code for a big.LITTLE system.  Permissible names are:"}]}