{"sha": "b7d4b734f2d81eccb67903e4fa8f94249238d39c", "node_id": "C_kwDOANBUbNoAKGI3ZDRiNzM0ZjJkODFlY2NiNjc5MDNlNGZhOGY5NDI0OTIzOGQzOWM", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2022-08-15T17:50:50Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2022-08-24T19:15:32Z"}, "message": "[RISCV] Use constraints/predicates instead of checking const_int directly for shNadd patterns\n\nThis simplifies the code by adding a predicate and a constraint for 1/2/3.\nThe aarch64 backend has a similar predicate called aarch64_shift_imm_<mode>\nwhich they use there.\n\nOK? Built and tested on riscv32-linux-gnu and riscv64-linux-gnu with no regressions.\n\nThanks,\nAndrew Pinski\n\ngcc/ChangeLog:\n\n\t* config/riscv/constraints.md (Ds3): New constraint.\n\t* config/riscv/predicates.md (imm123_operand): New predicate.\n\t* config/riscv/bitmanip.md (*shNadd): Use Ds3 and imm123_operand.\n\t(*shNadduw): Likewise.", "tree": {"sha": "1aafb054ee66e3b89c70914d0cedfecd699aa2d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1aafb054ee66e3b89c70914d0cedfecd699aa2d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7d4b734f2d81eccb67903e4fa8f94249238d39c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d4b734f2d81eccb67903e4fa8f94249238d39c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7d4b734f2d81eccb67903e4fa8f94249238d39c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d4b734f2d81eccb67903e4fa8f94249238d39c/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "473d7aad848fe6ec151e7445e06c6e06ee4bd576", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/473d7aad848fe6ec151e7445e06c6e06ee4bd576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/473d7aad848fe6ec151e7445e06c6e06ee4bd576"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "258bd5a84fcdd62bb5d12397030a475660ebf629", "filename": "gcc/config/riscv/bitmanip.md", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d4b734f2d81eccb67903e4fa8f94249238d39c/gcc%2Fconfig%2Friscv%2Fbitmanip.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d4b734f2d81eccb67903e4fa8f94249238d39c/gcc%2Fconfig%2Friscv%2Fbitmanip.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fbitmanip.md?ref=b7d4b734f2d81eccb67903e4fa8f94249238d39c", "patch": "@@ -32,10 +32,9 @@\n (define_insn \"*shNadd\"\n   [(set (match_operand:X 0 \"register_operand\" \"=r\")\n \t(plus:X (ashift:X (match_operand:X 1 \"register_operand\" \"r\")\n-\t\t\t  (match_operand:QI 2 \"immediate_operand\" \"I\"))\n+\t\t\t  (match_operand:QI 2 \"imm123_operand\" \"Ds3\"))\n \t\t(match_operand:X 3 \"register_operand\" \"r\")))]\n-  \"TARGET_ZBA\n-   && (INTVAL (operands[2]) >= 1) && (INTVAL (operands[2]) <= 3)\"\n+  \"TARGET_ZBA\"\n   \"sh%2add\\t%0,%1,%3\"\n   [(set_attr \"type\" \"bitmanip\")\n    (set_attr \"mode\" \"<X:MODE>\")])\n@@ -44,11 +43,10 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(plus:DI\n \t  (and:DI (ashift:DI (match_operand:DI 1 \"register_operand\" \"r\")\n-\t\t\t     (match_operand:QI 2 \"immediate_operand\" \"I\"))\n+\t\t\t     (match_operand:QI 2 \"imm123_operand\" \"Ds3\"))\n \t\t (match_operand 3 \"immediate_operand\" \"\"))\n \t  (match_operand:DI 4 \"register_operand\" \"r\")))]\n   \"TARGET_64BIT && TARGET_ZBA\n-   && (INTVAL (operands[2]) >= 1) && (INTVAL (operands[2]) <= 3)\n    && (INTVAL (operands[3]) >> INTVAL (operands[2])) == 0xffffffff\"\n   \"sh%2add.uw\\t%0,%1,%4\"\n   [(set_attr \"type\" \"bitmanip\")"}, {"sha": "61b84875fd9e569c1343e11f90c1ca211a3b699f", "filename": "gcc/config/riscv/constraints.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d4b734f2d81eccb67903e4fa8f94249238d39c/gcc%2Fconfig%2Friscv%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d4b734f2d81eccb67903e4fa8f94249238d39c/gcc%2Fconfig%2Friscv%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fconstraints.md?ref=b7d4b734f2d81eccb67903e4fa8f94249238d39c", "patch": "@@ -54,6 +54,12 @@\n   (and (match_code \"const_int\")\n        (match_test \"LUI_OPERAND (ival)\")))\n \n+(define_constraint \"Ds3\"\n+  \"@internal\n+   1, 2 or 3 immediate\"\n+  (and (match_code \"const_int\")\n+       (match_test \"IN_RANGE (ival, 1, 3)\")))\n+\n ;; Floating-point constant +0.0, used for FCVT-based moves when FMV is\n ;; not available in RV32.\n (define_constraint \"G\""}, {"sha": "2af7f661d6fbeb6335a35fd59f91dc8b758ffdb1", "filename": "gcc/config/riscv/predicates.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d4b734f2d81eccb67903e4fa8f94249238d39c/gcc%2Fconfig%2Friscv%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d4b734f2d81eccb67903e4fa8f94249238d39c/gcc%2Fconfig%2Friscv%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fpredicates.md?ref=b7d4b734f2d81eccb67903e4fa8f94249238d39c", "patch": "@@ -244,6 +244,11 @@\n   (and (match_code \"const_int\")\n        (match_test \"INTVAL (op) < 5\")))\n \n+;; A const_int for sh1add/sh2add/sh3add\n+(define_predicate \"imm123_operand\"\n+  (and (match_code \"const_int\")\n+       (match_test \"IN_RANGE (INTVAL (op), 1, 3)\")))\n+\n ;; A CONST_INT operand that consists of a single run of consecutive set bits.\n (define_predicate \"consecutive_bits_operand\"\n   (match_code \"const_int\")"}]}