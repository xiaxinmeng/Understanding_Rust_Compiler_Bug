{"sha": "36c216e5d0fc6780aa2a5390d252ffade976d21a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZjMjE2ZTVkMGZjNjc4MGFhMmE1MzkwZDI1MmZmYWRlOTc2ZDIxYQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-08-22T17:58:05Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-08-22T17:58:05Z"}, "message": "ia64.md (*ptr_extend_plus_1): Rename to ...\n\n\t* config/ia64/ia64.md (*ptr_extend_plus_1): Rename to ...\n\t(ptr_extend_plus_imm): ... this.\n\t* config/ia64/ia64.c (addp4_optimize_ok): Do not disable addp4\n\toptimization in C++.\n\t(ia64_output_mi_thunk): Support ILP32 mode.\n\nFrom-SVN: r70692", "tree": {"sha": "030aae9cb1eb3899bb3f6fdb73eaf4622b55b42d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/030aae9cb1eb3899bb3f6fdb73eaf4622b55b42d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36c216e5d0fc6780aa2a5390d252ffade976d21a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36c216e5d0fc6780aa2a5390d252ffade976d21a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36c216e5d0fc6780aa2a5390d252ffade976d21a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36c216e5d0fc6780aa2a5390d252ffade976d21a/comments", "author": null, "committer": null, "parents": [{"sha": "078cfb668e34f7cf6d23f5b26eab1d756bef4ad9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/078cfb668e34f7cf6d23f5b26eab1d756bef4ad9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/078cfb668e34f7cf6d23f5b26eab1d756bef4ad9"}], "stats": {"total": 65, "additions": 50, "deletions": 15}, "files": [{"sha": "8b238d097702c1cf8e0da64a08d2236c1bddfae9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36c216e5d0fc6780aa2a5390d252ffade976d21a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36c216e5d0fc6780aa2a5390d252ffade976d21a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36c216e5d0fc6780aa2a5390d252ffade976d21a", "patch": "@@ -1,3 +1,11 @@\n+2003-08-22  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* config/ia64/ia64.md (*ptr_extend_plus_1): Rename to ...\n+\t(ptr_extend_plus_imm): ... this.\n+\t* config/ia64/ia64.c (addp4_optimize_ok): Do not disable addp4\n+\toptimization in C++.\n+\t(ia64_output_mi_thunk): Support ILP32 mode.\n+\n 2003-08-22  bernardo innocenti  <bernie@develer.com>\n \n \t* gcc/config/m68k/m68k.c (m68k_coff_asm_named_section): remove unused"}, {"sha": "816f089dad8db450f21547faf5f59a746967ec7f", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 41, "deletions": 14, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36c216e5d0fc6780aa2a5390d252ffade976d21a/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36c216e5d0fc6780aa2a5390d252ffade976d21a/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=36c216e5d0fc6780aa2a5390d252ffade976d21a", "patch": "@@ -1106,16 +1106,9 @@ ia64_move_ok (rtx dst, rtx src)\n     return GET_CODE (src) == CONST_DOUBLE && CONST_DOUBLE_OK_FOR_G (src);\n }\n \n-/* Return 0 if we are doing C++ code.  This optimization fails with\n-   C++ because of GNAT c++/6685.  */\n-\n int\n addp4_optimize_ok (rtx op1, rtx op2)\n {\n-\n-  if (!strcmp (lang_hooks.name, \"GNU C++\"))\n-    return 0;\n-\n   return (basereg_operand (op1, GET_MODE(op1)) !=\n \t  basereg_operand (op2, GET_MODE(op2)));\n }\n@@ -8360,6 +8353,18 @@ ia64_output_mi_thunk (FILE *file, tree thunk ATTRIBUTE_UNUSED,\n   emit_note (NOTE_INSN_PROLOGUE_END);\n \n   this = gen_rtx_REG (Pmode, IN_REG (0));\n+  if (TARGET_ILP32)\n+    {\n+      rtx tmp = gen_rtx_REG (ptr_mode, IN_REG (0));\n+      REG_POINTER (tmp) = 1;\n+      if (delta && CONST_OK_FOR_I (delta))\n+\t{\n+\t  emit_insn (gen_ptr_extend_plus_imm (this, tmp, GEN_INT (delta)));\n+\t  delta = 0;\n+\t}\n+      else\n+\temit_insn (gen_ptr_extend (this, tmp));\n+    }\n \n   /* Apply the constant offset, if required.  */\n   if (delta)\n@@ -8381,17 +8386,39 @@ ia64_output_mi_thunk (FILE *file, tree thunk ATTRIBUTE_UNUSED,\n       rtx vcall_offset_rtx = GEN_INT (vcall_offset);\n       rtx tmp = gen_rtx_REG (Pmode, 2);\n \n-      emit_move_insn (tmp, gen_rtx_MEM (Pmode, this));\n+      if (TARGET_ILP32)\n+\t{\n+\t  rtx t = gen_rtx_REG (ptr_mode, 2);\n+\t  REG_POINTER (t) = 1;\n+\t  emit_move_insn (t, gen_rtx_MEM (ptr_mode, this));\n+\t  if (CONST_OK_FOR_I (vcall_offset))\n+\t    {\n+\t      emit_insn (gen_ptr_extend_plus_imm (tmp, t, \n+\t\t\t\t\t\t  vcall_offset_rtx));\n+\t      vcall_offset = 0;\n+\t    }\n+\t  else\n+\t    emit_insn (gen_ptr_extend (tmp, t));\n+\t}\n+      else\n+\temit_move_insn (tmp, gen_rtx_MEM (Pmode, this));\n \n-      if (!CONST_OK_FOR_J (vcall_offset))\n+      if (vcall_offset)\n \t{\n-\t  rtx tmp2 = gen_rtx_REG (Pmode, next_scratch_gr_reg ());\n-\t  emit_move_insn (tmp2, vcall_offset_rtx);\n-\t  vcall_offset_rtx = tmp2;\n+\t  if (!CONST_OK_FOR_J (vcall_offset))\n+\t    {\n+\t      rtx tmp2 = gen_rtx_REG (Pmode, next_scratch_gr_reg ());\n+\t      emit_move_insn (tmp2, vcall_offset_rtx);\n+\t      vcall_offset_rtx = tmp2;\n+\t    }\n+\t  emit_insn (gen_adddi3 (tmp, tmp, vcall_offset_rtx));\n \t}\n-      emit_insn (gen_adddi3 (tmp, tmp, vcall_offset_rtx));\n \n-      emit_move_insn (tmp, gen_rtx_MEM (Pmode, tmp));\n+      if (TARGET_ILP32)\n+\temit_move_insn (gen_rtx_REG (ptr_mode, 2), \n+\t\t\tgen_rtx_MEM (ptr_mode, tmp));\n+      else\n+\temit_move_insn (tmp, gen_rtx_MEM (Pmode, tmp));\n \n       emit_insn (gen_adddi3 (this, this, tmp));\n     }"}, {"sha": "9ead0866798475cda87157ffec39cf8b29c93ede", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36c216e5d0fc6780aa2a5390d252ffade976d21a/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36c216e5d0fc6780aa2a5390d252ffade976d21a/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=36c216e5d0fc6780aa2a5390d252ffade976d21a", "patch": "@@ -5472,7 +5472,7 @@\n ;;\n ;; Optimizations for ptr_extend\n \n-(define_insn \"*ptr_extend_plus_1\"\n+(define_insn \"ptr_extend_plus_imm\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n         (unspec:DI\n          [(plus:SI (match_operand:SI 1 \"basereg_operand\" \"r\")"}]}