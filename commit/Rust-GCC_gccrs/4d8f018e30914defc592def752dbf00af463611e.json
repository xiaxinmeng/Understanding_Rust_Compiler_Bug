{"sha": "4d8f018e30914defc592def752dbf00af463611e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ4ZjAxOGUzMDkxNGRlZmM1OTJkZWY3NTJkYmYwMGFmNDYzNjExZQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2007-01-22T12:27:48Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2007-01-22T12:27:48Z"}, "message": "locks.h (write_barrier): New.\n\n2007-01-22  Andrew Haley  <aph@redhat.com>\n\n        * sysdep/alpha/locks.h (write_barrier): New.\n\nFrom-SVN: r121053", "tree": {"sha": "ba69ce2d5df2735ab5c84c08d4f0cc63170b2b7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba69ce2d5df2735ab5c84c08d4f0cc63170b2b7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d8f018e30914defc592def752dbf00af463611e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d8f018e30914defc592def752dbf00af463611e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d8f018e30914defc592def752dbf00af463611e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d8f018e30914defc592def752dbf00af463611e/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f397a93c0b178cb905f5ce0de61c4ea94d5fa9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f397a93c0b178cb905f5ce0de61c4ea94d5fa9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f397a93c0b178cb905f5ce0de61c4ea94d5fa9a"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "16c457b3f99f299ac248876e12112c26f168c59f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d8f018e30914defc592def752dbf00af463611e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d8f018e30914defc592def752dbf00af463611e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=4d8f018e30914defc592def752dbf00af463611e", "patch": "@@ -1,3 +1,7 @@\n+2007-01-22  Andrew Haley  <aph@redhat.com>\n+\n+\t* sysdep/alpha/locks.h (write_barrier): New.\n+\n 2007-01-21  Matthias Klose  <doko@debian.org>\n \n \t* Makefile.am (install-exec-hook): Use transformed name."}, {"sha": "c5f7f4993e6bdbe3ed1a25ba2465a8592a9cd7c2", "filename": "libjava/sysdep/alpha/locks.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d8f018e30914defc592def752dbf00af463611e/libjava%2Fsysdep%2Falpha%2Flocks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d8f018e30914defc592def752dbf00af463611e/libjava%2Fsysdep%2Falpha%2Flocks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsysdep%2Falpha%2Flocks.h?ref=4d8f018e30914defc592def752dbf00af463611e", "patch": "@@ -50,4 +50,12 @@ compare_and_swap_release(volatile obj_addr_t *addr,\n   return compare_and_swap(addr, old, new_val);\n }\n \n+// Ensure that prior stores to memory are completed with respect to other\n+// processors.\n+inline static void\n+write_barrier()\n+{\n+  __asm__ __volatile__(\"wmb\" : : : \"memory\");\n+}\n+\n #endif"}]}