{"sha": "a62fd9ddaf60decd1dd2016220e142fd5c1d8b73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYyZmQ5ZGRhZjYwZGVjZDFkZDIwMTYyMjBlMTQyZmQ1YzFkOGI3Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-19T08:31:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-19T08:31:16Z"}, "message": "re PR target/88541 (VPCLMULQDQ 256-bit inline function unavailable with optimization but without enabled AVX512VL support)\n\n\tPR target/88541\n\t* config/i386/vpclmulqdqintrin.h (_mm256_clmulepi64_epi128): Enable\n\tfor -mavx -mvpclmulqdq rather than just for -mavx512vl -mvpclmulqdq.\n\n\t* gcc.target/i386/avx-vpclmulqdq-1.c: New test.\n\nFrom-SVN: r267254", "tree": {"sha": "ad618e961a0c89d604957f7b9438b58cfa4bc174", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad618e961a0c89d604957f7b9438b58cfa4bc174"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a62fd9ddaf60decd1dd2016220e142fd5c1d8b73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a62fd9ddaf60decd1dd2016220e142fd5c1d8b73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a62fd9ddaf60decd1dd2016220e142fd5c1d8b73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a62fd9ddaf60decd1dd2016220e142fd5c1d8b73/comments", "author": null, "committer": null, "parents": [{"sha": "35d87f01947ab873477d72380b84d8b70659b541", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35d87f01947ab873477d72380b84d8b70659b541", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35d87f01947ab873477d72380b84d8b70659b541"}], "stats": {"total": 213, "additions": 115, "deletions": 98}, "files": [{"sha": "cdfab54bb9fd7af30e8cfe30621ed669218478ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 60, "deletions": 54, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62fd9ddaf60decd1dd2016220e142fd5c1d8b73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62fd9ddaf60decd1dd2016220e142fd5c1d8b73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a62fd9ddaf60decd1dd2016220e142fd5c1d8b73", "patch": "@@ -1,4 +1,10 @@\n-2018-12-19  Alexandre Oliva <aoliva@redhat.com>\n+2018-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/88541\n+\t* config/i386/vpclmulqdqintrin.h (_mm256_clmulepi64_epi128): Enable\n+\tfor -mavx -mvpclmulqdq rather than just for -mavx512vl -mvpclmulqdq.\n+\n+2018-12-19  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR testsuite/86153\n \tPR middle-end/83239\n@@ -653,8 +659,8 @@\n \t* config/sparc/sparc.md (unspecv): Add UNSPECV_SPECULATION_BARRIER.\n \t(speculation_barrier): New instruction for V9.\n \n-2018-12-12 Segher Boessenkool  <segher@kernel.crashing.org>\n-\t   Iain Sandoe  <iain@sandoe.co.uk>\n+2018-12-12  Segher Boessenkool  <segher@kernel.crashing.org>\n+\t    Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR target/88343\n \t* config/rs6000/rs6000.c (save_reg_p): Do not save the picbase reg\n@@ -2427,7 +2433,7 @@\n \t* doc/invoke.texi: Document mtune value.\n \n 2018-11-23  Christoph Muellner  <christoph.muellner@theobroma-systems.com>\n-\t    Philipp Tomsich <philipp.tomsich@theobroma-systems.com>\n+\t    Philipp Tomsich  <philipp.tomsich@theobroma-systems.com>\n \n \t* config/aarch64/aarch64.c (xgene1_tunings): Optimize Xgene1 tunings\n \tfor GCC 9.\n@@ -2661,7 +2667,7 @@\n \tand TREE_TYPEs of TYPE_DECLs.\n \t(get_odr_type): Initialize odr_vtable_hash if needed.\n \n-2018-11-21  Alexandre Oliva <oliva@adacore.com>\n+2018-11-21  Alexandre Oliva  <oliva@adacore.com>\n \n \t* final.c (compute_discriminator): Declare.  Renamed from...\n \t(maybe_set_discriminator): ... this.  Set and return a local.\n@@ -4407,12 +4413,12 @@\n \t(ch_base::copy_headers): Run CSE on copied loop headers.\n \t(pass_ch_vect::process_loop_p): Simplify.\n \n-2018-11-09  Alexandre Oliva <oliva@adacore.com>\n+2018-11-09  Alexandre Oliva  <oliva@adacore.com>\n \n \t* config/i386/mingw32.h (LINK_SPEC_LARGE_ADDR_AWARE): Adjust\n \tfor non-w64 x86_64 biarch.\n \n-2018-11-09  Alexandre Oliva <aoliva@redhat.com>\n+2018-11-09  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/86438\n \t* compare-elim.c (try_eliminate_compare): Use SET_SRC instead\n@@ -5262,7 +5268,7 @@\n \t* tree-streamer-in.c (lto_input_ts_block_tree_pointers): Fixup\n \tBLOCK_ABSTRACT_ORIGIN to be the ultimate origin.\n \n-2018-11-07  Alexandre Oliva <aoliva@redhat.com>\n+2018-11-07  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/87874\n \t* lra.c (lra_substitute_pseudo): Do not create a subreg for\n@@ -5386,7 +5392,7 @@\n \t* simplify-rtx.c (simplify_binary_operation_1): Add pattern\n \tmatching bitfield insertion.\n \n-2018-11-06  Alexandre Oliva <aoliva@redhat.com>\n+2018-11-06  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* auto-inc-dec.c: Include valtrack.h.  Improve comments.\n \t(reg_next_debug_use): New.\n@@ -5640,7 +5646,7 @@\n \t* cfgexpand.c (pass_expand::execute): Move the call to\n \tfinish_eh_generation in front of the call to expand_stack_alignment.\n \n-2018-11-04  Venkataramanan Kumar <venkataramanan.kumar@amd.com>\n+2018-11-04  Venkataramanan Kumar  <venkataramanan.kumar@amd.com>\n \n \t* common/config/i386/i386-common.c (processor_alias_table): Add\n \tznver2 entry.\n@@ -5770,7 +5776,7 @@\n \t* gimple-ssa-store-merging.c (do_shift_rotate): Punt if count is\n \tnegative or larger or equal to type's precision.\n \n-2018-10-31  Alexandre Oliva <aoliva@redhat.com>\n+2018-10-31  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* opts.c (default_options_table): Do not enable\n \tOPT_fdelayed_branch at -Og.\n@@ -5958,7 +5964,7 @@\n \t* tree-eh.c (replace_trapping_overflow): Simplify ABS_EXPR case\n \tusing ABSU_EXPR.\n \n-2018-10-31 Sameera Deshpande <sameera.deshpande@linaro.org>\n+2018-10-31  Sameera Deshpande  <sameera.deshpande@linaro.org>\n \n \t* config/aarch64/aarch64-cores.def (saphira): Use saphira pipeline.\n \t* config/aarch64/aarch64.md: Include saphira.md\n@@ -6060,7 +6066,7 @@\n \t* tree-vect-slp.c (vect_build_slp_tree_2): Reject any\n \tnon-induction or reduction PHIs.\n \n-2018-10-30 Sameera Deshpande <sameera.deshpande@linaro.org\n+2018-10-30  Sameera Deshpande  <sameera.deshpande@linaro.org>\n \n \t* config/aarch64/falkor-tag-collision-avoidance.c\n \t(execute_tag_collision_avoidance): Call df_note_add_problem.\n@@ -6427,7 +6433,7 @@\n \t(*xscmpexpqp): Add define_insn for the xscmpexqp instruction.\n \n 2018-10-25  Bill Schmidt  <wschmidt@linux.ibm.com>\n-\t    Jinsong Ji <jji@us.ibm.com>\n+\t    Jinsong Ji  <jji@us.ibm.com>\n \n \t* config/rs6000/emmintrin.h (_mm_slli_epi16): Replace deprecated\n \tfunction with vec_sl.\n@@ -6448,7 +6454,7 @@\n \t(_mm_srl_epi64): Likewise.\n \n 2018-10-25  Bill Schmidt  <wschmidt@linux.ibm.com>\n-\t    Jinsong Ji <jji@us.ibm.com>\n+\t    Jinsong Ji  <jji@us.ibm.com>\n \n \t* gcc/config/rs6000/emmintrin.h (_mm_sll_epi16): Replace\n \tcomparison operators with vec_cmp* for compatibility due to\n@@ -6461,7 +6467,7 @@\n \t(_mm_srl_epi64): Likewise.\n \n 2018-10-25  Bill Schmidt  <wschmidt@linux.ibm.com>\n-\t    Jinsong Ji <jji@us.ibm.com>\n+\t    Jinsong Ji  <jji@us.ibm.com>\n \n \t* config/rs6000/emmintrin.h (_mm_sll_epi64): Remove wrong cast.\n \t* config/rs6000/xmmintrin.h (_mm_min_ps): Change m's type to\n@@ -6531,7 +6537,7 @@\n \t* options.texi (Deprecated): Move list to Var section.\n \n 2018-10-24  Bill Schmidt  <wschmidt@linux.ibm.com>\n-\t    Jinsong Ji <jji@us.ibm.com>\n+\t    Jinsong Ji  <jji@us.ibm.com>\n \n \t* config/rs6000/emmintrin.h (_mm_cvtpd_epi32): Change deprecated\n \t__vector long to __vector long long.\n@@ -6546,7 +6552,7 @@\n \tPR rtl-optimization/87720\n \t* combine.c (make_more_copies): Skip if the dest is pc_rtx.\n \n-2018-10-24  Alexandre Oliva <aoliva@redhat.com>\n+2018-10-24  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* gimple-ssa-isolate-paths.c\n \t(find_implicit_erroneous_behavior): Do not change code if the\n@@ -6756,7 +6762,7 @@\n \t* gcc.dg/tree-ssa/vrp02.c: Likewise.\n \t* gcc.dg/tree-ssa/cunroll-9.c: Likewise.\n \n-2018-10-22  Steven Bosscher <steven@gcc.gnu.org>\n+2018-10-22  Steven Bosscher  <steven@gcc.gnu.org>\n \tRichard Biener  <rguenther@suse.de>\n \n \t* bitmap.h: Update data structure documentation, including a\n@@ -7669,7 +7675,7 @@\n \t* real.h (format_helper::can_represent_integral_type_p): Ditto.\n \t* match.pd: New pattern.\n \n-2018-10-12  Alexandre Oliva <oliva@adacore.com>\n+2018-10-12  Alexandre Oliva  <oliva@adacore.com>\n \n \t* configure.ac: Introduce --enable-large-address-aware\n \tto define MINGW_DEFAULT_LARGE_ADDR_AWARE.\n@@ -7730,7 +7736,7 @@\n \t* real.c (build_sinatan_real): New function.\n \t* real.h (build_sinatan_real): Prototype.\n \n-2018-10-11  Will Schmidt <will_schmidt@vnet.ibm.com>\n+2018-10-11  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (map_to_integral_tree_type): New helper\n \tfunction.\n@@ -8679,7 +8685,7 @@\n \t* config/aarch64/aarch64.c (aarch64_layout_frame): Add assert.\n \n 2018-10-01  Jeff Law  <law@redhat.com>\n-\t    Richard Sandiford <richard.sandiford@linaro.org>\n+\t    Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Tamar Christina  <tamar.christina@arm.com>\n \n \tPR target/86486\n@@ -8694,7 +8700,7 @@\n \t(aarch64_expand_epilogue): Likewise and update IP regs re-use criteria.\n \t(aarch64_sub_sp): Add emit_move_imm optional param.\n \n-2018-10-01  MCC CS <deswurstes@users.noreply.github.com>\n+2018-10-01  MCC CS  <deswurstes@users.noreply.github.com>\n \n \tPR tree-optimization/87261\n \t* match.pd: Remove trailing whitespace.\n@@ -9663,13 +9669,13 @@\n \t* config/darwin.h (LINK_COMMAND_SPEC): Likewise.\n \t* doc/invoke.texi (Link Options): Document -r.\n \n-2018-09-20  Richard Biener <rguenther@suse.de>\n+2018-09-20  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/87054\n \t* gimplify.c (gimplify_expr): Retain alignment of\n \taddressable lvalue in dereference.\n \n-2018-09-20  Alexandre Oliva <aoliva@redhat.com>\n+2018-09-20  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR bootstrap/87013\n \t* configure.ac: Check for .loc is_stmt support.\n@@ -9931,7 +9937,7 @@\n \tformat_string_diagnostic_t::emit_warning_n.\n \n 2018-09-17  Cesar Philippidis  <cesar@codesourcery.com>\n-\t    Bernd Schmidt <bernds_cb1@t-online.de>\n+\t    Bernd Schmidt  <bernds_cb1@t-online.de>\n \n \t* config/nvptx/nvptx.md (atomic_fetch_<logic><mode>): Enable with\n \tSImode args.\n@@ -12003,12 +12009,12 @@\n \tPR tree-optimization/86945\n \t* tree-cfg.c (generate_range_test): Use unsigned arithmetic.\n \n-2018-08-22  Alexandre Oliva <oliva@adacore.com>\n+2018-08-22  Alexandre Oliva  <oliva@adacore.com>\n \n \t* config/rs6000/rs6000.c (SMALL_DATA_RELOC, SMALL_DATA_REG): Add\n \ta comment about how uses of r2 for .sdata2 come about.\n \n-2018-08-22  Alexandre Oliva <aoliva@redhat.com>\n+2018-08-22  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* tree-ssa-reassoc.c (is_reassociable_op): Fix cut&pasto.\n \n@@ -12104,7 +12110,7 @@\n \tfor indexed loads.\n \n 2018-08-20  Nathan Sidwell  <nathan@acm.org>\n-\t    Jeff Law <law@redhat.com>\n+\t    Jeff Law  <law@redhat.com>\n \n \t* config/s390/s390-c (s390_macro_to_expand): Use cpp_macro_p.\n \t* config/spu/spu-c.c (spu_macro_to_expand): Likewise.\n@@ -12589,7 +12595,7 @@\n \tUse fold_build2_initializer_loc in order to fold\n \tthe expression in -frounding-math.\n \n-2018-08-14  Allan Sandfeld Jensen <allan.jensen@qt.io>\n+2018-08-14  Allan Sandfeld Jensen  <allan.jensen@qt.io>\n \n \t* config/i386/i386.c (expand_vec_perm_movs): New method matching movs\n \tpatterns.\n@@ -12607,13 +12613,13 @@\n \t* tree-vrp.c (vrp_prop::check_array_ref): Print an inform message.\n \t(vrp_prop::check_mem_ref): Same.\n \n-2018-08-13  Liu Hao <lh_mouse@126.com>\n+2018-08-13  Liu Hao  <lh_mouse@126.com>\n \n \t* pretty-print.c (eat_esc_sequence): Swap the foreground and\n \tbackground colors if the COMMON_LVB_REVERSE_VIDEO flag is set,\n \tand clear it thereafter, as it only works for DBCS.\n \n-2018-08-13  Liu Hao <lh_mouse@126.com>\n+2018-08-13  Liu Hao  <lh_mouse@126.com>\n \n \t* pretty-print.c (mingw_ansi_fputs): Do not call _close() on the\n \thandle returned by _get_osf_handle().\n@@ -12629,7 +12635,7 @@\n \tAdd support for gimple-folding of vec_pack() and vec_unpack()\n \tintrinsics.\n \n-2018-08-13  Will Schmidt <will_schmidt@vnet.ibm.com>\n+2018-08-13  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_builtin_valid_without_lhs): Add\n \tvec_xst variants to the list.\n@@ -13692,7 +13698,7 @@\n \t* config/i386/djgpp.c (saved_debug_info_level): New static variable.\n \t(i386_djgpp_asm_lto_start, i386_djgpp_asm_lto_end): New functions.\n \n-2018-07-31  Alexandre Oliva <oliva@adacore.com>\n+2018-07-31  Alexandre Oliva  <oliva@adacore.com>\n \n \t* gimple-streamer-in.c (input_bb): Restore BB discriminator.\n \t* gimple-streamer-out.c (output_bb): Save it.\n@@ -15392,7 +15398,7 @@\n \t* optinfo.h: New file.\n \n 2018-07-19  Michael Collison  <michael.collison@arm.com>\n-\t    Richard Henderson <rth@redhat.com>\n+\t    Richard Henderson  <rth@redhat.com>\n \n \t* config/aarch64/aarch64.md (subv<GPI>4, usubv<GPI>4): New patterns.\n \t(subti): Handle op1 zero.\n@@ -15403,7 +15409,7 @@\n \t(*sub<GPI>3_carryinCV_z2, *sub<GPI>3_carryinCV): New.\n \n 2018-07-19  Michael Collison  <michael.collison@arm.com>\n-\t    Richard Henderson <rth@redhat.com>\n+\t    Richard Henderson  <rth@redhat.com>\n \n \t* config/aarch64/aarch64.md: (addv<GPI>4, uaddv<GPI>4): New.\n \t(addti3): Create simpler code if low part is already known to be 0.\n@@ -15434,7 +15440,7 @@\n \t(*add<mode>3_carryinV): Ditto.\n \n 2018-07-19  Michael Collison  <michael.collison@arm.com>\n-\t    Richard Henderson <rth@redhat.com>\n+\t    Richard Henderson  <rth@redhat.com>\n \n \t* config/aarch64/aarch64-modes.def (CC_V): New.\n \t* config/aarch64/aarch64-protos.h\n@@ -17900,7 +17906,7 @@\n \t* fold-const.c (fold_convertible_p): Pointer extension\n \tisn't valid.\n \n-2018-06-26  Alexandre Oliva <aoliva@redhat.com>\n+2018-06-26  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/86064\n \t* dwarf2out.c (loc_list_has_views): Adjust comments.\n@@ -18255,8 +18261,8 @@\n \tbehavior of vec_packsu (vector unsigned long long, vector unsigned\n \tlong long) to match behavior of vec_packs with same signature.\n \n-2018-06-20  Chung-Lin Tang <cltang@codesourcery.com>\n-\t    Thomas Schwinge <thomas@codesourcery.com>\n+2018-06-20  Chung-Lin Tang  <cltang@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n \t    Cesar Philippidis  <cesar@codesourcery.com>\n \n \t* gimplify.c (gimplify_scan_omp_clauses): Add support for\n@@ -19227,7 +19233,7 @@\n \t* config/arc/arc.c (atomic_exchangesi): EX instruction is default\n \tfor ARC700 and ARCv2.\n \n-2018-06-13  Chenghua Xu <paul.hua.gm@gmail.com>\n+2018-06-13  Chenghua Xu  <paul.hua.gm@gmail.com>\n \n \tPR target/86076\n \t* config/mips/loongson.md (vec_setv4hi): Gen_lowpart for\n@@ -19468,7 +19474,7 @@\n \t* PR tree-optimization/86083\n \t* tree-ssa-strlen.c (handle_char_store): Use tree_expr_nonzero_p.\n \n-2018-06-11  Zhouyi Zhou <zhouzhouyi@gmail.com>\n+2018-06-11  Zhouyi Zhou  <zhouzhouyi@gmail.com>\n \n \t* tree-eh.c (lower_eh_constructs_2): Add a comma to comment.\n \n@@ -20773,7 +20779,7 @@\n \t(*fix_to_zero_extenddfdi2): New pattern.\n \t* gcc.target/aarch64/fix_extend1.c: New testcase.\n \n-2018-05-31  Qing Zhao <qing.zhao@oracle.com>\n+2018-05-31  Qing Zhao  <qing.zhao@oracle.com>\n \n \tPR middle-end/78809\n \tPR middle-end/83026\n@@ -20830,7 +20836,7 @@\n \t* omp-low.c (lower_omp_target): Avoid reference-type processing\n \ton pointers for firstprivate clause.\n \n-2018-05-31  Sameera Deshpande <sameera.deshpande@linaro.org>\n+2018-05-31  Sameera Deshpande  <sameera.deshpande@linaro.org>\n \n \t* config/aarch64/aarch64-simd-builtins.def (ld1x3): New.\n \t(st1x2): Likewise.\n@@ -20951,7 +20957,7 @@\n \t(expand_builtin_stpcpy): Call it, and call maybe_warn_nonstring_arg\n \tonly if the former succeeds.\n \n-2018-05-31  Sameera Deshpande <sameera.deshpande@linaro.org>\n+2018-05-31  Sameera Deshpande  <sameera.deshpande@linaro.org>\n \n \t* config/aarch64/aarch64-cores.def (saphira) : Add support for ARMv8.4\n \tin saphira.\n@@ -22055,7 +22061,7 @@\n \t* config/aarch64/arm_neon.h: Likewise.\n \t* config/aarch64/iterators.md (VQ_I): New.\n \n-2018-05-21  Alexey Brodkin <abrodkin@synopsys.com>\n+2018-05-21  Alexey Brodkin  <abrodkin@synopsys.com>\n \n \t* config.gcc: Add arc/t-multilib-linux to tmake_file for\n \tarc*-*-linux*.\n@@ -22172,7 +22178,7 @@\n \t(nds32_expand_unaligned_load): Refine.\n \t(nds32_expand_unaligned_store): Refine.\n \n-2018-05-19  Kuan-Lin Chen <kuanlinchentw@gmail.com>\n+2018-05-19  Kuan-Lin Chen  <kuanlinchentw@gmail.com>\n \t    Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/constants.md: Add TP_REGNUM constant.\n@@ -22199,7 +22205,7 @@\n \t* config/nds32/nds32-predicates.c (const_vector_to_hwint): Use machine\n \tmode with E_ prefix.\n \n-2018-05-19  Kuan-Lin Chen <kuanlinchentw@gmail.com>\n+2018-05-19  Kuan-Lin Chen  <kuanlinchentw@gmail.com>\n \t    Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/constants.md (unspec_element): Add UNSPEC_ICT.\n@@ -22241,7 +22247,7 @@\n \n 2018-05-18  Kito Cheng  <kito.cheng@gmail.com>\n \t    Monk Chiang  <sh.chiang04@gmail.com>\n-\t    Jim Wilson <jimw@sifive.com>\n+\t    Jim Wilson  <jimw@sifive.com>\n \n \t* common/config/riscv/riscv-common.c (riscv_parse_arch_string):\n \tAdd support to parse rv32e*.  Clear MASK_RVE for rv32i and rv64i.\n@@ -24009,7 +24015,7 @@\n \t* doc/invoke.texi (-fdebug-types-section): Fix grammar.\n \n 2018-04-30  Nathan Sidwell  <nathan@acm.org>\n-\t    Sandra Loosemore <sandra@codesourcery.com>\n+\t    Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* dumpfile.c (dump_open): Allow '-' for stdout.\n \t* doc/invoke.texi (Developer Options): Document dump filename\n@@ -24216,7 +24222,7 @@\n \t(nvptx_single): Use needs_neutering_p to skip over insns that do not\n \tneed neutering.\n \n-2018-04-26  Richard Biener <rguenther@suse.de>\n+2018-04-26  Richard Biener  <rguenther@suse.de>\n \t    Tom de Vries  <tom@codesourcery.com>\n \n \tPR lto/85422\n@@ -24540,7 +24546,7 @@\n \t* doc/invoke.texi: Remove -mibt.  Document __CET__.  Document\n \t-mcet as an alias for -mshstk.\n \n-2018-04-20  Richard Biener <rguenther@suse.de>\n+2018-04-20  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/85475\n \t* match.pd ((X * CST) * Y -> (X * Y) * CST): Avoid exponential\n@@ -25481,7 +25487,7 @@\n \t* config/nds32/nds32.h (nds32_builtins): Likewise.\n \n 2018-04-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\tAndrew Pinski <pinsika@gcc.gnu.org>\n+\tAndrew Pinski  <pinsika@gcc.gnu.org>\n \n \tPR middle-end/82976\n \t* match.pd: Use constant_boolean_node of correct type instead of\n@@ -26752,7 +26758,7 @@\n \t(ERDINFO, ETRACKC, ELDBC, ELDUC): New leaves.\n \n 2018-03-15  David Malcolm  <dmalcolm@redhat.com>\n-\t    Paul Hua <paul.hua.gm@gmail.com>\n+\t    Paul Hua  <paul.hua.gm@gmail.com>\n \n \tPR c/84852\n \t* gcc.dg/fixits-pr84852-1.c: Fix filename in dg-regexp."}, {"sha": "bcc9eedc366e073f86021b2d8df0f2f2f30beb2d", "filename": "gcc/config/i386/vpclmulqdqintrin.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62fd9ddaf60decd1dd2016220e142fd5c1d8b73/gcc%2Fconfig%2Fi386%2Fvpclmulqdqintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62fd9ddaf60decd1dd2016220e142fd5c1d8b73/gcc%2Fconfig%2Fi386%2Fvpclmulqdqintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvpclmulqdqintrin.h?ref=a62fd9ddaf60decd1dd2016220e142fd5c1d8b73", "patch": "@@ -53,9 +53,9 @@ _mm512_clmulepi64_epi128 (__m512i __A, __m512i __B, const int __C)\n #pragma GCC pop_options\n #endif /* __DISABLE_VPCLMULQDQF__ */\n \n-#if !defined(__VPCLMULQDQ__) || !defined(__AVX512VL__)\n+#if !defined(__VPCLMULQDQ__) || !defined(__AVX__)\n #pragma GCC push_options\n-#pragma GCC target(\"vpclmulqdq,avx512vl\")\n+#pragma GCC target(\"vpclmulqdq,avx\")\n #define __DISABLE_VPCLMULQDQ__\n #endif /* __VPCLMULQDQ__ */\n \n@@ -78,6 +78,4 @@ _mm256_clmulepi64_epi128 (__m256i __A, __m256i __B, const int __C)\n #pragma GCC pop_options\n #endif /* __DISABLE_VPCLMULQDQ__ */\n \n-\n #endif /* _VPCLMULQDQINTRIN_H_INCLUDED */\n-"}, {"sha": "a0c28eff44c7ee8e231aeb21b41c1a6ea4d63d1b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 43, "deletions": 40, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62fd9ddaf60decd1dd2016220e142fd5c1d8b73/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62fd9ddaf60decd1dd2016220e142fd5c1d8b73/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a62fd9ddaf60decd1dd2016220e142fd5c1d8b73", "patch": "@@ -1,9 +1,12 @@\n 2018-12-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/88541\n+\t* gcc.target/i386/avx-vpclmulqdq-1.c: New test.\n+\n \tPR c++/87934\n \t* g++.dg/cpp0x/constexpr-87934.C: New test.\n \n-2018-12-19  Alexandre Oliva <aoliva@redhat.com>\n+2018-12-19  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR testsuite/86153\n \tPR middle-end/83239\n@@ -216,7 +219,7 @@\n \tPR tree-optimization/87096\n \t* gcc.dg/tree-ssa/builtin-snprintf-4.c: New test.\n \n-2018-12-14  Alexandre Oliva <aoliva@redhat.com>\n+2018-12-14  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/87814\n \t* g++.dg/cpp1z/pr87814.C: New.\n@@ -247,7 +250,7 @@\n \t* gfortran.dg/goacc/classify-routine.f95: Likewise.\n \t* gfortran.dg/goacc/kernels-loop-inner.f95: Likewise.\n \n-2018-12-14  Alexandre Oliva <aoliva@redhat.com>\n+2018-12-14  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/86823\n \t* g++.dg/pr86823.C: New.\n@@ -873,7 +876,7 @@\n \tPR sanitizer/88333\n \t* c-c++-common/asan/pr88333.c: New test.\n \n-2018-12-05  Alexandre Oliva <aoliva@redhat.com>\n+2018-12-05  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/85569\n \t* g++.dg/cpp1z/pr85569.C: New.\n@@ -983,7 +986,7 @@\n \tgnat.dg/overload2_q.ads: New testcase.\n \n 2018-12-03  Fritz Reese  <fritzoreese@gmail.com>\n-            Mark Eggleston <mark.eggleston@codethink.co.uk>\n+            Mark Eggleston  <mark.eggleston@codethink.co.uk>\n \n \tPR fortran/87919\n \t* gfortran.dg/array_temporaries_5.f90: New test.\n@@ -2529,7 +2532,7 @@\n \tPR tree-optimization/87621\n \t* g++.dg/vect/pr87621.cc: New testcase.\n \n-2018-11-09  Alexandre Oliva <aoliva@redhat.com>\n+2018-11-09  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/86438\n \t* gcc.dg/torture/pr86438.c: New.\n@@ -2890,7 +2893,7 @@\n \t* g++.dg/lto/pr87906_0.C: New testcase.\n \t* g++.dg/lto/pr87906_1.C: Likewise.\n \n-2018-11-07  Alexandre Oliva <aoliva@redhat.com>\n+2018-11-07  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/87874\n \t* gcc.dg/pr87874.c: New.\n@@ -4472,7 +4475,7 @@\n \tPR fortran/87597\n \t* gfortran.dg/inline_matmul_24.f90: New.\n \n-2018-10-12  Tobias Burnus <burnus@net-b.de>\n+2018-10-12  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/58787\n \t* gfortran.dg/goacc/pr77765.f90: Modify dg-error.\n@@ -4545,10 +4548,10 @@\n \t* gcc.target/powerpc/fold-vec-mergeeo-int.c: New.\n \t* gcc.target/powerpc/fold-vec-mergeeo-longlong.c: New.\n \n-2018-10-11  Tobias Burnus <burnus@net-b.de>\n+2018-10-11  Tobias Burnus  <burnus@net-b.de>\n \n \tRevert:\n-\t2018-10-09  Tobias Burnus <burnus@net-b.de>\n+\t2018-10-09  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/83522\n \t* gfortran.dg/actual_array_substr_1.f90: Add dg-error,\n@@ -4691,7 +4694,7 @@\n \t* gcc.target/powerpc/sse3-movddup.c: New file.\n \t* gcc.target/powerpc/pr37191.c: New file.\n \n-2018-10-09  Tobias Burnus <burnus@net-b.de>\n+2018-10-09  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/83522\n \t* gfortran.dg/actual_array_substr_1.f90: Add dg-error,\n@@ -5041,7 +5044,7 @@\n \t* gcc.target/aarch64/sve/struct_vect_24_run.c: New test.\n \n 2018-10-01  Jeff Law  <law@redhat.com>\n-\t    Richard Sandiford <richard.sandiford@linaro.org>\n+\t    Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Tamar Christina  <tamar.christina@arm.com>\n \n \tPR target/86486\n@@ -5155,7 +5158,7 @@\n \tcheck_effective_target_got32x_reloc,\n \tcheck_effective_target_tls_get_addr_via_got): Use new caching.\n \n-2018-10-01  MCC CS <deswurstes@users.noreply.github.com>\n+2018-10-01  MCC CS  <deswurstes@users.noreply.github.com>\n \n \tPR tree-optimization/87261\n \t* gcc.dg/pr87261.c: New test.\n@@ -5426,7 +5429,7 @@\n \t* gcc.dg/warn-stpcpy-no-nul.c: Drop unnecessary xfails.\n \t* gcc.dg/warn-stplen-no-nul.c: Likewise.\n \n-2018-09-25  Alexandre Oliva <oliva@adacore.com>\n+2018-09-25  Alexandre Oliva  <oliva@adacore.com>\n \n \t* gnat.dg/dinst.adb: Adjust for locviews.\n \n@@ -5530,7 +5533,7 @@\n \tPR sanitizer/85774\n \t* g++.dg/asan/pr85774.C: New test.\n \n-2018-09-24  Alexandre Oliva <oliva@adacore.com>\n+2018-09-24  Alexandre Oliva  <oliva@adacore.com>\n \n \tPR middle-end/87054\n \t* gcc.dg/pr87054.c: Adjust for no __int128 on x86.\n@@ -5624,7 +5627,7 @@\n \t* gfortran.dg/lto/20091016-1_0.f90: Likewise.\n \t* gfortran.dg/lto/pr79108_0.f90: Likewise.\n \n-2018-09-20  Alexandre Oliva <oliva@adacore.com>\n+2018-09-20  Alexandre Oliva  <oliva@adacore.com>\n \n \tPR middle-end/87054\n \t* gcc.dg/pr87054.c: New.\n@@ -5736,7 +5739,7 @@\n \tfunctions.\n \n 2018-09-17  Cesar Philippidis  <cesar@codesourcery.com>\n-\t    Bernd Schmidt <bernds_cb1@t-online.de>\n+\t    Bernd Schmidt  <bernds_cb1@t-online.de>\n \n \t* gcc.target/nvptx/atomic-fetch-2.c: Rename to ...\n \t* gcc.target/nvptx/atomic_fetch-2.c: ... this.\n@@ -6622,7 +6625,7 @@\n \t* gfortran.dg/nan_1.f90: Remove tests that test MAX/MIN with NaNs.\n \n 2018-08-21  Nicolas Koenig  <koenigni@gcc.gnu.org>\n-\tThomas Koenig <tkoenig@gcc.gnu.org>\n+\tThomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/25829\n \t* gfortran.dg/f2003_inquire_1.f03: Add write statement.\n@@ -6905,18 +6908,18 @@\n \n \t* gcc.target/aarch64/imm_choice_comparison.c: New test.\n \n-2018-08-16  Iain Sandoe <iain@sandoe.co.uk>\n+2018-08-16  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* gcc.dg/memcmp-1.c (lib_memcmp): Apply __USER_LABEL_PREFIX__.\n \t(lib_strncmp): Likewise.\n \n-2018-08-16  Iain Sandoe <iain@sandoe.co.uk>\n+2018-08-16  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* c-c++-common/asan/pointer-subtract-3.c: Skip for Darwin.\n \t* c-c++-common/asan/pointer-subtract-4.c: Likewise.\n \t* g++.dg/torture/pr44295.C : Likewise.\n \n-2018-08-16  Iain Sandoe <iain@sandoe.co.uk>\n+2018-08-16  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR testsuite/78544\n \t* gcc.dg/tree-prof/section-attr-1.c: Add Darwin-specific section\n@@ -6985,7 +6988,7 @@\n \t* lib/multiline.exp (proc _build_multiline_regex): Remove\n \tspecial-case handling of lines with trailing '|'.\n \n-2018-08-15  Qing Zhao <qing.zhao@oracle.com>\n+2018-08-15  Qing Zhao  <qing.zhao@oracle.com>\n \n \tPR testsuite/86519\n \t* gcc.dg/strcmpopt_6.c: Scan the assembly file instead of\n@@ -7012,7 +7015,7 @@\n \n \t* g++.dg/init/goto3.C: Adjust for error instead of permerror.\n \n-2018-08-14  Allan Sandfeld Jensen <allan.jensen@qt.io>\n+2018-08-14  Allan Sandfeld Jensen  <allan.jensen@qt.io>\n \n \t* gcc.target/i386/sse2-movs.c: New test.\n \n@@ -7561,7 +7564,7 @@\n \n \tRevert 'AsyncI/O patch committed'\n \t2018-07-25  Nicolas Koenig  <koenigni@gcc.gnu.org>\n-\t\tThomas Koenig <tkoenig@gcc.gnu.org>\n+\t\t    Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/25829\n \t* gfortran.dg/f2003_inquire_1.f03: Add write statement.\n@@ -7612,7 +7615,7 @@\n \tignored by the test harness.\n \n 2018-07-25  Nicolas Koenig  <koenigni@gcc.gnu.org>\n-\tThomas Koenig <tkoenig@gcc.gnu.org>\n+\t    Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/25829\n \t* gfortran.dg/f2003_inquire_1.f03: Add write statement.\n@@ -7720,7 +7723,7 @@\n \t* gcc.dg/Warray-bounds-32.c: New test.\n \n 2018-07-19  Michael Collison  <michael.collison@arm.com>\n-\t    Richard Henderson <rth@redhat.com>\n+\t    Richard Henderson  <rth@redhat.com>\n \n \t* gcc.target/aarch64/builtin_sadd_128.c: New testcase.\n \t* gcc.target/aarch64/builtin_saddl.c: New testcase.\n@@ -7857,7 +7860,7 @@\n \t* gcc.dg/cpp/pr61854-4.c (foo): Likewise.\n \t* gcc.dg/cpp/pr61854-8.c: New test.\n \n-2018-07-17  David Edelsohn <dje.gcc@gmail.com>\n+2018-07-17  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gcc.target/powerpc/pr85456.c: Require longdouble128.\n \n@@ -7874,7 +7877,7 @@\n \t* gcc.target/powerpc/fold-vec-unpack-pixel.c: New.\n \t* gcc.target/powerpc/fold-vec-unpack-short.c: New.\n \n-2018-07-17  David Edelsohn <dje.gcc@gmail.com>\n+2018-07-17  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gcc.target/powerpc/pr57150.c: Require longdouble128.\n \t* gcc.target/powerpc/pr79916.c: Require dfp.\n@@ -8941,7 +8944,7 @@\n \tPR middle-end/86271\n \t* gcc.dg/pr86271.c: New testcase.\n \n-2018-06-26  Alexandre Oliva <aoliva@redhat.com>\n+2018-06-26  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/86064\n \t* gcc.dg/pr86064.c: New.\n@@ -9169,8 +9172,8 @@\n \t* g++.dg/concepts/decl-diagnose.C: Likewise.\n \t* g++.dg/warn/main-2.C: Update.\n \n-2018-06-20  Chung-Lin Tang <cltang@codesourcery.com>\n-\t    Thomas Schwinge <thomas@codesourcery.com>\n+2018-06-20  Chung-Lin Tang  <cltang@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n \t    Cesar Philippidis  <cesar@codesourcery.com>\n \n \t* c-c++-common/goacc/declare-1.c: Update test case to utilize OpenACC\n@@ -10462,7 +10465,7 @@\n \tPR ipa/85960\n \t* gcc.dg/ipa/ipa-pta-19.c: New testcase.\n \n-2018-05-31  Qing Zhao <qing.zhao@oracle.com>\n+2018-05-31  Qing Zhao  <qing.zhao@oracle.com>\n \n \tPR middle-end/78809\n \t* gcc.dg/strcmpopt_2.c: New test.\n@@ -12281,7 +12284,7 @@\n \t* gcc.target/i386/pr85044.c (dg-options): Remove -mibt.\n \t* gcc.target/i386/sse-26.c (dg-options): Remove -mno-ibt.\n \n-2018-04-20  Richard Biener <rguenther@suse.de>\n+2018-04-20  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/85475\n \t* gcc.dg/torture/pr85475.c: New testcase.\n@@ -12520,7 +12523,7 @@\n \t* g++.dg/ext/pr85329.C: New test.\n \t* gcc.target/i386/mvc12.c: New test.\n \n-2018-04-16  Alexandre Oliva <aoliva@redhat.com>\n+2018-04-16  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/85039\n \t* g++.dg/pr85039-1.C: New.\n@@ -12987,7 +12990,7 @@\n \tPR target/85193\n \t* gcc.target/i386/pr85193.c: New test.\n \n-2018-04-05  Alexandre Oliva <aoliva@redhat.com>\n+2018-04-05  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/84979\n \t* g++.dg/concepts/pr84979.C: New.\n@@ -13056,7 +13059,7 @@\n \tPR tree-optimization/85168\n \t* gcc.dg/torture/pr85168.c: New testcase.\n \n-2018-04-04  Alexandre Oliva <aoliva@redhat.com>\n+2018-04-04  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/84943\n \t* g++.dg/pr84943.C: New.\n@@ -13409,15 +13412,15 @@\n \t* gfortran.dg/parameter_array_format.f90: New test.\n \n 2018-03-25  Thomas Koenig  <tkoenig@gcc.gnu.org>\n-\tNeil Carlson <neil.n.carlson@gmail.com>\n+\t    Neil Carlson  <neil.n.carlson@gmail.com>\n \n \tPR fortran/84381\n \t* gfortran.dg/literal_character_constant_1.inc: Replace\n \tcall abort by STOP n.\n \t* gfortran.dg/overload_1.f90: Likewise.\n \n-2018-03-25  Seth Johnson <johnsonsr@ornl.gov>\n-\tDominique d'Humieres  <dominiq@gcc.gnu.org>\n+2018-03-25  Seth Johnson  <johnsonsr@ornl.gov>\n+\t    Dominique d'Humieres  <dominiq@gcc.gnu.org>\n \n \tPR fortran/84924\n \t* gfortran.dg/scalar_pointer_1.f90: New test.\n@@ -14626,7 +14629,7 @@\n \tPR c++/84434\n \t* g++.dg/template/pr84434.C: New.\n \n-2018-03-01  Thomas Preud'homme  <thomas.preudhomme@arm.com\n+2018-03-01  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* gcc.target/arm/copysign_softfloat_1.c: Remove dg-add-options and add\n \t-mthumb to the command-line."}, {"sha": "1041172f7ece80ba29fd9a9ca10d8fdce6e76892", "filename": "gcc/testsuite/gcc.target/i386/avx-vpclmulqdq-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62fd9ddaf60decd1dd2016220e142fd5c1d8b73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpclmulqdq-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62fd9ddaf60decd1dd2016220e142fd5c1d8b73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpclmulqdq-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpclmulqdq-1.c?ref=a62fd9ddaf60decd1dd2016220e142fd5c1d8b73", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx -mvpclmulqdq\" } */\n+\n+#include <x86intrin.h>\n+\n+__m256i\n+foo (__m256i x, __m256i y)\n+{\n+  return _mm256_clmulepi64_epi128 (x, y, 0);\n+}"}]}