{"sha": "e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFmZWI2NGY1ZDMyNGFiNWZmMGI4ZTMzYzkxMGJiNzNmZDJjN2VjYw==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-10-11T19:10:36Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-10-11T19:10:36Z"}, "message": "ConnectionEventListener.java, [...]: Removing redundant modifiers.\n\n2003-10-11  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/sql/ConnectionEventListener.java,\n\tjavax/sql/ConnectionPoolDataSource.java,\n\tjavax/sql/DataSource.java,\n\tjavax/sql/PooledConnection.java,\n\tjavax/sql/RowSet.java,\n\tjavax/sql/RowSetInternal.java,\n\tjavax/sql/RowSetListener.java,\n\tjavax/sql/RowSetMetaData.java,\n\tjavax/sql/RowSetReader.java,\n\tjavax/sql/RowSetWriter.java,\n\tjavax/sql/XAConnection.java,\n\tjavax/sql/XADataSource.java:\n\tRemoving redundant modifiers.\n\nFrom-SVN: r72363", "tree": {"sha": "851f76f76a7fb42bed4bc06c47d53bf2181abea3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/851f76f76a7fb42bed4bc06c47d53bf2181abea3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/comments", "author": null, "committer": null, "parents": [{"sha": "547f7f8b9d220841cdd48fe4d09ca6c3add17faf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/547f7f8b9d220841cdd48fe4d09ca6c3add17faf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/547f7f8b9d220841cdd48fe4d09ca6c3add17faf"}], "stats": {"total": 594, "additions": 174, "deletions": 420}, "files": [{"sha": "1e232cdb69d8b4b354676dd24cafda54ff0d1baf", "filename": "libjava/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "patch": "@@ -1,3 +1,19 @@\n+2003-10-11  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/sql/ConnectionEventListener.java,\n+\tjavax/sql/ConnectionPoolDataSource.java,\n+\tjavax/sql/DataSource.java,\n+\tjavax/sql/PooledConnection.java,\n+\tjavax/sql/RowSet.java,\n+\tjavax/sql/RowSetInternal.java,\n+\tjavax/sql/RowSetListener.java,\n+\tjavax/sql/RowSetMetaData.java,\n+\tjavax/sql/RowSetReader.java,\n+\tjavax/sql/RowSetWriter.java,\n+\tjavax/sql/XAConnection.java,\n+\tjavax/sql/XADataSource.java:\n+\tRemoving redundant modifiers.\n+\n 2003-10-11  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/naming/Context.java,"}, {"sha": "b71531853c15fab3776a103085c8a45c4b6b2d86", "filename": "libjava/javax/sql/ConnectionEventListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FConnectionEventListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FConnectionEventListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fsql%2FConnectionEventListener.java?ref=e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "patch": "@@ -48,10 +48,10 @@ public interface ConnectionEventListener extends EventListener\n   /**\n    * @since 1.4\n    */\n-  public void connectionClosed(ConnectionEvent event);\n+  void connectionClosed(ConnectionEvent event);\n \n   /**\n    * @since 1.4\n    */\n-  public void connectionErrorOccurred(ConnectionEvent event);\n+  void connectionErrorOccurred(ConnectionEvent event);\n }"}, {"sha": "7e70ce77cbe613537881f11f3e6d4a8eeac95b19", "filename": "libjava/javax/sql/ConnectionPoolDataSource.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FConnectionPoolDataSource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FConnectionPoolDataSource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fsql%2FConnectionPoolDataSource.java?ref=e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "patch": "@@ -49,31 +49,31 @@ public interface ConnectionPoolDataSource\n   /**\n    * @since 1.4\n    */\n-  public PooledConnection getPooledConnection() throws SQLException;\n+  PooledConnection getPooledConnection() throws SQLException;\n \n   /**\n    * @since 1.4\n    */\n-  public PooledConnection getPooledConnection(String user, String password)\n+  PooledConnection getPooledConnection(String user, String password)\n     throws SQLException;\n \n   /**\n    * @since 1.4\n    */\n-  public PrintWriter getLogWriter() throws SQLException;\n+  PrintWriter getLogWriter() throws SQLException;\n \n   /**\n    * @since 1.4\n    */\n-  public void setLogWriter(PrintWriter out) throws SQLException;\n+  void setLogWriter(PrintWriter out) throws SQLException;\n \n   /**\n    * @since 1.4\n    */\n-  public void setLoginTimeout(int seconds) throws SQLException;\n+  void setLoginTimeout(int seconds) throws SQLException;\n \n   /**\n    * @since 1.4\n    */\n-  public int getLoginTimeout() throws SQLException;\n+  int getLoginTimeout() throws SQLException;\n }"}, {"sha": "3b6830f3d763a59d74ca066da9e557979da06958", "filename": "libjava/javax/sql/DataSource.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FDataSource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FDataSource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fsql%2FDataSource.java?ref=e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "patch": "@@ -50,31 +50,31 @@ public interface DataSource\n   /**\n    * @since 1.4\n    */\n-  public Connection getConnection() throws SQLException;\n+  Connection getConnection() throws SQLException;\n \n   /**\n    * @since 1.4\n    */\n-  public Connection getConnection(String username, String password)\n+  Connection getConnection(String username, String password)\n     throws SQLException;\n \n   /**\n    * @since 1.4\n    */\n-  public PrintWriter getLogWriter() throws SQLException;\n+  PrintWriter getLogWriter() throws SQLException;\n \n   /**\n    * @since 1.4\n    */\n-  public void setLogWriter(PrintWriter out) throws SQLException;\n+  void setLogWriter(PrintWriter out) throws SQLException;\n \n   /**\n    * @since 1.4\n    */\n-  public void setLoginTimeout(int seconds) throws SQLException;\n+  void setLoginTimeout(int seconds) throws SQLException;\n \n   /**\n    * @since 1.4\n    */\n-  public int getLoginTimeout() throws SQLException;\n+  int getLoginTimeout() throws SQLException;\n }"}, {"sha": "a1281192f78aa7247a677b708b00d2209ff30f34", "filename": "libjava/javax/sql/PooledConnection.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FPooledConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FPooledConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fsql%2FPooledConnection.java?ref=e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "patch": "@@ -49,20 +49,20 @@ public interface PooledConnection\n   /**\n    * @since 1.4\n    */\n-  public Connection getConnection() throws SQLException;\n+  Connection getConnection() throws SQLException;\n \n   /**\n    * @since 1.4\n    */\n-  public void close() throws SQLException;\n+  void close() throws SQLException;\n \n   /**\n    * @since 1.4\n    */\n-  public void addConnectionEventListener(ConnectionEventListener listener);\n+  void addConnectionEventListener(ConnectionEventListener listener);\n \n   /**\n    * @since 1.4\n    */\n-  public void removeConnectionEventListener(ConnectionEventListener listener);\n+  void removeConnectionEventListener(ConnectionEventListener listener);\n }"}, {"sha": "085288d6ed475746ae81b4b89239b4b93677929c", "filename": "libjava/javax/sql/RowSet.java", "status": "modified", "additions": 104, "deletions": 278, "changes": 382, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FRowSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FRowSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fsql%2FRowSet.java?ref=e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "patch": "@@ -58,304 +58,130 @@\n  */\n public interface RowSet extends ResultSet \n {\n-  /**\n-   * @since 1.4\n-   */\n-  public String getUrl() throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setUrl(String url) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public String getDataSourceName();\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setDataSourceName(String name) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public String getUsername();\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setUsername(String name) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public String getPassword();\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setPassword(String password) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public int getTransactionIsolation();\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setTransactionIsolation(int level) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public Map getTypeMap() throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setTypeMap(Map map) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public String getCommand();\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setCommand(String cmd) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public boolean isReadOnly();\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setReadOnly(boolean value) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public int getMaxFieldSize() throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setMaxFieldSize(int max) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public int getMaxRows() throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setMaxRows(int max) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public boolean getEscapeProcessing() throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setEscapeProcessing(boolean enable) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public int getQueryTimeout() throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setQueryTimeout(int seconds) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setType(int type) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setConcurrency(int concurrency) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setNull(int parameterIndex, int sqlType) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setNull(int paramIndex, int sqlType, String typeName) throws\n+  String getUrl() throws SQLException;\n+\n+  void setUrl(String url) throws SQLException;\n+\n+  String getDataSourceName();\n+\n+  void setDataSourceName(String name) throws SQLException;\n+\n+  String getUsername();\n+\n+  void setUsername(String name) throws SQLException;\n+\n+  String getPassword();\n+\n+  void setPassword(String password) throws SQLException;\n+\n+  int getTransactionIsolation();\n+\n+  void setTransactionIsolation(int level) throws SQLException;\n+\n+  Map getTypeMap() throws SQLException;\n+\n+  void setTypeMap(Map map) throws SQLException;\n+\n+  String getCommand();\n+\n+  void setCommand(String cmd) throws SQLException;\n+\n+  boolean isReadOnly();\n+\n+  void setReadOnly(boolean value) throws SQLException;\n+\n+  int getMaxFieldSize() throws SQLException;\n+\n+  void setMaxFieldSize(int max) throws SQLException;\n+\n+  int getMaxRows() throws SQLException;\n+\n+  void setMaxRows(int max) throws SQLException;\n+\n+  boolean getEscapeProcessing() throws SQLException;\n+\n+  void setEscapeProcessing(boolean enable) throws SQLException;\n+\n+  int getQueryTimeout() throws SQLException;\n+\n+  void setQueryTimeout(int seconds) throws SQLException;\n+\n+  void setType(int type) throws SQLException;\n+\n+  void setConcurrency(int concurrency) throws SQLException;\n+\n+  void setNull(int parameterIndex, int sqlType) throws SQLException;\n+\n+  void setNull(int paramIndex, int sqlType, String typeName) throws\n       SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setBoolean(int parameterIndex, boolean x) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setByte(int parameterIndex, byte x) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setShort(int parameterIndex, short x) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setInt(int parameterIndex, int x) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setLong(int parameterIndex, long x) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setFloat(int parameterIndex, float x) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setDouble(int parameterIndex, double x) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setBigDecimal(int parameterIndex, BigDecimal x) throws\n+  void setBoolean(int parameterIndex, boolean x) throws SQLException;\n+\n+  void setByte(int parameterIndex, byte x) throws SQLException;\n+\n+  void setShort(int parameterIndex, short x) throws SQLException;\n+\n+  void setInt(int parameterIndex, int x) throws SQLException;\n+\n+  void setLong(int parameterIndex, long x) throws SQLException;\n+\n+  void setFloat(int parameterIndex, float x) throws SQLException;\n+\n+  void setDouble(int parameterIndex, double x) throws SQLException;\n+\n+  void setBigDecimal(int parameterIndex, BigDecimal x) throws\n       SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setString(int parameterIndex, String x) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setBytes(int parameterIndex, byte[] x) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setDate(int parameterIndex, Date x) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setTime(int parameterIndex, Time x) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setTimestamp(int parameterIndex, Timestamp x) throws\n+  void setString(int parameterIndex, String x) throws SQLException;\n+\n+  void setBytes(int parameterIndex, byte[] x) throws SQLException;\n+\n+  void setDate(int parameterIndex, Date x) throws SQLException;\n+\n+  void setTime(int parameterIndex, Time x) throws SQLException;\n+\n+  void setTimestamp(int parameterIndex, Timestamp x) throws\n       SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setAsciiStream(int parameterIndex, InputStream x, int length)\n+  void setAsciiStream(int parameterIndex, InputStream x, int length)\n       throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setBinaryStream(int parameterIndex, InputStream x, int length)\n+  void setBinaryStream(int parameterIndex, InputStream x, int length)\n       throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setCharacterStream(int parameterIndex, Reader reader, int\n+  void setCharacterStream(int parameterIndex, Reader reader, int\n       length) throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setObject(int parameterIndex, Object x, int targetSqlType, int\n+  void setObject(int parameterIndex, Object x, int targetSqlType, int\n       scale) throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setObject(int parameterIndex, Object x, int targetSqlType)\n+  void setObject(int parameterIndex, Object x, int targetSqlType)\n       throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setObject(int parameterIndex, Object x) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setRef(int i, Ref x) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setBlob(int i, Blob x) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setClob(int i, Clob x) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setArray(int i, Array x) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setDate(int parameterIndex, Date x, Calendar cal) throws\n+  void setObject(int parameterIndex, Object x) throws SQLException;\n+\n+  void setRef(int i, Ref x) throws SQLException;\n+\n+  void setBlob(int i, Blob x) throws SQLException;\n+\n+  void setClob(int i, Clob x) throws SQLException;\n+\n+  void setArray(int i, Array x) throws SQLException;\n+\n+  void setDate(int parameterIndex, Date x, Calendar cal) throws\n       SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setTime(int parameterIndex, Time x, Calendar cal) throws\n+  void setTime(int parameterIndex, Time x, Calendar cal) throws\n       SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setTimestamp(int parameterIndex, Timestamp x, Calendar cal)\n+  void setTimestamp(int parameterIndex, Timestamp x, Calendar cal)\n       throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void clearParameters() throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void execute() throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void addRowSetListener(RowSetListener listener);\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void removeRowSetListener(RowSetListener listener);\n+  void clearParameters() throws SQLException;\n+\n+  void execute() throws SQLException;\n+\n+  void addRowSetListener(RowSetListener listener);\n+\n+  void removeRowSetListener(RowSetListener listener);\n }"}, {"sha": "8feaa27f9d5f6ab724b015cca6c790ab48531aea", "filename": "libjava/javax/sql/RowSetInternal.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FRowSetInternal.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FRowSetInternal.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fsql%2FRowSetInternal.java?ref=e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "patch": "@@ -50,25 +50,25 @@ public interface RowSetInternal\n   /**\n    * @since 1.4\n    */\n-  public Object[] getParams() throws SQLException;\n+  Object[] getParams() throws SQLException;\n \n   /**\n    * @since 1.4\n    */\n-  public Connection getConnection() throws SQLException;\n+  Connection getConnection() throws SQLException;\n \n   /**\n    * @since 1.4\n    */\n-  public void setMetaData(RowSetMetaData md) throws SQLException;\n+  void setMetaData(RowSetMetaData md) throws SQLException;\n \n   /**\n    * @since 1.4\n    */\n-  public ResultSet getOriginal() throws SQLException;\n+  ResultSet getOriginal() throws SQLException;\n \n   /**\n    * @since 1.4\n    */\n-  public ResultSet getOriginalRow() throws SQLException;\n+  ResultSet getOriginalRow() throws SQLException;\n }"}, {"sha": "6a6e619dd263748f0f8c117fe7abf19a55baf936", "filename": "libjava/javax/sql/RowSetListener.java", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FRowSetListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FRowSetListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fsql%2FRowSetListener.java?ref=e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "patch": "@@ -45,18 +45,9 @@\n  */\n public interface RowSetListener extends EventListener \n {\n-  /**\n-   * @since 1.4\n-   */\n-  public void rowSetChanged(RowSetEvent event);\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void rowChanged(RowSetEvent event);\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void cursorMoved(RowSetEvent event);\n+  void rowSetChanged(RowSetEvent event);\n+\n+  void rowChanged(RowSetEvent event);\n+\n+  void cursorMoved(RowSetEvent event);\n }"}, {"sha": "7f7749234d1058c8c265be625e8cb1a49decae13", "filename": "libjava/javax/sql/RowSetMetaData.java", "status": "modified", "additions": 17, "deletions": 69, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FRowSetMetaData.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FRowSetMetaData.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fsql%2FRowSetMetaData.java?ref=e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "patch": "@@ -46,102 +46,50 @@\n  */\n public interface RowSetMetaData extends ResultSetMetaData \n {\n+  void setColumnCount(int columnCount) throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setColumnCount(int columnCount) throws SQLException;\n-\n-  /**\n-   * @since 1.4\n-   */\n-  public void setAutoIncrement(int columnIndex, boolean property)\n+  void setAutoIncrement(int columnIndex, boolean property)\n     throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setCaseSensitive(int columnIndex, boolean property)\n+  void setCaseSensitive(int columnIndex, boolean property)\n     throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setSearchable(int columnIndex, boolean property)\n+  void setSearchable(int columnIndex, boolean property)\n     throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setCurrency(int columnIndex, boolean property)\n+  void setCurrency(int columnIndex, boolean property)\n     throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setNullable(int columnIndex, int property) throws SQLException;\n+  void setNullable(int columnIndex, int property) throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setSigned(int columnIndex, boolean property)\n+  void setSigned(int columnIndex, boolean property)\n     throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setColumnDisplaySize(int columnIndex, int size)\n+  void setColumnDisplaySize(int columnIndex, int size)\n     throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setColumnLabel(int columnIndex, String label)\n+  void setColumnLabel(int columnIndex, String label)\n     throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setColumnName(int columnIndex, String columnName)\n+  void setColumnName(int columnIndex, String columnName)\n     throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setSchemaName(int columnIndex, String schemaName)\n+  void setSchemaName(int columnIndex, String schemaName)\n     throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setPrecision(int columnIndex, int precision)\n+  void setPrecision(int columnIndex, int precision)\n     throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setScale(int columnIndex, int scale) throws SQLException;\n+  void setScale(int columnIndex, int scale) throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setTableName(int columnIndex, String tableName)\n+  void setTableName(int columnIndex, String tableName)\n     throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setCatalogName(int columnIndex, String catalogName)\n+  void setCatalogName(int columnIndex, String catalogName)\n     throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setColumnType(int columnIndex, int SQLType) throws SQLException;\n+  void setColumnType(int columnIndex, int SQLType) throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setColumnTypeName(int columnIndex, String typeName)\n+  void setColumnTypeName(int columnIndex, String typeName)\n     throws SQLException;\n }"}, {"sha": "a5e0f81ff6f87579eb7a574076a8eda140d3d5c2", "filename": "libjava/javax/sql/RowSetReader.java", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FRowSetReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FRowSetReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fsql%2FRowSetReader.java?ref=e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "patch": "@@ -45,8 +45,5 @@\n  */\n public interface RowSetReader \n {\n-  /**\n-   * @since 1.4\n-   */\n-  public void readData(RowSetInternal caller) throws SQLException;\n+  void readData(RowSetInternal caller) throws SQLException;\n }"}, {"sha": "fe4c1e6a199ca809bf41271d279c14acb9173ae0", "filename": "libjava/javax/sql/RowSetWriter.java", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FRowSetWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FRowSetWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fsql%2FRowSetWriter.java?ref=e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "patch": "@@ -45,8 +45,5 @@\n  */\n public interface RowSetWriter \n {\n-  /**\n-   * @since 1.4\n-   */\n-  public boolean writeData(RowSetInternal caller) throws SQLException;\n+  boolean writeData(RowSetInternal caller) throws SQLException;\n }"}, {"sha": "60b83d74c24ae3fef8d0d3cfb14ffcef9ea88a8b", "filename": "libjava/javax/sql/XAConnection.java", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FXAConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FXAConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fsql%2FXAConnection.java?ref=e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "patch": "@@ -46,8 +46,5 @@\n  */\n public interface XAConnection extends PooledConnection \n {\n-  /**\n-   * @since 1.4\n-   */\n-  public XAResource getXAResource() throws SQLException;\n+  XAResource getXAResource() throws SQLException;\n }"}, {"sha": "ef55a32804c856a49cdc18e7552acb3d4ec3268a", "filename": "libjava/javax/sql/XADataSource.java", "status": "modified", "additions": 6, "deletions": 24, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FXADataSource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc/libjava%2Fjavax%2Fsql%2FXADataSource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fsql%2FXADataSource.java?ref=e1feb64f5d324ab5ff0b8e33c910bb73fd2c7ecc", "patch": "@@ -46,34 +46,16 @@\n  */\n public interface XADataSource \n {\n-  /**\n-   * @since 1.4\n-   */\n-  public XAConnection getXAConnection() throws SQLException;\n+  XAConnection getXAConnection() throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public XAConnection getXAConnection(String user, String password) throws\n+  XAConnection getXAConnection(String user, String password) throws\n       SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public PrintWriter getLogWriter() throws SQLException;\n+  PrintWriter getLogWriter() throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setLogWriter(PrintWriter out) throws SQLException;\n+  void setLogWriter(PrintWriter out) throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public void setLoginTimeout(int seconds) throws SQLException;\n+  void setLoginTimeout(int seconds) throws SQLException;\n \n-  /**\n-   * @since 1.4\n-   */\n-  public int getLoginTimeout() throws SQLException;\n+  int getLoginTimeout() throws SQLException;\n }"}]}