{"sha": "09c5c12e560b7804b14f599e858929787193da30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDljNWMxMmU1NjBiNzgwNGIxNGY1OTllODU4OTI5Nzg3MTkzZGEzMA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-11-26T14:35:27Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-11-26T14:35:27Z"}, "message": "Revert \"Improve verification of loop->latch in verify_loop_structure\"\n\n2015-11-26  Tom de Vries  <tom@codesourcery.com>\n\n\trevert:\n\t2015-11-25  Tom de Vries  <tom@codesourcery.com>\n\n\t* cfgloop.c (find_single_latch): New function, factored out of ...\n\t(flow_loops_find): ... here.\n\t(verify_loop_structure): Improve verification of loop->latch.\n\t* cfgloop.h (find_single_latch): Declare.\n\t* omp-low.c (expand_omp_for_generic): Initialize latch of orig_loop.\n\nFrom-SVN: r230967", "tree": {"sha": "68daccaf06f934ff44ab4baa4d808aedebcc54ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68daccaf06f934ff44ab4baa4d808aedebcc54ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09c5c12e560b7804b14f599e858929787193da30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09c5c12e560b7804b14f599e858929787193da30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09c5c12e560b7804b14f599e858929787193da30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09c5c12e560b7804b14f599e858929787193da30/comments", "author": null, "committer": null, "parents": [{"sha": "941dd9a0ba4c58ab750d801ef54ad5db667962ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/941dd9a0ba4c58ab750d801ef54ad5db667962ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/941dd9a0ba4c58ab750d801ef54ad5db667962ab"}], "stats": {"total": 83, "additions": 31, "deletions": 52}, "files": [{"sha": "da80e714099d848f29642cb1d9d16480328110b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c5c12e560b7804b14f599e858929787193da30/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c5c12e560b7804b14f599e858929787193da30/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09c5c12e560b7804b14f599e858929787193da30", "patch": "@@ -1,3 +1,14 @@\n+2015-11-26  Tom de Vries  <tom@codesourcery.com>\n+\n+\trevert:\n+\t2015-11-25  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* cfgloop.c (find_single_latch): New function, factored out of ...\n+\t(flow_loops_find): ... here.\n+\t(verify_loop_structure): Improve verification of loop->latch.\n+\t* cfgloop.h (find_single_latch): Declare.\n+\t* omp-low.c (expand_omp_for_generic): Initialize latch of orig_loop.\n+\n 2015-11-26  Matthew Wahab  <matthew.wahab@arm.com>\n \n \t* config/aarch64/aarch64-simd-builtins.def:"}, {"sha": "83a526276dbef8554b75709847645d844fbab4dd", "filename": "gcc/cfgloop.c", "status": "modified", "additions": 20, "deletions": 50, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c5c12e560b7804b14f599e858929787193da30/gcc%2Fcfgloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c5c12e560b7804b14f599e858929787193da30/gcc%2Fcfgloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.c?ref=09c5c12e560b7804b14f599e858929787193da30", "patch": "@@ -388,33 +388,6 @@ bb_loop_header_p (basic_block header)\n   return false;\n }\n \n-/* Return the latch block for this header block, if it has just a single one.\n-   Otherwise, return NULL.  */\n-\n-basic_block\n-find_single_latch (struct loop* loop)\n-{\n-  basic_block header = loop->header;\n-  edge_iterator ei;\n-  edge e;\n-  basic_block latch = NULL;\n-\n-  FOR_EACH_EDGE (e, ei, header->preds)\n-    {\n-      basic_block cand = e->src;\n-      if (!flow_bb_inside_loop_p (loop, cand))\n-\tcontinue;\n-\n-      if (latch != NULL)\n-\t/* More than one latch edge.  */\n-\treturn NULL;\n-\n-      latch = cand;\n-    }\n-\n-  return latch;\n-}\n-\n /* Find all the natural loops in the function and save in LOOPS structure and\n    recalculate loop_father information in basic block structures.\n    If LOOPS is non-NULL then the loop structures for already recorded loops\n@@ -509,10 +482,29 @@ flow_loops_find (struct loops *loops)\n     {\n       struct loop *loop = larray[i];\n       basic_block header = loop->header;\n+      edge_iterator ei;\n+      edge e;\n \n       flow_loop_tree_node_add (header->loop_father, loop);\n       loop->num_nodes = flow_loop_nodes_find (loop->header, loop);\n-      loop->latch = find_single_latch (loop);\n+\n+      /* Look for the latch for this header block, if it has just a\n+\t single one.  */\n+      FOR_EACH_EDGE (e, ei, header->preds)\n+\t{\n+\t  basic_block latch = e->src;\n+\n+\t  if (flow_bb_inside_loop_p (loop, latch))\n+\t    {\n+\t      if (loop->latch != NULL)\n+\t\t{\n+\t\t  /* More than one latch edge.  */\n+\t\t  loop->latch = NULL;\n+\t\t  break;\n+\t\t}\n+\t      loop->latch = latch;\n+\t    }\n+\t}\n     }\n \n   return loops;\n@@ -1442,28 +1434,6 @@ verify_loop_structure (void)\n \t      error (\"loop %d%'s latch is not dominated by its header\", i);\n \t      err = 1;\n \t    }\n-\t  if (find_single_latch (loop) == NULL)\n-\t    {\n-\t      error (\"loop %d%'s latch is is not the only latch\", i);\n-\t      err = 1;\n-\t    }\n-\t}\n-      else\n-\t{\n-\t  if (loops_state_satisfies_p (LOOPS_MAY_HAVE_MULTIPLE_LATCHES))\n-\t    {\n-\t      if (find_single_latch (loop) != NULL)\n-\t\t{\n-\t\t  error (\"loop %d%'s latch is missing\", i);\n-\t\t  err = 1;\n-\t\t}\n-\t    }\n-\t  else\n-\t    {\n-\t      error (\"loop %d%'s latch is missing, and loops may not have\"\n-\t\t     \" multiple latches\", i);\n-\t      err = 1;\n-\t    }\n \t}\n       if (loops_state_satisfies_p (LOOPS_HAVE_SIMPLE_LATCHES))\n \t{"}, {"sha": "ee73bf994c18fc037e0de94b7b5c879182109893", "filename": "gcc/cfgloop.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c5c12e560b7804b14f599e858929787193da30/gcc%2Fcfgloop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c5c12e560b7804b14f599e858929787193da30/gcc%2Fcfgloop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.h?ref=09c5c12e560b7804b14f599e858929787193da30", "patch": "@@ -270,7 +270,6 @@ bool mark_irreducible_loops (void);\n void release_recorded_exits (function *);\n void record_loop_exits (void);\n void rescan_loop_exit (edge, bool, bool);\n-basic_block find_single_latch (struct loop*);\n \n /* Loop data structure manipulation/querying.  */\n extern void flow_loop_tree_node_add (struct loop *, struct loop *);"}, {"sha": "f17a828330a8bcc63ecfda069b317daa0fc7f80a", "filename": "gcc/omp-low.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09c5c12e560b7804b14f599e858929787193da30/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09c5c12e560b7804b14f599e858929787193da30/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=09c5c12e560b7804b14f599e858929787193da30", "patch": "@@ -8907,7 +8907,6 @@ expand_omp_for_generic (struct omp_region *region,\n \t  orig_loop->header = l1_bb;\n \t  /* The loop may have multiple latches.  */\n \t  add_loop (orig_loop, new_loop);\n-\t  orig_loop->latch = find_single_latch (orig_loop);\n \t}\n     }\n }"}]}