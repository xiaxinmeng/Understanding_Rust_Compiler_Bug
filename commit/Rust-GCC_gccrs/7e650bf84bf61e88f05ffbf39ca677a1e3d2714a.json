{"sha": "7e650bf84bf61e88f05ffbf39ca677a1e3d2714a", "node_id": "C_kwDOANBUbNoAKDdlNjUwYmY4NGJmNjFlODhmMDVmZmJmMzljYTY3N2ExZTNkMjcxNGE", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-11-17T13:24:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-12-02T16:26:20Z"}, "message": "[Ada] Add contract to Ada.Task_Identification.Activation_Is_Complete\n\ngcc/ada/\n\n\t* libgnarl/a-taside.ads (Activation_Is_Complete): Add\n\tprecondition.", "tree": {"sha": "cbdb80a0a212f2d502dda2b8df2d066dc1823941", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbdb80a0a212f2d502dda2b8df2d066dc1823941"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e650bf84bf61e88f05ffbf39ca677a1e3d2714a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e650bf84bf61e88f05ffbf39ca677a1e3d2714a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e650bf84bf61e88f05ffbf39ca677a1e3d2714a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e650bf84bf61e88f05ffbf39ca677a1e3d2714a/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45be7610383af22b552ab7b2d0fa0e1d632c66f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45be7610383af22b552ab7b2d0fa0e1d632c66f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45be7610383af22b552ab7b2d0fa0e1d632c66f0"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "682211cbf40bac22af713c6c70001c47ba0c58ca", "filename": "gcc/ada/libgnarl/a-taside.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e650bf84bf61e88f05ffbf39ca677a1e3d2714a/gcc%2Fada%2Flibgnarl%2Fa-taside.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e650bf84bf61e88f05ffbf39ca677a1e3d2714a/gcc%2Fada%2Flibgnarl%2Fa-taside.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fa-taside.ads?ref=7e650bf84bf61e88f05ffbf39ca677a1e3d2714a", "patch": "@@ -92,6 +92,7 @@ is\n \n    function Activation_Is_Complete (T : Task_Id) return Boolean with\n      Volatile_Function,\n+     Pre    => T /= Null_Task_Id,\n      Global => Tasking_State;\n \n private"}]}