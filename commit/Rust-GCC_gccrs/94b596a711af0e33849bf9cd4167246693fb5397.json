{"sha": "94b596a711af0e33849bf9cd4167246693fb5397", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRiNTk2YTcxMWFmMGUzMzg0OWJmOWNkNDE2NzI0NjY5M2ZiNTM5Nw==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "1999-03-27T20:52:02Z"}, "committer": {"name": "John Wehle", "email": "wehle@gcc.gnu.org", "date": "1999-03-27T20:52:02Z"}, "message": "i386.md (movdicc+3, movdicc+4): Rewrite using split_di.\n\n\t* i386.md (movdicc+3, movdicc+4): Rewrite using split_di.\n\t* i386.c (output_int_conditional_move): Delete unused code.\n\nFrom-SVN: r26026", "tree": {"sha": "4117d776427500465758362a37417fdc0d0eb60f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4117d776427500465758362a37417fdc0d0eb60f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94b596a711af0e33849bf9cd4167246693fb5397", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94b596a711af0e33849bf9cd4167246693fb5397", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94b596a711af0e33849bf9cd4167246693fb5397", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94b596a711af0e33849bf9cd4167246693fb5397/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b9ae34718a346c0a4393f2688ab4c21ce189292e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9ae34718a346c0a4393f2688ab4c21ce189292e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9ae34718a346c0a4393f2688ab4c21ce189292e"}], "stats": {"total": 55, "additions": 23, "deletions": 32}, "files": [{"sha": "1e95cfde133285a53f4227a74e6c2cbfbf116738", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94b596a711af0e33849bf9cd4167246693fb5397/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94b596a711af0e33849bf9cd4167246693fb5397/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94b596a711af0e33849bf9cd4167246693fb5397", "patch": "@@ -1,3 +1,8 @@\n+Sat Mar 27 23:37:40 EST 1999  John Wehle  (john@feith.com)\n+\n+\t* i386.md (movdicc+3, movdicc+4): Rewrite using split_di.\n+\t* i386.c (output_int_conditional_move): Delete unused code.\n+\n Sat Mar 27 21:17:36 1999  David Edelsohn  <edelsohn@gnu.org>\n \n \t* rs6000/{aix41.h,aix43.h} (ASM_CPU_SPEC): Add 604e."}, {"sha": "e9da36bf12ec76e60d75aef468c5b5df6513af2f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94b596a711af0e33849bf9cd4167246693fb5397/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94b596a711af0e33849bf9cd4167246693fb5397/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=94b596a711af0e33849bf9cd4167246693fb5397", "patch": "@@ -5517,8 +5517,6 @@ output_int_conditional_move (which_alternative, operands)\n      rtx operands[];\n {\n   int code = GET_CODE (operands[1]);\n-  enum machine_mode mode;\n-  rtx xops[4];\n \n   /* This is very tricky. We have to do it right. For a code segement\n      like:\n@@ -5538,29 +5536,16 @@ output_int_conditional_move (which_alternative, operands)\n       && (cc_prev_status.flags & CC_NO_OVERFLOW))\n     return NULL_PTR;\n \n-  mode = GET_MODE (operands [0]);\n-  if (mode == DImode)\n-    {\n-      xops [0] = gen_rtx_SUBREG (SImode, operands [0], 1);\n-      xops [1] = operands [1];\n-      xops [2] = gen_rtx_SUBREG (SImode, operands [2], 1);\n-      xops [3] = gen_rtx_SUBREG (SImode, operands [3], 1);\n-    }\n-\n   switch (which_alternative)\n     {\n     case 0:\n       /* r <- cond ? arg : r */\n       output_asm_insn (AS2 (cmov%C1,%2,%0), operands);\n-      if (mode == DImode)\n-\toutput_asm_insn (AS2 (cmov%C1,%2,%0), xops);\n       break;\n \n     case 1:\n       /* r <- cond ? r : arg */\n       output_asm_insn (AS2 (cmov%c1,%3,%0), operands);\n-      if (mode == DImode)\n-\toutput_asm_insn (AS2 (cmov%c1,%3,%0), xops);\n       break;\n \n     default:"}, {"sha": "d2137feeb54409f322d9543598166ab867a3836c", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94b596a711af0e33849bf9cd4167246693fb5397/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94b596a711af0e33849bf9cd4167246693fb5397/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=94b596a711af0e33849bf9cd4167246693fb5397", "patch": "@@ -7840,10 +7840,15 @@ byte_xor_operation:\n   \"TARGET_CMOVE && reload_completed\"\n   [(set (cc0)\n \t(match_dup 2))\n-   (set (match_dup 0)\n-\t(if_then_else:DI (match_op_dup 1 [(cc0) (const_int 0)])\n-\t\t      (match_dup 3) (match_dup 4)))]\n-  \"\")\n+   (set (match_dup 5)\n+\t(if_then_else:SI (match_op_dup 1 [(cc0) (const_int 0)])\n+\t\t      (match_dup 7) (match_dup 9)))\n+   (set (match_dup 6)\n+\t(if_then_else:SI (match_op_dup 1 [(cc0) (const_int 0)])\n+\t\t      (match_dup 8) (match_dup 10)))]\n+  \"split_di (&operands[0], 1, &operands[5], &operands[6]);\n+   split_di (&operands[3], 1, &operands[7], &operands[8]);\n+   split_di (&operands[4], 1, &operands[9], &operands[10]);\")\n \n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"=&r,&r\")\n@@ -7854,19 +7859,15 @@ byte_xor_operation:\n \t\t      (match_operand:DI 5 \"nonimmediate_operand\" \"0,ro\")))]\n   \"TARGET_CMOVE && reload_completed\"\n   [(set (cc0) (compare (match_dup 2) (match_dup 3)))\n-   (set (match_dup 0)\n-\t(if_then_else:DI (match_op_dup 1 [(cc0) (const_int 0)])\n-\t\t      (match_dup 4) (match_dup 5)))]\n-  \"\")\n-\n-(define_insn \"\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=&r,&r\")\n-\t(if_then_else:DI (match_operator 1 \"comparison_operator\" \n-\t\t\t\t[(cc0) (const_int 0)])\n-\t\t      (match_operand:DI 2 \"nonimmediate_operand\" \"ro,0\")\n-\t\t      (match_operand:DI 3 \"nonimmediate_operand\" \"0,ro\")))]\n-  \"TARGET_CMOVE && reload_completed\"\n-  \"* return output_int_conditional_move (which_alternative, operands);\")\n+   (set (match_dup 6)\n+\t(if_then_else:SI (match_op_dup 1 [(cc0) (const_int 0)])\n+\t\t      (match_dup 8) (match_dup 10)))\n+   (set (match_dup 7)\n+\t(if_then_else:SI (match_op_dup 1 [(cc0) (const_int 0)])\n+\t\t      (match_dup 9) (match_dup 11)))]\n+  \"split_di (&operands[0], 1, &operands[6], &operands[7]);\n+   split_di (&operands[4], 1, &operands[8], &operands[9]);\n+   split_di (&operands[5], 1, &operands[10], &operands[11]);\")\n \n (define_insn \"strlensi_unroll\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&r,&r\")"}]}