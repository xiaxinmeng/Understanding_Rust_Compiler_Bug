{"sha": "ab9b814d258a26fc74f370b8fdb2b9250088794c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI5YjgxNGQyNThhMjZmYzc0ZjM3MGI4ZmRiMmI5MjUwMDg4Nzk0Yw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-05-26T18:55:51Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-05-26T18:55:51Z"}, "message": "pretty-print.c: Don't include ggc.h.\n\n\t* pretty-print.c: Don't include ggc.h.\n\t(identifier_to_locale_alloc, identifier_to_locale_free): Define.\n\t(identifier_to_locale): Use them for allocation.\n\t* pretty-print.h (identifier_to_locale_alloc,\n\tidentifier_to_locale_free): Declare.\n\t* toplev.c (alloc_for_identifier_to_locale): New.\n\t(general_init): Set identifier_to_locale_alloc and\n\tidentifier_to_locale_free.\n\t* Makefile.in (pretty-print.o): Update dependencies.\n\nFrom-SVN: r159898", "tree": {"sha": "8ae9afd49a97e37e10c11657a0e4da727f351258", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ae9afd49a97e37e10c11657a0e4da727f351258"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab9b814d258a26fc74f370b8fdb2b9250088794c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab9b814d258a26fc74f370b8fdb2b9250088794c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab9b814d258a26fc74f370b8fdb2b9250088794c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab9b814d258a26fc74f370b8fdb2b9250088794c/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdd715238c97721534b7f7fd8e915ba045b6d2dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd715238c97721534b7f7fd8e915ba045b6d2dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdd715238c97721534b7f7fd8e915ba045b6d2dc"}], "stats": {"total": 58, "additions": 44, "deletions": 14}, "files": [{"sha": "e86992578ab161605b5f83aae0386ff231b6e5fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab9b814d258a26fc74f370b8fdb2b9250088794c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab9b814d258a26fc74f370b8fdb2b9250088794c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab9b814d258a26fc74f370b8fdb2b9250088794c", "patch": "@@ -1,3 +1,15 @@\n+2010-05-26  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* pretty-print.c: Don't include ggc.h.\n+\t(identifier_to_locale_alloc, identifier_to_locale_free): Define.\n+\t(identifier_to_locale): Use them for allocation.\n+\t* pretty-print.h (identifier_to_locale_alloc,\n+\tidentifier_to_locale_free): Declare.\n+\t* toplev.c (alloc_for_identifier_to_locale): New.\n+\t(general_init): Set identifier_to_locale_alloc and\n+\tidentifier_to_locale_free.\n+\t* Makefile.in (pretty-print.o): Update dependencies.\n+\n 2010-05-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimple.c (gimple_types_compatible_p): Return 0 for aggregate and"}, {"sha": "77b836fdd76016e9bceab824712d8380b789ec38", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab9b814d258a26fc74f370b8fdb2b9250088794c/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab9b814d258a26fc74f370b8fdb2b9250088794c/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=ab9b814d258a26fc74f370b8fdb2b9250088794c", "patch": "@@ -3398,8 +3398,7 @@ params.o : params.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(PARAMS_H) \\\n    $(TOPLEV_H)\n pointer-set.o: pointer-set.c pointer-set.h $(CONFIG_H) $(SYSTEM_H)\n hooks.o: hooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(HOOKS_H)\n-pretty-print.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h intl.h $(PRETTY_PRINT_H) \\\n-   $(GGC_H)\n+pretty-print.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h intl.h $(PRETTY_PRINT_H)\n errors.o : errors.c $(CONFIG_H) $(SYSTEM_H) errors.h $(BCONFIG_H)\n dbgcnt.o: dbgcnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TOPLEV_H) $(DBGCNT_H) \\\n    $(TM_H) $(RTL_H) output.h"}, {"sha": "aa8924cad9f91847ac83037da2bcf01eb905f2b2", "filename": "gcc/pretty-print.c", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab9b814d258a26fc74f370b8fdb2b9250088794c/gcc%2Fpretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab9b814d258a26fc74f370b8fdb2b9250088794c/gcc%2Fpretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpretty-print.c?ref=ab9b814d258a26fc74f370b8fdb2b9250088794c", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"intl.h\"\n #include \"pretty-print.h\"\n-#include \"ggc.h\"\n \n #if HAVE_ICONV\n #include <iconv.h>\n@@ -857,14 +856,21 @@ decode_utf8_char (const unsigned char *p, size_t len, unsigned int *value)\n     }\n }\n \n+/* Allocator for identifier_to_locale and corresponding function to\n+   free memory.  */\n+\n+void *(*identifier_to_locale_alloc) (size_t) = xmalloc;\n+void (*identifier_to_locale_free) (void *) = free;\n+\n /* Given IDENT, an identifier in the internal encoding, return a\n    version of IDENT suitable for diagnostics in the locale character\n-   set: either IDENT itself, or a garbage-collected string converted\n-   to the locale character set and using escape sequences if not\n-   representable in the locale character set or containing control\n-   characters or invalid byte sequences.  Existing backslashes in\n-   IDENT are not doubled, so the result may not uniquely specify the\n-   contents of an arbitrary byte sequence identifier.  */\n+   set: either IDENT itself, or a string, allocated using\n+   identifier_to_locale_alloc, converted to the locale character set\n+   and using escape sequences if not representable in the locale\n+   character set or containing control characters or invalid byte\n+   sequences.  Existing backslashes in IDENT are not doubled, so the\n+   result may not uniquely specify the contents of an arbitrary byte\n+   sequence identifier.  */\n \n const char *\n identifier_to_locale (const char *ident)\n@@ -895,7 +901,7 @@ identifier_to_locale (const char *ident)\n      outside printable ASCII.  */\n   if (!valid_printable_utf8)\n     {\n-      char *ret = GGC_NEWVEC (char, 4 * idlen + 1);\n+      char *ret = (char *) identifier_to_locale_alloc (4 * idlen + 1);\n       char *p = ret;\n       for (i = 0; i < idlen; i++)\n \t{\n@@ -938,7 +944,7 @@ identifier_to_locale (const char *ident)\n \t      size_t outbytesleft = ret_alloc - 1;\n \t      size_t iconv_ret;\n \n-\t      ret = GGC_NEWVEC (char, ret_alloc);\n+\t      ret = (char *) identifier_to_locale_alloc (ret_alloc);\n \t      outbuf = ret;\n \n \t      if (iconv (cd, 0, 0, 0, 0) == (size_t) -1)\n@@ -954,7 +960,7 @@ identifier_to_locale (const char *ident)\n \t\t  if (errno == E2BIG)\n \t\t    {\n \t\t      ret_alloc *= 2;\n-\t\t      ggc_free (ret);\n+\t\t      identifier_to_locale_free (ret);\n \t\t      ret = NULL;\n \t\t      continue;\n \t\t    }\n@@ -975,7 +981,7 @@ identifier_to_locale (const char *ident)\n \t\t  if (errno == E2BIG)\n \t\t    {\n \t\t      ret_alloc *= 2;\n-\t\t      ggc_free (ret);\n+\t\t      identifier_to_locale_free (ret);\n \t\t      ret = NULL;\n \t\t      continue;\n \t\t    }\n@@ -997,7 +1003,7 @@ identifier_to_locale (const char *ident)\n \n   /* Otherwise, convert non-ASCII characters in IDENT to UCNs.  */\n   {\n-    char *ret = GGC_NEWVEC (char, 10 * idlen + 1);\n+    char *ret = (char *) identifier_to_locale_alloc (10 * idlen + 1);\n     char *p = ret;\n     for (i = 0; i < idlen;)\n       {"}, {"sha": "a2e3c40a882ab01ddc40cf0bd1ce0fff18e63d68", "filename": "gcc/pretty-print.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab9b814d258a26fc74f370b8fdb2b9250088794c/gcc%2Fpretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab9b814d258a26fc74f370b8fdb2b9250088794c/gcc%2Fpretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpretty-print.h?ref=ab9b814d258a26fc74f370b8fdb2b9250088794c", "patch": "@@ -339,5 +339,7 @@ pp_set_verbatim_wrapping_ (pretty_printer *pp)\n #define pp_set_verbatim_wrapping(PP) pp_set_verbatim_wrapping_ (pp_base (PP))\n \n extern const char *identifier_to_locale (const char *);\n+extern void *(*identifier_to_locale_alloc) (size_t);\n+extern void (*identifier_to_locale_free) (void *);\n \n #endif /* GCC_PRETTY_PRINT_H */"}, {"sha": "f22c4d5bebde038ee2ddcb01db5acd165a8d074e", "filename": "gcc/toplev.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab9b814d258a26fc74f370b8fdb2b9250088794c/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab9b814d258a26fc74f370b8fdb2b9250088794c/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=ab9b814d258a26fc74f370b8fdb2b9250088794c", "patch": "@@ -1668,6 +1668,14 @@ realloc_for_line_map (void *ptr, size_t len)\n   return ggc_realloc (ptr, len);\n }\n \n+/* A helper function: used as the allocator function for\n+   identifier_to_locale.  */\n+static void *\n+alloc_for_identifier_to_locale (size_t len)\n+{\n+  return ggc_alloc (len);\n+}\n+\n /* Initialization of the front end environment, before command line\n    options are parsed.  Signal handlers, internationalization etc.\n    ARGV0 is main's argv[0].  */\n@@ -1690,6 +1698,9 @@ general_init (const char *argv0)\n \n   gcc_init_libintl ();\n \n+  identifier_to_locale_alloc = alloc_for_identifier_to_locale;\n+  identifier_to_locale_free = ggc_free;\n+\n   /* Initialize the diagnostics reporting machinery, so option parsing\n      can give warnings and errors.  */\n   diagnostic_initialize (global_dc, N_OPTS);"}]}