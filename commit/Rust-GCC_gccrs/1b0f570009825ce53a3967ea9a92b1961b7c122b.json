{"sha": "1b0f570009825ce53a3967ea9a92b1961b7c122b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIwZjU3MDAwOTgyNWNlNTNhMzk2N2VhOWE5MmIxOTYxYjdjMTIyYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-05-04T09:35:24Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-05-04T10:32:17Z"}, "message": "Restrict gcc.dg/tree-ssa/ssa-dse-26.c\n\nThis restricts the testcase to the target where it exposes the\nsituation fixed with g:e9d297a15d68121ba5bdd5a76ea71c1916180622\nwhich targets BIT_FIELD_REFs created by fold_truth_andor.\n\nThis avoids strange dejagnu limits with overly long target lists\nand simplifies the tests.\n\n2021-05-04  Richard Biener  <rguenther@suse.de>\n\n\t* gcc.dg/tree-ssa/ssa-dse-26.c: Skip on !lp64 targets,\n\tsimplify dump scanning down to one case.", "tree": {"sha": "3cbd39495593631190747373381dccef82e332f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cbd39495593631190747373381dccef82e332f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b0f570009825ce53a3967ea9a92b1961b7c122b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b0f570009825ce53a3967ea9a92b1961b7c122b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b0f570009825ce53a3967ea9a92b1961b7c122b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b0f570009825ce53a3967ea9a92b1961b7c122b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a310bb73edc9548e08d1fa28e7a56246caf27757", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a310bb73edc9548e08d1fa28e7a56246caf27757", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a310bb73edc9548e08d1fa28e7a56246caf27757"}], "stats": {"total": 19, "additions": 3, "deletions": 16}, "files": [{"sha": "5eabfb464d3c9aeed4bbdc27af9279f12b036f50", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-26.c", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0f570009825ce53a3967ea9a92b1961b7c122b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0f570009825ce53a3967ea9a92b1961b7c122b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-26.c?ref=1b0f570009825ce53a3967ea9a92b1961b7c122b", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-dse1-details -fno-short-enums -fno-tree-fre\" } */\n-/* { dg-skip-if \"temporary variable for constraint_expr is never used\" { msp430-*-* } } */\n+/* { dg-skip-if \"we want a BIT_FIELD_REF from fold_truth_andor\" { ! lp64 } } */\n \n enum constraint_expr_type\n {\n@@ -30,18 +30,5 @@ constraint_equal (struct constraint a, struct constraint b)\n     && constraint_expr_equal (a.rhs, b.rhs);\n }\n \n-/* Most targets should be using this test.  */\n-/* { dg-final { scan-tree-dump-times \"Deleted dead store: x = \" 1 \"dse1\" { target { ! { tic6x-*-* mmix-knuth-mmixware cr16*-*-* xstormy16*-*-* or1k*-*-* lm32*-*-* bfin*-*-* m32r*-*-* nds32le-elf rx*-*-* } } } } } */\n-/* { dg-final { scan-tree-dump-times \"Deleted dead store: y = \" 1 \"dse1\" { target { ! { tic6x-*-* mmix-knuth-mmixware cr16*-*-* xstormy16*-*-* or1k*-*-* bfin*-*-* lm32*-*-* m32r*-*-* nds32le-elf rx*-*-* } } } } } */\n-\n-/* The c6x port generates significantly different gimple which\n-   changes the SRA and DSE decisions.   Verify we remove all\n-   dead stores.  Similarly for mmix.  */\n-/* { dg-final { scan-tree-dump-times \"Deleted dead store: \\[ax\\].. = \" 2 \"dse1\" { target tic6x-*-* } } } */\n-/* { dg-final { scan-tree-dump-times \"Deleted dead store: \\[by\\].. = \" 2 \"dse1\" { target tic6x-*-* } } } */\n-/* { dg-final { scan-tree-dump-times \"Deleted dead store: x::. = \" 1 \"dse1\" { target mmix-knuth-mmixware } } } */\n-/* { dg-final { scan-tree-dump-times \"Deleted dead store: y::. = \" 1 \"dse1\" { target mmix-knuth-mmixware } } } */\n-\n-/* And more special cases\n-/* { dg-final { scan-tree-dump-times \"Deleted dead store: x = \" 2 \"dse1\" { target cr16*-*-* xstormy16*-*-* or1k*-*-* bfin*-*-* lm32*-*-* m32r*-*-* nds32le-elf rx*-*-* } } } */\n-/* { dg-final { scan-tree-dump-times \"Deleted dead store: y = \" 2 \"dse1\" { target cr16*-*-* xstormy16*-*-* or1k*-*-* bfin*-*-* lm32*-*-* m32r*-*-* nds32le-elf rx*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Deleted dead store: x = \" 1 \"dse1\" } } */\n+/* { dg-final { scan-tree-dump-times \"Deleted dead store: y = \" 1 \"dse1\" } } */"}]}