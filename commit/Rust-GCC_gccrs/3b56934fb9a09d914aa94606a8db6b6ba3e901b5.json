{"sha": "3b56934fb9a09d914aa94606a8db6b6ba3e901b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I1NjkzNGZiOWEwOWQ5MTRhYTk0NjA2YThkYjZiNmJhM2U5MDFiNQ==", "commit": {"author": {"name": "Christopher Faylor", "email": "cgf@gcc.gnu.org", "date": "2002-02-03T20:58:51Z"}, "committer": {"name": "Christopher Faylor", "email": "cgf@gcc.gnu.org", "date": "2002-02-03T20:58:51Z"}, "message": "gthr-win32.h: Protect against conflicting typedef for BOOL in windows headers and libobjc headers.\n\n* gthr-win32.h: Protect against conflicting typedef for BOOL in windows headers\nand libobjc headers.\n* gthr-win32.h (__mingwthr_key_dtor): Use extern \"C\" linkage for C++.\n(_mingw.h): Remove duplicate include.\n\nFrom-SVN: r49465", "tree": {"sha": "efafcc7501e369c80b7d9e3f751e7c36d740fcb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efafcc7501e369c80b7d9e3f751e7c36d740fcb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b56934fb9a09d914aa94606a8db6b6ba3e901b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b56934fb9a09d914aa94606a8db6b6ba3e901b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b56934fb9a09d914aa94606a8db6b6ba3e901b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b56934fb9a09d914aa94606a8db6b6ba3e901b5/comments", "author": null, "committer": null, "parents": [{"sha": "2fd95d71b42381aaf0d924dde3358f87dfd1824c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fd95d71b42381aaf0d924dde3358f87dfd1824c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fd95d71b42381aaf0d924dde3358f87dfd1824c"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "268c9b9f02dff6aa0478ce2b86ae5e4dbf4a5dd7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b56934fb9a09d914aa94606a8db6b6ba3e901b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b56934fb9a09d914aa94606a8db6b6ba3e901b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b56934fb9a09d914aa94606a8db6b6ba3e901b5", "patch": "@@ -1,3 +1,13 @@\n+2001-02-03  Danny Smith <dannysmith@users.sourceforge.net>\n+\n+\t* gthr-win32.h: Protect against conflicting typedef for BOOL in windows\n+\theaders and libobjc headers.\n+\n+2002-02-03  Mumit Khan  <khan@nanotech.wisc.edu>\n+\n+\t* gthr-win32.h (__mingwthr_key_dtor): Use extern \"C\" linkage for C++.\n+\t(_mingw.h): Remove duplicate include.\n+\n 2002-02-03  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config.gcc: Set cpu_type to m68k for 68010, as well."}, {"sha": "97d5a825cd6fde6bf864b3d471579b119cf72bd9", "filename": "gcc/gthr-win32.h", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b56934fb9a09d914aa94606a8db6b6ba3e901b5/gcc%2Fgthr-win32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b56934fb9a09d914aa94606a8db6b6ba3e901b5/gcc%2Fgthr-win32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-win32.h?ref=3b56934fb9a09d914aa94606a8db6b6ba3e901b5", "patch": "@@ -64,14 +64,22 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #define __GTHREADS 1\n \n-#include <windows.h>\n #include <errno.h>\n #ifdef __MINGW32__\n #include <_mingw.h>\n #endif\n \n #ifdef _LIBOBJC\n \n+/* This is necessary to prevent windef.h (included from windows.h) from\n+   defining it's own BOOL as a typedef.  */\t\n+#ifndef __OBJC__\n+#define __OBJC__\n+#endif\n+#include <windows.h>\n+/* Now undef the windows BOOL.  */ \n+#undef BOOL\n+\n /* Key structure for maintaining thread specific storage */\n static DWORD\t__gthread_objc_data_tls = (DWORD)-1;\n \n@@ -320,9 +328,7 @@ __gthread_objc_condition_signal(objc_condition_t condition)\n \n #else /* _LIBOBJC */\n \n-#ifdef __MINGW32__\n-#include <_mingw.h>\n-#endif\n+#include <windows.h>\n \n typedef DWORD __gthread_key_t;\n \n@@ -339,7 +345,14 @@ typedef HANDLE __gthread_mutex_t;\n #if __MINGW32_MAJOR_VERSION >= 1 || \\\n   (__MINGW32_MAJOR_VERSION == 0 && __MINGW32_MINOR_VERSION > 2)\n #define MINGW32_SUPPORTS_MT_EH 1\n-extern int __mingwthr_key_dtor PARAMS ((DWORD, void (*) (void *)));\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+extern int __mingwthr_key_dtor (DWORD, void (*) (void *));\n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* Mingw runtime >= v0.3 provides a magic variable that is set to non-zero\n    if -mthreads option was specified, or 0 otherwise. This is to get around \n    the lack of weak symbols in PE-COFF.  */"}]}