{"sha": "6522add29b65f7fe572202b2a1e83a8cd00b07fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUyMmFkZDI5YjY1ZjdmZTU3MjIwMmIyYTFlODNhOGNkMDBiMDdmYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-11-28T15:03:55Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-11-28T15:03:55Z"}, "message": "re PR tree-optimization/78542 (wrong code at -Og results in endless loop)\n\n2016-11-28  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/78542\n\t* tree-ssa-ccp.c (evaluate_stmt): Only valueize simplification\n\tif allowed.\n\n\t* gcc.dg/torture/pr78542.c: New testcase.\n\nFrom-SVN: r242920", "tree": {"sha": "1372289a2cbe9345b5231abe32c44b42be707a59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1372289a2cbe9345b5231abe32c44b42be707a59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6522add29b65f7fe572202b2a1e83a8cd00b07fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6522add29b65f7fe572202b2a1e83a8cd00b07fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6522add29b65f7fe572202b2a1e83a8cd00b07fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6522add29b65f7fe572202b2a1e83a8cd00b07fa/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a6951b1bf77ab4d1c0fbffc361ad047e3aa0b98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a6951b1bf77ab4d1c0fbffc361ad047e3aa0b98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a6951b1bf77ab4d1c0fbffc361ad047e3aa0b98"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "15129d98b53a1d9b7a6fa84e9d80c8c55940a7da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6522add29b65f7fe572202b2a1e83a8cd00b07fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6522add29b65f7fe572202b2a1e83a8cd00b07fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6522add29b65f7fe572202b2a1e83a8cd00b07fa", "patch": "@@ -1,3 +1,9 @@\n+2016-11-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/78542\n+\t* tree-ssa-ccp.c (evaluate_stmt): Only valueize simplification\n+\tif allowed.\n+\n 2016-11-28  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* combine.c (simplify_if_then_else): Simplify IF_THEN_ELSE"}, {"sha": "8535df42f0cd56cc3b0ec8c8c598fb65b8257f10", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6522add29b65f7fe572202b2a1e83a8cd00b07fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6522add29b65f7fe572202b2a1e83a8cd00b07fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6522add29b65f7fe572202b2a1e83a8cd00b07fa", "patch": "@@ -1,3 +1,8 @@\n+2016-11-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/78542\n+\t* gcc.dg/torture/pr78542.c: New testcase.\n+\n 2016-11-28  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/78343"}, {"sha": "bae42b653337de77aac6df4f5d1801b0ad2bae7b", "filename": "gcc/testsuite/gcc.dg/torture/pr78542.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6522add29b65f7fe572202b2a1e83a8cd00b07fa/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78542.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6522add29b65f7fe572202b2a1e83a8cd00b07fa/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78542.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78542.c?ref=6522add29b65f7fe572202b2a1e83a8cd00b07fa", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-w -Wno-psabi\" } */\n+\n+typedef unsigned V __attribute__ ((vector_size (16)));\n+\n+V\n+foo (unsigned x, V v)\n+{\n+  do {\n+      v %= x;\n+      x = 1;\n+  } while (v[1]);\n+  return v;\n+}\n+\n+int\n+main ()\n+{\n+  V x = foo (5, (V) { 0, 1 });\n+  if (x[0] || x[1] || x[2] || x[3])\n+    __builtin_abort();\n+  return 0;\n+}"}, {"sha": "084b2e1dace4baf3ceeeb57f6b99c25c24d4cbcf", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6522add29b65f7fe572202b2a1e83a8cd00b07fa/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6522add29b65f7fe572202b2a1e83a8cd00b07fa/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=6522add29b65f7fe572202b2a1e83a8cd00b07fa", "patch": "@@ -1744,7 +1744,12 @@ evaluate_stmt (gimple *stmt)\n     {\n       fold_defer_overflow_warnings ();\n       simplified = ccp_fold (stmt);\n-      if (simplified && TREE_CODE (simplified) == SSA_NAME)\n+      if (simplified\n+\t  && TREE_CODE (simplified) == SSA_NAME\n+\t  /* We may not use values of something that may be simulated again,\n+\t     see valueize_op_1.  */\n+\t  && (SSA_NAME_IS_DEFAULT_DEF (simplified)\n+\t      || ! prop_simulate_again_p (SSA_NAME_DEF_STMT (simplified))))\n \t{\n \t  ccp_prop_value_t *val = get_value (simplified);\n \t  if (val && val->lattice_val != VARYING)"}]}