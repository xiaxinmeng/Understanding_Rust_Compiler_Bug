{"sha": "17a4fdaa76810e0928f34fed978fd001e91655a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdhNGZkYWE3NjgxMGUwOTI4ZjM0ZmVkOTc4ZmQwMDFlOTE2NTVhMA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-01-28T14:57:19Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-01-28T14:57:19Z"}, "message": "cfgloopmanip.c (split_loop_bb): Remove.\n\n\t* cfgloopmanip.c (split_loop_bb): Remove.\n\t* cfgloop.h: Remove the prototype for split_loop_bb.\n\nFrom-SVN: r110324", "tree": {"sha": "ebd1cf9414aaa6d4e12bb9caf0684c43022658ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebd1cf9414aaa6d4e12bb9caf0684c43022658ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17a4fdaa76810e0928f34fed978fd001e91655a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17a4fdaa76810e0928f34fed978fd001e91655a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17a4fdaa76810e0928f34fed978fd001e91655a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17a4fdaa76810e0928f34fed978fd001e91655a0/comments", "author": null, "committer": null, "parents": [{"sha": "e6620e86376c650754216a2bf4601e76cf15e9c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6620e86376c650754216a2bf4601e76cf15e9c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6620e86376c650754216a2bf4601e76cf15e9c8"}], "stats": {"total": 20, "additions": 3, "deletions": 17}, "files": [{"sha": "240b380729a9b0b7bbd03bfbea03ef68b842fbff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17a4fdaa76810e0928f34fed978fd001e91655a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17a4fdaa76810e0928f34fed978fd001e91655a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17a4fdaa76810e0928f34fed978fd001e91655a0", "patch": "@@ -4,6 +4,9 @@\n \t* c-typeck.c (build_binary_op): Perform implicit casts of\n \toperands before shortening them.\n \n+\t* cfgloopmanip.c (split_loop_bb): Remove.\n+\t* cfgloop.h: Remove the prototype for split_loop_bb.\n+\n 2006-01-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* df-scan.c (df_record_entry_block_defs): Check if"}, {"sha": "785fef1b252b9fada5b362aec73973b6fd91631b", "filename": "gcc/cfgloop.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17a4fdaa76810e0928f34fed978fd001e91655a0/gcc%2Fcfgloop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17a4fdaa76810e0928f34fed978fd001e91655a0/gcc%2Fcfgloop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.h?ref=17a4fdaa76810e0928f34fed978fd001e91655a0", "patch": "@@ -311,7 +311,6 @@ extern struct loop *loopify (struct loops *, edge, edge,\n struct loop * loop_version (struct loops *, struct loop *, void *,\n \t\t\t    basic_block *, bool);\n extern bool remove_path (struct loops *, edge);\n-extern edge split_loop_bb (basic_block, void *);\n \n /* Induction variable analysis.  */\n "}, {"sha": "5aa2bf8940a209512df18cf8ada448fe251f166b", "filename": "gcc/cfgloopmanip.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17a4fdaa76810e0928f34fed978fd001e91655a0/gcc%2Fcfgloopmanip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17a4fdaa76810e0928f34fed978fd001e91655a0/gcc%2Fcfgloopmanip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.c?ref=17a4fdaa76810e0928f34fed978fd001e91655a0", "patch": "@@ -52,22 +52,6 @@ static void unloop (struct loops *, struct loop *);\n \n #define RDIV(X,Y) (((X) + (Y) / 2) / (Y))\n \n-/* Splits basic block BB after INSN, returns created edge.  Updates loops\n-   and dominators.  */\n-edge\n-split_loop_bb (basic_block bb, void *insn)\n-{\n-  edge e;\n-\n-  /* Split the block.  */\n-  e = split_block (bb, insn);\n-\n-  /* Add dest to loop.  */\n-  add_bb_to_loop (e->dest, e->src->loop_father);\n-\n-  return e;\n-}\n-\n /* Checks whether basic block BB is dominated by DATA.  */\n static bool\n rpe_enum_p (basic_block bb, void *data)"}]}