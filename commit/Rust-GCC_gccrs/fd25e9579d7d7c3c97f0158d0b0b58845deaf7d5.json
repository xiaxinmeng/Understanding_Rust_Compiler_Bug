{"sha": "fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQyNWU5NTc5ZDdkN2MzYzk3ZjAxNThkMGIwYjU4ODQ1ZGVhZjdkNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-12-07T12:57:13Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-12-07T12:57:13Z"}, "message": "re PR rtl-optimization/13318 (ICE: floating point exception in the loop optimizer)\n\n\tPR optimization/13318\n\t* loop.c (express_from): Protect integer division from overflow.\n\nFrom-SVN: r74387", "tree": {"sha": "c7a279fc1d15b2c2928f94eb4317e4a017ab688b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7a279fc1d15b2c2928f94eb4317e4a017ab688b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5/comments", "author": null, "committer": null, "parents": [{"sha": "5c6ef9bee008cc943f4387f405e8211cdd58c9e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c6ef9bee008cc943f4387f405e8211cdd58c9e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c6ef9bee008cc943f4387f405e8211cdd58c9e0"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "ade64d8c97356e9a5af2cfae61d2813e91e68552", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5", "patch": "@@ -1,3 +1,8 @@\n+2003-12-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR optimization/13318\n+\t* loop.c (express_from): Protect integer division from overflow.\n+\n 2003-12-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR optimization/13060"}, {"sha": "373ff1478c4386962313935e56cc4b97c2be4fc9", "filename": "gcc/loop.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5", "patch": "@@ -7196,6 +7196,9 @@ express_from (struct induction *g1, struct induction *g2)\n       && GET_CODE (g2->mult_val) == CONST_INT)\n     {\n       if (g1->mult_val == const0_rtx\n+\t  || (g1->mult_val == constm1_rtx\n+\t      && INTVAL (g2->mult_val)\n+\t\t == (HOST_WIDE_INT) 1 << (HOST_BITS_PER_WIDE_INT - 1))\n \t  || INTVAL (g2->mult_val) % INTVAL (g1->mult_val) != 0)\n \treturn NULL_RTX;\n       mult = GEN_INT (INTVAL (g2->mult_val) / INTVAL (g1->mult_val));"}, {"sha": "b075f0e62c98cd36f639a56f7a82f6e245a532f9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5", "patch": "@@ -1,3 +1,7 @@\n+2003-12-07  Wolfgang Bangerth  <bangerth@dealii.org>\n+\n+\t* gcc.dg/overflow-1.c: New test.\n+\n 2003-12-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* g77.f-torture/compile/13060.f: New test."}, {"sha": "db51a5ef129e4c97ceac2bd7f0536242549d5cef", "filename": "gcc/testsuite/gcc.dg/overflow-1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5/gcc%2Ftestsuite%2Fgcc.dg%2Foverflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5/gcc%2Ftestsuite%2Fgcc.dg%2Foverflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foverflow-1.c?ref=fd25e9579d7d7c3c97f0158d0b0b58845deaf7d5", "patch": "@@ -0,0 +1,25 @@\n+/* PR optimization/13318 */\n+/* Origin: <bremner@unb.ca> */\n+/* Reduced testcase: Wolfgang Bangerth <bangerth@dealii.org> */\n+\n+/* Verify that the big multiplier doesn't cause an integer\n+   overflow in the loop optimizer.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+struct S {\n+  int key;\n+  int rnext,rprev;\n+};\n+ \n+void foo(struct S* H)\n+{\n+  int i, k;\n+  for (i=0; i<2; i++){\n+    struct S* cell=H+k;\n+    cell->key=i*(0xffffffffUL/2);\n+    cell->rnext=k+(1-i);\n+    cell->rprev=k+(1-i);\n+  }\n+}"}]}