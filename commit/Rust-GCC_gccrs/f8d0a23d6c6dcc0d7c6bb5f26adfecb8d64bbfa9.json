{"sha": "f8d0a23d6c6dcc0d7c6bb5f26adfecb8d64bbfa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhkMGEyM2Q2YzZkY2MwZDdjNmJiNWYyNmFkZmVjYjhkNjRiYmZhOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2010-11-22T21:20:52Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2010-11-22T21:20:52Z"}, "message": "re PR target/46434 (crx-elf --enable-werror-always build fails)\n\nPR target/46434\n        * config/crx/crx.c (crx_addr_reg): Rename from crx_addr_reg_p;\n        return the address register extracted.\n        (crx_decompose_address): Update the extracted address register.\n\nFrom-SVN: r167053", "tree": {"sha": "83a2352dd2b7be0d6979d69070390c30908145d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83a2352dd2b7be0d6979d69070390c30908145d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8d0a23d6c6dcc0d7c6bb5f26adfecb8d64bbfa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8d0a23d6c6dcc0d7c6bb5f26adfecb8d64bbfa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8d0a23d6c6dcc0d7c6bb5f26adfecb8d64bbfa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8d0a23d6c6dcc0d7c6bb5f26adfecb8d64bbfa9/comments", "author": null, "committer": null, "parents": [{"sha": "de9a793edf281596d955cf8d42a229d82d22ab27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de9a793edf281596d955cf8d42a229d82d22ab27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de9a793edf281596d955cf8d42a229d82d22ab27"}], "stats": {"total": 50, "additions": 29, "deletions": 21}, "files": [{"sha": "753b9702ba034de81ae767b04500be70b9121d24", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d0a23d6c6dcc0d7c6bb5f26adfecb8d64bbfa9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d0a23d6c6dcc0d7c6bb5f26adfecb8d64bbfa9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8d0a23d6c6dcc0d7c6bb5f26adfecb8d64bbfa9", "patch": "@@ -1,3 +1,10 @@\n+2010-11-22  Richard Henderson  <rth@redhat.com>\n+\n+\tPR target/46434\n+\t* config/crx/crx.c (crx_addr_reg): Rename from crx_addr_reg_p;\n+\treturn the address register extracted.\n+\t(crx_decompose_address): Update the extracted address register.\n+\n 2010-11-22  Dmitry Gorbachev  <d.g.gorbachev@gmail.com>\n \n \tPR driver/43335"}, {"sha": "d6b9022b239e1ddeb784739f2f49c0ccb792140c", "filename": "gcc/config/crx/crx.c", "status": "modified", "additions": 22, "deletions": 21, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d0a23d6c6dcc0d7c6bb5f26adfecb8d64bbfa9/gcc%2Fconfig%2Fcrx%2Fcrx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d0a23d6c6dcc0d7c6bb5f26adfecb8d64bbfa9/gcc%2Fconfig%2Fcrx%2Fcrx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcrx%2Fcrx.c?ref=f8d0a23d6c6dcc0d7c6bb5f26adfecb8d64bbfa9", "patch": "@@ -590,30 +590,21 @@ crx_function_arg_regno_p (int n)\n  * Scaled index\t\t--> reg + reg | 22-bit disp. + reg + reg |\n  *\t\t\t    22-disp. + reg + reg + (2 | 4 | 8) */\n \n-static int crx_addr_reg_p (rtx addr_reg)\n+static rtx\n+crx_addr_reg (rtx addr_reg)\n {\n-  rtx reg;\n+  if (GET_MODE (addr_reg) != Pmode)\n+    return NULL_RTX;\n \n   if (REG_P (addr_reg))\n-    {\n-      reg = addr_reg;\n-    }\n-  else if ((GET_CODE (addr_reg) == SUBREG\n+    return addr_reg;\n+  else if (GET_CODE (addr_reg) == SUBREG\n \t   && REG_P (SUBREG_REG (addr_reg))\n-\t   && GET_MODE_SIZE (GET_MODE (SUBREG_REG (addr_reg)))\n-\t   <= UNITS_PER_WORD))\n-    {\n-      reg = SUBREG_REG (addr_reg);\n-    }\n+\t   && (GET_MODE_SIZE (GET_MODE (SUBREG_REG (addr_reg)))\n+\t       <= UNITS_PER_WORD))\n+    return SUBREG_REG (addr_reg);\n   else\n-    return FALSE;\n-\n-  if (GET_MODE (addr_reg) != Pmode)\n-    {\n-      return FALSE;\n-    }\n-\n-  return TRUE;\n+    return NULL_RTX;\n }\n \n enum crx_addrtype\n@@ -752,8 +743,18 @@ crx_decompose_address (rtx addr, struct crx_address *out)\n       return CRX_INVALID;\n     }\n \n-  if (base && !crx_addr_reg_p (base)) return CRX_INVALID;\n-  if (index && !crx_addr_reg_p (index)) return CRX_INVALID;\n+  if (base)\n+    {\n+      base = crx_addr_reg (base);\n+      if (!base)\n+\treturn CRX_INVALID;\n+    }\n+  if (index)\n+    {\n+      index = crx_addr_reg (index);\n+      if (!index)\n+\treturn CRX_INVALID;\n+    }\n   \n   out->base = base;\n   out->index = index;"}]}