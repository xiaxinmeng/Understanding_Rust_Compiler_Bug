{"sha": "d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60", "node_id": "C_kwDOANBUbNoAKGQ4MDhkYjFmN2IyMGEzZmMzY2YxYzE3M2Y4YTNkN2UyODljYjFlNjA", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-01-07T00:17:28Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-01-07T00:17:28Z"}, "message": "Daily bump.", "tree": {"sha": "3587bca0112467cba078692ddb3e170cd052cef7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3587bca0112467cba078692ddb3e170cd052cef7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/comments", "author": null, "committer": null, "parents": [{"sha": "74852a3a2cecbd6d7ac6ddc2d1a9b60b83367d60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74852a3a2cecbd6d7ac6ddc2d1a9b60b83367d60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74852a3a2cecbd6d7ac6ddc2d1a9b60b83367d60"}], "stats": {"total": 143, "additions": 142, "deletions": 1}, "files": [{"sha": "03fc332b9658883e41a1192f6e8432f88dff303c", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60", "patch": "@@ -1,3 +1,9 @@\n+2023-01-06  Cl\u00e9ment Chigot  <chigot@adacore.com>\n+\n+\t* configure.ac: Skip GMP and MPFR when --disable-gdb is\n+\tprovided.\n+\t* configure: Regenerate.\n+\n 2023-01-04  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \t* MAINTAINERS: Add Gaius Mulley as Modula-2 front-end maintainer."}, {"sha": "fc03953ccd6a597d6d845ad893199f19b6b9cc8f", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60", "patch": "@@ -1,3 +1,7 @@\n+2023-01-06  Martin Liska  <mliska@suse.cz>\n+\n+\t* update-copyright.py: Add contrib as a default dir.\n+\n 2022-12-28  Martin Liska  <mliska@suse.cz>\n \n \t* update-copyright.py: Add contrib folder."}, {"sha": "5c1d16e4057e73e465d156da088dfc5a6ddd02e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60", "patch": "@@ -1,3 +1,33 @@\n+2023-01-06  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* doc/extend.texi (__builtin_tgmath): Do not restate standard rule\n+\tfor handling real integer types.\n+\n+2023-01-06  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tRevert:\n+\t2022-12-12  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* config/aarch64/aarch64-simd.md (*aarch64_simd_movv2hf): New.\n+\t(mov<mode>, movmisalign<mode>, aarch64_dup_lane<mode>,\n+\taarch64_store_lane0<mode>, aarch64_simd_vec_set<mode>,\n+\t@aarch64_simd_vec_copy_lane<mode>, vec_set<mode>,\n+\treduc_<optab>_scal_<mode>, reduc_<fmaxmin>_scal_<mode>,\n+\taarch64_reduc_<optab>_internal<mode>, aarch64_get_lane<mode>,\n+\tvec_init<mode><Vel>, vec_extract<mode><Vel>): Support V2HF.\n+\t(aarch64_simd_dupv2hf): New.\n+\t* config/aarch64/aarch64.cc (aarch64_classify_vector_mode):\n+\tAdd E_V2HFmode.\n+\t* config/aarch64/iterators.md (VHSDF_P): New.\n+\t(V2F, VMOVE, nunits, Vtype, Vmtype, Vetype, stype, VEL,\n+\tVel, q, vp): Add V2HF.\n+\t* config/arm/types.md (neon_fp_reduc_add_h): New.\n+\n+2023-01-06  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/107966\n+\t* doc/options.texi: Fix Var documentation in internal manual.\n+\n 2023-01-05  Roger Sayle  <roger@nextmovesoftware.com>\n \n \tRevert:"}, {"sha": "1178712294cb8e46046114e4789a8980bbdc62c4", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60", "patch": "@@ -1 +1 @@\n-20230106\n+20230107"}, {"sha": "a0e702eed8f2b6e98856cd5ca74a8b581587758d", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60", "patch": "@@ -1,3 +1,11 @@\n+2023-01-06  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-parser.cc (c_parser_postfix_expression): Handle integer\n+\tgeneric arguments to functions passed to __builtin_tgmath as\n+\t_Float32x if any argument has _FloatNx or _Complex _FloatNx type.\n+\tDo not handle integer arguments to some narrowing functions as\n+\t_Float64.\n+\n 2022-12-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/108043"}, {"sha": "cc85416b3375f1e255309d255c08489e43511b04", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60", "patch": "@@ -1,3 +1,23 @@\n+2023-01-06  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/builtin-tgmath-3.c: Update expectations and add more\n+\ttests.\n+\n+2023-01-06  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tRevert:\n+\t2023-01-06  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* gcc.target/aarch64/sve/slp_1.c: Update testcase.\n+\n+2023-01-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/108292\n+\tPR target/108308\n+\t* gcc.c-torture/execute/pr108292.c: New test.\n+\t* gcc.target/i386/pr108292.c: New test.\n+\t* gcc.dg/pr108308.c: New test.\n+\n 2023-01-05  Roger Sayle  <roger@nextmovesoftware.com>\n \n \tRevert:"}, {"sha": "087f12ad50ac97825eb6caf4d674fd45eb11f390", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60", "patch": "@@ -1,3 +1,10 @@\n+2023-01-06  Ian Lance Taylor  <iant@golang.org>\n+\n+\tPR libbacktrace/108297\n+\t* configure.ac: Test whether linker supports --build-id.\n+\t* Makefile.am: Only run --build-id tests if supported.\n+\t* configure, Makefile.in: Regenerate.\n+\n 2022-12-17  Ian Lance Taylor  <iant@golang.org>\n \n \t* elf.c (elf_fetch_backward_init): New static function."}, {"sha": "91cb91ac79a14006c52af7e52c75993e8140038f", "filename": "libgm2/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/libgm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/libgm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2FChangeLog?ref=d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60", "patch": "@@ -1,3 +1,8 @@\n+2023-01-06  v  <gaiusmod2@gmail.com>\n+\n+\t* configure: Regenerate.\n+\t* configure.ac (libtool_VERSION): Bump to 18:0:0.\n+\n 2023-01-04  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR modula2/108183"}, {"sha": "3f1eb69dc65568fc43a50cd078b55c054366f628", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d808db1f7b20a3fc3cf1c173f8a3d7e289cb1e60", "patch": "@@ -1,3 +1,64 @@\n+2023-01-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/108228\n+\t* src/c++20/tzdb.cc (zoneinfo_dir): Add diagnostic pragma.\n+\n+2023-01-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/108235\n+\t* src/c++20/tzdb.cc (time_zone::_Impl::RulesCounter): New class\n+\ttemplate and partial specialization for synchronizing access to\n+\ttime_zone::_Impl::infos.\n+\t(time_zone::_M_get_sys_info, reload_tzdb): Adjust uses of\n+\trules_counter.\n+\n+2023-01-06  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR libstdc++/108260\n+\t* include/bits/utility.h (__cpp_lib_ranges_zip): Define for C++23.\n+\t* include/std/ranges (__cpp_lib_ranges_zip): Likewise.\n+\t(__cpp_lib_ranges_chunk): Likewise.\n+\t(__cpp_lib_ranges_slide): Likewise.\n+\t(__cpp_lib_ranges_chunk_by): Likewise.\n+\t(__cpp_lib_ranges_join_with): Likewise.\n+\t(__cpp_lib_ranges_repeat): Likewise.\n+\t(__cpp_lib_ranges_stride): Likewise.\n+\t(__cpp_lib_ranges_cartesian_product): Likewise.\n+\t(__cpp_lib_ranges_as_rvalue): Likewise.\n+\t* include/std/version: Ditto.\n+\t* testsuite/20_util/tuple/p2321r2.cc: Verify value of\n+\tfeature-test macro.\n+\t* testsuite/std/ranges/adaptors/as_rvalue/1.cc: Likewise.\n+\t* testsuite/std/ranges/adaptors/chunk/1.cc: Likewise.\n+\t* testsuite/std/ranges/adaptors/chunk_by/1.cc: Likewise.\n+\t* testsuite/std/ranges/adaptors/join_with/1.cc: Likewise.\n+\t* testsuite/std/ranges/adaptors/slide/1.cc: Likewise.\n+\t* testsuite/std/ranges/adaptors/stride/1.cc: Likewise.\n+\t* testsuite/std/ranges/cartesian_product/1.cc: Likewise.\n+\t* testsuite/std/ranges/repeat/1.cc: Likewise.\n+\t* testsuite/std/ranges/zip/1.cc: Likewise.\n+\t* testsuite/std/ranges/version_c++23.cc: New test.\n+\n+2023-01-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/108214\n+\t* include/std/bitset (operator>>): Use alloca in the right\n+\tscope, not in a constructor.\n+\t* testsuite/20_util/bitset/io/input.cc: Check case from PR.\n+\n+2023-01-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/108221\n+\t* include/std/format (basic_format_arg) [!__cpp_lib_to_chars]:\n+\tDisable visiting floating-point types.\n+\n+2023-01-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/108288\n+\t* include/debug/safe_iterator.h (_Safe_iterator::operator++(int))\n+\t(_Safe_iterator::operator--(int)): Do not hold lock around\n+\tconstruction of return value.\n+\n 2023-01-05  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* config/cpu/hppa/atomicity.h (_PA_LDCW_INSN): Define."}]}