{"sha": "4c5d4de7b573ba7f64097afbb6d2d1608c522ddf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM1ZDRkZTdiNTczYmE3ZjY0MDk3YWZiYjZkMmQxNjA4YzUyMmRkZg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-06-04T23:30:43Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-06-04T23:30:43Z"}, "message": "rs6000: Remove Ftrad, Fvsx, Fs; add s and sd\n\nThis removes the <Ftrad>, <Fvsx>, and <Fs> mode attributes, and creates\nnew <sd> and <s> mode attributes instead.  <sd> is either \"s\" or \"d\",\ndepending on whether the mode is single-precision or double-precision\nfloating point; and <s> is either \"s\" or nothing.\n\n\n\t* config/rs6000/rs6000.md (SFDF, SFDF2): Adjust comments.\n\t(define_mode_attr sd): New.\n\t(define_mode_attr s): New.\n\t(define_mode_attr Ftrad): Delete.\n\t(define_mode_attr Fvsx): Delete.\n\t(define_mode_attr Fs): Delete.\n\t(rest of file): Use the new mode attributes.\n\t* config.rs6000/vsx.md: Use the new mode attributes.\n\nFrom-SVN: r271931", "tree": {"sha": "beda0b871dfcaddf412abf1dd7d7ff634e2411ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/beda0b871dfcaddf412abf1dd7d7ff634e2411ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c5d4de7b573ba7f64097afbb6d2d1608c522ddf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c5d4de7b573ba7f64097afbb6d2d1608c522ddf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c5d4de7b573ba7f64097afbb6d2d1608c522ddf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c5d4de7b573ba7f64097afbb6d2d1608c522ddf/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7858932efcc352a8ca2966f48c4c3b9c58c64022", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7858932efcc352a8ca2966f48c4c3b9c58c64022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7858932efcc352a8ca2966f48c4c3b9c58c64022"}], "stats": {"total": 105, "additions": 56, "deletions": 49}, "files": [{"sha": "fd0b9bffc52e68c9324bd73a1f1aaadb78cd7ea1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c5d4de7b573ba7f64097afbb6d2d1608c522ddf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c5d4de7b573ba7f64097afbb6d2d1608c522ddf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c5d4de7b573ba7f64097afbb6d2d1608c522ddf", "patch": "@@ -1,3 +1,14 @@\n+2019-06-04  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (SFDF, SFDF2): Adjust comments.\n+\t(define_mode_attr sd): New.\n+\t(define_mode_attr s): New.\n+\t(define_mode_attr Ftrad): Delete.\n+\t(define_mode_attr Fvsx): Delete.\n+\t(define_mode_attr Fs): Delete.\n+\t(rest of file): Use the new mode attributes.\n+\t* config.rs6000/vsx.md: Use the new mode attributes.\n+\n 2019-06-04  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/vsx.md: Replace all <VSa> that are used with VSX_W"}, {"sha": "c0a7f7698bbfa78a1691f40893bc933631531a05", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 41, "deletions": 45, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c5d4de7b573ba7f64097afbb6d2d1608c522ddf/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c5d4de7b573ba7f64097afbb6d2d1608c522ddf/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=4c5d4de7b573ba7f64097afbb6d2d1608c522ddf", "patch": "@@ -486,13 +486,18 @@\n ; Iterator for reciprocal estimate instructions\n (define_mode_iterator RECIPF [SF DF V4SF V2DF])\n \n-; Iterator for just SF/DF\n+; SFmode or DFmode.\n (define_mode_iterator SFDF [SF DF])\n \n-; Like SFDF, but a different name to match conditional move where the\n-; comparison operands may be a different mode than the input operands.\n+; And again, for when we need two FP modes in a pattern.\n (define_mode_iterator SFDF2 [SF DF])\n \n+; A generic s/d attribute, for sp/dp for example.\n+(define_mode_attr sd [(SF \"s\") (DF \"d\")])\n+\n+; \"s\" or nothing, for fmuls/fmul for example.\n+(define_mode_attr s [(SF \"s\") (DF \"\")])\n+\n ; Iterator for 128-bit floating point that uses the IBM double-double format\n (define_mode_iterator IBM128 [(IF \"FLOAT128_IBM_P (IFmode)\")\n \t\t\t      (TF \"FLOAT128_IBM_P (TFmode)\")])\n@@ -513,12 +518,6 @@\n ; Iterator for ISA 3.0 supported floating point types\n (define_mode_iterator FP_ISA3 [SF DF])\n \n-; SF/DF suffix for traditional floating instructions\n-(define_mode_attr Ftrad\t\t[(SF \"s\") (DF \"\")])\n-\n-; SF/DF suffix for VSX instructions\n-(define_mode_attr Fvsx\t\t[(SF \"sp\") (DF\t\"dp\")])\n-\n ; SF/DF constraint for arithmetic on traditional floating point registers\n (define_mode_attr Ff\t\t[(SF \"f\") (DF \"d\") (DI \"d\")])\n \n@@ -531,9 +530,6 @@\n ; Which isa is needed for those float instructions?\n (define_mode_attr Fisa\t\t[(SF \"p8v\")  (DF \"*\") (DI \"*\")])\n \n-; s/d suffix for things like sdiv/ddiv\n-(define_mode_attr Fs\t\t[(SF \"s\")  (DF \"d\")])\n-\n ; FRE/FRES support\n (define_mode_attr Ffre\t\t[(SF \"fres\") (DF \"fre\")])\n (define_mode_attr FFRE\t\t[(SF \"FRES\") (DF \"FRE\")])\n@@ -4638,8 +4634,8 @@\n \t\t   (match_operand:SFDF 2 \"gpc_reg_operand\" \"<Ff>,wa\")))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n-   fadd<Ftrad> %0,%1,%2\n-   xsadd<Fvsx> %x0,%x1,%x2\"\n+   fadd<s> %0,%1,%2\n+   xsadd<sd>p %x0,%x1,%x2\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"isa\" \"*,<Fisa>\")])\n \n@@ -4656,8 +4652,8 @@\n \t\t    (match_operand:SFDF 2 \"gpc_reg_operand\" \"<Ff>,wa\")))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n-   fsub<Ftrad> %0,%1,%2\n-   xssub<Fvsx> %x0,%x1,%x2\"\n+   fsub<s> %0,%1,%2\n+   xssub<sd>p %x0,%x1,%x2\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"isa\" \"*,<Fisa>\")])\n \n@@ -4674,8 +4670,8 @@\n \t\t   (match_operand:SFDF 2 \"gpc_reg_operand\" \"<Ff>,wa\")))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n-   fmul<Ftrad> %0,%1,%2\n-   xsmul<Fvsx> %x0,%x1,%x2\"\n+   fmul<s> %0,%1,%2\n+   xsmul<sd>p %x0,%x1,%x2\"\n   [(set_attr \"type\" \"dmul\")\n    (set_attr \"isa\" \"*,<Fisa>\")])\n \n@@ -4700,19 +4696,19 @@\n \t\t  (match_operand:SFDF 2 \"gpc_reg_operand\" \"<Ff>,wa\")))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n-   fdiv<Ftrad> %0,%1,%2\n-   xsdiv<Fvsx> %x0,%x1,%x2\"\n-  [(set_attr \"type\" \"<Fs>div\")\n+   fdiv<s> %0,%1,%2\n+   xsdiv<sd>p %x0,%x1,%x2\"\n+  [(set_attr \"type\" \"<sd>div\")\n    (set_attr \"isa\" \"*,<Fisa>\")])\n \n (define_insn \"*sqrt<mode>2_internal\"\n   [(set (match_operand:SFDF 0 \"gpc_reg_operand\" \"=<Ff>,wa\")\n \t(sqrt:SFDF (match_operand:SFDF 1 \"gpc_reg_operand\" \"<Ff>,wa\")))]\n   \"TARGET_HARD_FLOAT && TARGET_PPC_GPOPT\"\n   \"@\n-   fsqrt<Ftrad> %0,%1\n-   xssqrt<Fvsx> %x0,%x1\"\n-  [(set_attr \"type\" \"<Fs>sqrt\")\n+   fsqrt<s> %0,%1\n+   xssqrt<sd>p %x0,%x1\"\n+  [(set_attr \"type\" \"<sd>sqrt\")\n    (set_attr \"isa\" \"*,<Fisa>\")])\n \n (define_expand \"sqrt<mode>2\"\n@@ -4733,14 +4729,14 @@\n })\n \n ;; Floating point reciprocal approximation\n-(define_insn \"fre<Fs>\"\n+(define_insn \"fre<sd>\"\n   [(set (match_operand:SFDF 0 \"gpc_reg_operand\" \"=<Ff>,wa\")\n \t(unspec:SFDF [(match_operand:SFDF 1 \"gpc_reg_operand\" \"<Ff>,wa\")]\n \t\t     UNSPEC_FRES))]\n   \"TARGET_<FFRE>\"\n   \"@\n-   fre<Ftrad> %0,%1\n-   xsre<Fvsx> %x0,%x1\"\n+   fre<s> %0,%1\n+   xsre<sd>p %x0,%x1\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"isa\" \"*,<Fisa>\")])\n \n@@ -4750,8 +4746,8 @@\n \t\t     UNSPEC_RSQRT))]\n   \"RS6000_RECIP_HAVE_RSQRTE_P (<MODE>mode)\"\n   \"@\n-   frsqrte<Ftrad> %0,%1\n-   xsrsqrte<Fvsx> %x0,%x1\"\n+   frsqrte<s> %0,%1\n+   xsrsqrte<sd>p %x0,%x1\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"isa\" \"*,<Fisa>\")])\n \n@@ -9390,8 +9386,8 @@\n    && (!avoiding_indexed_address_p (<MODE>mode)\n        || !gpc_reg_operand (operands[2], Pmode))\"\n   \"@\n-   lf<Fs>ux %3,%0,%2\n-   lf<Fs>u %3,%2(%0)\"\n+   lf<sd>ux %3,%0,%2\n+   lf<sd>u %3,%2(%0)\"\n   [(set_attr \"type\" \"fpload\")\n    (set_attr \"update\" \"yes\")\n    (set_attr \"indexed\" \"yes,no\")\n@@ -9407,8 +9403,8 @@\n    && (!avoiding_indexed_address_p (<MODE>mode)\n        || !gpc_reg_operand (operands[2], Pmode))\"\n   \"@\n-   stf<Fs>ux %3,%0,%2\n-   stf<Fs>u %3,%2(%0)\"\n+   stf<sd>ux %3,%0,%2\n+   stf<sd>u %3,%2(%0)\"\n   [(set_attr \"type\" \"fpstore\")\n    (set_attr \"update\" \"yes\")\n    (set_attr \"indexed\" \"yes,no\")\n@@ -13376,9 +13372,9 @@\n \t  (match_operand:SFDF 3 \"gpc_reg_operand\" \"<Ff>,0,wa\")))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n-   fmadd<Ftrad> %0,%1,%2,%3\n-   xsmadda<Fvsx> %x0,%x1,%x2\n-   xsmaddm<Fvsx> %x0,%x1,%x3\"\n+   fmadd<s> %0,%1,%2,%3\n+   xsmadda<sd>p %x0,%x1,%x2\n+   xsmaddm<sd>p %x0,%x1,%x3\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"isa\" \"*,<Fisa>,<Fisa>\")])\n \n@@ -13400,9 +13396,9 @@\n \t (neg:SFDF (match_operand:SFDF 3 \"gpc_reg_operand\" \"<Ff>,0,wa\"))))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n-   fmsub<Ftrad> %0,%1,%2,%3\n-   xsmsuba<Fvsx> %x0,%x1,%x2\n-   xsmsubm<Fvsx> %x0,%x1,%x3\"\n+   fmsub<s> %0,%1,%2,%3\n+   xsmsuba<sd>p %x0,%x1,%x2\n+   xsmsubm<sd>p %x0,%x1,%x3\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"isa\" \"*,<Fisa>,<Fisa>\")])\n \n@@ -13448,9 +13444,9 @@\n \t  (match_operand:SFDF 3 \"gpc_reg_operand\" \"<Ff>,0,wa\"))))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n-   fnmadd<Ftrad> %0,%1,%2,%3\n-   xsnmadda<Fvsx> %x0,%x1,%x2\n-   xsnmaddm<Fvsx> %x0,%x1,%x3\"\n+   fnmadd<s> %0,%1,%2,%3\n+   xsnmadda<sd>p %x0,%x1,%x2\n+   xsnmaddm<sd>p %x0,%x1,%x3\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"isa\" \"*,<Fisa>,<Fisa>\")])\n \n@@ -13475,9 +13471,9 @@\n \t   (match_operand:SFDF 3 \"gpc_reg_operand\" \"<Ff>,0,wa\")))))]\n   \"TARGET_HARD_FLOAT\"\n   \"@\n-   fnmsub<Ftrad> %0,%1,%2,%3\n-   xsnmsuba<Fvsx> %x0,%x1,%x2\n-   xsnmsubm<Fvsx> %x0,%x1,%x3\"\n+   fnmsub<s> %0,%1,%2,%3\n+   xsnmsuba<sd>p %x0,%x1,%x2\n+   xsnmsubm<sd>p %x0,%x1,%x3\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"isa\" \"*,<Fisa>,<Fisa>\")])\n \f"}, {"sha": "0e04455bbb2ae50e372b9aa12fc43949cde6d0f6", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c5d4de7b573ba7f64097afbb6d2d1608c522ddf/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c5d4de7b573ba7f64097afbb6d2d1608c522ddf/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=4c5d4de7b573ba7f64097afbb6d2d1608c522ddf", "patch": "@@ -4612,7 +4612,7 @@\n ;;  (The lt bit is set if operand 1 is negative.  The eq bit is set\n ;;   if any of the conditions tested by operand 2 are satisfied.\n ;;   The gt and unordered bits are cleared to zero.)\n-(define_expand \"xststdc<Fvsx>\"\n+(define_expand \"xststdc<sd>p\"\n   [(set (match_dup 3)\n \t(compare:CCFP\n \t (unspec:SFDF\n@@ -4647,7 +4647,7 @@\n })\n \n ;; The VSX Scalar Test Negative Double- and Single-Precision\n-(define_expand \"xststdcneg<Fvsx>\"\n+(define_expand \"xststdcneg<sd>p\"\n   [(set (match_dup 2)\n \t(compare:CCFP\n \t (unspec:SFDF\n@@ -4676,15 +4676,15 @@\n   \"xststdcqp %0,%1,%2\"\n   [(set_attr \"type\" \"fpcompare\")])\n \n-(define_insn \"*xststdc<Fvsx>\"\n+(define_insn \"*xststdc<sd>p\"\n   [(set (match_operand:CCFP 0 \"\" \"=y\")\n \t(compare:CCFP\n \t (unspec:SFDF [(match_operand:SFDF 1 \"vsx_register_operand\" \"wa\")\n \t\t       (match_operand:SI 2 \"u7bit_cint_operand\" \"n\")]\n \t  UNSPEC_VSX_STSTDC)\n \t (match_operand:SI 3 \"zero_constant\" \"j\")))]\n   \"TARGET_P9_VECTOR\"\n-  \"xststdc<Fvsx> %0,%x1,%2\"\n+  \"xststdc<sd>p %0,%x1,%2\"\n   [(set_attr \"type\" \"fpcompare\")])\n \n ;; VSX Vector Extract Exponent Double and Single Precision"}]}