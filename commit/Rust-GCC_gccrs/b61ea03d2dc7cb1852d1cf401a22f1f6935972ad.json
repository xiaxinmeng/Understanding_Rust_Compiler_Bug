{"sha": "b61ea03d2dc7cb1852d1cf401a22f1f6935972ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYxZWEwM2QyZGM3Y2IxODUyZDFjZjQwMWEyMmYxZjY5MzU5NzJhZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-01-07T14:49:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-01-07T14:49:36Z"}, "message": "re PR tree-optimization/34683 (SSA rewriting in the loop unroller causes quadratic behavior)\n\n2008-01-07  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/34683\n\t* tree-ssa-sccvn.c (vuses_to_vec): Pre-allocate the vector of\n\tVOPs of the needed size to save memory.  Use VEC_quick_push\n\tto save compile-time.\n\t(vdefs_to_vec): Likewise.\n\nFrom-SVN: r131375", "tree": {"sha": "f69fbfc7468d0e14fa1e4c2b833a1807785c2f97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f69fbfc7468d0e14fa1e4c2b833a1807785c2f97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b61ea03d2dc7cb1852d1cf401a22f1f6935972ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b61ea03d2dc7cb1852d1cf401a22f1f6935972ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b61ea03d2dc7cb1852d1cf401a22f1f6935972ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b61ea03d2dc7cb1852d1cf401a22f1f6935972ad/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4bd75cd50a5955d7135c8e8fd1cb9b239e4f49e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4bd75cd50a5955d7135c8e8fd1cb9b239e4f49e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4bd75cd50a5955d7135c8e8fd1cb9b239e4f49e"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "4ec6bff6fa5d7533092b1ca0a5272196490cf08c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b61ea03d2dc7cb1852d1cf401a22f1f6935972ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b61ea03d2dc7cb1852d1cf401a22f1f6935972ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b61ea03d2dc7cb1852d1cf401a22f1f6935972ad", "patch": "@@ -1,4 +1,13 @@\n+2008-01-07  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/34683\n+\t* tree-ssa-sccvn.c (vuses_to_vec): Pre-allocate the vector of\n+\tVOPs of the needed size to save memory.  Use VEC_quick_push\n+\tto save compile-time.\n+\t(vdefs_to_vec): Likewise.\n+\n 2008-01-07  Sa Liu  <saliu@de.ibm.com>\n+\n \t* config/spu/spu.md (divdf3): Genetate inline code for double division. \n \tThe implementation doesn't handle INF or NAN, therefore it only applies \n \twhen -ffinite-math-only is given."}, {"sha": "035c81120b8ae77ecec9e5a2f3da92d3b8c1b837", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b61ea03d2dc7cb1852d1cf401a22f1f6935972ad/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b61ea03d2dc7cb1852d1cf401a22f1f6935972ad/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=b61ea03d2dc7cb1852d1cf401a22f1f6935972ad", "patch": "@@ -389,8 +389,10 @@ vuses_to_vec (tree stmt, VEC (tree, gc) **result)\n   if (!stmt)\n     return;\n \n+  *result = VEC_alloc (tree, gc, num_ssa_operands (stmt, SSA_OP_VIRTUAL_USES));\n+\n   FOR_EACH_SSA_TREE_OPERAND (vuse, stmt, iter, SSA_OP_VIRTUAL_USES)\n-    VEC_safe_push (tree, gc, *result, vuse);\n+    VEC_quick_push (tree, *result, vuse);\n \n   if (VEC_length (tree, *result) > 1)\n     sort_vuses (*result);\n@@ -421,8 +423,10 @@ vdefs_to_vec (tree stmt, VEC (tree, gc) **result)\n   if (!stmt)\n     return;\n \n+  *result = VEC_alloc (tree, gc, num_ssa_operands (stmt, SSA_OP_VIRTUAL_DEFS));\n+\n   FOR_EACH_SSA_TREE_OPERAND (vdef, stmt, iter, SSA_OP_VIRTUAL_DEFS)\n-    VEC_safe_push (tree, gc, *result, vdef);\n+    VEC_quick_push (tree, *result, vdef);\n \n   if (VEC_length (tree, *result) > 1)\n     sort_vuses (*result);"}]}