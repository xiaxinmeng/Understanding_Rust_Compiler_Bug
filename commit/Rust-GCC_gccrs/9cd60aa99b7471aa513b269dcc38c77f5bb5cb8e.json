{"sha": "9cd60aa99b7471aa513b269dcc38c77f5bb5cb8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNkNjBhYTk5Yjc0NzFhYTUxM2IyNjlkY2MzOGM3N2Y1YmI1Y2I4ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-10-10T07:44:56Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-10-10T07:44:56Z"}, "message": "bastring.h: Use ibegin internally.\n\n\t* std/bastring.h: Use ibegin internally.  Return passed iterator\n\tinstead of recalculating it were appropriate.\n\t* std/bastring.cc: Adjust for erase.\n\n\tFrom Yotam Medini:\n\t* std/bastring.h: Replace remove with erase.\n\nFrom-SVN: r15887", "tree": {"sha": "71321acb8ceacf65269028e066063d397f4461b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71321acb8ceacf65269028e066063d397f4461b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cd60aa99b7471aa513b269dcc38c77f5bb5cb8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd60aa99b7471aa513b269dcc38c77f5bb5cb8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cd60aa99b7471aa513b269dcc38c77f5bb5cb8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd60aa99b7471aa513b269dcc38c77f5bb5cb8e/comments", "author": null, "committer": null, "parents": [{"sha": "38bab5d4c64bf5953eef0ff6e9467ed60e0ad52c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38bab5d4c64bf5953eef0ff6e9467ed60e0ad52c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38bab5d4c64bf5953eef0ff6e9467ed60e0ad52c"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "a1bf0a43461a0aeb6faac9e121fbe801b603a31c", "filename": "libstdc++/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd60aa99b7471aa513b269dcc38c77f5bb5cb8e/libstdc%2B%2B%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd60aa99b7471aa513b269dcc38c77f5bb5cb8e/libstdc%2B%2B%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2FChangeLog?ref=9cd60aa99b7471aa513b269dcc38c77f5bb5cb8e", "patch": "@@ -1,3 +1,12 @@\n+Fri Oct 10 00:40:00 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* std/bastring.h: Use ibegin internally.  Return passed iterator\n+\tinstead of recalculating it were appropriate.\n+\t* std/bastring.cc: Adjust for erase.\n+\n+\tFrom Yotam Medini:\n+\t* std/bastring.h: Replace remove with erase.\n+\n Thu Oct  9 23:24:36 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* stdexcepti.cc (__out_of_range): New fn."}, {"sha": "aa151da69d1b6099214fb6d38bd5aff71463f5dd", "filename": "libstdc++/std/bastring.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd60aa99b7471aa513b269dcc38c77f5bb5cb8e/libstdc%2B%2B%2Fstd%2Fbastring.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd60aa99b7471aa513b269dcc38c77f5bb5cb8e/libstdc%2B%2B%2Fstd%2Fbastring.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fbastring.cc?ref=9cd60aa99b7471aa513b269dcc38c77f5bb5cb8e", "patch": "@@ -220,7 +220,7 @@ resize (size_t n, charT c)\n   if (n > length ())\n     append (n - length (), c);\n   else\n-    remove (n);\n+    erase (n);\n }\n \n template <class charT, class traits>"}, {"sha": "59a599583028cfbcb70dd90911a524a689ae72a5", "filename": "libstdc++/std/bastring.h", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd60aa99b7471aa513b269dcc38c77f5bb5cb8e/libstdc%2B%2B%2Fstd%2Fbastring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd60aa99b7471aa513b269dcc38c77f5bb5cb8e/libstdc%2B%2B%2Fstd%2Fbastring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fbastring.h?ref=9cd60aa99b7471aa513b269dcc38c77f5bb5cb8e", "patch": "@@ -220,9 +220,9 @@ class basic_string\n   basic_string& insert (size_type pos, size_type n, charT c)\n     { return replace (pos, 0, n, c); }\n   iterator insert(iterator p, charT c)\n-    { size_type pos = p - begin (); insert (pos, 1, c); return pos +begin (); }\n+    { insert (p - ibegin (), 1, c); return p; }\n   iterator insert(iterator p, size_type n, charT c)\n-    { size_type pos = p - begin (); insert (pos, n, c); return pos +begin (); }\n+    { insert (p - ibegin (), n, c); return p; }\n #ifdef __STL_MEMBER_TEMPLATES\n   template<class InputIterator>\n     void insert(iterator p, InputIterator first, InputIterator last)\n@@ -231,12 +231,12 @@ class basic_string\n #endif\n     { replace (p, p, first, last); }\n \n-  basic_string& remove (size_type pos = 0, size_type n = npos)\n+  basic_string& erase (size_type pos = 0, size_type n = npos)\n     { return replace (pos, n, (size_type)0, (charT)0); }\n-  basic_string& remove (iterator pos)\n-    { return replace (pos - begin (), 1, (size_type)0, (charT)0); }\n-  basic_string& remove (iterator first, iterator last)\n-    { return replace (first - begin (), last - first, (size_type)0, (charT)0);}\n+  iterator erase(iterator p)\n+    { replace (p - ibegin (), 1, (size_type)0, (charT)0); return p; }\n+  iterator erase(iterator f, iterator l)\n+    { replace (f - ibegin (), l - f, (size_type)0, (charT)0); return f; }\n \n   basic_string& replace (size_type pos1, size_type n1, const basic_string& str,\n \t\t\t size_type pos2 = 0, size_type n2 = npos);\n@@ -248,13 +248,13 @@ class basic_string\n   basic_string& replace (size_type pos, size_type n, charT c)\n     { return replace (pos, n, 1, c); }\n   basic_string& replace (iterator i1, iterator i2, const basic_string& str)\n-    { return replace (i1 - begin (), i2 - i1, str); }\n+    { return replace (i1 - ibegin (), i2 - i1, str); }\n   basic_string& replace (iterator i1, iterator i2, const charT* s, size_type n)\n-    { return replace (i1 - begin (), i2 - i1, s, n); }\n+    { return replace (i1 - ibegin (), i2 - i1, s, n); }\n   basic_string& replace (iterator i1, iterator i2, const charT* s)\n-    { return replace (i1 - begin (), i2 - i1, s); }\n+    { return replace (i1 - ibegin (), i2 - i1, s); }\n   basic_string& replace (iterator i1, iterator i2, size_type n, charT c)\n-    { return replace (i1 - begin (), i2 - i1, n, c); }\n+    { return replace (i1 - ibegin (), i2 - i1, n, c); }\n #ifdef __STL_MEMBER_TEMPLATES\n   template<class InputIterator>\n     basic_string& replace(iterator i1, iterator i2,"}]}