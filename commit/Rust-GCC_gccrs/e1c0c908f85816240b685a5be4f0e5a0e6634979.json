{"sha": "e1c0c908f85816240b685a5be4f0e5a0e6634979", "node_id": "C_kwDOANBUbNoAKGUxYzBjOTA4Zjg1ODE2MjQwYjY4NWE1YmU0ZjBlNWEwZTY2MzQ5Nzk", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2021-11-15T21:12:37Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2021-11-16T15:23:04Z"}, "message": "analyzer: fix overeager sharing of bounded_range instances [PR102662]\n\nThis was leading to an assertion failure ICE on a switch stmt when using\n-fstrict-enums, due to erroneously reusing a range involving one enum\nwith a range involving a different enum.\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/102662\n\t* constraint-manager.cc (bounded_range::operator==): Require the\n\ttypes to be the same for equality.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/102662\n\t* g++.dg/analyzer/pr102662.C: New test.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "eed86c6c8fdd09e16f34f7e87bb0e35573d33f88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eed86c6c8fdd09e16f34f7e87bb0e35573d33f88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1c0c908f85816240b685a5be4f0e5a0e6634979", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1c0c908f85816240b685a5be4f0e5a0e6634979", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1c0c908f85816240b685a5be4f0e5a0e6634979", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1c0c908f85816240b685a5be4f0e5a0e6634979/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "132f1c27770fa6dafdf14591878d301aedd5ae16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/132f1c27770fa6dafdf14591878d301aedd5ae16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/132f1c27770fa6dafdf14591878d301aedd5ae16"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "ea6b5dc60e02fb10980f0bddb03c5f2d362c0079", "filename": "gcc/analyzer/constraint-manager.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c0c908f85816240b685a5be4f0e5a0e6634979/gcc%2Fanalyzer%2Fconstraint-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c0c908f85816240b685a5be4f0e5a0e6634979/gcc%2Fanalyzer%2Fconstraint-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fconstraint-manager.cc?ref=e1c0c908f85816240b685a5be4f0e5a0e6634979", "patch": "@@ -432,7 +432,9 @@ bounded_range::intersects_p (const bounded_range &other,\n bool\n bounded_range::operator== (const bounded_range &other) const\n {\n-  return (tree_int_cst_equal (m_lower, other.m_lower)\n+  return (TREE_TYPE (m_lower) == TREE_TYPE (other.m_lower)\n+\t  && TREE_TYPE (m_upper) == TREE_TYPE (other.m_upper)\n+\t  && tree_int_cst_equal (m_lower, other.m_lower)\n \t  && tree_int_cst_equal (m_upper, other.m_upper));\n }\n "}, {"sha": "99252c7d109e66b35e175513ec424f3bf70fd078", "filename": "gcc/testsuite/g++.dg/analyzer/pr102662.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c0c908f85816240b685a5be4f0e5a0e6634979/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fanalyzer%2Fpr102662.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c0c908f85816240b685a5be4f0e5a0e6634979/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fanalyzer%2Fpr102662.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fanalyzer%2Fpr102662.C?ref=e1c0c908f85816240b685a5be4f0e5a0e6634979", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-additional-options \"-fstrict-enums\" } */\n+\n+enum OpCode {\n+  OP_MOVE,\n+  OP_LOADK,\n+  OP_LOADBOOL,\n+  OP_LOADNIL,\n+  OP_GETUPVAL,\n+  OP_SETUPVAL\n+};\n+\n+enum OpArg {\n+  OpArgN,\n+  OpArgU,\n+  OpArgR,\n+  OpArgK\n+};\n+\n+void\n+symbexec_lastpc (enum OpCode symbexec_lastpc_op, enum OpArg luaP_opmodes)\n+{\n+  switch (luaP_opmodes)\n+    {\n+    case OpArgN:\n+    case OpArgK:\n+      {\n+        switch (symbexec_lastpc_op)\n+          {\n+          case OP_LOADNIL:\n+          case OP_SETUPVAL:\n+            break;\n+          default:\n+            break;\n+          }\n+      }\n+    default:\n+      break;\n+    }\n+}"}]}