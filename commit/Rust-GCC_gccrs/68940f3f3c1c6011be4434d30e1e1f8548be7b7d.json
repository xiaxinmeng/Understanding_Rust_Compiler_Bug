{"sha": "68940f3f3c1c6011be4434d30e1e1f8548be7b7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg5NDBmM2YzYzFjNjAxMWJlNDQzNGQzMGUxZTFmODU0OGJlN2I3ZA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-12-16T22:28:35Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-12-16T22:28:35Z"}, "message": "For PR java/5088:\n\n\t* java/lang/natClassLoader.cc (_Jv_InitNewClassFields): New\n\tfunction.\n\t(_Jv_NewClass): Use it.\n\t(defineClass0): Use it.\n\t* prims.cc (_Jv_InitPrimClass): Adjust vtable here.\n\t(_Jv_InitPrimClass): Use _Jv_InitNewClassFields.\n\t(_Jv_NewArray): Don't abort; just throw exception.\n\tInclude InternalError.h.\n\t* java/lang/Class.h (Class::Class): Declare, don't define.\n\t(Class): Declare _Jv_InitNewClassFields as a friend.\n\t(union _Jv_Self): Removed.\n\nFrom-SVN: r48081", "tree": {"sha": "40b6d3dc40874ea7045518f5a5d294ffddf0cf1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40b6d3dc40874ea7045518f5a5d294ffddf0cf1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68940f3f3c1c6011be4434d30e1e1f8548be7b7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68940f3f3c1c6011be4434d30e1e1f8548be7b7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68940f3f3c1c6011be4434d30e1e1f8548be7b7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68940f3f3c1c6011be4434d30e1e1f8548be7b7d/comments", "author": null, "committer": null, "parents": [{"sha": "495513eea640d4135f4b62f341bc844a09779df7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/495513eea640d4135f4b62f341bc844a09779df7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/495513eea640d4135f4b62f341bc844a09779df7"}], "stats": {"total": 69, "additions": 43, "deletions": 26}, "files": [{"sha": "aaebefa25f69f81b3ec9307f6e18f73288d92689", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68940f3f3c1c6011be4434d30e1e1f8548be7b7d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68940f3f3c1c6011be4434d30e1e1f8548be7b7d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=68940f3f3c1c6011be4434d30e1e1f8548be7b7d", "patch": "@@ -1,5 +1,18 @@\n 2001-12-16  Tom Tromey  <tromey@redhat.com>\n \n+\tFor PR java/5088:\n+\t* java/lang/natClassLoader.cc (_Jv_InitNewClassFields): New\n+\tfunction.\n+\t(_Jv_NewClass): Use it.\n+\t(defineClass0): Use it.\n+\t* prims.cc (_Jv_InitPrimClass): Adjust vtable here.\n+\t(_Jv_InitPrimClass): Use _Jv_InitNewClassFields.\n+\t(_Jv_NewArray): Don't abort; just throw exception.\n+\tInclude InternalError.h.\n+\t* java/lang/Class.h (Class::Class): Declare, don't define.\n+\t(Class): Declare _Jv_InitNewClassFields as a friend.\n+\t(union _Jv_Self): Removed.\n+\n \t* Makefile.in: Rebuilt.\n \t* Makefile.am (ordinary_java_source_files): Removed old file;\n \tadded new file."}, {"sha": "73d81daad165275d26ed8c8265e5e0ed20645bed", "filename": "libjava/java/lang/Class.h", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68940f3f3c1c6011be4434d30e1e1f8548be7b7d/libjava%2Fjava%2Flang%2FClass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68940f3f3c1c6011be4434d30e1e1f8548be7b7d/libjava%2Fjava%2Flang%2FClass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.h?ref=68940f3f3c1c6011be4434d30e1e1f8548be7b7d", "patch": "@@ -109,13 +109,6 @@ struct _Jv_ifaces\n   jshort count;\n };\n \n-// Used for vtable pointer manipulation.\n-union _Jv_Self\n-{\n-  char *vtable_ptr;\n-  jclass self;\n-};\n-\n struct _Jv_MethodSymbol\n {\n   _Jv_Utf8Const *class_name;\n@@ -232,12 +225,7 @@ class java::lang::Class : public java::lang::Object\n \n   // This constructor is used to create Class object for the primitive\n   // types. See prims.cc.\n-  Class ()\n-  {\n-    // C++ ctors set the vtbl pointer to point at an offset inside the vtable\n-    // object. That doesn't work for Java, so this hack adjusts it back.\n-    ((_Jv_Self *)this)->vtable_ptr -= 2 * sizeof (void *);\n-  }\n+  Class ();\n \n   static java::lang::Class class$;\n \n@@ -307,6 +295,7 @@ class java::lang::Class : public java::lang::Object\n \t\t\t\t _Jv_VTable *array_vtable = 0);\n   friend jclass _Jv_NewClass (_Jv_Utf8Const *name, jclass superclass,\n \t\t\t      java::lang::ClassLoader *loader);\n+  friend void _Jv_InitNewClassFields (jclass klass);\n \n   // in prims.cc\n   friend void _Jv_InitPrimClass (jclass, char *, char, int, _Jv_ArrayVTable *);"}, {"sha": "a6f7b60e4c588919c910577afe09e8b6c3d0a4b1", "filename": "libjava/java/lang/natClassLoader.cc", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68940f3f3c1c6011be4434d30e1e1f8548be7b7d/libjava%2Fjava%2Flang%2FnatClassLoader.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68940f3f3c1c6011be4434d30e1e1f8548be7b7d/libjava%2Fjava%2Flang%2FnatClassLoader.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClassLoader.cc?ref=68940f3f3c1c6011be4434d30e1e1f8548be7b7d", "patch": "@@ -61,6 +61,7 @@ java::lang::ClassLoader::defineClass0 (jstring name,\n #ifdef INTERPRETER\n   jclass klass;\n   klass = (jclass) JvAllocObject (&ClassClass, sizeof (_Jv_InterpClass));\n+  _Jv_InitNewClassFields (klass);\n \n   // synchronize on the class, so that it is not\n   // attempted initialized until we're done loading.\n@@ -549,16 +550,13 @@ _Jv_FindClass (_Jv_Utf8Const *name, java::lang::ClassLoader *loader)\n   return klass;\n }\n \n-jclass\n-_Jv_NewClass (_Jv_Utf8Const *name, jclass superclass,\n-\t      java::lang::ClassLoader *loader)\n+void\n+_Jv_InitNewClassFields (jclass ret)\n {\n-  jclass ret = (jclass) JvAllocObject (&ClassClass);\n-\n   ret->next = NULL;\n-  ret->name = name;\n+  ret->name = NULL;\n   ret->accflags = 0;\n-  ret->superclass = superclass;\n+  ret->superclass = NULL;\n   ret->constants.size = 0;\n   ret->constants.tags = NULL;\n   ret->constants.data = NULL;\n@@ -571,14 +569,25 @@ _Jv_NewClass (_Jv_Utf8Const *name, jclass superclass,\n   ret->static_field_count = 0;\n   ret->vtable = NULL;\n   ret->interfaces = NULL;\n-  ret->loader = loader;\n+  ret->loader = NULL;\n   ret->interface_count = 0;\n   ret->state = JV_STATE_NOTHING;\n   ret->thread = NULL;\n   ret->depth = 0;\n   ret->ancestors = NULL;\n   ret->idt = NULL;\n   ret->arrayclass = NULL;\n+}\n+\n+jclass\n+_Jv_NewClass (_Jv_Utf8Const *name, jclass superclass,\n+\t      java::lang::ClassLoader *loader)\n+{\n+  jclass ret = (jclass) JvAllocObject (&ClassClass);\n+  _Jv_InitNewClassFields (ret);\n+  ret->name = name;\n+  ret->superclass = superclass;\n+  ret->loader = loader;\n \n   _Jv_RegisterClass (ret);\n "}, {"sha": "279e3caad02ad07d29cfe4d31223b52b6da4379b", "filename": "libjava/prims.cc", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68940f3f3c1c6011be4434d30e1e1f8548be7b7d/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68940f3f3c1c6011be4434d30e1e1f8548be7b7d/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=68940f3f3c1c6011be4434d30e1e1f8548be7b7d", "patch": "@@ -56,6 +56,7 @@ details.  */\n #include <java/lang/ArrayIndexOutOfBoundsException.h>\n #include <java/lang/ArithmeticException.h>\n #include <java/lang/ClassFormatError.h>\n+#include <java/lang/InternalError.h>\n #include <java/lang/NegativeArraySizeException.h>\n #include <java/lang/NullPointerException.h>\n #include <java/lang/OutOfMemoryError.h>\n@@ -533,8 +534,8 @@ _Jv_NewArray (jint type, jint size)\n       case 10:  return JvNewIntArray (size);\n       case 11:  return JvNewLongArray (size);\n     }\n-  JvFail (\"newarray - bad type code\");\n-  return NULL;\t\t\t// Placate compiler.\n+  throw new java::lang::InternalError\n+    (JvNewStringLatin1 (\"invalid type code in _Jv_NewArray\"));\n }\n \n // Allocate a possibly multi-dimensional array but don't check that\n@@ -613,9 +614,14 @@ _Jv_InitPrimClass (jclass cl, char *cname, char sig, int len,\n {    \n   using namespace java::lang::reflect;\n \n-  // We must initialize every field of the class.  We do this in the\n-  // same order they are declared in Class.h, except for fields that\n-  // are initialized to NULL.\n+  _Jv_InitNewClassFields (cl);\n+\n+  // We must set the vtable for the class; the Java constructor\n+  // doesn't do this.\n+  (*(_Jv_VTable **) cl) = java::lang::Class::class$.vtable;\n+\n+  // Initialize the fields we care about.  We do this in the same\n+  // order they are declared in Class.h.\n   cl->name = _Jv_makeUtf8Const ((char *) cname, -1);\n   cl->accflags = Modifier::PUBLIC | Modifier::FINAL | Modifier::ABSTRACT;\n   cl->method_count = sig;"}]}