{"sha": "861768350bcf5cfc23c7509e0f9f3df9621f429f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYxNzY4MzUwYmNmNWNmYzIzYzc1MDllMGY5ZjNkZjk2MjFmNDI5Zg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-11-28T07:40:12Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-11-28T07:40:12Z"}, "message": "2001-11-28  Benjamin Kosnik  <bkoz@redhat.com>\n\t    Jakub Jelinek  <jakub@redhat.com>\n\n\t* config/locale/moneypunct_members_gnu.cc\n\t(moneypunct<wchar_t>::_M_initialize_moneypunct): Correctly cast\n\tfor ia64, others.\n\t* config/locale/numpunct_members_gnu.cc\n\t(numpunct<wchar_t>::_M_initialize_numpunct): Same.\n\nFrom-SVN: r47402", "tree": {"sha": "549f0f11dd8d8194af25dbfbe92e8ee5e2b7efc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/549f0f11dd8d8194af25dbfbe92e8ee5e2b7efc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/861768350bcf5cfc23c7509e0f9f3df9621f429f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/861768350bcf5cfc23c7509e0f9f3df9621f429f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/861768350bcf5cfc23c7509e0f9f3df9621f429f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/861768350bcf5cfc23c7509e0f9f3df9621f429f/comments", "author": null, "committer": null, "parents": [{"sha": "074a8e74dd46c76f91a97569539e3f35c80f8822", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/074a8e74dd46c76f91a97569539e3f35c80f8822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/074a8e74dd46c76f91a97569539e3f35c80f8822"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "5f74c2d50bd41db92e76c58503beaf5eba46274a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861768350bcf5cfc23c7509e0f9f3df9621f429f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861768350bcf5cfc23c7509e0f9f3df9621f429f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=861768350bcf5cfc23c7509e0f9f3df9621f429f", "patch": "@@ -1,3 +1,12 @@\n+2001-11-28  Benjamin Kosnik  <bkoz@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/locale/moneypunct_members_gnu.cc\n+\t(moneypunct<wchar_t>::_M_initialize_moneypunct): Correctly cast\n+\tfor ia64, others.\n+\t* config/locale/numpunct_members_gnu.cc\n+\t(numpunct<wchar_t>::_M_initialize_numpunct): Same.\n+\n 2001-11-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/locale_facets.tcc: Formatting tweaks.\n@@ -440,7 +449,7 @@\n \t* testsuite/21_strings/replace.cc (test02): Add test.\n \t* testsuite/21_strings/assign.cc (test01): New file.\n \t\n-001-10-30  Jakub Jelinek  <jakub@redhat.com>\n+2001-10-30  Jakub Jelinek  <jakub@redhat.com>\n \n \t* include/bits/stl_deque.h (_M_new_elements_at_front): Use\n \t__throw_exception_again."}, {"sha": "88a4f95a24abab3d6fad2034e8c768533f9bae72", "filename": "libstdc++-v3/config/locale/moneypunct_members_gnu.cc", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861768350bcf5cfc23c7509e0f9f3df9621f429f/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fmoneypunct_members_gnu.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861768350bcf5cfc23c7509e0f9f3df9621f429f/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fmoneypunct_members_gnu.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fmoneypunct_members_gnu.cc?ref=861768350bcf5cfc23c7509e0f9f3df9621f429f", "patch": "@@ -319,8 +319,9 @@ namespace std\n       else\n \t{\n \t  // Named locale.\n-\t  _M_decimal_point = reinterpret_cast<wchar_t>(__nl_langinfo_l(_NL_NUMERIC_DECIMAL_POINT_WC, __cloc));\n-\t  _M_thousands_sep = reinterpret_cast<wchar_t>(__nl_langinfo_l(_NL_NUMERIC_THOUSANDS_SEP_WC,__cloc));\n+\t  _M_decimal_point = static_cast<wchar_t>(((union { const char *__s; unsigned int __w; }){ __s: __nl_langinfo_l(_NL_NUMERIC_DECIMAL_POINT_WC, __cloc)}).__w);\n+\n+\t  _M_thousands_sep = static_cast<wchar_t>(((union { const char *__s; unsigned int __w; }){ __s: __nl_langinfo_l(_NL_NUMERIC_THOUSANDS_SEP_WC, __cloc)}).__w);\n \t  _M_grouping = __nl_langinfo_l(GROUPING, __cloc);\n \n \t  mbstate_t __state;\n@@ -398,8 +399,8 @@ namespace std\n       else\n \t{\n \t  // Named locale.\n-\t  _M_decimal_point = reinterpret_cast<wchar_t>(__nl_langinfo_l(_NL_NUMERIC_DECIMAL_POINT_WC, __cloc));\n-\t  _M_thousands_sep = reinterpret_cast<wchar_t>(__nl_langinfo_l(_NL_NUMERIC_THOUSANDS_SEP_WC,__cloc));\n+\t  _M_decimal_point = static_cast<wchar_t>(((union { const char *__s; unsigned int __w; }){ __s: __nl_langinfo_l(_NL_NUMERIC_DECIMAL_POINT_WC, __cloc)}).__w);\n+\t  _M_thousands_sep = static_cast<wchar_t>(((union { const char *__s; unsigned int __w; }){ __s: __nl_langinfo_l(_NL_NUMERIC_THOUSANDS_SEP_WC, __cloc)}).__w);\n \t  _M_grouping = __nl_langinfo_l(GROUPING, __cloc);\n \n \t  mbstate_t __state;"}, {"sha": "5a423b50a780f20f3c8cecff00c65e571ea03771", "filename": "libstdc++-v3/config/locale/numpunct_members_gnu.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861768350bcf5cfc23c7509e0f9f3df9621f429f/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fnumpunct_members_gnu.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861768350bcf5cfc23c7509e0f9f3df9621f429f/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fnumpunct_members_gnu.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fnumpunct_members_gnu.cc?ref=861768350bcf5cfc23c7509e0f9f3df9621f429f", "patch": "@@ -77,8 +77,8 @@ namespace std\n       else\n \t{\n \t  // Named locale.\n-\t  _M_decimal_point = reinterpret_cast<wchar_t>(__nl_langinfo_l(_NL_NUMERIC_DECIMAL_POINT_WC, __cloc));\n-\t  _M_thousands_sep = reinterpret_cast<wchar_t>(__nl_langinfo_l(_NL_NUMERIC_THOUSANDS_SEP_WC,__cloc));\n+\t  _M_decimal_point = static_cast<wchar_t>(((union { const char *__s; unsigned int __w; }){ __s: __nl_langinfo_l(_NL_NUMERIC_DECIMAL_POINT_WC, __cloc)}).__w);\n+\t  _M_thousands_sep = static_cast<wchar_t>(((union { const char *__s; unsigned int __w; }){ __s: __nl_langinfo_l(_NL_NUMERIC_THOUSANDS_SEP_WC, __cloc)}).__w);\n \t  _M_grouping = __nl_langinfo_l(GROUPING, __cloc);\n \t}\n       // NB: There is no way to extact this info from posix locales."}]}