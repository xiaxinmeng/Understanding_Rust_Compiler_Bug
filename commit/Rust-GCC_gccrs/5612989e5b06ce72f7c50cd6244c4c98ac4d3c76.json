{"sha": "5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYxMjk4OWU1YjA2Y2U3MmY3YzUwY2Q2MjQ0YzRjOThhYzRkM2M3Ng==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-09T12:46:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-09T12:46:58Z"}, "message": "[multiple changes]\n\n2017-11-09  Javier Miranda  <miranda@adacore.com>\n\n\t* rtsfind.ads (RE_Id, RE_Unit_Table): Add RE_HT_Link.\n\t* exp_disp.adb (Make_DT): Initialize the HT_Link field of the TSD only\n\tif available.\n\n2017-11-09  Bob Duff  <duff@adacore.com>\n\n\t* exp_ch4.adb, exp_ch9.adb, exp_prag.adb, par-ch3.adb, sem_aggr.adb,\n\tsem_ch12.adb, sem_ch13.adb, sem_ch4.adb, sem_disp.adb, sem_prag.adb,\n\tsem_res.adb, sem_util.adb: Get rid of warnings about uninitialized\n\tvariables.\n\nFrom-SVN: r254577", "tree": {"sha": "4e4d2e2539ba53d9894776865228bb89446ca3ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e4d2e2539ba53d9894776865228bb89446ca3ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/comments", "author": null, "committer": null, "parents": [{"sha": "88e8ceffa86a4a7e27669535dc9d9148fe072c2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e8ceffa86a4a7e27669535dc9d9148fe072c2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88e8ceffa86a4a7e27669535dc9d9148fe072c2c"}], "stats": {"total": 222, "additions": 120, "deletions": 102}, "files": [{"sha": "d2a48f73c0a9033262687ad11cdf7e13140529d5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "patch": "@@ -1,3 +1,16 @@\n+2017-11-09  Javier Miranda  <miranda@adacore.com>\n+\n+\t* rtsfind.ads (RE_Id, RE_Unit_Table): Add RE_HT_Link.\n+\t* exp_disp.adb (Make_DT): Initialize the HT_Link field of the TSD only\n+\tif available.\n+\n+2017-11-09  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_ch4.adb, exp_ch9.adb, exp_prag.adb, par-ch3.adb, sem_aggr.adb,\n+\tsem_ch12.adb, sem_ch13.adb, sem_ch4.adb, sem_disp.adb, sem_prag.adb,\n+\tsem_res.adb, sem_util.adb: Get rid of warnings about uninitialized\n+\tvariables.\n+\n 2017-11-09  Yannick Moy  <moy@adacore.com>\n \n \t* exp_disp.adb (Make_DT): Default initialize Ifaces_List and"}, {"sha": "88303c66861cead8050dd0cd8575c793fbf26b84", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "patch": "@@ -10749,6 +10749,8 @@ package body Exp_Ch4 is\n \n                      if Present (Stored) then\n                         Elmt := First_Elmt (Stored);\n+                     else\n+                        Elmt := No_Elmt; -- init to avoid warning\n                      end if;\n \n                      Cons := New_List;"}, {"sha": "d94a72ffeb89ff13d14be48542382ea414cd085f", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "patch": "@@ -12355,7 +12355,7 @@ package body Exp_Ch9 is\n       Call           : Node_Id;\n       Call_Ent       : Entity_Id;\n       Conc_Typ_Stmts : List_Id;\n-      Concval        : Node_Id;\n+      Concval        : Node_Id := Empty; -- init to avoid warning\n       D_Alt          : constant Node_Id := Delay_Alternative (N);\n       D_Conv         : Node_Id;\n       D_Disc         : Node_Id;"}, {"sha": "8f82c7de72b69d13563d27cf55f44e6f6649e983", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "patch": "@@ -5390,7 +5390,8 @@ package body Exp_Disp is\n              Make_Attribute_Reference (Loc,\n                Prefix         => New_Occurrence_Of (HT_Link, Loc),\n                Attribute_Name => Name_Address)));\n-      else\n+\n+      elsif RTE_Record_Component_Available (RE_HT_Link) then\n          Append_To (TSD_Aggr_List,\n            Unchecked_Convert_To (RTE (RE_Tag_Ptr),\n              New_Occurrence_Of (RTE (RE_Null_Address), Loc)));"}, {"sha": "a92db56b5255b214b1429bc9a75f0a5d0084f9a7", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "patch": "@@ -1090,7 +1090,7 @@ package body Exp_Prag is\n       Conseq_Checks : Node_Id   := Empty;\n       Count         : Entity_Id;\n       Count_Decl    : Node_Id;\n-      Error_Decls   : List_Id;\n+      Error_Decls   : List_Id := No_List; -- init to avoid warning\n       Flag          : Entity_Id;\n       Flag_Decl     : Node_Id;\n       If_Stmt       : Node_Id;"}, {"sha": "ddbf716ea6dda56c67c5389927353ed9c0b55a96", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "patch": "@@ -4314,6 +4314,8 @@ package body Ch3 is\n       Scan_State : Saved_Scan_State;\n \n    begin\n+      Done := False;\n+\n       if Style_Check then\n          Style.Check_Indentation;\n       end if;\n@@ -4326,7 +4328,6 @@ package body Ch3 is\n          =>\n             Check_Bad_Layout;\n             Append (P_Subprogram (Pf_Decl_Gins_Pbod_Rnam_Stub_Pexp), Decls);\n-            Done := False;\n \n          when Tok_For =>\n             Check_Bad_Layout;\n@@ -4350,12 +4351,10 @@ package body Ch3 is\n \n             Restore_Scan_State (Scan_State);\n             Append (P_Representation_Clause, Decls);\n-            Done := False;\n \n          when Tok_Generic =>\n             Check_Bad_Layout;\n             Append (P_Generic, Decls);\n-            Done := False;\n \n          when Tok_Identifier =>\n             Check_Bad_Layout;\n@@ -4370,7 +4369,6 @@ package body Ch3 is\n \n                Token := Tok_Overriding;\n                Append (P_Subprogram (Pf_Decl_Gins_Pbod_Rnam_Stub_Pexp), Decls);\n-               Done := False;\n \n             --  Normal case, no overriding, or overriding followed by colon\n \n@@ -4381,38 +4379,31 @@ package body Ch3 is\n          when Tok_Package =>\n             Check_Bad_Layout;\n             Append (P_Package (Pf_Decl_Gins_Pbod_Rnam_Stub_Pexp), Decls);\n-            Done := False;\n \n          when Tok_Pragma =>\n             Append (P_Pragma, Decls);\n-            Done := False;\n \n          when Tok_Protected =>\n             Check_Bad_Layout;\n             Scan; -- past PROTECTED\n             Append (P_Protected, Decls);\n-            Done := False;\n \n          when Tok_Subtype =>\n             Check_Bad_Layout;\n             Append (P_Subtype_Declaration, Decls);\n-            Done := False;\n \n          when Tok_Task =>\n             Check_Bad_Layout;\n             Scan; -- past TASK\n             Append (P_Task, Decls);\n-            Done := False;\n \n          when Tok_Type =>\n             Check_Bad_Layout;\n             Append (P_Type_Declaration, Decls);\n-            Done := False;\n \n          when Tok_Use =>\n             Check_Bad_Layout;\n             P_Use_Clause (Decls);\n-            Done := False;\n \n          when Tok_With =>\n             Check_Bad_Layout;\n@@ -4439,8 +4430,6 @@ package body Ch3 is\n                --  a declarative list. After discarding the misplaced aspects\n                --  we can continue the scan.\n \n-               Done := False;\n-\n                declare\n                   Dummy_Node : constant Node_Id :=\n                                  New_Node (N_Package_Specification, Token_Ptr);\n@@ -4533,8 +4522,6 @@ package body Ch3 is\n                   End_Statements (Handled_Statement_Sequence (Body_Node));\n                end;\n \n-               Done := False;\n-\n             else\n                Done := True;\n             end if;\n@@ -4556,7 +4543,6 @@ package body Ch3 is\n                --  After discarding the misplaced aspects we can continue the\n                --  scan.\n \n-               Done := False;\n             else\n                Restore_Scan_State (Scan_State); -- to END\n                Done := True;\n@@ -4671,7 +4657,6 @@ package body Ch3 is\n    exception\n       when Error_Resync =>\n          Resync_Past_Semicolon;\n-         Done := False;\n    end P_Declarative_Items;\n \n    ----------------------------------"}, {"sha": "57b8897f2da42f37590b46db7e657a81e4ae5e85", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "patch": "@@ -631,6 +631,7 @@ package Rtsfind is\n      RE_Get_Offset_Index,                -- Ada.Tags\n      RE_Get_Prim_Op_Kind,                -- Ada.Tags\n      RE_Get_Tagged_Kind,                 -- Ada.Tags\n+     RE_HT_Link,                         -- Ada.Tags\n      RE_Idepth,                          -- Ada.Tags\n      RE_Interfaces_Array,                -- Ada.Tags\n      RE_Interfaces_Table,                -- Ada.Tags\n@@ -1866,6 +1867,7 @@ package Rtsfind is\n      RE_Get_Offset_Index                 => Ada_Tags,\n      RE_Get_Prim_Op_Kind                 => Ada_Tags,\n      RE_Get_Tagged_Kind                  => Ada_Tags,\n+     RE_HT_Link                          => Ada_Tags,\n      RE_Idepth                           => Ada_Tags,\n      RE_Interfaces_Array                 => Ada_Tags,\n      RE_Interfaces_Table                 => Ada_Tags,"}, {"sha": "7d6ae41c49eaa4f8bd03c4da0d0db15c06c51e24", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "patch": "@@ -2882,7 +2882,7 @@ package body Sem_Aggr is\n       --  Variables used to verify that discriminant-dependent components\n       --  appear in the same variant.\n \n-      Comp_Ref : Entity_Id;\n+      Comp_Ref : Entity_Id := Empty; -- init to avoid warning\n       Variant  : Node_Id;\n \n       procedure Check_Variant (Id : Entity_Id);\n@@ -2941,6 +2941,7 @@ package body Sem_Aggr is\n                     or else\n                       (D2 > D1 and then not Nested_In (Comp_Variant, Variant))\n                   then\n+                     pragma Assert (Present (Comp_Ref));\n                      Error_Msg_Node_2 := Comp_Ref;\n                      Error_Msg_NE\n                        (\"& and & appear in different variants\", Id, Comp);\n@@ -3025,7 +3026,7 @@ package body Sem_Aggr is\n \n       Assoc     : Node_Id;\n       Choice    : Node_Id;\n-      Comp_Type : Entity_Id;\n+      Comp_Type : Entity_Id := Empty; -- init to avoid warning\n \n    --  Start of processing for Resolve_Delta_Record_Aggregate\n \n@@ -3045,6 +3046,7 @@ package body Sem_Aggr is\n             Next (Choice);\n          end loop;\n \n+         pragma Assert (Present (Comp_Type));\n          Analyze_And_Resolve (Expression (Assoc), Comp_Type);\n          Next (Assoc);\n       end loop;"}, {"sha": "6cdc9f3e21b912209b7a0d0c11f0af7cd96cfd66", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "patch": "@@ -4761,7 +4761,7 @@ package body Sem_Ch12 is\n       Use_Clauses  : array (1 .. Scope_Stack_Depth) of Node_Id;\n \n       Curr_Scope  : Entity_Id := Empty;\n-      List        : Elist_Id;\n+      List        : Elist_Id := No_Elist; -- init to avoid warning\n       N_Instances : Nat := 0;\n       Num_Inner   : Nat := 0;\n       Num_Scopes  : Nat := 0;\n@@ -5136,7 +5136,7 @@ package body Sem_Ch12 is\n                     Chars => New_External_Name\n                                (Chars (Defining_Entity (N)), 'R'));\n \n-      Act_Decl_Id : Entity_Id;\n+      Act_Decl_Id : Entity_Id := Empty; -- init to avoid warning\n       Act_Decl    : Node_Id;\n       Act_Spec    : Node_Id;\n       Act_Tree    : Node_Id;"}, {"sha": "83d31081facc144491d9b4eddc4c4d2958cb5172", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 50, "deletions": 41, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "patch": "@@ -1360,6 +1360,8 @@ package body Sem_Ch13 is\n    -----------------------------------\n \n    procedure Analyze_Aspect_Specifications (N : Node_Id; E : Entity_Id) is\n+      pragma Assert (Present (E));\n+\n       procedure Decorate (Asp : Node_Id; Prag : Node_Id);\n       --  Establish linkages between an aspect and its corresponding pragma\n \n@@ -1578,6 +1580,7 @@ package body Sem_Ch13 is\n       Ent    : Node_Id;\n \n       L : constant List_Id := Aspect_Specifications (N);\n+      pragma Assert (Present (L));\n \n       Ins_Node : Node_Id := N;\n       --  Insert pragmas/attribute definition clause after this node when no\n@@ -1605,8 +1608,6 @@ package body Sem_Ch13 is\n       --  of visibility for the expression analysis. Thus, we just insert\n       --  the pragma after the node N.\n \n-      pragma Assert (Present (L));\n-\n       --  Loop through aspects\n \n       Aspect := First (L);\n@@ -1906,9 +1907,6 @@ package body Sem_Ch13 is\n             -----------------------------------------\n \n             procedure Analyze_Aspect_Implicit_Dereference is\n-               Disc        : Entity_Id;\n-               Parent_Disc : Entity_Id;\n-\n             begin\n                if not Is_Type (E) or else not Has_Discriminants (E) then\n                   Error_Msg_N\n@@ -1924,45 +1922,56 @@ package body Sem_Ch13 is\n \n                   --  Missing synchronized types???\n \n-                  Disc := First_Discriminant (E);\n-                  while Present (Disc) loop\n-                     if Chars (Expr) = Chars (Disc)\n-                       and then Ekind_In (Etype (Disc),\n-                                          E_Anonymous_Access_Subprogram_Type,\n-                                          E_Anonymous_Access_Type)\n-                     then\n-                        Set_Has_Implicit_Dereference (E);\n-                        Set_Has_Implicit_Dereference (Disc);\n-                        exit;\n-                     end if;\n+                  declare\n+                     Disc : Entity_Id := First_Discriminant (E);\n+                  begin\n+                     while Present (Disc) loop\n+                        if Chars (Expr) = Chars (Disc)\n+                          and then Ekind_In\n+                            (Etype (Disc),\n+                             E_Anonymous_Access_Subprogram_Type,\n+                             E_Anonymous_Access_Type)\n+                        then\n+                           Set_Has_Implicit_Dereference (E);\n+                           Set_Has_Implicit_Dereference (Disc);\n+                           exit;\n+                        end if;\n \n-                     Next_Discriminant (Disc);\n-                  end loop;\n+                        Next_Discriminant (Disc);\n+                     end loop;\n \n-                  --  Error if no proper access discriminant\n+                     --  Error if no proper access discriminant\n \n-                  if No (Disc) then\n-                     Error_Msg_NE (\"not an access discriminant of&\", Expr, E);\n-                     return;\n-                  end if;\n-               end if;\n+                     if Present (Disc) then\n+                        --  For a type extension, check whether parent has\n+                        --  a reference discriminant, to verify that use is\n+                        --  proper.\n \n-               --  For a type extension, check whether parent has a\n-               --  reference discriminant, to verify that use is proper.\n-\n-               if Is_Derived_Type (E)\n-                 and then Has_Discriminants (Etype (E))\n-               then\n-                  Parent_Disc := Get_Reference_Discriminant (Etype (E));\n+                        if Is_Derived_Type (E)\n+                          and then Has_Discriminants (Etype (E))\n+                        then\n+                           declare\n+                              Parent_Disc : constant Entity_Id :=\n+                                Get_Reference_Discriminant (Etype (E));\n+                           begin\n+                              if Present (Parent_Disc)\n+                                and then Corresponding_Discriminant (Disc) /=\n+                                           Parent_Disc\n+                              then\n+                                 Error_Msg_N\n+                                   (\"reference discriminant does not match \"\n+                                      & \"discriminant of parent type\", Expr);\n+                              end if;\n+                           end;\n+                        end if;\n \n-                  if Present (Parent_Disc)\n-                    and then Corresponding_Discriminant (Disc) /= Parent_Disc\n-                  then\n-                     Error_Msg_N\n-                       (\"reference discriminant does not match discriminant \"\n-                        & \"of parent type\", Expr);\n-                  end if;\n+                     else\n+                        Error_Msg_NE\n+                          (\"not an access discriminant of&\", Expr, E);\n+                     end if;\n+                  end;\n                end if;\n+\n             end Analyze_Aspect_Implicit_Dereference;\n \n             -----------------------\n@@ -6529,7 +6538,7 @@ package body Sem_Ch13 is\n       Max : Uint;\n       --  Minimum and maximum values of entries\n \n-      Max_Node : Node_Id;\n+      Max_Node : Node_Id := Empty; -- init to avoid warning\n       --  Pointer to node for literal providing max value\n \n    begin\n@@ -8384,7 +8393,7 @@ package body Sem_Ch13 is\n       --  This is the expression for the result of the function. It is\n       --  is build by connecting the component predicates with AND THEN.\n \n-      Expr_M : Node_Id;\n+      Expr_M : Node_Id := Empty; -- init to avoid warning\n       --  This is the corresponding return expression for the Predicate_M\n       --  function. It differs in that raise expressions are marked for\n       --  special expansion (see Process_REs).\n@@ -9925,7 +9934,7 @@ package body Sem_Ch13 is\n       --  this tagged type and the parent component. Tagged_Parent will point\n       --  to this parent type. For all other cases, Tagged_Parent is Empty.\n \n-      Parent_Last_Bit : Uint;\n+      Parent_Last_Bit : Uint := No_Uint; -- init to avoid warning\n       --  Relevant only if Tagged_Parent is set, Parent_Last_Bit indicates the\n       --  last bit position for any field in the parent type. We only need to\n       --  check overlap for fields starting below this point."}, {"sha": "f2d1acfdc08ce7b9038113ed15ffac084ac366a1", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "patch": "@@ -1075,12 +1075,11 @@ package body Sem_Ch4 is\n \n             else\n                declare\n-                  Outermost : Node_Id;\n+                  Outermost : Node_Id := Empty; -- init to avoid warning\n                   P         : Node_Id := N;\n \n                begin\n                   while Present (P) loop\n-\n                      --  For object declarations we can climb to the node from\n                      --  its object definition branch or from its initializing\n                      --  expression. We prefer to mark the child node as the\n@@ -1095,7 +1094,7 @@ package body Sem_Ch4 is\n                         Outermost := P;\n                      end if;\n \n-                     --  Avoid climbing more than needed!\n+                     --  Avoid climbing more than needed\n \n                      exit when Stop_Subtree_Climbing (Nkind (P))\n                        or else (Nkind (P) = N_Range\n@@ -9151,9 +9150,8 @@ package body Sem_Ch4 is\n \n          declare\n             Dup_Call_Node : constant Node_Id := New_Copy (New_Call_Node);\n-            CW_Result     : Boolean;\n-            Prim_Result   : Boolean;\n-            pragma Unreferenced (CW_Result);\n+            Ignore        : Boolean;\n+            Prim_Result   : Boolean := False;\n \n          begin\n             if not CW_Test_Only then\n@@ -9168,7 +9166,7 @@ package body Sem_Ch4 is\n             --  was found in order to report ambiguous calls.\n \n             if not Prim_Result then\n-               CW_Result :=\n+               Ignore :=\n                  Try_Class_Wide_Operation\n                    (Call_Node       => New_Call_Node,\n                     Node_To_Replace => Node_To_Replace);\n@@ -9178,7 +9176,7 @@ package body Sem_Ch4 is\n             --  decoration if there is no ambiguity).\n \n             else\n-               CW_Result :=\n+               Ignore :=\n                  Try_Class_Wide_Operation\n                    (Call_Node       => Dup_Call_Node,\n                     Node_To_Replace => Node_To_Replace);"}, {"sha": "4cc41e3acaad703b81456aa6a895860022df2799", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "patch": "@@ -404,7 +404,7 @@ package body Sem_Disp is\n       Func                   : Entity_Id;\n       Subp_Entity            : Entity_Id;\n       Indeterm_Ancestor_Call : Boolean := False;\n-      Indeterm_Ctrl_Type     : Entity_Id;\n+      Indeterm_Ctrl_Type     : Entity_Id := Empty; -- init to avoid warning\n \n       Static_Tag : Node_Id := Empty;\n       --  If a controlling formal has a statically tagged actual, the tag of"}, {"sha": "55da40b729678c29054c1cbf2fcb7133dec291ee", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 28, "deletions": 23, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "patch": "@@ -5817,8 +5817,8 @@ package body Sem_Prag is\n \n             procedure Check_Grouping (L : List_Id) is\n                HSS  : Node_Id;\n-               Prag : Node_Id;\n                Stmt : Node_Id;\n+               Prag : Node_Id := Empty; -- init to avoid warning\n \n             begin\n                --  Inspect the list of declarations or statements looking for\n@@ -5872,16 +5872,15 @@ package body Sem_Prag is\n \n                      else\n                         while Present (Stmt) loop\n-\n                            --  The current pragma is either the first pragma\n-                           --  of the group or is a member of the group. Stop\n-                           --  the search as the placement is legal.\n+                           --  of the group or is a member of the group.\n+                           --  Stop the search as the placement is legal.\n \n                            if Stmt = N then\n                               raise Stop_Search;\n \n-                           --  Skip group members, but keep track of the last\n-                           --  pragma in the group.\n+                           --  Skip group members, but keep track of the\n+                           --  last pragma in the group.\n \n                            elsif Is_Loop_Pragma (Stmt) then\n                               Prag := Stmt;\n@@ -11390,6 +11389,7 @@ package body Sem_Prag is\n                         SPARK_Msg_N\n                           (\"expression of external state property must be \"\n                            & \"static\", Expr);\n+                        return;\n                      end if;\n \n                   --  The lack of expression defaults the property to True\n@@ -16474,6 +16474,20 @@ package body Sem_Prag is\n                   return;\n                end if;\n \n+               --  Ada 2012 (AI05-0030): Cannot apply the implementation_kind\n+               --  By_Protected_Procedure to the primitive procedure of a task\n+               --  interface.\n+\n+               if Chars (Arg2) = Name_By_Protected_Procedure\n+                 and then Is_Interface (Typ)\n+                 and then Is_Task_Interface (Typ)\n+               then\n+                  Error_Pragma_Arg\n+                    (\"implementation kind By_Protected_Procedure cannot be \"\n+                     & \"applied to a task interface primitive\", Arg2);\n+                  return;\n+               end if;\n+\n             --  Procedures declared inside a protected type must be accepted\n \n             elsif Ekind (Proc_Id) = E_Procedure\n@@ -16489,20 +16503,6 @@ package body Sem_Prag is\n                return;\n             end if;\n \n-            --  Ada 2012 (AI05-0030): Cannot apply the implementation_kind\n-            --  By_Protected_Procedure to the primitive procedure of a task\n-            --  interface.\n-\n-            if Chars (Arg2) = Name_By_Protected_Procedure\n-              and then Is_Interface (Typ)\n-              and then Is_Task_Interface (Typ)\n-            then\n-               Error_Pragma_Arg\n-                 (\"implementation kind By_Protected_Procedure cannot be \"\n-                  & \"applied to a task interface primitive\", Arg2);\n-               return;\n-            end if;\n-\n             Record_Rep_Item (Proc_Id, N);\n          end Implemented;\n \n@@ -24253,11 +24253,16 @@ package body Sem_Prag is\n                               else\n                                  OK := Set_Warning_Switch (Chr);\n                               end if;\n-                           end if;\n \n-                           if not OK then\n+                              if not OK then\n+                                 Error_Pragma_Arg\n+                                   (\"invalid warning switch character \" & Chr,\n+                                    Arg1);\n+                              end if;\n+\n+                           else\n                               Error_Pragma_Arg\n-                                (\"invalid warning switch character \" & Chr,\n+                                (\"invalid wide character in warning switch \",\n                                  Arg1);\n                            end if;\n "}, {"sha": "024b879fd14895b9ef7d1090be8bc870c4cc9b5f", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "patch": "@@ -3144,12 +3144,12 @@ package body Sem_Res is\n       Loc    : constant Source_Ptr := Sloc (N);\n       A      : Node_Id;\n       A_Id   : Entity_Id;\n-      A_Typ  : Entity_Id;\n+      A_Typ  : Entity_Id := Empty; -- init to avoid warning\n       F      : Entity_Id;\n       F_Typ  : Entity_Id;\n       Prev   : Node_Id := Empty;\n       Orig_A : Node_Id;\n-      Real_F : Entity_Id;\n+      Real_F : Entity_Id := Empty; -- init to avoid warning\n \n       Real_Subp : Entity_Id;\n       --  If the subprogram being called is an inherited operation for"}, {"sha": "102da89e9ca8333573445bba0a14b9e6232831e3", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5612989e5b06ce72f7c50cd6244c4c98ac4d3c76/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=5612989e5b06ce72f7c50cd6244c4c98ac4d3c76", "patch": "@@ -15448,7 +15448,7 @@ package body Sem_Util is\n       Anc_Part : Node_Id;\n       Assoc    : Node_Id;\n       Choice   : Node_Id;\n-      Comp_Typ : Entity_Id;\n+      Comp_Typ : Entity_Id := Empty; -- init to avoid warning\n       Expr     : Node_Id;\n \n    begin\n@@ -15524,6 +15524,7 @@ package body Sem_Util is\n          --  The type of the choice must have preelaborable initialization if\n          --  the association carries a <>.\n \n+         pragma Assert (Present (Comp_Typ));\n          if Box_Present (Assoc) then\n             if not Has_Preelaborable_Initialization (Comp_Typ) then\n                return False;\n@@ -17558,8 +17559,8 @@ package body Sem_Util is\n       L_Ndims : constant Nat := Number_Dimensions (L_Typ);\n       R_Ndims : constant Nat := Number_Dimensions (R_Typ);\n \n-      L_Index : Node_Id;\n-      R_Index : Node_Id;\n+      L_Index : Node_Id := Empty; -- init to ...\n+      R_Index : Node_Id := Empty; -- ...avoid warnings\n       L_Low   : Node_Id;\n       L_High  : Node_Id;\n       L_Len   : Uint;"}]}