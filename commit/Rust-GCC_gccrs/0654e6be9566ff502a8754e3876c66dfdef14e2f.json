{"sha": "0654e6be9566ff502a8754e3876c66dfdef14e2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY1NGU2YmU5NTY2ZmY1MDJhODc1NGUzODc2YzY2ZGZkZWYxNGUyZg==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2013-05-04T14:49:59Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2013-05-04T14:49:59Z"}, "message": "inclhack.def (aix_null): New.\n\n        * inclhack.def (aix_null): New.\n        (void_null): Update replacement definition of NULL.\n        * fixincl.x: Regenerate.\n        * tests/base/curses.h: Update for new fix.\n\nFrom-SVN: r198596", "tree": {"sha": "fb2829d7008afaf98b795228050ea04dc0b30341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb2829d7008afaf98b795228050ea04dc0b30341"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0654e6be9566ff502a8754e3876c66dfdef14e2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0654e6be9566ff502a8754e3876c66dfdef14e2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0654e6be9566ff502a8754e3876c66dfdef14e2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0654e6be9566ff502a8754e3876c66dfdef14e2f/comments", "author": null, "committer": null, "parents": [{"sha": "40de22d6f926dadb38c5b6cf46703843e3d2d1e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40de22d6f926dadb38c5b6cf46703843e3d2d1e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40de22d6f926dadb38c5b6cf46703843e3d2d1e7"}], "stats": {"total": 162, "additions": 142, "deletions": 20}, "files": [{"sha": "ff84ee691fd38b82de756206925dadacc926c999", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0654e6be9566ff502a8754e3876c66dfdef14e2f/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0654e6be9566ff502a8754e3876c66dfdef14e2f/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=0654e6be9566ff502a8754e3876c66dfdef14e2f", "patch": "@@ -1,4 +1,11 @@\n-2013-01-16  Alexandre Oliva <aoliva@redhat.com>\n+2013-05-04  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* inclhack.def (aix_null): New.\n+\t(void_null): Update replacement definition of NULL.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/curses.h: Update for new fix.\n+\n+2013-01-16  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* inclhack.def (feraiseexcept_nosse_invalid): New.\n \t(feraiseexcept_nosse_divbyzero): Likewise."}, {"sha": "871ca29108686dd36bd8f463c73e1301b6c4c5fa", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 76, "deletions": 6, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0654e6be9566ff502a8754e3876c66dfdef14e2f/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0654e6be9566ff502a8754e3876c66dfdef14e2f/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=0654e6be9566ff502a8754e3876c66dfdef14e2f", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Saturday December 29, 2012 at 09:17:09 AM BRST\n+ * It has been AutoGen-ed  May  3, 2013 at 11:45:43 AM by AutoGen 5.12\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Sat Dec 29 09:17:10 BRST 2012\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Fri May  3 11:45:44 PDT 2013\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 226 fixup descriptions.\n+ * This file contains 227 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -845,6 +845,60 @@ static const char* apzAix_Net_If_ArpPatch[] = {\n     \"typedef struct _fc_softc {\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aix_Null fix\n+ */\n+tSCC zAix_NullName[] =\n+     \"aix_null\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAix_NullList[] =\n+  \"curses.h\\0dbm.h\\0locale.h\\0stdio.h\\0stdlib.h\\0string.h\\0time.h\\0unistd.h\\0wchar.h\\0sys/dir.h\\0sys/param.h\\0sys/types.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAix_NullMachs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAix_NullSelect0[] =\n+       \"#define[ \\t]+NULL[ \\t]+\\\\(*0L*\\\\)*\";\n+\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zAix_NullBypass0[] =\n+       \"__null\";\n+\n+#define    AIX_NULL_TEST_CT  2\n+static tTestDesc aAix_NullTests[] = {\n+  { TT_NEGREP,   zAix_NullBypass0, (regex_t*)NULL },\n+  { TT_EGREP,    zAix_NullSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aix_Null\n+ */\n+static const char* apzAix_NullPatch[] = {\n+    \"format\",\n+    \"#ifndef NULL\\n\\\n+#ifdef __cplusplus\\n\\\n+#ifdef __GNUG__\\n\\\n+#define NULL __null\\n\\\n+#else /* ! __GNUG__  */\\n\\\n+#define NULL 0L\\n\\\n+#endif /* __GNUG__  */\\n\\\n+#else /* ! __cplusplus  */\\n\\\n+#define NULL ((void *)0)\\n\\\n+#endif /* __cplusplus  */\\n\\\n+#endif /* !NULL  */\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Aix_Once_Init_1 fix\n@@ -8680,7 +8734,17 @@ static tTestDesc aVoid_NullTests[] = {\n  */\n static const char* apzVoid_NullPatch[] = {\n     \"format\",\n-    \"#define NULL 0\",\n+    \"#ifndef NULL\\n\\\n+#ifdef __cplusplus\\n\\\n+#ifdef __GNUG__\\n\\\n+#define NULL __null\\n\\\n+#else /* ! __GNUG__  */\\n\\\n+#define NULL 0L\\n\\\n+#endif /* __GNUG__  */\\n\\\n+#else /* ! __cplusplus  */\\n\\\n+#define NULL ((void *)0)\\n\\\n+#endif /* __cplusplus  */\\n\\\n+#endif /* !NULL  */\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -9265,9 +9329,9 @@ static const char* apzFeraiseexcept_Nosse_DivbyzeroPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          264\n+#define REGEX_COUNT          266\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            226\n+#define FIX_COUNT            227\n \n /*\n  *  Enumerate the fixes\n@@ -9288,6 +9352,7 @@ typedef enum {\n     AIX_COMPLEX_FIXIDX,\n     AIX_MALLOC_FIXIDX,\n     AIX_NET_IF_ARP_FIXIDX,\n+    AIX_NULL_FIXIDX,\n     AIX_ONCE_INIT_1_FIXIDX,\n     AIX_ONCE_INIT_2_FIXIDX,\n     AIX_MUTEX_INITIALIZER_1_FIXIDX,\n@@ -9577,6 +9642,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      AIX_NET_IF_ARP_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAix_Net_If_ArpTests,   apzAix_Net_If_ArpPatch, 0 },\n \n+  {  zAix_NullName,    zAix_NullList,\n+     apzAix_NullMachs,\n+     AIX_NULL_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAix_NullTests,   apzAix_NullPatch, 0 },\n+\n   {  zAix_Once_Init_1Name,    zAix_Once_Init_1List,\n      apzAix_Once_Init_1Machs,\n      AIX_ONCE_INIT_1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "253df68997c298a4aefd1aa5849efc0489c16daa", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 42, "deletions": 12, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0654e6be9566ff502a8754e3876c66dfdef14e2f/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0654e6be9566ff502a8754e3876c66dfdef14e2f/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=0654e6be9566ff502a8754e3876c66dfdef14e2f", "patch": "@@ -616,6 +616,33 @@ fix = {\n     test_text = \"struct  fc_softc {\\n  int a;\\n};\";\n };\n \n+/*\n+ *  Fix AIX definition of NULL for G++.\n+ */\n+fix = {\n+    hackname  = aix_null;\n+    mach      = \"*-*-aix*\";\n+    files     = curses.h, dbm.h, locale.h, stdio.h, stdlib.h, string.h,\n+    time.h, unistd.h, wchar.h, sys/dir.h, sys/param.h, sys/types.h;\n+    bypass    = __null;\n+    select    = \"#define[ \\t]+NULL[ \\t]+\\\\(*0L*\\\\)*\";\n+    c_fix     = format;\n+    c_fix_arg = <<- _EOFix_\n+\t#ifndef NULL\n+\t#ifdef __cplusplus\n+\t#ifdef __GNUG__\n+\t#define NULL __null\n+\t#else /* ! __GNUG__  */\n+\t#define NULL 0L\n+\t#endif /* __GNUG__  */\n+\t#else /* ! __cplusplus  */\n+\t#define NULL ((void *)0)\n+\t#endif /* __cplusplus  */\n+\t#endif /* !NULL  */\n+\t_EOFix_;\n+    test_text = \"# define\\tNULL \\t(0L)  /* typed NULL */\";\n+};\n+\n /*\n  *  pthread.h on AIX defines PTHREAD_ONCE_INIT, PTHREAD_MUTEX_INITIALIZER,\n  *  PTHREAD_COND_INITIALIZER and PTHREAD_RWLOCK_INITIALIZER without enough\n@@ -4552,23 +4579,26 @@ fix = {\n  */\n fix = {\n     hackname  = void_null;\n-    files     = curses.h;\n-    files     = dbm.h;\n-    files     = locale.h;\n-    files     = stdio.h;\n-    files     = stdlib.h;\n-    files     = string.h;\n-    files     = time.h;\n-    files     = unistd.h;\n-    files     = sys/dir.h;\n-    files     = sys/param.h;\n-    files     = sys/types.h;\n+    files     = curses.h, dbm.h, locale.h, stdio.h, stdlib.h, string.h,\n+    time.h, unistd.h, sys/dir.h, sys/param.h, sys/types.h;\n     /* avoid changing C++ friendly NULL */\n     bypass    = __cplusplus;\n     bypass    = __null;\n     select    = \"^#[ \\t]*define[ \\t]+NULL[ \\t]+\\\\(\\\\(void[ \\t]*\\\\*\\\\)0\\\\)\";\n     c_fix     = format;\n-    c_fix_arg = \"#define NULL 0\";\n+    c_fix_arg = <<- _EOFix_\n+\t#ifndef NULL\n+\t#ifdef __cplusplus\n+\t#ifdef __GNUG__\n+\t#define NULL __null\n+\t#else /* ! __GNUG__  */\n+\t#define NULL 0L\n+\t#endif /* __GNUG__  */\n+\t#else /* ! __cplusplus  */\n+\t#define NULL ((void *)0)\n+\t#endif /* __cplusplus  */\n+\t#endif /* !NULL  */\n+\t_EOFix_;\n     test_text = \"# define\\tNULL \\t((void *)0)  /* typed NULL */\";\n };\n "}, {"sha": "4a183be632ee7da160fb5932c2d32a65943fac65", "filename": "fixincludes/tests/base/curses.h", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0654e6be9566ff502a8754e3876c66dfdef14e2f/fixincludes%2Ftests%2Fbase%2Fcurses.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0654e6be9566ff502a8754e3876c66dfdef14e2f/fixincludes%2Ftests%2Fbase%2Fcurses.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fcurses.h?ref=0654e6be9566ff502a8754e3876c66dfdef14e2f", "patch": "@@ -9,6 +9,11 @@\n \n \n \n+#if defined( AIX_NULL_CHECK )\n+# define\tNULL \t(0L)  /* typed NULL */\n+#endif  /* AIX_NULL_CHECK */\n+\n+\n #if defined( AVOID_BOOL_DEFINE_CHECK )\n #ifndef __cplusplus\n # define bool\t char \n@@ -31,5 +36,15 @@ struct term;\n \n \n #if defined( VOID_NULL_CHECK )\n-#define NULL 0  /* typed NULL */\n+#ifndef NULL\n+#ifdef __cplusplus\n+#ifdef __GNUG__\n+#define NULL __null\n+#else /* ! __GNUG__  */\n+#define NULL 0L\n+#endif /* __GNUG__  */\n+#else /* ! __cplusplus  */\n+#define NULL ((void *)0)\n+#endif /* __cplusplus  */\n+#endif /* !NULL  */  /* typed NULL */\n #endif  /* VOID_NULL_CHECK */"}]}