{"sha": "4f85a52c9424bb9ac606ec0f6f3da30e020161ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY4NWE1MmM5NDI0YmI5YWM2MDZlYzBmNmYzZGEzMGUwMjAxNjFhZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-19T10:33:46Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-19T10:33:46Z"}, "message": "mklog.py: improve parsing of struct names (ignore GTY).\n\n\t* mklog.py: Skip GTY for struct names.  Make flake8 happy.\n\t* test_mklog.py: Add test for GTY.", "tree": {"sha": "9c8b5604b95502ec54111b1a7ec9d083674cc768", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c8b5604b95502ec54111b1a7ec9d083674cc768"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f85a52c9424bb9ac606ec0f6f3da30e020161ad", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7DtgoACgkQTcGC3A+n\nN4WWqwf9Ej7D5+KkUTSO0DZQRMAP7PWLbfShPUwxMjilvd2UuKK2umIx5D+X/4aS\nay7h9ivd55KRY+S427ngI3qgPMEEIngyzCSGKztg4OdTo9K5e4lLZwUP/Y/uISVA\ngIL0R7u9+VvlHaKX3sIXINE2PkQX8M6xXIfSHwqSV1Gwpkf6j/IsnytYmQyxMncA\n5ILd+4d6Ur5FsUc7fK6WtOMfbYD/qSwiO/l1vryWU6ERkBYQnDl0EXIxWRuLQisz\naD8OsR8LTRmL90cNGQf4qJw36TvWOeo7G0gQMNNzY7pE4mvg84h/SfaGvKEdTbgm\n8gxLL829ziq9pxczW6tSOEg98MHMWQ==\n=Snd7\n-----END PGP SIGNATURE-----", "payload": "tree 9c8b5604b95502ec54111b1a7ec9d083674cc768\nparent 53cc8cf9f0880128ffe150d7410e9339b6f04f2c\nauthor Martin Liska <mliska@suse.cz> 1589884426 +0200\ncommitter Martin Liska <mliska@suse.cz> 1589884426 +0200\n\nmklog.py: improve parsing of struct names (ignore GTY).\n\n\t* mklog.py: Skip GTY for struct names.  Make flake8 happy.\n\t* test_mklog.py: Add test for GTY.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f85a52c9424bb9ac606ec0f6f3da30e020161ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f85a52c9424bb9ac606ec0f6f3da30e020161ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f85a52c9424bb9ac606ec0f6f3da30e020161ad/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53cc8cf9f0880128ffe150d7410e9339b6f04f2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53cc8cf9f0880128ffe150d7410e9339b6f04f2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53cc8cf9f0880128ffe150d7410e9339b6f04f2c"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "5ef08f41a92e7b32c697a51165cf6b8db6b31f08", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f85a52c9424bb9ac606ec0f6f3da30e020161ad/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f85a52c9424bb9ac606ec0f6f3da30e020161ad/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=4f85a52c9424bb9ac606ec0f6f3da30e020161ad", "patch": "@@ -1,3 +1,8 @@\n+2020-05-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* mklog.py: Skip GTY for struct names.  Make flake8 happy.\n+\t* test_mklog.py: Add test for GTY.\n+\n 2020-05-19  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_update_version.py:"}, {"sha": "45559afbe6b5f2ba03cd2a85d3b969febfdcf32d", "filename": "contrib/mklog.py", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f85a52c9424bb9ac606ec0f6f3da30e020161ad/contrib%2Fmklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f85a52c9424bb9ac606ec0f6f3da30e020161ad/contrib%2Fmklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog.py?ref=4f85a52c9424bb9ac606ec0f6f3da30e020161ad", "patch": "@@ -27,18 +27,21 @@\n # Author: Martin Liska <mliska@suse.cz>\n \n import argparse\n-import bs4\n import os\n import re\n-import requests\n import sys\n \n+import bs4\n+\n+import requests\n+\n from unidiff import PatchSet\n \n pr_regex = re.compile(r'(\\/(\\/|\\*)|[Cc*!])\\s+(?P<pr>PR [a-z+-]+\\/[0-9]+)')\n identifier_regex = re.compile(r'^([a-zA-Z0-9_#].*)')\n comment_regex = re.compile(r'^\\/\\*')\n-struct_regex = re.compile(r'^((class|struct|union|enum)\\s+[a-zA-Z0-9_]+)')\n+struct_regex = re.compile(r'^(class|struct|union|enum)\\s+'\n+                          r'(GTY\\(.*\\)\\s+)?([a-zA-Z0-9_]+)')\n macro_regex = re.compile(r'#\\s*(define|undef)\\s+([a-zA-Z0-9_]+)')\n super_macro_regex = re.compile(r'^DEF[A-Z0-9_]+\\s*\\(([a-zA-Z0-9_]+)')\n fn_regex = re.compile(r'([a-zA-Z_][^()\\s]*)\\s*\\([^*]')\n@@ -73,7 +76,7 @@ def extract_function_name(line):\n     m = struct_regex.search(line)\n     if m:\n         # Struct declaration\n-        return m.group(1)\n+        return m.group(1) + ' ' + m.group(3)\n     m = macro_regex.search(line)\n     if m:\n         # Macro definition\n@@ -117,6 +120,7 @@ def get_pr_titles(prs):\n     output += '\\n'\n     return output\n \n+\n def generate_changelog(data, no_functions=False, fill_pr_titles=False):\n     changelogs = {}\n     changelog_list = []"}, {"sha": "774b6ea62d0f369dd6d68ba975f8eeab01bc3580", "filename": "contrib/test_mklog.py", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f85a52c9424bb9ac606ec0f6f3da30e020161ad/contrib%2Ftest_mklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f85a52c9424bb9ac606ec0f6f3da30e020161ad/contrib%2Ftest_mklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftest_mklog.py?ref=4f85a52c9424bb9ac606ec0f6f3da30e020161ad", "patch": "@@ -319,6 +319,31 @@\n \n '''\n \n+PATCH6 = '''\\\n+diff --git a/gcc/cgraph.h b/gcc/cgraph.h\n+index 5ddeb65269b..cfae6e91da9 100644\n+--- a/gcc/cgraph.h\n++++ b/gcc/cgraph.h\n+@@ -937,7 +937,8 @@ struct GTY((tag (\"SYMTAB_FUNCTION\"))) cgraph_node : public symtab_node\n+       split_part (false), indirect_call_target (false), local (false),\n+       versionable (false), can_change_signature (false),\n+       redefined_extern_inline (false), tm_may_enter_irr (false),\n+-      ipcp_clone (false), m_uid (uid), m_summary_id (-1)\n++      ipcp_clone (false), declare_variant_alt (false),\n++      calls_declare_variant_alt (false), m_uid (uid), m_summary_id (-1)\n+   {}\n+ \n+   /* Remove the node from cgraph and all inline clones inlined into it.\n+\n+'''\n+\n+EXPECTED6 = '''\\\n+gcc/ChangeLog:\n+\n+\t* cgraph.h (struct cgraph_node):\n+\n+'''\n+\n class TestMklog(unittest.TestCase):\n     def test_macro_definition(self):\n         changelog = generate_changelog(PATCH1)\n@@ -343,3 +368,7 @@ def test_sorting(self):\n     def test_pr_bugzilla_download(self):\n         changelog = generate_changelog(PATCH5, fill_pr_titles=True)\n         assert changelog == EXPECTED5\n+\n+    def test_gty_in_struct(self):\n+        changelog = generate_changelog(PATCH6, fill_pr_titles=True)\n+        assert changelog == EXPECTED6"}]}