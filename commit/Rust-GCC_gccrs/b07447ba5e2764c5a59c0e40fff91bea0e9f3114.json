{"sha": "b07447ba5e2764c5a59c0e40fff91bea0e9f3114", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA3NDQ3YmE1ZTI3NjRjNWE1OWMwZTQwZmZmOTFiZWEwZTlmMzExNA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2016-06-16T14:27:59Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2016-06-16T14:27:59Z"}, "message": "msp430-opts.h (msp430_hwmult_types): Add MSP430_HWMULT_ prefix to enum values.\n\n\t* config/msp430/msp430-opts.h (msp430_hwmult_types): Add\n\tMSP430_HWMULT_ prefix to enum values.\n\t(msp430_regions): Add MSP430_REGION_ prefix to enum values.\n\t* config/msp430/msp430.c: Update use of enum values.\n\t* config/msp430/msp430.md: Likewise.\n\t* config/msp430/msp430.opt: Likewise.\n\nFrom-SVN: r237529", "tree": {"sha": "31e15702b399aaec20fe61eb6a5ae56e1dff63e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31e15702b399aaec20fe61eb6a5ae56e1dff63e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b07447ba5e2764c5a59c0e40fff91bea0e9f3114", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b07447ba5e2764c5a59c0e40fff91bea0e9f3114", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b07447ba5e2764c5a59c0e40fff91bea0e9f3114", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b07447ba5e2764c5a59c0e40fff91bea0e9f3114/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33ac58d5299c7eba6be3c112817fe917bed48043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33ac58d5299c7eba6be3c112817fe917bed48043", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33ac58d5299c7eba6be3c112817fe917bed48043"}], "stats": {"total": 120, "additions": 65, "deletions": 55}, "files": [{"sha": "f57c04ecfd4971542fd1078a658b28f5ade71334", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b07447ba5e2764c5a59c0e40fff91bea0e9f3114/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b07447ba5e2764c5a59c0e40fff91bea0e9f3114/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b07447ba5e2764c5a59c0e40fff91bea0e9f3114", "patch": "@@ -1,3 +1,12 @@\n+2016-06-16  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/msp430/msp430-opts.h (msp430_hwmult_types): Add\n+\tMSP430_HWMULT_ prefix to enum values.\n+\t(msp430_regions): Add MSP430_REGION_ prefix to enum values.\n+\t* config/msp430/msp430.c: Update use of enum values.\n+\t* config/msp430/msp430.md: Likewise.\n+\t* config/msp430/msp430.opt: Likewise.\n+\n 2016-06-16  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* tree-ssa-loop-ivcanon.c (tree_estimate_loop_size): Fix estimation"}, {"sha": "98baee164eb244f9838349ab8ee856450d6829fb", "filename": "gcc/config/msp430/msp430-opts.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b07447ba5e2764c5a59c0e40fff91bea0e9f3114/gcc%2Fconfig%2Fmsp430%2Fmsp430-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b07447ba5e2764c5a59c0e40fff91bea0e9f3114/gcc%2Fconfig%2Fmsp430%2Fmsp430-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430-opts.h?ref=b07447ba5e2764c5a59c0e40fff91bea0e9f3114", "patch": "@@ -22,19 +22,19 @@\n \n enum msp430_hwmult_types\n {\n-  NONE,\n-  AUTO,\n-  SMALL,\n-  LARGE,\n-  F5SERIES\n+  MSP430_HWMULT_NONE,\n+  MSP430_HWMULT_AUTO,\n+  MSP430_HWMULT_SMALL,\n+  MSP430_HWMULT_LARGE,\n+  MSP430_HWMULT_F5SERIES\n };\n \n enum msp430_regions\n {\n-  ANY,\n-  EITHER,\n-  LOWER,\n-  UPPER\n+  MSP430_REGION_ANY,\n+  MSP430_REGION_EITHER,\n+  MSP430_REGION_LOWER,\n+  MSP430_REGION_UPPER\n };\n \n #endif"}, {"sha": "dba4d1987768bf6eabb962dfa5d0c25a8ea55a16", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 31, "deletions": 30, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b07447ba5e2764c5a59c0e40fff91bea0e9f3114/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b07447ba5e2764c5a59c0e40fff91bea0e9f3114/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=b07447ba5e2764c5a59c0e40fff91bea0e9f3114", "patch": "@@ -777,20 +777,21 @@ msp430_option_override (void)\n \t\t\t   target_mcu, xisa ? \"430X\" : \"430\", msp430x ? \"430X\" : \"430\");\n \n \t\tif (msp430_mcu_data[i].hwmpy == 0\n-\t\t    && msp430_hwmult_type != AUTO\n-\t\t    && msp430_hwmult_type != NONE)\n+\t\t    && msp430_hwmult_type != MSP430_HWMULT_AUTO\n+\t\t    && msp430_hwmult_type != MSP430_HWMULT_NONE)\n \t\t  warning (0, \"MCU '%s' does not have hardware multiply support, but -mhwmult is set to %s\",\n \t\t\t   target_mcu,\n-\t\t\t   msp430_hwmult_type == SMALL ? \"16-bit\" : msp430_hwmult_type == LARGE ? \"32-bit\" : \"f5series\");\n-\t\telse if (msp430_hwmult_type == SMALL\n+\t\t\t   msp430_hwmult_type == MSP430_HWMULT_SMALL ? \"16-bit\"\n+\t\t\t   : msp430_hwmult_type == MSP430_HWMULT_LARGE ? \"32-bit\" : \"f5series\");\n+\t\telse if (msp430_hwmult_type == MSP430_HWMULT_SMALL\n \t\t    && msp430_mcu_data[i].hwmpy != 1\n \t\t    && msp430_mcu_data[i].hwmpy != 2 )\n \t\t  warning (0, \"MCU '%s' supports %s hardware multiply, but -mhwmult is set to 16-bit\",\n \t\t\t   target_mcu, hwmult_name (msp430_mcu_data[i].hwmpy));\n-\t\telse if (msp430_hwmult_type == LARGE && msp430_mcu_data[i].hwmpy != 4)\n+\t\telse if (msp430_hwmult_type == MSP430_HWMULT_LARGE && msp430_mcu_data[i].hwmpy != 4)\n \t\t  warning (0, \"MCU '%s' supports %s hardware multiply, but -mhwmult is set to 32-bit\",\n \t\t\t   target_mcu, hwmult_name (msp430_mcu_data[i].hwmpy));\n-\t\telse if (msp430_hwmult_type == F5SERIES && msp430_mcu_data[i].hwmpy != 8)\n+\t\telse if (msp430_hwmult_type == MSP430_HWMULT_F5SERIES && msp430_mcu_data[i].hwmpy != 8)\n \t\t  warning (0, \"MCU '%s' supports %s hardware multiply, but -mhwmult is set to f5series\",\n \t\t\t   target_mcu, hwmult_name (msp430_mcu_data[i].hwmpy));\n \t      }\n@@ -801,7 +802,7 @@ msp430_option_override (void)\n \n       if (i < 0)\n \t{\n-\t  if (msp430_hwmult_type == AUTO)\n+\t  if (msp430_hwmult_type == MSP430_HWMULT_AUTO)\n \t    {\n \t      if (msp430_warn_mcu)\n \t\t{\n@@ -815,7 +816,7 @@ msp430_option_override (void)\n \t\t\t     target_mcu);\n \t\t}\n \n-\t      msp430_hwmult_type = NONE;\n+\t      msp430_hwmult_type = MSP430_HWMULT_NONE;\n \t    }\n \t  else if (target_cpu == NULL)\n \t    {\n@@ -833,15 +834,15 @@ msp430_option_override (void)\n     }\n \n   /* The F5 series are all able to support the 430X ISA.  */\n-  if (target_cpu == NULL && target_mcu == NULL && msp430_hwmult_type == F5SERIES)\n+  if (target_cpu == NULL && target_mcu == NULL && msp430_hwmult_type == MSP430_HWMULT_F5SERIES)\n     msp430x = true;\n \n   if (TARGET_LARGE && !msp430x)\n     error (\"-mlarge requires a 430X-compatible -mmcu=\");\n \n-  if (msp430_code_region == UPPER && ! msp430x)\n+  if (msp430_code_region == MSP430_REGION_UPPER && ! msp430x)\n     error (\"-mcode-region=upper requires 430X-compatible cpu\");\n-  if (msp430_data_region == UPPER && ! msp430x)\n+  if (msp430_data_region == MSP430_REGION_UPPER && ! msp430x)\n     error (\"-mdata-region=upper requires 430X-compatible cpu\");\n \n   if (flag_exceptions || flag_non_call_exceptions\n@@ -2166,24 +2167,24 @@ gen_prefix (tree decl)\n \n   if (TREE_CODE (decl) == FUNCTION_DECL)\n     {\n-      if (msp430_code_region == LOWER)\n+      if (msp430_code_region == MSP430_REGION_LOWER)\n \treturn lower_prefix;\n \n-      if (msp430_code_region == UPPER)\n+      if (msp430_code_region == MSP430_REGION_UPPER)\n \treturn upper_prefix;\n \n-      if (msp430_code_region == EITHER)\n+      if (msp430_code_region == MSP430_REGION_EITHER)\n \treturn either_prefix;\n     }\n   else\n     {\n-      if (msp430_data_region == LOWER)\n+      if (msp430_data_region == MSP430_REGION_LOWER)\n \treturn lower_prefix;\n \n-      if (msp430_data_region == UPPER)\n+      if (msp430_data_region == MSP430_REGION_UPPER)\n \treturn upper_prefix;\n \n-      if (msp430_data_region == EITHER)\n+      if (msp430_data_region == MSP430_REGION_EITHER)\n \treturn either_prefix;\n     }\n \n@@ -2354,7 +2355,7 @@ msp430_output_aligned_decl_common (FILE *                 stream,\n \t\t\t\t   unsigned HOST_WIDE_INT size,\n \t\t\t\t   unsigned int           align)\n {\n-  if (msp430_data_region == ANY)\n+  if (msp430_data_region == MSP430_REGION_ANY)\n     {\n       fprintf (stream, COMMON_ASM_OP);\n       assemble_name (stream, name);\n@@ -2370,9 +2371,9 @@ msp430_output_aligned_decl_common (FILE *                 stream,\n       else\n \tswitch (msp430_data_region)\n \t  {\n-\t  case UPPER: sec = get_named_section (NULL, \".upper.bss\", 0); break;\n-\t  case LOWER: sec = get_named_section (NULL, \".lower.bss\", 0); break;\n-\t  case EITHER: sec = get_named_section (NULL, \".either.bss\", 0); break;\n+\t  case MSP430_REGION_UPPER: sec = get_named_section (NULL, \".upper.bss\", 0); break;\n+\t  case MSP430_REGION_LOWER: sec = get_named_section (NULL, \".lower.bss\", 0); break;\n+\t  case MSP430_REGION_EITHER: sec = get_named_section (NULL, \".either.bss\", 0); break;\n \t  default:\n \t    gcc_unreachable ();\n \t  }\n@@ -2396,8 +2397,8 @@ msp430_do_not_relax_short_jumps (void)\n      short jumps when there is a chance that the instructions will end up in a low\n      section.  */\n   return\n-    msp430_code_region == EITHER\n-    || msp430_code_region == LOWER\n+    msp430_code_region == MSP430_REGION_EITHER\n+    || msp430_code_region == MSP430_REGION_LOWER\n     || has_attr (ATTR_EITHER, current_function_decl)\n     || has_attr (ATTR_LOWER, current_function_decl);\n }\n@@ -3204,10 +3205,10 @@ msp430_use_f5_series_hwmult (void)\n   static const char * cached_match = NULL;\n   static bool         cached_result;\n \n-  if (msp430_hwmult_type == F5SERIES)\n+  if (msp430_hwmult_type == MSP430_HWMULT_F5SERIES)\n     return true;\n \n-  if (target_mcu == NULL || msp430_hwmult_type != AUTO)\n+  if (target_mcu == NULL || msp430_hwmult_type != MSP430_HWMULT_AUTO)\n     return false;\n \n   if (target_mcu == cached_match)\n@@ -3242,10 +3243,10 @@ use_32bit_hwmult (void)\n   static bool         cached_result;\n   int i;\n \n-  if (msp430_hwmult_type == LARGE)\n+  if (msp430_hwmult_type == MSP430_HWMULT_LARGE)\n     return true;\n \n-  if (target_mcu == NULL || msp430_hwmult_type != AUTO)\n+  if (target_mcu == NULL || msp430_hwmult_type != MSP430_HWMULT_AUTO)\n     return false;\n \n   if (target_mcu == cached_match)\n@@ -3271,10 +3272,10 @@ msp430_no_hwmult (void)\n   static bool         cached_result;\n   int i;\n \n-  if (msp430_hwmult_type == NONE)\n+  if (msp430_hwmult_type == MSP430_HWMULT_NONE)\n     return true;\n \n-  if (msp430_hwmult_type != AUTO)\n+  if (msp430_hwmult_type != MSP430_HWMULT_AUTO)\n     return false;\n \n   if (target_mcu == NULL)\n@@ -3312,7 +3313,7 @@ msp430_output_labelref (FILE *file, const char *name)\n \n   /* If we have been given a specific MCU name then we may be\n      able to make use of its hardware multiply capabilities.  */\n-  if (msp430_hwmult_type != NONE)\n+  if (msp430_hwmult_type != MSP430_HWMULT_NONE)\n     {\n       if (strcmp (\"__mspabi_mpyi\", name) == 0)\n \t{"}, {"sha": "bdec202660f87ca69e69f75ac644ba01798d0b2b", "filename": "gcc/config/msp430/msp430.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b07447ba5e2764c5a59c0e40fff91bea0e9f3114/gcc%2Fconfig%2Fmsp430%2Fmsp430.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b07447ba5e2764c5a59c0e40fff91bea0e9f3114/gcc%2Fconfig%2Fmsp430%2Fmsp430.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.md?ref=b07447ba5e2764c5a59c0e40fff91bea0e9f3114", "patch": "@@ -1510,7 +1510,7 @@\n   [(set (match_operand:SI                          0 \"register_operand\" \"=r\")\n \t(mult:SI (sign_extend:SI (match_operand:HI 1 \"register_operand\" \"%0\"))\n \t\t (sign_extend:SI (match_operand:HI 2 \"register_operand\" \"r\"))))]\n-  \"optimize > 2 && msp430_hwmult_type != NONE\"\n+  \"optimize > 2 && msp430_hwmult_type != MSP430_HWMULT_NONE\"\n   \"*\n     if (msp430_use_f5_series_hwmult ())\n       return \\\"PUSH.W sr { DINT { NOP { MOV.W %1, &0x04C2 { MOV.W %2, &0x04C8 { MOV.W &0x04CA, %L0 { MOV.W &0x04CC, %H0 { POP.W sr\\\";\n@@ -1523,7 +1523,7 @@\n   [(set (match_operand:SI                          0 \"register_operand\" \"=r\")\n \t(mult:SI (zero_extend:SI (match_operand:HI 1 \"register_operand\" \"%0\"))\n \t\t (zero_extend:SI (match_operand:HI 2 \"register_operand\" \"r\"))))]\n-  \"optimize > 2 && msp430_hwmult_type != NONE\"\n+  \"optimize > 2 && msp430_hwmult_type != MSP430_HWMULT_NONE\"\n   \"*\n     if (msp430_use_f5_series_hwmult ())\n       return \\\"PUSH.W sr { DINT { NOP { MOV.W %1, &0x04C0 { MOV.W %2, &0x04C8 { MOV.W &0x04CA, %L0 { MOV.W &0x04CC, %H0 { POP.W sr\\\";\n@@ -1536,7 +1536,7 @@\n   [(set (match_operand:DI                          0 \"register_operand\" \"=r\")\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"%0\"))\n \t\t (sign_extend:DI (match_operand:SI 2 \"register_operand\" \"r\"))))]\n-  \"optimize > 2 && msp430_hwmult_type != NONE\"\n+  \"optimize > 2 && msp430_hwmult_type != MSP430_HWMULT_NONE\"\n   \"*\n     if (msp430_use_f5_series_hwmult ())\n       return \\\"PUSH.W sr { DINT { NOP { MOV.W %L1, &0x04D4 { MOV.W %H1, &0x04D6 { MOV.W %L2, &0x04E0 { MOV.W %H2, &0x04E2 { MOV.W &0x04E4, %A0 { MOV.W &0x04E6, %B0 { MOV.W &0x04E8, %C0 { MOV.W &0x04EA, %D0 { POP.W sr\\\";\n@@ -1549,7 +1549,7 @@\n   [(set (match_operand:DI                          0 \"register_operand\" \"=r\")\n \t(mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"%0\"))\n \t\t (zero_extend:DI (match_operand:SI 2 \"register_operand\" \"r\"))))]\n-  \"optimize > 2 && msp430_hwmult_type != NONE\"\n+  \"optimize > 2 && msp430_hwmult_type != MSP430_HWMULT_NONE\"\n   \"*\n     if (msp430_use_f5_series_hwmult ())\n       return \\\"PUSH.W sr { DINT { NOP { MOV.W %L1, &0x04D0 { MOV.W %H1, &0x04D2 { MOV.W %L2, &0x04E0 { MOV.W %H2, &0x04E2 { MOV.W &0x04E4, %A0 { MOV.W &0x04E6, %B0 { MOV.W &0x04E8, %C0 { MOV.W &0x04EA, %D0 { POP.W sr\\\";"}, {"sha": "bc42723659d4c0e3ad5399d246dbd935f32aab90", "filename": "gcc/config/msp430/msp430.opt", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b07447ba5e2764c5a59c0e40fff91bea0e9f3114/gcc%2Fconfig%2Fmsp430%2Fmsp430.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b07447ba5e2764c5a59c0e40fff91bea0e9f3114/gcc%2Fconfig%2Fmsp430%2Fmsp430.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.opt?ref=b07447ba5e2764c5a59c0e40fff91bea0e9f3114", "patch": "@@ -41,49 +41,49 @@ HeaderInclude\n config/msp430/msp430-opts.h\n \n mhwmult=\n-Target Joined RejectNegative Report ToLower Var(msp430_hwmult_type) Enum(msp430_hwmult_types) Init(AUTO)\n+Target Joined RejectNegative Report ToLower Var(msp430_hwmult_type) Enum(msp430_hwmult_types) Init(MSP430_HWMULT_AUTO)\n Specify the type of hardware multiply to support.\n \n Enum\n Name(msp430_hwmult_types) Type(enum msp430_hwmult_types)\n \n EnumValue\n-Enum(msp430_hwmult_types) String(none) Value(NONE)\n+Enum(msp430_hwmult_types) String(none) Value(MSP430_HWMULT_NONE)\n \n EnumValue\n-Enum(msp430_hwmult_types) String(auto) Value(AUTO)\n+Enum(msp430_hwmult_types) String(auto) Value(MSP430_HWMULT_AUTO)\n \n EnumValue\n-Enum(msp430_hwmult_types) String(16bit) Value(SMALL)\n+Enum(msp430_hwmult_types) String(16bit) Value(MSP430_HWMULT_SMALL)\n \n EnumValue\n-Enum(msp430_hwmult_types) String(32bit) Value(LARGE)\n+Enum(msp430_hwmult_types) String(32bit) Value(MSP430_HWMULT_LARGE)\n \n EnumValue\n-Enum(msp430_hwmult_types) String(f5series) Value(F5SERIES)\n+Enum(msp430_hwmult_types) String(f5series) Value(MSP430_HWMULT_F5SERIES)\n \n mcode-region=\n-Target Joined RejectNegative Report ToLower Var(msp430_code_region) Enum(msp430_regions) Init(ANY)\n+Target Joined RejectNegative Report ToLower Var(msp430_code_region) Enum(msp430_regions) Init(MSP430_REGION_ANY)\n Specify whether functions should be placed into low or high memory.\n \n mdata-region=\n-Target Joined RejectNegative Report ToLower Var(msp430_data_region) Enum(msp430_regions) Init(ANY)\n+Target Joined RejectNegative Report ToLower Var(msp430_data_region) Enum(msp430_regions) Init(MSP430_REGION_ANY)\n Specify whether variables should be placed into low or high memory.\n \n Enum\n Name(msp430_regions) Type(enum msp430_regions)\n \n EnumValue\n-Enum(msp430_regions) String(none) Value(ANY)\n+Enum(msp430_regions) String(none) Value(MSP430_REGION_ANY)\n \n EnumValue\n-Enum(msp430_regions) String(either) Value(EITHER)\n+Enum(msp430_regions) String(either) Value(MSP430_REGION_EITHER)\n \n EnumValue\n-Enum(msp430_regions) String(lower) Value(LOWER)\n+Enum(msp430_regions) String(lower) Value(MSP430_REGION_LOWER)\n \n EnumValue\n-Enum(msp430_regions) String(upper) Value(UPPER)\n+Enum(msp430_regions) String(upper) Value(MSP430_REGION_UPPER)\n \n msilicon-errata=\n Target Joined RejectNegative Report ToLower"}]}