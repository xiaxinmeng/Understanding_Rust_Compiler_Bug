{"sha": "e87a88d34cd756e384041fb54f800ccf9a945d66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg3YTg4ZDM0Y2Q3NTZlMzg0MDQxZmI1NGY4MDBjY2Y5YTk0NWQ2Ng==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2003-03-29T04:03:07Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2003-03-29T04:03:07Z"}, "message": "rs6000.h (FUNCTION_VALUE_REGNO_P): Respect TARGET_HARD_FLOAT.\n\n\t* config/rs6000/rs6000.h (FUNCTION_VALUE_REGNO_P): Respect\n\tTARGET_HARD_FLOAT.  Reformat.\n\t(FUNCTION_ARG_REGNO_P): Likewise, and remove unneeded casts.\n\nFrom-SVN: r65010", "tree": {"sha": "5eedeff1d6c36695e1463b4374799a16ade45555", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5eedeff1d6c36695e1463b4374799a16ade45555"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e87a88d34cd756e384041fb54f800ccf9a945d66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e87a88d34cd756e384041fb54f800ccf9a945d66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e87a88d34cd756e384041fb54f800ccf9a945d66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e87a88d34cd756e384041fb54f800ccf9a945d66/comments", "author": null, "committer": null, "parents": [{"sha": "12f76820b4639161d29368a37fcec3b6283605b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12f76820b4639161d29368a37fcec3b6283605b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12f76820b4639161d29368a37fcec3b6283605b0"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "7f954a9ebcb5023fb53bd83bbd75148ce3bb448c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e87a88d34cd756e384041fb54f800ccf9a945d66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e87a88d34cd756e384041fb54f800ccf9a945d66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e87a88d34cd756e384041fb54f800ccf9a945d66", "patch": "@@ -1,3 +1,9 @@\n+2003-03-29  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/rs6000.h (FUNCTION_VALUE_REGNO_P): Respect\n+\tTARGET_HARD_FLOAT.  Reformat.\n+\t(FUNCTION_ARG_REGNO_P): Likewise, and remove unneeded casts.\n+\n 2003-03-28  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (*addsi3_and_r_1): Put under plus:SI"}, {"sha": "58d5d5b66ffe98cdc06613d75cdf2de5e654d08a", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e87a88d34cd756e384041fb54f800ccf9a945d66/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e87a88d34cd756e384041fb54f800ccf9a945d66/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=e87a88d34cd756e384041fb54f800ccf9a945d66", "patch": "@@ -1635,20 +1635,20 @@ typedef struct rs6000_stack {\n    as seen by the caller.\n \n    On RS/6000, this is r3, fp1, and v2 (for AltiVec).  */\n-#define FUNCTION_VALUE_REGNO_P(N)  ((N) == GP_ARG_RETURN\t\\\n-\t\t\t\t    || ((N) == FP_ARG_RETURN)\t\\\n-\t\t\t\t    || (TARGET_ALTIVEC &&\t\\\n-\t\t\t\t\t(N) == ALTIVEC_ARG_RETURN))\n+#define FUNCTION_VALUE_REGNO_P(N)\t\t\t\t\t\\\n+  ((N) == GP_ARG_RETURN\t\t\t\t\t\t\t\\\n+   || ((N) == FP_ARG_RETURN && TARGET_HARD_FLOAT)\t\t\t\\\n+   || ((N) == ALTIVEC_ARG_RETURN && TARGET_ALTIVEC))\n \n /* 1 if N is a possible register number for function argument passing.\n    On RS/6000, these are r3-r10 and fp1-fp13.\n    On AltiVec, v2 - v13 are used for passing vectors.  */\n #define FUNCTION_ARG_REGNO_P(N)\t\t\t\t\t\t\\\n-  (((unsigned)((N) - GP_ARG_MIN_REG) < (unsigned)(GP_ARG_NUM_REG))\t\\\n-   || (TARGET_ALTIVEC &&\t\t\t\t\t\t\\\n-       (unsigned)((N) - ALTIVEC_ARG_MIN_REG) < (unsigned)(ALTIVEC_ARG_NUM_REG)) \\\n-   || ((unsigned)((N) - FP_ARG_MIN_REG) < (unsigned)(FP_ARG_NUM_REG)))\n-\n+  ((unsigned) (N) - GP_ARG_MIN_REG < GP_ARG_NUM_REG\t\t\t\\\n+   || ((unsigned) (N) - ALTIVEC_ARG_MIN_REG < ALTIVEC_ARG_NUM_REG\t\\\n+       && TARGET_ALTIVEC)\t\t\t\t\t\t\\\n+   || ((unsigned) (N) - FP_ARG_MIN_REG < FP_ARG_NUM_REG\t\t\t\\\n+       && TARGET_HARD_FLOAT))\n \f\n /* A C structure for machine-specific, per-function data.\n    This is added to the cfun structure.  */"}]}