{"sha": "e0365bd388bac7641e1767222b9ddc683dbf057a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAzNjViZDM4OGJhYzc2NDFlMTc2NzIyMmI5ZGRjNjgzZGJmMDU3YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-10-11T18:55:14Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-10-11T18:55:14Z"}, "message": "Preserve the location of explicitly defaulted functions.\n\n\t* decl2.c (mark_used): Don't clobber DECL_SOURCE_LOCATION on\n\texplicitly defaulted functions.\n\t* method.c (synthesize_method): Likewise.\n\nFrom-SVN: r276902", "tree": {"sha": "cfff30e5aef5d3a9de926065733b52bd7c1abfcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfff30e5aef5d3a9de926065733b52bd7c1abfcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0365bd388bac7641e1767222b9ddc683dbf057a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0365bd388bac7641e1767222b9ddc683dbf057a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0365bd388bac7641e1767222b9ddc683dbf057a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0365bd388bac7641e1767222b9ddc683dbf057a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c6b6fde0bccc82d1a66e36b3a31177b5188cd52e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b6fde0bccc82d1a66e36b3a31177b5188cd52e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6b6fde0bccc82d1a66e36b3a31177b5188cd52e"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "a925f7e0ca3c6d99ccbd2b59479e777b281b47dd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0365bd388bac7641e1767222b9ddc683dbf057a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0365bd388bac7641e1767222b9ddc683dbf057a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e0365bd388bac7641e1767222b9ddc683dbf057a", "patch": "@@ -1,3 +1,9 @@\n+2019-10-11  Jason Merrill  <jason@redhat.com>\n+\n+\t* decl2.c (mark_used): Don't clobber DECL_SOURCE_LOCATION on\n+\texplicitly defaulted functions.\n+\t* method.c (synthesize_method): Likewise.\n+\n 2019-10-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/91987"}, {"sha": "6d5e973b4874d87e1512550364788d2b4e487d13", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0365bd388bac7641e1767222b9ddc683dbf057a/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0365bd388bac7641e1767222b9ddc683dbf057a/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=e0365bd388bac7641e1767222b9ddc683dbf057a", "patch": "@@ -5588,7 +5588,8 @@ mark_used (tree decl, tsubst_flags_t complain)\n       /* Remember the current location for a function we will end up\n \t synthesizing.  Then we can inform the user where it was\n \t required in the case of error.  */\n-      DECL_SOURCE_LOCATION (decl) = input_location;\n+      if (DECL_ARTIFICIAL (decl))\n+\tDECL_SOURCE_LOCATION (decl) = input_location;\n \n       /* Synthesizing an implicitly defined member function will result in\n \t garbage collection.  We must treat this situation as if we were"}, {"sha": "73a01147ff9b0193d2d80dd63347ef774c66846f", "filename": "gcc/cp/method.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0365bd388bac7641e1767222b9ddc683dbf057a/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0365bd388bac7641e1767222b9ddc683dbf057a/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=e0365bd388bac7641e1767222b9ddc683dbf057a", "patch": "@@ -892,7 +892,7 @@ synthesize_method (tree fndecl)\n \n   /* Reset the source location, we might have been previously\n      deferred, and thus have saved where we were first needed.  */\n-  if (!DECL_INHERITED_CTOR (fndecl))\n+  if (DECL_ARTIFICIAL (fndecl) && !DECL_INHERITED_CTOR (fndecl))\n     DECL_SOURCE_LOCATION (fndecl)\n       = DECL_SOURCE_LOCATION (TYPE_NAME (DECL_CONTEXT (fndecl)));\n \n@@ -953,8 +953,9 @@ synthesize_method (tree fndecl)\n   pop_deferring_access_checks ();\n \n   if (error_count != errorcount || warning_count != warningcount + werrorcount)\n-    inform (input_location, \"synthesized method %qD first required here\",\n-\t    fndecl);\n+    if (DECL_ARTIFICIAL (fndecl))\n+      inform (input_location, \"synthesized method %qD first required here\",\n+\t      fndecl);\n }\n \n /* Build a reference to type TYPE with cv-quals QUALS, which is an"}]}