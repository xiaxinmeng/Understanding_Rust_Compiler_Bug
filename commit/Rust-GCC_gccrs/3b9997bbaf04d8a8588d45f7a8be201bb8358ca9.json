{"sha": "3b9997bbaf04d8a8588d45f7a8be201bb8358ca9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I5OTk3YmJhZjA0ZDhhODU4OGQ0NWY3YThiZTIwMWJiODM1OGNhOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-08-12T18:02:43Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-08-12T18:02:43Z"}, "message": "re PR c++/67104 (Constant expression factory function initializes std::array with static storage duration strangely)\n\n\tPR c++/67104\n\t* constexpr.c (cxx_eval_array_reference): Handle sparse\n\tCONSTRUCTORs.\n\nFrom-SVN: r226830", "tree": {"sha": "1f01823a3a1f9c9305ce164050ee14d8b4f80a78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f01823a3a1f9c9305ce164050ee14d8b4f80a78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b9997bbaf04d8a8588d45f7a8be201bb8358ca9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b9997bbaf04d8a8588d45f7a8be201bb8358ca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b9997bbaf04d8a8588d45f7a8be201bb8358ca9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b9997bbaf04d8a8588d45f7a8be201bb8358ca9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5e58dbe28b71a17cb2e3e02fdf42d654e6ccd00"}], "stats": {"total": 61, "additions": 58, "deletions": 3}, "files": [{"sha": "07ed20ff628fe4dc6ae824074de6a0de5dfb117a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9997bbaf04d8a8588d45f7a8be201bb8358ca9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9997bbaf04d8a8588d45f7a8be201bb8358ca9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3b9997bbaf04d8a8588d45f7a8be201bb8358ca9", "patch": "@@ -1,5 +1,9 @@\n 2015-08-12  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/67104\n+\t* constexpr.c (cxx_eval_array_reference): Handle sparse\n+\tCONSTRUCTORs.\n+\n \tPR c++/67108\n \t* decl2.c (c_parse_final_cleanups): Set at_eof to 2 at end.\n \t* error.c (dump_template_bindings): Don't tsubst in that case."}, {"sha": "b6788c7a7c0a2a9e146ac92e21b3dd9234860199", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9997bbaf04d8a8588d45f7a8be201bb8358ca9/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9997bbaf04d8a8588d45f7a8be201bb8358ca9/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=3b9997bbaf04d8a8588d45f7a8be201bb8358ca9", "patch": "@@ -1697,7 +1697,38 @@ cxx_eval_array_reference (const constexpr_ctx *ctx, tree t,\n       VERIFY_CONSTANT (ary);\n       gcc_unreachable ();\n     }\n-  if (compare_tree_int (index, len) >= 0)\n+\n+  i = tree_to_shwi (index);\n+  bool found = true;\n+  if (TREE_CODE (ary) == CONSTRUCTOR && len\n+      && (TREE_CODE (CONSTRUCTOR_ELT (ary, len-1)->index) == RANGE_EXPR\n+\t  || compare_tree_int (CONSTRUCTOR_ELT (ary, len-1)->index, len-1)))\n+    {\n+      /* The last element doesn't match its position in the array; this must be\n+\t a sparse array from cxx_eval_store_expression.  So iterate.  */\n+      found = false;\n+      vec<constructor_elt, va_gc> *v = CONSTRUCTOR_ELTS (ary);\n+      constructor_elt *e;\n+      for (unsigned ix = 0; vec_safe_iterate (v, ix, &e); ++i)\n+\t{\n+\t  if (TREE_CODE (e->index) == RANGE_EXPR)\n+\t    {\n+\t      tree lo = TREE_OPERAND (e->index, 0);\n+\t      tree hi = TREE_OPERAND (e->index, 1);\n+\t      if (tree_int_cst_le (lo, index) && tree_int_cst_le (index, hi))\n+\t\tfound = true;\n+\t    }\n+\t  else if (tree_int_cst_equal (e->index, index))\n+\t    found = true;\n+\t  if (found)\n+\t    {\n+\t      i = ix;\n+\t      break;\n+\t    }\n+\t}\n+    }\n+\n+  if (i >= len || !found)\n     {\n       if (tree_int_cst_lt (index, array_type_nelts_top (TREE_TYPE (ary))))\n \t{\n@@ -1714,14 +1745,14 @@ cxx_eval_array_reference (const constexpr_ctx *ctx, tree t,\n       *non_constant_p = true;\n       return t;\n     }\n-  else if (tree_int_cst_lt (index, integer_zero_node))\n+  else if (i < 0)\n     {\n       if (!ctx->quiet)\n \terror (\"negative array subscript\");\n       *non_constant_p = true;\n       return t;\n     }\n-  i = tree_to_shwi (index);\n+\n   if (TREE_CODE (ary) == CONSTRUCTOR)\n     return (*CONSTRUCTOR_ELTS (ary))[i].value;\n   else if (elem_nchars == 1)"}, {"sha": "efe4617c9e869dbcfa94a662013a871b780b8fa2", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-array1.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9997bbaf04d8a8588d45f7a8be201bb8358ca9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-array1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9997bbaf04d8a8588d45f7a8be201bb8358ca9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-array1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-array1.C?ref=3b9997bbaf04d8a8588d45f7a8be201bb8358ca9", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/67104\n+// { dg-do compile { target c++14 } }\n+\n+template <typename T, int N> struct array\n+{\n+  constexpr T &operator[](int index) { return data[index]; }\n+  constexpr T operator[](int index) const { return data[index]; }\n+  T data[N];\n+};\n+\n+constexpr array<long unsigned, 1001>\n+make_bottle_count ()\n+{\n+  array<long unsigned, 1001> a{};\n+  a[65] = 1;\n+  return a;\n+}\n+\n+constexpr auto bottle_count = make_bottle_count ();\n+static_assert (bottle_count[65], \"\");"}]}