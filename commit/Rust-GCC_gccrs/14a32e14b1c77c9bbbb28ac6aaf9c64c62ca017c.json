{"sha": "14a32e14b1c77c9bbbb28ac6aaf9c64c62ca017c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRhMzJlMTRiMWM3N2M5YmJiYjI4YWM2YWFmOWM2NGM2MmNhMDE3Yw==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2007-02-13T00:13:29Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2007-02-13T00:13:29Z"}, "message": "alias.c (find_symbolic_term): Delete unused function.\n\n2007-02-12  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n\n\t* alias.c (find_symbolic_term): Delete unused function.\n\nFrom-SVN: r121869", "tree": {"sha": "236e8b8c5fd6f3c5e5f43238b8fa4a01a97d82fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/236e8b8c5fd6f3c5e5f43238b8fa4a01a97d82fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14a32e14b1c77c9bbbb28ac6aaf9c64c62ca017c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a32e14b1c77c9bbbb28ac6aaf9c64c62ca017c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14a32e14b1c77c9bbbb28ac6aaf9c64c62ca017c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a32e14b1c77c9bbbb28ac6aaf9c64c62ca017c/comments", "author": null, "committer": null, "parents": [{"sha": "20af23d30305d78a824937b67a2cca2bde36eff2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20af23d30305d78a824937b67a2cca2bde36eff2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20af23d30305d78a824937b67a2cca2bde36eff2"}], "stats": {"total": 38, "additions": 4, "deletions": 34}, "files": [{"sha": "0f91517b38b27cd155e7c382aeed9d99d8c2c230", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a32e14b1c77c9bbbb28ac6aaf9c64c62ca017c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a32e14b1c77c9bbbb28ac6aaf9c64c62ca017c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14a32e14b1c77c9bbbb28ac6aaf9c64c62ca017c", "patch": "@@ -1,3 +1,7 @@\n+2007-02-12  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\t* alias.c (find_symbolic_term): Delete unused function.\n+\t\n 2007-02-12  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (paritydi2, paritysi2): New expanders."}, {"sha": "3ac6848378331cb67f9a5cc0dd99cb100e5b9a94", "filename": "gcc/alias.c", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a32e14b1c77c9bbbb28ac6aaf9c64c62ca017c/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a32e14b1c77c9bbbb28ac6aaf9c64c62ca017c/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=14a32e14b1c77c9bbbb28ac6aaf9c64c62ca017c", "patch": "@@ -149,7 +149,6 @@ struct alias_set_entry GTY(())\n typedef struct alias_set_entry *alias_set_entry;\n \n static int rtx_equal_for_memref_p (rtx, rtx);\n-static rtx find_symbolic_term (rtx);\n static int memrefs_conflict_p (int, rtx, int, rtx, HOST_WIDE_INT);\n static void record_set (rtx, rtx, void *);\n static int base_alias_check (rtx, rtx, enum machine_mode,\n@@ -1345,39 +1344,6 @@ rtx_equal_for_memref_p (rtx x, rtx y)\n   return 1;\n }\n \n-/* Given an rtx X, find a SYMBOL_REF or LABEL_REF within\n-   X and return it, or return 0 if none found.  */\n-\n-static rtx\n-find_symbolic_term (rtx x)\n-{\n-  int i;\n-  enum rtx_code code;\n-  const char *fmt;\n-\n-  code = GET_CODE (x);\n-  if (code == SYMBOL_REF || code == LABEL_REF)\n-    return x;\n-  if (OBJECT_P (x))\n-    return 0;\n-\n-  fmt = GET_RTX_FORMAT (code);\n-  for (i = GET_RTX_LENGTH (code) - 1; i >= 0; i--)\n-    {\n-      rtx t;\n-\n-      if (fmt[i] == 'e')\n-\t{\n-\t  t = find_symbolic_term (XEXP (x, i));\n-\t  if (t != 0)\n-\t    return t;\n-\t}\n-      else if (fmt[i] == 'E')\n-\tbreak;\n-    }\n-  return 0;\n-}\n-\n rtx\n find_base_term (rtx x)\n {"}]}