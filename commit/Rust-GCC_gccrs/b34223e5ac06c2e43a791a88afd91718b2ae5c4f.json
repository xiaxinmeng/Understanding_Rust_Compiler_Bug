{"sha": "b34223e5ac06c2e43a791a88afd91718b2ae5c4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM0MjIzZTVhYzA2YzJlNDNhNzkxYTg4YWZkOTE3MThiMmFlNWM0Zg==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2002-02-14T00:09:23Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2002-02-14T00:09:23Z"}, "message": "Removed .s files.\n\nFrom-SVN: r49752", "tree": {"sha": "217389bb6e1b8ccf7bda7724c5589a13afc6d2d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/217389bb6e1b8ccf7bda7724c5589a13afc6d2d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b34223e5ac06c2e43a791a88afd91718b2ae5c4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b34223e5ac06c2e43a791a88afd91718b2ae5c4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b34223e5ac06c2e43a791a88afd91718b2ae5c4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b34223e5ac06c2e43a791a88afd91718b2ae5c4f/comments", "author": null, "committer": null, "parents": [{"sha": "f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f22b4bc43d0fb8af1928d6a702dae4121cf138c2"}], "stats": {"total": 108, "additions": 0, "deletions": 108}, "files": [{"sha": "bae9b5ebfe4117be1c262d8239eb14cbce5eb2ad", "filename": "boehm-gc/mips_sgi_mach_dep.s", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/boehm-gc%2Fmips_sgi_mach_dep.s", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/boehm-gc%2Fmips_sgi_mach_dep.s", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fmips_sgi_mach_dep.s?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,41 +0,0 @@\n-#include <sys/regdef.h>\n-#include <sys/asm.h>\n-\n-# define call_push(x)     move    $4,x;    jal     GC_push_one\n-\n-    .option pic2\n-    .text\n-/* Mark from machine registers that are saved by C compiler */\n-#   define FRAMESZ 32\n-#   define RAOFF FRAMESZ-SZREG\n-#   define GPOFF FRAMESZ-(2*SZREG)\n-    NESTED(GC_push_regs, FRAMESZ, ra)\n-    .mask 0x80000000,-SZREG\t# inform debugger of saved ra loc\n-    move \tt0,gp\n-    SETUP_GPX(t8)\n-    PTR_SUBU\tsp,FRAMESZ\n-#   ifdef SETUP_GP64\n-      SETUP_GP64(GPOFF, GC_push_regs)\n-#   endif\n-    SAVE_GP(GPOFF)\n-    REG_S \tra,RAOFF(sp)\n-#   if (_MIPS_SIM == _MIPS_SIM_ABI32)\n-    \tcall_push($2)\n-    \tcall_push($3)\n-#   endif\n-    call_push($16)\n-    call_push($17)\n-    call_push($18)\n-    call_push($19)\n-    call_push($20)\n-    call_push($21)\n-    call_push($22)\n-    call_push($23)\n-    call_push($30)\n-    REG_L\tra,RAOFF(sp)\n-#   ifdef RESTORE_GP64\n-      RESTORE_GP64\n-#   endif\n-    PTR_ADDU\tsp,FRAMESZ\n-    j\t\tra\n-    .end    GC_push_regs"}, {"sha": "9f3a4b0a99d8e82b9d428ddcd2d33bef985c1561", "filename": "boehm-gc/sparc_mach_dep.s", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/boehm-gc%2Fsparc_mach_dep.s", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22b4bc43d0fb8af1928d6a702dae4121cf138c2/boehm-gc%2Fsparc_mach_dep.s", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fsparc_mach_dep.s?ref=f22b4bc43d0fb8af1928d6a702dae4121cf138c2", "patch": "@@ -1,67 +0,0 @@\n-!\tSPARCompiler 3.0 and later apparently no longer handles\n-!\tasm outside functions.  So we need a separate .s file\n-!\tThis is only set up for SunOS 5, not SunOS 4.\n-!\tAssumes this is called before the stack contents are\n-!\texamined.\n-\n-\t.seg \t\"text\"\n-\t.globl\tGC_save_regs_in_stack\n-\t.globl \tGC_push_regs\n-GC_save_regs_in_stack:\n-GC_push_regs:\n-#if defined(__arch64__) || defined(__sparcv9)\n-\tsave\t%sp,-128,%sp\n-\tflushw\n-\tret\n-\t  restore %sp,2047+128,%o0\n-#else /* 32 bit SPARC */\n-\tta\t0x3   ! ST_FLUSH_WINDOWS\n-\tmov\t%sp,%o0\n-\tretl\n-\tnop\n-#endif /* 32 bit SPARC */\n-.GC_save_regs_in_stack_end:\n-\t.size GC_save_regs_in_stack,.GC_save_regs_in_stack_end-GC_save_regs_in_stack\n-\t\n-\n-\t.globl\tGC_clear_stack_inner\n-GC_clear_stack_inner:\n-#if defined(__arch64__) || defined(__sparcv9)\n-\tmov %sp,%o2\t\t! Save sp\n-\tadd %sp,2047-8,%o3\t! p = sp+bias-8\n-\tadd %o1,-2047-192,%sp\t! Move sp out of the way,\n-  \t\t\t\t! so that traps still work.\n-  \t\t\t\t! Includes some extra words\n-  \t\t\t\t! so we can be sloppy below.\n-loop:\n-\tstx %g0,[%o3]\t\t! *(long *)p = 0\n-\tcmp %o3,%o1\n-\tbgu,pt %xcc, loop\t! if (p > limit) goto loop\n-          asm(\"add %o3,-8,%o3\t! p -= 8 (delay slot)\n-\tretl\n-    \t  mov %o2,%sp\t\t! Restore sp., delay slot\t\n-#else  /* 32 bit SPARC */\n-\tmov\t%sp,%o2\t\t! Save sp\n-\tadd\t%sp,-8,%o3\t! p = sp-8\n-\tclr\t%g1\t\t! [g0,g1] = 0\n-\tadd\t%o1,-0x60,%sp\t! Move sp out of the way,\n-\t\t\t\t! so that traps still work.\n-\t\t\t\t! Includes some extra words\n-\t\t\t\t! so we can be sloppy below.\n-loop:\n-\tstd\t%g0,[%o3]\t! *(long long *)p = 0\n-\tcmp\t%o3,%o1\n-\tbgu\tloop\t\t! if (p > limit) goto loop\n-\t  add\t%o3,-8,%o3\t! p -= 8 (delay slot)\n-\tretl\n-\t  mov\t%o2,%sp\t\t! Restore sp., delay slot\n-#endif  /* 32 bit SPARC */\n-.GC_clear_stack_inner_end:\n-      \t.size GC_clear_stack_inner,.GC_clear_stack_inner_end-GC_clear_stack_inner\n-\n-\t\n-\t\t\n-\t\t\n-\t\t\n-\t\t\n-\t"}]}