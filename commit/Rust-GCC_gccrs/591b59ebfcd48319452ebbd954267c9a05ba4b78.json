{"sha": "591b59ebfcd48319452ebbd954267c9a05ba4b78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTkxYjU5ZWJmY2Q0ODMxOTQ1MmViYmQ5NTQyNjdjOWEwNWJhNGI3OA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-01-22T14:37:18Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-01-23T02:06:45Z"}, "message": "analyzer: fix ICE due to sm-state origin being purged (PR 93382)\n\nThe ICE in PR analyzer/93382 is a validation error.\n\nThe global variable \"idx\" acquires a \"tainted\" state from local array\nn1[0].  When the frame is popped, the svalue for n1[0] is purged, but\nthe \"taint\" sm_state_map's entry for \"idx\" has a svalue_id referencing\nthe now-purged svalue.  This is caught by program_state::validate as an\nassertion failure.\n\nThis patch fixes the issue by resetting the origin id within\nsm_state_map entries for the case where the origin id has been purged.\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/93382\n\t* program-state.cc (sm_state_map::on_svalue_purge): If the\n\tentry survives, but the origin is being purged, then reset the\n\torigin to null.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/93382\n\t* gcc.dg/analyzer/pr93382.c: New test.", "tree": {"sha": "d88634f931c2c79ee54704f59c8f9e86e6ef82f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d88634f931c2c79ee54704f59c8f9e86e6ef82f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/591b59ebfcd48319452ebbd954267c9a05ba4b78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/591b59ebfcd48319452ebbd954267c9a05ba4b78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/591b59ebfcd48319452ebbd954267c9a05ba4b78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/591b59ebfcd48319452ebbd954267c9a05ba4b78/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9c8aef474f4030e9d11d7fb81ad77de2eb5bf3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9c8aef474f4030e9d11d7fb81ad77de2eb5bf3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9c8aef474f4030e9d11d7fb81ad77de2eb5bf3b"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "16613e4f9b9375e5a08af49e9736817a7012443e", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/591b59ebfcd48319452ebbd954267c9a05ba4b78/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/591b59ebfcd48319452ebbd954267c9a05ba4b78/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=591b59ebfcd48319452ebbd954267c9a05ba4b78", "patch": "@@ -1,3 +1,10 @@\n+2020-01-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93382\n+\t* program-state.cc (sm_state_map::on_svalue_purge): If the\n+\tentry survives, but the origin is being purged, then reset the\n+\torigin to null.\n+\n 2020-01-22  David Malcolm  <dmalcolm@redhat.com>\n \n \t* sm-signal.cc: Fix nesting of CHECKING_P and namespace ana."}, {"sha": "ba19ad1490e03507c2c2c9fda0c98b5ae3e71ac6", "filename": "gcc/analyzer/program-state.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/591b59ebfcd48319452ebbd954267c9a05ba4b78/gcc%2Fanalyzer%2Fprogram-state.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/591b59ebfcd48319452ebbd954267c9a05ba4b78/gcc%2Fanalyzer%2Fprogram-state.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fprogram-state.cc?ref=591b59ebfcd48319452ebbd954267c9a05ba4b78", "patch": "@@ -453,6 +453,11 @@ sm_state_map::on_svalue_purge (const state_machine &sm,\n \n \t  to_remove.safe_push (dst_sid);\n \t}\n+      else if ((*iter).second.m_origin.as_int () >= first_unused_sid.as_int ())\n+\t{\n+\t  /* If the origin svalue is being purged, then reset it to null.  */\n+\t  (*iter).second.m_origin = svalue_id::null ();\n+\t}\n     }\n \n   int i;"}, {"sha": "eeeb1209d19b3125a230c461944600e022c969f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/591b59ebfcd48319452ebbd954267c9a05ba4b78/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/591b59ebfcd48319452ebbd954267c9a05ba4b78/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=591b59ebfcd48319452ebbd954267c9a05ba4b78", "patch": "@@ -1,3 +1,8 @@\n+2020-01-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93382\n+\t* gcc.dg/analyzer/pr93382.c: New test.\n+\n 2020-01-22  Andrew Pinski  <apinski@marvell.com>\n \n \t* gcc.dg/tree-ssa/pr88497-1.c: Move to ..."}, {"sha": "7d18d16e4445b50a227d33d356e61f58a43c5621", "filename": "gcc/testsuite/gcc.dg/analyzer/pr93382.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/591b59ebfcd48319452ebbd954267c9a05ba4b78/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr93382.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/591b59ebfcd48319452ebbd954267c9a05ba4b78/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr93382.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr93382.c?ref=591b59ebfcd48319452ebbd954267c9a05ba4b78", "patch": "@@ -0,0 +1,25 @@\n+typedef __SIZE_TYPE__ size_t;\n+\n+int idx;\n+void *fp;\n+\n+size_t\n+fread (void *, size_t, size_t, void *);\n+\n+void\n+ql (void)\n+{\n+  int n1[1];\n+\n+  fread (n1, sizeof (n1[0]), 1, fp); /* { dg-message \"'n1' gets an unchecked value here\" } */\n+  idx = n1[0]; /* { dg-message \"'idx' has an unchecked value here (from 'n1')\" */\n+}\n+\n+int arr[10];\n+\t\n+int\n+pl (void)\n+{\n+  ql ();\n+  return arr[idx]; /* { dg-warning \"use of tainted value 'idx' in array lookup without bounds checking\" } */\n+}"}]}