{"sha": "382995f56c4d9e8a752577d0a4207b09d5802740", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgyOTk1ZjU2YzRkOWU4YTc1MjU3N2QwYTQyMDdiMDlkNTgwMjc0MA==", "commit": {"author": {"name": "Markus Trippelsdorf", "email": "markus@trippelsdorf.de", "date": "2014-09-04T12:37:05Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-09-04T12:37:05Z"}, "message": "re PR ipa/61659 (Extra undefined symbol because of devirtualization)\n\n\tPR ipa/61659\n\t* decl.c (duplicate_decls): Check DECL_DECLARED_INLINE_P on\n\tnewdecl, not olddecl.\n\nFrom-SVN: r214900", "tree": {"sha": "2e5dd8a129c04fbbc2b50a49c3bef60ed158d39a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e5dd8a129c04fbbc2b50a49c3bef60ed158d39a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/382995f56c4d9e8a752577d0a4207b09d5802740", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/382995f56c4d9e8a752577d0a4207b09d5802740", "html_url": "https://github.com/Rust-GCC/gccrs/commit/382995f56c4d9e8a752577d0a4207b09d5802740", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/382995f56c4d9e8a752577d0a4207b09d5802740/comments", "author": null, "committer": null, "parents": [{"sha": "5c153812634ad41f3bb616a77a29db64b6efdb5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c153812634ad41f3bb616a77a29db64b6efdb5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c153812634ad41f3bb616a77a29db64b6efdb5d"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "cce5739a86655d15130b0ad869c6000a50b4797d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382995f56c4d9e8a752577d0a4207b09d5802740/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382995f56c4d9e8a752577d0a4207b09d5802740/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=382995f56c4d9e8a752577d0a4207b09d5802740", "patch": "@@ -1,3 +1,9 @@\n+2014-09-04  Markus Trippelsdorf  <markus@trippelsdorf.de>\n+\n+\tPR ipa/61659\n+\t* decl.c (duplicate_decls): Check DECL_DECLARED_INLINE_P on\n+\tnewdecl, not olddecl.\n+\n 2014-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tDR 1453"}, {"sha": "d8fb35e2123742d7a25d24e4cd5c579468c8cdeb", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382995f56c4d9e8a752577d0a4207b09d5802740/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382995f56c4d9e8a752577d0a4207b09d5802740/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=382995f56c4d9e8a752577d0a4207b09d5802740", "patch": "@@ -2215,7 +2215,7 @@ duplicate_decls (tree newdecl, tree olddecl, bool newdecl_is_friend)\n \t\t      olddecl);\n \n \t  SET_DECL_TEMPLATE_SPECIALIZATION (olddecl);\n-\t  DECL_COMDAT (newdecl) = DECL_DECLARED_INLINE_P (olddecl);\n+\t  DECL_COMDAT (newdecl) = DECL_DECLARED_INLINE_P (newdecl);\n \n \t  /* Don't propagate visibility from the template to the\n \t     specialization here.  We'll do that in determine_visibility if"}, {"sha": "6f06f14958474cff2e15e77113f86185bc47890c", "filename": "gcc/testsuite/g++.dg/template/spec38.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382995f56c4d9e8a752577d0a4207b09d5802740/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382995f56c4d9e8a752577d0a4207b09d5802740/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec38.C?ref=382995f56c4d9e8a752577d0a4207b09d5802740", "patch": "@@ -0,0 +1,6 @@\n+// PR ipa/61659\n+\n+// { dg-final { scan-assembler \"_Z1fIiEvPT_\" } }\n+\n+template <typename T> inline void f (T *);\n+template <> void f (int *) { }"}]}