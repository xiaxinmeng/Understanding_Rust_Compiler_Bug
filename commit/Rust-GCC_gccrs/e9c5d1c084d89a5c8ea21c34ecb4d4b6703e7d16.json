{"sha": "e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTljNWQxYzA4NGQ4OWE1YzhlYTIxYzM0ZWNiNGQ0YjY3MDNlN2QxNg==", "commit": {"author": {"name": "David Ayers", "email": "d.ayers@inode.at", "date": "2004-06-07T08:48:31Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2004-06-07T08:48:31Z"}, "message": "objc.exp (objc_target_compile): Revert the '-framework Foundation' flag fix...\n\n[gcc/testsuite/ChangeLog]\n2004-06-07  David Ayers  <d.ayers@inode.at>\n\t    Ziemowit Laski  <zlaski@apple.com>\n\n\t* lib/objc.exp (objc_target_compile): Revert the '-framework\n\tFoundation' flag fix, since bare Darwin does not ship\n\twith the Foundation framework.\n\t* objc/execute/next_mapping.h: Provide a local NSConstantString\n\t@interface and @implementation.\n\t(objc_constant_string_init): A constructor function, used to\n\tinitialize the NSConstantString meta-class object.\n\t* objc/execute/string1.m: Include \"next_mapping.h\" instead of\n\t<Foundation/NSString.h>.\n\t* objc/execute/string2.m: Likewise.\n\t* objc/execute/string3.m: Likewise.\n\t* objc/execute/string4.m: Likewise.\n\nCo-Authored-By: Ziemowit Laski <zlaski@apple.com>\n\nFrom-SVN: r82685", "tree": {"sha": "9d3fadc84b3f1fc1ecb1276a82fc5e1d092a04b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d3fadc84b3f1fc1ecb1276a82fc5e1d092a04b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16/comments", "author": null, "committer": null, "parents": [{"sha": "2af5538b14e4149ad9e09c3ef1a0ee4735cafb80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2af5538b14e4149ad9e09c3ef1a0ee4735cafb80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2af5538b14e4149ad9e09c3ef1a0ee4735cafb80"}], "stats": {"total": 85, "additions": 71, "deletions": 14}, "files": [{"sha": "55cd0942b3e393a81251fe6c355a198c533c3bfc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16", "patch": "@@ -1,3 +1,19 @@\n+2004-06-07  David Ayers  <d.ayers@inode.at>\n+\t    Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* lib/objc.exp (objc_target_compile): Revert the '-framework\n+\tFoundation' flag fix, since bare Darwin does not ship\n+\twith the Foundation framework.\n+\t* objc/execute/next_mapping.h: Provide a local NSConstantString\n+\t@interface and @implementation.\n+\t(objc_string_init): A constructor function, used to initialize\n+\tthe NSConstantString meta-class object.\n+\t* objc/execute/string1.m: Include \"next_mapping.h\" instead of\n+\t<Foundation/NSString.h>.\n+\t* objc/execute/string2.m: Likewise.\n+\t* objc/execute/string3.m: Likewise.\n+\t* objc/execute/string4.m: Likewise.\n+\n 2004-06-06  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.c-torture/execute/ieee/fp-cmp-4.c (FLOAT): New. Default"}, {"sha": "1b6c10d60fec80f29023d99167ddd78d22fb1dfb", "filename": "gcc/testsuite/lib/objc.exp", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobjc.exp?ref=e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16", "patch": "@@ -144,7 +144,6 @@ proc objc_target_compile { source dest type options } {\n     global TOOL_OPTIONS\n     global ld_library_path\n     global objc_libgcc_s_path\n-    global target_triplet\n \n     set ld_library_path \".:${objc_libgcc_s_path}\"\n     lappend options \"libs=-lobjc\"\n@@ -183,14 +182,6 @@ proc objc_target_compile { source dest type options } {\n \tlappend options \"additional_flags=${objc_link_flags}\"\n \tappend ld_library_path \":${libobjc_dir}\"\n     }\n-\n-    # If we are running on Darwin, we'll need to point the linker at \n-    # the Foundation framework, where many goodies (e.g., NSConstantString)\n-    # reside.\n-    if { [string match \"*-*-darwin*\" $target_triplet] } {\n-\tlappend options \"libs=-framework Foundation\"\n-    }\n-\n     lappend options \"compiler=$OBJC_UNDER_TEST\"\n \n     # On IRIX 6, we have to set variables akin to LD_LIBRARY_PATH, but"}, {"sha": "0a361896e125c294fb2f24a15ece5ff1c01836ef", "filename": "gcc/testsuite/objc/execute/next_mapping.h", "status": "modified", "additions": 51, "deletions": 1, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fnext_mapping.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fnext_mapping.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fnext_mapping.h?ref=e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16", "patch": "@@ -1,10 +1,12 @@\n /* This file \"renames\" various ObjC GNU runtime entry points\n    (and fakes the existence of several others)\n    if the NeXT runtime is being used.  */\n-/* Author: Ziemowit Laski <zlaski@apple.com>  */\n+/* Authors: Ziemowit Laski <zlaski@apple.com>  */\n+/*\t    David Ayers <d.ayers@inode.at>  */\n \n #ifdef __NEXT_RUNTIME__\n #include <objc/objc-class.h>\n+#include <objc/Object.h>\n #include <ctype.h>\n \n #define objc_get_class(C)\t\t\tobjc_getClass(C)\n@@ -848,4 +850,52 @@ void objc_layout_structure_get_info (struct objc_struct_layout *layout,\n     *type = layout->prev_type;\n }\n \n+/* A small, portable NSConstantString implementation for use with the NeXT\n+   runtime.\n+   \n+   On full-fledged Mac OS X systems, NSConstantString is provided\n+   as part of the Foundation framework.  However, on bare Darwin systems,\n+   Foundation is not included, and hence there is no NSConstantString \n+   implementation to link against.\n+\n+   This code is derived from the GNU runtime's NXConstantString implementation.\n+*/\n+\n+struct objc_class _NSConstantStringClassReference;\n+\n+@interface NSConstantString : Object\n+{\n+  char *c_string;\n+  unsigned int len;\n+}\n+\n+-(const char *) cString;\n+-(unsigned int) length;\n+\n+@end\n+\n+@implementation NSConstantString\n+\n+-(const char *) cString\n+{\n+  return (c_string);\n+}\n+\n+-(unsigned int) length\n+{\n+  return (len);\n+}\n+\n+@end\n+\n+/* The NSConstantString metaclass will need to be initialized before we can\n+   send messages to strings.  */\n+\n+void objc_constant_string_init (void) __attribute__((constructor));\n+void objc_constant_string_init (void) {\n+  memcpy (&_NSConstantStringClassReference,\n+\t  objc_getClass (\"NSConstantString\"),\n+\t  sizeof (_NSConstantStringClassReference));\n+}\n+\n #endif  /* #ifdef __NEXT_RUNTIME__ */"}, {"sha": "ac49bd1f4f38081b957ef0ecd40539e53673cad8", "filename": "gcc/testsuite/objc/execute/string1.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fstring1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fstring1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fstring1.m?ref=e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16", "patch": "@@ -4,7 +4,7 @@\n #include <stdlib.h>\n \n #ifdef __NEXT_RUNTIME__\n-#import <Foundation/NSString.h>\n+#include \"next_mapping.h\"\n #else\n #include <objc/NXConstStr.h>\n #endif"}, {"sha": "63b0e9b8056d190864ffe09adb08ce952061dd37", "filename": "gcc/testsuite/objc/execute/string2.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fstring2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fstring2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fstring2.m?ref=e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16", "patch": "@@ -4,7 +4,7 @@\n #include <stdlib.h>\n \n #ifdef __NEXT_RUNTIME__\n-#import <Foundation/NSString.h>\n+#include \"next_mapping.h\"\n #else\n #include <objc/NXConstStr.h>\n #endif"}, {"sha": "442952478b7fa519b8e4e3f00a3fedfcb1156848", "filename": "gcc/testsuite/objc/execute/string3.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fstring3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fstring3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fstring3.m?ref=e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16", "patch": "@@ -4,7 +4,7 @@\n #include <stdlib.h>\n \n #ifdef __NEXT_RUNTIME__\n-#import <Foundation/NSString.h>\n+#include \"next_mapping.h\"\n #else\n #include <objc/NXConstStr.h>\n #endif"}, {"sha": "87b081c084dc0574a9eadc77524d2f393a17ef70", "filename": "gcc/testsuite/objc/execute/string4.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fstring4.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fstring4.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fstring4.m?ref=e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16", "patch": "@@ -4,7 +4,7 @@\n #include <stdlib.h>\n \n #ifdef __NEXT_RUNTIME__\n-#import <Foundation/NSString.h>\n+#include \"next_mapping.h\"\n #else\n #include <objc/NXConstStr.h>\n #endif"}]}