{"sha": "ac4d87c25e2550b86717151fd2594dfe14373d27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM0ZDg3YzI1ZTI1NTBiODY3MTcxNTFmZDI1OTRkZmUxNDM3M2QyNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-13T13:06:04Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-13T17:33:29Z"}, "message": "Fix typo in invoke.texi.", "tree": {"sha": "c57d4a2eae6b9e3b66617b91c15ab7c3b37ccabe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c57d4a2eae6b9e3b66617b91c15ab7c3b37ccabe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac4d87c25e2550b86717151fd2594dfe14373d27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac4d87c25e2550b86717151fd2594dfe14373d27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac4d87c25e2550b86717151fd2594dfe14373d27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac4d87c25e2550b86717151fd2594dfe14373d27/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d77686d2eddf76d3498169d0ca5653db45a8662", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d77686d2eddf76d3498169d0ca5653db45a8662", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d77686d2eddf76d3498169d0ca5653db45a8662"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fe92e8560581c25c779046c7b302b8d353662c53", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4d87c25e2550b86717151fd2594dfe14373d27/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4d87c25e2550b86717151fd2594dfe14373d27/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ac4d87c25e2550b86717151fd2594dfe14373d27", "patch": "@@ -9287,7 +9287,7 @@ advantage of this; if your code relies on the value of the object\n storage persisting beyond the lifetime of the object, you can use this\n flag to disable this optimization.  To preserve stores before the\n constructor starts (e.g.@: because your operator new clears the object\n-storage) but still treat the object as dead after the destructor you,\n+storage) but still treat the object as dead after the destructor, you\n can use @option{-flifetime-dse=1}.  The default behavior can be\n explicitly selected with @option{-flifetime-dse=2}.\n @option{-flifetime-dse=0} is equivalent to @option{-fno-lifetime-dse}."}]}