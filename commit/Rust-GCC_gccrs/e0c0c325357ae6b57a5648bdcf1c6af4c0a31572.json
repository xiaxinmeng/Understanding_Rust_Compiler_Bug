{"sha": "e0c0c325357ae6b57a5648bdcf1c6af4c0a31572", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBjMGMzMjUzNTdhZTZiNTdhNTY0OGJkY2YxYzZhZjRjMGEzMTU3Mg==", "commit": {"author": {"name": "Sebastian Pop", "email": "s.pop@samsung.com", "date": "2014-08-28T16:43:55Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2014-08-28T16:43:55Z"}, "message": "check functionality of isl version 0.12\n\n\t* config/isl.m4 (_ISL_CHECK_CT_PROG): Removed.\n\t(ISL_CHECK_VERSION): Check for functionality added to ISL 0.12 instead\n\tof checking for version number.\n\t* configure: Regenerated.\n\t* configure.ac (ISL_CHECK_VERSION): Do not use ISL version number.\n\nFrom-SVN: r214683", "tree": {"sha": "19d5d3c6ef64cc92526779c7ac07dcaff82bcdd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19d5d3c6ef64cc92526779c7ac07dcaff82bcdd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0c0c325357ae6b57a5648bdcf1c6af4c0a31572", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0c0c325357ae6b57a5648bdcf1c6af4c0a31572", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0c0c325357ae6b57a5648bdcf1c6af4c0a31572", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0c0c325357ae6b57a5648bdcf1c6af4c0a31572/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d594ac83d9f0528b3f3b6429f437a47a40530aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d594ac83d9f0528b3f3b6429f437a47a40530aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d594ac83d9f0528b3f3b6429f437a47a40530aa"}], "stats": {"total": 118, "additions": 19, "deletions": 99}, "files": [{"sha": "b2d59cc59be413acff205e0d3544340a87bc419f", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c0c325357ae6b57a5648bdcf1c6af4c0a31572/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c0c325357ae6b57a5648bdcf1c6af4c0a31572/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=e0c0c325357ae6b57a5648bdcf1c6af4c0a31572", "patch": "@@ -1,3 +1,11 @@\n+2014-08-27  Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* config/isl.m4 (_ISL_CHECK_CT_PROG): Removed.\n+\t(ISL_CHECK_VERSION): Check for functionality added to ISL 0.12 instead\n+\tof checking for version number.\n+\t* configure: Regenerated.\n+\t* configure.ac (ISL_CHECK_VERSION): Do not use ISL version number.\n+\n 2014-08-27  David Malcolm  <dmalcolm@redhat.com>\n \n \t* rtx-classes-status.txt: Phase 5 (additional rtx_def subclasses)"}, {"sha": "0eece37bc9a5bd2ffb51b51e9800bc1479a4bce7", "filename": "config/isl.m4", "status": "modified", "additions": 5, "deletions": 21, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c0c325357ae6b57a5648bdcf1c6af4c0a31572/config%2Fisl.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c0c325357ae6b57a5648bdcf1c6af4c0a31572/config%2Fisl.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fisl.m4?ref=e0c0c325357ae6b57a5648bdcf1c6af4c0a31572", "patch": "@@ -93,20 +93,9 @@ AC_DEFUN([ISL_REQUESTED],\n ]\n )\n \n-# _ISL_CHECK_CT_PROG(MAJOR, MINOR)\n-# --------------------------------------------\n-# Helper for verifying ISL compile time version.\n-m4_define([_ISL_CHECK_CT_PROG],[AC_LANG_PROGRAM(\n-  [#include <isl/version.h>\n-   #include <string.h>],\n-  [if (strncmp (isl_version (), \"isl-$1.$2\", strlen (\"isl-$1.$2\")) != 0)\n-     return 1;\n-   ])])\n-\n-# ISL_CHECK_VERSION ISL_CHECK_VERSION (MAJOR, MINOR)\n+# ISL_CHECK_VERSION ISL_CHECK_VERSION ()\n # ----------------------------------------------------------------\n-# Test the found ISL to be exact of version MAJOR.MINOR and at least\n-# REVISION.\n+# Test that ISL contains functionality added to the minimum expected version.\n AC_DEFUN([ISL_CHECK_VERSION],\n [\n   if test \"${ENABLE_ISL_CHECK}\" = yes ; then\n@@ -118,15 +107,10 @@ AC_DEFUN([ISL_CHECK_VERSION],\n     LDFLAGS=\"${_isl_saved_LDFLAGS} ${isllibs}\"\n     LIBS=\"${_isl_saved_LIBS} -lisl\"\n \n-    AC_MSG_CHECKING([for version $1.$2 of ISL])\n-    AC_RUN_IFELSE([_ISL_CHECK_CT_PROG($1,$2)],\n+    AC_MSG_CHECKING([for compatible ISL])\n+    AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <isl/val.h>]], [[;]])],\n \t[gcc_cv_isl=yes],\n-\t[gcc_cv_isl=no],\n-\t[\n-\t  AC_LINK_IFELSE([_ISL_CHECK_CT_PROG($1,$2)],\n-\t      [gcc_cv_isl=yes],\n-\t      [gcc_cv_isl=no])\n-\t])\n+\t[gcc_cv_isl=no])\n     AC_MSG_RESULT([$gcc_cv_isl])\n \n     CFLAGS=$_isl_saved_CFLAGS"}, {"sha": "55fca62a5d6d59c5ea17e2dc56229a247755a774", "filename": "configure", "status": "modified", "additions": 5, "deletions": 77, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c0c325357ae6b57a5648bdcf1c6af4c0a31572/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c0c325357ae6b57a5648bdcf1c6af4c0a31572/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=e0c0c325357ae6b57a5648bdcf1c6af4c0a31572", "patch": "@@ -1874,48 +1874,6 @@ fi\n   return $ac_retval\n \n } # ac_fn_c_try_link\n-\n-# ac_fn_c_try_run LINENO\n-# ----------------------\n-# Try to link conftest.$ac_ext, and return whether this succeeded. Assumes\n-# that executables *can* be run.\n-ac_fn_c_try_run ()\n-{\n-  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n-  if { { ac_try=\"$ac_link\"\n-case \"(($ac_try\" in\n-  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n-  *) ac_try_echo=$ac_try;;\n-esac\n-eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n-$as_echo \"$ac_try_echo\"; } >&5\n-  (eval \"$ac_link\") 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; } && { ac_try='./conftest$ac_exeext'\n-  { { case \"(($ac_try\" in\n-  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n-  *) ac_try_echo=$ac_try;;\n-esac\n-eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n-$as_echo \"$ac_try_echo\"; } >&5\n-  (eval \"$ac_try\") 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; }; }; then :\n-  ac_retval=0\n-else\n-  $as_echo \"$as_me: program exited with status $ac_status\" >&5\n-       $as_echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-       ac_retval=$ac_status\n-fi\n-  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n-  eval $as_lineno_stack; test \"x$as_lineno_stack\" = x && { as_lineno=; unset as_lineno;}\n-  return $ac_retval\n-\n-} # ac_fn_c_try_run\n cat >config.log <<_ACEOF\n This file contains any messages produced by compilers while\n running configure, to aid debugging if configure makes a mistake.\n@@ -5904,20 +5862,15 @@ $as_echo \"$as_me: WARNING: using in-tree ISL, disabling version check\" >&2;}\n     LDFLAGS=\"${_isl_saved_LDFLAGS} ${isllibs}\"\n     LIBS=\"${_isl_saved_LIBS} -lisl\"\n \n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for version 0.12 of ISL\" >&5\n-$as_echo_n \"checking for version 0.12 of ISL... \" >&6; }\n-    if test \"$cross_compiling\" = yes; then :\n-\n-\t  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for compatible ISL\" >&5\n+$as_echo_n \"checking for compatible ISL... \" >&6; }\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n-#include <isl/version.h>\n-   #include <string.h>\n+#include <isl/val.h>\n int\n main ()\n {\n-if (strncmp (isl_version (), \"isl-0.12\", strlen (\"isl-0.12\")) != 0)\n-     return 1;\n-\n+;\n   ;\n   return 0;\n }\n@@ -5929,31 +5882,6 @@ else\n fi\n rm -f core conftest.err conftest.$ac_objext \\\n     conftest$ac_exeext conftest.$ac_ext\n-\n-else\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-#include <isl/version.h>\n-   #include <string.h>\n-int\n-main ()\n-{\n-if (strncmp (isl_version (), \"isl-0.12\", strlen (\"isl-0.12\")) != 0)\n-     return 1;\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_run \"$LINENO\"; then :\n-  gcc_cv_isl=yes\n-else\n-  gcc_cv_isl=no\n-fi\n-rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n-  conftest.$ac_objext conftest.beam conftest.$ac_ext\n-fi\n-\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_isl\" >&5\n $as_echo \"$gcc_cv_isl\" >&6; }\n "}, {"sha": "2dc657f0f6a238cc6de537fe02e1a3a6f68e5a27", "filename": "configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c0c325357ae6b57a5648bdcf1c6af4c0a31572/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c0c325357ae6b57a5648bdcf1c6af4c0a31572/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=e0c0c325357ae6b57a5648bdcf1c6af4c0a31572", "patch": "@@ -1652,7 +1652,7 @@ if test \"x$with_isl\" != \"xno\"; then\n   dnl with user input.\n   ISL_INIT_FLAGS\n   dnl The versions of ISL that work for Graphite\n-  ISL_CHECK_VERSION(0,12)\n+  ISL_CHECK_VERSION()\n   dnl Only execute fail-action, if ISL has been requested.\n   ISL_IF_FAILED([\n     AC_MSG_ERROR([Unable to find a usable ISL.  See config.log for details.])])"}]}