{"sha": "02ba24b7f45adfd882043fb1d8882dfde85f5067", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJiYTI0YjdmNDVhZGZkODgyMDQzZmIxZDg4ODJkZmRlODVmNTA2Nw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1991-12-24T04:01:31Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1991-12-24T04:01:31Z"}, "message": "entered into RCS\n\nFrom-SVN: r135", "tree": {"sha": "4ccbe16bb9ed5c13fbb30b31626f9dfb5242da09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ccbe16bb9ed5c13fbb30b31626f9dfb5242da09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02ba24b7f45adfd882043fb1d8882dfde85f5067", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ba24b7f45adfd882043fb1d8882dfde85f5067", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02ba24b7f45adfd882043fb1d8882dfde85f5067", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ba24b7f45adfd882043fb1d8882dfde85f5067/comments", "author": null, "committer": null, "parents": [{"sha": "941d35a7f50707e17e7a392e493c98da620fddb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/941d35a7f50707e17e7a392e493c98da620fddb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/941d35a7f50707e17e7a392e493c98da620fddb4"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "5ad85c41da0fd576a380214bfb4b12100efdf7d1", "filename": "gcc/objc/objc-act.h", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ba24b7f45adfd882043fb1d8882dfde85f5067/gcc%2Fobjc%2Fobjc-act.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ba24b7f45adfd882043fb1d8882dfde85f5067/gcc%2Fobjc%2Fobjc-act.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.h?ref=02ba24b7f45adfd882043fb1d8882dfde85f5067", "patch": "@@ -0,0 +1,102 @@\n+/* Declarations for objc-actions.c.\n+   Copyright (C) 1990 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+\n+/*** Public Interface (procedures) ***/\n+\n+/* used by compile_file */\n+\n+void init_objc (), finish_objc ();\n+\n+/* used by yyparse */\n+\n+tree start_class ();\n+tree continue_class ();\n+void finish_class ();\n+void start_method_def ();\n+void continue_method_def ();\n+void finish_method_def ();\n+void add_objc_decls ();\n+\n+tree is_ivar ();\n+int  is_public ();\n+tree add_instance_variable ();\n+tree add_class_method ();\n+tree add_instance_method ();\n+tree get_super_receiver ();\n+tree get_class_ivars ();\n+tree get_class_reference ();\n+tree get_static_reference ();\n+\n+tree build_message_expr ();\n+tree build_selector_expr ();\n+tree build_ivar_reference ();\n+tree build_keyword_decl ();\n+tree build_method_decl ();\n+\n+/* Nonzero enables objc features.  */\n+\n+extern int doing_objc_thang;\n+\n+/* the following routines are used to implement statically typed objects */\n+\n+tree lookup_interface ();\n+int  objc_comptypes ();\n+void objc_check_decl ();\n+\n+/* NeXT extensions */\n+\n+tree build_encode_expr ();\n+\n+/* used by rest_of_compilation.  */\n+\n+void genPrototype ();\n+\n+/* Objective-C structures */\n+\n+/* KEYWORD_DECL */\n+#define KEYWORD_KEY_NAME(DECL) ((DECL)->decl.name)\n+#define KEYWORD_ARG_NAME(DECL) ((DECL)->decl.arguments)\n+\n+/* INSTANCE_METHOD_DECL, CLASS_METHOD_DECL */\n+#define METHOD_SEL_NAME(DECL) ((DECL)->decl.name)\n+#define METHOD_SEL_ARGS(DECL) ((DECL)->decl.arguments)\n+#define METHOD_ADD_ARGS(DECL) ((DECL)->decl.result)\n+#define METHOD_DEFINITION(DECL) ((DECL)->decl.initial)\n+#define METHOD_ENCODING(DECL) ((DECL)->decl.context)\n+\n+/* INTERFACE_TYPE, IMPLEMENTATION_TYPE, CATEGORY_TYPE */\n+#define CLASS_NAME(CLASS) ((CLASS)->type.name)\n+#define CLASS_SUPER_NAME(CLASS) ((CLASS)->type.binfo)\n+#define CLASS_IVARS(CLASS) ((CLASS)->type.maxval)\n+#define CLASS_RAW_IVARS(CLASS) ((CLASS)->type.noncopied_parts)\n+#define CLASS_NST_METHODS(CLASS) ((CLASS)->type.next_variant)\n+#define CLASS_CLS_METHODS(CLASS) ((CLASS)->type.main_variant)\n+#define CLASS_STATIC_TEMPLATE(CLASS) ((CLASS)->type.context)\n+#define CLASS_CATEGORY_LIST(CLASS) ((CLASS)->type.minval)\n+\n+/* Define the Objective-C language-specific tree codes.  */\n+\n+#define DEFTREECODE(SYM, NAME, TYPE, LENGTH) SYM,\n+enum objc_tree_code {\n+  dummy_tree_code = LAST_AND_UNUSED_TREE_CODE,\n+#include \"objc-tree.def\"\n+  LAST_OBJC_TREE_CODE\n+};\n+#undef DEFTREECODE"}]}