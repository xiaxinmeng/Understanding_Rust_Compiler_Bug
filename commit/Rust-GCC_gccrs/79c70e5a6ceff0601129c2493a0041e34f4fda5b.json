{"sha": "79c70e5a6ceff0601129c2493a0041e34f4fda5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzljNzBlNWE2Y2VmZjA2MDExMjljMjQ5M2EwMDQxZTM0ZjRmZGE1Yg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-11-19T19:59:10Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-11-19T19:59:10Z"}, "message": "target-supports.exp (check_visibility_available): Really test the compiler.\n\n2004-11-19  Mark Mitchell  <mark@codesourcery.com>\n            Joseph Myers  <joseph@codesourcery.com>\n\n\t* lib/target-supports.exp (check_visibility_available): Really\n\ttest the compiler.\n\nCo-Authored-By: Joseph Myers <joseph@codesourcery.com>\n\nFrom-SVN: r90937", "tree": {"sha": "e69e64e1765d1a9d385782fed992cf589fb4fdf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e69e64e1765d1a9d385782fed992cf589fb4fdf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79c70e5a6ceff0601129c2493a0041e34f4fda5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79c70e5a6ceff0601129c2493a0041e34f4fda5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79c70e5a6ceff0601129c2493a0041e34f4fda5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79c70e5a6ceff0601129c2493a0041e34f4fda5b/comments", "author": null, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72c4e4db032ca8db78174fba663b83409e5d4484", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72c4e4db032ca8db78174fba663b83409e5d4484", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72c4e4db032ca8db78174fba663b83409e5d4484"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "07d05d2425b32d66ce8e39d39fc24f6511334501", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c70e5a6ceff0601129c2493a0041e34f4fda5b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c70e5a6ceff0601129c2493a0041e34f4fda5b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=79c70e5a6ceff0601129c2493a0041e34f4fda5b", "patch": "@@ -1,3 +1,9 @@\n+2004-11-19  Mark Mitchell  <mark@codesourcery.com>\n+            Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* lib/target-supports.exp (check_visibility_available): Really\n+\ttest the compiler.\n+\n 2004-11-19  Dorit Naishlos  <dorit@il.ibm.com>\n \n \tPR tree-opt/18181"}, {"sha": "e26cd362bb51b7595fbde8b4390da72131aeadba", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c70e5a6ceff0601129c2493a0041e34f4fda5b/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c70e5a6ceff0601129c2493a0041e34f4fda5b/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=79c70e5a6ceff0601129c2493a0041e34f4fda5b", "patch": "@@ -97,30 +97,30 @@ proc check_weak_available { } {\n ###############################\n \n # The visibility attribute is only support in some object formats\n-# This proc returns 1 if it is supported, 0 if not, -1 if unsure.\n+# This proc returns 1 if it is supported, 0 if not.\n \n proc check_visibility_available { } {\n+    global visibility_available_saved\n+    global tool\n     global target_triplet\n-    global target_cpu\n \n     # On NetWare, support makes no sense.\n-    \n     if { [string match \"*-*-netware*\" $target_triplet] } {\n         return 0\n     }\n \n-    # ELF supports it if the system has recent GNU ld and gas.\n-    # As a start we return 1 for all ELF systems; we'll let people\n-    # add exceptions as necessary.\n-\n-    set objformat [gcc_target_object_format]\n-\n-    switch $objformat {\n-        elf      { return 1 }\n-        mach-o   { return 1 }\n-        unknown  { return -1 }\n-        default  { return 0 }\n+    if {![info exists visibility_available_saved] } {\n+\tset lines [get_compiler_messages visibility object {\n+\t    void f() __attribute__((visibility(\"hidden\")));\n+\t    void f() {}\n+\t}]\n+\tif [string match \"\" $lines] then {\n+\t    set visibility_available_saved 1\n+\t} else {\n+\t    set visibility_available_saved 0\n+\t}\n     }\n+    return $visibility_available_saved\n }\n \n ###############################"}]}