{"sha": "6592d14b43d21382d7876484d3ba90ba650fbc6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU5MmQxNGI0M2QyMTM4MmQ3ODc2NDg0ZDNiYTkwYmE2NTBmYmM2ZQ==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2015-12-17T14:09:26Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2015-12-17T14:09:26Z"}, "message": "Add a flag to control the balance between GNAT encodings and std. DWARF\n\nIn order to accomodate the debugger's support evolution for \"new\" DWARF\nconstructs, we need to have an flag that controls the amount of GNAT\nencodings/standard DWARF information that is emitted in the debug info.\nPropagate this new parameter into the Ada front-end.\n\ngcc/ChangeLog:\n\n\t* common.opt (gnat_encodings): New variable\n\t(dwarf_gnat_encodings): New enum type.\n\t(fgnat_encodings): New option.\n\t* flag-types.h (enum dwarf_gnat_encodings): New.\n\ngcc/ada/ChangeLog:\n\n\t* gcc-interface/misc.c (gnat_encodings): Undefine macro and\n\tdeclare a global variable.\n\t(gnat_post_options): Initialize this global from options.\n\nFrom-SVN: r231761", "tree": {"sha": "d3c4a684ec8da4b8efa794c5eccd75c8af29e425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3c4a684ec8da4b8efa794c5eccd75c8af29e425"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6592d14b43d21382d7876484d3ba90ba650fbc6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6592d14b43d21382d7876484d3ba90ba650fbc6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6592d14b43d21382d7876484d3ba90ba650fbc6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6592d14b43d21382d7876484d3ba90ba650fbc6e/comments", "author": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70decafb4d3a0286fe03abee93d700a174488506", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70decafb4d3a0286fe03abee93d700a174488506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70decafb4d3a0286fe03abee93d700a174488506"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "c55482b6a0b030f03cc168313a9212a6cf64ad45", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6592d14b43d21382d7876484d3ba90ba650fbc6e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6592d14b43d21382d7876484d3ba90ba650fbc6e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6592d14b43d21382d7876484d3ba90ba650fbc6e", "patch": "@@ -1,3 +1,10 @@\n+2015-12-17  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* common.opt (gnat_encodings): New variable\n+\t(dwarf_gnat_encodings): New enum type.\n+\t(fgnat_encodings): New option.\n+\t* flag-types.h (enum dwarf_gnat_encodings): New.\n+\n 2015-12-17  Christian Bruel  <christian.bruel@st.com>\n \n \t* tree.h (TYPE_MODE_RAW): New macro."}, {"sha": "4d802d20b1a14b95c79214fdbfc011facb02aebc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6592d14b43d21382d7876484d3ba90ba650fbc6e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6592d14b43d21382d7876484d3ba90ba650fbc6e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6592d14b43d21382d7876484d3ba90ba650fbc6e", "patch": "@@ -1,3 +1,9 @@\n+2015-12-17  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* gcc-interface/misc.c (gnat_encodings): Undefine macro and\n+\tdeclare a global variable.\n+\t(gnat_post_options): Initialize this global from options.\n+\n 2015-12-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/48013"}, {"sha": "ef0fe3f0daf734ba9a4f72df9fb650145b8e192f", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6592d14b43d21382d7876484d3ba90ba650fbc6e/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6592d14b43d21382d7876484d3ba90ba650fbc6e/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=6592d14b43d21382d7876484d3ba90ba650fbc6e", "patch": "@@ -68,7 +68,8 @@ extern const char **gnat_argv;\n \n /* Ada code requires variables for these settings rather than elements\n    of the global_options structure because they are imported.  */\n-int gnat_encodings = 0;\n+#undef gnat_encodings\n+enum dwarf_gnat_encodings gnat_encodings = DWARF_GNAT_ENCODINGS_DEFAULT;\n \n #undef optimize\n int optimize;\n@@ -276,6 +277,7 @@ gnat_post_options (const char **pfilename ATTRIBUTE_UNUSED)\n \t\t\"supported anymore\");\n \n   /* Copy global settings to local versions.  */\n+  gnat_encodings = global_options.x_gnat_encodings;\n   optimize = global_options.x_optimize;\n   optimize_size = global_options.x_optimize_size;\n   flag_compare_debug = global_options.x_flag_compare_debug;"}, {"sha": "d66013aa5612cc170ac74c3b85300e6a5c4b26ce", "filename": "gcc/common.opt", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6592d14b43d21382d7876484d3ba90ba650fbc6e/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6592d14b43d21382d7876484d3ba90ba650fbc6e/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=6592d14b43d21382d7876484d3ba90ba650fbc6e", "patch": "@@ -167,6 +167,11 @@ bool flag_stack_usage_info = false\n Variable\n int flag_debug_asm\n \n+\n+; Balance between GNAT encodings and standard DWARF to emit.\n+Variable\n+enum dwarf_gnat_encodings gnat_encodings = DWARF_GNAT_ENCODINGS_DEFAULT\n+\n ; -dP causes the rtl to be emitted as a comment in assembly.\n Variable\n int flag_dump_rtl_in_asm\n@@ -1337,6 +1342,22 @@ Common Report Var(flag_gcse_after_reload) Optimization\n Perform global common subexpression elimination after register allocation has\n finished.\n \n+Enum\n+Name(dwarf_gnat_encodings) Type(int)\n+\n+EnumValue\n+Enum(dwarf_gnat_encodings) String(all) Value(DWARF_GNAT_ENCODINGS_ALL)\n+\n+EnumValue\n+Enum(dwarf_gnat_encodings) String(gdb) Value(DWARF_GNAT_ENCODINGS_GDB)\n+\n+EnumValue\n+Enum(dwarf_gnat_encodings) String(minimal) Value(DWARF_GNAT_ENCODINGS_MINIMAL)\n+\n+fgnat-encodings=\n+Common Enum(dwarf_gnat_encodings) Joined RejectNegative Report Undocumented Var(gnat_encodings)\n+-fgnat-encodings=[all|gdb|minimal]\tSelect the balance between GNAT encodings and standard DWARF emitted in the debug information\n+\n ; This option is not documented yet as its semantics will change.\n fgraphite\n Common Report Var(flag_graphite) Optimization"}, {"sha": "35836272c2b20baa16c74f61a16774d0fbd2eb50", "filename": "gcc/defaults.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6592d14b43d21382d7876484d3ba90ba650fbc6e/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6592d14b43d21382d7876484d3ba90ba650fbc6e/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=6592d14b43d21382d7876484d3ba90ba650fbc6e", "patch": "@@ -1488,4 +1488,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #endif /* GCC_INSN_FLAGS_H  */\n \n+#ifndef DWARF_GNAT_ENCODINGS_DEFAULT\n+#define DWARF_GNAT_ENCODINGS_DEFAULT DWARF_GNAT_ENCODINGS_GDB\n+#endif\n+\n #endif  /* ! GCC_DEFAULTS_H */"}, {"sha": "c81a8a2465c9db6a44019c507fbae5492da01e33", "filename": "gcc/flag-types.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6592d14b43d21382d7876484d3ba90ba650fbc6e/gcc%2Fflag-types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6592d14b43d21382d7876484d3ba90ba650fbc6e/gcc%2Fflag-types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflag-types.h?ref=6592d14b43d21382d7876484d3ba90ba650fbc6e", "patch": "@@ -91,6 +91,21 @@ enum debug_struct_file\n   DINFO_STRUCT_FILE_ANY     /* Debug structs defined in all files. */\n };\n \n+/* Balance between GNAT encodings and standard DWARF to emit.  */\n+\n+enum dwarf_gnat_encodings\n+{\n+  DWARF_GNAT_ENCODINGS_ALL = 0,\t    /* Emit all GNAT encodings, then emit as\n+\t\t\t\t       much standard DWARF as possible so it\n+\t\t\t\t       does not conflict with GNAT\n+\t\t\t\t       encodings.  */\n+  DWARF_GNAT_ENCODINGS_GDB = 1,\t    /* Emit as much standard DWARF as possible\n+\t\t\t\t       as long as GDB handles them.  Emit GNAT\n+\t\t\t\t       encodings for the rest.  */\n+  DWARF_GNAT_ENCODINGS_MINIMAL = 2  /* Emit all the standard DWARF we can.\n+\t\t\t\t       Emit GNAT encodings for the rest.  */\n+};\n+\n /* Enumerate Objective-c instance variable visibility settings. */\n \n enum ivar_visibility"}]}