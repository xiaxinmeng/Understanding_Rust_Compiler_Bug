{"sha": "0f8768f73440b040707deafd254d189c2887d00d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY4NzY4ZjczNDQwYjA0MDcwN2RlYWZkMjU0ZDE4OWMyODg3ZDAwZA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-05-12T19:07:49Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-05-12T19:07:49Z"}, "message": "x86 - fix pr82920\n\nThe various thunks output codes have inconsisten output\nmechanisms. The patch factors out some common code that\nwrites out the jumps and uses the regular output scheme\nthat accounts for __USER_LABEL_PREFIX__.\n\nThe testsuite changes are largely mechanical compensation\nfor the revised output (and the fact that Darwin doesn't\nuse non-PIC by default).\n\ngcc/\n\n2019-05-12  Iain Sandoe  <iain@sandoe.co.uk>\n\n\tPR target/82920\n\t* config/i386/i386.c (ix86_output_jmp_thunk_or_indirect): New.\n\t(ix86_output_indirect_branch_via_reg): Use output mechanism\n\taccounting for __USER_LABEL_PREFIX__.\n\t(ix86_output_indirect_branch_via_push): Likewise.\n\t(ix86_output_function_return): Likewise.\n\t(ix86_output_indirect_function_return): Likewise.\n\ngcc/testsuite/\n\n2019-05-12  Iain Sandoe  <iain@sandoe.co.uk>\n\t    Dominique d'Humieres  <dominiq@gcc.gnu.org>\n\n\tPR target/82920\n\t* gcc.target/i386/indirect-thunk-1.c: Adjust scan-asms for Darwin,\n\tdo not use -fno-pic on Darwin.\n\t* gcc.target/i386/indirect-thunk-2.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-3.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-4.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-7.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-1.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-2.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-3.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-4.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-5.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-6.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-7.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-8.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-1.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-2.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-3.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-4.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-7.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-1.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-2.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-3.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-4.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-7.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-register-1.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-register-2.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-register-3.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-register-4.c: Likewise.\n\t* gcc.target/i386/ret-thunk-1.c: Likewise.\n\t* gcc.target/i386/ret-thunk-10.c: Likewise.\n\t* gcc.target/i386/ret-thunk-11.c: Likewise.\n\t* gcc.target/i386/ret-thunk-12.c: Likewise.\n\t* gcc.target/i386/ret-thunk-13.c: Likewise.\n\t* gcc.target/i386/ret-thunk-14.c: Likewise.\n\t* gcc.target/i386/ret-thunk-15.c: Likewise.\n\t* gcc.target/i386/ret-thunk-16.c: Likewise.\n\t* gcc.target/i386/ret-thunk-2.c: Likewise.\n\t* gcc.target/i386/ret-thunk-22.c: Likewise.\n\t* gcc.target/i386/ret-thunk-23.c: Likewise.\n\t* gcc.target/i386/ret-thunk-24.c: Likewise.\n\t* gcc.target/i386/ret-thunk-3.c: Likewise.\n\t* gcc.target/i386/ret-thunk-4.c: Likewise.\n\t* gcc.target/i386/ret-thunk-5.c: Likewise.\n\t* gcc.target/i386/ret-thunk-6.c: Likewise.\n\t* gcc.target/i386/ret-thunk-7.c: Likewise.\n\t* gcc.target/i386/ret-thunk-8.c: Likewise.\n\t* gcc.target/i386/ret-thunk-9.c: Likewise.\n\n\n\n\nCo-Authored-By: Dominique d'Humieres <dominiq@gcc.gnu.org>\n\nFrom-SVN: r271110", "tree": {"sha": "c52bb8062eabfbab775313e7699da44195d430af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c52bb8062eabfbab775313e7699da44195d430af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f8768f73440b040707deafd254d189c2887d00d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8768f73440b040707deafd254d189c2887d00d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f8768f73440b040707deafd254d189c2887d00d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8768f73440b040707deafd254d189c2887d00d/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75df257b38bd4cdcb750fc893c5023363230cfe8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75df257b38bd4cdcb750fc893c5023363230cfe8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75df257b38bd4cdcb750fc893c5023363230cfe8"}], "stats": {"total": 616, "additions": 385, "deletions": 231}, "files": [{"sha": "5b1ae5f4030a453a09d2f99c44ef8c73afdbaef3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,3 +1,13 @@\n+2019-05-12  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR target/82920\n+\t* config/i386/i386.c (ix86_output_jmp_thunk_or_indirect): New.\n+\t(ix86_output_indirect_branch_via_reg): Use output mechanism\n+\taccounting for __USER_LABEL_PREFIX__.\n+\t(ix86_output_indirect_branch_via_push): Likewise.\n+\t(ix86_output_function_return): Likewise.\n+\t(ix86_output_indirect_function_return): Likewise.\n+\n 2019-05-12  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* doc/md.texi: Document use of code attributes in rtx patterns."}, {"sha": "cc0ae3fcfd3272bd95c4f1a7432f6bff5b76542d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 27, "deletions": 21, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -15130,6 +15130,20 @@ ix86_nopic_noplt_attribute_p (rtx call_op)\n   return false;\n }\n \n+/* Helper to output the jmp/call.  */\n+static void\n+ix86_output_jmp_thunk_or_indirect (const char *thunk_name, const int regno)\n+{\n+  if (thunk_name != NULL)\n+    {\n+      fprintf (asm_out_file, \"\\tjmp\\t\");\n+      assemble_name (asm_out_file, thunk_name);\n+      putc ('\\n', asm_out_file);\n+    }\n+  else\n+    output_indirect_thunk (regno);\n+}\n+\n /* Output indirect branch via a call and return thunk.  CALL_OP is a\n    register which contains the branch target.  XASM is the assembly\n    template for CALL_OP.  Branch is a tail call if SIBCALL_P is true.\n@@ -15168,17 +15182,14 @@ ix86_output_indirect_branch_via_reg (rtx call_op, bool sibcall_p)\n     thunk_name = NULL;\n \n   if (sibcall_p)\n-    {\n-      if (thunk_name != NULL)\n-\tfprintf (asm_out_file, \"\\tjmp\\t%s\\n\", thunk_name);\n-      else\n-\toutput_indirect_thunk (regno);\n-    }\n+     ix86_output_jmp_thunk_or_indirect (thunk_name, regno);\n   else\n     {\n       if (thunk_name != NULL)\n \t{\n-\t  fprintf (asm_out_file, \"\\tcall\\t%s\\n\", thunk_name);\n+\t  fprintf (asm_out_file, \"\\tcall\\t\");\n+\t  assemble_name (asm_out_file, thunk_name);\n+\t  putc ('\\n', asm_out_file);\n \t  return;\n \t}\n \n@@ -15199,10 +15210,7 @@ ix86_output_indirect_branch_via_reg (rtx call_op, bool sibcall_p)\n \n       ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, indirectlabel1);\n \n-      if (thunk_name != NULL)\n-\tfprintf (asm_out_file, \"\\tjmp\\t%s\\n\", thunk_name);\n-      else\n-\toutput_indirect_thunk (regno);\n+     ix86_output_jmp_thunk_or_indirect (thunk_name, regno);\n \n       ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, indirectlabel2);\n \n@@ -15259,10 +15267,7 @@ ix86_output_indirect_branch_via_push (rtx call_op, const char *xasm,\n   if (sibcall_p)\n     {\n       output_asm_insn (push_buf, &call_op);\n-      if (thunk_name != NULL)\n-\tfprintf (asm_out_file, \"\\tjmp\\t%s\\n\", thunk_name);\n-      else\n-\toutput_indirect_thunk (regno);\n+      ix86_output_jmp_thunk_or_indirect (thunk_name, regno);\n     }\n   else\n     {\n@@ -15318,10 +15323,7 @@ ix86_output_indirect_branch_via_push (rtx call_op, const char *xasm,\n \n       output_asm_insn (push_buf, &call_op);\n \n-      if (thunk_name != NULL)\n-\tfprintf (asm_out_file, \"\\tjmp\\t%s\\n\", thunk_name);\n-      else\n-\toutput_indirect_thunk (regno);\n+      ix86_output_jmp_thunk_or_indirect (thunk_name, regno);\n \n       ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, indirectlabel2);\n \n@@ -15420,7 +15422,9 @@ ix86_output_function_return (bool long_p)\n \t  indirect_thunk_name (thunk_name, INVALID_REGNUM, need_prefix,\n \t\t\t       true);\n \t  indirect_return_needed |= need_thunk;\n-\t  fprintf (asm_out_file, \"\\tjmp\\t%s\\n\", thunk_name);\n+\t  fprintf (asm_out_file, \"\\tjmp\\t\");\n+\t  assemble_name (asm_out_file, thunk_name);\n+\t  putc ('\\n', asm_out_file);\n \t}\n       else\n \toutput_indirect_thunk (INVALID_REGNUM);\n@@ -15460,7 +15464,9 @@ ix86_output_indirect_function_return (rtx ret_op)\n \t      indirect_return_via_cx = true;\n \t      indirect_thunks_used |= 1 << CX_REG;\n \t    }\n-\t  fprintf (asm_out_file, \"\\tjmp\\t%s\\n\", thunk_name);\n+\t  fprintf (asm_out_file, \"\\tjmp\\t\");\n+\t  assemble_name (asm_out_file, thunk_name);\n+\t  putc ('\\n', asm_out_file);\n \t}\n       else\n \toutput_indirect_thunk (regno);"}, {"sha": "286bfe285ee746685b0f6960431bfa9252011f36", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,3 +1,55 @@\n+2019-05-12  Iain Sandoe  <iain@sandoe.co.uk>\n+\t    Dominique d'Humieres  <dominiq@gcc.gnu.org>\n+\n+\tPR target/82920\n+\t* gcc.target/i386/indirect-thunk-1.c: Adjust scan-asms for Darwin,\n+\tdo not use -fno-pic on Darwin.\n+\t* gcc.target/i386/indirect-thunk-2.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-3.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-4.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-7.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-1.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-2.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-3.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-4.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-5.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-6.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-7.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-8.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-1.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-2.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-3.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-4.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-7.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-1.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-2.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-3.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-4.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-7.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-register-1.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-register-2.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-register-3.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-register-4.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-1.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-10.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-11.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-12.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-13.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-14.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-15.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-16.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-2.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-22.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-23.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-24.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-3.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-4.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-5.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-6.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-7.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-8.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-9.c: Likewise.\n+\n 2019-05-11  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR testsuite/81058"}, {"sha": "052d24dabdfadbde080d30f66ea4f71bc8b41cc2", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-1.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-1.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk\" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -11,9 +12,11 @@ male_indirect_jump (long offset)\n   dispatch(offset);\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */"}, {"sha": "2cfbd728b4b779a3da4ede9866fd3f7127691545", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-2.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-2.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -11,9 +12,11 @@ male_indirect_jump (long offset)\n   dispatch[offset](offset);\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */"}, {"sha": "59bb08613b797abc98ccae62564ba920fa4bbd09", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-3.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-3.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -12,9 +13,11 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */"}, {"sha": "59640fab8f1203a486b11d833684162ebe3320e9", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-4.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-4.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -12,9 +13,11 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */"}, {"sha": "6f2eec85122f719ef8e9a0e3e380eca33cc57873", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-7.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-7.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fno-pic -fjump-tables\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fjump-tables\" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n void func0 (void);\n void func1 (void);\n@@ -36,8 +37,10 @@ bar (int i)\n }\n \n /* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*\\.L\\[0-9\\]+\\\\(,%\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler {leaq[ \\t]*L[0-9]+\\(%rip\\)} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {addl[ \\t]*L[0-9]+-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */"}, {"sha": "8620bf1d8361c479c483c8e6d69c76e195b92e7d", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-1.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-1.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -14,9 +15,11 @@ male_indirect_jump (long offset)\n   dispatch(offset);\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */"}, {"sha": "42e8341696570bd9edf93aada556cf8ccf281c7d", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-2.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-2.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -12,9 +13,11 @@ male_indirect_jump (long offset)\n   dispatch[offset](offset);\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */"}, {"sha": "6a9c51337d9a9bbe998b8519890795cff57df439", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-3.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-3.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -14,9 +15,11 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 2 } } */\n-/* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 2 } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler-times {jmp[ \\t]*\\.?LIND} 2 } } */\n+/* { dg-final { scan-assembler-times {call[ \\t]*\\.?LIND} 2 } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */\n-/* { dg-final { scan-assembler-not \"__x86_indirect_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"_?__x86_indirect_thunk\" } } */"}, {"sha": "85ec57b5a8d31c02bb2fa5e67c8029e360065368", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-4.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-4.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -13,9 +14,11 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 2 } } */\n-/* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 2 } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler-times {jmp[ \\t]*\\.?LIND} 2 } } */\n+/* { dg-final { scan-assembler-times {call[ \\t]*\\.?LIND} 2 } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */\n-/* { dg-final { scan-assembler-not \"__x86_indirect_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"_?__x86_indirect_thunk\" } } */"}, {"sha": "db1d8fb9979201781cd837e7017a1fe4cfa441b5", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-5.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-5.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -14,8 +15,10 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler-not {call[ \\t]*\\.?LIND} } } */"}, {"sha": "24fc43b3ba584ce1caa0da140b09e56c1bc52b61", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-6.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-6.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -13,8 +14,10 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler-not {call[ \\t]*\\.?LIND} } } */"}, {"sha": "d5f2ba66af08ca1520805e41a1d53ee7874f4480", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-7.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-7.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n void func0 (void);\n void func1 (void);\n@@ -37,7 +38,9 @@ bar (int i)\n }\n \n /* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*\\.L\\[0-9\\]+\\\\(,%\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk(_nt|)_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler {leaq[ \\t]*L[0-9]+\\(%rip\\)} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {addl[ \\t]*L[0-9]+-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_indirect_thunk(_nt|)_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler-not {call[ \\t]*\\.?LIND} } } */"}, {"sha": "eb75968522b744820b0c8c8f38cc785f7dfbe575", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-8.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-8.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n void func0 (void);\n void func1 (void);\n@@ -36,7 +37,7 @@ bar (int i)\n     }\n }\n \n-/* { dg-final { scan-assembler-not \"__x86_indirect_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"_?__x86_indirect_thunk\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler-not {call[ \\t]*\\.?LIND} } } */"}, {"sha": "3dc02f80ff5963ab5b269217b20652bf8b00b546", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-1.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-1.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -11,8 +12,10 @@ male_indirect_jump (long offset)\n   dispatch(offset);\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler-not {call[ \\t]*\\.\ufffdLIND} } } */"}, {"sha": "c4adae23dd34cd098dfa5157374c0594e50d5fd2", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-2.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-2.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -11,8 +12,10 @@ male_indirect_jump (long offset)\n   dispatch[offset](offset);\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler-not {call[ \\t]*\\.?LIND} } } */"}, {"sha": "b800b40b0558cc6358e17fcebbe6cc8721ff5a2c", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-3.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-3.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -12,8 +13,10 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler-not {call[ \\t]*\\.?LIND} } } */"}, {"sha": "f68902ddc25dcb8323a1d28abd2fedb822f2df2c", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-4.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-4.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -12,7 +13,8 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" { target x32 } } } */\n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */"}, {"sha": "f4c380f7dd2b917c0794e1042857985abced8784", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-7.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-7.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic -fjump-tables\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern -fjump-tables\" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n void func0 (void);\n void func1 (void);\n@@ -36,7 +37,7 @@ bar (int i)\n }\n \n /* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*\\.L\\[0-9\\]+\\\\(,%\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk(_nt|)_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_indirect_thunk(_nt|)_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.?LIND\" } } */"}, {"sha": "7301490d49c09060f3ba3ef5beff6343a725f798", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-1.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-1.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -11,10 +12,12 @@ male_indirect_jump (long offset)\n   dispatch(offset);\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */\n-/* { dg-final { scan-assembler-not \"__x86_indirect_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"_?__x86_indirect_thunk\" } } */\n /* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" { target x32 } } } */"}, {"sha": "ef1ba02978d889c45b7c4d8c970db22de04b84c6", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-2.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-2.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -11,10 +12,12 @@ male_indirect_jump (long offset)\n   dispatch[offset](offset);\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */\n-/* { dg-final { scan-assembler-not \"__x86_indirect_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"_?__x86_indirect_thunk\" } } */\n /* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" { target x32 } } } */"}, {"sha": "58de8f0393e3cf04682125eb48622ae523c22273", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-3.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-3.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -12,10 +13,12 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 2 } } */\n-/* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 2 } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler-times {jmp[ \\t]*\\.?LIND} 2 } } */\n+/* { dg-final { scan-assembler-times {call[ \\t]*\\.?LIND} 2 } } */\n /* { dg-final { scan-assembler-times {\\tpause} 1 } } */\n /* { dg-final { scan-assembler-times {\\tlfence} 1 } } */\n-/* { dg-final { scan-assembler-not \"__x86_indirect_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"_?__x86_indirect_thunk\" } } */\n /* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" { target x32 } } } */"}, {"sha": "3be3ce07527c4f78b5798838480ffe5ff6cae37b", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-4.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-4.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -12,10 +13,12 @@ male_indirect_jump (long offset)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?dispatch\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 2 } } */\n-/* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 2 } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*dispatch\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_dispatch} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_dispatch\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler-times {jmp[ \\t]*\\.?LIND} 2 } } */\n+/* { dg-final { scan-assembler-times {call[ \\t]*\\.?LIND} 2 } } */\n /* { dg-final { scan-assembler-times {\\tpause} 1 } } */\n /* { dg-final { scan-assembler-times {\\tlfence} 1 } } */\n-/* { dg-final { scan-assembler-not \"__x86_indirect_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"_?__x86_indirect_thunk\" } } */\n /* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" { target x32 } } } */"}, {"sha": "b161faa44f624d3c81717dff5ef3eb52518b620e", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-7.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-7.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic -fjump-tables\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline -fjump-tables\" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n void func0 (void);\n void func1 (void);\n@@ -37,8 +38,8 @@ bar (int i)\n \n /* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*\\.L\\[0-9\\]+\\\\(,%\" { target *-*-linux* } } } */\n /* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%(r|e)ax\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */\n-/* { dg-final { scan-assembler-not \"__x86_indirect_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"_?__x86_indirect_thunk\" } } */"}, {"sha": "441e9f07ce7aab82f3fee7df97526b6cf1cad3f1", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-register-1.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-1.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mindirect-branch=thunk -mindirect-branch-register -fno-pic\" } */\n+/* { dg-options \"-O2 -mindirect-branch=thunk -mindirect-branch-register \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -11,11 +12,11 @@ male_indirect_jump (long offset)\n   dispatch(offset);\n }\n \n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler \"mov\\[ \\t\\](%eax|%rax), \\\\((%esp|%rsp)\\\\)\" } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler-not \"push(?:l|q)\\[ \\t\\]*_?dispatch\"  } } */\n /* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */\n-/* { dg-final { scan-assembler-not \"__x86_indirect_thunk\\n\" } } */\n+/* { dg-final { scan-assembler-not \"_?__x86_indirect_thunk\\n\" } } */"}, {"sha": "30847db480b0b40b4243d06038661a2af41e9e36", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-register-2.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-2.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mindirect-branch=thunk-inline -mindirect-branch-register -fno-pic\" } */\n+/* { dg-options \"-O2 -mindirect-branch=thunk-inline -mindirect-branch-register \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -11,10 +12,10 @@ male_indirect_jump (long offset)\n   dispatch(offset);\n }\n \n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler \"mov\\[ \\t\\](%eax|%rax), \\\\((%esp|%rsp)\\\\)\" } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler-not \"push(?:l|q)\\[ \\t\\]*_?dispatch\"  } } */\n /* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */\n-/* { dg-final { scan-assembler-not \"__x86_indirect_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"_?__x86_indirect_thunk\" } } */"}, {"sha": "cbe14d52d750ce907028d5d7ae4626e48188429e", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-register-3.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-3.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mindirect-branch=thunk-extern -mindirect-branch-register -fno-pic\" } */\n+/* { dg-options \"-O2 -mindirect-branch=thunk-extern -mindirect-branch-register \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n typedef void (*dispatch_t)(long offset);\n \n@@ -11,9 +12,9 @@ male_indirect_jump (long offset)\n   dispatch(offset);\n }\n \n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not \"push(?:l|q)\\[ \\t\\]*_?dispatch\"  } } */\n /* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */\n /* { dg-final { scan-assembler-not {\\t(pause|pause|nop)} } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler-not {call[ \\t]*\\.?LIND} } } */"}, {"sha": "6d2bfc911c1418807cceea504b5c9b8153fc832c", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-register-4.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-4.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mindirect-branch=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mindirect-branch=keep \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n extern void (*func_p) (void);\n "}, {"sha": "77f2cf62e2651f930e96ba1615f876d21b0a1e4d", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-1.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -6,8 +6,8 @@ foo (void)\n {\n }\n \n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_return_thunk\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */"}, {"sha": "05e96e78189ae6b478a40057fd6fa00e81068cef", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-10.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-10.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=thunk-inline -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=thunk-inline -mindirect-branch=thunk \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n extern void (*bar) (void);\n \n@@ -10,11 +11,11 @@ foo (void)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*_?__x86_return_thunk\" } } */\n /* { dg-final { scan-assembler-times {\\tpause} 2 } } */\n /* { dg-final { scan-assembler-times {\\tlfence} 2 } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n-/* { dg-final { scan-assembler \"__x86_indirect_thunk_(r|e)ax:\" } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"_?__x86_indirect_thunk_(r|e)ax:\" } } */\n /* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */"}, {"sha": "19df164beea47b8700d26d80a9eb3bc8af3e037f", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-11.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-11.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=thunk-extern -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=thunk-extern -mindirect-branch=thunk \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n extern void (*bar) (void);\n \n@@ -10,11 +11,11 @@ foo (void)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_return_thunk\" } } */\n /* { dg-final { scan-assembler-times {\\tpause} 1 } } */\n /* { dg-final { scan-assembler-times {\\tlfence} 1 } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n-/* { dg-final { scan-assembler \"__x86_indirect_thunk_(r|e)ax:\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"_?__x86_indirect_thunk_(r|e)ax:\" } } */\n /* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */"}, {"sha": "b4ca50041acc742b25cac7e8049125cc9214f6de", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-12.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-12.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n extern void (*bar) (void);\n \n@@ -10,11 +11,11 @@ foo (void)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*_?__x86_return_thunk\" } } */\n /* { dg-final { scan-assembler-times {\\tpause} 1 } } */\n /* { dg-final { scan-assembler-times {\\tlfence} 1 } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n-/* { dg-final { scan-assembler \"__x86_indirect_thunk_(r|e)ax:\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"_?__x86_indirect_thunk_(r|e)ax:\" } } */\n /* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */"}, {"sha": "2f8d3a04cde7732bc816af16baf97acd02aa82b5", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-13.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-13.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n extern void (*bar) (void);\n extern int foo (void) __attribute__ ((function_return(\"thunk\")));\n@@ -11,11 +12,11 @@ foo (void)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_return_thunk\" } } */\n /* { dg-final { scan-assembler-times {\\tpause} 2 } } */\n /* { dg-final { scan-assembler-times {\\tlfence} 2 } } */\n-/* { dg-final { scan-assembler-times \"jmp\\[ \\t\\]*\\.LIND\" 3 } } */\n-/* { dg-final { scan-assembler-times \"call\\[ \\t\\]*\\.LIND\" 3 } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*__x86_indirect_thunk\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler-times {jmp[ \\t]*\\.?LIND} 3 } } */\n+/* { dg-final { scan-assembler-times {call[ \\t]*\\.?LIND} 3 } } */\n+/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*_?__x86_indirect_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */"}, {"sha": "3eaddee8c34bcdbb27191ca108dba527436e4e2f", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-14.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-14.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n extern void (*bar) (void);\n \n@@ -13,9 +14,11 @@ foo (void)\n \n /* { dg-final { scan-assembler-times {\\tpause} 1 } } */\n /* { dg-final { scan-assembler-times {\\tlfence} 1 } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?bar\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*_?__x86_return_thunk\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*bar\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_bar} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_bar\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */"}, {"sha": "2793f72cdc1e5d72b13326e575d03dc322d84407", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-15.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-15.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=keep \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n extern void (*bar) (void);\n \n@@ -11,11 +12,13 @@ foo (void)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_return_thunk\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler-times {\\tpause} 1 } } */\n /* { dg-final { scan-assembler-times {\\tlfence} 1 } } */\n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?bar\" { target *-*-linux* } } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*bar\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_bar} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_bar\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */"}, {"sha": "5f439e4f360eaf4e4a3ced909db4022153692f99", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-16.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-16.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=thunk-inline -mindirect-branch=thunk-extern -fno-pic\" } */\n+/* { dg-options \"-O2 -mfunction-return=thunk-inline -mindirect-branch=thunk-extern \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n extern void (*bar) (void);\n \n@@ -11,8 +12,8 @@ foo (void)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler-not \"__x86_indirect_thunk\" } } */\n-/* { dg-final { scan-assembler-not \"__x86_return_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"_?__x86_indirect_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"_?__x86_return_thunk\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler-not {call[ \\t]*\\.?LIND} } } */"}, {"sha": "3cb94210746d09c716503e34adaf94ad12c77669", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-2.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -6,8 +6,8 @@ foo (void)\n {\n }\n \n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*_?__x86_return_thunk\" } } */"}, {"sha": "9a9f42ea6a13d5576b1c60fff1052b2bbfa8b6af", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-22.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-22.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -6,10 +6,12 @@ struct s { _Complex unsigned short x; };\n struct s gs = { 100 + 200i };\n struct s __attribute__((noinline)) foo (void) { return gs; }\n \n-/* { dg-final { scan-assembler-times \"popl\\[\\\\t \\]*%ecx\" 1 } } */\n-/* { dg-final { scan-assembler \"lea\\[l\\]?\\[\\\\t \\]*4\\\\(%esp\\\\), %esp\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_return_thunk_ecx\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-times \"popl\\[\\\\t \\]*%ecx\" 1 { target { ! *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"lea\\[l\\]?\\[\\\\t \\]*4\\\\(%esp\\\\), %esp\" { target { ! *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_return_thunk_ecx\" { target { ! *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {call[ \\t]*___x86.get_pc_thunk.cx} { target { *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*___x86_return_thunk} { target { *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */"}, {"sha": "69469a43606b6b29c00a5f1fe93b0cefa2ef5d37", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-23.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-23.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -6,10 +6,12 @@ struct s { _Complex unsigned short x; };\n struct s gs = { 100 + 200i };\n struct s __attribute__((noinline)) foo (void) { return gs; }\n \n-/* { dg-final { scan-assembler-times \"popl\\[\\\\t \\]*%ecx\" 1 } } */\n-/* { dg-final { scan-assembler \"lea\\[l\\]?\\[\\\\t \\]*4\\\\(%esp\\\\), %esp\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_return_thunk_ecx\" } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-times \"popl\\[\\\\t \\]*%ecx\" 1 { target { ! *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"lea\\[l\\]?\\[\\\\t \\]*4\\\\(%esp\\\\), %esp\" { target { ! *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_return_thunk_ecx\" { target { ! *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {call[ \\t]*___x86.get_pc_thunk.cx} { target { *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*___x86_return_thunk} { target { *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler-not {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler-not {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler-not {\\tpause} } } */\n /* { dg-final { scan-assembler-not {\\tlfence} } } */"}, {"sha": "0e7877970d7f9922fee3ce8599f01fc016fa4e26", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-24.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-24.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -6,10 +6,12 @@ struct s { _Complex unsigned short x; };\n struct s gs = { 100 + 200i };\n struct s __attribute__((noinline)) foo (void) { return gs; }\n \n-/* { dg-final { scan-assembler-times \"popl\\[\\\\t \\]*%ecx\" 1 } } */\n-/* { dg-final { scan-assembler \"lea\\[l\\]?\\[\\\\t \\]*4\\\\(%esp\\\\), %esp\" } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*__x86_return_thunk_ecx\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-times \"popl\\[\\\\t \\]*%ecx\" 1 { target { ! *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler \"lea\\[l\\]?\\[\\\\t \\]*4\\\\(%esp\\\\), %esp\" { target { ! *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*_?__x86_return_thunk_ecx\" { target { ! *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {call[ \\t]*___x86.get_pc_thunk.cx} { target { *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler-not {jmp[ \\t]*___x86_return_thunk} { target { *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */"}, {"sha": "eb585169ae2dbe13220bdbc8d88291ab836b702a", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-3.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -6,7 +6,7 @@ foo (void)\n {\n }\n \n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_return_thunk\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler-not {call[ \\t]*\\.?LIND} } } */"}, {"sha": "736f7270ba6557d0c194c26f92410c51e1d95577", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-4.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -6,7 +6,7 @@ foo (void)\n {\n }\n \n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*_?__x86_return_thunk\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler-not {call[ \\t]*\\.?LIND} } } */"}, {"sha": "862f21da773f03e128deb9ecf21761654f14229e", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-5.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-5.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -8,8 +8,8 @@ foo (void)\n {\n }\n \n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_return_thunk\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */"}, {"sha": "9517c92eade179dec5887b0139dfddacaf188718", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-6.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-6.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -7,8 +7,8 @@ foo (void)\n {\n }\n \n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]*\\.?LIND} } } */\n /* { dg-final { scan-assembler {\\tpause} } } */\n /* { dg-final { scan-assembler {\\tlfence} } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*_?__x86_return_thunk\" } } */"}, {"sha": "dd68f8326b1b6d3d93336e121e9bc2383a074956", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-7.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-7.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -7,7 +7,7 @@ foo (void)\n {\n }\n \n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_return_thunk\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler-not {call[ \\t]*\\.?LIND} } } */"}, {"sha": "0a611d99f598a078cd5b370bd075fe79fad080f2", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-8.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -8,7 +8,7 @@ foo (void)\n {\n }\n \n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n+/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*_?__x86_return_thunk\" } } */\n /* { dg-final { scan-assembler-not {\\t(lfence|pause)} } } */\n-/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not {jmp[ \\t]*\\.?LIND} } } */\n+/* { dg-final { scan-assembler-not {call[ \\t]*\\.?LIND} } } */"}, {"sha": "63af6741e05203c2c66bb7273b654ddff062f978", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-9.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f8768f73440b040707deafd254d189c2887d00d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-9.c?ref=0f8768f73440b040707deafd254d189c2887d00d", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=thunk -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=thunk -mindirect-branch=thunk \" } */\n+/* { dg-additional-options \"-fno-pic\" { target { ! *-*-darwin* } } } */\n \n extern void (*bar) (void);\n \n@@ -10,12 +11,14 @@ foo (void)\n   return 0;\n }\n \n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_return_thunk\" } } */\n-/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n-/* { dg-final { scan-assembler \"__x86_return_thunk:\" } } */\n-/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*_?bar\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*_?__x86_return_thunk\" } } */\n+/* { dg-final { scan-assembler {jmp[ \\t]+\\.?LIND} } } */\n+/* { dg-final { scan-assembler {call[ \\t]+\\.?LIND} } } */\n+/* { dg-final { scan-assembler \"_?__x86_return_thunk:\" } } */\n+/* { dg-final { scan-assembler \"mov(?:l|q)\\[ \\t\\]*bar\" { target *-*-linux* } } } */\n+/* { dg-final { scan-assembler {movq[ \\t]*_bar} { target { lp64 && *-*-darwin* } } } } */\n+/* { dg-final { scan-assembler {movl[ \\t]*l_bar\\$non_lazy_ptr-L[0-9]+\\$pb} { target { ia32 && *-*-darwin* } } } } */\n /* { dg-final { scan-assembler-times {\\tpause} 2 } } */\n /* { dg-final { scan-assembler-times {\\tlfence} 2 } } */\n-/* { dg-final { scan-assembler \"call\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*_?__x86_indirect_thunk_(r|e)ax\" } } */\n /* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */"}]}