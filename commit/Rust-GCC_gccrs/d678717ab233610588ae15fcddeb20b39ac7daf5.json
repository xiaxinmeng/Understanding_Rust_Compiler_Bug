{"sha": "d678717ab233610588ae15fcddeb20b39ac7daf5", "node_id": "C_kwDOANBUbNoAKGQ2Nzg3MTdhYjIzMzYxMDU4OGFlMTVmY2RkZWIyMGIzOWFjN2RhZjU", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-03-21T07:35:53Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-17T08:25:43Z"}, "message": "[Ada] Deal with derived record types in Has_Compatible_Representation\n\nMore precisely, untagged record types, as tagged record types are already\nhandled by the predicate.  If the derived type has not been given its own\nrepresentation clause, then the representations are the same.\n\ngcc/ada/\n\n\t* sem_ch13.adb (Has_Compatible_Representation): Return true for\n\tderived untagged record types without representation clause.", "tree": {"sha": "b6538731df5f29487a1f0e42bc774e8884803ccf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6538731df5f29487a1f0e42bc774e8884803ccf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d678717ab233610588ae15fcddeb20b39ac7daf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d678717ab233610588ae15fcddeb20b39ac7daf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d678717ab233610588ae15fcddeb20b39ac7daf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d678717ab233610588ae15fcddeb20b39ac7daf5/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2f7d58cda63c8764b0c55f13ddee3c9b114182e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2f7d58cda63c8764b0c55f13ddee3c9b114182e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2f7d58cda63c8764b0c55f13ddee3c9b114182e"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "ac94de7e84a9e0c44657b4fbc1ff0d17cf4a59a1", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d678717ab233610588ae15fcddeb20b39ac7daf5/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d678717ab233610588ae15fcddeb20b39ac7daf5/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=d678717ab233610588ae15fcddeb20b39ac7daf5", "patch": "@@ -13539,6 +13539,16 @@ package body Sem_Ch13 is\n          if Is_Packed (T1) /= Is_Packed (T2) then\n             return False;\n \n+         --  If the operand type is derived from the target type and no clause\n+         --  has been given after the derivation, then the representations are\n+         --  the same since the derived type inherits that of the parent type.\n+\n+         elsif Is_Derived_Type (T2)\n+           and then Etype (T2) = T1\n+           and then not Has_Record_Rep_Clause (T2)\n+         then\n+            return True;\n+\n          --  Otherwise we must check components. Typ2 maybe a constrained\n          --  subtype with fewer components, so we compare the components\n          --  of the base types."}]}