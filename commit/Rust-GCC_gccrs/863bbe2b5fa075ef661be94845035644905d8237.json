{"sha": "863bbe2b5fa075ef661be94845035644905d8237", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYzYmJlMmI1ZmEwNzVlZjY2MWJlOTQ4NDUwMzU2NDQ5MDVkODIzNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-11-19T08:52:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-11-19T08:52:31Z"}, "message": "re PR c++/92504 (ICE on gcc-9 -fopenmp: internal compiler error: tree check: expected tree that contains 'decl common' structure, have 'baselink' in get_inner_reference, at expr.c:7238)\n\n\tPR c++/92504\n\t* semantics.c (handle_omp_for_class_iterator): Don't call\n\tcp_fully_fold on cond.\n\n\t* g++.dg/gomp/pr92504.C: New test.\n\nFrom-SVN: r278433", "tree": {"sha": "be8e1d429edc71f778e55c6a7c07f954c36ee46a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be8e1d429edc71f778e55c6a7c07f954c36ee46a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/863bbe2b5fa075ef661be94845035644905d8237", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/863bbe2b5fa075ef661be94845035644905d8237", "html_url": "https://github.com/Rust-GCC/gccrs/commit/863bbe2b5fa075ef661be94845035644905d8237", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/863bbe2b5fa075ef661be94845035644905d8237/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b51d4ebc38cf4852b9c7746647526097f5bd00e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b51d4ebc38cf4852b9c7746647526097f5bd00e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b51d4ebc38cf4852b9c7746647526097f5bd00e9"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "30ebf18a24494f88f75ce63b5ba622f6abb34b19", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/863bbe2b5fa075ef661be94845035644905d8237/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/863bbe2b5fa075ef661be94845035644905d8237/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=863bbe2b5fa075ef661be94845035644905d8237", "patch": "@@ -1,3 +1,9 @@\n+2019-11-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/92504\n+\t* semantics.c (handle_omp_for_class_iterator): Don't call\n+\tcp_fully_fold on cond.\n+\n 2019-11-18  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* typeck.c (cp_build_addr_expr_1): Use cp_expr_loc_or_input_loc"}, {"sha": "2adc9ef792b2c42beb7ce07b28ee37ce2d736573", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/863bbe2b5fa075ef661be94845035644905d8237/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/863bbe2b5fa075ef661be94845035644905d8237/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=863bbe2b5fa075ef661be94845035644905d8237", "patch": "@@ -8434,7 +8434,6 @@ handle_omp_for_class_iterator (int i, location_t locus, enum tree_code code,\n   if (init && EXPR_HAS_LOCATION (init))\n     elocus = EXPR_LOCATION (init);\n \n-  cond = cp_fully_fold (cond);\n   switch (TREE_CODE (cond))\n     {\n     case GT_EXPR:"}, {"sha": "b569888344b4a90c7f21a25e1927971b0c3d8c35", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/863bbe2b5fa075ef661be94845035644905d8237/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/863bbe2b5fa075ef661be94845035644905d8237/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=863bbe2b5fa075ef661be94845035644905d8237", "patch": "@@ -1,5 +1,8 @@\n 2019-11-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/92504\n+\t* g++.dg/gomp/pr92504.C: New test.\n+\n \tPR tree-optimization/92557\n \t* gcc.dg/gomp/pr92557.c: New test.\n "}, {"sha": "8df67621532b95e1858b00b61cee7de72b54fb14", "filename": "gcc/testsuite/g++.dg/gomp/pr92504.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/863bbe2b5fa075ef661be94845035644905d8237/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr92504.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/863bbe2b5fa075ef661be94845035644905d8237/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr92504.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr92504.C?ref=863bbe2b5fa075ef661be94845035644905d8237", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/92504\n+// { dg-do compile { target c++11 } }\n+// { dg-additional-options \"-O2\" }\n+\n+namespace std {\n+  typedef __SIZE_TYPE__ size_t;\n+  typedef __PTRDIFF_TYPE__ ptrdiff_t;\n+}\n+\n+struct A {\n+  A ();\n+  A (const A &);\n+  A & operator++ ();\n+  bool operator != (const A &) const;\n+  std::ptrdiff_t operator - (const A &);\n+  A & operator += (std::size_t);\n+  int a;\n+  A & begin ();\n+  A & end ();\t\t\t\t// { dg-message \"declared here\" }\n+};\n+\n+void\n+bar ()\n+{\n+  A a;\n+  #pragma omp for\n+  for (auto b = a; b != a.end; ++b)\t// { dg-error \"invalid use of non-static member function\" }\n+    ;\n+}"}]}