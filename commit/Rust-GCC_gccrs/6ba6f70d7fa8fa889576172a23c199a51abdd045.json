{"sha": "6ba6f70d7fa8fa889576172a23c199a51abdd045", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJhNmY3MGQ3ZmE4ZmE4ODk1NzYxNzJhMjNjMTk5YTUxYWJkZDA0NQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-12-15T00:20:03Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-12-15T00:20:03Z"}, "message": "[multiple changes]\n\n2009-12-15  Paolo Bonzini  <bonzini@gnu.org>\n\t    Shujing Zhao  <pearly.zhao@oracle.com>\n\n\t* intl.c (get_spaces): New.\n\t* intl.h (get_spaces): New.\n\ncp:\n2009-12-15  Paolo Bonzini  <bonzini@gnu.org>\n\t    Shujing Zhao  <pearly.zhao@oracle.com>\n\n\t* Makefile.in (cp/pt.o): Depend on intl.h\n\t* call.c (print_z_candidates): Make loop more compact,\n\tchoose head string depending on number of candidates,\n\textract creation of spaces string to intl.c.\n\t* pt.c (print_overloaded_functions): Replace with...\n\t(print_candidates_1): ... this rewrite.\n\t(print_candidates): Rewrite to call print_candidates_1.\n\t(most_specialized_class): Make loop more compact,\n\tchoose head string depending on number of candidates,\n\tand size indents depending on translations.\n \ntestsuite:\n2009-12-15  Shujing Zhao  <pearly.zhao@oracle.com>\n\n\t* g++.dg/other/error20.C: Adjust dg-message strings.\n\t* g++.dg/other/error31.C: Likewise.\n\t* g++.dg/rtti/typeid6.C: Likewise.\n\t* g++.dg/ext/ms-1.C: Likewise.\n\t* g++.dg/parse/error19.C: Likewise.\n\t* g++.dg/parse/crash5.C: Likewise.\n\t* g++.dg/cpp0x/explicit4.C: Likewise.\n\t* g++.dg/template/ptrmem4.C: Likewise.\n\t* g++.dg/template/crash37.C: Likewise.\n\t* g++.dg/template/qualttp5.C: Likewise.\n\t* g++.dg/template/local6.C: Likewise.\n\t* g++.dg/template/instantiate5.C: Likewise.\n\t* g++.old-deja/g++.brendan/overload1.C: Likewise.\n\t* g++.old-deja/g++.brendan/cvt3.C: Likewise.\n\t* g++.old-deja/g++.brendan/overload4.C: Likewise.\n\t* g++.old-deja/g++.jason/conversion11.C: Likewise.\n\t* g++.old-deja/g++.jason/scoping10.C: Likewise.\n\t* g++.old-deja/g++.other/expr1.C: Likewise.\n\t* g++.old-deja/g++.other/pmf3.C: Likewise.\n\t* g++.old-deja/g++.other/crash24.C: Likewise.\n\t* g++.old-deja/g++.niklas/t120.C: Likewise.\n\t* g++.old-deja/g++.niklas/t121.C: Likewise.\n\t* g++.old-deja/g++.law/operators9.C: Likewise.\n\t* g++.old-deja/g++.law/arm9.C: Likewise.\n\t* g++.old-deja/g++.law/enum4.C: Likewise.\n\t* g++.old-deja/g++.law/arg11.C: Likewise.\n\t* g++.old-deja/g++.benjamin/15800-1.C: Likewise.\n\t* g++.old-deja/g++.mike/p2431.C: Likewise.\n\t* g++.old-deja/g++.mike/p438.C: Likewise.\n\t* g++.old-deja/g++.mike/p9068.C: Likewise.\n\t* g++.old-deja/g++.mike/p11110.C: Likewise.\n\t* g++.old-deja/g++.bugs/900330_02.C: Likewise.\n\nFrom-SVN: r155245", "tree": {"sha": "cfeb179f5b57de2147e03bd05038051732204246", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfeb179f5b57de2147e03bd05038051732204246"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ba6f70d7fa8fa889576172a23c199a51abdd045", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba6f70d7fa8fa889576172a23c199a51abdd045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba6f70d7fa8fa889576172a23c199a51abdd045", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba6f70d7fa8fa889576172a23c199a51abdd045/comments", "author": null, "committer": null, "parents": [{"sha": "9ed796d78bd95091e6715200c029c812047f843c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ed796d78bd95091e6715200c029c812047f843c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ed796d78bd95091e6715200c029c812047f843c"}], "stats": {"total": 240, "additions": 167, "deletions": 73}, "files": [{"sha": "292ac692c05b523428f7a99279c5197f861253ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -1,3 +1,9 @@\n+2009-12-15  Paolo Bonzini  <bonzini@gnu.org>\n+\t    Shujing Zhao  <pearly.zhao@oracle.com>\n+\n+\t* intl.c (get_spaces): New.\n+\t* intl.h (get_spaces): New.\n+\n 2009-12-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/42369"}, {"sha": "bf6ecd8ff4ae8f9a8b25d0102b481b353856d2d5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -1,3 +1,17 @@\n+2009-12-15  Paolo Bonzini  <bonzini@gnu.org>\n+\t    Shujing Zhao  <pearly.zhao@oracle.com>\n+\n+\t* Makefile.in (cp/pt.o): Depend on intl.h\n+\t* call.c (print_z_candidates): Make loop more compact,\n+\tchoose head string depending on number of candidates,\n+\textract creation of spaces string to intl.c.\n+\t* pt.c (print_overloaded_functions): Replace with...\n+\t(print_candidates_1): ... this rewrite.\n+\t(print_candidates): Rewrite to call print_candidates_1.\n+\t(most_specialized_class): Make loop more compact,\n+\tchoose head string depending on number of candidates,\n+\tand size indents depending on translations.\n+\n 2009-12-11  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/42219"}, {"sha": "9b134edee6165683c613020b8ae3273cf92259de", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -292,7 +292,7 @@ cp/expr.o: cp/expr.c $(CXX_TREE_H) $(TM_H) $(RTL_H) $(FLAGS_H) $(EXPR_H) \\\n   toplev.h except.h $(TM_P_H)\n cp/pt.o: cp/pt.c $(CXX_TREE_H) $(TM_H) cp/decl.h cp/cp-objcp-common.h \\\n   toplev.h $(RTL_H) except.h $(TREE_INLINE_H) pointer-set.h gt-cp-pt.h \\\n-  vecprim.h\n+  vecprim.h intl.h\n cp/error.o: cp/error.c $(CXX_TREE_H) $(TM_H) toplev.h $(DIAGNOSTIC_H) \\\n   $(FLAGS_H) $(REAL_H) $(LANGHOOKS_DEF_H) $(CXX_PRETTY_PRINT_H)\n cp/repo.o: cp/repo.c $(CXX_TREE_H) $(TM_H) toplev.h $(DIAGNOSTIC_H) \\"}, {"sha": "1f171800ffd98cc1b1bb4f87616bb34c7d915bc6", "filename": "gcc/cp/call.c", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -2730,6 +2730,7 @@ print_z_candidates (struct z_candidate *candidates)\n   const char *str;\n   struct z_candidate *cand1;\n   struct z_candidate **cand2;\n+  char *spaces;\n \n   if (!candidates)\n     return;\n@@ -2770,25 +2771,14 @@ print_z_candidates (struct z_candidate *candidates)\n \t}\n     }\n \n-  str = _(\"candidates are:\");\n-  print_z_candidate (str, candidates);\n-  if (candidates->next)\n+  str = candidates->next ? _(\"candidates are:\") :  _(\"candidate is:\");\n+  spaces = NULL;\n+  for (; candidates; candidates = candidates->next)\n     {\n-      /* Indent successive candidates by the width of the translation\n-\t of the above string.  */\n-      size_t len = gcc_gettext_width (str) + 1;\n-      char *spaces = (char *) alloca (len);\n-      memset (spaces, ' ', len-1);\n-      spaces[len - 1] = '\\0';\n-\n-      candidates = candidates->next;\n-      do\n-\t{\n-\t  print_z_candidate (spaces, candidates);\n-\t  candidates = candidates->next;\n-\t}\n-      while (candidates);\n+      print_z_candidate (spaces ? spaces : str, candidates);\n+      spaces = spaces ? spaces : get_spaces (str);\n     }\n+  free (spaces);\n }\n \n /* USER_SEQ is a user-defined conversion sequence, beginning with a"}, {"sha": "68e277e2cdbd8a1b851c6424e6ef853f7099e89a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 53, "deletions": 23, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -32,6 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"obstack.h\"\n #include \"tree.h\"\n+#include \"intl.h\"\n #include \"pointer-set.h\"\n #include \"flags.h\"\n #include \"c-common.h\"\n@@ -1646,19 +1647,52 @@ explicit_class_specialization_p (tree type)\n   return !uses_template_parms (CLASSTYPE_TI_ARGS (type));\n }\n \n-/* Print the list of overloaded FNS in an error message.   */\n+/* Print the list of functions at FNS, going through all the overloads\n+   for each element of the list.  Alternatively, FNS can not be a\n+   TREE_LIST, in which case it will be printed together with all the\n+   overloads.\n+\n+   MORE and *STR should respectively be FALSE and NULL when the function\n+   is called from the outside.  They are used internally on recursive\n+   calls.  print_candidates manages the two parameters and leaves NULL\n+   in *STR when it ends.  */\n \n static void\n-print_overloaded_functions (tree fns, const char **str)\n+print_candidates_1 (tree fns, bool more, const char **str)\n {\n-  tree fn;\n+  tree fn, fn2;\n+  char *spaces = NULL;\n+\n   for (fn = fns; fn; fn = OVL_NEXT (fn))\n+    if (TREE_CODE (fn) == TREE_LIST)\n+      {\n+        gcc_assert (!OVL_NEXT (fn) && !is_overloaded_fn (fn));\n+        for (fn2 = fn; fn2 != NULL_TREE; fn2 = TREE_CHAIN (fn2))\n+          print_candidates_1 (TREE_VALUE (fn2),\n+                              TREE_CHAIN (fn2) || more, str);\n+      }\n+    else\n+      {\n+        if (!*str)\n+          {\n+            /* Pick the prefix string.  */\n+            if (!more && !OVL_NEXT (fns))\n+              {\n+                error (\"candidate is: %+#D\", OVL_CURRENT (fn));\n+                continue;\n+              }\n+\n+            *str = _(\"candidates are:\");\n+            spaces = get_spaces (*str);\n+          }\n+        error (\"%s %+#D\", *str, OVL_CURRENT (fn));\n+        *str = spaces ? spaces : *str;\n+      }\n+\n+  if (!more)\n     {\n-      if (TREE_CODE (fn) == TREE_LIST)\n-\tprint_candidates (fn);\n-      else\n-\terror (\"%s %+#D\", *str, OVL_CURRENT (fn));\n-      *str = \"               \";\n+      free (spaces);\n+      *str = NULL;\n     }\n }\n \n@@ -1667,16 +1701,9 @@ print_overloaded_functions (tree fns, const char **str)\n void\n print_candidates (tree fns)\n {\n-  const char *str = \"candidates are:\";\n-\n-  if (is_overloaded_fn (fns))\n-    print_overloaded_functions (fns, &str);\n-  else\n-    {\n-      tree fn;\n-      for (fn = fns; fn != NULL_TREE; fn = TREE_CHAIN (fn))\n-\tprint_overloaded_functions (TREE_VALUE (fn), &str);\n-    }\n+  const char *str = NULL;\n+  print_candidates_1 (fns, false, &str);\n+  gcc_assert (str == NULL);\n }\n \n /* Returns the template (one of the functions given by TEMPLATE_ID)\n@@ -15753,13 +15780,16 @@ most_specialized_class (tree type, tree tmpl)\n \n   if (ambiguous_p)\n     {\n-      const char *str = \"candidates are:\";\n+      const char *str;\n+      char *spaces = NULL;\n       error (\"ambiguous class template instantiation for %q#T\", type);\n+      str = TREE_CHAIN (list) ? _(\"candidates are:\") : _(\"candidate is:\");\n       for (t = list; t; t = TREE_CHAIN (t))\n-\t{\n-\t  error (\"%s %+#T\", str, TREE_TYPE (t));\n-\t  str = \"               \";\n-\t}\n+        {\n+          error (\"%s %+#T\", spaces ? spaces : str, TREE_TYPE (t));\n+          spaces = spaces ? spaces : get_spaces (str);\n+        }\n+      free (spaces);\n       return error_mark_node;\n     }\n "}, {"sha": "63de3ec4d83cae5c6d2db831288c1745897d1f5e", "filename": "gcc/intl.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Fintl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Fintl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl.c?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -120,3 +120,20 @@ gcc_gettext_width (const char *msgstr)\n #endif\n \n #endif /* ENABLE_NLS */\n+\n+/* Return the indent for successive lines, using the width of\n+   the STR.  STR must have been translated already.  The string\n+   must be freed by the caller.  */\n+\n+char *\n+get_spaces (const char *str)\n+{\n+   size_t len = gcc_gettext_width (str);\n+   char *spaces = XNEWVEC(char, len + 1);\n+   memset (spaces, ' ', len);\n+   spaces[len] = '\\0';\n+   return spaces;\n+}\n+\n+\n+"}, {"sha": "2df9b178c00cf85a2d781d109b08e7243351caa2", "filename": "gcc/intl.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Fintl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Fintl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl.h?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -54,6 +54,8 @@ extern size_t gcc_gettext_width (const char *);\n # define G_(gmsgid) gmsgid\n #endif\n \n+extern char *get_spaces (const char *);\n+\n extern const char *open_quote;\n extern const char *close_quote;\n extern const char *locale_encoding;"}, {"sha": "29f02c097c9dab3b54c29b81d8e2006f51a23d24", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -1,3 +1,38 @@\n+2009-12-15  Shujing Zhao  <pearly.zhao@oracle.com>\n+\n+\t* g++.dg/other/error20.C: Adjust dg-message strings.\n+\t* g++.dg/other/error31.C: Likewise.\n+\t* g++.dg/rtti/typeid6.C: Likewise.\n+\t* g++.dg/ext/ms-1.C: Likewise.\n+\t* g++.dg/parse/error19.C: Likewise.\n+\t* g++.dg/parse/crash5.C: Likewise.\n+\t* g++.dg/cpp0x/explicit4.C: Likewise.\n+\t* g++.dg/template/ptrmem4.C: Likewise.\n+\t* g++.dg/template/crash37.C: Likewise.\n+\t* g++.dg/template/qualttp5.C: Likewise.\n+\t* g++.dg/template/local6.C: Likewise.\n+\t* g++.dg/template/instantiate5.C: Likewise.\n+\t* g++.old-deja/g++.brendan/overload1.C: Likewise.\n+\t* g++.old-deja/g++.brendan/cvt3.C: Likewise.\n+\t* g++.old-deja/g++.brendan/overload4.C: Likewise.\n+\t* g++.old-deja/g++.jason/conversion11.C: Likewise.\n+\t* g++.old-deja/g++.jason/scoping10.C: Likewise.\n+\t* g++.old-deja/g++.other/expr1.C: Likewise.\n+\t* g++.old-deja/g++.other/pmf3.C: Likewise.\n+\t* g++.old-deja/g++.other/crash24.C: Likewise.\n+\t* g++.old-deja/g++.niklas/t120.C: Likewise.\n+\t* g++.old-deja/g++.niklas/t121.C: Likewise.\n+\t* g++.old-deja/g++.law/operators9.C: Likewise.\n+\t* g++.old-deja/g++.law/arm9.C: Likewise.\n+\t* g++.old-deja/g++.law/enum4.C: Likewise.\n+\t* g++.old-deja/g++.law/arg11.C: Likewise.\n+\t* g++.old-deja/g++.benjamin/15800-1.C: Likewise.\n+\t* g++.old-deja/g++.mike/p2431.C: Likewise.\n+\t* g++.old-deja/g++.mike/p438.C: Likewise.\n+\t* g++.old-deja/g++.mike/p9068.C: Likewise.\n+\t* g++.old-deja/g++.mike/p11110.C: Likewise.\n+\t* g++.old-deja/g++.bugs/900330_02.C: Likewise.\n+\n 2009-12-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* g++.dg/other/i386-2.C: Add -mpopcnt -mabm -mlwp to dg-options."}, {"sha": "67c60f67928e15f54022d8c2b520e7d7f090f499", "filename": "gcc/testsuite/g++.dg/cpp0x/explicit4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit4.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -2,7 +2,7 @@\n // { dg-options \"-std=c++0x\" }\n \n struct A {\n-  A(const A&, int = 0);\t\t// { dg-message \"candidates\" }\n+  A(const A&, int = 0);\t\t// { dg-message \"candidate\" }\n };\n struct B\n {"}, {"sha": "3963b7561d1b84c9bac0de5e9985b5f3cf8721db", "filename": "gcc/testsuite/g++.dg/ext/ms-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fms-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fms-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fms-1.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -10,7 +10,7 @@ struct X\n \n void Quux (void (X::*) ());\n \n-void X::Foo (X *ptr)  // { dg-message \"candidates\" }\n+void X::Foo (X *ptr)  // { dg-message \"candidate\" }\n {\n   Quux (Foo); // { dg-error \"no matches\" }\n   Quux (Bar);"}, {"sha": "6033c0e783d2a9f486398685c41e421554bcbd08", "filename": "gcc/testsuite/g++.dg/other/error20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror20.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -2,7 +2,7 @@\n // { dg-do compile }\n \n struct A\n-{\t\t// { dg-message \"candidates\" }\n+{\t\t// { dg-message \"candidate is\" }\n   virtual A foo ();\n };\n "}, {"sha": "c4095504d6dc229f3b398673d058c905425c095b", "filename": "gcc/testsuite/g++.dg/other/error31.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror31.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -3,7 +3,7 @@\n // { dg-options \"\" }\n // { dg-bogus \"not supported by\" \"\" { target *-*-* } 0 }\n \n-struct A {};\t\t// { dg-message \"note: candidates are\" }\n+struct A {};\t\t// { dg-message \"note: candidate is\" }\n \n void\n foo ()"}, {"sha": "4597d6cf9af533d2060c73003d220dac639b0d75", "filename": "gcc/testsuite/g++.dg/parse/crash5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash5.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-w\" }\n \n class QString { // { dg-error \"previous definition\" }\n-  QString (const QString & a); // { dg-message \"candidates\" }\n+  QString (const QString & a); // { dg-message \"candidate is\" }\n };\n \n class QString { }; // { dg-error \"redefinition\" }"}, {"sha": "39c2d78583736e5cb6af390e27a1417b69601c20", "filename": "gcc/testsuite/g++.dg/parse/error19.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror19.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -2,7 +2,7 @@\n // PR C++/17867\n \n struct A\n-{  // { dg-message \"1:candidates are:\" }\n+{  // { dg-message \"1:candidate is:\" }\n   A(int);\n };\n "}, {"sha": "adc5bbb02fb72aea427530dcf9d17a4a66ac3ccf", "filename": "gcc/testsuite/g++.dg/rtti/typeid6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Ftypeid6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Ftypeid6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Ftypeid6.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -7,5 +7,5 @@ namespace std\n \n template<int> void foo()\n {\n-  !typeid(void); // { dg-error \"!typeid\\\\(void\\\\)|candidates\" }\n+  !typeid(void); // { dg-error \"!typeid\\\\(void\\\\)|candidate is\" }\n }"}, {"sha": "aef0df0846ec6316274e13c5c3f94b5b5fb105de", "filename": "gcc/testsuite/g++.dg/template/crash37.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash37.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash37.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash37.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -11,7 +11,7 @@ struct coperator_stack\n struct helper {};\n \n template<class F>\n-void bla(F f) // { dg-message \"candidates\" }\n+void bla(F f) // { dg-message \"candidate is\" }\n {\n }\n "}, {"sha": "9cdf310c738b75c85bc657700bb69396a49ba71b", "filename": "gcc/testsuite/g++.dg/template/instantiate5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate5.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -13,7 +13,7 @@ int baz() { return A<0>::i; }\n \n struct B\n {\n-  static void foo (int);\t// { dg-message \"candidates\" }\n+  static void foo (int);\t// { dg-message \"candidate is\" }\n };\n \n template <typename T> struct C"}, {"sha": "c691c4c789b81fa3a598750f52aedec5b95b3f1d", "filename": "gcc/testsuite/g++.dg/template/local6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal6.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -1,5 +1,5 @@\n template <class T> struct PCVector2\n-{ // { dg-message \"candidates\" }\n+{ // { dg-message \"candidate is\" }\n     template <class T2> PCVector2(const PCVector2<T> &cv) ;\n \n     PCVector2<T> operator- (const PCVector2<T> &ov) const "}, {"sha": "b1422c3e811c67ebf20d407cd76a6995fecb6000", "filename": "gcc/testsuite/g++.dg/template/ptrmem4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem4.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -6,7 +6,7 @@\n // Pointer to member function template argument deduction ICE.\n \n \n-template <class CONT> void queryAliases(CONT& fill_me); // { dg-message \"candidates\" }\n+template <class CONT> void queryAliases(CONT& fill_me); // { dg-message \"candidate is\" }\n \n struct SpyExample\n {"}, {"sha": "fc93f4628356158b44a668efbd6a1462ae4c2e06", "filename": "gcc/testsuite/g++.dg/template/qualttp5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp5.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -4,7 +4,7 @@\n \n template <class U> struct A\n {\n-\ttemplate <class T> class B {}; // { dg-message \"candidates\" }\n+\ttemplate <class T> class B {}; // { dg-message \"candidate is\" }\n };\n \n template <template <class> class TT> void f()"}, {"sha": "3441ae5bed070082d31b8be30be0df02367737d4", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/15800-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15800-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15800-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15800-1.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -5,7 +5,7 @@\n struct panama {\n   panama();\n   panama(panama &);\n-  panama& operator=(panama&); // { dg-message \"candidates\" }\n+  panama& operator=(panama&); // { dg-message \"candidate is\" }\n };\n \n extern panama dig();"}, {"sha": "e77c437a6d066c82303154e2b1d7333d4a581e80", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/cvt3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcvt3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcvt3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcvt3.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -38,7 +38,7 @@ struct bar\n class nnyacc\n {\n public:\n-      static void assign(void*& lval, void*& rval); // { dg-message \"candidates\" }\n+      static void assign(void*& lval, void*& rval); // { dg-message \"candidate is\" }\n };\n \n void"}, {"sha": "328bcdfe2ce8206f93f56fb61ecff90597d34178", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/overload1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload1.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -9,7 +9,7 @@ public:\n class Bar : public Foo\n {\n public:\n-      int f (int); // { dg-message \"candidates\" }\n+      int f (int); // { dg-message \"candidate is\" }\n };\n \n int main ()"}, {"sha": "7a1941cac4e7aac70cec5c49107267bd99e8d9dc", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/overload4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload4.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -5,7 +5,7 @@\n   class B\n   {\n   public:\n-\tstatic void WantsNew (NewObject creator); // { dg-message \"candidates\" }\n+\tstatic void WantsNew (NewObject creator); // { dg-message \"candidate is\" }\n   };\n   \n   class A"}, {"sha": "5038f23b16c5464aeb8c2a77f58953e9c2e28e92", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900330_02.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900330_02.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900330_02.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900330_02.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -19,7 +19,7 @@ struct B {\n };\n \n struct D : public B {\n-  int f(struct B);\t\t// { dg-message \"candidates\" } referred to below\n+  int f(struct B);\t\t// { dg-message \"candidate is\" } referred to below\n };\n \n void h(D* pd)"}, {"sha": "1e64693d804723ad04229bde29e561f3b86f43ef", "filename": "gcc/testsuite/g++.old-deja/g++.jason/conversion11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fconversion11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fconversion11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fconversion11.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -14,7 +14,7 @@ public:\n \n class Something {\n public:\n-  void DoSomething(Ding A);\t// { dg-message \"candidates\" } referred to\n+  void DoSomething(Ding A);\t// { dg-message \"candidate is\" } referred to\n };\n \n void DoSomething(Ding A);"}, {"sha": "9e6ae0f68983680b8a5e641dea1cd43efb421b16", "filename": "gcc/testsuite/g++.old-deja/g++.jason/scoping10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fscoping10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fscoping10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fscoping10.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -3,7 +3,7 @@\n \n void f (char *);\n struct A {\n-  void f ();\t\t\t// { dg-message \"candidates\" } referred to \n+  void f ();\t\t\t// { dg-message \"candidate is\" } referred to \n };\n struct B : public A {\n   void g (char *);"}, {"sha": "01331535ee2c42a5f797befe39c87cff6dca27f7", "filename": "gcc/testsuite/g++.old-deja/g++.law/arg11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg11.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -9,7 +9,7 @@ struct String { String(const char*); };\n \n struct Ack { Ack(String); };\n \n-struct S { void method(Ack); };\t// { dg-message \"candidates\" } referenced below\n+struct S { void method(Ack); };\t// { dg-message \"candidate is\" } referenced below\n \n void function(Ack);\n "}, {"sha": "b8128c6f686a8b9bb53c40dc6bcfdd66ee8c691c", "filename": "gcc/testsuite/g++.old-deja/g++.law/arm9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm9.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -19,7 +19,7 @@ class B : public A {\n public:\n     void set (f2 f);\n };\n-void B::set (f2 f) { std::cout << \"called B\\n\";} // { dg-message \"candidates\" }\n+void B::set (f2 f) { std::cout << \"called B\\n\";} // { dg-message \"candidate is\" }\n \n int main() {\n     B b;"}, {"sha": "37836595b2f12e4a8a9d0b362df78d6600983539", "filename": "gcc/testsuite/g++.old-deja/g++.law/enum4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fenum4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fenum4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fenum4.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -11,7 +11,7 @@ enum Enum {enumerator1, enumerator2};\n struct Struct\n {\n   int i;\n-      int getI(Enum) {return i;} // { dg-message \"candidates\" }\n+      int getI(Enum) {return i;} // { dg-message \"candidate is\" }\n };\n \n int funct (Enum)"}, {"sha": "d00c707c9152fd5c821b3325f024d774fede9336", "filename": "gcc/testsuite/g++.old-deja/g++.law/operators9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators9.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -10,7 +10,7 @@ class B\n {\n public:\n       operator=(B &); // { dg-error \"no type\" }\n-      // { dg-message \"candidates\" \"note\" { target *-*-* } 12 }\n+      // { dg-message \"candidate is\" \"note\" { target *-*-* } 12 }\n };\n \n void"}, {"sha": "e234d57c323a0dd9efe499f80d99be55e26ce824", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p11110.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp11110.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp11110.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp11110.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -6,7 +6,7 @@ class data;\n class conatiner {\n public:\n   virtual void* first    ();\n-  virtual data* contents (void* i);     // { dg-message \"candidates\" }\n+  virtual data* contents (void* i);     // { dg-message \"candidate is\" }\n };\n \n class user {"}, {"sha": "0bb2648215a17130379f8fdb023968351bf04f87", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p2431.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp2431.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp2431.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp2431.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -3,7 +3,7 @@\n class A\n {\n \tpublic:\n-      A(A &); // { dg-message \"candidates\" }\n+      A(A &); // { dg-message \"candidate is\" }\n };\n \n class B"}, {"sha": "16dc628b6135026fedcddf3980f84f70bb09864c", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p438.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp438.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp438.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp438.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -12,7 +12,7 @@ class C\n class D\n {\n    public:\n-   void a(C& b); // { dg-message \"candidates\" }\n+   void a(C& b); // { dg-message \"candidate is\" }\n };\n \n void C::test() const"}, {"sha": "ff5454b2289680d532ec54e55db67d6ca2fe9733", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p9068.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp9068.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp9068.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp9068.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -2,7 +2,7 @@\n // prms-id: 9068\n \n struct ostream {\n-  void operator<< (int);\t// { dg-message \"candidates\" } fn ref in err msg\n+  void operator<< (int);\t// { dg-message \"candidate is\" } fn ref in err msg\n };\n \n class C {"}, {"sha": "bef0665522033d56421006425e4cf96ff3feb67a", "filename": "gcc/testsuite/g++.old-deja/g++.niklas/t120.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft120.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft120.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft120.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -3,4 +3,4 @@\n typedef void (*T) (...);\n void f ();\n struct S { void g (T); void h() { g(f); } };// { dg-error \"match\" \"match\" } \n-// { dg-message \"candidates\" \"note\" { target *-*-* } 5 }\n+// { dg-message \"candidate is\" \"note\" { target *-*-* } 5 }"}, {"sha": "4510a280312da4254620c491f490513988f2a4bc", "filename": "gcc/testsuite/g++.old-deja/g++.niklas/t121.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft121.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft121.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft121.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -3,4 +3,4 @@\n void f ();\n void g1 (void (*) (...)); void h1 () { g1 (f); }// { dg-error \"invalid conversion\" }\n struct S { void g2 (void (*) (...)); void h2 () { g2 (f); } };// { dg-error \"match\" \"match\" } \n-// { dg-message \"candidates\" \"note\" { target *-*-* } 5 }\n+// { dg-message \"candidate is\" \"note\" { target *-*-* } 5 }"}, {"sha": "a49ce56b1aa3ee52b1e2f5bb1b17c65fd192433d", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash24.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash24.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -7,7 +7,7 @@ class foo {\n    friend class __iterator;\n    typedef __iterator const_iterator;\n    virtual ~foo() { }\n-   __iterator begin();\t\t\t\t// { dg-message \"candidates\" } \n+   __iterator begin();\t\t\t\t// { dg-message \"candidate is\" } \n };\n static void iteratorTest(const foo &x)\n {"}, {"sha": "485594dfbe31fd871356e3bf152dfdf09df51406", "filename": "gcc/testsuite/g++.old-deja/g++.other/expr1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fexpr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fexpr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fexpr1.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -3,7 +3,7 @@\n // Simplified from bug report by Trevor Taylor <ttaylor@powerup.com.au>\n \n struct T {\n-  int operator()(int) { } // { dg-message \"candidates\" }\n+  int operator()(int) { } // { dg-message \"candidate is\" }\n };\n \n int main() {"}, {"sha": "f43ed65ef2a14a6119244fd1dbc3672c7b429911", "filename": "gcc/testsuite/g++.old-deja/g++.other/pmf3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fpmf3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba6f70d7fa8fa889576172a23c199a51abdd045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fpmf3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fpmf3.C?ref=6ba6f70d7fa8fa889576172a23c199a51abdd045", "patch": "@@ -3,7 +3,7 @@\n // Bug: g++ was crashing after giving errors.\n \n template<class T>\n-  void connect_to_method( // { dg-message \"candidates are\" }\n+  void connect_to_method( // { dg-message \"candidate is\" }\n     T *receiver,\n     void (T::*method)())\n   {}"}]}