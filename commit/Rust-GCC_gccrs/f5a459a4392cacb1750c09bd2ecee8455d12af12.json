{"sha": "f5a459a4392cacb1750c09bd2ecee8455d12af12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVhNDU5YTQzOTJjYWNiMTc1MGMwOWJkMmVjZWU4NDU1ZDEyYWYxMg==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2016-07-21T15:41:59Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2016-07-21T15:41:59Z"}, "message": "[Patch 3/2 ifcvt costs] Don't expand a conditional move between identical sources\n\ngcc/\n\n\t* optabs.c (emit_condiitonal_move): Short circuit for identical\n\tsources.\n\nFrom-SVN: r238595", "tree": {"sha": "7ac5f6a54c660c17fb69f44c672abf5ac9f9aa6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ac5f6a54c660c17fb69f44c672abf5ac9f9aa6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5a459a4392cacb1750c09bd2ecee8455d12af12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5a459a4392cacb1750c09bd2ecee8455d12af12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5a459a4392cacb1750c09bd2ecee8455d12af12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5a459a4392cacb1750c09bd2ecee8455d12af12/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ebe8f3226c94173073958da74e9acb4e444e4097", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebe8f3226c94173073958da74e9acb4e444e4097", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebe8f3226c94173073958da74e9acb4e444e4097"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "0757c89bf84adc4defdd6888f55823ed81e30147", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5a459a4392cacb1750c09bd2ecee8455d12af12/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5a459a4392cacb1750c09bd2ecee8455d12af12/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5a459a4392cacb1750c09bd2ecee8455d12af12", "patch": "@@ -1,3 +1,8 @@\n+2016-07-21  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* optabs.c (emit_condiitonal_move): Short circuit for identical\n+\tsources.\n+\n 2016-07-21  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* ifcvt.c (noce_if_info): New fields: speed_p, original_cost,"}, {"sha": "87b4f978420dfd2df3d915985509912d85c94569", "filename": "gcc/optabs.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5a459a4392cacb1750c09bd2ecee8455d12af12/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5a459a4392cacb1750c09bd2ecee8455d12af12/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=f5a459a4392cacb1750c09bd2ecee8455d12af12", "patch": "@@ -4214,6 +4214,17 @@ emit_conditional_move (rtx target, enum rtx_code code, rtx op0, rtx op1,\n   enum insn_code icode;\n   enum rtx_code reversed;\n \n+  /* If the two source operands are identical, that's just a move.  */\n+\n+  if (rtx_equal_p (op2, op3))\n+    {\n+      if (!target)\n+\ttarget = gen_reg_rtx (mode);\n+\n+      emit_move_insn (target, op3);\n+      return target;\n+    }\n+\n   /* If one operand is constant, make it the second one.  Only do this\n      if the other operand is not constant as well.  */\n "}]}