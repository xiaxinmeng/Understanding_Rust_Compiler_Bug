{"sha": "5c19a35643bd0c7d5a2766a5b91f6b6b4cb7242d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMxOWEzNTY0M2JkMGM3ZDVhMjc2NmE1YjkxZjZiNmI0Y2I3MjQyZA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@wrs.com", "date": "1997-10-16T21:45:24Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-10-16T21:45:24Z"}, "message": "c-decl.c (start_struct): Ensure that structs with forward declarations are in fact packed when...\n\n        * c-decl.c (start_struct): Ensure that structs with forward\n        declarations are in fact packed when -fpack-struct is given.\n\n        * stor-layout.c (layout_record): Ignore STRUCTURE_SIZE_BOUNDARY if\n        we are packing a structure.  This allows a structure with only\n        bytes to be aligned on a byte boundary and have no padding on a\n        m68k.\n\nFrom-SVN: r15939", "tree": {"sha": "074af1c4450358fa3fca1e255fb9492918cce5f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/074af1c4450358fa3fca1e255fb9492918cce5f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c19a35643bd0c7d5a2766a5b91f6b6b4cb7242d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c19a35643bd0c7d5a2766a5b91f6b6b4cb7242d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c19a35643bd0c7d5a2766a5b91f6b6b4cb7242d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c19a35643bd0c7d5a2766a5b91f6b6b4cb7242d/comments", "author": null, "committer": null, "parents": [{"sha": "bdd7e652f4b7b615e07eef4f83d80fb9ab7425e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd7e652f4b7b615e07eef4f83d80fb9ab7425e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdd7e652f4b7b615e07eef4f83d80fb9ab7425e8"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "32a32398db6552c23a20870f91acbbfcacc69e14", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c19a35643bd0c7d5a2766a5b91f6b6b4cb7242d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c19a35643bd0c7d5a2766a5b91f6b6b4cb7242d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c19a35643bd0c7d5a2766a5b91f6b6b4cb7242d", "patch": "@@ -1,3 +1,13 @@\n+Thu Oct 16 15:43:26 1997  Mike Stump  (mrs@wrs.com)\n+\n+\t* c-decl.c (start_struct): Ensure that structs with forward\n+\tdeclarations are in fact packed when -fpack-struct is given.\n+\n+\t* stor-layout.c (layout_record): Ignore STRUCTURE_SIZE_BOUNDARY if\n+\twe are packing a structure.  This allows a structure with only\n+\tbytes to be aligned on a byte boundary and have no padding on a\n+\tm68k.\n+\n Thu Oct 16 15:17:54 1997  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* rs6000.h (ROUND_TYPE_ALIGN): Don't blow up if no fields in record."}, {"sha": "e38cdb15a89a3caa3d596a7ec57bf797b493bff8", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c19a35643bd0c7d5a2766a5b91f6b6b4cb7242d/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c19a35643bd0c7d5a2766a5b91f6b6b4cb7242d/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=5c19a35643bd0c7d5a2766a5b91f6b6b4cb7242d", "patch": "@@ -5529,6 +5529,7 @@ start_struct (code, name)\n   if (ref && TREE_CODE (ref) == code)\n     {\n       C_TYPE_BEING_DEFINED (ref) = 1;\n+      TYPE_PACKED (ref) = flag_pack_struct;\n       if (TYPE_FIELDS (ref))\n \terror ((code == UNION_TYPE ? \"redefinition of `union %s'\"\n \t\t: \"redefinition of `struct %s'\"),"}, {"sha": "2ccf45ee1f4cf21a12804b000f39a2369f96fba3", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c19a35643bd0c7d5a2766a5b91f6b6b4cb7242d/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c19a35643bd0c7d5a2766a5b91f6b6b4cb7242d/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=5c19a35643bd0c7d5a2766a5b91f6b6b4cb7242d", "patch": "@@ -306,11 +306,7 @@ layout_record (rec)\n      tree rec;\n {\n   register tree field;\n-#ifdef STRUCTURE_SIZE_BOUNDARY\n-  unsigned record_align = MAX (STRUCTURE_SIZE_BOUNDARY, TYPE_ALIGN (rec));\n-#else\n   unsigned record_align = MAX (BITS_PER_UNIT, TYPE_ALIGN (rec));\n-#endif\n   /* These must be laid out *after* the record is.  */\n   tree pending_statics = NULL_TREE;\n   /* Record size so far is CONST_SIZE + VAR_SIZE bits,\n@@ -324,6 +320,11 @@ layout_record (rec)\n      that we know VAR_SIZE has.  */\n   register int var_align = BITS_PER_UNIT;\n \n+#ifdef STRUCTURE_SIZE_BOUNDARY\n+  /* Packed structures don't need to have minimum size.  */\n+  if (! TYPE_PACKED (rec))\n+    record_align = MAX (record_align, STRUCTURE_SIZE_BOUNDARY);\n+#endif\n \n   for (field = TYPE_FIELDS (rec); field; field = TREE_CHAIN (field))\n     {\n@@ -563,18 +564,20 @@ layout_union (rec)\n      tree rec;\n {\n   register tree field;\n-#ifdef STRUCTURE_SIZE_BOUNDARY\n-  unsigned union_align = STRUCTURE_SIZE_BOUNDARY;\n-#else\n   unsigned union_align = BITS_PER_UNIT;\n-#endif\n \n   /* The size of the union, based on the fields scanned so far,\n      is max (CONST_SIZE, VAR_SIZE).\n      VAR_SIZE may be null; then CONST_SIZE by itself is the size.  */\n   register int const_size = 0;\n   register tree var_size = 0;\n \n+#ifdef STRUCTURE_SIZE_BOUNDARY\n+  /* Packed structures don't need to have minimum size.  */\n+  if (! TYPE_PACKED (rec))\n+    union_align = STRUCTURE_SIZE_BOUNDARY;\n+#endif\n+\n   /* If this is a QUAL_UNION_TYPE, we want to process the fields in\n      the reverse order in building the COND_EXPR that denotes its\n      size.  We reverse them again later.  */"}]}