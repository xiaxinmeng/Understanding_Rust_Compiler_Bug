{"sha": "0326887985771b6f97f4f4f94ec58ce4e2f39a37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMyNjg4Nzk4NTc3MWI2Zjk3ZjRmNGY5NGVjNThjZTRlMmYzOWEzNw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-09-11T04:18:16Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-09-11T04:18:16Z"}, "message": "Back out Kenner's Makefile.in patch.\n\nFrom-SVN: r15403", "tree": {"sha": "d575d25e7ff36350b038badab67398ab696b959d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d575d25e7ff36350b038badab67398ab696b959d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0326887985771b6f97f4f4f94ec58ce4e2f39a37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0326887985771b6f97f4f4f94ec58ce4e2f39a37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0326887985771b6f97f4f4f94ec58ce4e2f39a37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0326887985771b6f97f4f4f94ec58ce4e2f39a37/comments", "author": null, "committer": null, "parents": [{"sha": "f2e4e16f79a6e3764a07b77162024fa4a88d9ffa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e4e16f79a6e3764a07b77162024fa4a88d9ffa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2e4e16f79a6e3764a07b77162024fa4a88d9ffa"}], "stats": {"total": 32, "additions": 12, "deletions": 20}, "files": [{"sha": "d82d402cd0ba9a1f6df792902bb78e795e6bb320", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0326887985771b6f97f4f4f94ec58ce4e2f39a37/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0326887985771b6f97f4f4f94ec58ce4e2f39a37/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0326887985771b6f97f4f4f94ec58ce4e2f39a37", "patch": "@@ -18,12 +18,6 @@ Wed Sep 10 16:01:15 1997  Jim Wilson  <wilson@cygnus.com>\n \t* libgcc2.c (__enable_execute_stack): Check for __sysV88__ not\n \t__DOLPHIN__ or sysV88.\n \n-Wed Sep 10 16:16:07 1997  Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n-\n-\t* Makefile.in (LN): Add new symbol.  \n-\t(FLAGS_TO_PASS): Pass it down.\n-\t(stage[1-4]-start): Use $(LN), not \"ln -s\".\n-\n Wed Sep 10 14:58:40 1997  Jim Wilson  <wilson@cygnus.com>\n \n \t* emit-rtl.c (gen_lowpart_common): For a SUBREG, add in word when"}, {"sha": "76e7a7fdac539ab06fe133b3b21437c6d452fe00", "filename": "gcc/Makefile.in", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0326887985771b6f97f4f4f94ec58ce4e2f39a37/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0326887985771b6f97f4f4f94ec58ce4e2f39a37/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=0326887985771b6f97f4f4f94ec58ce4e2f39a37", "patch": "@@ -73,7 +73,6 @@ LEX = flex\n LEXFLAGS =\n AR = ar\n AR_FLAGS = rc\n-LN = @symbolic_link@\n DLLTOOL = dlltool\n SHELL = /bin/sh\n # on sysV, define this as cp.\n@@ -531,7 +530,6 @@ FLAGS_TO_PASS = \\\n \t\"LDFLAGS=$(LDFLAGS)\" \\\n \t\"LEX=$(LEX)\" \\\n \t\"LEXFLAGS=$(LEXFLAGS)\" \\\n-\t\"LN=$(LN)\" \\\n \t\"MAKEINFO=$(MAKEINFO)\" \\\n \t\"MAKEINFOFLAGS=$(MAKEINFOFLAGS)\" \\\n \t\"RANLIB_FOR_TARGET=$(RANLIB_FOR_TARGET)\" \\\n@@ -2671,9 +2669,9 @@ stage1-start:\n \t-mv $(STAGESTUFF) stage1\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as$(exeext) ] ; then $(LN) ../as$(exeext) stage1 ; else true ; fi\n-\t-if [ -f ld$(exeext) ] ; then $(LN) ../ld$(exeext) stage1 ; else true ; fi\n-\t-if [ -f collect-ld$(exeext) ] ; then $(LN) ../collect-ld$(exeext) stage1 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then ln -s ../as$(exeext) stage1 || cp as$(exeext) stage1 ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then ln -s ../ld$(exeext) stage1 || cp ld$(exeext) stage1 ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then ln -s ../collect-ld$(exeext) stage1 || cp collect-ld$(exeext) stage1 ; else true ; fi\n \t-rm -f stage1/libgcc.a\n \t-cp libgcc.a stage1\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage1/libgcc.a; else true; fi\n@@ -2692,9 +2690,9 @@ stage2-start:\n \t-mv $(STAGESTUFF) stage2\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as$(exeext) ] ; then $(LN) ../as$(exeext) stage2 ; else true ; fi\n-\t-if [ -f ld$(exeext) ] ; then $(LN) ../ld$(exeext) stage2 ; else true ; fi\n-\t-if [ -f collect-ld ] ; then $(LN) ../collect-ld$(exeext) stage2 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then ln -s ../as$(exeext) stage2 || cp as$(exeext) stage2 ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then ln -s ../ld$(exeext) stage2 || cp ld$(exeext) stage2 ; else true ; fi\n+\t-if [ -f collect-ld ] ; then ln -s ../collect-ld$(exeext) stage2 || cp collect-ld$(exeext) stage2 ; else true ; fi\n \t-rm -f stage2/libgcc.a\n \t-cp libgcc.a stage2\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage2/libgcc.a; else true; fi\n@@ -2713,9 +2711,9 @@ stage3-start:\n \t-mv $(STAGESTUFF) stage3\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as$(exeext) ] ; then $(LN) ../as$(exeext) stage3 ; else true ; fi\n-\t-if [ -f ld$(exeext) ] ; then $(LN) ../ld$(exeext) stage3 ; else true ; fi\n-\t-if [ -f collect-ld$(exeext) ] ; then $(LN) ../collect-ld$(exeext) stage3 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then ln -s ../as$(exeext) stage3 || cp as$(exeext) stage3 ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then ln -s ../ld$(exeext) stage3 || cp ld$(exeext) stage3 ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then ln -s ../collect-ld$(exeext) stage3 || cp collect-ld$(exeext) stage3 ; else true ; fi\n \t-rm -f stage3/libgcc.a\n \t-cp libgcc.a stage3\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage3/libgcc.a; else true; fi\n@@ -2734,9 +2732,9 @@ stage4-start:\n \t-mv $(STAGESTUFF) stage4\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n-\t-if [ -f as$(exeext) ] ; then $(LN) ../as$(exeext) stage4 ; else true ; fi\n-\t-if [ -f ld$(exeext) ] ; then $(LN) ../ld$(exeext) stage4 ; else true ; fi\n-\t-if [ -f collect-ld$(exeext) ] ; then $(LN) ../collect-ld$(exeext) stage4 ; else true ; fi\n+\t-if [ -f as$(exeext) ] ; then ln -s ../as$(exeext) stage4 || cp as$(exeext) stage4 ; else true ; fi\n+\t-if [ -f ld$(exeext) ] ; then ln -s ../ld$(exeext) stage4 || cp ld$(exeext) stage4 ; else true ; fi\n+\t-if [ -f collect-ld$(exeext) ] ; then ln -s ../collect-ld$(exeext) stage4 || cp collect-ld$(exeext) stage4 ; else true ; fi\n \t-rm -f stage4/libgcc.a\n \t-cp libgcc.a stage4\n \t-if $(RANLIB_TEST) ; then $(RANLIB) stage4/libgcc.a; else true; fi"}]}