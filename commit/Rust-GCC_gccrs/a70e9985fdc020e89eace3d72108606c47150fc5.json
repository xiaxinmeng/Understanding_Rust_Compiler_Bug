{"sha": "a70e9985fdc020e89eace3d72108606c47150fc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcwZTk5ODVmZGMwMjBlODllYWNlM2Q3MjEwODYwNmM0NzE1MGZjNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-01-09T20:09:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-01-09T20:09:33Z"}, "message": "re PR tree-optimization/59622 (internal compiler error: verify_gimple failed)\n\n\tPR tree-optimization/59622\n\t* gimple-fold.c (gimple_fold_call): Fix a typo in message.  For\n\t__builtin_unreachable replace the OBJ_TYPE_REF call with a call to\n\t__builtin_unreachable and add if needed a setter of the lhs SSA_NAME.\n\tDon't devirtualize for inplace at all.  For targets.length () == 1,\n\tif the call is noreturn and cfun isn't in SSA form yet, clear lhs.\n\n\t* g++.dg/opt/pr59622-2.C: New test.\n\t* g++.dg/opt/pr59622-3.C: New test.\n\t* g++.dg/opt/pr59622-4.C: New test.\n\t* g++.dg/opt/pr59622-5.C: New test.\n\nFrom-SVN: r206492", "tree": {"sha": "6ca99a99212dfd53b8fe2ea60d34b8cdff1d5e2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ca99a99212dfd53b8fe2ea60d34b8cdff1d5e2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a70e9985fdc020e89eace3d72108606c47150fc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a70e9985fdc020e89eace3d72108606c47150fc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a70e9985fdc020e89eace3d72108606c47150fc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a70e9985fdc020e89eace3d72108606c47150fc5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94c13a09115ce6b419c5ed809630e746ba1ae134", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c13a09115ce6b419c5ed809630e746ba1ae134", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94c13a09115ce6b419c5ed809630e746ba1ae134"}], "stats": {"total": 137, "additions": 132, "deletions": 5}, "files": [{"sha": "7d000f2b9b5c3ed8acfd26c824f90f0970f3d7fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a70e9985fdc020e89eace3d72108606c47150fc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a70e9985fdc020e89eace3d72108606c47150fc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a70e9985fdc020e89eace3d72108606c47150fc5", "patch": "@@ -1,3 +1,12 @@\n+2014-01-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/59622\n+\t* gimple-fold.c (gimple_fold_call): Fix a typo in message.  For\n+\t__builtin_unreachable replace the OBJ_TYPE_REF call with a call to\n+\t__builtin_unreachable and add if needed a setter of the lhs SSA_NAME.\n+\tDon't devirtualize for inplace at all.  For targets.length () == 1,\n+\tif the call is noreturn and cfun isn't in SSA form yet, clear lhs.\n+\n 2014-01-09  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.md (cpu): Remove the unused btver1."}, {"sha": "b2b38765dd6ec2e9ffe0dd60a53f0ff41140fab5", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a70e9985fdc020e89eace3d72108606c47150fc5/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a70e9985fdc020e89eace3d72108606c47150fc5/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=a70e9985fdc020e89eace3d72108606c47150fc5", "patch": "@@ -1167,7 +1167,7 @@ gimple_fold_call (gimple_stmt_iterator *gsi, bool inplace)\n                                                  (OBJ_TYPE_REF_EXPR (callee)))))\n \t    {\n \t      fprintf (dump_file,\n-\t\t       \"Type inheritnace inconsistent devirtualization of \");\n+\t\t       \"Type inheritance inconsistent devirtualization of \");\n \t      print_gimple_stmt (dump_file, stmt, 0, TDF_SLIM);\n \t      fprintf (dump_file, \" to \");\n \t      print_generic_expr (dump_file, callee, TDF_SLIM);\n@@ -1177,24 +1177,45 @@ gimple_fold_call (gimple_stmt_iterator *gsi, bool inplace)\n \t  gimple_call_set_fn (stmt, OBJ_TYPE_REF_EXPR (callee));\n \t  changed = true;\n \t}\n-      else if (flag_devirtualize && virtual_method_call_p (callee))\n+      else if (flag_devirtualize && !inplace && virtual_method_call_p (callee))\n \t{\n \t  bool final;\n \t  vec <cgraph_node *>targets\n \t    = possible_polymorphic_call_targets (callee, &final);\n \t  if (final && targets.length () <= 1)\n \t    {\n+\t      tree lhs = gimple_call_lhs (stmt);\n \t      if (targets.length () == 1)\n \t\t{\n \t\t  gimple_call_set_fndecl (stmt, targets[0]->decl);\n \t\t  changed = true;\n+\t\t  /* If the call becomes noreturn, remove the lhs.  */\n+\t\t  if (lhs && (gimple_call_flags (stmt) & ECF_NORETURN))\n+\t\t    {\n+\t\t      if (TREE_CODE (lhs) == SSA_NAME)\n+\t\t\t{\n+\t\t\t  tree var = create_tmp_var (TREE_TYPE (lhs), NULL);\n+\t\t\t  tree def = get_or_create_ssa_default_def (cfun, var);\n+\t\t\t  gimple new_stmt = gimple_build_assign (lhs, def);\n+\t\t\t  gsi_insert_before (gsi, new_stmt, GSI_SAME_STMT);\n+\t\t\t}\n+\t\t      gimple_call_set_lhs (stmt, NULL_TREE);\n+\t\t    }\n \t\t}\n-\t      else if (!inplace)\n+\t      else\n \t\t{\n \t\t  tree fndecl = builtin_decl_implicit (BUILT_IN_UNREACHABLE);\n \t\t  gimple new_stmt = gimple_build_call (fndecl, 0);\n \t\t  gimple_set_location (new_stmt, gimple_location (stmt));\n-\t\t  gsi_insert_before (gsi, new_stmt, GSI_SAME_STMT);\n+\t\t  if (lhs && TREE_CODE (lhs) == SSA_NAME)\n+\t\t    {\n+\t\t      tree var = create_tmp_var (TREE_TYPE (lhs), NULL);\n+\t\t      tree def = get_or_create_ssa_default_def (cfun, var);\n+\t\t      gsi_insert_before (gsi, new_stmt, GSI_SAME_STMT);\n+\t\t      update_call_from_tree (gsi, def);\n+\t\t    }\n+\t\t  else\n+\t\t    gsi_replace (gsi, new_stmt, true);\n \t\t  return true;\n \t\t}\n \t    }"}, {"sha": "d6a7a01dac96c4b044f22db2c2802e38da986a42", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a70e9985fdc020e89eace3d72108606c47150fc5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a70e9985fdc020e89eace3d72108606c47150fc5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a70e9985fdc020e89eace3d72108606c47150fc5", "patch": "@@ -1,4 +1,10 @@\n-2014-10-09  Jakub Jelinek  <jakub@redhat.com>\n+2014-01-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/59622\n+\t* g++.dg/opt/pr59622-2.C: New test.\n+\t* g++.dg/opt/pr59622-3.C: New test.\n+\t* g++.dg/opt/pr59622-4.C: New test.\n+\t* g++.dg/opt/pr59622-5.C: New test.\n \n \tPR sanitizer/59136\n \t* c-c++-common/asan/strip-path-prefix-1.c: Allow also the"}, {"sha": "8096eebca40b747a0e0b5ffc814ebda84fdbd752", "filename": "gcc/testsuite/g++.dg/opt/pr59622-2.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a70e9985fdc020e89eace3d72108606c47150fc5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr59622-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a70e9985fdc020e89eace3d72108606c47150fc5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr59622-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr59622-2.C?ref=a70e9985fdc020e89eace3d72108606c47150fc5", "patch": "@@ -0,0 +1,21 @@\n+// PR tree-optimization/59622\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+namespace\n+{\n+  struct A\n+  {\n+    A () {}\n+    virtual A *bar (int) = 0;\n+    A *baz (int x) { return bar (x); }\n+  };\n+}\n+\n+A *a;\n+\n+void\n+foo ()\n+{\n+  a->baz (0);\n+}"}, {"sha": "0af86050c23a4111c48918e801dbbbbb33d4d686", "filename": "gcc/testsuite/g++.dg/opt/pr59622-3.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a70e9985fdc020e89eace3d72108606c47150fc5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr59622-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a70e9985fdc020e89eace3d72108606c47150fc5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr59622-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr59622-3.C?ref=a70e9985fdc020e89eace3d72108606c47150fc5", "patch": "@@ -0,0 +1,21 @@\n+// PR tree-optimization/59622\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+struct C { int a; int b; };\n+\n+namespace\n+{\n+  struct A\n+  {\n+    virtual C foo ();\n+    C bar () { return foo (); }\n+  };\n+}\n+\n+C\n+baz ()\n+{\n+  A a;\n+  return a.bar ();\n+}"}, {"sha": "f72af1641c86764705ff66fdb1a653cf85288567", "filename": "gcc/testsuite/g++.dg/opt/pr59622-4.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a70e9985fdc020e89eace3d72108606c47150fc5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr59622-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a70e9985fdc020e89eace3d72108606c47150fc5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr59622-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr59622-4.C?ref=a70e9985fdc020e89eace3d72108606c47150fc5", "patch": "@@ -0,0 +1,23 @@\n+// PR tree-optimization/59622\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+struct C { int a; int b; };\n+\n+namespace\n+{\n+  struct A\n+  {\n+    A () {}\n+    virtual C bar (int) = 0;\n+    C baz (int x) { return bar (x); }\n+  };\n+}\n+\n+A *a;\n+\n+C\n+foo ()\n+{\n+  return a->baz (0);\n+}"}, {"sha": "bcb2591a64c042c2aba2dfed945c0e7dea139fe9", "filename": "gcc/testsuite/g++.dg/opt/pr59622-5.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a70e9985fdc020e89eace3d72108606c47150fc5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr59622-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a70e9985fdc020e89eace3d72108606c47150fc5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr59622-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr59622-5.C?ref=a70e9985fdc020e89eace3d72108606c47150fc5", "patch": "@@ -0,0 +1,26 @@\n+// PR tree-optimization/59622\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+namespace\n+{\n+  struct A\n+  {\n+    A () {}\n+    virtual A *bar (int);\n+    A *baz (int x) { return bar (x); }\n+  };\n+\n+  __attribute__((noreturn)) A *A::bar (int)\n+  {\n+    __builtin_exit (0);\n+  }\n+}\n+\n+A *a;\n+\n+void\n+foo ()\n+{\n+  a->baz (0);\n+}"}]}