{"sha": "e34e52073e7bd69a060412afa6d9b2e5a894b976", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM0ZTUyMDczZTdiZDY5YTA2MDQxMmFmYTZkOWIyZTVhODk0Yjk3Ng==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-10-29T16:41:41Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-10-29T16:41:41Z"}, "message": "i386.c (ix86_decompose_address): Use simplify_gen_subreg for all addresses, zero-extended with AND.\n\n\t* config/i386/i386.c (ix86_decompose_address): Use simplify_gen_subreg\n\tfor all addresses, zero-extended with AND.\n\nFrom-SVN: r192950", "tree": {"sha": "f9c9487ea965de0f15ffd5c06edd826ac2aea1b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9c9487ea965de0f15ffd5c06edd826ac2aea1b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e34e52073e7bd69a060412afa6d9b2e5a894b976", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e34e52073e7bd69a060412afa6d9b2e5a894b976", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e34e52073e7bd69a060412afa6d9b2e5a894b976", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e34e52073e7bd69a060412afa6d9b2e5a894b976/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "163497f1a3f8225a05f9f3d6c7922e1e23c95fdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/163497f1a3f8225a05f9f3d6c7922e1e23c95fdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/163497f1a3f8225a05f9f3d6c7922e1e23c95fdf"}], "stats": {"total": 25, "additions": 9, "deletions": 16}, "files": [{"sha": "b0a83542c71c5da80234703643beac1c81f1b7e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34e52073e7bd69a060412afa6d9b2e5a894b976/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34e52073e7bd69a060412afa6d9b2e5a894b976/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e34e52073e7bd69a060412afa6d9b2e5a894b976", "patch": "@@ -1,3 +1,8 @@\n+2012-10-29  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_decompose_address): Use simplify_gen_subreg\n+\tfor all addresses, zero-extended with AND.\n+\n 2012-10-29  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR middle-end/55116"}, {"sha": "e0994e72ff66d237246aa416e6ee64a190df3ec4", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34e52073e7bd69a060412afa6d9b2e5a894b976/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34e52073e7bd69a060412afa6d9b2e5a894b976/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e34e52073e7bd69a060412afa6d9b2e5a894b976", "patch": "@@ -11810,23 +11810,11 @@ ix86_decompose_address (rtx addr, struct ix86_address *out)\n       else if (GET_CODE (addr) == AND\n \t       && const_32bit_mask (XEXP (addr, 1), DImode))\n \t{\n-\t  addr = XEXP (addr, 0);\n+\t  addr = simplify_gen_subreg (SImode, XEXP (addr, 0), DImode, 0);\n+\t  if (addr == NULL_RTX)\n+\t    return 0;\n \n-\t  /* Adjust SUBREGs.  */\n-\t  if (GET_CODE (addr) == SUBREG\n-\t      && GET_MODE (SUBREG_REG (addr)) == SImode)\n-\t    {\n-\t      addr = SUBREG_REG (addr);\n-\t      if (CONST_INT_P (addr))\n-\t\treturn 0;\n-\t    }\n-\t  else if (GET_MODE (addr) == DImode)\n-\t    {\n-\t      addr = simplify_gen_subreg (SImode, addr, DImode, 0);\n-\t      if (addr == NULL_RTX)\n-\t\treturn 0;\n-\t    }\n-\t  else if (GET_MODE (addr) != VOIDmode)\n+\t  if (CONST_INT_P (addr))\n \t    return 0;\n \t}\n     }"}]}