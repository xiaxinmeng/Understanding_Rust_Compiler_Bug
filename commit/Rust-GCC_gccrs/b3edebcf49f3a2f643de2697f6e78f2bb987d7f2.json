{"sha": "b3edebcf49f3a2f643de2697f6e78f2bb987d7f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNlZGViY2Y0OWYzYTJmNjQzZGUyNjk3ZjZlNzhmMmJiOTg3ZDdmMg==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1999-04-12T18:32:22Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1999-04-12T18:32:22Z"}, "message": "parse.y (patch_unaryop): Fix ++ operator check on array references.\n\nMon Apr 12 18:27:32 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* parse.y (patch_unaryop): Fix ++ operator check on array\n \treferences.\n\nFrom-SVN: r26382", "tree": {"sha": "cb881796ef16e33dd83d4aa00bb53794c4f77fe2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb881796ef16e33dd83d4aa00bb53794c4f77fe2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3edebcf49f3a2f643de2697f6e78f2bb987d7f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3edebcf49f3a2f643de2697f6e78f2bb987d7f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3edebcf49f3a2f643de2697f6e78f2bb987d7f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3edebcf49f3a2f643de2697f6e78f2bb987d7f2/comments", "author": null, "committer": null, "parents": [{"sha": "808ce120ae43633728dd0346abe2c09707b22f27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/808ce120ae43633728dd0346abe2c09707b22f27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/808ce120ae43633728dd0346abe2c09707b22f27"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "868ff717acf300775ddcb2b7a98e5afe9bf9cc82", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3edebcf49f3a2f643de2697f6e78f2bb987d7f2/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3edebcf49f3a2f643de2697f6e78f2bb987d7f2/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=b3edebcf49f3a2f643de2697f6e78f2bb987d7f2", "patch": "@@ -1,3 +1,8 @@\n+Mon Apr 12 18:27:32 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (patch_unaryop): Fix ++ operator check on array\n+ \treferences.\n+\n Tue Apr  6 23:15:52 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* Makefile.in (TREE_H): Add tree-check.h."}, {"sha": "1dd713c04908c825087916934ebaa5a08974cf11", "filename": "gcc/java/parse.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3edebcf49f3a2f643de2697f6e78f2bb987d7f2/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3edebcf49f3a2f643de2697f6e78f2bb987d7f2/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=b3edebcf49f3a2f643de2697f6e78f2bb987d7f2", "patch": "@@ -12344,9 +12344,12 @@ patch_unaryop (node, wfl_op)\n     case PREDECREMENT_EXPR:\n       decl = strip_out_static_field_access_decl (op);\n       if (!JDECL_P (decl) \n-\t  && !((TREE_CODE (decl) == INDIRECT_REF \n-\t\t|| TREE_CODE (decl) == COMPONENT_REF) \n-\t       && JPRIMITIVE_TYPE_P (TREE_TYPE (decl))))\n+\t  && TREE_CODE (decl) != COMPONENT_REF\n+\t  && !(flag_emit_class_files && TREE_CODE (decl) == ARRAY_REF)\n+\t  && TREE_CODE (decl) != INDIRECT_REF\n+\t  && !(TREE_CODE (decl) == COMPOUND_EXPR\n+\t       && TREE_OPERAND (decl, 1)\n+\t       && (TREE_CODE (TREE_OPERAND (decl, 1)) == INDIRECT_REF)))\n \t{\n \t  tree lvalue;\n \t  /* Before screaming, check that we're not in fact trying to"}, {"sha": "efa0912a1a80207879ab436a6a38e53e3581e3c0", "filename": "gcc/java/parse.y", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3edebcf49f3a2f643de2697f6e78f2bb987d7f2/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3edebcf49f3a2f643de2697f6e78f2bb987d7f2/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=b3edebcf49f3a2f643de2697f6e78f2bb987d7f2", "patch": "@@ -9742,10 +9742,14 @@ patch_unaryop (node, wfl_op)\n       /* 15.14.2 Prefix Decrement Operator -- */\n     case PREDECREMENT_EXPR:\n       decl = strip_out_static_field_access_decl (op);\n+      /* We really should have a JAVA_ARRAY_EXPR to avoid this */\n       if (!JDECL_P (decl) \n-\t  && !((TREE_CODE (decl) == INDIRECT_REF \n-\t\t|| TREE_CODE (decl) == COMPONENT_REF) \n-\t       && JPRIMITIVE_TYPE_P (TREE_TYPE (decl))))\n+\t  && TREE_CODE (decl) != COMPONENT_REF\n+\t  && !(flag_emit_class_files && TREE_CODE (decl) == ARRAY_REF)\n+\t  && TREE_CODE (decl) != INDIRECT_REF\n+\t  && !(TREE_CODE (decl) == COMPOUND_EXPR\n+\t       && TREE_OPERAND (decl, 1)\n+\t       && (TREE_CODE (TREE_OPERAND (decl, 1)) == INDIRECT_REF)))\n \t{\n \t  tree lvalue;\n \t  /* Before screaming, check that we're not in fact trying to"}]}