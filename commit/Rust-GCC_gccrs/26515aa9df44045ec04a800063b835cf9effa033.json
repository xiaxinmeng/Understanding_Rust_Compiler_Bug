{"sha": "26515aa9df44045ec04a800063b835cf9effa033", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY1MTVhYTlkZjQ0MDQ1ZWMwNGE4MDAwNjNiODM1Y2Y5ZWZmYTAzMw==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2005-05-17T19:59:15Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2005-05-17T19:59:15Z"}, "message": "Yet more Objective-C++...\n\n        * objc.dg/method-5.m: Update.\n        * objc.dg/method-6.m: Update.\n        * objc.dg/method-7.m: Update.\n        * objc.dg/method-9.m: Update.\n        * objc.dg/try-catch-2.m: Update.\n\nFrom-SVN: r99851", "tree": {"sha": "a112f26432b5412eadb178a82bd3c55da3d7a123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a112f26432b5412eadb178a82bd3c55da3d7a123"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26515aa9df44045ec04a800063b835cf9effa033", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26515aa9df44045ec04a800063b835cf9effa033", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26515aa9df44045ec04a800063b835cf9effa033", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26515aa9df44045ec04a800063b835cf9effa033/comments", "author": null, "committer": null, "parents": [{"sha": "38965eb29c94c187538489f6874c5b54f98f2ed1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38965eb29c94c187538489f6874c5b54f98f2ed1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38965eb29c94c187538489f6874c5b54f98f2ed1"}], "stats": {"total": 55, "additions": 35, "deletions": 20}, "files": [{"sha": "4a49b014550040d57a5e0e46c012fd96325387bc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26515aa9df44045ec04a800063b835cf9effa033/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26515aa9df44045ec04a800063b835cf9effa033/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=26515aa9df44045ec04a800063b835cf9effa033", "patch": "@@ -1,3 +1,13 @@\n+2005-05-17  Mike Stump  <mrs@apple.com>\n+\n+\tYet more Objective-C++...\n+\n+\t* objc.dg/method-5.m: Update.\n+\t* objc.dg/method-6.m: Update.\n+\t* objc.dg/method-7.m: Update.\n+\t* objc.dg/method-9.m: Update.\n+\t* objc.dg/try-catch-2.m: Update.\n+\n 2005-05-17  Mark Mitchell  <mark@codesourcery.com>\n \n \t* gcc.dg/compat/struct-layout-1_generate.c (iterative_hash):"}, {"sha": "9fa8cb6d9889d608f763d8a592f1d977de5e196f", "filename": "gcc/testsuite/objc.dg/method-5.m", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26515aa9df44045ec04a800063b835cf9effa033/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-5.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26515aa9df44045ec04a800063b835cf9effa033/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-5.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-5.m?ref=26515aa9df44045ec04a800063b835cf9effa033", "patch": "@@ -11,8 +11,8 @@ void foo(UnderSpecified *u, NotAClass *n) {\n   [n nonexistent_method];    /* { dg-warning \"invalid receiver type\" } */\n        /* { dg-warning \"no .\\\\-nonexistent_method. method found\" \"\" { target *-*-* } 11 } */\n   [NotAClass nonexistent_method]; /* { dg-error \".NotAClass. is not an Objective\\\\-C class name or alias\" } */\n-  [u nonexistent_method]; /* { dg-warning \".UnderSpecified. may not respond to .\\\\-nonexistent_method.\" } */\n-  [UnderSpecified nonexistent_method]; /* { dg-warning \".UnderSpecified. may not respond to .\\\\+nonexistent_method.\" } */\n+  [u nonexistent_method]; /* { dg-warning \"no .\\\\-nonexistent_method. method found\" } */\n+  [UnderSpecified nonexistent_method]; /* { dg-warning \"no .\\\\+nonexistent_method. method found\" } */\n }\n \n /* { dg-warning \"Messages without a matching method signature\" \"\" { target *-*-* } 0 } */"}, {"sha": "aa94bac67751aae40dfa42e5e00b1b400bec5127", "filename": "gcc/testsuite/objc.dg/method-6.m", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26515aa9df44045ec04a800063b835cf9effa033/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-6.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26515aa9df44045ec04a800063b835cf9effa033/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-6.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-6.m?ref=26515aa9df44045ec04a800063b835cf9effa033", "patch": "@@ -2,6 +2,7 @@\n    unless they reside in root classes.  */\n /* Author: Ziemowit Laski <zlaski@apple.com>  */\n /* { dg-do compile } */\n+/* { dg-options \"-Wstrict-selector-match\" } */\n \n #include <objc/Protocol.h>\n \n@@ -19,13 +20,13 @@ void foo(void) {\n   Class receiver;\n \n   [receiver port];  /* { dg-warning \"multiple methods named .\\\\+port. found\" } */\n-       /* { dg-warning \"using .\\\\-\\\\(unsigned( int)?\\\\)port.\" \"\" { target *-*-* } 9 } */\n-       /* { dg-warning \"also found .\\\\+\\\\(Protocol \\\\*\\\\)port.\" \"\" { target *-*-* } 14 } */\n+       /* { dg-warning \"using .\\\\-\\\\(unsigned( int)?\\\\)port.\" \"\" { target *-*-* } 10 } */\n+       /* { dg-warning \"also found .\\\\+\\\\(Protocol \\\\*\\\\)port.\" \"\" { target *-*-* } 15 } */\n \n   [receiver starboard];  /* { dg-warning \"no .\\\\+starboard. method found\" } */\n-       /* { dg-warning \"Messages without a matching method signature\" \"\" { target *-*-* } 25 } */\n-       /* { dg-warning \"will be assumed to return .id. and accept\" \"\" { target *-*-* } 25 } */\n-       /* { dg-warning \".\\.\\.\\.. as arguments\" \"\" { target *-*-* } 25 } */\n+       /* { dg-warning \"Messages without a matching method signature\" \"\" { target *-*-* } 26 } */\n+       /* { dg-warning \"will be assumed to return .id. and accept\" \"\" { target *-*-* } 26 } */\n+       /* { dg-warning \".\\.\\.\\.. as arguments\" \"\" { target *-*-* } 26 } */\n \n   [Class port];  /* { dg-error \".Class. is not an Objective\\\\-C class name or alias\" } */\n }"}, {"sha": "60ec455e182a065cb0f5b065abb10b5fe0829287", "filename": "gcc/testsuite/objc.dg/method-7.m", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26515aa9df44045ec04a800063b835cf9effa033/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-7.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26515aa9df44045ec04a800063b835cf9effa033/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-7.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-7.m?ref=26515aa9df44045ec04a800063b835cf9effa033", "patch": "@@ -1,6 +1,8 @@\n /* Check if finding multiple signatures for a method is handled gracefully.  */\n /* Author:  Ziemowit Laski <zlaski@apple.com>  */\n+\n /* { dg-do compile } */\n+/* { dg-options \"-Wstrict-selector-match\" } */\n \n #include <objc/Object.h>\n \n@@ -16,12 +18,12 @@ id foo(void) {\n   Object *obj = [[Object alloc] init];\n   id obj2 = obj;\n   [obj setWindow:nil];  /* { dg-warning \".Object. may not respond to .\\\\-setWindow:.\" } */\n-       /* { dg-warning \"Messages without a matching method signature\" \"\" { target *-*-* } 18 } */\n-       /* { dg-warning \"will be assumed to return .id. and accept\" \"\" { target *-*-* } 18 } */\n-       /* { dg-warning \".\\.\\.\\.. as arguments\" \"\" { target *-*-* } 18 } */\n+  /* { dg-warning \"Messages without a matching method signature\" \"\" { target *-*-* } 20 } */\n+  /* { dg-warning \"will be assumed to return .id. and accept\" \"\" { target *-*-* } 20 } */\n+  /* { dg-warning \".\\.\\.\\.. as arguments\" \"\" { target *-*-* } 20 } */\n   [obj2 setWindow:nil]; /* { dg-warning \"multiple methods named .\\\\-setWindow:. found\" } */\n-       /* { dg-warning \"using .\\\\-\\\\(void\\\\)setWindow:\\\\(Object \\\\*\\\\)wdw.\" \"\" { target *-*-* } 8 } */\n-       /* { dg-warning \"also found .\\\\-\\\\(void\\\\)setWindow:\\\\(Class1 \\\\*\\\\)window.\" \"\" { target *-*-* } 12 } */\n+  /* { dg-warning \"using .\\\\-\\\\(void\\\\)setWindow:\\\\(Object \\\\*\\\\)wdw.\" \"\" { target *-*-* } 10 } */\n+  /* { dg-warning \"also found .\\\\-\\\\(void\\\\)setWindow:\\\\(Class1 \\\\*\\\\)window.\" \"\" { target *-*-* } 14 } */\n \n   return obj;\n }"}, {"sha": "28f6a1be6215c99e3b8b0109a9549cc698712d7d", "filename": "gcc/testsuite/objc.dg/method-9.m", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26515aa9df44045ec04a800063b835cf9effa033/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-9.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26515aa9df44045ec04a800063b835cf9effa033/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-9.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-9.m?ref=26515aa9df44045ec04a800063b835cf9effa033", "patch": "@@ -1,7 +1,9 @@\n /* Check if finding multiple signatures for a method is handled gracefully\n    when method lookup succeeds (see also method-7.m).  */\n /* Contributed by Ziemowit Laski <zlaski@apple.com>  */\n+\n /* { dg-do compile } */\n+/* { dg-options \"-Wstrict-selector-match\" } */\n \n #include <objc/Object.h>\n \n@@ -31,13 +33,13 @@ - (id)initWithData:(id<MyObject, MyCoding>)data {\n + (NTGridDataObject*)dataObject:(id<MyObject, MyCoding>)data\n {\n     NTGridDataObject *result = [[NTGridDataObject alloc] initWithData:data];\n-     /* { dg-warning \"multiple methods named .\\\\-initWithData:. found\" \"\" { target *-*-* } 33 } */\n-     /* { dg-warning \"using .\\\\-\\\\(id\\\\)initWithData:\\\\(Object \\\\*\\\\)data.\" \"\" { target *-*-* } 9 } */\n-     /* { dg-warning \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(id <MyObject, MyCoding>\\\\)data.\" \"\" { target *-*-* } 17 } */\n-     /* { dg-warning \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(int\\\\)data.\" \"\" { target *-*-* } 13 } */\n+    /* { dg-warning \"multiple methods named .\\\\-initWithData:. found\" \"\" { target *-*-* } 35 } */\n+    /* { dg-warning \"using .\\\\-\\\\(id\\\\)initWithData:\\\\(Object \\\\*\\\\)data.\" \"\" { target *-*-* } 11 } */\n+    /* { dg-warning \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(id <MyObject, MyCoding>\\\\)data.\" \"\" { target *-*-* } 19 } */\n+    /* { dg-warning \"also found .\\\\-\\\\(id\\\\)initWithData:\\\\(int\\\\)data.\" \"\" { target *-*-* } 15 } */\n \n-     /* The following warning is a consequence of picking the \"wrong\" method signature.  */\n-     /* { dg-warning \"passing argument 1 of .initWithData:. from incompatible pointer type\" \"\" { target *-*-* } 33 } */\n+    /* The following warning is a consequence of picking the \"wrong\" method signature.  */\n+    /* { dg-warning \"passing argument 1 of .initWithData:. from incompatible pointer type\" \"\" { target *-*-* } 35 } */\n     return result;\n }\n @end"}, {"sha": "35d60e96c001405503fad50dd5592c6a9729b318", "filename": "gcc/testsuite/objc.dg/try-catch-2.m", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26515aa9df44045ec04a800063b835cf9effa033/gcc%2Ftestsuite%2Fobjc.dg%2Ftry-catch-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26515aa9df44045ec04a800063b835cf9effa033/gcc%2Ftestsuite%2Fobjc.dg%2Ftry-catch-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftry-catch-2.m?ref=26515aa9df44045ec04a800063b835cf9effa033", "patch": "@@ -1,5 +1,5 @@\n-/* Test out '@catch(id foo) {...}', which should catch\n-   all uncaught exceptions.  */\n+/* Test out '@catch(id foo) {...}', which should catch all uncaught\n+   exceptions.  */\n /* Developed by Ziemowit Laski <zlaski@apple.com>.  */\n \n /* { dg-options \"-fobjc-exceptions\" } */"}]}