{"sha": "d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2", "node_id": "C_kwDOANBUbNoAKGQ3MzQ2YTNiZjY1NTRkZGFlZjk4NTNjMWIwZmI3NzBjNGEzY2Q5ZDI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-10-09T00:17:55Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-10-09T00:17:55Z"}, "message": "Daily bump.", "tree": {"sha": "6e187cf919e386e837018c3cc3c571b8a7ec8dad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e187cf919e386e837018c3cc3c571b8a7ec8dad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2/comments", "author": null, "committer": null, "parents": [{"sha": "705ed42a1ad950860f46c51216ff69dbe0f4857a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/705ed42a1ad950860f46c51216ff69dbe0f4857a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/705ed42a1ad950860f46c51216ff69dbe0f4857a"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "15f928cb50e06639f808c4229e12cac45456a1c6", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2", "patch": "@@ -1 +1 @@\n-20221008\n+20221009"}, {"sha": "e89262853724505769335e6dfb67b6094b3e97c9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2", "patch": "@@ -1,3 +1,37 @@\n+2022-10-08  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-tree.h (TARGET_EXPR_ELIDING_P): New.\n+\t(unsafe_copy_elision_p, set_target_expr_eliding)\n+\t(cp_build_init_expr): Declare.\n+\t* call.cc (unsafe_copy_elision_p): No longer static.\n+\t(build_over_call, build_special_member_call)\n+\t(build_new_method_call): Use cp_build_init_expr.\n+\t* coroutines.cc (expand_one_await_expression)\n+\t(build_actor_fn, flatten_await_stmt, handle_nested_conditionals)\n+\t(await_statement_walker, morph_fn_to_coro): Use cp_build_init_expr.\n+\t* cp-gimplify.cc (cp_gimplify_init_expr)\n+\t(cp_gimplify_expr): Check TARGET_EXPR_ELIDING_P.\n+\t(cp_fold_r): Propagate it.\n+\t(cp_fold): Use cp_build_init_expr.\n+\t* decl.cc (check_initializer): Use cp_build_init_expr.\n+\t* except.cc (build_throw): Use cp_build_init_expr.\n+\t* init.cc (get_nsdmi): Call set_target_expr_eliding.\n+\t(perform_member_init, expand_default_init, expand_aggr_init_1)\n+\t(build_new_1, build_vec_init): Use cp_build_init_expr.\n+\t* method.cc (do_build_copy_constructor): Use cp_build_init_expr.\n+\t* semantics.cc (simplify_aggr_init_expr, finalize_nrv_r)\n+\t(finish_omp_reduction_clause): Use cp_build_init_expr.\n+\t* tree.cc (build_target_expr): Call set_target_expr_eliding.\n+\t(bot_manip): Copy TARGET_EXPR_ELIDING_P.\n+\t* typeck.cc (cp_build_modify_expr): Call set_target_expr_eliding.\n+\t(check_return_expr): Use cp_build_modify_expr.\n+\t* typeck2.cc (split_nonconstant_init_1)\n+\t(split_nonconstant_init): Use cp_build_init_expr.\n+\t(massage_init_elt): Call set_target_expr_eliding.\n+\t(process_init_constructor_record): Clear TARGET_EXPR_ELIDING_P on\n+\tunsafe copy elision.\n+\t(set_target_expr_eliding, cp_build_init_expr): New.\n+\n 2022-10-07  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/107085"}, {"sha": "573cbaf5b2e2e0f176a963e52439184d7aeb7c72", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2", "patch": "@@ -1,3 +1,17 @@\n+2022-10-08  Harald Anlauf  <anlauf@gmx.de>\n+\t    Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/107000\n+\t* arith.cc (gfc_arith_error): Define error message for\n+\tARITH_INVALID_TYPE.\n+\t(reduce_unary): Catch arithmetic expressions with invalid type.\n+\t(reduce_binary_ac): Likewise.\n+\t(reduce_binary_ca): Likewise.\n+\t(reduce_binary_aa): Likewise.\n+\t(eval_intrinsic): Likewise.\n+\t(gfc_real2complex): Source expression must be of type REAL.\n+\t* gfortran.h (enum arith): Add ARITH_INVALID_TYPE.\n+\n 2022-10-06  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* trans-openmp.cc (gfc_trans_omp_assume): New."}, {"sha": "a27b5244e748ec11017cbb3c6a8cc65425260e12", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d7346a3bf6554ddaef9853c1b0fb770c4a3cd9d2", "patch": "@@ -1,3 +1,9 @@\n+2022-10-08  Harald Anlauf  <anlauf@gmx.de>\n+\t    Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/107000\n+\t* gfortran.dg/pr107000.f90: New test.\n+\n 2022-10-07  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/107085"}]}