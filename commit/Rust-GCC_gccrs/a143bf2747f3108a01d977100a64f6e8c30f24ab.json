{"sha": "a143bf2747f3108a01d977100a64f6e8c30f24ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE0M2JmMjc0N2YzMTA4YTAxZDk3NzEwMGE2NGY2ZThjMzBmMjRhYg==", "commit": {"author": {"name": "Mike Stump", "email": "mikestump@comcast.net", "date": "2010-04-29T03:00:36Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2010-04-29T03:00:36Z"}, "message": "uninit-pred-1_b.C: Use dg-message instead of dg-excess-errors.\n\n\t* g++.dg/uninit-pred-1_b.C: Use dg-message instead of\n\tdg-excess-errors.\n\t* g++.dg/uninit-pred-2_b.C: Likewise.\n\nFrom-SVN: r158851", "tree": {"sha": "3ccf81a1acfaa4bbda8c037733649ce245b5ac36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ccf81a1acfaa4bbda8c037733649ce245b5ac36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a143bf2747f3108a01d977100a64f6e8c30f24ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a143bf2747f3108a01d977100a64f6e8c30f24ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a143bf2747f3108a01d977100a64f6e8c30f24ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a143bf2747f3108a01d977100a64f6e8c30f24ab/comments", "author": null, "committer": null, "parents": [{"sha": "ca83a4492590417e58b7e3dbac5482a61a788271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca83a4492590417e58b7e3dbac5482a61a788271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca83a4492590417e58b7e3dbac5482a61a788271"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "07e7e503609e2d493106c07b2f3666c75581b607", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a143bf2747f3108a01d977100a64f6e8c30f24ab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a143bf2747f3108a01d977100a64f6e8c30f24ab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a143bf2747f3108a01d977100a64f6e8c30f24ab", "patch": "@@ -1,3 +1,9 @@\n+2010-04-28  Mike Stump  <mikestump@comcast.net>\n+\n+\t* g++.dg/uninit-pred-1_b.C: Use dg-message instead of\n+\tdg-excess-errors.\n+\t* g++.dg/uninit-pred-2_b.C: Likewise.\n+\n 2010-04-28  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/18918"}, {"sha": "94a444d21ef595ed5d3b73b07d4a8bbb93a439cd", "filename": "gcc/testsuite/g++.dg/uninit-pred-1_b.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a143bf2747f3108a01d977100a64f6e8c30f24ab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Funinit-pred-1_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a143bf2747f3108a01d977100a64f6e8c30f24ab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Funinit-pred-1_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Funinit-pred-1_b.C?ref=a143bf2747f3108a01d977100a64f6e8c30f24ab", "patch": "@@ -41,7 +41,7 @@ __attribute__ ((always_inline))  int GetC (int *c)  {\n    \n   void P (int64 t)\n     {\n-      int cc; /* { dg-excess-errors \"note: 'cc' was declared here\" } */\n+      int cc; /* { dg-message \"note: 'cc' was declared here\" } */\n       if (GetC (&cc) <= 0 ) /* return flag checked wrongly */\n         return;\n       "}, {"sha": "5023fc50b6b2b642b2448e266275d656027766cb", "filename": "gcc/testsuite/g++.dg/uninit-pred-2_b.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a143bf2747f3108a01d977100a64f6e8c30f24ab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Funinit-pred-2_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a143bf2747f3108a01d977100a64f6e8c30f24ab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Funinit-pred-2_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Funinit-pred-2_b.C?ref=a143bf2747f3108a01d977100a64f6e8c30f24ab", "patch": "@@ -40,7 +40,7 @@ __attribute__ ((always_inline))  bool GetC (int *c)  {\n    \n   void P (int64 t)\n     {\n-      int cc; /* { dg-excess-errors \"note\" } */\n+      int cc; /* { dg-message \"note: 'cc' was declared here\" } */\n       if (GetC (&cc)) /* return flag checked wrongly */\n         return;\n       "}]}