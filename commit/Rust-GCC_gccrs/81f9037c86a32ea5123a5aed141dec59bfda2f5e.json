{"sha": "81f9037c86a32ea5123a5aed141dec59bfda2f5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFmOTAzN2M4NmEzMmVhNTEyM2E1YWVkMTQxZGVjNTliZmRhMmY1ZQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-10-20T06:27:32Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-10-20T06:27:32Z"}, "message": "config.gcc: Add support for arm926ejs, arm1026ejs, arm1136js, arm1136jfs, and armv6j.\n\n\t* config.gcc: Add support for arm926ejs, arm1026ejs, arm1136js,\n\tarm1136jfs, and armv6j.\n\t* config/arm/arm.c (FL_ARCH6J): New macro.\n\t(FL_VFPV2): Likewise.\n\t(all_cores): Add entries for arm926ejs, arm1026ejs, arm1136js,\n\tand arm1136jfs.\n\t(all_architectures): Add entry for armv6j.\n\t(arm_override_options): Add entries for arm926ejs, arm1026ejs,\n\tarm1136js, and arm1136jfs.\n\t* config/arm/arm.h (TARGET_CPU_arm926ej_s): New macro.\n\t(TARGET_CPU_arm1026ej_s): Likewise.\n\t(TARGET_CPU_arm1136j_s): Likewise.\n\t(TARGET_CPU_arm1136jf_s): Likewise.\n\t* doc/invoke.texi: Document new ARM cores and architecture\n\tvariants.\n\nFrom-SVN: r72694", "tree": {"sha": "98f15b28c3d1a9b72edaeea9c16d9b2171298db7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98f15b28c3d1a9b72edaeea9c16d9b2171298db7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81f9037c86a32ea5123a5aed141dec59bfda2f5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81f9037c86a32ea5123a5aed141dec59bfda2f5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81f9037c86a32ea5123a5aed141dec59bfda2f5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81f9037c86a32ea5123a5aed141dec59bfda2f5e/comments", "author": null, "committer": null, "parents": [{"sha": "5a13d72876d36de81e44f01d7f292d2d70470c28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a13d72876d36de81e44f01d7f292d2d70470c28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a13d72876d36de81e44f01d7f292d2d70470c28"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "4ebb882cc77e413799f406a3adf09fd166efae1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81f9037c86a32ea5123a5aed141dec59bfda2f5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81f9037c86a32ea5123a5aed141dec59bfda2f5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=81f9037c86a32ea5123a5aed141dec59bfda2f5e", "patch": "@@ -1,3 +1,21 @@\n+2003-10-19  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* config.gcc: Add support for arm926ejs, arm1026ejs, arm1136js,\n+\tarm1136jfs, and armv6j.\n+\t* config/arm/arm.c (FL_ARCH6J): New macro.\n+\t(FL_VFPV2): Likewise.\n+\t(all_cores): Add entries for arm926ejs, arm1026ejs, arm1136js,\n+\tand arm1136jfs.\n+\t(all_architectures): Add entry for armv6j.\n+\t(arm_override_options): Add entries for arm926ejs, arm1026ejs,\n+\tarm1136js, and arm1136jfs.\n+\t* config/arm/arm.h (TARGET_CPU_arm926ej_s): New macro.\n+\t(TARGET_CPU_arm1026ej_s): Likewise.\n+\t(TARGET_CPU_arm1136j_s): Likewise.\n+\t(TARGET_CPU_arm1136jf_s): Likewise.\n+\t* doc/invoke.texi: Document new ARM cores and architecture\n+\tvariants.\n+\t\n 2003-10-19  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \t* Makefile.in (toplev.o): Add value-prof.h dependency."}, {"sha": "7e4c820bb114037257518c895fcda1dea0ecadc5", "filename": "gcc/config.gcc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81f9037c86a32ea5123a5aed141dec59bfda2f5e/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81f9037c86a32ea5123a5aed141dec59bfda2f5e/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=81f9037c86a32ea5123a5aed141dec59bfda2f5e", "patch": "@@ -2330,9 +2330,9 @@ fi\n \t\t\t| arm7m | arm7dm | arm7dmi | arm[79]tdmi \\\n \t\t\t| arm70 | arm700i | arm710t | arm720 \\\n \t\t\t| arm720t | arm740t | arm710c | arm920 \\\n-\t\t\t| arm920t | arm940t | arm9e | arm10tdmi \\\n+\t\t\t| arm920t | arm926ejs | arm940t | arm9e | arm10tdmi \\\n \t\t\t| arm7100 | arm7500 | arm7500fe | arm810 \\\n-\t\t\t| arm1020t \\\n+\t\t\t| arm1026ejs | arm1020t | arm1136js | arm1136jfs \\\n \t\t\t| xscale | iwmmxt \\\n \t\t\t| ep9312 \\\n \t\t\t| strongarm | strongarm110 | strongarm11[01]0)\n@@ -2348,7 +2348,7 @@ fi\n \t\tcase \"$with_arch\" in\n \t\t\"\" \\\n \t\t| armv[2345] | armv2a | armv3m | armv4t | armv5t \\\n-\t\t| armv5te | ep9312)\n+\t\t| armv5te | armv6j | ep9312)\n \t\t\t# OK\n \t\t\t;;\n \t\t*)"}, {"sha": "42f4f172ffa68276740c6e9d21ce2f399fd7defe", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81f9037c86a32ea5123a5aed141dec59bfda2f5e/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81f9037c86a32ea5123a5aed141dec59bfda2f5e/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=81f9037c86a32ea5123a5aed141dec59bfda2f5e", "patch": "@@ -281,6 +281,9 @@ int    arm_structure_size_boundary = DEFAULT_STRUCTURE_SIZE_BOUNDARY;\n #define FL_XSCALE     (1 << 10)\t      /* XScale */\n #define FL_CIRRUS     (1 << 11)\t      /* Cirrus/DSP.  */\n #define FL_IWMMXT     (1 << 29)\t      /* XScale v2 or \"Intel Wireless MMX technology\".  */\n+#define FL_ARCH6J     (1 << 12)       /* Architecture rel 6.  Adds\n+\t\t\t\t\t media instructions.  */\n+#define FL_VFPV2      (1 << 13)       /* Vector Floating Point V2.  */\n \n /* The bits in this mask specify which\n    instructions we are allowed to generate.  */\n@@ -406,6 +409,7 @@ static const struct processors all_cores[] =\n   {\"arm7500\",\t             FL_MODE26 | FL_MODE32 },\n   /* Doesn't have an external co-proc, but does have embedded fpa.  */\n   {\"arm7500fe\",\tFL_CO_PROC | FL_MODE26 | FL_MODE32 },\n+  /* V4 Architecture Processors */\n   {\"arm7tdmi\",\tFL_CO_PROC |             FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_THUMB },\n   {\"arm710t\",\t                         FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_THUMB },\n   {\"arm720t\",\t                         FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_THUMB },\n@@ -423,11 +427,16 @@ static const struct processors all_cores[] =\n   {\"strongarm110\",           FL_MODE26 | FL_MODE32 | FL_FAST_MULT | FL_ARCH4 |            FL_LDSCHED | FL_STRONG },\n   {\"strongarm1100\",          FL_MODE26 | FL_MODE32 | FL_FAST_MULT | FL_ARCH4 |            FL_LDSCHED | FL_STRONG },\n   {\"strongarm1110\",          FL_MODE26 | FL_MODE32 | FL_FAST_MULT | FL_ARCH4 |            FL_LDSCHED | FL_STRONG },\n+  /* V5 Architecture Processors */\n   {\"arm10tdmi\",\t                         FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_THUMB | FL_LDSCHED             | FL_ARCH5 },\n   {\"arm1020t\",\t                         FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_THUMB | FL_LDSCHED             | FL_ARCH5 },\n+  {\"arm926ejs\",                          FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_THUMB                          | FL_ARCH5 | FL_ARCH5E },\n+  {\"arm1026ejs\",                         FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_THUMB                          | FL_ARCH5 | FL_ARCH5E },\n   {\"xscale\",                             FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_THUMB | FL_LDSCHED | FL_STRONG | FL_ARCH5 | FL_ARCH5E | FL_XSCALE },\n   {\"iwmmxt\",                             FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_THUMB | FL_LDSCHED | FL_STRONG | FL_ARCH5 | FL_ARCH5E | FL_XSCALE | FL_IWMMXT },\n-\n+  /* V6 Architecture Processors */\n+  {\"arm1136js\",                          FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_THUMB                          | FL_ARCH5 | FL_ARCH5E | FL_ARCH6J },\n+  {\"arm1136jfs\",                         FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_THUMB                          | FL_ARCH5 | FL_ARCH5E | FL_ARCH6J | FL_VFPV2 },\n   {NULL, 0}\n };\n \n@@ -446,6 +455,7 @@ static const struct processors all_architectures[] =\n   { \"armv5\",     FL_CO_PROC |             FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_THUMB | FL_ARCH5 },\n   { \"armv5t\",    FL_CO_PROC |             FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_THUMB | FL_ARCH5 },\n   { \"armv5te\",   FL_CO_PROC |             FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_THUMB | FL_ARCH5 | FL_ARCH5E },\n+  { \"armv6j\",    FL_CO_PROC |             FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_THUMB | FL_ARCH5 | FL_ARCH5E | FL_ARCH6J },\n   { \"ep9312\",\t\t\t\t  FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_LDSCHED | FL_CIRRUS },\n   {\"iwmmxt\",                             FL_MODE32 | FL_FAST_MULT | FL_ARCH4 | FL_THUMB | FL_LDSCHED | FL_STRONG | FL_ARCH5 | FL_ARCH5E | FL_XSCALE | FL_IWMMXT },\n   { NULL, 0 }\n@@ -546,6 +556,10 @@ arm_override_options (void)\n \t{ TARGET_CPU_xscale,    \"xscale\" },\n \t{ TARGET_CPU_ep9312,    \"ep9312\" },\n \t{ TARGET_CPU_iwmmxt,    \"iwmmxt\" },\n+\t{ TARGET_CPU_arm926ej_s, \"arm926ej-s\" },\n+\t{ TARGET_CPU_arm1026ej_s, \"arm1026ej-s\" },\n+\t{ TARGET_CPU_arm1136j_s, \"arm1136j_s\" },\n+\t{ TARGET_CPU_arm1136jf_s, \"arm1136jf_s\" },\n \t{ TARGET_CPU_generic,   \"arm\" },\n \t{ 0, 0 }\n       };"}, {"sha": "f757ead07e1be18d0df1eca28075ecce0d7c4f8c", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81f9037c86a32ea5123a5aed141dec59bfda2f5e/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81f9037c86a32ea5123a5aed141dec59bfda2f5e/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=81f9037c86a32ea5123a5aed141dec59bfda2f5e", "patch": "@@ -98,6 +98,10 @@\n #define TARGET_CPU_xscale       0x0100\n #define TARGET_CPU_ep9312\t0x0200\n #define TARGET_CPU_iwmmxt\t0x0400\n+#define TARGET_CPU_arm926ej_s   0x0800\n+#define TARGET_CPU_arm1026ej_s  0x1000\n+#define TARGET_CPU_arm1136j_s   0x2000\n+#define TARGET_CPU_arm1136jf_s  0x4000\n /* Configure didn't specify.  */\n #define TARGET_CPU_generic\t0x8000\n "}]}