{"sha": "59434931fb658f0a180ce3f3305cb3987ed2b56d", "node_id": "C_kwDOANBUbNoAKDU5NDM0OTMxZmI2NThmMGExODBjZTNmMzMwNWNiMzk4N2VkMmI1NmQ", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-11T20:51:15Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-16T16:42:59Z"}, "message": "libstdc++: Use hidden friends for vector<bool>::reference swap overloads\n\nThese swap overloads are non-standard, but are needed to make swap work\nfor vector<bool>::reference rvalues. They don't need to be called\nexplicitly, only via ADL, so hide them from normal lookup. This is what\nI've proposed as the resolution to LWG 3638.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/stl_bvector.h (swap(_Bit_reference, _Bit_reference))\n\t(swap(_Bit_reference, bool&), swap(bool&, _Bit_reference)):\n\tDefine as hidden friends of _Bit_reference.", "tree": {"sha": "acbe6c548693cafa7e0fc19bac8a3fb4769a85d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acbe6c548693cafa7e0fc19bac8a3fb4769a85d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59434931fb658f0a180ce3f3305cb3987ed2b56d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59434931fb658f0a180ce3f3305cb3987ed2b56d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59434931fb658f0a180ce3f3305cb3987ed2b56d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59434931fb658f0a180ce3f3305cb3987ed2b56d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba6e17e78db543b336c196b55fa6430e513f1941", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba6e17e78db543b336c196b55fa6430e513f1941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba6e17e78db543b336c196b55fa6430e513f1941"}], "stats": {"total": 50, "additions": 25, "deletions": 25}, "files": [{"sha": "68070685bafa491d714d49ddf44c3bfb3fcae661", "filename": "libstdc++-v3/include/bits/stl_bvector.h", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59434931fb658f0a180ce3f3305cb3987ed2b56d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59434931fb658f0a180ce3f3305cb3987ed2b56d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h?ref=59434931fb658f0a180ce3f3305cb3987ed2b56d", "patch": "@@ -125,36 +125,36 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     void\n     flip() _GLIBCXX_NOEXCEPT\n     { *_M_p ^= _M_mask; }\n-  };\n \n #if __cplusplus >= 201103L\n-  _GLIBCXX20_CONSTEXPR\n-  inline void\n-  swap(_Bit_reference __x, _Bit_reference __y) noexcept\n-  {\n-    bool __tmp = __x;\n-    __x = __y;\n-    __y = __tmp;\n-  }\n+    _GLIBCXX20_CONSTEXPR\n+    friend void\n+    swap(_Bit_reference __x, _Bit_reference __y) noexcept\n+    {\n+      bool __tmp = __x;\n+      __x = __y;\n+      __y = __tmp;\n+    }\n \n-  _GLIBCXX20_CONSTEXPR\n-  inline void\n-  swap(_Bit_reference __x, bool& __y) noexcept\n-  {\n-    bool __tmp = __x;\n-    __x = __y;\n-    __y = __tmp;\n-  }\n+    _GLIBCXX20_CONSTEXPR\n+    friend void\n+    swap(_Bit_reference __x, bool& __y) noexcept\n+    {\n+      bool __tmp = __x;\n+      __x = __y;\n+      __y = __tmp;\n+    }\n \n-  _GLIBCXX20_CONSTEXPR\n-  inline void\n-  swap(bool& __x, _Bit_reference __y) noexcept\n-  {\n-    bool __tmp = __x;\n-    __x = __y;\n-    __y = __tmp;\n-  }\n+    _GLIBCXX20_CONSTEXPR\n+    friend void\n+    swap(bool& __x, _Bit_reference __y) noexcept\n+    {\n+      bool __tmp = __x;\n+      __x = __y;\n+      __y = __tmp;\n+    }\n #endif\n+  };\n \n   struct _Bit_iterator_base\n   : public std::iterator<std::random_access_iterator_tag, bool>"}]}