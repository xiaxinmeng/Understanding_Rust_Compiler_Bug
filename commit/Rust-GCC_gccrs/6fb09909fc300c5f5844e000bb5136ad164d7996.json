{"sha": "6fb09909fc300c5f5844e000bb5136ad164d7996", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZiMDk5MDlmYzMwMGM1ZjU4NDRlMDAwYmI1MTM2YWQxNjRkNzk5Ng==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2005-05-19T11:16:27Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2005-05-19T11:16:27Z"}, "message": "re PR java/17845 (More problems with simple type names as superclasses)\n\n2005-05-19  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR java/17845\n\n\t* parse.y (register_package, package_list): Remove.\n\t(package_declaration): Do not call register_package.\n\t(do_resolve_class): Do not use package_list.\n\nFrom-SVN: r99977", "tree": {"sha": "2257d145db3794b4bec14070246573ea1c8cb8bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2257d145db3794b4bec14070246573ea1c8cb8bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fb09909fc300c5f5844e000bb5136ad164d7996", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fb09909fc300c5f5844e000bb5136ad164d7996", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fb09909fc300c5f5844e000bb5136ad164d7996", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fb09909fc300c5f5844e000bb5136ad164d7996/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e42922b1ae4c3da94882d3a92ce978a0db123064", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e42922b1ae4c3da94882d3a92ce978a0db123064", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e42922b1ae4c3da94882d3a92ce978a0db123064"}], "stats": {"total": 50, "additions": 8, "deletions": 42}, "files": [{"sha": "9cfbe0a516550b8eef84de91e97c4e6a4ff5cda5", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fb09909fc300c5f5844e000bb5136ad164d7996/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fb09909fc300c5f5844e000bb5136ad164d7996/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=6fb09909fc300c5f5844e000bb5136ad164d7996", "patch": "@@ -1,3 +1,11 @@\n+2005-05-19  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR java/17845\n+\n+\t* parse.y (register_package, package_list): Remove.\n+\t(package_declaration): Do not call register_package.\n+\t(do_resolve_class): Do not use package_list.\n+\n 2005-05-15  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* jcf-write.c (generate_bytecode_insns) <SAVE_EXPR>: Remove"}, {"sha": "e90fc426e5d3be1c8ed43155a8a9b7d920997ec8", "filename": "gcc/java/parse.y", "status": "modified", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fb09909fc300c5f5844e000bb5136ad164d7996/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fb09909fc300c5f5844e000bb5136ad164d7996/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=6fb09909fc300c5f5844e000bb5136ad164d7996", "patch": "@@ -113,7 +113,6 @@ static int find_in_imports_on_demand (tree, tree);\n static void find_in_imports (tree, tree);\n static void check_inner_class_access (tree, tree, tree);\n static int check_pkg_class_access (tree, tree, bool, tree);\n-static void register_package (tree);\n static tree resolve_package (tree, tree *, tree *);\n static tree resolve_class (tree, tree, tree, tree);\n static void declare_local_variables (int, tree, tree);\n@@ -408,9 +407,6 @@ static GTY(()) tree current_static_block;\n /* The generated `write_parm_value$' identifier.  */\n static GTY(()) tree wpv_id;\n \n-/* The list of all packages we've seen so far */\n-static GTY(()) tree package_list;\n-\n /* Hold THIS for the scope of the current method decl.  */\n static GTY(()) tree current_this;\n \n@@ -738,7 +734,6 @@ package_declaration:\n \tPACKAGE_TK name SC_TK\n \t\t{\n \t\t  ctxp->package = EXPR_WFL_NODE ($2);\n-\t\t  register_package (ctxp->package);\n \t\t}\n |\tPACKAGE_TK error\n \t\t{yyerror (\"Missing name\"); RECOVER;}\n@@ -5970,22 +5965,6 @@ do_resolve_class (tree enclosing, tree import_type, tree class_type, tree decl,\n   if ((new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type))))\n     return new_class_decl;\n \n-  /* 5- Try with a name qualified with the package name we've seen so far */\n-  if (!QUALIFIED_P (TYPE_NAME (class_type)))\n-    {\n-      tree package;\n-\n-      /* If there is a current package (ctxp->package), it's the first\n-\t element of package_list and we can skip it. */\n-      for (package = (ctxp->package ?\n-\t\t      TREE_CHAIN (package_list) : package_list);\n-\t   package; package = TREE_CHAIN (package))\n-\tif ((new_class_decl = qualify_and_find (class_type,\n-\t\t\t\t\t       TREE_PURPOSE (package),\n-\t\t\t\t\t       TYPE_NAME (class_type))))\n-\t  return new_class_decl;\n-    }\n-\n   /* 5- Check another compilation unit that bears the name of type */\n   load_class (TYPE_NAME (class_type), 0);\n \n@@ -7247,27 +7226,6 @@ find_in_imports_on_demand (tree enclosing_type, tree class_type)\n     return (seen_once < 0 ? 0 : seen_once); /* It's ok not to have found */\n }\n \n-/* Add package NAME to the list of packages encountered so far. To\n-   speed up class lookup in do_resolve_class, we make sure a\n-   particular package is added only once.  */\n-\n-static void\n-register_package (tree name)\n-{\n-  static htab_t pht;\n-  void **e;\n-\n-  if (pht == NULL)\n-    pht = htab_create (50, htab_hash_pointer, htab_eq_pointer, NULL);\n-\n-  e = htab_find_slot (pht, name, INSERT);\n-  if (*e == NULL)\n-    {\n-      package_list = chainon (package_list, build_tree_list (name, NULL));\n-      *e = name;\n-    }\n-}\n-\n static tree\n resolve_package (tree pkg, tree *next, tree *type_name)\n {"}]}