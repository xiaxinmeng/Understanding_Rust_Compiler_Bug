{"sha": "eb1eb91413b50038212d148bf651c40e4d0e32f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIxZWI5MTQxM2I1MDAzODIxMmQxNDhiZjY1MWM0MGU0ZDBlMzJmOQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-03-31T12:13:13Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-03-31T12:13:13Z"}, "message": "re PR target/47109 (m68k-netbsdelf: collect2 build fails with undefined reference to m68k_cpu_flags)\n\n\tPR target/47109\n\t* doc/tm.texi.in (TARGET_VERSION): Remove.\n\t* doc/tm.texi: Regenerate.\n\t* system.h (TARGET_VERSION, MACHINE_TYPE): Poison.\n\t* collect2.c (main): Don't use TARGET_VERSION.\n\t* mips-tdump.c (main): Don't use TARGET_VERSION.\n\t* mips-tfile.c (main): Don't use TARGET_VERSION.\n\t* config.gcc (powerpc-wrs-vxworksae): Don't use\n\trs6000/vxworksae.h.\n\t* config/rs6000/vxworksae.h: Remove.\n\t* config/alpha/alpha.h (TARGET_VERSION): Remove.\n\t* config/alpha/freebsd.h (TARGET_VERSION): Remove.\n\t* config/alpha/linux-elf.h (TARGET_VERSION): Remove.\n\t* config/alpha/netbsd.h (TARGET_VERSION): Remove.\n\t* config/alpha/vms.h (TARGET_NAME, TARGET_VERSION): Remove.\n\t* config/arm/arm.h (TARGET_VERSION): Remove.\n\t* config/arm/coff.h (TARGET_VERSION): Remove.\n\t* config/arm/ecos-elf.h (TARGET_VERSION): Remove.\n\t* config/arm/elf.h (TARGET_VERSION): Remove.\n\t* config/arm/freebsd.h (TARGET_VERSION): Remove.\n\t* config/arm/linux-elf.h (TARGET_VERSION): Remove.\n\t* config/arm/netbsd-elf.h (TARGET_VERSION): Remove.\n\t* config/arm/pe.h (TARGET_VERSION): Remove.\n\t* config/arm/rtems-elf.h (TARGET_VERSION): Remove.\n\t* config/arm/semi.h (TARGET_VERSION): Remove.\n\t* config/arm/uclinux-elf.h (TARGET_VERSION): Remove.\n\t* config/arm/unknown-elf.h (TARGET_VERSION): Remove.\n\t* config/arm/vxworks.h (TARGET_VERSION): Remove.\n\t* config/avr/avr.h (TARGET_VERSION): Remove.\n\t* config/bfin/bfin.h (TARGET_VERSION): Remove.\n\t* config/fr30/fr30.h (TARGET_VERSION): Remove.\n\t* config/frv/frv.h (TARGET_VERSION): Remove.\n\t* config/h8300/h8300.h (TARGET_VERSION): Remove.\n\t* config/i386/cygwin.h (TARGET_VERSION): Remove.\n\t* config/i386/darwin.h (TARGET_VERSION): Remove.\n\t* config/i386/darwin64.h (TARGET_VERSION): Remove.\n\t* config/i386/djgpp.h (TARGET_VERSION): Remove.\n\t* config/i386/freebsd.h (TARGET_VERSION): Remove.\n\t* config/i386/freebsd64.h (TARGET_VERSION): Remove.\n\t* config/i386/gnu.h (TARGET_VERSION): Remove.\n\t* config/i386/i386-interix.h (TARGET_VERSION): Remove.\n\t* config/i386/i386elf.h (TARGET_VERSION): Remove.\n\t* config/i386/linux.h (TARGET_VERSION): Remove.\n\t* config/i386/linux64.h (TARGET_VERSION): Remove.\n\t* config/i386/lynx.h (TARGET_VERSION): Remove.\n\t* config/i386/mingw32.h (TARGET_VERSION): Remove.\n\t* config/i386/netbsd-elf.h (TARGET_VERSION): Remove.\n\t* config/i386/netbsd64.h (TARGET_VERSION): Remove.\n\t* config/i386/netware.h (TARGET_VERSION): Remove.\n\t* config/i386/nto.h (TARGET_VERSION): Remove.\n\t* config/i386/openbsd.h (TARGET_VERSION): Remove.\n\t* config/i386/vxworks.h (TARGET_VERSION): Remove.\n\t* config/ia64/elf.h (TARGET_VERSION): Remove.\n\t* config/ia64/freebsd.h (TARGET_VERSION): Remove.\n\t* config/ia64/hpux.h (TARGET_VERSION): Remove.\n\t* config/ia64/linux.h (TARGET_VERSION): Remove.\n\t* config/ia64/vms.h (TARGET_NAME, TARGET_VERSION): Remove.\n\t* config/iq2000/iq2000.h (IQ2000_VERSION, MACHINE_TYPE,\n\tTARGET_VERSION_INTERNAL, TARGET_VERSION): Remove.\n\t* config/lm32/lm32.h (TARGET_VERSION): Remove.\n\t* config/lm32/uclinux-elf.h (TARGET_VERSION): Remove.\n\t* config/m32c/m32c.h (TARGET_VERSION): Remove.\n\t* config/m32r/linux.h (LINUX_DEFAULT_ELF, TARGET_VERSION): Remove.\n\t* config/m32r/m32r.h (TARGET_VERSION): Remove.\n\t* config/m68k/linux.h (TARGET_VERSION): Remove.\n\t* config/m68k/m68k.h (TARGET_VERSION): Remove.\n\t* config/m68k/netbsd-elf.h (TARGET_VERSION): Remove.\n\t* config/m68k/uclinux.h (TARGET_VERSION): Remove.\n\t* config/mcore/mcore-elf.h (TARGET_VERSION): Remove.\n\t* config/mep/mep.h (TARGET_VERSION): Remove.\n\t* config/microblaze/microblaze.h (MICROBLAZE_VERSION,\n\tMACHINE_TYPE, TARGET_VERSION_INTERNAL, TARGET_VERSION): Remove.\n\t* config/mips/iris6.h (MACHINE_TYPE): Remove.\n\t* config/mips/linux.h (TARGET_VERSION): Remove.\n\t* config/mips/netbsd.h (MACHINE_TYPE): Remove.\n\t* config/mips/vxworks.h (TARGET_VERSION): Remove.\n\t* config/mmix/mmix.h (TARGET_VERSION): Remove.\n\t* config/mn10300/linux.h (TARGET_VERSION): Remove.\n\t* config/mn10300/mn10300.h (TARGET_VERSION): Remove.\n\t* config/pa/pa.h (TARGET_VERSION): Remove.\n\t* config/pdp11/pdp11.h (TARGET_VERSION): Remove.\n\t* config/picochip/picochip.h (TARGET_VERSION): Remove.\n\t* config/rs6000/aix.h (TARGET_VERSION): Remove.\n\t* config/rs6000/darwin.h (TARGET_VERSION): Remove.\n\t* config/rs6000/darwin64.h (TARGET_VERSION): Remove.\n\t* config/rs6000/eabi.h (TARGET_VERSION): Remove.\n\t* config/rs6000/eabialtivec.h (TARGET_VERSION): Remove.\n\t* config/rs6000/eabisim.h (TARGET_VERSION): Remove.\n\t* config/rs6000/eabispe.h (TARGET_VERSION): Remove.\n\t* config/rs6000/freebsd.h (TARGET_VERSION): Remove.\n\t* config/rs6000/linux.h (TARGET_VERSION): Remove.\n\t* config/rs6000/linux64.h (TARGET_VERSION): Remove.\n\t* config/rs6000/linuxaltivec.h (TARGET_VERSION): Remove.\n\t* config/rs6000/linuxspe.h (TARGET_VERSION): Remove.\n\t* config/rs6000/lynx.h (TARGET_VERSION): Remove.\n\t* config/rs6000/netbsd.h (TARGET_VERSION): Remove.\n\t* config/rs6000/sysv4.h (TARGET_VERSION): Remove.\n\t* config/rs6000/vxworks.h (TARGET_VERSION): Remove.\n\t* config/s390/linux.h (TARGET_VERSION): Remove.\n\t* config/s390/s390.h (TARGET_VERSION): Remove.\n\t* config/s390/tpf.h (TARGET_VERSION): Remove.\n\t* config/score/score.h (TARGET_VERSION): Remove.\n\t* config/sh/linux.h (TARGET_VERSION): Remove.\n\t* config/sh/netbsd-elf.h (TARGET_VERSION_ENDIAN,\n\tTARGET_VERSION_CPU, TARGET_VERSION): Remove.\n\t* config/sh/sh.h (TARGET_VERSION): Remove.\n\t* config/sh/sh64.h (TARGET_VERSION): Remove.\n\t* config/sh/superh.h (TARGET_VERSION): Remove.\n\t* config/sh/vxworks.h (TARGET_VERSION): Remove.\n\t* config/sparc/freebsd.h (TARGET_VERSION): Remove.\n\t* config/sparc/linux.h (TARGET_VERSION): Remove.\n\t* config/sparc/linux64.h (TARGET_VERSION): Remove.\n\t* config/sparc/netbsd-elf.h (TARGET_VERSION, TARGET_NAME64,\n\tTARGET_NAME32, TARGET_NAME): Remove.\n\t* config/sparc/openbsd64.h (TARGET_VERSION): Remove.\n\t* config/sparc/sp-elf.h (TARGET_VERSION): Remove.\n\t* config/sparc/sp64-elf.h (TARGET_VERSION): Remove.\n\t* config/sparc/sysv4.h (TARGET_VERSION): Remove.\n\t* config/sparc/vxworks.h (TARGET_VERSION): Remove.\n\t* config/spu/spu.h (TARGET_VERSION): Remove.\n\t* config/stormy16/stormy16.h (TARGET_VERSION): Remove.\n\t* config/v850/v850.h (TARGET_VERSION): Remove.\n\t* config/vax/linux.h (TARGET_VERSION): Remove.\n\t* config/vax/vax.h (TARGET_NAME, TARGET_VERSION): Remove.\n\t* config/xtensa/elf.h (TARGET_VERSION): Remove.\n\t* config/xtensa/linux.h (TARGET_VERSION): Remove.\n\nFrom-SVN: r171779", "tree": {"sha": "6bd00e488e59d26c514edc133c0213790a920023", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bd00e488e59d26c514edc133c0213790a920023"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb1eb91413b50038212d148bf651c40e4d0e32f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1eb91413b50038212d148bf651c40e4d0e32f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb1eb91413b50038212d148bf651c40e4d0e32f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1eb91413b50038212d148bf651c40e4d0e32f9/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ace31bca4a35b5da87957a80aecfffada0094818", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace31bca4a35b5da87957a80aecfffada0094818", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ace31bca4a35b5da87957a80aecfffada0094818"}], "stats": {"total": 823, "additions": 216, "deletions": 607}, "files": [{"sha": "9442b249f1609ff083d31a6e3b988537ef643cbf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,3 +1,132 @@\n+2011-03-31  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR target/47109\n+\t* doc/tm.texi.in (TARGET_VERSION): Remove.\n+\t* doc/tm.texi: Regenerate.\n+\t* system.h (TARGET_VERSION, MACHINE_TYPE): Poison.\n+\t* collect2.c (main): Don't use TARGET_VERSION.\n+\t* mips-tdump.c (main): Don't use TARGET_VERSION.\n+\t* mips-tfile.c (main): Don't use TARGET_VERSION.\n+\t* config.gcc (powerpc-wrs-vxworksae): Don't use\n+\trs6000/vxworksae.h.\n+\t* config/rs6000/vxworksae.h: Remove.\n+\t* config/alpha/alpha.h (TARGET_VERSION): Remove.\n+\t* config/alpha/freebsd.h (TARGET_VERSION): Remove.\n+\t* config/alpha/linux-elf.h (TARGET_VERSION): Remove.\n+\t* config/alpha/netbsd.h (TARGET_VERSION): Remove.\n+\t* config/alpha/vms.h (TARGET_NAME, TARGET_VERSION): Remove.\n+\t* config/arm/arm.h (TARGET_VERSION): Remove.\n+\t* config/arm/coff.h (TARGET_VERSION): Remove.\n+\t* config/arm/ecos-elf.h (TARGET_VERSION): Remove.\n+\t* config/arm/elf.h (TARGET_VERSION): Remove.\n+\t* config/arm/freebsd.h (TARGET_VERSION): Remove.\n+\t* config/arm/linux-elf.h (TARGET_VERSION): Remove.\n+\t* config/arm/netbsd-elf.h (TARGET_VERSION): Remove.\n+\t* config/arm/pe.h (TARGET_VERSION): Remove.\n+\t* config/arm/rtems-elf.h (TARGET_VERSION): Remove.\n+\t* config/arm/semi.h (TARGET_VERSION): Remove.\n+\t* config/arm/uclinux-elf.h (TARGET_VERSION): Remove.\n+\t* config/arm/unknown-elf.h (TARGET_VERSION): Remove.\n+\t* config/arm/vxworks.h (TARGET_VERSION): Remove.\n+\t* config/avr/avr.h (TARGET_VERSION): Remove.\n+\t* config/bfin/bfin.h (TARGET_VERSION): Remove.\n+\t* config/fr30/fr30.h (TARGET_VERSION): Remove.\n+\t* config/frv/frv.h (TARGET_VERSION): Remove.\n+\t* config/h8300/h8300.h (TARGET_VERSION): Remove.\n+\t* config/i386/cygwin.h (TARGET_VERSION): Remove.\n+\t* config/i386/darwin.h (TARGET_VERSION): Remove.\n+\t* config/i386/darwin64.h (TARGET_VERSION): Remove.\n+\t* config/i386/djgpp.h (TARGET_VERSION): Remove.\n+\t* config/i386/freebsd.h (TARGET_VERSION): Remove.\n+\t* config/i386/freebsd64.h (TARGET_VERSION): Remove.\n+\t* config/i386/gnu.h (TARGET_VERSION): Remove.\n+\t* config/i386/i386-interix.h (TARGET_VERSION): Remove.\n+\t* config/i386/i386elf.h (TARGET_VERSION): Remove.\n+\t* config/i386/linux.h (TARGET_VERSION): Remove.\n+\t* config/i386/linux64.h (TARGET_VERSION): Remove.\n+\t* config/i386/lynx.h (TARGET_VERSION): Remove.\n+\t* config/i386/mingw32.h (TARGET_VERSION): Remove.\n+\t* config/i386/netbsd-elf.h (TARGET_VERSION): Remove.\n+\t* config/i386/netbsd64.h (TARGET_VERSION): Remove.\n+\t* config/i386/netware.h (TARGET_VERSION): Remove.\n+\t* config/i386/nto.h (TARGET_VERSION): Remove.\n+\t* config/i386/openbsd.h (TARGET_VERSION): Remove.\n+\t* config/i386/vxworks.h (TARGET_VERSION): Remove.\n+\t* config/ia64/elf.h (TARGET_VERSION): Remove.\n+\t* config/ia64/freebsd.h (TARGET_VERSION): Remove.\n+\t* config/ia64/hpux.h (TARGET_VERSION): Remove.\n+\t* config/ia64/linux.h (TARGET_VERSION): Remove.\n+\t* config/ia64/vms.h (TARGET_NAME, TARGET_VERSION): Remove.\n+\t* config/iq2000/iq2000.h (IQ2000_VERSION, MACHINE_TYPE,\n+\tTARGET_VERSION_INTERNAL, TARGET_VERSION): Remove.\n+\t* config/lm32/lm32.h (TARGET_VERSION): Remove.\n+\t* config/lm32/uclinux-elf.h (TARGET_VERSION): Remove.\n+\t* config/m32c/m32c.h (TARGET_VERSION): Remove.\n+\t* config/m32r/linux.h (LINUX_DEFAULT_ELF, TARGET_VERSION): Remove.\n+\t* config/m32r/m32r.h (TARGET_VERSION): Remove.\n+\t* config/m68k/linux.h (TARGET_VERSION): Remove.\n+\t* config/m68k/m68k.h (TARGET_VERSION): Remove.\n+\t* config/m68k/netbsd-elf.h (TARGET_VERSION): Remove.\n+\t* config/m68k/uclinux.h (TARGET_VERSION): Remove.\n+\t* config/mcore/mcore-elf.h (TARGET_VERSION): Remove.\n+\t* config/mep/mep.h (TARGET_VERSION): Remove.\n+\t* config/microblaze/microblaze.h (MICROBLAZE_VERSION,\n+\tMACHINE_TYPE, TARGET_VERSION_INTERNAL, TARGET_VERSION): Remove.\n+\t* config/mips/iris6.h (MACHINE_TYPE): Remove.\n+\t* config/mips/linux.h (TARGET_VERSION): Remove.\n+\t* config/mips/netbsd.h (MACHINE_TYPE): Remove.\n+\t* config/mips/vxworks.h (TARGET_VERSION): Remove.\n+\t* config/mmix/mmix.h (TARGET_VERSION): Remove.\n+\t* config/mn10300/linux.h (TARGET_VERSION): Remove.\n+\t* config/mn10300/mn10300.h (TARGET_VERSION): Remove.\n+\t* config/pa/pa.h (TARGET_VERSION): Remove.\n+\t* config/pdp11/pdp11.h (TARGET_VERSION): Remove.\n+\t* config/picochip/picochip.h (TARGET_VERSION): Remove.\n+\t* config/rs6000/aix.h (TARGET_VERSION): Remove.\n+\t* config/rs6000/darwin.h (TARGET_VERSION): Remove.\n+\t* config/rs6000/darwin64.h (TARGET_VERSION): Remove.\n+\t* config/rs6000/eabi.h (TARGET_VERSION): Remove.\n+\t* config/rs6000/eabialtivec.h (TARGET_VERSION): Remove.\n+\t* config/rs6000/eabisim.h (TARGET_VERSION): Remove.\n+\t* config/rs6000/eabispe.h (TARGET_VERSION): Remove.\n+\t* config/rs6000/freebsd.h (TARGET_VERSION): Remove.\n+\t* config/rs6000/linux.h (TARGET_VERSION): Remove.\n+\t* config/rs6000/linux64.h (TARGET_VERSION): Remove.\n+\t* config/rs6000/linuxaltivec.h (TARGET_VERSION): Remove.\n+\t* config/rs6000/linuxspe.h (TARGET_VERSION): Remove.\n+\t* config/rs6000/lynx.h (TARGET_VERSION): Remove.\n+\t* config/rs6000/netbsd.h (TARGET_VERSION): Remove.\n+\t* config/rs6000/sysv4.h (TARGET_VERSION): Remove.\n+\t* config/rs6000/vxworks.h (TARGET_VERSION): Remove.\n+\t* config/s390/linux.h (TARGET_VERSION): Remove.\n+\t* config/s390/s390.h (TARGET_VERSION): Remove.\n+\t* config/s390/tpf.h (TARGET_VERSION): Remove.\n+\t* config/score/score.h (TARGET_VERSION): Remove.\n+\t* config/sh/linux.h (TARGET_VERSION): Remove.\n+\t* config/sh/netbsd-elf.h (TARGET_VERSION_ENDIAN,\n+\tTARGET_VERSION_CPU, TARGET_VERSION): Remove.\n+\t* config/sh/sh.h (TARGET_VERSION): Remove.\n+\t* config/sh/sh64.h (TARGET_VERSION): Remove.\n+\t* config/sh/superh.h (TARGET_VERSION): Remove.\n+\t* config/sh/vxworks.h (TARGET_VERSION): Remove.\n+\t* config/sparc/freebsd.h (TARGET_VERSION): Remove.\n+\t* config/sparc/linux.h (TARGET_VERSION): Remove.\n+\t* config/sparc/linux64.h (TARGET_VERSION): Remove.\n+\t* config/sparc/netbsd-elf.h (TARGET_VERSION, TARGET_NAME64,\n+\tTARGET_NAME32, TARGET_NAME): Remove.\n+\t* config/sparc/openbsd64.h (TARGET_VERSION): Remove.\n+\t* config/sparc/sp-elf.h (TARGET_VERSION): Remove.\n+\t* config/sparc/sp64-elf.h (TARGET_VERSION): Remove.\n+\t* config/sparc/sysv4.h (TARGET_VERSION): Remove.\n+\t* config/sparc/vxworks.h (TARGET_VERSION): Remove.\n+\t* config/spu/spu.h (TARGET_VERSION): Remove.\n+\t* config/stormy16/stormy16.h (TARGET_VERSION): Remove.\n+\t* config/v850/v850.h (TARGET_VERSION): Remove.\n+\t* config/vax/linux.h (TARGET_VERSION): Remove.\n+\t* config/vax/vax.h (TARGET_NAME, TARGET_VERSION): Remove.\n+\t* config/xtensa/elf.h (TARGET_VERSION): Remove.\n+\t* config/xtensa/linux.h (TARGET_VERSION): Remove.\n+\n 2011-03-31  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR target/48142"}, {"sha": "373483bcd38b4d11e2c576cce0c0b6d5efb67ff9", "filename": "gcc/collect2.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,7 +1,7 @@\n /* Collect static initialization info into data structures that can be\n    traversed by C++ initialization and finalization routines.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Chris Smith (csmith@convex.com).\n    Heavily modified by Michael Meissner (meissner@cygnus.com),\n@@ -1682,13 +1682,7 @@ main (int argc, char **argv)\n   *c_ptr = *ld1 = *object = (char *) 0;\n \n   if (vflag)\n-    {\n-      notice (\"collect2 version %s\", version_string);\n-#ifdef TARGET_VERSION\n-      TARGET_VERSION;\n-#endif\n-      fprintf (stderr, \"\\n\");\n-    }\n+    notice (\"collect2 version %s\\n\", version_string);\n \n   if (helpflag)\n     {"}, {"sha": "0d026e7e3f3000e0c439dc8c8bbfdb3dc22dd135", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -2087,7 +2087,7 @@ powerpc-wrs-vxworks|powerpc-wrs-vxworksae)\n \textra_headers=ppc-asm.h\n \tcase ${target} in\n \t  *-vxworksae*)\n-\t    tm_file=\"${tm_file} vx-common.h vxworksae.h rs6000/vxworks.h rs6000/e500.h rs6000/vxworksae.h\"\n+\t    tm_file=\"${tm_file} vx-common.h vxworksae.h rs6000/vxworks.h rs6000/e500.h\"\n \t    tmake_file=\"${tmake_file} rs6000/t-vxworksae\"\n \t    ;;\n \t  *-vxworks*)"}, {"sha": "6f476f4515be7a32de3c2ca49f8940ec7a19716e", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for DEC Alpha.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2004, 2005, 2007, 2008, 2009, 2010\n+   2000, 2001, 2002, 2004, 2005, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n@@ -96,9 +96,6 @@ along with GCC; see the file COPYING3.  If not see\n   while (0)\n #endif\n \n-/* Print subsidiary information on the compiler version in use.  */\n-#define TARGET_VERSION\n-\n /* Run-time compilation parameters selecting different hardware subsets.  */\n \n /* Which processor to schedule for. The cpu attribute defines a list that"}, {"sha": "b6e7ed7da008c858473cd9adc57d7145085c1a88", "filename": "gcc/config/alpha/freebsd.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Falpha%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Falpha%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Ffreebsd.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for DEC Alpha/AXP running FreeBSD using the ELF format\n-   Copyright (C) 2000, 2002, 2004, 2005, 2007, 2010\n+   Copyright (C) 2000, 2002, 2004, 2005, 2007, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by David E. O'Brien <obrien@FreeBSD.org> and BSDi.\n \n@@ -54,9 +54,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef  WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE\t32\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (FreeBSD/alpha ELF)\");\n-\n #define TARGET_ELF\t1\n \n #undef  TARGET_DEFAULT"}, {"sha": "f4f5a40b5cc6f576760f00f9afa50408ddf24dca", "filename": "gcc/config/alpha/linux-elf.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Falpha%2Flinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Falpha%2Flinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux-elf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler\n    for Alpha Linux-based GNU systems using ELF.\n-   Copyright (C) 1996, 1997, 1998, 2001, 2002, 2003, 2006, 2007, 2010\n+   Copyright (C) 1996, 1997, 1998, 2001, 2002, 2003, 2006, 2007, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Richard Henderson.\n \n@@ -20,9 +20,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (Alpha GNU/Linux for ELF)\");\n-\n #undef EXTRA_SPECS\n #define EXTRA_SPECS \\\n { \"elf_dynamic_linker\", ELF_DYNAMIC_LINKER },"}, {"sha": "df0bc41c4ff28695fcb6df68f595ee2e2dffcb4f", "filename": "gcc/config/alpha/netbsd.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Falpha%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Falpha%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fnetbsd.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for Alpha NetBSD systems.\n-   Copyright (C) 1998, 2002, 2003, 2004, 2005, 2007\n+   Copyright (C) 1998, 2002, 2003, 2004, 2005, 2007, 2011\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -77,7 +77,3 @@ along with GCC; see the file COPYING3.  If not see\n /* Attempt to enable execute permissions on the stack.  */\n \n #define ENABLE_EXECUTE_STACK NETBSD_ENABLE_EXECUTE_STACK\n-\n-\n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (NetBSD/alpha ELF)\");"}, {"sha": "41a2cde852646dc67e62599a00f1abf00ab36235", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Output variables, constants and external declarations, for GNU compiler.\n    Copyright (C) 1996, 1997, 1998, 2000, 2001, 2002, 2004, 2005, 2007, 2008,\n-   2009, 2010\n+   2009, 2010, 2011\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -50,11 +50,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef TARGET_ABI_OPEN_VMS\n #define TARGET_ABI_OPEN_VMS 1\n \n-#undef TARGET_NAME   \n-#define TARGET_NAME \"OpenVMS/Alpha\"\n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (%s)\", TARGET_NAME);           \n-\n #define VMS_DEBUG_MAIN_POINTER \"TRANSFER$BREAK$GO\"\n \n #undef PCC_STATIC_STRUCT_RETURN"}, {"sha": "5c3f2f81fcedf08f6a79fd5369ff7cd01709a503", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -205,10 +205,6 @@ extern void (*arm_lang_output_object_attributes_hook)(void);\n #endif\n \f\n /* Run-time Target Specification.  */\n-#ifndef TARGET_VERSION\n-#define TARGET_VERSION fputs (\" (ARM/generic)\", stderr);\n-#endif\n-\n #define TARGET_SOFT_FLOAT\t\t(arm_float_abi == ARM_FLOAT_ABI_SOFT)\n /* Use hardware floating point instructions. */\n #define TARGET_HARD_FLOAT\t\t(arm_float_abi != ARM_FLOAT_ABI_SOFT)"}, {"sha": "3b8fe68dd5688ee6ed213d7666cb47b6f1fb0a0d", "filename": "gcc/config/arm/coff.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcoff.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -26,9 +26,6 @@\n \n \f\n /* Run-time Target Specification.  */\n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fputs (\" (ARM/coff)\", stderr)\n-\n #undef  TARGET_DEFAULT_FLOAT_ABI\n #define TARGET_DEFAULT_FLOAT_ABI ARM_FLOAT_ABI_SOFT\n "}, {"sha": "4dd111eed032f56f8eb4b2846a7d3fc5d598b7a0", "filename": "gcc/config/arm/ecos-elf.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Fecos-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Fecos-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fecos-elf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for ecos based ARM systems using ELF\n-   Copyright (C) 1998, 2001, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2001, 2007, 2011 Free Software Foundation, Inc.\n  \n    This file is part of GCC.\n  \n@@ -18,9 +18,6 @@\n    <http://www.gnu.org/licenses/>.  */\n \n /* Run-time Target Specification.  */\n-#undef  TARGET_VERSION\n-#define TARGET_VERSION\tfputs (\" (ARM/ELF Ecos)\", stderr);\n-\n #define HAS_INIT_SECTION\n \n #undef INVOKE_main"}, {"sha": "5ce3e690a39225e5964f52db8878b2ddafd50892", "filename": "gcc/config/arm/elf.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Felf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -108,10 +108,6 @@\n #endif\n   \n /* Run-time Target Specification.  */\n-#ifndef TARGET_VERSION\n-#define TARGET_VERSION fputs (\" (ARM/elf)\", stderr)\n-#endif\n-\n #ifndef TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_APCS_FRAME)\n #endif"}, {"sha": "6c39e12530682d8b587eec7971c5356f7b1d2c8a", "filename": "gcc/config/arm/freebsd.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffreebsd.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for StrongARM running FreeBSD using the ELF format\n-   Copyright (C) 2001, 2004, 2007, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2004, 2007, 2010, 2011 Free Software Foundation, Inc.\n    Contributed by David E. O'Brien <obrien@FreeBSD.org> and BSDi.\n \n    This file is part of GCC.\n@@ -62,6 +62,3 @@\n \n #undef  SUBTARGET_CPU_DEFAULT\n #define SUBTARGET_CPU_DEFAULT\tTARGET_CPU_strongarm\n-\n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (FreeBSD/StrongARM ELF)\");"}, {"sha": "bfaf8c59b6a4ab6cb08b2ede46cfc86e75a7af3d", "filename": "gcc/config/arm/linux-elf.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Flinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Flinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-elf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -24,9 +24,6 @@\n    any conflicting definitions and add any extras.  */\n \n /* Run-time Target Specification.  */\n-#undef  TARGET_VERSION\n-#define TARGET_VERSION  fputs (\" (ARM GNU/Linux with ELF)\", stderr);\n-\n #undef  TARGET_DEFAULT_FLOAT_ABI\n #define TARGET_DEFAULT_FLOAT_ABI ARM_FLOAT_ABI_HARD\n "}, {"sha": "43c28b4ab6e3b44a338092837031f4910a71f527", "filename": "gcc/config/arm/netbsd-elf.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -20,8 +20,6 @@\n    <http://www.gnu.org/licenses/>.  */\n \n /* Run-time Target Specification.  */\n-#undef TARGET_VERSION\n-#define TARGET_VERSION fputs (\" (NetBSD/arm ELF)\", stderr);\n \n /* arm.h defaults to ARM6 CPU.  */\n "}, {"sha": "ce2f1d7328154e6c14f540d15b5f6205131e5540", "filename": "gcc/config/arm/pe.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Fpe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Fpe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpe.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -34,8 +34,6 @@\n \n \f\n /* Run-time Target Specification.  */\n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fputs (\" (ARM/pe)\", stderr)\n \n /* Get tree.c to declare a target-specific specialization of\n    merge_decl_attributes.  */"}, {"sha": "8d5a1d7cf9502f0ed2a6c485e2c92952a8641c4a", "filename": "gcc/config/arm/rtems-elf.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Frtems-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Frtems-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Frtems-elf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -19,8 +19,6 @@\n    <http://www.gnu.org/licenses/>.  */\n \n /* Run-time Target Specification.  */\n-#undef TARGET_VERSION\n-#define TARGET_VERSION  fputs (\" (ARM/ELF RTEMS)\", stderr);\n \n #define HAS_INIT_SECTION\n "}, {"sha": "ae8ddeae6e9d511e2a110c10bd17a099ba94a0ad", "filename": "gcc/config/arm/semi.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Fsemi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Fsemi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fsemi.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -33,10 +33,6 @@\n #define LINK_SPEC \"%{mbig-endian:-EB} -X\"\n #endif\n \n-#ifndef TARGET_VERSION\n-#define TARGET_VERSION fputs (\" (ARM/semi-hosted)\", stderr);\n-#endif\n-\n #ifndef TARGET_DEFAULT_FLOAT_ABI\n #define TARGET_DEFAULT_FLOAT_ABI ARM_FLOAT_ABI_HARD\n #endif"}, {"sha": "a8ba25540d661e37e9ae2ce45759be4b053cc2e6", "filename": "gcc/config/arm/uclinux-elf.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Fuclinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Fuclinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fuclinux-elf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for ARM running ucLinux using ELF\n-   Copyright (C) 1999, 2001, 2004, 2005, 2007, 2008\n+   Copyright (C) 1999, 2001, 2004, 2005, 2007, 2008, 2009, 2011\n    Free Software Foundation, Inc.\n    Contributed by Philip Blundell <pb@nexus.co.uk>\n \n@@ -23,9 +23,6 @@\n #undef  NEED_PLT_RELOC\n #define NEED_PLT_RELOC 0\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fputs (\" (ARM/ELF ucLinux)\", stderr);\n-\n #undef  TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_SINGLE_PIC_BASE)\n "}, {"sha": "d5df624c1969621cb020a39e918722c27004bd47", "filename": "gcc/config/arm/unknown-elf.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Funknown-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Funknown-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funknown-elf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for non-Linux based ARM systems using ELF\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2007, 2008, 2010\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2007, 2008, 2010,\n+   2011 Free Software Foundation, Inc.\n    Contributed by Catherine Moore <clm@cygnus.com>\n \n    This file is part of GCC.\n@@ -23,9 +23,6 @@\n    any conflicting definitions and add any extras.  */\n \n /* Run-time Target Specification.  */\n-#ifndef TARGET_VERSION\n-#define TARGET_VERSION\tfputs (\" (ARM/ELF)\", stderr);\n-#endif\n \n /* Default to using software floating point.  */\n #ifndef TARGET_DEFAULT"}, {"sha": "887691326e51da802e6f7775419b52b047247702", "filename": "gcc/config/arm/vxworks.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Farm%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvxworks.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GCC,\n    for ARM with targetting the VXWorks run time environment. \n-   Copyright (C) 1999, 2000, 2003, 2004, 2007, 2008, 2009, 2010\n+   Copyright (C) 1999, 2000, 2003, 2004, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n \n    Contributed by: Mike Stump <mrs@wrs.com>\n@@ -85,9 +85,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef ENDFILE_SPEC\n #define ENDFILE_SPEC VXWORKS_ENDFILE_SPEC\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fputs (\" (ARM/VxWorks)\", stderr);\n-\n /* There is no default multilib.  */\n #undef MULTILIB_DEFAULTS\n "}, {"sha": "854cc45db6e954b6bdf20d8d7f101b8d589de401", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -122,8 +122,6 @@ extern GTY(()) section *progmem_section;\n #define AVR_2_BYTE_PC (!AVR_HAVE_EIJMP_EICALL)\n #define AVR_3_BYTE_PC (AVR_HAVE_EIJMP_EICALL)\n \n-#define TARGET_VERSION fprintf (stderr, \" (GNU assembler syntax)\");\n-\n #define BITS_BIG_ENDIAN 0\n #define BYTES_BIG_ENDIAN 0\n #define WORDS_BIG_ENDIAN 0"}, {"sha": "ab3f2ea2c22db94078d4ce9c70b3d3bc9b913f3f", "filename": "gcc/config/bfin/bfin.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fbfin%2Fbfin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fbfin%2Fbfin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -31,9 +31,6 @@\n #define BRT 1\n #define BRF 0\n \n-/* Print subsidiary information on the compiler version in use.  */\n-#define TARGET_VERSION fprintf (stderr, \" (BlackFin bfin)\")\n-\n /* Predefinition in the preprocessor for this target machine */\n #ifndef TARGET_CPU_CPP_BUILTINS\n #define TARGET_CPU_CPP_BUILTINS()\t\t\\"}, {"sha": "89510459c43004868a8a171247647b87f736fc23", "filename": "gcc/config/fr30/fr30.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Ffr30%2Ffr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Ffr30%2Ffr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,8 +1,8 @@\n /*{{{  Comment.  */ \n \n /* Definitions of FR30 target. \n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2004, 2007, 2008, 2009, 2010\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2004, 2007, 2008, 2009, 2010,\n+   2011 Free Software Foundation, Inc.\n    Contributed by Cygnus Solutions.\n \n This file is part of GCC.\n@@ -39,8 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n     }\t\t\t\t\t\t\\\n    while (0)\n \n-#define TARGET_VERSION fprintf (stderr, \" (fr30)\");\n-\n #undef  STARTFILE_SPEC\n #define STARTFILE_SPEC \"crt0.o%s crti.o%s crtbegin.o%s\"\n "}, {"sha": "5d20682438294f50969401c60bd39d4dff6aaa18", "filename": "gcc/config/frv/frv.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Ffrv%2Ffrv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Ffrv%2Ffrv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -238,19 +238,6 @@\n #define HAVE_AS_TLS 0\n #endif\n \n-/* This macro is a C statement to print on `stderr' a string describing the\n-   particular machine description choice.  Every machine description should\n-   define `TARGET_VERSION'.  For example:\n-\n-        #ifdef MOTOROLA\n-        #define TARGET_VERSION \\\n-          fprintf (stderr, \" (68k, Motorola syntax)\");\n-        #else\n-        #define TARGET_VERSION \\\n-          fprintf (stderr, \" (68k, MIT syntax)\");\n-        #endif  */\n-#define TARGET_VERSION fprintf (stderr, _(\" (frv)\"))\n-\n #define LABEL_ALIGN_AFTER_BARRIER(LABEL) (TARGET_ALIGN_LABELS ? 3 : 0)\n \f\n /* Small Data Area Support.  */"}, {"sha": "837ecd0c3cb2d7f6e23347f7f358d0433ae3428a", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -82,10 +82,6 @@ extern const char * const *h8_reg_names;\n \n #define LIB_SPEC \"%{mrelax:-relax} %{g:-lg} %{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p}\"\n \n-/* Print subsidiary information on the compiler version in use.  */\n-\n-#define TARGET_VERSION fprintf (stderr, \" (Renesas H8/300)\");\n-\n /* Macros used in the machine description to test the flags.  */\n \n /* Select between the H8/300 and H8/300H CPUs.  */"}, {"sha": "5f3062cf42e82966232a2b9a679248ca6c2e220e", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,7 +1,7 @@\n /* Operating system specific defines to be used when targeting GCC for\n    hosting on Windows32, using a Unix style C library and tools.\n    Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,\n-   2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+   2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -19,8 +19,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#define TARGET_VERSION fprintf (stderr, \" (x86 Cygwin)\");\n-\n #define EXTRA_OS_CPP_BUILTINS()  /* Nothing.  */\n \n #undef CPP_SPEC"}, {"sha": "ea350326a89c4aaa4230fe05b89b09f86b24d262", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for x86 running Darwin.\n-   Copyright (C) 2001, 2002, 2004, 2005, 2006, 2007, 2008, 2010\n+   Copyright (C) 2001, 2002, 2004, 2005, 2006, 2007, 2008, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Apple Computer Inc.\n \n@@ -26,8 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef DARWIN_X86\n #define DARWIN_X86 1\n \n-#define TARGET_VERSION fprintf (stderr, \" (i686 Darwin)\");\n-\n #undef  TARGET_64BIT\n #define TARGET_64BIT OPTION_ISA_64BIT\n "}, {"sha": "6b45e0b5a6c017614e376c5b91c747b658524ba9", "filename": "gcc/config/i386/darwin64.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fdarwin64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fdarwin64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin64.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for x86_64 running Darwin.\n-   Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2007, 2011 Free Software Foundation, Inc.\n    Contributed by Apple Computer Inc.\n \n This file is part of GCC.\n@@ -18,9 +18,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (x86_64 Darwin)\");\n-\n #undef  DARWIN_ARCH_SPEC\n #define DARWIN_ARCH_SPEC \"%{m32:i386;:x86_64}\"\n "}, {"sha": "d8af241ee94d0f61cdf163d3d8927c23b2145148", "filename": "gcc/config/i386/djgpp.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdjgpp.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Configuration for an i386 running MS-DOS with DJGPP.\n    Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2004, 2005, 2007,\n-   2010 Free Software Foundation, Inc.\n+   2010, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -163,8 +163,6 @@ along with GCC; see the file COPYING3.  If not see\n /* Used to be defined in xm-djgpp.h, but moved here for cross-compilers.  */\n #define LIBSTDCXX \"stdcxx\"\n \n-#define TARGET_VERSION fprintf (stderr, \" (80386, MS-DOS DJGPP)\"); \n-\n /* Warn that -mbnu210 is now obsolete.  */\n #undef  SUBTARGET_OVERRIDE_OPTIONS\n #define SUBTARGET_OVERRIDE_OPTIONS \\"}, {"sha": "a1fd3be108dbdb708ae452fd2d572e73686d8c8e", "filename": "gcc/config/i386/freebsd.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Intel 386 running FreeBSD with ELF format\n-   Copyright (C) 1996, 2000, 2002, 2004, 2007, 2010\n+   Copyright (C) 1996, 2000, 2002, 2004, 2007, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Eric Youngdale.\n    Modified for stabs-in-ELF by H.J. Lu.\n@@ -23,8 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n \n-#define TARGET_VERSION fprintf (stderr, \" (i386 FreeBSD/ELF)\");\n-\n /* Override the default comment-starter of \"/\".  */\n #undef  ASM_COMMENT_START\n #define ASM_COMMENT_START \"#\""}, {"sha": "853f214f4e0b09bd53f150c0d164df4bda35b169", "filename": "gcc/config/i386/freebsd64.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Ffreebsd64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Ffreebsd64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd64.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -19,9 +19,6 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (FreeBSD/x86-64 ELF)\");\n-\n #define SUBTARGET_EXTRA_SPECS \\\n   { \"fbsd_dynamic_linker\", FBSD_DYNAMIC_LINKER }\n "}, {"sha": "b245533091c9914391e41f8a2bad15b2b6fa1641", "filename": "gcc/config/i386/gnu.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -23,9 +23,6 @@ along with GCC.  If not, see <http://www.gnu.org/licenses/>.\n #undef GLIBC_DYNAMIC_LINKER\n #define GLIBC_DYNAMIC_LINKER \"/lib/ld.so\"\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (i386 GNU)\");\n-\n #undef CPP_SPEC\n #define CPP_SPEC \"%{pthread:-D_REENTRANT} %{posix:-D_POSIX_SOURCE}\"\n "}, {"sha": "904c7d8d4badebda5d2e007e92a890d5b5194ef5", "filename": "gcc/config/i386/i386-interix.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-interix.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Target definitions for GCC for Intel 80386 running Interix\n    Parts Copyright (C) 1991, 1999, 2000, 2002, 2003, 2004, 2007, 2008, 2009,\n-   2010 Free Software Foundation, Inc.\n+   2010, 2011 Free Software Foundation, Inc.\n \n    Parts:\n      by Douglas B. Rupp (drupp@cs.washington.edu).\n@@ -85,8 +85,6 @@ along with GCC; see the file COPYING3.  If not see\n #define CPP_SPEC \"-remap %{posix:-D_POSIX_SOURCE} \\\n -isystem %$INTERIX_ROOT/usr/include\"\n \n-#define TARGET_VERSION fprintf (stderr, \" (i386 Interix)\");\n-\n /* The global __fltused is necessary to cause the printf/scanf routines\n    for outputting/inputting floating point numbers to be loaded.  Since this\n    is kind of hard to detect, we just do it all the time.  */"}, {"sha": "eb9797aff31a73e2fb5c5f3feee1c9c5693d8228", "filename": "gcc/config/i386/i386elf.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fi386elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fi386elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386elf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GCC for Intel 80386 using ELF\n-   Copyright (C) 1988, 1991, 1995, 2000, 2001, 2002, 2007, 2008, 2010\n+   Copyright (C) 1988, 1991, 1995, 2000, 2001, 2002, 2007, 2008, 2010, 2011\n    Free Software Foundation, Inc.\n \n    Derived from sysv4.h written by Ron Guilmette (rfg@netcom.com).\n@@ -24,8 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef  PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n \n-#define TARGET_VERSION fprintf (stderr, \" (i386 bare ELF target)\");\n-\n /* The ELF ABI for the i386 says that records and unions are returned\n    in memory.  */\n "}, {"sha": "01b6bc86b054b56b8e606e24b685e5254654e67e", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -24,8 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n /* The .file command should always begin the output.  */\n #define TARGET_ASM_FILE_START_FILE_DIRECTIVE true\n \n-#define TARGET_VERSION fprintf (stderr, \" (i386 Linux/ELF)\");\n-\n /* The svr4 ABI for the i386 says that records and unions are returned\n    in memory.  */\n #undef DEFAULT_PCC_STRUCT_RETURN"}, {"sha": "4bed2faf3357942fe01d0f4f5444aaeebf210daa", "filename": "gcc/config/i386/linux64.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux64.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -24,12 +24,6 @@ a copy of the GCC Runtime Library Exception along with this program;\n see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n-#if TARGET_64BIT_DEFAULT\n-#define TARGET_VERSION fprintf (stderr, \" (x86-64 Linux/ELF)\");\n-#else\n-#define TARGET_VERSION fprintf (stderr, \" (i386 Linux/ELF)\");\n-#endif\n-\n #define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\"}, {"sha": "910a9080b3a77d7d0c003e5314fee7273cfee597", "filename": "gcc/config/i386/lynx.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flynx.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for LynxOS on i386.\n-   Copyright (C) 1993, 1995, 1996, 2002, 2004, 2005, 2007, 2010\n+   Copyright (C) 1993, 1995, 1996, 2002, 2004, 2005, 2007, 2010, 2011\n    Free Software Foundation, Inc. \n \n This file is part of GCC.\n@@ -18,8 +18,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#define TARGET_VERSION fputs (\" (i386/LynxOS)\", stderr);\n-\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\"}, {"sha": "7485b9d450f4d89ffcb279e98e30401f2c103d2e", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,7 +1,7 @@\n /* Operating system specific defines to be used when targeting GCC for\n    hosting on Windows32, using GNU tools and the Windows32 API Library.\n    Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2007, 2008,\n-   2009, 2010 Free Software Foundation, Inc.\n+   2009, 2010, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -19,13 +19,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#undef TARGET_VERSION\n-#if TARGET_64BIT_DEFAULT\n-#define TARGET_VERSION fprintf (stderr,\"(x86_64 MinGW\");\n-#else\n-#define TARGET_VERSION fprintf (stderr,\" (x86 MinGW)\");\n-#endif\n-\n #undef DEFAULT_ABI\n #define DEFAULT_ABI MS_ABI\n "}, {"sha": "449a3a71cfff33e26ab79cd9d1039395ca3c2093", "filename": "gcc/config/i386/netbsd-elf.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetbsd-elf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GCC,\n    for i386/ELF NetBSD systems.\n-   Copyright (C) 2001, 2002, 2004, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2004, 2007, 2011 Free Software Foundation, Inc.\n    Contributed by matthew green <mrg@eterna.com.au>\n \n This file is part of GCC.\n@@ -120,5 +120,3 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Attempt to enable execute permissions on the stack.  */\n #define ENABLE_EXECUTE_STACK NETBSD_ENABLE_EXECUTE_STACK\n-\n-#define TARGET_VERSION fprintf (stderr, \" (NetBSD/i386 ELF)\");"}, {"sha": "e13d16d6c64e26b88cfc040e75263048d8a3b7c2", "filename": "gcc/config/i386/netbsd64.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fnetbsd64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fnetbsd64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetbsd64.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GCC,\n    for x86-64/ELF NetBSD systems.\n-   Copyright (C) 2002, 2004, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2004, 2007, 2011 Free Software Foundation, Inc.\n    Contributed by Wasabi Systems, Inc.\n \n This file is part of GCC.\n@@ -68,5 +68,3 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Attempt to enable execute permissions on the stack.  */\n #define ENABLE_EXECUTE_STACK NETBSD_ENABLE_EXECUTE_STACK\n-\n-#define TARGET_VERSION fprintf (stderr, \" (NetBSD/x86_64 ELF)\");"}, {"sha": "f377fb5dc94efc22baeb9e8b01c1356b246afb29", "filename": "gcc/config/i386/netware.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fnetware.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fnetware.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetware.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -21,8 +21,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#define TARGET_VERSION fprintf (stderr, \" (x86 NetWare)\");\n-\n #undef  CPP_SPEC\n #define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n "}, {"sha": "aed97731ee0e50ad2c408adfc23cdbfbc0174ccf", "filename": "gcc/config/i386/nto.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fnto.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fnto.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnto.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Intel 386 running QNX/Neutrino.\n-   Copyright (C) 2002, 2003, 2007, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2007, 2010, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -20,9 +20,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef  DEFAULT_PCC_STRUCT_RETURN\n #define DEFAULT_PCC_STRUCT_RETURN 1\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION\tfprintf (stderr, \" (QNX/Neutrino/i386 ELF)\");\n-\n #undef TARGET_OS_CPP_BUILTINS\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\"}, {"sha": "d7bf95ad57c4fccfef142495be5299e92d9f349d", "filename": "gcc/config/i386/openbsd.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fopenbsd.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,6 @@\n /* Configuration for an OpenBSD i386 target.\n-   Copyright (C) 1999, 2000, 2002, 2004, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002, 2004, 2007, 2011\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -18,8 +19,6 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n \n-#define TARGET_VERSION fprintf (stderr, \" (OpenBSD/i386)\");\n-\n /* This goes away when the math-emulator is fixed */\n #undef TARGET_SUBTARGET_DEFAULT\n #define TARGET_SUBTARGET_DEFAULT \\"}, {"sha": "b95aa886bbd57af42996e685cf4e3e09a3a40757", "filename": "gcc/config/i386/vxworks.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fi386%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvxworks.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,6 @@\n /* IA32 VxWorks target definitions for GNU compiler.\n-   Copyright (C) 2003, 2004, 2005, 2007, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005, 2007, 2010, 2011\n+   Free Software Foundation, Inc.\n    Updated by CodeSourcery, LLC.\n \n This file is part of GCC.\n@@ -18,9 +19,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (80586, VxWorks syntax)\");\n-\n #undef  ASM_SPEC\n #define ASM_SPEC \"\"\n "}, {"sha": "25e974d3fbb9391faa45f3d034c80570808e8c52", "filename": "gcc/config/ia64/elf.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fia64%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fia64%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Felf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for embedded ia64-elf target.\n \n-Copyright (C) 2000, 2001, 2002, 2003, 2010 Free Software Foundation, Inc.\n+Copyright (C) 2000, 2001, 2002, 2003, 2010, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -23,11 +23,6 @@ a copy of the GCC Runtime Library Exception along with this program;\n see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n-/* This macro is a C statement to print on `stderr' a string describing the\n-   particular machine description choice.  */\n-\n-#define TARGET_VERSION fprintf (stderr, \" (IA-64) ELF\");\n-\n /* A C string constant that tells the GCC driver program options to pass to\n    the assembler.  It can also specify how to translate options you give to GNU\n    CC into options for GCC to pass to the assembler.  */"}, {"sha": "4aed910d9ebe60abc25a4f4c8b885d937aee7328", "filename": "gcc/config/ia64/freebsd.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fia64%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fia64%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ffreebsd.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Intel IA-64 running FreeBSD using the ELF format\n-   Copyright (C) 2001, 2004, 2007, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2004, 2007, 2010, 2011 Free Software Foundation, Inc.\n    Contributed by David E. O'Brien <obrien@FreeBSD.org> and BSDi.\n \n This file is part of GCC.\n@@ -47,9 +47,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef  WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (FreeBSD/IA-64 ELF)\");\n-\n #define TARGET_ELF\t\t1\n \n #define JMP_BUF_SIZE  76"}, {"sha": "edbf339fbf1983feff8df46705c3be3ae35ced3d", "filename": "gcc/config/ia64/hpux.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fia64%2Fhpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fia64%2Fhpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fhpux.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine GNU compiler.  IA-64 version.\n-   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2009, 2010\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2009, 2010,\n+   2011 Free Software Foundation, Inc.\n    Contributed by Steve Ellcey <sje@cup.hp.com> and\n                   Reva Cuthbertson <reva@cup.hp.com>\n \n@@ -20,11 +20,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-/* This macro is a C statement to print on `stderr' a string describing the\n-   particular machine description choice.  */\n-\n-#define TARGET_VERSION fprintf (stderr, \" (IA-64) HP-UX\");\n-\n /* Enable HPUX ABI quirks.  */\n #undef  TARGET_HPUX\n #define TARGET_HPUX 1"}, {"sha": "d88c820b702b61ea4ea19cf3972fcf42f06ecff0", "filename": "gcc/config/ia64/linux.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fia64%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fia64%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Flinux.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,7 +1,7 @@\n /* Definitions for ia64-linux target.\n \n Copyright (C) 2000, 2001, 2002, 2003, 2004, 2006,\n-2009, 2010 Free Software Foundation, Inc.\n+2009, 2010, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -24,11 +24,6 @@ a copy of the GCC Runtime Library Exception along with this program;\n see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n-/* This macro is a C statement to print on `stderr' a string describing the\n-   particular machine description choice.  */\n-\n-#define TARGET_VERSION fprintf (stderr, \" (IA-64) Linux\");\n-\n /* This is for -profile to use -lc_p instead of -lc.  */\n #undef CC1_SPEC\n #define CC1_SPEC \"%{profile:-p} %{G*}\""}, {"sha": "777fa34d9a9b12f637e8841467432a8c346787c9", "filename": "gcc/config/ia64/vms.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fia64%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fia64%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fvms.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine GNU compiler. IA64-VMS version.\n-   Copyright (C) 2003-2010 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2011 Free Software Foundation, Inc.\n    Contributed by Douglas B Rupp (rupp@gnat.com).\n \n This file is part of GCC.\n@@ -38,11 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef TARGET_ABI_OPEN_VMS\n #define TARGET_ABI_OPEN_VMS 1\n \n-#undef TARGET_NAME   \n-#define TARGET_NAME \"OpenVMS/IA64\"\n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (%s)\", TARGET_NAME);           \n-\n /* Need .debug_line info generated from gcc and gas.  */\n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_DWARF2_ASM | MASK_GNU_AS)"}, {"sha": "a69204e007bd147e0476b116fac622f63101a629", "filename": "gcc/config/iq2000/iq2000.h", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fiq2000%2Fiq2000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fiq2000%2Fiq2000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Fiq2000.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -57,21 +57,6 @@\n #ifndef IQ2000_ISA_DEFAULT\n #define IQ2000_ISA_DEFAULT 1\n #endif\n-\n-#define IQ2000_VERSION \"[1.0]\"\n-\n-#ifndef MACHINE_TYPE\n-#define MACHINE_TYPE \"IQ2000\"\n-#endif\n-\n-#ifndef TARGET_VERSION_INTERNAL\n-#define TARGET_VERSION_INTERNAL(STREAM)\t\t\t\t\t\\\n-  fprintf (STREAM, \" %s %s\", IQ2000_VERSION, MACHINE_TYPE)\n-#endif\n-\n-#ifndef TARGET_VERSION\n-#define TARGET_VERSION TARGET_VERSION_INTERNAL (stderr)\n-#endif\n \f\n /* Storage Layout.  */\n "}, {"sha": "3d8f77a5a77611c7f69f9570fffaa294ec931e4e", "filename": "gcc/config/lm32/lm32.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Flm32%2Flm32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Flm32%2Flm32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Flm32.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -23,11 +23,6 @@\n /* Run-time Target Specification */\n /*-------------------------------*/\n \n-/* Print subsidiary information on the compiler version in use.  */\n-#ifndef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (LatticeMico32)\")\n-#endif\n-\n /* Target CPU builtins.  */\n #define TARGET_CPU_CPP_BUILTINS()                       \\\n   do                                                    \\"}, {"sha": "bd4701d7ab12b6b9e250ff23ce3e8e332daa3491", "filename": "gcc/config/lm32/uclinux-elf.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Flm32%2Fuclinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Flm32%2Fuclinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Fuclinux-elf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -22,10 +22,6 @@\n /* elfos.h should have already been included.  Now just override\n    any conflicting definitions and add any extras.  */\n \n-/* Run-time Target Specification.  */\n-#undef  TARGET_VERSION\n-#define TARGET_VERSION  fputs (\" (LM32 GNU/Linux with ELF)\", stderr);\n-\n /* Do not assume anything about header files.  */\n #undef NO_IMPLICIT_EXTERN_C\n #define NO_IMPLICIT_EXTERN_C"}, {"sha": "7b5a5484582f7649a2ac300f295bd27158108c4a", "filename": "gcc/config/m32c/m32c.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fm32c%2Fm32c.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fm32c%2Fm32c.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -100,8 +100,6 @@ extern int ok_to_change_target_memregs;\n #define TARGET_A16\t(TARGET_R8C || TARGET_M16C)\n #define TARGET_A24\t(TARGET_M32CM || TARGET_M32C)\n \n-#define TARGET_VERSION fprintf (stderr, \" (m32c)\");\n-\n /* Defining data structures for per-function information */\n \n typedef struct GTY (()) machine_function"}, {"sha": "e561e540fb191991368ee903d3825e25d97f2496", "filename": "gcc/config/m32r/linux.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fm32r%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fm32r%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Flinux.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -18,15 +18,6 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n-#define LINUX_DEFAULT_ELF\n-\n-/* A lie, I guess, but the general idea behind linux/ELF is that we are\n-   supposed to be outputting something that will assemble under SVr4.\n-   This gets us pretty close.  */\n-\n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (M32R GNU/Linux with ELF)\");\n-\n #undef  SIZE_TYPE\n #define SIZE_TYPE \"unsigned int\"\n  "}, {"sha": "26d3ef978c4ca48abc389c6ebcb31311a5247662", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -26,7 +26,6 @@\n #undef PTRDIFF_TYPE\n #undef WCHAR_TYPE\n #undef WCHAR_TYPE_SIZE\n-#undef TARGET_VERSION\n #undef CPP_SPEC\n #undef ASM_SPEC\n #undef LINK_SPEC\n@@ -38,8 +37,6 @@\n \f\n \n /* M32R/X overrides.  */\n-/* Print subsidiary information on the compiler version in use.  */\n-#define TARGET_VERSION fprintf (stderr, \" (m32r/x/2)\");\n \n /* Additional flags for the preprocessor.  */\n #define CPP_CPU_SPEC \"%{m32rx:-D__M32RX__ -D__m32rx__ -U__M32R2__ -U__m32r2__} \\\n@@ -86,11 +83,6 @@\n #define SUBTARGET_REGISTER_NAMES , \"a1\"\n /* end M32R/X overrides.  */\n \n-/* Print subsidiary information on the compiler version in use.  */\n-#ifndef\tTARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (m32r)\")\n-#endif\n-\n /* Names to predefine in the preprocessor for this target machine.  */\n /* __M32R__ is defined by the existing compiler so we use that.  */\n #define TARGET_CPU_CPP_BUILTINS()\t\t\\"}, {"sha": "952bcceb642a8dd4177603cdd698f8a84c239086", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -19,9 +19,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (68k GNU/Linux with ELF)\");\n-\n /* Add %(asm_cpu_spec) to a generic definition of ASM_SPEC.  */\n #undef ASM_SPEC\n #define ASM_SPEC \"%(asm_cpu_spec) %(asm_pcrel_spec)\""}, {"sha": "019a9e3703c18780f790c530a7c11dcacba6e1cf", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GCC for Motorola 680x0/ColdFire.\n    Copyright (C) 1987, 1988, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -24,10 +24,8 @@ along with GCC; see the file COPYING3.  If not see\n    for both the MOTOROLA and MIT code paths.  We do rely on the host compiler\n    to optimize away all constant tests.  */\n #if MOTOROLA  /* Use the Motorola assembly syntax.  */\n-# define TARGET_VERSION fprintf (stderr, \" (68k, Motorola syntax)\")\n #else\n # define MOTOROLA 0  /* Use the MIT assembly syntax.  */\n-# define TARGET_VERSION fprintf (stderr, \" (68k, MIT syntax)\")\n #endif\n \n /* Handle --with-cpu default option from configure script.  */"}, {"sha": "acad40ff96e68cd9f5fd42f68ded0392179b6610", "filename": "gcc/config/m68k/netbsd-elf.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,7 +1,7 @@\n /* Definitions of target machine for GNU compiler,\n    for m68k (including m68010) NetBSD platforms using the\n    ELF object format.\n-   Copyright (C) 2002, 2003, 2004, 2006, 2007, 2009, 2010\n+   Copyright (C) 2002, 2003, 2004, 2006, 2007, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Wasabi Systems. Inc.\n \n@@ -52,14 +52,6 @@ along with GCC; see the file COPYING3.  If not see\n   { \"netbsd_entry_point\",   NETBSD_ENTRY_POINT },\n \n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION\t\t\t\\\n-  fprintf (stderr,\t\t\t\\\n-\t   TARGET_68010\t\t\t\\\n-\t   ? \" (NetBSD/68010 ELF)\"\t\\\n-\t   : \" (NetBSD/m68k ELF)\");\n-\n-\n /* Provide a CPP_SPEC appropriate for NetBSD m68k targets.  Currently we\n    deal with the GCC option '-posix', as well as an indication as to\n    whether or not use of the FPU is allowed.  */"}, {"sha": "547cd206d0678d909057e69fbcfcc85bd3fdc9c9", "filename": "gcc/config/m68k/uclinux.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fm68k%2Fuclinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fm68k%2Fuclinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fuclinux.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -2,7 +2,7 @@\n    using ELF objects with special linker post-processing to produce FLAT\n    executables.\n \n-   Copyright (C) 2003, 2007, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2007, 2010, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -20,9 +20,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (68k uClinux)\");\n-\n #undef STARTFILE_SPEC\n #define STARTFILE_SPEC \\\n \"%{mshared-library-id=0|!mshared-library-id=*: crt1.o%s ;: Scrt1.o%s} \\"}, {"sha": "4f971c244b4b935ded9b2b9a78ea0f2ebb2dcf91", "filename": "gcc/config/mcore/mcore-elf.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmcore%2Fmcore-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmcore%2Fmcore-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore-elf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of MCore target. \n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2004, 2007\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2004, 2007, 2011\n    Free Software Foundation, Inc.\n    Contributed by Cygnus Solutions.\n \n@@ -22,9 +22,6 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef __MCORE_ELF_H__\n #define __MCORE_ELF_H__\n \n-/* Run-time Target Specification.  */\n-#define TARGET_VERSION fputs (\" (Motorola MCORE/elf)\", stderr)\n-\n /* Use DWARF2 debugging info.  */\n #define DWARF2_DEBUGGING_INFO 1\n "}, {"sha": "d6d6c2f25d093a7b06cd6f6cdf83703c35a81468", "filename": "gcc/config/mep/mep.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmep%2Fmep.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmep%2Fmep.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Toshiba Media Processor\n-   Copyright (C) 2001, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n+   Copyright (C) 2001, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Red Hat, Inc.\n \n@@ -130,8 +130,6 @@ crtbegin.o%s\"\n \n #define TARGET_COPRO_MULT\t0\n \n-#define TARGET_VERSION fprintf (stderr, \" (Toshiba Media Processor (MeP))\");\n-\n /* The MeP config tool will replace this as appropriate.  */\n #define DEFAULT_ENDIAN_SPEC \"%{!meb: -mel}\"\n "}, {"sha": "18cd72d0ee562cb83850a9c5f87abf9c0ce7b6e0", "filename": "gcc/config/microblaze/microblaze.h", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -102,22 +102,6 @@ extern enum pipeline_type microblaze_pipe;\n   { \"target_asm_spec\", TARGET_ASM_SPEC },\t\t\t\t\\\n   SUBTARGET_EXTRA_SPECS\n \n-/* Print subsidiary information on the compiler version in use.  */\n-#define MICROBLAZE_VERSION MICROBLAZE_DEFAULT_CPU\n-\n-#ifndef MACHINE_TYPE\n-#define MACHINE_TYPE \"MicroBlaze/ELF\"\n-#endif\n-\n-#ifndef TARGET_VERSION_INTERNAL\n-#define TARGET_VERSION_INTERNAL(STREAM)\t\t\t\t\t\\\n-  fprintf (STREAM, \" %s %s\", MACHINE_TYPE, MICROBLAZE_VERSION)\n-#endif\n-\n-#ifndef TARGET_VERSION\n-#define TARGET_VERSION TARGET_VERSION_INTERNAL (stderr)\n-#endif\n-\n /* Local compiler-generated symbols must have a prefix that the assembler\n    understands.   */\n "}, {"sha": "8995ab99cf6042c57c56ce3823e116c9e8db5314", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -23,9 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef TARGET_IRIX6\n #define TARGET_IRIX6 1\n \n-#undef MACHINE_TYPE\n-#define MACHINE_TYPE \"SGI running IRIX 6.5\"\n-\n /* Default to -mabi=n32 and -mips3.  */\n #undef MULTILIB_DEFAULTS\n #define MULTILIB_DEFAULTS { \"mabi=n32\" }"}, {"sha": "43fbf92d59b3cf9a967692c1c8ed1d86efc4ed00", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -27,13 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef ASM_DECLARE_OBJECT_NAME\n #define ASM_DECLARE_OBJECT_NAME mips_declare_object_name\n \n-#undef TARGET_VERSION\n-#if TARGET_ENDIAN_DEFAULT == 0\n-#define TARGET_VERSION fprintf (stderr, \" (MIPSel GNU/Linux with ELF)\");\n-#else\n-#define TARGET_VERSION fprintf (stderr, \" (MIPS GNU/Linux with ELF)\");\n-#endif\n-\n /* If we don't set MASK_ABICALLS, we can't default to PIC.  */\n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT MASK_ABICALLS"}, {"sha": "4a9bd152fce3f95c8f36cbda0d2fc11fdc7b652c", "filename": "gcc/config/mips/netbsd.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fnetbsd.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -21,13 +21,6 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Define default target values.  */\n \n-#undef MACHINE_TYPE\n-#if TARGET_ENDIAN_DEFAULT != 0\n-#define MACHINE_TYPE \"NetBSD/mipseb ELF\"\n-#else\n-#define MACHINE_TYPE \"NetBSD/mipsel ELF\"\n-#endif\n-\n #define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n   do\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\\"}, {"sha": "f742f97a8f64a25eb311a3cfe5478d02a39a647e", "filename": "gcc/config/mips/vxworks.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmips%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmips%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fvxworks.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -17,9 +17,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (MIPS, VxWorks syntax)\");\n-\n #undef  ASM_SPEC\n #define ASM_SPEC \"\\\n %{!G:-G 0} %{G*} %(endian_spec) %{mips1} %{mips2} %{mips3} %{mips4} \\"}, {"sha": "f3ed940b8812db32f20bc1bbfe6c9dd43d2c3c09", "filename": "gcc/config/mmix/mmix.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmmix%2Fmmix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmmix%2Fmmix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for MMIX.\n-   Copyright (C) 2000, 2001, 2002, 2004, 2005, 2007, 2008, 2009, 2010\n+   Copyright (C) 2000, 2001, 2002, 2004, 2005, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Hans-Peter Nilsson (hp@bitrange.com)\n \n@@ -143,10 +143,6 @@ struct GTY(()) machine_function\n #define TARGET_DEFAULT \\\n  (MASK_BRANCH_PREDICT | MASK_BASE_ADDRESSES | MASK_USE_RETURN_INSN)\n \n-/* Unfortunately, this must not reference anything in \"mmix.c\".  */\n-#define TARGET_VERSION \\\n-  fprintf (stderr, \" (MMIX)\")\n-\n \n /* Node: Per-Function Data */\n #define INIT_EXPANDERS mmix_init_expanders ()"}, {"sha": "3a3593d52f07b1c38f6fe9519365824d0613e867", "filename": "gcc/config/mn10300/linux.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmn10300%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmn10300%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Flinux.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,7 @@\n /* Definitions of taret machine for GNU compiler.\n    Matsushita AM33/2.0\n-   Copyright 2001, 2002, 2005, 2006, 2007, 2010 Free Software Foundation, Inc.\n+   Copyright 2001, 2002, 2005, 2006, 2007, 2010, 2011\n+   Free Software Foundation, Inc.\n    Contributed by Alexandre Oliva <aoliva@redhat.com>\n \n    This file is part of GCC.\n@@ -44,9 +45,6 @@\n #undef  PROCESSOR_DEFAULT\n #define PROCESSOR_DEFAULT PROCESSOR_AM33_2\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (AM33/2.0 GNU/Linux)\");\n-\n #define DBX_REGISTER_NUMBER(REGNO) (REGNO)\n \n extern int mn10300_protect_label;"}, {"sha": "b6a54b53bd39091ea3752a26200731c720e7bbec", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -71,10 +71,6 @@ extern enum processor_type mn10300_tune_cpu;\n #define PROCESSOR_DEFAULT PROCESSOR_MN10300\n #endif\n \n-/* Print subsidiary information on the compiler version in use.  */\n-\n-#define TARGET_VERSION fprintf (stderr, \" (MN10300)\");\n-\n \f\n /* Target machine storage layout */\n "}, {"sha": "f3ad883fb5892a0916e19a7f7062e779634e9e7c", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -27,10 +27,6 @@ extern unsigned long total_code_bytes;\n \n #define pa_cpu_attr ((enum attr_cpu)pa_cpu)\n \n-/* Print subsidiary information on the compiler version in use.  */\n-\n-#define TARGET_VERSION fputs (\" (hppa)\", stderr);\n-\n #define TARGET_PA_10 (!TARGET_PA_11 && !TARGET_PA_20)\n \n /* Generate code for the HPPA 2.0 architecture in 64bit mode.  */"}, {"sha": "3f59fd2dd4e1b27613847bc6afcf222cfcd08b25", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for the pdp-11\n    Copyright (C) 1994, 1995, 1996, 1998, 1999, 2000, 2001, 2002, 2004, 2005,\n-   2006, 2007, 2008, 2010 Free Software Foundation, Inc.\n+   2006, 2007, 2008, 2010, 2011 Free Software Foundation, Inc.\n    Contributed by Michael K. Gschwind (mike@vlsivie.tuwien.ac.at).\n \n This file is part of GCC.\n@@ -36,9 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n     }\t\t\t\t\t\t\\\n   while (0)\n \n-/* Print subsidiary information on the compiler version in use.  */\n-#define TARGET_VERSION fprintf (stderr, \" (pdp11)\");\n-\n \n /* Generate DBX debugging information.  */\n "}, {"sha": "b65a206bb9026028645ff2245c1ecb7fc73314ac", "filename": "gcc/config/picochip/picochip.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fpicochip%2Fpicochip.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fpicochip%2Fpicochip.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2Fpicochip.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler for picoChip\n-   Copyright (C) 2001, 2008, 2009, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n \n    Contributed by Picochip Ltd. (http://www.picochip.com)\n    Maintained by Daniel Towner (daniel.towner@picochip.com) and\n@@ -83,8 +83,6 @@ extern enum picochip_dfa_type picochip_schedule_type;\n #define TARGET_HAS_MUL_UNIT (picochip_has_mul_unit)\n #define TARGET_HAS_MAC_UNIT (picochip_has_mac_unit)\n #define TARGET_HAS_MULTIPLY (picochip_has_mac_unit || picochip_has_mul_unit)\n-\n-#define TARGET_VERSION fprintf(stderr, \"(picoChip)\");\n \f\n /* Storage Layout */\n "}, {"sha": "13d317f508a9f377d5a00c618f5d4657ce607ee0", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,7 +1,7 @@\n /* Definitions of target machine for GNU compiler,\n    for IBM RS/6000 POWER running AIX.\n-   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2010\n-   Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2010,\n+   2011 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -245,9 +245,6 @@\n \n #define PROFILE_HOOK(LABEL)   output_profile_hook (LABEL)\n \n-/* Print subsidiary information on the compiler version in use.  */\n-#define TARGET_VERSION ;\n-\n /* No version of AIX fully supports AltiVec or 64-bit instructions in\n    32-bit mode.  */\n #define OS_MISSING_POWERPC64 1"}, {"sha": "b1fe2eb05b5285603ab7fe37f9191d5d398ada9c", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Target definitions for PowerPC running Darwin (Mac OS X).\n-   Copyright (C) 1997, 2000, 2001, 2003, 2004, 2005, 2006, 2007, 2008, 2010\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1997, 2000, 2001, 2003, 2004, 2005, 2006, 2007, 2008, 2010,\n+   2011 Free Software Foundation, Inc.\n    Contributed by Apple Computer Inc.\n \n    This file is part of GCC.\n@@ -22,9 +22,6 @@\n #undef DARWIN_PPC\n #define DARWIN_PPC 1\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (Darwin/PowerPC)\");\n-\n /* The \"Darwin ABI\" is mostly like AIX, but with some key differences.  */\n \n #define DEFAULT_ABI ABI_DARWIN"}, {"sha": "f97cc29a21750079aa4ea69645ccad5614af7616", "filename": "gcc/config/rs6000/darwin64.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Fdarwin64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Fdarwin64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin64.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for PowerPC running Darwin (Mac OS X).\n-   Copyright (C) 2006, 2007, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2007, 2010, 2011 Free Software Foundation, Inc.\n    Contributed by Apple Computer Inc.\n \n    This file is part of GCC.\n@@ -18,9 +18,6 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (Darwin/PowerPC64)\");\n-\n #undef  TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_POWERPC | MASK_POWERPC64 | MASK_64BIT \\\n \t\t\t| MASK_MULTIPLE\t| MASK_NEW_MNEMONICS | MASK_PPC_GFXOPT)"}, {"sha": "82dec71e958a12964398097914a97743a20926d5", "filename": "gcc/config/rs6000/eabi.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Feabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Feabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,7 @@\n /* Core target definitions for GNU compiler\n    for IBM RS/6000 PowerPC targeted to embedded ELF systems.\n-   Copyright (C) 1995, 1996, 2000, 2003, 2004, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 2000, 2003, 2004, 2007, 2011\n+   Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n    This file is part of GCC.\n@@ -27,9 +28,6 @@\n #define NAME__MAIN \"__eabi\"\n #define INVOKE__main\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (PowerPC Embedded)\");\n-\n #undef TARGET_OS_CPP_BUILTINS\n #define TARGET_OS_CPP_BUILTINS()          \\\n   do                                      \\"}, {"sha": "0883f23fa0016e9fc5af68507f7c3d217b229626", "filename": "gcc/config/rs6000/eabialtivec.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Feabialtivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Feabialtivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabialtivec.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Core target definitions for GNU compiler\n    for PowerPC targeted systems with AltiVec support.\n-   Copyright (C) 2001, 2003, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2003, 2007, 2011 Free Software Foundation, Inc.\n    Contributed by Aldy Hernandez (aldyh@redhat.com).\n \n    This file is part of GCC.\n@@ -23,8 +23,5 @@\n #undef  TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_EABI | MASK_ALTIVEC)\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (PowerPC Embedded with AltiVec)\");\n-\n #undef  SUBSUBTARGET_OVERRIDE_OPTIONS\n #define SUBSUBTARGET_OVERRIDE_OPTIONS\trs6000_altivec_abi = 1"}, {"sha": "352c247907c775dce5df78ba53de8b55c92ca1f7", "filename": "gcc/config/rs6000/eabisim.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Feabisim.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Feabisim.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabisim.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,7 @@\n /* Support for GCC on simulated PowerPC systems targeted to embedded ELF\n    systems.\n-   Copyright (C) 1995, 1996, 2000, 2003, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 2000, 2003, 2007, 2011\n+   Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n    This file is part of GCC.\n@@ -19,9 +20,6 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (PowerPC Simulated)\");\n-\n #undef  TARGET_OS_CPP_BUILTINS\n #define TARGET_OS_CPP_BUILTINS()           \\\n   do                                       \\"}, {"sha": "b195cb6a4a9c7787f1c5660de9a8ae466e89b0c9", "filename": "gcc/config/rs6000/eabispe.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Feabispe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Feabispe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabispe.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Core target definitions for GNU compiler\n    for PowerPC embedded targeted systems with SPE support.\n-   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2011\n    Free Software Foundation, Inc.\n    Contributed by Aldy Hernandez (aldyh@redhat.com).\n \n@@ -24,9 +24,6 @@\n #define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_EABI\t\\\n   | MASK_STRICT_ALIGN)\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (PowerPC Embedded SPE)\");\n-\n #undef  SUBSUBTARGET_OVERRIDE_OPTIONS\n #define SUBSUBTARGET_OVERRIDE_OPTIONS \\\n   if (rs6000_select[1].string == NULL) \\"}, {"sha": "22d7272eecd65e3460ac1a22fc4c201f47324122", "filename": "gcc/config/rs6000/freebsd.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ffreebsd.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -60,9 +60,6 @@\n #undef  WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (FreeBSD/PowerPC ELF)\");\n-\n /* Override rs6000.h definition.  */\n #undef  ASM_APP_ON\n #define ASM_APP_ON \"#APP\\n\""}, {"sha": "305b621e7e228a95add344f4d2272db237e82b8e", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -88,9 +88,6 @@\n #define USE_LD_AS_NEEDED 1\n #endif\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (PowerPC GNU/Linux)\");\n-\n /* Override rs6000.h definition.  */\n #undef  ASM_APP_ON\n #define ASM_APP_ON \"#APP\\n\""}, {"sha": "8d9c8fb7380e910ebbb06f0e9788b8feb3cb3ad5", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -406,9 +406,6 @@ extern int dot_symbols;\n       ? \"\\t.section\\t\\\".got2\\\",\\\"aw\\\"\"\t\t\t\\\n       : \"\\t.section\\t\\\".got1\\\",\\\"aw\\\"\"))\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (PowerPC64 GNU/Linux)\");\n-\n /* Must be at least as big as our pointer type.  */\n #undef\tSIZE_TYPE\n #define\tSIZE_TYPE (TARGET_64BIT ? \"long unsigned int\" : \"unsigned int\")"}, {"sha": "41155c33a78c2f0d9515b2cefa3e73bbb49fb1f3", "filename": "gcc/config/rs6000/linuxaltivec.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Flinuxaltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Flinuxaltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinuxaltivec.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for AltiVec enhanced PowerPC machines running GNU/Linux.\n-   Copyright (C) 2001, 2003, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2003, 2007, 2011 Free Software Foundation, Inc.\n    Contributed by Aldy Hernandez (aldyh@redhat.com).\n \n    This file is part of GCC.\n@@ -19,9 +19,6 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (PowerPC AltiVec GNU/Linux)\");\n-\n /* Override rs6000.h and sysv4.h definition.  */\n #undef\tTARGET_DEFAULT\n #define\tTARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_ALTIVEC)"}, {"sha": "3a8a9dc611498250649257da58106e0c2c57e644", "filename": "gcc/config/rs6000/linuxspe.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Flinuxspe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Flinuxspe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinuxspe.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for PowerPC e500 machines running GNU/Linux.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2011\n    Free Software Foundation, Inc.\n    Contributed by Aldy Hernandez (aldy@quesejoda.com).\n \n@@ -20,9 +20,6 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (PowerPC E500 GNU/Linux)\");\n-\n /* Override rs6000.h and sysv4.h definition.  */\n #undef\tTARGET_DEFAULT\n #define\tTARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS | MASK_STRICT_ALIGN)"}, {"sha": "952bfa7db4e002f8df58f8dd33ed2d7f41a44e78", "filename": "gcc/config/rs6000/lynx.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flynx.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Rs6000 running LynxOS.\n-   Copyright (C) 1995, 1996, 2000, 2002, 2003, 2004, 2005, 2007, 2010\n+   Copyright (C) 1995, 1996, 2000, 2002, 2003, 2004, 2005, 2007, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by David Henkel-Wallace, Cygnus Support (gumby@cygnus.com)\n    Rewritten by Adam Nemet, LynuxWorks Inc.\n@@ -20,11 +20,6 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n-/* Override the definition in sysv4.h.  */\n-\n-#undef TARGET_VERSION\n-#define TARGET_VERSION fputs (\" (PowerPC/LynxOS)\", stderr);\n-\n /* Undefine the definition to enable the LynxOS default from the\n    top-level lynx.h.  */\n "}, {"sha": "d2be7a2dc527df646bd6dd3c953990d934cae260", "filename": "gcc/config/rs6000/netbsd.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fnetbsd.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for PowerPC NetBSD systems.\n-   Copyright 2002, 2003, 2007, 2008, 2010 Free Software Foundation, Inc.\n+   Copyright 2002, 2003, 2007, 2008, 2010, 2011 Free Software Foundation, Inc.\n    Contributed by Wasabi Systems, Inc.\n \n    This file is part of GCC.\n@@ -87,7 +87,4 @@\n   { \"netbsd_endfile_spec\",\tNETBSD_ENDFILE_SPEC },\n \n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (NetBSD/powerpc ELF)\");\n-\n #define DBX_REGISTER_NUMBER(REGNO) rs6000_dbx_register_number (REGNO)"}, {"sha": "7d374c3395af027287a8f27645ac03623d6e6dcb", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -513,10 +513,6 @@ extern int fixuplabelno;\n #define\tDBX_FUNCTION_FIRST\n \n /* This is the end of what might become sysv4dbx.h.  */\n-\n-#ifndef\tTARGET_VERSION\n-#define\tTARGET_VERSION fprintf (stderr, \" (PowerPC System V.4)\");\n-#endif\n \f\n #define TARGET_OS_SYSV_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\"}, {"sha": "de14bbfbb0c5ec92f5eb589f9e31c361c1afcb00", "filename": "gcc/config/rs6000/vxworks.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxworks.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -24,9 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n    it anyway.  However, if you change that file, consider making\n    analogous changes here too.  */\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (PowerPC VxWorks)\");\n-\n /* CPP predefined macros.  */\n \n #undef TARGET_OS_CPP_BUILTINS"}, {"sha": "dd95bb1e4a02722f4184c6425eae46aec2d7656f", "filename": "gcc/config/rs6000/vxworksae.h", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace31bca4a35b5da87957a80aecfffada0094818/gcc%2Fconfig%2Frs6000%2Fvxworksae.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace31bca4a35b5da87957a80aecfffada0094818/gcc%2Fconfig%2Frs6000%2Fvxworksae.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxworksae.h?ref=ace31bca4a35b5da87957a80aecfffada0094818", "patch": "@@ -1,23 +0,0 @@\n-/* PowerPC VxWorks AE target definitions for GNU compiler.\n-   Copyright (C) 2005, 2007 Free Software Foundation, Inc.\n-   Contributed by CodeSourcery, LLC.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (PowerPC VxWorks AE)\");\n-"}, {"sha": "ab5e5363c7532bbb3396be63487299a46b3ee68b", "filename": "gcc/config/s390/linux.h", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fs390%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fs390%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Flinux.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Linux for S/390.\n-   Copyright (C) 1999, 2000, 2001, 2002, 2004, 2005, 2006, 2007, 2010\n+   Copyright (C) 1999, 2000, 2001, 2002, 2004, 2005, 2006, 2007, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Hartmut Penner (hpenner@de.ibm.com) and\n                   Ulrich Weigand (uweigand@de.ibm.com).\n@@ -23,17 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef _LINUX_H\n #define _LINUX_H\n \n-/* Target specific version string.  */\n-\n-#ifdef DEFAULT_TARGET_64BIT\n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (Linux for zSeries)\");\n-#else\n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (Linux for S/390)\");\n-#endif\n-\n-\n /* Target specific type definitions.  */\n \n /* ??? Do we really want long as size_t on 31-bit?  */"}, {"sha": "950bf3c255beaed7097b828a94dd1a3104870e9b", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -129,13 +129,6 @@ enum processor_flags\n   \"%{!march=*:%{mesa:-march=g5}%{mzarch:-march=z900}}\"\n #endif\n \n-/* Target version string.  Overridden by the OS header.  */\n-#ifdef DEFAULT_TARGET_64BIT\n-#define TARGET_VERSION fprintf (stderr, \" (zSeries)\");\n-#else\n-#define TARGET_VERSION fprintf (stderr, \" (S/390)\");\n-#endif\n-\n /* Constants needed to control the TEST DATA CLASS (TDC) instruction.  */\n #define S390_TDC_POSITIVE_ZERO                     (1 << 11)\n #define S390_TDC_NEGATIVE_ZERO                     (1 << 10)"}, {"sha": "c5e86e4a17a8a43ba6c6bfee905783804ecd5f63", "filename": "gcc/config/s390/tpf.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fs390%2Ftpf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fs390%2Ftpf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Ftpf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for target OS TPF for GNU compiler, for IBM S/390 hardware\n    Copyright (C) 2003, 2004, 2005, 2007, 2009,\n-   2010 Free Software Foundation, Inc.\n+   2010, 2011 Free Software Foundation, Inc.\n    Contributed by P.J. Darcy (darcypj@us.ibm.com),\n                   Hartmut Penner (hpenner@de.ibm.com), and\n                   Ulrich Weigand (uweigand@de.ibm.com).\n@@ -44,10 +44,6 @@ along with GCC; see the file COPYING3.  If not see\n #define WCHAR_TYPE_SIZE 32\n \n \n-/* Basic record keeping for the TPF OS name.  */\n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (TPF: zSeries)\");\n-\n /* TPF OS specific stack-pointer offset.  */\n #undef STACK_POINTER_OFFSET\n #define STACK_POINTER_OFFSET \t\t448"}, {"sha": "736e770673e9935e79129dd0fd1313de83dc0a55", "filename": "gcc/config/score/score.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fscore%2Fscore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fscore%2Fscore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,6 @@\n /* score.h for Sunplus S+CORE processor\n-   Copyright (C) 2005, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2008, 2009, 2010, 2011\n+   Free Software Foundation, Inc.\n    Contributed by Sunnorth.\n \n    This file is part of GCC.\n@@ -65,9 +66,6 @@\n \n #define SCORE_GCC_VERSION      \"1.6\"\n \n-#define TARGET_VERSION \\\n-      fprintf (stderr, \"Sunplus S+core rev=%s\", SCORE_GCC_VERSION);\n-\n /* Target machine storage layout.  */\n #define BITS_BIG_ENDIAN        0\n #define BYTES_BIG_ENDIAN       (TARGET_LITTLE_ENDIAN == 0)"}, {"sha": "adadc0c8687ce9a4fb94e697c88c030e8041de11", "filename": "gcc/config/sh/linux.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsh%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsh%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flinux.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for SH running Linux-based GNU systems using ELF\n-   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2010\n+   Copyright (C) 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Kazumoto Kojima <kkojima@rr.iij4u.or.jp>\n \n@@ -20,8 +20,6 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n /* Run-time Target Specification.  */\n-#undef TARGET_VERSION\n-#define TARGET_VERSION  fputs (\" (SH GNU/Linux with ELF)\", stderr);\n \n /* Enable DWARF 2 exceptions.  */\n #undef DWARF2_UNWIND_INFO"}, {"sha": "f5a820b136347a3683e9aff71969324a78246e1a", "filename": "gcc/config/sh/netbsd-elf.h", "status": "modified", "additions": 2, "deletions": 21, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsh%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsh%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fnetbsd-elf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,6 @@\n /* Definitions for SH running NetBSD using ELF\n-   Copyright (C) 2002, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2005, 2007, 2011\n+   Free Software Foundation, Inc.\n    Contributed by Wasabi Systems, Inc.\n \n This file is part of GCC.\n@@ -19,26 +20,6 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n /* Run-time Target Specification.  */\n-#if TARGET_ENDIAN_DEFAULT == MASK_LITTLE_ENDIAN\n-#define TARGET_VERSION_ENDIAN \"le\"\n-#else\n-#define TARGET_VERSION_ENDIAN \"\"\n-#endif\n-\n-#if TARGET_CPU_DEFAULT & MASK_SH5\n-#if TARGET_CPU_DEFAULT & MASK_SH_E\n-#define TARGET_VERSION_CPU \"sh5\"\n-#else\n-#define TARGET_VERSION_CPU \"sh64\"\n-#endif /* MASK_SH_E */\n-#else\n-#define TARGET_VERSION_CPU \"sh\"\n-#endif /* MASK_SH5 */\n-\n-#undef TARGET_VERSION\n-#define TARGET_VERSION\tfprintf (stderr, \" (NetBSD/%s%s ELF)\",\t\t\\\n-                                 TARGET_VERSION_CPU, TARGET_VERSION_ENDIAN)\n-\n \n /* Extra specs needed for NetBSD SuperH ELF targets.  */\n "}, {"sha": "9df2ea4425dd52fe58cea2092062d634b118ba78", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler for Renesas / SuperH SH.\n    Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-   2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Steve Chamberlain (sac@cygnus.com).\n    Improved by Jim Wilson (wilson@cygnus.com).\n@@ -26,9 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"config/vxworks-dummy.h\"\n \n-#define TARGET_VERSION \\\n-  fputs (\" (Hitachi SH)\", stderr);\n-\n /* Unfortunately, insn-attrtab.c doesn't include insn-codes.h.  We can't\n    include it here, because bconfig.h is also included by gencodes.c .  */\n /* ??? No longer true.  */"}, {"sha": "9701055655624828c57fd2a893916eff9c36a055", "filename": "gcc/config/sh/sh64.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsh%2Fsh64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsh%2Fsh64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh64.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,6 @@\n /* Definitions of target machine for GNU compiler for SuperH SH 5.\n-   Copyright 2000, 2001, 2002, 2003, 2004, 2007 Free Software Foundation, Inc.\n+   Copyright 2000, 2001, 2002, 2003, 2004, 2007, 2011\n+   Free Software Foundation, Inc.\n    Contributed by Alexandre Oliva <aoliva@redhat.com>\n \n This file is part of GCC.\n@@ -18,9 +19,5 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION \\\n-  fputs (\" (SuperH SH)\", stderr);\n-\n #undef SH_ELF_WCHAR_TYPE\n #define SH_ELF_WCHAR_TYPE \"int\""}, {"sha": "9d59eddfb6b1a24d769447af80f15fc57e84b224", "filename": "gcc/config/sh/superh.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsh%2Fsuperh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsh%2Fsuperh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsuperh.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for gcc for Super-H using sh-superh-elf.\n-   Copyright (C) 2001, 2006, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2006, 2007, 2011 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -35,9 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #endif\n \n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (SuperH SH special %s)\", __DATE__);\n-\n /* Override the linker spec strings to use the new emulation\n    The specstrings are concatenated as follows\n    LINK_EMUL_PREFIX.(''|'32'|'64'|LINK_DEFAULT_CPU_EMUL).SUBTARGET_LINK_EMUL_SUFFIX"}, {"sha": "d536d74de0f72a6e39da0aee55a96f0f55086438", "filename": "gcc/config/sh/vxworks.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsh%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsh%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fvxworks.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GCC,\n    for SuperH with targeting the VXWorks run time environment. \n-   Copyright (C) 2003, 2004, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2007, 2011 Free Software Foundation, Inc.\n    Contributed by CodeSourcery, LLC.\n    \n This file is part of GCC.\n@@ -59,9 +59,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef ENDFILE_SPEC\n #define ENDFILE_SPEC VXWORKS_ENDFILE_SPEC\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION\tfputs (\" (SH/VxWorks)\", stderr);\n-\n /* There is no default multilib.  */\n #undef MULTILIB_DEFAULTS\n "}, {"sha": "b88b4e9f6733200528a8cd3f1b3ca5194183afc6", "filename": "gcc/config/sparc/freebsd.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ffreebsd.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -82,9 +82,6 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Definitions for 64-bit SPARC running systems with ELF. */\n \n-#undef  TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (FreeBSD/sparc64 ELF)\");\n-\n #define TARGET_ELF\t\t1\n \n /* XXX */"}, {"sha": "e2dc8c53645a9a7aa553c2a66eb51eccc190ad6d", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -44,9 +44,6 @@ along with GCC; see the file COPYING3.  If not see\n #define\tCC1_SPEC \"%{profile:-p} \\\n \"\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (sparc GNU/Linux with ELF)\");\n-\n #undef SIZE_TYPE\n #define SIZE_TYPE \"unsigned int\"\n  "}, {"sha": "31ad3ecfa6c0bbb0ff81687ebf53455ce5ab9695", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -61,9 +61,6 @@ along with GCC; see the file COPYING3.  If not see\n   \"%{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s\\\n    %{ffast-math|funsafe-math-optimizations:crtfastmath.o%s}\"\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (sparc64 GNU/Linux with ELF)\");\n-\n /* The default code model.  */\n #undef SPARC_DEFAULT_CMODEL\n #define SPARC_DEFAULT_CMODEL CM_MEDLOW"}, {"sha": "ab161a4f8ed9ceaea4aee9d8b36ad858751cd688", "filename": "gcc/config/sparc/netbsd-elf.h", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -77,9 +77,6 @@ along with GCC; see the file COPYING3.  If not see\n /* Attempt to enable execute permissions on the stack.  */\n #define ENABLE_EXECUTE_STACK NETBSD_ENABLE_EXECUTE_STACK\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (%s)\", TARGET_NAME);\n-\n /* Below here exists the merged NetBSD/sparc & NetBSD/sparc64 compiler\n    description, allowing one to build 32-bit or 64-bit applications\n    on either.  We define the sparc & sparc64 versions of things,\n@@ -91,10 +88,6 @@ along with GCC; see the file COPYING3.  If not see\n    definitions, even for the SPARC_BI_ARCH compiler, because NetBSD does\n    not have a default place to find these libraries..  */\n \n-/* Name the port(s).  */\n-#define TARGET_NAME64     \"NetBSD/sparc64 ELF\"\n-#define TARGET_NAME32     \"NetBSD/sparc ELF\"\n-\n /* TARGET_CPU_DEFAULT is set in Makefile.in.  We test for 64-bit default\n    platform here.  */\n \n@@ -197,10 +190,6 @@ along with GCC; see the file COPYING3.  If not see\n #define MULTILIB_DEFAULTS { \"m64\" }\n #endif\n \n-/* Name the port.  */\n-#undef TARGET_NAME\n-#define TARGET_NAME     (DEFAULT_ARCH32_P ? TARGET_NAME32 : TARGET_NAME64)\n-\n #else\t/* SPARC_BI_ARCH */\n \n #if TARGET_CPU_DEFAULT == TARGET_CPU_v9 \\\n@@ -215,9 +204,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef  CC1_SPEC\n #define CC1_SPEC CC1_SPEC64\n \n-#undef TARGET_NAME\n-#define TARGET_NAME     TARGET_NAME64\n-\n #else\t/* TARGET_CPU_DEFAULT == TARGET_CPU_v9 \\\n \t|| TARGET_CPU_DEFAULT == TARGET_CPU_ultrasparc */\n \n@@ -233,9 +219,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef  CC1_SPEC\n #define CC1_SPEC CC1_SPEC32\n \n-#undef TARGET_NAME\n-#define TARGET_NAME     TARGET_NAME32\n-\n #endif\t/* TARGET_CPU_DEFAULT == TARGET_CPU_v9 \\\n \t|| TARGET_CPU_DEFAULT == TARGET_CPU_ultrasparc */\n "}, {"sha": "da479db144a8d4fa74a2a292df1e8fe543a1daba", "filename": "gcc/config/sparc/openbsd64.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Fopenbsd64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Fopenbsd64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fopenbsd64.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Configuration file for sparc64 OpenBSD target.\n-   Copyright (C) 1999, 2005, 2007, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2005, 2007, 2010, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -17,9 +17,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (sparc64 OpenBSD ELF)\")\n-\n /* XXX - do we really want HARD_QUAD? */\n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT \\"}, {"sha": "d39ca3eeb37f309a1a82c7cf39f31aa503b13e82", "filename": "gcc/config/sparc/sp-elf.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Fsp-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Fsp-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsp-elf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -18,9 +18,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (sparc-elf)\")\n-\n /* Don't assume anything about the header files.  */\n #define NO_IMPLICIT_EXTERN_C\n "}, {"sha": "25a02402b07dd0699e490267268327b962170af0", "filename": "gcc/config/sparc/sp64-elf.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -20,9 +20,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (sparc64-elf)\")\n-\n /* A 64 bit v9 compiler in a Medium/Anywhere code model environment.  */\n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT \\"}, {"sha": "958497430ce4d0529de0b5d4f430ab3524004d00", "filename": "gcc/config/sparc/sysv4.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -20,10 +20,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-#ifndef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (sparc ELF)\"); \n-#endif\n-\n #undef SIZE_TYPE\n #define SIZE_TYPE (TARGET_ARCH64 ? \"long unsigned int\" : \"unsigned int\")\n "}, {"sha": "3ce7c572076ac9f5202216ba3f2a37a0f7743972", "filename": "gcc/config/sparc/vxworks.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fsparc%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fvxworks.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -45,9 +45,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef ENDFILE_SPEC\n #define ENDFILE_SPEC VXWORKS_ENDFILE_SPEC\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fputs (\" (SPARC/VxWorks)\", stderr);\n-\n #undef FUNCTION_PROFILER\n #define FUNCTION_PROFILER VXWORKS_FUNCTION_PROFILER\n "}, {"sha": "f0f00a998d6070ca118b941f898a3fd79cfe97fa", "filename": "gcc/config/spu/spu.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fspu%2Fspu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fspu%2Fspu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+/* Copyright (C) 2006, 2007, 2008, 2009, 2010, 2011\n+   Free Software Foundation, Inc.\n \n    This file is free software; you can redistribute it and/or modify it under\n    the terms of the GNU General Public License as published by the Free\n@@ -18,8 +19,6 @@\n /* Run-time Target */\n #define TARGET_CPU_CPP_BUILTINS()\tspu_cpu_cpp_builtins(pfile)\n \n-#define TARGET_VERSION fprintf (stderr, \" (spu %s)\", __DATE__);\n-\n #define C_COMMON_OVERRIDE_OPTIONS spu_c_common_override_options()\n \n #define INIT_EXPANDERS spu_init_expanders()"}, {"sha": "3853c3f3ec637a2c00632d3b5cd04b0b6949ae0a", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -55,8 +55,6 @@\n       builtin_assert (\"cpu=xstormy16\");\t\t\\\n     }\t\t\t\t\t\t\\\n   while (0)\n-\n-#define TARGET_VERSION fprintf (stderr, \" (xstormy16 cpu core)\");\n \f\n /* Storage Layout.  */\n "}, {"sha": "1e45686e54fdca936ca00ea20b100014541357ab", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -47,7 +47,6 @@ extern GTY(()) rtx v850_compare_op1;\n #define MASK_DEFAULT            MASK_V850\n #define SUBTARGET_ASM_SPEC \t\"%{!mv*:-mv850}\"\n #define SUBTARGET_CPP_SPEC \t\"%{!mv*:-D__v850__}\"\n-#define TARGET_VERSION \t\tfprintf (stderr, \" (NEC V850)\");\n \n /* Choose which processor will be the default.\n    We must pass a -mv850xx option to the assembler if no explicit -mv* option\n@@ -59,8 +58,6 @@ extern GTY(()) rtx v850_compare_op1;\n #define SUBTARGET_ASM_SPEC \t\"%{!mv*:-mv850e}\"\n #undef  SUBTARGET_CPP_SPEC\n #define SUBTARGET_CPP_SPEC \t\"%{!mv*:-D__v850e__}\"\n-#undef  TARGET_VERSION\n-#define TARGET_VERSION \t\tfprintf (stderr, \" (NEC V850E)\");\n #endif\n \n #if TARGET_CPU_DEFAULT == TARGET_CPU_v850e1\n@@ -70,8 +67,6 @@ extern GTY(()) rtx v850_compare_op1;\n #define SUBTARGET_ASM_SPEC\t\"%{!mv*:-mv850e1}\"\n #undef  SUBTARGET_CPP_SPEC\n #define SUBTARGET_CPP_SPEC\t\"%{!mv*:-D__v850e1__} %{mv850e1:-D__v850e1__}\"\n-#undef  TARGET_VERSION\n-#define TARGET_VERSION\t\tfprintf (stderr, \" (NEC V850E1)\");\n #endif\n \n #if TARGET_CPU_DEFAULT == TARGET_CPU_v850e2\n@@ -81,8 +76,6 @@ extern GTY(()) rtx v850_compare_op1;\n #define SUBTARGET_ASM_SPEC \t\"%{!mv*:-mv850e2}\"\n #undef  SUBTARGET_CPP_SPEC\n #define SUBTARGET_CPP_SPEC \t\"%{!mv*:-D__v850e2__} %{mv850e2:-D__v850e2__}\"\n-#undef  TARGET_VERSION\n-#define TARGET_VERSION \t\tfprintf (stderr, \" (NEC V850E2)\");\n #endif\n \n #if TARGET_CPU_DEFAULT == TARGET_CPU_v850e2v3\n@@ -92,8 +85,6 @@ extern GTY(()) rtx v850_compare_op1;\n #define SUBTARGET_ASM_SPEC\t\"%{!mv*:-mv850e2v3}\"\n #undef  SUBTARGET_CPP_SPEC\n #define SUBTARGET_CPP_SPEC\t\"%{!mv*:-D__v850e2v3__} %{mv850e2v3:-D__v850e2v3__}\"\n-#undef  TARGET_VERSION\n-#define TARGET_VERSION\t\tfprintf (stderr, \" (NEC V850E2V3)\");\n #endif\n \n #define TARGET_V850E2_ALL      (TARGET_V850E2 || TARGET_V850E2V3) "}, {"sha": "2f09848970953b7e90242e3a16c44e6d947c0a80", "filename": "gcc/config/vax/linux.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fvax%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fvax%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Flinux.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for VAX running Linux-based GNU systems with ELF format.\n-   Copyright (C) 2007, 2009, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2007, 2009, 2010, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -18,9 +18,6 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (VAX GNU/Linux with ELF)\");\n-\n #define TARGET_OS_CPP_BUILTINS() LINUX_TARGET_OS_CPP_BUILTINS()\n \n /* We use GAS, G-float double and want new DI patterns.  */"}, {"sha": "77530aa97eb1a28a3321e1b6466855153e1c1447", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.  VAX version.\n    Copyright (C) 1987, 1988, 1991, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -51,13 +51,6 @@ along with GCC; see the file COPYING3.  If not see\n   %{pg:%eprofiling not supported with -mg\\n}}\\\n  %{!mg:%{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p}}\"\n \n-/* Print subsidiary information on the compiler version in use.  */\n-\n-#ifndef TARGET_NAME\t/* A more specific value might be supplied via -D.  */\n-#define TARGET_NAME \"vax\"\n-#endif\n-#define TARGET_VERSION fprintf (stderr, \" (%s)\", TARGET_NAME)\n-\n /* Run-time compilation parameters selecting different hardware subsets.  */\n \n /* Nonzero if ELF.  Redefined by vax/elf.h.  */"}, {"sha": "66dd9244b59bbc1c00423d1fd8e669ea97752fb1", "filename": "gcc/config/xtensa/elf.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fxtensa%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fxtensa%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Felf.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,6 +1,7 @@\n /* Xtensa/Elf configuration.\n    Derived from the configuration for GCC for Intel i386 running Linux.\n-   Copyright (C) 2001, 2003, 2006, 2007, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2003, 2006, 2007, 2010, 2011\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -29,9 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef ASM_APP_OFF\n #define ASM_APP_OFF \"#NO_APP\\n\"\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fputs (\" (Xtensa/ELF)\", stderr);\n-\n #undef SIZE_TYPE\n #define SIZE_TYPE \"unsigned int\"\n "}, {"sha": "601b0a85fe42837f8955fa90991775c7b5ce113f", "filename": "gcc/config/xtensa/linux.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fxtensa%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fconfig%2Fxtensa%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Flinux.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -24,9 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef SUBTARGET_CPP_SPEC\n #define SUBTARGET_CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fputs (\" (Xtensa GNU/Linux with ELF)\", stderr);\n-\n #undef SIZE_TYPE\n #define SIZE_TYPE \"unsigned int\"\n "}, {"sha": "e036a751e77849c7ef58e323c607efbbadfc775e", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -704,22 +704,6 @@ If a target implements string objects then this hook should return @code{true} i\n If a target implements string objects then this hook should should  provide a facility to check the function arguments in @var{args_list}  against the format specifiers in @var{format_arg} where the type of  @var{format_arg} is one recognized as a valid string reference type.\n @end deftypefn\n \n-@defmac TARGET_VERSION\n-This macro is a C statement to print on @code{stderr} a string\n-describing the particular machine description choice.  Every machine\n-description should define @code{TARGET_VERSION}.  For example:\n-\n-@smallexample\n-#ifdef MOTOROLA\n-#define TARGET_VERSION \\\n-  fprintf (stderr, \" (68k, Motorola syntax)\");\n-#else\n-#define TARGET_VERSION \\\n-  fprintf (stderr, \" (68k, MIT syntax)\");\n-#endif\n-@end smallexample\n-@end defmac\n-\n @deftypefn {Target Hook} void TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE (void)\n This target function is similar to the hook @code{TARGET_OPTION_OVERRIDE}\n but is called when the optimize level is changed via an attribute or"}, {"sha": "867006ff90349e54effac362c973f43284b41155", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -698,22 +698,6 @@ should use @code{TARGET_HANDLE_C_OPTION} instead.\n \n @hook TARGET_CHECK_STRING_OBJECT_FORMAT_ARG\n \n-@defmac TARGET_VERSION\n-This macro is a C statement to print on @code{stderr} a string\n-describing the particular machine description choice.  Every machine\n-description should define @code{TARGET_VERSION}.  For example:\n-\n-@smallexample\n-#ifdef MOTOROLA\n-#define TARGET_VERSION \\\n-  fprintf (stderr, \" (68k, Motorola syntax)\");\n-#else\n-#define TARGET_VERSION \\\n-  fprintf (stderr, \" (68k, MIT syntax)\");\n-#endif\n-@end smallexample\n-@end defmac\n-\n @hook TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE\n This target function is similar to the hook @code{TARGET_OPTION_OVERRIDE}\n but is called when the optimize level is changed via an attribute or"}, {"sha": "906e94a6545c72cdb4a94e77bce745a381ef2261", "filename": "gcc/mips-tdump.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fmips-tdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fmips-tdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tdump.c?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1425,13 +1425,7 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n     errors++;\n \n   if (verbose || errors)\n-    {\n-      fprintf (stderr, \"mips-tdump (GCC) %s\", version_string);\n-#ifdef TARGET_VERSION\n-      TARGET_VERSION;\n-#endif\n-      fputc ('\\n', stderr);\n-    }\n+    fprintf (stderr, \"mips-tdump (GCC) %s\\n\", version_string);\n \n   if (errors)\n     {"}, {"sha": "ede35689e3fa4dbfbed817f31d8b754d65054eb6", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -4810,13 +4810,7 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n     had_errors++;\n \n   if (verbose || had_errors)\n-    {\n-      fprintf (stderr, _(\"mips-tfile (GCC) %s\"), version_string);\n-#ifdef TARGET_VERSION\n-      TARGET_VERSION;\n-#endif\n-      fputc ('\\n', stderr);\n-    }\n+    fprintf (stderr, _(\"mips-tfile (GCC) %s\\n\"), version_string);\n \n   if (object_name == (char *) 0 || had_errors)\n     {"}, {"sha": "ba07cd81b162a07b4a793f298186ab13de3a1fa1", "filename": "gcc/system.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1eb91413b50038212d148bf651c40e4d0e32f9/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=eb1eb91413b50038212d148bf651c40e4d0e32f9", "patch": "@@ -1,7 +1,7 @@\n /* Get common system includes and various definitions and declarations based\n    on autoconf macros.\n    Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008,\n-   2009, 2010\n+   2009, 2010, 2011\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -829,7 +829,8 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tHANDLE_SYSV_PRAGMA HANDLE_PRAGMA_WEAK CONDITIONAL_REGISTER_USAGE   \\\n \tFUNCTION_ARG_BOUNDARY MUST_USE_SJLJ_EXCEPTIONS US_SOFTWARE_GOFAST  \\\n \tUSING_SVR4_H SVR4_ASM_SPEC FUNCTION_ARG FUNCTION_ARG_ADVANCE\t   \\\n-\tFUNCTION_INCOMING_ARG IRA_COVER_CLASSES\n+\tFUNCTION_INCOMING_ARG IRA_COVER_CLASSES TARGET_VERSION\t\t   \\\n+\tMACHINE_TYPE\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}