{"sha": "12929514e78008b033dfbd9d30f852db506dc27e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI5Mjk1MTRlNzgwMDhiMDMzZGZiZDlkMzBmODUyZGI1MDZkYzI3ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-10-24T20:50:20Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-10-24T20:50:20Z"}, "message": "reg-stack.c (convert_regs_1): Return boolean value, true if the CFG has been modified.\n\n\t* reg-stack.c (convert_regs_1): Return boolean value, true if the CFG\n\thas been modified.\n\t(convert_regs_2): Likewise.  Adjust calls to convert_regs_1.\n\t(convert_regs): Adjust calls to convert_regs_2.  Clean up the CFG if\n\tit has been modified.\n\nFrom-SVN: r165905", "tree": {"sha": "69da52a0d2f2c33bd7511e1cb232e7c8cee99664", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69da52a0d2f2c33bd7511e1cb232e7c8cee99664"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12929514e78008b033dfbd9d30f852db506dc27e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12929514e78008b033dfbd9d30f852db506dc27e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12929514e78008b033dfbd9d30f852db506dc27e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12929514e78008b033dfbd9d30f852db506dc27e/comments", "author": null, "committer": null, "parents": [{"sha": "0e7e15278e1a0e0c60a9b7a64a7159b479061371", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e7e15278e1a0e0c60a9b7a64a7159b479061371", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e7e15278e1a0e0c60a9b7a64a7159b479061371"}], "stats": {"total": 102, "additions": 94, "deletions": 8}, "files": [{"sha": "c48d9d7b22dea1204174df107c3ede232c34bbf5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12929514e78008b033dfbd9d30f852db506dc27e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12929514e78008b033dfbd9d30f852db506dc27e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12929514e78008b033dfbd9d30f852db506dc27e", "patch": "@@ -1,3 +1,11 @@\n+2010-10-24  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* reg-stack.c (convert_regs_1): Return boolean value, true if the CFG\n+\thas been modified.\n+\t(convert_regs_2): Likewise.  Adjust calls to convert_regs_1.\n+\t(convert_regs): Adjust calls to convert_regs_2.  Clean up the CFG if\n+\tit has been modified.\n+\n 2010-10-24  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/sparc/sparc.c (sparc_type_code) <NULLPTR_TYPE>: New case."}, {"sha": "98c5fcee77ef36c1d42b351eb76f3ebebdbf6572", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12929514e78008b033dfbd9d30f852db506dc27e/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12929514e78008b033dfbd9d30f852db506dc27e/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=12929514e78008b033dfbd9d30f852db506dc27e", "patch": "@@ -2876,16 +2876,18 @@ better_edge (edge e1, edge e2)\n   return (e1->src->index < e2->src->index) ? e1 : e2;\n }\n \n-/* Convert stack register references in one block.  */\n+/* Convert stack register references in one block.  Return true if the CFG\n+   has been modified in the process.  */\n \n-static void\n+static bool\n convert_regs_1 (basic_block block)\n {\n   struct stack_def regstack;\n   block_info bi = BLOCK_INFO (block);\n   int reg;\n   rtx insn, next;\n   bool control_flow_insn_deleted = false;\n+  bool cfg_altered = false;\n   int debug_insns_with_starting_stack = 0;\n \n   any_malformed_asm = false;\n@@ -3041,7 +3043,7 @@ convert_regs_1 (basic_block block)\n      place, still, but we don't have enough information at that time.  */\n \n   if (control_flow_insn_deleted)\n-    purge_dead_edges (block);\n+    cfg_altered |= purge_dead_edges (block);\n \n   /* Something failed if the stack lives don't match.  If we had malformed\n      asms, we zapped the instruction itself, but that didn't produce the\n@@ -3051,14 +3053,18 @@ convert_regs_1 (basic_block block)\n \t      || any_malformed_asm);\n   bi->stack_out = regstack;\n   bi->done = true;\n+\n+  return cfg_altered;\n }\n \n-/* Convert registers in all blocks reachable from BLOCK.  */\n+/* Convert registers in all blocks reachable from BLOCK.  Return true if the\n+   CFG has been modified in the process.  */\n \n-static void\n+static bool\n convert_regs_2 (basic_block block)\n {\n   basic_block *stack, *sp;\n+  bool cfg_altered = false;\n \n   /* We process the blocks in a top-down manner, in a way such that one block\n      is only processed after all its predecessors.  The number of predecessors\n@@ -3097,11 +3103,13 @@ convert_regs_2 (basic_block block)\n \t      *sp++ = e->dest;\n \t  }\n \n-      convert_regs_1 (block);\n+      cfg_altered |= convert_regs_1 (block);\n     }\n   while (sp != stack);\n \n   free (stack);\n+\n+  return cfg_altered;\n }\n \n /* Traverse all basic blocks in a function, converting the register\n@@ -3111,6 +3119,7 @@ convert_regs_2 (basic_block block)\n static void\n convert_regs (void)\n {\n+  bool cfg_altered = false;\n   int inserted;\n   basic_block b;\n   edge e;\n@@ -3129,7 +3138,7 @@ convert_regs (void)\n \n   /* Process all blocks reachable from all entry points.  */\n   FOR_EACH_EDGE (e, ei, ENTRY_BLOCK_PTR->succs)\n-    convert_regs_2 (e->dest);\n+    cfg_altered |= convert_regs_2 (e->dest);\n \n   /* ??? Process all unreachable blocks.  Though there's no excuse\n      for keeping these even when not optimizing.  */\n@@ -3138,7 +3147,7 @@ convert_regs (void)\n       block_info bi = BLOCK_INFO (b);\n \n       if (! bi->done)\n-\tconvert_regs_2 (b);\n+\tcfg_altered |= convert_regs_2 (b);\n     }\n \n   inserted |= compensate_edges ();\n@@ -3149,6 +3158,9 @@ convert_regs (void)\n   if (inserted)\n     commit_edge_insertions ();\n \n+  if (cfg_altered)\n+    cleanup_cfg (0);\n+\n   if (dump_file)\n     fputc ('\\n', dump_file);\n }"}, {"sha": "5e202cb06450212b1ab9b67e5f50a0209ddd0915", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12929514e78008b033dfbd9d30f852db506dc27e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12929514e78008b033dfbd9d30f852db506dc27e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=12929514e78008b033dfbd9d30f852db506dc27e", "patch": "@@ -1,3 +1,8 @@\n+2010-10-24  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt7.ad[sb]: New test.\n+\t* gnat.dg/opt7_pkg.ads: New helper.\n+\n 2010-10-24  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tPR objc/45735\t"}, {"sha": "da3b0e6dfa2c9bfa434980acc42d5780a9feabf3", "filename": "gcc/testsuite/gnat.dg/opt7.adb", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12929514e78008b033dfbd9d30f852db506dc27e/gcc%2Ftestsuite%2Fgnat.dg%2Fopt7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12929514e78008b033dfbd9d30f852db506dc27e/gcc%2Ftestsuite%2Fgnat.dg%2Fopt7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt7.adb?ref=12929514e78008b033dfbd9d30f852db506dc27e", "patch": "@@ -0,0 +1,44 @@\n+-- { dg-do compile }\r\n+-- { dg-options \"-Os -g\" }\r\n+\r\n+with Opt7_Pkg;\r\n+\r\n+package body Opt7 is\r\n+\r\n+   procedure Parse (Str       :     String;\r\n+                    Time_Type : out time_t;\r\n+                    Abs_Time  : out Time;\r\n+                    Delt_Time : out Duration) is\r\n+      Year         : Year_Number;\r\n+      Month        : Month_Number;\r\n+      Day          : Day_Number;\r\n+      Minute       : Integer := 0;\r\n+      Idx          : Integer := Str'First;\r\n+      Ch           : Character := Str (Idx);\r\n+      Current_Time : Time;\r\n+\r\n+   begin\r\n+      if Ch = '-' then\r\n+         Time_Type := Absolute_Time;\r\n+         Current_Time := Clock;\r\n+         Day   := Ada.Calendar.Day (Current_Time);\r\n+         Month := Ada.Calendar.Month (Current_Time);\r\n+         Year  := Ada.Calendar.Year (Current_Time);\r\n+      else\r\n+         Time_Type := Delta_Time;\r\n+      end if;\r\n+      while Ch in '0' .. '9' loop\r\n+         Minute := Minute + Character'Pos (Ch);\r\n+         Idx := Idx + 1;\r\n+         Ch  := Str (Idx);\r\n+      end loop;\r\n+      if Time_Type = Absolute_Time then\r\n+         Abs_Time := Time_Of (Year, Month, Day, Day_Duration (1));\r\n+      else\r\n+         Delt_Time := Duration (Float (Minute));\r\n+      end if;\r\n+   exception\r\n+      when others => Opt7_Pkg.My_Raise_Exception;\r\n+   end;\r\n+\r\n+end Opt7;\r"}, {"sha": "c98035326708f205a42e7ca9dc4f6561fc85dacf", "filename": "gcc/testsuite/gnat.dg/opt7.ads", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12929514e78008b033dfbd9d30f852db506dc27e/gcc%2Ftestsuite%2Fgnat.dg%2Fopt7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12929514e78008b033dfbd9d30f852db506dc27e/gcc%2Ftestsuite%2Fgnat.dg%2Fopt7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt7.ads?ref=12929514e78008b033dfbd9d30f852db506dc27e", "patch": "@@ -0,0 +1,12 @@\n+with Ada.Calendar; use Ada.Calendar;\r\n+\r\n+package Opt7 is\r\n+\r\n+   type time_t is (Absolute_Time, Delta_Time);\r\n+\r\n+   procedure Parse (Str       :     String;\r\n+                    Time_Type : out time_t;\r\n+                    Abs_Time  : out Time;\r\n+                    Delt_Time : out Duration);\r\n+\r\n+end Opt7;\r"}, {"sha": "db24f5dac7b501abef685b8e0f7948027cf441b9", "filename": "gcc/testsuite/gnat.dg/opt7_pkg.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12929514e78008b033dfbd9d30f852db506dc27e/gcc%2Ftestsuite%2Fgnat.dg%2Fopt7_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12929514e78008b033dfbd9d30f852db506dc27e/gcc%2Ftestsuite%2Fgnat.dg%2Fopt7_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt7_pkg.ads?ref=12929514e78008b033dfbd9d30f852db506dc27e", "patch": "@@ -0,0 +1,5 @@\n+package Opt7_Pkg is\n+\n+  procedure My_Raise_Exception;\n+\n+end Opt7_Pkg;"}]}