{"sha": "fa553ff26d96f6fecaa8f1b00649cfdc6cda5f5a", "node_id": "C_kwDOANBUbNoAKGZhNTUzZmYyNmQ5NmY2ZmVjYWE4ZjFiMDA2NDljZmRjNmNkYTVmNWE", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-21T07:16:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-21T07:16:44Z"}, "message": "match.pd: Fix up gcc.dg/pr54346.c on i686-linux [PR54346]\n\nThe pr54346.c testcase FAILs on i686-linux (without -msse*) for multiple\nreasons.  One is the trivial missing -Wno-psabi which the following patch\nadds, but that isn't enough.  The thing is that without native vector\nsupport, we have VEC_PERM_EXPRs in the IL and are actually considering\nthe nested VEC_PERM_EXPRs into one VEC_PERM_EXPR optimization, but punt\nbecause can_vec_perm_const_p (result_mode, op_mode, sel2, false) is false.\n\nSuch a test makes sense to prevent \"optimizing\" two VEC_PERM_EXPRs\nthat can be handled by the backend natively into one VEC_PERM_EXPR\nthat can't be handled.  But if both of the original VEC_PERM_EXPRs\ncan't be handled natively either, having just one VEC_PERM_EXPR that will be\nlowered by generic vec lowering is IMHO still better than 2.\nOr even if we trade just one VEC_PERM_EXPR that can't be handled plus\none that can to one that can't be handled.\n\nAlso, removing the testcase's executable permissions...\n\n2022-10-21  <jakub@redhat.com>\n\n\tPR tree-optimization/54346\n\t* match.pd ((vec_perm (vec_perm@0 @1 @2 VECTOR_CST) @0 VECTOR_CST)):\n\tOptimize nested VEC_PERM_EXPRs even if target can't handle the\n\tnew one provided we don't increase number of VEC_PERM_EXPRs the\n\ttarget can't handle.\n\n\t* gcc.dg/pr54346.c: Add -Wno-psabi to dg-options.", "tree": {"sha": "73b01534239c4297b3bf9675bd94d9487b5d0534", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73b01534239c4297b3bf9675bd94d9487b5d0534"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa553ff26d96f6fecaa8f1b00649cfdc6cda5f5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa553ff26d96f6fecaa8f1b00649cfdc6cda5f5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa553ff26d96f6fecaa8f1b00649cfdc6cda5f5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa553ff26d96f6fecaa8f1b00649cfdc6cda5f5a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f9fac6ca86458ef21ab91ca471429d63f954003", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f9fac6ca86458ef21ab91ca471429d63f954003", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f9fac6ca86458ef21ab91ca471429d63f954003"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "194ba8f5188e17056b9c9af790e9725e3e65bff4", "filename": "gcc/match.pd", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa553ff26d96f6fecaa8f1b00649cfdc6cda5f5a/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa553ff26d96f6fecaa8f1b00649cfdc6cda5f5a/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=fa553ff26d96f6fecaa8f1b00649cfdc6cda5f5a", "patch": "@@ -8118,7 +8118,16 @@ and,\n        vec_perm_indices sel2 (builder2, 2, nelts);\n \n        tree op0 = NULL_TREE;\n-       if (can_vec_perm_const_p (result_mode, op_mode, sel2, false))\n+       /* If the new VEC_PERM_EXPR can't be handled but both\n+\t  original VEC_PERM_EXPRs can, punt.\n+\t  If one or both of the original VEC_PERM_EXPRs can't be\n+\t  handled and the new one can't be either, don't increase\n+\t  number of VEC_PERM_EXPRs that can't be handled.  */\n+       if (can_vec_perm_const_p (result_mode, op_mode, sel2, false)\n+\t   || (single_use (@0)\n+\t       ? (!can_vec_perm_const_p (result_mode, op_mode, sel0, false)\n+\t\t  || !can_vec_perm_const_p (result_mode, op_mode, sel1, false))\n+\t       : !can_vec_perm_const_p (result_mode, op_mode, sel1, false)))\n \t op0 = vec_perm_indices_to_tree (TREE_TYPE (@4), sel2);\n      }\n      (if (op0)"}, {"sha": "5ec0609f1e507bb8feb31986ad874b614fd141dd", "filename": "gcc/testsuite/gcc.dg/pr54346.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa553ff26d96f6fecaa8f1b00649cfdc6cda5f5a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54346.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa553ff26d96f6fecaa8f1b00649cfdc6cda5f5a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54346.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54346.c?ref=fa553ff26d96f6fecaa8f1b00649cfdc6cda5f5a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-dse1\" } */\n+/* { dg-options \"-O -fdump-tree-dse1 -Wno-psabi\" } */\n \n typedef int veci __attribute__ ((vector_size (4 * sizeof (int))));\n "}]}