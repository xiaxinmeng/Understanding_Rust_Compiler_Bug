{"sha": "b3d7e1910fd9146716cc75a562bd59327c79ee58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNkN2UxOTEwZmQ5MTQ2NzE2Y2M3NWE1NjJiZDU5MzI3Yzc5ZWU1OA==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@arm.com", "date": "2010-01-19T14:21:14Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2010-01-19T14:21:14Z"}, "message": "Fix target/38697\n\n2010-01-19  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n       PR target/38697\n       * config/arm/neon-testgen.m (emit_automatics): New parameter\n\tfeatures. Adjust for Fixed_return_reg feature.\n\t(test_intrinsic): Call emit_automatics with new feature.\n       * config/arm/neon.ml: Update copyright years.\n\t(features): New Fixed_return_reg feature.\n\t(ops): Update feature for Vget_low.\n\n2010-01-19  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n\tPR target/38697.\n\t* gcc.target/arm/neon/vget_lowf32.c: Regenerate.\n\t* gcc.target/arm/neon/vget_lowp16.c: Likewise.\n\t* gcc.target/arm/neon/vget_lowp8.c:  Likewise.\n\t* gcc.target/arm/neon/vget_lows16.c: Likewise.\n\t* gcc.target/arm/neon/vget_lows32.c: Likewise.\n\t* gcc.target/arm/neon/vget_lows64.c: Likewise.\n\t* gcc.target/arm/neon/vget_lows8.c: Likewise.\n\t* gcc.target/arm/neon/vget_lowu16.c: Likewise.\n\t* gcc.target/arm/neon/vget_lowu32.c: Likewise.\n\t* gcc.target/arm/neon/vget_lowu64.c: Likewise.\n\t* gcc.target/arm/neon/vget_lowu8.c: Likewise.\n\nFrom-SVN: r156042", "tree": {"sha": "13f5fd60ab76419af0f8bb108775317aa2249670", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13f5fd60ab76419af0f8bb108775317aa2249670"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3d7e1910fd9146716cc75a562bd59327c79ee58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3d7e1910fd9146716cc75a562bd59327c79ee58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3d7e1910fd9146716cc75a562bd59327c79ee58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3d7e1910fd9146716cc75a562bd59327c79ee58/comments", "author": null, "committer": null, "parents": [{"sha": "f89cc1a337524ae9d1e32e020562ec27ca056ad2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f89cc1a337524ae9d1e32e020562ec27ca056ad2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f89cc1a337524ae9d1e32e020562ec27ca056ad2"}], "stats": {"total": 78, "additions": 56, "deletions": 22}, "files": [{"sha": "1b5a0d3ec2632dad43046f12626739130f24da97", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3d7e1910fd9146716cc75a562bd59327c79ee58", "patch": "@@ -1,3 +1,13 @@\n+2010-01-19  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+       PR target/38697\n+       * config/arm/neon-testgen.m (emit_automatics): New parameter\n+\tfeatures. Adjust for Fixed_return_reg feature.\n+\t(test_intrinsic): Call emit_automatics with new feature.\n+       * config/arm/neon.ml: Update copyright years.\n+\t(features): New Fixed_return_reg feature.\n+\t(ops): Update feature for Vget_low.\n+\n 2010-01-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/42719"}, {"sha": "be86386cbf03646e9e5a304dceedb41c7e5906cc", "filename": "gcc/config/arm/neon-testgen.ml", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Fconfig%2Farm%2Fneon-testgen.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Fconfig%2Farm%2Fneon-testgen.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon-testgen.ml?ref=b3d7e1910fd9146716cc75a562bd59327c79ee58", "patch": "@@ -1,5 +1,5 @@\n (* Auto-generate ARM Neon intrinsics tests.\n-   Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by CodeSourcery.\n \n    This file is part of GCC.\n@@ -58,7 +58,7 @@ let emit_prologue chan test_name =\n \n (* Emit declarations of local variables that are going to be passed\n    to an intrinsic, together with one to take a returned value if needed.  *)\n-let emit_automatics chan c_types =\n+let emit_automatics chan c_types features =\n   let emit () =\n     ignore (\n       List.fold_left (fun arg_number -> fun (flags, ty) ->\n@@ -75,11 +75,17 @@ let emit_automatics chan c_types =\n   in\n     match c_types with\n       (_, return_ty) :: tys ->\n-        if return_ty <> \"void\" then\n-          (* The intrinsic returns a value.  *)\n-          (Printf.fprintf chan \"  %s out_%s;\\n\" return_ty return_ty;\n-           emit ())\n-        else\n+        if return_ty <> \"void\" then begin\n+          (* The intrinsic returns a value.  We need to do explict register\n+             allocation for vget_low tests or they fail because of copy\n+             elimination.  *)\n+          ((if List.mem Fixed_return_reg features then\n+              Printf.fprintf chan \"  register %s out_%s asm (\\\"d18\\\");\\n\"\n+                             return_ty return_ty\n+            else\n+              Printf.fprintf chan \"  %s out_%s;\\n\" return_ty return_ty);\n+\t   emit ())\n+        end else\n           (* The intrinsic does not return a value.  *)\n           emit ()\n     | _ -> assert false\n@@ -257,7 +263,7 @@ let test_intrinsic dir opcode features shape name munge elt_ty =\n     (* Emit file and function prologues.  *)\n     emit_prologue chan test_name;\n     (* Emit local variable declarations.  *)\n-    emit_automatics chan c_types;\n+    emit_automatics chan c_types features;\n     Printf.fprintf chan \"\\n\";\n     (* Emit the call to the intrinsic.  *)\n     emit_call chan const_valuator c_types name elt_ty;"}, {"sha": "f77f05cc825537186024ebf552d214a74ab5a9ba", "filename": "gcc/config/arm/neon.ml", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Fconfig%2Farm%2Fneon.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Fconfig%2Farm%2Fneon.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.ml?ref=b3d7e1910fd9146716cc75a562bd59327c79ee58", "patch": "@@ -1,7 +1,7 @@\n (* Common code for ARM NEON header file, documentation and test case\n    generators.\n \n-   Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by CodeSourcery.\n \n    This file is part of GCC.\n@@ -234,6 +234,7 @@ type features =\n        cases.  The function supplied must return the integer to be written\n        into the testcase for the argument number (0-based) supplied to it.  *)\n   | Const_valuator of (int -> int)\n+  | Fixed_return_reg\n \n exception MixedMode of elts * elts\n \n@@ -1089,9 +1090,13 @@ let ops =\n       Use_operands [| Dreg; Qreg |], \"vget_high\",\n       notype_1, pf_su_8_64;\n     Vget_low, [Instruction_name [\"vmov\"];\n-               Disassembles_as [Use_operands [| Dreg; Dreg |]]],\n+               Disassembles_as [Use_operands [| Dreg; Dreg |]];\n+\t       Fixed_return_reg],\n       Use_operands [| Dreg; Qreg |], \"vget_low\",\n-      notype_1, pf_su_8_64;\n+      notype_1, pf_su_8_32;\n+     Vget_low, [No_op],\n+      Use_operands [| Dreg; Qreg |], \"vget_low\",\n+      notype_1, [S64; U64];\n \n     (* Conversions.  *)\n     Vcvt, [InfoWord], All (2, Dreg), \"vcvt\", conv_1,"}, {"sha": "8c02782de0ebf300ba08ac0447dbae9916c9b033", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b3d7e1910fd9146716cc75a562bd59327c79ee58", "patch": "@@ -1,3 +1,18 @@\n+2010-01-19  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+\tPR target/38697.\n+\t* gcc.target/arm/neon/vget_lowf32.c: Regenerate.\n+\t* gcc.target/arm/neon/vget_lowp16.c: Likewise.\n+\t* gcc.target/arm/neon/vget_lowp8.c:  Likewise.\n+\t* gcc.target/arm/neon/vget_lows16.c: Likewise.\n+\t* gcc.target/arm/neon/vget_lows32.c: Likewise.\n+\t* gcc.target/arm/neon/vget_lows64.c: Likewise.\n+\t* gcc.target/arm/neon/vget_lows8.c: Likewise.\n+\t* gcc.target/arm/neon/vget_lowu16.c: Likewise.\n+\t* gcc.target/arm/neon/vget_lowu32.c: Likewise.\n+\t* gcc.target/arm/neon/vget_lowu64.c: Likewise.\n+\t* gcc.target/arm/neon/vget_lowu8.c: Likewise.\n+\n 2010-01-19  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/42545"}, {"sha": "a14a57636d0778dbfaff45119c178dbe86afddf9", "filename": "gcc/testsuite/gcc.target/arm/neon/vget_lowf32.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowf32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowf32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowf32.c?ref=b3d7e1910fd9146716cc75a562bd59327c79ee58", "patch": "@@ -9,7 +9,7 @@\n \n void test_vget_lowf32 (void)\n {\n-  float32x2_t out_float32x2_t;\n+  register float32x2_t out_float32x2_t asm (\"d18\");\n   float32x4_t arg0_float32x4_t;\n \n   out_float32x2_t = vget_low_f32 (arg0_float32x4_t);"}, {"sha": "5c130f0b44d4b030e5ec5c6097060bb81cc4b633", "filename": "gcc/testsuite/gcc.target/arm/neon/vget_lowp16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowp16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowp16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowp16.c?ref=b3d7e1910fd9146716cc75a562bd59327c79ee58", "patch": "@@ -9,7 +9,7 @@\n \n void test_vget_lowp16 (void)\n {\n-  poly16x4_t out_poly16x4_t;\n+  register poly16x4_t out_poly16x4_t asm (\"d18\");\n   poly16x8_t arg0_poly16x8_t;\n \n   out_poly16x4_t = vget_low_p16 (arg0_poly16x8_t);"}, {"sha": "4b4f599fc4e3eb8db351d48a9dfcb4e754ff547b", "filename": "gcc/testsuite/gcc.target/arm/neon/vget_lowp8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowp8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowp8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowp8.c?ref=b3d7e1910fd9146716cc75a562bd59327c79ee58", "patch": "@@ -9,7 +9,7 @@\n \n void test_vget_lowp8 (void)\n {\n-  poly8x8_t out_poly8x8_t;\n+  register poly8x8_t out_poly8x8_t asm (\"d18\");\n   poly8x16_t arg0_poly8x16_t;\n \n   out_poly8x8_t = vget_low_p8 (arg0_poly8x16_t);"}, {"sha": "ee6e9904b676ee8d839c79577963b3894228c640", "filename": "gcc/testsuite/gcc.target/arm/neon/vget_lows16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lows16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lows16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lows16.c?ref=b3d7e1910fd9146716cc75a562bd59327c79ee58", "patch": "@@ -9,7 +9,7 @@\n \n void test_vget_lows16 (void)\n {\n-  int16x4_t out_int16x4_t;\n+  register int16x4_t out_int16x4_t asm (\"d18\");\n   int16x8_t arg0_int16x8_t;\n \n   out_int16x4_t = vget_low_s16 (arg0_int16x8_t);"}, {"sha": "08315286d9b5ebb1a522addba12cf3ade9114626", "filename": "gcc/testsuite/gcc.target/arm/neon/vget_lows32.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lows32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lows32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lows32.c?ref=b3d7e1910fd9146716cc75a562bd59327c79ee58", "patch": "@@ -9,7 +9,7 @@\n \n void test_vget_lows32 (void)\n {\n-  int32x2_t out_int32x2_t;\n+  register int32x2_t out_int32x2_t asm (\"d18\");\n   int32x4_t arg0_int32x4_t;\n \n   out_int32x2_t = vget_low_s32 (arg0_int32x4_t);"}, {"sha": "9c1440ceb5bb0fba763ec6f722a490243b4d6c32", "filename": "gcc/testsuite/gcc.target/arm/neon/vget_lows64.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lows64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lows64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lows64.c?ref=b3d7e1910fd9146716cc75a562bd59327c79ee58", "patch": "@@ -15,5 +15,4 @@ void test_vget_lows64 (void)\n   out_int64x1_t = vget_low_s64 (arg0_int64x2_t);\n }\n \n-/* { dg-final { scan-assembler \"vmov\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+!?\\(\\[ \t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" } } */\n /* { dg-final { cleanup-saved-temps } } */"}, {"sha": "7d324f33713cdd9f034371c554ea973c8e8c90b1", "filename": "gcc/testsuite/gcc.target/arm/neon/vget_lows8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lows8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lows8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lows8.c?ref=b3d7e1910fd9146716cc75a562bd59327c79ee58", "patch": "@@ -9,7 +9,7 @@\n \n void test_vget_lows8 (void)\n {\n-  int8x8_t out_int8x8_t;\n+  register int8x8_t out_int8x8_t asm (\"d18\");\n   int8x16_t arg0_int8x16_t;\n \n   out_int8x8_t = vget_low_s8 (arg0_int8x16_t);"}, {"sha": "b0c4384531f57b2276dc5e84ea53445b0a148a85", "filename": "gcc/testsuite/gcc.target/arm/neon/vget_lowu16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowu16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowu16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowu16.c?ref=b3d7e1910fd9146716cc75a562bd59327c79ee58", "patch": "@@ -9,7 +9,7 @@\n \n void test_vget_lowu16 (void)\n {\n-  uint16x4_t out_uint16x4_t;\n+  register uint16x4_t out_uint16x4_t asm (\"d18\");\n   uint16x8_t arg0_uint16x8_t;\n \n   out_uint16x4_t = vget_low_u16 (arg0_uint16x8_t);"}, {"sha": "fdd8e79e974a8d1fbf713618256ab0b10ac1641c", "filename": "gcc/testsuite/gcc.target/arm/neon/vget_lowu32.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowu32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowu32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowu32.c?ref=b3d7e1910fd9146716cc75a562bd59327c79ee58", "patch": "@@ -9,7 +9,7 @@\n \n void test_vget_lowu32 (void)\n {\n-  uint32x2_t out_uint32x2_t;\n+  register uint32x2_t out_uint32x2_t asm (\"d18\");\n   uint32x4_t arg0_uint32x4_t;\n \n   out_uint32x2_t = vget_low_u32 (arg0_uint32x4_t);"}, {"sha": "e6f7627cbd41c50601323e6a38af45c65688c511", "filename": "gcc/testsuite/gcc.target/arm/neon/vget_lowu64.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowu64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowu64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowu64.c?ref=b3d7e1910fd9146716cc75a562bd59327c79ee58", "patch": "@@ -15,5 +15,4 @@ void test_vget_lowu64 (void)\n   out_uint64x1_t = vget_low_u64 (arg0_uint64x2_t);\n }\n \n-/* { dg-final { scan-assembler \"vmov\\[ \t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+!?\\(\\[ \t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" } } */\n /* { dg-final { cleanup-saved-temps } } */"}, {"sha": "d4e3c714d9351e5589b908c7b66c7914c5ff7f0b", "filename": "gcc/testsuite/gcc.target/arm/neon/vget_lowu8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowu8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3d7e1910fd9146716cc75a562bd59327c79ee58/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowu8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon%2Fvget_lowu8.c?ref=b3d7e1910fd9146716cc75a562bd59327c79ee58", "patch": "@@ -9,7 +9,7 @@\n \n void test_vget_lowu8 (void)\n {\n-  uint8x8_t out_uint8x8_t;\n+  register uint8x8_t out_uint8x8_t asm (\"d18\");\n   uint8x16_t arg0_uint8x16_t;\n \n   out_uint8x8_t = vget_low_u8 (arg0_uint8x16_t);"}]}