{"sha": "37568125833520ba34d3723db4c888013ae0d725", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc1NjgxMjU4MzM1MjBiYTM0ZDM3MjNkYjRjODg4MDEzYWUwZDcyNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-09T19:19:52Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-09T19:19:52Z"}, "message": "(expand_expr, case ABS_EXPR): Don't copy twice into volatile MEM.\n\nFrom-SVN: r5698", "tree": {"sha": "4e48e6342588f7fe66765565f7f9aff01345ef93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e48e6342588f7fe66765565f7f9aff01345ef93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37568125833520ba34d3723db4c888013ae0d725", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37568125833520ba34d3723db4c888013ae0d725", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37568125833520ba34d3723db4c888013ae0d725", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37568125833520ba34d3723db4c888013ae0d725/comments", "author": null, "committer": null, "parents": [{"sha": "90764a87b6122ef5c8ac3bae438990ed1944bbc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90764a87b6122ef5c8ac3bae438990ed1944bbc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90764a87b6122ef5c8ac3bae438990ed1944bbc3"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "91b2d6e011ab189b575727f8e58f1820a977ba4d", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37568125833520ba34d3723db4c888013ae0d725/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37568125833520ba34d3723db4c888013ae0d725/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=37568125833520ba34d3723db4c888013ae0d725", "patch": "@@ -5001,6 +5001,7 @@ expand_expr (exp, target, tmode, modifier)\n       target = original_target;\n       temp = gen_label_rtx ();\n       if (target == 0 || ! safe_from_p (target, TREE_OPERAND (exp, 0))\n+\t  || (GET_CODE (target) == MEM && MEM_VOLATILE_P (target))\n \t  || (GET_CODE (target) == REG\n \t      && REGNO (target) < FIRST_PSEUDO_REGISTER))\n \ttarget = gen_reg_rtx (mode);"}]}