{"sha": "8ec2ac347f9e853a0ff9a72084c86868d4d4c7f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVjMmFjMzQ3ZjllODUzYTBmZjlhNzIwODRjODY4NjhkNGQ0YzdmOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-08-09T15:20:40Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-08-09T15:20:40Z"}, "message": "pt.c (check_explicit_specialization): Don't abort on bogus explicit instantiations.\n\n\t* pt.c (check_explicit_specialization): Don't abort on bogus\n\texplicit instantiations.\n\nFrom-SVN: r21643", "tree": {"sha": "acf22e7c13a5a79bb3589c0789a49c9610338ac3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acf22e7c13a5a79bb3589c0789a49c9610338ac3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ec2ac347f9e853a0ff9a72084c86868d4d4c7f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ec2ac347f9e853a0ff9a72084c86868d4d4c7f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ec2ac347f9e853a0ff9a72084c86868d4d4c7f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ec2ac347f9e853a0ff9a72084c86868d4d4c7f9/comments", "author": null, "committer": null, "parents": [{"sha": "b86c2124e270245e6d9b3a492142790dfe62a492", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b86c2124e270245e6d9b3a492142790dfe62a492", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b86c2124e270245e6d9b3a492142790dfe62a492"}], "stats": {"total": 47, "additions": 33, "deletions": 14}, "files": [{"sha": "a84a1a952b23dc88a6842d2e767d91b8050af501", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ec2ac347f9e853a0ff9a72084c86868d4d4c7f9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ec2ac347f9e853a0ff9a72084c86868d4d4c7f9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8ec2ac347f9e853a0ff9a72084c86868d4d4c7f9", "patch": "@@ -1,3 +1,8 @@\n+1998-08-09  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* pt.c (check_explicit_specialization): Don't abort on bogus\n+\texplicit instantiations.\n+\n 1998-08-07  Mark Mitchell  <mark@markmitchell.com>\n \n \t* typeck.c (require_complete_type): Use complete_type_or_else."}, {"sha": "8e0983ece5bb7dcc8ad38c5b67fe148635a063e0", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 27, "deletions": 13, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ec2ac347f9e853a0ff9a72084c86868d4d4c7f9/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ec2ac347f9e853a0ff9a72084c86868d4d4c7f9/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=8ec2ac347f9e853a0ff9a72084c86868d4d4c7f9", "patch": "@@ -1205,19 +1205,33 @@ check_explicit_specialization (declarator, decl, template_count, flags)\n \n       if (ctype != NULL_TREE && TYPE_BEING_DEFINED (ctype))\n \t{\n-\t  /* Since finish_struct_1 has not been called yet, we\n-\t     can't call lookup_fnfields.  We note that this\n-\t     template is a specialization, and proceed, letting\n-\t     finish_struct fix this up later.  */\n-\t  tree ti = perm_tree_cons (NULL_TREE, \n-\t\t\t\t    TREE_OPERAND (declarator, 1),\n-\t\t\t\t    NULL_TREE);\n-\t  TI_PENDING_SPECIALIZATION_FLAG (ti) = 1;\n-\t  DECL_TEMPLATE_INFO (decl) = ti;\n-\t  /* This should not be an instantiation; explicit\n-\t     instantiation directives can only occur at the top\n-\t     level.  */\n-\t  my_friendly_assert (!explicit_instantiation, 0);\n+\t  if (!explicit_instantiation)\n+\t    {\n+\t      /* Since finish_struct_1 has not been called yet, we\n+\t\t can't call lookup_fnfields.  We note that this\n+\t\t template is a specialization, and proceed, letting\n+\t\t finish_struct fix this up later.  */\n+\t      tree ti = perm_tree_cons (NULL_TREE, \n+\t\t\t\t\tTREE_OPERAND (declarator, 1),\n+\t\t\t\t\tNULL_TREE);\n+\t      TI_PENDING_SPECIALIZATION_FLAG (ti) = 1;\n+\t      DECL_TEMPLATE_INFO (decl) = ti;\n+\t    }\n+\t  else\n+\t    /* It's not legal to write an explicit instantiation in\n+\t       class scope, e.g.:\n+\n+\t         class C { template void f(); }\n+\n+\t       This case is caught by the parser.  However, on\n+\t       something like:\n+\t       \n+\t         template class C { void f(); };\n+\n+\t       (which is illegal) we can get here.  The error will be\n+\t       issued later.  */\n+\t    ;\n+\n \t  return decl;\n \t}\n       else if (ctype != NULL_TREE "}, {"sha": "671cf005de5093709baebe7a557d3e1ec3b3d26d", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit69.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ec2ac347f9e853a0ff9a72084c86868d4d4c7f9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit69.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ec2ac347f9e853a0ff9a72084c86868d4d4c7f9/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit69.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit69.C?ref=8ec2ac347f9e853a0ff9a72084c86868d4d4c7f9", "patch": "@@ -1,2 +1,2 @@\n //Build don't link:\n-template class x {}; // ERROR - not a template instantiation XFAIL *-*-*\n+template class x {}; // ERROR - not a template instantiation"}]}