{"sha": "0cb07998ae317e89dbf9695db731bfc8aa5f9d41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNiMDc5OThhZTMxN2U4OWRiZjk2OTVkYjczMWJmYzhhYTVmOWQ0MQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2014-09-22T07:36:51Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-09-22T07:36:51Z"}, "message": "rtl.h (subreg_info): Expand commentary\n\ngcc/\n\t* rtl.h (subreg_info): Expand commentary\n\t* rtlanal.c (subreg_get_info): Likewise.\n\nFrom-SVN: r215447", "tree": {"sha": "e628812b6b8bd37be67d38a58cf45d98de1a1770", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e628812b6b8bd37be67d38a58cf45d98de1a1770"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cb07998ae317e89dbf9695db731bfc8aa5f9d41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cb07998ae317e89dbf9695db731bfc8aa5f9d41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cb07998ae317e89dbf9695db731bfc8aa5f9d41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cb07998ae317e89dbf9695db731bfc8aa5f9d41/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "853d50d3c82212fee406279c386cef1673adfbc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/853d50d3c82212fee406279c386cef1673adfbc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/853d50d3c82212fee406279c386cef1673adfbc3"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "9227427c161bf9e05ec10a0f089d26635d962ace", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb07998ae317e89dbf9695db731bfc8aa5f9d41/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb07998ae317e89dbf9695db731bfc8aa5f9d41/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0cb07998ae317e89dbf9695db731bfc8aa5f9d41", "patch": "@@ -1,3 +1,8 @@\n+2014-09-22  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* rtl.h (subreg_info): Expand commentary\n+\t* rtlanal.c (subreg_get_info): Likewise.\n+\n 2014-09-22  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* hard-reg-set.h (COPY_HARD_REG_SET, COMPL_HARD_REG_SET)"}, {"sha": "93df69152c21d74cba79751ae5fa50f11362650f", "filename": "gcc/rtl.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb07998ae317e89dbf9695db731bfc8aa5f9d41/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb07998ae317e89dbf9695db731bfc8aa5f9d41/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=0cb07998ae317e89dbf9695db731bfc8aa5f9d41", "patch": "@@ -2875,10 +2875,13 @@ struct subreg_info\n {\n   /* Offset of first hard register involved in the subreg.  */\n   int offset;\n-  /* Number of hard registers involved in the subreg.  */\n+  /* Number of hard registers involved in the subreg.  In the case of\n+     a paradoxical subreg, this is the number of registers that would\n+     be modified by writing to the subreg; some of them may be don't-care\n+     when reading from the subreg.  */\n   int nregs;\n   /* Whether this subreg can be represented as a hard reg with the new\n-     mode.  */\n+     mode (by adding OFFSET to the original hard register).  */\n   bool representable_p;\n };\n "}, {"sha": "30634580f2c45ef662eb98477283494bef9ff67d", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb07998ae317e89dbf9695db731bfc8aa5f9d41/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb07998ae317e89dbf9695db731bfc8aa5f9d41/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=0cb07998ae317e89dbf9695db731bfc8aa5f9d41", "patch": "@@ -3410,7 +3410,20 @@ subreg_lsb (const_rtx x)\n    xmode  - The mode of xregno.\n    offset - The byte offset.\n    ymode  - The mode of a top level SUBREG (or what may become one).\n-   info   - Pointer to structure to fill in.  */\n+   info   - Pointer to structure to fill in.\n+\n+   Rather than considering one particular inner register (and thus one\n+   particular \"outer\" register) in isolation, this function really uses\n+   XREGNO as a model for a sequence of isomorphic hard registers.  Thus the\n+   function does not check whether adding INFO->offset to XREGNO gives\n+   a valid hard register; even if INFO->offset + XREGNO is out of range,\n+   there might be another register of the same type that is in range.\n+   Likewise it doesn't check whether HARD_REGNO_MODE_OK accepts the new\n+   register, since that can depend on things like whether the final\n+   register number is even or odd.  Callers that want to check whether\n+   this particular subreg can be replaced by a simple (reg ...) should\n+   use simplify_subreg_regno.  */\n+\n void\n subreg_get_info (unsigned int xregno, enum machine_mode xmode,\n \t\t unsigned int offset, enum machine_mode ymode,"}]}