{"sha": "1470f196e47e33334ca4ff0cd71ebd3a1bad30de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ3MGYxOTZlNDdlMzMzMzRjYTRmZjBjZDcxZWJkM2ExYmFkMzBkZQ==", "commit": {"author": {"name": "Gary Benson", "email": "gbenson@redhat.com", "date": "2006-07-14T14:37:46Z"}, "committer": {"name": "Gary Benson", "email": "gary@gcc.gnu.org", "date": "2006-07-14T14:37:46Z"}, "message": "File.java (internalExists): New method.\n\n2006-07-14  Gary Benson  <gbenson@redhat.com>\n\n\t* java/io/File.java (internalExists): New method.\n\t(exists): Use internalExists.\n\t(internalIsDirectory): New method.\n\t(isDirectory): Use internalIsDirectory.\n\t(createTempFile): Use internalExists and internalIsDirectory.\n\nFrom-SVN: r115441", "tree": {"sha": "53e2d702b1acd9f0d465a7e1a07b9c7008bdf764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53e2d702b1acd9f0d465a7e1a07b9c7008bdf764"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1470f196e47e33334ca4ff0cd71ebd3a1bad30de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1470f196e47e33334ca4ff0cd71ebd3a1bad30de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1470f196e47e33334ca4ff0cd71ebd3a1bad30de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1470f196e47e33334ca4ff0cd71ebd3a1bad30de/comments", "author": null, "committer": null, "parents": [{"sha": "8c2e5f361c5e3b72fb8ad110d79e4f88e49eb449", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c2e5f361c5e3b72fb8ad110d79e4f88e49eb449", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c2e5f361c5e3b72fb8ad110d79e4f88e49eb449"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "ba4f72cb15394384c963d53ef03b9874968f69bd", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1470f196e47e33334ca4ff0cd71ebd3a1bad30de/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1470f196e47e33334ca4ff0cd71ebd3a1bad30de/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=1470f196e47e33334ca4ff0cd71ebd3a1bad30de", "patch": "@@ -1,3 +1,11 @@\n+2006-07-14  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/io/File.java (internalExists): New method.\n+\t(exists): Use internalExists.\n+\t(internalIsDirectory): New method.\n+\t(isDirectory): Use internalIsDirectory.\n+\t(createTempFile): Use internalExists and internalIsDirectory.\n+\n 2006-07-13  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* interpret.cc (_Jv_InterpMethod::run): Don't SAVE_PC for fdiv."}, {"sha": "ed1ca946ed3af7845ed5e6c57562a70651091bb0", "filename": "libjava/java/io/File.java", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1470f196e47e33334ca4ff0cd71ebd3a1bad30de/libjava%2Fjava%2Fio%2FFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1470f196e47e33334ca4ff0cd71ebd3a1bad30de/libjava%2Fjava%2Fio%2FFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFile.java?ref=1470f196e47e33334ca4ff0cd71ebd3a1bad30de", "patch": "@@ -259,6 +259,15 @@ public boolean equals(Object obj)\n       return path.equalsIgnoreCase(other.path);\n   }\n \n+  /*\n+   * This method tests whether or not the file represented by the\n+   * object actually exists on the filesystem.\n+   */\n+  private boolean internalExists()\n+  {\n+    return _access (EXISTS);\n+  }\n+  \n   /**\n    * This method tests whether or not the file represented by the object\n    * actually exists on the filesystem.\n@@ -270,7 +279,7 @@ public boolean equals(Object obj)\n   public boolean exists()\n   {\n     checkRead();\n-    return _access (EXISTS);\n+    return internalExists();\n   }\n \n   /**\n@@ -685,6 +694,15 @@ public int hashCode()\n    */\n   public native boolean isAbsolute();\n \n+  /*\n+   * This method tests whether or not the file represented by this\n+   * object is a directory.\n+   */\n+  private boolean internalIsDirectory()\n+  {\n+    return _stat (DIRECTORY);\n+  }\n+  \n   /**\n    * This method tests whether or not the file represented by this object\n    * is a directory.  In order for this method to return <code>true</code>,\n@@ -698,7 +716,7 @@ public int hashCode()\n   public boolean isDirectory()\n   {\n     checkRead();\n-    return _stat (DIRECTORY);\n+    return internalIsDirectory();\n   }\n \n   /**\n@@ -1069,10 +1087,10 @@ public static File createTempFile(String prefix, String suffix,\n           throw new IOException(\"Cannot determine system temporary directory\"); \n \t\n         directory = new File(dirname);\n-        if (!directory.exists())\n+        if (!directory.internalExists())\n           throw new IOException(\"System temporary directory \"\n                                 + directory.getName() + \" does not exist.\");\n-        if (!directory.isDirectory())\n+        if (!directory.internalIsDirectory())\n           throw new IOException(\"System temporary directory \"\n                                 + directory.getName()\n                                 + \" is not really a directory.\");"}]}