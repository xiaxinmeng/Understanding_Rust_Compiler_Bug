{"sha": "458a1cd089646f1308c6c19573d095852f10d91d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU4YTFjZDA4OTY0NmYxMzA4YzZjMTk1NzNkMDk1ODUyZjEwZDkxZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-08-17T13:56:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-08-17T13:56:30Z"}, "message": "re PR middle-end/77259 (ICE in emit_move_insn since r232167)\n\n\tPR middle-end/77259\n\t* tree-ssa-pre.c (eliminate_dom_walker::before_dom_children): If\n\tturning a call into __builtin_unreachable-like noreturn call, adjust\n\tgimple_call_set_fntype.\n\t* tree-cfgcleanup.c (fixup_noreturn_call): Remove lhs also if\n\tgimple_call_fntype has void return type.\n\n\t* g++.dg/ipa/devirt-52.C: New test.\n\nFrom-SVN: r239537", "tree": {"sha": "1eeb4e157a1fda36611f079637227095e54c6a8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1eeb4e157a1fda36611f079637227095e54c6a8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/458a1cd089646f1308c6c19573d095852f10d91d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458a1cd089646f1308c6c19573d095852f10d91d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/458a1cd089646f1308c6c19573d095852f10d91d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458a1cd089646f1308c6c19573d095852f10d91d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "37144e84aaacf4b5fe10692b9c7c690fb47df224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37144e84aaacf4b5fe10692b9c7c690fb47df224", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37144e84aaacf4b5fe10692b9c7c690fb47df224"}], "stats": {"total": 88, "additions": 86, "deletions": 2}, "files": [{"sha": "9bb3824437b08495e76a2e585f96a6611847aa46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458a1cd089646f1308c6c19573d095852f10d91d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458a1cd089646f1308c6c19573d095852f10d91d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=458a1cd089646f1308c6c19573d095852f10d91d", "patch": "@@ -1,3 +1,12 @@\n+2016-08-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/77259\n+\t* tree-ssa-pre.c (eliminate_dom_walker::before_dom_children): If\n+\tturning a call into __builtin_unreachable-like noreturn call, adjust\n+\tgimple_call_set_fntype.\n+\t* tree-cfgcleanup.c (fixup_noreturn_call): Remove lhs also if\n+\tgimple_call_fntype has void return type.\n+\n 2016-08-17  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \t* omp-low.c (lower_oacc_reductions): Adjust variable lookup to use"}, {"sha": "36238859838c3ae4acedb2f9094c136ecbe637a7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458a1cd089646f1308c6c19573d095852f10d91d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458a1cd089646f1308c6c19573d095852f10d91d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=458a1cd089646f1308c6c19573d095852f10d91d", "patch": "@@ -1,3 +1,8 @@\n+2016-08-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/77259\n+\t* g++.dg/ipa/devirt-52.C: New test.\n+\n 2016-08-17  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \t* c-c++-common/goacc/reduction-6.c: New testcase."}, {"sha": "be0ab4c36216f03abdcf83429afb2d6aca08c180", "filename": "gcc/testsuite/g++.dg/ipa/devirt-52.C", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458a1cd089646f1308c6c19573d095852f10d91d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-52.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458a1cd089646f1308c6c19573d095852f10d91d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-52.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-52.C?ref=458a1cd089646f1308c6c19573d095852f10d91d", "patch": "@@ -0,0 +1,56 @@\n+// PR middle-end/77259\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-O2\" }\n+\n+template <typename, typename = int> class A;\n+template <typename, typename> struct A\n+{\n+  A (A &&);\n+};\n+template <typename S, typename T, typename U>\n+A<S> operator+(S *, const A<T, U> &);\n+template <typename S, typename T, typename U>\n+void operator+(const A<T, U> &, S *);\n+struct B\n+{\n+  template <typename V> B (V);\n+};\n+template <typename V> V foo (B) {}\n+class C;\n+template <typename> struct D\n+{\n+  C *operator->() { return d; }\n+  C *d;\n+};\n+struct C\n+{\n+  virtual A<int> bar ();\n+};\n+struct E\n+{\n+  ~E ();\n+  virtual A<char> bar (const B &) const;\n+};\n+template <typename> struct F : E\n+{\n+};\n+template <typename W> struct F<D<W>> : E\n+{\n+  A<char> bar (const B &) const try\n+    {\n+      D<W> a = baz ();\n+    }\n+  catch (int)\n+    {\n+    }\n+  D<W> baz () const\n+  {\n+    D<C> b = foo<D<C>>(0);\n+    \"\" + b->bar () + \"\";\n+  }\n+};\n+struct G : F<D<int>>\n+{\n+  G (int);\n+};\n+void test () { G (0); }"}, {"sha": "6052872cb575da1f09eae257f48868d5f0fec103", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458a1cd089646f1308c6c19573d095852f10d91d/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458a1cd089646f1308c6c19573d095852f10d91d/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=458a1cd089646f1308c6c19573d095852f10d91d", "patch": "@@ -602,9 +602,14 @@ fixup_noreturn_call (gimple *stmt)\n   /* If there is an LHS, remove it, but only if its type has fixed size.\n      The LHS will need to be recreated during RTL expansion and creating\n      temporaries of variable-sized types is not supported.  Also don't\n-     do this with TREE_ADDRESSABLE types, as assign_temp will abort.  */\n+     do this with TREE_ADDRESSABLE types, as assign_temp will abort.\n+     Drop LHS regardless of TREE_ADDRESSABLE, if the function call\n+     has been changed into a call that does not return a value, like\n+     __builtin_unreachable or __cxa_pure_virtual.  */\n   tree lhs = gimple_call_lhs (stmt);\n-  if (should_remove_lhs_p (lhs))\n+  if (lhs\n+      && (should_remove_lhs_p (lhs)\n+\t  || VOID_TYPE_P (TREE_TYPE (gimple_call_fntype (stmt)))))\n     {\n       gimple_call_set_lhs (stmt, NULL_TREE);\n "}, {"sha": "5d21c80493a832e389b8ea69bc13b739b91a8639", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458a1cd089646f1308c6c19573d095852f10d91d/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458a1cd089646f1308c6c19573d095852f10d91d/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=458a1cd089646f1308c6c19573d095852f10d91d", "patch": "@@ -4543,6 +4543,15 @@ eliminate_dom_walker::before_dom_children (basic_block b)\n \t\t\t\t       lang_hooks.decl_printable_name (fn, 2));\n \t\t    }\n \t\t  gimple_call_set_fndecl (call_stmt, fn);\n+\t\t  /* If changing the call to __builtin_unreachable\n+\t\t     or similar noreturn function, adjust gimple_call_fntype\n+\t\t     too.  */\n+\t\t  if (gimple_call_noreturn_p (call_stmt)\n+\t\t      && VOID_TYPE_P (TREE_TYPE (TREE_TYPE (fn)))\n+\t\t      && TYPE_ARG_TYPES (TREE_TYPE (fn))\n+\t\t      && (TREE_VALUE (TYPE_ARG_TYPES (TREE_TYPE (fn)))\n+\t\t\t  == void_type_node))\n+\t\t    gimple_call_set_fntype (call_stmt, TREE_TYPE (fn));\n \t\t  maybe_remove_unused_call_args (cfun, call_stmt);\n \t\t  gimple_set_modified (stmt, true);\n \t\t}"}]}