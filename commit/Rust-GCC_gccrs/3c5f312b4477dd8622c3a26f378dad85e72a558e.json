{"sha": "3c5f312b4477dd8622c3a26f378dad85e72a558e", "node_id": "C_kwDOANBUbNoAKDNjNWYzMTJiNDQ3N2RkODYyMmMzYTI2ZjM3OGRhZDg1ZTcyYTU1OGU", "commit": {"author": {"name": "marxin", "email": "mliska@suse.cz", "date": "2022-07-25T09:51:51Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-07-28T10:37:03Z"}, "message": "jit,docs: compact function declarations\n\ngcc/jit/ChangeLog:\n\n\t* docs/cp/topics/expressions.rst: Compact so that the generated\n\toutput is also more compact.", "tree": {"sha": "dffce3cdb8b9c780a59a5428bb14b89e05b6149e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dffce3cdb8b9c780a59a5428bb14b89e05b6149e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c5f312b4477dd8622c3a26f378dad85e72a558e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c5f312b4477dd8622c3a26f378dad85e72a558e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c5f312b4477dd8622c3a26f378dad85e72a558e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c5f312b4477dd8622c3a26f378dad85e72a558e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8a282d5202f3e3305bd5f4b40adc0ce743c9b98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8a282d5202f3e3305bd5f4b40adc0ce743c9b98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8a282d5202f3e3305bd5f4b40adc0ce743c9b98"}], "stats": {"total": 42, "additions": 14, "deletions": 28}, "files": [{"sha": "dec5b4778111326eb9a7031935475cc4d7d79110", "filename": "gcc/jit/docs/cp/topics/expressions.rst", "status": "modified", "additions": 14, "deletions": 28, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c5f312b4477dd8622c3a26f378dad85e72a558e/gcc%2Fjit%2Fdocs%2Fcp%2Ftopics%2Fexpressions.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c5f312b4477dd8622c3a26f378dad85e72a558e/gcc%2Fjit%2Fdocs%2Fcp%2Ftopics%2Fexpressions.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2Fcp%2Ftopics%2Fexpressions.rst?ref=3c5f312b4477dd8622c3a26f378dad85e72a558e", "patch": "@@ -236,48 +236,39 @@ operation:\n               gccjit::context::new_plus (gccjit::type result_type, \\\n                                          gccjit::rvalue a, gccjit::rvalue b, \\\n                                          gccjit::location loc)\n-\n-.. function:: gccjit::rvalue \\\n+              gccjit::rvalue \\\n               gccjit::context::new_minus (gccjit::type result_type, \\\n                                           gccjit::rvalue a, gccjit::rvalue b, \\\n                                           gccjit::location loc)\n-\n-.. function:: gccjit::rvalue \\\n+              gccjit::rvalue \\\n               gccjit::context::new_mult (gccjit::type result_type, \\\n                                          gccjit::rvalue a, gccjit::rvalue b, \\\n                                          gccjit::location loc)\n-\n-.. function:: gccjit::rvalue \\\n+              gccjit::rvalue \\\n               gccjit::context::new_divide (gccjit::type result_type, \\\n                                            gccjit::rvalue a, gccjit::rvalue b, \\\n                                            gccjit::location loc)\n-\n-.. function:: gccjit::rvalue \\\n+              gccjit::rvalue \\\n               gccjit::context::new_modulo (gccjit::type result_type, \\\n                                            gccjit::rvalue a, gccjit::rvalue b, \\\n                                            gccjit::location loc)\n-\n-.. function:: gccjit::rvalue \\\n+              gccjit::rvalue \\\n               gccjit::context::new_bitwise_and (gccjit::type result_type, \\\n                                                 gccjit::rvalue a, gccjit::rvalue b, \\\n                                                 gccjit::location loc)\n-\n-.. function:: gccjit::rvalue \\\n+              gccjit::rvalue \\\n               gccjit::context::new_bitwise_xor (gccjit::type result_type, \\\n                                                 gccjit::rvalue a, gccjit::rvalue b, \\\n                                                 gccjit::location loc)\n-\n-.. function:: gccjit::rvalue \\\n+              gccjit::rvalue \\\n               gccjit::context::new_bitwise_or (gccjit::type result_type, \\\n                                                gccjit::rvalue a, gccjit::rvalue b, \\\n                                                gccjit::location loc)\n-\n-.. function:: gccjit::rvalue \\\n+              gccjit::rvalue \\\n               gccjit::context::new_logical_and (gccjit::type result_type, \\\n                                                 gccjit::rvalue a, gccjit::rvalue b, \\\n                                                 gccjit::location loc)\n-\n-.. function:: gccjit::rvalue \\\n+              gccjit::rvalue \\\n               gccjit::context::new_logical_or (gccjit::type result_type, \\\n                                                gccjit::rvalue a, gccjit::rvalue b, \\\n                                                gccjit::location loc)\n@@ -375,24 +366,19 @@ operation:\n .. function:: gccjit::rvalue \\\n               gccjit::context::new_eq (gccjit::rvalue a, gccjit::rvalue b, \\\n                                        gccjit::location loc)\n-\n-.. function:: gccjit::rvalue \\\n+              gccjit::rvalue \\\n               gccjit::context::new_ne (gccjit::rvalue a, gccjit::rvalue b, \\\n                                        gccjit::location loc)\n-\n-.. function:: gccjit::rvalue \\\n+              gccjit::rvalue \\\n               gccjit::context::new_lt (gccjit::rvalue a, gccjit::rvalue b, \\\n                                        gccjit::location loc)\n-\n-.. function:: gccjit::rvalue \\\n+              gccjit::rvalue \\\n               gccjit::context::new_le (gccjit::rvalue a, gccjit::rvalue b, \\\n                                        gccjit::location loc)\n-\n-.. function:: gccjit::rvalue \\\n+              gccjit::rvalue \\\n               gccjit::context::new_gt (gccjit::rvalue a, gccjit::rvalue b, \\\n                                        gccjit::location loc)\n-\n-.. function:: gccjit::rvalue \\\n+              gccjit::rvalue \\\n               gccjit::context::new_ge (gccjit::rvalue a, gccjit::rvalue b, \\\n                                        gccjit::location loc)\n "}]}