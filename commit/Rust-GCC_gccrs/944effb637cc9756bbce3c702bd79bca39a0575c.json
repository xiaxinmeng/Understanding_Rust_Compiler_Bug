{"sha": "944effb637cc9756bbce3c702bd79bca39a0575c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ0ZWZmYjYzN2NjOTc1NmJiY2UzYzcwMmJkNzliY2EzOWEwNTc1Yw==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2001-11-08T20:52:29Z"}, "committer": {"name": "Christopher Faylor", "email": "cgf@gcc.gnu.org", "date": "2001-11-08T20:52:29Z"}, "message": "configure.target: Add os_include_dir for mingw32* target.\n\n* configure.target: Add os_include_dir for mingw32* target.\n* docs/html/17_intro/porting.texi: Mention mingw32 as target benefiting from\n_GLIBCPP_AVOID_FSEEK.\n* config/os/mingw32/bits/ctype_base.h: New file.\n* config/os/mingw32/bits/ctype_inline.h: New file.\n* config/os/mingw32/bits/ctype_noninline.h: New file.\n* config/os/mingw32/bits/os_defines.h: New file.\n\nFrom-SVN: r46857", "tree": {"sha": "b789f60963f8e869edee40eea5d161e4ede915d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b789f60963f8e869edee40eea5d161e4ede915d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/944effb637cc9756bbce3c702bd79bca39a0575c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944effb637cc9756bbce3c702bd79bca39a0575c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/944effb637cc9756bbce3c702bd79bca39a0575c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944effb637cc9756bbce3c702bd79bca39a0575c/comments", "author": null, "committer": null, "parents": [{"sha": "b21d216c74a2df1acd6afcfc3e5956034022b4a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b21d216c74a2df1acd6afcfc3e5956034022b4a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b21d216c74a2df1acd6afcfc3e5956034022b4a1"}], "stats": {"total": 261, "additions": 259, "deletions": 2}, "files": [{"sha": "0128c431f8b20982a9cef18db71b9e5d7c8eaaa8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944effb637cc9756bbce3c702bd79bca39a0575c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944effb637cc9756bbce3c702bd79bca39a0575c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=944effb637cc9756bbce3c702bd79bca39a0575c", "patch": "@@ -1,3 +1,13 @@\n+2001-11-08  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* configure.target: Add os_include_dir for mingw32* target.\n+\t* docs/html/17_intro/porting.texi: Mention mingw32 as target benefiting\n+\tfrom _GLIBCPP_AVOID_FSEEK.\n+\t* config/os/mingw32/bits/ctype_base.h: New file.\n+\t* config/os/mingw32/bits/ctype_inline.h: New file.\n+\t* config/os/mingw32/bits/ctype_noninline.h: New file.\n+\t* config/os/mingw32/bits/os_defines.h: New file.\n+\n 2001-11-07  Nathan Myers  <ncm@cantrip.org>\n \n \t* docs/html/faq/index.html (5.8):  New entry on ABIs."}, {"sha": "aed666276df160da9624e5b48e34d3d60785269a", "filename": "libstdc++-v3/config/os/mingw32/bits/ctype_base.h", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944effb637cc9756bbce3c702bd79bca39a0575c/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fbits%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944effb637cc9756bbce3c702bd79bca39a0575c/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fbits%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fbits%2Fctype_base.h?ref=944effb637cc9756bbce3c702bd79bca39a0575c", "patch": "@@ -0,0 +1,58 @@\n+// Locale support -*- C++ -*-\n+\n+// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+  \n+// Information, as gleaned from /mingw32/include/ctype.h.\n+  \n+  struct ctype_base\n+  {\n+    // Non-standard typedefs.\n+    typedef const int* \t\t__to_type;\n+\n+    // NB: Offsets into ctype<char>::_M_table force a particular size\n+    // on the mask type. Because of this, we don't use an enum.\n+    typedef unsigned short \tmask;   \n+    static const mask upper    \t= _UPPER;\n+    static const mask lower \t= _LOWER;\n+    static const mask alpha \t= _ALPHA;\n+    static const mask digit \t= _DIGIT;\n+    static const mask xdigit \t= _HEX;\n+    static const mask space \t= _SPACE;\n+    static const mask print \t= (_BLANK | _PUNCT| _ALPHA | _DIGIT);\n+    static const mask graph \t= (_PUNCT | _ALPHA | _DIGIT);\n+    static const mask cntrl \t= _CONTROL;\n+    static const mask punct \t= _PUNCT;\n+    static const mask alnum \t= (_ALPHA | _DIGIT);\n+  };\n+\n+\n+"}, {"sha": "979d607bfc0046f6f82978db8a010bd81eb536b4", "filename": "libstdc++-v3/config/os/mingw32/bits/ctype_inline.h", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944effb637cc9756bbce3c702bd79bca39a0575c/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944effb637cc9756bbce3c702bd79bca39a0575c/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fbits%2Fctype_inline.h?ref=944effb637cc9756bbce3c702bd79bca39a0575c", "patch": "@@ -0,0 +1,71 @@\n+// Locale support -*- C++ -*-\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+  \n+// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n+// functions go in ctype.cc\n+\n+\n+  bool\n+  ctype<char>::\n+  is(mask __m, char __c) const\n+  {\n+\treturn (_M_table[static_cast<unsigned char>(__c) ] & __m); \n+  }\n+   \n+ \n+  const char*\n+  ctype<char>::\n+  is(const char* __low, const char* __high, mask* __vec) const \n+  {\n+    while (__low < __high)\n+      *__vec++ = _M_table[static_cast<unsigned char>(*__low++)];\n+    return __high;\n+  }\n+\n+  const char*\n+  ctype<char>::\n+  scan_is(mask __m, const char* __low, const char* __high) const\n+  {\n+    while (__low < __high && !this->is(__m, *__low))\n+      ++__low;\n+    return __low;\n+  }\n+\n+  const char*\n+  ctype<char>::\n+  scan_not(mask __m, const char* __low, const char* __high) const\n+  {\n+    while (__low < __high && this->is(__m, *__low) != 0)\n+      ++__low;\n+    return __low;\n+  }"}, {"sha": "d07ffcf23b851792054fc1339eb9a6e338fce990", "filename": "libstdc++-v3/config/os/mingw32/bits/ctype_noninline.h", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944effb637cc9756bbce3c702bd79bca39a0575c/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944effb637cc9756bbce3c702bd79bca39a0575c/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fbits%2Fctype_noninline.h?ref=944effb637cc9756bbce3c702bd79bca39a0575c", "patch": "@@ -0,0 +1,75 @@\n+// Locale support -*- C++ -*-\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+  \n+// Information as gleaned from /mingw32/include/ctype.h.\n+\n+// This should be in mingw's ctype.h but isn't in older versions\n+\n+  extern \"C\"  unsigned short*  __declspec(dllimport) _pctype;  \n+\n+  ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) \n+    : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n+      _M_toupper(NULL), _M_tolower(NULL),\n+      _M_ctable(NULL), _M_table(__table == 0 ? (_pctype) : __table) \n+    { }\n+\n+  char\n+  ctype<char>::do_toupper(char __c) const\n+  { return ::toupper((int) __c); }\n+\n+  const char*\n+  ctype<char>::do_toupper(char* __low, const char* __high) const\n+  {\n+    while (__low < __high)\n+      {\n+\t*__low = ::toupper((int) *__low);\n+\t++__low;\n+      }\n+    return __high;\n+  }\n+\n+  char\n+  ctype<char>::do_tolower(char __c) const\n+  { return ::tolower((int) __c); }\n+\n+  const char* \n+  ctype<char>::do_tolower(char* __low, const char* __high) const\n+  {\n+    while (__low < __high)\n+      {\n+\t*__low = ::tolower((int) *__low);\n+\t++__low;\n+      }\n+    return __high;\n+  }\n+"}, {"sha": "eb4bb1c3b764c57ab9d985b1cbe8b045b25fee07", "filename": "libstdc++-v3/config/os/mingw32/bits/os_defines.h", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944effb637cc9756bbce3c702bd79bca39a0575c/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fbits%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944effb637cc9756bbce3c702bd79bca39a0575c/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fbits%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fbits%2Fos_defines.h?ref=944effb637cc9756bbce3c702bd79bca39a0575c", "patch": "@@ -0,0 +1,40 @@\n+// Specific definitions for generic platforms  -*- C++ -*-\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef _GLIBCPP_OS_DEFINES\n+#  define _GLIBCPP_OS_DEFINES\n+\n+// System-specific #define, typedefs, corrections, etc, go here.  This\n+// file will come before all others.\n+\n+#define _GLIBCPP_AVOID_FSEEK 1\n+\n+\n+#endif"}, {"sha": "eda3b1ab8a84dd537459f5fc0e0d55efb297a2e7", "filename": "libstdc++-v3/configure.target", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944effb637cc9756bbce3c702bd79bca39a0575c/libstdc%2B%2B-v3%2Fconfigure.target", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944effb637cc9756bbce3c702bd79bca39a0575c/libstdc%2B%2B-v3%2Fconfigure.target", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.target?ref=944effb637cc9756bbce3c702bd79bca39a0575c", "patch": "@@ -89,6 +89,9 @@ case \"${target_os}\" in\n   irix6.5)\n     os_include_dir=\"config/os/irix/irix6.5\"\n     ;;\n+  mingw32*)\n+    os_include_dir=\"config/os/mingw32\"\n+    ;;\n   netbsd*)\n     os_include_dir=\"config/os/bsd/netbsd\"\n     ;;"}, {"sha": "018cbdeb41f4cae09b9847f483aefd0c4b77d8c1", "filename": "libstdc++-v3/docs/html/17_intro/porting.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944effb637cc9756bbce3c702bd79bca39a0575c/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944effb637cc9756bbce3c702bd79bca39a0575c/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.texi?ref=944effb637cc9756bbce3c702bd79bca39a0575c", "patch": "@@ -152,8 +152,8 @@ stream (or one hooked to a pipe) is not allowed by the OS.  In this\n case, getc()/ungetc() will be used at some key locations in the library\n implementation instead of fseek().  Currently, the code path to avoid\n fseek() is only enabled when the seek size is 1 character away from the\n-current stream position.  This is known to improve *-unknown-freebsd*\n-and sparc-sun-solaris2.*.\n+current stream position.  This is known to improve *-unknown-freebsd*,\n+sparc-sun-solaris2.* and *-*-mingw32*.\n \n Finally, you should bracket the entire file in an include-guard, like\n this:"}]}