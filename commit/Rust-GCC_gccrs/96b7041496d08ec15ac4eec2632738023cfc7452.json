{"sha": "96b7041496d08ec15ac4eec2632738023cfc7452", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZiNzA0MTQ5NmQwOGVjMTVhYzRlZWMyNjMyNzM4MDIzY2ZjNzQ1Mg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-09-05T14:55:53Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-09-05T14:55:53Z"}, "message": "Use rtx_insn_list within haifa-sched.c\n\ngcc/ChangeLog:\n2014-09-05  David Malcolm  <dmalcolm@redhat.com>\n\n\t* haifa-sched.c (check_clobbered_conditions): Strengthen local\n\t\"link\" from rtx to rtx_insn_list *, and use its methods for\n\tclarity and type-safety.\n\t(toggle_cancelled_flags): Likewise.\n\t(restore_last_backtrack_point): Likewise.\n\t(queue_to_ready): Use insn method of \"link\" in one place.\n\t(schedule_block): Strengthen local \"link\" from rtx to\n\trtx_insn_list *, and use its methods for clarity and type-safety.\n\nFrom-SVN: r214968", "tree": {"sha": "ce9a906291bbfb54af7ebefe67d227634b090ac6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce9a906291bbfb54af7ebefe67d227634b090ac6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96b7041496d08ec15ac4eec2632738023cfc7452", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96b7041496d08ec15ac4eec2632738023cfc7452", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96b7041496d08ec15ac4eec2632738023cfc7452", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96b7041496d08ec15ac4eec2632738023cfc7452/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c838c4025c042f455c06f9d202c80a510a52ec63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c838c4025c042f455c06f9d202c80a510a52ec63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c838c4025c042f455c06f9d202c80a510a52ec63"}], "stats": {"total": 40, "additions": 25, "deletions": 15}, "files": [{"sha": "e0eca46494b426e4991ddc4982e8ba6ffed6774b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96b7041496d08ec15ac4eec2632738023cfc7452/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96b7041496d08ec15ac4eec2632738023cfc7452/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96b7041496d08ec15ac4eec2632738023cfc7452", "patch": "@@ -1,3 +1,14 @@\n+2014-09-05  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* haifa-sched.c (check_clobbered_conditions): Strengthen local\n+\t\"link\" from rtx to rtx_insn_list *, and use its methods for\n+\tclarity and type-safety.\n+\t(toggle_cancelled_flags): Likewise.\n+\t(restore_last_backtrack_point): Likewise.\n+\t(queue_to_ready): Use insn method of \"link\" in one place.\n+\t(schedule_block): Strengthen local \"link\" from rtx to\n+\trtx_insn_list *, and use its methods for clarity and type-safety.\n+\n 2014-09-05  David Malcolm  <dmalcolm@redhat.com>\n \n \t* sched-deps.c (sched_get_condition_with_rev_uncached): Strengthen"}, {"sha": "fb92bb2173986a731d54bceb6e2c491ecc728f75", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96b7041496d08ec15ac4eec2632738023cfc7452/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96b7041496d08ec15ac4eec2632738023cfc7452/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=96b7041496d08ec15ac4eec2632738023cfc7452", "patch": "@@ -3148,13 +3148,13 @@ check_clobbered_conditions (rtx insn)\n     }\n   for (i = 0; i <= max_insn_queue_index; i++)\n     {\n-      rtx link;\n+      rtx_insn_list *link;\n       int q = NEXT_Q_AFTER (q_ptr, i);\n \n     restart_queue:\n-      for (link = insn_queue[q]; link; link = XEXP (link, 1))\n+      for (link = insn_queue[q]; link; link = link->next ())\n \t{\n-\t  rtx_insn *x = as_a <rtx_insn *> (XEXP (link, 0));\n+\t  rtx_insn *x = link->insn ();\n \t  if (TODO_SPEC (x) == DEP_CONTROL && cond_clobbered_p (x, t))\n \t    {\n \t      queue_remove (x);\n@@ -4239,10 +4239,10 @@ toggle_cancelled_flags (bool set)\n   for (i = 0; i <= max_insn_queue_index; i++)\n     {\n       int q = NEXT_Q_AFTER (q_ptr, i);\n-      rtx link;\n-      for (link = insn_queue[q]; link; link = XEXP (link, 1))\n+      rtx_insn_list *link;\n+      for (link = insn_queue[q]; link; link = link->next ())\n \t{\n-\t  rtx insn = XEXP (link, 0);\n+\t  rtx_insn *insn = link->insn ();\n \t  FOR_EACH_DEP (insn, SD_LIST_BACK, sd_it, dep)\n \t    if (!DEBUG_INSN_P (DEP_PRO (dep)))\n \t      {\n@@ -4349,7 +4349,6 @@ unschedule_insns_until (rtx insn)\n static void\n restore_last_backtrack_point (struct sched_block_state *psched_block)\n {\n-  rtx link;\n   int i;\n   struct haifa_saved_data *save = backtrack_queue;\n \n@@ -4384,9 +4383,9 @@ restore_last_backtrack_point (struct sched_block_state *psched_block)\n     {\n       int q = NEXT_Q_AFTER (q_ptr, i);\n \n-      for (link = insn_queue[q]; link; link = XEXP (link, 1))\n+      for (rtx_insn_list *link = insn_queue[q]; link; link = link->next ())\n \t{\n-\t  rtx_insn *x = as_a <rtx_insn *> (XEXP (link, 0));\n+\t  rtx_insn *x = link->insn ();\n \t  QUEUE_INDEX (x) = QUEUE_NOWHERE;\n \t  INSN_TICK (x) = INVALID_TICK;\n \t}\n@@ -4416,9 +4415,9 @@ restore_last_backtrack_point (struct sched_block_state *psched_block)\n \n       insn_queue[q] = save->insn_queue[q];\n \n-      for (link = insn_queue[q]; link; link = XEXP (link, 1))\n+      for (rtx_insn_list *link = insn_queue[q]; link; link = link->next ())\n \t{\n-\t  rtx_insn *x = as_a <rtx_insn *> (XEXP (link, 0));\n+\t  rtx_insn *x = link->insn ();\n \t  QUEUE_INDEX (x) = i;\n \t  TODO_SPEC (x) = recompute_todo_spec (x, true);\n \t  INSN_TICK (x) = save->clock_var + i;\n@@ -4991,7 +4990,7 @@ queue_to_ready (struct ready_list *ready)\n \t    {\n \t      for (; link; link = link->next ())\n \t\t{\n-\t\t  insn = as_a <rtx_insn *> (XEXP (link, 0));\n+\t\t  insn = link->insn ();\n \t\t  q_size -= 1;\n \n \t\t  if (sched_verbose >= 2)\n@@ -6545,12 +6544,12 @@ schedule_block (basic_block *target_bb, state_t init_state)\n       if (q_size)\n \tfor (i = 0; i <= max_insn_queue_index; i++)\n \t  {\n-\t    rtx link;\n-\t    for (link = insn_queue[i]; link; link = XEXP (link, 1))\n+\t    rtx_insn_list *link;\n+\t    for (link = insn_queue[i]; link; link = link->next ())\n \t      {\n \t\trtx_insn *x;\n \n-\t\tx = as_a <rtx_insn *> (XEXP (link, 0));\n+\t\tx = link->insn ();\n \t\tQUEUE_INDEX (x) = QUEUE_NOWHERE;\n \t\tTODO_SPEC (x) = HARD_DEP;\n \t      }"}]}