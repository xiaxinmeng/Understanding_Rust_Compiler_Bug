{"sha": "941df33c8cc9f2efdbcb2211b50a4a95f2eee4c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQxZGYzM2M4Y2M5ZjJlZmRiY2IyMjExYjUwYTRhOTVmMmVlZTRjMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-21T20:55:21Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-21T20:55:21Z"}, "message": "(TRAMPOLINE_TEMPLATE): Specify some code as explicit hex words.\n\nShorten template.\n(TRAMPOLINE_SIZE,INITIALIZE_TRAMPOLINE): Update accordingly.\n(FUNCTION_ARG,FUNCTION_ARG_ADVANCE): Aggregates are ALWAYS passed\non the stack.\n\nFrom-SVN: r8687", "tree": {"sha": "3954f6c346942db885fad05e6d90084072df8b5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3954f6c346942db885fad05e6d90084072df8b5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/941df33c8cc9f2efdbcb2211b50a4a95f2eee4c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/941df33c8cc9f2efdbcb2211b50a4a95f2eee4c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/941df33c8cc9f2efdbcb2211b50a4a95f2eee4c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/941df33c8cc9f2efdbcb2211b50a4a95f2eee4c2/comments", "author": null, "committer": null, "parents": [{"sha": "67591ff34b6dfc445933b876c1b51b3728ebb6e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67591ff34b6dfc445933b876c1b51b3728ebb6e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67591ff34b6dfc445933b876c1b51b3728ebb6e7"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "1f66de9401b1b9d8b900d4d7fa6ef3e1092ca53d", "filename": "gcc/config/clipper/clipper.h", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/941df33c8cc9f2efdbcb2211b50a4a95f2eee4c2/gcc%2Fconfig%2Fclipper%2Fclipper.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/941df33c8cc9f2efdbcb2211b50a4a95f2eee4c2/gcc%2Fconfig%2Fclipper%2Fclipper.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fclipper%2Fclipper.h?ref=941df33c8cc9f2efdbcb2211b50a4a95f2eee4c2", "patch": "@@ -483,6 +483,7 @@ do\t\t\t\t\t\t\t\t\t      \\\n   if ((CUM).num < 2\t\t\t\t\t\t\t      \\\n       && (GET_MODE_CLASS(MODE)==MODE_INT || GET_MODE_CLASS(MODE)==MODE_FLOAT) \\\n       && (GET_MODE_SIZE (MODE) <= 8)\t\t\t\t\t      \\\n+      && ((TYPE) == NULL || !AGGREGATE_TYPE_P(TYPE))\t\t\t      \\\n       && ((MODE) != DImode || (CUM).num == 0))\t\t\t\t      \\\n     {\t\t\t\t\t\t\t\t\t      \\\n       reg = 1;\t\t\t\t\t\t\t\t      \\\n@@ -522,6 +523,7 @@ do\t\t\t\t\t\t\t\t\t      \\\n   (((CUM).num < 2\t\t\t\t\t\t\t     \\\n     && (GET_MODE_CLASS(MODE)==MODE_INT || GET_MODE_CLASS(MODE)==MODE_FLOAT)  \\\n     && (GET_MODE_SIZE (MODE) <= 8)\t\t\t\t\t     \\\n+    && ((TYPE) == NULL || !AGGREGATE_TYPE_P(TYPE))\t\t\t     \\\n     && ((MODE) != DImode || (CUM).num == 0))\t\t\t\t     \\\n    ? gen_rtx (REG, (MODE),\t\t\t\t\t\t     \\\n \t      GET_MODE_CLASS(MODE) == MODE_FLOAT ? (CUM).num+16 : (CUM).num) \\\n@@ -600,17 +602,18 @@ do\t\t\t\t\t\t\t\t\t      \\\n \n #define TRAMPOLINE_TEMPLATE(FILE)\t\t\t\t\t      \\\n {\t\t\t\t\t\t\t\t\t      \\\n-  fputs (\"\\tcall   sp,.+4\\n\", FILE);\t\t\t\t\t      \\\n+  fputs (\"\\t.word  0x459F,0x0004\\t# call   sp,.+4\\n\", FILE);\t\t      \\\n   fputs (\"\\tmovw   (sp),r3\\n\", FILE);\t\t\t\t\t      \\\n   fputs (\"\\taddq   $4,sp\\n\", FILE);\t\t\t\t\t      \\\n-  fputs (\"\\tloadw  32(r3),r2\\n\", FILE);\t\t\t\t\t      \\\n-  fputs (\"\\tloadw  36(r3),r3\\n\", FILE);\t\t\t\t\t      \\\n+  fputs (\"\\tloadw  20(r3),r2\\n\", FILE);\t\t\t\t\t      \\\n+  fputs (\"\\tloadw  24(r3),r3\\n\", FILE);\t\t\t\t\t      \\\n   fputs (\"\\tb      (r3)\\n\", FILE);\t\t\t\t\t      \\\n+  fputs (\"\\t.long  0,0\\n\", FILE);\t\t\t\t\t      \\\n }\n \n /* Length in units of the trampoline for entering a nested function.  */\n \n-#define TRAMPOLINE_SIZE 44\n+#define TRAMPOLINE_SIZE 32\n \n /* Alignment required for a trampoline.  128 is used to find the\n    beginning of a line in the instruction cache and to allow for\n@@ -628,8 +631,8 @@ do\t\t\t\t\t\t\t\t\t      \\\n \n #define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n-  emit_move_insn (gen_rtx (MEM, SImode, plus_constant (TRAMP, 36)), CXT); \\\n-  emit_move_insn (gen_rtx (MEM, SImode, plus_constant (TRAMP, 40)), FNADDR); \\\n+  emit_move_insn (gen_rtx (MEM, SImode, plus_constant (TRAMP, 24)), CXT); \\\n+  emit_move_insn (gen_rtx (MEM, SImode, plus_constant (TRAMP, 28)), FNADDR); \\\n }\n \f\n /* Addressing modes, and classification of registers for them.  */"}]}