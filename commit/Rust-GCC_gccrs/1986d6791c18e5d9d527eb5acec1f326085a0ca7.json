{"sha": "1986d6791c18e5d9d527eb5acec1f326085a0ca7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk4NmQ2NzkxYzE4ZTVkOWQ1MjdlYjVhY2VjMWYzMjYwODVhMGNhNw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-12-03T13:28:55Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-12-03T13:28:55Z"}, "message": "[RTL-ifcvt] PR rtl-optimization/68624: Clean up logic that checks for clobbering conflicts across basic blocks\n\n\tPR rtl-optimization/68624\n\t* ifcvt.c (noce_try_cmove_arith): Check clobbers of temp regs in both\n\tblocks if they exist and simplify the logic choosing the order to emit\n\tthem in.\n\n\t* gcc.c-torture/execute/pr68624.c: New test.\n\nFrom-SVN: r231226", "tree": {"sha": "32df47c3ed9c329260ff1a9ba2646482cc84c212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32df47c3ed9c329260ff1a9ba2646482cc84c212"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1986d6791c18e5d9d527eb5acec1f326085a0ca7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1986d6791c18e5d9d527eb5acec1f326085a0ca7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1986d6791c18e5d9d527eb5acec1f326085a0ca7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1986d6791c18e5d9d527eb5acec1f326085a0ca7/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97a1a642995cbe356786d2fb2b7c203fea7d0282", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97a1a642995cbe356786d2fb2b7c203fea7d0282", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97a1a642995cbe356786d2fb2b7c203fea7d0282"}], "stats": {"total": 80, "additions": 61, "deletions": 19}, "files": [{"sha": "51778ecb9cf3b880df7c44fd829024c7ab01385a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1986d6791c18e5d9d527eb5acec1f326085a0ca7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1986d6791c18e5d9d527eb5acec1f326085a0ca7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1986d6791c18e5d9d527eb5acec1f326085a0ca7", "patch": "@@ -1,3 +1,10 @@\n+2015-12-03  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization/68624\n+\t* ifcvt.c (noce_try_cmove_arith): Check clobbers of temp regs in both\n+\tblocks if they exist and simplify the logic choosing the order to emit\n+\tthem in.\n+\n 2015-12-03  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/66051"}, {"sha": "d474b3ba493aca4a86521c936f3cd86f0f368acf", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1986d6791c18e5d9d527eb5acec1f326085a0ca7/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1986d6791c18e5d9d527eb5acec1f326085a0ca7/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=1986d6791c18e5d9d527eb5acec1f326085a0ca7", "patch": "@@ -2172,10 +2172,6 @@ noce_try_cmove_arith (struct noce_if_info *if_info)\n \t}\n     }\n \n-    /* If insn to set up A clobbers any registers B depends on, try to\n-       swap insn that sets up A with the one that sets up B.  If even\n-       that doesn't help, punt.  */\n-\n   modified_in_a = emit_a != NULL_RTX && modified_in_p (orig_b, emit_a);\n   if (tmp_b && then_bb)\n     {\n@@ -2190,38 +2186,42 @@ noce_try_cmove_arith (struct noce_if_info *if_info)\n \t  }\n \n     }\n-  if (emit_a || modified_in_a)\n+\n+  modified_in_b = emit_b != NULL_RTX && modified_in_p (orig_a, emit_b);\n+  if (tmp_a && else_bb)\n     {\n-      modified_in_b = emit_b != NULL_RTX && modified_in_p (orig_a, emit_b);\n-      if (tmp_b && else_bb)\n+      FOR_BB_INSNS (else_bb, tmp_insn)\n+      /* Don't check inside insn_b.  We will have changed it to emit_b\n+\t with a destination that doesn't conflict.  */\n+      if (!(insn_b && tmp_insn == insn_b)\n+\t  && modified_in_p (orig_a, tmp_insn))\n \t{\n-\t  FOR_BB_INSNS (else_bb, tmp_insn)\n-\t  /* Don't check inside insn_b.  We will have changed it to emit_b\n-\t     with a destination that doesn't conflict.  */\n-\t  if (!(insn_b && tmp_insn == insn_b)\n-\t      && modified_in_p (orig_a, tmp_insn))\n-\t    {\n-\t      modified_in_b = true;\n-\t      break;\n-\t    }\n+\t  modified_in_b = true;\n+\t  break;\n \t}\n-      if (modified_in_b)\n-\tgoto end_seq_and_fail;\n+    }\n \n+  /* If insn to set up A clobbers any registers B depends on, try to\n+     swap insn that sets up A with the one that sets up B.  If even\n+     that doesn't help, punt.  */\n+  if (modified_in_a && !modified_in_b)\n+    {\n       if (!noce_emit_bb (emit_b, else_bb, b_simple))\n \tgoto end_seq_and_fail;\n \n       if (!noce_emit_bb (emit_a, then_bb, a_simple))\n \tgoto end_seq_and_fail;\n     }\n-  else\n+  else if (!modified_in_a)\n     {\n       if (!noce_emit_bb (emit_a, then_bb, a_simple))\n \tgoto end_seq_and_fail;\n \n       if (!noce_emit_bb (emit_b, else_bb, b_simple))\n \tgoto end_seq_and_fail;\n     }\n+  else\n+    goto end_seq_and_fail;\n \n   target = noce_emit_cmove (if_info, x, code, XEXP (if_info->cond, 0),\n \t\t\t    XEXP (if_info->cond, 1), a, b);"}, {"sha": "3417f36f6ade8d6c522e81f1fe7f4ab764f7ada2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1986d6791c18e5d9d527eb5acec1f326085a0ca7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1986d6791c18e5d9d527eb5acec1f326085a0ca7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1986d6791c18e5d9d527eb5acec1f326085a0ca7", "patch": "@@ -1,3 +1,8 @@\n+2015-12-03  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization/68624\n+\t* gcc.c-torture/execute/pr68624.c: New test.\n+\n 2015-12-03  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/66051"}, {"sha": "abb716b1550038cb3d0e96e8917b7ed0ba8bfa83", "filename": "gcc/testsuite/gcc.c-torture/execute/pr68624.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1986d6791c18e5d9d527eb5acec1f326085a0ca7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68624.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1986d6791c18e5d9d527eb5acec1f326085a0ca7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68624.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr68624.c?ref=1986d6791c18e5d9d527eb5acec1f326085a0ca7", "patch": "@@ -0,0 +1,30 @@\n+int b, c, d, e = 1, f, g, h, j;\n+\n+static int\n+fn1 ()\n+{\n+  int a = c;\n+  if (h)\n+    return 9;\n+  g = (c || b) % e;\n+  if ((g || f) && b)\n+    return 9;\n+  e = d;\n+  for (c = 0; c > -4; c--)\n+    ;\n+  if (d)\n+    c--;\n+  j = c;\n+  return d;\n+}\n+\n+int\n+main ()\n+{\n+  fn1 ();\n+\n+  if (c != -4)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}]}