{"sha": "5b3950bed95136ad2b5e037e29daf3a464dc7cd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIzOTUwYmVkOTUxMzZhZDJiNWUwMzdlMjlkYWYzYTQ2NGRjN2NkNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-04-23T14:22:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-18T09:08:29Z"}, "message": "[Ada] Fix host/target confusion for attribute To_Address\n\n2020-06-18  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_attr.adb (Analyze_Attribute) <To_Address>: Use the address\n\tsize of the target instead of the host when checking the value of\n\ta static expression.  Also use standard idiom for exponentiation.", "tree": {"sha": "5380f76c098483c4b7931e4880918d29475b1295", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5380f76c098483c4b7931e4880918d29475b1295"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b3950bed95136ad2b5e037e29daf3a464dc7cd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b3950bed95136ad2b5e037e29daf3a464dc7cd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b3950bed95136ad2b5e037e29daf3a464dc7cd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b3950bed95136ad2b5e037e29daf3a464dc7cd5/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c32ab8232a40d8bb982c0ac13864d2290dc9336", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c32ab8232a40d8bb982c0ac13864d2290dc9336", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c32ab8232a40d8bb982c0ac13864d2290dc9336"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "8045193771566e4a102c44e2dea242a73b2ef1f4", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b3950bed95136ad2b5e037e29daf3a464dc7cd5/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b3950bed95136ad2b5e037e29daf3a464dc7cd5/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=5b3950bed95136ad2b5e037e29daf3a464dc7cd5", "patch": "@@ -6274,9 +6274,9 @@ package body Sem_Attr is\n          if Is_OK_Static_Expression (E1) then\n             Val := Expr_Value (E1);\n \n-            if Val < -(2 ** UI_From_Int (Standard'Address_Size - 1))\n+            if Val < -(Uint_2 ** (System_Address_Size - 1))\n                  or else\n-               Val > 2 ** UI_From_Int (Standard'Address_Size) - 1\n+               Val > Uint_2 ** System_Address_Size - 1\n             then\n                Error_Attr (\"address value out of range for % attribute\", E1);\n             end if;\n@@ -6293,7 +6293,7 @@ package body Sem_Attr is\n             elsif Val < 0 then\n                Set_Etype (E1, Universal_Integer);\n \n-            --  Otherwise set type to Unsigned_64 to accommodate max values\n+            --  Otherwise set type to Unsigned_64 to accommodate large values\n \n             else\n                Set_Etype (E1, Standard_Unsigned_64);"}]}