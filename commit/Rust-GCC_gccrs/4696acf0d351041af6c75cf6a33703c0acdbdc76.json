{"sha": "4696acf0d351041af6c75cf6a33703c0acdbdc76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY5NmFjZjBkMzUxMDQxYWY2Yzc1Y2Y2YTMzNzAzYzBhY2RiZGM3Ng==", "commit": {"author": {"name": "Zhenqiang Chen", "email": "zhenqiang.chen@arm.com", "date": "2014-11-17T06:29:07Z"}, "committer": {"name": "Zhenqiang Chen", "email": "zqchen@gcc.gnu.org", "date": "2014-11-17T06:29:07Z"}, "message": "ifcvt.c (HAVE_cbranchcc4): Define.\n\n2014-11-17  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n\n\t* ifcvt.c (HAVE_cbranchcc4): Define.\n\t(noce_emit_cmove, noce_get_alt_condition, noce_get_condition):\n\tUse HAVE_cbranchcc4.\n\nFrom-SVN: r217646", "tree": {"sha": "b2395bb473ccd137806864ffd07515289c968e31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2395bb473ccd137806864ffd07515289c968e31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4696acf0d351041af6c75cf6a33703c0acdbdc76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4696acf0d351041af6c75cf6a33703c0acdbdc76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4696acf0d351041af6c75cf6a33703c0acdbdc76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4696acf0d351041af6c75cf6a33703c0acdbdc76/comments", "author": null, "committer": null, "parents": [{"sha": "7dd236702d11b60084560f56b0c3ffdd197c885a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dd236702d11b60084560f56b0c3ffdd197c885a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dd236702d11b60084560f56b0c3ffdd197c885a"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "bf36bc2c5b532aa81904f965cfbb3f0b702fc58c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4696acf0d351041af6c75cf6a33703c0acdbdc76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4696acf0d351041af6c75cf6a33703c0acdbdc76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4696acf0d351041af6c75cf6a33703c0acdbdc76", "patch": "@@ -1,3 +1,9 @@\n+2014-11-17  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n+\n+\t* ifcvt.c (HAVE_cbranchcc4): Define.\n+\t(noce_emit_cmove, noce_get_alt_condition, noce_get_condition):\n+\tUse HAVE_cbranchcc4.\n+\n 2014-11-17  Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n \n \t* config/aarch64/aarch64.c (aarch64_code_to_ccmode,"}, {"sha": "21f08c218e741253ab14675e3ab05c9055437813", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4696acf0d351041af6c75cf6a33703c0acdbdc76/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4696acf0d351041af6c75cf6a33703c0acdbdc76/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=4696acf0d351041af6c75cf6a33703c0acdbdc76", "patch": "@@ -75,6 +75,10 @@\n    + 1)\n #endif\n \n+#ifndef HAVE_cbranchcc4\n+#define HAVE_cbranchcc4 0\n+#endif\n+\n #define IFCVT_MULTIPLE_DUMPS 1\n \n #define NULL_BLOCK\t((basic_block) NULL)\n@@ -1459,10 +1463,16 @@ noce_emit_cmove (struct noce_if_info *if_info, rtx x, enum rtx_code code,\n       end_sequence ();\n     }\n \n-  /* Don't even try if the comparison operands are weird.  */\n+  /* Don't even try if the comparison operands are weird\n+     except that the target supports cbranchcc4.  */\n   if (! general_operand (cmp_a, GET_MODE (cmp_a))\n       || ! general_operand (cmp_b, GET_MODE (cmp_b)))\n-    return NULL_RTX;\n+    {\n+      if (!(HAVE_cbranchcc4)\n+\t  || GET_MODE_CLASS (GET_MODE (cmp_a)) != MODE_CC\n+\t  || cmp_b != const0_rtx)\n+\treturn NULL_RTX;\n+    }\n \n #if HAVE_conditional_move\n   unsignedp = (code == LTU || code == GEU\n@@ -1909,7 +1919,7 @@ noce_get_alt_condition (struct noce_if_info *if_info, rtx target,\n     }\n \n   cond = canonicalize_condition (if_info->jump, cond, reverse,\n-\t\t\t\t earliest, target, false, true);\n+\t\t\t\t earliest, target, HAVE_cbranchcc4, true);\n   if (! cond || ! reg_mentioned_p (target, cond))\n     return NULL;\n \n@@ -2401,7 +2411,7 @@ noce_get_condition (rtx_insn *jump, rtx_insn **earliest, bool then_else_reversed\n   /* Otherwise, fall back on canonicalize_condition to do the dirty\n      work of manipulating MODE_CC values and COMPARE rtx codes.  */\n   tmp = canonicalize_condition (jump, cond, reverse, earliest,\n-\t\t\t\tNULL_RTX, false, true);\n+\t\t\t\tNULL_RTX, HAVE_cbranchcc4, true);\n \n   /* We don't handle side-effects in the condition, like handling\n      REG_INC notes and making sure no duplicate conditions are emitted.  */"}]}