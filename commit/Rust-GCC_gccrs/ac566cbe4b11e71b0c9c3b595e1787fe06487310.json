{"sha": "ac566cbe4b11e71b0c9c3b595e1787fe06487310", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM1NjZjYmU0YjExZTcxYjBjOWMzYjU5NWUxNzg3ZmUwNjQ4NzMxMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-27T13:22:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-27T13:22:48Z"}, "message": "[multiple changes]\n\n2016-04-27  Arnaud Charlet  <charleT@adacore.com>\n\n\t* sinput-l.ads, sem_ch13.adb: Minor editing.\n\n2016-04-27  Doug Rupp  <rupp@adacore.com>\n\n\t* init.c (__gnat_adjust_context_for_raise) [arm-linux thumb]:\n\tBump the pc so the lower order bit is set.\n\n2016-04-27  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_case.adb, sem_case.ads (NO_Op): If appropriate warning is\n\tenabled, report an empty range in a case construct.\n\nFrom-SVN: r235503", "tree": {"sha": "888a982c8d5a20b6f3cf5a35c09d9e6708edb2a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/888a982c8d5a20b6f3cf5a35c09d9e6708edb2a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac566cbe4b11e71b0c9c3b595e1787fe06487310", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac566cbe4b11e71b0c9c3b595e1787fe06487310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac566cbe4b11e71b0c9c3b595e1787fe06487310", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac566cbe4b11e71b0c9c3b595e1787fe06487310/comments", "author": null, "committer": null, "parents": [{"sha": "6616e390695caad491386d19621b4014efaf394f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6616e390695caad491386d19621b4014efaf394f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6616e390695caad491386d19621b4014efaf394f"}], "stats": {"total": 46, "additions": 35, "deletions": 11}, "files": [{"sha": "a69659d6e3dadbe8711b38609ded294219032818", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac566cbe4b11e71b0c9c3b595e1787fe06487310/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac566cbe4b11e71b0c9c3b595e1787fe06487310/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ac566cbe4b11e71b0c9c3b595e1787fe06487310", "patch": "@@ -1,3 +1,17 @@\n+2016-04-27  Arnaud Charlet  <charleT@adacore.com>\n+\n+\t* sinput-l.ads, sem_ch13.adb: Minor editing.\n+\n+2016-04-27  Doug Rupp  <rupp@adacore.com>\n+\n+\t* init.c (__gnat_adjust_context_for_raise) [arm-linux thumb]:\n+\tBump the pc so the lower order bit is set.\n+\n+2016-04-27  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_case.adb, sem_case.ads (NO_Op): If appropriate warning is\n+\tenabled, report an empty range in a case construct.\n+\n 2016-04-27  Arnaud Charlet  <charlet@adacore.com>\n \n \t* sinput.ads, a-cfdlli.adb, a-crbtgo.adb, a-chtgop.adb, a-cbhama.adb,"}, {"sha": "440a068d2721253402a380ed1006329f9ec45e86", "filename": "gcc/ada/init.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac566cbe4b11e71b0c9c3b595e1787fe06487310/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac566cbe4b11e71b0c9c3b595e1787fe06487310/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=ac566cbe4b11e71b0c9c3b595e1787fe06487310", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2015, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2016, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -503,6 +503,11 @@ __gnat_adjust_context_for_raise (int signo ATTRIBUTE_UNUSED, void *ucontext)\n #elif defined (__ARMEL__)\n   /* ARM Bump has to be an even number because of odd/even architecture.  */\n   mcontext->arm_pc+=2;\n+#ifdef __thumb2__\n+  /* For thumb, the return address much have the low order bit set, otherwise\n+     the unwwinder will reset to \"arm\" mode upon return.  It's a feature.  */\n+  mcontext->arm_pc+=1;\n+#endif\n #endif\n }\n "}, {"sha": "ee845ee19475b29863f3d4e8be389589726bff03", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac566cbe4b11e71b0c9c3b595e1787fe06487310/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac566cbe4b11e71b0c9c3b595e1787fe06487310/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=ac566cbe4b11e71b0c9c3b595e1787fe06487310", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1126,9 +1126,13 @@ package body Sem_Case is\n    -----------\n \n    procedure No_OP (C : Node_Id) is\n-      pragma Warnings (Off, C);\n    begin\n-      null;\n+      if Nkind (C) = N_Range and then Warn_On_Redundant_Constructs then\n+         Error_Msg_N (\"choice is an empty range?\", C);\n+\n+      else\n+         null;\n+      end if;\n    end No_OP;\n \n    -----------------------------"}, {"sha": "9e9e82833c62ed157a56030bcb7401dbb3e2ddf8", "filename": "gcc/ada/sem_case.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac566cbe4b11e71b0c9c3b595e1787fe06487310/gcc%2Fada%2Fsem_case.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac566cbe4b11e71b0c9c3b595e1787fe06487310/gcc%2Fada%2Fsem_case.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.ads?ref=ac566cbe4b11e71b0c9c3b595e1787fe06487310", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -86,9 +86,10 @@ with Types; use Types;\n package Sem_Case is\n \n    procedure No_OP (C : Node_Id);\n-   --  The no-operation routine. Does absolutely nothing. Can be used\n+   --  The no-operation routine. Does mostly nothing. Can be used\n    --  in the following generics for the parameters Process_Empty_Choice,\n-   --  or Process_Associated_Node.\n+   --  or Process_Associated_Node. In the case of an empty range choice,\n+   --  routine emits a warning when Warn_On_Redundant_Constructs is enabled.\n \n    generic\n       with procedure Process_Associated_Node (A : Node_Id);"}, {"sha": "8afc5429e484c02871e57c07804b8a3671d9021a", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac566cbe4b11e71b0c9c3b595e1787fe06487310/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac566cbe4b11e71b0c9c3b595e1787fe06487310/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=ac566cbe4b11e71b0c9c3b595e1787fe06487310", "patch": "@@ -6202,8 +6202,8 @@ package body Sem_Ch13 is\n    -----------------------------------------------\n \n    procedure Analyze_Enumeration_Representation_Clause (N : Node_Id) is\n-      Ident    : constant Node_Id    := Identifier (N);\n-      Aggr     : constant Node_Id    := Array_Aggregate (N);\n+      Ident    : constant Node_Id := Identifier (N);\n+      Aggr     : constant Node_Id := Array_Aggregate (N);\n       Enumtype : Entity_Id;\n       Elit     : Entity_Id;\n       Expr     : Node_Id;"}, {"sha": "9cb29482f6139ec0cda295fe49aba5a7e8f28a9f", "filename": "gcc/ada/sinput-l.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac566cbe4b11e71b0c9c3b595e1787fe06487310/gcc%2Fada%2Fsinput-l.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac566cbe4b11e71b0c9c3b595e1787fe06487310/gcc%2Fada%2Fsinput-l.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.ads?ref=ac566cbe4b11e71b0c9c3b595e1787fe06487310", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -119,7 +119,7 @@ private\n       --  be applied, used to ensure that no incorrect adjustments are\n       --  made. Really it is a bug if anyone ever tries to adjust outside\n       --  this range, but since we are only doing this anyway for getting\n-      --  better error messages, it is not critical\n+      --  better error messages, it is not critical.\n \n    end record;\n "}]}