{"sha": "925be47cd54bcdb5e6da71a37de22ca08f367f83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI1YmU0N2NkNTRiY2RiNWU2ZGE3MWEzN2RlMjJjYTA4ZjM2N2Y4Mw==", "commit": {"author": {"name": "David S. Miller", "email": "davem@pierdol.cobaltnet.com", "date": "1998-10-16T01:23:51Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "1998-10-16T01:23:51Z"}, "message": "cse.c (cse_basic_block): Fixup hash flushing loop so we do not accidently walk into the free list.\n\n\t* cse.c (cse_basic_block): Fixup hash flushing loop so we do not\n\taccidently walk into the free list.  Comment how that can happen.\n\t(invalidate): Fix indentation.\n\nFrom-SVN: r23122", "tree": {"sha": "9def81cd0e6f0f1c919ba36f812a91b498a74a73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9def81cd0e6f0f1c919ba36f812a91b498a74a73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/925be47cd54bcdb5e6da71a37de22ca08f367f83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/925be47cd54bcdb5e6da71a37de22ca08f367f83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/925be47cd54bcdb5e6da71a37de22ca08f367f83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/925be47cd54bcdb5e6da71a37de22ca08f367f83/comments", "author": null, "committer": null, "parents": [{"sha": "748f2a2298e1b15954f5d113b4dba07fa8231bc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/748f2a2298e1b15954f5d113b4dba07fa8231bc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/748f2a2298e1b15954f5d113b4dba07fa8231bc6"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "36aff77a3f9ad2b5ccac3f12453c6012746bbc76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/925be47cd54bcdb5e6da71a37de22ca08f367f83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/925be47cd54bcdb5e6da71a37de22ca08f367f83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=925be47cd54bcdb5e6da71a37de22ca08f367f83", "patch": "@@ -1,3 +1,9 @@\n+Fri Oct 16 08:13:46 1998  David S. Miller  <davem@pierdol.cobaltnet.com>\n+\n+\t* cse.c (cse_basic_block): Fixup hash flushing loop so we do not\n+\taccidently walk into the free list.  Comment how that can happen.\n+\t(invalidate): Fix indentation.\n+\n Thu Oct 15 23:53:29 1998 Bernd Schmidt <crux@pool.informatik.rwth-aachen.de>\n \t\t\t Jeffrey A Law  (law@cygnus.com)\n "}, {"sha": "7e64ef305f2ed98a60d63bdb2e29ee509cb73643", "filename": "gcc/cse.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/925be47cd54bcdb5e6da71a37de22ca08f367f83/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/925be47cd54bcdb5e6da71a37de22ca08f367f83/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=925be47cd54bcdb5e6da71a37de22ca08f367f83", "patch": "@@ -1651,7 +1651,7 @@ invalidate (x, full_mode)\n \t\t  tendregno\n \t\t    = tregno + HARD_REGNO_NREGS (tregno, GET_MODE (p->exp));\n \t\t  if (tendregno > regno && tregno < endregno)\n-\t\t  remove_from_table (p, hash);\n+\t\t    remove_from_table (p, hash);\n \t\t}\n \t}\n \n@@ -8706,7 +8706,7 @@ cse_basic_block (from, to, next_branch, around_loop)\n     {\n       register enum rtx_code code = GET_CODE (insn);\n       int i;\n-      struct table_elt *p, *next;\n+      struct table_elt *p;\n \n       /* If we have processed 1,000 insns, flush the hash table to\n \t avoid extreme quadratic behavior.  We must not include NOTEs\n@@ -8720,10 +8720,10 @@ cse_basic_block (from, to, next_branch, around_loop)\n       if (code != NOTE && num_insns++ > 1000)\n \t{\n \t  for (i = 0; i < NBUCKETS; i++)\n-\t    for (p = table[i]; p; p = next)\n+\t    for (p = table[i]; p; p = table[i])\n \t      {\n-\t\tnext = p->next_same_hash;\n-\n+\t\t/* Note that invalidate can remove elements\n+\t\t   after P in the current hash chain.  */\n \t\tif (GET_CODE (p->exp) == REG)\n \t\t  invalidate (p->exp, p->mode);\n \t\telse"}]}