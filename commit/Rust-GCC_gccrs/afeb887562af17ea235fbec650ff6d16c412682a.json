{"sha": "afeb887562af17ea235fbec650ff6d16c412682a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZlYjg4NzU2MmFmMTdlYTIzNWZiZWM2NTBmZjZkMTZjNDEyNjgyYQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-11-14T12:12:26Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-11-14T12:12:26Z"}, "message": "Remove usage of CIF_MAX_INLINE_INSNS_SINGLE_O2_LIMIT.\n\n2019-11-14  Martin Liska  <mliska@suse.cz>\n\n\t* ipa-inline.c (want_inline_small_function_p): Use\n\tCIF_MAX_INLINE_INSNS_AUTO_LIMIT instead\n\tof CIF_MAX_INLINE_INSNS_SINGLE_O2_LIMIT.\n\nFrom-SVN: r278219", "tree": {"sha": "9d19f5c4748bbee7c0a6c04e61225f7ec880065d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d19f5c4748bbee7c0a6c04e61225f7ec880065d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afeb887562af17ea235fbec650ff6d16c412682a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afeb887562af17ea235fbec650ff6d16c412682a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afeb887562af17ea235fbec650ff6d16c412682a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afeb887562af17ea235fbec650ff6d16c412682a/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78a502caec5371cf5d107c3a6cf944bac0aaeb7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a502caec5371cf5d107c3a6cf944bac0aaeb7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78a502caec5371cf5d107c3a6cf944bac0aaeb7c"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "348cc4107decdaddd563b8958c9a077e2c370c49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afeb887562af17ea235fbec650ff6d16c412682a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afeb887562af17ea235fbec650ff6d16c412682a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afeb887562af17ea235fbec650ff6d16c412682a", "patch": "@@ -1,3 +1,9 @@\n+2019-11-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-inline.c (want_inline_small_function_p): Use\n+\tCIF_MAX_INLINE_INSNS_AUTO_LIMIT instead\n+\tof CIF_MAX_INLINE_INSNS_SINGLE_O2_LIMIT.\n+\n 2019-11-14  Martin Liska  <mliska@suse.cz>\n \n \t* ipa-cp.c (devirtualization_time_bonus): Use opt_for_fn"}, {"sha": "e27859ba5d3634beed89117d53e3bd0257c8d659", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afeb887562af17ea235fbec650ff6d16c412682a/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afeb887562af17ea235fbec650ff6d16c412682a/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=afeb887562af17ea235fbec650ff6d16c412682a", "patch": "@@ -820,10 +820,7 @@ want_inline_small_function_p (struct cgraph_edge *e, bool report)\n \t\t- ipa_call_summaries->get (e)->call_stmt_size\n \t      > inline_insns_auto (e->caller, true))\n     {\n-      if (opt_for_fn (e->caller->decl, optimize) >= 3)\n-        e->inline_failed = CIF_MAX_INLINE_INSNS_AUTO_LIMIT;\n-      else\n-        e->inline_failed = CIF_MAX_INLINE_INSNS_AUTO_O2_LIMIT;\n+      e->inline_failed = CIF_MAX_INLINE_INSNS_AUTO_LIMIT;\n       want_inline = false;\n     }\n   else if ((DECL_DECLARED_INLINE_P (callee->decl)\n@@ -838,8 +835,8 @@ want_inline_small_function_p (struct cgraph_edge *e, bool report)\n \t\t\t    : CIF_MAX_INLINE_INSNS_AUTO_LIMIT);\n       else\n \te->inline_failed = (DECL_DECLARED_INLINE_P (callee->decl)\n-\t\t\t    ? CIF_MAX_INLINE_INSNS_SINGLE_O2_LIMIT\n-\t\t\t    : CIF_MAX_INLINE_INSNS_AUTO_O2_LIMIT);\n+\t\t\t      ? CIF_MAX_INLINE_INSNS_SINGLE_O2_LIMIT\n+\t\t\t      : CIF_MAX_INLINE_INSNS_AUTO_LIMIT);\n       want_inline = false;\n     }\n   else\n@@ -893,10 +890,7 @@ want_inline_small_function_p (struct cgraph_edge *e, bool report)\n           if (growth >= inline_insns_single (e->caller, false)\n \t      || growth_positive_p (callee, e, growth))\n \t    {\n-\t      if (opt_for_fn (e->caller->decl, optimize) >= 3)\n-\t\te->inline_failed = CIF_MAX_INLINE_INSNS_AUTO_LIMIT;\n-\t      else\n-\t\te->inline_failed = CIF_MAX_INLINE_INSNS_AUTO_O2_LIMIT;\n+\t      e->inline_failed = CIF_MAX_INLINE_INSNS_AUTO_LIMIT;\n \t      want_inline = false;\n  \t    }\n \t}"}]}