{"sha": "d672c0afbb6c41ddf89b17fc78304f712e3d9db4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY3MmMwYWZiYjZjNDFkZGY4OWIxN2ZjNzgzMDRmNzEyZTNkOWRiNA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2020-01-08T13:43:27Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2020-01-08T13:43:27Z"}, "message": "* gcc/doc/install.texi: Typo.\n\nFrom-SVN: r280002", "tree": {"sha": "b60a824ed60c0ae273e9def97415f67f6202ed2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b60a824ed60c0ae273e9def97415f67f6202ed2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d672c0afbb6c41ddf89b17fc78304f712e3d9db4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d672c0afbb6c41ddf89b17fc78304f712e3d9db4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d672c0afbb6c41ddf89b17fc78304f712e3d9db4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d672c0afbb6c41ddf89b17fc78304f712e3d9db4/comments", "author": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f74c4b2c4427a4309d48bfc45bc140422a75aa6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f74c4b2c4427a4309d48bfc45bc140422a75aa6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f74c4b2c4427a4309d48bfc45bc140422a75aa6f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e62b3dae545eda83805f57f0b4b29954a2f38800", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d672c0afbb6c41ddf89b17fc78304f712e3d9db4/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d672c0afbb6c41ddf89b17fc78304f712e3d9db4/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=d672c0afbb6c41ddf89b17fc78304f712e3d9db4", "patch": "@@ -2322,7 +2322,7 @@ multilibs for @samp{double}, whereas the second option implies\n that @samp{long double} --- and hence also @samp{double} --- is always\n 32@tie{}bits wide.\n \n-@item --with-double-comparison=@{tristate|3|bool|2|libf7@}\n+@item --with-double-comparison=@{tristate|bool|libf7@}\n Only supported for the AVR target since version@tie{}10.\n Specify what result format is returned by library functions that\n compare 64-bit floating point values (@code{DFmode})."}]}