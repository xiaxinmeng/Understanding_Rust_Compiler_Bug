{"sha": "6d06971da12fb1b8730257abbd49447760baed8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQwNjk3MWRhMTJmYjFiODczMDI1N2FiYmQ0OTQ0Nzc2MGJhZWQ4ZA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2017-03-16T10:03:11Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2017-03-16T10:03:11Z"}, "message": "[AArch64] Use 'x' constraint for vector HFmode multiplication by indexed element instructions\n\n\t* config/aarch64/iterators.md (h_con): Return \"x\" for V4HF and V8HF.\n\t* config/aarch64/aarch64-simd.md (*aarch64_fma4_elt_from_dup<mode>):\n\tUse h_con constraint for operand 1.\n\t(*aarch64_fnma4_elt_from_dup<mode>): Likewise.\n\t(*aarch64_mulx_elt_from_dup<mode>): Likewise for operand 2.\n\nFrom-SVN: r246189", "tree": {"sha": "e1cbe23b379d4b53d399e49fc76d2dc8d557e8dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1cbe23b379d4b53d399e49fc76d2dc8d557e8dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d06971da12fb1b8730257abbd49447760baed8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d06971da12fb1b8730257abbd49447760baed8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d06971da12fb1b8730257abbd49447760baed8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d06971da12fb1b8730257abbd49447760baed8d/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f5a3ad8ae5a51a9418d0fa3482198ec4f0a89a44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5a3ad8ae5a51a9418d0fa3482198ec4f0a89a44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5a3ad8ae5a51a9418d0fa3482198ec4f0a89a44"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "e2e1015911f70eb34466d3f11b8cc2e89e8e2ce0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d06971da12fb1b8730257abbd49447760baed8d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d06971da12fb1b8730257abbd49447760baed8d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d06971da12fb1b8730257abbd49447760baed8d", "patch": "@@ -1,3 +1,11 @@\n+2017-03-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/iterators.md (h_con): Return \"x\" for V4HF and V8HF.\n+\t* config/aarch64/aarch64-simd.md (*aarch64_fma4_elt_from_dup<mode>):\n+\tUse h_con constraint for operand 1.\n+\t(*aarch64_fnma4_elt_from_dup<mode>): Likewise.\n+\t(*aarch64_mulx_elt_from_dup<mode>): Likewise for operand 2.\n+\n 2017-03-15  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/71437"}, {"sha": "8a3a551f73fd32c35774ed069e9448c5b0067019", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d06971da12fb1b8730257abbd49447760baed8d/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d06971da12fb1b8730257abbd49447760baed8d/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=6d06971da12fb1b8730257abbd49447760baed8d", "patch": "@@ -1647,7 +1647,7 @@\n   [(set (match_operand:VMUL 0 \"register_operand\" \"=w\")\n     (fma:VMUL\n       (vec_duplicate:VMUL\n-\t  (match_operand:<VEL> 1 \"register_operand\" \"w\"))\n+\t  (match_operand:<VEL> 1 \"register_operand\" \"<h_con>\"))\n       (match_operand:VMUL 2 \"register_operand\" \"w\")\n       (match_operand:VMUL 3 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n@@ -1726,7 +1726,7 @@\n       (neg:VMUL\n         (match_operand:VMUL 2 \"register_operand\" \"w\"))\n       (vec_duplicate:VMUL\n-\t(match_operand:<VEL> 1 \"register_operand\" \"w\"))\n+\t(match_operand:<VEL> 1 \"register_operand\" \"<h_con>\"))\n       (match_operand:VMUL 3 \"register_operand\" \"0\")))]\n   \"TARGET_SIMD\"\n   \"fmls\\t%0.<Vtype>, %2.<Vtype>, %1.<Vetype>[0]\"\n@@ -3178,7 +3178,7 @@\n \t(unspec:VHSDF\n \t [(match_operand:VHSDF 1 \"register_operand\" \"w\")\n \t  (vec_duplicate:VHSDF\n-\t    (match_operand:<VEL> 2 \"register_operand\" \"w\"))]\n+\t    (match_operand:<VEL> 2 \"register_operand\" \"<h_con>\"))]\n \t UNSPEC_FMULX))]\n   \"TARGET_SIMD\"\n   \"fmulx\\t%0.<Vtype>, %1.<Vtype>, %2.<Vetype>[0]\";"}, {"sha": "43be7fd361116d305b0300a814ffca82a9c44a88", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d06971da12fb1b8730257abbd49447760baed8d/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d06971da12fb1b8730257abbd49447760baed8d/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=6d06971da12fb1b8730257abbd49447760baed8d", "patch": "@@ -749,11 +749,11 @@\n \t\t\t\t    (DF   \"to_128\") (V2DF  \"to_64\")])\n \n ;; For certain vector-by-element multiplication instructions we must\n-;; constrain the HI cases to use only V0-V15.  This is covered by\n+;; constrain the 16-bit cases to use only V0-V15.  This is covered by\n ;; the 'x' constraint.  All other modes may use the 'w' constraint.\n (define_mode_attr h_con [(V2SI \"w\") (V4SI \"w\")\n \t\t\t (V4HI \"x\") (V8HI \"x\")\n-\t\t\t (V4HF \"w\") (V8HF \"w\")\n+\t\t\t (V4HF \"x\") (V8HF \"x\")\n \t\t\t (V2SF \"w\") (V4SF \"w\")\n \t\t\t (V2DF \"w\") (DF \"w\")])\n "}]}