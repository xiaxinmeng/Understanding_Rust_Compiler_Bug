{"sha": "653109bdf206ff0fa3fc0a73d8144f91066ab2c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUzMTA5YmRmMjA2ZmYwZmEzZmMwYTczZDgxNDRmOTEwNjZhYjJjNA==", "commit": {"author": {"name": "Lee Millward", "email": "lee.millward@codesourcery.com", "date": "2006-08-21T17:41:18Z"}, "committer": {"name": "Lee Millward", "email": "lmillward@gcc.gnu.org", "date": "2006-08-21T17:41:18Z"}, "message": "re PR c++/28741 (ICE with static member in invalid template class)\n\n        PR c++/28741\n        * tree.c (decl_anon_ns_mem_p): Robustify.\n        * decl2.c (determine_visibility): Likewise.\n\n        * g++.dg/template/void7.C: New test.\n\nFrom-SVN: r116303", "tree": {"sha": "661f91dbd081e065fa90c558a7d00cd684aa2e99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/661f91dbd081e065fa90c558a7d00cd684aa2e99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/653109bdf206ff0fa3fc0a73d8144f91066ab2c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/653109bdf206ff0fa3fc0a73d8144f91066ab2c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/653109bdf206ff0fa3fc0a73d8144f91066ab2c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/653109bdf206ff0fa3fc0a73d8144f91066ab2c4/comments", "author": null, "committer": null, "parents": [{"sha": "623c65f1732d0ee0fc163921272d152b50211710", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/623c65f1732d0ee0fc163921272d152b50211710", "html_url": "https://github.com/Rust-GCC/gccrs/commit/623c65f1732d0ee0fc163921272d152b50211710"}], "stats": {"total": 45, "additions": 32, "deletions": 13}, "files": [{"sha": "758f877187fea5995c62691d3ea4fb9a6430fe11", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653109bdf206ff0fa3fc0a73d8144f91066ab2c4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653109bdf206ff0fa3fc0a73d8144f91066ab2c4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=653109bdf206ff0fa3fc0a73d8144f91066ab2c4", "patch": "@@ -7,6 +7,10 @@\n \t PR c++/28505\n         * decl.c (grokdeclarator): Return early after\n         issuing diagnostic about an incomplete type.\n+\n+\tPR c++/28741\n+        * tree.c (decl_anon_ns_mem_p): Robustify.\n+        * decl2.c (determine_visibility): Likewise.\n \t\n 2006-08-20  Mark Mitchell  <mark@codesourcery.com>\n "}, {"sha": "0de2756620e8cd10dc0a7d8acea3cc3110fba295", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653109bdf206ff0fa3fc0a73d8144f91066ab2c4/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653109bdf206ff0fa3fc0a73d8144f91066ab2c4/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=653109bdf206ff0fa3fc0a73d8144f91066ab2c4", "patch": "@@ -1753,20 +1753,24 @@ determine_visibility (tree decl)\n \t\t    ? TYPE_TEMPLATE_INFO (TREE_TYPE (decl))\n \t\t    : DECL_TEMPLATE_INFO (decl));\n       tree args = TI_ARGS (tinfo);\n-      int depth = TMPL_ARGS_DEPTH (args);\n-      tree pattern = DECL_TEMPLATE_RESULT (TI_TEMPLATE (tinfo));\n-\n-      if (!DECL_VISIBILITY_SPECIFIED (decl))\n+      \n+      if (args != error_mark_node)\n \t{\n-\t  DECL_VISIBILITY (decl) = DECL_VISIBILITY (pattern);\n-\t  DECL_VISIBILITY_SPECIFIED (decl)\n-\t    = DECL_VISIBILITY_SPECIFIED (pattern);\n-\t}\n+\t  int depth = TMPL_ARGS_DEPTH (args);\n+\t  tree pattern = DECL_TEMPLATE_RESULT (TI_TEMPLATE (tinfo));\n+\n+\t  if (!DECL_VISIBILITY_SPECIFIED (decl))\n+\t    {\n+\t      DECL_VISIBILITY (decl) = DECL_VISIBILITY (pattern);\n+\t      DECL_VISIBILITY_SPECIFIED (decl)\n+\t\t= DECL_VISIBILITY_SPECIFIED (pattern);\n+\t    }\n \n-      /* FIXME should TMPL_ARGS_DEPTH really return 1 for null input? */\n-      if (args && depth > template_class_depth (class_type))\n-\t/* Limit visibility based on its template arguments.  */\n-\tconstrain_visibility_for_template (decl, args);\n+\t  /* FIXME should TMPL_ARGS_DEPTH really return 1 for null input? */\n+\t  if (args && depth > template_class_depth (class_type))\n+\t    /* Limit visibility based on its template arguments.  */\n+\t    constrain_visibility_for_template (decl, args);\n+\t}\n     }\n \n   if (class_type)"}, {"sha": "bb579a6f739984977bec883b78e269e39ec02485", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653109bdf206ff0fa3fc0a73d8144f91066ab2c4/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653109bdf206ff0fa3fc0a73d8144f91066ab2c4/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=653109bdf206ff0fa3fc0a73d8144f91066ab2c4", "patch": "@@ -1393,7 +1393,7 @@ decl_anon_ns_mem_p (tree decl)\n {\n   while (1)\n     {\n-      if (decl == NULL_TREE)\n+      if (decl == NULL_TREE || decl == error_mark_node)\n \treturn false;\n       if (TREE_CODE (decl) == NAMESPACE_DECL\n \t  && DECL_NAME (decl) == NULL_TREE)"}, {"sha": "c40d5007caeb444ae9ee53a8f7e291c2785a8ee2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653109bdf206ff0fa3fc0a73d8144f91066ab2c4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653109bdf206ff0fa3fc0a73d8144f91066ab2c4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=653109bdf206ff0fa3fc0a73d8144f91066ab2c4", "patch": "@@ -6,6 +6,9 @@\n         PR c++/28505\n         * g++.dg/parse/ctor7.C: New test.\n         * g++.dg/parse/ctor8.C: Likewise.\n+\n+\tPR c++/28741\n+        * g++.dg/template/void7.C: New test. \n \t\n 2006-08-21  Olivier Hainque  <hainque@adacore.com>\n "}, {"sha": "2c464b3a055cfb27870d120e244240e9722c4e3d", "filename": "gcc/testsuite/g++.dg/template/void7.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653109bdf206ff0fa3fc0a73d8144f91066ab2c4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fvoid7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653109bdf206ff0fa3fc0a73d8144f91066ab2c4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fvoid7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fvoid7.C?ref=653109bdf206ff0fa3fc0a73d8144f91066ab2c4", "patch": "@@ -0,0 +1,8 @@\n+//PR c++/28741\n+\n+template<void> struct A         // { dg-error \"not a valid type\" }\n+{\n+  static int i;\n+};\n+\n+A<0> a;"}]}