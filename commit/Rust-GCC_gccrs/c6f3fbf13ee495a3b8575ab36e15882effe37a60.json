{"sha": "c6f3fbf13ee495a3b8575ab36e15882effe37a60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZmM2ZiZjEzZWU0OTVhM2I4NTc1YWIzNmUxNTg4MmVmZmUzN2E2MA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2005-07-04T18:17:26Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-07-04T18:17:26Z"}, "message": "compare1.c: Skip on arm*-*-eabi* arm*-*-symbianelf*.\n\n\t* gcc.dg/compare1.c: Skip on arm*-*-eabi* arm*-*-symbianelf*.\n\t* gcc.dg/compare9.c: New.\n\nFrom-SVN: r101604", "tree": {"sha": "f4c624ed8029b7d38a032cd93571a2b4d1d64496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4c624ed8029b7d38a032cd93571a2b4d1d64496"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6f3fbf13ee495a3b8575ab36e15882effe37a60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6f3fbf13ee495a3b8575ab36e15882effe37a60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6f3fbf13ee495a3b8575ab36e15882effe37a60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6f3fbf13ee495a3b8575ab36e15882effe37a60/comments", "author": null, "committer": null, "parents": [{"sha": "2238c11d7f3173e90758ed6176ff83a1945ad3ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2238c11d7f3173e90758ed6176ff83a1945ad3ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2238c11d7f3173e90758ed6176ff83a1945ad3ce"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "1f18a2959f3fd6bbefe58740c4fb55d81f5568e1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f3fbf13ee495a3b8575ab36e15882effe37a60/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f3fbf13ee495a3b8575ab36e15882effe37a60/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6f3fbf13ee495a3b8575ab36e15882effe37a60", "patch": "@@ -1,3 +1,8 @@\n+2005-07-04  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* gcc.dg/compare1.c: Skip on arm*-*-eabi* arm*-*-symbianelf*.\n+\t* gcc.dg/compare9.c: New.\n+\n 2005-07-04  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* gfortran.dg/io_invalid_1.f90: Fix expected error message."}, {"sha": "06049270c077c452452ce6a0b2afc4f1ee79f076", "filename": "gcc/testsuite/gcc.dg/compare1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f3fbf13ee495a3b8575ab36e15882effe37a60/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f3fbf13ee495a3b8575ab36e15882effe37a60/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare1.c?ref=c6f3fbf13ee495a3b8575ab36e15882effe37a60", "patch": "@@ -3,6 +3,9 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-Wsign-compare\" } */\n+/* This test would fail on targets with short enums being default.  See\n+   compare9.c.  */\n+/* { dg-skip-if \"\" { arm*-*-eabi* arm*-*-symbianelf* }  { \"*\" } { \"\" } } */\n \n int tf = 1;\n "}, {"sha": "e46e0641ade7ae38a6a3aee7380887b776c485ca", "filename": "gcc/testsuite/gcc.dg/compare9.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f3fbf13ee495a3b8575ab36e15882effe37a60/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f3fbf13ee495a3b8575ab36e15882effe37a60/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompare9.c?ref=c6f3fbf13ee495a3b8575ab36e15882effe37a60", "patch": "@@ -0,0 +1,42 @@\n+/* Test for a bogus warning on comparison between signed and unsigned.\n+   This was inspired by code in gcc.  This testcase is identical to\n+   compare1.c except that we add -fno-short-enums to accomodate\n+   targets with short enums being default, such as arm*-*-eabi* and\n+   arm*-*-symbianelf*.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-fno-short-enums -Wsign-compare\" } */\n+\n+int tf = 1;\n+\n+/* This enumeration has an explicit negative value and is therefore signed.  */\n+enum mm1 \n+{\n+  VOID, SI, DI, MAX = -1\n+};\n+\n+/* This enumeration fits entirely in a signed int, but is unsigned anyway.  */\n+enum mm2\n+{\n+  VOID2, SI2, DI2, MAX2\n+};\n+\n+int f(enum mm1 x)\n+{\n+  return x == (tf?DI:SI); /* { dg-bogus \"signed and unsigned\" \"case 1\" } */\n+}\n+\n+int g(enum mm1 x)\n+{\n+  return x == (tf?DI:-1); /* { dg-bogus \"signed and unsigned\" \"case 2\" } */\n+}\n+\n+int h(enum mm2 x)\n+{\n+  return x == (tf?DI2:SI2); /* { dg-bogus \"signed and unsigned\" \"case 3\" } */\n+}\n+\n+int i(enum mm2 x)\n+{\n+  return x == (tf?DI2:-1); /* { dg-warning \"signed and unsigned\" \"case 4\" } */\n+}"}]}