{"sha": "7eeb553cec1598b3cd5307f8be190af8bf155651", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VlYjU1M2NlYzE1OThiM2NkNTMwN2Y4YmUxOTBhZjhiZjE1NTY1MQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-03-02T11:48:38Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-03-02T11:48:38Z"}, "message": "typeck.c (build_static_cast): Allow enum to enum conversions as per DR 128.\n\ncp:\n\t* typeck.c (build_static_cast): Allow enum to enum conversions\n\tas per DR 128.\ntestsuite:\n\t* g++.old-deja/g++.other/enum3.C: New test.\n\nFrom-SVN: r40187", "tree": {"sha": "48b71b444a8fd5c2482b8c57727cb8077cb2d614", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48b71b444a8fd5c2482b8c57727cb8077cb2d614"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7eeb553cec1598b3cd5307f8be190af8bf155651", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eeb553cec1598b3cd5307f8be190af8bf155651", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eeb553cec1598b3cd5307f8be190af8bf155651", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eeb553cec1598b3cd5307f8be190af8bf155651/comments", "author": null, "committer": null, "parents": [{"sha": "d282fcb29aee561a8d60646d45333e5e89b4c5d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d282fcb29aee561a8d60646d45333e5e89b4c5d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d282fcb29aee561a8d60646d45333e5e89b4c5d4"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "389b9fc2dd41dda3f9fef0e901d178efe357899e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eeb553cec1598b3cd5307f8be190af8bf155651/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eeb553cec1598b3cd5307f8be190af8bf155651/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7eeb553cec1598b3cd5307f8be190af8bf155651", "patch": "@@ -1,3 +1,8 @@\n+2001-03-02  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* typeck.c (build_static_cast): Allow enum to enum conversions\n+\tas per DR 128.\n+\n 2001-03-02  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* class.c (check_field_decls): Pointers to member do not a"}, {"sha": "8b873422789f02b63301f20fb4d5813e6d3a41e1", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eeb553cec1598b3cd5307f8be190af8bf155651/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eeb553cec1598b3cd5307f8be190af8bf155651/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=7eeb553cec1598b3cd5307f8be190af8bf155651", "patch": "@@ -5093,6 +5093,13 @@ build_static_cast (type, expr)\n \t   && TREE_CODE (type) != FUNCTION_TYPE\n \t   && can_convert (intype, strip_all_pointer_quals (type)))\n     ok = 1;\n+  else if (TREE_CODE (intype) == ENUMERAL_TYPE\n+           && TREE_CODE (type) == ENUMERAL_TYPE)\n+    /* DR 128: \"A value of integral _or enumeration_ type can be explicitly\n+       converted to an enumeration type.\"\n+       The integral to enumeration will be accepted by the previous clause.\n+       We need to explicitly check for enumeration to enumeration.  */\n+    ok = 1;\n \n   /* [expr.static.cast]\n "}, {"sha": "94aa89216e9951e9884394820dc5ed7febd927a9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eeb553cec1598b3cd5307f8be190af8bf155651/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eeb553cec1598b3cd5307f8be190af8bf155651/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7eeb553cec1598b3cd5307f8be190af8bf155651", "patch": "@@ -1,3 +1,7 @@\n+2001-03-02  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.other/enum3.C: New test.\n+\n 2001-03-02  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.other/pod1.C: New test."}, {"sha": "c4303f6f46cc2f7d75baec21042e97aa5a5c6070", "filename": "gcc/testsuite/g++.old-deja/g++.other/enum3.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eeb553cec1598b3cd5307f8be190af8bf155651/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fenum3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eeb553cec1598b3cd5307f8be190af8bf155651/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fenum3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fenum3.C?ref=7eeb553cec1598b3cd5307f8be190af8bf155651", "patch": "@@ -0,0 +1,14 @@\n+// Build don't link:\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 28 Feb 2001 <nathan@codesourcery.com>\n+\n+// Bug 338 and DR 128. Allow static cast to convert between enums.\n+\n+enum E1 {e1};\n+enum E2 {e2};\n+\n+E2 Foo (E1 e)\n+{\n+  return static_cast <E2> (e);\n+}"}]}