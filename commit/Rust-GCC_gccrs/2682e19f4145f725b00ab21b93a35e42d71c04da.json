{"sha": "2682e19f4145f725b00ab21b93a35e42d71c04da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY4MmUxOWY0MTQ1ZjcyNWIwMGFiMjFiOTNhMzVlNDJkNzFjMDRkYQ==", "commit": {"author": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-04-29T10:28:05Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-04-29T10:28:05Z"}, "message": "* config.gcc: Pull list of cores from arm-cores.def.\n\nFrom-SVN: r81285", "tree": {"sha": "f5f02a81f32f3c7d083dedd4c7705fe7d896ab3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5f02a81f32f3c7d083dedd4c7705fe7d896ab3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2682e19f4145f725b00ab21b93a35e42d71c04da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2682e19f4145f725b00ab21b93a35e42d71c04da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2682e19f4145f725b00ab21b93a35e42d71c04da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2682e19f4145f725b00ab21b93a35e42d71c04da/comments", "author": null, "committer": null, "parents": [{"sha": "c520783756026a222b9b6fc0635100de0a2a2e53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c520783756026a222b9b6fc0635100de0a2a2e53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c520783756026a222b9b6fc0635100de0a2a2e53"}], "stats": {"total": 61, "additions": 29, "deletions": 32}, "files": [{"sha": "58488336d3f2d968bb0d434d6592fbbf9fc75234", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2682e19f4145f725b00ab21b93a35e42d71c04da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2682e19f4145f725b00ab21b93a35e42d71c04da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2682e19f4145f725b00ab21b93a35e42d71c04da", "patch": "@@ -1,3 +1,7 @@\n+2004-04-29  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config.gcc: Pull list of cores from arm-cores.def.\n+\n 2004-04-29  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* combine.c (combine_simplify_rtx): Adjust call to use\n@@ -23,20 +27,20 @@\n \n 2004-04-29  Uros Bizjak  <uros@kss-loka.si>\n \n-        * reg-stack.c (swap_to_top): New function.\n-        (subst_stack_regs_pat): UNSPEC_FPATAN, UNSPEC_FYL2X: Use\n-        swap_to_top().\n-        (subst_stack_regs_pat): UNSPEC_FSCALE: Remove.\n-        (subst_stack_regs_pat): Handle UNSPEC_FSCALE_FRACT and \n-        UNSPEC_FSCALE_EXP.\n-\n-        * config/i386/i386.md (UNSPEC_FSCALE): Remove.\n-        (*fscale_sfxf3, *fscale_dfxf3, *fscale_xf3): Remove insn pattern.\n-        (UNSPEC_FSCALE_FRACT, UNSPEC_FSCALE_EXP): New unspecs to represent\n-        x87's fscale insn.\n-        (*fscalexf4: Define new insn pattern to implement x87 fscale insn.\n-        (exp?f2, exp10?f2, exp2?f2): Use *fscalexf4 and float_truncate\n-        patterns.\n+\t* reg-stack.c (swap_to_top): New function.\n+\t(subst_stack_regs_pat): UNSPEC_FPATAN, UNSPEC_FYL2X: Use\n+\tswap_to_top().\n+\t(subst_stack_regs_pat): UNSPEC_FSCALE: Remove.\n+\t(subst_stack_regs_pat): Handle UNSPEC_FSCALE_FRACT and \n+\tUNSPEC_FSCALE_EXP.\n+\n+\t* config/i386/i386.md (UNSPEC_FSCALE): Remove.\n+\t(*fscale_sfxf3, *fscale_dfxf3, *fscale_xf3): Remove insn pattern.\n+\t(UNSPEC_FSCALE_FRACT, UNSPEC_FSCALE_EXP): New unspecs to represent\n+\tx87's fscale insn.\n+\t(*fscalexf4: Define new insn pattern to implement x87 fscale insn.\n+\t(exp?f2, exp10?f2, exp2?f2): Use *fscalexf4 and float_truncate\n+\tpatterns.\n \n 2004-04-28  Serge Belyshev  <1319@bot.ru>\n "}, {"sha": "314018ef13f370585c9846e23f20056b84646e13", "filename": "gcc/config.gcc", "status": "modified", "additions": 11, "deletions": 18, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2682e19f4145f725b00ab21b93a35e42d71c04da/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2682e19f4145f725b00ab21b93a35e42d71c04da/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=2682e19f4145f725b00ab21b93a35e42d71c04da", "patch": "@@ -2212,27 +2212,20 @@ fi\n \tarm*-*-*)\n \t\tsupported_defaults=\"arch cpu float tune fpu abi\"\n \t\tfor which in cpu tune; do\n+\t\t\t# See if it matches any of the entries in arm-cores.def\n \t\t\teval \"val=\\$with_$which\"\n-\t\t\tcase \"$val\" in\n-\t\t\t\"\" \\\n-\t\t\t| arm[236789] | arm250 | arm[67][01]0 \\\n-\t\t\t| arm60 | arm620 | arm7d | arm7di \\\n-\t\t\t| arm7m | arm7dm | arm7dmi | arm[79]tdmi \\\n-\t\t\t| arm70 | arm700i | arm710t | arm720 \\\n-\t\t\t| arm720t | arm740t | arm710c | arm920 \\\n-\t\t\t| arm920t | arm926ejs | arm940t | arm9e | arm10tdmi \\\n-\t\t\t| arm7100 | arm7500 | arm7500fe | arm810 \\\n-\t\t\t| arm1026ejs | arm1020t | arm1136js | arm1136jfs \\\n-\t\t\t| xscale | iwmmxt \\\n-\t\t\t| ep9312 \\\n-\t\t\t| strongarm | strongarm110 | strongarm11[01]0)\n-\t\t\t\t# OK\n-\t\t\t\t;;\n-\t\t\t*)\n+\t\t\t[ x\"$val\" = x ] && val=unset\n+\t\t\tfor opt in `sed -e '/ARM_CORE/!d' \\\n+\t\t\t  -e 's/ARM_CORE(\\([^,]*\\),.*$/\\1/' \\\n+\t\t\t  ${srcdir}/config/arm/arm-cores.def` unset .\n+\t\t\tdo\n+\t\t\t\t[ x$opt = x\"$val\" ] && break\n+\t\t\tdone\n+\t\t\tif [ $opt = . ]; then\n \t\t\t\techo \"Unknown CPU used in --with-$which=$val\" 1>&2\n \t\t\t\texit 1\n-\t\t\t\t;;\n-\t\t\tesac\n+\t\t\t  \n+\t\t\tfi\n \t\tdone\n \n \t\tcase \"$with_arch\" in"}]}