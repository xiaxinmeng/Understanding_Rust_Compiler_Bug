{"sha": "5b32ec103973c3b8f537c6e50fc8d954f27286de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIzMmVjMTAzOTczYzNiOGY1MzdjNmU1MGZjOGQ5NTRmMjcyODZkZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-06-15T07:25:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-06-15T07:25:13Z"}, "message": "re PR tree-optimization/86076 (ICE: verify_gimple failed (error: location references block not in block tree))\n\n2018-06-15  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/86076\n\t* tree-cfg.c (move_stmt_op): unshare invariant addresses\n\tbefore adjusting their block.\n\n\t* gcc.dg/pr86076.c: New testcase.\n\nFrom-SVN: r261620", "tree": {"sha": "8339b2aff1e9d29ab7aa60b7b6dd06cf3265a7d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8339b2aff1e9d29ab7aa60b7b6dd06cf3265a7d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b32ec103973c3b8f537c6e50fc8d954f27286de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b32ec103973c3b8f537c6e50fc8d954f27286de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b32ec103973c3b8f537c6e50fc8d954f27286de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b32ec103973c3b8f537c6e50fc8d954f27286de/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8ef8061e1ccbacff39065df65b5c17fbd01805a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8ef8061e1ccbacff39065df65b5c17fbd01805a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8ef8061e1ccbacff39065df65b5c17fbd01805a"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "8f95eb582f77dc675ec891424aa217c34c6d967c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b32ec103973c3b8f537c6e50fc8d954f27286de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b32ec103973c3b8f537c6e50fc8d954f27286de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b32ec103973c3b8f537c6e50fc8d954f27286de", "patch": "@@ -1,3 +1,9 @@\n+2018-06-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/86076\n+\t* tree-cfg.c (move_stmt_op): unshare invariant addresses\n+\tbefore adjusting their block.\n+\n 2018-06-15  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n \n \t* config.gcc (riscv*-*-elf* | riscv*-*-rtems*): Use custom"}, {"sha": "04278c6dcf0fd0087df9361153f60f31baf65c57", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b32ec103973c3b8f537c6e50fc8d954f27286de/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b32ec103973c3b8f537c6e50fc8d954f27286de/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b32ec103973c3b8f537c6e50fc8d954f27286de", "patch": "@@ -1,3 +1,8 @@\n+2018-06-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/86076\n+\t* gcc.dg/pr86076.c: New testcase.\n+\n 2018-06-14  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/86063"}, {"sha": "019ced3cbf5969e477b2e4b696f26c8afc9457c5", "filename": "gcc/testsuite/gcc.dg/pr86076.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b32ec103973c3b8f537c6e50fc8d954f27286de/gcc%2Ftestsuite%2Fgcc.dg%2Fpr86076.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b32ec103973c3b8f537c6e50fc8d954f27286de/gcc%2Ftestsuite%2Fgcc.dg%2Fpr86076.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr86076.c?ref=5b32ec103973c3b8f537c6e50fc8d954f27286de", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fno-tree-dce -fno-tree-pre -fno-tree-vrp --param max-loop-header-insns=1\" } */\n+\n+int __attribute__ ((noinline))\n+lv (int tm)\n+{\n+  (void) tm;\n+\n+  return 0;\n+}\n+\n+void\n+o7 (int uu)\n+{\n+  while (uu < 1)\n+    while (uu != 0)\n+      {\n+\tshort int ca;\n+\n+\tca = lv (0);\n+\t(void) ca;\n+\t++uu;\n+      }\n+\n+  lv (lv (0));\n+}"}, {"sha": "78d80b00045ed6ffb61765f519b9fc1029af2a07", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b32ec103973c3b8f537c6e50fc8d954f27286de/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b32ec103973c3b8f537c6e50fc8d954f27286de/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=5b32ec103973c3b8f537c6e50fc8d954f27286de", "patch": "@@ -6745,7 +6745,16 @@ move_stmt_op (tree *tp, int *walk_subtrees, void *data)\n \t;\n       else if (block == p->orig_block\n \t       || p->orig_block == NULL_TREE)\n-\tTREE_SET_BLOCK (t, p->new_block);\n+\t{\n+\t  /* tree_node_can_be_shared says we can share invariant\n+\t     addresses but unshare_expr copies them anyways.  Make sure\n+\t     to unshare before adjusting the block in place - we do not\n+\t     always see a copy here.  */\n+\t  if (TREE_CODE (t) == ADDR_EXPR\n+\t      && is_gimple_min_invariant (t))\n+\t    *tp = t = unshare_expr (t);\n+\t  TREE_SET_BLOCK (t, p->new_block);\n+\t}\n       else if (flag_checking)\n \t{\n \t  while (block && TREE_CODE (block) == BLOCK && block != p->orig_block)"}]}