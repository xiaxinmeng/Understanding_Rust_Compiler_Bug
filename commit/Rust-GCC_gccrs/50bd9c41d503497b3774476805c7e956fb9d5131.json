{"sha": "50bd9c41d503497b3774476805c7e956fb9d5131", "node_id": "C_kwDOANBUbNoAKDUwYmQ5YzQxZDUwMzQ5N2IzNzc0NDc2ODA1YzdlOTU2ZmI5ZDUxMzE", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-23T00:17:30Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-23T00:17:30Z"}, "message": "Daily bump.", "tree": {"sha": "bf654431b4072e629aeb40847f339da1630c9740", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf654431b4072e629aeb40847f339da1630c9740"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50bd9c41d503497b3774476805c7e956fb9d5131", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50bd9c41d503497b3774476805c7e956fb9d5131", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50bd9c41d503497b3774476805c7e956fb9d5131", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50bd9c41d503497b3774476805c7e956fb9d5131/comments", "author": null, "committer": null, "parents": [{"sha": "a495b738e4a89a8104798d005fd09474bbb916ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a495b738e4a89a8104798d005fd09474bbb916ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a495b738e4a89a8104798d005fd09474bbb916ff"}], "stats": {"total": 229, "additions": 228, "deletions": 1}, "files": [{"sha": "5653a565bd9d0955ec01075b6b0dde83ddee7d83", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bd9c41d503497b3774476805c7e956fb9d5131/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bd9c41d503497b3774476805c7e956fb9d5131/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=50bd9c41d503497b3774476805c7e956fb9d5131", "patch": "@@ -1,3 +1,7 @@\n+2023-03-22  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* MAINTAINERS: Add myself as OpenMP and libgomp maintainer.\n+\n 2023-03-10  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n \n \t* MAINTAINERS (Write After Approval): Add myself."}, {"sha": "b3275289719f2d230f1f1e23a03c1f7684bd8215", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bd9c41d503497b3774476805c7e956fb9d5131/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bd9c41d503497b3774476805c7e956fb9d5131/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50bd9c41d503497b3774476805c7e956fb9d5131", "patch": "@@ -1,3 +1,35 @@\n+2023-03-22  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\t* lra.cc (lra): Do not repeat inheritance and live range splitting\n+\twhen asm error is found.\n+\n+2023-03-22  Andrew Jenner  <andrew@codesourcery.com>\n+\n+\t* config/gcn/gcn-protos.h (gcn_expand_dpp_swap_pairs_insn)\n+\t(gcn_expand_dpp_distribute_even_insn)\n+\t(gcn_expand_dpp_distribute_odd_insn): Declare.\n+\t* config/gcn/gcn-valu.md (@dpp_swap_pairs<mode>)\n+\t(@dpp_distribute_even<mode>, @dpp_distribute_odd<mode>)\n+\t(cmul<conj_op><mode>3, cml<addsub_as><mode>4, vec_addsub<mode>3)\n+\t(cadd<rot><mode>3, vec_fmaddsub<mode>4, vec_fmsubadd<mode>4)\n+\t(fms<mode>4<exec>, fms<mode>4_negop2<exec>, fms<mode>4)\n+\t(fms<mode>4_negop2): New patterns.\n+\t* config/gcn/gcn.cc (gcn_expand_dpp_swap_pairs_insn)\n+\t(gcn_expand_dpp_distribute_even_insn)\n+\t(gcn_expand_dpp_distribute_odd_insn): New functions.\n+\t* config/gcn/gcn.md: Add entries to unspec enum.\n+\n+2023-03-22  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/109008\n+\t* value-range.cc (frange::set): Add nan_state argument.\n+\t* value-range.h (class nan_state): New.\n+\t(frange::get_nan_state): New.\n+\n+2023-03-22  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure: Regenerate.\n+\n 2023-03-21  Joseph Myers  <joseph@codesourcery.com>\n \n \t* stor-layout.cc (finalize_type_size): Copy TYPE_TYPELESS_STORAGE"}, {"sha": "1fe01ef2611f32f084dc1d66fbedabd50ed1c62e", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bd9c41d503497b3774476805c7e956fb9d5131/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bd9c41d503497b3774476805c7e956fb9d5131/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=50bd9c41d503497b3774476805c7e956fb9d5131", "patch": "@@ -1 +1 @@\n-20230322\n+20230323"}, {"sha": "86f2e229519351138bbbdd4c6e61234dd51a854f", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bd9c41d503497b3774476805c7e956fb9d5131/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bd9c41d503497b3774476805c7e956fb9d5131/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=50bd9c41d503497b3774476805c7e956fb9d5131", "patch": "@@ -1,3 +1,14 @@\n+2023-03-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/109239\n+\t* program-point.cc: Include \"analyzer/inlining-iterator.h\".\n+\t(program_point::effectively_intraprocedural_p): New function.\n+\t* program-point.h (program_point::effectively_intraprocedural_p):\n+\tNew decl.\n+\t* sm-malloc.cc (deref_before_check::emit): Use it when rejecting\n+\tinterprocedural cases, so that we reject interprocedural cases\n+\tthat have become intraprocedural due to inlining.\n+\n 2023-03-18  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/109094"}, {"sha": "fac49c7b8b5e6c0164118f3859bac4942d85d84e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bd9c41d503497b3774476805c7e956fb9d5131/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bd9c41d503497b3774476805c7e956fb9d5131/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=50bd9c41d503497b3774476805c7e956fb9d5131", "patch": "@@ -1,3 +1,21 @@\n+2023-03-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/108390\n+\t* pt.cc (unify): Use fold of build_nop instead of fold_convert.\n+\n+2023-03-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/108795\n+\t* semantics.cc (finish_id_expression_1): Check scope before\n+\treturning id_expression.\n+\n+2023-03-22  Alex Coplan  <alex.coplan@arm.com>\n+\n+\tPR c++/109177\n+\t* call.cc (build_over_call): Use make_temp_override to suppress\n+\tboth unavailable and deprecated warnings when calling\n+\tbuild_addr_func.\n+\n 2023-03-21  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/106890"}, {"sha": "a46fb92493625c2f4ca0c0670b815c09a5012f74", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bd9c41d503497b3774476805c7e956fb9d5131/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bd9c41d503497b3774476805c7e956fb9d5131/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=50bd9c41d503497b3774476805c7e956fb9d5131", "patch": "@@ -1,3 +1,10 @@\n+2023-03-22  Harald Anlauf  <anlauf@gmx.de>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/104572\n+\t* resolve.cc (gfc_resolve_finalizers): Argument of a FINAL subroutine\n+\tcannot be an alternate return.\n+\n 2023-03-21  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/99036"}, {"sha": "eda3fb44d8afb2ab70519f891fb55d2719f59cce", "filename": "gcc/m2/ChangeLog", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bd9c41d503497b3774476805c7e956fb9d5131/gcc%2Fm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bd9c41d503497b3774476805c7e956fb9d5131/gcc%2Fm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FChangeLog?ref=50bd9c41d503497b3774476805c7e956fb9d5131", "patch": "@@ -1,3 +1,56 @@\n+2023-03-22  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/109248\n+\t* Make-lang.in (m2/pge-boot/%.o): Add CFLAGS and CXXFLAGS for C\n+\tand C++ compiles.\n+\t* gm2spec.cc (add_m2_I_path): Indentation.\n+\t(lang_specific_driver): New variable seen_pathname.\n+\tDetect -fm2-pathname.  If not seen then push_back_Ipath (\".\").\n+\tChange non iso library path to \"m2cor,m2log,m2pim,m2iso\".\n+\n+2023-03-22  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/107630\n+\t* Make-lang.in (m2/stage2/cc1gm2$(exeext)): Remove\n+\tm2/gm2-libs-boot/M2LINK.o.\n+\t(m2/stage1/cc1gm2$(exeext)): Ditto.\n+\t(GM2-LIBS-BOOT-DEFS): Remove M2LINK.def.\n+\t(GM2-LIBS-DEFS): Ditto.\n+\t(m2/mc-boot/$(SRC_PREFIX)%.o): Replace CXX_FLAGS with CXXFLAGS.\n+\t(m2/mc-boot-ch/$(SRC_PREFIX)%.o): Ditto.\n+\t(m2/mc-boot/main.o): Ditto.\n+\t(mcflex.o): Add $(CFLAGS).\n+\t(m2/gm2-libs-boot/M2LINK.o): Remove rule.\n+\t* gm2-compiler/M2GCCDeclare.def (DeclareM2linkGlobals): Remove.\n+\t* gm2-compiler/M2GCCDeclare.mod: (M2LinkEntry): Remove.\n+\t(M2LinkIndex): Remove.\n+\t(DoVariableDeclaration): Remove initial and call to\n+\tAddEntryM2Link.\n+\t(AddEntryM2Link): Remove.\n+\t(GetEntryM2Link): Remove.\n+\t(DeclareM2linkGlobals): Remove.\n+\t(DetectM2LinkInitial): Remove.\n+\t(InitM2LinkModule): Remove.\n+\t* gm2-compiler/M2GenGCC.mod (CodeFinallyEnd): Remove call to\n+\tDeclareM2linkGlobals.\n+\t* gm2-compiler/M2Quads.mod (BuildM2InitFunction): Add extra\n+\tparameter containing runtime module override to ConstructModules.\n+\t* gm2-compiler/M2Scaffold.mod: Update comment describing\n+\tConstructModules.\n+\t* gm2-gcc/m2decl.cc (m2decl_DeclareM2linkForcedModuleInitOrder):\n+\tRemove.\n+\t* gm2-libs-iso/M2RTS.def (ConstructModules): Add overrideliborder\n+\tparameter.\n+\t* gm2-libs-iso/M2RTS.mod: Add overrideliborder parameter.\n+\t* gm2-libs/M2Dependent.def (ConstructModules): Add overrideliborder\n+\tparameter.\n+\t* gm2-libs/M2Dependent.mod (ConstructModules): Add overrideliborder\n+\tparameter.\n+\t* gm2-libs/M2RTS.def (ConstructModules): Add overrideliborder parameter.\n+\t* gm2-libs/M2RTS.mod (ConstructModules): Add overrideliborder\n+\tparameter.\n+\t* gm2-libs/M2LINK.def: Removed.\n+\n 2023-03-21  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \t* Make-lang.in (m2/mc-boot/$(SRC_PREFIX)%.o): Add $(CXXFLAGS)."}, {"sha": "2fff2e735f68f5b96de13c1c3ce64f7b32a0cd0e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bd9c41d503497b3774476805c7e956fb9d5131/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bd9c41d503497b3774476805c7e956fb9d5131/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=50bd9c41d503497b3774476805c7e956fb9d5131", "patch": "@@ -1,3 +1,50 @@\n+2023-03-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR testsuite/105959\n+\t* gcc.dg-selftests/dg-final.exp\n+\t(dg_final_directive_check_num_args): Update expected maximum\n+\tnumber of args for the various directives using dg-scan.\n+\t* lib/scanasm.exp (append_encoding_arg): New procedure.\n+\t(dg-scan): Add optional 3rd argument: the encoding to use when\n+\treading from the file.\n+\t* lib/scansarif.exp (scan-sarif-file): Treat the file as UTF-8\n+\tencoded when reading it.\n+\t(scan-sarif-file-not): Likewise.\n+\n+2023-03-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/108390\n+\t* g++.dg/template/partial-order3.C: New test.\n+\n+2023-03-22  Harald Anlauf  <anlauf@gmx.de>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/104572\n+\t* gfortran.dg/pr104572.f90: New test.\n+\n+2023-03-22  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\t* gcc.target/i386/pr109137.c: New.\n+\n+2023-03-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/108795\n+\t* g++.dg/ext/attr-tsafe1.C: New test.\n+\n+2023-03-22  Alex Coplan  <alex.coplan@arm.com>\n+\n+\tPR c++/109177\n+\t* g++.dg/ext/pr109177.C: New test.\n+\n+2023-03-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/109239\n+\t* gcc.dg/analyzer/deref-before-check-pr109239-linux-bus.c: New test.\n+\n+2023-03-22  Andrew Jenner  <andrew@codesourcery.com>\n+\n+\t* gcc.target/gcn/complex.c: New test.\n+\n 2023-03-21  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/99036"}, {"sha": "2139ea2ecf851f81b8cf1cf394c8f3a9c387bf71", "filename": "libgm2/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bd9c41d503497b3774476805c7e956fb9d5131/libgm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bd9c41d503497b3774476805c7e956fb9d5131/libgm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2FChangeLog?ref=50bd9c41d503497b3774476805c7e956fb9d5131", "patch": "@@ -1,3 +1,8 @@\n+2023-03-22  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* libm2pim/Makefile.am (M2DEFS): Remove M2LINK.def.\n+\t* libm2pim/Makefile.in: Rebuild.\n+\n 2023-03-16  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \t* libm2cor/Makefile.am: Remove"}, {"sha": "407a5fe0f7ef2c0e469138b79c9ee1f4ec486a28", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bd9c41d503497b3774476805c7e956fb9d5131/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bd9c41d503497b3774476805c7e956fb9d5131/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=50bd9c41d503497b3774476805c7e956fb9d5131", "patch": "@@ -1,3 +1,53 @@\n+2023-03-22  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/shared_ptr_atomic.h (atomic::operator=(nullptr_t)):\n+\tAdd overload, as per LWG 3893.\n+\t* testsuite/20_util/shared_ptr/atomic/atomic_shared_ptr.cc:\n+\tCheck assignment from nullptr.\n+\n+2023-03-22  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/format (formatter<const charT[N], charT>): Do not\n+\tdefine partial speclialization, as per LWG 3833.\n+\t* testsuite/std/format/formatter/requirements.cc: Check it.\n+\n+2023-03-22  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/utility (__cpp_lib_constexpr_algorithms): Define,\n+\tas per LWG 3792.\n+\t* testsuite/20_util/exchange/constexpr.cc: Check for it.\n+\n+2023-03-22  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/version (__cpp_lib_format): Define.\n+\t* testsuite/std/format/functions/format.cc: Check it.\n+\n+2023-03-22  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/basic_string.tcc (basic_string::resize_and_overwrite):\n+\tPass rvalues to the callback, as now allowed by LWG 3645.\n+\tEnforce preconditions on the return value.\n+\t* testsuite/21_strings/basic_string/capacity/char/resize_and_overwrite.cc:\n+\tAdjust.\n+\n+2023-03-22  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/format: Add a comment noting that the resolution\n+\tof LWG 3720 has been applied..\n+\n+2023-03-22  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/regex.h (match_results): Add allocator-extended\n+\tcopy and move constructors, as per LWG 2195.\n+\t* testsuite/28_regex/match_results/ctors/char/alloc.cc: New test.\n+\n+2023-03-22  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stream_iterator.h (istream_iterator): Add\n+\tconstexpr to copy constructor, as per LWG 3600.\n+\t* testsuite/24_iterators/istream_iterator/cons/constexpr.cc:\n+\tCheck copy construction.\n+\n 2023-03-21  Matthias Kretz  <m.kretz@gsi.de>\n \n \t* include/experimental/bits/simd_x86.h"}]}