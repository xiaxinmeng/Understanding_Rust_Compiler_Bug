{"sha": "dd859b8ac0563c5cceeb84dbedd7cc36a6856a15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ4NTliOGFjMDU2M2M1Y2NlZWI4NGRiZWRkN2NjMzZhNjg1NmExNQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2003-01-21T13:45:16Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-01-21T13:45:16Z"}, "message": "Makefile.in (GCC_WARN_CFLAGS): Add $(WERROR) $($@-warn) (gtype-desc.o-warn...\n\ngcc:\n\t* Makefile.in (GCC_WARN_CFLAGS): Add $(WERROR) $($@-warn)\n\t(gtype-desc.o-warn, c-decl.o-warn, varasm.o-warn, gcc.o-warn,\n\tinsn-conditions.o-warn, out_object_file, gengtype-yacc.o-warn,\n\tc-parse.o-warn): Add -Wno-error.\n\t(STAGE2_FLAGS_TO_PASS): Add WERROR=\"@WERROR@\".\n\n\t* configure.in (--enable-werror): Add new flag.\n\t* doc/install.texi (--enable-werror): Document.\n\t* configure: Regenerate.\n\n\t* objc/Make-lang.in (objc/objc-parse.o-warn): Add -Wno-error.\n\ncp:\n\tMake-lang.in (cp/decl.o-warn): Add -Wno-error.\n\nf:\n\tMake-lang.in (f/sta.o-warn): Add -Wno-error.\n\njava:\n\tMake-lang.in (jvspec.o-warn): Add -Wno-error.\n\nFrom-SVN: r61544", "tree": {"sha": "7e26878cf8ef708c19588de56c765553420d3e43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e26878cf8ef708c19588de56c765553420d3e43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/comments", "author": null, "committer": null, "parents": [{"sha": "4f9365e21ab2e552a0b9c08b2d41b419b667d26b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f9365e21ab2e552a0b9c08b2d41b419b667d26b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f9365e21ab2e552a0b9c08b2d41b419b667d26b"}], "stats": {"total": 756, "additions": 423, "deletions": 333}, "files": [{"sha": "2dbf65220d6bc20bcdec1ecdf0c35c21c2f891dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd859b8ac0563c5cceeb84dbedd7cc36a6856a15", "patch": "@@ -1,3 +1,17 @@\n+2003-01-21  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (GCC_WARN_CFLAGS): Add $(WERROR) $($@-warn)\n+\t(gtype-desc.o-warn, c-decl.o-warn, varasm.o-warn, gcc.o-warn,\n+\tinsn-conditions.o-warn, out_object_file, gengtype-yacc.o-warn,\n+\tc-parse.o-warn): Add -Wno-error.\n+\t(STAGE2_FLAGS_TO_PASS): Add WERROR=\"@WERROR@\".\n+\n+\t* configure.in (--enable-werror): Add new flag.\n+\t* doc/install.texi (--enable-werror): Document.\n+\t* configure: Regenerate.\n+\n+\t* objc/Make-lang.in (objc/objc-parse.o-warn): Add -Wno-error.\n+\n 2003-01-21  Andreas Schwab  <schwab@suse.de>\n \n \t* genautomata.c (output_internal_insn_latency_func): Fix missing"}, {"sha": "91faae79d338deb9b35de63699a6111168516527", "filename": "gcc/Makefile.in", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=dd859b8ac0563c5cceeb84dbedd7cc36a6856a15", "patch": "@@ -109,7 +109,20 @@ VALGRIND_DRIVER_DEFINES = @valgrind_path_defines@\n \n # This is how we control whether or not the additional warnings are applied.\n .-warn = $(STRICT_WARN)\n-GCC_WARN_CFLAGS = $(LOOSE_WARN) $($(@D)-warn) $(NOCOMMON_FLAG)\n+GCC_WARN_CFLAGS = $(LOOSE_WARN) $($(@D)-warn) $(NOCOMMON_FLAG) $(WERROR) $($@-warn)\n+\n+# These files are to have -Werror bypassed in stage2:\n+# These contain warnings from the PCH merge.\n+gtype-desc.o-warn = -Wno-error\n+c-decl.o-warn = -Wno-error\n+# These are very hard to completely clean due to target complexities.\n+varasm.o-warn = -Wno-error\n+gcc.o-warn = -Wno-error\n+insn-conditions.o-warn = -Wno-error\n+@out_object_file@-warn = -Wno-error\n+# Bison-1.75 output often yields (harmless) -Wtraditional warnings\n+gengtype-yacc.o-warn = -Wno-error\n+c-parse.o-warn = -Wno-error\n \n # All warnings have to be shut off in stage1 if the compiler used then\n # isn't gcc; configure determines that.  WARN_CFLAGS will be either\n@@ -3349,6 +3362,7 @@ STAGE2_FLAGS_TO_PASS = \\\n \tCFLAGS=\"$(BOOT_CFLAGS)\" \\\n \tLDFLAGS=\"$(BOOT_LDFLAGS)\" \\\n \tWARN_CFLAGS=\"\\$$(GCC_WARN_CFLAGS)\" \\\n+\tWERROR=\"@WERROR@\" \\\n \tSTRICT_WARN=\"$(STRICT2_WARN)\" \\\n \tlibdir=$(libdir) \\\n \tLANGUAGES=\"$(LANGUAGES)\" \\"}, {"sha": "11ed9d9f00c21859f41bb4f88075822c63dd2b1a", "filename": "gcc/configure", "status": "modified", "additions": 349, "deletions": 331, "changes": 680, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=dd859b8ac0563c5cceeb84dbedd7cc36a6856a15"}, {"sha": "43a7974f37dc52a1892acb35dd1f81fd9d64b386", "filename": "gcc/configure.in", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=dd859b8ac0563c5cceeb84dbedd7cc36a6856a15", "patch": "@@ -265,6 +265,16 @@ AC_ARG_ENABLE(multilib,\n [], [enable_multilib=yes])\n AC_SUBST(enable_multilib)\n \n+# Enable -Werror in bootstrap stage2 and later.\n+# Change the default to \"no\" on release branches.\n+AC_ARG_ENABLE(werror, \n+[  --enable-werror         enable -Werror in bootstrap stage2 and later], [],\n+[enable_werror=yes])\n+if test x$enable_werror = xyes ; then\n+  WERROR=-Werror\n+fi\n+AC_SUBST(WERROR)\n+\n # Enable expensive internal checks\n AC_ARG_ENABLE(checking,\n [  --enable-checking[=LIST]"}, {"sha": "2576d5cb1dc0c5c876263b20d30a1e6f81f973a4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=dd859b8ac0563c5cceeb84dbedd7cc36a6856a15", "patch": "@@ -1,3 +1,7 @@\n+2003-01-21  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\tMake-lang.in (cp/decl.o-warn): Add -Wno-error.\n+\n 2003-01-17  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/9167, c++/9358"}, {"sha": "e143f24cde85a61aa0b21d1ef7f3d2f3abf734f8", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=dd859b8ac0563c5cceeb84dbedd7cc36a6856a15", "patch": "@@ -90,6 +90,8 @@ CXX_OBJS = cp/call.o cp/decl.o cp/expr.o cp/pt.o cp/typeck2.o \\\n \n # Use loose warnings for this front end.\n cp-warn =\n+# This contains warnings from the PCH merge.\n+cp/decl.o-warn = -Wno-error\n \n cc1plus$(exeext): $(CXX_OBJS) $(CXX_C_OBJS) $(BACKEND) \\\n \t\t  libcpp.a $(LIBDEPS)"}, {"sha": "97c9960f7720fab6b7b63aebb5fd1507c819df5a", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=dd859b8ac0563c5cceeb84dbedd7cc36a6856a15", "patch": "@@ -821,6 +821,17 @@ Specify that the machine does not have a floating point unit.  This\n option only applies to @samp{m68k-sun-sunos@var{n}}.  On any other\n system, @option{--nfp} has no effect.\n \n+@item --enable-werror\n+@itemx --disable-werror\n+@itemx --enable-werror=yes\n+@itemx --enable-werror=no\n+When you specify this option, it controls whether certain files in the\n+compiler are built with @option{-Werror} in bootstrap stage2 and later.\n+If you don't specify it, @option{-Werror} is turned on for the main\n+development trunk.  However it defaults to off for release branches and\n+final releases.  The specific files which get @option{-Werror} are\n+controlled by the Makefiles.\n+\n @item --enable-checking\n @itemx --enable-checking=@var{list}\n When you specify this option, the compiler is built to perform checking\n@@ -975,7 +986,10 @@ be ignored.\n \n It is normal to have compiler warnings when compiling certain files.\n Unless you are a GCC developer, you can generally ignore these warnings\n-unless they cause compilation to fail.\n+unless they cause compilation to fail.  Developers should attempt to fix\n+any warnings encountered, however they can temporarily continue past\n+warnings-as-errors by specifying the configure flag\n+@option{--disable-werror}.\n \n On certain old systems, defining certain environment variables such as\n @env{CC} can interfere with the functioning of @command{make}."}, {"sha": "a66d143d8532a4e6db6e9b0172f6fccd195a9943", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=dd859b8ac0563c5cceeb84dbedd7cc36a6856a15", "patch": "@@ -1,3 +1,7 @@\n+Tue Jan 21 08:42:12 2003  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\tMake-lang.in (f/sta.o-warn): Add -Wno-error.\n+\n Thu Jan 16 10:53:16 2003  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Make-lang.in (f/target.o): Depend on toplev.h."}, {"sha": "7af9c9e583a565d46043807b99ba7676ca690c14", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=dd859b8ac0563c5cceeb84dbedd7cc36a6856a15", "patch": "@@ -93,6 +93,8 @@ F77_OBJS = f/bad.o f/bit.o f/bld.o f/com.o f/data.o f/equiv.o f/expr.o \\\n \n # Use loose warnings for this front end.\n f-warn =\n+# type-punning warning\n+f/sta.o-warn = -Wno-error\n \n f771$(exeext): $(F77_OBJS) $(BACKEND) $(LIBDEPS)\n \trm -f f771$(exeext)"}, {"sha": "dc22d2975e3a05735d49e21cf55e59684b5d9295", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=dd859b8ac0563c5cceeb84dbedd7cc36a6856a15", "patch": "@@ -1,3 +1,7 @@\n+2003-01-21  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\tMake-lang.in (jvspec.o-warn): Add -Wno-error.\n+\n 2003-01-18  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* check-init.c: Fix comment typos."}, {"sha": "59c8d0eb18ba848465a757dbb4167380b78c4778", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=dd859b8ac0563c5cceeb84dbedd7cc36a6856a15", "patch": "@@ -124,6 +124,8 @@ JVGENMAIN_OBJS = java/jvgenmain.o java/mangle_name.o errors.o\n \n # Use loose warnings for this front end.\n java-warn =\n+# String length warnings\n+jvspec.o-warn = -Wno-error\n \n jc1$(exeext): $(JAVA_OBJS) $(BACKEND) $(LIBDEPS)\n \trm -f $@"}, {"sha": "070659a2255c7bd4c8a8804d4fbbdecd9c54a279", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd859b8ac0563c5cceeb84dbedd7cc36a6856a15/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=dd859b8ac0563c5cceeb84dbedd7cc36a6856a15", "patch": "@@ -47,6 +47,8 @@ OBJECTIVE-C objective-c: cc1obj$(exeext)\n \n # Use maximal warnings for this front end.\n objc-warn = $(STRICT_WARN)\n+# Bison-1.75 output yields (harmless) -Wtraditional warnings\n+objc/objc-parse.o-warn = -Wno-error\n \n # Language-specific object files for Objective C.\n OBJC_OBJS = objc/objc-lang.o objc/objc-parse.o objc/objc-act.o"}]}