{"sha": "6acc8d53a91f4c3630fc85274ea75e8224fcdf37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFjYzhkNTNhOTFmNGMzNjMwZmM4NTI3NGVhNzVlODIyNGZjZGYzNw==", "commit": {"author": {"name": "Fabien Ch\u00eane", "email": "fabien@gcc.gnu.org", "date": "2012-02-17T07:49:35Z"}, "committer": {"name": "Fabien Ch\u00eane", "email": "fabien@gcc.gnu.org", "date": "2012-02-17T07:49:35Z"}, "message": "re PR c++/52126 (compilation error)\n\ngcc/testsuite/ChangeLog\n\n2012-02-16  Fabien Chene  <fabien@gcc.gnu.org>\n\n\tPR c++/52126\n\t* g++.dg/template/using21.C: New.\n\t* g++.dg/template/using22.C: Likewise.\n\ngcc/cp/ChangeLog\n\n2012-02-16  Fabien Chene  <fabien@gcc.gnu.org>\n\n        PR c++/52126\n\t* decl.c (xref_basetypes): call dependent_scope_p instead of\n\tdependent_type_p.\n\nFrom-SVN: r184328", "tree": {"sha": "7fe00c88472a30aba2b52b84bdb4feac9882d609", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fe00c88472a30aba2b52b84bdb4feac9882d609"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6acc8d53a91f4c3630fc85274ea75e8224fcdf37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6acc8d53a91f4c3630fc85274ea75e8224fcdf37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6acc8d53a91f4c3630fc85274ea75e8224fcdf37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6acc8d53a91f4c3630fc85274ea75e8224fcdf37/comments", "author": null, "committer": null, "parents": [{"sha": "2f46ac4db1c784bef60cb4bb6e9e4bc33b9e9466", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f46ac4db1c784bef60cb4bb6e9e4bc33b9e9466", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f46ac4db1c784bef60cb4bb6e9e4bc33b9e9466"}], "stats": {"total": 75, "additions": 74, "deletions": 1}, "files": [{"sha": "c6bf817c5fd1b1bfd7831b9ba33e9fdf211422ba", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6acc8d53a91f4c3630fc85274ea75e8224fcdf37/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6acc8d53a91f4c3630fc85274ea75e8224fcdf37/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6acc8d53a91f4c3630fc85274ea75e8224fcdf37", "patch": "@@ -1,3 +1,9 @@\n+2012-02-16  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n+\n+\tPR c++/52126\n+\t* decl.c (xref_basetypes): call dependent_scope_p instead of\n+\tdependent_type_p.\n+\n 2012-02-16  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/51415"}, {"sha": "90746a5c9fed17ed513a492c35bcfeec5fb0c2f1", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6acc8d53a91f4c3630fc85274ea75e8224fcdf37/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6acc8d53a91f4c3630fc85274ea75e8224fcdf37/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6acc8d53a91f4c3630fc85274ea75e8224fcdf37", "patch": "@@ -11880,7 +11880,7 @@ xref_basetypes (tree ref, tree base_list)\n \tTYPE_FOR_JAVA (ref) = 1;\n \n       base_binfo = NULL_TREE;\n-      if (CLASS_TYPE_P (basetype) && !dependent_type_p (basetype))\n+      if (CLASS_TYPE_P (basetype) && !dependent_scope_p (basetype))\n \t{\n \t  base_binfo = TYPE_BINFO (basetype);\n \t  /* The original basetype could have been a typedef'd type.  */"}, {"sha": "72f9f745d744d5c0dae90f15ce618d828870a95a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6acc8d53a91f4c3630fc85274ea75e8224fcdf37/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6acc8d53a91f4c3630fc85274ea75e8224fcdf37/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6acc8d53a91f4c3630fc85274ea75e8224fcdf37", "patch": "@@ -1,3 +1,9 @@\n+2012-02-16  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n+\n+\tPR c++/52126\n+\t* g++.dg/template/using21.C: New.\n+\t* g++.dg/template/using22.C: Likewise.\n+\n 2012-02-16  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/51415"}, {"sha": "7f61f85474997bfbcaf9fde3f9f8017242124510", "filename": "gcc/testsuite/g++.dg/template/using21.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6acc8d53a91f4c3630fc85274ea75e8224fcdf37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6acc8d53a91f4c3630fc85274ea75e8224fcdf37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing21.C?ref=6acc8d53a91f4c3630fc85274ea75e8224fcdf37", "patch": "@@ -0,0 +1,28 @@\n+// PR c++/52126\n+// { dg-do compile }\n+\n+template<typename T>\n+struct A\n+{\n+    int foo;\n+\n+    struct B : A<T>\n+    {\n+        using A::foo;\n+    };\n+\n+    struct C : A\n+    {\n+        using A::foo;\n+    };\n+\n+    struct D : A<T>\n+    {\n+\tusing A<T>::foo;\n+    };\n+\n+    struct E : A\n+    {\n+\tusing A<T>::foo;\n+    };\n+};"}, {"sha": "b456e62e8950eb309caafd245d691799309b711c", "filename": "gcc/testsuite/g++.dg/template/using22.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6acc8d53a91f4c3630fc85274ea75e8224fcdf37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6acc8d53a91f4c3630fc85274ea75e8224fcdf37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing22.C?ref=6acc8d53a91f4c3630fc85274ea75e8224fcdf37", "patch": "@@ -0,0 +1,33 @@\n+// PR c++/52126\n+// { dg-do compile }\n+\n+template <class T> struct Z {};\n+\n+template<typename T>\n+struct A\n+{\n+    struct B : A<T>\n+    {\n+        using A::nonexist; // { dg-error \"no members matching\" }\n+    };\n+\n+    struct C : A\n+    {\n+        using A::nonexist; // { dg-error \"no members matching\" }\n+    };\n+\n+    struct D : A<T>\n+    {\n+    \tusing A<T>::nonexist; // { dg-error \"no members matching\" }\n+    };\n+\n+    struct E : A\n+    {\n+    \tusing A<T>::nonexist; // { dg-error \"no members matching\" }\n+    };\n+\n+    struct F : Z<T>\n+    {\n+\tusing Z<T>::nonexist;\n+    };\n+};"}]}