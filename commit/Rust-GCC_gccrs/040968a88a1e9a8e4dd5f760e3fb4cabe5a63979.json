{"sha": "040968a88a1e9a8e4dd5f760e3fb4cabe5a63979", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQwOTY4YTg4YTFlOWE4ZTRkZDVmNzYwZTNmYjRjYWJlNWE2Mzk3OQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-01-28T19:57:35Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-01-28T19:57:35Z"}, "message": "* lto-symtab.c (lto_varpool_replace_node): Merge TLS models.\n\nFrom-SVN: r220214", "tree": {"sha": "ce1cc776ee6015b0d1ee8a88699584424616e54e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce1cc776ee6015b0d1ee8a88699584424616e54e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/040968a88a1e9a8e4dd5f760e3fb4cabe5a63979", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040968a88a1e9a8e4dd5f760e3fb4cabe5a63979", "html_url": "https://github.com/Rust-GCC/gccrs/commit/040968a88a1e9a8e4dd5f760e3fb4cabe5a63979", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040968a88a1e9a8e4dd5f760e3fb4cabe5a63979/comments", "author": null, "committer": null, "parents": [{"sha": "b1474d30f9ef6570beb3a9263ae520dc1ac1bb3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1474d30f9ef6570beb3a9263ae520dc1ac1bb3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1474d30f9ef6570beb3a9263ae520dc1ac1bb3a"}], "stats": {"total": 47, "additions": 42, "deletions": 5}, "files": [{"sha": "98f256a035c0af31717bafda73a365db75e0126b", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040968a88a1e9a8e4dd5f760e3fb4cabe5a63979/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040968a88a1e9a8e4dd5f760e3fb4cabe5a63979/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=040968a88a1e9a8e4dd5f760e3fb4cabe5a63979", "patch": "@@ -1,3 +1,7 @@\n+2014-12-11  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto-symtab.c (lto_varpool_replace_node): Merge TLS models.\n+\n 2014-12-11  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* lto.c (compare_tree_sccs_1): Add comparsion of"}, {"sha": "98edb883440a94047c48f8322ed0da5aad018aec", "filename": "gcc/lto/lto-symtab.c", "status": "modified", "additions": 38, "deletions": 5, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040968a88a1e9a8e4dd5f760e3fb4cabe5a63979/gcc%2Flto%2Flto-symtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040968a88a1e9a8e4dd5f760e3fb4cabe5a63979/gcc%2Flto%2Flto-symtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-symtab.c?ref=040968a88a1e9a8e4dd5f760e3fb4cabe5a63979", "patch": "@@ -158,11 +158,44 @@ lto_varpool_replace_node (varpool_node *vnode,\n \n   if (vnode->tls_model != prevailing_node->tls_model)\n     {\n-      error_at (DECL_SOURCE_LOCATION (vnode->decl),\n-\t\t\"%qD is defined as %s\", vnode->decl, tls_model_names [vnode->tls_model]);\n-      inform (DECL_SOURCE_LOCATION (prevailing_node->decl),\n-\t      \"previously defined here as %s\",\n-\t      tls_model_names [prevailing_node->tls_model]);\n+      bool error = false;\n+\n+      /* Non-TLS and TLS never mix together.  Also emulated model is not\n+\t compatible with anything else.  */\n+      if (prevailing_node->tls_model == TLS_MODEL_NONE\n+\t  || prevailing_node->tls_model == TLS_MODEL_EMULATED\n+\t  || vnode->tls_model == TLS_MODEL_NONE\n+\t  || vnode->tls_model == TLS_MODEL_EMULATED)\n+\terror = true;\n+      /* Linked is silently supporting transitions\n+\t GD -> IE, GD -> LE, LD -> LE, IE -> LE, LD -> IE.\n+\t Do the same transitions and error out on others.  */\n+      else if ((prevailing_node->tls_model == TLS_MODEL_REAL\n+\t\t|| prevailing_node->tls_model == TLS_MODEL_LOCAL_DYNAMIC)\n+\t       && (vnode->tls_model == TLS_MODEL_INITIAL_EXEC\n+\t\t   || vnode->tls_model == TLS_MODEL_LOCAL_EXEC))\n+\tprevailing_node->tls_model = vnode->tls_model;\n+      else if ((vnode->tls_model == TLS_MODEL_REAL\n+\t\t|| vnode->tls_model == TLS_MODEL_LOCAL_DYNAMIC)\n+\t       && (prevailing_node->tls_model == TLS_MODEL_INITIAL_EXEC\n+\t\t   || prevailing_node->tls_model == TLS_MODEL_LOCAL_EXEC))\n+\t;\n+      else if (prevailing_node->tls_model == TLS_MODEL_INITIAL_EXEC\n+\t       && vnode->tls_model == TLS_MODEL_LOCAL_EXEC)\n+\tprevailing_node->tls_model = vnode->tls_model;\n+      else if (vnode->tls_model == TLS_MODEL_INITIAL_EXEC\n+\t       && prevailing_node->tls_model == TLS_MODEL_LOCAL_EXEC)\n+\t;\n+      else\n+\terror = true;\n+      if (error)\n+\t{\n+\t  error_at (DECL_SOURCE_LOCATION (vnode->decl),\n+\t\t    \"%qD is defined with tls model %s\", vnode->decl, tls_model_names [vnode->tls_model]);\n+\t  inform (DECL_SOURCE_LOCATION (prevailing_node->decl),\n+\t\t  \"previously defined here as %s\",\n+\t\t  tls_model_names [prevailing_node->tls_model]);\n+\t}\n     }\n   /* Finally remove the replaced node.  */\n   vnode->remove ();"}]}