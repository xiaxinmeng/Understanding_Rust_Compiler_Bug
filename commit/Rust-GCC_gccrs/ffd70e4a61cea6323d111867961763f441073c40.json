{"sha": "ffd70e4a61cea6323d111867961763f441073c40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZkNzBlNGE2MWNlYTYzMjNkMTExODY3OTYxNzYzZjQ0MTA3M2M0MA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2016-05-23T09:05:34Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2016-05-23T09:05:34Z"}, "message": "[ARM, AArch64] Add missing vrnd{,a,m,n,p,x} tests.\n\n2016-05-23  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vrnd.c: New.\n\t* gcc.target/aarch64/advsimd-intrinsics/vrndX.inc: New.\n\t* gcc.target/aarch64/advsimd-intrinsics/vrnda.c: New.\n\t* gcc.target/aarch64/advsimd-intrinsics/vrndm.c: New.\n\t* gcc.target/aarch64/advsimd-intrinsics/vrndn.c: New.\n\t* gcc.target/aarch64/advsimd-intrinsics/vrndp.c: New.\n\t* gcc.target/aarch64/advsimd-intrinsics/vrndx.c: New.\n\nFrom-SVN: r236578", "tree": {"sha": "0da333a1e71659bae6840c9f6114ecf5c8bb6538", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0da333a1e71659bae6840c9f6114ecf5c8bb6538"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffd70e4a61cea6323d111867961763f441073c40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffd70e4a61cea6323d111867961763f441073c40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffd70e4a61cea6323d111867961763f441073c40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffd70e4a61cea6323d111867961763f441073c40/comments", "author": null, "committer": null, "parents": [{"sha": "4b1f57fedad042fcf2bf2cc78d0e62172b4d7aed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b1f57fedad042fcf2bf2cc78d0e62172b4d7aed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b1f57fedad042fcf2bf2cc78d0e62172b4d7aed"}], "stats": {"total": 149, "additions": 149, "deletions": 0}, "files": [{"sha": "bf52c55eea0ac35bc65825692873374d8f09fe59", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd70e4a61cea6323d111867961763f441073c40/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd70e4a61cea6323d111867961763f441073c40/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ffd70e4a61cea6323d111867961763f441073c40", "patch": "@@ -1,3 +1,13 @@\n+2016-05-23  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vrnd.c: New.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vrndX.inc: New.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vrnda.c: New.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vrndm.c: New.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vrndn.c: New.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vrndp.c: New.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vrndx.c: New.\n+\n 2016-05-23  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vstX_lane.c: Add fp16 tests."}, {"sha": "5f492d41bffb49fd6811a31aacb86d8a949ab0e6", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vrnd.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd70e4a61cea6323d111867961763f441073c40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrnd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd70e4a61cea6323d111867961763f441073c40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrnd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrnd.c?ref=ffd70e4a61cea6323d111867961763f441073c40", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-require-effective-target arm_v8_neon_ok } */\n+/* { dg-add-options arm_v8_neon } */\n+\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL (expected, hfloat, 32, 2) [] = { 0xc1800000, 0xc1700000 };\n+VECT_VAR_DECL (expected, hfloat, 32, 4) [] = { 0xc1800000, 0xc1700000,\n+\t\t\t\t\t       0xc1600000, 0xc1500000 };\n+\n+#define INSN vrnd\n+#define TEST_MSG \"VRND\"\n+\n+#include \"vrndX.inc\""}, {"sha": "629240d3a2304f671b0df562f72638ec3daf3abe", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vrndX.inc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd70e4a61cea6323d111867961763f441073c40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvrndX.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd70e4a61cea6323d111867961763f441073c40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvrndX.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvrndX.inc?ref=ffd70e4a61cea6323d111867961763f441073c40", "patch": "@@ -0,0 +1,43 @@\n+#define FNNAME1(NAME) exec_ ## NAME\n+#define FNNAME(NAME) FNNAME1 (NAME)\n+\n+void FNNAME (INSN) (void)\n+{\n+  /* vector_res = vrndX (vector), then store the result.  */\n+#define TEST_VRND2(INSN, Q, T1, T2, W, N)\t\t\t\t\\\n+  VECT_VAR (vector_res, T1, W, N) =\t\t\t\t\t\\\n+    INSN##Q##_##T2##W (VECT_VAR (vector, T1, W, N));\t\t\t\\\n+    vst1##Q##_##T2##W (VECT_VAR (result, T1, W, N),\t\t\t\\\n+\t\t       VECT_VAR (vector_res, T1, W, N))\n+\n+  /* Two auxliary macros are necessary to expand INSN.  */\n+#define TEST_VRND1(INSN, Q, T1, T2, W, N)\t\\\n+  TEST_VRND2 (INSN, Q, T1, T2, W, N)\n+\n+#define TEST_VRND(Q, T1, T2, W, N)\t\t\\\n+  TEST_VRND1 (INSN, Q, T1, T2, W, N)\n+\n+  DECL_VARIABLE (vector, float, 32, 2);\n+  DECL_VARIABLE (vector, float, 32, 4);\n+\n+  DECL_VARIABLE (vector_res, float, 32, 2);\n+  DECL_VARIABLE (vector_res, float, 32, 4);\n+\n+  clean_results ();\n+\n+  VLOAD (vector, buffer, , float, f, 32, 2);\n+  VLOAD (vector, buffer, q, float, f, 32, 4);\n+\n+  TEST_VRND ( , float, f, 32, 2);\n+  TEST_VRND (q, float, f, 32, 4);\n+\n+  CHECK_FP (TEST_MSG, float, 32, 2, PRIx32, expected, \"\");\n+  CHECK_FP (TEST_MSG, float, 32, 4, PRIx32, expected, \"\");\n+}\n+\n+int\n+main (void)\n+{\n+  FNNAME (INSN) ();\n+  return 0;\n+}"}, {"sha": "816fd28dd19d6f0591619c3fa3ca06b7e4d99c3e", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vrnda.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd70e4a61cea6323d111867961763f441073c40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrnda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd70e4a61cea6323d111867961763f441073c40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrnda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrnda.c?ref=ffd70e4a61cea6323d111867961763f441073c40", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-require-effective-target arm_v8_neon_ok } */\n+/* { dg-add-options arm_v8_neon } */\n+\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL (expected, hfloat, 32, 2) [] = { 0xc1800000, 0xc1700000 };\n+VECT_VAR_DECL (expected, hfloat, 32, 4) [] = { 0xc1800000, 0xc1700000,\n+\t\t\t\t\t       0xc1600000, 0xc1500000 };\n+\n+#define INSN vrnda\n+#define TEST_MSG \"VRNDA\"\n+\n+#include \"vrndX.inc\""}, {"sha": "029880c21f6fdea148ec6a41a7a438cd08eeafe3", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vrndm.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd70e4a61cea6323d111867961763f441073c40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd70e4a61cea6323d111867961763f441073c40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndm.c?ref=ffd70e4a61cea6323d111867961763f441073c40", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-require-effective-target arm_v8_neon_ok } */\n+/* { dg-add-options arm_v8_neon } */\n+\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL (expected, hfloat, 32, 2) [] = { 0xc1800000, 0xc1700000 };\n+VECT_VAR_DECL (expected, hfloat, 32, 4) [] = { 0xc1800000, 0xc1700000,\n+\t\t\t\t\t       0xc1600000, 0xc1500000 };\n+\n+#define INSN vrndm\n+#define TEST_MSG \"VRNDM\"\n+\n+#include \"vrndX.inc\""}, {"sha": "571243c49298ec154c55932b611eb3bcc42efe60", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vrndn.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd70e4a61cea6323d111867961763f441073c40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd70e4a61cea6323d111867961763f441073c40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndn.c?ref=ffd70e4a61cea6323d111867961763f441073c40", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-require-effective-target arm_v8_neon_ok } */\n+/* { dg-add-options arm_v8_neon } */\n+\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL (expected, hfloat, 32, 2) [] = { 0xc1800000, 0xc1700000 };\n+VECT_VAR_DECL (expected, hfloat, 32, 4) [] = { 0xc1800000, 0xc1700000,\n+\t\t\t\t\t       0xc1600000, 0xc1500000 };\n+\n+#define INSN vrndn\n+#define TEST_MSG \"VRNDN\"\n+\n+#include \"vrndX.inc\""}, {"sha": "ff4771c87892d202732e9eefa9b241c1dec1c9eb", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vrndp.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd70e4a61cea6323d111867961763f441073c40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd70e4a61cea6323d111867961763f441073c40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndp.c?ref=ffd70e4a61cea6323d111867961763f441073c40", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-require-effective-target arm_v8_neon_ok } */\n+/* { dg-add-options arm_v8_neon } */\n+\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL (expected, hfloat, 32, 2) [] = { 0xc1800000, 0xc1700000 };\n+VECT_VAR_DECL (expected, hfloat, 32, 4) [] = { 0xc1800000, 0xc1700000,\n+\t\t\t\t\t       0xc1600000, 0xc1500000 };\n+\n+#define INSN vrndp\n+#define TEST_MSG \"VRNDP\"\n+\n+#include \"vrndX.inc\""}, {"sha": "ff2357bebf3c01d723229c43d35a747d2bbe1315", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vrndx.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd70e4a61cea6323d111867961763f441073c40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd70e4a61cea6323d111867961763f441073c40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndx.c?ref=ffd70e4a61cea6323d111867961763f441073c40", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-require-effective-target arm_v8_neon_ok } */\n+/* { dg-add-options arm_v8_neon } */\n+\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL (expected, hfloat, 32, 2) [] = { 0xc1800000, 0xc1700000 };\n+VECT_VAR_DECL (expected, hfloat, 32, 4) [] = { 0xc1800000, 0xc1700000,\n+\t\t\t\t\t       0xc1600000, 0xc1500000 };\n+\n+#define INSN vrndx\n+#define TEST_MSG \"VRNDX\"\n+\n+#include \"vrndX.inc\""}]}