{"sha": "6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg5NGRkY2YzZDJiOTVlNmQ5NzNlMzRjMmYyZmUwM2Q5YWJkNDQxOQ==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-04-23T07:05:18Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-04-23T07:05:18Z"}, "message": "howto.html ('LWG Issues'): Add issue 60, partial implementation only.\n\n2003-04-23  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* docs/html/ext/howto.html ('LWG Issues'):  Add issue 60, partial\n\timplementation only.\n\t* include/bits/istream.tcc (putback, unget, sync, tellg, seekg):\n\tComment and change to comply with DR 60 and the effect on gcount().\n\t* include/std/std_istream.h:  Update comments.\n\t* testsuite/27_io/basic_istream/putback/char/1.cc (test01):  Add\n\tcomments about reasons for tests.  Test sync() against gcount().\n\t* testsuite/27_io/basic_istream/seekg/char/2.cc:  New file, test\n\tfor effect on gcount().\n\t* testsuite/27_io/basic_istream/tellg/char/2.cc:  New file, test\n\tfor effect on gcount().\n\nFrom-SVN: r65983", "tree": {"sha": "60c7ef384f6d6c092cf653447cc92cb2f064c350", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60c7ef384f6d6c092cf653447cc92cb2f064c350"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419/comments", "author": null, "committer": null, "parents": [{"sha": "c57ddcf1b4642ffda115ac5fedf1088ac891d47d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c57ddcf1b4642ffda115ac5fedf1088ac891d47d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c57ddcf1b4642ffda115ac5fedf1088ac891d47d"}], "stats": {"total": 150, "additions": 131, "deletions": 19}, "files": [{"sha": "f0474b5ff73e5415144457d0248c17946ff29046", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419", "patch": "@@ -1,3 +1,17 @@\n+2003-04-23  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* docs/html/ext/howto.html ('LWG Issues'):  Add issue 60, partial\n+\timplementation only.\n+\t* include/bits/istream.tcc (putback, unget, sync, tellg, seekg):\n+\tComment and change to comply with DR 60 and the effect on gcount().\n+\t* include/std/std_istream.h:  Update comments.\n+\t* testsuite/27_io/basic_istream/putback/char/1.cc (test01):  Add\n+\tcomments about reasons for tests.  Test sync() against gcount().\n+\t* testsuite/27_io/basic_istream/seekg/char/2.cc:  New file, test\n+\tfor effect on gcount().\n+\t* testsuite/27_io/basic_istream/tellg/char/2.cc:  New file, test\n+\tfor effect on gcount().\n+\n 2003-04-22  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* testsuite/27_io/basic_filebuf/close/char/9964.cc (test_07):"}, {"sha": "d2fc51ca3a8ee0c63ada775009320860cd80a61e", "filename": "libstdc++-v3/docs/html/ext/howto.html", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html?ref=6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419", "patch": "@@ -464,6 +464,13 @@ <h2><a name=\"5\">LWG Issues</a></h2>\n         &quot;copying stream state&quot; was deemed too complicated.\n     </dd>\n \n+    <dt><a href=\"lwg-defects.html#60\">60</a>:\n+        <em>What is a formatted input function?</em>\n+    </dt>\n+    <dd>This DR made many widespread changes to <code>basic_istream</code>,\n+        not all of which have been implemented.\n+    </dd>\n+\n     <dt><a href=\"lwg-defects.html#68\">68</a>:\n         <em>Extractors for char* should store null at end</em>\n     </dt>"}, {"sha": "17af6e028cd36bd08004fe3e990e369c9ca85da8", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419", "patch": "@@ -841,7 +841,10 @@ namespace std\n     basic_istream<_CharT, _Traits>::\n     putback(char_type __c)\n     {\n+#ifdef _GLIBCPP_RESOLVE_LIB_DEFECTS\n+// 60. What is a formatted input function?\n       _M_gcount = 0;\n+#endif\n       sentry __cerb(*this, true);\n       if (__cerb) \n \t{\n@@ -872,7 +875,10 @@ namespace std\n     basic_istream<_CharT, _Traits>::\n     unget(void)\n     {\n+#ifdef _GLIBCPP_RESOLVE_LIB_DEFECTS\n+// 60. What is a formatted input function?\n       _M_gcount = 0;\n+#endif\n       sentry __cerb(*this, true);\n       if (__cerb) \n \t{\n@@ -903,8 +909,8 @@ namespace std\n     basic_istream<_CharT, _Traits>::\n     sync(void)\n     {\n+      // DR60.  Do not change _M_gcount.\n       int __ret = -1;\n-      _M_gcount = 0;\n       sentry __cerb(*this, true);\n       if (__cerb) \n \t{\n@@ -948,7 +954,7 @@ namespace std\n     basic_istream<_CharT, _Traits>::\n     seekg(pos_type __pos)\n     {\n-      _M_gcount = 0;\n+      // DR60.  Do not change _M_gcount.\n       if (!this->fail())\n \t{\n #ifdef _GLIBCPP_RESOLVE_LIB_DEFECTS\n@@ -968,7 +974,7 @@ namespace std\n     basic_istream<_CharT, _Traits>::\n     seekg(off_type __off, ios_base::seekdir __dir)\n     {\n-      _M_gcount = 0;\n+      // DR60.  Do not change _M_gcount.\n       if (!this->fail())\n \t{\n #ifdef _GLIBCPP_RESOLVE_LIB_DEFECTS"}, {"sha": "8559337de4023472c90d2ad1ec4e20dd93e132e6", "filename": "libstdc++-v3/include/std/std_istream.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_istream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_istream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_istream.h?ref=6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419", "patch": "@@ -476,10 +476,6 @@ namespace std\n        *\n        *  @note  Since no characters are extracted, the next call to\n        *         @c gcount() will return 0, as required by DR 60.\n-       *\n-       *  @if maint\n-       *  FIXME We don't comply with DR 60 here, _M_gcount is untouched.\n-       *  @endif\n       */\n       __istream_type& \n       putback(char_type __c);\n@@ -513,9 +509,6 @@ namespace std\n        *  @note  This function does not count the number of characters\n        *         extracted, if any, and therefore does not affect the next\n        *         call to @c gcount().\n-       *  @if maint\n-       *  FIXME We don't comply with DR 60 here, _M_gcount is zeroed.\n-       *  @endif\n       */\n       int \n       sync();\n@@ -545,9 +538,6 @@ namespace std\n        *  @note  This function does not count the number of characters\n        *         extracted, if any, and therefore does not affect the next\n        *         call to @c gcount().\n-       *  @if maint\n-       *  FIXME We don't comply with DR 60 here, _M_gcount is zeroed.\n-       *  @endif\n       */\n       __istream_type& \n       seekg(pos_type);\n@@ -564,9 +554,6 @@ namespace std\n        *  @note  This function does not count the number of characters\n        *         extracted, if any, and therefore does not affect the next\n        *         call to @c gcount().\n-       *  @if maint\n-       *  FIXME We don't comply with DR 60 here, _M_gcount is zeroed.\n-       *  @endif\n       */\n       __istream_type& \n       seekg(off_type, ios_base::seekdir);"}, {"sha": "0213e3dfac0626ed6dbd60883ed0dae635b10fac", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/putback/char/1.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fputback%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fputback%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fputback%2Fchar%2F1.cc?ref=6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419", "patch": "@@ -39,8 +39,9 @@ test01()\n \n   std::stringbuf isbuf_03(str_02, std::ios_base::in);\n   std::stringbuf isbuf_04(str_02, std::ios_base::in);\n+  std::stringbuf isbuf_05(str_02, std::ios_base::in);\n \n-  std::istream is_00(NULL);\n+  std::istream is_00(&isbuf_05);\n   std::istream is_03(&isbuf_03);\n   std::istream is_04(&isbuf_04);\n   std::ios_base::iostate state1, state2, statefail, stateeof;\n@@ -54,7 +55,7 @@ test01()\n   is_04.clear();\n   state1 = is_04.rdstate();\n   is_04.putback('|');\n-  VERIFY( is_04.gcount() == 0 );\n+  VERIFY( is_04.gcount() == 0 );  // DR 60\n   state2 = is_04.rdstate();\n   VERIFY( state1 == state2 );\n   VERIFY( is_04.peek() == '|' );\n@@ -63,13 +64,17 @@ test01()\n   is_04.clear();\n   state1 = is_04.rdstate();\n   is_04.unget();\n-  VERIFY( is_04.gcount() == 0 );\n+  VERIFY( is_04.gcount() == 0 );  // DR 60\n   state2 = is_04.rdstate();\n   VERIFY( state1 == state2 );\n   VERIFY( is_04.peek() == 'r' );\n   \n   // int sync()\n+  is_00.ignore(10);\n+  int count1 = is_00.gcount();\n   int i = is_00.sync();\n+  int count2 = is_00.gcount();\n+  VERIFY (count1 == count2 );     // DR 60\n }\n \n int "}, {"sha": "04078dbafeb884de07d3a1f2464d2cecdc1db72a", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/seekg/char/2.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fseekg%2Fchar%2F2.cc?ref=6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419", "patch": "@@ -0,0 +1,48 @@\n+// 2003-04-22 pme\n+\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+// DR 60 -- seekg does not effect calls to gcount\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test = true;\n+\n+  istringstream ist(\"the lamb lies down on broadway\");\n+  ios::pos_type pos = ist.tellg();\n+  ist.ignore(4);\n+  int count1 = ist.gcount();\n+  ist.seekg(pos);\n+  int count2 = ist.gcount();\n+  ist.seekg(pos, ios::beg);\n+  count2 = ist.gcount();\n+  VERIFY( count1 == count2 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "b9af611c0447b09efcbf0ede397c84feafe599d6", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/tellg/char/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Ftellg%2Fchar%2F2.cc?ref=6894ddcf3d2b95e6d973e34c2f2fe03d9abd4419", "patch": "@@ -0,0 +1,45 @@\n+// 2003-04-22 pme\n+\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+// DR 60 -- tellg does not effect calls to gcount\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test = true;\n+\n+  istringstream ist(\"three sides live\");\n+  ist.ignore(4);\n+  int count1 = ist.gcount();\n+  ist.tellg();\n+  int count2 = ist.gcount();\n+  VERIFY( count1 == count2 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}