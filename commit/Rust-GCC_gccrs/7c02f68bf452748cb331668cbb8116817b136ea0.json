{"sha": "7c02f68bf452748cb331668cbb8116817b136ea0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MwMmY2OGJmNDUyNzQ4Y2IzMzE2NjhjYmI4MTE2ODE3YjEzNmVhMA==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2014-10-07T16:13:22Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2014-10-07T16:13:22Z"}, "message": "re PR fortran/44054 (Handle -Werror, -Werror=, -fdiagnostics-show-option, !GCC$ diagnostic (pragmas) and color)\n\ngcc/fortran/ChangeLog:\n\n2014-10-06  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR fortran/44054\n\tPR fortran/54687\n\t* gfortran.h (gfc_warning_cmdline): Add overload that takes an\n\toption.\n\t(gfc_error_cmdline): Declare.\n\t* error.c (gfc_warning_cmdline): New overload that takes an option.\n\t(gfc_error_cmdline): New.\n\t* lang.opt (Wmissing-include-dirs): New.\n\t* scanner.c (add_path_to_list): Use the new functions.\n\t(load_file): Likewise.\n\t* options.c (gfc_init_options): Wmissing-include-dirs is enabled\n\tby default in Fortran.\n\t(gfc_handle_option): Accept automatically handled options.\n\nFrom-SVN: r215974", "tree": {"sha": "6da35a78a8c684e952244e9c639aa507f3c11a0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6da35a78a8c684e952244e9c639aa507f3c11a0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c02f68bf452748cb331668cbb8116817b136ea0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c02f68bf452748cb331668cbb8116817b136ea0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c02f68bf452748cb331668cbb8116817b136ea0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c02f68bf452748cb331668cbb8116817b136ea0/comments", "author": null, "committer": null, "parents": [{"sha": "96f6e029ed166111d1178f29e7ab63f78f044554", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f6e029ed166111d1178f29e7ab63f78f044554", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96f6e029ed166111d1178f29e7ab63f78f044554"}], "stats": {"total": 87, "additions": 75, "deletions": 12}, "files": [{"sha": "113aaa747f8efeb4e5b5c64fd84aafbe185ac99b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c02f68bf452748cb331668cbb8116817b136ea0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c02f68bf452748cb331668cbb8116817b136ea0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7c02f68bf452748cb331668cbb8116817b136ea0", "patch": "@@ -1,3 +1,19 @@\n+2014-10-06  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR fortran/44054\n+\tPR fortran/54687\n+\t* gfortran.h (gfc_warning_cmdline): Add overload that takes an\n+\toption.\n+\t(gfc_error_cmdline): Declare.\n+\t* error.c (gfc_warning_cmdline): New overload that takes an option.\n+\t(gfc_error_cmdline): New.\n+\t* lang.opt (Wmissing-include-dirs): New.\n+\t* scanner.c (add_path_to_list): Use the new functions.\n+\t(load_file): Likewise.\n+\t* options.c (gfc_init_options): Wmissing-include-dirs is enabled\n+\tby default in Fortran.\n+\t(gfc_handle_option): Accept automatically handled options.\n+\n 2014-10-06  Tobias Burnus  <burnus@net-b.de>\n \n \t* libgfortran.h (GFC_STD_F2015): Add."}, {"sha": "b623ea82c0132ea6a6136ce4de04f70106f632b6", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c02f68bf452748cb331668cbb8116817b136ea0/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c02f68bf452748cb331668cbb8116817b136ea0/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=7c02f68bf452748cb331668cbb8116817b136ea0", "patch": "@@ -1054,15 +1054,51 @@ gfc_diagnostic_finalizer (diagnostic_context *context,\n \n /* Give a warning about the command-line.  */\n \n-void\n+bool\n+gfc_warning_cmdline (int opt, const char *gmsgid, ...)\n+{\n+  va_list argp;\n+  diagnostic_info diagnostic;\n+  bool ret;\n+\n+  va_start (argp, gmsgid);\n+  diagnostic_set_info (&diagnostic, gmsgid, &argp, UNKNOWN_LOCATION,\n+\t\t       DK_WARNING);\n+  diagnostic.option_index = opt;\n+  ret = report_diagnostic (&diagnostic);\n+  va_end (argp);\n+  return ret;\n+}\n+\n+\n+/* Give a warning about the command-line.  */\n+\n+bool\n gfc_warning_cmdline (const char *gmsgid, ...)\n {\n   va_list argp;\n   diagnostic_info diagnostic;\n+  bool ret;\n \n   va_start (argp, gmsgid);\n   diagnostic_set_info (&diagnostic, gmsgid, &argp, UNKNOWN_LOCATION,\n \t\t       DK_WARNING);\n+  ret = report_diagnostic (&diagnostic);\n+  va_end (argp);\n+  return ret;\n+}\n+\n+\n+/* Give an error about the command-line.  */\n+\n+void\n+gfc_error_cmdline (const char *gmsgid, ...)\n+{\n+  va_list argp;\n+  diagnostic_info diagnostic;\n+\n+  va_start (argp, gmsgid);\n+  diagnostic_set_info (&diagnostic, gmsgid, &argp, UNKNOWN_LOCATION, DK_ERROR);\n   report_diagnostic (&diagnostic);\n   va_end (argp);\n }"}, {"sha": "0809379205beefda9b08cea84b27c52a68e45c7d", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c02f68bf452748cb331668cbb8116817b136ea0/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c02f68bf452748cb331668cbb8116817b136ea0/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=7c02f68bf452748cb331668cbb8116817b136ea0", "patch": "@@ -2698,12 +2698,14 @@ const char *gfc_print_wide_char (gfc_char_t);\n \n void gfc_warning (const char *, ...) ATTRIBUTE_GCC_GFC(1,2);\n void gfc_warning_now (const char *, ...) ATTRIBUTE_GCC_GFC(1,2);\n-void gfc_warning_cmdline (const char *gmsgid, ...) ATTRIBUTE_GCC_GFC(1,2);\n+bool gfc_warning_cmdline (const char *gmsgid, ...) ATTRIBUTE_GCC_GFC(1,2);\n+bool gfc_warning_cmdline (int opt, const char *gmsgid, ...) ATTRIBUTE_GCC_GFC(2,3);\n \n void gfc_clear_warning (void);\n void gfc_warning_check (void);\n \n void gfc_error (const char *, ...) ATTRIBUTE_GCC_GFC(1,2);\n+void gfc_error_cmdline (const char *gmsgid, ...) ATTRIBUTE_GCC_GFC(1,2);\n void gfc_error_now (const char *, ...) ATTRIBUTE_GCC_GFC(1,2);\n void gfc_fatal_error (const char *, ...) ATTRIBUTE_NORETURN ATTRIBUTE_GCC_GFC(1,2);\n void gfc_internal_error (const char *, ...) ATTRIBUTE_NORETURN ATTRIBUTE_GCC_GFC(1,2);"}, {"sha": "b66e892e208b6a9296d561454e6d14256ea171d3", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c02f68bf452748cb331668cbb8116817b136ea0/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c02f68bf452748cb331668cbb8116817b136ea0/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=7c02f68bf452748cb331668cbb8116817b136ea0", "patch": "@@ -257,6 +257,10 @@ Wintrinsics-std\n Fortran Warning\n Warn on intrinsics not part of the selected standard\n \n+Wmissing-include-dirs\n+Fortran\n+; Documented in C/C++\n+\n Wuse-without-only\n Fortran Warning\n Warn about USE statements that have no ONLY qualifier"}, {"sha": "a482d2f3a733f0958fb4bfa8886932c4ab148ed0", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c02f68bf452748cb331668cbb8116817b136ea0/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c02f68bf452748cb331668cbb8116817b136ea0/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=7c02f68bf452748cb331668cbb8116817b136ea0", "patch": "@@ -172,6 +172,12 @@ gfc_init_options (unsigned int decoded_options_count,\n   gfc_option.rtcheck = 0;\n   gfc_option.coarray = GFC_FCOARRAY_NONE;\n \n+  /* ??? Wmissing-include-dirs is disabled by default in C/C++ but\n+     enabled by default in Fortran.  Ideally, we should express this\n+     in .opt, but that is not supported yet.  */\n+  if (!global_options_set.x_cpp_warn_missing_include_dirs)\n+    global_options.x_cpp_warn_missing_include_dirs = 1;;\n+\n   set_default_std_flags ();\n \n   /* Initialize cpp-related options.  */\n@@ -634,6 +640,8 @@ gfc_handle_option (size_t scode, const char *arg, int value,\n   switch (code)\n     {\n     default:\n+      if (cl_options[code].flags & gfc_option_lang_mask ())\n+\tbreak;\n       result = false;\n       break;\n "}, {"sha": "757037c4b304b882ec415c68e8f1de82a902f5ff", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c02f68bf452748cb331668cbb8116817b136ea0/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c02f68bf452748cb331668cbb8116817b136ea0/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=7c02f68bf452748cb331668cbb8116817b136ea0", "patch": "@@ -324,19 +324,16 @@ add_path_to_list (gfc_directorylist **list, const char *path,\n   if (stat (q, &st))\n     {\n       if (errno != ENOENT)\n-\tgfc_warning_now (\"Include directory \\\"%s\\\": %s\", path,\n-\t\t\t xstrerror(errno));\n-      else\n-\t{\n-\t  /* FIXME:  Also support -Wmissing-include-dirs.  */\n-\t  if (warn)\n-\t    gfc_warning_now (\"Nonexistent include directory \\\"%s\\\"\", path);\n-\t}\n+\tgfc_warning_cmdline (\"Include directory %qs: %s\", path,\n+\t\t\t     xstrerror(errno));\n+      else if (warn)\n+\tgfc_warning_cmdline (OPT_Wmissing_include_dirs,\n+\t\t\t     \"Nonexistent include directory %qs\", path);\n       return;\n     }\n   else if (!S_ISDIR (st.st_mode))\n     {\n-      gfc_warning_now (\"\\\"%s\\\" is not a directory\", path);\n+      gfc_warning_cmdline (\"%qs is not a directory\", path);\n       return;\n     }\n \n@@ -1925,7 +1922,7 @@ load_file (const char *realfilename, const char *displayedname, bool initial)\n \tinput = gfc_open_file (realfilename);\n       if (input == NULL)\n \t{\n-\t  gfc_error_now (\"Can't open file '%s'\", filename);\n+\t  gfc_error_cmdline (\"Can't open file %qs\", filename);\n \t  return false;\n \t}\n     }"}]}