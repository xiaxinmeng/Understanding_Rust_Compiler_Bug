{"sha": "e1c293ae205da90f0bc0788fbf9bbe87336dcd58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFjMjkzYWUyMDVkYTkwZjBiYzA3ODhmYmY5YmJlODczMzZkY2Q1OA==", "commit": {"author": {"name": "Jason Thorpe", "email": "thorpej@wasabisystems.com", "date": "2002-05-30T01:29:29Z"}, "committer": {"name": "Jason Thorpe", "email": "thorpej@gcc.gnu.org", "date": "2002-05-30T01:29:29Z"}, "message": "netbsd.h (TARGET_OS_CPP_BUILTINS): Define.\n\n* config/mips/netbsd.h (TARGET_OS_CPP_BUILTINS): Define.\n(CPP_PREDEFINES): Make sure this is undefined.\n(CPP_SPEC): Place -D__mips=1 at the beginning of the spec,\nsince it is no longer in CPP_PREDEFINES.  Don't -U__MIPSEL__\nor -U__MIPSEB__ before defining one or the other.  Instead,\nuse %(subtarget_endian_default) if neither -EB nor -EL are\nspecified.\n(SUBTARGET_EXTRA_SPECS): Define.\n(SUBTARGET_CPP_SPEC): Remove __LONG64 handling.  Use\n%(netbsd_cpp_spec).\n\nFrom-SVN: r54036", "tree": {"sha": "d86440d3b16b83567cd5e1e1800c339d693f3c2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d86440d3b16b83567cd5e1e1800c339d693f3c2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1c293ae205da90f0bc0788fbf9bbe87336dcd58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1c293ae205da90f0bc0788fbf9bbe87336dcd58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1c293ae205da90f0bc0788fbf9bbe87336dcd58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1c293ae205da90f0bc0788fbf9bbe87336dcd58/comments", "author": null, "committer": null, "parents": [{"sha": "fde6d81fc077c0a7f1446799d5130b32c611dced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fde6d81fc077c0a7f1446799d5130b32c611dced", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fde6d81fc077c0a7f1446799d5130b32c611dced"}], "stats": {"total": 80, "additions": 53, "deletions": 27}, "files": [{"sha": "d6895ef894142515dc31a05470e0cc2f2d657005", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c293ae205da90f0bc0788fbf9bbe87336dcd58/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c293ae205da90f0bc0788fbf9bbe87336dcd58/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1c293ae205da90f0bc0788fbf9bbe87336dcd58", "patch": "@@ -1,3 +1,16 @@\n+2002-05-29  Jason Thorpe  <thorpej@wasabisystems.com>\n+\n+\t* config/mips/netbsd.h (TARGET_OS_CPP_BUILTINS): Define.\n+\t(CPP_PREDEFINES): Make sure this is undefined.\n+\t(CPP_SPEC): Place -D__mips=1 at the beginning of the spec,\n+\tsince it is no longer in CPP_PREDEFINES.  Don't -U__MIPSEL__\n+\tor -U__MIPSEB__ before defining one or the other.  Instead,\n+\tuse %(subtarget_endian_default) if neither -EB nor -EL are\n+\tspecified.\n+\t(SUBTARGET_EXTRA_SPECS): Define.\n+\t(SUBTARGET_CPP_SPEC): Remove __LONG64 handling.  Use\n+\t%(netbsd_cpp_spec).\n+\n 2002-05-29  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* doc/md.texi (Patterns): Note pattern condition pitfall"}, {"sha": "a0c38f6e37cb403ac3a6937455cd038649457520", "filename": "gcc/config/mips/netbsd.h", "status": "modified", "additions": 40, "deletions": 27, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c293ae205da90f0bc0788fbf9bbe87336dcd58/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c293ae205da90f0bc0788fbf9bbe87336dcd58/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fnetbsd.h?ref=e1c293ae205da90f0bc0788fbf9bbe87336dcd58", "patch": "@@ -36,6 +36,19 @@ Boston, MA 02111-1307, USA.  */\n \n #define TARGET_DEFAULT (MASK_GAS|MASK_ABICALLS)\n \n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      NETBSD_OS_CPP_BUILTINS_ELF();\t\t\t\\\n+      builtin_define (\"__NO_LEADING_UNDERSCORES__\");\t\\\n+      builtin_define (\"__mips__\");\t\t\t\\\n+      builtin_define (\"__GP_SUPPORT__\");\t\t\\\n+      builtin_assert (\"machine=mips\");\t\t\t\\\n+      if (TARGET_LONG64)\t\t\t\t\\\n+\tbuiltin_define (\"__LONG64\");\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n+\n \n /* XXX Don't use DWARF-2 debugging info, for now.  */\n #undef DBX_DEBUGGING_INFO\n@@ -54,6 +67,7 @@ Boston, MA 02111-1307, USA.  */\n #undef US_SOFTWARE_GOFAST\n #undef INIT_SUBTARGET_OPTABS\n #define INIT_SUBTARGET_OPTABS\n+#undef CPP_PREDEFINES\n \n \n /* Get generic NetBSD definitions.  */\n@@ -64,30 +78,21 @@ Boston, MA 02111-1307, USA.  */\n #include <netbsd-elf.h>\n \n \n-/* Provide CPP predefines appropriate for NetBSD.  We default to\n-   MIPS-I.  */\n+/* Provide a CPP_SPEC appropriate for NetBSD.  This is a simplified\n+   CPP_SPEC from <mips/mips.h>.  We (mostly) use the SUBTARGET_CPP_SPEC\n+   to deal with NetBSD-specific CPP options.\n \n-#undef CPP_PREDEFINES\n-#if TARGET_ENDIAN_DEFAULT != 0 \n-#define CPP_PREDEFINES\t\t\t\t\t\t\t\\\n-  \"-D__NetBSD__ -D__ELF__ -D__mips__ -D__mips=1 -D__MIPSEB__\t\t\\\n-   -D__NO_LEADING_UNDERSCORES__\t-D__GP_SUPPORT__\t\t\t\\\n-   -Asystem=unix -Asystem=NetBSD -Amachine=mips\"\n-#else\n-#define CPP_PREDEFINES\t\t\t\t\t\t\t\\\n-  \"-D__NetBSD__ -D__ELF__ -D__mips__ -D__mips=1 -D__MIPSEL__\t\t\\\n-   -D__NO_LEADING_UNDERSCORES__\t-D__GP_SUPPORT__\t\t\t\\\n-   -Asystem=unix -Asystem=NetBSD -Amachine=mips\"\n-#endif\n+   We default to MIPS-I at the very beginning of the spec, and let the\n+   value get overridden later, as necessary.  We also set up a default\n+   endian spec.\n \n-\n-/* Provide a CPP_SPEC appropriate for NetBSD.  This is a simplified\n-   CPP_SPEC from <mips/mips.h>.  We use the SUBTARGET_CPP_SPEC to\n-   deal with NetBSD-specific CPP options.  */\n+   This will get cleaned up once the MIPS target uses\n+   TARGET_CPU_CPP_BUILTINS().  */\n \n #undef CPP_SPEC\n #define CPP_SPEC\t\t\t\t\t\t\t\\\n-  \"%(subtarget_cpp_size_spec)\t\t\t\t\t\t\\\n+  \"-D__mips=1\t\t\t\t\t\t\t\t\\\n+   %(subtarget_cpp_size_spec)\t\t\t\t\t\t\\\n    %{mips3:-U__mips -D__mips=3 -D__mips64}\t\t\t\t\\\n    %{mips4:-U__mips -D__mips=4 -D__mips64}\t\t\t\t\\\n    %{mips32:-U__mips -D__mips=32}\t\t\t\t\t\\\n@@ -105,18 +110,26 @@ Boston, MA 02111-1307, USA.  */\n    %{msoft-float:-D__mips_soft_float}\t\t\t\t\t\\\n    %{mabi=eabi:-D__mips_eabi}\t\t\t\t\t\t\\\n    %{mips16:%{!mno-mips16:-D__mips16}}\t\t\t\t\t\\\n-   %{EB:-U__MIPSEL__ -D__MIPSEB__}\t\t\t\t\t\\\n-   %{EL:-U__MIPSEB__ -D__MIPSEL__}\t\t\t\t\t\\\n+   %{EB:-D__MIPSEB__} %{EL:-D__MIPSEL__}\t\t\t\t\\\n+   %{!EB:%{!EL:%(subtarget_endian_default)}}\t\t\t\t\\\n    %(subtarget_cpp_spec) \"\n \n-/* Provide a SUBTARGET_CPP_SPEC appropriate for NetBSD.  Currently,\n-   we just deal with the GCC option '-posix', and define __LONG64\n-   as appropriate for <machine/ansi.h>.  */\n+/* Extra specs we need.  */\n+#undef SUBTARGET_EXTRA_SPECS\n+#define SUBTARGET_EXTRA_SPECS\t\t\t\t\t\t\\\n+  { \"subtarget_endian_default\",\tSUBTARGET_ENDIAN_DEFAULT_SPEC },\t\\\n+  { \"netbsd_cpp_spec\",\t\tNETBSD_CPP_SPEC },\n+\n+#if TARGET_ENDIAN_DEFAULT != 0\n+#define SUBTARGET_ENDIAN_DEFAULT_SPEC \"-D__MIPSEB__\"\n+#else\n+#define SUBTARGET_ENDIAN_DEFAULT_SPEC \"-D__MIPSEL__\"\n+#endif\n+\n+/* Provide a SUBTARGET_CPP_SPEC appropriate for NetBSD.  */\n \n #undef SUBTARGET_CPP_SPEC\n-#define SUBTARGET_CPP_SPEC \"%{posix:-D_POSIX_SOURCE}    \\\n-   %{mlong64:%{!mips1:%{!mips2:%{!mips32:-D__LONG64}}}} \\\n-   %{!mlong64:-U__LONG64}\"\n+#define SUBTARGET_CPP_SPEC \"%(netbsd_cpp_spec)\"\n \n /* Provide a LINK_SPEC appropriate for a NetBSD/mips target.\n    This is a copy of LINK_SPEC from <netbsd-elf.h> tweaked for"}]}