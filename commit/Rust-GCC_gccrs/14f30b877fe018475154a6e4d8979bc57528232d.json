{"sha": "14f30b877fe018475154a6e4d8979bc57528232d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRmMzBiODc3ZmUwMTg0NzUxNTRhNmU0ZDg5NzliYzU3NTI4MjMyZA==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2010-01-14T10:46:57Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2010-01-14T10:46:57Z"}, "message": "re PR rtl-optimization/42294 (ICE in code_motion_path_driver for 416.gamess)\n\n2010-01-14  Alexander Monakov  <amonakov@ispras.ru>\n\n\tPR rtl-optimization/42294\n\t* sel-sched-ir.h (struct _sel_insn_data): Update comment.\n\t* sel-sched.c (move_exprs_to_boundary): Transitively add all\n\toriginators' originators.\n\n\t* gfortran.dg/pr42294.f: New.\n\nFrom-SVN: r155893", "tree": {"sha": "c509501241a054bccf98517dd21d44b196485b7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c509501241a054bccf98517dd21d44b196485b7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14f30b877fe018475154a6e4d8979bc57528232d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f30b877fe018475154a6e4d8979bc57528232d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14f30b877fe018475154a6e4d8979bc57528232d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f30b877fe018475154a6e4d8979bc57528232d/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ec4d0ada31aee6ee23b4ed7f234171f6639c0dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ec4d0ada31aee6ee23b4ed7f234171f6639c0dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ec4d0ada31aee6ee23b4ed7f234171f6639c0dd"}], "stats": {"total": 65, "additions": 64, "deletions": 1}, "files": [{"sha": "c8bd4c97f7eff0265c2b30e3ef12fa6ebcf72c0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14f30b877fe018475154a6e4d8979bc57528232d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14f30b877fe018475154a6e4d8979bc57528232d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14f30b877fe018475154a6e4d8979bc57528232d", "patch": "@@ -1,3 +1,10 @@\n+2010-01-14  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\tPR rtl-optimization/42294\n+\t* sel-sched-ir.h (struct _sel_insn_data): Update comment.\n+\t* sel-sched.c (move_exprs_to_boundary): Transitively add all\n+\toriginators' originators.\n+\n 2010-01-14  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR rtl-optimization/39453"}, {"sha": "50eb903dac101bc7d2db5f311784890e70f4b19f", "filename": "gcc/sel-sched-ir.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14f30b877fe018475154a6e4d8979bc57528232d/gcc%2Fsel-sched-ir.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14f30b877fe018475154a6e4d8979bc57528232d/gcc%2Fsel-sched-ir.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.h?ref=14f30b877fe018475154a6e4d8979bc57528232d", "patch": "@@ -715,7 +715,8 @@ struct _sel_insn_data\n   bitmap found_deps;\n \n   /* An INSN_UID bit is set when this is a bookkeeping insn generated from\n-     a parent with this uid.  */\n+     a parent with this uid.  If a parent is a bookkeeping copy, all its\n+     originators are transitively included in this set.  */\n   bitmap originators;\n \n   /* A hashtable caching the result of insn transformations through this one.  */"}, {"sha": "1ec2eeb292d5ef90e360d56ec7a759c8eaca7b03", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14f30b877fe018475154a6e4d8979bc57528232d/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14f30b877fe018475154a6e4d8979bc57528232d/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=14f30b877fe018475154a6e4d8979bc57528232d", "patch": "@@ -5208,12 +5208,21 @@ move_exprs_to_boundary (bnd_t bnd, expr_t expr_vliw,\n \n   EXECUTE_IF_SET_IN_BITMAP (current_copies, 0, book_uid, bi)\n     {\n+      unsigned uid;\n+      bitmap_iterator bi;\n+\n       /* We allocate these bitmaps lazily.  */\n       if (! INSN_ORIGINATORS_BY_UID (book_uid))\n         INSN_ORIGINATORS_BY_UID (book_uid) = BITMAP_ALLOC (NULL);\n \n       bitmap_copy (INSN_ORIGINATORS_BY_UID (book_uid),\n                    current_originators);\n+\n+      /* Transitively add all originators' originators.  */\n+      EXECUTE_IF_SET_IN_BITMAP (current_originators, 0, uid, bi)\n+       if (INSN_ORIGINATORS_BY_UID (uid))\n+\t bitmap_ior_into (INSN_ORIGINATORS_BY_UID (book_uid),\n+\t\t\t  INSN_ORIGINATORS_BY_UID (uid));\n     }\n \n   return should_move;"}, {"sha": "6389af52eaf3263107d62e8bfe2199486deb9528", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14f30b877fe018475154a6e4d8979bc57528232d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14f30b877fe018475154a6e4d8979bc57528232d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=14f30b877fe018475154a6e4d8979bc57528232d", "patch": "@@ -1,3 +1,8 @@\n+2010-01-14  Alexander Monakov <amonakov@ispras.ru>\n+\n+\tPR rtl-optimization/42294\n+\t* gfortran.dg/pr42294.f: New.\n+\n 2010-01-14  Alexander Monakov <amonakov@ispras.ru>\n \n \tPR rtl-optimization/39453"}, {"sha": "9464379083d7b718e94bca3d0cbedec14283c93f", "filename": "gcc/testsuite/gfortran.dg/pr42294.f", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14f30b877fe018475154a6e4d8979bc57528232d/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42294.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14f30b877fe018475154a6e4d8979bc57528232d/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42294.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42294.f?ref=14f30b877fe018475154a6e4d8979bc57528232d", "patch": "@@ -0,0 +1,41 @@\n+C PR rtl-optimization/42294\n+C { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } }\n+C { dg-options \"-O2 -fselective-scheduling2 -fsel-sched-pipelining -funroll-all-loops\" }\n+\n+      SUBROUTINE ORIEN(IW,NATOT,NTOTORB,NATORB,P,T)\n+      IMPLICIT DOUBLE PRECISION(A-H,O-Z)\n+      DIMENSION NATORB(NATOT),P(NTOTORB*(NTOTORB+1)/2)\n+      DIMENSION T(NTOTORB,NTOTORB)\n+      DO 9000 IATOM=1,NATOT\n+         ILAST = NTOTORB\n+         IF (IATOM.NE.NATOT) ILAST=NATORB(IATOM+1)-1\n+         DO 8000 IAOI=NATORB(IATOM),ILAST\n+            DO 7000 IAOJ = IAOI+1,ILAST\n+               R2 = 0.0D+00\n+               R3 = 0.0D+00\n+               DO 6000 INOTA=1,NATOT\n+                  DO 5000 IK=NATORB(INOTA),NTOTORB\n+                     IMAI=MAX(IK,IAOI)\n+                     IMII=MIN(IK,IAOI)\n+                     IMAJ=MAX(IK,IAOJ)\n+                     IMIJ=MIN(IK,IAOJ)\n+                     IKI=(IMAI*(IMAI-1))/2 + IMII\n+                     IKJ=(IMAJ*(IMAJ-1))/2 + IMIJ\n+                     PIKI=P(IKI)\n+                     PIKJ=P(IKJ)\n+                     R2 = R2 + (PIKI**4)-6*(PIKI*PIKI*PIKJ*PIKJ)+(PIKJ)\n+ 5000             CONTINUE\n+ 6000          CONTINUE\n+               R2 = (R2/4.0D+00)\n+               Q = SQRT(R2*R2 + R3*R3)\n+               IF (Q.LT.1.0D-08) GO TO 7000\n+               A = COS(THETA)\n+               B = -SIN(THETA)\n+               CALL ROT1INT(NTOTORB,IAOI,IAOJ,A,B,P)\n+ 7000       CONTINUE\n+ 8000    CONTINUE\n+ 9000 CONTINUE\n+      RETURN\n+      END\n+\n+"}]}