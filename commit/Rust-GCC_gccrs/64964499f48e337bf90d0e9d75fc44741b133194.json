{"sha": "64964499f48e337bf90d0e9d75fc44741b133194", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ5NjQ0OTlmNDhlMzM3YmY5MGQwZTlkNzVmYzQ0NzQxYjEzMzE5NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-06-21T12:11:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-06-21T12:11:00Z"}, "message": "re PR middle-end/32362 (ICE: in lookup_decl_in_outer_ctx, at omp-low.c:1508)\n\n\tPR middle-end/32362\n\t* omp-low.c (lookup_decl_in_outer_ctx): Don't ICE if t is NULL,\n\tbut decl is a global var, instead return decl.\n\t* gimplify.c (gimplify_adjust_omp_clauses_1): Add shared clauses\n\teven for is_global_var decls, if they are private in some outer\n\tcontext.\n\n\t* testsuite/libgomp.c/pr32362-1.c: New test.\n\t* testsuite/libgomp.c/pr32362-2.c: New test.\n\t* testsuite/libgomp.c/pr32362-3.c: New test.\n\nFrom-SVN: r125917", "tree": {"sha": "c5c2af76013fd82cf833725a5732c73bb1bd9903", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5c2af76013fd82cf833725a5732c73bb1bd9903"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64964499f48e337bf90d0e9d75fc44741b133194", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64964499f48e337bf90d0e9d75fc44741b133194", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64964499f48e337bf90d0e9d75fc44741b133194", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64964499f48e337bf90d0e9d75fc44741b133194/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d9eb5318b600dc6aec71b231f38fbb16b100359d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9eb5318b600dc6aec71b231f38fbb16b100359d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9eb5318b600dc6aec71b231f38fbb16b100359d"}], "stats": {"total": 134, "additions": 131, "deletions": 3}, "files": [{"sha": "cabe8b941faf86707095f4d7ea7d4f665de60888", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64964499f48e337bf90d0e9d75fc44741b133194/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64964499f48e337bf90d0e9d75fc44741b133194/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64964499f48e337bf90d0e9d75fc44741b133194", "patch": "@@ -1,3 +1,12 @@\n+2007-06-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/32362\n+\t* omp-low.c (lookup_decl_in_outer_ctx): Don't ICE if t is NULL,\n+\tbut decl is a global var, instead return decl.\n+\t* gimplify.c (gimplify_adjust_omp_clauses_1): Add shared clauses\n+\teven for is_global_var decls, if they are private in some outer\n+\tcontext.\n+\n 2007-06-21  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/32451"}, {"sha": "c93bb4449d5b1f14363259fdf848e5988d074603", "filename": "gcc/gimplify.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64964499f48e337bf90d0e9d75fc44741b133194/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64964499f48e337bf90d0e9d75fc44741b133194/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=64964499f48e337bf90d0e9d75fc44741b133194", "patch": "@@ -4882,7 +4882,20 @@ gimplify_adjust_omp_clauses_1 (splay_tree_node n, void *data)\n   else if (flags & GOVD_SHARED)\n     {\n       if (is_global_var (decl))\n-\treturn 0;\n+\t{\n+\t  struct gimplify_omp_ctx *ctx = gimplify_omp_ctxp->outer_context;\n+\t  while (ctx != NULL)\n+\t    {\n+\t      splay_tree_node on\n+\t\t= splay_tree_lookup (ctx->variables, (splay_tree_key) decl);\n+\t      if (on && (on->value & (GOVD_FIRSTPRIVATE | GOVD_LASTPRIVATE\n+\t\t\t\t      | GOVD_PRIVATE | GOVD_REDUCTION)) != 0)\n+\t\tbreak;\n+\t      ctx = ctx->outer_context;\n+\t    }\n+\t  if (ctx == NULL)\n+\t    return 0;\n+\t}\n       code = OMP_CLAUSE_SHARED;\n     }\n   else if (flags & GOVD_PRIVATE)"}, {"sha": "700645f6551dd39d4dbd5f7d45f60a107dc4009b", "filename": "gcc/omp-low.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64964499f48e337bf90d0e9d75fc44741b133194/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64964499f48e337bf90d0e9d75fc44741b133194/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=64964499f48e337bf90d0e9d75fc44741b133194", "patch": "@@ -1504,9 +1504,9 @@ lookup_decl_in_outer_ctx (tree decl, omp_context *ctx)\n   for (up = ctx->outer, t = NULL; up && t == NULL; up = up->outer)\n     t = maybe_lookup_decl (decl, up);\n \n-  gcc_assert (t);\n+  gcc_assert (t || is_global_var (decl));\n \n-  return t;\n+  return t ? t : decl;\n }\n \n "}, {"sha": "a4abc445a8795464ebcfab192b340ba02fb785c6", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64964499f48e337bf90d0e9d75fc44741b133194/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64964499f48e337bf90d0e9d75fc44741b133194/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=64964499f48e337bf90d0e9d75fc44741b133194", "patch": "@@ -1,3 +1,10 @@\n+2007-06-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/32362\n+\t* testsuite/libgomp.c/pr32362-1.c: New test.\n+\t* testsuite/libgomp.c/pr32362-2.c: New test.\n+\t* testsuite/libgomp.c/pr32362-3.c: New test.\n+\n 2007-06-07  Jakub Jelinek  <jakub@redhat.com>\n \n \t* team.c (gomp_team_start): Fix setting up thread_attr"}, {"sha": "3c62d4bdb269a2af672d5ef949dc43e04ae4f1f8", "filename": "libgomp/testsuite/libgomp.c/pr32362-1.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64964499f48e337bf90d0e9d75fc44741b133194/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr32362-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64964499f48e337bf90d0e9d75fc44741b133194/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr32362-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr32362-1.c?ref=64964499f48e337bf90d0e9d75fc44741b133194", "patch": "@@ -0,0 +1,32 @@\n+/* PR middle-end/32362 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+#include <omp.h>\n+#include <stdlib.h>\n+\n+int\n+main ()\n+{\n+  int n[4] = { -1, -1, -1, -1 };\n+  static int a = 2, b = 4;\n+  omp_set_num_threads (4);\n+  omp_set_dynamic (0);\n+  omp_set_nested (1);\n+#pragma omp parallel private(b)\n+  {\n+    b = omp_get_thread_num ();\n+#pragma omp parallel firstprivate(a)\n+    {\n+      a = (omp_get_thread_num () + a) + 1;\n+      if (b == omp_get_thread_num ())\n+\tn[omp_get_thread_num ()] = a + (b << 4);\n+    }\n+  }\n+  if (n[0] != 3)\n+    abort ();\n+  if (n[3] != -1\n+      && (n[1] != 0x14 || n[2] != 0x25 || n[3] != 0x36))\n+    abort ();\n+  return 0;\n+}"}, {"sha": "43f36e0e98be12ccaeeff4a399574b842e0e2c72", "filename": "libgomp/testsuite/libgomp.c/pr32362-2.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64964499f48e337bf90d0e9d75fc44741b133194/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr32362-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64964499f48e337bf90d0e9d75fc44741b133194/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr32362-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr32362-2.c?ref=64964499f48e337bf90d0e9d75fc44741b133194", "patch": "@@ -0,0 +1,33 @@\n+/* PR middle-end/32362 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+#include <omp.h>\n+#include <stdlib.h>\n+\n+int a = 2, b = 4;\n+\n+int\n+main ()\n+{\n+  int n[4] = { -1, -1, -1, -1 };\n+  omp_set_num_threads (4);\n+  omp_set_dynamic (0);\n+  omp_set_nested (1);\n+#pragma omp parallel private(b)\n+  {\n+    b = omp_get_thread_num ();\n+#pragma omp parallel firstprivate(a)\n+    {\n+      a = (omp_get_thread_num () + a) + 1;\n+      if (b == omp_get_thread_num ())\n+\tn[omp_get_thread_num ()] = a + (b << 4);\n+    }\n+  }\n+  if (n[0] != 3)\n+    abort ();\n+  if (n[3] != -1\n+      && (n[1] != 0x14 || n[2] != 0x25 || n[3] != 0x36))\n+    abort ();\n+  return 0;\n+}"}, {"sha": "09a88f52a3b6fd8f7bcfa8454e9973035045ca6c", "filename": "libgomp/testsuite/libgomp.c/pr32362-3.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64964499f48e337bf90d0e9d75fc44741b133194/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr32362-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64964499f48e337bf90d0e9d75fc44741b133194/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr32362-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr32362-3.c?ref=64964499f48e337bf90d0e9d75fc44741b133194", "patch": "@@ -0,0 +1,34 @@\n+/* PR middle-end/32362 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+#include <omp.h>\n+#include <stdlib.h>\n+\n+int a = 2;\n+\n+int\n+main ()\n+{\n+  int n[4] = { -1, -1, -1, -1 };\n+  int b = 4;\n+  omp_set_num_threads (4);\n+  omp_set_dynamic (0);\n+  omp_set_nested (1);\n+#pragma omp parallel private(b)\n+  {\n+    b = omp_get_thread_num ();\n+#pragma omp parallel firstprivate(a)\n+    {\n+      a = (omp_get_thread_num () + a) + 1;\n+      if (b == omp_get_thread_num ())\n+\tn[omp_get_thread_num ()] = a + (b << 4);\n+    }\n+  }\n+  if (n[0] != 3)\n+    abort ();\n+  if (n[3] != -1\n+      && (n[1] != 0x14 || n[2] != 0x25 || n[3] != 0x36))\n+    abort ();\n+  return 0;\n+}"}]}