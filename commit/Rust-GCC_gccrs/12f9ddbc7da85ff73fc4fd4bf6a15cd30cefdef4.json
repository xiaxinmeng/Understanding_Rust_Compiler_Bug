{"sha": "12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJmOWRkYmM3ZGE4NWZmNzNmYzRmZDRiZjZhMTVjZDMwY2VmZGVmNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-03-01T16:57:02Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-03-01T16:57:02Z"}, "message": "re PR tree-optimization/43220 (Paritially optimized __builtin_save_stack/__builtin_restore_stack causes segmentation fault)\n\n2010-03-01  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/43220\n\t* tree-ssa-ccp.c (optimize_stack_restore): Do not optimize\n\tBUILT_IN_STACK_{SAVE,RESTORE} around alloca.\n\n\t* gcc.c-torture/execute/pr43220.c: New testcase.\n\nFrom-SVN: r157149", "tree": {"sha": "dce5f3e5cbf410a30b6490696932190d8e2cdfe1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dce5f3e5cbf410a30b6490696932190d8e2cdfe1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f0c10f0fabb9b9559f9eeee4a8d1ec663df89aa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c10f0fabb9b9559f9eeee4a8d1ec663df89aa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0c10f0fabb9b9559f9eeee4a8d1ec663df89aa1"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "f243dbf70b1c5aeb988e2e1f2fc704f80ffc403a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4", "patch": "@@ -1,3 +1,9 @@\n+2010-03-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43220\n+\t* tree-ssa-ccp.c (optimize_stack_restore): Do not optimize\n+\tBUILT_IN_STACK_{SAVE,RESTORE} around alloca.\n+\n 2010-03-01  Richard Guenther  <rguenther@suse.de>\n \tMartin Jambor  <mjambor@suse.cz>\n "}, {"sha": "6e72856a933d82f0b7c2549ed49182c49f53e98a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4", "patch": "@@ -1,3 +1,8 @@\n+2010-03-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43220\n+\t* gcc.c-torture/execute/pr43220.c: New testcase.\n+\n 2010-03-01  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/43213"}, {"sha": "4709f17b5a0c468be5cc713dae8013b43c396cba", "filename": "gcc/testsuite/gcc.c-torture/execute/pr43220.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43220.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43220.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43220.c?ref=12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4", "patch": "@@ -0,0 +1,28 @@\n+void *volatile p;\n+\n+int\n+main (void)\n+{\n+  int n = 0;\n+lab:;\n+    {\n+      int x[n % 1000 + 1];\n+      x[0] = 1;\n+      x[n % 1000] = 2;\n+      p = x;\n+      n++;\n+    }\n+\n+    {\n+      int x[n % 1000 + 1];\n+      x[0] = 1;\n+      x[n % 1000] = 2;\n+      p = x;\n+      n++;\n+    }\n+\n+  if (n < 1000000)\n+    goto lab;\n+\n+  return 0;\n+}"}, {"sha": "03c35001718f2bdc13f29634d0d2e81f53aea406", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=12f9ddbc7da85ff73fc4fd4bf6a15cd30cefdef4", "patch": "@@ -3203,7 +3203,10 @@ optimize_stack_restore (gimple_stmt_iterator i)\n \tcontinue;\n \n       callee = gimple_call_fndecl (stmt);\n-      if (!callee || DECL_BUILT_IN_CLASS (callee) != BUILT_IN_NORMAL)\n+      if (!callee\n+\t  || DECL_BUILT_IN_CLASS (callee) != BUILT_IN_NORMAL\n+\t  /* All regular builtins are ok, just obviously not alloca.  */\n+\t  || DECL_FUNCTION_CODE (callee) == BUILT_IN_ALLOCA)\n \treturn NULL_TREE;\n \n       if (DECL_FUNCTION_CODE (callee) == BUILT_IN_STACK_RESTORE)"}]}