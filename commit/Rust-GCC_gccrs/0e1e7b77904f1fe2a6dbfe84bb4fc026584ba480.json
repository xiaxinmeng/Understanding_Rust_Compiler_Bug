{"sha": "0e1e7b77904f1fe2a6dbfe84bb4fc026584ba480", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUxZTdiNzc5MDRmMWZlMmE2ZGJmZTg0YmI0ZmMwMjY1ODRiYTQ4MA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-23T12:38:05Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-23T12:54:39Z"}, "message": "libstdc++: Allow net::io_context to compile without <poll.h> [PR 100180]\n\nThis adds dummy placeholders to net::io_context so that it can still be\ncompiled on targets without <poll.h>.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/100180\n\t* include/experimental/io_context (io_context): Define\n\tdummy_pollfd type so that most member functions still compile\n\twithout <poll.h> and struct pollfd.", "tree": {"sha": "7762e7cd9ba9cec9f1757e0b5544fc383f7b306f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7762e7cd9ba9cec9f1757e0b5544fc383f7b306f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e1e7b77904f1fe2a6dbfe84bb4fc026584ba480", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e1e7b77904f1fe2a6dbfe84bb4fc026584ba480", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e1e7b77904f1fe2a6dbfe84bb4fc026584ba480", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e1e7b77904f1fe2a6dbfe84bb4fc026584ba480/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3517dfe05c05a48885149334143230fcf0ebe6be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3517dfe05c05a48885149334143230fcf0ebe6be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3517dfe05c05a48885149334143230fcf0ebe6be"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "63d7db5b2d04ff83ffa4ee99c72b12501dd1cff0", "filename": "libstdc++-v3/include/experimental/io_context", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e1e7b77904f1fe2a6dbfe84bb4fc026584ba480/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fio_context", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e1e7b77904f1fe2a6dbfe84bb4fc026584ba480/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fio_context", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fio_context?ref=0e1e7b77904f1fe2a6dbfe84bb4fc026584ba480", "patch": "@@ -716,6 +716,7 @@ inline namespace v1\n \n     struct __reactor\n     {\n+#ifdef _GLIBCXX_HAVE_POLL_H\n       __reactor() : _M_fds(1)\n       {\n \tint __pipe[2];\n@@ -739,6 +740,7 @@ inline namespace v1\n \t::close(_M_fds.back().fd);\n \t::close(_M_notify_wr);\n       }\n+#endif\n \n       // write a notification byte to the pipe (ignoring errors)\n       void _M_notify()\n@@ -799,8 +801,12 @@ inline namespace v1\n \t_M_notify();\n       }\n \n-# ifdef _GLIBCXX_HAVE_POLL_H\n+#ifdef _GLIBCXX_HAVE_POLL_H\n       using __fdvec = vector<::pollfd>;\n+#else\n+      struct dummy_pollfd { int fd = -1; short events = 0, revents = 0; };\n+      using __fdvec = vector<dummy_pollfd>;\n+#endif\n \n       // Find first element p such that !(p.fd < __fd)\n       // N.B. always returns a dereferencable iterator.\n@@ -816,6 +822,7 @@ inline namespace v1\n       __status\n       wait(__fdvec& __fds, chrono::milliseconds __timeout)\n       {\n+#ifdef _GLIBCXX_HAVE_POLL_H\n \t// XXX not thread-safe!\n \t__fds = _M_fds;  // take snapshot to pass to poll()\n \n@@ -845,10 +852,14 @@ inline namespace v1\n \t__fds.erase(__part, __fds.end());\n \n \treturn _S_ok;\n+#else\n+\t(void) __timeout;\n+\t__fds.clear();\n+\treturn _S_error;\n+#endif\n       }\n \n       __fdvec _M_fds;\t// _M_fds.back() is the read end of the self-pipe\n-#endif\n       int _M_notify_wr;\t// write end of the self-pipe\n     };\n "}]}