{"sha": "19c1aa2ddf9d9afccd295b5bc5266bbd7d51997c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTljMWFhMmRkZjlkOWFmY2NkMjk1YjViYzUyNjZiYmQ3ZDUxOTk3Yw==", "commit": {"author": {"name": "R\u00fcdiger Sonderfeld", "email": "ruediger@c-plusplus.de", "date": "2012-06-20T18:03:10Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2012-06-20T18:03:10Z"}, "message": "Add DECL_SOURCE_COLUMN.\n\nI'm currently writing a plugin for GCC and I need to extract the\ncolumn of a declaration. There exists DECL_SOURCE_FILE/LINE already\nand for consistency reasons and ease of use I've added a\nDECL_SOURCE_COLUMN macro.\n\n2012-06-20  R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n\n\t* tree.h (DECL_SOURCE_COLUMN): New accessor\n\nFrom-SVN: r188841", "tree": {"sha": "1bdfdd2ea5b6ba3c4b2b1dadde219d84a3760823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bdfdd2ea5b6ba3c4b2b1dadde219d84a3760823"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19c1aa2ddf9d9afccd295b5bc5266bbd7d51997c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19c1aa2ddf9d9afccd295b5bc5266bbd7d51997c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19c1aa2ddf9d9afccd295b5bc5266bbd7d51997c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19c1aa2ddf9d9afccd295b5bc5266bbd7d51997c/comments", "author": {"login": "ruediger", "id": 1803, "node_id": "MDQ6VXNlcjE4MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruediger", "html_url": "https://github.com/ruediger", "followers_url": "https://api.github.com/users/ruediger/followers", "following_url": "https://api.github.com/users/ruediger/following{/other_user}", "gists_url": "https://api.github.com/users/ruediger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruediger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruediger/subscriptions", "organizations_url": "https://api.github.com/users/ruediger/orgs", "repos_url": "https://api.github.com/users/ruediger/repos", "events_url": "https://api.github.com/users/ruediger/events{/privacy}", "received_events_url": "https://api.github.com/users/ruediger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bafda72341d399da97197e738167a8606bc45e54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bafda72341d399da97197e738167a8606bc45e54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bafda72341d399da97197e738167a8606bc45e54"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "50bf3289acf9af3487237ae0d6b4becb4d646b50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19c1aa2ddf9d9afccd295b5bc5266bbd7d51997c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19c1aa2ddf9d9afccd295b5bc5266bbd7d51997c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19c1aa2ddf9d9afccd295b5bc5266bbd7d51997c", "patch": "@@ -1,3 +1,7 @@\n+2012-06-20  R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n+\n+\t* tree.h (DECL_SOURCE_COLUMN): New accessor.\n+\n 2012-06-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (<rounding_insn><mode>2): Macroize expander"}, {"sha": "8bd0580397d5a91e58ac5cf7b1d7dfdf2adc9784", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19c1aa2ddf9d9afccd295b5bc5266bbd7d51997c/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19c1aa2ddf9d9afccd295b5bc5266bbd7d51997c/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=19c1aa2ddf9d9afccd295b5bc5266bbd7d51997c", "patch": "@@ -2670,6 +2670,7 @@ struct function;\n   (DECL_MINIMAL_CHECK (NODE)->decl_minimal.locus)\n #define DECL_SOURCE_FILE(NODE) LOCATION_FILE (DECL_SOURCE_LOCATION (NODE))\n #define DECL_SOURCE_LINE(NODE) LOCATION_LINE (DECL_SOURCE_LOCATION (NODE))\n+#define DECL_SOURCE_COLUMN(NODE) LOCATION_COLUMN (DECL_SOURCE_LOCATION (NODE))\n #define DECL_IS_BUILTIN(DECL) \\\n   (DECL_SOURCE_LOCATION (DECL) <= BUILTINS_LOCATION)\n "}]}