{"sha": "d3fb5cf063a3f9d664d8b863070a1b7cabebba13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNmYjVjZjA2M2EzZjlkNjY0ZDhiODYzMDcwYTFiN2NhYmViYmExMw==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2014-06-03T10:09:20Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2014-06-03T10:09:20Z"}, "message": "re PR ipa/61160 (wrong code with -O3 (or ICE: verify_cgraph_node failed: edge points to wrong declaration))\n\n2014-06-03  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/61160\n\t* ipa-cp.c (cgraph_edge_brings_value_p): Handle edges leading to\n\tthunks.\n\ntestsuite/\n\t* g++.dg/ipa/pr61160-1.C: New test.\n\nFrom-SVN: r211170", "tree": {"sha": "a78c4de9c588e10535d66baa6ecd9479d38e2bfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a78c4de9c588e10535d66baa6ecd9479d38e2bfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3fb5cf063a3f9d664d8b863070a1b7cabebba13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3fb5cf063a3f9d664d8b863070a1b7cabebba13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3fb5cf063a3f9d664d8b863070a1b7cabebba13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3fb5cf063a3f9d664d8b863070a1b7cabebba13/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e25d96321c1b09f4fc77e03bc2eceb1cb2f25f04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e25d96321c1b09f4fc77e03bc2eceb1cb2f25f04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e25d96321c1b09f4fc77e03bc2eceb1cb2f25f04"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "9664949256cf66334a30b3ab30ecf9f607696b40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3fb5cf063a3f9d664d8b863070a1b7cabebba13/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3fb5cf063a3f9d664d8b863070a1b7cabebba13/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3fb5cf063a3f9d664d8b863070a1b7cabebba13", "patch": "@@ -1,3 +1,9 @@\n+2014-06-03  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/61160\n+\t* ipa-cp.c (cgraph_edge_brings_value_p): Handle edges leading to\n+\tthunks.\n+\n 2014-06-03  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR tree-optimization/61328"}, {"sha": "33ff9b63f6c630b292812480cb23a589c418c459", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3fb5cf063a3f9d664d8b863070a1b7cabebba13/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3fb5cf063a3f9d664d8b863070a1b7cabebba13/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=d3fb5cf063a3f9d664d8b863070a1b7cabebba13", "patch": "@@ -2482,7 +2482,8 @@ cgraph_edge_brings_value_p (struct cgraph_edge *cs,\n \t\t\t    struct ipcp_value_source *src)\n {\n   struct ipa_node_params *caller_info = IPA_NODE_REF (cs->caller);\n-  struct ipa_node_params *dst_info = IPA_NODE_REF (cs->callee);\n+  cgraph_node *real_dest = cgraph_function_node (cs->callee);\n+  struct ipa_node_params *dst_info = IPA_NODE_REF (real_dest);\n \n   if ((dst_info->ipcp_orig_node && !dst_info->is_all_contexts_clone)\n       || caller_info->node_dead)"}, {"sha": "14d79e1842fd4804827d7e1c0a478f31ed4dab70", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3fb5cf063a3f9d664d8b863070a1b7cabebba13/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3fb5cf063a3f9d664d8b863070a1b7cabebba13/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d3fb5cf063a3f9d664d8b863070a1b7cabebba13", "patch": "@@ -1,3 +1,8 @@\n+2014-06-03  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/61160\n+\t* g++.dg/ipa/pr61160-1.C: New test.\n+\n 2014-06-03  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/61383"}, {"sha": "a0fbb5f42bd5b5ecc845c3ac801f72f7b0ff86e2", "filename": "gcc/testsuite/g++.dg/ipa/pr61160-1.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3fb5cf063a3f9d664d8b863070a1b7cabebba13/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr61160-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3fb5cf063a3f9d664d8b863070a1b7cabebba13/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr61160-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr61160-1.C?ref=d3fb5cf063a3f9d664d8b863070a1b7cabebba13", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\"  } */\n+\n+struct CBase {\n+  virtual void BaseFunc () {}\n+};\n+\n+struct MMixin {\n+  virtual void * MixinFunc (int, void *) = 0;\n+};\n+\n+struct CExample: CBase, public MMixin\n+{\n+  void *MixinFunc (int arg, void *arg2)\n+  {\n+    if (arg != 1 || arg2)\n+      return 0;\n+    return this;\n+  }\n+};\n+\n+void *test (MMixin & anExample)\n+{\n+  return anExample.MixinFunc (1, 0);\n+}\n+\n+int main ()\n+{\n+  CExample c;\n+  return (test (c) != &c);\n+}"}]}