{"sha": "9865d858f18593270af8b98cf469b9fec76383f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg2NWQ4NThmMTg1OTMyNzBhZjhiOThjZjQ2OWI5ZmVjNzYzODNmNQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2005-03-15T16:17:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-15T16:17:37Z"}, "message": "sem_ch6.adb (Is_Private_Declaration): Verify that the declaration is attached to a list before checking whether it...\n\n2005-03-08  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Is_Private_Declaration): Verify that the declaration is\n\tattached to a list before checking whether it appears in the private\n\tdeclarations of the current package.\n\t(Make_Inequality_Operator): Insert declaration in proper declarative\n\tlist rather than just setting the Parent field, so that\n\tIs_Private_Declaration can handle it properly.\n\nFrom-SVN: r96506", "tree": {"sha": "bacc65b3eea1bdfb645660b492750df9ac27f63d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bacc65b3eea1bdfb645660b492750df9ac27f63d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9865d858f18593270af8b98cf469b9fec76383f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9865d858f18593270af8b98cf469b9fec76383f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9865d858f18593270af8b98cf469b9fec76383f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9865d858f18593270af8b98cf469b9fec76383f5/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a8fae99783a7e520ae9e827c06a8663b92de3d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a8fae99783a7e520ae9e827c06a8663b92de3d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a8fae99783a7e520ae9e827c06a8663b92de3d4"}], "stats": {"total": 31, "additions": 16, "deletions": 15}, "files": [{"sha": "27da2a72ecea794ef6ea7ce9b5ee7c3ac2d28968", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9865d858f18593270af8b98cf469b9fec76383f5/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9865d858f18593270af8b98cf469b9fec76383f5/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=9865d858f18593270af8b98cf469b9fec76383f5", "patch": "@@ -255,7 +255,6 @@ package body Sem_Ch6 is\n \n       if Present (L) then\n          Actual := First (L);\n-\n          while Present (Actual) loop\n             Analyze (Actual);\n             Check_Parameterless_Call (Actual);\n@@ -1511,7 +1510,6 @@ package body Sem_Ch6 is\n       then\n          Check_Overriding_Operation (N, Designator);\n       end if;\n-\n    end Analyze_Subprogram_Declaration;\n \n    --------------------------------------\n@@ -2311,7 +2309,6 @@ package body Sem_Ch6 is\n          Conformance_Error (\"too many parameters!\", New_Formal);\n          return;\n       end if;\n-\n    end Check_Conformance;\n \n    ------------------------------\n@@ -2552,7 +2549,6 @@ package body Sem_Ch6 is\n       Err_Loc : Node_Id := Empty)\n    is\n       Result : Boolean;\n-\n    begin\n       Check_Conformance\n         (New_Id, Old_Id, Fully_Conformant, True, Result, Err_Loc);\n@@ -3285,7 +3281,6 @@ package body Sem_Ch6 is\n       else\n          return False;\n       end if;\n-\n    end Conforming_Types;\n \n    --------------------------\n@@ -3642,7 +3637,6 @@ package body Sem_Ch6 is\n \n    function Fully_Conformant (New_Id, Old_Id : Entity_Id) return Boolean is\n       Result : Boolean;\n-\n    begin\n       Check_Conformance (New_Id, Old_Id, Fully_Conformant, False, Result);\n       return Result;\n@@ -4374,25 +4368,31 @@ package body Sem_Ch6 is\n               Subtype_Mark => New_Reference_To (Standard_Boolean, Loc)));\n \n       --  Insert inequality right after equality if it is explicit or after\n-      --  the derived type when implicit. These entities are created only\n-      --  for visibility purposes, and eventually replaced in the course of\n+      --  the derived type when implicit. These entities are created only for\n+      --  visibility purposes, and eventually replaced in the course of\n       --  expansion, so they do not need to be attached to the tree and seen\n       --  by the back-end. Keeping them internal also avoids spurious freezing\n-      --  problems. The parent field is set simply to make analysis safe.\n+      --  problems. The declaration is inserted in the tree for analysis, and\n+      --  removed afterwards. If the equality operator comes from an explicit\n+      --  declaration, attach the inequality immediately after. Else the\n+      --  equality is inherited from a derived type declaration, so insert\n+      --  inequality after that declaration.\n \n       if No (Alias (S)) then\n-         Set_Parent (Decl, Parent (Unit_Declaration_Node (S)));\n+         Insert_After (Unit_Declaration_Node (S), Decl);\n+      elsif Is_List_Member (Parent (S)) then\n+         Insert_After (Parent (S), Decl);\n       else\n-         Set_Parent (Decl, Parent (Parent (Etype (First_Formal (S)))));\n+         Insert_After (Parent (Etype (First_Formal (S))), Decl);\n       end if;\n \n       Mark_Rewrite_Insertion (Decl);\n       Set_Is_Intrinsic_Subprogram (Op_Name);\n       Analyze (Decl);\n+      Remove (Decl);\n       Set_Has_Completion (Op_Name);\n       Set_Corresponding_Equality (Op_Name, S);\n       Set_Is_Abstract (Op_Name, Is_Abstract (S));\n-\n    end Make_Inequality_Operator;\n \n    ----------------------\n@@ -4472,7 +4472,9 @@ package body Sem_Ch6 is\n                 Specification (Unit_Declaration_Node (Current_Scope)));\n \n             return In_Package_Body (Current_Scope)\n-              or else List_Containing (Decl) = Priv_Decls\n+              or else\n+                (Is_List_Member (Decl)\n+                   and then List_Containing (Decl) = Priv_Decls)\n               or else (Nkind (Parent (Decl)) = N_Package_Specification\n                          and then not Is_Compilation_Unit (\n                            Defining_Entity (Parent (Decl)))\n@@ -4858,7 +4860,7 @@ package body Sem_Ch6 is\n \n                         --  If the private operation is dispatching, we achieve\n                         --  the overriding by keeping the implicit operation\n-                        --  but setting its alias to be the overring one. In\n+                        --  but setting its alias to be the overriding one. In\n                         --  this fashion the proper body is executed in all\n                         --  cases, but the original signature is used outside\n                         --  of the package.\n@@ -5511,7 +5513,6 @@ package body Sem_Ch6 is\n \n    function Subtype_Conformant (New_Id, Old_Id : Entity_Id) return Boolean is\n       Result : Boolean;\n-\n    begin\n       Check_Conformance (New_Id, Old_Id, Subtype_Conformant, False, Result);\n       return Result;"}]}