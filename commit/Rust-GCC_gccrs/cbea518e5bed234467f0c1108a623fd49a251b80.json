{"sha": "cbea518e5bed234467f0c1108a623fd49a251b80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JlYTUxOGU1YmVkMjM0NDY3ZjBjMTEwOGE2MjNmZDQ5YTI1MWI4MA==", "commit": {"author": {"name": "Cary Coutant", "email": "ccoutant@google.com", "date": "2009-07-24T22:37:05Z"}, "committer": {"name": "Cary Coutant", "email": "ccoutant@gcc.gnu.org", "date": "2009-07-24T22:37:05Z"}, "message": "cfghooks.c (split_block): Copy discriminator to new block.\n\n\t* cfghooks.c (split_block): Copy discriminator to new block.\n\t* tree-cfg.c (assign_discriminator): Check location of last\n\tinstruction in block as well as first.\n\nFrom-SVN: r150065", "tree": {"sha": "6458eefa49d090a1d57d4fe791e5a56f2a987f5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6458eefa49d090a1d57d4fe791e5a56f2a987f5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbea518e5bed234467f0c1108a623fd49a251b80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbea518e5bed234467f0c1108a623fd49a251b80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbea518e5bed234467f0c1108a623fd49a251b80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbea518e5bed234467f0c1108a623fd49a251b80/comments", "author": null, "committer": null, "parents": [{"sha": "2e0814c8d67b6a80fc68cfefd90865bc4e2b87ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e0814c8d67b6a80fc68cfefd90865bc4e2b87ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e0814c8d67b6a80fc68cfefd90865bc4e2b87ec"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "13acf76809e9aabe30c1d441f9348a86d48eb496", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbea518e5bed234467f0c1108a623fd49a251b80/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbea518e5bed234467f0c1108a623fd49a251b80/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cbea518e5bed234467f0c1108a623fd49a251b80", "patch": "@@ -1,3 +1,9 @@\n+2009-07-24  Cary Coutant  <ccoutant@google.com>\n+\n+\t* cfghooks.c (split_block): Copy discriminator to new block.\n+\t* tree-cfg.c (assign_discriminator): Check location of last\n+\tinstruction in block as well as first.\n+\n 2009-07-24  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/linux.c: Use fputs or putc instead of fprintf"}, {"sha": "d6690a4b4345772aa9f8f6b18ccdc0eeae60e405", "filename": "gcc/cfghooks.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbea518e5bed234467f0c1108a623fd49a251b80/gcc%2Fcfghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbea518e5bed234467f0c1108a623fd49a251b80/gcc%2Fcfghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.c?ref=cbea518e5bed234467f0c1108a623fd49a251b80", "patch": "@@ -437,6 +437,7 @@ split_block (basic_block bb, void *i)\n   new_bb->count = bb->count;\n   new_bb->frequency = bb->frequency;\n   new_bb->loop_depth = bb->loop_depth;\n+  new_bb->discriminator = bb->discriminator;\n \n   if (dom_info_available_p (CDI_DOMINATORS))\n     {"}, {"sha": "d818b6b52dcacfd5624d19c6d3ab5e0b013b7d17", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbea518e5bed234467f0c1108a623fd49a251b80/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbea518e5bed234467f0c1108a623fd49a251b80/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=cbea518e5bed234467f0c1108a623fd49a251b80", "patch": "@@ -756,13 +756,15 @@ same_line_p (location_t locus1, location_t locus2)\n static void\n assign_discriminator (location_t locus, basic_block bb)\n {\n-  gimple to_stmt;\n+  gimple first_in_to_bb, last_in_to_bb;\n \n   if (locus == 0 || bb->discriminator != 0)\n     return;\n \n-  to_stmt = first_non_label_stmt (bb);\n-  if (to_stmt && same_line_p (locus, gimple_location (to_stmt)))\n+  first_in_to_bb = first_non_label_stmt (bb);\n+  last_in_to_bb = last_stmt (bb);\n+  if (first_in_to_bb && same_line_p (locus, gimple_location (first_in_to_bb))\n+      || last_in_to_bb && same_line_p (locus, gimple_location (last_in_to_bb)))\n     bb->discriminator = next_discriminator_for_locus (locus);\n }\n "}]}