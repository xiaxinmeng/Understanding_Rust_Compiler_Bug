{"sha": "d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdjZWFiN2I0YjdhMmI0ZjkxZGI0MjUyNmE2Y2JkYzk3MzkzZDhlOA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-08-23T14:40:50Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-08-23T14:40:50Z"}, "message": "decl.c (grokdeclarator): Complain about in-class initialization of aggregates and/or references.\n\n\t* decl.c (grokdeclarator): Complain about in-class initialization\n\tof aggregates and/or references.\n\t* pt.c (process_template_parm): Clear IS_AGGR_TYPE for\n\tTEMPLATE_TYPE_PARMs.\n\nFrom-SVN: r21916", "tree": {"sha": "745bd98cd8da93d0cd072f1007a7f6506fa51d02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/745bd98cd8da93d0cd072f1007a7f6506fa51d02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8/comments", "author": null, "committer": null, "parents": [{"sha": "03d0f4af2d5607dacc56b946b49e024e71dd7fb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03d0f4af2d5607dacc56b946b49e024e71dd7fb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03d0f4af2d5607dacc56b946b49e024e71dd7fb7"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "4fa37401874de6e97ebbfb2d84bd72398a7df54f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8", "patch": "@@ -1,5 +1,10 @@\n 1998-08-23  Mark Mitchell  <mark@markmitchell.com>\n \n+\t* decl.c (grokdeclarator): Complain about in-class initialization\n+\tof aggregates and/or references.\n+\t* pt.c (process_template_parm): Clear IS_AGGR_TYPE for\n+\tTEMPLATE_TYPE_PARMs. \n+\n \t* decl2.c (grok_array_decl): Add comment.\n \t(mark_used): Don't instantiate an explicit instantiation.\n \t* friend.c (make_friend_class): Remove bogus comment.  Fix check"}, {"sha": "5940996510c10213c262e5d2b966efdb952129b2", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8", "patch": "@@ -10431,15 +10431,23 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t\t   but not both.  If it appears in the class, the member is\n \t\t   a member constant.  The file-scope definition is always\n \t\t   required.  */\n-\t\tif (! constp)\n-\t\t  /* According to Mike Stump, we generate bad code for\n-\t\t     this case, so we might as well always make it an\n-\t\t     error.  */\n+\t\tif (IS_AGGR_TYPE (type)\n+\t\t    || TREE_CODE (type) == REFERENCE_TYPE)\n+\t\t  {\n+\t\t    cp_error (\"in-class initialization of static data member of non-integral type `%T'\", \n+\t\t\t      type);\n+\t\t    /* If we just return the declaration, crashes will\n+\t\t       sometimes occur.  We therefore return\n+\t\t       void_type_node, as if this was a friend\n+\t\t       declaration, to cause callers to completely\n+\t\t       ignore this declaration.  */\n+\t\t    return void_type_node;\n+\t\t  }\n+\t\telse if (!constp)\n \t\t  cp_error (\"ANSI C++ forbids in-class initialization of non-const static member `%D'\",\n \t\t\t    declarator);\n-\t\t\n-\t\tif (pedantic && ! INTEGRAL_TYPE_P (type) \n-\t\t    && !uses_template_parms (type))\n+\t\telse if (pedantic && ! INTEGRAL_TYPE_P (type) \n+\t\t\t && !uses_template_parms (type))\n \t\t  cp_pedwarn (\"ANSI C++ forbids initialization of member constant `%D' of non-integral type `%T'\", declarator, type);\n \t      }\n \n@@ -10452,7 +10460,7 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \n \t\t/* C++ allows static class members.\n \t\t   All other work for this is done by grokfield.\n-\t\t   This VAR_DECL is built by build_lang_field_decl.\n+\t\t   This VAR_DCL is built by build_lang_field_decl.\n \t\t   All other VAR_DECLs are built by build_decl.  */\n \t\tdecl = build_lang_field_decl (VAR_DECL, declarator, type);\n \t\tTREE_STATIC (decl) = 1;"}, {"sha": "79a00fad65c98dc8b9582f76f1c271285f6ca081", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8", "patch": "@@ -1590,6 +1590,7 @@ process_template_parm (list, next)\n       else\n \t{\n \t  t = make_lang_type (TEMPLATE_TYPE_PARM);\n+\t  IS_AGGR_TYPE (t) = 0;\n \t  /* parm is either IDENTIFIER_NODE or NULL_TREE */\n \t  decl = build_decl (TYPE_DECL, parm, t);\n \t}"}, {"sha": "93e0a6e3bccc6cca839c8fbb14918ec96130622a", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash2.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash2.C?ref=d7ceab7b4b7a2b4f91db42526a6cbdc97393d8e8", "patch": "@@ -0,0 +1,9 @@\n+// Build don't link:\n+\n+struct A {\n+  int rep;\n+  static const A a(0); // ERROR - initialization\n+  static const A b = 3; // ERROR - initialization\n+  static const A& c = 2; // ERROR - initialization\n+  A(int x) : rep(x) {}\n+};"}]}