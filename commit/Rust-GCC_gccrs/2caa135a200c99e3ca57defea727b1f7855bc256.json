{"sha": "2caa135a200c99e3ca57defea727b1f7855bc256", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNhYTEzNWEyMDBjOTllM2NhNTdkZWZlYTcyN2IxZjc4NTViYzI1Ng==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-02-06T20:51:52Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-02-06T20:51:52Z"}, "message": "re PR libstdc++/52128 (r183788 caused massive libstdc++ testsuite regression on i686-linux)\n\n\tPR libstdc++/52128\n\t* src/c++11/future.cc: Add explicit instantiation.\n\nFrom-SVN: r183942", "tree": {"sha": "6c81f57266e3aebe978a5518b32d5b2370a8003d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c81f57266e3aebe978a5518b32d5b2370a8003d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2caa135a200c99e3ca57defea727b1f7855bc256", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2caa135a200c99e3ca57defea727b1f7855bc256", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2caa135a200c99e3ca57defea727b1f7855bc256", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2caa135a200c99e3ca57defea727b1f7855bc256/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74345dec226a46b8c7095fbc4c62474cb1e86bff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74345dec226a46b8c7095fbc4c62474cb1e86bff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74345dec226a46b8c7095fbc4c62474cb1e86bff"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "434fd98683247455adc9f0c455761bd909aedde7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2caa135a200c99e3ca57defea727b1f7855bc256/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2caa135a200c99e3ca57defea727b1f7855bc256/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2caa135a200c99e3ca57defea727b1f7855bc256", "patch": "@@ -1,3 +1,8 @@\n+2012-02-06  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/52128\n+\t* src/c++11/future.cc: Add explicit instantiation.\n+\n 2012-02-06  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/debug/safe_iterator.h"}, {"sha": "a4881397523f4ba8be607eb73b7eaf6a21fa64e5", "filename": "libstdc++-v3/src/c++11/future.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2caa135a200c99e3ca57defea727b1f7855bc256/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffuture.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2caa135a200c99e3ca57defea727b1f7855bc256/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffuture.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffuture.cc?ref=2caa135a200c99e3ca57defea727b1f7855bc256", "patch": "@@ -90,6 +90,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   // Explicit instantiation due to -fno-implicit-instantiation.\n   template void call_once(once_flag&, void (thread::*&&)(), reference_wrapper<thread>&&);\n+  template _Bind_simple_helper<void (thread::*)(), reference_wrapper<thread>>::__type __bind_simple(void (thread::*&&)(), reference_wrapper<thread>&&);\n #endif\n #endif\n "}]}