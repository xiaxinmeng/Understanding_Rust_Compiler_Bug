{"sha": "69f088a73a1924110328eac91bcbd8a98f64f62a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlmMDg4YTczYTE5MjQxMTAzMjhlYWM5MWJjYmQ4YTk4ZjY0ZjYyYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-05-06T20:47:59Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-05-06T20:47:59Z"}, "message": "re PR target/53227 (FAIL: gcc.target/i386/movbe-2.c scan-assembler-times movbe[ \\t] 4)\n\n\tPR target/53227\n\t* config/i386/i386.md (swap<mode>): Rename from *swap<mode>.\n\t(bswapdi2): Split from bswap<mode>2.  Use nonnimediate_operand\n\tpredicate for operand 1.  Force operand 1 to register for TARGET_BSWAP.\n\t(bswapsi2): Ditto.\n\t(*bswapdi2_doubleword): New insn pattern.\n\t(*bswap<mode>2): Rename from *bswap<mode>2_1.\n\nFrom-SVN: r187215", "tree": {"sha": "25a892d93cf47c2e1fa5802370d752bca5e2dfde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25a892d93cf47c2e1fa5802370d752bca5e2dfde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69f088a73a1924110328eac91bcbd8a98f64f62a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69f088a73a1924110328eac91bcbd8a98f64f62a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69f088a73a1924110328eac91bcbd8a98f64f62a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69f088a73a1924110328eac91bcbd8a98f64f62a/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea59b186fbc1648d23b266edb1f01c60b0ed72c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea59b186fbc1648d23b266edb1f01c60b0ed72c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea59b186fbc1648d23b266edb1f01c60b0ed72c0"}], "stats": {"total": 80, "additions": 74, "deletions": 6}, "files": [{"sha": "eab0576243b16ba594b97eec6c2ec0998ffaf6c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69f088a73a1924110328eac91bcbd8a98f64f62a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69f088a73a1924110328eac91bcbd8a98f64f62a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69f088a73a1924110328eac91bcbd8a98f64f62a", "patch": "@@ -1,3 +1,13 @@\n+2012-05-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/53227\n+\t* config/i386/i386.md (swap<mode>): Rename from *swap<mode>.\n+\t(bswapdi2): Split from bswap<mode>2.  Use nonnimediate_operand\n+\tpredicate for operand 1.  Force operand 1 to register for TARGET_BSWAP.\n+\t(bswapsi2): Ditto.\n+\t(*bswapdi2_doubleword): New insn pattern.\n+\t(*bswap<mode>2): Rename from *bswap<mode>2_1.\n+\n 2012-05-06  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/mips/mips.c (mips_set_reg_reg_piece_cost): New function."}, {"sha": "360bd32b9abd3f38985b4218cf45c9d5ebd776a9", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 64, "deletions": 6, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69f088a73a1924110328eac91bcbd8a98f64f62a/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69f088a73a1924110328eac91bcbd8a98f64f62a/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=69f088a73a1924110328eac91bcbd8a98f64f62a", "patch": "@@ -2406,7 +2406,7 @@\n    (set_attr \"memory\" \"load\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"*swap<mode>\"\n+(define_insn \"swap<mode>\"\n   [(set (match_operand:SWI48 0 \"register_operand\" \"+r\")\n \t(match_operand:SWI48 1 \"register_operand\" \"+r\"))\n    (set (match_dup 1)\n@@ -12487,12 +12487,70 @@\n    (set_attr \"type\" \"bitmanip\")\n    (set_attr \"mode\" \"SI\")])\n \n-(define_expand \"bswap<mode>2\"\n-  [(set (match_operand:SWI48 0 \"register_operand\")\n-\t(bswap:SWI48 (match_operand:SWI48 1 \"register_operand\")))]\n+(define_expand \"bswapdi2\"\n+  [(set (match_operand:DI 0 \"register_operand\")\n+\t(bswap:DI (match_operand:DI 1 \"nonimmediate_operand\")))]\n   \"\"\n {\n-  if (<MODE>mode == SImode && !(TARGET_BSWAP || TARGET_MOVBE))\n+  if (TARGET_64BIT && !TARGET_MOVBE)\n+    operands[1] = force_reg (DImode, operands[1]);\n+})\n+\n+(define_insn_and_split \"*bswapdi2_doubleword\"\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,r,m\")\n+\t(bswap:DI\n+\t  (match_operand:DI 1 \"nonimmediate_operand\" \"0,m,r\")))]\n+  \"!TARGET_64BIT\n+   && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(set (match_dup 2)\n+  \t(bswap:SI (match_dup 1)))\n+   (set (match_dup 0)\n+  \t(bswap:SI (match_dup 3)))]\n+{\n+  split_double_mode (DImode, &operands[0], 2, &operands[0], &operands[2]);\n+\n+  if (REG_P (operands[0]) && REG_P (operands[1]))\n+    {\n+      emit_insn (gen_swapsi (operands[0], operands[2]));\n+      emit_insn (gen_bswapsi2 (operands[0], operands[0]));\n+      emit_insn (gen_bswapsi2 (operands[2], operands[2]));\n+      DONE;\n+    }\n+\n+  if (!TARGET_MOVBE)\n+    {\n+      if (MEM_P (operands[0]))\n+\t{\n+\t  emit_insn (gen_bswapsi2 (operands[3], operands[3]));\n+\t  emit_insn (gen_bswapsi2 (operands[1], operands[1]));\n+\n+\t  emit_move_insn (operands[0], operands[3]);\n+\t  emit_move_insn (operands[2], operands[1]);\n+\t}\n+      if (MEM_P (operands[1]))\n+\t{\n+\t  emit_move_insn (operands[2], operands[1]);\n+\t  emit_move_insn (operands[0], operands[3]);\n+\n+\t  emit_insn (gen_bswapsi2 (operands[2], operands[2]));\n+\t  emit_insn (gen_bswapsi2 (operands[0], operands[0]));\n+\t}\n+      DONE;\n+    }\n+})\n+\n+(define_expand \"bswapsi2\"\n+  [(set (match_operand:SI 0 \"register_operand\")\n+\t(bswap:SI (match_operand:SI 1 \"nonimmediate_operand\")))]\n+  \"\"\n+{\n+  if (TARGET_MOVBE)\n+    ;\n+  else if (TARGET_BSWAP)\n+    operands[1] = force_reg (SImode, operands[1]);\n+  else\n     {\n       rtx x = operands[0];\n \n@@ -12519,7 +12577,7 @@\n    (set_attr \"prefix_extra\" \"*,1,1\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"*bswap<mode>2_1\"\n+(define_insn \"*bswap<mode>2\"\n   [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n \t(bswap:SWI48 (match_operand:SWI48 1 \"register_operand\" \"0\")))]\n   \"TARGET_BSWAP\""}]}