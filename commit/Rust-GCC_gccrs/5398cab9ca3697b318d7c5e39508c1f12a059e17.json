{"sha": "5398cab9ca3697b318d7c5e39508c1f12a059e17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM5OGNhYjljYTM2OTdiMzE4ZDdjNWUzOTUwOGMxZjEyYTA1OWUxNw==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2017-05-01T23:38:50Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2017-05-01T23:38:50Z"}, "message": "d-demangle.c (dlang_hexdigit): New function.\n\nlibiberty/ChangeLog:\n\n\t* d-demangle.c (dlang_hexdigit): New function.\n\t(ascii2hex): Remove function.\n\t(dlang_parse_string): Update to call dlang_hexdigit.\n\t* testsuite/d-demangle-expected: Add tests.\n\nFrom-SVN: r247455", "tree": {"sha": "5bc33f039257289740707fdcac0740dfae3d7b8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bc33f039257289740707fdcac0740dfae3d7b8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5398cab9ca3697b318d7c5e39508c1f12a059e17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5398cab9ca3697b318d7c5e39508c1f12a059e17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5398cab9ca3697b318d7c5e39508c1f12a059e17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5398cab9ca3697b318d7c5e39508c1f12a059e17/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dbe65f77ff5b6a9013d71177552d417a2fe06693", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbe65f77ff5b6a9013d71177552d417a2fe06693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbe65f77ff5b6a9013d71177552d417a2fe06693"}], "stats": {"total": 140, "additions": 86, "deletions": 54}, "files": [{"sha": "14e7e3258f970be5d0f3480dd660133c4304c214", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5398cab9ca3697b318d7c5e39508c1f12a059e17/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5398cab9ca3697b318d7c5e39508c1f12a059e17/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=5398cab9ca3697b318d7c5e39508c1f12a059e17", "patch": "@@ -1,3 +1,10 @@\n+2017-05-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-demangle.c (dlang_hexdigit): New function.\n+\t(ascii2hex): Remove function.\n+\t(dlang_parse_string): Update to call dlang_hexdigit.\n+\t* testsuite/d-demangle-expected: Add tests.\n+\n 2017-05-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* d-demangle.c (strtol): Remove declaration."}, {"sha": "ec5508e277737c9c2cd275f295abdeda6c0e76f9", "filename": "libiberty/d-demangle.c", "status": "modified", "additions": 61, "deletions": 52, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5398cab9ca3697b318d7c5e39508c1f12a059e17/libiberty%2Fd-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5398cab9ca3697b318d7c5e39508c1f12a059e17/libiberty%2Fd-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fd-demangle.c?ref=5398cab9ca3697b318d7c5e39508c1f12a059e17", "patch": "@@ -223,6 +223,34 @@ dlang_number (const char *mangled, long *ret)\n   return mangled;\n }\n \n+/* Extract the hex-digit from MANGLED, and assign the result to RET.\n+   Return the remaining string on success or NULL on failure.  */\n+static const char *\n+dlang_hexdigit (const char *mangled, char *ret)\n+{\n+  char c;\n+\n+  /* Return NULL if trying to extract something that isn't a hexdigit.  */\n+  if (mangled == NULL || !ISXDIGIT (mangled[0]) || !ISXDIGIT (mangled[1]))\n+    return NULL;\n+\n+  c = mangled[0];\n+  if (!ISDIGIT (c))\n+    (*ret) = (c - (ISUPPER (c) ? 'A' : 'a') + 10);\n+  else\n+    (*ret) = (c - '0');\n+\n+  c = mangled[1];\n+  if (!ISDIGIT (c))\n+    (*ret) = (*ret << 4) | (c - (ISUPPER (c) ? 'A' : 'a') + 10);\n+  else\n+    (*ret) = (*ret << 4) | (c - '0');\n+\n+  mangled += 2;\n+\n+  return mangled;\n+}\n+\n /* Demangle the calling convention from MANGLED and append it to DECL.\n    Return the remaining string on success or NULL on failure.  */\n static const char *\n@@ -1070,22 +1098,6 @@ dlang_parse_real (string *decl, const char *mangled)\n   return mangled;\n }\n \n-/* Convert VAL from an ascii hexdigit to value.  */\n-static char\n-ascii2hex (char val)\n-{\n-  if (val >= 'a' && val <= 'f')\n-    return (val - 'a' + 10);\n-\n-  if (val >= 'A' && val <= 'F')\n-    return (val - 'A' + 10);\n-\n-  if (val >= '0' && val <= '9')\n-    return (val - '0');\n-\n-  return 0;\n-}\n-\n /* Extract the string value from MANGLED and append it to DECL.\n    Return the remaining string on success or NULL on failure.  */\n static const char *\n@@ -1103,48 +1115,45 @@ dlang_parse_string (string *decl, const char *mangled)\n   string_append (decl, \"\\\"\");\n   while (len--)\n     {\n-      if (ISXDIGIT (mangled[0]) && ISXDIGIT (mangled[1]))\n+      char val;\n+      const char *endptr = dlang_hexdigit (mangled, &val);\n+\n+      if (endptr == NULL)\n+\treturn NULL;\n+\n+      /* Sanitize white and non-printable characters.  */\n+      switch (val)\n \t{\n-\t  char a = ascii2hex (mangled[0]);\n-\t  char b = ascii2hex (mangled[1]);\n-\t  char val = (a << 4) | b;\n+\tcase ' ':\n+\t  string_append (decl, \" \");\n+\t  break;\n+\tcase '\\t':\n+\t  string_append (decl, \"\\\\t\");\n+\t  break;\n+\tcase '\\n':\n+\t  string_append (decl, \"\\\\n\");\n+\t  break;\n+\tcase '\\r':\n+\t  string_append (decl, \"\\\\r\");\n+\t  break;\n+\tcase '\\f':\n+\t  string_append (decl, \"\\\\f\");\n+\t  break;\n+\tcase '\\v':\n+\t  string_append (decl, \"\\\\v\");\n+\t  break;\n \n-\t  /* Sanitize white and non-printable characters.  */\n-\t  switch (val)\n+\tdefault:\n+\t  if (ISPRINT (val))\n+\t    string_appendn (decl, &val, 1);\n+\t  else\n \t    {\n-\t    case ' ':\n-\t      string_append (decl, \" \");\n-\t      break;\n-\t    case '\\t':\n-\t      string_append (decl, \"\\\\t\");\n-\t      break;\n-\t    case '\\n':\n-\t      string_append (decl, \"\\\\n\");\n-\t      break;\n-\t    case '\\r':\n-\t      string_append (decl, \"\\\\r\");\n-\t      break;\n-\t    case '\\f':\n-\t      string_append (decl, \"\\\\f\");\n-\t      break;\n-\t    case '\\v':\n-\t      string_append (decl, \"\\\\v\");\n-\t      break;\n-\n-\t    default:\n-\t      if (ISPRINT (val))\n-\t\tstring_appendn (decl, &val, 1);\n-\t      else\n-\t\t{\n-\t\t  string_append (decl, \"\\\\x\");\n-\t\t  string_appendn (decl, mangled, 2);\n-\t\t}\n+\t      string_append (decl, \"\\\\x\");\n+\t      string_appendn (decl, mangled, 2);\n \t    }\n \t}\n-      else\n-\treturn NULL;\n \n-      mangled += 2;\n+      mangled = endptr;\n     }\n   string_append (decl, \"\\\"\");\n "}, {"sha": "626d7c2d980ce39d397570e22dde1075d6e02ca2", "filename": "libiberty/testsuite/d-demangle-expected", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5398cab9ca3697b318d7c5e39508c1f12a059e17/libiberty%2Ftestsuite%2Fd-demangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5398cab9ca3697b318d7c5e39508c1f12a059e17/libiberty%2Ftestsuite%2Fd-demangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fd-demangle-expected?ref=5398cab9ca3697b318d7c5e39508c1f12a059e17", "patch": "@@ -854,8 +854,8 @@ _D8demangle16__T4testVAyaa0_Zv\n demangle.test!(\"\")\n #\n --format=dlang\n-_D8demangle30__T4testVAyaa7_20090a0d0c0b00Zv\n-demangle.test!(\" \\t\\n\\r\\f\\v\\x00\")\n+_D8demangle32__T4testVAyaa8_20090a0d0c0b00ffZv\n+demangle.test!(\" \\t\\n\\r\\f\\v\\x00\\xff\")\n #\n --format=dlang\n _D8demangle22__T4testVAiA4i1i2i3i4Zv\n@@ -1076,10 +1076,18 @@ _D15__T4testVfe0p1Zv\n _D15__T4testVfe0p1Zv\n #\n --format=dlang\n+_D15__T4testVAyaa1_\n+_D15__T4testVAyaa1_\n+#\n+--format=dlang\n _D16__T4testVAyaa0aZv\n _D16__T4testVAyaa0aZv\n #\n --format=dlang\n+_D18__T4testVAyaa1_0GZv\n+_D18__T4testVAyaa1_0GZv\n+#\n+--format=dlang\n _D18__T4testVAyaa1_YYZv\n _D18__T4testVAyaa1_YYZv\n #\n@@ -1240,6 +1248,14 @@ _D8demangle32__T2fnTS3symVS3valS1a4_6e756c6cZ3fun13__T8positionZ13__T8confusesZ8\n demangle.fn!(sym, val(\"null\")).fun.position!().confuses!().demangle(void(const(char)) delegate)\n #\n --format=dlang\n+_D8demangle39__T2fnVAyaa12_d0bfd180d0b8d0bcd0b5d180Z2fnFZv\n+demangle.fn!(\"\\xd0\\xbf\\xd1\\x80\\xd0\\xb8\\xd0\\xbc\\xd0\\xb5\\xd1\\x80\").fn()\n+#\n+--format=dlang\n+_D8demangle26__T2fnVAyaa6_e4b896e7958cZ2fnFZv\n+demangle.fn!(\"\\xe4\\xb8\\x96\\xe7\\x95\\x8c\").fn()\n+#\n+--format=dlang\n _D2gc11gctemplates56__T8mkBitmapTS3std5range13__T4iotaTiTiZ4iotaFiiZ6ResultZ8mkBitmapFNbNiNfPmmZv\n gc.gctemplates.mkBitmap!(std.range.iota!(int, int).iota(int, int).Result).mkBitmap(ulong*, ulong)\n #"}]}