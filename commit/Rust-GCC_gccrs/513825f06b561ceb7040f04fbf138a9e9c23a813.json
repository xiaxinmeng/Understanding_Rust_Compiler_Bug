{"sha": "513825f06b561ceb7040f04fbf138a9e9c23a813", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEzODI1ZjA2YjU2MWNlYjcwNDBmMDRmYmYxMzhhOWU5YzIzYTgxMw==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2018-12-23T10:35:28Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2018-12-23T10:35:28Z"}, "message": "Handle -save-temps in collect2\n\nHandle the option, make the saved filenames and paths easier to handle.\nDon't print '[Leaving...]' for files we never created and don't exist - or unless\nverbose is true.\n\n2018-12-23  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* collect2.c (main): Parse the output file early so we can make nicer\n\ttemp names.  Respond to \u201c-save-temps\u201d in the GCC OPTIONS.\n\t(maybe_unlink): Don\u2019t print \u201c[Leaving\u2026\u201d] for files we never created\n\tand don\u2019t exist.\n\nFrom-SVN: r267370", "tree": {"sha": "75db6ba0b908d8a523c3575ac6c14850e1cfa0a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75db6ba0b908d8a523c3575ac6c14850e1cfa0a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/513825f06b561ceb7040f04fbf138a9e9c23a813", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/513825f06b561ceb7040f04fbf138a9e9c23a813", "html_url": "https://github.com/Rust-GCC/gccrs/commit/513825f06b561ceb7040f04fbf138a9e9c23a813", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/513825f06b561ceb7040f04fbf138a9e9c23a813/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f67eeb79e18366528daf855648abb4e6069f8238", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f67eeb79e18366528daf855648abb4e6069f8238", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f67eeb79e18366528daf855648abb4e6069f8238"}], "stats": {"total": 66, "additions": 50, "deletions": 16}, "files": [{"sha": "bdc22b70efad566430a9591e8a9a82708a3c7cdf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/513825f06b561ceb7040f04fbf138a9e9c23a813/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/513825f06b561ceb7040f04fbf138a9e9c23a813/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=513825f06b561ceb7040f04fbf138a9e9c23a813", "patch": "@@ -1,3 +1,10 @@\n+2018-12-23  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* collect2.c (main): Parse the output file early so we can make nicer\n+\ttemp names.  Respond to \u201c-save-temps\u201d in the GCC OPTIONS.\n+\t(maybe_unlink): Don\u2019t print \u201c[Leaving\u2026\u201d] for files we never created\n+\tand don\u2019t exist.\n+\n 2018-12-23  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* collect2.c (main): Combine flags from both the command line and"}, {"sha": "60269682ecb0a2878674b9c291c14fb9e2bf765e", "filename": "gcc/collect2.c", "status": "modified", "additions": 43, "deletions": 16, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/513825f06b561ceb7040f04fbf138a9e9c23a813/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/513825f06b561ceb7040f04fbf138a9e9c23a813/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=513825f06b561ceb7040f04fbf138a9e9c23a813", "patch": "@@ -203,8 +203,8 @@ bool helpflag;\t\t\t/* true if --help */\n static int shared_obj;\t\t\t/* true if -shared */\n static int static_obj;\t\t\t/* true if -static */\n \n-static const char *c_file;\t\t/* <xxx>.c for constructor/destructor list.  */\n-static const char *o_file;\t\t/* <xxx>.o for constructor/destructor list.  */\n+static char *c_file;\t\t/* <xxx>.c for constructor/destructor list.  */\n+static char *o_file;\t\t/* <xxx>.o for constructor/destructor list.  */\n #ifdef COLLECT_EXPORT_LIST\n static const char *export_file;\t\t/* <xxx>.x for AIX export list.  */\n #endif\n@@ -986,6 +986,13 @@ main (int argc, char **argv)\n \n   save_temps = false;\n   verbose = false;\n+\n+#ifndef DEFAULT_A_OUT_NAME\n+  output_file = \"a.out\";\n+#else\n+  output_file = DEFAULT_A_OUT_NAME;\n+#endif\n+\n   /* Parse command line / environment for flags we want early.\n      This allows the debug flag to be set before functions like find_a_file()\n      are called. */\n@@ -1008,8 +1015,17 @@ main (int argc, char **argv)\n \t  selected_linker = USE_BFD_LD;\n \telse if (strcmp (argv[i], \"-fuse-ld=gold\") == 0)\n \t  selected_linker = USE_GOLD_LD;\n-  else if (strcmp (argv[i], \"-fuse-ld=lld\") == 0)\n-    selected_linker = USE_LLD_LD;\n+\telse if (strcmp (argv[i], \"-fuse-ld=lld\") == 0)\n+\t  selected_linker = USE_LLD_LD;\n+\telse if (strncmp (argv[i], \"-o\", 2) == 0)\n+\t  {\n+\t    /* Parse the output filename if it's given so that we can make\n+\t       meaningful temp filenames.  */\n+\t    if (argv[i][2] == '\\0')\n+\t      output_file = argv[i+1];\n+\t    else\n+\t      output_file = &argv[i][2];\n+\t  }\n \n #ifdef COLLECT_EXPORT_LIST\n \t/* These flags are position independent, although their order\n@@ -1031,12 +1047,6 @@ main (int argc, char **argv)\n #endif\n       }\n \n-#ifndef DEFAULT_A_OUT_NAME\n-  output_file = \"a.out\";\n-#else\n-  output_file = DEFAULT_A_OUT_NAME;\n-#endif\n-\n     obstack_begin (&temporary_obstack, 0);\n     temporary_firstobj = (char *) obstack_alloc (&temporary_obstack, 0);\n \n@@ -1057,6 +1067,9 @@ main (int argc, char **argv)\n \t  no_partition = true;\n \telse if (strncmp (q, \"-fno-lto\", 8) == 0)\n \t  lto_mode = LTO_MODE_NONE;\n+\telse if (strncmp (q, \"-save-temps\", 11) == 0)\n+\t  /* FIXME: Honour =obj.  */\n+\t  save_temps = true;\n     }\n     obstack_free (&temporary_obstack, temporary_firstobj);\n \n@@ -1217,8 +1230,22 @@ main (int argc, char **argv)\n   *ld1++ = *ld2++ = ld_file_name;\n \n   /* Make temp file names.  */\n-  c_file = make_temp_file (\".c\");\n-  o_file = make_temp_file (\".o\");\n+  if (save_temps)\n+    {\n+      c_file = (char *) xmalloc (strlen (output_file)\n+\t\t\t\t  + sizeof (\".cdtor.c\") + 1);\n+      strcpy (c_file, output_file);\n+      strcat (c_file, \".cdtor.c\");\n+      o_file = (char *) xmalloc (strlen (output_file)\n+\t\t\t\t  + sizeof (\".cdtor.o\") + 1);\n+      strcpy (o_file, output_file);\n+      strcat (o_file, \".cdtor.o\");\n+    }\n+  else\n+    {\n+      c_file = make_temp_file (\".cdtor.c\");\n+      o_file = make_temp_file (\".cdtor.o\");\n+    }\n #ifdef COLLECT_EXPORT_LIST\n   export_file = make_temp_file (\".x\");\n #endif\n@@ -1227,6 +1254,7 @@ main (int argc, char **argv)\n       ldout = make_temp_file (\".ld\");\n       lderrout = make_temp_file (\".le\");\n     }\n+  /* Build the command line to compile the ctor/dtor list.  */\n   *c_ptr++ = c_file_name;\n   *c_ptr++ = \"-x\";\n   *c_ptr++ = \"c\";\n@@ -1684,8 +1712,6 @@ main (int argc, char **argv)\n \telse\n \t  post_ld_pass (false);\n \n-\tmaybe_unlink (c_file);\n-\tmaybe_unlink (o_file);\n \treturn 0;\n       }\n   }\n@@ -1873,9 +1899,10 @@ main (int argc, char **argv)\n void\n maybe_unlink (const char *file)\n {\n-  if (debug)\n+  if (save_temps && file_exists (file))\n     {\n-      notice (\"[Leaving %s]\\n\", file);\n+      if (verbose)\n+\tnotice (\"[Leaving %s]\\n\", file);\n       return;\n     }\n "}]}