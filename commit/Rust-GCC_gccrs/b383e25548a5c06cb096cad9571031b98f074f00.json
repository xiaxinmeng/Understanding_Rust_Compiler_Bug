{"sha": "b383e25548a5c06cb096cad9571031b98f074f00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM4M2UyNTU0OGE1YzA2Y2IwOTZjYWQ5NTcxMDMxYjk4ZjA3NGYwMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-09-21T11:06:51Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-09-21T11:06:51Z"}, "message": "re PR rtl-optimization/54290 (wrong code at -O2 with large offset)\n\n\tPR rtl-optimization/54290\n\tPR rtl-optimization/54644\n\t* reload1.c (choose_reload_regs): Fix thinko in previous change.\n\nFrom-SVN: r191609", "tree": {"sha": "4c215542ecfa6dd4a462389de3a15cd013b15413", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c215542ecfa6dd4a462389de3a15cd013b15413"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b383e25548a5c06cb096cad9571031b98f074f00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b383e25548a5c06cb096cad9571031b98f074f00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b383e25548a5c06cb096cad9571031b98f074f00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b383e25548a5c06cb096cad9571031b98f074f00/comments", "author": null, "committer": null, "parents": [{"sha": "88a4c78be1f44b8918517382b628f2062c30c834", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88a4c78be1f44b8918517382b628f2062c30c834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88a4c78be1f44b8918517382b628f2062c30c834"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "c077cebdee9fae7be90dcb5dab43261b3336f6ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b383e25548a5c06cb096cad9571031b98f074f00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b383e25548a5c06cb096cad9571031b98f074f00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b383e25548a5c06cb096cad9571031b98f074f00", "patch": "@@ -1,3 +1,9 @@\n+2012-09-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR rtl-optimization/54290\n+\tPR rtl-optimization/54644\n+\t* reload1.c (choose_reload_regs): Fix thinko in previous change.\n+\n 2012-09-20  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (define_split for plus_eqsi):"}, {"sha": "c4c1426b43aa63f67dd9eeb4a91520361c9bdb85", "filename": "gcc/reload1.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b383e25548a5c06cb096cad9571031b98f074f00/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b383e25548a5c06cb096cad9571031b98f074f00/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=b383e25548a5c06cb096cad9571031b98f074f00", "patch": "@@ -6991,16 +6991,17 @@ choose_reload_regs (struct insn_chain *chain)\n \t     If we succeeded removing some reload and we are doing a preliminary\n \t     pass just to remove such reloads, make another pass, since the\n \t     removal of one reload might allow us to inherit another one.  */\n-\t  else if (pass\n-\t\t   && rld[r].in\n+\t  else if (rld[r].in\n \t\t   && rld[r].out != rld[r].in\n \t\t   && remove_address_replacements (rld[r].in))\n-\t    pass = 2;\n+\t    {\n+\t      if (pass)\n+\t        pass = 2;\n+\t    }\n #ifdef SECONDARY_MEMORY_NEEDED\n \t  /* If we needed a memory location for the reload, we also have to\n \t     remove its related reloads.  */\n-\t  else if (pass\n-\t           && rld[r].in\n+\t  else if (rld[r].in\n \t\t   && rld[r].out != rld[r].in\n \t\t   && (tem = replaced_subreg (rld[r].in), REG_P (tem))\t\t   \n \t\t   && REGNO (tem) < FIRST_PSEUDO_REGISTER\n@@ -7009,7 +7010,10 @@ choose_reload_regs (struct insn_chain *chain)\n \t\t   && remove_address_replacements\n \t\t      (get_secondary_mem (tem, rld[r].inmode, rld[r].opnum,\n \t\t\t\t\t  rld[r].when_needed)))\n-\t    pass = 2;\n+\t    {\n+\t      if (pass)\n+\t        pass = 2;\n+\t    }\n #endif\n \t}\n     }"}]}