{"sha": "fa45b1eba375396fd553d9825aa09dd15dad4fba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE0NWIxZWJhMzc1Mzk2ZmQ1NTNkOTgyNWFhMDlkZDE1ZGFkNGZiYQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-12T19:40:09Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-12T19:40:09Z"}, "message": "entered into RCS\n\nFrom-SVN: r1574", "tree": {"sha": "a160c29651f02c2de0fb970c0db93216814d3eba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a160c29651f02c2de0fb970c0db93216814d3eba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa45b1eba375396fd553d9825aa09dd15dad4fba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa45b1eba375396fd553d9825aa09dd15dad4fba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa45b1eba375396fd553d9825aa09dd15dad4fba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa45b1eba375396fd553d9825aa09dd15dad4fba/comments", "author": null, "committer": null, "parents": [{"sha": "2cccceff8b3727cb210faed5d654d861564b1c92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cccceff8b3727cb210faed5d654d861564b1c92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cccceff8b3727cb210faed5d654d861564b1c92"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "921ffd51fd9d7b83a558d7c14336af6c1703fbee", "filename": "gcc/machmode.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa45b1eba375396fd553d9825aa09dd15dad4fba/gcc%2Fmachmode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa45b1eba375396fd553d9825aa09dd15dad4fba/gcc%2Fmachmode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmachmode.h?ref=fa45b1eba375396fd553d9825aa09dd15dad4fba", "patch": "@@ -108,7 +108,8 @@ extern int mode_unit_size[];\n /* Get the number of units in the object.  */\n \n #define GET_MODE_NUNITS(MODE)  \\\n-  (GET_MODE_SIZE ((MODE)) / GET_MODE_UNIT_SIZE ((MODE)))\n+  ((GET_MODE_UNIT_SIZE ((MODE)) == 0) ? 0 \\\n+   : (GET_MODE_SIZE ((MODE)) / GET_MODE_UNIT_SIZE ((MODE))))\n \n /* Get the size in bits of an object of mode MODE.  */\n "}]}