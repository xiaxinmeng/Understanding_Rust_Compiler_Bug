{"sha": "f474fbd5e3cca37ebc886a4950827e93d1c665c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ3NGZiZDVlM2NjYTM3ZWJjODg2YTQ5NTA4MjdlOTNkMWM2NjVjOA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2019-12-14T00:47:47Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-01-14T23:24:56Z"}, "message": "analyzer: better logging for dedupe_winners::add\n\ngcc/analyzer/ChangeLog:\n\t* diagnostic-manager.cc (dedupe_winners::add): Add logging\n\tof deduplication decisions made.", "tree": {"sha": "61e375e8917b9f721bdc7c25e1a370819d689cd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61e375e8917b9f721bdc7c25e1a370819d689cd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f474fbd5e3cca37ebc886a4950827e93d1c665c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f474fbd5e3cca37ebc886a4950827e93d1c665c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f474fbd5e3cca37ebc886a4950827e93d1c665c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f474fbd5e3cca37ebc886a4950827e93d1c665c8/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddd792fa53345180c782494aa597e438a73b6248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd792fa53345180c782494aa597e438a73b6248", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd792fa53345180c782494aa597e438a73b6248"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "4fe354a0c975944c0fe9b44370dfe7a92d747bd3", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f474fbd5e3cca37ebc886a4950827e93d1c665c8/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f474fbd5e3cca37ebc886a4950827e93d1c665c8/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=f474fbd5e3cca37ebc886a4950827e93d1c665c8", "patch": "@@ -1,3 +1,8 @@\n+2020-01-14  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* diagnostic-manager.cc (dedupe_winners::add): Add logging\n+\tof deduplication decisions made.\n+\n 2020-01-14  David Malcolm  <dmalcolm@redhat.com>\n \n \t* ChangeLog: New file."}, {"sha": "7bd21d63e3888a1c914ad0a9df369819706c6fb3", "filename": "gcc/analyzer/diagnostic-manager.cc", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f474fbd5e3cca37ebc886a4950827e93d1c665c8/gcc%2Fanalyzer%2Fdiagnostic-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f474fbd5e3cca37ebc886a4950827e93d1c665c8/gcc%2Fanalyzer%2Fdiagnostic-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fdiagnostic-manager.cc?ref=f474fbd5e3cca37ebc886a4950827e93d1c665c8", "patch": "@@ -325,25 +325,42 @@ class dedupe_winners\n     dedupe_key *key = new dedupe_key (sd, dc->get_path ());\n     if (dedupe_candidate **slot = m_map.get (key))\n       {\n+\tif (logger)\n+\t  logger->log (\"already have this dedupe_key\");\n+\n \t(*slot)->add_duplicate ();\n \n \tif (dc->length () < (*slot)->length ())\n \t  {\n \t    /* We've got a shorter path for the key; replace\n \t       the current candidate.  */\n+\t    if (logger)\n+\t      logger->log (\"length %i is better than existing length %i;\"\n+\t\t\t   \" taking over this dedupe_key\",\n+\t\t\t   dc->length (), (*slot)->length ());\n \t    dc->m_num_dupes = (*slot)->get_num_dupes ();\n \t    delete *slot;\n \t    *slot = dc;\n \t  }\n \telse\n \t  /* We haven't beaten the current best candidate;\n \t     drop the new candidate.  */\n-\t  delete dc;\n+\t  {\n+\t    if (logger)\n+\t      logger->log (\"length %i isn't better than existing length %i;\"\n+\t\t\t   \" dropping this candidate\",\n+\t\t\t   dc->length (), (*slot)->length ());\n+\t    delete dc;\n+\t  }\n \tdelete key;\n       }\n     else\n-      /* This is the first candidate for this key.  */\n-      m_map.put (key, dc);\n+      {\n+\t/* This is the first candidate for this key.  */\n+\tm_map.put (key, dc);\n+\tif (logger)\n+\t  logger->log (\"first candidate for this dedupe_key\");\n+      }\n   }\n \n  /* Emit the simplest diagnostic within each set.  */"}]}