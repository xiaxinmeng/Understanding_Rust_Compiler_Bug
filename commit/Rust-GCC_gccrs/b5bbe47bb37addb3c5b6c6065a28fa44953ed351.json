{"sha": "b5bbe47bb37addb3c5b6c6065a28fa44953ed351", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjViYmU0N2JiMzdhZGRiM2M1YjZjNjA2NWEyOGZhNDQ5NTNlZDM1MQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-09-20T12:20:37Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-09-20T12:20:37Z"}, "message": "re PR tree-optimization/77646 (GCC Segfault with -O3)\n\n2016-09-20  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/77646\n\t* tree-ssa-sccvn.c (visit_reference_op_call): Always value-number\n\ta VDEF.\n\n\t* gcc.dg/torture/pr77646.c: New testcase.\n\nFrom-SVN: r240261", "tree": {"sha": "75ef75742e552f3d06ccaddc5e7c0999269e3dae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75ef75742e552f3d06ccaddc5e7c0999269e3dae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5bbe47bb37addb3c5b6c6065a28fa44953ed351", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5bbe47bb37addb3c5b6c6065a28fa44953ed351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5bbe47bb37addb3c5b6c6065a28fa44953ed351", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5bbe47bb37addb3c5b6c6065a28fa44953ed351/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "564beb5f9b4cd40b4d60a524dd41950faec9a40d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/564beb5f9b4cd40b4d60a524dd41950faec9a40d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/564beb5f9b4cd40b4d60a524dd41950faec9a40d"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "7ab0b82009e3351fd7d8e22ff13802054dcc59fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bbe47bb37addb3c5b6c6065a28fa44953ed351/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bbe47bb37addb3c5b6c6065a28fa44953ed351/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5bbe47bb37addb3c5b6c6065a28fa44953ed351", "patch": "@@ -1,3 +1,9 @@\n+2016-09-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77646\n+\t* tree-ssa-sccvn.c (visit_reference_op_call): Always value-number\n+\ta VDEF.\n+\n 2016-09-20  Tamar Christina  <tamar.christina@arm.com>\n \n \t* config/aarch64/arm_neon.h: Add gnu_inline and artificial"}, {"sha": "9588beddba047e0657024b951a5ffb55c401178d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bbe47bb37addb3c5b6c6065a28fa44953ed351/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bbe47bb37addb3c5b6c6065a28fa44953ed351/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b5bbe47bb37addb3c5b6c6065a28fa44953ed351", "patch": "@@ -1,3 +1,8 @@\n+2016-09-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77646\n+\t* gcc.dg/torture/pr77646.c: New testcase.\n+\n 2016-09-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR c++/77434"}, {"sha": "1b1990037bf108877b20225fd0a6bc3edd07f2b5", "filename": "gcc/testsuite/gcc.dg/torture/pr77646.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bbe47bb37addb3c5b6c6065a28fa44953ed351/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77646.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bbe47bb37addb3c5b6c6065a28fa44953ed351/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77646.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77646.c?ref=b5bbe47bb37addb3c5b6c6065a28fa44953ed351", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+\n+struct e {\n+    int (*f)();\n+    void (*g)();\n+} * c;\n+int a;\n+void *h();\n+typedef struct { struct e j; } k;\n+int l() { return a; }\n+const struct e b = {l};\n+void m()\n+{\n+  k *d = h();\n+  d->j = b;\n+  c = (struct e *)d;\n+  struct e *i = c;\n+  if (i->f(c))\n+    while (i->f(c))\n+      i->g();\n+}"}, {"sha": "bf5e97ae2f03846a8b907f41a1531f3053dbd51b", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bbe47bb37addb3c5b6c6065a28fa44953ed351/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bbe47bb37addb3c5b6c6065a28fa44953ed351/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=b5bbe47bb37addb3c5b6c6065a28fa44953ed351", "patch": "@@ -3470,6 +3470,10 @@ visit_reference_op_call (tree lhs, gcall *stmt)\n     {\n       if (vnresult->result_vdef && vdef)\n \tchanged |= set_ssa_val_to (vdef, vnresult->result_vdef);\n+      else if (vdef)\n+\t/* If the call was discovered to be pure or const reflect\n+\t   that as far as possible.  */\n+\tchanged |= set_ssa_val_to (vdef, vuse_ssa_val (gimple_vuse (stmt)));\n \n       if (!vnresult->result && lhs)\n \tvnresult->result = lhs;"}]}