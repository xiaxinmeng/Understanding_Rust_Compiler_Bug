{"sha": "028098486c768c0f666bf4daa03cf8adfe230599", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI4MDk4NDg2Yzc2OGMwZjY2NmJmNGRhYTAzY2Y4YWRmZTIzMDU5OQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2006-06-01T12:25:19Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2006-06-01T12:25:19Z"}, "message": "install.texi: Document that InfoZIP can replace jar.\n\ngcc:\n2006-06-01  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* doc/install.texi: Document that InfoZIP can replace jar.\n\nlibjava:\n2006-06-01  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* configure.ac (ZIP, UNZIP): New programs.\n\t(JAR): Fall back to bash script.  Generate it.\n\t(BASH_JAR): New conditional.\n\t* Makefile.am (bin_SCRIPTS): New.\n\t* jar.in: New file.\n\nFrom-SVN: r114304", "tree": {"sha": "ae81d1c6393a6aebe1c8b71eb9a09ee578238d12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae81d1c6393a6aebe1c8b71eb9a09ee578238d12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/028098486c768c0f666bf4daa03cf8adfe230599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/028098486c768c0f666bf4daa03cf8adfe230599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/028098486c768c0f666bf4daa03cf8adfe230599", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/028098486c768c0f666bf4daa03cf8adfe230599/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d5b0558fdac8245f6fa72cbf706abc67723356da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5b0558fdac8245f6fa72cbf706abc67723356da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5b0558fdac8245f6fa72cbf706abc67723356da"}], "stats": {"total": 9047, "additions": 5254, "deletions": 3793}, "files": [{"sha": "e43f3197a166b70b5c58d32bbcbdef6b4a065593", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/028098486c768c0f666bf4daa03cf8adfe230599/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/028098486c768c0f666bf4daa03cf8adfe230599/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=028098486c768c0f666bf4daa03cf8adfe230599", "patch": "@@ -1,3 +1,7 @@\n+2006-06-01  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* doc/install.texi: Document that InfoZIP can replace jar.\n+\n 2006-05-31  Roger Sayle  <roger@eyesopen.com>\n \n \t* config/i386/i386.c (ix86_expand_fp_absneg_operator): When SSE"}, {"sha": "0494f285ed65ca2d7219b2d04d06134996ace67f", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/028098486c768c0f666bf4daa03cf8adfe230599/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/028098486c768c0f666bf4daa03cf8adfe230599/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=028098486c768c0f666bf4daa03cf8adfe230599", "patch": "@@ -305,7 +305,7 @@ release (4.1.3) when configured with @option{--enable-mpfr}.\n The @option{--with-mpfr} or @option{--with-mpfr-dir} configure option should\n be used if your MPFR Library is not installed in your library search path.\n \n-@item jar\n+@item @command{jar}, or InfoZIP (@command{zip} and @command{unzip})\n \n Necessary to build libgcj, the GCJ runtime.\n \n@@ -2911,6 +2911,10 @@ to build the Ada language as it can't be bootstrapped using C@.  Ada is\n only available for the 32-bit PA-RISC runtime.  The libffi and libjava\n haven't been ported to HP-UX and don't build.\n \n+Starting with GCC 3.4 an ISO C compiler is required to bootstrap.  The\n+bundled compiler supports only traditional C; you will need either HP's\n+unbundled compiler, or a binary distribution of GCC@.\n+\n It is possible to build GCC 3.3 starting with the bundled HP compiler,\n but the process requires several steps.  GCC 3.3 can then be used to\n build later versions.  The fastjar program contains ISO C code and\n@@ -2919,10 +2923,6 @@ avoided by not building the Java language.  For example, use the\n @option{--enable-languages=\"c,c++,f77,objc\"} option in your configure\n command.\n \n-Starting with GCC 3.4 an ISO C compiler is required to bootstrap.  The\n-bundled compiler supports only traditional C; you will need either HP's\n-unbundled compiler, or a binary distribution of GCC@.\n-\n There are several possible approaches to building the distribution.\n Binutils can be built first using the HP tools.  Then, the GCC\n distribution can be built.  The second approach is to build GCC"}, {"sha": "28583a294f7ea56295f18a197a2585cb32ffc80d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=028098486c768c0f666bf4daa03cf8adfe230599", "patch": "@@ -1,3 +1,11 @@\n+2006-06-01  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* configure.ac (ZIP, UNZIP): New programs.\n+\t(JAR): Fall back to bash script.  Generate it.\n+\t(BASH_JAR): New conditional.\n+\t* Makefile.am (bin_SCRIPTS): New.\n+\t* jar.in: New file.\n+\n 2006-06-01  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* gnu/java/lang/MainThread (run): Revert exception chaining change."}, {"sha": "b7c085638ba584d6a5d435b2da0ea6925dbed220", "filename": "libjava/Makefile.am", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=028098486c768c0f666bf4daa03cf8adfe230599", "patch": "@@ -85,7 +85,9 @@ bin_SCRIPTS = addr2name.awk\n ## Compilers and compilation flags.\n ##\n \n-GCJH = @GCJH@\n+if BASH_JAR\n+bin_SCRIPTS += scripts/jar\n+endif\n \n ## The compiler with whatever flags we want for both -c and -C\n ## compiles."}, {"sha": "1c6ba7a17d1db4a868d53dab78e54343cce47e09", "filename": "libjava/Makefile.in", "status": "modified", "additions": 37, "deletions": 27, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=028098486c768c0f666bf4daa03cf8adfe230599", "patch": "@@ -46,27 +46,28 @@ target_triplet = @target@\n @NATIVE_TRUE@bin_PROGRAMS = jv-convert$(EXEEXT) gij$(EXEEXT) \\\n @NATIVE_TRUE@\tgrmic$(EXEEXT) grmiregistry$(EXEEXT) \\\n @NATIVE_TRUE@\tgcj-dbtool$(EXEEXT)\n-@USING_GCC_TRUE@am__append_4 = $(WARNINGS)\n-@USING_BOEHMGC_TRUE@am__append_5 = boehm.cc\n-@USING_NOGC_TRUE@am__append_6 = nogc.cc\n-@USING_POSIX_PLATFORM_TRUE@am__append_7 = posix.cc\n-@USING_WIN32_PLATFORM_TRUE@am__append_8 = win32.cc\n-@USING_DARWIN_CRT_TRUE@am__append_9 = darwin.cc\n-@USING_POSIX_THREADS_TRUE@am__append_10 = posix-threads.cc\n-@USING_WIN32_THREADS_TRUE@am__append_11 = win32-threads.cc\n-@USING_NO_THREADS_TRUE@am__append_12 = no-threads.cc\n+@BASH_JAR_TRUE@am__append_4 = scripts/jar\n+@USING_GCC_TRUE@am__append_5 = $(WARNINGS)\n+@USING_BOEHMGC_TRUE@am__append_6 = boehm.cc\n+@USING_NOGC_TRUE@am__append_7 = nogc.cc\n+@USING_POSIX_PLATFORM_TRUE@am__append_8 = posix.cc\n+@USING_WIN32_PLATFORM_TRUE@am__append_9 = win32.cc\n+@USING_DARWIN_CRT_TRUE@am__append_10 = darwin.cc\n+@USING_POSIX_THREADS_TRUE@am__append_11 = posix-threads.cc\n+@USING_WIN32_THREADS_TRUE@am__append_12 = win32-threads.cc\n+@USING_NO_THREADS_TRUE@am__append_13 = no-threads.cc\n DIST_COMMON = README $(am__configure_deps) $(srcdir)/../compile \\\n \t$(srcdir)/../config.guess $(srcdir)/../config.sub \\\n \t$(srcdir)/../depcomp $(srcdir)/../install-sh \\\n \t$(srcdir)/../ltmain.sh $(srcdir)/../missing \\\n \t$(srcdir)/../mkinstalldirs $(srcdir)/Makefile.am \\\n \t$(srcdir)/Makefile.in $(srcdir)/libgcj-test.spec.in \\\n \t$(srcdir)/libgcj.pc.in $(srcdir)/libgcj.spec.in \\\n-\t$(srcdir)/sources.am $(top_srcdir)/configure COPYING ChangeLog \\\n-\tNEWS THANKS\n+\t$(srcdir)/sources.am $(top_srcdir)/configure \\\n+\t$(top_srcdir)/scripts/jar.in COPYING ChangeLog NEWS THANKS\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@noinst_PROGRAMS =  \\\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@\tgen-from-JIS$(EXEEXT)\n-@XLIB_AWT_TRUE@am__append_13 = $(xlib_nat_headers)\n+@XLIB_AWT_TRUE@am__append_14 = $(xlib_nat_headers)\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n@@ -90,7 +91,7 @@ am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n CONFIG_HEADER = $(top_builddir)/include/config.h \\\n \t$(top_builddir)/gcj/libgcj-config.h\n CONFIG_CLEAN_FILES = libgcj.pc libgcj.spec libgcj-test.spec \\\n-\tjava/io/natFile.cc java/lang/ConcreteProcess.java \\\n+\tscripts/jar java/io/natFile.cc java/lang/ConcreteProcess.java \\\n \tjava/lang/natConcreteProcess.cc java/net/natInetAddress.cc \\\n \tjava/net/natVMNetworkInterface.cc \\\n \tgnu/java/net/natPlainSocketImpl.cc \\\n@@ -440,6 +441,8 @@ AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n BACKTRACESPEC = @BACKTRACESPEC@\n+BASH_JAR_FALSE = @BASH_JAR_FALSE@\n+BASH_JAR_TRUE = @BASH_JAR_TRUE@\n CAIRO_CFLAGS = @CAIRO_CFLAGS@\n CAIRO_LIBS = @CAIRO_LIBS@\n CC = @CC@\n@@ -477,6 +480,7 @@ GCSPEC = @GCSPEC@\n GCTESTSPEC = @GCTESTSPEC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n+GREP = @GREP@\n GTK_CAIRO_FALSE = @GTK_CAIRO_FALSE@\n GTK_CAIRO_TRUE = @GTK_CAIRO_TRUE@\n GTK_CFLAGS = @GTK_CFLAGS@\n@@ -555,6 +559,7 @@ THREADLDFLAGS = @THREADLDFLAGS@\n THREADLIBS = @THREADLIBS@\n THREADSPEC = @THREADSPEC@\n TOOLKIT = @TOOLKIT@\n+UNZIP = @UNZIP@\n USING_BOEHMGC_FALSE = @USING_BOEHMGC_FALSE@\n USING_BOEHMGC_TRUE = @USING_BOEHMGC_TRUE@\n USING_DARWIN_CRT_FALSE = @USING_DARWIN_CRT_FALSE@\n@@ -576,22 +581,18 @@ USING_WIN32_THREADS_TRUE = @USING_WIN32_THREADS_TRUE@\n VERSION = @VERSION@\n XLIB_AWT_FALSE = @XLIB_AWT_FALSE@\n XLIB_AWT_TRUE = @XLIB_AWT_TRUE@\n+XMKMF = @XMKMF@\n X_CFLAGS = @X_CFLAGS@\n X_EXTRA_LIBS = @X_EXTRA_LIBS@\n X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZINCS = @ZINCS@\n+ZIP = @ZIP@\n ZLIBS = @ZLIBS@\n ZLIBSPEC = @ZLIBSPEC@\n ZLIBTESTSPEC = @ZLIBTESTSPEC@\n-ac_ct_AR = @ac_ct_AR@\n-ac_ct_AS = @ac_ct_AS@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_CXX = @ac_ct_CXX@\n-ac_ct_GCJ = @ac_ct_GCJ@\n-ac_ct_LD = @ac_ct_LD@\n-ac_ct_RANLIB = @ac_ct_RANLIB@\n-ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n@@ -611,7 +612,10 @@ build_os = @build_os@\n build_subdir = @build_subdir@\n build_vendor = @build_vendor@\n datadir = @datadir@\n+datarootdir = @datarootdir@\n dbexecdir = @dbexecdir@\n+docdir = @docdir@\n+dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n extra_ldflags_libjava = @extra_ldflags_libjava@\n gxx_include_dir = @gxx_include_dir@\n@@ -622,20 +626,24 @@ host_cpu = @host_cpu@\n host_os = @host_os@\n host_subdir = @host_subdir@\n host_vendor = @host_vendor@\n+htmldir = @htmldir@\n includedir = @includedir@\n infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n libgcj_basedir = @libgcj_basedir@\n libstdcxx_incdir = @libstdcxx_incdir@\n+localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n mkinstalldirs = @mkinstalldirs@\n oldincludedir = @oldincludedir@\n+pdfdir = @pdfdir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n+psdir = @psdir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n subdirs = @subdirs@\n@@ -686,7 +694,7 @@ propdir = $(libdir)\n db_name = classmap.db\n db_pathtail = gcj-$(gcc_version)/$(db_name)\n @NATIVE_TRUE@dbexec_DATA = $(db_name)\n-bin_SCRIPTS = addr2name.awk\n+bin_SCRIPTS = addr2name.awk $(am__append_4)\n GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8 -Wno-deprecated\n GCJLINK = $(LIBTOOL) --tag=GCJ --mode=link $(GCJ) -L$(here) $(JC1FLAGS) \\\n           $(LDFLAGS) -o $@\n@@ -724,7 +732,7 @@ AM_GCJFLAGS = \\\n \t--encoding=UTF-8 \\\n \t-Wno-deprecated -fbootstrap-classes\n \n-AM_CFLAGS = @LIBGCJ_CFLAGS@ $(am__append_4)\n+AM_CFLAGS = @LIBGCJ_CFLAGS@ $(am__append_5)\n PEDANTIC_CFLAGS = -ansi -pedantic -Wall -Wno-long-long\n JCFLAGS = -g\n JC1FLAGS = @LIBGCJ_JAVAFLAGS@ $(GCJFLAGS)\n@@ -748,10 +756,10 @@ libgij_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n \n libgcj_la_SOURCES = prims.cc jni.cc exception.cc stacktrace.cc link.cc \\\n \tdefineclass.cc interpret.cc verify.cc java/lang/Class.java \\\n-\tjava/lang/Object.java $(nat_source_files) $(am__append_5) \\\n-\t$(am__append_6) $(am__append_7) $(am__append_8) \\\n-\t$(am__append_9) $(am__append_10) $(am__append_11) \\\n-\t$(am__append_12)\n+\tjava/lang/Object.java $(nat_source_files) $(am__append_6) \\\n+\t$(am__append_7) $(am__append_8) $(am__append_9) \\\n+\t$(am__append_10) $(am__append_11) $(am__append_12) \\\n+\t$(am__append_13)\n nat_files = $(nat_source_files:.cc=.lo)\n xlib_nat_files = $(xlib_nat_source_files:.cc=.lo)\n \n@@ -7097,7 +7105,7 @@ gnu/gcj/xlib/natXImage.cc \\\n gnu/gcj/xlib/natXUnmapEvent.cc\n \n sourcesdir = $(jardir)\n-headers_to_make = $(nat_headers) $(am__append_13)\n+headers_to_make = $(nat_headers) $(am__append_14)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n@@ -7194,6 +7202,8 @@ libgcj.spec: $(top_builddir)/config.status $(srcdir)/libgcj.spec.in\n \tcd $(top_builddir) && $(SHELL) ./config.status $@\n libgcj-test.spec: $(top_builddir)/config.status $(srcdir)/libgcj-test.spec.in\n \tcd $(top_builddir) && $(SHELL) ./config.status $@\n+scripts/jar: $(top_builddir)/config.status $(top_srcdir)/scripts/jar.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n install-toolexeclibLTLIBRARIES: $(toolexeclib_LTLIBRARIES)\n \t@$(NORMAL_INSTALL)\n \ttest -z \"$(toolexeclibdir)\" || $(mkdir_p) \"$(DESTDIR)$(toolexeclibdir)\"\n@@ -8374,7 +8384,7 @@ distclean-tags:\n distdir: $(DISTFILES)\n \t$(am__remove_distdir)\n \tmkdir $(distdir)\n-\t$(mkdir_p) $(distdir)/. $(distdir)/.. $(distdir)/../config\n+\t$(mkdir_p) $(distdir)/. $(distdir)/.. $(distdir)/../config $(distdir)/scripts\n \t@srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`; \\\n \ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's|.|.|g'`; \\\n \tlist='$(DISTFILES)'; for file in $$list; do \\"}, {"sha": "96ba1bfacc5b0e5b8b1040ef6631189167be731c", "filename": "libjava/configure", "status": "modified", "additions": 4621, "deletions": 3739, "changes": 8360, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=028098486c768c0f666bf4daa03cf8adfe230599"}, {"sha": "28702b00bf7deb51eb074a388a916080b2e76b54", "filename": "libjava/configure.ac", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=028098486c768c0f666bf4daa03cf8adfe230599", "patch": "@@ -116,9 +116,18 @@ AC_CHECK_TOOL(AS, as)\n AC_CHECK_TOOL(LD, ld)\n AC_CHECK_TOOL(AR, ar)\n AC_CHECK_TOOL(RANLIB, ranlib, :)\n-AC_CHECK_PROGS(JAR, [jar fastjar], false)\n-if test \"$JAR\" = false; then\n-  AC_MSG_ERROR(jar program not found)\n+AC_PROG_AWK\n+AC_CHECK_PROGS([JAR], [jar fastjar], no)\n+AC_PATH_PROG([ZIP], [zip], no)\n+AC_PATH_PROG([UNZIP], [unzip], unzip)\n+AM_CONDITIONAL(BASH_JAR, test \"$JAR\" = no)\n+if test \"$ZIP\" = no; then\n+  if test \"$JAR\" = no; then\n+    AC_MSG_ERROR([cannot find neither zip nor jar, cannot continue])\n+  fi\n+else\n+  # InfoZIP available, use the 'guaranteed' Bourne-shell JAR to build libjava\n+  JAR=`pwd`/scripts/jar\n fi\n \n AC_PROG_INSTALL\n@@ -1458,6 +1467,8 @@ include/Makefile\n testsuite/Makefile\n ])\n \n+AC_CONFIG_FILES([scripts/jar], [chmod +x scripts/jar])\n+\n AC_CONFIG_COMMANDS([default],\n [# Only add multilib support code if we just rebuilt top-level Makefile.\n case \" $CONFIG_FILES \" in"}, {"sha": "c96ba4370a6a08ad5b3d9c0e4d9633403743a68d", "filename": "libjava/gcj/Makefile.in", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2Fgcj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2Fgcj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.in?ref=028098486c768c0f666bf4daa03cf8adfe230599", "patch": "@@ -87,6 +87,8 @@ AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n BACKTRACESPEC = @BACKTRACESPEC@\n+BASH_JAR_FALSE = @BASH_JAR_FALSE@\n+BASH_JAR_TRUE = @BASH_JAR_TRUE@\n CAIRO_CFLAGS = @CAIRO_CFLAGS@\n CAIRO_LIBS = @CAIRO_LIBS@\n CC = @CC@\n@@ -124,6 +126,7 @@ GCSPEC = @GCSPEC@\n GCTESTSPEC = @GCTESTSPEC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n+GREP = @GREP@\n GTK_CAIRO_FALSE = @GTK_CAIRO_FALSE@\n GTK_CAIRO_TRUE = @GTK_CAIRO_TRUE@\n GTK_CFLAGS = @GTK_CFLAGS@\n@@ -202,6 +205,7 @@ THREADLDFLAGS = @THREADLDFLAGS@\n THREADLIBS = @THREADLIBS@\n THREADSPEC = @THREADSPEC@\n TOOLKIT = @TOOLKIT@\n+UNZIP = @UNZIP@\n USING_BOEHMGC_FALSE = @USING_BOEHMGC_FALSE@\n USING_BOEHMGC_TRUE = @USING_BOEHMGC_TRUE@\n USING_DARWIN_CRT_FALSE = @USING_DARWIN_CRT_FALSE@\n@@ -223,22 +227,18 @@ USING_WIN32_THREADS_TRUE = @USING_WIN32_THREADS_TRUE@\n VERSION = @VERSION@\n XLIB_AWT_FALSE = @XLIB_AWT_FALSE@\n XLIB_AWT_TRUE = @XLIB_AWT_TRUE@\n+XMKMF = @XMKMF@\n X_CFLAGS = @X_CFLAGS@\n X_EXTRA_LIBS = @X_EXTRA_LIBS@\n X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZINCS = @ZINCS@\n+ZIP = @ZIP@\n ZLIBS = @ZLIBS@\n ZLIBSPEC = @ZLIBSPEC@\n ZLIBTESTSPEC = @ZLIBTESTSPEC@\n-ac_ct_AR = @ac_ct_AR@\n-ac_ct_AS = @ac_ct_AS@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_CXX = @ac_ct_CXX@\n-ac_ct_GCJ = @ac_ct_GCJ@\n-ac_ct_LD = @ac_ct_LD@\n-ac_ct_RANLIB = @ac_ct_RANLIB@\n-ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n@@ -258,7 +258,10 @@ build_os = @build_os@\n build_subdir = @build_subdir@\n build_vendor = @build_vendor@\n datadir = @datadir@\n+datarootdir = @datarootdir@\n dbexecdir = @dbexecdir@\n+docdir = @docdir@\n+dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n extra_ldflags_libjava = @extra_ldflags_libjava@\n gxx_include_dir = @gxx_include_dir@\n@@ -269,20 +272,24 @@ host_cpu = @host_cpu@\n host_os = @host_os@\n host_subdir = @host_subdir@\n host_vendor = @host_vendor@\n+htmldir = @htmldir@\n includedir = @includedir@\n infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n libgcj_basedir = @libgcj_basedir@\n libstdcxx_incdir = @libstdcxx_incdir@\n+localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n mkinstalldirs = @mkinstalldirs@\n oldincludedir = @oldincludedir@\n+pdfdir = @pdfdir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n+psdir = @psdir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n subdirs = @subdirs@"}, {"sha": "deeb85f77d223d6cf8578c9681c354f00feae5a5", "filename": "libjava/include/Makefile.in", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.in?ref=028098486c768c0f666bf4daa03cf8adfe230599", "patch": "@@ -86,6 +86,8 @@ AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n BACKTRACESPEC = @BACKTRACESPEC@\n+BASH_JAR_FALSE = @BASH_JAR_FALSE@\n+BASH_JAR_TRUE = @BASH_JAR_TRUE@\n CAIRO_CFLAGS = @CAIRO_CFLAGS@\n CAIRO_LIBS = @CAIRO_LIBS@\n CC = @CC@\n@@ -123,6 +125,7 @@ GCSPEC = @GCSPEC@\n GCTESTSPEC = @GCTESTSPEC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n+GREP = @GREP@\n GTK_CAIRO_FALSE = @GTK_CAIRO_FALSE@\n GTK_CAIRO_TRUE = @GTK_CAIRO_TRUE@\n GTK_CFLAGS = @GTK_CFLAGS@\n@@ -201,6 +204,7 @@ THREADLDFLAGS = @THREADLDFLAGS@\n THREADLIBS = @THREADLIBS@\n THREADSPEC = @THREADSPEC@\n TOOLKIT = @TOOLKIT@\n+UNZIP = @UNZIP@\n USING_BOEHMGC_FALSE = @USING_BOEHMGC_FALSE@\n USING_BOEHMGC_TRUE = @USING_BOEHMGC_TRUE@\n USING_DARWIN_CRT_FALSE = @USING_DARWIN_CRT_FALSE@\n@@ -222,22 +226,18 @@ USING_WIN32_THREADS_TRUE = @USING_WIN32_THREADS_TRUE@\n VERSION = @VERSION@\n XLIB_AWT_FALSE = @XLIB_AWT_FALSE@\n XLIB_AWT_TRUE = @XLIB_AWT_TRUE@\n+XMKMF = @XMKMF@\n X_CFLAGS = @X_CFLAGS@\n X_EXTRA_LIBS = @X_EXTRA_LIBS@\n X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZINCS = @ZINCS@\n+ZIP = @ZIP@\n ZLIBS = @ZLIBS@\n ZLIBSPEC = @ZLIBSPEC@\n ZLIBTESTSPEC = @ZLIBTESTSPEC@\n-ac_ct_AR = @ac_ct_AR@\n-ac_ct_AS = @ac_ct_AS@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_CXX = @ac_ct_CXX@\n-ac_ct_GCJ = @ac_ct_GCJ@\n-ac_ct_LD = @ac_ct_LD@\n-ac_ct_RANLIB = @ac_ct_RANLIB@\n-ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n@@ -257,7 +257,10 @@ build_os = @build_os@\n build_subdir = @build_subdir@\n build_vendor = @build_vendor@\n datadir = @datadir@\n+datarootdir = @datarootdir@\n dbexecdir = @dbexecdir@\n+docdir = @docdir@\n+dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n extra_ldflags_libjava = @extra_ldflags_libjava@\n gxx_include_dir = @gxx_include_dir@\n@@ -268,20 +271,24 @@ host_cpu = @host_cpu@\n host_os = @host_os@\n host_subdir = @host_subdir@\n host_vendor = @host_vendor@\n+htmldir = @htmldir@\n includedir = @includedir@\n infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n libgcj_basedir = @libgcj_basedir@\n libstdcxx_incdir = @libstdcxx_incdir@\n+localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n mkinstalldirs = @mkinstalldirs@\n oldincludedir = @oldincludedir@\n+pdfdir = @pdfdir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n+psdir = @psdir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n subdirs = @subdirs@"}, {"sha": "bca85e7f0bd65d699b7c6c60c94dcd0f9b544865", "filename": "libjava/scripts/jar.in", "status": "added", "additions": 523, "deletions": 0, "changes": 523, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2Fscripts%2Fjar.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2Fscripts%2Fjar.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fscripts%2Fjar.in?ref=028098486c768c0f666bf4daa03cf8adfe230599", "patch": "@@ -0,0 +1,523 @@\n+#! /bin/sh\n+# Copyright (C) 2006  Free Software Foundation\n+# Written by Paolo Bonzini.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published\n+# by the Free Software Foundation; either version 2 of the License,\n+# or (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# for more details.\n+#\n+# You should have received a copy of the GNU General Public License along\n+# with this program; if not, write to the Free Software Foundation, Inc.,\n+# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+\n+\n+# POSIX and NLS nuisances, taken from autoconf.\n+if test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then\n+  emulate sh\n+  NULLCMD=:\n+  # Zsh 3.x and 4.x performs word splitting on ${1+\"$@\"}, which\n+  # is contrary to our usage.  Disable this feature.\n+  alias -g '${1+\"$@\"}'='\"$@\"'\n+  setopt NO_GLOB_SUBST\n+else\n+  case `(set -o) 2>/dev/null` in *posix*) set -o posix;; esac\n+fi\n+BIN_SH=xpg4; export BIN_SH # for Tru64\n+DUALCASE=1; export DUALCASE # for MKS sh\n+\n+if test \"${LANG+set}\"   = set; then LANG=C;   export LANG;   fi\n+if test \"${LC_ALL+set}\" = set; then LC_ALL=C; export LC_ALL; fi\n+if test \"${LC_MESSAGES+set}\" = set; then LC_MESSAGES=C; export LC_MESSAGES; fi\n+if test \"${LC_CTYPE+set}\"    = set; then LC_CTYPE=C;    export LC_CTYPE;    fi\n+\n+# Also make sure CDPATH is empty, and IFS is space, tab, \\n in that order.\n+# Be careful to avoid that editors munge IFS\n+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n+IFS=\" \"\"\t\"\"\n+\"\n+\n+: ${TMPDIR=/tmp}\n+: ${ZIP=\"@ZIP@\"}\n+: ${UNZIP=\"@UNZIP@\"}\n+progname=\"$0\"\n+\n+# Emit a usage message and exit with error status 1\n+usage () {\n+  cat >&2 <<EOF\n+Usage: $0 {ctxu}[vfm0Mi@] [jar-file] [manifest-file] {[-C dir] files} ...\n+Options:\n+    -c  create new archive\n+    -t  list table of contents for archive\n+    -x  extract named (or all) files from archive\n+    -u  update existing archive\n+    -v  generate verbose output on standard output\n+    -f  specify archive file name\n+    -m  include manifest information from specified manifest file\n+    -0  store only; use no ZIP compression\n+    -M  do not create a manifest file for the entries\n+    -i  generate index information for the specified jar files\n+    -@  instead of {[-C dir] files} ... accept one or more response files,\n+        each containing one command-line argument\n+    -C  change to the specified directory and include the following file\n+If any file is a directory then it is processed recursively.\n+The manifest file name and the archive file name needs to be specified\n+in the same order the 'm' and 'f' flags are specified.\n+\n+Example 1: to archive two class files into an archive called classes.jar: \n+       jar cvf classes.jar Foo.class Bar.class \n+Example 2: use an existing manifest file 'mymanifest' and archive all the\n+           files in the foo/ directory into 'classes.jar': \n+       jar cvfm classes.jar mymanifest -C foo/ .\n+\n+EOF\n+  (exit 1); exit 1\n+}\n+\n+# Emit an error message and exit with error status 1\n+error () {\n+  echo \"$progname: $*\" >&2\n+  (exit 1); exit 1\n+}\n+\n+# Usage: copy SRC DEST\n+# Copy file SRC to directory DEST, which is the staging area of the jar file.\n+# Fail if it is already present or if it is not a regular file.\n+copy () {\n+  if test -f \"$1\"; then\n+    # A simple optimization.  Optimistically assuming that ln will work\n+    # cuts 60% of the run-time!\n+    if ln \"$1\" \"$2\"/\"$1\" > /dev/null 2>&1; then\n+      return 0\n+    fi\n+\n+    if test -e \"$2\"/\"$1\"; then\n+      error \"$1\": Duplicate entry.\n+    fi\n+    dir=`dirname \"$1\"`\n+    $mkdir_p \"$2\"/\"$dir\"\n+    ln \"$1\" \"$2\"/\"$1\" > /dev/null 2>&1 || cp \"$1\" \"$2\"/\"$1\"\n+  elif test -e \"$1\"; then\n+    error \"$1\": Invalid file type.\n+  else\n+    error \"$1\": File not found.\n+  fi\n+}\n+\n+# Make a temporary directory and store its name in the JARTMP variable.\n+make_tmp () {\n+  test -n \"$JARTMP\" && return\n+\n+  {\n+    JARTMP=`(umask 077 && mktemp -d \"$TMPDIR/jarXXXXXX\") 2>/dev/null` &&\n+      test -n \"$JARTMP\" && test -d \"$JARTMP\"\n+  } || {\n+    JARTMP=$TMPDIR/jar$$-$RANDOM\n+    (umask 077 && mkdir \"$JARTMP\")\n+  } || exit $?\n+\n+  trap 'exit_status=$?\n+        if test -n \"$JARTMP\"; then rm -rf \"$JARTMP\"; fi\n+        exit $exit_status' 0\n+}\n+\n+# Usage: make_manifest destfile kind [source-manifest]\n+# Create a manifest file and store it in destfile.  KIND can be \"default\",\n+# or \"user\", in which case SOURCE-MANIFEST must be specified as well.\n+make_manifest () {\n+  dir=`dirname \"$1\"`\n+  $mkdir_p \"$dir\"\n+  case $2 in\n+    default)\n+      cat > \"$1\" <<\\EOF\n+Manifest-Version: 1.0\n+Created-By: @VERSION@\n+\n+EOF\n+      ;;\n+    user)\n+      cp \"$3\" \"$1\"\n+      ;;\n+  esac\n+}\n+\n+# Usage: set_var var [value]\n+# Exit with an error if set_var was already called for the same VAR.  Else\n+# set the variable VAR to the value VALUE (or the empty value if no parameter\n+# is given).\n+set_var () {\n+  if eval test x\\$set_$1 = xset; then\n+    error Incompatible or repeated options.\n+  else\n+    eval $1=\\$2\n+    eval set_$1=set\n+  fi\n+}\n+\n+# Process the arguments, including -C options, and copy the whole tree\n+# to $JARTMP/files so that zip can be invoked later from there.\n+make_files () {\n+  change=false\n+  if $process_response_files; then\n+    if test $# = 0; then\n+      while read arg; do\n+        make_files_1 \"$arg\"\n+      done\n+    else\n+      for infile\n+      do\n+        exec 5<&0\n+        exec 0< $infile\n+        while read arg; do\n+          make_files_1 \"$arg\"\n+        done\n+        exec 0<&5\n+        exec 5<&-\n+      done\n+    fi\n+  else\n+    for arg\n+    do\n+      make_files_1 \"$arg\"\n+    done\n+  fi\n+  cd \"$old_dir\"\n+}\n+\n+# Usage: make_files_1 ARG\n+# Process one argument, ARG.\n+make_files_1 () {\n+  if $change; then\n+    change=false\n+    if cd \"$1\"; then\n+      return\n+    else\n+      (exit 1); exit 1\n+    fi\n+  fi\n+  case \"$1\" in\n+    -C)\n+      change=:\n+      ;;\n+    -C*)\n+      cd `expr \"$1\" : '-C\\(.*\\)' `\n+      return\n+      ;;\n+    *)\n+      if test -d \"$1\"; then\n+        $mkdir_p \"$JARTMP\"/files/\"$1\"\n+        find \"$1\" | while read file; do\n+          if test -d \"$file\"; then\n+            $mkdir_p \"$JARTMP\"/files/\"$file\"\n+          else\n+            copy \"$file\" \"$JARTMP\"/files\n+          fi\n+        done\n+      else\n+        copy \"$1\" \"$JARTMP\"/files\n+      fi\n+      ;;\n+  esac\n+  cd \"$old_dir\"\n+}\n+\n+# Same as \"jar tf $1\".\n+jar_list () {\n+  $UNZIP -l \"$1\" | \\\n+    sed '1,/^ ----/d;/^ ----/,$d;s/^ *[0-9]*  ..-..-.. ..:..   //'\n+}\n+\n+# Same as \"jar tvf $1\".\n+jar_list_verbose () {\n+  $UNZIP -l \"$1\" | \\\n+    @AWK@ 'BEGIN { yes = 0 }\n+\t /^ ----/ { yes = !yes; next }\n+\t yes {\n+\t   size=$1\n+\t   split ($2, d, \"-\")\n+\t   split ($3, t, \":\")\n+\t   d[3] += (d[3] < 80) ? 2000 : 1900\n+\t   timestamp=d[3] \" \" d[1] \" \" d[2] \" \" t[1] \" \" t[2] \" 00\"\n+\t   gsub (/^ *[0-9]*  ..-..-.. ..:..   /, \"\")\n+\t   printf \"%6d %s %s\\n\", size, strftime (\"%a %b %d %H:%M:%S %Z %Y\", mktime (timestamp)), $0\n+\t }'\n+}\n+\n+# mkdir -p emulation based on the mkinstalldirs script.\n+mkdir_p ()\n+{\n+  for file\n+  do\n+    case $file in\n+      /*) pathcomp=/ ;;\n+      *)  pathcomp= ;;\n+    esac\n+    oIFS=$IFS\n+    IFS=/\n+    set fnord $file\n+    shift\n+    IFS=$oIFS\n+\n+    for d\n+    do\n+      test \"x$d\" = x && continue\n+      pathcomp=$pathcomp$d\n+      case $pathcomp in\n+        -*) pathcomp=./$pathcomp ;;\n+      esac\n+\n+      if test ! -d \"$pathcomp\"; then\n+        mkdir \"$pathcomp\" || lasterr=$?\n+        test -d \"$pathcomp\" || errstatus=$lasterr\n+      fi\n+      pathcomp=$pathcomp/\n+    done\n+  done\n+  return \"$errstatus\"\n+}\n+\n+# Detect mkdir -p\n+# On NextStep and OpenStep, the `mkdir' command does not\n+# recognize any option.  It will interpret all options as\n+# directories to create, and then abort because `.' already\n+# exists.\n+if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then\n+  mkdir_p='mkdir -p'\n+else\n+  mkdir_p='mkdir_p'\n+  test -d ./-p && rmdir ./-p\n+  test -d ./--version && rmdir ./--version\n+fi\n+\n+# Process the first command line option.\n+case \"$1\" in\n+  -*) commands=`echo X\"$1\" | sed 's/^X-//' ` ;;\n+  *) commands=\"$1\"\n+esac\n+shift\n+\n+# Operation to perform on the JAR file\n+mode=unknown\n+\n+# First -C option on the command line\n+cur_dir=.\n+\n+# Base directory for -C options\n+old_dir=`pwd`\n+# JAR file to operate on\n+jarfile=\n+\n+# default for no {m,M} option, user for \"m\" option, none for \"M\" option\n+manifest_kind=default\n+\n+# \"-0\" if the \"0\" option was given\n+store=\n+\n+# true if the \"v\" option was given\n+verbose=false\n+\n+# true if the non-standard \"@\" option was given\n+process_response_files=false\n+\n+# An exec command if we need to redirect the zip/unzip commands' output\n+out_redirect=:\n+\n+while test -n \"$commands\"; do\n+  # Process a letter at a time\n+  command=`expr \"$commands\" : '\\(.\\)'`\n+  commands=`expr \"$commands\" : '.\\(.*\\)'`\n+  case \"$command\" in\n+    c)\n+      set_var mode create\n+      ;;\n+    t)\n+      set_var mode list\n+      ;;\n+    x)\n+      set_var mode extract\n+      ;;\n+    u)\n+      set_var mode update\n+      ;;\n+\n+    f)\n+      test $# = 0 && usage\n+      # Multiple \"f\" options are accepted by Sun's JAR tool.\n+      jarfile=\"$1\"\n+      test -z \"$jarfile\" && usage\n+      shift\n+      ;;\n+    m)\n+      test $# = 0 && usage\n+      # Multiple \"m\" options are accepted by Sun's JAR tool, but\n+      # M always overrides m.\n+      test \"$manifest_kind\" = default && manifest_kind=user\n+      manifest_file=\"$1\"\n+      test -z \"$manifest_file\" && usage\n+      shift\n+      ;;\n+    0)\n+      store=-0\n+      ;;\n+    v)\n+      verbose=:\n+      ;;\n+    i)\n+      # Not yet implemented, and probably never will.\n+      ;;\n+    M)\n+      manifest_kind=none\n+      ;;\n+    C)\n+      test $# = 0 && usage\n+      cur_dir=\"$1\"\n+      shift\n+      ;;\n+    @)\n+      process_response_files=: ;;\n+    *)\n+      usage ;;\n+  esac\n+done\n+\n+set -e\n+\n+case \"X$jarfile\" in\n+  X)\n+    # Work on stdin/stdout.  Messages go to stderr, and if we need an input\n+    # JAR file we save it temporarily in the temporary directory.\n+    make_tmp\n+    $mkdir_p \"$JARTMP\"/out\n+    jarfile=\"$JARTMP\"/out/tmp-stdin.jar\n+    out_redirect='exec >&2'\n+    case $mode in\n+      update|extract|list)\n+        if $process_response_files && test $# = 0; then\n+\t  error Cannot use stdin for response file.\n+\tfi\n+\tcat > \"$JARTMP\"/out/tmp-stdin.jar\n+\t;;\n+    esac\n+    ;;\n+\n+  X*/*)\n+    # Make an absolute path.\n+    dir=`dirname \"$jarfile\"`\n+    jarfile=`cd $dir && pwd`/`basename \"$jarfile\"`\n+    ;;\n+\n+  X*)\n+    # Make an absolute path from a filename in the current directory.\n+    jarfile=`pwd`/`basename \"$jarfile\"`\n+    ;;\n+esac\n+\n+# Perform a -C option if given right away.\n+cd \"$cur_dir\"\n+\n+case $mode in\n+  unknown)\n+    usage\n+    ;;\n+\n+  extract)\n+    make_tmp\n+\n+    # Extract the list of files in the JAR file\n+    jar_list \"$jarfile\" > \"$JARTMP\"/list\n+\n+    # If there are files on the command line, expand directories and skip -C\n+    # command line arguments\n+    for arg\n+    do\n+      if $skip; then\n+        skip=false\n+\tcontinue\n+      fi\n+      case \"$arg\" in\n+\t-C) skip=: ;;\n+\t-C*) ;;\n+\t*)\n+\t  escaped=`echo \"X$arg\" | sed 's/^X//; s/[].[^$\\\\*]/\\\\\\\\&/g' `\n+\t  grep \"^$escaped/\" \"$JARTMP\"/list >> \"$JARTMP\"/chosen || :\n+\t  grep \"^$escaped\\$\" \"$JARTMP\"/list >> \"$JARTMP\"/chosen || :\n+      esac\n+    done\n+    test -f \"$JARTMP\"/chosen || cp \"$JARTMP\"/list \"$JARTMP\"/chosen\n+\n+    # Really execute unzip\n+    if $verbose; then\n+      sort < \"$JARTMP\"/chosen | uniq | xargs $UNZIP -o \"$jarfile\" | \\\n+\tsed -ne 's/^   creating/  created/p' -e 's/^  inflating/extracted/p'\n+    else\n+      sort < \"$JARTMP\"/chosen | uniq | xargs $UNZIP -o \"$jarfile\" > /dev/null\n+    fi\n+    ;;\n+\n+  create)\n+    make_tmp\n+    $mkdir_p \"$JARTMP\"/out\n+    $mkdir_p \"$JARTMP\"/files\n+\n+    # Do not overwrite the JAR file if something goes wrong\n+    tmp_jarfile=\"$JARTMP\"/out/`basename \"$jarfile\"`\n+\n+    # Prepare the files in the temporary directory.  This is necessary to\n+    # support -C and still save relative paths in the JAR file.\n+    make_files ${1+\"$@\"}\n+    if test $manifest_kind != none; then\n+      make_manifest \"$JARTMP\"/files/META-INF/MANIFEST.MF $manifest_kind \"$manifest_file\"\n+    fi\n+\n+    # Really execute zip\n+    if $verbose; then\n+      (eval $out_redirect; cd \"$JARTMP\"/files && $ZIP -rv \"$tmp_jarfile\" $store .)\n+    else\n+      (cd \"$JARTMP/files\" && $ZIP -r \"$tmp_jarfile\" $store . > /dev/null)\n+    fi\n+    test \"$jarfile\" = \"$tmp_jarfile\" || mv \"$tmp_jarfile\" \"$jarfile\"\n+    ;;\n+\n+  update)\n+    make_tmp\n+    $mkdir_p \"$JARTMP\"/files\n+    make_files ${1+\"$@\"}\n+\n+    # Same as above, but zip takes care of not overwriting the file\n+    case $manifest_kind in\n+      none)\n+\t$verbose && (eval $out_redirect; echo removing manifest)\n+\t$ZIP -d \"$jarfile\" META-INF/MANIFEST.MF > /dev/null 2>&1 || :\n+\t;;\n+      *)\n+\tmake_manifest \"$JARTMP\"/files/META-INF/MANIFEST.MF $manifest_kind \"$manifest_file\"\n+\t;;\n+    esac\n+    if $verbose; then\n+      (eval $out_redirect; cd \"$JARTMP\"/files && $ZIP -ruv \"$jarfile\" $store .)\n+    else\n+      (cd \"$JARTMP\"/files && $ZIP -ru \"$jarfile\" $store . > /dev/null)\n+    fi\n+    ;;\n+\n+  list)\n+    # Everything's done in the functions\n+    if $verbose; then\n+      jar_list_verbose \"$jarfile\"\n+    else\n+      jar_list \"$jarfile\"\n+    fi ;;\n+esac\n+\n+if test \"$out_redirect\" != :; then\n+  # Cat back to stdout if necessary\n+  case $mode in\n+    create|update) cat \"$JARTMP\"/out/tmp-stdin.jar ;;\n+  esac\n+fi\n+exit 0"}, {"sha": "77f1d0ed69be224b9d0ccbf5288440c5905345da", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/028098486c768c0f666bf4daa03cf8adfe230599/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=028098486c768c0f666bf4daa03cf8adfe230599", "patch": "@@ -75,6 +75,8 @@ AUTOHEADER = @AUTOHEADER@\n AUTOMAKE = @AUTOMAKE@\n AWK = @AWK@\n BACKTRACESPEC = @BACKTRACESPEC@\n+BASH_JAR_FALSE = @BASH_JAR_FALSE@\n+BASH_JAR_TRUE = @BASH_JAR_TRUE@\n CAIRO_CFLAGS = @CAIRO_CFLAGS@\n CAIRO_LIBS = @CAIRO_LIBS@\n CC = @CC@\n@@ -112,6 +114,7 @@ GCSPEC = @GCSPEC@\n GCTESTSPEC = @GCTESTSPEC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n+GREP = @GREP@\n GTK_CAIRO_FALSE = @GTK_CAIRO_FALSE@\n GTK_CAIRO_TRUE = @GTK_CAIRO_TRUE@\n GTK_CFLAGS = @GTK_CFLAGS@\n@@ -190,6 +193,7 @@ THREADLDFLAGS = @THREADLDFLAGS@\n THREADLIBS = @THREADLIBS@\n THREADSPEC = @THREADSPEC@\n TOOLKIT = @TOOLKIT@\n+UNZIP = @UNZIP@\n USING_BOEHMGC_FALSE = @USING_BOEHMGC_FALSE@\n USING_BOEHMGC_TRUE = @USING_BOEHMGC_TRUE@\n USING_DARWIN_CRT_FALSE = @USING_DARWIN_CRT_FALSE@\n@@ -211,22 +215,18 @@ USING_WIN32_THREADS_TRUE = @USING_WIN32_THREADS_TRUE@\n VERSION = @VERSION@\n XLIB_AWT_FALSE = @XLIB_AWT_FALSE@\n XLIB_AWT_TRUE = @XLIB_AWT_TRUE@\n+XMKMF = @XMKMF@\n X_CFLAGS = @X_CFLAGS@\n X_EXTRA_LIBS = @X_EXTRA_LIBS@\n X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZINCS = @ZINCS@\n+ZIP = @ZIP@\n ZLIBS = @ZLIBS@\n ZLIBSPEC = @ZLIBSPEC@\n ZLIBTESTSPEC = @ZLIBTESTSPEC@\n-ac_ct_AR = @ac_ct_AR@\n-ac_ct_AS = @ac_ct_AS@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_CXX = @ac_ct_CXX@\n-ac_ct_GCJ = @ac_ct_GCJ@\n-ac_ct_LD = @ac_ct_LD@\n-ac_ct_RANLIB = @ac_ct_RANLIB@\n-ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n@@ -246,7 +246,10 @@ build_os = @build_os@\n build_subdir = @build_subdir@\n build_vendor = @build_vendor@\n datadir = @datadir@\n+datarootdir = @datarootdir@\n dbexecdir = @dbexecdir@\n+docdir = @docdir@\n+dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n extra_ldflags_libjava = @extra_ldflags_libjava@\n gxx_include_dir = @gxx_include_dir@\n@@ -257,20 +260,24 @@ host_cpu = @host_cpu@\n host_os = @host_os@\n host_subdir = @host_subdir@\n host_vendor = @host_vendor@\n+htmldir = @htmldir@\n includedir = @includedir@\n infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n libgcj_basedir = @libgcj_basedir@\n libstdcxx_incdir = @libstdcxx_incdir@\n+localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n mkinstalldirs = @mkinstalldirs@\n oldincludedir = @oldincludedir@\n+pdfdir = @pdfdir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n+psdir = @psdir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n subdirs = @subdirs@"}]}