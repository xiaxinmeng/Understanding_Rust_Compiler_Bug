{"sha": "ca3c6eae463a45719741d379a9c52fec613fd2fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EzYzZlYWU0NjNhNDU3MTk3NDFkMzc5YTljNTJmZWM2MTNmZDJmZA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-06-27T22:25:43Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-06-27T22:25:43Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1317", "tree": {"sha": "bf6096aebd990d83939f2050a3f650bd82e85641", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf6096aebd990d83939f2050a3f650bd82e85641"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca3c6eae463a45719741d379a9c52fec613fd2fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca3c6eae463a45719741d379a9c52fec613fd2fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca3c6eae463a45719741d379a9c52fec613fd2fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca3c6eae463a45719741d379a9c52fec613fd2fd/comments", "author": null, "committer": null, "parents": [{"sha": "02f4ada4da5583b290c2e66351512b5076aa5061", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02f4ada4da5583b290c2e66351512b5076aa5061", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02f4ada4da5583b290c2e66351512b5076aa5061"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8b7256cf08ff2e7e6a8758b463c96fb7fa746d36", "filename": "gcc/regclass.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca3c6eae463a45719741d379a9c52fec613fd2fd/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca3c6eae463a45719741d379a9c52fec613fd2fd/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=ca3c6eae463a45719741d379a9c52fec613fd2fd", "patch": "@@ -754,7 +754,7 @@ regclass (f, nregs)\n \n       for (i = FIRST_PSEUDO_REGISTER; i < nregs; i++)\n \t{\n-\t  register int best_cost = (1 << (HOST_BITS_PER_INT - 1)) - 1;\n+\t  register int best_cost = (1 << (HOST_BITS_PER_INT - 2)) - 1;\n \t  enum reg_class best = ALL_REGS, alt = NO_REGS;\n \t  /* This is an enum reg_class, but we call it an int\n \t     to save lots of casts.  */"}]}