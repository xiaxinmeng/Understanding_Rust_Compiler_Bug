{"sha": "329c0f891a8e5a18ef8154abca252aeb23585ce2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI5YzBmODkxYThlNWExOGVmODE1NGFiY2EyNTJhZWIyMzU4NWNlMg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-02-13T22:13:45Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-02-13T22:13:45Z"}, "message": "PR libstdc++/89345 Only define std::destroying_delete for C++2a\n\nClang defines the __cpp_impl_destroying_delete macro unconditionally, so\nthat the feature is supported whenever the library type is defined. This\nis incompatible with the current definition in libstdc++ because we use\nconstexpr and inline variables, which will give an error for older -std\nmodes.\n\nThis patch defines the destroying_delete_t type and destroying_delete\nvariable independently of the __cpp_impl_destroying_delete macro, but\nonly for C++2a (because the names aren't reserved for previous\nstandards). The __cpp_lib_destroying_delete macro is only defined when\nboth the library type and compiler macro are defined (i.e. when the type\ncan actually be used as intended).\n\n\tPR libstdc++/89345\n\t* include/std/version [__cpp_impl_destroying_delete]\n\t(__cpp_lib_destroying_delete): Only define for C++2a and later.\n\t* libsupc++/new [__cpp_impl_destroying_delete]\n\t(__cpp_lib_destroying_delete): Likewise.\n\t(destroying_delete_t, destroying_delete): Likewise, but define even\n\twhen __cpp_impl_destroying_delete is not defined.\n\t* testsuite/18_support/destroying_delete.cc: New test.\n\nFrom-SVN: r268856", "tree": {"sha": "d4e97463123b2f8a19b4e0e9a671bbb86c5ecd5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4e97463123b2f8a19b4e0e9a671bbb86c5ecd5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/329c0f891a8e5a18ef8154abca252aeb23585ce2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/329c0f891a8e5a18ef8154abca252aeb23585ce2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/329c0f891a8e5a18ef8154abca252aeb23585ce2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/329c0f891a8e5a18ef8154abca252aeb23585ce2/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d259d3bc067f60410f5d249a085ec6d40f2e082", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d259d3bc067f60410f5d249a085ec6d40f2e082", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d259d3bc067f60410f5d249a085ec6d40f2e082"}], "stats": {"total": 85, "additions": 78, "deletions": 7}, "files": [{"sha": "e8be1b866306ea06a58cc5509565c22d3570c25d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/329c0f891a8e5a18ef8154abca252aeb23585ce2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/329c0f891a8e5a18ef8154abca252aeb23585ce2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=329c0f891a8e5a18ef8154abca252aeb23585ce2", "patch": "@@ -1,3 +1,14 @@\n+2019-02-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/89345\n+\t* include/std/version [__cpp_impl_destroying_delete]\n+\t(__cpp_lib_destroying_delete): Only define for C++2a and later.\n+\t* libsupc++/new [__cpp_impl_destroying_delete]\n+\t(__cpp_lib_destroying_delete): Likewise.\n+\t(destroying_delete_t, destroying_delete): Likewise, but define even\n+\twhen __cpp_impl_destroying_delete is not defined.\n+\t* testsuite/18_support/destroying_delete.cc: New test.\n+\n 2019-02-11  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/89023"}, {"sha": "fa3d473759b1433691f71d853595041f1470dc06", "filename": "libstdc++-v3/include/std/version", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/329c0f891a8e5a18ef8154abca252aeb23585ce2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/329c0f891a8e5a18ef8154abca252aeb23585ce2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion?ref=329c0f891a8e5a18ef8154abca252aeb23585ce2", "patch": "@@ -42,10 +42,6 @@\n # define __cpp_lib_uncaught_exceptions 201411L\n #endif\n \n-#if __cpp_impl_destroying_delete\n-# define __cpp_lib_destroying_delete 201806L\n-#endif\n-\n #if __cplusplus >= 201103L\n // c++11\n #define __cpp_lib_allocator_is_always_equal 201411\n@@ -152,6 +148,9 @@\n \n #if __cplusplus > 201703L\n // c++2a\n+#if __cpp_impl_destroying_delete\n+# define __cpp_lib_destroying_delete 201806L\n+#endif\n #define __cpp_lib_erase_if 201900L\n #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED\n # define __cpp_lib_is_constant_evaluated 201811L"}, {"sha": "24d897a8f22fae2b99bf519774c7997c66129bb8", "filename": "libstdc++-v3/libsupc++/new", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/329c0f891a8e5a18ef8154abca252aeb23585ce2/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/329c0f891a8e5a18ef8154abca252aeb23585ce2/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew?ref=329c0f891a8e5a18ef8154abca252aeb23585ce2", "patch": "@@ -208,8 +208,7 @@ namespace std\n #endif // _GLIBCXX_HAVE_BUILTIN_LAUNDER\n #endif // C++17\n \n-#if __cpp_impl_destroying_delete\n-#define __cpp_lib_destroying_delete 201806L\n+#if __cplusplus > 201703L\n namespace std\n {\n   struct destroying_delete_t\n@@ -218,7 +217,11 @@ namespace std\n   };\n   inline constexpr destroying_delete_t destroying_delete{};\n }\n-#endif // destroying delete\n+// Only define the feature test macro if the compiler supports the feature:\n+#if __cpp_impl_destroying_delete\n+# define __cpp_lib_destroying_delete 201806L\n+#endif\n+#endif // C++20\n \n #pragma GCC visibility pop\n "}, {"sha": "8682ccce9fdcbe5b1dc97cd53090e122dad4de0a", "filename": "libstdc++-v3/testsuite/18_support/destroying_delete.cc", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/329c0f891a8e5a18ef8154abca252aeb23585ce2/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fdestroying_delete.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/329c0f891a8e5a18ef8154abca252aeb23585ce2/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fdestroying_delete.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fdestroying_delete.cc?ref=329c0f891a8e5a18ef8154abca252aeb23585ce2", "patch": "@@ -0,0 +1,58 @@\n+// Copyright (C) 2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do run { target c++2a } }\n+\n+#include <new>\n+#include <testsuite_hooks.h>\n+\n+#ifndef __cpp_lib_destroying_delete\n+# error \"Feature-test macro for destroying_delete missing\"\n+#elif __cpp_lib_destroying_delete != 201806L\n+# error \"Feature-test macro for destroying_delete has wrong value\"\n+#endif\n+\n+const std::destroying_delete_t d{};\n+static_assert(std::is_same_v<decltype(d), decltype(std::destroying_delete)>);\n+\n+struct X\n+{\n+  static bool called;\n+\n+  void operator delete(X* p, std::destroying_delete_t)\n+  {\n+    called = true;\n+    p->~X();\n+    ::operator delete(p);\n+  }\n+};\n+\n+bool X::called = false;\n+\n+void\n+test01()\n+{\n+  X* x = new X;\n+  delete x;\n+  VERIFY( X::called );\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}]}