{"sha": "34a64e47cdb877bbc749575578fa86e2ae0bc1c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRhNjRlNDdjZGI4NzdiYmM3NDk1NzU1NzhmYTg2ZTJhZTBiYzFjOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-02-17T18:31:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-02-17T18:31:01Z"}, "message": "re PR tree-optimization/79327 (wrong code at -O2 and -fprintf-return-value)\n\n\tPR tree-optimization/79327\n\t* gimple-ssa-sprintf.c (format_integer): Remove likely_adjust\n\tvariable, its initialization and use.\n\nFrom-SVN: r245542", "tree": {"sha": "ca95c15780874aa47c16dcf72d6e862d12a83f49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca95c15780874aa47c16dcf72d6e862d12a83f49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34a64e47cdb877bbc749575578fa86e2ae0bc1c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34a64e47cdb877bbc749575578fa86e2ae0bc1c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34a64e47cdb877bbc749575578fa86e2ae0bc1c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34a64e47cdb877bbc749575578fa86e2ae0bc1c9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1d516992d1bcea0a211a55a7276ab1c2a584dbef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d516992d1bcea0a211a55a7276ab1c2a584dbef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d516992d1bcea0a211a55a7276ab1c2a584dbef"}], "stats": {"total": 35, "additions": 15, "deletions": 20}, "files": [{"sha": "b51b5d69ae980821d42509fb80197d8465b96dd1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a64e47cdb877bbc749575578fa86e2ae0bc1c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a64e47cdb877bbc749575578fa86e2ae0bc1c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34a64e47cdb877bbc749575578fa86e2ae0bc1c9", "patch": "@@ -1,3 +1,9 @@\n+2017-02-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/79327\n+\t* gimple-ssa-sprintf.c (format_integer): Remove likely_adjust\n+\tvariable, its initialization and use.\n+\n 2017-02-17  Julia Koval  <julia.koval@intel.com>\n \n \t* common/config/i386/i386-common.c (OPTION_MASK_ISA_RDPID_SET): New."}, {"sha": "7688439aab70d299708ad656af02dbbc9fda2b23", "filename": "gcc/gimple-ssa-sprintf.c", "status": "modified", "additions": 9, "deletions": 20, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34a64e47cdb877bbc749575578fa86e2ae0bc1c9/gcc%2Fgimple-ssa-sprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34a64e47cdb877bbc749575578fa86e2ae0bc1c9/gcc%2Fgimple-ssa-sprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-sprintf.c?ref=34a64e47cdb877bbc749575578fa86e2ae0bc1c9", "patch": "@@ -1232,10 +1232,6 @@ format_integer (const directive &dir, tree arg)\n        of the format string by returning [-1, -1].  */\n     return fmtresult ();\n \n-  /* True if the LIKELY counter should be adjusted upward from the MIN\n-     counter to account for arguments with unknown values.  */\n-  bool likely_adjust = false;\n-\n   fmtresult res;\n \n   /* Using either the range the non-constant argument is in, or its\n@@ -1265,14 +1261,6 @@ format_integer (const directive &dir, tree arg)\n \n \t  res.argmin = argmin;\n \t  res.argmax = argmax;\n-\n-\t  /* Set the adjustment for an argument whose range includes\n-\t     zero since that doesn't include the octal or hexadecimal\n-\t     base prefix.  */\n-\t  wide_int wzero = wi::zero (wi::get_precision (min));\n-\t  if (wi::le_p (min, wzero, SIGNED)\n-\t      && !wi::neg_p (max))\n-\t    likely_adjust = true;\n \t}\n       else if (range_type == VR_ANTI_RANGE)\n \t{\n@@ -1307,11 +1295,6 @@ format_integer (const directive &dir, tree arg)\n \n   if (!argmin)\n     {\n-      /* Set the adjustment for an argument whose range includes\n-\t zero since that doesn't include the octal or hexadecimal\n-\t base prefix.  */\n-      likely_adjust = true;\n-\n       if (TREE_CODE (argtype) == POINTER_TYPE)\n \t{\n \t  argmin = build_int_cst (pointer_sized_int_node, 0);\n@@ -1364,14 +1347,20 @@ format_integer (const directive &dir, tree arg)\n       res.range.max = MAX (max1, max2);\n     }\n \n-  /* Add the adjustment for an argument whose range includes zero\n-     since it doesn't include the octal or hexadecimal base prefix.  */\n+  /* If the range is known, use the maximum as the likely length.  */\n   if (res.knownrange)\n     res.range.likely = res.range.max;\n   else\n     {\n+      /* Otherwise, use the minimum.  Except for the case where for %#x or\n+         %#o the minimum is just for a single value in the range (0) and\n+         for all other values it is something longer, like 0x1 or 01.\n+\t  Use the length for value 1 in that case instead as the likely\n+\t  length.  */\n       res.range.likely = res.range.min;\n-      if (likely_adjust && maybebase && base != 10)\n+      if (maybebase\n+\t  && base != 10\n+\t  && (tree_int_cst_sgn (argmin) < 0 || tree_int_cst_sgn (argmax) > 0))\n \t{\n \t  if (res.range.min == 1)\n \t    res.range.likely += base == 8 ? 1 : 2;"}]}