{"sha": "cffcafda6a42033a18ed8eab86ef34b867eaae1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZmY2FmZGE2YTQyMDMzYTE4ZWQ4ZWFiODZlZjM0Yjg2N2VhYWUxZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-01-23T13:08:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-01-23T13:08:44Z"}, "message": "re PR tree-optimization/79186 (ICE on valid code at -O2 and -O3 on x86_64-linux-gnu:  Segmentation fault (in VRP))\n\n2017-01-23  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/79186\n\t* tree-vrp.c (register_new_assert_for): Make sure we've seen\n\tboth incoming edges before moving an assert.\n\n\t* gcc.dg/torture/pr79186.c: New testcase.\n\t* gcc.dg/torture/pr79187.c: Likewise.\n\nFrom-SVN: r244804", "tree": {"sha": "34f640287902c6484f834a28a58d1adda8c710d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34f640287902c6484f834a28a58d1adda8c710d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cffcafda6a42033a18ed8eab86ef34b867eaae1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cffcafda6a42033a18ed8eab86ef34b867eaae1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cffcafda6a42033a18ed8eab86ef34b867eaae1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cffcafda6a42033a18ed8eab86ef34b867eaae1e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bda2bc48c2f813d840a5951c5bb5fd67e8a760f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bda2bc48c2f813d840a5951c5bb5fd67e8a760f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bda2bc48c2f813d840a5951c5bb5fd67e8a760f9"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "71aaad9bcc482f6b4f7bbcf1d15ef220c1e4ddd3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cffcafda6a42033a18ed8eab86ef34b867eaae1e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cffcafda6a42033a18ed8eab86ef34b867eaae1e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cffcafda6a42033a18ed8eab86ef34b867eaae1e", "patch": "@@ -1,3 +1,9 @@\n+2017-01-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/79186\n+\t* tree-vrp.c (register_new_assert_for): Make sure we've seen\n+\tboth incoming edges before moving an assert.\n+\n 2017-01-23  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-prop.c (load_from_param_1): Removed."}, {"sha": "c64baf573e3469306bf9b5ae261fa654e2a6f7f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cffcafda6a42033a18ed8eab86ef34b867eaae1e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cffcafda6a42033a18ed8eab86ef34b867eaae1e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cffcafda6a42033a18ed8eab86ef34b867eaae1e", "patch": "@@ -1,3 +1,9 @@\n+2017-01-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/79186\n+\t* gcc.dg/torture/pr79186.c: New testcase.\n+\t* gcc.dg/torture/pr79187.c: Likewise.\n+\n 2017-01-23  Martin Jambor  <mjambor@suse.cz>\n \n \t* gcc.dg/ipa/vrp8.c: New test."}, {"sha": "cefbe3968004110863d110961847f13440a32a30", "filename": "gcc/testsuite/gcc.dg/torture/pr79186.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cffcafda6a42033a18ed8eab86ef34b867eaae1e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr79186.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cffcafda6a42033a18ed8eab86ef34b867eaae1e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr79186.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr79186.c?ref=cffcafda6a42033a18ed8eab86ef34b867eaae1e", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+\n+int a, b;\n+unsigned char c, d, e;\n+\n+int main ()\n+{ \n+  if (b || !a)\n+    { \n+      c = a;\n+      if (!c && !a)\n+\td = 0;\n+      e = -a;\n+    }\n+  return 0;\n+}"}, {"sha": "b310a02d6cd6aa7a8cc4d1c0493cafa10e0b103c", "filename": "gcc/testsuite/gcc.dg/torture/pr79187.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cffcafda6a42033a18ed8eab86ef34b867eaae1e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr79187.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cffcafda6a42033a18ed8eab86ef34b867eaae1e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr79187.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr79187.c?ref=cffcafda6a42033a18ed8eab86ef34b867eaae1e", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+\n+int printf (const char *, ...);\n+\n+int a, b = -600, c, d[] = { 0 }, e, f, g = -1, h;\n+unsigned i = ~0;\n+\n+int main ()\n+{\n+  for (; h < 2; h++)\n+    {\n+      if (a > 0)\n+\tprintf (\"%d\\n\", d[b]);\n+      f = ~(b % i);\n+      c = g | (f && g) && e | b;\n+      a = ~(~g & b);\n+    }\n+  return 0; \n+}"}, {"sha": "d7d7a0d3a08c3d1930b38c81d113b3881180e20e", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cffcafda6a42033a18ed8eab86ef34b867eaae1e/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cffcafda6a42033a18ed8eab86ef34b867eaae1e/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=cffcafda6a42033a18ed8eab86ef34b867eaae1e", "patch": "@@ -5035,6 +5035,7 @@ register_new_assert_for (tree name, tree expr,\n \t  /* If we have the same assertion on all incoming edges of a BB\n \t     instead insert it at the beginning of it.  */\n \t  if (e && loc->e\n+\t      && e != loc->e\n \t      && dest_bb == loc->e->dest\n \t      && EDGE_COUNT (dest_bb->preds) == 2)\n \t    {"}]}