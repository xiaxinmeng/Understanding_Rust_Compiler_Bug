{"sha": "0a1369fa9598019354484651f1a16dd8cf7d70c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGExMzY5ZmE5NTk4MDE5MzU0NDg0NjUxZjFhMTZkZDhjZjdkNzBjOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-11-28T16:53:35Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-11-28T16:53:35Z"}, "message": "PR libstdc++/83511 add default argument to basic_string_view::substr\n\n\tPR libstdc++/83511\n\t* include/std/string_view (basic_string_view::substr): Add default\n\targument to first parameter.\n\t* include/experimental/string_view (basic_string_view::substr):\n\tLikewise.\n\t* testsuite/21_strings/basic_string_view/operations/substr/char/\n\t83511.cc: New test.\n\t* testsuite/21_strings/basic_string_view/operations/substr/wchar_t/\n\t83511.cc: New test.\n\t* testsuite/experimental/string_view/operations/substr/char/83511.cc:\n\tNew test.\n\t* testsuite/experimental/string_view/operations/substr/wchar_t/83511.cc:\n\tNew test.\n\nFrom-SVN: r266568", "tree": {"sha": "f5c28280a8914c96d056de241eb2903b4d29fa74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5c28280a8914c96d056de241eb2903b4d29fa74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a1369fa9598019354484651f1a16dd8cf7d70c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a1369fa9598019354484651f1a16dd8cf7d70c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a1369fa9598019354484651f1a16dd8cf7d70c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a1369fa9598019354484651f1a16dd8cf7d70c9/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "188588e443008dd7795947db60b68571ed724fe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/188588e443008dd7795947db60b68571ed724fe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/188588e443008dd7795947db60b68571ed724fe3"}], "stats": {"total": 170, "additions": 168, "deletions": 2}, "files": [{"sha": "6d781b5593b5c70ab56c5bb3c3b787f29cf9b4ae", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a1369fa9598019354484651f1a16dd8cf7d70c9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a1369fa9598019354484651f1a16dd8cf7d70c9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0a1369fa9598019354484651f1a16dd8cf7d70c9", "patch": "@@ -1,3 +1,19 @@\n+2018-11-28  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/83511\n+\t* include/std/string_view (basic_string_view::substr): Add default\n+\targument to first parameter.\n+\t* include/experimental/string_view (basic_string_view::substr):\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string_view/operations/substr/char/\n+\t83511.cc: New test.\n+\t* testsuite/21_strings/basic_string_view/operations/substr/wchar_t/\n+\t83511.cc: New test.\n+\t* testsuite/experimental/string_view/operations/substr/char/83511.cc:\n+\tNew test.\n+\t* testsuite/experimental/string_view/operations/substr/wchar_t/83511.cc:\n+\tNew test.\n+\n 2018-11-28  Edward Smith-Rowland  <3dw4rd@verizon.net>\n \n \tImplement uniform container erasure for C++20."}, {"sha": "b45463f89a32c345d6756b638c4b5012525a496e", "filename": "libstdc++-v3/include/experimental/string_view", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a1369fa9598019354484651f1a16dd8cf7d70c9/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a1369fa9598019354484651f1a16dd8cf7d70c9/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view?ref=0a1369fa9598019354484651f1a16dd8cf7d70c9", "patch": "@@ -273,7 +273,7 @@ inline namespace fundamentals_v1\n       // [string.view.ops], string operations:\n \n       constexpr basic_string_view\n-      substr(size_type __pos, size_type __n=npos) const\n+      substr(size_type __pos = 0, size_type __n = npos) const\n       {\n \treturn __pos <= this->_M_len\n \t     ? basic_string_view{this->_M_str + __pos,"}, {"sha": "b4d9cf56a9da2dd46f672335c968813f3b9a1334", "filename": "libstdc++-v3/include/std/string_view", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a1369fa9598019354484651f1a16dd8cf7d70c9/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a1369fa9598019354484651f1a16dd8cf7d70c9/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view?ref=0a1369fa9598019354484651f1a16dd8cf7d70c9", "patch": "@@ -243,7 +243,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n \n       constexpr basic_string_view\n-      substr(size_type __pos, size_type __n = npos) const noexcept(false)\n+      substr(size_type __pos = 0, size_type __n = npos) const noexcept(false)\n       {\n \t__pos = _M_check(__pos, \"basic_string_view::substr\");\n \tconst size_type __rlen = std::min(__n, _M_len - __pos);"}, {"sha": "60899130b8395c87134a18e42716bf3ac24db5a1", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/operations/substr/char/83511.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a1369fa9598019354484651f1a16dd8cf7d70c9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fsubstr%2Fchar%2F83511.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a1369fa9598019354484651f1a16dd8cf7d70c9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fsubstr%2Fchar%2F83511.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fsubstr%2Fchar%2F83511.cc?ref=0a1369fa9598019354484651f1a16dd8cf7d70c9", "patch": "@@ -0,0 +1,38 @@\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++17 } }\n+\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// basic_string_view::substr\n+\n+#include <string_view>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  const std::string_view s = \"abcdef\";\n+  VERIFY( s.substr() == s );\n+  VERIFY( std::string_view{}.substr().empty() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "478194d138fe7f5e5e32e103e78bdaea8bba9db7", "filename": "libstdc++-v3/testsuite/21_strings/basic_string_view/operations/substr/wchar_t/83511.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a1369fa9598019354484651f1a16dd8cf7d70c9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fsubstr%2Fwchar_t%2F83511.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a1369fa9598019354484651f1a16dd8cf7d70c9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fsubstr%2Fwchar_t%2F83511.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string_view%2Foperations%2Fsubstr%2Fwchar_t%2F83511.cc?ref=0a1369fa9598019354484651f1a16dd8cf7d70c9", "patch": "@@ -0,0 +1,38 @@\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++17 } }\n+\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// basic_string_view::substr\n+\n+#include <string_view>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  const std::wstring_view s = L\"abcdef\";\n+  VERIFY( s.substr() == s );\n+  VERIFY( std::wstring_view{}.substr().empty() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "84acc2cd8a234a85ca205d7ed539c1a67283230a", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/substr/char/83511.cc", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a1369fa9598019354484651f1a16dd8cf7d70c9/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fsubstr%2Fchar%2F83511.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a1369fa9598019354484651f1a16dd8cf7d70c9/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fsubstr%2Fchar%2F83511.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fsubstr%2Fchar%2F83511.cc?ref=0a1369fa9598019354484651f1a16dd8cf7d70c9", "patch": "@@ -0,0 +1,37 @@\n+// { dg-do run { target c++14 } }\n+\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// experimental::basic_string_view::substr\n+\n+#include <experimental/string_view>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  const std::experimental::string_view s = \"abcdef\";\n+  VERIFY( s.substr() == s );\n+  VERIFY( std::experimental::string_view{}.substr().empty() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "d52addf5eadba278c6cba382ca91764087ba04b8", "filename": "libstdc++-v3/testsuite/experimental/string_view/operations/substr/wchar_t/83511.cc", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a1369fa9598019354484651f1a16dd8cf7d70c9/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fsubstr%2Fwchar_t%2F83511.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a1369fa9598019354484651f1a16dd8cf7d70c9/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fsubstr%2Fwchar_t%2F83511.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Foperations%2Fsubstr%2Fwchar_t%2F83511.cc?ref=0a1369fa9598019354484651f1a16dd8cf7d70c9", "patch": "@@ -0,0 +1,37 @@\n+// { dg-do run { target c++14 } }\n+\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// experimental::basic_string_view::substr\n+\n+#include <experimental/string_view>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  const std::experimental::wstring_view s = L\"abcdef\";\n+  VERIFY( s.substr() == s );\n+  VERIFY( std::experimental::wstring_view{}.substr().empty() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}