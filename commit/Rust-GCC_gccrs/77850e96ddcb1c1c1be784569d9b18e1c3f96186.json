{"sha": "77850e96ddcb1c1c1be784569d9b18e1c3f96186", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc4NTBlOTZkZGNiMWMxYzFiZTc4NDU2OWQ5YjE4ZTFjM2Y5NjE4Ng==", "commit": {"author": {"name": "Matthew Fortune", "email": "matthew.fortune@imgtec.com", "date": "2017-02-20T12:07:14Z"}, "committer": {"name": "Matthew Fortune", "email": "mpf@gcc.gnu.org", "date": "2017-02-20T12:07:14Z"}, "message": "Partial revert of r243782 to restore previous behavior\n\ngcc/\n\t* lra-constraints.c (simplify_operand_subreg): Remove early\n\treturn false.\n\nFrom-SVN: r245600", "tree": {"sha": "d81dedffd49e55f945e11fd60b21949d730f6c50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d81dedffd49e55f945e11fd60b21949d730f6c50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77850e96ddcb1c1c1be784569d9b18e1c3f96186", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77850e96ddcb1c1c1be784569d9b18e1c3f96186", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77850e96ddcb1c1c1be784569d9b18e1c3f96186", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77850e96ddcb1c1c1be784569d9b18e1c3f96186/comments", "author": {"login": "mfortune", "id": 10220247, "node_id": "MDQ6VXNlcjEwMjIwMjQ3", "avatar_url": "https://avatars.githubusercontent.com/u/10220247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfortune", "html_url": "https://github.com/mfortune", "followers_url": "https://api.github.com/users/mfortune/followers", "following_url": "https://api.github.com/users/mfortune/following{/other_user}", "gists_url": "https://api.github.com/users/mfortune/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfortune/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfortune/subscriptions", "organizations_url": "https://api.github.com/users/mfortune/orgs", "repos_url": "https://api.github.com/users/mfortune/repos", "events_url": "https://api.github.com/users/mfortune/events{/privacy}", "received_events_url": "https://api.github.com/users/mfortune/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62cdb862640710f991b9e61a5ab4b7a0456a8043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62cdb862640710f991b9e61a5ab4b7a0456a8043", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62cdb862640710f991b9e61a5ab4b7a0456a8043"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "aa7bb847734f0686abd78972c63ecb18f394468a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77850e96ddcb1c1c1be784569d9b18e1c3f96186/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77850e96ddcb1c1c1be784569d9b18e1c3f96186/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=77850e96ddcb1c1c1be784569d9b18e1c3f96186", "patch": "@@ -1,3 +1,8 @@\n+2017-02-20  Matthew Fortune  <matthew.fortune@imgtec.com>\n+\n+\t* lra-constraints.c (simplify_operand_subreg): Remove early\n+\treturn false.\n+\n 2017-02-20  Matthew Fortune  <matthew.fortune@imgtec.com>\n \n \tPR target/78660"}, {"sha": "a7de40b7fc6e9bb6c274e7ac2b5a7594226fdfdb", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77850e96ddcb1c1c1be784569d9b18e1c3f96186/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77850e96ddcb1c1c1be784569d9b18e1c3f96186/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=77850e96ddcb1c1c1be784569d9b18e1c3f96186", "patch": "@@ -1600,7 +1600,8 @@ simplify_operand_subreg (int nop, machine_mode reg_mode)\n \t the memory.  Typical case is when the index scale should\n \t correspond the memory.  */\n       *curr_id->operand_loc[nop] = operand;\n-      return false;\n+      /* Do not return false here as the MEM_P (reg) will be processed\n+\t later in this function.  */\n     }\n   else if (REG_P (reg) && REGNO (reg) < FIRST_PSEUDO_REGISTER)\n     {"}]}