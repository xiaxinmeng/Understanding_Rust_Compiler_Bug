{"sha": "484b59c4826e53507c91291042393160f26d8c71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg0YjU5YzQ4MjZlNTM1MDdjOTEyOTEwNDIzOTMxNjBmMjZkOGM3MQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-06-07T17:33:04Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-06-07T17:33:04Z"}, "message": "spellcheck.c: add test_find_closest_string\n\ngcc/ChangeLog:\n\t* spellcheck.c (selftest::test_find_closest_string): New function.\n\t(spellcheck_c_tests): Call the above.\n\nFrom-SVN: r237181", "tree": {"sha": "ac0ddf3e815b120450e7181956aa014f1cc2933f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac0ddf3e815b120450e7181956aa014f1cc2933f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/484b59c4826e53507c91291042393160f26d8c71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/484b59c4826e53507c91291042393160f26d8c71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/484b59c4826e53507c91291042393160f26d8c71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/484b59c4826e53507c91291042393160f26d8c71/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e10183dce1d15ab1ca0232f9d5aebffbe7e75728", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e10183dce1d15ab1ca0232f9d5aebffbe7e75728", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e10183dce1d15ab1ca0232f9d5aebffbe7e75728"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "d3c7b9493140995278a8056f4c3c47e5ce84894a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/484b59c4826e53507c91291042393160f26d8c71/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/484b59c4826e53507c91291042393160f26d8c71/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=484b59c4826e53507c91291042393160f26d8c71", "patch": "@@ -1,3 +1,8 @@\n+2016-06-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* spellcheck.c (selftest::test_find_closest_string): New function.\n+\t(spellcheck_c_tests): Call the above.\n+\n 2016-06-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* simplify-rtx.c (simplify_cond_clz_ctz): Delete 'mode' local"}, {"sha": "11018f0710eac2ee3c773d1fb30a6a1e2ff87136", "filename": "gcc/spellcheck.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/484b59c4826e53507c91291042393160f26d8c71/gcc%2Fspellcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/484b59c4826e53507c91291042393160f26d8c71/gcc%2Fspellcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fspellcheck.c?ref=484b59c4826e53507c91291042393160f26d8c71", "patch": "@@ -198,6 +198,27 @@ levenshtein_distance_unit_test (const char *a, const char *b,\n   levenshtein_distance_unit_test_oneway (b, a, expected);\n }\n \n+/* Verify that find_closest_string is sane.  */\n+\n+static void\n+test_find_closest_string ()\n+{\n+  auto_vec<const char *> candidates;\n+\n+  /* Verify that it can handle an empty vec.  */\n+  ASSERT_EQ (NULL, find_closest_string (\"\", &candidates));\n+\n+  /* Verify that it works sanely for non-empty vecs.  */\n+  candidates.safe_push (\"apple\");\n+  candidates.safe_push (\"banana\");\n+  candidates.safe_push (\"cherry\");\n+\n+  ASSERT_STREQ (\"apple\", find_closest_string (\"app\", &candidates));\n+  ASSERT_STREQ (\"banana\", find_closest_string (\"banyan\", &candidates));\n+  ASSERT_STREQ (\"cherry\", find_closest_string (\"berry\", &candidates));\n+  ASSERT_EQ (NULL, find_closest_string (\"not like the others\", &candidates));\n+}\n+\n /* Verify levenshtein_distance for a variety of pairs of pre-canned\n    inputs, comparing against known-good values.  */\n \n@@ -218,6 +239,8 @@ spellcheck_c_tests ()\n     (\"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\",\n      \"All your base are belong to us\",\n      44);\n+\n+  test_find_closest_string ();\n }\n \n } // namespace selftest"}]}