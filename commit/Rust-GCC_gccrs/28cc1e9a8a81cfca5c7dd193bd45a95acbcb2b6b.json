{"sha": "28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhjYzFlOWE4YTgxY2ZjYTVjN2RkMTkzYmQ0NWE5NWFjYmNiMmI2Yg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-09-05T22:14:14Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-09-05T22:14:14Z"}, "message": "bessel.m4: Fix printf warning by casting to (long int).\n\n2010-09-05  Tobias Burnus  <burnus@net-b.de>\n\n        * m4/bessel.m4: Fix printf warning by casting to (long int).\n        * generated/bessel_r4.c:Regenerated.\n        * generated/bessel_r8.c: Regenerated.\n        * generated/bessel_r10.c: Regenerated.\n        * generated/bessel_r16.c: Regenerated.\n\nFrom-SVN: r163885", "tree": {"sha": "156d8a8c3c400e31af94d753d6d2004b983c6f54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/156d8a8c3c400e31af94d753d6d2004b983c6f54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a0b3574de3a5965eebb920d3da48771710ef94b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a0b3574de3a5965eebb920d3da48771710ef94b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a0b3574de3a5965eebb920d3da48771710ef94b"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "4c5ffd89e54cf266a9e227f93e2624f4e4ee2892", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b", "patch": "@@ -1,3 +1,11 @@\n+2010-09-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* m4/bessel.m4: Fix printf warning by casting to (long int).\n+\t* generated/bessel_r4.c:Regenerated.\n+\t* generated/bessel_r8.c: Regenerated.\n+\t* generated/bessel_r10.c: Regenerated.\n+\t* generated/bessel_r16.c: Regenerated.\n+\n 2010-09-01  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* intrinsics/execute_command_line.c: New file."}, {"sha": "93d08d6ce6d03793e20d435b0f2c0b8ce013b391", "filename": "libgfortran/generated/bessel_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b/libgfortran%2Fgenerated%2Fbessel_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b/libgfortran%2Fgenerated%2Fbessel_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fbessel_r10.c?ref=28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b", "patch": "@@ -66,7 +66,7 @@ bessel_jn_r10 (gfc_array_r10 * const restrict ret, int n1, int n2, GFC_REAL_10 x\n       && GFC_DESCRIPTOR_EXTENT(ret,0) != (n2-n1+1))\n     runtime_error(\"Incorrect extent in return value of BESSEL_JN \"\n \t\t  \"(%ld vs. %ld)\", (long int) n2-n1,\n-\t\t  GFC_DESCRIPTOR_EXTENT(ret,0));\n+\t\t  (long int) GFC_DESCRIPTOR_EXTENT(ret,0));\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n@@ -134,7 +134,7 @@ bessel_yn_r10 (gfc_array_r10 * const restrict ret, int n1, int n2,\n       && GFC_DESCRIPTOR_EXTENT(ret,0) != (n2-n1+1))\n     runtime_error(\"Incorrect extent in return value of BESSEL_JN \"\n \t\t  \"(%ld vs. %ld)\", (long int) n2-n1,\n-\t\t  GFC_DESCRIPTOR_EXTENT(ret,0));\n+\t\t  (long int) GFC_DESCRIPTOR_EXTENT(ret,0));\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n "}, {"sha": "da9ab9760c5112e979049e8cd93cdb74e8dc2e72", "filename": "libgfortran/generated/bessel_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b/libgfortran%2Fgenerated%2Fbessel_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b/libgfortran%2Fgenerated%2Fbessel_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fbessel_r16.c?ref=28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b", "patch": "@@ -70,7 +70,7 @@ bessel_jn_r16 (gfc_array_r16 * const restrict ret, int n1, int n2, GFC_REAL_16 x\n       && GFC_DESCRIPTOR_EXTENT(ret,0) != (n2-n1+1))\n     runtime_error(\"Incorrect extent in return value of BESSEL_JN \"\n \t\t  \"(%ld vs. %ld)\", (long int) n2-n1,\n-\t\t  GFC_DESCRIPTOR_EXTENT(ret,0));\n+\t\t  (long int) GFC_DESCRIPTOR_EXTENT(ret,0));\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n@@ -138,7 +138,7 @@ bessel_yn_r16 (gfc_array_r16 * const restrict ret, int n1, int n2,\n       && GFC_DESCRIPTOR_EXTENT(ret,0) != (n2-n1+1))\n     runtime_error(\"Incorrect extent in return value of BESSEL_JN \"\n \t\t  \"(%ld vs. %ld)\", (long int) n2-n1,\n-\t\t  GFC_DESCRIPTOR_EXTENT(ret,0));\n+\t\t  (long int) GFC_DESCRIPTOR_EXTENT(ret,0));\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n "}, {"sha": "3d6e3ca231acbe1bd9db523d725be4d69a754e29", "filename": "libgfortran/generated/bessel_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b/libgfortran%2Fgenerated%2Fbessel_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b/libgfortran%2Fgenerated%2Fbessel_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fbessel_r4.c?ref=28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b", "patch": "@@ -66,7 +66,7 @@ bessel_jn_r4 (gfc_array_r4 * const restrict ret, int n1, int n2, GFC_REAL_4 x)\n       && GFC_DESCRIPTOR_EXTENT(ret,0) != (n2-n1+1))\n     runtime_error(\"Incorrect extent in return value of BESSEL_JN \"\n \t\t  \"(%ld vs. %ld)\", (long int) n2-n1,\n-\t\t  GFC_DESCRIPTOR_EXTENT(ret,0));\n+\t\t  (long int) GFC_DESCRIPTOR_EXTENT(ret,0));\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n@@ -134,7 +134,7 @@ bessel_yn_r4 (gfc_array_r4 * const restrict ret, int n1, int n2,\n       && GFC_DESCRIPTOR_EXTENT(ret,0) != (n2-n1+1))\n     runtime_error(\"Incorrect extent in return value of BESSEL_JN \"\n \t\t  \"(%ld vs. %ld)\", (long int) n2-n1,\n-\t\t  GFC_DESCRIPTOR_EXTENT(ret,0));\n+\t\t  (long int) GFC_DESCRIPTOR_EXTENT(ret,0));\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n "}, {"sha": "7e3bcab4a1c298c8397f1c7b677c331aee43739e", "filename": "libgfortran/generated/bessel_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b/libgfortran%2Fgenerated%2Fbessel_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b/libgfortran%2Fgenerated%2Fbessel_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fbessel_r8.c?ref=28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b", "patch": "@@ -66,7 +66,7 @@ bessel_jn_r8 (gfc_array_r8 * const restrict ret, int n1, int n2, GFC_REAL_8 x)\n       && GFC_DESCRIPTOR_EXTENT(ret,0) != (n2-n1+1))\n     runtime_error(\"Incorrect extent in return value of BESSEL_JN \"\n \t\t  \"(%ld vs. %ld)\", (long int) n2-n1,\n-\t\t  GFC_DESCRIPTOR_EXTENT(ret,0));\n+\t\t  (long int) GFC_DESCRIPTOR_EXTENT(ret,0));\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n@@ -134,7 +134,7 @@ bessel_yn_r8 (gfc_array_r8 * const restrict ret, int n1, int n2,\n       && GFC_DESCRIPTOR_EXTENT(ret,0) != (n2-n1+1))\n     runtime_error(\"Incorrect extent in return value of BESSEL_JN \"\n \t\t  \"(%ld vs. %ld)\", (long int) n2-n1,\n-\t\t  GFC_DESCRIPTOR_EXTENT(ret,0));\n+\t\t  (long int) GFC_DESCRIPTOR_EXTENT(ret,0));\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n "}, {"sha": "acef7eaa7183ee7d77644bba39a050430d60689d", "filename": "libgfortran/m4/bessel.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b/libgfortran%2Fm4%2Fbessel.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b/libgfortran%2Fm4%2Fbessel.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fbessel.m4?ref=28cc1e9a8a81cfca5c7dd193bd45a95acbcb2b6b", "patch": "@@ -67,7 +67,7 @@ bessel_jn_r'rtype_kind` ('rtype` * const restrict ret, int n1, int n2, 'rtype_na\n       && GFC_DESCRIPTOR_EXTENT(ret,0) != (n2-n1+1))\n     runtime_error(\"Incorrect extent in return value of BESSEL_JN \"\n \t\t  \"(%ld vs. %ld)\", (long int) n2-n1,\n-\t\t  GFC_DESCRIPTOR_EXTENT(ret,0));\n+\t\t  (long int) GFC_DESCRIPTOR_EXTENT(ret,0));\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n \n@@ -135,7 +135,7 @@ bessel_yn_r'rtype_kind` ('rtype` * const restrict ret, int n1, int n2,\n       && GFC_DESCRIPTOR_EXTENT(ret,0) != (n2-n1+1))\n     runtime_error(\"Incorrect extent in return value of BESSEL_JN \"\n \t\t  \"(%ld vs. %ld)\", (long int) n2-n1,\n-\t\t  GFC_DESCRIPTOR_EXTENT(ret,0));\n+\t\t  (long int) GFC_DESCRIPTOR_EXTENT(ret,0));\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n "}]}