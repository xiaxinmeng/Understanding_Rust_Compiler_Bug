{"sha": "b78e932d513b7d3373bc5e1aab456dda737d07d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc4ZTkzMmQ1MTNiN2QzMzczYmM1ZTFhYWI0NTZkZGE3MzdkMDdkMA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2013-12-19T18:11:42Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2013-12-19T18:11:42Z"}, "message": "Improve -fuse-ld=[bfd|gold] check\n\n\tPR driver/59321\n\t* collect2.c (main): Check -fuse-ld=[bfd|gold] when\n\tDEFAULT_LINKER is defined.\n\t* common.opt (fuse-ld=bfd): Add Driver.\n\t(fuse-ld=gold): Likewise.\n\t* gcc.c (use_ld): New variable.\n\t(driver_handle_option): Set use_ld for OPT_fuse_ld_bfd and\n\tOPT_fuse_ld_gold.\n\t(main): Check -fuse-ld=[bfd|gold] for -print-prog-name=ld.\n\nFrom-SVN: r206129", "tree": {"sha": "9cd489829df0a7b71a7ba27da9b9f1ec45d2f759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cd489829df0a7b71a7ba27da9b9f1ec45d2f759"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b78e932d513b7d3373bc5e1aab456dda737d07d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b78e932d513b7d3373bc5e1aab456dda737d07d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b78e932d513b7d3373bc5e1aab456dda737d07d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b78e932d513b7d3373bc5e1aab456dda737d07d0/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "582e2e430089a54069f3e38eb8a2bacd36c42af5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/582e2e430089a54069f3e38eb8a2bacd36c42af5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/582e2e430089a54069f3e38eb8a2bacd36c42af5"}], "stats": {"total": 89, "additions": 86, "deletions": 3}, "files": [{"sha": "0b02dd59a5631d193e586d34c9feee11d96a9969", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b78e932d513b7d3373bc5e1aab456dda737d07d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b78e932d513b7d3373bc5e1aab456dda737d07d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b78e932d513b7d3373bc5e1aab456dda737d07d0", "patch": "@@ -1,3 +1,15 @@\n+2013-12-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR driver/59321\n+\t* collect2.c (main): Check -fuse-ld=[bfd|gold] when\n+\tDEFAULT_LINKER is defined.\n+\t* common.opt (fuse-ld=bfd): Add Driver.\n+\t(fuse-ld=gold): Likewise.\n+\t* gcc.c (use_ld): New variable.\n+\t(driver_handle_option): Set use_ld for OPT_fuse_ld_bfd and\n+\tOPT_fuse_ld_gold.\n+\t(main): Check -fuse-ld=[bfd|gold] for -print-prog-name=ld.\n+\n 2013-12-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* Makefile.in (TEXI_GCC_FILES): Add arm-acle-intrinsics.texi."}, {"sha": "1d8ea4f917331c8cb0e15998dfb048ffc6f37208", "filename": "gcc/collect2.c", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b78e932d513b7d3373bc5e1aab456dda737d07d0/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b78e932d513b7d3373bc5e1aab456dda737d07d0/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=b78e932d513b7d3373bc5e1aab456dda737d07d0", "patch": "@@ -1121,7 +1121,35 @@ main (int argc, char **argv)\n   /* Maybe we know the right file to use (if not cross).  */\n   ld_file_name = 0;\n #ifdef DEFAULT_LINKER\n-  if (access (DEFAULT_LINKER, X_OK) == 0)\n+  if (selected_linker == USE_BFD_LD || selected_linker == USE_GOLD_LD)\n+    {\n+      char *linker_name;\n+# ifdef HOST_EXECUTABLE_SUFFIX\n+      int len = (sizeof (DEFAULT_LINKER)\n+\t\t - sizeof (HOST_EXECUTABLE_SUFFIX));\n+      linker_name = NULL;\n+      if (len > 0)\n+\t{\n+\t  char *default_linker = xstrdup (DEFAULT_LINKER);\n+\t  /* Strip HOST_EXECUTABLE_SUFFIX if DEFAULT_LINKER contains\n+\t     HOST_EXECUTABLE_SUFFIX.  */\n+\t  if (! strcmp (&default_linker[len], HOST_EXECUTABLE_SUFFIX))\n+\t    {\n+\t      default_linker[len] = '\\0';\n+\t      linker_name = concat (default_linker,\n+\t\t\t\t    &ld_suffixes[selected_linker][2],\n+\t\t\t\t    HOST_EXECUTABLE_SUFFIX, NULL);\n+\t    }\n+\t}\n+      if (linker_name == NULL)\n+# endif\n+      linker_name = concat (DEFAULT_LINKER,\n+\t\t\t    &ld_suffixes[selected_linker][2],\n+\t\t\t    NULL);\n+      if (access (linker_name, X_OK) == 0)\n+\tld_file_name = linker_name;\n+    }\n+  if (ld_file_name == 0 && access (DEFAULT_LINKER, X_OK) == 0)\n     ld_file_name = DEFAULT_LINKER;\n   if (ld_file_name == 0)\n #endif"}, {"sha": "76e4447217df44caf6b8e8044a04555eb47acdfb", "filename": "gcc/common.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b78e932d513b7d3373bc5e1aab456dda737d07d0/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b78e932d513b7d3373bc5e1aab456dda737d07d0/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=b78e932d513b7d3373bc5e1aab456dda737d07d0", "patch": "@@ -2250,11 +2250,11 @@ Common Report Var(flag_unwind_tables) Optimization\n Just generate unwind tables for exception handling\n \n fuse-ld=bfd\n-Common Negative(fuse-ld=gold)\n+Common Driver Negative(fuse-ld=gold)\n Use the bfd linker instead of the default linker\n \n fuse-ld=gold\n-Common Negative(fuse-ld=bfd)\n+Common Driver Negative(fuse-ld=bfd)\n Use the gold linker instead of the default linker\n \n fuse-linker-plugin"}, {"sha": "0866e748cc6aca075240ff3a8054b41d0f38d408", "filename": "gcc/gcc.c", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b78e932d513b7d3373bc5e1aab456dda737d07d0/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b78e932d513b7d3373bc5e1aab456dda737d07d0/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=b78e932d513b7d3373bc5e1aab456dda737d07d0", "patch": "@@ -105,6 +105,9 @@ static int verbose_only_flag;\n \n static int print_subprocess_help;\n \n+/* Linker suffix passed to -fuse-ld=... */\n+static const char *use_ld;\n+\n /* Whether we should report subprocess execution times to a file.  */\n \n FILE *report_times_to_file = NULL;\n@@ -3380,6 +3383,14 @@ driver_handle_option (struct gcc_options *opts,\n       do_save = false;\n       break;\n \n+    case OPT_fuse_ld_bfd:\n+       use_ld = \".bfd\";\n+       break;\n+\n+    case OPT_fuse_ld_gold:\n+       use_ld = \".gold\";\n+       break;\n+\n     case OPT_fcompare_debug_second:\n       compare_debug_second = 1;\n       break;\n@@ -6708,6 +6719,38 @@ main (int argc, char **argv)\n \n   if (print_prog_name)\n     {\n+      if (use_ld != NULL && ! strcmp (print_prog_name, \"ld\"))\n+\t{\n+\t  /* Append USE_LD to to the default linker.  */\n+#ifdef DEFAULT_LINKER\n+\t  char *ld;\n+# ifdef HAVE_HOST_EXECUTABLE_SUFFIX\n+\t  int len = (sizeof (DEFAULT_LINKER)\n+\t\t     - sizeof (HOST_EXECUTABLE_SUFFIX));\n+\t  ld = NULL;\n+\t  if (len > 0)\n+\t    {\n+\t      char *default_linker = xstrdup (DEFAULT_LINKER);\n+\t      /* Strip HOST_EXECUTABLE_SUFFIX if DEFAULT_LINKER contains\n+\t\t HOST_EXECUTABLE_SUFFIX.  */\n+\t      if (! strcmp (&default_linker[len], HOST_EXECUTABLE_SUFFIX))\n+\t\t{\n+\t\t  default_linker[len] = '\\0';\n+\t\t  ld = concat (default_linker, use_ld,\n+\t\t\t       HOST_EXECUTABLE_SUFFIX, NULL);\n+\t\t}\n+\t    }\n+\t  if (ld == NULL)\n+# endif\n+\t  ld = concat (DEFAULT_LINKER, use_ld, NULL);\n+\t  if (access (ld, X_OK) == 0)\n+\t    {\n+\t      printf (\"%s\\n\", ld);\n+\t      return (0);\n+\t    }\n+#endif\n+\t  print_prog_name = concat (print_prog_name, use_ld, NULL);\n+\t}\n       char *newname = find_a_file (&exec_prefixes, print_prog_name, X_OK, 0);\n       printf (\"%s\\n\", (newname ? newname : print_prog_name));\n       return (0);"}]}