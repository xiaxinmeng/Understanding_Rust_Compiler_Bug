{"sha": "bfeb36bd03c2168af263daa13370a20a96c42b5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZlYjM2YmQwM2MyMTY4YWYyNjNkYWExMzM3MGEyMGE5NmM0MmI1ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-06T10:44:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-06T10:46:22Z"}, "message": "testsuite: Fix up pr96573.c on aarch64 [PR96573]\n\nOn Thu, Apr 01, 2021 at 02:16:55PM +0100, Alex Coplan via Gcc-patches wrote:\n> FYI, I'm seeing the new test failing on aarch64:\n>\n> PASS: gcc.dg/pr96573.c (test for excess errors)\n> FAIL: gcc.dg/pr96573.c scan-tree-dump optimized \"__builtin_bswap\"\n\nThe vectorizer in the aarch64 case manages to emit a VEC_PERM_EXPR instead\n(which is just as efficient).\n\nSo, do we want to go for the following (and/or perhaps also restrict the test to\na couple of targets where it works?  In my last distro build it failed only\non aarch64-linux, while armv7hl-linux-gnueabi and\n{i686,x86_64,powerpc64le,s390x}-linux were fine)?\n\n2021-04-06  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/96573\n\t* gcc.dg/pr96573.c: Instead of __builtin_bswap accept also\n\tVEC_PERM_EXPR with bswapping permutation.", "tree": {"sha": "6984b2308f55551d30d75f6c130e081436592026", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6984b2308f55551d30d75f6c130e081436592026"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfeb36bd03c2168af263daa13370a20a96c42b5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfeb36bd03c2168af263daa13370a20a96c42b5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfeb36bd03c2168af263daa13370a20a96c42b5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfeb36bd03c2168af263daa13370a20a96c42b5d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58cd9fc8a61de09ba181c5ed5ac7fb91ec506414", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58cd9fc8a61de09ba181c5ed5ac7fb91ec506414", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58cd9fc8a61de09ba181c5ed5ac7fb91ec506414"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "63db69df029168366e59aba3739b7e509fb90ced", "filename": "gcc/testsuite/gcc.dg/pr96573.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfeb36bd03c2168af263daa13370a20a96c42b5d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96573.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfeb36bd03c2168af263daa13370a20a96c42b5d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96573.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96573.c?ref=bfeb36bd03c2168af263daa13370a20a96c42b5d", "patch": "@@ -2,7 +2,7 @@\n /* { dg-do compile { target { lp64 || ilp32 } } } */\n /* { dg-require-effective-target bswap } */\n /* { dg-options \"-O3 -fdump-tree-optimized\" } */\n-/* { dg-final { scan-tree-dump \"__builtin_bswap\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"__builtin_bswap\\|VEC_PERM_EXPR\\[^\\n\\r]*7, 6, 5, 4, 3, 2, 1, 0\" \"optimized\" } } */\n \n typedef __SIZE_TYPE__ size_t;\n "}]}