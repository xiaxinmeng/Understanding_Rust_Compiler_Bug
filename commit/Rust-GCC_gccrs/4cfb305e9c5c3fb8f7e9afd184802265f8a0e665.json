{"sha": "4cfb305e9c5c3fb8f7e9afd184802265f8a0e665", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNmYjMwNWU5YzVjM2ZiOGY3ZTlhZmQxODQ4MDIyNjVmOGEwZTY2NQ==", "commit": {"author": {"name": "Doug Rupp", "email": "rupp@adacore.com", "date": "2018-05-31T10:44:56Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-31T10:44:56Z"}, "message": "[Ada] Posix 2008: reimplement System.OS_Primitives.Clock using clock_gettime\n\ngettimeofday is deprecated in Posix 2008, clock_gettime is the recommended\nreplacement.\n\n2018-05-31  Doug Rupp  <rupp@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/s-osprim__posix2008.adb (Clock): Implement using\n\tclock_gettime.\n\nFrom-SVN: r260995", "tree": {"sha": "f03511652865c5959605982cfcce944f74752ad1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f03511652865c5959605982cfcce944f74752ad1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cfb305e9c5c3fb8f7e9afd184802265f8a0e665", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cfb305e9c5c3fb8f7e9afd184802265f8a0e665", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cfb305e9c5c3fb8f7e9afd184802265f8a0e665", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cfb305e9c5c3fb8f7e9afd184802265f8a0e665/comments", "author": {"login": "Cementitious", "id": 115579865, "node_id": "U_kgDOBuOb2Q", "avatar_url": "https://avatars.githubusercontent.com/u/115579865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cementitious", "html_url": "https://github.com/Cementitious", "followers_url": "https://api.github.com/users/Cementitious/followers", "following_url": "https://api.github.com/users/Cementitious/following{/other_user}", "gists_url": "https://api.github.com/users/Cementitious/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cementitious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cementitious/subscriptions", "organizations_url": "https://api.github.com/users/Cementitious/orgs", "repos_url": "https://api.github.com/users/Cementitious/repos", "events_url": "https://api.github.com/users/Cementitious/events{/privacy}", "received_events_url": "https://api.github.com/users/Cementitious/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ade649b2bfd24a1adcc28d96fa4b81878efe1c0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ade649b2bfd24a1adcc28d96fa4b81878efe1c0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ade649b2bfd24a1adcc28d96fa4b81878efe1c0b"}], "stats": {"total": 55, "additions": 21, "deletions": 34}, "files": [{"sha": "bee06e3e791c1aef13876c05273fbddb00fee95f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cfb305e9c5c3fb8f7e9afd184802265f8a0e665/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cfb305e9c5c3fb8f7e9afd184802265f8a0e665/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4cfb305e9c5c3fb8f7e9afd184802265f8a0e665", "patch": "@@ -1,3 +1,8 @@\n+2018-05-31  Doug Rupp  <rupp@adacore.com>\n+\n+\t* libgnat/s-osprim__posix2008.adb (Clock): Implement using\n+\tclock_gettime.\n+\n 2018-05-31  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_unst.ads, exp_unst.adb (In_Synchronized_Unit): New predicate to"}, {"sha": "ae791c20488ab71aeac89c38e4e544f39b683ee6", "filename": "gcc/ada/libgnat/s-osprim__posix2008.adb", "status": "modified", "additions": 16, "deletions": 34, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cfb305e9c5c3fb8f7e9afd184802265f8a0e665/gcc%2Fada%2Flibgnat%2Fs-osprim__posix2008.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cfb305e9c5c3fb8f7e9afd184802265f8a0e665/gcc%2Fada%2Flibgnat%2Fs-osprim__posix2008.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-osprim__posix2008.adb?ref=4cfb305e9c5c3fb8f7e9afd184802265f8a0e665", "patch": "@@ -32,8 +32,11 @@\n --  This version is for POSIX.1-2008-like operating systems\n \n with System.CRTL;\n+with System.OS_Constants;\n package body System.OS_Primitives is\n \n+   subtype int is System.CRTL.int;\n+\n    --  ??? These definitions are duplicated from System.OS_Interface because\n    --  we don't want to depend on any package. Consider removing these\n    --  declarations in System.OS_Interface and move these ones to the spec.\n@@ -54,43 +57,22 @@ package body System.OS_Primitives is\n    -----------\n \n    function Clock return Duration is\n+      TS     : aliased timespec;\n+      Result : int;\n \n-      type timeval is array (1 .. 3) of Long_Integer;\n-      --  The timeval array is sized to contain Long_Long_Integer sec and\n-      --  Long_Integer usec. If Long_Long_Integer'Size = Long_Integer'Size then\n-      --  it will be overly large but that will not effect the implementation\n-      --  since it is not accessed directly.\n-\n-      procedure timeval_to_duration\n-        (T    : not null access timeval;\n-         sec  : not null access Long_Long_Integer;\n-         usec : not null access Long_Integer);\n-      pragma Import (C, timeval_to_duration, \"__gnat_timeval_to_duration\");\n-\n-      Micro  : constant := 10**6;\n-      sec    : aliased Long_Long_Integer;\n-      usec   : aliased Long_Integer;\n-      TV     : aliased timeval;\n-      Result : Integer;\n-      pragma Unreferenced (Result);\n-\n-      function gettimeofday\n-        (Tv : access timeval;\n-         Tz : System.Address := System.Null_Address) return Integer;\n-      pragma Import (C, gettimeofday, \"gettimeofday\");\n-\n-   begin\n-      --  The return codes for gettimeofday are as follows (from man pages):\n-      --    EPERM  settimeofday is called by someone other than the superuser\n-      --    EINVAL Timezone (or something else) is invalid\n-      --    EFAULT One of tv or tz pointed outside accessible address space\n+      type clockid_t is new int;\n+      CLOCK_REALTIME : constant clockid_t :=\n+         System.OS_Constants.CLOCK_REALTIME;\n \n-      --  None of these codes signal a potential clock skew, hence the return\n-      --  value is never checked.\n+      function clock_gettime\n+        (clock_id : clockid_t;\n+         tp       : access timespec) return int;\n+      pragma Import (C, clock_gettime, \"clock_gettime\");\n \n-      Result := gettimeofday (TV'Access, System.Null_Address);\n-      timeval_to_duration (TV'Access, sec'Access, usec'Access);\n-      return Duration (sec) + Duration (usec) / Micro;\n+   begin\n+      Result := clock_gettime (CLOCK_REALTIME, TS'Unchecked_Access);\n+      pragma Assert (Result = 0);\n+      return Duration (TS.tv_sec) + Duration (TS.tv_nsec) / 10#1#E9;\n    end Clock;\n \n    -----------------"}]}