{"sha": "fbc7f9df71ac3c5dd63e014686ce9b3022f83f82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJjN2Y5ZGY3MWFjM2M1ZGQ2M2UwMTQ2ODZjZTliMzAyMmY4M2Y4Mg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-11-06T17:58:11Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-11-06T17:58:11Z"}, "message": "re PR fortran/46330 ([OOP] ICE after revision 166368)\n\n2010-11-06  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/46330\n\t* trans-expr.c (gfc_trans_class_assign): Find 'vtab' symbol in correct\n\tnamespace.\n\n\n2010-11-06  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/46330\n\t* gfortran.dg/class_27.f03: New.\n\nFrom-SVN: r166405", "tree": {"sha": "6362ab383813bea88ec943773205746c0350ca50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6362ab383813bea88ec943773205746c0350ca50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbc7f9df71ac3c5dd63e014686ce9b3022f83f82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbc7f9df71ac3c5dd63e014686ce9b3022f83f82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbc7f9df71ac3c5dd63e014686ce9b3022f83f82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbc7f9df71ac3c5dd63e014686ce9b3022f83f82/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ee3b0139f8dd732d6f0cf9571e86cd0ce3740a0"}], "stats": {"total": 80, "additions": 79, "deletions": 1}, "files": [{"sha": "92be42993557eae252b841879b6308d906a2d513", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc7f9df71ac3c5dd63e014686ce9b3022f83f82/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc7f9df71ac3c5dd63e014686ce9b3022f83f82/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fbc7f9df71ac3c5dd63e014686ce9b3022f83f82", "patch": "@@ -1,3 +1,9 @@\n+2010-11-06  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/46330\n+\t* trans-expr.c (gfc_trans_class_assign): Find 'vtab' symbol in correct\n+\tnamespace.\n+\n 2010-11-05  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/45451"}, {"sha": "a95b421170aa124bfd96d179206d223e2541344d", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc7f9df71ac3c5dd63e014686ce9b3022f83f82/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc7f9df71ac3c5dd63e014686ce9b3022f83f82/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=fbc7f9df71ac3c5dd63e014686ce9b3022f83f82", "patch": "@@ -5925,7 +5925,7 @@ gfc_trans_class_assign (gfc_expr *expr1, gfc_expr *expr2, gfc_exec_op op)\n \t  gcc_assert (vtab);\n \t  rhs = gfc_get_expr ();\n \t  rhs->expr_type = EXPR_VARIABLE;\n-\t  gfc_find_sym_tree (vtab->name, NULL, 1, &st);\n+\t  gfc_find_sym_tree (vtab->name, vtab->ns, 1, &st);\n \t  rhs->symtree = st;\n \t  rhs->ts = vtab->ts;\n \t}"}, {"sha": "4577eb26dfaeac1b767f92c8d981e24f06420562", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc7f9df71ac3c5dd63e014686ce9b3022f83f82/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc7f9df71ac3c5dd63e014686ce9b3022f83f82/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fbc7f9df71ac3c5dd63e014686ce9b3022f83f82", "patch": "@@ -1,3 +1,8 @@\n+2010-11-06  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/46330\n+\t* gfortran.dg/class_27.f03: New.\n+\n 2010-11-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tFixed using the Objective-C 2.0 dot-syntax with self and super."}, {"sha": "c3a3c902eae6866e3b123e9e546e9bd484618c81", "filename": "gcc/testsuite/gfortran.dg/class_27.f03", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc7f9df71ac3c5dd63e014686ce9b3022f83f82/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_27.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc7f9df71ac3c5dd63e014686ce9b3022f83f82/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_27.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_27.f03?ref=fbc7f9df71ac3c5dd63e014686ce9b3022f83f82", "patch": "@@ -0,0 +1,67 @@\n+! { dg-do compile }\n+!\n+! PR 46330: [4.6 Regression] [OOP] ICE after revision 166368\n+!\n+! Contributed by Dominique d'Humieres <dominiq@lps.ens.fr>\n+! Taken from http://groups.google.com/group/comp.lang.fortran/browse_thread/thread/76f99e7fd4f3e772\n+\n+module type2_type \n+ implicit none \n+ type, abstract :: Type2 \n+ end type Type2 \n+end module type2_type \n+\n+module extended2A_type \n+ use type2_type \n+ implicit none \n+ type, extends(Type2) :: Extended2A \n+    real(kind(1.0D0)) :: coeff1 = 1. \n+ contains \n+    procedure :: setCoeff1 => Extended2A_setCoeff1 \n+ end type Extended2A \n+ contains \n+    function Extended2A_new(c1, c2) result(typePtr_) \n+       real(kind(1.0D0)), optional, intent(in) :: c1 \n+       real(kind(1.0D0)), optional, intent(in) :: c2 \n+       type(Extended2A), pointer  :: typePtr_ \n+       type(Extended2A), save, allocatable, target  :: type_ \n+       allocate(type_) \n+       typePtr_ => null() \n+       if (present(c1)) call type_%setCoeff1(c1) \n+       typePtr_ => type_ \n+       if ( .not.(associated (typePtr_))) then \n+          stop 'Error initializing Extended2A Pointer.' \n+       endif \n+    end function Extended2A_new \n+    subroutine Extended2A_setCoeff1(this,c1) \n+       class(Extended2A) :: this \n+       real(kind(1.0D0)), intent(in) :: c1 \n+       this% coeff1 = c1 \n+    end subroutine Extended2A_setCoeff1 \n+end module extended2A_type \n+\n+module type1_type \n+ use type2_type \n+ implicit none \n+ type Type1 \n+    class(type2), pointer :: type2Ptr => null() \n+ contains \n+    procedure :: initProc => Type1_initProc \n+ end type Type1 \n+ contains \n+    function Type1_initProc(this) result(iError) \n+       use extended2A_type \n+       implicit none \n+       class(Type1) :: this \n+       integer :: iError \n+          this% type2Ptr => extended2A_new() \n+          if ( .not.( associated(this% type2Ptr))) then \n+             iError = 1 \n+             write(*,'(A)') \"Something Wrong.\" \n+          else \n+             iError = 0 \n+          endif \n+    end function Type1_initProc \n+end module type1_type\n+\n+! { dg-final { cleanup-modules \"type2_type extended2A_type type1_type\" } }"}]}