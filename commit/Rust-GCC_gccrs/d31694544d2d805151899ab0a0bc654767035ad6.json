{"sha": "d31694544d2d805151899ab0a0bc654767035ad6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMxNjk0NTQ0ZDJkODA1MTUxODk5YWIwYTBiYzY1NDc2NzAzNWFkNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-25T09:14:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-25T11:11:41Z"}, "message": "tree-optimization/95297 - handle scalar shift arg for SLP invariant vectype\n\nThis skips invariant vector type setting for a scalar shift argument.\n\n2020-05-25  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/95297\n\t* tree-vect-stmts.c (vectorizable_shift): For scalar_shift_arg\n\tskip updating operand 1 vector type.\n\n\t* g++.dg/vect/pr95297.cc: New testcase.\n\t* g++.dg/vect/pr95290.cc: Likewise.", "tree": {"sha": "bd053db552a082da13b6b1e617410b90177660a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd053db552a082da13b6b1e617410b90177660a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d31694544d2d805151899ab0a0bc654767035ad6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d31694544d2d805151899ab0a0bc654767035ad6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d31694544d2d805151899ab0a0bc654767035ad6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d31694544d2d805151899ab0a0bc654767035ad6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0c623f58198d3c8f767a181574537720386b468", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0c623f58198d3c8f767a181574537720386b468", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0c623f58198d3c8f767a181574537720386b468"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "38ca3ef863b644e12f467724cd2e8136638400a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d31694544d2d805151899ab0a0bc654767035ad6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d31694544d2d805151899ab0a0bc654767035ad6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d31694544d2d805151899ab0a0bc654767035ad6", "patch": "@@ -1,3 +1,9 @@\n+2020-05-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/95297\n+\t* tree-vect-stmts.c (vectorizable_shift): For scalar_shift_arg\n+\tskip updating operand 1 vector type.\n+\n 2020-05-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/95284"}, {"sha": "2ac873c429111e998328e536c3d4c8a3baff4e91", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d31694544d2d805151899ab0a0bc654767035ad6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d31694544d2d805151899ab0a0bc654767035ad6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d31694544d2d805151899ab0a0bc654767035ad6", "patch": "@@ -1,3 +1,9 @@\n+2020-05-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/95297\n+\t* g++.dg/vect/pr95297.cc: New testcase.\n+\t* g++.dg/vect/pr95290.cc: Likewise.\n+\n 2020-05-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/95284"}, {"sha": "150bbf7210324f20d84a4dc3b88528587ddbcaef", "filename": "gcc/testsuite/g++.dg/vect/pr95290.cc", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d31694544d2d805151899ab0a0bc654767035ad6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr95290.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d31694544d2d805151899ab0a0bc654767035ad6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr95290.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr95290.cc?ref=d31694544d2d805151899ab0a0bc654767035ad6", "patch": "@@ -0,0 +1,25 @@\n+// { dg-do compile }\n+\n+typedef short a;\n+enum b {};\n+typedef struct {\n+      a c;\n+} d;\n+typedef struct {\n+      a e, f;\n+} g;\n+typedef struct {\n+      g h;\n+} i;\n+typedef struct {\n+      d j;\n+        int k;\n+} l;\n+class m\n+{\n+  i imgdata;\n+  void n();\n+  l o;\n+};\n+void m::n() try { imgdata.h.e = imgdata.h.f = o.j.c >> o.j.c; } catch (b) {\n+}"}, {"sha": "6ffc92e5fd049037e2a8457590e62d65aec3ac90", "filename": "gcc/testsuite/g++.dg/vect/pr95297.cc", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d31694544d2d805151899ab0a0bc654767035ad6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr95297.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d31694544d2d805151899ab0a0bc654767035ad6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr95297.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr95297.cc?ref=d31694544d2d805151899ab0a0bc654767035ad6", "patch": "@@ -0,0 +1,22 @@\n+// { dg-do compile }\n+// { dg-additional-options \"-O3 -fvect-cost-model=dynamic\" }\n+\n+extern bool var_10;\n+extern int var_16;\n+extern short var_17;\n+extern long var_18;\n+extern int arr_3[][13];\n+\n+int min(const int &a, const int &b)\n+{\n+  return a < b ? a : b;\n+}\n+\n+void test() {\n+    for (short a = 0; a < 010; a++)\n+      for (char b = 0; b < 012; b++)\n+\tarr_3[a][b] = min(-var_10, 0) + 2147483647 >> var_10;\n+    var_16 = (bool)4;\n+    var_17 = 0;\n+    var_18 = -1594153176;\n+}"}, {"sha": "c3254926e228c39327a0f3d7ac662216df70532b", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d31694544d2d805151899ab0a0bc654767035ad6/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d31694544d2d805151899ab0a0bc654767035ad6/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=d31694544d2d805151899ab0a0bc654767035ad6", "patch": "@@ -5774,7 +5774,8 @@ vectorizable_shift (vec_info *vinfo,\n     {\n       if (slp_node\n \t  && (!vect_maybe_update_slp_op_vectype (slp_op0, vectype)\n-\t      || !vect_maybe_update_slp_op_vectype (slp_op1, op1_vectype)))\n+\t      || (!scalar_shift_arg\n+\t\t  && !vect_maybe_update_slp_op_vectype (slp_op1, op1_vectype))))\n \t{\n \t  if (dump_enabled_p ())\n \t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,"}]}