{"sha": "f256f612d49c99e153a024b2cf759537959dad29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI1NmY2MTJkNDljOTllMTUzYTAyNGIyY2Y3NTk1Mzc5NTlkYWQyOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-26T18:30:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-26T18:30:13Z"}, "message": "re PR c++/48211 ([C++0x] Segment Fault When Compiling)\n\n\tPR c++/48211\n\t* name-lookup.h (cp_class_binding): Make base a pointer.\n\t* name-lookup.c (new_class_binding): Adjust.\n\t(poplevel_class): Adjust.\n\nFrom-SVN: r174303", "tree": {"sha": "035a507f1fed8939853b6cb55fe1d1ca83c8921e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/035a507f1fed8939853b6cb55fe1d1ca83c8921e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f256f612d49c99e153a024b2cf759537959dad29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f256f612d49c99e153a024b2cf759537959dad29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f256f612d49c99e153a024b2cf759537959dad29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f256f612d49c99e153a024b2cf759537959dad29/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aed5574e7b576594b71bbda5c822c667055b791c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aed5574e7b576594b71bbda5c822c667055b791c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aed5574e7b576594b71bbda5c822c667055b791c"}], "stats": {"total": 36, "additions": 11, "deletions": 25}, "files": [{"sha": "4835d8498eb34ade68addf6a30f99625e838b1ce", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f256f612d49c99e153a024b2cf759537959dad29/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f256f612d49c99e153a024b2cf759537959dad29/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f256f612d49c99e153a024b2cf759537959dad29", "patch": "@@ -1,5 +1,10 @@\n 2011-05-26  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48211\n+\t* name-lookup.h (cp_class_binding): Make base a pointer.\n+\t* name-lookup.c (new_class_binding): Adjust.\n+\t(poplevel_class): Adjust.\n+\n \tPR c++/48424\n \t* decl.c (grokparms): Function parameter packs don't need to\n \tgo at the end."}, {"sha": "935dd2a78abc45bedb2252e1ea9b4445a0b4211f", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 5, "deletions": 24, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f256f612d49c99e153a024b2cf759537959dad29/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f256f612d49c99e153a024b2cf759537959dad29/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=f256f612d49c99e153a024b2cf759537959dad29", "patch": "@@ -319,33 +319,11 @@ new_class_binding (tree name, tree value, tree type, cxx_scope *scope)\n   cp_class_binding *cb;\n   cxx_binding *binding;\n \n-  if (VEC_length (cp_class_binding, scope->class_shadowed))\n-    {\n-      cp_class_binding *old_base;\n-      old_base = VEC_index (cp_class_binding, scope->class_shadowed, 0);\n-      if (VEC_reserve (cp_class_binding, gc, scope->class_shadowed, 1))\n-\t{\n-\t  /* Fixup the current bindings, as they might have moved.  */\n-\t  size_t i;\n-\n-\t  FOR_EACH_VEC_ELT (cp_class_binding, scope->class_shadowed, i, cb)\n-\t    {\n-\t      cxx_binding **b;\n-\t      b = &IDENTIFIER_BINDING (cb->identifier);\n-\t      while (*b != &old_base[i].base)\n-\t\tb = &((*b)->previous);\n-\t      *b = &cb->base;\n-\t    }\n-\t}\n-      cb = VEC_quick_push (cp_class_binding, scope->class_shadowed, NULL);\n-    }\n-  else\n     cb = VEC_safe_push (cp_class_binding, gc, scope->class_shadowed, NULL);\n \n   cb->identifier = name;\n-  binding = &cb->base;\n+  cb->base = binding = cxx_binding_make (value, type);\n   binding->scope = scope;\n-  cxx_binding_init (binding, value, type);\n   return binding;\n }\n \n@@ -2725,7 +2703,10 @@ poplevel_class (void)\n   if (level->class_shadowed)\n     {\n       FOR_EACH_VEC_ELT (cp_class_binding, level->class_shadowed, i, cb)\n-\tIDENTIFIER_BINDING (cb->identifier) = cb->base.previous;\n+\t{\n+\t  IDENTIFIER_BINDING (cb->identifier) = cb->base->previous;\n+\t  cxx_binding_free (cb->base);\n+\t}\n       ggc_free (level->class_shadowed);\n       level->class_shadowed = NULL;\n     }"}, {"sha": "3309f0a836a745dc3a1c932efa2a5108fc5a0bcd", "filename": "gcc/cp/name-lookup.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f256f612d49c99e153a024b2cf759537959dad29/gcc%2Fcp%2Fname-lookup.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f256f612d49c99e153a024b2cf759537959dad29/gcc%2Fcp%2Fname-lookup.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.h?ref=f256f612d49c99e153a024b2cf759537959dad29", "patch": "@@ -140,7 +140,7 @@ typedef enum tag_scope {\n } tag_scope;\n \n typedef struct GTY(()) cp_class_binding {\n-  cxx_binding base;\n+  cxx_binding *base;\n   /* The bound name.  */\n   tree identifier;\n } cp_class_binding;"}]}