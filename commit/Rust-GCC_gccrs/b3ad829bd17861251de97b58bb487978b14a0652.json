{"sha": "b3ad829bd17861251de97b58bb487978b14a0652", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNhZDgyOWJkMTc4NjEyNTFkZTk3YjU4YmI0ODc5NzhiMTRhMDY1Mg==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2020-09-23T07:33:54Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-27T09:19:31Z"}, "message": "[Ada] CUDA: handle parameter associations in expansion of CUDA_Execute\n\ngcc/ada/\n\n\t* exp_prag.adb (Append_Copies): Handle N_Parameter_Associations.", "tree": {"sha": "ae5ee24ac4b8032d2ae00f1fa59955d2411544d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae5ee24ac4b8032d2ae00f1fa59955d2411544d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3ad829bd17861251de97b58bb487978b14a0652", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3ad829bd17861251de97b58bb487978b14a0652", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3ad829bd17861251de97b58bb487978b14a0652", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3ad829bd17861251de97b58bb487978b14a0652/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c1eba1a6a95b339b16cfceb2d10f8d05aea9fc4"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "53e2d97cd7559ffb9aca275156d0314c1d2bcde9", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3ad829bd17861251de97b58bb487978b14a0652/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3ad829bd17861251de97b58bb487978b14a0652/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=b3ad829bd17861251de97b58bb487978b14a0652", "patch": "@@ -778,16 +778,23 @@ package body Exp_Prag is\n       is\n          Copy  : Entity_Id;\n          Param : Node_Id;\n+         Expr  : Node_Id;\n       begin\n          Param := First (Params);\n          while Present (Param) loop\n             Copy := Make_Temporary (Loc, 'C');\n \n+            if Nkind (Param) = N_Parameter_Association then\n+               Expr := Explicit_Actual_Parameter (Param);\n+            else\n+               Expr := Param;\n+            end if;\n+\n             Append_To (Decls,\n                Make_Object_Declaration (Loc,\n                  Defining_Identifier => Copy,\n-                 Object_Definition   => New_Occurrence_Of (Etype (Param), Loc),\n-                 Expression          => New_Copy_Tree (Param)));\n+                 Object_Definition   => New_Occurrence_Of (Etype (Expr), Loc),\n+                 Expression          => New_Copy_Tree (Expr)));\n \n             Append_Elmt (Copy, Copies);\n             Next (Param);"}]}