{"sha": "b3877860a8dbefda221923faa57ba7f3c88ff4e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM4Nzc4NjBhOGRiZWZkYTIyMTkyM2ZhYTU3YmE3ZjNjODhmZjRlOQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-11-26T09:58:28Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-11-26T09:58:28Z"}, "message": "[calls.c] PR rtl-optimization/67226: Take into account pretend_args_size when checking stack offsets for sibcall optimisation\n\n2015-11-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n            Bernd Schmidt  <bschmidt@redhat.com>\n\n\tPR rtl-optimization/67226\n\t* calls.c (store_one_arg): Take into account\n\tcrtl->args.pretend_args_size when checking for overlap between\n\targ->value and argblock + arg->locate.offset during sibcall\n\toptimization.\n\n\t* gcc.c-torture/execute/pr67226.c: New test.\n\n\nCo-Authored-By: Bernd Schmidt <bernds@redhat.com>\n\nFrom-SVN: r230929", "tree": {"sha": "2eccc3d73bf8aaf67a16ef370aea53376e5e186a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2eccc3d73bf8aaf67a16ef370aea53376e5e186a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3877860a8dbefda221923faa57ba7f3c88ff4e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3877860a8dbefda221923faa57ba7f3c88ff4e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3877860a8dbefda221923faa57ba7f3c88ff4e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3877860a8dbefda221923faa57ba7f3c88ff4e9/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62775f0d9a513654b62e8a83e13c8d1324635ee4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62775f0d9a513654b62e8a83e13c8d1324635ee4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62775f0d9a513654b62e8a83e13c8d1324635ee4"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "58b789b81d9fc39481f55f98e9ad7300d1775f57", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3877860a8dbefda221923faa57ba7f3c88ff4e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3877860a8dbefda221923faa57ba7f3c88ff4e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3877860a8dbefda221923faa57ba7f3c88ff4e9", "patch": "@@ -1,3 +1,12 @@\n+2015-11-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+            Bernd Schmidt  <bschmidt@redhat.com>\n+\n+\tPR rtl-optimization/67226\n+\t* calls.c (store_one_arg): Take into account\n+\tcrtl->args.pretend_args_size when checking for overlap between\n+\targ->value and argblock + arg->locate.offset during sibcall\n+\toptimization.\n+\n 2015-11-26  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/aarch64/aarch64.md (cbranch<mode>4): Use"}, {"sha": "6cbe01970c1f260c8b3115ecbaac69bfa4ead19f", "filename": "gcc/calls.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3877860a8dbefda221923faa57ba7f3c88ff4e9/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3877860a8dbefda221923faa57ba7f3c88ff4e9/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=b3877860a8dbefda221923faa57ba7f3c88ff4e9", "patch": "@@ -4939,6 +4939,13 @@ store_one_arg (struct arg_data *arg, rtx argblock, int flags,\n \t      if (XEXP (x, 0) != crtl->args.internal_arg_pointer)\n \t\ti = INTVAL (XEXP (XEXP (x, 0), 1));\n \n+\t      /* arg.locate doesn't contain the pretend_args_size offset,\n+\t\t it's part of argblock.  Ensure we don't count it in I.  */\n+\t      if (STACK_GROWS_DOWNWARD)\n+\t\ti -= crtl->args.pretend_args_size;\n+\t      else\n+\t\ti += crtl->args.pretend_args_size;\n+\n \t      /* expand_call should ensure this.  */\n \t      gcc_assert (!arg->locate.offset.var\n \t\t\t  && arg->locate.size.var == 0"}, {"sha": "a1466e398aabcb79b08c86cfbd7929b8479e1bc4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3877860a8dbefda221923faa57ba7f3c88ff4e9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3877860a8dbefda221923faa57ba7f3c88ff4e9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b3877860a8dbefda221923faa57ba7f3c88ff4e9", "patch": "@@ -1,3 +1,8 @@\n+2015-11-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization/67226\n+\t* gcc.c-torture/execute/pr67226.c: New test.\n+\n 2015-11-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/68508"}, {"sha": "c533496cbc6fa06872d415c3bba5cc5fe8d4c651", "filename": "gcc/testsuite/gcc.c-torture/execute/pr67226.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3877860a8dbefda221923faa57ba7f3c88ff4e9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr67226.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3877860a8dbefda221923faa57ba7f3c88ff4e9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr67226.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr67226.c?ref=b3877860a8dbefda221923faa57ba7f3c88ff4e9", "patch": "@@ -0,0 +1,42 @@\n+struct assembly_operand\n+{\n+  int type, value, symtype, symflags, marker;\n+};\n+\n+struct assembly_operand to_input, from_input;\n+\n+void __attribute__ ((__noinline__, __noclone__))\n+assemblez_1 (int internal_number, struct assembly_operand o1)\n+{\n+  if (o1.type != from_input.type)\n+    __builtin_abort ();\n+}\n+\n+void __attribute__ ((__noinline__, __noclone__))\n+t0 (struct assembly_operand to, struct assembly_operand from)\n+{\n+  if (to.value == 0)\n+    assemblez_1 (32, from);\n+  else\n+    __builtin_abort ();\n+}\n+\n+int\n+main (void)\n+{\n+  to_input.value = 0;\n+  to_input.type = 1;\n+  to_input.symtype = 2;\n+  to_input.symflags = 3;\n+  to_input.marker = 4;\n+\n+  from_input.value = 5;\n+  from_input.type = 6;\n+  from_input.symtype = 7;\n+  from_input.symflags = 8;\n+  from_input.marker = 9;\n+\n+  t0 (to_input, from_input);\n+\n+  return 0;\n+}"}]}