{"sha": "3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc3N2VkYTJlZGRiYzdkNWQ1NGJkYzBjZGRhYTdmOGY0NGM1ZmZlOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2017-04-27T21:12:29Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2017-04-27T21:12:29Z"}, "message": "re PR sanitizer/80349 (UBSAN: compile time crash with \"type mismatch in binary expression\" message)\n\n\tPR sanitizer/80349\n\t* fold-const.c (fold_binary_loc) <case EQ_EXPR, NE_EXPR>: Convert\n\targ10 and arg11 to itype.\n\n\t* c-c++-common/ubsan/pr80349.c: New test.\n\nFrom-SVN: r247352", "tree": {"sha": "76d8381120643982630eae02550e5044ba926547", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76d8381120643982630eae02550e5044ba926547"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f49215b10cb70ee28f041c6b5088b55b3f33afb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f49215b10cb70ee28f041c6b5088b55b3f33afb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f49215b10cb70ee28f041c6b5088b55b3f33afb9"}], "stats": {"total": 100, "additions": 69, "deletions": 31}, "files": [{"sha": "d8ee4265844c45b5a03f399965796687340afb0a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9", "patch": "@@ -1,3 +1,9 @@\n+2017-04-27  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/80349\n+\t* fold-const.c (fold_binary_loc) <case EQ_EXPR, NE_EXPR>: Convert\n+\targ10 and arg11 to itype.\n+\n 2017-04-27  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/extend.texi (Object Size Checking): Improve grammar."}, {"sha": "f6d5af43b33a8141fbb93bcae537eebed6959a6c", "filename": "gcc/fold-const.c", "status": "modified", "additions": 28, "deletions": 31, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9", "patch": "@@ -10797,40 +10797,37 @@ fold_binary_loc (location_t loc,\n \t  tree itype = TREE_TYPE (arg0);\n \n \t  if (operand_equal_p (arg01, arg11, 0))\n-\t    return fold_build2_loc (loc, code, type,\n-\t\t\t\tfold_build2_loc (loc, BIT_AND_EXPR, itype,\n-\t\t\t\t\t     fold_build2_loc (loc,\n-\t\t\t\t\t\t\t  BIT_XOR_EXPR, itype,\n-\t\t\t\t\t\t\t  arg00, arg10),\n-\t\t\t\t\t     arg01),\n-\t\t\t\tbuild_zero_cst (itype));\n-\n+\t    {\n+\t      tem = fold_convert_loc (loc, itype, arg10);\n+\t      tem = fold_build2_loc (loc, BIT_XOR_EXPR, itype, arg00, tem);\n+\t      tem = fold_build2_loc (loc, BIT_AND_EXPR, itype, tem, arg01);\n+\t      return fold_build2_loc (loc, code, type, tem,\n+\t\t\t\t      build_zero_cst (itype));\n+\t    }\n \t  if (operand_equal_p (arg01, arg10, 0))\n-\t    return fold_build2_loc (loc, code, type,\n-\t\t\t\tfold_build2_loc (loc, BIT_AND_EXPR, itype,\n-\t\t\t\t\t     fold_build2_loc (loc,\n-\t\t\t\t\t\t\t  BIT_XOR_EXPR, itype,\n-\t\t\t\t\t\t\t  arg00, arg11),\n-\t\t\t\t\t     arg01),\n-\t\t\t\tbuild_zero_cst (itype));\n-\n+\t    {\n+\t      tem = fold_convert_loc (loc, itype, arg11);\n+\t      tem = fold_build2_loc (loc, BIT_XOR_EXPR, itype, arg00, tem);\n+\t      tem = fold_build2_loc (loc, BIT_AND_EXPR, itype, tem, arg01);\n+\t      return fold_build2_loc (loc, code, type, tem,\n+\t\t\t\t      build_zero_cst (itype));\n+\t    }\n \t  if (operand_equal_p (arg00, arg11, 0))\n-\t    return fold_build2_loc (loc, code, type,\n-\t\t\t\tfold_build2_loc (loc, BIT_AND_EXPR, itype,\n-\t\t\t\t\t     fold_build2_loc (loc,\n-\t\t\t\t\t\t\t  BIT_XOR_EXPR, itype,\n-\t\t\t\t\t\t\t  arg01, arg10),\n-\t\t\t\t\t     arg00),\n-\t\t\t\tbuild_zero_cst (itype));\n-\n+\t    {\n+\t      tem = fold_convert_loc (loc, itype, arg10);\n+\t      tem = fold_build2_loc (loc, BIT_XOR_EXPR, itype, arg01, tem);\n+\t      tem = fold_build2_loc (loc, BIT_AND_EXPR, itype, tem, arg00);\n+\t      return fold_build2_loc (loc, code, type, tem,\n+\t\t\t\t      build_zero_cst (itype));\n+\t    }\n \t  if (operand_equal_p (arg00, arg10, 0))\n-\t    return fold_build2_loc (loc, code, type,\n-\t\t\t\tfold_build2_loc (loc, BIT_AND_EXPR, itype,\n-\t\t\t\t\t     fold_build2_loc (loc,\n-\t\t\t\t\t\t\t  BIT_XOR_EXPR, itype,\n-\t\t\t\t\t\t\t  arg01, arg11),\n-\t\t\t\t\t     arg00),\n-\t\t\t\tbuild_zero_cst (itype));\n+\t    {\n+\t      tem = fold_convert_loc (loc, itype, arg11);\n+\t      tem = fold_build2_loc (loc, BIT_XOR_EXPR, itype, arg01, tem);\n+\t      tem = fold_build2_loc (loc, BIT_AND_EXPR, itype, tem, arg00);\n+\t      return fold_build2_loc (loc, code, type, tem,\n+\t\t\t\t      build_zero_cst (itype));\n+\t    }\n \t}\n \n       if (TREE_CODE (arg0) == BIT_XOR_EXPR"}, {"sha": "5f25ed1652e789965c64dfd572ce78c1cc16aa5f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9", "patch": "@@ -1,3 +1,8 @@\n+2017-04-27  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/80349\n+\t* c-c++-common/ubsan/pr80349.c: New test.\n+\n 2017-04-27  Volker Reichelt  <v.reichelt@netcologne.de>\n \n \t* g++.dg/cpp1z/direct-enum-init1.C: Adjust for more verbose enum"}, {"sha": "eb2e3da0721e7c465db5930246cd1e2c00752c20", "filename": "gcc/testsuite/c-c++-common/ubsan/pr80349.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr80349.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr80349.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr80349.c?ref=3777eda2eddbc7d5d54bdc0cddaa7f8f44c5ffe9", "patch": "@@ -0,0 +1,30 @@\n+/* PR sanitizer/80349 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize=undefined\" } */\n+\n+int var;\n+long a;\n+\n+long\n+fn1 ()\n+{\n+  return 0 % ((a & 1) == (7UL & 1));\n+}\n+\n+long\n+fn2 ()\n+{\n+  return 0 % ((a & 1) == (1 & 7UL));\n+}\n+\n+long\n+fn3 ()\n+{\n+  return 0 % ((1 & a) == (7UL & 1));\n+}\n+\n+long\n+fn4 ()\n+{\n+  return 0 % ((1 & a) == (1 & 7UL));\n+}"}]}