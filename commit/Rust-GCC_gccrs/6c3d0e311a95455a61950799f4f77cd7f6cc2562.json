{"sha": "6c3d0e311a95455a61950799f4f77cd7f6cc2562", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMzZDBlMzExYTk1NDU1YTYxOTUwNzk5ZjRmNzdjZDdmNmNjMjU2Mg==", "commit": {"author": {"name": "Seongbae Park", "email": "spark@gcc.gnu.org", "date": "2007-11-30T17:02:43Z"}, "committer": {"name": "Seongbae Park", "email": "spark@gcc.gnu.org", "date": "2007-11-30T17:02:43Z"}, "message": "re PR rtl-optimization/34171 (Segfault in df_chain_remove_problem with -O3 on alpha)\n\ngcc/testsuite/ChangeLog:\n\n2007-11-30  Martin Michlmayr <tbm@cyrius.com>\n\n\tPR rtl-optimization/34171\n\t* gcc.dg/pr34171.c: New testcase.\n\ngcc/ChangeLog:\n\n2007-11-30  Seongbae Park <seongbae.park@gmail.com>\n\n\tPR rtl-optimization/34171\n\t* cfgrtl.c (update_bb_for_insn_chain): New function,\n\trefactored from update_bb_for_insn.\n\t(update_bb_for_insn): Call update_bb_for_insn.\n\t(rtl_merge_blocks, try_redirect_by_replacing_jump):\n\tReplace a loop with update_bb_for_insn_chain call.\n\t(cfg_layout_merge_blocks): Add a call to\n\tupdate_bb_for_insn_chain. Replace the for loop\n\twith a call to update_bb_for_insn_chain.\n\nFrom-SVN: r130539", "tree": {"sha": "b74ebc794380262953d251b34cb4f0b0ddba02a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b74ebc794380262953d251b34cb4f0b0ddba02a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c3d0e311a95455a61950799f4f77cd7f6cc2562", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c3d0e311a95455a61950799f4f77cd7f6cc2562", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c3d0e311a95455a61950799f4f77cd7f6cc2562", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c3d0e311a95455a61950799f4f77cd7f6cc2562/comments", "author": null, "committer": null, "parents": [{"sha": "b88782e14d89be6157f491d005a1182305652e76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b88782e14d89be6157f491d005a1182305652e76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b88782e14d89be6157f491d005a1182305652e76"}], "stats": {"total": 103, "additions": 73, "deletions": 30}, "files": [{"sha": "015ec36f1732f6732630e0cfa7a3d1f397c578f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3d0e311a95455a61950799f4f77cd7f6cc2562/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3d0e311a95455a61950799f4f77cd7f6cc2562/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c3d0e311a95455a61950799f4f77cd7f6cc2562", "patch": "@@ -1,3 +1,15 @@\n+2007-11-30  Seongbae Park <seongbae.park@gmail.com>\n+\n+\tPR rtl-optimization/34171\n+\t* cfgrtl.c (update_bb_for_insn_chain): New function,\n+\trefactored from update_bb_for_insn.\n+\t(update_bb_for_insn): Call update_bb_for_insn.\n+\t(rtl_merge_blocks, try_redirect_by_replacing_jump):\n+\tReplace a loop with update_bb_for_insn_chain call.\n+\t(cfg_layout_merge_blocks): Add a call to\n+\tupdate_bb_for_insn_chain. Replace the for loop\n+\twith a call to update_bb_for_insn_chain.\n+\n 2007-11-30  Ben Elliston  <bje@au.ibm.com>\n \n \t* config/vax/vax.h (ASM_FORMAT_PRIVATE_NAME): Remove. Use default."}, {"sha": "1b9c5057162f0d0997c0efe7b7480caf467166a2", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 29, "deletions": 30, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3d0e311a95455a61950799f4f77cd7f6cc2562/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3d0e311a95455a61950799f4f77cd7f6cc2562/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=6c3d0e311a95455a61950799f4f77cd7f6cc2562", "patch": "@@ -465,24 +465,36 @@ emit_insn_at_entry (rtx insn)\n   commit_edge_insertions ();\n }\n \n-/* Update insns block within BB.  */\n+/* Update BLOCK_FOR_INSN of insns between BEGIN and END\n+   (or BARRIER if found) and notify df of the bb change. \n+   The insn chain range is inclusive\n+   (i.e. both BEGIN and END will be updated. */\n \n-void\n-update_bb_for_insn (basic_block bb)\n+static void\n+update_bb_for_insn_chain (rtx begin, rtx end, basic_block bb)\n {\n   rtx insn;\n \n-  for (insn = BB_HEAD (bb); ; insn = NEXT_INSN (insn))\n+  end = NEXT_INSN (end);\n+  for (insn = begin; insn != end; insn = NEXT_INSN (insn))\n     {\n       if (!BARRIER_P (insn))\n \t{\n \t  set_block_for_insn (insn, bb);\n \t  df_insn_change_bb (insn);\n \t}\n-      if (insn == BB_END (bb))\n-\tbreak;\n     }\n }\n+\n+/* Update BLOCK_FOR_INSN of insns in BB to BB,\n+   and notify df of the change.  */\n+\n+void\n+update_bb_for_insn (basic_block bb)\n+{\n+  update_bb_for_insn_chain (BB_HEAD (bb), BB_END (bb), bb);\n+}\n+\n \f\n /* Return the INSN immediately following the NOTE_INSN_BASIC_BLOCK\n    note associated with the BLOCK.  */\n@@ -629,16 +641,7 @@ rtl_merge_blocks (basic_block a, basic_block b)\n   /* Reassociate the insns of B with A.  */\n   if (!b_empty)\n     {\n-      rtx x;\n-\n-      for (x = a_end; x != b_end; x = NEXT_INSN (x))\n-\t{\n-\t  set_block_for_insn (x, a);\n-\t  df_insn_change_bb (x);\n-\t}\n-\n-      set_block_for_insn (b_end, a);\n-      df_insn_change_bb (b_end);\n+      update_bb_for_insn_chain (a_end, b_end, a);\n \n       a_end = b_end;\n     }\n@@ -843,14 +846,9 @@ try_redirect_by_replacing_jump (edge e, basic_block target, bool in_cfglayout)\n \t\t which originally were or were created before jump table are\n \t\t inside the basic block.  */\n \t      rtx new_insn = BB_END (src);\n-\t      rtx tmp;\n \n-\t      for (tmp = NEXT_INSN (BB_END (src)); tmp != barrier;\n-\t\t   tmp = NEXT_INSN (tmp))\n-\t\t{\n-\t\t  set_block_for_insn (tmp, src);\n-\t      \t  df_insn_change_bb (tmp);\n-\t\t}\n+\t      update_bb_for_insn_chain (NEXT_INSN (BB_END (src)),\n+\t\t\t\t        PREV_INSN (barrier), src);\n \n \t      NEXT_INSN (PREV_INSN (new_insn)) = NEXT_INSN (new_insn);\n \t      PREV_INSN (NEXT_INSN (new_insn)) = PREV_INSN (new_insn);\n@@ -2637,20 +2635,21 @@ cfg_layout_merge_blocks (basic_block a, basic_block b)\n \tfirst = NEXT_INSN (first);\n       gcc_assert (NOTE_INSN_BASIC_BLOCK_P (first));\n       BB_HEAD (b) = NULL;\n+\n+      /* emit_insn_after_noloc doesn't call df_insn_change_bb.\n+         We need to explicitly call. */\n+      update_bb_for_insn_chain (NEXT_INSN (first),\n+\t\t\t\tBB_END (b),\n+\t\t\t\ta);\n+\n       delete_insn (first);\n     }\n   /* Otherwise just re-associate the instructions.  */\n   else\n     {\n       rtx insn;\n \n-      for (insn = BB_HEAD (b);\n-\t   insn != NEXT_INSN (BB_END (b));\n-\t   insn = NEXT_INSN (insn))\n-\t{\n-\t  set_block_for_insn (insn, a);\n-\t  df_insn_change_bb (insn);\n-\t}\n+      update_bb_for_insn_chain (BB_HEAD (b), BB_END (b), a);\n \n       insn = BB_HEAD (b);\n       /* Skip possible DELETED_LABEL insn.  */"}, {"sha": "59de2c5a33b2781e802c4809849fc6099e5eb9e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3d0e311a95455a61950799f4f77cd7f6cc2562/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3d0e311a95455a61950799f4f77cd7f6cc2562/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6c3d0e311a95455a61950799f4f77cd7f6cc2562", "patch": "@@ -1,3 +1,8 @@\n+2007-11-30  Martin Michlmayr <tbm@cyrius.com>\n+\n+\tPR rtl-optimization/34171\n+\t* gcc.dg/pr34171.c: New testcase.\n+\n 2007-11-30  Zdenek Dvorak  <ook@ucw.cz>\n \n \t* gcc.dg/tree-ssa/pr34244.c: Fixed."}, {"sha": "6013a0de69b9c4310b1f7496a88eb86fae160bb3", "filename": "gcc/testsuite/gcc.dg/pr34171.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3d0e311a95455a61950799f4f77cd7f6cc2562/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34171.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3d0e311a95455a61950799f4f77cd7f6cc2562/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34171.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34171.c?ref=6c3d0e311a95455a61950799f4f77cd7f6cc2562", "patch": "@@ -0,0 +1,27 @@\n+/* Testcase by Martin Michlmayr <tbm@cyrius.com> */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+extern char coredump;\n+extern void sigemptyset (char *);\n+struct sigaction\n+{\n+  char sa_mask;\n+};\n+void doSignalsSetup (void)\n+{\n+  static const int signals[] = {\n+    1, 2, 3, 4, 6, 8, 11, 13, 14, 15, 30 , 31\n+  };\n+  unsigned int i, sig;\n+  struct sigaction sa;\n+  for (i = 0; i < sizeof (signals) / sizeof (int); i++)\n+    {\n+      sig = signals[i];\n+      if (coredump &&\n+          (sig == 4 || sig == 8 || sig == 11 || sig == 10))\n+        continue;\n+      sigemptyset (&sa.sa_mask);\n+    }\n+}"}]}