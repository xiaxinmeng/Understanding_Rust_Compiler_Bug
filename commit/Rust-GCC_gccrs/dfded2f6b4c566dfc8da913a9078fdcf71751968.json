{"sha": "dfded2f6b4c566dfc8da913a9078fdcf71751968", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZkZWQyZjZiNGM1NjZkZmM4ZGE5MTNhOTA3OGZkY2Y3MTc1MTk2OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-10-31T16:19:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-10-31T16:19:38Z"}, "message": "Make some functions static.\n\n\t* parser.c (synthesize_implicit_template_parm)\n\t(finish_fully_implicit_template): Make static.\n\nFrom-SVN: r229625", "tree": {"sha": "2bd18aaf1121ac0e4749a86749d20c10be3c65eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bd18aaf1121ac0e4749a86749d20c10be3c65eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfded2f6b4c566dfc8da913a9078fdcf71751968", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfded2f6b4c566dfc8da913a9078fdcf71751968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfded2f6b4c566dfc8da913a9078fdcf71751968", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfded2f6b4c566dfc8da913a9078fdcf71751968/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b9702967ee6ce84303296b111f596fefab3a60a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9702967ee6ce84303296b111f596fefab3a60a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9702967ee6ce84303296b111f596fefab3a60a9"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "52ec43160f5c983ed2cfc602574f1e0668a3df7b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfded2f6b4c566dfc8da913a9078fdcf71751968/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfded2f6b4c566dfc8da913a9078fdcf71751968/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=dfded2f6b4c566dfc8da913a9078fdcf71751968", "patch": "@@ -1,3 +1,8 @@\n+2015-10-31  Jason Merrill  <jason@redhat.com>\n+\n+\t* parser.c (synthesize_implicit_template_parm)\n+\t(finish_fully_implicit_template): Make static.\n+\n 2015-10-29  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* call.c: Reorder #include's and remove duplicates."}, {"sha": "3c6b2b14690c6600a6838e9b96c567ca9ce79268", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfded2f6b4c566dfc8da913a9078fdcf71751968/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfded2f6b4c566dfc8da913a9078fdcf71751968/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=dfded2f6b4c566dfc8da913a9078fdcf71751968", "patch": "@@ -19469,12 +19469,14 @@ cp_parser_type_id_1 (cp_parser* parser, bool is_template_arg,\n \t\t       is_template_arg);\n }\n \n-static tree cp_parser_type_id (cp_parser *parser)\n+static tree\n+cp_parser_type_id (cp_parser *parser)\n {\n   return cp_parser_type_id_1 (parser, false, false);\n }\n \n-static tree cp_parser_template_type_arg (cp_parser *parser)\n+static tree\n+cp_parser_template_type_arg (cp_parser *parser)\n {\n   tree r;\n   const char *saved_message = parser->type_definition_forbidden_message;\n@@ -36578,7 +36580,7 @@ get_concept_from_constraint (tree t)\n    (creating a new template parameter list if necessary).  Returns the newly\n    created template type parm.  */\n \n-tree\n+static tree\n synthesize_implicit_template_parm  (cp_parser *parser, tree constr)\n {\n   gcc_assert (current_binding_level->kind == sk_function_parms);\n@@ -36771,7 +36773,7 @@ synthesize_implicit_template_parm  (cp_parser *parser, tree constr)\n    declaration can be completed.  If MEMBER_DECL_OPT is provided the finished\n    form is returned.  Otherwise NULL_TREE is returned. */\n \n-tree\n+static tree\n finish_fully_implicit_template (cp_parser *parser, tree member_decl_opt)\n {\n   gcc_assert (parser->fully_implicit_function_template_p);"}]}