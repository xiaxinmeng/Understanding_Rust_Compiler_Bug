{"sha": "8d7c0bf876fa784101f9ad9e3bba82cc065357da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ3YzBiZjg3NmZhNzg0MTAxZjlhZDllM2JiYTgyY2MwNjUzNTdkYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-29T08:41:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-29T08:41:42Z"}, "message": "openmp: c++: Consider typeinfo decls to be predetermined shared [PR91118]\n\nIf the typeinfo decls appear in OpenMP default(none) regions, as we no longer\npredetermine const with no mutable members, they are diagnosed as errors,\nbut it isn't something the users can actually provide explicit sharing for in\nthe clauses.\n\n2020-01-29  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/91118\n\t* cp-gimplify.c (cxx_omp_predetermined_sharing): Return\n\tOMP_CLAUSE_DEFAULT_SHARED for typeinfo decls.\n\n\t* g++.dg/gomp/pr91118-1.C: New test.\n\t* g++.dg/gomp/pr91118-2.C: New test.", "tree": {"sha": "98bb52b241add2c6cb1bf9354473a48199d9a236", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98bb52b241add2c6cb1bf9354473a48199d9a236"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d7c0bf876fa784101f9ad9e3bba82cc065357da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d7c0bf876fa784101f9ad9e3bba82cc065357da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d7c0bf876fa784101f9ad9e3bba82cc065357da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d7c0bf876fa784101f9ad9e3bba82cc065357da/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa1b56967d85bfc80d71341395f862ec2b30ca36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa1b56967d85bfc80d71341395f862ec2b30ca36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa1b56967d85bfc80d71341395f862ec2b30ca36"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "4dcdb0428f1a7c492907f0dfa8bb5804cea5a321", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d7c0bf876fa784101f9ad9e3bba82cc065357da/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d7c0bf876fa784101f9ad9e3bba82cc065357da/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8d7c0bf876fa784101f9ad9e3bba82cc065357da", "patch": "@@ -1,3 +1,9 @@\n+2020-01-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/91118\n+\t* cp-gimplify.c (cxx_omp_predetermined_sharing): Return\n+\tOMP_CLAUSE_DEFAULT_SHARED for typeinfo decls.\n+\n 2020-01-28  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/93442"}, {"sha": "4fb3a1a8b8af39bdb95a5031adbe3ab4f7f01762", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d7c0bf876fa784101f9ad9e3bba82cc065357da/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d7c0bf876fa784101f9ad9e3bba82cc065357da/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=8d7c0bf876fa784101f9ad9e3bba82cc065357da", "patch": "@@ -2187,6 +2187,10 @@ cxx_omp_predetermined_sharing (tree decl)\n \t   && DECL_OMP_PRIVATIZED_MEMBER (decl)))\n     return OMP_CLAUSE_DEFAULT_SHARED;\n \n+  /* Similarly for typeinfo symbols.  */\n+  if (VAR_P (decl) && DECL_ARTIFICIAL (decl) && DECL_TINFO_P (decl))\n+    return OMP_CLAUSE_DEFAULT_SHARED;\n+\n   return OMP_CLAUSE_DEFAULT_UNSPECIFIED;\n }\n "}, {"sha": "01aaaf509daee07b8891ce553347868a463fd75b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d7c0bf876fa784101f9ad9e3bba82cc065357da/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d7c0bf876fa784101f9ad9e3bba82cc065357da/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d7c0bf876fa784101f9ad9e3bba82cc065357da", "patch": "@@ -1,5 +1,9 @@\n 2020-01-29  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/91118\n+\t* g++.dg/gomp/pr91118-1.C: New test.\n+\t* g++.dg/gomp/pr91118-2.C: New test.\n+\n \tPR fortran/93463\n \t* gfortran.dg/goacc/pr93463.f90: New test.\n "}, {"sha": "f29d69db08470f22dae2746ffe8ee2d5405f35e4", "filename": "gcc/testsuite/g++.dg/gomp/pr91118-1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d7c0bf876fa784101f9ad9e3bba82cc065357da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr91118-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d7c0bf876fa784101f9ad9e3bba82cc065357da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr91118-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr91118-1.C?ref=8d7c0bf876fa784101f9ad9e3bba82cc065357da", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/91118\n+// { dg-do compile }\n+// { dg-additional-options \"-fsanitize=undefined\" }\n+\n+#include <iostream>\n+\n+void\n+foo ()\n+{\n+#pragma omp parallel default(none) shared(std::cerr)\n+  std::cerr << \"hello\" << std::endl;\n+}"}, {"sha": "80f1e3e45c4260ce86d6d9e501cdb75729c7912a", "filename": "gcc/testsuite/g++.dg/gomp/pr91118-2.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d7c0bf876fa784101f9ad9e3bba82cc065357da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr91118-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d7c0bf876fa784101f9ad9e3bba82cc065357da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr91118-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr91118-2.C?ref=8d7c0bf876fa784101f9ad9e3bba82cc065357da", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/91118\n+// { dg-do compile }\n+\n+#include <typeinfo>\n+\n+struct S { virtual ~S (); };\n+void bar (const std::type_info &, const std::type_info &);\n+\n+void\n+foo (S *p)\n+{\n+  #pragma omp parallel default (none) firstprivate (p)\n+    bar (typeid (*p), typeid (S));\n+}"}]}