{"sha": "38aa4d08b72826276844708d538e5e610d65f0b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhhYTRkMDhiNzI4MjYyNzY4NDQ3MDhkNTM4ZTVlNjEwZDY1ZjBiMg==", "commit": {"author": {"name": "Joey Ye", "email": "joey.ye@intel.com", "date": "2008-06-30T17:51:49Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-06-30T17:51:49Z"}, "message": "global.c (compute_regsets): Set frame_pointer_needed here.\n\n2008-06-30  Joey Ye  <joey.ye@intel.com>\n\t    H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* global.c (compute_regsets): Set frame_pointer_needed here.\n\n\t* reload1.c (init_elim_table): Don't set frame_pointer_needed\n\there.\n\nCo-Authored-By: H.J. Lu <hongjiu.lu@intel.com>\n\nFrom-SVN: r137275", "tree": {"sha": "59bec96239e410f2d7ce10e12f5364626f97553d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59bec96239e410f2d7ce10e12f5364626f97553d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38aa4d08b72826276844708d538e5e610d65f0b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38aa4d08b72826276844708d538e5e610d65f0b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38aa4d08b72826276844708d538e5e610d65f0b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38aa4d08b72826276844708d538e5e610d65f0b2/comments", "author": {"login": "npg-joey", "id": 81339828, "node_id": "MDQ6VXNlcjgxMzM5ODI4", "avatar_url": "https://avatars.githubusercontent.com/u/81339828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/npg-joey", "html_url": "https://github.com/npg-joey", "followers_url": "https://api.github.com/users/npg-joey/followers", "following_url": "https://api.github.com/users/npg-joey/following{/other_user}", "gists_url": "https://api.github.com/users/npg-joey/gists{/gist_id}", "starred_url": "https://api.github.com/users/npg-joey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/npg-joey/subscriptions", "organizations_url": "https://api.github.com/users/npg-joey/orgs", "repos_url": "https://api.github.com/users/npg-joey/repos", "events_url": "https://api.github.com/users/npg-joey/events{/privacy}", "received_events_url": "https://api.github.com/users/npg-joey/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aad416fbb58e079606dc7b8f1bce83efce2f3117", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aad416fbb58e079606dc7b8f1bce83efce2f3117", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aad416fbb58e079606dc7b8f1bce83efce2f3117"}], "stats": {"total": 37, "additions": 22, "deletions": 15}, "files": [{"sha": "95753ff9ce7bbeea9827212f4b12a60ed0dc9afc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38aa4d08b72826276844708d538e5e610d65f0b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38aa4d08b72826276844708d538e5e610d65f0b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=38aa4d08b72826276844708d538e5e610d65f0b2", "patch": "@@ -1,3 +1,11 @@\n+2008-06-30  Joey Ye  <joey.ye@intel.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* global.c (compute_regsets): Set frame_pointer_needed here.\n+\n+\t* reload1.c (init_elim_table): Don't set frame_pointer_needed\n+\there.\n+\n 2008-06-30  Aaron W. LaFramboise  <aaronavay62@aaronwl.com>\n \n \t* doc/install.texi (specific): Expand Windows build notes."}, {"sha": "9c22e91f8573498dbd99b4e5980b59a42710e976", "filename": "gcc/global.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38aa4d08b72826276844708d538e5e610d65f0b2/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38aa4d08b72826276844708d538e5e610d65f0b2/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=38aa4d08b72826276844708d538e5e610d65f0b2", "patch": "@@ -206,7 +206,9 @@ static void build_insn_chain (void);\n \n    This will normally be called with ELIM_SET as the file static\n    variable eliminable_regset, and NO_GLOBAL_SET as the file static\n-   variable NO_GLOBAL_ALLOC_REGS.  */\n+   variable NO_GLOBAL_ALLOC_REGS.\n+\n+   It also initializes global flag frame_pointer_needed.  */\n \n static void\n compute_regsets (HARD_REG_SET *elim_set, \n@@ -222,11 +224,19 @@ compute_regsets (HARD_REG_SET *elim_set,\n   static const struct {const int from, to; } eliminables[] = ELIMINABLE_REGS;\n   size_t i;\n #endif\n+\n+  /* FIXME: If EXIT_IGNORE_STACK is set, we will not save and restore\n+     sp for alloca.  So we can't eliminate the frame pointer in that\n+     case.  At some point, we should improve this by emitting the\n+     sp-adjusting insns for this case.  */\n   int need_fp\n     = (! flag_omit_frame_pointer\n        || (cfun->calls_alloca && EXIT_IGNORE_STACK)\n+       || crtl->accesses_prior_frames\n        || FRAME_POINTER_REQUIRED);\n \n+  frame_pointer_needed = need_fp;\n+\n   max_regno = max_reg_num ();\n   compact_blocks ();\n "}, {"sha": "297acbf8aa51d03853dd5ed5b3862c7dca2ac4eb", "filename": "gcc/reload1.c", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38aa4d08b72826276844708d538e5e610d65f0b2/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38aa4d08b72826276844708d538e5e610d65f0b2/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=38aa4d08b72826276844708d538e5e610d65f0b2", "patch": "@@ -3695,7 +3695,9 @@ elimination_target_reg_p (rtx x)\n   return false;\n }\n \n-/* Initialize the table of registers to eliminate.  */\n+/* Initialize the table of registers to eliminate.\n+   Pre-condition: global flag frame_pointer_needed has been set before\n+   calling this function.  */\n \n static void\n init_elim_table (void)\n@@ -3708,19 +3710,6 @@ init_elim_table (void)\n   if (!reg_eliminate)\n     reg_eliminate = XCNEWVEC (struct elim_table, NUM_ELIMINABLE_REGS);\n \n-  /* Does this function require a frame pointer?  */\n-\n-  frame_pointer_needed = (! flag_omit_frame_pointer\n-\t\t\t  /* ?? If EXIT_IGNORE_STACK is set, we will not save\n-\t\t\t     and restore sp for alloca.  So we can't eliminate\n-\t\t\t     the frame pointer in that case.  At some point,\n-\t\t\t     we should improve this by emitting the\n-\t\t\t     sp-adjusting insns for this case.  */\n-\t\t\t  || (cfun->calls_alloca\n-\t\t\t      && EXIT_IGNORE_STACK)\n-\t\t\t  || crtl->accesses_prior_frames\n-\t\t\t  || FRAME_POINTER_REQUIRED);\n-\n   num_eliminable = 0;\n \n #ifdef ELIMINABLE_REGS"}]}