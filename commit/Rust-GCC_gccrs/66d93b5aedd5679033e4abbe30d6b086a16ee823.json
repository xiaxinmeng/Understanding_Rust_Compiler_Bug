{"sha": "66d93b5aedd5679033e4abbe30d6b086a16ee823", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZkOTNiNWFlZGQ1Njc5MDMzZTRhYmJlMzBkNmIwODZhMTZlZTgyMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-09-20T06:36:36Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-09-20T06:36:36Z"}, "message": "real.h (UNKNOWN_FLOAT_FORMAT, [...]): Move ...\n\n        * real.h (UNKNOWN_FLOAT_FORMAT, IEEE_FLOAT_FORMAT, VAX_FLOAT_FORMAT,\n        IBM_FLOAT_FORMAT, C4X_FLOAT_FORMAT, TARGET_FLOAT_FORMAT): Move ...\n        * defaults.h: ... here.\n        * config/arm/arm.h, config/avr/avr.h, config/d30v/d30v.h,\n        config/fr30/fr30.h, config/frv/frv.h, config/ia64/ia64.h,\n        config/ip2k/ip2k.h, config/mips/mips.h, config/stormy16/stormy16.h,\n        config/xtensa/xtensa.h (TARGET_FLOAT_FORMAT): Remove.\n\nFrom-SVN: r57336", "tree": {"sha": "5df0f14f58dbab177f244889f99818f0cfcea693", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5df0f14f58dbab177f244889f99818f0cfcea693"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66d93b5aedd5679033e4abbe30d6b086a16ee823", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66d93b5aedd5679033e4abbe30d6b086a16ee823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66d93b5aedd5679033e4abbe30d6b086a16ee823", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66d93b5aedd5679033e4abbe30d6b086a16ee823/comments", "author": null, "committer": null, "parents": [{"sha": "6ee3db619b283cd330c9f88d28107a1f90f237fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ee3db619b283cd330c9f88d28107a1f90f237fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ee3db619b283cd330c9f88d28107a1f90f237fb"}], "stats": {"total": 83, "additions": 22, "deletions": 61}, "files": [{"sha": "ad3f1a40a0361320ac763ae82e9420c294e3526e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66d93b5aedd5679033e4abbe30d6b086a16ee823", "patch": "@@ -1,3 +1,13 @@\n+2002-09-20  Richard Henderson  <rth@redhat.com>\n+\n+\t* real.h (UNKNOWN_FLOAT_FORMAT, IEEE_FLOAT_FORMAT, VAX_FLOAT_FORMAT,\n+\tIBM_FLOAT_FORMAT, C4X_FLOAT_FORMAT, TARGET_FLOAT_FORMAT): Move ...\n+\t* defaults.h: ... here.\n+\t* config/arm/arm.h, config/avr/avr.h, config/d30v/d30v.h,\n+\tconfig/fr30/fr30.h, config/frv/frv.h, config/ia64/ia64.h,\n+\tconfig/ip2k/ip2k.h, config/mips/mips.h, config/stormy16/stormy16.h,\n+\tconfig/xtensa/xtensa.h (TARGET_FLOAT_FORMAT): Remove.\n+\n 2002-09-20  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* config/mmix/mmix.md (\"negdf2\"): Rewrite."}, {"sha": "ffc04591b78f5acc2659c8efd7200fba802785eb", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=66d93b5aedd5679033e4abbe30d6b086a16ee823", "patch": "@@ -731,9 +731,6 @@ extern const char * structure_size_string;\n /* Nonzero if move instructions will actually fail to work\n    when given unaligned data.  */\n #define STRICT_ALIGNMENT 1\n-\n-#define TARGET_FLOAT_FORMAT IEEE_FLOAT_FORMAT\n-\n \f\n /* Standard register usage.  */\n "}, {"sha": "7f9f283e4eefe3ff2284d0cd2365a377e9ad50a7", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=66d93b5aedd5679033e4abbe30d6b086a16ee823", "patch": "@@ -2690,8 +2690,6 @@ extern struct rtx_def *tmp_reg_rtx;\n extern struct rtx_def *zero_reg_rtx;\n extern struct rtx_def *ldi_reg_rtx;\n \n-#define TARGET_FLOAT_FORMAT IEEE_FLOAT_FORMAT\n-\n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n \n /* Get the standard ELF stabs definitions.  */"}, {"sha": "421f964913a620152044d10a19fea7d22ffb47ec", "filename": "gcc/config/d30v/d30v.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Fd30v%2Fd30v.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Fd30v%2Fd30v.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.h?ref=66d93b5aedd5679033e4abbe30d6b086a16ee823", "patch": "@@ -201,9 +201,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Defined in svr4.h.  */\n \n #define PCC_BITFIELD_TYPE_MATTERS 1\n-\n-#define TARGET_FLOAT_FORMAT IEEE_FLOAT_FORMAT\n-\n \f\n /* Layout of Source Language Data Types */\n "}, {"sha": "32ee2d785495de3e75f9a81777d51a860f123ff4", "filename": "gcc/config/fr30/fr30.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Ffr30%2Ffr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Ffr30%2Ffr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.h?ref=66d93b5aedd5679033e4abbe30d6b086a16ee823", "patch": "@@ -122,8 +122,6 @@ extern int target_flags;\n /* Defined in svr4.h.  */\n #define PCC_BITFIELD_TYPE_MATTERS 1\n \n-#define TARGET_FLOAT_FORMAT IEEE_FLOAT_FORMAT\n-\n /*}}}*/ \f\n /*{{{  Layout of Source Language Data Types.  */ \n "}, {"sha": "414fe2716ed5120856093fca66cb2bbeb8104967", "filename": "gcc/config/frv/frv.h", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Ffrv%2Ffrv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Ffrv%2Ffrv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.h?ref=66d93b5aedd5679033e4abbe30d6b086a16ee823", "patch": "@@ -748,29 +748,6 @@ extern int g_switch_set;          /* whether -G xx was passed.  */\n    Defined in svr4.h.  */\n #define PCC_BITFIELD_TYPE_MATTERS 1\n \n-/* A code distinguishing the floating point format of the target machine.\n-   There are three defined values:\n-\n-   IEEE_FLOAT_FORMAT'\n-        This code indicates IEEE floating point.  It is the default;\n-        there is no need to define this macro when the format is IEEE.\n-\n-   VAX_FLOAT_FORMAT'\n-        This code indicates the peculiar format used on the VAX.\n-\n-   UNKNOWN_FLOAT_FORMAT'\n-        This code indicates any other format.\n-\n-   The value of this macro is compared with `HOST_FLOAT_FORMAT'\n-   to determine whether the target machine has the same format as\n-   the host machine.  If any other formats are actually in use on supported\n-   machines, new codes should be defined for them.\n-\n-   The ordering of the component words of floating point values stored in\n-   memory is controlled by `FLOAT_WORDS_BIG_ENDIAN' for the target machine and\n-   `HOST_FLOAT_WORDS_BIG_ENDIAN' for the host.  */\n-#define TARGET_FLOAT_FORMAT IEEE_FLOAT_FORMAT\n-\n /* GNU CC supports two ways of implementing C++ vtables: traditional or with\n    so-called \"thunks\".  The flag `-fvtable-thunk' chooses between them.  Define\n    this macro to be a C expression for the default value of that flag.  If"}, {"sha": "8c8708df9aaf2edc3a0ea4670c994fb617b1ed14", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=66d93b5aedd5679033e4abbe30d6b086a16ee823", "patch": "@@ -342,9 +342,6 @@ while (0)\n /* Allow pairs of registers to be used, which is the intent of the default.  */\n #define MAX_FIXED_MODE_SIZE GET_MODE_BITSIZE (TImode)\n \n-/* A code distinguishing the floating point format of the target machine.  */\n-#define TARGET_FLOAT_FORMAT IEEE_FLOAT_FORMAT\n-\n /* By default, the C++ compiler will use function addresses in the\n    vtable entries.  Setting this nonzero tells the compiler to use\n    function descriptors instead.  The value of this macro says how"}, {"sha": "dbafef4290ed0afcb35f507da0e1be449dae5a43", "filename": "gcc/config/ip2k/ip2k.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Fip2k%2Fip2k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Fip2k%2Fip2k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fip2k%2Fip2k.h?ref=66d93b5aedd5679033e4abbe30d6b086a16ee823", "patch": "@@ -2481,8 +2481,6 @@ extern int ip2k_reorg_merge_qimode;\n     = gen_rtx_SYMBOL_REF (Pmode, \"_cmpsi2\");\t\t\\\n }\n \n-#define TARGET_FLOAT_FORMAT IEEE_FLOAT_FORMAT\n-\n #define PREDICATE_CODES\t\t\t\t\t\\\n   {\"ip2k_ip_operand\", {MEM}},\t\t\t\t\\\n   {\"ip2k_short_operand\", {MEM}},\t\t\t\\"}, {"sha": "f254f8ca0c5ec43e308e506d48a3f555abd06119", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=66d93b5aedd5679033e4abbe30d6b086a16ee823", "patch": "@@ -2687,10 +2687,6 @@ extern enum reg_class mips_char_to_class[256];\n \t(PRETEND_SIZE) = mips_setup_incoming_varargs (&(CUM), (MODE),\t\\\n \t\t\t\t\t\t      (TYPE), (NO_RTL))\n \f\n-\n-#define TARGET_FLOAT_FORMAT IEEE_FLOAT_FORMAT\n-\n-\f\n #define STRICT_ARGUMENT_NAMING (mips_abi != ABI_32 && mips_abi != ABI_O64)\n \n /* Define a data type for recording info about an argument list"}, {"sha": "7a30aa77cc2a7d72e604528d764d848f5088c1fc", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=66d93b5aedd5679033e4abbe30d6b086a16ee823", "patch": "@@ -126,9 +126,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* Defined in svr4.h.  */\n #define PCC_BITFIELD_TYPE_MATTERS 1\n-\n-#define TARGET_FLOAT_FORMAT IEEE_FLOAT_FORMAT\n-\n \f\n /* Layout of Source Language Data Types */\n "}, {"sha": "84bb057dd8f1efec9581e4839287da928eccba90", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=66d93b5aedd5679033e4abbe30d6b086a16ee823", "patch": "@@ -855,9 +855,6 @@ extern enum reg_class xtensa_char_to_class[256];\n #define FUNCTION_ARG_REGNO_P(N)\t\t\t\t\t\t\\\n   ((N) >= GP_OUTGOING_ARG_FIRST && (N) <= GP_OUTGOING_ARG_LAST)\n \n-/* Use IEEE floating-point format.  */\n-#define TARGET_FLOAT_FORMAT IEEE_FLOAT_FORMAT\n-\n /* Define a data type for recording info about an argument list\n    during the scan of that argument list.  This data type should\n    hold all necessary information about the function itself"}, {"sha": "34127751157b6bb90c5bff35ee50ff3df6670322", "filename": "gcc/defaults.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=66d93b5aedd5679033e4abbe30d6b086a16ee823", "patch": "@@ -523,6 +523,18 @@ You Lose!  You must define PREFERRED_DEBUGGING_TYPE!\n #define FUNCTION_ARG_REG_LITTLE_ENDIAN 0\n #endif\n \n+/* Define codes for all the float formats that we know of.  */\n+#define UNKNOWN_FLOAT_FORMAT 0\n+#define IEEE_FLOAT_FORMAT 1\n+#define VAX_FLOAT_FORMAT 2\n+#define IBM_FLOAT_FORMAT 3\n+#define C4X_FLOAT_FORMAT 4\n+\n+/* Default to IEEE float if not specified.  Nearly all machines use it.  */\n+#ifndef TARGET_FLOAT_FORMAT\n+#define\tTARGET_FLOAT_FORMAT\tIEEE_FLOAT_FORMAT\n+#endif\n+\n /* Determine the register class for registers suitable to be the base\n    address register in a MEM.  Allow the choice to be dependent upon\n    the mode of the memory access.  */"}, {"sha": "7ac10ffdd9af19e58414df17d947d27a7919af07", "filename": "gcc/real.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d93b5aedd5679033e4abbe30d6b086a16ee823/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=66d93b5aedd5679033e4abbe30d6b086a16ee823", "patch": "@@ -151,19 +151,6 @@ extern void real_2expN\t\tPARAMS ((REAL_VALUE_TYPE *, int));\n /* ====================================================================== */\n /* Crap.  */\n \n-/* Define codes for all the float formats that we know of.  */\n-#define UNKNOWN_FLOAT_FORMAT 0\n-#define IEEE_FLOAT_FORMAT 1\n-#define VAX_FLOAT_FORMAT 2\n-#define IBM_FLOAT_FORMAT 3\n-#define C4X_FLOAT_FORMAT 4\n-\n-/* Default to IEEE float if not specified.  Nearly all machines use it.  */\n-\n-#ifndef TARGET_FLOAT_FORMAT\n-#define\tTARGET_FLOAT_FORMAT\tIEEE_FLOAT_FORMAT\n-#endif\n-\n #define REAL_ARITHMETIC(value, code, d1, d2) \\\n   real_arithmetic (&(value), code, &(d1), &(d2))\n "}]}