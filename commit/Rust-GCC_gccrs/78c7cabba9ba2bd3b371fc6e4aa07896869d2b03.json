{"sha": "78c7cabba9ba2bd3b371fc6e4aa07896869d2b03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhjN2NhYmJhOWJhMmJkM2IzNzFmYzZlNGFhMDc4OTY4NjlkMmIwMw==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2010-05-13T11:39:28Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2010-05-13T11:39:28Z"}, "message": "* config/rs6000/rs6000-protos.h\n(rs6000_mode_dependent_address_ptr): Change argument to const_rtx.\n* config/rs6000/rs6000.c (rs6000_mode_dependent_address)\n(rs6000_debug_mode_dependent_address)\n(rs6000_mode_dependent_address_ptr): Likewise.\n\nFrom-SVN: r159359", "tree": {"sha": "92bf7466fff5c067dae7e7ffcb036eed0839d7c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92bf7466fff5c067dae7e7ffcb036eed0839d7c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78c7cabba9ba2bd3b371fc6e4aa07896869d2b03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78c7cabba9ba2bd3b371fc6e4aa07896869d2b03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78c7cabba9ba2bd3b371fc6e4aa07896869d2b03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78c7cabba9ba2bd3b371fc6e4aa07896869d2b03/comments", "author": null, "committer": null, "parents": [{"sha": "6560b67e1aa4df400292ca0bf0cbcc6b553d9fd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6560b67e1aa4df400292ca0bf0cbcc6b553d9fd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6560b67e1aa4df400292ca0bf0cbcc6b553d9fd8"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "4cc9d9d2edbce68f9de2da40ed272562e731f76a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78c7cabba9ba2bd3b371fc6e4aa07896869d2b03/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78c7cabba9ba2bd3b371fc6e4aa07896869d2b03/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78c7cabba9ba2bd3b371fc6e4aa07896869d2b03", "patch": "@@ -1,3 +1,11 @@\n+2010-05-13  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* config/rs6000/rs6000-protos.h\n+\t(rs6000_mode_dependent_address_ptr): Change argument to const_rtx.\n+\t* config/rs6000/rs6000.c (rs6000_mode_dependent_address)\n+\t(rs6000_debug_mode_dependent_address)\n+\t(rs6000_mode_dependent_address_ptr): Likewise.\n+\n 2010-05-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/43983\n@@ -274,13 +282,13 @@\n \n 2010-05-11  Christian Borntraeger  <borntraeger@de.ibm.com>\n \n-        * tree-ssa-loop-prefetch.c (prune_ref_by_group_reuse): Reset\n+\t* tree-ssa-loop-prefetch.c (prune_ref_by_group_reuse): Reset\n \tprefetch_before to PREFETCH_ALL if to accesses \"meet\" beyond\n \tcache size.\n \n 2010-05-11  Christian Borntraeger  <borntraeger@de.ibm.com>\n \n-        * tree-ssa-loop-prefetch.c: Add debug for dropped prefetches.\n+\t* tree-ssa-loop-prefetch.c: Add debug for dropped prefetches.\n \n 2010-05-11  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "7a0db2658142b53ac02a8a3375d4035220db65c2", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78c7cabba9ba2bd3b371fc6e4aa07896869d2b03/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78c7cabba9ba2bd3b371fc6e4aa07896869d2b03/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=78c7cabba9ba2bd3b371fc6e4aa07896869d2b03", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for IBM RS/6000.\n-   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n@@ -119,7 +119,7 @@ extern rtx rs6000_secondary_memory_needed_rtx (enum machine_mode);\n extern rtx (*rs6000_legitimize_reload_address_ptr) (rtx, enum machine_mode,\n \t\t\t\t\t\t    int, int, int, int *);\n extern bool rs6000_legitimate_offset_address_p (enum machine_mode, rtx, int);\n-extern bool (*rs6000_mode_dependent_address_ptr) (rtx);\n+extern bool (*rs6000_mode_dependent_address_ptr) (const_rtx);\n extern rtx rs6000_find_base_term (rtx);\n extern bool rs6000_offsettable_memref_p (rtx);\n extern rtx rs6000_return_addr (int, rtx);"}, {"sha": "94795483ec48d9f96cca6b24409799a0c4b9354c", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78c7cabba9ba2bd3b371fc6e4aa07896869d2b03/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78c7cabba9ba2bd3b371fc6e4aa07896869d2b03/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=78c7cabba9ba2bd3b371fc6e4aa07896869d2b03", "patch": "@@ -1118,9 +1118,9 @@ rtx (*rs6000_legitimize_reload_address_ptr) (rtx, enum machine_mode, int, int,\n \t\t\t\t\t     int, int *)\n   = rs6000_legitimize_reload_address;\n \n-static bool rs6000_mode_dependent_address (rtx);\n-static bool rs6000_debug_mode_dependent_address (rtx);\n-bool (*rs6000_mode_dependent_address_ptr) (rtx)\n+static bool rs6000_mode_dependent_address (const_rtx);\n+static bool rs6000_debug_mode_dependent_address (const_rtx);\n+bool (*rs6000_mode_dependent_address_ptr) (const_rtx)\n   = rs6000_mode_dependent_address;\n \n static enum reg_class rs6000_secondary_reload_class (enum reg_class,\n@@ -5896,7 +5896,7 @@ rs6000_debug_legitimate_address_p (enum machine_mode mode, rtx x,\n    sub-words of a TFmode operand, which is what we had before.  */\n \n static bool\n-rs6000_mode_dependent_address (rtx addr)\n+rs6000_mode_dependent_address (const_rtx addr)\n {\n   switch (GET_CODE (addr))\n     {\n@@ -5936,7 +5936,7 @@ rs6000_mode_dependent_address (rtx addr)\n \n /* Debug version of rs6000_mode_dependent_address.  */\n static bool\n-rs6000_debug_mode_dependent_address (rtx addr)\n+rs6000_debug_mode_dependent_address (const_rtx addr)\n {\n   bool ret = rs6000_mode_dependent_address (addr);\n "}]}