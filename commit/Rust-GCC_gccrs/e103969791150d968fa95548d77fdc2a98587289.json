{"sha": "e103969791150d968fa95548d77fdc2a98587289", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTEwMzk2OTc5MTE1MGQ5NjhmYTk1NTQ4ZDc3ZmRjMmE5ODU4NzI4OQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2006-05-15T22:54:19Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2006-05-15T22:54:19Z"}, "message": "re PR c++/27505 (ICE in const folding with bitfields)\n\n\tPR c++/27505\n\t* call.c (convert_like_real): Convert bitfields to their declared\n\ttypes when forming an rvalue.\n\t* tree.c (convert_bitfield_to_declared_type): New function.\n\t(rvalue): Use it.\n\t* cp-tree.h (convert_bitfield_to_declare_type): Declare it.\n\tPR c++/27505\n\t* g++.dg/expr/bitfield1.C: New test.\n\nFrom-SVN: r113803", "tree": {"sha": "16d6dba7fe7b214f346bbadc384c51e23c2095ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16d6dba7fe7b214f346bbadc384c51e23c2095ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e103969791150d968fa95548d77fdc2a98587289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e103969791150d968fa95548d77fdc2a98587289", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e103969791150d968fa95548d77fdc2a98587289", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e103969791150d968fa95548d77fdc2a98587289/comments", "author": null, "committer": null, "parents": [{"sha": "34a660ec3d3b402a7e1794e4408bc87afd77aba6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34a660ec3d3b402a7e1794e4408bc87afd77aba6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34a660ec3d3b402a7e1794e4408bc87afd77aba6"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "3bdf214a310b45c7779f960ddae46160f06e1b8f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e103969791150d968fa95548d77fdc2a98587289/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e103969791150d968fa95548d77fdc2a98587289/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e103969791150d968fa95548d77fdc2a98587289", "patch": "@@ -1,3 +1,12 @@\n+2006-05-15  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/27505\n+\t* call.c (convert_like_real): Convert bitfields to their declared\n+\ttypes when forming an rvalue.\n+\t* tree.c (convert_bitfield_to_declared_type): New function.\n+\t(rvalue): Use it.\n+\t* cp-tree.h (convert_bitfield_to_declare_type): Declare it.\n+\n 2006-05-15  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/27582"}, {"sha": "a7cb22aab2f12a7a38b0ec697568e1be42e4ad5e", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e103969791150d968fa95548d77fdc2a98587289/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e103969791150d968fa95548d77fdc2a98587289/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=e103969791150d968fa95548d77fdc2a98587289", "patch": "@@ -4328,6 +4328,7 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n   switch (convs->kind)\n     {\n     case ck_rvalue:\n+      expr = convert_bitfield_to_declared_type (expr);\n       if (! IS_AGGR_TYPE (totype))\n \treturn expr;\n       /* Else fall through.  */"}, {"sha": "8e56a9fc528efc5f22c7881ce401097908e126ab", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e103969791150d968fa95548d77fdc2a98587289/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e103969791150d968fa95548d77fdc2a98587289/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=e103969791150d968fa95548d77fdc2a98587289", "patch": "@@ -4335,6 +4335,7 @@ extern tree cp_add_pending_fn_decls\t\t(void*,tree);\n extern int cp_auto_var_in_fn_p\t\t\t(tree,tree);\n extern tree fold_if_not_in_template\t\t(tree);\n extern tree rvalue                              (tree);\n+extern tree convert_bitfield_to_declared_type   (tree);\n    \n /* in typeck.c */\n extern int string_conv_p\t\t\t(tree, tree, int);"}, {"sha": "bc8e737578934a180c0b103621c74037d7595f71", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e103969791150d968fa95548d77fdc2a98587289/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e103969791150d968fa95548d77fdc2a98587289/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=e103969791150d968fa95548d77fdc2a98587289", "patch": "@@ -362,22 +362,35 @@ get_target_expr (tree init)\n   return build_target_expr_with_type (init, TREE_TYPE (init));\n }\n \n+/* If EXPR is a bitfield reference, convert it to the declared type of\n+   the bitfield, and return the resulting expression.  Otherwise,\n+   return EXPR itself.  */\n+\n+tree\n+convert_bitfield_to_declared_type (tree expr)\n+{\n+  tree bitfield_type;\n+\n+  bitfield_type = is_bitfield_expr_with_lowered_type (expr);\n+  if (bitfield_type)\n+    expr = cp_convert (TYPE_MAIN_VARIANT (bitfield_type), expr);\n+  return expr;\n+}\n+\n /* EXPR is being used in an rvalue context.  Return a version of EXPR\n    that is marked as an rvalue.  */\n \n tree\n rvalue (tree expr)\n {\n-  tree type;\n+  expr = convert_bitfield_to_declared_type (expr);\n   if (real_lvalue_p (expr))\n     {\n-      type = is_bitfield_expr_with_lowered_type (expr);\n-      if (type)\n-\treturn cp_convert (TYPE_MAIN_VARIANT (type), expr);\n-      type = TREE_TYPE (expr);\n+      tree type;\n       /* [basic.lval]\n \t \n          Non-class rvalues always have cv-unqualified types.  */\n+      type = TREE_TYPE (expr);\n       if (!CLASS_TYPE_P (type))\n \ttype = TYPE_MAIN_VARIANT (type);\n       expr = build1 (NON_LVALUE_EXPR, type, expr);"}, {"sha": "529a209fa289686cd2a87f82356866d46a94816b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e103969791150d968fa95548d77fdc2a98587289/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e103969791150d968fa95548d77fdc2a98587289/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e103969791150d968fa95548d77fdc2a98587289", "patch": "@@ -1,3 +1,8 @@\n+2006-05-15  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/27505\n+\t* g++.dg/expr/bitfield1.C: New test.\n+\n 2006-05-15  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/27603"}, {"sha": "f3d47417b286888fc33b89dfcfc1207bac15b19c", "filename": "gcc/testsuite/g++.dg/expr/bitfield1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e103969791150d968fa95548d77fdc2a98587289/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e103969791150d968fa95548d77fdc2a98587289/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fbitfield1.C?ref=e103969791150d968fa95548d77fdc2a98587289", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/27505\n+\n+struct s {\n+  bool field:8;\n+};\n+\n+void\n+foo (struct s *p)\n+{\n+  if (!p->field)\n+    ;\n+}"}]}