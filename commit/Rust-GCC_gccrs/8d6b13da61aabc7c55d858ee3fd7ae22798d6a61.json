{"sha": "8d6b13da61aabc7c55d858ee3fd7ae22798d6a61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ2YjEzZGE2MWFhYmM3YzU1ZDg1OGVlM2ZkN2FlMjI3OThkNmE2MQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-04-05T07:31:12Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-04-05T07:31:12Z"}, "message": "Make FMA code cope with redundant negates (PR89956)\n\nThis patch fixes a case in which, due to forced missed optimisations\nin earlier passes, we have:\n\n    _1 = a * b\n    _2 = -_1\n    _3 = -_1\n    _4 = _2 + _3\n\nand treated _4 as two FNMA candidates, once via _2 and once via _3.\n\n2019-04-05  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\tPR tree-optimization/89956\n\t* tree-ssa-math-opts.c (convert_mult_to_fma): Protect against\n\tmultiple negates of the same value.\n\ngcc/testsuite/\n\tPR tree-optimization/89956\n\t* gfortran.dg/pr89956.f90: New test.\n\nFrom-SVN: r270162", "tree": {"sha": "86736c1fa49087e473dfafc0789158746bd70baa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86736c1fa49087e473dfafc0789158746bd70baa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d6b13da61aabc7c55d858ee3fd7ae22798d6a61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d6b13da61aabc7c55d858ee3fd7ae22798d6a61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d6b13da61aabc7c55d858ee3fd7ae22798d6a61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d6b13da61aabc7c55d858ee3fd7ae22798d6a61/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce36ba09fe2c1b8523265e217f8cb478f50607c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce36ba09fe2c1b8523265e217f8cb478f50607c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce36ba09fe2c1b8523265e217f8cb478f50607c3"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "c4693bfc324353be46acb1cfef67e9fe440357a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d6b13da61aabc7c55d858ee3fd7ae22798d6a61/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d6b13da61aabc7c55d858ee3fd7ae22798d6a61/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d6b13da61aabc7c55d858ee3fd7ae22798d6a61", "patch": "@@ -1,3 +1,9 @@\n+2019-04-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/89956\n+\t* tree-ssa-math-opts.c (convert_mult_to_fma): Protect against\n+\tmultiple negates of the same value.\n+\n 2019-04-04  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/89957"}, {"sha": "af77f0252aeb1363d8783950d6c7f55063b20a0b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d6b13da61aabc7c55d858ee3fd7ae22798d6a61/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d6b13da61aabc7c55d858ee3fd7ae22798d6a61/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d6b13da61aabc7c55d858ee3fd7ae22798d6a61", "patch": "@@ -1,3 +1,8 @@\n+2019-04-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/89956\n+\t* gfortran.dg/pr89956.f90: New test.\n+\n 2019-04-04  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/89974"}, {"sha": "f850afdebc1f5953a7256f89598b4e4f684242f3", "filename": "gcc/testsuite/gfortran.dg/pr89956.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d6b13da61aabc7c55d858ee3fd7ae22798d6a61/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89956.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d6b13da61aabc7c55d858ee3fd7ae22798d6a61/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89956.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89956.f90?ref=8d6b13da61aabc7c55d858ee3fd7ae22798d6a61", "patch": "@@ -0,0 +1,16 @@\n+! { dg-options \"-O3 -fno-tree-forwprop -fno-tree-pre -fno-tree-dominator-opts -fno-code-hoisting -ffast-math\" }\n+\n+module de\n+contains\n+  function zu (az, xx) result (q3)\n+    real :: az, xx, q3\n+\n+    q3 = 1.0 - lz (az, xx) - lz (xx, az)\n+  end function zu\n+\n+  function lz (ho, gh) result (ye)\n+    real :: ho, gh, ye\n+\n+    ye = sqrt (ho) - ho * gh\n+  end function lz\n+end module de"}, {"sha": "1496520c9dc6b94807a1493be5976b40c2ab8f33", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d6b13da61aabc7c55d858ee3fd7ae22798d6a61/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d6b13da61aabc7c55d858ee3fd7ae22798d6a61/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=8d6b13da61aabc7c55d858ee3fd7ae22798d6a61", "patch": "@@ -3094,6 +3094,7 @@ convert_mult_to_fma (gimple *mul_stmt, tree op1, tree op2,\n        && (tree_to_shwi (TYPE_SIZE (type))\n \t   <= PARAM_VALUE (PARAM_AVOID_FMA_MAX_BITS)));\n   bool defer = check_defer;\n+  bool seen_negate_p = false;\n   /* Make sure that the multiplication statement becomes dead after\n      the transformation, thus that all uses are transformed to FMAs.\n      This means we assume that an FMA operation has the same cost\n@@ -3127,6 +3128,12 @@ convert_mult_to_fma (gimple *mul_stmt, tree op1, tree op2,\n \t  ssa_op_iter iter;\n \t  use_operand_p usep;\n \n+\t  /* If (due to earlier missed optimizations) we have two\n+\t     negates of the same value, treat them as equivalent\n+\t     to a single negate with multiple uses.  */\n+\t  if (seen_negate_p)\n+\t    return false;\n+\n \t  result = gimple_assign_lhs (use_stmt);\n \n \t  /* Make sure the negate statement becomes dead with this\n@@ -3145,7 +3152,7 @@ convert_mult_to_fma (gimple *mul_stmt, tree op1, tree op2,\n \t  if (gimple_bb (use_stmt) != gimple_bb (mul_stmt))\n \t    return false;\n \n-\t  negate_p = true;\n+\t  negate_p = seen_negate_p = true;\n \t}\n \n       tree cond, else_value, ops[3];"}]}