{"sha": "895302fb3de1bf3c1e680974432033e54949db1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk1MzAyZmIzZGUxYmYzYzFlNjgwOTc0NDMyMDMzZTU0OTQ5ZGIxZQ==", "commit": {"author": {"name": "Jing Yu", "email": "jingyu@google.com", "date": "2009-04-28T20:39:11Z"}, "committer": {"name": "Jing Yu", "email": "jingyu@gcc.gnu.org", "date": "2009-04-28T20:39:11Z"}, "message": "re PR testsuite/39790 (gcc.dg/tls/alias-1.c,opt-2.c fail if TLS is not supported by C library)\n\n\tPR testsuite/39790\n\t* lib/target-supports.exp (check_effective_target_tls): Remove\n\tcomment of caching.\n\t(check_effective_target_tls_native): Likewise.\n\t(check_effective_target_tls_runtime): Likewise.\n\t* gcc.dg/tls/alias-1.c (dg-require-effective-target): Change target\n\ttls to tls_runtime.\n\t* gcc.dg/tls/opt-2.c: Add dg-require-effective-target tls_runtime.\n\nFrom-SVN: r146913", "tree": {"sha": "cce74152729d79fc31c677b66e5533fdfbfd1a81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cce74152729d79fc31c677b66e5533fdfbfd1a81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/895302fb3de1bf3c1e680974432033e54949db1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/895302fb3de1bf3c1e680974432033e54949db1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/895302fb3de1bf3c1e680974432033e54949db1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/895302fb3de1bf3c1e680974432033e54949db1e/comments", "author": null, "committer": null, "parents": [{"sha": "8224166ec8e3c5fba6fe73901edcfbc6d71ac63f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8224166ec8e3c5fba6fe73901edcfbc6d71ac63f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8224166ec8e3c5fba6fe73901edcfbc6d71ac63f"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "938a8e78129064c7607b43fee2f7ec2250e51db1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/895302fb3de1bf3c1e680974432033e54949db1e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/895302fb3de1bf3c1e680974432033e54949db1e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=895302fb3de1bf3c1e680974432033e54949db1e", "patch": "@@ -1,3 +1,14 @@\n+2009-04-28  Jing Yu  <jingyu@google.com>\n+\n+\tPR testsuite/39790\n+\t* lib/target-supports.exp (check_effective_target_tls): Remove\n+\tcomment of caching.\n+\t(check_effective_target_tls_native): Likewise.\n+\t(check_effective_target_tls_runtime): Likewise.\n+\t* gcc.dg/tls/alias-1.c (dg-require-effective-target): Change target\n+\ttls to tls_runtime.\n+\t* gcc.dg/tls/opt-2.c: Add dg-require-effective-target tls_runtime.\n+\n 2009-04-28  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/39946"}, {"sha": "722ad2154bbe37fb99c7212ed18f0c900b9d1575", "filename": "gcc/testsuite/gcc.dg/tls/alias-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/895302fb3de1bf3c1e680974432033e54949db1e/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Falias-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/895302fb3de1bf3c1e680974432033e54949db1e/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Falias-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Falias-1.c?ref=895302fb3de1bf3c1e680974432033e54949db1e", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do link } */\n /* { dg-require-alias \"\" } */\n /* { dg-require-visibility \"\" } */\n-/* { dg-require-effective-target tls } */\n+/* { dg-require-effective-target tls_runtime } */\n /* Test that encode_section_info handles the change from externally\n    defined to locally defined (via hidden).   Extracted from glibc.  */\n "}, {"sha": "0980fab612e8590dcfa01169497bf7852a8c909b", "filename": "gcc/testsuite/gcc.dg/tls/opt-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/895302fb3de1bf3c1e680974432033e54949db1e/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/895302fb3de1bf3c1e680974432033e54949db1e/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-2.c?ref=895302fb3de1bf3c1e680974432033e54949db1e", "patch": "@@ -6,6 +6,7 @@\n /* { dg-options \"-O2 -ftls-model=initial-exec\" } */\n /* { dg-options \"-O2 -ftls-model=initial-exec -march=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n /* { dg-require-effective-target tls_native } */\n+/* { dg-require-effective-target tls_runtime  } */\n \n __thread int thr;\n "}, {"sha": "fb4bc3ead390e946b6f63fd1b2e693c929ae8fc5", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/895302fb3de1bf3c1e680974432033e54949db1e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/895302fb3de1bf3c1e680974432033e54949db1e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=895302fb3de1bf3c1e680974432033e54949db1e", "patch": "@@ -544,8 +544,6 @@ proc check_effective_target_pcc_bitfield_type_matters { } {\n }\n \n # Return 1 if thread local storage (TLS) is supported, 0 otherwise.\n-#\n-# This won't change for different subtargets so cache the result.\n \n proc check_effective_target_tls {} {\n     return [check_no_compiler_messages tls assembly {\n@@ -556,8 +554,6 @@ proc check_effective_target_tls {} {\n }\n \n # Return 1 if *native* thread local storage (TLS) is supported, 0 otherwise.\n-#\n-# This won't change for different subtargets so cache the result.\n \n proc check_effective_target_tls_native {} {\n     # VxWorks uses emulated TLS machinery, but with non-standard helper\n@@ -575,8 +571,6 @@ proc check_effective_target_tls_native {} {\n }\n \n # Return 1 if TLS executables can run correctly, 0 otherwise.\n-#\n-# This won't change for different subtargets so cache the result.\n \n proc check_effective_target_tls_runtime {} {\n     return [check_runtime tls_runtime {"}]}