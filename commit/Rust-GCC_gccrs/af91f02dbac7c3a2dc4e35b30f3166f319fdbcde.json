{"sha": "af91f02dbac7c3a2dc4e35b30f3166f319fdbcde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY5MWYwMmRiYWM3YzNhMmRjNGUzNWIzMGYzMTY2ZjMxOWZkYmNkZQ==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2006-09-19T23:12:17Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2006-09-19T23:12:17Z"}, "message": "jvmti.cc (THREAD_DEFAULT_TO_CURRENT): Clarify parameter list.\n\n        * jvmti.cc (THREAD_DEFAULT_TO_CURRENT): Clarify parameter list.\n        (THREAD_CHECK_VALID): Likewise.\n        (THREAD_CHECK_ALIVE): Likewise.\n        (_Jv_JVMTI_SuspendThread): Call THREAD_CHECK_VALID on a Thread not\n        jthread.\n        (_Jv_JVMTI_ResumeThread): Likewise.\n        (_Jv_JVMTI_InterruptThread): Likewise.\n\n        (_Jv_JVMTI_DisposeEnvironment): Probably unwise to dereference an object\n        that was just freed.\n\nFrom-SVN: r117064", "tree": {"sha": "a572ed9215f45a6faf0994f02ec9c2aa1d4f4411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a572ed9215f45a6faf0994f02ec9c2aa1d4f4411"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af91f02dbac7c3a2dc4e35b30f3166f319fdbcde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af91f02dbac7c3a2dc4e35b30f3166f319fdbcde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af91f02dbac7c3a2dc4e35b30f3166f319fdbcde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af91f02dbac7c3a2dc4e35b30f3166f319fdbcde/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d63e138968dd44f2d1894c12e460816b1d1bdc13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d63e138968dd44f2d1894c12e460816b1d1bdc13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d63e138968dd44f2d1894c12e460816b1d1bdc13"}], "stats": {"total": 39, "additions": 27, "deletions": 12}, "files": [{"sha": "4dd7bacb68acdd8ed953367febadfec9d31ae092", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af91f02dbac7c3a2dc4e35b30f3166f319fdbcde/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af91f02dbac7c3a2dc4e35b30f3166f319fdbcde/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=af91f02dbac7c3a2dc4e35b30f3166f319fdbcde", "patch": "@@ -1,3 +1,16 @@\n+2006-09-19  Keith Seitz  <keiths@redhat.com>\n+\n+\t* jvmti.cc (THREAD_DEFAULT_TO_CURRENT): Clarify parameter list.\n+\t(THREAD_CHECK_VALID): Likewise.\n+\t(THREAD_CHECK_ALIVE): Likewise.\n+\t(_Jv_JVMTI_SuspendThread): Call THREAD_CHECK_VALID on a Thread not\n+\tjthread.\n+\t(_Jv_JVMTI_ResumeThread): Likewise.\n+\t(_Jv_JVMTI_InterruptThread): Likewise.\n+\n+\t(_Jv_JVMTI_DisposeEnvironment): Probably unwise to dereference an object\n+\tthat was just freed.\n+\n 2006-09-19  Mark Wielaard  <mark@klomp.org>\n \n \tFixes bug #29137"}, {"sha": "a522374d7e2ed37d4425337d65cd4845c1081711", "filename": "libjava/jvmti.cc", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af91f02dbac7c3a2dc4e35b30f3166f319fdbcde/libjava%2Fjvmti.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af91f02dbac7c3a2dc4e35b30f3166f319fdbcde/libjava%2Fjvmti.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjvmti.cc?ref=af91f02dbac7c3a2dc4e35b30f3166f319fdbcde", "patch": "@@ -56,26 +56,26 @@ static java::lang::Object *_envListLock = NULL;\n \n // Some commonly-used checks\n \n-#define THREAD_DEFAULT_TO_CURRENT(jthread)\t\t\\\n+#define THREAD_DEFAULT_TO_CURRENT(Ajthread)\t\t\\\n   do\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n-      if (jthread == NULL)\t\t\t\t\\\n-\tjthread = java::lang::Thread::currentThread ();\t\\\n+      if (Ajthread == NULL)\t\t\t\t\\\n+\tAjthread = java::lang::Thread::currentThread ();\t\\\n     }\t\t\t\t\t\t\t\\\n   while (0)\n \n-#define THREAD_CHECK_VALID(jthread)\t\t\t\t\t\\\n+#define THREAD_CHECK_VALID(Athread)\t\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      if (!java::lang::Thread::class$.isAssignableFrom (&(jthread->class$))) \\\n+      if (!java::lang::Thread::class$.isAssignableFrom (&(Athread->class$))) \\\n \treturn JVMTI_ERROR_INVALID_THREAD;\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   while (0)\n \n-#define THREAD_CHECK_IS_ALIVE(thread)\t     \\\n+#define THREAD_CHECK_IS_ALIVE(Athread)\t     \\\n   do\t\t\t\t\t     \\\n     {\t\t\t\t\t     \\\n-      if (!thread->isAlive ())\t\t     \\\n+      if (!Athread->isAlive ())\t\t     \\\n \treturn JVMTI_ERROR_THREAD_NOT_ALIVE; \\\n     }\t\t\t\t\t     \\\n   while (0)\n@@ -106,9 +106,9 @@ _Jv_JVMTI_SuspendThread (MAYBE_UNUSED jvmtiEnv *env, jthread thread)\n   using namespace java::lang;\n \n   THREAD_DEFAULT_TO_CURRENT (thread);\n-  THREAD_CHECK_VALID (thread);\n-\n+ \n   Thread *t = reinterpret_cast<Thread *> (thread);\n+  THREAD_CHECK_VALID (t);\n   THREAD_CHECK_IS_ALIVE (t);\n \n   _Jv_Thread_t *data = _Jv_ThreadGetData (t);\n@@ -122,9 +122,9 @@ _Jv_JVMTI_ResumeThread (MAYBE_UNUSED jvmtiEnv *env, jthread thread)\n   using namespace java::lang;\n \n   THREAD_DEFAULT_TO_CURRENT (thread);\n-  THREAD_CHECK_VALID (thread);\n \n   Thread *t = reinterpret_cast<Thread *> (thread);\n+  THREAD_CHECK_VALID (t);\n   THREAD_CHECK_IS_ALIVE (t);\n \n   _Jv_Thread_t *data = _Jv_ThreadGetData (t);\n@@ -141,8 +141,9 @@ _Jv_JVMTI_InterruptThread (MAYBE_UNUSED jvmtiEnv *env, jthread thread)\n   // FIXME: capability handling?  'can_signal_thread'\n   if (thread == NULL)\n     return JVMTI_ERROR_INVALID_THREAD;\n-  THREAD_CHECK_VALID (thread);\n+\n   Thread *real_thread = reinterpret_cast<Thread *> (thread);\n+  THREAD_CHECK_VALID (real_thread);\n   THREAD_CHECK_IS_ALIVE (real_thread);\n   real_thread->interrupt();\n   return JVMTI_ERROR_NONE;\n@@ -487,8 +488,9 @@ _Jv_JVMTI_DisposeEnvironment (jvmtiEnv *env)\n       JvSynchronize dummy (_envListLock);\n       if (_jvmtiEnvironments->env == env)\n \t{\n+\t  struct jvmti_env_list *next = _jvmtiEnvironments->next;\n \t  _Jv_Free (_jvmtiEnvironments);\n-\t  _jvmtiEnvironments = _jvmtiEnvironments->next;\n+\t  _jvmtiEnvironments = next;\n \t}\n       else\n \t{"}]}