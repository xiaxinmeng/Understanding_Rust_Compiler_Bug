{"sha": "3615816da830d41f67a5d8955ae588eba7f0b6fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYxNTgxNmRhODMwZDQxZjY3YTVkODk1NWFlNTg4ZWJhN2YwYjZmYg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2016-11-23T12:18:23Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2016-11-23T12:18:23Z"}, "message": "re PR target/78213 (-fself-test fails on aarch64)\n\n\tPR target/78213\n\t* opts.c (finish_options): Set -fsyntax-only if running self\n\ttests.\n\nFrom-SVN: r242748", "tree": {"sha": "12a174bfebb96c4c8be937abf2ea4244fc565eda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12a174bfebb96c4c8be937abf2ea4244fc565eda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3615816da830d41f67a5d8955ae588eba7f0b6fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3615816da830d41f67a5d8955ae588eba7f0b6fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3615816da830d41f67a5d8955ae588eba7f0b6fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3615816da830d41f67a5d8955ae588eba7f0b6fb/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0eb078fe20d443e2981a7b69067547e7ab80565c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb078fe20d443e2981a7b69067547e7ab80565c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eb078fe20d443e2981a7b69067547e7ab80565c"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "ec1fe967e832723d6f4e98b161e90a3ff9c3e07f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3615816da830d41f67a5d8955ae588eba7f0b6fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3615816da830d41f67a5d8955ae588eba7f0b6fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3615816da830d41f67a5d8955ae588eba7f0b6fb", "patch": "@@ -1,3 +1,9 @@\n+2016-11-23  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR target/78213\n+\t* opts.c (finish_options): Set -fsyntax-only if running self\n+\ttests.\n+\n 2016-11-23  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/71762"}, {"sha": "cb20154d1949e9ee249253327a3e4cd49d1ef2ac", "filename": "gcc/opts.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3615816da830d41f67a5d8955ae588eba7f0b6fb/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3615816da830d41f67a5d8955ae588eba7f0b6fb/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=3615816da830d41f67a5d8955ae588eba7f0b6fb", "patch": "@@ -744,6 +744,14 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n       opts->x_flag_toplevel_reorder = 0;\n     }\n \n+  /* -fself-test depends on the state of the compiler prior to\n+     compiling anything.  Ideally it should be run on an empty source\n+     file.  However, in case we get run with actual source, assume\n+     -fsyntax-only which will inhibit any compiler initialization\n+     which may confuse the self tests.  */\n+  if (opts->x_flag_self_test)\n+    opts->x_flag_syntax_only = 1;\n+\n   if (opts->x_flag_tm && opts->x_flag_non_call_exceptions)\n     sorry (\"transactional memory is not supported with non-call exceptions\");\n "}, {"sha": "e43c83cad7506c38bdddf13a3f8bf726dc2c87ea", "filename": "gcc/testsuite/gcc.dg/pr78213.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3615816da830d41f67a5d8955ae588eba7f0b6fb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78213.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3615816da830d41f67a5d8955ae588eba7f0b6fb/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78213.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78213.c?ref=3615816da830d41f67a5d8955ae588eba7f0b6fb", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fself-test\" } */\n+\n+/* Verify that -fself-test does not fail on a non empty source.  */\n+\n+int i;                                                                          void bar();                                                                     void foo()\n+{\n+  while (i--)\n+    bar();\n+}\n+/* { dg-message \"fself\\-test: \" \"-fself-test\" { target *-*-* } 0 } */"}]}