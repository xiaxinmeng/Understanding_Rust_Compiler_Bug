{"sha": "a60c3351032bbaad8c45dbad341437ba47540568", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYwYzMzNTEwMzJiYmFhZDhjNDVkYmFkMzQxNDM3YmE0NzU0MDU2OA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-01-16T19:58:59Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-01-16T19:58:59Z"}, "message": "i386.h (HARD_REGNO_CALLER_SAVE_MODE): Apply HImode and QImode fixups to general and mask registers only.\n\n\t* config/i386/i386.h (HARD_REGNO_CALLER_SAVE_MODE): Apply HImode and\n\tQImode fixups to general and mask registers only.\n\nFrom-SVN: r244504", "tree": {"sha": "d5c4e1b03b8136a83c203b71f8516c316dee8ace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5c4e1b03b8136a83c203b71f8516c316dee8ace"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a60c3351032bbaad8c45dbad341437ba47540568", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a60c3351032bbaad8c45dbad341437ba47540568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a60c3351032bbaad8c45dbad341437ba47540568", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a60c3351032bbaad8c45dbad341437ba47540568/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "05c6bc14cbb03b9398f65b3a9490d90740d86dcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05c6bc14cbb03b9398f65b3a9490d90740d86dcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05c6bc14cbb03b9398f65b3a9490d90740d86dcc"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "d3cbda6afe88b51bbcd8d991db3afa31c77d74f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a60c3351032bbaad8c45dbad341437ba47540568/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a60c3351032bbaad8c45dbad341437ba47540568/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a60c3351032bbaad8c45dbad341437ba47540568", "patch": "@@ -1,3 +1,8 @@\n+2017-01-16  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.h (HARD_REGNO_CALLER_SAVE_MODE): Apply HImode and\n+\tQImode fixups to general and mask registers only.\n+\n 2017-01-16  Carl Love  <cel@us.ibm.com>\n \n \t* config/rs6000/rs6000-c (altivec_overloaded_builtins): Add support"}, {"sha": "f31f11c38f2b8ca08e367e95fdee18252e703450", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a60c3351032bbaad8c45dbad341437ba47540568/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a60c3351032bbaad8c45dbad341437ba47540568/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=a60c3351032bbaad8c45dbad341437ba47540568", "patch": "@@ -1211,9 +1211,10 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n   (CC_REGNO_P (REGNO) ? VOIDmode\t\t\t\t\t\\\n    : (MODE) == VOIDmode && (NREGS) != 1 ? VOIDmode\t\t\t\\\n    : (MODE) == VOIDmode ? choose_hard_reg_mode ((REGNO), (NREGS), false) \\\n-   : (MODE) == HImode && !(TARGET_PARTIAL_REG_STALL\t\t\t\\\n+   : (MODE) == HImode && !((GENERAL_REGNO_P (REGNO)\t\t\t\\\n+\t\t\t    && TARGET_PARTIAL_REG_STALL)\t\t\\\n \t\t\t   || MASK_REGNO_P (REGNO)) ? SImode\t\t\\\n-   : (MODE) == QImode && !(TARGET_64BIT || QI_REGNO_P (REGNO)\t\t\\\n+   : (MODE) == QImode && !(ANY_QI_REGNO_P (REGNO)\t\t\t\\\n \t\t\t   || MASK_REGNO_P (REGNO)) ? SImode\t\t\\\n    : (MODE))\n "}]}