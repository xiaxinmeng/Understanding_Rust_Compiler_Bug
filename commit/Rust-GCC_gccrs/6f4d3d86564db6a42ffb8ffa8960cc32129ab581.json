{"sha": "6f4d3d86564db6a42ffb8ffa8960cc32129ab581", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY0ZDNkODY1NjRkYjZhNDJmZmI4ZmZhODk2MGNjMzIxMjlhYjU4MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-02-10T18:29:04Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-02-10T18:29:04Z"}, "message": "re PR libstdc++/26181 (istream::operator>>(streambuf*) fails to set eofbit)\n\n2006-10-02  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/26181\n\t* include/bits/streambuf.tcc (__copy_streambufs_eof): New, like\n\tthe existing __copy_streambufs but reporting eof in input.\n\t(__copy_streambufs): Just use the latter.\n\t* src/streambuf.cc (__copy_streambufs_eof): Adjust specializations\n\tof __copy_streambufs.\n\t* include/bits/istream.tcc (operator>>(__streambuf_type*)): Use\n\t__copy_streambufs_eof instead.\n\t* include/std/std_streambuf.h: Adjust.\n\t* src/streambuf-inst.cc: Adjust.\n\t* config/abi/pre/gnu.ver: Export the new symbols.\n\t* testsuite/27_io/basic_istream/extractors_other/char/26181.cc: New.\n\t* testsuite/27_io/basic_istream/extractors_other/wchar_t/26181.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_istream/extractors_other/char/1.cc: Adjust.\n\t* testsuite/27_io/basic_istream/extractors_other/wchar_t/1.cc:\n\tLikewise.\n\nFrom-SVN: r110841", "tree": {"sha": "1dab8a81ea15d11cc728502d30a26f6443ec2284", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1dab8a81ea15d11cc728502d30a26f6443ec2284"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f4d3d86564db6a42ffb8ffa8960cc32129ab581", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f4d3d86564db6a42ffb8ffa8960cc32129ab581", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f4d3d86564db6a42ffb8ffa8960cc32129ab581", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/comments", "author": null, "committer": null, "parents": [{"sha": "083cc29303cc3d27b400b8af8125db3f3ceb930f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/083cc29303cc3d27b400b8af8125db3f3ceb930f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/083cc29303cc3d27b400b8af8125db3f3ceb930f"}], "stats": {"total": 245, "additions": 210, "deletions": 35}, "files": [{"sha": "85fe6bbc679a11ae93143171a32d556dcaf9b6e7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6f4d3d86564db6a42ffb8ffa8960cc32129ab581", "patch": "@@ -1,3 +1,23 @@\n+2006-10-02  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/26181\n+\t* include/bits/streambuf.tcc (__copy_streambufs_eof): New, like\n+\tthe existing __copy_streambufs but reporting eof in input.\n+\t(__copy_streambufs): Just use the latter.\n+\t* src/streambuf.cc (__copy_streambufs_eof): Adjust specializations\n+\tof __copy_streambufs.\n+\t* include/bits/istream.tcc (operator>>(__streambuf_type*)): Use\n+\t__copy_streambufs_eof instead.\n+\t* include/std/std_streambuf.h: Adjust.\n+\t* src/streambuf-inst.cc: Adjust.\n+\t* config/abi/pre/gnu.ver: Export the new symbols.\n+\t* testsuite/27_io/basic_istream/extractors_other/char/26181.cc: New.\n+\t* testsuite/27_io/basic_istream/extractors_other/wchar_t/26181.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_istream/extractors_other/char/1.cc: Adjust.\n+\t* testsuite/27_io/basic_istream/extractors_other/wchar_t/1.cc:\n+\tLikewise.\n+\n 2006-02-08  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/26142"}, {"sha": "c756290df5872f5bb718b8a6b67cd047c9b8e971", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=6f4d3d86564db6a42ffb8ffa8960cc32129ab581", "patch": "@@ -1,6 +1,6 @@\n ## Linker script for GNU versioning (GNU ld 2.13.91+ only.)\n ##\n-## Copyright (C) 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+## Copyright (C) 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n ##\n ## This file is part of the GNU ISO C++ Library.  This library is free\n ## software; you can redistribute it and/or modify it under the\n@@ -673,6 +673,8 @@ GLIBCXX_3.4.7 {\n     _ZNSi10_M_extractI[^g]*;\n     _ZNSt13basic_istreamIwSt11char_traitsIwEE10_M_extractI[^g]*;\n \n+    _ZSt21__copy_streambufs_eofI[cw]St11char_traitsI[cw]EEiPSt15basic_streambuf*;\n+\n } GLIBCXX_3.4.6;\n \n # Symbols in the support library (libsupc++) have their own tag."}, {"sha": "ef773bc7080bbbe855dc2d0ae155726191ec5211", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=6f4d3d86564db6a42ffb8ffa8960cc32129ab581", "patch": "@@ -183,8 +183,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t{\n \t  try\n \t    {\n-\t      if (!__copy_streambufs(this->rdbuf(), __sbout))\n+\t      bool __ineof;\n+\t      if (!__copy_streambufs_eof(this->rdbuf(), __sbout, __ineof))\n \t\t__err |= ios_base::failbit;\n+\t      if (__ineof)\n+\t\t__err |= ios_base::eofbit;\n \t    }\n \t  catch(...)\n \t    { this->_M_setstate(ios_base::failbit); }"}, {"sha": "c4b860549a759b2a31683e198448f5cfa0f9f02c", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 30, "deletions": 6, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=6f4d3d86564db6a42ffb8ffa8960cc32129ab581", "patch": "@@ -1,6 +1,6 @@\n // Stream buffer classes -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -117,36 +117,60 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   // standard.\n   template<typename _CharT, typename _Traits>\n     streamsize\n-    __copy_streambufs(basic_streambuf<_CharT, _Traits>* __sbin,\n-\t\t      basic_streambuf<_CharT, _Traits>* __sbout)\n+    __copy_streambufs_eof(basic_streambuf<_CharT, _Traits>* __sbin,\n+\t\t\t  basic_streambuf<_CharT, _Traits>* __sbout,\n+\t\t\t  bool& __ineof)\n     {\n       streamsize __ret = 0;\n+      __ineof = true;\n       typename _Traits::int_type __c = __sbin->sgetc();\n       while (!_Traits::eq_int_type(__c, _Traits::eof()))\n \t{\n \t  __c = __sbout->sputc(_Traits::to_char_type(__c));\n \t  if (_Traits::eq_int_type(__c, _Traits::eof()))\n-\t    break;\n+\t    {\n+\t      __ineof = false;\n+\t      break;\n+\t    }\n \t  ++__ret;\n \t  __c = __sbin->snextc();\n \t}\n       return __ret;\n     }\n \n+  template<typename _CharT, typename _Traits>\n+    inline streamsize\n+    __copy_streambufs(basic_streambuf<_CharT, _Traits>* __sbin,\n+\t\t      basic_streambuf<_CharT, _Traits>* __sbout)\n+    {\n+      bool __ineof;\n+      return __copy_streambufs_eof(__sbin, __sbout, __ineof);\n+    }\n+\n   // Inhibit implicit instantiations for required instantiations,\n   // which are defined via explicit instantiations elsewhere.\n   // NB:  This syntax is a GNU extension.\n #if _GLIBCXX_EXTERN_TEMPLATE\n   extern template class basic_streambuf<char>;\n   extern template\n     streamsize\n-    __copy_streambufs(basic_streambuf<char>*, basic_streambuf<char>*);\n+    __copy_streambufs(basic_streambuf<char>*,\n+\t\t      basic_streambuf<char>*);\n+  extern template\n+    streamsize\n+    __copy_streambufs_eof(basic_streambuf<char>*,\n+\t\t\t  basic_streambuf<char>*, bool&);\n \n #ifdef _GLIBCXX_USE_WCHAR_T\n   extern template class basic_streambuf<wchar_t>;\n   extern template\n     streamsize\n-    __copy_streambufs(basic_streambuf<wchar_t>*, basic_streambuf<wchar_t>*);\n+    __copy_streambufs(basic_streambuf<wchar_t>*,\n+\t\t      basic_streambuf<wchar_t>*);\n+  extern template\n+    streamsize\n+    __copy_streambufs_eof(basic_streambuf<wchar_t>*,\n+\t\t\t  basic_streambuf<wchar_t>*, bool&);\n #endif\n #endif\n "}, {"sha": "b36a139b9782c50aafa6c4a389330ce9d23c6c38", "filename": "libstdc++-v3/include/std/std_streambuf.h", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h?ref=6f4d3d86564db6a42ffb8ffa8960cc32129ab581", "patch": "@@ -1,6 +1,6 @@\n // Stream buffer classes -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -55,8 +55,9 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   */\n   template<typename _CharT, typename _Traits>\n     streamsize\n-    __copy_streambufs(basic_streambuf<_CharT, _Traits>* __sbin,\n-\t\t      basic_streambuf<_CharT, _Traits>* __sbout);\n+    __copy_streambufs_eof(basic_streambuf<_CharT, _Traits>* __sbin,\n+\t\t\t  basic_streambuf<_CharT, _Traits>* __sbout,\n+\t\t\t  bool& __ineof);\n   \n   /**\n    *  @brief  The actual work of input and output (interface).\n@@ -151,8 +152,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       friend class ostreambuf_iterator<char_type, traits_type>;\n \n       friend streamsize\n-      __copy_streambufs<>(__streambuf_type* __sbin,\n-\t\t\t  __streambuf_type* __sbout);\n+      __copy_streambufs_eof<>(__streambuf_type* __sbin,\n+\t\t\t      __streambuf_type* __sbout, bool& __ineof);\n       \n       template<typename _CharT2, typename _Traits2>\n         friend basic_istream<_CharT2, _Traits2>&\n@@ -792,13 +793,13 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   // Explicit specialization declarations, defined in src/streambuf.cc.\n   template<>\n     streamsize\n-    __copy_streambufs(basic_streambuf<char>* __sbin,\n-\t\t      basic_streambuf<char>* __sbout);\n+    __copy_streambufs_eof(basic_streambuf<char>* __sbin,\n+\t\t\t  basic_streambuf<char>* __sbout, bool& __ineof);\n #ifdef _GLIBCXX_USE_WCHAR_T\n   template<>\n     streamsize\n-    __copy_streambufs(basic_streambuf<wchar_t>* __sbin,\n-\t\t      basic_streambuf<wchar_t>* __sbout);\n+    __copy_streambufs_eof(basic_streambuf<wchar_t>* __sbin,\n+\t\t\t  basic_streambuf<wchar_t>* __sbout, bool& __ineof);\n #endif\n \n _GLIBCXX_END_NAMESPACE"}, {"sha": "38fb0d4c3fa94cab0b3d3ab449ed01688cfd6f01", "filename": "libstdc++-v3/src/streambuf-inst.cc", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf-inst.cc?ref=6f4d3d86564db6a42ffb8ffa8960cc32129ab581", "patch": "@@ -1,6 +1,6 @@\n // Explicit instantiation file.\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2005\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -42,15 +42,25 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   template\n     streamsize\n-    __copy_streambufs(basic_streambuf<char>*, basic_streambuf<char>*); \n+    __copy_streambufs(basic_streambuf<char>*, basic_streambuf<char>*);\n+\n+  template\n+    streamsize\n+    __copy_streambufs_eof(basic_streambuf<char>*,\n+\t\t\t  basic_streambuf<char>*, bool&);\n \n #ifdef _GLIBCXX_USE_WCHAR_T\n   // wstreambuf\n   template class basic_streambuf<wchar_t>;\n \n   template\n     streamsize\n-    __copy_streambufs(basic_streambuf<wchar_t>*, basic_streambuf<wchar_t>*); \n+    __copy_streambufs(basic_streambuf<wchar_t>*, basic_streambuf<wchar_t>*);\n+\n+  template\n+    streamsize\n+    __copy_streambufs_eof(basic_streambuf<wchar_t>*,\n+\t\t\t  basic_streambuf<wchar_t>*, bool&);\n #endif\n \n _GLIBCXX_END_NAMESPACE"}, {"sha": "31863145f75ccb856f0dcdf4c75681854d594ba8", "filename": "libstdc++-v3/src/streambuf.cc", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf.cc?ref=6f4d3d86564db6a42ffb8ffa8960cc32129ab581", "patch": "@@ -1,6 +1,6 @@\n // Stream buffer classes -*- C++ -*-\n \n-// Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,11 +37,12 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   template<>\n     streamsize\n-    __copy_streambufs(basic_streambuf<char>* __sbin,\n-\t\t      basic_streambuf<char>* __sbout)\n+    __copy_streambufs_eof(basic_streambuf<char>* __sbin,\n+\t\t\t  basic_streambuf<char>* __sbout, bool& __ineof)\n     {\n       typedef basic_streambuf<char>::traits_type traits_type;\n       streamsize __ret = 0;\n+      __ineof = true;\n       traits_type::int_type __c = __sbin->sgetc();\n       while (!traits_type::eq_int_type(__c, traits_type::eof()))\n \t{\n@@ -52,14 +53,20 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t      __sbin->gbump(__wrote);\n \t      __ret += __wrote;\n \t      if (__wrote < __n)\n-\t\tbreak;\n+\t\t{\n+\t\t  __ineof = false;\n+\t\t  break;\n+\t\t}\n \t      __c = __sbin->underflow();\n \t    }\n \t  else\n \t    {\n \t      __c = __sbout->sputc(traits_type::to_char_type(__c));\n \t      if (traits_type::eq_int_type(__c, traits_type::eof()))\n-\t\tbreak;\n+\t\t{\n+\t\t  __ineof = false;\n+\t\t  break;\n+\t\t}\n \t      ++__ret;\n \t      __c = __sbin->snextc();\n \t    }\n@@ -70,11 +77,12 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n #ifdef _GLIBCXX_USE_WCHAR_T\n   template<>\n     streamsize\n-    __copy_streambufs(basic_streambuf<wchar_t>* __sbin,\n-\t\t      basic_streambuf<wchar_t>* __sbout)\n+    __copy_streambufs_eof(basic_streambuf<wchar_t>* __sbin,\n+\t\t\t  basic_streambuf<wchar_t>* __sbout, bool& __ineof)\n     {\n       typedef basic_streambuf<wchar_t>::traits_type traits_type;\n       streamsize __ret = 0;\n+      __ineof = true;\n       traits_type::int_type __c = __sbin->sgetc();\n       while (!traits_type::eq_int_type(__c, traits_type::eof()))\n \t{\n@@ -85,14 +93,20 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t      __sbin->gbump(__wrote);\n \t      __ret += __wrote;\n \t      if (__wrote < __n)\n-\t\tbreak;\n+\t\t{\n+\t\t  __ineof = false;\n+\t\t  break;\n+\t\t}\n \t      __c = __sbin->underflow();\n \t    }\n \t  else\n \t    {\n \t      __c = __sbout->sputc(traits_type::to_char_type(__c));\n \t      if (traits_type::eq_int_type(__c, traits_type::eof()))\n-\t\tbreak;\n+\t\t{\n+\t\t  __ineof = false;\n+\t\t  break;\n+\t\t}\n \t      ++__ret;\n \t      __c = __sbin->snextc();\n \t    }"}, {"sha": "a2a69bb53caf829044d9bb7a89f624d0a7593a05", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_other/char/1.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fchar%2F1.cc?ref=6f4d3d86564db6a42ffb8ffa8960cc32129ab581", "patch": "@@ -1,6 +1,7 @@\n // 1999-07-28 bkoz\n \n-// Copyright (C) 1999, 2001, 2003 Free Software Foundation\n+// Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -124,9 +125,9 @@ void test01()\n   state1 = is_04.rdstate();\n   is_04 >> &isbuf_03;   \n   state2 = is_04.rdstate();\n-  VERIFY( state1 == state2 );\n+  VERIFY( state1 != state2 );\n   VERIFY( !static_cast<bool>(state2 & statefail) );\n-  VERIFY( state2 != stateeof );\n+  VERIFY( state2 == stateeof );\n   strtmp = isbuf_03.str();\n   VERIFY( strtmp == str_02 ); // as only an \"in\" buffer\n   VERIFY( isbuf_03.sgetc() == 'a' );"}, {"sha": "b478e9699bbdb09afbb4ad4b9aaa6bb9f3fca355", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_other/char/26181.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fchar%2F26181.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fchar%2F26181.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fchar%2F26181.cc?ref=6f4d3d86564db6a42ffb8ffa8960cc32129ab581", "patch": "@@ -0,0 +1,50 @@\n+// Copyright (C) 2006 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/26181\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  \n+  typedef istringstream::pos_type pos_type;\n+\n+  istringstream iss(\"Territoires de l'Oubli\");\n+  ostringstream oss;\n+  \n+  VERIFY( iss.tellg() == pos_type(0) );\n+  \n+  iss >> oss.rdbuf();\n+  VERIFY( iss.rdstate() == iss.eofbit );\n+  \n+  iss.clear();\n+  VERIFY( iss.tellg() == pos_type(22) );\n+  \n+  iss.get();\n+  VERIFY( iss.tellg() == pos_type(-1) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "1766169fea7ba34591fb49f4961417e582c65e32", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_other/wchar_t/1.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fwchar_t%2F1.cc?ref=6f4d3d86564db6a42ffb8ffa8960cc32129ab581", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004 Free Software Foundation\n+// Copyright (C) 2004, 2005, 2006 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -122,9 +122,9 @@ void test01()\n   state1 = is_04.rdstate();\n   is_04 >> &isbuf_03;   \n   state2 = is_04.rdstate();\n-  VERIFY( state1 == state2 );\n+  VERIFY( state1 != state2 );\n   VERIFY( !static_cast<bool>(state2 & statefail) );\n-  VERIFY( state2 != stateeof );\n+  VERIFY( state2 == stateeof );\n   strtmp = isbuf_03.str();\n   VERIFY( strtmp == str_02 ); // as only an \"in\" buffer\n   VERIFY( isbuf_03.sgetc() == L'a' );"}, {"sha": "4fbace705b17b82eae423d2960dc6ddce00db442", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_other/wchar_t/26181.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fwchar_t%2F26181.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f4d3d86564db6a42ffb8ffa8960cc32129ab581/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fwchar_t%2F26181.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fwchar_t%2F26181.cc?ref=6f4d3d86564db6a42ffb8ffa8960cc32129ab581", "patch": "@@ -0,0 +1,50 @@\n+// Copyright (C) 2006 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/26181\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  \n+  typedef wistringstream::pos_type pos_type;\n+\n+  wistringstream iss(L\"Territoires de l'Oubli\");\n+  wostringstream oss;\n+  \n+  VERIFY( iss.tellg() == pos_type(0) );\n+  \n+  iss >> oss.rdbuf();\n+  VERIFY( iss.rdstate() == iss.eofbit );\n+  \n+  iss.clear();\n+  VERIFY( iss.tellg() == pos_type(22) );\n+  \n+  iss.get();\n+  VERIFY( iss.tellg() == pos_type(-1) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}