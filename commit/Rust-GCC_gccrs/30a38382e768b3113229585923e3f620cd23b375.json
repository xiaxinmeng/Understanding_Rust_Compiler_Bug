{"sha": "30a38382e768b3113229585923e3f620cd23b375", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBhMzgzODJlNzY4YjMxMTMyMjk1ODU5MjNlM2Y2MjBjZDIzYjM3NQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2003-05-19T07:30:12Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2003-05-19T07:30:12Z"}, "message": "mips.c (mips_class_max_nregs): Return the number of words in the mode.\n\n\t* config/mips/mips.c (mips_class_max_nregs): Return the number of\n\twords in the mode.\n\nFrom-SVN: r66950", "tree": {"sha": "463d865995e94e650a88cd19e8793e264cd36466", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/463d865995e94e650a88cd19e8793e264cd36466"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30a38382e768b3113229585923e3f620cd23b375", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30a38382e768b3113229585923e3f620cd23b375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30a38382e768b3113229585923e3f620cd23b375", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30a38382e768b3113229585923e3f620cd23b375/comments", "author": null, "committer": null, "parents": [{"sha": "beb14bd522f5e60f7a2c85f4308a412b18e8e8ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beb14bd522f5e60f7a2c85f4308a412b18e8e8ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beb14bd522f5e60f7a2c85f4308a412b18e8e8ce"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "5d2013441d7291193328495f1397d4c093bc3856", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a38382e768b3113229585923e3f620cd23b375/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a38382e768b3113229585923e3f620cd23b375/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30a38382e768b3113229585923e3f620cd23b375", "patch": "@@ -1,3 +1,8 @@\n+2003-05-19  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.c (mips_class_max_nregs): Return the number of\n+\twords in the mode.\n+\n 2003-05-19  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.c (override_options): Disable explicit"}, {"sha": "258c7b029be8cd69cb3c4c360be8cb7d8c73bc69", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a38382e768b3113229585923e3f620cd23b375/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a38382e768b3113229585923e3f620cd23b375/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=30a38382e768b3113229585923e3f620cd23b375", "patch": "@@ -9014,18 +9014,19 @@ mips_secondary_reload_class (class, mode, x, in_p)\n   return NO_REGS;\n }\n \n-/* This function returns the maximum number of consecutive registers\n-   needed to represent mode MODE in registers of class CLASS.  */\n+/* Implement CLASS_MAX_NREGS.\n+\n+   Usually all registers are word-sized.  The only supported exception\n+   is -mgp64 -msingle-float, which has 64-bit words but 32-bit float\n+   registers.  A word-based calculation is correct even in that case,\n+   since -msingle-float disallows multi-FPR values.  */\n \n int\n mips_class_max_nregs (class, mode)\n-     enum reg_class class;\n+     enum reg_class class ATTRIBUTE_UNUSED;\n      enum machine_mode mode;\n {\n-  if (class == FP_REGS)\n-    return FP_INC;\n-  else\n-    return (GET_MODE_SIZE (mode) + UNITS_PER_WORD - 1) / UNITS_PER_WORD;\n+  return (GET_MODE_SIZE (mode) + UNITS_PER_WORD - 1) / UNITS_PER_WORD;\n }\n \n bool"}]}