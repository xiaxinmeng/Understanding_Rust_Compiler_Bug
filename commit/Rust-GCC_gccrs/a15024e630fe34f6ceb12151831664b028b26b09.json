{"sha": "a15024e630fe34f6ceb12151831664b028b26b09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE1MDI0ZTYzMGZlMzRmNmNlYjEyMTUxODMxNjY0YjAyOGIyNmIwOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-11-10T12:03:50Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-11-10T12:03:50Z"}, "message": "boost_shared_ptr.h (_Sp_counted_base::release, [...]): Protect barriers with __GTHREADS.\n\n2005-11-10  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1/boost_shared_ptr.h (_Sp_counted_base::release,\n\tweak_release): Protect barriers with __GTHREADS.\n\nFrom-SVN: r106733", "tree": {"sha": "8bb1fb80628543ca3351cae27a1958808c8d329c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bb1fb80628543ca3351cae27a1958808c8d329c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a15024e630fe34f6ceb12151831664b028b26b09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a15024e630fe34f6ceb12151831664b028b26b09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a15024e630fe34f6ceb12151831664b028b26b09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a15024e630fe34f6ceb12151831664b028b26b09/comments", "author": null, "committer": null, "parents": [{"sha": "f45ddfe08e2caae7b24895e63e00a7884a2413d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f45ddfe08e2caae7b24895e63e00a7884a2413d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f45ddfe08e2caae7b24895e63e00a7884a2413d8"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "0ca7b0cfa490ddaf3fd39a8e1718a5614d80d8fd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a15024e630fe34f6ceb12151831664b028b26b09/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a15024e630fe34f6ceb12151831664b028b26b09/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a15024e630fe34f6ceb12151831664b028b26b09", "patch": "@@ -1,3 +1,8 @@\n+2005-11-10  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1/boost_shared_ptr.h (_Sp_counted_base::release,\n+\tweak_release): Protect barriers with __GTHREADS.\n+\n 2005-11-10  Paolo Carlini  <pcarlini@suse.de>\n \t    Peter Dimov  <pdimov@mmltd.net>\n "}, {"sha": "2c3e27ca537740395564a3fed6cf03e349829bda", "filename": "libstdc++-v3/include/tr1/boost_shared_ptr.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a15024e630fe34f6ceb12151831664b028b26b09/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fboost_shared_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a15024e630fe34f6ceb12151831664b028b26b09/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fboost_shared_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fboost_shared_ptr.h?ref=a15024e630fe34f6ceb12151831664b028b26b09", "patch": "@@ -151,10 +151,10 @@ class _Sp_counted_base\n     if (__gnu_cxx::__exchange_and_add(&_M_use_count, -1) == 1)\n       {\n \tdispose();\n-\t\n+#ifdef __GTHREADS\t\n \t_GLIBCXX_READ_MEM_BARRIER;\n \t_GLIBCXX_WRITE_MEM_BARRIER;\n-\t\n+#endif\n \tif (__gnu_cxx::__exchange_and_add(&_M_weak_count, -1) == 1)\n \t  destroy();\n       }\n@@ -171,8 +171,10 @@ class _Sp_counted_base\n   {\n     if (__gnu_cxx::__exchange_and_add(&_M_weak_count, -1) == 1)\n       {\n+#ifdef __GTHREADS\n \t_GLIBCXX_READ_MEM_BARRIER;\n \t_GLIBCXX_WRITE_MEM_BARRIER;\n+#endif\n \tdestroy();\n       }\n   }\n@@ -326,7 +328,6 @@ class shared_count\n   { return _M_pi ? _M_pi->get_deleter(__ti) : 0; }\n };\n \n-\n class weak_count\n {\n private:\n@@ -418,6 +419,7 @@ shared_count::shared_count(const weak_count& __r)\n     __throw_bad_weak_ptr();\n }\n \n+\n // fwd decls\n template<typename _Tp>\n   class weak_ptr;\n@@ -850,7 +852,6 @@ template<typename _Tp>\n #endif\n     } // XXX MT\n \n-\n     long\n     use_count() const // never throws\n     { return _M_refcount.use_count(); }"}]}