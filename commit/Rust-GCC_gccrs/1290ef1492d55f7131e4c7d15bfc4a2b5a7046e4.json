{"sha": "1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI5MGVmMTQ5MmQ1NWY3MTMxZTRjN2QxNWJmYzRhMmI1YTcwNDZlNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-23T09:57:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-23T09:57:45Z"}, "message": "[multiple changes]\n\n2009-06-23  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-proc.adb, prj-proc.ads, prj-nmsc.adb, prj-nmsc.ads, prj-conf.adb,\n\tprj-conf.ads (Check_Configuration): New parameter\n\tCompiler_Driver_Mandatory.\n\n2009-06-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch10.adb (Analyze_With_Clause): If a subprogram instance in the\n\tcontext of the current unit has an inline pragma, the instance is not\n\trewritten as the declaration of the package wrapper. Handle both\n\tpossibilities when retrieving the visible subprogram that renames the\n\tinstantiation itself.\n\nFrom-SVN: r148839", "tree": {"sha": "63b071b08e39559bcd93745051792552ce1c32a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63b071b08e39559bcd93745051792552ce1c32a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/comments", "author": null, "committer": null, "parents": [{"sha": "d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6a24cdbbf6412c8b716a9dfddefb0b6796222b6"}], "stats": {"total": 131, "additions": 95, "deletions": 36}, "files": [{"sha": "6418c11c8a7da7369bfe30789401d5049945cf8a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4", "patch": "@@ -1,3 +1,17 @@\n+2009-06-23  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-proc.adb, prj-proc.ads, prj-nmsc.adb, prj-nmsc.ads, prj-conf.adb,\n+\tprj-conf.ads (Check_Configuration): New parameter\n+\tCompiler_Driver_Mandatory.\n+\n+2009-06-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch10.adb (Analyze_With_Clause): If a subprogram instance in the\n+\tcontext of the current unit has an inline pragma, the instance is not\n+\trewritten as the declaration of the package wrapper. Handle both\n+\tpossibilities when retrieving the visible subprogram that renames the\n+\tinstantiation itself.\n+\n 2009-06-23  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_ch4.adb (Displace_Allocator_Pointer, Expand_N_Allocator): Handle"}, {"sha": "7c60f531884d49ec64a2f8ae7c87570e080a77aa", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 24, "deletions": 17, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4", "patch": "@@ -801,6 +801,7 @@ package body Prj.Conf is\n \n    begin\n       Free (Config_File_Path);\n+      Config := No_Project;\n \n       if Config_File_Name /= \"\" then\n          Config_File_Path := Locate_Config_File (Config_File_Name);\n@@ -830,28 +831,32 @@ package body Prj.Conf is\n \n       --  Parse the configuration file\n \n-      if Verbose_Mode then\n+      if Verbose_Mode and then Config_File_Path /= null then\n          Write_Str  (\"Checking configuration \");\n          Write_Line (Config_File_Path.all);\n       end if;\n \n-      Prj.Part.Parse\n-        (In_Tree                => Project_Node_Tree,\n-         Project                => Config_Project_Node,\n-         Project_File_Name      => Config_File_Path.all,\n-         Always_Errout_Finalize => False,\n-         Packages_To_Check      => Packages_To_Check,\n-         Current_Directory      => Current_Directory,\n-         Is_Config_File         => True);\n-\n-      if Config_Project_Node /= Empty_Node then\n+      if Config_File_Path /= null then\n+         Prj.Part.Parse\n+           (In_Tree                => Project_Node_Tree,\n+            Project                => Config_Project_Node,\n+            Project_File_Name      => Config_File_Path.all,\n+            Always_Errout_Finalize => False,\n+            Packages_To_Check      => Packages_To_Check,\n+            Current_Directory      => Current_Directory,\n+            Is_Config_File         => True);\n+      else\n+         --  Maybe the user will want to create his own configuration file\n+         Config_Project_Node := Empty_Node;\n+      end if;\n \n-         if On_Load_Config /= null then\n-            On_Load_Config\n-              (Config_File       => Config_Project_Node,\n-               Project_Node_Tree => Project_Node_Tree);\n-         end if;\n+      if On_Load_Config /= null then\n+         On_Load_Config\n+           (Config_File       => Config_Project_Node,\n+            Project_Node_Tree => Project_Node_Tree);\n+      end if;\n \n+      if Config_Project_Node /= Empty_Node then\n          Prj.Proc.Process_Project_Tree_Phase_1\n            (In_Tree                => Project_Tree,\n             Project                => Config,\n@@ -901,7 +906,8 @@ package body Prj.Conf is\n       Target_Name                : String := \"\";\n       Normalized_Hostname        : String;\n       Report_Error               : Put_Line_Access := null;\n-      On_Load_Config             : Config_File_Hook := null)\n+      On_Load_Config             : Config_File_Hook := null;\n+      Compiler_Driver_Mandatory  : Boolean := True)\n    is\n       Main_Config_Project : Project_Id;\n       Success : Boolean;\n@@ -955,6 +961,7 @@ package body Prj.Conf is\n          Report_Error           => Report_Error,\n          Current_Dir            => Current_Directory,\n          When_No_Sources        => Warning,\n+         Compiler_Driver_Mandatory => Compiler_Driver_Mandatory,\n          Is_Config_File         => False);\n \n       if not Success then"}, {"sha": "a3a499f09bb067576f4f16ad1b347d04ee901529", "filename": "gcc/ada/prj-conf.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/gcc%2Fada%2Fprj-conf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/gcc%2Fada%2Fprj-conf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.ads?ref=1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4", "patch": "@@ -31,12 +31,15 @@ with Prj.Tree;\n package Prj.Conf is\n \n    type Config_File_Hook is access procedure\n-     (Config_File       : Prj.Tree.Project_Node_Id;\n+     (Config_File       : in out Prj.Tree.Project_Node_Id;\n       Project_Node_Tree : Prj.Tree.Project_Node_Tree_Ref);\n    --  Hook called after the config file has been parsed. This lets the\n    --  application do last minute changes to it (GPS uses this to add the\n    --  default naming schemes for instance).\n    --  At that point, the config file has not been applied to the project yet.\n+   --  When no config file was found, and automatic generation is disabled, it\n+   --  is possible that Config_File is set to Empty_Node when this procedure is\n+   --  called. You can then decide to create a new config file if you need.\n \n    procedure Parse_Project_And_Apply_Config\n      (Main_Project               : out Prj.Project_Id;\n@@ -94,7 +97,8 @@ package Prj.Conf is\n       Target_Name                : String := \"\";\n       Normalized_Hostname        : String;\n       Report_Error               : Put_Line_Access := null;\n-      On_Load_Config             : Config_File_Hook := null);\n+      On_Load_Config             : Config_File_Hook := null;\n+      Compiler_Driver_Mandatory  : Boolean := True);\n    --  Same as above, except the project must already have been parsed through\n    --  Prj.Part.Parse, and only the processing of the project and the\n    --  configuration is done at this level."}, {"sha": "6c38cf3e04465cc5612a342b2a286a8eb96be0e8", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4", "patch": "@@ -281,8 +281,12 @@ package body Prj.Nmsc is\n \n    procedure Check_Configuration\n      (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref);\n+      In_Tree : Project_Tree_Ref;\n+      Compiler_Driver_Mandatory : Boolean);\n    --  Check the configuration attributes for the project\n+   --  If Compiler_Driver_Mandatory is true, then a Compiler.Driver attribute\n+   --  for each language must be defined, or we will not look for its source\n+   --  files.\n \n    procedure Check_If_Externally_Built\n      (Project : Project_Id;\n@@ -791,7 +795,8 @@ package body Prj.Nmsc is\n       When_No_Sources : Error_Warning;\n       Current_Dir     : String;\n       Proc_Data       : in out Processing_Data;\n-      Is_Config_File  : Boolean)\n+      Is_Config_File  : Boolean;\n+      Compiler_Driver_Mandatory : Boolean)\n    is\n       Extending : Boolean := False;\n \n@@ -824,7 +829,9 @@ package body Prj.Nmsc is\n       --  Check configuration in multi language mode\n \n       if Must_Check_Configuration then\n-         Check_Configuration (Project, In_Tree);\n+         Check_Configuration\n+           (Project, In_Tree,\n+            Compiler_Driver_Mandatory => Compiler_Driver_Mandatory);\n       end if;\n \n       --  Library attributes\n@@ -1132,7 +1139,8 @@ package body Prj.Nmsc is\n \n    procedure Check_Configuration\n      (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref)\n+      In_Tree : Project_Tree_Ref;\n+      Compiler_Driver_Mandatory : Boolean)\n    is\n       Dot_Replacement : File_Name_Type := No_File;\n       Casing          : Casing_Type    := All_Lower_Case;\n@@ -2364,9 +2372,13 @@ package body Prj.Nmsc is\n       while Lang_Index /= No_Language_Index loop\n          Current_Language := Lang_Index.Display_Name;\n \n-         --  For all languages, Compiler_Driver needs to be specified\n+         --  For all languages, Compiler_Driver needs to be specified. This is\n+         --  only necessary if we do intend to compiler (not in GPS for\n+         --  instance)\n \n-         if Lang_Index.Config.Compiler_Driver = No_File then\n+         if Compiler_Driver_Mandatory\n+           and then Lang_Index.Config.Compiler_Driver = No_File\n+         then\n             Error_Msg_Name_1 := Current_Language;\n             Error_Msg\n               (Project,"}, {"sha": "8ab78afd7e4d80db3b6ddb423e467a98064d6c0e", "filename": "gcc/ada/prj-nmsc.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/gcc%2Fada%2Fprj-nmsc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/gcc%2Fada%2Fprj-nmsc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.ads?ref=1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4", "patch": "@@ -47,7 +47,8 @@ private package Prj.Nmsc is\n       When_No_Sources : Error_Warning;\n       Current_Dir     : String;\n       Proc_Data       : in out Processing_Data;\n-      Is_Config_File  : Boolean);\n+      Is_Config_File  : Boolean;\n+      Compiler_Driver_Mandatory : Boolean);\n    --  Perform consistency and semantic checks on a project, starting from the\n    --  project tree parsed from the .gpr file. This procedure interprets the\n    --  various case statements in the project based on the current environment\n@@ -69,6 +70,10 @@ private package Prj.Nmsc is\n    --  language are found in a project where this language is declared.\n    --\n    --  Is_Config_File should be True if Project is config file (.cgpr)\n+   --\n+   --  If Compiler_Driver_Mandatory is true, then a Compiler.Driver attribute\n+   --  for each language must be defined, or we will not look for its source\n+   --  files.\n \n private\n    type Processing_Data is record"}, {"sha": "c65a286a4648a1f983112743c820a796524641c0", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4", "patch": "@@ -83,7 +83,8 @@ package body Prj.Proc is\n       Project         : Project_Id;\n       Current_Dir     : String;\n       When_No_Sources : Error_Warning;\n-      Is_Config_File  : Boolean);\n+      Is_Config_File  : Boolean;\n+      Compiler_Driver_Mandatory : Boolean);\n    --  Set all projects to not checked, then call Recursive_Check for the\n    --  main project Project. Project is set to No_Project if errors occurred.\n    --  Current_Dir is for optimization purposes, avoiding extra system calls.\n@@ -152,6 +153,7 @@ package body Prj.Proc is\n       When_No_Sources : Error_Warning;\n       Proc_Data       : Processing_Data;\n       Is_Config_File  : Boolean;\n+      Compiler_Driver_Mandatory : Boolean;\n    end record;\n    --  Data passed to Recursive_Check\n    --  Current_Dir is for optimization purposes, avoiding extra system calls.\n@@ -283,7 +285,8 @@ package body Prj.Proc is\n       Project         : Project_Id;\n       Current_Dir     : String;\n       When_No_Sources : Error_Warning;\n-      Is_Config_File  : Boolean)\n+      Is_Config_File  : Boolean;\n+      Compiler_Driver_Mandatory : Boolean)\n    is\n       Dir : aliased String := Current_Dir;\n \n@@ -297,6 +300,7 @@ package body Prj.Proc is\n       Data.Current_Dir     := Dir'Unchecked_Access;\n       Data.When_No_Sources := When_No_Sources;\n       Data.Is_Config_File  := Is_Config_File;\n+      Data.Compiler_Driver_Mandatory := Compiler_Driver_Mandatory;\n       Initialize (Data.Proc_Data);\n \n       Check_All_Projects (Project, Data, Imported_First => True);\n@@ -1259,6 +1263,7 @@ package body Prj.Proc is\n             Report_Error           => Report_Error,\n             When_No_Sources        => When_No_Sources,\n             Current_Dir            => Current_Dir,\n+            Compiler_Driver_Mandatory => True,\n             Is_Config_File         => Is_Config_File);\n       end if;\n    end Process;\n@@ -2313,7 +2318,8 @@ package body Prj.Proc is\n       Report_Error           : Put_Line_Access;\n       When_No_Sources        : Error_Warning := Error;\n       Current_Dir            : String;\n-      Is_Config_File         : Boolean)\n+      Is_Config_File         : Boolean;\n+      Compiler_Driver_Mandatory : Boolean)\n    is\n       Obj_Dir    : Path_Name_Type;\n       Extending  : Project_Id;\n@@ -2328,7 +2334,8 @@ package body Prj.Proc is\n \n       if Project /= No_Project then\n          Check (In_Tree, Project, Current_Dir, When_No_Sources,\n-                Is_Config_File => Is_Config_File);\n+                Is_Config_File => Is_Config_File,\n+                Compiler_Driver_Mandatory => Compiler_Driver_Mandatory);\n       end if;\n \n       --  If main project is an extending all project, set the object\n@@ -2452,6 +2459,7 @@ package body Prj.Proc is\n       Prj.Nmsc.Check\n         (Project, Data.In_Tree, Error_Report, Data.When_No_Sources,\n          Data.Current_Dir.all, Data.Proc_Data,\n+         Compiler_Driver_Mandatory => Data.Compiler_Driver_Mandatory,\n          Is_Config_File => Data.Is_Config_File);\n    end Recursive_Check;\n "}, {"sha": "72b4213c550581899b73b18386f596c448f645e1", "filename": "gcc/ada/prj-proc.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/gcc%2Fada%2Fprj-proc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/gcc%2Fada%2Fprj-proc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.ads?ref=1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4", "patch": "@@ -66,7 +66,8 @@ package Prj.Proc is\n       Report_Error           : Put_Line_Access;\n       When_No_Sources        : Error_Warning := Error;\n       Current_Dir            : String;\n-      Is_Config_File         : Boolean);\n+      Is_Config_File         : Boolean;\n+      Compiler_Driver_Mandatory : Boolean);\n    --  Perform the second phase of the processing, filling the rest of the\n    --  project with the information extracted from the project tree. This phase\n    --  requires that the configuration file has already been parsed (in fact"}, {"sha": "efb0ca7d9f604eac70d0d61065819af0e852adfc", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=1290ef1492d55f7131e4c7d15bfc4a2b5a7046e4", "patch": "@@ -2375,11 +2375,19 @@ package body Sem_Ch10 is\n \n       elsif Unit_Kind in N_Subprogram_Instantiation then\n \n-         --  Instantiation node is replaced with a wrapper package. Retrieve\n-         --  the visible subprogram created by the instance from corresponding\n-         --  attribute of the wrapper.\n-\n-         E_Name := Related_Instance (Defining_Entity (U));\n+         --  The visible subprogram is created during instantiation, and is\n+         --  an attribute of the wrapper package. We retrieve the wrapper\n+         --  package directly from the instantiation node. If the instance\n+         --  is inlined the unit is still an instantiation. Otherwise it has\n+         --  been rewritten as the declaration of the wrapper itself.\n+\n+         if Nkind (U) in N_Subprogram_Instantiation then\n+            E_Name :=\n+              Related_Instance\n+                (Defining_Entity (Specification (Instance_Spec (U))));\n+         else\n+            E_Name := Related_Instance (Defining_Entity (U));\n+         end if;\n \n       elsif Unit_Kind = N_Package_Renaming_Declaration\n         or else Unit_Kind in N_Generic_Renaming_Declaration"}]}