{"sha": "ce71f7547b64febdfdcf16b5fa9ab8df5449eca9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U3MWY3NTQ3YjY0ZmViZGZkY2YxNmI1ZmE5YWI4ZGY1NDQ5ZWNhOQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2002-07-26T02:47:35Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2002-07-26T02:47:35Z"}, "message": "rs6000.md: Enable patterns using rlwinm for PowerPC64.\n\n\t* config/rs6000/rs6000.md: Enable patterns using rlwinm for\n\tPowerPC64.  Replace \"T\" and \"S\" constraints with \"n\" when the\n\tpredicate will do.  Formatting fixes.\n\t(extzvsi_internal2): Use \"andi.\", \"andis.\" and attr type of \"compare\"\n\tas for extzvsi_internal1.\n\nFrom-SVN: r55770", "tree": {"sha": "51ab103fbd82a314bdf93f7457f52bcd097571e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51ab103fbd82a314bdf93f7457f52bcd097571e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce71f7547b64febdfdcf16b5fa9ab8df5449eca9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce71f7547b64febdfdcf16b5fa9ab8df5449eca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce71f7547b64febdfdcf16b5fa9ab8df5449eca9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce71f7547b64febdfdcf16b5fa9ab8df5449eca9/comments", "author": null, "committer": null, "parents": [{"sha": "7702af3606f28135c3d9a52029d8b89c283c0fd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7702af3606f28135c3d9a52029d8b89c283c0fd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7702af3606f28135c3d9a52029d8b89c283c0fd2"}], "stats": {"total": 101, "additions": 56, "deletions": 45}, "files": [{"sha": "da23465410f65aaaa8750e09cfdda817ccdc3c18", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce71f7547b64febdfdcf16b5fa9ab8df5449eca9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce71f7547b64febdfdcf16b5fa9ab8df5449eca9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce71f7547b64febdfdcf16b5fa9ab8df5449eca9", "patch": "@@ -1,3 +1,11 @@\n+2002-07-26  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/rs6000.md: Enable patterns using rlwinm for\n+\tPowerPC64.  Replace \"T\" and \"S\" constraints with \"n\" when the\n+\tpredicate will do.  Formatting fixes.\n+\t(extzvsi_internal2): Use \"andi.\", \"andis.\" and attr type of \"compare\"\n+\tas for extzvsi_internal1.\n+\n 2002-07-25  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* dwarfout.c (VERSION_ASM_OP, DERIV_BEGIN_LABEL_FMT,"}, {"sha": "bfa04ab2a842561df3b3ab6e4482b975475a2771", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 48, "deletions": 45, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce71f7547b64febdfdcf16b5fa9ab8df5449eca9/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce71f7547b64febdfdcf16b5fa9ab8df5449eca9/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=ce71f7547b64febdfdcf16b5fa9ab8df5449eca9", "patch": "@@ -3811,7 +3811,7 @@\n \t\t\t (match_operand:SI 3 \"const_int_operand\" \"i,i\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 4 \"=r,r\"))]\n-  \"! TARGET_POWERPC64\"\n+  \"\"\n   \"*\n {\n   int start = INTVAL (operands[3]) & 31;\n@@ -3853,7 +3853,7 @@\n \t\t\t (match_operand:SI 3 \"const_int_operand\" \"\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 4 \"\"))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"reload_completed\"\n   [(set (match_dup 4)\n \t(zero_extract:SI (match_dup 1) (match_dup 2)\n \t\t\t (match_dup 3)))\n@@ -3870,7 +3870,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extract:SI (match_dup 1) (match_dup 2) (match_dup 3)))]\n-  \"! TARGET_POWERPC64\"\n+  \"\"\n   \"*\n {\n   int start = INTVAL (operands[3]) & 31;\n@@ -3880,10 +3880,14 @@\n   if (which_alternative == 1)\n      return \\\"#\\\";\n \n-  if (start >= 16 && start + size == 32)\n+  if ((start > 0 && start + size <= 16) || start >= 16)\n     {\n-      operands[3] = GEN_INT ((1 << (32 - start)) - 1);\n-      return \\\"{andil.|andi.} %0,%1,%3\\\";\n+      operands[3] = GEN_INT (((1 << (16 - (start & 15)))\n+\t\t\t      - (1 << (16 - (start & 15) - size))));\n+      if (start < 16)\n+\treturn \\\"{andiu.|andis.} %0,%1,%3\\\";\n+      else\n+\treturn \\\"{andil.|andi.} %0,%1,%3\\\";\n     }\n \n   if (start + size >= 32)\n@@ -3892,7 +3896,7 @@\n     operands[3] = GEN_INT (start + size);\n   return \\\"{rlinm.|rlwinm.} %0,%1,%3,%s2,31\\\";\n }\"\n-  [(set_attr \"type\" \"delayed_compare\")\n+  [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -3903,7 +3907,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(zero_extract:SI (match_dup 1) (match_dup 2) (match_dup 3)))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"reload_completed\"\n   [(set (match_dup 0)\n \t(zero_extract:SI (match_dup 1) (match_dup 2) (match_dup 3)))\n    (set (match_dup 4)\n@@ -3986,7 +3990,7 @@\n \t\t\t       (match_operand:SI 2 \"reg_or_cint_operand\" \"ri,ri\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r,r\"))]\n-  \"! TARGET_POWERPC64\"\n+  \"\"\n   \"@\n    {rl%I2nm.|rlw%I2nm.} %3,%1,%h2,0xffffffff\n    #\"\n@@ -3999,7 +4003,7 @@\n \t\t\t       (match_operand:SI 2 \"reg_or_cint_operand\" \"\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"\"))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"reload_completed\"\n   [(set (match_dup 3)\n \t(rotate:SI (match_dup 1) (match_dup 2)))\n    (set (match_dup 0)\n@@ -4014,7 +4018,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(rotate:SI (match_dup 1) (match_dup 2)))]\n-  \"! TARGET_POWERPC64\"\n+  \"\"\n   \"@\n    {rl%I2nm.|rlw%I2nm.} %0,%1,%h2,0xffffffff\n    #\"\n@@ -4028,7 +4032,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(rotate:SI (match_dup 1) (match_dup 2)))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"reload_completed\"\n   [(set (match_dup 0)\n \t(rotate:SI (match_dup 1) (match_dup 2)))\n    (set (match_dup 3)\n@@ -4040,7 +4044,7 @@\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(and:SI (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t   (match_operand:SI 2 \"reg_or_cint_operand\" \"ri\"))\n-\t\t(match_operand:SI 3 \"mask_operand\" \"T\")))]\n+\t\t(match_operand:SI 3 \"mask_operand\" \"n\")))]\n   \"\"\n   \"{rl%I2nm|rlw%I2nm} %0,%1,%h2,%m3,%M3\")\n \n@@ -4049,10 +4053,10 @@\n \t(compare:CC (and:SI\n \t\t     (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t\t(match_operand:SI 2 \"reg_or_cint_operand\" \"ri,ri\"))\n-\t\t     (match_operand:SI 3 \"mask_operand\" \"T,T\"))\n+\t\t     (match_operand:SI 3 \"mask_operand\" \"n,n\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 4 \"=r,r\"))]\n-  \"! TARGET_POWERPC64\"\n+  \"\"\n   \"@\n    {rl%I2nm.|rlw%I2nm.} %4,%1,%h2,%m3,%M3\n    #\"\n@@ -4067,7 +4071,7 @@\n \t\t     (match_operand:SI 3 \"mask_operand\" \"\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 4 \"\"))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"reload_completed\"\n   [(set (match_dup 4)\n \t(and:SI (rotate:SI (match_dup 1)\n \t\t\t\t(match_dup 2))\n@@ -4082,11 +4086,11 @@\n \t(compare:CC (and:SI\n \t\t     (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t\t(match_operand:SI 2 \"reg_or_cint_operand\" \"ri,ri\"))\n-\t\t     (match_operand:SI 3 \"mask_operand\" \"T,T\"))\n+\t\t     (match_operand:SI 3 \"mask_operand\" \"n,n\"))\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(and:SI (rotate:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"! TARGET_POWERPC64\"\n+  \"\"\n   \"@\n    {rl%I2nm.|rlw%I2nm.} %0,%1,%h2,%m3,%M3\n    #\"\n@@ -4102,7 +4106,7 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(and:SI (rotate:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"reload_completed\"\n   [(set (match_dup 0)\n \t(and:SI (rotate:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n    (set (match_dup 4)\n@@ -4420,7 +4424,7 @@\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(and:SI (ashift:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t   (match_operand:SI 2 \"const_int_operand\" \"i\"))\n-\t\t(match_operand:SI 3 \"mask_operand\" \"T\")))]\n+\t\t(match_operand:SI 3 \"mask_operand\" \"n\")))]\n   \"includes_lshift_p (operands[2], operands[3])\"\n   \"{rlinm|rlwinm} %0,%1,%h2,%m3,%M3\")\n \n@@ -4429,10 +4433,10 @@\n \t(compare:CC\n \t (and:SI (ashift:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t    (match_operand:SI 2 \"const_int_operand\" \"i,i\"))\n-\t\t (match_operand:SI 3 \"mask_operand\" \"T,T\"))\n+\t\t (match_operand:SI 3 \"mask_operand\" \"n,n\"))\n \t (const_int 0)))\n    (clobber (match_scratch:SI 4 \"=r,r\"))]\n-  \"! TARGET_POWERPC64 && includes_lshift_p (operands[2], operands[3])\"\n+  \"includes_lshift_p (operands[2], operands[3])\"\n   \"@\n    {rlinm.|rlwinm.} %4,%1,%h2,%m3,%M3\n    #\"\n@@ -4447,7 +4451,7 @@\n \t\t (match_operand:SI 3 \"mask_operand\" \"\"))\n \t (const_int 0)))\n    (clobber (match_scratch:SI 4 \"\"))]\n-  \"! TARGET_POWERPC64 && includes_lshift_p (operands[2], operands[3]) && reload_completed\"\n+  \"includes_lshift_p (operands[2], operands[3]) && reload_completed\"\n   [(set (match_dup 4)\n \t(and:SI (ashift:SI (match_dup 1) (match_dup 2))\n \t\t (match_dup 3)))\n@@ -4461,11 +4465,11 @@\n \t(compare:CC\n \t (and:SI (ashift:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t    (match_operand:SI 2 \"const_int_operand\" \"i,i\"))\n-\t\t (match_operand:SI 3 \"mask_operand\" \"T,T\"))\n+\t\t (match_operand:SI 3 \"mask_operand\" \"n,n\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(and:SI (ashift:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"! TARGET_POWERPC64 && includes_lshift_p (operands[2], operands[3])\"\n+  \"includes_lshift_p (operands[2], operands[3])\"\n   \"@\n    {rlinm.|rlwinm.} %0,%1,%h2,%m3,%M3\n    #\"\n@@ -4481,7 +4485,7 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(and:SI (ashift:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"! TARGET_POWERPC64 && includes_lshift_p (operands[2], operands[3]) && reload_completed\"\n+  \"includes_lshift_p (operands[2], operands[3]) && reload_completed\"\n   [(set (match_dup 0)\n \t(and:SI (ashift:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n    (set (match_dup 4)\n@@ -4659,7 +4663,7 @@\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(and:SI (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t     (match_operand:SI 2 \"const_int_operand\" \"i\"))\n-\t\t(match_operand:SI 3 \"mask_operand\" \"T\")))]\n+\t\t(match_operand:SI 3 \"mask_operand\" \"n\")))]\n   \"includes_rshift_p (operands[2], operands[3])\"\n   \"{rlinm|rlwinm} %0,%1,%s2,%m3,%M3\")\n \n@@ -4668,10 +4672,10 @@\n \t(compare:CC\n \t (and:SI (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t      (match_operand:SI 2 \"const_int_operand\" \"i,i\"))\n-\t\t (match_operand:SI 3 \"mask_operand\" \"T,T\"))\n+\t\t (match_operand:SI 3 \"mask_operand\" \"n,n\"))\n \t (const_int 0)))\n    (clobber (match_scratch:SI 4 \"=r,r\"))]\n-  \"! TARGET_POWERPC64 && includes_rshift_p (operands[2], operands[3])\"\n+  \"includes_rshift_p (operands[2], operands[3])\"\n   \"@\n    {rlinm.|rlwinm.} %4,%1,%s2,%m3,%M3\n    #\"\n@@ -4686,7 +4690,7 @@\n \t\t (match_operand:SI 3 \"mask_operand\" \"\"))\n \t (const_int 0)))\n    (clobber (match_scratch:SI 4 \"\"))]\n-  \"! TARGET_POWERPC64 && includes_rshift_p (operands[2], operands[3]) && reload_completed\"\n+  \"includes_rshift_p (operands[2], operands[3]) && reload_completed\"\n   [(set (match_dup 4)\n \t(and:SI (lshiftrt:SI (match_dup 1) (match_dup 2))\n \t\t (match_dup 3)))\n@@ -4700,11 +4704,11 @@\n \t(compare:CC\n \t (and:SI (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t      (match_operand:SI 2 \"const_int_operand\" \"i,i\"))\n-\t\t (match_operand:SI 3 \"mask_operand\" \"T,T\"))\n+\t\t (match_operand:SI 3 \"mask_operand\" \"n,n\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(and:SI (lshiftrt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"! TARGET_POWERPC64 && includes_rshift_p (operands[2], operands[3])\"\n+  \"includes_rshift_p (operands[2], operands[3])\"\n   \"@\n    {rlinm.|rlwinm.} %0,%1,%s2,%m3,%M3\n    #\"\n@@ -4720,7 +4724,7 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(and:SI (lshiftrt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"! TARGET_POWERPC64 && includes_rshift_p (operands[2], operands[3]) && reload_completed\"\n+  \"includes_rshift_p (operands[2], operands[3]) && reload_completed\"\n   [(set (match_dup 0)\n \t(and:SI (lshiftrt:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n    (set (match_dup 4)\n@@ -6834,7 +6838,7 @@\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(and:DI (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t   (match_operand:DI 2 \"reg_or_cint_operand\" \"ri\"))\n-\t\t(match_operand:DI 3 \"mask64_operand\" \"S\")))]\n+\t\t(match_operand:DI 3 \"mask64_operand\" \"n\")))]\n   \"TARGET_POWERPC64\"\n   \"rld%I2c%B3 %0,%1,%H2,%S3\")\n \n@@ -6843,7 +6847,7 @@\n \t(compare:CC (and:DI\n \t\t     (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t\t(match_operand:DI 2 \"reg_or_cint_operand\" \"ri,ri\"))\n-\t\t     (match_operand:DI 3 \"mask64_operand\" \"S,S\"))\n+\t\t     (match_operand:DI 3 \"mask64_operand\" \"n,n\"))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:DI 4 \"=r,r\"))]\n   \"TARGET_POWERPC64\"\n@@ -6876,7 +6880,7 @@\n \t(compare:CC (and:DI\n \t\t     (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t\t(match_operand:DI 2 \"reg_or_cint_operand\" \"ri,ri\"))\n-\t\t     (match_operand:DI 3 \"mask64_operand\" \"S,S\"))\n+\t\t     (match_operand:DI 3 \"mask64_operand\" \"n,n\"))\n \t\t    (const_int 0)))\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(and:DI (rotate:DI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n@@ -7291,7 +7295,7 @@\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(and:DI (ashift:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n \t\t\t   (match_operand:SI 2 \"const_int_operand\" \"i\"))\n-\t\t(match_operand:DI 3 \"mask64_operand\" \"S\")))]\n+\t\t(match_operand:DI 3 \"mask64_operand\" \"n\")))]\n   \"TARGET_POWERPC64 && includes_rldicr_lshift_p (operands[2], operands[3])\"\n   \"rldicr %0,%1,%H2,%S3\")\n \n@@ -7300,7 +7304,7 @@\n \t(compare:CC\n \t (and:DI (ashift:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t    (match_operand:SI 2 \"const_int_operand\" \"i,i\"))\n-\t\t (match_operand:DI 3 \"mask64_operand\" \"S,S\"))\n+\t\t (match_operand:DI 3 \"mask64_operand\" \"n,n\"))\n \t (const_int 0)))\n    (clobber (match_scratch:DI 4 \"=r,r\"))]\n   \"TARGET_POWERPC64 && includes_rldicr_lshift_p (operands[2], operands[3])\"\n@@ -7333,7 +7337,7 @@\n \t(compare:CC\n \t (and:DI (ashift:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t\t    (match_operand:SI 2 \"const_int_operand\" \"i,i\"))\n-\t\t    (match_operand:DI 3 \"mask64_operand\" \"S,S\"))\n+\t\t    (match_operand:DI 3 \"mask64_operand\" \"n,n\"))\n \t (const_int 0)))\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(and:DI (ashift:DI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n@@ -11219,7 +11223,7 @@\n    (set (match_operand:SI 4 \"gpc_reg_operand\" \"=r,r\")\n \t(ashift:SI (match_op_dup 1 [(match_dup 2) (const_int 0)])\n \t\t   (match_dup 3)))]\n-  \"! TARGET_POWERPC64\"\n+  \"\"\n   \"*\n {\n   int is_bit = ccr_bit (operands[1], 1);\n@@ -11254,7 +11258,7 @@\n    (set (match_operand:SI 4 \"gpc_reg_operand\" \"\")\n \t(ashift:SI (match_op_dup 1 [(match_dup 2) (const_int 0)])\n \t\t   (match_dup 3)))]\n-  \"! TARGET_POWERPC64 && reload_completed\"\n+  \"reload_completed\"\n   [(set (match_dup 4)\n \t(ashift:SI (match_op_dup 1 [(match_dup 2) (const_int 0)])\n \t\t   (match_dup 3)))\n@@ -11620,9 +11624,9 @@\n    (clobber (match_scratch:SI 4 \"\"))]\n   \"! TARGET_POWERPC64 && reload_completed\"\n   [(parallel [(set (match_dup 3)\n-                  (plus:SI (lshiftrt:SI (neg:SI (abs:SI (match_dup 1)))\n-                                        (const_int 31))\n-                           (match_dup 2)))\n+\t\t   (plus:SI (lshiftrt:SI (neg:SI (abs:SI (match_dup 1)))\n+\t\t\t\t\t (const_int 31))\n+\t\t\t    (match_dup 2)))\n               (clobber (match_dup 4))])\n    (set (match_dup 0)\n \t(compare:CC (match_dup 3)\n@@ -15105,7 +15109,6 @@\n (define_insn \"altivec_vmrglb\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (vec_merge:V16QI (vec_select:V16QI (match_operand:V16QI 2 \"register_operand\" \"v\")\n-\t\t\t\t\t   \n \t\t\t\t\t   (parallel [(const_int 0)\n \t\t\t\t\t   \t      (const_int 1)\n \t\t\t\t\t   \t      (const_int 2)"}]}