{"sha": "897a73086b2d63a5a6ae79f4276422272eca534d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk3YTczMDg2YjJkNjNhNWE2YWU3OWY0Mjc2NDIyMjcyZWNhNTM0ZA==", "commit": {"author": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2020-02-02T16:23:25Z"}, "committer": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2020-02-02T16:27:47Z"}, "message": "One more fix for PR 91333 - suboptimal register allocation for inline asm\n\n2020-02-02  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/91333\n\t* ira-color.c (struct allocno_color_data): Add member\n\thard_reg_prefs.\n\t(init_allocno_threads): Set the member up.\n\t(bucket_allocno_compare_func): Add compare hard reg\n\tprefs.\n\n2020-02-02  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/91333\n\t* gcc.target/i386/pr91333.c: Add vmovsd to regexp.  Set up count\n\tto 3.", "tree": {"sha": "939e1af19b7cf17819cbbf0f4ff74349fedf8026", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/939e1af19b7cf17819cbbf0f4ff74349fedf8026"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/897a73086b2d63a5a6ae79f4276422272eca534d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/897a73086b2d63a5a6ae79f4276422272eca534d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/897a73086b2d63a5a6ae79f4276422272eca534d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/897a73086b2d63a5a6ae79f4276422272eca534d/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0303907ea5dca0e9bac558ac7bed13a09bd5ffbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0303907ea5dca0e9bac558ac7bed13a09bd5ffbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0303907ea5dca0e9bac558ac7bed13a09bd5ffbc"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "3c0f1176eadba1df60378cf70a9981f42d6d5e4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/897a73086b2d63a5a6ae79f4276422272eca534d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/897a73086b2d63a5a6ae79f4276422272eca534d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=897a73086b2d63a5a6ae79f4276422272eca534d", "patch": "@@ -1,3 +1,12 @@\n+2020-02-02  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/91333\n+\t* ira-color.c (struct allocno_color_data): Add member\n+\thard_reg_prefs.\n+\t(init_allocno_threads): Set the member up.\n+\t(bucket_allocno_compare_func): Add compare hard reg\n+\tprefs.\n+\n 2020-01-31  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tnios2: Support for GOT-relative DW_EH_PE_datarel encoding."}, {"sha": "444cb1e827972df73960a2dd031d9941dd82d1df", "filename": "gcc/ira-color.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/897a73086b2d63a5a6ae79f4276422272eca534d/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/897a73086b2d63a5a6ae79f4276422272eca534d/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=897a73086b2d63a5a6ae79f4276422272eca534d", "patch": "@@ -151,6 +151,8 @@ struct allocno_color_data\n   ira_allocno_t next_thread_allocno;\n   /* All thread frequency.  Defined only for first thread allocno.  */\n   int thread_freq;\n+  /* Sum of frequencies of hard register preferences of the allocno.  */\n+  int hard_reg_prefs;\n };\n \n /* See above.  */\n@@ -2173,6 +2175,7 @@ init_allocno_threads (void)\n   ira_allocno_t a;\n   unsigned int j;\n   bitmap_iterator bi;\n+  ira_pref_t pref;\n \n   EXECUTE_IF_SET_IN_BITMAP (consideration_allocno_bitmap, 0, j, bi)\n     {\n@@ -2181,6 +2184,9 @@ init_allocno_threads (void)\n       ALLOCNO_COLOR_DATA (a)->first_thread_allocno\n \t= ALLOCNO_COLOR_DATA (a)->next_thread_allocno = a;\n       ALLOCNO_COLOR_DATA (a)->thread_freq = ALLOCNO_FREQ (a);\n+      ALLOCNO_COLOR_DATA (a)->hard_reg_prefs = 0;\n+      for (pref = ALLOCNO_PREFS (a); pref != NULL; pref = pref->next_pref)\n+\tALLOCNO_COLOR_DATA (a)->hard_reg_prefs += pref->freq;\n     }\n }\n \n@@ -2251,6 +2257,11 @@ bucket_allocno_compare_func (const void *v1p, const void *v2p)\n   ira_allocno_t t2 = ALLOCNO_COLOR_DATA (a2)->first_thread_allocno;\n   int cl1 = ALLOCNO_CLASS (a1), cl2 = ALLOCNO_CLASS (a2);\n \n+  /* Push allocnos with minimal hard_reg_prefs first.  */\n+  pref1 = ALLOCNO_COLOR_DATA (a1)->hard_reg_prefs;\n+  pref2 = ALLOCNO_COLOR_DATA (a2)->hard_reg_prefs;\n+  if ((diff = pref1 - pref2) != 0)\n+    return diff;\n   /* Push allocnos with minimal conflict_allocno_hard_prefs first.  */\n   pref1 = ALLOCNO_COLOR_DATA (a1)->conflict_allocno_hard_prefs;\n   pref2 = ALLOCNO_COLOR_DATA (a2)->conflict_allocno_hard_prefs;"}, {"sha": "779f1fbb45708c3e600f38674bdb9335791bfe95", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/897a73086b2d63a5a6ae79f4276422272eca534d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/897a73086b2d63a5a6ae79f4276422272eca534d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=897a73086b2d63a5a6ae79f4276422272eca534d", "patch": "@@ -1,3 +1,9 @@\n+2020-02-02  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/91333\n+\t* gcc.target/i386/pr91333.c: Add vmovsd to regexp.  Set up count\n+\tto 3.\n+\n 2020-01-31  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tnios2: Support for GOT-relative DW_EH_PE_datarel encoding."}, {"sha": "269491202ae75904e7571ec03a4f6fb0d34331d7", "filename": "gcc/testsuite/gcc.target/i386/pr91333.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/897a73086b2d63a5a6ae79f4276422272eca534d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr91333.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/897a73086b2d63a5a6ae79f4276422272eca534d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr91333.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr91333.c?ref=897a73086b2d63a5a6ae79f4276422272eca534d", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target x86_64-*-* } } */\n /* { dg-options \"-O2 -mavx\" } */\n-/* { dg-final { scan-assembler-times \"vmovapd\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vmovapd|vmovsd\" 3 } } */\n \n static inline double g (double x){\n   asm volatile (\"\" : \"+x\" (x));"}]}