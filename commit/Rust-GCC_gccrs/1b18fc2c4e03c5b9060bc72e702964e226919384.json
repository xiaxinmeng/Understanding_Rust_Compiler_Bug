{"sha": "1b18fc2c4e03c5b9060bc72e702964e226919384", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIxOGZjMmM0ZTAzYzViOTA2MGJjNzJlNzAyOTY0ZTIyNjkxOTM4NA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2002-05-14T08:35:59Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2002-05-14T08:35:59Z"}, "message": "varasm.c (resolve_unique_section): Add third parameter flag_function_or_data_sections and use it instead of...\n\n\t* varasm.c (resolve_unique_section): Add third parameter\n\tflag_function_or_data_sections and use it instead of\n\tflag_function_sections.\n\t(assemble_start_function): Pass flag_function_sections.\n\t(asm_emit_uninitialised): Pass flag_data_sections.\n\t(assemble_variable): Likewise.\n\nFrom-SVN: r53449", "tree": {"sha": "aa0f1380391acc40ac9eede85e33d97940e9396d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa0f1380391acc40ac9eede85e33d97940e9396d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b18fc2c4e03c5b9060bc72e702964e226919384", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b18fc2c4e03c5b9060bc72e702964e226919384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b18fc2c4e03c5b9060bc72e702964e226919384", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b18fc2c4e03c5b9060bc72e702964e226919384/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ee41eaf1600541582f3649d8e52fc94358a4791", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ee41eaf1600541582f3649d8e52fc94358a4791", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ee41eaf1600541582f3649d8e52fc94358a4791"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "65cca91e2e2d07619a7c38111104063f3cf7242b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b18fc2c4e03c5b9060bc72e702964e226919384/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b18fc2c4e03c5b9060bc72e702964e226919384/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b18fc2c4e03c5b9060bc72e702964e226919384", "patch": "@@ -1,3 +1,12 @@\n+2002-05-13  Andreas Schwab  <schwab@suse.de>\n+\n+\t* varasm.c (resolve_unique_section): Add third parameter\n+\tflag_function_or_data_sections and use it instead of\n+\tflag_function_sections.\n+\t(assemble_start_function): Pass flag_function_sections.\n+\t(asm_emit_uninitialised): Pass flag_data_sections.\n+\t(assemble_variable): Likewise.\n+\n 2002-05-14  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.md: Use define_constants for unspec numbers."}, {"sha": "cb19e4f09a037b6eac5c02b1dc6818b133131a75", "filename": "gcc/varasm.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b18fc2c4e03c5b9060bc72e702964e226919384/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b18fc2c4e03c5b9060bc72e702964e226919384/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=1b18fc2c4e03c5b9060bc72e702964e226919384", "patch": "@@ -183,7 +183,7 @@ static hashval_t const_str_htab_hash\tPARAMS ((const void *x));\n static int const_str_htab_eq\t\tPARAMS ((const void *x, const void *y));\n static void const_str_htab_del\t\tPARAMS ((void *));\n static void asm_emit_uninitialised\tPARAMS ((tree, const char*, int, int));\n-static void resolve_unique_section\tPARAMS ((tree, int));\n+static void resolve_unique_section\tPARAMS ((tree, int, int));\n static void mark_weak                   PARAMS ((tree));\n \f\n static enum in_section { no_section, in_text, in_data, in_named\n@@ -459,12 +459,13 @@ named_section (decl, name, reloc)\n /* If required, set DECL_SECTION_NAME to a unique name.  */\n \n static void\n-resolve_unique_section (decl, reloc)\n+resolve_unique_section (decl, reloc, flag_function_or_data_sections)\n      tree decl;\n      int reloc ATTRIBUTE_UNUSED;\n+     int flag_function_or_data_sections;\n {\n   if (DECL_SECTION_NAME (decl) == NULL_TREE\n-      && (flag_function_sections\n+      && (flag_function_or_data_sections\n \t  || (targetm.have_named_sections\n \t      && DECL_ONE_ONLY (decl))))\n     UNIQUE_SECTION (decl, reloc);\n@@ -1183,7 +1184,7 @@ assemble_start_function (decl, fnname)\n   if (CONSTANT_POOL_BEFORE_FUNCTION)\n     output_constant_pool (fnname, decl);\n \n-  resolve_unique_section (decl, 0);\n+  resolve_unique_section (decl, 0, flag_function_sections);\n   function_section (decl);\n \n   /* Tell assembler to move to target machine's alignment for functions.  */\n@@ -1394,7 +1395,7 @@ asm_emit_uninitialised (decl, name, size, rounded)\n \n   if (destination == asm_dest_bss)\n     globalize_decl (decl);\n-  resolve_unique_section (decl, 0);\n+  resolve_unique_section (decl, 0, flag_data_sections);\n \n   if (flag_shared_data)\n     {\n@@ -1595,7 +1596,7 @@ assemble_variable (decl, top_level, at_end, dont_output_data)\n     reloc = contains_pointers_p (TREE_TYPE (decl)) ? 3 : 0;\n   else if (DECL_INITIAL (decl))\n     reloc = output_addressed_constants (DECL_INITIAL (decl));\n-  resolve_unique_section (decl, reloc);\n+  resolve_unique_section (decl, reloc, flag_data_section);\n \n   /* Handle uninitialized definitions.  */\n "}]}