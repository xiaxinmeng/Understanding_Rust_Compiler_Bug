{"sha": "f6fb661ea8ac7e17c6924719de6219f002c4efef", "node_id": "C_kwDOANBUbNoAKGY2ZmI2NjFlYThhYzdlMTdjNjkyNDcxOWRlNjIxOWYwMDJjNGVmZWY", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-03-16T12:39:31Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-03-16T13:00:35Z"}, "message": "tree-optimization/102008 - restore if-conversion of adjacent loads\n\nThe following re-orders the newly added code sinking pass before\nthe last phiopt pass which performs hoisting of adjacent loads\nwith the intent to enable if-conversion on those.\n\nI've added the aarch64 specific testcase from the PR.\n\n2022-03-16  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/102008\n\t* passes.def: Move the added code sinking pass before the\n\tpreceeding phiopt pass.\n\n\t* gcc.target/aarch64/pr102008.c: New testcase.", "tree": {"sha": "d564d09225f6ffcdf32d93e02a5de82bf16e5bc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d564d09225f6ffcdf32d93e02a5de82bf16e5bc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6fb661ea8ac7e17c6924719de6219f002c4efef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6fb661ea8ac7e17c6924719de6219f002c4efef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6fb661ea8ac7e17c6924719de6219f002c4efef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6fb661ea8ac7e17c6924719de6219f002c4efef/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5809bb4f78c9aae0f3be3c8d942b6af75ba23a74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5809bb4f78c9aae0f3be3c8d942b6af75ba23a74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5809bb4f78c9aae0f3be3c8d942b6af75ba23a74"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "c8903b4ec16ba13b5ebc1be91ccdff0db011a879", "filename": "gcc/passes.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6fb661ea8ac7e17c6924719de6219f002c4efef/gcc%2Fpasses.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6fb661ea8ac7e17c6924719de6219f002c4efef/gcc%2Fpasses.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.def?ref=f6fb661ea8ac7e17c6924719de6219f002c4efef", "patch": "@@ -349,10 +349,10 @@ along with GCC; see the file COPYING3.  If not see\n       /* After late CD DCE we rewrite no longer addressed locals into SSA\n \t form if possible.  */\n       NEXT_PASS (pass_forwprop);\n+      NEXT_PASS (pass_sink_code);\n       NEXT_PASS (pass_phiopt, false /* early_p */);\n       NEXT_PASS (pass_fold_builtins);\n       NEXT_PASS (pass_optimize_widening_mul);\n-      NEXT_PASS (pass_sink_code);\n       NEXT_PASS (pass_store_merging);\n       NEXT_PASS (pass_tail_calls);\n       /* If DCE is not run before checking for uninitialized uses,"}, {"sha": "d54436c0ffd678620001c6933d00cbac1a042e42", "filename": "gcc/testsuite/gcc.target/aarch64/pr102008.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6fb661ea8ac7e17c6924719de6219f002c4efef/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr102008.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6fb661ea8ac7e17c6924719de6219f002c4efef/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr102008.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr102008.c?ref=f6fb661ea8ac7e17c6924719de6219f002c4efef", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+struct Foo {  int a;  int b; };\n+\n+int test(int side, const struct Foo *foo) {\n+  if (side == 1) return foo->a;\n+  return foo->b;\n+}\n+\n+/* We want to if-convert the load, not the address.  */\n+/* { dg-final { scan-assembler-not \"add\" } } */\n+/* { dg-final { scan-assembler-times \"csel\" 1 } } */"}]}