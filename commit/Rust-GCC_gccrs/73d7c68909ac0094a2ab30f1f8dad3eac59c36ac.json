{"sha": "73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNkN2M2ODkwOWFjMDA5NGEyYWIzMGYxZjhkYWQzZWFjNTljMzZhYw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-02-16T00:19:55Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-02-16T00:19:55Z"}, "message": "virtual.java: New file.\n\n\t* libjava.jni/virtual.java: New file.\n\t* libjava.jni/virtual.c: New file.\n\t* libjava.jni/virtual.out: New file.\n\t* libjava.jni/final_method.java: New file.\n\t* libjava.jni/final_method.c: New file.\n\t* libjava.jni/final_method.out: New file.\n\t* libjava.jni/overload.java: New file.\n\t* libjava.jni/overload.c: New file.\n\t* libjava.jni/overload.out: New file.\n\t* libjava.jni/simple_int.java: New file.\n\t* libjava.jni/simple_int.c: New file.\n\t* libjava.jni/simple_int.out: New file.\n\t* libjava.jni/invoke.out: New file.\n\t* libjava.jni/invoke.c: New file.\n\t* libjava.jni/invoke.java: New file.\n\nFrom-SVN: r31996", "tree": {"sha": "bfa2a45edf04bc07094e45a403b1684c143315d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfa2a45edf04bc07094e45a403b1684c143315d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/comments", "author": null, "committer": null, "parents": [{"sha": "d348bda453c2ec3ebe67ff3208822e040960ccb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d348bda453c2ec3ebe67ff3208822e040960ccb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d348bda453c2ec3ebe67ff3208822e040960ccb6"}], "stats": {"total": 156, "additions": 156, "deletions": 0}, "files": [{"sha": "c162f7c00a1913b8298639bc9bdaff4b9958652e", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "patch": "@@ -1,3 +1,21 @@\n+2000-02-15  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* libjava.jni/virtual.java: New file.\n+\t* libjava.jni/virtual.c: New file.\n+\t* libjava.jni/virtual.out: New file.\n+\t* libjava.jni/final_method.java: New file.\n+\t* libjava.jni/final_method.c: New file.\n+\t* libjava.jni/final_method.out: New file.\n+\t* libjava.jni/overload.java: New file.\n+\t* libjava.jni/overload.c: New file.\n+\t* libjava.jni/overload.out: New file.\n+\t* libjava.jni/simple_int.java: New file.\n+\t* libjava.jni/simple_int.c: New file.\n+\t* libjava.jni/simple_int.out: New file.\n+\t* libjava.jni/invoke.out: New file.\n+\t* libjava.jni/invoke.c: New file.\n+\t* libjava.jni/invoke.java: New file.\n+\n 2000-02-12  Anthony Green  <green@cygnus.com>\n \n \t* libjava.compile/comment.java: New file."}, {"sha": "82977374bcbbd64060cc7256806d3fdc90777e92", "filename": "libjava/testsuite/libjava.jni/final_method.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Ffinal_method.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Ffinal_method.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Ffinal_method.c?ref=73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "patch": "@@ -0,0 +1,7 @@\n+#include <final_method.h>\n+\n+jstring\n+Java_final_1method_meth (JNIEnv *env, jobject thisv)\n+{\n+  return (*env)->NewStringUTF (env, \"zardoz has spoken\");\n+}"}, {"sha": "dcb684e0849740a6c57dd7e64582c5476b8a89db", "filename": "libjava/testsuite/libjava.jni/final_method.java", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Ffinal_method.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Ffinal_method.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Ffinal_method.java?ref=73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "patch": "@@ -0,0 +1,17 @@\n+// Minimal test a non-static final method.\n+\n+public class final_method\n+{\n+  static\n+  {\n+    System.loadLibrary (\"final_method\");\n+  }\n+\n+  public final native String meth ();\n+\n+  public static void main (String[] args)\n+  {\n+    final_method fm = new final_method ();\n+    System.out.println (fm.meth ());\n+  }\n+}"}, {"sha": "d93c9b5587ea69aedfbfad3ecdcdd3c8996c442f", "filename": "libjava/testsuite/libjava.jni/final_method.out", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Ffinal_method.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Ffinal_method.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Ffinal_method.out?ref=73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "patch": "@@ -0,0 +1 @@\n+zardoz has spoken"}, {"sha": "35a446eae25bee9db1580903a9c5f8672eee99d3", "filename": "libjava/testsuite/libjava.jni/invoke.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Finvoke.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Finvoke.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Finvoke.c?ref=73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "patch": "@@ -0,0 +1,7 @@\n+#include <invoke.h>\n+\n+jint\n+Java_invoke_val (JNIEnv *env, jclass klass)\n+{\n+  return 23;\n+}"}, {"sha": "91c9d374701979d7de4f9bd6bda57321a9b14147", "filename": "libjava/testsuite/libjava.jni/invoke.java", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Finvoke.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Finvoke.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Finvoke.java?ref=73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "patch": "@@ -0,0 +1,18 @@\n+// Test to make sure the minimal invocation works.\n+\n+public class invoke\n+{\n+  public static native int val ();\n+\n+  static\n+  {\n+    System.out.println (\"trying...\");\n+    System.loadLibrary (\"invoke\");\n+    System.out.println (\"loaded\");\n+  }\n+\n+  public static void main (String[] args)\n+  {\n+    System.out.println (val ());\n+  }\n+}"}, {"sha": "f59a6d2e495f7ef9ede24d15b0e395176fc91b69", "filename": "libjava/testsuite/libjava.jni/invoke.out", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Finvoke.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Finvoke.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Finvoke.out?ref=73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "patch": "@@ -0,0 +1,3 @@\n+trying...\n+loaded\n+23"}, {"sha": "d171fc3ac9b32776325644877e709c4ec6a3400a", "filename": "libjava/testsuite/libjava.jni/overload.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Foverload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Foverload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Foverload.c?ref=73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "patch": "@@ -0,0 +1,16 @@\n+#include <overload.h>\n+\n+jint\n+Java_overload_over__I (JNIEnv *env, jclass klass, jint val)\n+{\n+  return val;\n+}\n+\n+\n+jint\n+Java_overload_over__II (JNIEnv *env, jclass klass, jint one, jint two)\n+{\n+  return one + two;\n+}\n+\n+"}, {"sha": "c2e6037a50cf8f13016eb20854f898fb4872c51d", "filename": "libjava/testsuite/libjava.jni/overload.java", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Foverload.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Foverload.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Foverload.java?ref=73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "patch": "@@ -0,0 +1,18 @@\n+// Test to make sure overloaded functions with long names work.\n+\n+public class overload\n+{\n+  static\n+  {\n+    System.loadLibrary (\"overload\");\n+  }\n+\n+  public static native int over (int one);\n+  public static native int over (int one, int two);\n+\n+  public static void main (String[] args)\n+  {\n+    System.out.println (over (1));\n+    System.out.println (over (1, 2));\n+  }\n+}"}, {"sha": "2b2f2e1b9261c50c3816610eb3eb140fabf1745a", "filename": "libjava/testsuite/libjava.jni/overload.out", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Foverload.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Foverload.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Foverload.out?ref=73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "patch": "@@ -0,0 +1,2 @@\n+1\n+3"}, {"sha": "a86f2d2babd7f20c3c9e0796b5550e531db9ab59", "filename": "libjava/testsuite/libjava.jni/simple_int.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Fsimple_int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Fsimple_int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fsimple_int.c?ref=73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "patch": "@@ -0,0 +1,7 @@\n+#include <simple_int.h>\n+\n+jint\n+Java_simple_1int_nat (JNIEnv *env, jclass klass, jint val)\n+{\n+  return 2 * val;\n+}"}, {"sha": "6306c4e9335ae27be3e70166dca3e997e7eedb54", "filename": "libjava/testsuite/libjava.jni/simple_int.java", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Fsimple_int.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Fsimple_int.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fsimple_int.java?ref=73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "patch": "@@ -0,0 +1,16 @@\n+// Test a simple static function with an `int' argument.\n+\n+public class simple_int\n+{\n+  public static native int nat (int z);\n+\n+  static\n+  {\n+    System.loadLibrary (\"simple_int\");\n+  }\n+\n+  public static void main (String[] args)\n+  {\n+    System.out.println (nat (23));\n+  }\n+}"}, {"sha": "9e5feb5256930f3cae636754eef8a244ede164eb", "filename": "libjava/testsuite/libjava.jni/simple_int.out", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Fsimple_int.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Fsimple_int.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fsimple_int.out?ref=73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "patch": "@@ -0,0 +1 @@\n+46"}, {"sha": "bda837df10297870b7a93ddaf6efbc770efcf680", "filename": "libjava/testsuite/libjava.jni/virtual.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Fvirtual.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Fvirtual.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fvirtual.c?ref=73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "patch": "@@ -0,0 +1,7 @@\n+#include <virtual.h>\n+\n+jboolean\n+Java_virtual_equals (JNIEnv *env, jobject thisv, jobject other)\n+{\n+  return JNI_FALSE;\n+}"}, {"sha": "496389ce5e3bb6cda306bebd71fccff09cd48226", "filename": "libjava/testsuite/libjava.jni/virtual.java", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Fvirtual.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Fvirtual.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fvirtual.java?ref=73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "patch": "@@ -0,0 +1,17 @@\n+// Minimal test of a virtual method.\n+\n+public class virtual\n+{\n+  static\n+  {\n+    System.loadLibrary (\"virtual\");\n+  }\n+\n+  public native boolean equals (Object obj);\n+\n+  public static void main (String[] args)\n+  {\n+    Object v = new virtual ();\n+    System.out.println (v.equals (v));\n+  }\n+}"}, {"sha": "c508d5366f70bba37fcc09d128b6537c4adb2c79", "filename": "libjava/testsuite/libjava.jni/virtual.out", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Fvirtual.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73d7c68909ac0094a2ab30f1f8dad3eac59c36ac/libjava%2Ftestsuite%2Flibjava.jni%2Fvirtual.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fvirtual.out?ref=73d7c68909ac0094a2ab30f1f8dad3eac59c36ac", "patch": "@@ -0,0 +1 @@\n+false"}]}