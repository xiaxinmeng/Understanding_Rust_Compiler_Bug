{"sha": "3df3ca9014f94fe4af07444fea19b4ab29ba8e73", "node_id": "C_kwDOANBUbNoAKDNkZjNjYTkwMTRmOTRmZTRhZjA3NDQ0ZmVhMTliNGFiMjliYThlNzM", "commit": {"author": {"name": "ShiYulong", "email": "shiyulong@iscas.ac.cn", "date": "2022-05-10T03:25:25Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-05-24T13:00:39Z"}, "message": "RISC-V: Cache Management Operation instructions\n\nThis commit adds cbo.clea, cbo.flush, cbo.inval, cbo.zero, prefetch.i,\nprefetch.r and prefetch.w instructions.\n\ndiff with the previous version:\nWe use unspec_volatile instead of unspec for those cache operations.\nWe use UNSPECV instead of UNSPEC and move them to unspecv.\n\ngcc/ChangeLog:\n\n\t* config/riscv/predicates.md (imm5_operand): Add a new operand type for\n\tprefetch instructions.\n\t* config/riscv/riscv-builtins.cc (AVAIL): Add new AVAILs for CMO ISA\n\tExtensions.\n\t(RISCV_ATYPE_SI): New.\n\t(RISCV_ATYPE_DI): New.\n\t* config/riscv/riscv-ftypes.def (0): New.\n\t(1): New.\n\t* config/riscv/riscv.md (riscv_clean_<mode>): New.\n\t(riscv_flush_<mode>): New.\n\t(riscv_inval_<mode>): New.\n\t(riscv_zero_<mode>): New.\n\t(prefetch): New.\n\t(riscv_prefetchi_<mode>): New.\n\t* config/riscv/riscv-cmo.def: New file.", "tree": {"sha": "5e893fc3dd82f628ba514e0e668c82fa9f3bb09b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e893fc3dd82f628ba514e0e668c82fa9f3bb09b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3df3ca9014f94fe4af07444fea19b4ab29ba8e73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3df3ca9014f94fe4af07444fea19b4ab29ba8e73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3df3ca9014f94fe4af07444fea19b4ab29ba8e73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3df3ca9014f94fe4af07444fea19b4ab29ba8e73/comments", "author": {"login": "yulong-plct", "id": 94943299, "node_id": "U_kgDOBai4Qw", "avatar_url": "https://avatars.githubusercontent.com/u/94943299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yulong-plct", "html_url": "https://github.com/yulong-plct", "followers_url": "https://api.github.com/users/yulong-plct/followers", "following_url": "https://api.github.com/users/yulong-plct/following{/other_user}", "gists_url": "https://api.github.com/users/yulong-plct/gists{/gist_id}", "starred_url": "https://api.github.com/users/yulong-plct/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yulong-plct/subscriptions", "organizations_url": "https://api.github.com/users/yulong-plct/orgs", "repos_url": "https://api.github.com/users/yulong-plct/repos", "events_url": "https://api.github.com/users/yulong-plct/events{/privacy}", "received_events_url": "https://api.github.com/users/yulong-plct/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23c738bcba78a9df2259dd0626669c9a0aa04d1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23c738bcba78a9df2259dd0626669c9a0aa04d1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23c738bcba78a9df2259dd0626669c9a0aa04d1e"}], "stats": {"total": 98, "additions": 98, "deletions": 0}, "files": [{"sha": "c37caa2502b58c470a12dec697b970a009ab95c3", "filename": "gcc/config/riscv/predicates.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df3ca9014f94fe4af07444fea19b4ab29ba8e73/gcc%2Fconfig%2Friscv%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df3ca9014f94fe4af07444fea19b4ab29ba8e73/gcc%2Fconfig%2Friscv%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fpredicates.md?ref=3df3ca9014f94fe4af07444fea19b4ab29ba8e73", "patch": "@@ -239,3 +239,7 @@\n (define_predicate \"const63_operand\"\n   (and (match_code \"const_int\")\n        (match_test \"INTVAL (op) == 63\")))\n+\n+(define_predicate \"imm5_operand\"\n+  (and (match_code \"const_int\")\n+       (match_test \"INTVAL (op) < 5\")))"}, {"sha": "795132a0c164b3cbcba918808d0a51c69fac82da", "filename": "gcc/config/riscv/riscv-builtins.cc", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df3ca9014f94fe4af07444fea19b4ab29ba8e73/gcc%2Fconfig%2Friscv%2Friscv-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df3ca9014f94fe4af07444fea19b4ab29ba8e73/gcc%2Fconfig%2Friscv%2Friscv-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-builtins.cc?ref=3df3ca9014f94fe4af07444fea19b4ab29ba8e73", "patch": "@@ -87,6 +87,18 @@ struct riscv_builtin_description {\n \n AVAIL (hard_float, TARGET_HARD_FLOAT)\n \n+\n+AVAIL (clean32, TARGET_ZICBOM && !TARGET_64BIT)\n+AVAIL (clean64, TARGET_ZICBOM && TARGET_64BIT)\n+AVAIL (flush32, TARGET_ZICBOM && !TARGET_64BIT)\n+AVAIL (flush64, TARGET_ZICBOM && TARGET_64BIT)\n+AVAIL (inval32, TARGET_ZICBOM && !TARGET_64BIT)\n+AVAIL (inval64, TARGET_ZICBOM && TARGET_64BIT)\n+AVAIL (zero32,  TARGET_ZICBOZ && !TARGET_64BIT)\n+AVAIL (zero64,  TARGET_ZICBOZ && TARGET_64BIT)\n+AVAIL (prefetchi32, TARGET_ZICBOP && !TARGET_64BIT)\n+AVAIL (prefetchi64, TARGET_ZICBOP && TARGET_64BIT)\n+\n /* Construct a riscv_builtin_description from the given arguments.\n \n    INSN is the name of the associated instruction pattern, without the\n@@ -119,6 +131,8 @@ AVAIL (hard_float, TARGET_HARD_FLOAT)\n /* Argument types.  */\n #define RISCV_ATYPE_VOID void_type_node\n #define RISCV_ATYPE_USI unsigned_intSI_type_node\n+#define RISCV_ATYPE_SI intSI_type_node\n+#define RISCV_ATYPE_DI intDI_type_node\n \n /* RISCV_FTYPE_ATYPESN takes N RISCV_FTYPES-like type codes and lists\n    their associated RISCV_ATYPEs.  */\n@@ -128,6 +142,8 @@ AVAIL (hard_float, TARGET_HARD_FLOAT)\n   RISCV_ATYPE_##A, RISCV_ATYPE_##B\n \n static const struct riscv_builtin_description riscv_builtins[] = {\n+  #include \"riscv-cmo.def\"\n+\n   DIRECT_BUILTIN (frflags, RISCV_USI_FTYPE, hard_float),\n   DIRECT_NO_TARGET_BUILTIN (fsflags, RISCV_VOID_FTYPE_USI, hard_float)\n };"}, {"sha": "b30ecf96ec13537e3e55ba2439866ca56c384224", "filename": "gcc/config/riscv/riscv-cmo.def", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df3ca9014f94fe4af07444fea19b4ab29ba8e73/gcc%2Fconfig%2Friscv%2Friscv-cmo.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df3ca9014f94fe4af07444fea19b4ab29ba8e73/gcc%2Fconfig%2Friscv%2Friscv-cmo.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-cmo.def?ref=3df3ca9014f94fe4af07444fea19b4ab29ba8e73", "patch": "@@ -0,0 +1,17 @@\n+// zicbom\n+RISCV_BUILTIN (clean_si, \"zicbom_cbo_clean\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE, clean32),\n+RISCV_BUILTIN (clean_di, \"zicbom_cbo_clean\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE, clean64),\n+\n+RISCV_BUILTIN (flush_si, \"zicbom_cbo_flush\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE, flush32),\n+RISCV_BUILTIN (flush_di, \"zicbom_cbo_flush\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE, flush64),\n+\n+RISCV_BUILTIN (inval_si, \"zicbom_cbo_inval\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE, inval32),\n+RISCV_BUILTIN (inval_di, \"zicbom_cbo_inval\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE, inval64),\n+\n+// zicboz\n+RISCV_BUILTIN (zero_si, \"zicboz_cbo_zero\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE, zero32),\n+RISCV_BUILTIN (zero_di, \"zicboz_cbo_zero\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE, zero64),\n+\n+// zicbop\n+RISCV_BUILTIN (prefetchi_si, \"zicbop_cbo_prefetchi\", RISCV_BUILTIN_DIRECT, RISCV_SI_FTYPE_SI, prefetchi32),\n+RISCV_BUILTIN (prefetchi_di, \"zicbop_cbo_prefetchi\", RISCV_BUILTIN_DIRECT, RISCV_DI_FTYPE_DI, prefetchi64),"}, {"sha": "62421292ce760312e8e3475115305d271c810c70", "filename": "gcc/config/riscv/riscv-ftypes.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df3ca9014f94fe4af07444fea19b4ab29ba8e73/gcc%2Fconfig%2Friscv%2Friscv-ftypes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df3ca9014f94fe4af07444fea19b4ab29ba8e73/gcc%2Fconfig%2Friscv%2Friscv-ftypes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-ftypes.def?ref=3df3ca9014f94fe4af07444fea19b4ab29ba8e73", "patch": "@@ -28,3 +28,7 @@ along with GCC; see the file COPYING3.  If not see\n \n DEF_RISCV_FTYPE (0, (USI))\n DEF_RISCV_FTYPE (1, (VOID, USI))\n+DEF_RISCV_FTYPE (0, (SI))\n+DEF_RISCV_FTYPE (0, (DI))\n+DEF_RISCV_FTYPE (1, (SI, SI))\n+DEF_RISCV_FTYPE (1, (DI, DI))"}, {"sha": "b8ab0cf169a702720c1623db580927a9ca02c455", "filename": "gcc/config/riscv/riscv.md", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df3ca9014f94fe4af07444fea19b4ab29ba8e73/gcc%2Fconfig%2Friscv%2Friscv.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df3ca9014f94fe4af07444fea19b4ab29ba8e73/gcc%2Fconfig%2Friscv%2Friscv.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.md?ref=3df3ca9014f94fe4af07444fea19b4ab29ba8e73", "patch": "@@ -71,6 +71,13 @@\n   ;; Stack Smash Protector\n   UNSPEC_SSP_SET\n   UNSPEC_SSP_TEST\n+\n+  ;; CMO instructions.\n+  UNSPECV_CLEAN\n+  UNSPECV_FLUSH\n+  UNSPECV_INVAL\n+  UNSPECV_ZERO\n+  UNSPECV_PREI\n ])\n \n (define_constants\n@@ -2885,6 +2892,56 @@\n   \"<load>\\t%3, %1\\;<load>\\t%0, %2\\;xor\\t%0, %3, %0\\;li\\t%3, 0\"\n   [(set_attr \"length\" \"12\")])\n \n+(define_insn \"riscv_clean_<mode>\"\n+  [(unspec_volatile:X [(match_operand:X 0 \"register_operand\" \"r\")]\n+    UNSPECV_CLEAN)]\n+  \"TARGET_ZICBOM\"\n+  \"cbo.clean\\t%a0\"\n+)\n+\n+(define_insn \"riscv_flush_<mode>\"\n+  [(unspec_volatile:X [(match_operand:X 0 \"register_operand\" \"r\")]\n+    UNSPECV_FLUSH)]\n+  \"TARGET_ZICBOM\"\n+  \"cbo.flush\\t%a0\"\n+)\n+\n+(define_insn \"riscv_inval_<mode>\"\n+  [(unspec_volatile:X [(match_operand:X 0 \"register_operand\" \"r\")]\n+    UNSPECV_INVAL)]\n+  \"TARGET_ZICBOM\"\n+  \"cbo.inval\\t%a0\"\n+)\n+\n+(define_insn \"riscv_zero_<mode>\"\n+  [(unspec_volatile:X [(match_operand:X 0 \"register_operand\" \"r\")]\n+    UNSPECV_ZERO)]\n+  \"TARGET_ZICBOZ\"\n+  \"cbo.zero\\t%a0\"\n+)\n+\n+(define_insn \"prefetch\"\n+  [(prefetch (match_operand 0 \"address_operand\" \"p\")\n+             (match_operand 1 \"imm5_operand\" \"i\")\n+             (match_operand 2 \"const_int_operand\" \"n\"))]\n+  \"TARGET_ZICBOP\"\n+{\n+  switch (INTVAL (operands[1]))\n+  {\n+    case 0: return \"prefetch.r\\t%a0\";\n+    case 1: return \"prefetch.w\\t%a0\";\n+    default: gcc_unreachable ();\n+  }\n+})\n+\n+(define_insn \"riscv_prefetchi_<mode>\"\n+  [(unspec_volatile:X [(match_operand:X 0 \"address_operand\" \"p\")\n+              (match_operand:X 1 \"imm5_operand\" \"i\")]\n+              UNSPECV_PREI)]\n+  \"TARGET_ZICBOP\"\n+  \"prefetch.i\\t%a0\"\n+)\n+\n (include \"bitmanip.md\")\n (include \"sync.md\")\n (include \"peephole.md\")"}]}