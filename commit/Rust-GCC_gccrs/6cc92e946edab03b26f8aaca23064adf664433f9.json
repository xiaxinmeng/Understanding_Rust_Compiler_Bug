{"sha": "6cc92e946edab03b26f8aaca23064adf664433f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNjOTJlOTQ2ZWRhYjAzYjI2ZjhhYWNhMjMwNjRhZGY2NjQ0MzNmOQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2021-06-10T16:14:51Z"}, "committer": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2021-08-11T21:34:15Z"}, "message": "rs6000: Add the rest of the [altivec] stanza to the builtins file\n\n2021-06-10  Bill Schmidt  <wschmidt@linux.ibm.com>\n\ngcc/\n\t* config/rs6000/rs6000-builtin-new.def: Finish altivec stanza.\n\t* config/rs6000/rs6000-call.c (rs6000_init_builtins): Move\n\tinitialization of pcvoid_type_node here...\n\t(altivec_init_builtins): ...from here.\n\t* config/rs6000/rs6000.h (rs6000_builtin_type_index): Add\n\tRS6000_BTI_const_ptr_void.\n\t(pcvoid_type_node): New macro.", "tree": {"sha": "b59975273c777cb9baf883e936cf189c24619211", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b59975273c777cb9baf883e936cf189c24619211"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cc92e946edab03b26f8aaca23064adf664433f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc92e946edab03b26f8aaca23064adf664433f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cc92e946edab03b26f8aaca23064adf664433f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc92e946edab03b26f8aaca23064adf664433f9/comments", "author": null, "committer": null, "parents": [{"sha": "9707d2e5dbb92d2bc990c922461a5a16ae652319", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9707d2e5dbb92d2bc990c922461a5a16ae652319", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9707d2e5dbb92d2bc990c922461a5a16ae652319"}], "stats": {"total": 840, "additions": 836, "deletions": 4}, "files": [{"sha": "f1aa5529cddc8be05094d1983afe10391f3d9de3", "filename": "gcc/config/rs6000/rs6000-builtin-new.def", "status": "modified", "additions": 831, "deletions": 0, "changes": 831, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc92e946edab03b26f8aaca23064adf664433f9/gcc%2Fconfig%2Frs6000%2Frs6000-builtin-new.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc92e946edab03b26f8aaca23064adf664433f9/gcc%2Fconfig%2Frs6000%2Frs6000-builtin-new.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin-new.def?ref=6cc92e946edab03b26f8aaca23064adf664433f9", "patch": "@@ -197,3 +197,834 @@\n \n   const vss __builtin_altivec_abs_v8hi (vss);\n     ABS_V8HI absv8hi2 {}\n+\n+  const vsc __builtin_altivec_abss_v16qi (vsc);\n+    ABSS_V16QI altivec_abss_v16qi {}\n+\n+  const vsi __builtin_altivec_abss_v4si (vsi);\n+    ABSS_V4SI altivec_abss_v4si {}\n+\n+  const vss __builtin_altivec_abss_v8hi (vss);\n+    ABSS_V8HI altivec_abss_v8hi {}\n+\n+  const vf __builtin_altivec_copysignfp (vf, vf);\n+    COPYSIGN_V4SF vector_copysignv4sf3 {}\n+\n+  void __builtin_altivec_dss (const int<2>);\n+    DSS altivec_dss {}\n+\n+  void __builtin_altivec_dssall ();\n+    DSSALL altivec_dssall {}\n+\n+  void __builtin_altivec_dst (void *, const int, const int<2>);\n+    DST altivec_dst {}\n+\n+  void __builtin_altivec_dstst (void *, const int, const int<2>);\n+    DSTST altivec_dstst {}\n+\n+  void __builtin_altivec_dststt (void *, const int, const int<2>);\n+    DSTSTT altivec_dststt {}\n+\n+  void __builtin_altivec_dstt (void *, const int, const int<2>);\n+    DSTT altivec_dstt {}\n+\n+  fpmath vsi __builtin_altivec_fix_sfsi (vf);\n+    FIX_V4SF_V4SI fix_truncv4sfv4si2 {}\n+\n+  fpmath vui __builtin_altivec_fixuns_sfsi (vf);\n+    FIXUNS_V4SF_V4SI fixuns_truncv4sfv4si2 {}\n+\n+  fpmath vf __builtin_altivec_float_sisf (vsi);\n+    FLOAT_V4SI_V4SF floatv4siv4sf2 {}\n+\n+  pure vsc __builtin_altivec_lvebx (signed long, const void *);\n+    LVEBX altivec_lvebx {ldvec}\n+\n+  pure vss __builtin_altivec_lvehx (signed long, const void *);\n+    LVEHX altivec_lvehx {ldvec}\n+\n+  pure vsi __builtin_altivec_lvewx (signed long, const void *);\n+    LVEWX altivec_lvewx {ldvec}\n+\n+  pure vuc __builtin_altivec_lvsl (signed long, const void *);\n+    LVSL altivec_lvsl {ldvec}\n+\n+  pure vuc __builtin_altivec_lvsr (signed long, const void *);\n+    LVSR altivec_lvsr {ldvec}\n+\n+  pure vsi __builtin_altivec_lvx (signed long, const void *);\n+    LVX altivec_lvx_v4si {ldvec}\n+\n+  pure vsq __builtin_altivec_lvx_v1ti (signed long, const void *);\n+    LVX_V1TI altivec_lvx_v1ti {ldvec}\n+\n+  pure vsc __builtin_altivec_lvx_v16qi (signed long, const void *);\n+    LVX_V16QI altivec_lvx_v16qi {ldvec}\n+\n+  pure vf __builtin_altivec_lvx_v4sf (signed long, const void *);\n+    LVX_V4SF altivec_lvx_v4sf {ldvec}\n+\n+  pure vsi __builtin_altivec_lvx_v4si (signed long, const void *);\n+    LVX_V4SI altivec_lvx_v4si {ldvec}\n+\n+  pure vss __builtin_altivec_lvx_v8hi (signed long, const void *);\n+    LVX_V8HI altivec_lvx_v8hi {ldvec}\n+\n+  pure vsi __builtin_altivec_lvxl (signed long, const void *);\n+    LVXL altivec_lvxl_v4si {ldvec}\n+\n+  pure vsc __builtin_altivec_lvxl_v16qi (signed long, const void *);\n+    LVXL_V16QI altivec_lvxl_v16qi {ldvec}\n+\n+  pure vf __builtin_altivec_lvxl_v4sf (signed long, const void *);\n+    LVXL_V4SF altivec_lvxl_v4sf {ldvec}\n+\n+  pure vsi __builtin_altivec_lvxl_v4si (signed long, const void *);\n+    LVXL_V4SI altivec_lvxl_v4si {ldvec}\n+\n+  pure vss __builtin_altivec_lvxl_v8hi (signed long, const void *);\n+    LVXL_V8HI altivec_lvxl_v8hi {ldvec}\n+\n+  const vsc __builtin_altivec_mask_for_load (const void *);\n+    MASK_FOR_LOAD altivec_lvsr_direct {ldstmask}\n+\n+  vss __builtin_altivec_mfvscr ();\n+    MFVSCR altivec_mfvscr {}\n+\n+  void __builtin_altivec_mtvscr (vsi);\n+    MTVSCR altivec_mtvscr {}\n+\n+  const vsll __builtin_altivec_vmulesw (vsi, vsi);\n+    VMULESW vec_widen_smult_even_v4si {}\n+\n+  const vull __builtin_altivec_vmuleuw (vui, vui);\n+    VMULEUW vec_widen_umult_even_v4si {}\n+\n+  const vsll __builtin_altivec_vmulosw (vsi, vsi);\n+    VMULOSW vec_widen_smult_odd_v4si {}\n+\n+  const vull __builtin_altivec_vmulouw (vui, vui);\n+    VMULOUW vec_widen_umult_odd_v4si {}\n+\n+  const vsc __builtin_altivec_nabs_v16qi (vsc);\n+    NABS_V16QI nabsv16qi2 {}\n+\n+  const vf __builtin_altivec_nabs_v4sf (vf);\n+    NABS_V4SF vsx_nabsv4sf2 {}\n+\n+  const vsi __builtin_altivec_nabs_v4si (vsi);\n+    NABS_V4SI nabsv4si2 {}\n+\n+  const vss __builtin_altivec_nabs_v8hi (vss);\n+    NABS_V8HI nabsv8hi2 {}\n+\n+  void __builtin_altivec_stvebx (vsc, signed long, void *);\n+    STVEBX altivec_stvebx {stvec}\n+\n+  void __builtin_altivec_stvehx (vss, signed long, void *);\n+    STVEHX altivec_stvehx {stvec}\n+\n+  void __builtin_altivec_stvewx (vsi, signed long, void *);\n+    STVEWX altivec_stvewx {stvec}\n+\n+  void __builtin_altivec_stvx (vsi, signed long, void *);\n+    STVX altivec_stvx_v4si {stvec}\n+\n+  void __builtin_altivec_stvx_v16qi (vsc, signed long, void *);\n+    STVX_V16QI altivec_stvx_v16qi {stvec}\n+\n+  void __builtin_altivec_stvx_v4sf (vf, signed long, void *);\n+    STVX_V4SF altivec_stvx_v4sf {stvec}\n+\n+  void __builtin_altivec_stvx_v4si (vsi, signed long, void *);\n+    STVX_V4SI altivec_stvx_v4si {stvec}\n+\n+  void __builtin_altivec_stvx_v8hi (vss, signed long, void *);\n+    STVX_V8HI altivec_stvx_v8hi {stvec}\n+\n+  void __builtin_altivec_stvxl (vsi, signed long, void *);\n+    STVXL altivec_stvxl_v4si {stvec}\n+\n+  void __builtin_altivec_stvxl_v16qi (vsc, signed long, void *);\n+    STVXL_V16QI altivec_stvxl_v16qi {stvec}\n+\n+  void __builtin_altivec_stvxl_v4sf (vf, signed long, void *);\n+    STVXL_V4SF altivec_stvxl_v4sf {stvec}\n+\n+  void __builtin_altivec_stvxl_v4si (vsi, signed long, void *);\n+    STVXL_V4SI altivec_stvxl_v4si {stvec}\n+\n+  void __builtin_altivec_stvxl_v8hi (vss, signed long, void *);\n+    STVXL_V8HI altivec_stvxl_v8hi {stvec}\n+\n+  fpmath vf __builtin_altivec_uns_float_sisf (vui);\n+    UNSFLOAT_V4SI_V4SF floatunsv4siv4sf2 {}\n+\n+  const vui __builtin_altivec_vaddcuw (vui, vui);\n+    VADDCUW altivec_vaddcuw {}\n+\n+  const vf __builtin_altivec_vaddfp (vf, vf);\n+    VADDFP addv4sf3 {}\n+\n+  const vsc __builtin_altivec_vaddsbs (vsc, vsc);\n+    VADDSBS altivec_vaddsbs {}\n+\n+  const vss __builtin_altivec_vaddshs (vss, vss);\n+    VADDSHS altivec_vaddshs {}\n+\n+  const vsi __builtin_altivec_vaddsws (vsi, vsi);\n+    VADDSWS altivec_vaddsws {}\n+\n+  const vuc __builtin_altivec_vaddubm (vuc, vuc);\n+    VADDUBM addv16qi3 {}\n+\n+  const vuc __builtin_altivec_vaddubs (vuc, vuc);\n+    VADDUBS altivec_vaddubs {}\n+\n+  const vus __builtin_altivec_vadduhm (vus, vus);\n+    VADDUHM addv8hi3 {}\n+\n+  const vus __builtin_altivec_vadduhs (vus, vus);\n+    VADDUHS altivec_vadduhs {}\n+\n+  const vsi __builtin_altivec_vadduwm (vsi, vsi);\n+    VADDUWM addv4si3 {}\n+\n+  const vui __builtin_altivec_vadduws (vui, vui);\n+    VADDUWS altivec_vadduws {}\n+\n+  const vsc __builtin_altivec_vand_v16qi (vsc, vsc);\n+    VAND_V16QI andv16qi3 {}\n+\n+  const vuc __builtin_altivec_vand_v16qi_uns (vuc, vuc);\n+    VAND_V16QI_UNS andv16qi3 {}\n+\n+  const vf __builtin_altivec_vand_v4sf (vf, vf);\n+    VAND_V4SF andv4sf3 {}\n+\n+  const vsi __builtin_altivec_vand_v4si (vsi, vsi);\n+    VAND_V4SI andv4si3 {}\n+\n+  const vui __builtin_altivec_vand_v4si_uns (vui, vui);\n+    VAND_V4SI_UNS andv4si3 {}\n+\n+  const vss __builtin_altivec_vand_v8hi (vss, vss);\n+    VAND_V8HI andv8hi3 {}\n+\n+  const vus __builtin_altivec_vand_v8hi_uns (vus, vus);\n+    VAND_V8HI_UNS andv8hi3 {}\n+\n+  const vsc __builtin_altivec_vandc_v16qi (vsc, vsc);\n+    VANDC_V16QI andcv16qi3 {}\n+\n+  const vuc __builtin_altivec_vandc_v16qi_uns (vuc, vuc);\n+    VANDC_V16QI_UNS andcv16qi3 {}\n+\n+  const vf __builtin_altivec_vandc_v4sf (vf, vf);\n+    VANDC_V4SF andcv4sf3 {}\n+\n+  const vsi __builtin_altivec_vandc_v4si (vsi, vsi);\n+    VANDC_V4SI andcv4si3 {}\n+\n+  const vui __builtin_altivec_vandc_v4si_uns (vui, vui);\n+    VANDC_V4SI_UNS andcv4si3 {}\n+\n+  const vss __builtin_altivec_vandc_v8hi (vss, vss);\n+    VANDC_V8HI andcv8hi3 {}\n+\n+  const vus __builtin_altivec_vandc_v8hi_uns (vus, vus);\n+    VANDC_V8HI_UNS andcv8hi3 {}\n+\n+  const vsc __builtin_altivec_vavgsb (vsc, vsc);\n+    VAVGSB avgv16qi3_ceil {}\n+\n+  const vss __builtin_altivec_vavgsh (vss, vss);\n+    VAVGSH avgv8hi3_ceil {}\n+\n+  const vsi __builtin_altivec_vavgsw (vsi, vsi);\n+    VAVGSW avgv4si3_ceil {}\n+\n+  const vuc __builtin_altivec_vavgub (vuc, vuc);\n+    VAVGUB uavgv16qi3_ceil {}\n+\n+  const vus __builtin_altivec_vavguh (vus, vus);\n+    VAVGUH uavgv8hi3_ceil {}\n+\n+  const vui __builtin_altivec_vavguw (vui, vui);\n+    VAVGUW uavgv4si3_ceil {}\n+\n+  const vf __builtin_altivec_vcfsx (vsi, const int<5>);\n+    VCFSX altivec_vcfsx {}\n+\n+  const vf __builtin_altivec_vcfux (vui, const int<5>);\n+    VCFUX altivec_vcfux {}\n+\n+  const vsi __builtin_altivec_vcmpbfp (vf, vf);\n+    VCMPBFP altivec_vcmpbfp {}\n+\n+  const int __builtin_altivec_vcmpbfp_p (int, vf, vf);\n+    VCMPBFP_P altivec_vcmpbfp_p {pred}\n+\n+  const vf __builtin_altivec_vcmpeqfp (vf, vf);\n+    VCMPEQFP vector_eqv4sf {}\n+\n+  const int __builtin_altivec_vcmpeqfp_p (int, vf, vf);\n+    VCMPEQFP_P vector_eq_v4sf_p {pred}\n+\n+  const vsc __builtin_altivec_vcmpequb (vuc, vuc);\n+    VCMPEQUB vector_eqv16qi {}\n+\n+  const int __builtin_altivec_vcmpequb_p (int, vsc, vsc);\n+    VCMPEQUB_P vector_eq_v16qi_p {pred}\n+\n+  const vss __builtin_altivec_vcmpequh (vus, vus);\n+    VCMPEQUH vector_eqv8hi {}\n+\n+  const int __builtin_altivec_vcmpequh_p (int, vss, vss);\n+    VCMPEQUH_P vector_eq_v8hi_p {pred}\n+\n+  const vsi __builtin_altivec_vcmpequw (vui, vui);\n+    VCMPEQUW vector_eqv4si {}\n+\n+  const int __builtin_altivec_vcmpequw_p (int, vsi, vsi);\n+    VCMPEQUW_P vector_eq_v4si_p {pred}\n+\n+  const vf __builtin_altivec_vcmpgefp (vf, vf);\n+    VCMPGEFP vector_gev4sf {}\n+\n+  const int __builtin_altivec_vcmpgefp_p (int, vf, vf);\n+    VCMPGEFP_P vector_ge_v4sf_p {pred}\n+\n+  const vf __builtin_altivec_vcmpgtfp (vf, vf);\n+    VCMPGTFP vector_gtv4sf {}\n+\n+  const int __builtin_altivec_vcmpgtfp_p (int, vf, vf);\n+    VCMPGTFP_P vector_gt_v4sf_p {pred}\n+\n+  const vsc __builtin_altivec_vcmpgtsb (vsc, vsc);\n+    VCMPGTSB vector_gtv16qi {}\n+\n+  const int __builtin_altivec_vcmpgtsb_p (int, vsc, vsc);\n+    VCMPGTSB_P vector_gt_v16qi_p {pred}\n+\n+  const vss __builtin_altivec_vcmpgtsh (vss, vss);\n+    VCMPGTSH vector_gtv8hi {}\n+\n+  const int __builtin_altivec_vcmpgtsh_p (int, vss, vss);\n+    VCMPGTSH_P vector_gt_v8hi_p {pred}\n+\n+  const vsi __builtin_altivec_vcmpgtsw (vsi, vsi);\n+    VCMPGTSW vector_gtv4si {}\n+\n+  const int __builtin_altivec_vcmpgtsw_p (int, vsi, vsi);\n+    VCMPGTSW_P vector_gt_v4si_p {pred}\n+\n+  const vsc __builtin_altivec_vcmpgtub (vuc, vuc);\n+    VCMPGTUB vector_gtuv16qi {}\n+\n+  const int __builtin_altivec_vcmpgtub_p (int, vsc, vsc);\n+    VCMPGTUB_P vector_gtu_v16qi_p {pred}\n+\n+  const vss __builtin_altivec_vcmpgtuh (vus, vus);\n+    VCMPGTUH vector_gtuv8hi {}\n+\n+  const int __builtin_altivec_vcmpgtuh_p (int, vss, vss);\n+    VCMPGTUH_P vector_gtu_v8hi_p {pred}\n+\n+  const vsi __builtin_altivec_vcmpgtuw (vui, vui);\n+    VCMPGTUW vector_gtuv4si {}\n+\n+  const int __builtin_altivec_vcmpgtuw_p (int, vsi, vsi);\n+    VCMPGTUW_P vector_gtu_v4si_p {pred}\n+\n+  const vsi __builtin_altivec_vctsxs (vf, const int<5>);\n+    VCTSXS altivec_vctsxs {}\n+\n+  const vui __builtin_altivec_vctuxs (vf, const int<5>);\n+    VCTUXS altivec_vctuxs {}\n+\n+  fpmath vf __builtin_altivec_vexptefp (vf);\n+    VEXPTEFP altivec_vexptefp {}\n+\n+  fpmath vf __builtin_altivec_vlogefp (vf);\n+    VLOGEFP altivec_vlogefp {}\n+\n+  fpmath vf __builtin_altivec_vmaddfp (vf, vf, vf);\n+    VMADDFP fmav4sf4 {}\n+\n+  const vf __builtin_altivec_vmaxfp (vf, vf);\n+    VMAXFP smaxv4sf3 {}\n+\n+  const vsc __builtin_altivec_vmaxsb (vsc, vsc);\n+    VMAXSB smaxv16qi3 {}\n+\n+  const vuc __builtin_altivec_vmaxub (vuc, vuc);\n+    VMAXUB umaxv16qi3 {}\n+\n+  const vss __builtin_altivec_vmaxsh (vss, vss);\n+    VMAXSH smaxv8hi3 {}\n+\n+  const vsi __builtin_altivec_vmaxsw (vsi, vsi);\n+    VMAXSW smaxv4si3 {}\n+\n+  const vus __builtin_altivec_vmaxuh (vus, vus);\n+    VMAXUH umaxv8hi3 {}\n+\n+  const vui __builtin_altivec_vmaxuw (vui, vui);\n+    VMAXUW umaxv4si3 {}\n+\n+  vss __builtin_altivec_vmhaddshs (vss, vss, vss);\n+    VMHADDSHS altivec_vmhaddshs {}\n+\n+  vss __builtin_altivec_vmhraddshs (vss, vss, vss);\n+    VMHRADDSHS altivec_vmhraddshs {}\n+\n+  const vf __builtin_altivec_vminfp (vf, vf);\n+    VMINFP sminv4sf3 {}\n+\n+  const vsc __builtin_altivec_vminsb (vsc, vsc);\n+    VMINSB sminv16qi3 {}\n+\n+  const vss __builtin_altivec_vminsh (vss, vss);\n+    VMINSH sminv8hi3 {}\n+\n+  const vsi __builtin_altivec_vminsw (vsi, vsi);\n+    VMINSW sminv4si3 {}\n+\n+  const vuc __builtin_altivec_vminub (vuc, vuc);\n+    VMINUB uminv16qi3 {}\n+\n+  const vus __builtin_altivec_vminuh (vus, vus);\n+    VMINUH uminv8hi3 {}\n+\n+  const vui __builtin_altivec_vminuw (vui, vui);\n+    VMINUW uminv4si3 {}\n+\n+  const vss __builtin_altivec_vmladduhm (vss, vss, vss);\n+    VMLADDUHM fmav8hi4 {}\n+\n+  const vsc __builtin_altivec_vmrghb (vsc, vsc);\n+    VMRGHB altivec_vmrghb {}\n+\n+  const vss __builtin_altivec_vmrghh (vss, vss);\n+    VMRGHH altivec_vmrghh {}\n+\n+  const vsi __builtin_altivec_vmrghw (vsi, vsi);\n+    VMRGHW altivec_vmrghw {}\n+\n+  const vsc __builtin_altivec_vmrglb (vsc, vsc);\n+    VMRGLB altivec_vmrglb {}\n+\n+  const vss __builtin_altivec_vmrglh (vss, vss);\n+    VMRGLH altivec_vmrglh {}\n+\n+  const vsi __builtin_altivec_vmrglw (vsi, vsi);\n+    VMRGLW altivec_vmrglw {}\n+\n+  const vsi __builtin_altivec_vmsummbm (vsc, vuc, vsi);\n+    VMSUMMBM altivec_vmsummbm {}\n+\n+  const vsi __builtin_altivec_vmsumshm (vss, vss, vsi);\n+    VMSUMSHM altivec_vmsumshm {}\n+\n+  vsi __builtin_altivec_vmsumshs (vss, vss, vsi);\n+    VMSUMSHS altivec_vmsumshs {}\n+\n+  const vui __builtin_altivec_vmsumubm (vuc, vuc, vui);\n+    VMSUMUBM altivec_vmsumubm {}\n+\n+  const vui __builtin_altivec_vmsumuhm (vus, vus, vui);\n+    VMSUMUHM altivec_vmsumuhm {}\n+\n+  vui __builtin_altivec_vmsumuhs (vus, vus, vui);\n+    VMSUMUHS altivec_vmsumuhs {}\n+\n+  const vss __builtin_altivec_vmulesb (vsc, vsc);\n+    VMULESB vec_widen_smult_even_v16qi {}\n+\n+  const vsi __builtin_altivec_vmulesh (vss, vss);\n+    VMULESH vec_widen_smult_even_v8hi {}\n+\n+  const vus __builtin_altivec_vmuleub (vuc, vuc);\n+    VMULEUB vec_widen_umult_even_v16qi {}\n+\n+  const vui __builtin_altivec_vmuleuh (vus, vus);\n+    VMULEUH vec_widen_umult_even_v8hi {}\n+\n+  const vss __builtin_altivec_vmulosb (vsc, vsc);\n+    VMULOSB vec_widen_smult_odd_v16qi {}\n+\n+  const vus __builtin_altivec_vmuloub (vuc, vuc);\n+    VMULOUB vec_widen_umult_odd_v16qi {}\n+\n+  const vsi __builtin_altivec_vmulosh (vss, vss);\n+    VMULOSH vec_widen_smult_odd_v8hi {}\n+\n+  const vui __builtin_altivec_vmulouh (vus, vus);\n+    VMULOUH vec_widen_umult_odd_v8hi {}\n+\n+  fpmath vf __builtin_altivec_vnmsubfp (vf, vf, vf);\n+    VNMSUBFP nfmsv4sf4 {}\n+\n+  const vsc __builtin_altivec_vnor_v16qi (vsc, vsc);\n+    VNOR_V16QI norv16qi3 {}\n+\n+  const vuc __builtin_altivec_vnor_v16qi_uns (vuc, vuc);\n+    VNOR_V16QI_UNS norv16qi3 {}\n+\n+  const vf __builtin_altivec_vnor_v4sf (vf, vf);\n+    VNOR_V4SF norv4sf3 {}\n+\n+  const vsi __builtin_altivec_vnor_v4si (vsi, vsi);\n+    VNOR_V4SI norv4si3 {}\n+\n+  const vui __builtin_altivec_vnor_v4si_uns (vui, vui);\n+    VNOR_V4SI_UNS norv4si3 {}\n+\n+  const vss __builtin_altivec_vnor_v8hi (vss, vss);\n+    VNOR_V8HI norv8hi3 {}\n+\n+  const vus __builtin_altivec_vnor_v8hi_uns (vus, vus);\n+    VNOR_V8HI_UNS norv8hi3 {}\n+\n+  const vsc __builtin_altivec_vor_v16qi (vsc, vsc);\n+    VOR_V16QI iorv16qi3 {}\n+\n+  const vuc __builtin_altivec_vor_v16qi_uns (vuc, vuc);\n+    VOR_V16QI_UNS iorv16qi3 {}\n+\n+  const vf __builtin_altivec_vor_v4sf (vf, vf);\n+    VOR_V4SF iorv4sf3 {}\n+\n+  const vsi __builtin_altivec_vor_v4si (vsi, vsi);\n+    VOR_V4SI iorv4si3 {}\n+\n+  const vui __builtin_altivec_vor_v4si_uns (vui, vui);\n+    VOR_V4SI_UNS iorv4si3 {}\n+\n+  const vss __builtin_altivec_vor_v8hi (vss, vss);\n+    VOR_V8HI iorv8hi3 {}\n+\n+  const vus __builtin_altivec_vor_v8hi_uns (vus, vus);\n+    VOR_V8HI_UNS iorv8hi3 {}\n+\n+  const vsc __builtin_altivec_vperm_16qi (vsc, vsc, vuc);\n+    VPERM_16QI altivec_vperm_v16qi {}\n+\n+  const vuc __builtin_altivec_vperm_16qi_uns (vuc, vuc, vuc);\n+    VPERM_16QI_UNS altivec_vperm_v16qi_uns {}\n+\n+  const vsq __builtin_altivec_vperm_1ti (vsq, vsq, vuc);\n+    VPERM_1TI altivec_vperm_v1ti {}\n+\n+  const vuq __builtin_altivec_vperm_1ti_uns (vuq, vuq, vuc);\n+    VPERM_1TI_UNS altivec_vperm_v1ti_uns {}\n+\n+  const vf __builtin_altivec_vperm_4sf (vf, vf, vuc);\n+    VPERM_4SF altivec_vperm_v4sf {}\n+\n+  const vsi __builtin_altivec_vperm_4si (vsi, vsi, vuc);\n+    VPERM_4SI altivec_vperm_v4si {}\n+\n+  const vui __builtin_altivec_vperm_4si_uns (vui, vui, vuc);\n+    VPERM_4SI_UNS altivec_vperm_v4si_uns {}\n+\n+  const vss __builtin_altivec_vperm_8hi (vss, vss, vuc);\n+    VPERM_8HI altivec_vperm_v8hi {}\n+\n+  const vus __builtin_altivec_vperm_8hi_uns (vus, vus, vuc);\n+    VPERM_8HI_UNS altivec_vperm_v8hi_uns {}\n+\n+  const vp __builtin_altivec_vpkpx (vui, vui);\n+    VPKPX altivec_vpkpx {}\n+\n+  const vsc __builtin_altivec_vpkshss (vss, vss);\n+    VPKSHSS altivec_vpkshss {}\n+\n+  const vuc __builtin_altivec_vpkshus (vss, vss);\n+    VPKSHUS altivec_vpkshus {}\n+\n+  const vss __builtin_altivec_vpkswss (vsi, vsi);\n+    VPKSWSS altivec_vpkswss {}\n+\n+  const vus __builtin_altivec_vpkswus (vsi, vsi);\n+    VPKSWUS altivec_vpkswus {}\n+\n+  const vsc __builtin_altivec_vpkuhum (vss, vss);\n+    VPKUHUM altivec_vpkuhum {}\n+\n+  const vuc __builtin_altivec_vpkuhus (vus, vus);\n+    VPKUHUS altivec_vpkuhus {}\n+\n+  const vss __builtin_altivec_vpkuwum (vsi, vsi);\n+    VPKUWUM altivec_vpkuwum {}\n+\n+  const vus __builtin_altivec_vpkuwus (vui, vui);\n+    VPKUWUS altivec_vpkuwus {}\n+\n+  const vf __builtin_altivec_vrecipdivfp (vf, vf);\n+    VRECIPFP recipv4sf3 {}\n+\n+  fpmath vf __builtin_altivec_vrefp (vf);\n+    VREFP rev4sf2 {}\n+\n+  const vsc __builtin_altivec_vreve_v16qi (vsc);\n+    VREVE_V16QI altivec_vrevev16qi2 {}\n+\n+  const vf __builtin_altivec_vreve_v4sf (vf);\n+    VREVE_V4SF altivec_vrevev4sf2 {}\n+\n+  const vsi __builtin_altivec_vreve_v4si (vsi);\n+    VREVE_V4SI altivec_vrevev4si2 {}\n+\n+  const vss __builtin_altivec_vreve_v8hi (vss);\n+    VREVE_V8HI altivec_vrevev8hi2 {}\n+\n+  fpmath vf __builtin_altivec_vrfim (vf);\n+    VRFIM vector_floorv4sf2 {}\n+\n+  fpmath vf __builtin_altivec_vrfin (vf);\n+    VRFIN altivec_vrfin {}\n+\n+  fpmath vf __builtin_altivec_vrfip (vf);\n+    VRFIP vector_ceilv4sf2 {}\n+\n+  fpmath vf __builtin_altivec_vrfiz (vf);\n+    VRFIZ vector_btruncv4sf2 {}\n+\n+  const vsc __builtin_altivec_vrlb (vsc, vsc);\n+    VRLB vrotlv16qi3 {}\n+\n+  const vss __builtin_altivec_vrlh (vss, vss);\n+    VRLH vrotlv8hi3 {}\n+\n+  const vsi __builtin_altivec_vrlw (vsi, vsi);\n+    VRLW vrotlv4si3 {}\n+\n+  fpmath vf __builtin_altivec_vrsqrtefp (vf);\n+    VRSQRTEFP rsqrtev4sf2 {}\n+\n+  fpmath vf __builtin_altivec_vrsqrtfp (vf);\n+    VRSQRTFP rsqrtv4sf2 {}\n+\n+  const vsc __builtin_altivec_vsel_16qi (vsc, vsc, vuc);\n+    VSEL_16QI vector_select_v16qi {}\n+\n+  const vuc __builtin_altivec_vsel_16qi_uns (vuc, vuc, vuc);\n+    VSEL_16QI_UNS vector_select_v16qi_uns {}\n+\n+  const vsq __builtin_altivec_vsel_1ti (vsq, vsq, vuq);\n+    VSEL_1TI vector_select_v1ti {}\n+\n+  const vuq __builtin_altivec_vsel_1ti_uns (vuq, vuq, vuq);\n+    VSEL_1TI_UNS vector_select_v1ti_uns {}\n+\n+  const vf __builtin_altivec_vsel_4sf (vf, vf, vf);\n+    VSEL_4SF vector_select_v4sf {}\n+\n+  const vsi __builtin_altivec_vsel_4si (vsi, vsi, vui);\n+    VSEL_4SI vector_select_v4si {}\n+\n+  const vui __builtin_altivec_vsel_4si_uns (vui, vui, vui);\n+    VSEL_4SI_UNS vector_select_v4si_uns {}\n+\n+  const vss __builtin_altivec_vsel_8hi (vss, vss, vus);\n+    VSEL_8HI vector_select_v8hi {}\n+\n+  const vus __builtin_altivec_vsel_8hi_uns (vus, vus, vus);\n+    VSEL_8HI_UNS vector_select_v8hi_uns {}\n+\n+  const vsi __builtin_altivec_vsl (vsi, vsi);\n+    VSL altivec_vsl {}\n+\n+  const vsc __builtin_altivec_vslb (vsc, vuc);\n+    VSLB vashlv16qi3 {}\n+\n+  const vsc __builtin_altivec_vsldoi_16qi (vsc, vsc, const int<4>);\n+    VSLDOI_16QI altivec_vsldoi_v16qi {}\n+\n+  const vf __builtin_altivec_vsldoi_4sf (vf, vf, const int<4>);\n+    VSLDOI_4SF altivec_vsldoi_v4sf {}\n+\n+  const vsi __builtin_altivec_vsldoi_4si (vsi, vsi, const int<4>);\n+    VSLDOI_4SI altivec_vsldoi_v4si {}\n+\n+  const vss __builtin_altivec_vsldoi_8hi (vss, vss, const int<4>);\n+    VSLDOI_8HI altivec_vsldoi_v8hi {}\n+\n+  const vss __builtin_altivec_vslh (vss, vus);\n+    VSLH vashlv8hi3 {}\n+\n+  const vsi __builtin_altivec_vslo (vsi, vsi);\n+    VSLO altivec_vslo {}\n+\n+  const vsi __builtin_altivec_vslw (vsi, vui);\n+    VSLW vashlv4si3 {}\n+\n+  const vsc __builtin_altivec_vspltb (vsc, const int<4>);\n+    VSPLTB altivec_vspltb {}\n+\n+  const vss __builtin_altivec_vsplth (vss, const int<3>);\n+    VSPLTH altivec_vsplth {}\n+\n+  const vsc __builtin_altivec_vspltisb (const int<-16,15>);\n+    VSPLTISB altivec_vspltisb {}\n+\n+  const vss __builtin_altivec_vspltish (const int<-16,15>);\n+    VSPLTISH altivec_vspltish {}\n+\n+  const vsi __builtin_altivec_vspltisw (const int<-16,15>);\n+    VSPLTISW altivec_vspltisw {}\n+\n+  const vsi __builtin_altivec_vspltw (vsi, const int<2>);\n+    VSPLTW altivec_vspltw {}\n+\n+  const vsi __builtin_altivec_vsr (vsi, vsi);\n+    VSR altivec_vsr {}\n+\n+  const vsc __builtin_altivec_vsrab (vsc, vuc);\n+    VSRAB vashrv16qi3 {}\n+\n+  const vss __builtin_altivec_vsrah (vss, vus);\n+    VSRAH vashrv8hi3 {}\n+\n+  const vsi __builtin_altivec_vsraw (vsi, vui);\n+    VSRAW vashrv4si3 {}\n+\n+  const vsc __builtin_altivec_vsrb (vsc, vuc);\n+    VSRB vlshrv16qi3 {}\n+\n+  const vss __builtin_altivec_vsrh (vss, vus);\n+    VSRH vlshrv8hi3 {}\n+\n+  const vsi __builtin_altivec_vsro (vsi, vsi);\n+    VSRO altivec_vsro {}\n+\n+  const vsi __builtin_altivec_vsrw (vsi, vui);\n+    VSRW vlshrv4si3 {}\n+\n+  const vsi __builtin_altivec_vsubcuw (vsi, vsi);\n+    VSUBCUW altivec_vsubcuw {}\n+\n+  const vf __builtin_altivec_vsubfp (vf, vf);\n+    VSUBFP subv4sf3 {}\n+\n+  const vsc __builtin_altivec_vsubsbs (vsc, vsc);\n+    VSUBSBS altivec_vsubsbs {}\n+\n+  const vss __builtin_altivec_vsubshs (vss, vss);\n+    VSUBSHS altivec_vsubshs {}\n+\n+  const vsi __builtin_altivec_vsubsws (vsi, vsi);\n+    VSUBSWS altivec_vsubsws {}\n+\n+  const vuc __builtin_altivec_vsububm (vuc, vuc);\n+    VSUBUBM subv16qi3 {}\n+\n+  const vuc __builtin_altivec_vsububs (vuc, vuc);\n+    VSUBUBS altivec_vsububs {}\n+\n+  const vus __builtin_altivec_vsubuhm (vus, vus);\n+    VSUBUHM subv8hi3 {}\n+\n+  const vus __builtin_altivec_vsubuhs (vus, vus);\n+    VSUBUHS altivec_vsubuhs {}\n+\n+  const vui __builtin_altivec_vsubuwm (vui, vui);\n+    VSUBUWM subv4si3 {}\n+\n+  const vui __builtin_altivec_vsubuws (vui, vui);\n+    VSUBUWS altivec_vsubuws {}\n+\n+  const vsi __builtin_altivec_vsum2sws (vsi, vsi);\n+    VSUM2SWS altivec_vsum2sws {}\n+\n+  const vsi __builtin_altivec_vsum4sbs (vsc, vsi);\n+    VSUM4SBS altivec_vsum4sbs {}\n+\n+  const vsi __builtin_altivec_vsum4shs (vss, vsi);\n+    VSUM4SHS altivec_vsum4shs {}\n+\n+  const vui __builtin_altivec_vsum4ubs (vuc, vui);\n+    VSUM4UBS altivec_vsum4ubs {}\n+\n+  const vsi __builtin_altivec_vsumsws (vsi, vsi);\n+    VSUMSWS altivec_vsumsws {}\n+\n+  const vsi __builtin_altivec_vsumsws_be (vsi, vsi);\n+    VSUMSWS_BE altivec_vsumsws_direct {}\n+\n+  const vui __builtin_altivec_vupkhpx (vp);\n+    VUPKHPX altivec_vupkhpx {}\n+\n+  const vss __builtin_altivec_vupkhsb (vsc);\n+    VUPKHSB altivec_vupkhsb {}\n+\n+  const vsi __builtin_altivec_vupkhsh (vss);\n+    VUPKHSH altivec_vupkhsh {}\n+\n+  const vui __builtin_altivec_vupklpx (vp);\n+    VUPKLPX altivec_vupklpx {}\n+\n+  const vss __builtin_altivec_vupklsb (vsc);\n+    VUPKLSB altivec_vupklsb {}\n+\n+  const vsi __builtin_altivec_vupklsh (vss);\n+    VUPKLSH altivec_vupklsh {}\n+\n+  const vsc __builtin_altivec_vxor_v16qi (vsc, vsc);\n+    VXOR_V16QI xorv16qi3 {}\n+\n+  const vuc __builtin_altivec_vxor_v16qi_uns (vuc, vuc);\n+    VXOR_V16QI_UNS xorv16qi3 {}\n+\n+  const vf __builtin_altivec_vxor_v4sf (vf, vf);\n+    VXOR_V4SF xorv4sf3 {}\n+\n+  const vsi __builtin_altivec_vxor_v4si (vsi, vsi);\n+    VXOR_V4SI xorv4si3 {}\n+\n+  const vui __builtin_altivec_vxor_v4si_uns (vui, vui);\n+    VXOR_V4SI_UNS xorv4si3 {}\n+\n+  const vss __builtin_altivec_vxor_v8hi (vss, vss);\n+    VXOR_V8HI xorv8hi3 {}\n+\n+  const vus __builtin_altivec_vxor_v8hi_uns (vus, vus);\n+    VXOR_V8HI_UNS xorv8hi3 {}\n+\n+  const signed char __builtin_vec_ext_v16qi (vsc, signed int);\n+    VEC_EXT_V16QI nothing {extract}\n+\n+  const float __builtin_vec_ext_v4sf (vf, signed int);\n+    VEC_EXT_V4SF nothing {extract}\n+\n+  const signed int __builtin_vec_ext_v4si (vsi, signed int);\n+    VEC_EXT_V4SI nothing {extract}\n+\n+  const signed short __builtin_vec_ext_v8hi (vss, signed int);\n+    VEC_EXT_V8HI nothing {extract}\n+\n+  const vsc __builtin_vec_init_v16qi (signed char, signed char, signed char, signed char, signed char, signed char, signed char, signed char, signed char, signed char, signed char, signed char, signed char, signed char, signed char, signed char);\n+    VEC_INIT_V16QI nothing {init}\n+\n+  const vf __builtin_vec_init_v4sf (float, float, float, float);\n+    VEC_INIT_V4SF nothing {init}\n+\n+  const vsi __builtin_vec_init_v4si (signed int, signed int, signed int, signed int);\n+    VEC_INIT_V4SI nothing {init}\n+\n+  const vss __builtin_vec_init_v8hi (signed short, signed short, signed short, signed short, signed short, signed short, signed short, signed short);\n+    VEC_INIT_V8HI nothing {init}\n+\n+  const vsc __builtin_vec_set_v16qi (vsc, signed char, const int<4>);\n+    VEC_SET_V16QI nothing {set}\n+\n+  const vf __builtin_vec_set_v4sf (vf, float, const int<2>);\n+    VEC_SET_V4SF nothing {set}\n+\n+  const vsi __builtin_vec_set_v4si (vsi, signed int, const int<2>);\n+    VEC_SET_V4SI nothing {set}\n+\n+  const vss __builtin_vec_set_v8hi (vss, signed short, const int<3>);\n+    VEC_SET_V8HI nothing {set}"}, {"sha": "8b16d65e6846e7e7b02ac2513db79518fe425465", "filename": "gcc/config/rs6000/rs6000-call.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc92e946edab03b26f8aaca23064adf664433f9/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc92e946edab03b26f8aaca23064adf664433f9/gcc%2Fconfig%2Frs6000%2Frs6000-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-call.c?ref=6cc92e946edab03b26f8aaca23064adf664433f9", "patch": "@@ -13493,6 +13493,9 @@ rs6000_init_builtins (void)\n \t\t\t\t\t    intTI_type_node, 1);\n   pixel_V8HI_type_node = rs6000_vector_type (\"__vector __pixel\",\n \t\t\t\t\t     pixel_type_node, 8);\n+  pcvoid_type_node\n+    = build_pointer_type (build_qualified_type (void_type_node,\n+\t\t\t\t\t\tTYPE_QUAL_CONST));\n \n   /* Create Altivec, VSX and MMA builtins on machines with at least the\n      general purpose extensions (970 and newer) to allow the use of\n@@ -13652,10 +13655,6 @@ altivec_init_builtins (void)\n \n   tree pvoid_type_node = build_pointer_type (void_type_node);\n \n-  tree pcvoid_type_node\n-    = build_pointer_type (build_qualified_type (void_type_node,\n-\t\t\t\t\t\tTYPE_QUAL_CONST));\n-\n   tree int_ftype_opaque\n     = build_function_type_list (integer_type_node,\n \t\t\t\topaque_V4SI_type_node, NULL_TREE);"}, {"sha": "c5d20d240f2c0c29a7e36b7124dd66f3a65f2654", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc92e946edab03b26f8aaca23064adf664433f9/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc92e946edab03b26f8aaca23064adf664433f9/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=6cc92e946edab03b26f8aaca23064adf664433f9", "patch": "@@ -2460,6 +2460,7 @@ enum rs6000_builtin_type_index\n   RS6000_BTI_const_str,\t\t /* pointer to const char * */\n   RS6000_BTI_vector_pair,\t /* unsigned 256-bit types (vector pair).  */\n   RS6000_BTI_vector_quad,\t /* unsigned 512-bit types (vector quad).  */\n+  RS6000_BTI_const_ptr_void,     /* const pointer to void */\n   RS6000_BTI_MAX\n };\n \n@@ -2515,6 +2516,7 @@ enum rs6000_builtin_type_index\n #define const_str_type_node\t\t (rs6000_builtin_types[RS6000_BTI_const_str])\n #define vector_pair_type_node\t\t (rs6000_builtin_types[RS6000_BTI_vector_pair])\n #define vector_quad_type_node\t\t (rs6000_builtin_types[RS6000_BTI_vector_quad])\n+#define pcvoid_type_node\t\t (rs6000_builtin_types[RS6000_BTI_const_ptr_void])\n \n extern GTY(()) tree rs6000_builtin_types[RS6000_BTI_MAX];\n extern GTY(()) tree rs6000_builtin_decls[RS6000_BUILTIN_COUNT];"}]}