{"sha": "80a9c584e339c4f87a3f48ca6397d4a29b7e4ab6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBhOWM1ODRlMzM5YzRmODdhM2Y0OGNhNjM5N2Q0YTI5YjdlNGFiNg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-10-01T13:47:36Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-10-01T13:51:29Z"}, "message": "c++: pushdecl_top_level must set context\n\nI discovered pushdecl_top_level was not setting the decl's context,\nand we ended up with namespace-scope decls with NULL context.  That\nbroke modules.  Then I discovered a couple of places where we set the\ncontext to a FUNCTION_DECL, which is also wrong.  AFAICT the literals\nin question belong in global scope, as they're comdatable entities.\nBut create_temporary would use current_scope for the context before we\npushed it into namespace scope.\n\nThis patch asserts the context is NULL and then sets it to the frobbed\nglobal_namespace.\n\n\tgcc/cp/\n\t* name-lookup.c (pushdecl_top_level): Assert incoming context is\n\tnull, add global_namespace context.\n\t(pushdecl_top_level_and_finish): Likewise.\n\t* pt.c (get_template_parm_object): Clear decl context before\n\tpushing.\n\t* semantics.c (finish_compound_literal): Likewise.", "tree": {"sha": "67fae24b4bde9432389906f10a0cebc3bc872a04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67fae24b4bde9432389906f10a0cebc3bc872a04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80a9c584e339c4f87a3f48ca6397d4a29b7e4ab6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80a9c584e339c4f87a3f48ca6397d4a29b7e4ab6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80a9c584e339c4f87a3f48ca6397d4a29b7e4ab6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80a9c584e339c4f87a3f48ca6397d4a29b7e4ab6/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73c977cb0a112ac58fae18af44576ade8ab3aa26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73c977cb0a112ac58fae18af44576ade8ab3aa26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73c977cb0a112ac58fae18af44576ade8ab3aa26"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "6204444f3a6050989b263aa11b29eb7ebe42951a", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a9c584e339c4f87a3f48ca6397d4a29b7e4ab6/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a9c584e339c4f87a3f48ca6397d4a29b7e4ab6/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=80a9c584e339c4f87a3f48ca6397d4a29b7e4ab6", "patch": "@@ -7404,6 +7404,8 @@ pushdecl_top_level (tree x)\n {\n   bool subtime = timevar_cond_start (TV_NAME_LOOKUP);\n   do_push_to_top_level ();\n+  gcc_checking_assert (!DECL_CONTEXT (x));\n+  DECL_CONTEXT (x) = FROB_CONTEXT (global_namespace);\n   x = pushdecl_namespace_level (x);\n   do_pop_from_top_level ();\n   timevar_cond_stop (TV_NAME_LOOKUP, subtime);\n@@ -7418,6 +7420,8 @@ pushdecl_top_level_and_finish (tree x, tree init)\n {\n   bool subtime = timevar_cond_start (TV_NAME_LOOKUP);\n   do_push_to_top_level ();\n+  gcc_checking_assert (!DECL_CONTEXT (x));\n+  DECL_CONTEXT (x) = FROB_CONTEXT (global_namespace);\n   x = pushdecl_namespace_level (x);\n   cp_finish_decl (x, init, false, NULL_TREE, 0);\n   do_pop_from_top_level ();"}, {"sha": "45b18f6a5ada72313d1d7fb5d4a86a5cc3a30c72", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a9c584e339c4f87a3f48ca6397d4a29b7e4ab6/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a9c584e339c4f87a3f48ca6397d4a29b7e4ab6/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=80a9c584e339c4f87a3f48ca6397d4a29b7e4ab6", "patch": "@@ -7094,12 +7094,12 @@ get_template_parm_object (tree expr, tsubst_flags_t complain)\n \n   tree type = cp_build_qualified_type (TREE_TYPE (expr), TYPE_QUAL_CONST);\n   decl = create_temporary_var (type);\n+  DECL_CONTEXT (decl) = NULL_TREE;\n   TREE_STATIC (decl) = true;\n   DECL_DECLARED_CONSTEXPR_P (decl) = true;\n   TREE_READONLY (decl) = true;\n   DECL_NAME (decl) = name;\n   SET_DECL_ASSEMBLER_NAME (decl, name);\n-  DECL_CONTEXT (decl) = global_namespace;\n   comdat_linkage (decl);\n \n   if (!zero_init_p (type))"}, {"sha": "1e42cd799c2e5280e9276ed2a80a1eac0f743c94", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80a9c584e339c4f87a3f48ca6397d4a29b7e4ab6/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80a9c584e339c4f87a3f48ca6397d4a29b7e4ab6/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=80a9c584e339c4f87a3f48ca6397d4a29b7e4ab6", "patch": "@@ -3030,6 +3030,7 @@ finish_compound_literal (tree type, tree compound_literal,\n       && initializer_constant_valid_p (compound_literal, type))\n     {\n       tree decl = create_temporary_var (type);\n+      DECL_CONTEXT (decl) = NULL_TREE;\n       DECL_INITIAL (decl) = compound_literal;\n       TREE_STATIC (decl) = 1;\n       if (literal_type_p (type) && CP_TYPE_CONST_NON_VOLATILE_P (type))"}]}