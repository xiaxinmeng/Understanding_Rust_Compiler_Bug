{"sha": "cb9b7827d92c0956767eee90206909a15457a7f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I5Yjc4MjdkOTJjMDk1Njc2N2VlZTkwMjA2OTA5YTE1NDU3YTdmOA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-10-02T12:14:44Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-10-02T12:14:44Z"}, "message": "2003-10-02  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/URL.java\n\t(DEFAULT_SEARCH_PATH): New static variable.\n\t(ph_cache): Made it a HashMap.\n\t(getURLStreamHandler): Rename propVal to ph_search_path and use\n\tDEFAULT_SEARCH_PATH.\n\nFrom-SVN: r72023", "tree": {"sha": "107ff6d044b227f291d0c4326516be6323dfce4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/107ff6d044b227f291d0c4326516be6323dfce4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb9b7827d92c0956767eee90206909a15457a7f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb9b7827d92c0956767eee90206909a15457a7f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb9b7827d92c0956767eee90206909a15457a7f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb9b7827d92c0956767eee90206909a15457a7f8/comments", "author": null, "committer": null, "parents": [{"sha": "7485f79f141237a216201f05aef6e161cb4ff08a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7485f79f141237a216201f05aef6e161cb4ff08a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7485f79f141237a216201f05aef6e161cb4ff08a"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "6d6549015c5e46cae4e10ebe22bae5aeb9378503", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb9b7827d92c0956767eee90206909a15457a7f8/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb9b7827d92c0956767eee90206909a15457a7f8/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=cb9b7827d92c0956767eee90206909a15457a7f8", "patch": "@@ -1,3 +1,11 @@\n+2003-10-02  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/URL.java\n+\t(DEFAULT_SEARCH_PATH): New static variable.\n+\t(ph_cache): Made it a HashMap.\n+\t(getURLStreamHandler): Rename propVal to ph_search_path and use\n+\tDEFAULT_SEARCH_PATH.\n+\n 2003-10-02  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/swing/table/AbstractTableModel.java"}, {"sha": "62c9e6b9e999bc8bd433152f499af32cfb699c01", "filename": "libjava/java/net/URL.java", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb9b7827d92c0956767eee90206909a15457a7f8/libjava%2Fjava%2Fnet%2FURL.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb9b7827d92c0956767eee90206909a15457a7f8/libjava%2Fjava%2Fnet%2FURL.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURL.java?ref=cb9b7827d92c0956767eee90206909a15457a7f8", "patch": "@@ -43,10 +43,9 @@\n import java.io.Serializable;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n-import java.util.Hashtable;\n+import java.util.HashMap;\n import java.util.StringTokenizer;\n \n-\n /*\n  * Written using on-line Java Platform 1.2 API Specification, as well\n  * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n@@ -119,6 +118,9 @@\n   */\n public final class URL implements Serializable\n {\n+  private static final String DEFAULT_SEARCH_PATH =\n+    \"gnu.java.net.protocol|sun.net.www.protocol\";\n+  \n   /**\n    * The name of the protocol for this URL.\n    * The protocol is always stored in lower case.\n@@ -174,7 +176,7 @@ public final class URL implements Serializable\n    * This a table where we cache protocol handlers to avoid the overhead\n    * of looking them up each time.\n    */\n-  private static Hashtable ph_cache = new Hashtable();\n+  private static HashMap ph_cache = new HashMap();\n \n   /**\n    * Whether or not to cache protocol handlers.\n@@ -798,12 +800,16 @@ else if (protocol.equals (\"file\"))\n \t// to it, along with the JDK specified default as a last resort.\n \t// Except in very unusual environments the JDK specified one shouldn't\n \t// ever be needed (or available).\n-\tString propVal = System.getProperty(\"java.protocol.handler.pkgs\");\n-\tpropVal = (propVal == null) ? \"\" : (propVal + \"|\");\n-\tpropVal = propVal + \"gnu.gcj.protocol|sun.net.www.protocol\";\n+\tString ph_search_path = System.getProperty (\"java.protocol.handler.pkgs\");\n+\n+\t// Tack our default package on at the ends.\n+\tif (ph_search_path != null)\n+          ph_search_path += \"|\" + DEFAULT_SEARCH_PATH;\n+\telse\n+          ph_search_path = DEFAULT_SEARCH_PATH;\n \n \t// Finally loop through our search path looking for a match.\n-\tStringTokenizer pkgPrefix = new StringTokenizer (propVal, \"|\");\n+\tStringTokenizer pkgPrefix = new StringTokenizer (ph_search_path, \"|\");\n         \n \tdo\n           {"}]}