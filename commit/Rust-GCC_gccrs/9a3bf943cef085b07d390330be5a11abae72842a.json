{"sha": "9a3bf943cef085b07d390330be5a11abae72842a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWEzYmY5NDNjZWYwODViMDdkMzkwMzMwYmU1YTExYWJhZTcyODQyYQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2005-01-07T01:05:37Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2005-01-07T01:05:37Z"}, "message": "re PR target/6077 ([alpha-osf].s with -x assembler-with-cpp breaks mips-tfile)\n\n\n\tPR target/6077\n\t* gcc.c (input_suffix_matches): Tweak the semantics of %{.s:...}\n\tand %{.S:...} (and their negative variants) to test whether the\n\tinput file is assembler or pre-processed-assembler independent of\n\tthe actual filename extension.\n\nFrom-SVN: r93023", "tree": {"sha": "c4319946d2662609ef86dd5bf713bce3fe21a094", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4319946d2662609ef86dd5bf713bce3fe21a094"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a3bf943cef085b07d390330be5a11abae72842a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a3bf943cef085b07d390330be5a11abae72842a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a3bf943cef085b07d390330be5a11abae72842a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a3bf943cef085b07d390330be5a11abae72842a/comments", "author": null, "committer": null, "parents": [{"sha": "c79fc2963d970e9ca6316d8af8a9669b0ad04e5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c79fc2963d970e9ca6316d8af8a9669b0ad04e5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c79fc2963d970e9ca6316d8af8a9669b0ad04e5d"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "9c8a86183895cfffbfca0a12ec0b26695212a141", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a3bf943cef085b07d390330be5a11abae72842a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a3bf943cef085b07d390330be5a11abae72842a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a3bf943cef085b07d390330be5a11abae72842a", "patch": "@@ -1,3 +1,11 @@\n+2005-01-06  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR target/6077\n+\t* gcc.c (input_suffix_matches): Tweak the semantics of %{.s:...}\n+\tand %{.S:...} (and their negative variants) to test whether the\n+\tinput file is assembler or pre-processed-assembler independent of\n+\tthe actual filename extension.\n+\n 2005-01-06  Roger Sayle  <roger@eyesopen.com>\n \n \t* simplify-rtx.c (simplify_subreg): Simplify truncations of shifts"}, {"sha": "99d92f954381ad91411ac9a85f40dbcab421255f", "filename": "gcc/gcc.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a3bf943cef085b07d390330be5a11abae72842a/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a3bf943cef085b07d390330be5a11abae72842a/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=9a3bf943cef085b07d390330be5a11abae72842a", "patch": "@@ -5460,6 +5460,22 @@ handle_spec_function (const char *p)\n static inline bool\n input_suffix_matches (const char *atom, const char *end_atom)\n {\n+  /* We special case the semantics of {.s:...} and {.S:...} and their\n+     negative variants.  Instead of testing the input filename suffix,\n+     we test whether the input source file is an assembler file or an\n+     assembler-with-cpp file respectively.  This allows us to correctly\n+     handle the -x command line option.  */\n+\n+  if (atom + 1 == end_atom\n+      && input_file_compiler\n+      && input_file_compiler->suffix)\n+    {\n+      if (*atom == 's')\n+\treturn !strcmp (input_file_compiler->suffix, \"@assembler\");\n+      if (*atom == 'S')\n+\treturn !strcmp (input_file_compiler->suffix, \"@assembler-with-cpp\");\n+    }\n+\n   return (input_suffix\n \t  && !strncmp (input_suffix, atom, end_atom - atom)\n \t  && input_suffix[end_atom - atom] == '\\0');"}]}