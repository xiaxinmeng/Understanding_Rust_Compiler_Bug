{"sha": "6a7c13a0cf2290b60ab36f9ce1027b92838586bd", "node_id": "C_kwDOANBUbNoAKDZhN2MxM2EwY2YyMjkwYjYwYWIzNmY5Y2UxMDI3YjkyODM4NTg2YmQ", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@arm.com", "date": "2021-10-20T15:39:17Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@foss.st.com", "date": "2022-02-22T15:55:09Z"}, "message": "arm: Convert more load/store MVE builtins to predicate qualifiers\n\nThis patch covers a few builtins where we do not use the <mode>\niterator and thus we cannot use <MVE_vpred>.\n\nFor v2di instructions, we keep the HI mode for predicates.\n\nMost of the work of this patch series was carried out while I was\nworking at STMicroelectronics as a Linaro assignee.\n\n2022-02-22  Christophe Lyon  <christophe.lyon@arm.com>\n\n\tgcc/\n\tPR target/100757\n\tPR target/101325\n\t* config/arm/arm-builtins.cc (STRSBS_P_QUALIFIERS): Use predicate\n\tqualifier.\n\t(STRSBU_P_QUALIFIERS): Likewise.\n\t(LDRGBS_Z_QUALIFIERS): Likewise.\n\t(LDRGBU_Z_QUALIFIERS): Likewise.\n\t(LDRGBWBXU_Z_QUALIFIERS): Likewise.\n\t(LDRGBWBS_Z_QUALIFIERS): Likewise.\n\t(LDRGBWBU_Z_QUALIFIERS): Likewise.\n\t(STRSBWBS_P_QUALIFIERS): Likewise.\n\t(STRSBWBU_P_QUALIFIERS): Likewise.\n\t* config/arm/mve.md: Use VxBI instead of HI.", "tree": {"sha": "9c10a33497fec77675851286fe67592b6d9b1152", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c10a33497fec77675851286fe67592b6d9b1152"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a7c13a0cf2290b60ab36f9ce1027b92838586bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a7c13a0cf2290b60ab36f9ce1027b92838586bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a7c13a0cf2290b60ab36f9ce1027b92838586bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a7c13a0cf2290b60ab36f9ce1027b92838586bd/comments", "author": null, "committer": null, "parents": [{"sha": "724d6566cd11c676f3bc082a9771784c825affb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/724d6566cd11c676f3bc082a9771784c825affb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/724d6566cd11c676f3bc082a9771784c825affb1"}], "stats": {"total": 86, "additions": 43, "deletions": 43}, "files": [{"sha": "5d582f182b9e5da2aa86ae78c4b883864ebc4043", "filename": "gcc/config/arm/arm-builtins.cc", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a7c13a0cf2290b60ab36f9ce1027b92838586bd/gcc%2Fconfig%2Farm%2Farm-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a7c13a0cf2290b60ab36f9ce1027b92838586bd/gcc%2Fconfig%2Farm%2Farm-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.cc?ref=6a7c13a0cf2290b60ab36f9ce1027b92838586bd", "patch": "@@ -689,13 +689,13 @@ arm_strss_p_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n static enum arm_type_qualifiers\n arm_strsbs_p_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_void, qualifier_unsigned, qualifier_immediate,\n-      qualifier_none, qualifier_unsigned};\n+      qualifier_none, qualifier_predicate};\n #define STRSBS_P_QUALIFIERS (arm_strsbs_p_qualifiers)\n \n static enum arm_type_qualifiers\n arm_strsbu_p_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_void, qualifier_unsigned, qualifier_immediate,\n-      qualifier_unsigned, qualifier_unsigned};\n+      qualifier_unsigned, qualifier_predicate};\n #define STRSBU_P_QUALIFIERS (arm_strsbu_p_qualifiers)\n \n static enum arm_type_qualifiers\n@@ -731,13 +731,13 @@ arm_ldrgbu_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n static enum arm_type_qualifiers\n arm_ldrgbs_z_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_none, qualifier_unsigned, qualifier_immediate,\n-      qualifier_unsigned};\n+      qualifier_predicate};\n #define LDRGBS_Z_QUALIFIERS (arm_ldrgbs_z_qualifiers)\n \n static enum arm_type_qualifiers\n arm_ldrgbu_z_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_unsigned, qualifier_unsigned, qualifier_immediate,\n-      qualifier_unsigned};\n+      qualifier_predicate};\n #define LDRGBU_Z_QUALIFIERS (arm_ldrgbu_z_qualifiers)\n \n static enum arm_type_qualifiers\n@@ -777,7 +777,7 @@ arm_ldrgbwbxu_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n static enum arm_type_qualifiers\n arm_ldrgbwbxu_z_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_unsigned, qualifier_unsigned, qualifier_immediate,\n-      qualifier_unsigned};\n+      qualifier_predicate};\n #define LDRGBWBXU_Z_QUALIFIERS (arm_ldrgbwbxu_z_qualifiers)\n \n static enum arm_type_qualifiers\n@@ -793,13 +793,13 @@ arm_ldrgbwbu_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n static enum arm_type_qualifiers\n arm_ldrgbwbs_z_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_none, qualifier_unsigned, qualifier_immediate,\n-      qualifier_unsigned};\n+      qualifier_predicate};\n #define LDRGBWBS_Z_QUALIFIERS (arm_ldrgbwbs_z_qualifiers)\n \n static enum arm_type_qualifiers\n arm_ldrgbwbu_z_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_unsigned, qualifier_unsigned, qualifier_immediate,\n-      qualifier_unsigned};\n+      qualifier_predicate};\n #define LDRGBWBU_Z_QUALIFIERS (arm_ldrgbwbu_z_qualifiers)\n \n static enum arm_type_qualifiers\n@@ -815,13 +815,13 @@ arm_strsbwbu_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n static enum arm_type_qualifiers\n arm_strsbwbs_p_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_unsigned, qualifier_unsigned, qualifier_const,\n-      qualifier_none, qualifier_unsigned};\n+      qualifier_none, qualifier_predicate};\n #define STRSBWBS_P_QUALIFIERS (arm_strsbwbs_p_qualifiers)\n \n static enum arm_type_qualifiers\n arm_strsbwbu_p_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_unsigned, qualifier_unsigned, qualifier_const,\n-      qualifier_unsigned, qualifier_unsigned};\n+      qualifier_unsigned, qualifier_predicate};\n #define STRSBWBU_P_QUALIFIERS (arm_strsbwbu_p_qualifiers)\n \n static enum arm_type_qualifiers"}, {"sha": "e291c673ac0fc30f1d25a3491fa519a0ecdb1fe2", "filename": "gcc/config/arm/mve.md", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a7c13a0cf2290b60ab36f9ce1027b92838586bd/gcc%2Fconfig%2Farm%2Fmve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a7c13a0cf2290b60ab36f9ce1027b92838586bd/gcc%2Fconfig%2Farm%2Fmve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmve.md?ref=6a7c13a0cf2290b60ab36f9ce1027b92838586bd", "patch": "@@ -7282,7 +7282,7 @@\n \t\t[(match_operand:V4SI 0 \"s_register_operand\" \"w\")\n \t\t (match_operand:SI 1 \"immediate_operand\" \"i\")\n \t\t (match_operand:V4SI 2 \"s_register_operand\" \"w\")\n-\t\t (match_operand:HI 3 \"vpr_register_operand\" \"Up\")]\n+\t\t (match_operand:V4BI 3 \"vpr_register_operand\" \"Up\")]\n \t VSTRWSBQ))\n   ]\n   \"TARGET_HAVE_MVE\"\n@@ -7371,7 +7371,7 @@\n   [(set (match_operand:V4SI 0 \"s_register_operand\" \"=&w\")\n \t(unspec:V4SI [(match_operand:V4SI 1 \"s_register_operand\" \"w\")\n \t\t      (match_operand:SI 2 \"immediate_operand\" \"i\")\n-\t\t      (match_operand:HI 3 \"vpr_register_operand\" \"Up\")]\n+\t\t      (match_operand:V4BI 3 \"vpr_register_operand\" \"Up\")]\n \t VLDRWGBQ))\n   ]\n   \"TARGET_HAVE_MVE\"\n@@ -7609,7 +7609,7 @@\n (define_insn \"mve_vldrwq_z_fv4sf\"\n   [(set (match_operand:V4SF 0 \"s_register_operand\" \"=w\")\n \t(unspec:V4SF [(match_operand:V4SI 1 \"mve_memory_operand\" \"Ux\")\n-\t(match_operand:HI 2 \"vpr_register_operand\" \"Up\")]\n+\t(match_operand:V4BI 2 \"vpr_register_operand\" \"Up\")]\n \t VLDRWQ_F))\n   ]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n@@ -7629,7 +7629,7 @@\n (define_insn \"mve_vldrwq_z_<supf>v4si\"\n   [(set (match_operand:V4SI 0 \"s_register_operand\" \"=w\")\n \t(unspec:V4SI [(match_operand:V4SI 1 \"mve_memory_operand\" \"Ux\")\n-\t(match_operand:HI 2 \"vpr_register_operand\" \"Up\")]\n+\t(match_operand:V4BI 2 \"vpr_register_operand\" \"Up\")]\n \t VLDRWQ))\n   ]\n   \"TARGET_HAVE_MVE\"\n@@ -7813,7 +7813,7 @@\n   [(set (match_operand:V8HF 0 \"s_register_operand\" \"=&w\")\n \t(unspec:V8HF [(match_operand:V8HI 1 \"memory_operand\" \"Us\")\n \t\t      (match_operand:V8HI 2 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:HI 3 \"vpr_register_operand\" \"Up\")]\n+\t\t      (match_operand:V8BI 3 \"vpr_register_operand\" \"Up\")]\n \t VLDRHQGO_F))\n   ]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n@@ -7855,7 +7855,7 @@\n   [(set (match_operand:V8HF 0 \"s_register_operand\" \"=&w\")\n \t(unspec:V8HF [(match_operand:V8HI 1 \"memory_operand\" \"Us\")\n \t\t      (match_operand:V8HI 2 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:HI 3 \"vpr_register_operand\" \"Up\")]\n+\t\t      (match_operand:V8BI 3 \"vpr_register_operand\" \"Up\")]\n \t VLDRHQGSO_F))\n   ]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n@@ -7897,7 +7897,7 @@\n   [(set (match_operand:V4SF 0 \"s_register_operand\" \"=&w\")\n \t(unspec:V4SF [(match_operand:V4SI 1 \"s_register_operand\" \"w\")\n \t\t      (match_operand:SI 2 \"immediate_operand\" \"i\")\n-\t\t      (match_operand:HI 3 \"vpr_register_operand\" \"Up\")]\n+\t\t      (match_operand:V4BI 3 \"vpr_register_operand\" \"Up\")]\n \t VLDRWQGB_F))\n   ]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n@@ -7958,7 +7958,7 @@\n   [(set (match_operand:V4SF 0 \"s_register_operand\" \"=&w\")\n \t(unspec:V4SF [(match_operand:V4SI 1 \"memory_operand\" \"Us\")\n \t\t      (match_operand:V4SI 2 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:HI 3 \"vpr_register_operand\" \"Up\")]\n+\t\t      (match_operand:V4BI 3 \"vpr_register_operand\" \"Up\")]\n \t VLDRWQGO_F))\n   ]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n@@ -7980,7 +7980,7 @@\n   [(set (match_operand:V4SI 0 \"s_register_operand\" \"=&w\")\n \t(unspec:V4SI [(match_operand:V4SI 1 \"memory_operand\" \"Us\")\n \t\t      (match_operand:V4SI 2 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:HI 3 \"vpr_register_operand\" \"Up\")]\n+\t\t      (match_operand:V4BI 3 \"vpr_register_operand\" \"Up\")]\n \t VLDRWGOQ))\n   ]\n   \"TARGET_HAVE_MVE\"\n@@ -8042,7 +8042,7 @@\n   [(set (match_operand:V4SF 0 \"s_register_operand\" \"=&w\")\n \t(unspec:V4SF [(match_operand:V4SI 1 \"memory_operand\" \"Us\")\n \t\t      (match_operand:V4SI 2 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:HI 3 \"vpr_register_operand\" \"Up\")]\n+\t\t      (match_operand:V4BI 3 \"vpr_register_operand\" \"Up\")]\n \t VLDRWQGSO_F))\n   ]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n@@ -8064,7 +8064,7 @@\n   [(set (match_operand:V4SI 0 \"s_register_operand\" \"=&w\")\n \t(unspec:V4SI [(match_operand:V4SI 1 \"memory_operand\" \"Us\")\n \t\t      (match_operand:V4SI 2 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:HI 3 \"vpr_register_operand\" \"Up\")]\n+\t\t      (match_operand:V4BI 3 \"vpr_register_operand\" \"Up\")]\n \t VLDRWGSOQ))\n   ]\n   \"TARGET_HAVE_MVE\"\n@@ -8104,7 +8104,7 @@\n (define_insn \"mve_vstrhq_p_fv8hf\"\n   [(set (match_operand:V8HI 0 \"mve_memory_operand\" \"=Ux\")\n \t(unspec:V8HI [(match_operand:V8HF 1 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:HI 2 \"vpr_register_operand\" \"Up\")]\n+\t\t      (match_operand:V8BI 2 \"vpr_register_operand\" \"Up\")]\n \t VSTRHQ_F))\n   ]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n@@ -8323,7 +8323,7 @@\n (define_insn \"mve_vstrwq_p_<supf>v4si\"\n   [(set (match_operand:V4SI 0 \"mve_memory_operand\" \"=Ux\")\n \t(unspec:V4SI [(match_operand:V4SI 1 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:HI 2 \"vpr_register_operand\" \"Up\")]\n+\t\t      (match_operand:V4BI 2 \"vpr_register_operand\" \"Up\")]\n \t VSTRWQ))\n   ]\n   \"TARGET_HAVE_MVE\"\n@@ -8576,7 +8576,7 @@\n   [(match_operand:V8HI 0 \"mve_scatter_memory\")\n    (match_operand:V8HI 1 \"s_register_operand\")\n    (match_operand:V8HF 2 \"s_register_operand\")\n-   (match_operand:HI 3 \"vpr_register_operand\")\n+   (match_operand:V8BI 3 \"vpr_register_operand\")\n    (unspec:V4SI [(const_int 0)] VSTRHQSO_F)]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n {\n@@ -8594,7 +8594,7 @@\n \t  [(match_operand:SI 0 \"register_operand\" \"r\")\n \t   (match_operand:V8HI 1 \"s_register_operand\" \"w\")\n \t   (match_operand:V8HF 2 \"s_register_operand\" \"w\")\n-\t   (match_operand:HI 3 \"vpr_register_operand\" \"Up\")]\n+\t   (match_operand:V8BI 3 \"vpr_register_operand\" \"Up\")]\n \t  VSTRHQSO_F))]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n   \"vpst\\;vstrht.16\\t%q2, [%0, %q1]\"\n@@ -8635,7 +8635,7 @@\n   [(match_operand:V8HI 0 \"memory_operand\" \"=Us\")\n    (match_operand:V8HI 1 \"s_register_operand\" \"w\")\n    (match_operand:V8HF 2 \"s_register_operand\" \"w\")\n-   (match_operand:HI 3 \"vpr_register_operand\" \"Up\")\n+   (match_operand:V8BI 3 \"vpr_register_operand\" \"Up\")\n    (unspec:V4SI [(const_int 0)] VSTRHQSSO_F)]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n {\n@@ -8654,7 +8654,7 @@\n \t  [(match_operand:SI 0 \"register_operand\" \"r\")\n \t   (match_operand:V8HI 1 \"s_register_operand\" \"w\")\n \t   (match_operand:V8HF 2 \"s_register_operand\" \"w\")\n-\t   (match_operand:HI 3 \"vpr_register_operand\" \"Up\")]\n+\t   (match_operand:V8BI 3 \"vpr_register_operand\" \"Up\")]\n \t  VSTRHQSSO_F))]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n   \"vpst\\;vstrht.16\\t%q2, [%0, %q1, uxtw #1]\"\n@@ -8691,7 +8691,7 @@\n \t\t[(match_operand:V4SI 0 \"s_register_operand\" \"w\")\n \t\t (match_operand:SI 1 \"immediate_operand\" \"i\")\n \t\t (match_operand:V4SF 2 \"s_register_operand\" \"w\")\n-\t\t (match_operand:HI 3 \"vpr_register_operand\" \"Up\")]\n+\t\t (match_operand:V4BI 3 \"vpr_register_operand\" \"Up\")]\n \t VSTRWQSB_F))\n   ]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n@@ -8740,7 +8740,7 @@\n   [(match_operand:V4SI 0 \"mve_scatter_memory\")\n    (match_operand:V4SI 1 \"s_register_operand\")\n    (match_operand:V4SF 2 \"s_register_operand\")\n-   (match_operand:HI 3 \"vpr_register_operand\")\n+   (match_operand:V4BI 3 \"vpr_register_operand\")\n    (unspec:V4SI [(const_int 0)] VSTRWQSO_F)]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n {\n@@ -8758,7 +8758,7 @@\n \t  [(match_operand:SI 0 \"register_operand\" \"r\")\n \t   (match_operand:V4SI 1 \"s_register_operand\" \"w\")\n \t   (match_operand:V4SF 2 \"s_register_operand\" \"w\")\n-\t   (match_operand:HI 3 \"vpr_register_operand\" \"Up\")]\n+\t   (match_operand:V4BI 3 \"vpr_register_operand\" \"Up\")]\n \t  VSTRWQSO_F))]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n   \"vpst\\;vstrwt.32\\t%q2, [%0, %q1]\"\n@@ -8771,7 +8771,7 @@\n   [(match_operand:V4SI 0 \"mve_scatter_memory\")\n    (match_operand:V4SI 1 \"s_register_operand\")\n    (match_operand:V4SI 2 \"s_register_operand\")\n-   (match_operand:HI 3 \"vpr_register_operand\")\n+   (match_operand:V4BI 3 \"vpr_register_operand\")\n    (unspec:V4SI [(const_int 0)] VSTRWSOQ)]\n   \"TARGET_HAVE_MVE\"\n {\n@@ -8789,7 +8789,7 @@\n \t  [(match_operand:SI 0 \"register_operand\" \"r\")\n \t   (match_operand:V4SI 1 \"s_register_operand\" \"w\")\n \t   (match_operand:V4SI 2 \"s_register_operand\" \"w\")\n-\t   (match_operand:HI 3 \"vpr_register_operand\" \"Up\")]\n+\t   (match_operand:V4BI 3 \"vpr_register_operand\" \"Up\")]\n \t  VSTRWSOQ))]\n   \"TARGET_HAVE_MVE\"\n   \"vpst\\;vstrwt.32\\t%q2, [%0, %q1]\"\n@@ -8858,7 +8858,7 @@\n   [(match_operand:V4SI 0 \"mve_scatter_memory\")\n    (match_operand:V4SI 1 \"s_register_operand\")\n    (match_operand:V4SF 2 \"s_register_operand\")\n-   (match_operand:HI 3 \"vpr_register_operand\")\n+   (match_operand:V4BI 3 \"vpr_register_operand\")\n    (unspec:V4SI [(const_int 0)] VSTRWQSSO_F)]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n {\n@@ -8877,7 +8877,7 @@\n \t  [(match_operand:SI 0 \"register_operand\" \"r\")\n \t   (match_operand:V4SI 1 \"s_register_operand\" \"w\")\n \t   (match_operand:V4SF 2 \"s_register_operand\" \"w\")\n-\t   (match_operand:HI 3 \"vpr_register_operand\" \"Up\")]\n+\t   (match_operand:V4BI 3 \"vpr_register_operand\" \"Up\")]\n \t  VSTRWQSSO_F))]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n   \"vpst\\;vstrwt.32\\t%q2, [%0, %q1, uxtw #2]\"\n@@ -8890,7 +8890,7 @@\n   [(match_operand:V4SI 0 \"mve_scatter_memory\")\n    (match_operand:V4SI 1 \"s_register_operand\")\n    (match_operand:V4SI 2 \"s_register_operand\")\n-   (match_operand:HI 3 \"vpr_register_operand\")\n+   (match_operand:V4BI 3 \"vpr_register_operand\")\n    (unspec:V4SI [(const_int 0)] VSTRWSSOQ)]\n   \"TARGET_HAVE_MVE\"\n {\n@@ -8909,7 +8909,7 @@\n \t  [(match_operand:SI 0 \"register_operand\" \"r\")\n \t   (match_operand:V4SI 1 \"s_register_operand\" \"w\")\n \t   (match_operand:V4SI 2 \"s_register_operand\" \"w\")\n-\t   (match_operand:HI 3 \"vpr_register_operand\" \"Up\")]\n+\t   (match_operand:V4BI 3 \"vpr_register_operand\" \"Up\")]\n \t  VSTRWSSOQ))]\n   \"TARGET_HAVE_MVE\"\n   \"vpst\\;vstrwt.32\\t%q2, [%0, %q1, uxtw #2]\"\n@@ -9376,7 +9376,7 @@\n \t\t[(match_operand:V4SI 1 \"s_register_operand\" \"0\")\n \t\t (match_operand:SI 2 \"mve_vldrd_immediate\" \"Ri\")\n \t\t (match_operand:V4SI 3 \"s_register_operand\" \"w\")\n-\t\t (match_operand:HI 4 \"vpr_register_operand\")]\n+\t\t (match_operand:V4BI 4 \"vpr_register_operand\")]\n \tVSTRWSBWBQ))\n    (set (match_operand:V4SI 0 \"s_register_operand\" \"=w\")\n \t(unspec:V4SI [(match_dup 1) (match_dup 2)]\n@@ -9427,7 +9427,7 @@\n \t\t[(match_operand:V4SI 1 \"s_register_operand\" \"0\")\n \t\t (match_operand:SI 2 \"mve_vldrd_immediate\" \"Ri\")\n \t\t (match_operand:V4SF 3 \"s_register_operand\" \"w\")\n-\t\t (match_operand:HI 4 \"vpr_register_operand\")]\n+\t\t (match_operand:V4BI 4 \"vpr_register_operand\")]\n \tVSTRWQSBWB_F))\n    (set (match_operand:V4SI 0 \"s_register_operand\" \"=w\")\n \t(unspec:V4SI [(match_dup 1) (match_dup 2)]\n@@ -9551,7 +9551,7 @@\n   [(match_operand:V4SI 0 \"s_register_operand\")\n    (match_operand:V4SI 1 \"s_register_operand\")\n    (match_operand:SI 2 \"mve_vldrd_immediate\")\n-   (match_operand:HI 3 \"vpr_register_operand\")\n+   (match_operand:V4BI 3 \"vpr_register_operand\")\n    (unspec:V4SI [(const_int 0)] VLDRWGBWBQ)]\n   \"TARGET_HAVE_MVE\"\n {\n@@ -9566,7 +9566,7 @@\n   [(match_operand:V4SI 0 \"s_register_operand\")\n    (match_operand:V4SI 1 \"s_register_operand\")\n    (match_operand:SI 2 \"mve_vldrd_immediate\")\n-   (match_operand:HI 3 \"vpr_register_operand\")\n+   (match_operand:V4BI 3 \"vpr_register_operand\")\n    (unspec:V4SI [(const_int 0)] VLDRWGBWBQ)]\n   \"TARGET_HAVE_MVE\"\n {\n@@ -9585,7 +9585,7 @@\n   [(set (match_operand:V4SI 0 \"s_register_operand\" \"=&w\")\n \t(unspec:V4SI [(match_operand:V4SI 2 \"s_register_operand\" \"1\")\n \t\t      (match_operand:SI 3 \"mve_vldrd_immediate\" \"Ri\")\n-\t\t      (match_operand:HI 4 \"vpr_register_operand\" \"Up\")\n+\t\t      (match_operand:V4BI 4 \"vpr_register_operand\" \"Up\")\n \t\t      (mem:BLK (scratch))]\n \t VLDRWGBWBQ))\n    (set (match_operand:V4SI 1 \"s_register_operand\" \"=&w\")\n@@ -9659,7 +9659,7 @@\n   [(match_operand:V4SI 0 \"s_register_operand\")\n    (match_operand:V4SI 1 \"s_register_operand\")\n    (match_operand:SI 2 \"mve_vldrd_immediate\")\n-   (match_operand:HI 3 \"vpr_register_operand\")\n+   (match_operand:V4BI 3 \"vpr_register_operand\")\n    (unspec:V4SI [(const_int 0)] VLDRWQGBWB_F)]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n {\n@@ -9675,7 +9675,7 @@\n   [(match_operand:V4SF 0 \"s_register_operand\")\n    (match_operand:V4SI 1 \"s_register_operand\")\n    (match_operand:SI 2 \"mve_vldrd_immediate\")\n-   (match_operand:HI 3 \"vpr_register_operand\")\n+   (match_operand:V4BI 3 \"vpr_register_operand\")\n    (unspec:V4SI [(const_int 0)] VLDRWQGBWB_F)]\n   \"TARGET_HAVE_MVE && TARGET_HAVE_MVE_FLOAT\"\n {\n@@ -9694,7 +9694,7 @@\n   [(set (match_operand:V4SF 0 \"s_register_operand\" \"=&w\")\n \t(unspec:V4SF [(match_operand:V4SI 2 \"s_register_operand\" \"1\")\n \t\t      (match_operand:SI 3 \"mve_vldrd_immediate\" \"Ri\")\n-\t\t      (match_operand:HI 4 \"vpr_register_operand\" \"Up\")\n+\t\t      (match_operand:V4BI 4 \"vpr_register_operand\" \"Up\")\n \t\t      (mem:BLK (scratch))]\n \t VLDRWQGBWB_F))\n    (set (match_operand:V4SI 1 \"s_register_operand\" \"=&w\")"}]}