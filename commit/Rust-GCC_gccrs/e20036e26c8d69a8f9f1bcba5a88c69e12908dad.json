{"sha": "e20036e26c8d69a8f9f1bcba5a88c69e12908dad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIwMDM2ZTI2YzhkNjlhOGY5ZjFiY2JhNWE4OGM2OWUxMjkwOGRhZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-03-17T08:22:38Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-03-17T08:22:38Z"}, "message": "4.cc: Fix for 64-bit pointers.\n\n\n2004-03-16  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/22_locale/num_put/put/char/4.cc: Fix for 64-bit pointers.\n\t* testsuite/22_locale/num_put/put/wchar_t/4.cc: Likewise.\n\nFrom-SVN: r79580", "tree": {"sha": "5120f61e32d6a85280404016ca728ca4f3084d02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5120f61e32d6a85280404016ca728ca4f3084d02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e20036e26c8d69a8f9f1bcba5a88c69e12908dad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e20036e26c8d69a8f9f1bcba5a88c69e12908dad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e20036e26c8d69a8f9f1bcba5a88c69e12908dad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e20036e26c8d69a8f9f1bcba5a88c69e12908dad/comments", "author": null, "committer": null, "parents": [{"sha": "3e368284acf08cd61daf74eb81347e882f60f106", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e368284acf08cd61daf74eb81347e882f60f106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e368284acf08cd61daf74eb81347e882f60f106"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "247ddaf7348786c512ee4a3f7c25951d4550305f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e20036e26c8d69a8f9f1bcba5a88c69e12908dad/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e20036e26c8d69a8f9f1bcba5a88c69e12908dad/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e20036e26c8d69a8f9f1bcba5a88c69e12908dad", "patch": "@@ -1,3 +1,8 @@\n+2004-03-16  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/22_locale/num_put/put/char/4.cc: Fix for 64-bit pointers.\n+\t* testsuite/22_locale/num_put/put/wchar_t/4.cc: Likewise.\n+\t\n 2004-03-15  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.tcc (money_get<>::_M_extract):"}, {"sha": "2c9971a2038af0bcca6328b50f099326b54723e5", "filename": "libstdc++-v3/testsuite/22_locale/num_put/put/char/4.cc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e20036e26c8d69a8f9f1bcba5a88c69e12908dad/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e20036e26c8d69a8f9f1bcba5a88c69e12908dad/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F4.cc?ref=e20036e26c8d69a8f9f1bcba5a88c69e12908dad", "patch": "@@ -1,6 +1,6 @@\n // 2001-11-19 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -36,8 +36,8 @@ void test04()\n   typedef num_put<char, iter_type> num_put_type;\n   const locale loc_c = locale::classic();\n   const string str(\"1798 Lady Elgin\");\n-  const string str2(\"0 true 0xbffff74c Mary Nisbet\");\n-  const string x(15, 'x'); // have to have allocated string!\n+  const string x(18, 'x'); // have to have allocated string!\n+                           // allow for \"0x\" + 16 hex digits (64-bit pointer)\n   string res;\n \n   ostringstream oss; \n@@ -56,31 +56,31 @@ void test04()\n   res = x;\n   iter_type ret1 = tp.put(res.begin(), oss, ' ', l);\n   string sanity1(res.begin(), ret1);\n-  VERIFY( res == \"1798xxxxxxxxxxx\" );\n+  VERIFY( res == \"1798xxxxxxxxxxxxxx\" );\n   VERIFY( sanity1 == \"1798\" );\n \n   // 02 put(long double)\n   const long double ld = 1798.0;\n   res = x;\n   iter_type ret2 = tp.put(res.begin(), oss, ' ', ld);\n   string sanity2(res.begin(), ret2);\n-  VERIFY( res == \"1798xxxxxxxxxxx\" );\n+  VERIFY( res == \"1798xxxxxxxxxxxxxx\" );\n   VERIFY( sanity2 == \"1798\" );\n \n   // 03 put(bool)\n   bool b = 1;\n   res = x;\n   iter_type ret3 = tp.put(res.begin(), oss, ' ', b);\n   string sanity3(res.begin(), ret3);\n-  VERIFY( res == \"1xxxxxxxxxxxxxx\" );\n+  VERIFY( res == \"1xxxxxxxxxxxxxxxxx\" );\n   VERIFY( sanity3 == \"1\" );\n \n   b = 0;\n   res = x;\n   oss.setf(ios_base::boolalpha);\n   iter_type ret4 = tp.put(res.begin(), oss, ' ', b);\n   string sanity4(res.begin(), ret4);\n-  VERIFY( res == \"falsexxxxxxxxxx\" );\n+  VERIFY( res == \"falsexxxxxxxxxxxxx\" );\n   VERIFY( sanity4 == \"false\" );\n \n   // 04 put(void*)"}, {"sha": "5de209f7dede775cb95197498c36f5700c39321d", "filename": "libstdc++-v3/testsuite/22_locale/num_put/put/wchar_t/4.cc", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e20036e26c8d69a8f9f1bcba5a88c69e12908dad/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e20036e26c8d69a8f9f1bcba5a88c69e12908dad/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F4.cc?ref=e20036e26c8d69a8f9f1bcba5a88c69e12908dad", "patch": "@@ -1,6 +1,6 @@\n // 2001-11-19 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -36,9 +36,8 @@ void test04()\n   typedef num_put<wchar_t, iter_type> num_put_type;\n   const locale loc_c = locale::classic();\n   const wstring str(L\"1798 Lady Elgin\");\n-  const wstring str2(L\"0 true 0xbffff74c Mary Nisbet\");\n-  const wstring x(15, L'x'); // have to have allocated wstring!\n-  wstring res;\n+  const wstring x(18, L'x'); // have to have allocated wstring!\n+  wstring res;               // allow for \"0x\" + 16 hex digits (64-bit pointer)\n \n   wostringstream oss; \n   oss.imbue(locale(loc_c, new num_put_type));\n@@ -56,31 +55,31 @@ void test04()\n   res = x;\n   iter_type ret1 = tp.put(res.begin(), oss, ' ', l);\n   wstring sanity1(res.begin(), ret1);\n-  VERIFY( res == L\"1798xxxxxxxxxxx\" );\n+  VERIFY( res == L\"1798xxxxxxxxxxxxxx\" );\n   VERIFY( sanity1 == L\"1798\" );\n \n   // 02 put(long double)\n   const long double ld = 1798.0;\n   res = x;\n   iter_type ret2 = tp.put(res.begin(), oss, ' ', ld);\n   wstring sanity2(res.begin(), ret2);\n-  VERIFY( res == L\"1798xxxxxxxxxxx\" );\n+  VERIFY( res == L\"1798xxxxxxxxxxxxxx\" );\n   VERIFY( sanity2 == L\"1798\" );\n \n   // 03 put(bool)\n   bool b = 1;\n   res = x;\n   iter_type ret3 = tp.put(res.begin(), oss, ' ', b);\n   wstring sanity3(res.begin(), ret3);\n-  VERIFY( res == L\"1xxxxxxxxxxxxxx\" );\n+  VERIFY( res == L\"1xxxxxxxxxxxxxxxxx\" );\n   VERIFY( sanity3 == L\"1\" );\n \n   b = 0;\n   res = x;\n   oss.setf(ios_base::boolalpha);\n   iter_type ret4 = tp.put(res.begin(), oss, ' ', b);\n   wstring sanity4(res.begin(), ret4);\n-  VERIFY( res == L\"falsexxxxxxxxxx\" );\n+  VERIFY( res == L\"falsexxxxxxxxxxxxx\" );\n   VERIFY( sanity4 == L\"false\" );\n \n   // 04 put(void*)\n@@ -91,7 +90,7 @@ void test04()\n   iter_type ret5 = tp.put(res.begin(), oss, ' ', cv);\n   wstring sanity5(res.begin(), ret5);\n   VERIFY( sanity5.size() );\n-  VERIFY( sanity5[1] == 'x' );\n+  VERIFY( sanity5[1] == L'x' );\n }\n \n int main()"}]}