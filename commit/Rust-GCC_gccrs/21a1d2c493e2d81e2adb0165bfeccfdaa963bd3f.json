{"sha": "21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFhMWQyYzQ5M2UyZDgxZTJhZGIwMTY1YmZlY2NmZGFhOTYzYmQzZg==", "commit": {"author": {"name": "Nathan Myers", "email": "ncm@cantrip.org", "date": "2003-04-14T22:43:32Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-04-14T22:43:32Z"}, "message": "PR libstdc++/9701 (in_avail())\n\n2003-04-14  Nathan Myers  <ncm@cantrip.org>\n\t    Paolo Carlini  <pcarlini@unitus.it>\n\n\tPR libstdc++/9701 (in_avail())\n\t* include/std/std_streambuf.h (in_avail): Simplify, in_avail\n\tdoesn't care if there is anything in some putback cell.\n\t* testsuite/27_io/basic_streambuf/in_avail/char/9701-3.cc: Add.\n\n\t* testsuite/27_io/basic_filebuf/in_avail/char/1.cc: Remove some\n\tunused string literals.\n\nCo-Authored-By: Paolo Carlini <pcarlini@unitus.it>\n\nFrom-SVN: r65603", "tree": {"sha": "64065f4ecbc88f651936567cbfbc56ac32c2a405", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64065f4ecbc88f651936567cbfbc56ac32c2a405"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f/comments", "author": {"login": "ncm", "id": 215047, "node_id": "MDQ6VXNlcjIxNTA0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/215047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ncm", "html_url": "https://github.com/ncm", "followers_url": "https://api.github.com/users/ncm/followers", "following_url": "https://api.github.com/users/ncm/following{/other_user}", "gists_url": "https://api.github.com/users/ncm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ncm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ncm/subscriptions", "organizations_url": "https://api.github.com/users/ncm/orgs", "repos_url": "https://api.github.com/users/ncm/repos", "events_url": "https://api.github.com/users/ncm/events{/privacy}", "received_events_url": "https://api.github.com/users/ncm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "629f6514b833a56608fb06fe6a0832a1782a04c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/629f6514b833a56608fb06fe6a0832a1782a04c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/629f6514b833a56608fb06fe6a0832a1782a04c9"}], "stats": {"total": 92, "additions": 72, "deletions": 20}, "files": [{"sha": "f43490cd9756930d73d63c0974f4f0a05e6cd752", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f", "patch": "@@ -1,3 +1,14 @@\n+2003-04-14  Nathan Myers  <ncm@cantrip.org>\n+            Paolo Carlini  <pcarlini@unitus.it>\n+\n+\tPR libstdc++/9701 (in_avail())\n+\t* include/std/std_streambuf.h (in_avail): Simplify, in_avail\n+\tdoesn't care if there is anything in some putback cell.\n+\t* testsuite/27_io/basic_streambuf/in_avail/char/9701-3.cc: Add.\n+\n+\t* testsuite/27_io/basic_filebuf/in_avail/char/1.cc: Remove some\n+\tunused string literals.\n+\n 2003-04-14  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/fstream.tcc (basic_filebuf::setbuf): Don't set"}, {"sha": "62ea740da2a1d806031f756ab13c9db7e3094c73", "filename": "libstdc++-v3/include/std/std_streambuf.h", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h?ref=21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f", "patch": "@@ -403,21 +403,8 @@ namespace std\n       streamsize \n       in_avail() \n       { \n-\tstreamsize __ret;\n-\tif (_M_in_cur && _M_in_cur < _M_in_end)\n-\t  {\n-\t    if (_M_pback_init)\n-\t      {\n-\t\tsize_t __save_len =  _M_pback_end_save - _M_pback_cur_save;\n-\t\tsize_t __pback_len = _M_in_cur - _M_pback;\n-\t\t__ret = __save_len - __pback_len;\n-\t      }\n-\t    else\n-\t      __ret = this->egptr() - this->gptr();\n-\t  }\n-\telse\n-\t  __ret = this->showmanyc();\n-\treturn __ret;\n+\tstreamsize __ret = _M_in_end - _M_in_cur;\n+\treturn __ret ? __ret : this->showmanyc();\n       }\n \n       /**"}, {"sha": "306060e593707a96e3d828f4b92fbc5a3d71cc3d", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/in_avail/char/1.cc", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fin_avail%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fin_avail%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fin_avail%2Fchar%2F1.cc?ref=21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f", "patch": "@@ -44,11 +44,6 @@ const char carray_02[] = \"memphis, new orleans, and savanah\";\n const char name_01[] = \"filebuf_virtuals-1.txt\"; // file with data in it\n const char name_02[] = \"filebuf_virtuals-2.txt\"; // empty file, need to create\n const char name_03[] = \"filebuf_virtuals-3.txt\"; // empty file, need to create\n-const char name_04[] = \"filebuf_virtuals-4.txt\"; // empty file, need to create\n-const char name_05[] = \"filebuf_virtuals-5.txt\"; // empty file, need to create\n-const char name_06[] = \"filebuf_virtuals-6.txt\"; // empty file, need to create\n-const char name_07[] = \"filebuf_virtuals-7.txt\"; // empty file, need to create\n-const char name_08[] = \"filebuf_virtuals-8.txt\"; // empty file, need to create\n \n class derived_filebuf: public std::filebuf\n {"}, {"sha": "4f98839d907217fb3c467568b3df8cdc50d8aa44", "filename": "libstdc++-v3/testsuite/27_io/basic_streambuf/in_avail/char/9701-3.cc", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fin_avail%2Fchar%2F9701-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fin_avail%2Fchar%2F9701-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fin_avail%2Fchar%2F9701-3.cc?ref=21a1d2c493e2d81e2adb0165bfeccfdaa963bd3f", "patch": "@@ -0,0 +1,59 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.5.2.2.3 Get area\n+\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+class Derived_fbuf : public std::filebuf\n+{\n+public:\n+  const char_type* pub_egptr() const\n+  { return egptr(); }\n+\n+  const char_type* pub_gptr() const\n+  { return gptr(); }\n+};\n+\n+// libstdc++/9701 (in_avail)\n+void test01()\n+{\n+  using namespace std;\n+  bool test = true;\n+  const char* name = \"tmp_file1\";\n+\n+  Derived_fbuf df2;\n+  df2.open(name, ios_base::in | ios_base::out | ios_base::trunc);\n+\n+  df2.sputn(\"Comomoc\", 7);\n+\n+  df2.pubseekoff(0, ios_base::beg);\n+  df2.sbumpc();\n+  df2.sputbackc('t');\n+\n+  VERIFY( df2.pub_gptr() < df2.pub_egptr() );\n+  VERIFY( df2.in_avail() == df2.pub_egptr() - df2.pub_gptr() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  return 0;\n+}"}]}