{"sha": "a5b38cdf510c827369e9577056de347ada498e37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTViMzhjZGY1MTBjODI3MzY5ZTk1NzcwNTZkZTM0N2FkYTQ5OGUzNw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-04-01T18:09:21Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-04-01T18:09:21Z"}, "message": "re PR c++/4926 (C++ ABI needs clarification on mangling of complex expressions)\n\n2009-04-01  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR c++/4926\n\t* g++.dg/template/pr4926-1.C: New.\n\nFrom-SVN: r145423", "tree": {"sha": "f2e4e91b25a16224e35b949cd2f3584079828895", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2e4e91b25a16224e35b949cd2f3584079828895"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5b38cdf510c827369e9577056de347ada498e37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b38cdf510c827369e9577056de347ada498e37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5b38cdf510c827369e9577056de347ada498e37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b38cdf510c827369e9577056de347ada498e37/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "839a3b8ab591c78acfcbc99842cda631d2a3b829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/839a3b8ab591c78acfcbc99842cda631d2a3b829", "html_url": "https://github.com/Rust-GCC/gccrs/commit/839a3b8ab591c78acfcbc99842cda631d2a3b829"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "b104b2ad59fc5c5008d0ee28039991b784bac00e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b38cdf510c827369e9577056de347ada498e37/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b38cdf510c827369e9577056de347ada498e37/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5b38cdf510c827369e9577056de347ada498e37", "patch": "@@ -1,3 +1,8 @@\n+2009-04-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR c++/4926\n+\t* g++.dg/template/pr4926-1.C: New.\n+\n 2009-04-01  Xinliang David Li  <davidxl@google.com>\n \n \t* gcc.target/i386/all_one_m128i.c: New test."}, {"sha": "ec2b226fe9228d9235568a49f5a37a50a83e70c8", "filename": "gcc/testsuite/g++.dg/template/pr4926-1.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b38cdf510c827369e9577056de347ada498e37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr4926-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b38cdf510c827369e9577056de347ada498e37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr4926-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr4926-1.C?ref=a5b38cdf510c827369e9577056de347ada498e37", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/4926\n+// { dg-do compile }\n+\n+template <unsigned> struct X { typedef int Type; };\n+template <typename T> struct Y { char array[1]; };\n+ \n+template<typename T> Y<T> P(T);  // acts as \"Y<typeof(T)>\"\n+ \n+struct F { int operator()() const; };\n+ \n+template <typename T>\n+typename X<sizeof(P(  T()()  ).array)>::Type  foo();\n+ \n+void\n+bar () \n+{ \n+  foo<F>();\n+}"}]}