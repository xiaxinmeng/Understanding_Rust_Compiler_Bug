{"sha": "3e5a19053310ad090b930fbecebceb28bd1b91a4", "node_id": "C_kwDOANBUbNoAKDNlNWExOTA1MzMxMGFkMDkwYjkzMGZiZWNlYmNlYjI4YmQxYjkxYTQ", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-11-11T10:27:07Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-11-11T12:17:32Z"}, "message": "Resolve entry loop condition for the edge remaining in the loop.\n\nThere is a known failure for gfortran.dg/vector_subscript_1.f90.  It\nwas previously failing for all optimization levels except -Os.\nGetting the loop header copying right, now makes it fail for all\nlevels :-).\n\nTested on x86-64 Linux.\n\nCo-authored-by: Richard Biener <rguenther@suse.de>\n\ngcc/ChangeLog:\n\n\t* tree-ssa-loop-ch.c (entry_loop_condition_is_static): Resolve\n\tstatically to the edge remaining in the loop.", "tree": {"sha": "29e0dbb973dd22427b5c12507c9d1e64fdcc6c8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29e0dbb973dd22427b5c12507c9d1e64fdcc6c8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e5a19053310ad090b930fbecebceb28bd1b91a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e5a19053310ad090b930fbecebceb28bd1b91a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e5a19053310ad090b930fbecebceb28bd1b91a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e5a19053310ad090b930fbecebceb28bd1b91a4/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5fed4063f428a14f5b91533d5954b9bf4e3e7db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5fed4063f428a14f5b91533d5954b9bf4e3e7db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5fed4063f428a14f5b91533d5954b9bf4e3e7db"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "af3401f112ceb9c1bd8108ab7384a29d305e840b", "filename": "gcc/tree-ssa-loop-ch.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e5a19053310ad090b930fbecebceb28bd1b91a4/gcc%2Ftree-ssa-loop-ch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e5a19053310ad090b930fbecebceb28bd1b91a4/gcc%2Ftree-ssa-loop-ch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ch.c?ref=3e5a19053310ad090b930fbecebceb28bd1b91a4", "patch": "@@ -57,10 +57,24 @@ entry_loop_condition_is_static (class loop *l, path_range_query *query)\n       || !irange::supports_type_p (TREE_TYPE (gimple_cond_lhs (last))))\n     return false;\n \n+  edge true_e, false_e;\n+  extract_true_false_edges_from_block (e->dest, &true_e, &false_e);\n+\n+  /* If neither edge is the exit edge, this is not a case we'd like to\n+     special-case.  */\n+  if (!loop_exit_edge_p (l, true_e) && !loop_exit_edge_p (l, false_e))\n+    return false;\n+\n+  tree desired_static_value;\n+  if (loop_exit_edge_p (l, true_e))\n+    desired_static_value = boolean_false_node;\n+  else\n+    desired_static_value = boolean_true_node;\n+\n   int_range<2> r;\n   query->compute_ranges (e);\n   query->range_of_stmt (r, last);\n-  return r == int_range<2> (boolean_true_node, boolean_true_node);\n+  return r == int_range<2> (desired_static_value, desired_static_value);\n }\n \n /* Check whether we should duplicate HEADER of LOOP.  At most *LIMIT"}]}