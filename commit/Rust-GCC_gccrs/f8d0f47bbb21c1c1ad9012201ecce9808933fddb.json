{"sha": "f8d0f47bbb21c1c1ad9012201ecce9808933fddb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhkMGY0N2JiYjIxYzFjMWFkOTAxMjIwMWVjY2U5ODA4OTMzZmRkYg==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2014-06-29T08:42:44Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2014-06-29T08:42:44Z"}, "message": "ieee_6.f90: Allow inexact together with underflow.\n\n* gfortran.dg/ieee/ieee_6.f90: Allow inexact together with\nunderflow.\n\nFrom-SVN: r212120", "tree": {"sha": "f5b77bb4ef8a7d33f8dd3a0bcbe0701f93ec4d93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5b77bb4ef8a7d33f8dd3a0bcbe0701f93ec4d93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8d0f47bbb21c1c1ad9012201ecce9808933fddb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8d0f47bbb21c1c1ad9012201ecce9808933fddb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8d0f47bbb21c1c1ad9012201ecce9808933fddb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8d0f47bbb21c1c1ad9012201ecce9808933fddb/comments", "author": null, "committer": null, "parents": [{"sha": "b82fe35410080429da8544b4c8b62e7038883f2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82fe35410080429da8544b4c8b62e7038883f2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b82fe35410080429da8544b4c8b62e7038883f2c"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "879a8443359e42ce689fcb57042f75146dc4d3f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d0f47bbb21c1c1ad9012201ecce9808933fddb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d0f47bbb21c1c1ad9012201ecce9808933fddb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f8d0f47bbb21c1c1ad9012201ecce9808933fddb", "patch": "@@ -1,7 +1,12 @@\n+2014-06-29  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* gfortran.dg/ieee/ieee_6.f90: Allow inexact together with\n+\tunderflow.\n+\n 2014-06-28  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/29383\n-\t* lib/target-supports.exp (check_effective_target_fortran_ieee): \n+\t* lib/target-supports.exp (check_effective_target_fortran_ieee):\n \tNew function.\n \t* gfortran.dg/ieee/ieee.exp: New file.\n \t* gfortran.dg/ieee/ieee_1.F90: New file."}, {"sha": "8fb4f6f80d20af1d2178cd4ee7a8947a935766c1", "filename": "gcc/testsuite/gfortran.dg/ieee/ieee_6.f90", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d0f47bbb21c1c1ad9012201ecce9808933fddb/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d0f47bbb21c1c1ad9012201ecce9808933fddb/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee_6.f90?ref=f8d0f47bbb21c1c1ad9012201ecce9808933fddb", "patch": "@@ -40,7 +40,9 @@\n \n   call ieee_get_flag(ieee_all, flags)\n   if (.not. (all(flags .eqv. [.false.,.false.,.true.,.true.,.false.]) &\n-             .or. all(flags .eqv. [.false.,.false.,.true.,.false.,.false.]))) call abort\n+             .or. all(flags .eqv. [.false.,.false.,.true.,.true.,.true.]) &\n+             .or. all(flags .eqv. [.false.,.false.,.true.,.false.,.false.]) &\n+             .or. all(flags .eqv. [.false.,.false.,.true.,.false.,.true.]))) call abort\n   call ieee_get_rounding_mode(mode)\n   if (mode /= ieee_to_zero) call abort\n   call ieee_get_halting_mode(ieee_all, halt)\n@@ -50,7 +52,9 @@\n \n   call ieee_get_flag(ieee_all, flags)\n   if (.not. (all(flags .eqv. [.false.,.false.,.true.,.true.,.false.]) &\n-             .or. all(flags .eqv. [.false.,.false.,.true.,.false.,.false.]))) call abort\n+             .or. all(flags .eqv. [.false.,.false.,.true.,.true.,.true.]) &\n+             .or. all(flags .eqv. [.false.,.false.,.true.,.false.,.false.]) &\n+             .or. all(flags .eqv. [.false.,.false.,.true.,.false.,.true.]))) call abort\n   call ieee_get_rounding_mode(mode)\n   if (mode /= ieee_to_zero) call abort\n   call ieee_get_halting_mode(ieee_all, halt)\n@@ -69,7 +73,9 @@\n \n   call ieee_get_flag(ieee_all, flags)\n   if (.not. (all(flags .eqv. [.false.,.false.,.true.,.true.,.false.]) &\n-             .or. all(flags .eqv. [.false.,.false.,.true.,.false.,.false.]))) call abort\n+             .or. all(flags .eqv. [.false.,.false.,.true.,.true.,.true.]) &\n+             .or. all(flags .eqv. [.false.,.false.,.true.,.false.,.false.]) &\n+             .or. all(flags .eqv. [.false.,.false.,.true.,.false.,.true.]))) call abort\n   call ieee_get_rounding_mode(mode)\n   if (mode /= ieee_to_zero) call abort\n   call ieee_get_halting_mode(ieee_all, halt)"}]}