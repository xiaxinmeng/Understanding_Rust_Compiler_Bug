{"sha": "2c03e97c5a50acc10fcb3545385fac4c1a9fa543", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMwM2U5N2M1YTUwYWNjMTBmY2IzNTQ1Mzg1ZmFjNGMxYTlmYTU0Mw==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2021-05-21T17:59:30Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-07T16:23:19Z"}, "message": "[Ada] Assertion errors on concurrent types with -gnatc and extensions enabled\n\ngcc/ada/\n\n\t* einfo-utils.adb (Primitive_Operations): Default to returning\n\tDirect_Primitive_Operations in the case of concurrent types\n\t(when Corresponding_Record_Type not present).\n\t* sem_ch9.adb (Analyze_Protected_Type_Declaration): Initialize\n\tDirect_Primitive_Operations to an empty element list.\n\t(Analyze_Task_Type_Declaration): Initialize\n\tDirect_Primitive_Operations to an empty element list.", "tree": {"sha": "56285beb022da63fc033415b02b84cd0e8d9a9cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56285beb022da63fc033415b02b84cd0e8d9a9cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c03e97c5a50acc10fcb3545385fac4c1a9fa543", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c03e97c5a50acc10fcb3545385fac4c1a9fa543", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c03e97c5a50acc10fcb3545385fac4c1a9fa543", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c03e97c5a50acc10fcb3545385fac4c1a9fa543/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cce46226b0bb33c688398f861c70dbb06c3e7bda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cce46226b0bb33c688398f861c70dbb06c3e7bda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cce46226b0bb33c688398f861c70dbb06c3e7bda"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "b2d8a845022e74236bbbff7f24fb3086d14a88bf", "filename": "gcc/ada/einfo-utils.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c03e97c5a50acc10fcb3545385fac4c1a9fa543/gcc%2Fada%2Feinfo-utils.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c03e97c5a50acc10fcb3545385fac4c1a9fa543/gcc%2Fada%2Feinfo-utils.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo-utils.adb?ref=2c03e97c5a50acc10fcb3545385fac4c1a9fa543", "patch": "@@ -2493,15 +2493,15 @@ package body Einfo.Utils is\n             return Direct_Primitive_Operations\n               (Corresponding_Record_Type (Id));\n \n-         --  If expansion is disabled the corresponding record type is absent,\n-         --  but if the type has ancestors it may have primitive operations.\n-\n-         elsif Is_Tagged_Type (Id) then\n-            return Direct_Primitive_Operations (Id);\n+         --  When expansion is disabled, the corresponding record type is\n+         --  absent, but if this is a tagged type with ancestors, or if the\n+         --  extension of prefixed calls for untagged types is enabled, then\n+         --  it may have associated primitive operations.\n \n          else\n-            return No_Elist;\n+            return Direct_Primitive_Operations (Id);\n          end if;\n+\n       else\n          return Direct_Primitive_Operations (Id);\n       end if;"}, {"sha": "65f48a71b08cae14cd8c92c617e8c8237acb2a7b", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c03e97c5a50acc10fcb3545385fac4c1a9fa543/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c03e97c5a50acc10fcb3545385fac4c1a9fa543/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=2c03e97c5a50acc10fcb3545385fac4c1a9fa543", "patch": "@@ -2031,6 +2031,12 @@ package body Sem_Ch9 is\n       Set_Has_Delayed_Freeze (T);\n       Set_Stored_Constraint  (T, No_Elist);\n \n+      --  Initialize type's primitive operations list, for possible use when\n+      --  the extension of prefixed call notation for untagged types is enabled\n+      --  (such as by use of -gnatX).\n+\n+      Set_Direct_Primitive_Operations (T, New_Elmt_List);\n+\n       --  Mark this type as a protected type for the sake of restrictions,\n       --  unless the protected type is declared in a private part of a package\n       --  of the runtime. With this exception, the Suspension_Object from\n@@ -3152,6 +3158,12 @@ package body Sem_Ch9 is\n       Set_Has_Delayed_Freeze (T, True);\n       Set_Stored_Constraint  (T, No_Elist);\n \n+      --  Initialize type's primitive operations list, for possible use when\n+      --  the extension of prefixed call notation for untagged types is enabled\n+      --  (such as by use of -gnatX).\n+\n+      Set_Direct_Primitive_Operations (T, New_Elmt_List);\n+\n       --  Set the SPARK_Mode from the current context (may be overwritten later\n       --  with an explicit pragma).\n "}]}