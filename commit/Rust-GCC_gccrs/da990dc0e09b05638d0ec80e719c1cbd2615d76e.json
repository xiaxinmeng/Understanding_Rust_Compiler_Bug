{"sha": "da990dc0e09b05638d0ec80e719c1cbd2615d76e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE5OTBkYzBlMDliMDU2MzhkMGVjODBlNzE5YzFjYmQyNjE1ZDc2ZQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2011-09-07T14:25:39Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2011-09-07T14:25:39Z"}, "message": "re PR tree-optimization/49911 (SRA + DOM + VRP + -fstrict-enums incorrectly remove predicate)\n\n2011-09-07  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/49911\n\t* tree-sra.c (analyze_access_subtree): Change type of to-be-replaced\n\tenumerations to the corresponding plain integer type.\n\n\t* testsuite/g++.dg/tree-ssa/pr49911.C: New test.\n\nFrom-SVN: r178639", "tree": {"sha": "d8bb1a8c250e830fea5918eda07a27e2be7b0bee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8bb1a8c250e830fea5918eda07a27e2be7b0bee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da990dc0e09b05638d0ec80e719c1cbd2615d76e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da990dc0e09b05638d0ec80e719c1cbd2615d76e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da990dc0e09b05638d0ec80e719c1cbd2615d76e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da990dc0e09b05638d0ec80e719c1cbd2615d76e/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "747633c57415c7428ee311525ef7d2fc9d69a70d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/747633c57415c7428ee311525ef7d2fc9d69a70d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/747633c57415c7428ee311525ef7d2fc9d69a70d"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "4df7eae2ccb4bfe6168079f87659b706d9da0ffb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da990dc0e09b05638d0ec80e719c1cbd2615d76e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da990dc0e09b05638d0ec80e719c1cbd2615d76e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da990dc0e09b05638d0ec80e719c1cbd2615d76e", "patch": "@@ -1,3 +1,9 @@\n+2011-09-07  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/49911\n+\t* tree-sra.c (analyze_access_subtree): Change type of to-be-replaced\n+\tenumerations to the corresponding plain integer type.\n+\n 2011-09-07  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/50319"}, {"sha": "145e96fc94831297cdfd22303562fe508ff1ac15", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da990dc0e09b05638d0ec80e719c1cbd2615d76e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da990dc0e09b05638d0ec80e719c1cbd2615d76e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da990dc0e09b05638d0ec80e719c1cbd2615d76e", "patch": "@@ -1,3 +1,8 @@\n+2011-09-07  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/49911\n+\t* g++.dg/tree-ssa/pr49911.C: New test.\n+\n 2011-09-07  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \tPR target/49030"}, {"sha": "b96f5f5081d0c61a0a579c51da32b4c5f1a94b83", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr49911.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da990dc0e09b05638d0ec80e719c1cbd2615d76e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr49911.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da990dc0e09b05638d0ec80e719c1cbd2615d76e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr49911.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr49911.C?ref=da990dc0e09b05638d0ec80e719c1cbd2615d76e", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-rtti -fno-exceptions -fno-strict-aliasing -fdump-tree-vrp2\" } */\n+\n+\n+extern  void JS_Assert();\n+typedef enum {\n+eax,         ecx,         edx,         ebx,         esp,         ebp,\n+esi,         edi     }\n+RegisterID;\n+union StateRemat {\n+  RegisterID reg_;\n+  int offset_;\n+};\n+static StateRemat FromRegister(RegisterID reg) {\n+  StateRemat sr;\n+  sr.reg_ = reg;\n+  return sr;\n+}\n+static StateRemat FromAddress3(int address) {\n+  StateRemat sr;\n+    sr.offset_ = address;\n+  //sr.offset_ = 0;\n+  if (address < 46 &&    address >= 0) {\n+    JS_Assert();\n+  }\n+  return sr;\n+}\n+struct FrameState {\n+  StateRemat dataRematInfo2(bool y, int z) {\n+    if (y)         return FromRegister(RegisterID(1));\n+    return FromAddress3(z);\n+  }\n+};\n+FrameState frame;\n+StateRemat x;\n+void jsop_setelem(bool y, int z) {\n+  x = frame.dataRematInfo2(y, z);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Folding predicate.*45\" 0 \"vrp2\"} } */\n+/* { dg-final { cleanup-tree-dump \"vrp2\" } } */"}, {"sha": "c85a7f512060322348dc1055b5b5b72b4ad52f5b", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da990dc0e09b05638d0ec80e719c1cbd2615d76e/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da990dc0e09b05638d0ec80e719c1cbd2615d76e/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=da990dc0e09b05638d0ec80e719c1cbd2615d76e", "patch": "@@ -2075,13 +2075,25 @@ analyze_access_subtree (struct access *root, struct access *parent,\n \t  || ((root->grp_scalar_read || root->grp_assignment_read)\n \t      && (root->grp_scalar_write || root->grp_assignment_write))))\n     {\n+      bool new_integer_type;\n+      if (TREE_CODE (root->type) == ENUMERAL_TYPE)\n+\t{\n+\t  tree rt = root->type;\n+\t  root->type = build_nonstandard_integer_type (TYPE_PRECISION (rt),\n+\t\t\t\t\t\t       TYPE_UNSIGNED (rt));\n+\t  new_integer_type = true;\n+\t}\n+      else\n+\tnew_integer_type = false;\n+\n       if (dump_file && (dump_flags & TDF_DETAILS))\n \t{\n \t  fprintf (dump_file, \"Marking \");\n \t  print_generic_expr (dump_file, root->base, 0);\n-\t  fprintf (dump_file, \" offset: %u, size: %u: \",\n+\t  fprintf (dump_file, \" offset: %u, size: %u \",\n \t\t   (unsigned) root->offset, (unsigned) root->size);\n-\t  fprintf (dump_file, \" to be replaced.\\n\");\n+\t  fprintf (dump_file, \" to be replaced%s.\\n\",\n+\t\t   new_integer_type ? \" with an integer\": \"\");\n \t}\n \n       root->grp_to_be_replaced = 1;"}]}