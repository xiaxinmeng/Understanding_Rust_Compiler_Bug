{"sha": "1b271c9ba316d536d177249070d510f74a06af3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIyNzFjOWJhMzE2ZDUzNmQxNzcyNDkwNzBkNTEwZjc0YTA2YWYzZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-12-08T21:00:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-12-08T21:00:06Z"}, "message": "re PR fortran/34359 (ICE in December 6 version of gfortran when compiling a file with two routines that contain INCLUDE statements)\n\n\tPR fortran/34359\n\t* gfortran.h (gfc_file): Remove sibling and down fields.\n\t* scanner.c (file_changes, file_changes_cur, file_changes_count,\n\tfile_changes_allocated): New variables.\n\t(add_file_change, report_file_change): New functions.\n\t(change_file): Remove.\n\t(gfc_start_source_files, gfc_end_source_files): Call\n\treport_file_change instead of change_file.\n\t(gfc_advance_line): Call report_file_change instead of change_file,\n\tcall it even if lb->file == lb->next->file.\n\t(get_file): Revert last changes.\n\t(preprocessor_line): Call add_file_change when entering or leaving\n\ta file.\n\t(load_file): Likewise.  Set file_change[...].lb for all newly added\n\tfile changes.\n\n\t* gfortran.dg/include_1.f90: New test.\n\t* gfortran.dg/include_1.inc: New.\n\t* gfortran.dg/include_2.f90: New test.\n\nFrom-SVN: r130712", "tree": {"sha": "bc4bbaa3da451b54fe5c683b72d4f4f715b56e79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc4bbaa3da451b54fe5c683b72d4f4f715b56e79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b271c9ba316d536d177249070d510f74a06af3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b271c9ba316d536d177249070d510f74a06af3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b271c9ba316d536d177249070d510f74a06af3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b271c9ba316d536d177249070d510f74a06af3f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c94ae2e4b885fe63dc2c83a173033016a67410ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c94ae2e4b885fe63dc2c83a173033016a67410ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c94ae2e4b885fe63dc2c83a173033016a67410ab"}], "stats": {"total": 174, "additions": 118, "deletions": 56}, "files": [{"sha": "25717b19eaca26f17e93b967d408656f45cd978d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b271c9ba316d536d177249070d510f74a06af3f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b271c9ba316d536d177249070d510f74a06af3f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1b271c9ba316d536d177249070d510f74a06af3f", "patch": "@@ -1,3 +1,21 @@\n+2007-12-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/34359\n+\t* gfortran.h (gfc_file): Remove sibling and down fields.\n+\t* scanner.c (file_changes, file_changes_cur, file_changes_count,\n+\tfile_changes_allocated): New variables.\n+\t(add_file_change, report_file_change): New functions.\n+\t(change_file): Remove.\n+\t(gfc_start_source_files, gfc_end_source_files): Call\n+\treport_file_change instead of change_file.\n+\t(gfc_advance_line): Call report_file_change instead of change_file,\n+\tcall it even if lb->file == lb->next->file.\n+\t(get_file): Revert last changes.\n+\t(preprocessor_line): Call add_file_change when entering or leaving\n+\ta file.\n+\t(load_file): Likewise.  Set file_change[...].lb for all newly added\n+\tfile changes.\n+\n 2007-12-06  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34333"}, {"sha": "07dbe92a2776f29713fffc241a9cd175510aa708", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b271c9ba316d536d177249070d510f74a06af3f/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b271c9ba316d536d177249070d510f74a06af3f/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=1b271c9ba316d536d177249070d510f74a06af3f", "patch": "@@ -706,7 +706,7 @@ symbol_attribute;\n \n typedef struct gfc_file\n {\n-  struct gfc_file *next, *up, *sibling, *down;\n+  struct gfc_file *next, *up;\n   int inclusion_line, line;\n   char *filename;\n } gfc_file;"}, {"sha": "8e4a75cd6470cb01b9064985a0cbe476ef07d536", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 53, "deletions": 55, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b271c9ba316d536d177249070d510f74a06af3f/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b271c9ba316d536d177249070d510f74a06af3f/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=1b271c9ba316d536d177249070d510f74a06af3f", "patch": "@@ -76,6 +76,15 @@ static char *gfc_src_preprocessor_lines[2];\n \n extern int pedantic;\n \n+static struct gfc_file_change\n+{\n+  const char *filename;\n+  gfc_linebuf *lb;\n+  int line;\n+} *file_changes;\n+size_t file_changes_cur, file_changes_count;\n+size_t file_changes_allocated;\n+\n /* Main scanner initialization.  */\n \n void\n@@ -300,29 +309,38 @@ gfc_at_eol (void)\n }\n \n static void\n-change_file (gfc_file *to)\n+add_file_change (const char *filename, int line)\n {\n-  if (current_file == NULL)\n-    return;\n+  if (file_changes_count == file_changes_allocated)\n+    {\n+      if (file_changes_allocated)\n+\tfile_changes_allocated *= 2;\n+      else\n+\tfile_changes_allocated = 16;\n+      file_changes\n+\t= xrealloc (file_changes,\n+\t\t    file_changes_allocated * sizeof (*file_changes));\n+    }\n+  file_changes[file_changes_count].filename = filename;\n+  file_changes[file_changes_count].lb = NULL;\n+  file_changes[file_changes_count++].line = line;\n+}\n \n-  while (current_file != to)\n-    if (current_file->down)\n-      {\n-\tgfc_file *f = current_file->down;\n-\t/* Ensure we don't enter it ever again.  */\n-\tcurrent_file->down = NULL;\n-\tcurrent_file = f;\n-\t(*debug_hooks->start_source_file) (current_file->inclusion_line,\n-\t\t\t\t\t   current_file->filename);\n-      }\n-    else if (current_file->sibling)\n-      current_file = current_file->sibling;\n-    else\n-      {\n-\tgcc_assert (current_file->up);\n-\t(*debug_hooks->end_source_file) (current_file->inclusion_line + 1);\n-\tcurrent_file = current_file->up;\n-      }\n+static void\n+report_file_change (gfc_linebuf *lb)\n+{\n+  size_t c = file_changes_cur;\n+  while (c < file_changes_count\n+\t && file_changes[c].lb == lb)\n+    {\n+      if (file_changes[c].filename)\n+\t(*debug_hooks->start_source_file) (file_changes[c].line,\n+\t\t\t\t\t   file_changes[c].filename);\n+      else\n+\t(*debug_hooks->end_source_file) (file_changes[c].line);\n+      ++c;\n+    }\n+  file_changes_cur = c;\n }\n \n void\n@@ -333,27 +351,14 @@ gfc_start_source_files (void)\n   if (debug_hooks->start_end_main_source_file)\n     (*debug_hooks->start_source_file) (0, gfc_source_file);\n \n-  if (gfc_current_locus.lb && gfc_current_locus.lb->file)\n-    {\n-      current_file = gfc_current_locus.lb->file;\n-      while (current_file->up)\n-\tcurrent_file = current_file->up;\n-      change_file (gfc_current_locus.lb->file);\n-    }\n-  else\n-    current_file = NULL;\n+  file_changes_cur = 0;\n+  report_file_change (gfc_current_locus.lb);\n }\n \n void\n gfc_end_source_files (void)\n {\n-  if (current_file != NULL)\n-    {\n-      gfc_file *to = current_file;\n-      while (to->up)\n-\tto = to->up;\n-      change_file (to);\n-    }\n+  report_file_change (NULL);\n \n   if (debug_hooks->start_end_main_source_file)\n     (*debug_hooks->end_source_file) (0);\n@@ -374,10 +379,9 @@ gfc_advance_line (void)\n     } \n \n   if (gfc_current_locus.lb->next\n-      && gfc_current_locus.lb->next->file != gfc_current_locus.lb->file\n       && !gfc_current_locus.lb->next->dbg_emitted)\n     {\n-      change_file (gfc_current_locus.lb->next->file);\n+      report_file_change (gfc_current_locus.lb->next);\n       gfc_current_locus.lb->next->dbg_emitted = true;\n     }\n \n@@ -1264,23 +1268,8 @@ get_file (const char *name, enum lc_reason reason ATTRIBUTE_UNUSED)\n   file_head = f;\n \n   f->up = current_file;\n-  /* Already cleared by gfc_getmem.\n-     f->down = NULL;\n-     f->sibling = NULL;  */\n   if (current_file != NULL)\n-    {\n-      f->inclusion_line = current_file->line;\n-      if (current_file->down == NULL)\n-\tcurrent_file->down = f;\n-      else\n-\t{\n-\t  gfc_file *s;\n-\n-\t  for (s = current_file->down; s->sibling; s = s->sibling)\n-\t    ;\n-\t  s->sibling = f;\n-\t}\n-    }\n+    f->inclusion_line = current_file->line;\n \n #ifdef USE_MAPPED_LOCATION\n   linemap_add (line_table, reason, false, f->filename, 1);\n@@ -1390,6 +1379,7 @@ preprocessor_line (char *c)\n   if (flag[1]) /* Starting new file.  */\n     {\n       f = get_file (filename, LC_RENAME);\n+      add_file_change (f->filename, f->inclusion_line);\n       current_file = f;\n     }\n \n@@ -1406,6 +1396,7 @@ preprocessor_line (char *c)\n \t  return;\n \t}\n \n+      add_file_change (NULL, line);\n       current_file = current_file->up;\n #ifdef USE_MAPPED_LOCATION\n       linemap_add (line_table, LC_RENAME, false, current_file->filename,\n@@ -1557,6 +1548,8 @@ load_file (const char *filename, bool initial)\n   /* Load the file.  */\n \n   f = get_file (filename, initial ? LC_RENAME : LC_ENTER);\n+  if (!initial)\n+    add_file_change (f->filename, f->inclusion_line);\n   current_file = f;\n   current_file->line = 1;\n   line = NULL;\n@@ -1654,13 +1647,18 @@ load_file (const char *filename, bool initial)\n \tline_tail->next = b;\n \n       line_tail = b;\n+\n+      while (file_changes_cur < file_changes_count)\n+\tfile_changes[file_changes_cur++].lb = b;\n     }\n \n   /* Release the line buffer allocated in load_line.  */\n   gfc_free (line);\n \n   fclose (input);\n \n+  if (!initial)\n+    add_file_change (NULL, current_file->inclusion_line + 1);\n   current_file = current_file->up;\n #ifdef USE_MAPPED_LOCATION\n   linemap_add (line_table, LC_LEAVE, 0, NULL, 0);"}, {"sha": "5cc78304a6e25658770fbb5a29a4e1974b6e0a47", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b271c9ba316d536d177249070d510f74a06af3f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b271c9ba316d536d177249070d510f74a06af3f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b271c9ba316d536d177249070d510f74a06af3f", "patch": "@@ -1,3 +1,10 @@\n+2007-12-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/34359\n+\t* gfortran.dg/include_1.f90: New test.\n+\t* gfortran.dg/include_1.inc: New.\n+\t* gfortran.dg/include_2.f90: New test.\n+\n 2007-12-08  Paul de Weerd  <weerd@weirdnet.nl>\n \n \t* gcc.c-torture/compile/20011130-2.c: Fix typo."}, {"sha": "34741ea64fbfb0d8c344d39b09f8267231fe2f46", "filename": "gcc/testsuite/gfortran.dg/include_1.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b271c9ba316d536d177249070d510f74a06af3f/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b271c9ba316d536d177249070d510f74a06af3f/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_1.f90?ref=1b271c9ba316d536d177249070d510f74a06af3f", "patch": "@@ -0,0 +1,9 @@\n+! PR debug/33739\n+! { dg-do compile }\n+! { dg-options \"-g3\" }\n+subroutine a\n+include 'include_1.inc'\n+end subroutine a\n+subroutine b\n+include 'include_1.inc'\n+end subroutine b"}, {"sha": "332ac8ccd82dfd02cbaf3b323cff10933eda3aae", "filename": "gcc/testsuite/gfortran.dg/include_1.inc", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b271c9ba316d536d177249070d510f74a06af3f/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_1.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b271c9ba316d536d177249070d510f74a06af3f/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_1.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_1.inc?ref=1b271c9ba316d536d177249070d510f74a06af3f", "patch": "@@ -0,0 +1 @@\n+integer :: i"}, {"sha": "e4f553efa3e4b3ecf70c72e7375105d661febd67", "filename": "gcc/testsuite/gfortran.dg/include_2.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b271c9ba316d536d177249070d510f74a06af3f/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b271c9ba316d536d177249070d510f74a06af3f/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_2.f90?ref=1b271c9ba316d536d177249070d510f74a06af3f", "patch": "@@ -0,0 +1,29 @@\n+# 1 \"include_2.F90\"\n+# 1 \"/tmp/\"\n+# 1 \"<built-in>\"\n+# 1 \"<command line>\"\n+# 1 \"include_2.F90\"\n+#define S1 1\n+#define B a\n+# 1 \"include_2.inc\" 1\n+subroutine a\n+#undef S2\n+#define S2 1\n+integer :: i\n+end subroutine a\n+# 4 \"include_2.F90\" 2\n+#undef B\n+#define B b\n+# 1 \"include_2.inc\" 1\n+subroutine b\n+#undef S2\n+#define S2 1\n+integer :: i\n+end subroutine b\n+# 6 \"include_2.F90\" 2\n+! PR debug/33739\n+! { dg-do link }\n+! { dg-options \"-fpreprocessed -g3\" }\n+    call a\n+    call b\n+end"}]}