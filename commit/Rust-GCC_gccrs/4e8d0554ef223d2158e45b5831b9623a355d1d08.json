{"sha": "4e8d0554ef223d2158e45b5831b9623a355d1d08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU4ZDA1NTRlZjIyM2QyMTU4ZTQ1YjU4MzFiOTYyM2EzNTVkMWQwOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2005-02-19T11:44:10Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2005-02-19T11:44:10Z"}, "message": "re PR other/19525 (In-build-directory multilib testing broken)\n\n\tPR other/19525\n\t* doc/invoke.texi: Remove documentation of %M spec.\n\t* gcc.c: Likewise.\n\t(init_spec): Remove %M suffix from -lgcc_s.\n\t(do_spec_1): Remove 'M' case.\n\t* mklibgcc.in: Remove SHLIB_MULTILIB handling.  Expect SHLIB_LINK\n\tto put shared libraries in the multilib directory.  Remove the\n\tshlib_so_soname substitution variable.  Don't add a multilib encoding\n\tto shlib_base_name.  Set shlib_slibdir_qual to the full pathname\n\treported by -print-multi-os-directory.  Pass @multilib_dir@ to\n\tSHLIB_INSTALL as well as SHLIB_LINK.\n\t* config/t-slibgcc-elf-ver (SHLIB_SONAME): Use @shlib_base_name@.\n\t(SHLIB_NAME): Delete.\n\t(SHLIB_DIR): New macro.\n\t(SHLIB_LINK): Put $(SHLIB_SONAME) and $(SHLIB_SOLINK) in $(SHLIB_DIR).\n\t(SHLIB_INSTALL): Adjust accordingly.\n\t* config/t-slibgcc-darwin: As for t-slibgcc-elf-ver.\n\t* config/t-slibgcc-sld: Likewise.\n\t* config/t-libunwind-elf (SHLIBUNWIND_NAME): Delete.\n\t(SHLIBUNWIND_SONAME): Use @shlib_base_name@.\n\t(SHLIBUNWIND_LINK): Put $(SHLIBUNWIND_SONAME) and $(SHLIB_SOLINK)\n\tin $(SHLIB_DIR).\n\t(SHLIBUNWIND_INSTALL): Adjust accordingly.\n\t* config/i386/t-nwld (SHLIB_SONAME): Delete.\n\t(SHLIB_LINK, SHLIB_INSTALL): Use SHLIB_NAME instead of SHLIB_SONAME.\n\tUse @shlib_base_name@ instead of @shlib_so_name@.\n\t* config/ia64/t-hpux (SHLIB_LINK): Put @shlib_base_name@.so.0\n\tand @shlib_base_name@.so in @multilib_dir@.\n\t(SHLIB_INSTALL): Adjust accordingly.  Add @shlib_slibdir_qual@\n\tto the install path.\n\t* config/mips/t-slibgcc-irix: As for t-slibgcc-elf-ver.\n\t(SHLIB_LINK): Remove previous workaround.\n\t* config/pa/t-hpux-shlib (SHLIB_DIR, SHLIB_SLIBDIR_QUAL): New macros.\n\t(SHLIB_LINK): Put $(SHLIB_SONAME) and $(SHLIB_NAME) in $(SHLIB_DIR).\n\t(SHLIB_INSTALL): Adjust accordingly.  Add $(SHLIB_SLIBDIR_QUAL) to\n\tthe install path.\n\t* config/rs6000/t-aix43 (SHLIB_LINK): Put @shlib_base_name@.a in\n\t@multilib_dir@.  Use @multilib_dir@ to check for threading libraries.\n\t(SHLIB_INSTALL): Adjust accordingly.\n\t(SHLIB_LIBS): Use @multilib_dir@ to check for threading libraries.\n\t* config/rs6000/t-aix52: As for config/rs6000/t-aix43.\n\t* config/sh/t-linux (SHLIB_LINK, SHLIB_INSTALL): As for\n\tconfig/t-slibgcc-elf-ver.\n\nFrom-SVN: r95277", "tree": {"sha": "ac558f936697e52cc362b3bdf22989d4fba3c2c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac558f936697e52cc362b3bdf22989d4fba3c2c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e8d0554ef223d2158e45b5831b9623a355d1d08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e8d0554ef223d2158e45b5831b9623a355d1d08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e8d0554ef223d2158e45b5831b9623a355d1d08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e8d0554ef223d2158e45b5831b9623a355d1d08/comments", "author": null, "committer": null, "parents": [{"sha": "a74b85d0a4d58604e99cefa057df9353c5fb9ea6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a74b85d0a4d58604e99cefa057df9353c5fb9ea6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a74b85d0a4d58604e99cefa057df9353c5fb9ea6"}], "stats": {"total": 462, "additions": 196, "deletions": 266}, "files": [{"sha": "34a6c74141f084e27fa2daff6b30b76e1650c0ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e8d0554ef223d2158e45b5831b9623a355d1d08", "patch": "@@ -1,3 +1,49 @@\n+2005-02-19  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\tPR other/19525\n+\t* doc/invoke.texi: Remove documentation of %M spec.\n+\t* gcc.c: Likewise.\n+\t(init_spec): Remove %M suffix from -lgcc_s.\n+\t(do_spec_1): Remove 'M' case.\n+\t* mklibgcc.in: Remove SHLIB_MULTILIB handling.  Expect SHLIB_LINK\n+\tto put shared libraries in the multilib directory.  Remove the\n+\tshlib_so_soname substitution variable.  Don't add a multilib encoding\n+\tto shlib_base_name.  Set shlib_slibdir_qual to the full pathname\n+\treported by -print-multi-os-directory.  Pass @multilib_dir@ to\n+\tSHLIB_INSTALL as well as SHLIB_LINK.\n+\t* config/t-slibgcc-elf-ver (SHLIB_SONAME): Use @shlib_base_name@.\n+\t(SHLIB_NAME): Delete.\n+\t(SHLIB_DIR): New macro.\n+\t(SHLIB_LINK): Put $(SHLIB_SONAME) and $(SHLIB_SOLINK) in $(SHLIB_DIR).\n+\t(SHLIB_INSTALL): Adjust accordingly.\n+\t* config/t-slibgcc-darwin: As for t-slibgcc-elf-ver.\n+\t* config/t-slibgcc-sld: Likewise.\n+\t* config/t-libunwind-elf (SHLIBUNWIND_NAME): Delete.\n+\t(SHLIBUNWIND_SONAME): Use @shlib_base_name@.\n+\t(SHLIBUNWIND_LINK): Put $(SHLIBUNWIND_SONAME) and $(SHLIB_SOLINK)\n+\tin $(SHLIB_DIR).\n+\t(SHLIBUNWIND_INSTALL): Adjust accordingly.\n+\t* config/i386/t-nwld (SHLIB_SONAME): Delete.\n+\t(SHLIB_LINK, SHLIB_INSTALL): Use SHLIB_NAME instead of SHLIB_SONAME.\n+\tUse @shlib_base_name@ instead of @shlib_so_name@.\n+\t* config/ia64/t-hpux (SHLIB_LINK): Put @shlib_base_name@.so.0\n+\tand @shlib_base_name@.so in @multilib_dir@.\n+\t(SHLIB_INSTALL): Adjust accordingly.  Add @shlib_slibdir_qual@\n+\tto the install path.\n+\t* config/mips/t-slibgcc-irix: As for t-slibgcc-elf-ver.\n+\t(SHLIB_LINK): Remove previous workaround.\n+\t* config/pa/t-hpux-shlib (SHLIB_DIR, SHLIB_SLIBDIR_QUAL): New macros.\n+\t(SHLIB_LINK): Put $(SHLIB_SONAME) and $(SHLIB_NAME) in $(SHLIB_DIR).\n+\t(SHLIB_INSTALL): Adjust accordingly.  Add $(SHLIB_SLIBDIR_QUAL) to\n+\tthe install path.\n+\t* config/rs6000/t-aix43 (SHLIB_LINK): Put @shlib_base_name@.a in\n+\t@multilib_dir@.  Use @multilib_dir@ to check for threading libraries.\n+\t(SHLIB_INSTALL): Adjust accordingly.\n+\t(SHLIB_LIBS): Use @multilib_dir@ to check for threading libraries.\n+\t* config/rs6000/t-aix52: As for config/rs6000/t-aix43.\n+\t* config/sh/t-linux (SHLIB_LINK, SHLIB_INSTALL): As for\n+\tconfig/t-slibgcc-elf-ver.\n+\n 2005-02-19  Zdenek Dvorak  <dvorakz@suse.cz>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "ec12d12251c95d7da05b60e89bef37834583414f", "filename": "gcc/config/i386/t-nwld", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Fi386%2Ft-nwld", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Fi386%2Ft-nwld", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-nwld?ref=4e8d0554ef223d2158e45b5831b9623a355d1d08", "patch": "@@ -29,33 +29,32 @@ s-crt0: $(srcdir)/unwind-dw2-fde.h\n # Build a shared libgcc library for NetWare.\n \n SHLIB_EXT = .nlm\n-SHLIB_SONAME = @shlib_so_name@.nlm\n SHLIB_NAME = @shlib_base_name@.nlm\n SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n SHLIB_DEF = $(srcdir)/config/i386/netware-libgcc.def\n SHLIB_MAP = $(srcdir)/config/i386/netware-libgcc.exp\n SHLIB_SRC = $(srcdir)/config/i386/netware-libgcc.c\n \n SHLIB_LINK = set -e; \\\n-\tcat $(SHLIB_DEF) >@shlib_so_name@.def; \\\n-\techo \"name $(SHLIB_NAME)\" >>@shlib_so_name@.def; \\\n-\techo \"version $(gcc_version)\" | sed \"s!\\.!,!g\" >>@shlib_so_name@.def; \\\n+\tcat $(SHLIB_DEF) >@shlib_base_name@.def; \\\n+\techo \"name $(SHLIB_NAME)\" >>@shlib_base_name@.def; \\\n+\techo \"version $(gcc_version)\" | sed \"s!\\.!,!g\" >>@shlib_base_name@.def; \\\n \ttouch libgcc/build; \\\n-\techo \"build $$$$(($$$$(<libgcc/build)+0))\" >>@shlib_so_name@.def; \\\n-\techo \"export @$(SHLIB_MAP)\" >>@shlib_so_name@.def; \\\n-\tif mpkxdc -n -p @shlib_so_name@.xdc; \\\n-\t\tthen echo \"xdcdata @shlib_so_name@.xdc\" >>@shlib_so_name@.def; \\\n+\techo \"build $$$$(($$$$(<libgcc/build)+0))\" >>@shlib_base_name@.def; \\\n+\techo \"export @$(SHLIB_MAP)\" >>@shlib_base_name@.def; \\\n+\tif mpkxdc -n -p @shlib_base_name@.xdc; \\\n+\t\tthen echo \"xdcdata @shlib_base_name@.xdc\" >>@shlib_base_name@.def; \\\n \t\telse echo \"WARNING: $(SHLIB_NAME) built without XDC data will not work well.\" 1>&2; \\\n \tfi; \\\n \t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -o $(SHLIB_NAME) \\\n \t\t$(SHLIB_SRC) -posix -static-libgcc -lnetware \\\n-\t\t-Wl,--Map,--map-info,full,--strip-all,--def-file,@shlib_so_name@.def; \\\n-\trm -f @shlib_so_name@.imp; $(LN_S) $(SHLIB_MAP) @shlib_so_name@.imp; \\\n+\t\t-Wl,--Map,--map-info,full,--strip-all,--def-file,@shlib_base_name@.def; \\\n+\trm -f @shlib_base_name@.imp; $(LN_S) $(SHLIB_MAP) @shlib_base_name@.imp; \\\n \techo $$$$(($$$$(<libgcc/build)+1)) >libgcc/build\n \n # $(slibdir) double quoted to protect it from expansion while building\n # libgcc.mk.  We want this delayed until actual install time.\n SHLIB_INSTALL = \\\n \t$$(SHELL) $(srcdir)/mkinstalldirs $$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n-\t$$(INSTALL_DATA) $(SHLIB_NAME) $$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n-\t$$(INSTALL_DATA) @shlib_so_name@.imp $$(DESTDIR)$$(libsubdir)/\n+\t$$(INSTALL_DATA) $(SHLIB_NAME) $$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_NAME); \\\n+\t$$(INSTALL_DATA) @shlib_base_name@.imp $$(DESTDIR)$$(libsubdir)/"}, {"sha": "e84a09a74763607ac197d0cf11f82faa7b7a5bcc", "filename": "gcc/config/ia64/t-hpux", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Fia64%2Ft-hpux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Fia64%2Ft-hpux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-hpux?ref=4e8d0554ef223d2158e45b5831b9623a355d1d08", "patch": "@@ -32,14 +32,17 @@ SHLIB_EXT = .so\n # DT_NEEDED entry for libunwind.\n SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n \t-Wl,+h,@shlib_base_name@.so.0 \\\n-\t-o @shlib_base_name@.so @multilib_flags@ @shlib_objs@ -lunwind -lc && \\\n-\trm -f @shlib_base_name@.so.0 && \\\n-\t$(LN_S) @shlib_base_name@.so @shlib_base_name@.so.0\n+\t-o @multilib_dir@/@shlib_base_name@.so @multilib_flags@ \\\n+\t@shlib_objs@ -lunwind -lc && \\\n+\trm -f @multilib_dir@/@shlib_base_name@.so.0 && \\\n+\t$(LN_S) @shlib_base_name@.so @multilib_dir@/@shlib_base_name@.so.0\n # $(slibdir) double quoted to protect it from expansion while building\n # libgcc.mk.  We want this delayed until actual install time.\n-SHLIB_INSTALL = $(INSTALL_DATA) @shlib_base_name@.so $$(DESTDIR)$$(slibdir)/@shlib_base_name@.so.0; \\\n-\trm -f $$(DESTDIR)$$(slibdir)/@shlib_base_name@.so; \\\n-\t$(LN_S) @shlib_base_name@.so.0 $$(DESTDIR)$$(slibdir)/@shlib_base_name@.so; \\\n-\tchmod +x $$(DESTDIR)$$(slibdir)/@shlib_base_name@.so\n+SHLIB_INSTALL = $(INSTALL_DATA) @multilib_dir@/@shlib_base_name@.so \\\n+\t$$(DESTDIR)$$(slibdir)@shlib_slibdir_qual@/@shlib_base_name@.so.0; \\\n+\trm -f $$(DESTDIR)$$(slibdir)@shlib_slibdir_qual@/@shlib_base_name@.so; \\\n+\t$(LN_S) @shlib_base_name@.so.0 \\\n+\t$$(DESTDIR)$$(slibdir)@shlib_slibdir_qual@/@shlib_base_name@.so; \\\n+\tchmod +x $$(DESTDIR)$$(slibdir)@shlib_slibdir_qual@/@shlib_base_name@.so\n \n SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk"}, {"sha": "cfb4bf4d8cc079f90a5161626a28929b09969a2e", "filename": "gcc/config/mips/t-slibgcc-irix", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Fmips%2Ft-slibgcc-irix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Fmips%2Ft-slibgcc-irix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-slibgcc-irix?ref=4e8d0554ef223d2158e45b5831b9623a355d1d08", "patch": "@@ -3,29 +3,29 @@\n SHLIB_EXT = .so\n SHLIB_SOLINK = @shlib_base_name@.so\n SHLIB_SOVERSION = 1\n-SHLIB_SONAME = @shlib_so_name@.so.$(SHLIB_SOVERSION)\n-SHLIB_NAME = @shlib_base_name@.so.$(SHLIB_SOVERSION)\n+SHLIB_SONAME = @shlib_base_name@.so.$(SHLIB_SOVERSION)\n SHLIB_MAP = @shlib_map_file@\n SHLIB_OBJS = @shlib_objs@\n+SHLIB_DIR = @multilib_dir@\n SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n SHLIB_LC = -lc\n \n SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n \t-Wl,-soname,$(SHLIB_SONAME) \\\n-\t-o $(SHLIB_NAME).tmp @multilib_flags@ $(SHLIB_OBJS) $(SHLIB_LC) && \\\n-\trm -f $(SHLIB_SOLINK) && \\\n-\tif [ -f $(SHLIB_NAME) ]; then \\\n-\t  mv -f $(SHLIB_NAME) $(SHLIB_NAME).backup; \\\n+\t-o $(SHLIB_DIR)/$(SHLIB_SONAME).tmp @multilib_flags@ \\\n+\t$(SHLIB_OBJS) $(SHLIB_LC) && \\\n+\trm -f $(SHLIB_DIR)/$(SHLIB_SOLINK) && \\\n+\tif [ -f $(SHLIB_DIR)/$(SHLIB_SONAME) ]; then \\\n+\t  mv -f $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n+\t\t$(SHLIB_DIR)/$(SHLIB_SONAME).backup; \\\n \telse true; fi && \\\n-\tmv $(SHLIB_NAME).tmp $(SHLIB_NAME) && \\\n-\t$(LN_S) $(SHLIB_NAME) $(SHLIB_SOLINK) && \\\n-\t{ test \"@multilib_dir@\" = \".\" || \\\n-\t  $(INSTALL_DATA) $(SHLIB_NAME) @multilib_dir@/$(SHLIB_SONAME); }\n+\tmv $(SHLIB_DIR)/$(SHLIB_SONAME).tmp $(SHLIB_DIR)/$(SHLIB_SONAME) && \\\n+\t$(LN_S) $(SHLIB_SONAME) $(SHLIB_DIR)/$(SHLIB_SOLINK)\n # $(slibdir) double quoted to protect it from expansion while building\n # libgcc.mk.  We want this delayed until actual install time.\n SHLIB_INSTALL = \\\n \t$$(mkinstalldirs) $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n-\t$(INSTALL_DATA) $(SHLIB_NAME) \\\n+\t$(INSTALL_DATA) $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n \t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n \trm -f $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK); \\\n \t$(LN_S) $(SHLIB_SONAME) \\"}, {"sha": "2a42ed6efc90a115084e3fff8ea6d9f5fc4a2e69", "filename": "gcc/config/pa/t-hpux-shlib", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Fpa%2Ft-hpux-shlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Fpa%2Ft-hpux-shlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-hpux-shlib?ref=4e8d0554ef223d2158e45b5831b9623a355d1d08", "patch": "@@ -3,21 +3,25 @@ SHLIB_EXT = .sl\n SHLIB_NAME = @shlib_base_name@.sl\n SHLIB_SONAME = @shlib_base_name@.1\n SHLIB_OBJS = @shlib_objs@\n+SHLIB_DIR = @multilib_dir@\n+SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n \n SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared  -nodefaultlibs \\\n-\t-o $(SHLIB_NAME).tmp @multilib_flags@ $(SHLIB_OBJS) -lc && \\\n-        rm -f $(SHLIB_SONAME) && \\\n-\tif [ -f $(SHLIB_NAME) ]; then \\\n-\t  mv -f $(SHLIB_NAME) $(SHLIB_NAME).backup; \\\n+\t-o $(SHLIB_DIR)/$(SHLIB_NAME).tmp @multilib_flags@ \\\n+\t$(SHLIB_OBJS) -lc && \\\n+        rm -f $(SHLIB_DIR)/$(SHLIB_SONAME) && \\\n+\tif [ -f $(SHLIB_DIR)/$(SHLIB_NAME) ]; then \\\n+\t  mv -f $(SHLIB_DIR)/$(SHLIB_NAME) $(SHLIB_DIR)/$(SHLIB_NAME).backup; \\\n \telse true; fi && \\\n-\tmv $(SHLIB_NAME).tmp $(SHLIB_NAME) && \\\n-        $(LN_S) $(SHLIB_NAME) $(SHLIB_SONAME)\n+\tmv $(SHLIB_DIR)/$(SHLIB_NAME).tmp $(SHLIB_DIR)/$(SHLIB_NAME) && \\\n+        $(LN_S) $(SHLIB_NAME) $(SHLIB_DIR)/$(SHLIB_SONAME)\n \n \n # $(slibdir) double quoted to protect it from expansion while building\n # libgcc.mk.  We want this delayed until actual install time.\n-SHLIB_INSTALL = $(INSTALL_DATA) -m 555 $(SHLIB_NAME) \\\n-\t$$(DESTDIR)$$(slibdir)/$(SHLIB_SONAME); \\\n-        rm -f $$(DESTDIR)$$(slibdir)/$(SHLIB_NAME); \\\n-        $(LN_S) $(SHLIB_SONAME) $$(DESTDIR)$$(slibdir)/$(SHLIB_NAME)\n+SHLIB_INSTALL = $(INSTALL_DATA) -m 555 $(SHLIB_DIR)/$(SHLIB_NAME) \\\n+\t$$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n+        rm -f $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_NAME); \\\n+        $(LN_S) $(SHLIB_SONAME) \\\n+\t$$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_NAME)\n "}, {"sha": "f9e70c157ce167f3016ff586b1f07ebcc3b273be", "filename": "gcc/config/rs6000/t-aix43", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Frs6000%2Ft-aix43", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Frs6000%2Ft-aix43", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-aix43?ref=4e8d0554ef223d2158e45b5831b9623a355d1d08", "patch": "@@ -46,17 +46,20 @@ SHLIB_EXT = .a\n SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n \t-Wl,-bE:@shlib_map_file@ -o @multilib_dir@/shr.o \\\n \t@multilib_flags@ @shlib_objs@ -lc \\\n-\t`case @shlib_base_name@ in \\\n+\t`case @multilib_dir@ in \\\n \t*pthread*) echo -L/usr/lib/threads -lpthreads -lc_r /usr/lib/libc.a ;; \\\n \t*) echo -lc ;; esac` ; \\\n-\trm -f tmp-@shlib_base_name@.a ; \\\n-\t$(AR_CREATE_FOR_TARGET) tmp-@shlib_base_name@.a @multilib_dir@/shr.o ; \\\n-\tmv tmp-@shlib_base_name@.a @shlib_base_name@.a ; \\\n+\trm -f @multilib_dir@/tmp-@shlib_base_name@.a ; \\\n+\t$(AR_CREATE_FOR_TARGET) @multilib_dir@/tmp-@shlib_base_name@.a \\\n+\t@multilib_dir@/shr.o ; \\\n+\tmv @multilib_dir@/tmp-@shlib_base_name@.a \\\n+\t   @multilib_dir@/@shlib_base_name@.a ; \\\n \trm -f @multilib_dir@/shr.o\n # $(slibdir) double quoted to protect it from expansion while building\n # libgcc.mk.  We want this delayed until actual install time.\n-SHLIB_INSTALL = $(INSTALL_DATA) @shlib_base_name@.a $$(DESTDIR)$$(slibdir)/\n-SHLIB_LIBS = -lc `case @shlib_base_name@ in *pthread*) echo -lpthread ;; esac`\n+SHLIB_INSTALL = $(INSTALL_DATA) @multilib_dir@/@shlib_base_name@.a \\\n+\t\t$$(DESTDIR)$$(slibdir)@shlib_slibdir_qual@/\n+SHLIB_LIBS = -lc `case @multilib_dir@ in *pthread*) echo -lpthread ;; esac`\n SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n SHLIB_MAPFILES = $(srcdir)/libgcc-std.ver $(srcdir)/config/rs6000/libgcc-ppc64.ver\n SHLIB_NM_FLAGS = -Bpg -X32_64"}, {"sha": "cb2b88415e1f9e6e7d06aeb31bbab3ba91f466cb", "filename": "gcc/config/rs6000/t-aix52", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Frs6000%2Ft-aix52", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Frs6000%2Ft-aix52", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-aix52?ref=4e8d0554ef223d2158e45b5831b9623a355d1d08", "patch": "@@ -27,17 +27,20 @@ SHLIB_EXT = .a\n SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n \t-Wl,-bE:@shlib_map_file@ -o @multilib_dir@/shr.o \\\n \t@multilib_flags@ @shlib_objs@ -lc \\\n-\t`case @shlib_base_name@ in \\\n+\t`case @multilib_dir@ in \\\n \t*pthread*) echo -L/usr/lib/threads -lpthreads -lc_r /usr/lib/libc.a ;; \\\n \t*) echo -lc ;; esac` ; \\\n-\trm -f tmp-@shlib_base_name@.a ; \\\n-\t$(AR_CREATE_FOR_TARGET) tmp-@shlib_base_name@.a @multilib_dir@/shr.o ; \\\n-\tmv tmp-@shlib_base_name@.a @shlib_base_name@.a ; \\\n+\trm -f @multilib_dir@/tmp-@shlib_base_name@.a ; \\\n+\t$(AR_CREATE_FOR_TARGET) @multilib_dir@/tmp-@shlib_base_name@.a \\\n+\t@multilib_dir@/shr.o ; \\\n+\tmv @multilib_dir@/tmp-@shlib_base_name@.a \\\n+\t   @multilib_dir@/@shlib_base_name@.a ; \\\n \trm -f @multilib_dir@/shr.o\n # $(slibdir) double quoted to protect it from expansion while building\n # libgcc.mk.  We want this delayed until actual install time.\n-SHLIB_INSTALL = $(INSTALL_DATA) @shlib_base_name@.a $$(DESTDIR)$$(slibdir)/\n-SHLIB_LIBS = -lc `case @shlib_base_name@ in *pthread*) echo -lpthread ;; esac`\n+SHLIB_INSTALL = $(INSTALL_DATA) @multilib_dir@/@shlib_base_name@.a \\\n+\t\t$$(DESTDIR)$$(slibdir)@shlib_slibdir_qual@/\n+SHLIB_LIBS = -lc `case @multilib_dir@ in *pthread*) echo -lpthread ;; esac`\n SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n SHLIB_MAPFILES = $(srcdir)/libgcc-std.ver $(srcdir)/config/rs6000/libgcc-ppc64.ver\n SHLIB_NM_FLAGS = -Bpg -X32_64"}, {"sha": "777d157909e3f34ce378e4de8a8a6a26fc3eda64", "filename": "gcc/config/sh/t-linux", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Fsh%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Fsh%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-linux?ref=4e8d0554ef223d2158e45b5831b9623a355d1d08", "patch": "@@ -23,21 +23,23 @@ SHLIB_MAPFILES = \\\n SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n \t-Wl,--soname=$(SHLIB_SONAME) \\\n \t-Wl,--version-script=$(SHLIB_MAP) \\\n-\t-o $(SHLIB_NAME).tmp @multilib_flags@ $(SHLIB_OBJS) $(SHLIB_LC) && \\\n-\trm -f $(SHLIB_SOLINK) && \\\n-\tif [ -f $(SHLIB_NAME) ]; then \\\n-\t  mv -f $(SHLIB_NAME) $(SHLIB_NAME).backup; \\\n+\t-o $(SHLIB_DIR)/$(SHLIB_SONAME).tmp @multilib_flags@ \\\n+\t$(SHLIB_OBJS) $(SHLIB_LC) && \\\n+\trm -f $(SHLIB_DIR)/$(SHLIB_SOLINK) && \\\n+\tif [ -f $(SHLIB_DIR)/$(SHLIB_SONAME) ]; then \\\n+\t  mv -f $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n+\t\t$(SHLIB_DIR)/$(SHLIB_SONAME).backup; \\\n \telse true; fi && \\\n-\tmv $(SHLIB_NAME).tmp $(SHLIB_NAME) && \\\n+\tmv $(SHLIB_DIR)/$(SHLIB_SONAME).tmp $(SHLIB_DIR)/$(SHLIB_SONAME) && \\\n \t(echo \"/* GNU ld script\"; \\\n \t echo \"   Use the shared library, but some functions are only in\"; \\\n \t echo \"   the static library.  */\"; \\\n \t echo \"GROUP ( $(SHLIB_SONAME) libgcc.a )\" \\\n-\t) > $(SHLIB_SOLINK)\n+\t) > $(SHLIB_DIR)/$(SHLIB_SOLINK)\n SHLIB_INSTALL = \\\n \t$$(mkinstalldirs) $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n-\t$(INSTALL_DATA) $(SHLIB_NAME) \\\n+\t$(INSTALL_DATA) $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n \t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n \trm -f $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK); \\\n-\t$(INSTALL_DATA) $(SHLIB_SOLINK) \\\n+\t$(INSTALL_DATA) $(SHLIB_DIR)/$(SHLIB_SOLINK) \\\n \t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK)"}, {"sha": "1fa8aa2525126c9d9e5f8d8e59e546d0035a3c0c", "filename": "gcc/config/t-libunwind-elf", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Ft-libunwind-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Ft-libunwind-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-libunwind-elf?ref=4e8d0554ef223d2158e45b5831b9623a355d1d08", "patch": "@@ -5,25 +5,26 @@ LIBUNWIND = $(srcdir)/unwind-dw2.c $(srcdir)/unwind-dw2-fde-glibc.c\n LIBUNWINDDEP = unwind.inc unwind-dw2-fde.h unwind-dw2-fde.c\n \n SHLIBUNWIND_SOVERSION = 7\n-SHLIBUNWIND_SONAME = @shlib_so_name@.so.$(SHLIBUNWIND_SOVERSION)\n-SHLIBUNWIND_NAME = @shlib_base_name@.so.$(SHLIBUNWIND_SOVERSION)\n+SHLIBUNWIND_SONAME = @shlib_base_name@.so.$(SHLIBUNWIND_SOVERSION)\n \n SHLIBUNWIND_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared \\\n \t-nodefaultlibs -Wl,-h,$(SHLIBUNWIND_SONAME) \\\n-\t-Wl,-z,text -Wl,-z,defs -o $(SHLIBUNWIND_NAME).tmp \\\n+\t-Wl,-z,text -Wl,-z,defs -o $(SHLIB_DIR)/$(SHLIBUNWIND_SONAME).tmp \\\n \t@multilib_flags@ $(SHLIB_OBJS) -lc && \\\n-\trm -f $(SHLIB_SOLINK) && \\\n-\tif [ -f $(SHLIBUNWIND_NAME) ]; then \\\n-\t  mv -f $(SHLIBUNWIND_NAME) $(SHLIBUNWIND_NAME).backup; \\\n+\trm -f $(SHLIB_DIR)/$(SHLIB_SOLINK) && \\\n+\tif [ -f $(SHLIB_DIR)/$(SHLIBUNWIND_SONAME) ]; then \\\n+\t  mv -f $(SHLIB_DIR)/$(SHLIBUNWIND_SONAME) \\\n+\t\t$(SHLIB_DIR)/$(SHLIBUNWIND_SONAME).backup; \\\n \telse true; fi && \\\n-\tmv $(SHLIBUNWIND_NAME).tmp $(SHLIBUNWIND_NAME) && \\\n-\t$(LN_S) $(SHLIBUNWIND_NAME) $(SHLIB_SOLINK)\n+\tmv $(SHLIB_DIR)/$(SHLIBUNWIND_SONAME).tmp \\\n+\t   $(SHLIB_DIR)/$(SHLIBUNWIND_SONAME) && \\\n+\t$(LN_S) $(SHLIBUNWIND_SONAME) $(SHLIB_DIR)/$(SHLIB_SOLINK)\n \n # $(slibdir) double quoted to protect it from expansion while building\n # libgcc.mk.  We want this delayed until actual install time.\n SHLIBUNWIND_INSTALL = \\\n \t$$(SHELL) $$(srcdir)/mkinstalldirs $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n-\t$(INSTALL_DATA) $(SHLIBUNWIND_NAME) \\\n+\t$(INSTALL_DATA) $(SHLIB_DIR)/$(SHLIBUNWIND_SONAME) \\\n \t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIBUNWIND_SONAME); \\\n \trm -f $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK); \\\n \t$(LN_S) $(SHLIBUNWIND_SONAME) \\"}, {"sha": "46fb36f2bc3bae3cd7f66833d2955f864d9ce17d", "filename": "gcc/config/t-slibgcc-darwin", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Ft-slibgcc-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Ft-slibgcc-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-slibgcc-darwin?ref=4e8d0554ef223d2158e45b5831b9623a355d1d08", "patch": "@@ -4,29 +4,30 @@ SHLIB_REVISION = 0\n SHLIB_VERSTRING = -compatibility_version $(SHLIB_MINOR) -current_version $(SHLIB_MINOR).$(SHLIB_REVISION)\n SHLIB_EXT = .dylib\n SHLIB_SOLINK = @shlib_base_name@.dylib\n-SHLIB_SONAME = @shlib_so_name@.$(SHLIB_MINOR).$(SHLIB_REVISION).dylib\n-SHLIB_NAME = @shlib_base_name@.$(SHLIB_MINOR).$(SHLIB_REVISION).dylib\n+SHLIB_SONAME = @shlib_base_name@.$(SHLIB_MINOR).$(SHLIB_REVISION).dylib\n SHLIB_MAP = @shlib_map_file@\n SHLIB_OBJS = @shlib_objs@\n+SHLIB_DIR = @multilib_dir@\n SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n \n SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -dynamiclib -nodefaultlibs \\\n \t-Wl,-install_name,$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME) \\\n-\t-Wl,-flat_namespace -o $(SHLIB_NAME).tmp \\\n+\t-Wl,-flat_namespace -o $(SHLIB_DIR)/$(SHLIB_SONAME).tmp \\\n \t-Wl,-exported_symbols_list,$(SHLIB_MAP) \\\n \t$(SHLIB_VERSTRING) \\\n \t@multilib_flags@ $(SHLIB_OBJS) -lc && \\\n-\trm -f $(SHLIB_SOLINK) && \\\n-\tif [ -f $(SHLIB_NAME) ]; then \\\n-\t  mv -f $(SHLIB_NAME) $(SHLIB_NAME).backup; \\\n+\trm -f $(SHLIB_DIR)/$(SHLIB_SOLINK) && \\\n+\tif [ -f $(SHLIB_DIR)/$(SHLIB_SONAME) ]; then \\\n+\t  mv -f $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n+\t\t$(SHLIB_DIR)/$(SHLIB_SONAME).backup; \\\n \telse true; fi && \\\n-\tmv $(SHLIB_NAME).tmp $(SHLIB_NAME) && \\\n-\t$(LN_S) $(SHLIB_NAME) $(SHLIB_SOLINK)\n+\tmv $(SHLIB_DIR)/$(SHLIB_SONAME).tmp $(SHLIB_DIR)/$(SHLIB_SONAME) && \\\n+\t$(LN_S) $(SHLIB_SONAME) $(SHLIB_DIR)/$(SHLIB_SOLINK)\n # $(slibdir) double quoted to protect it from expansion while building\n # libgcc.mk.  We want this delayed until actual install time.\n SHLIB_INSTALL = \\\n \t$$(mkinstalldirs) $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n-\t$(INSTALL_DATA) $(SHLIB_NAME) \\\n+\t$(INSTALL_DATA) $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n \t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n \trm -f $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK); \\\n \t$(LN_S) $(SHLIB_SONAME) \\"}, {"sha": "346143c5c53777637dc1fabaddc59193e1e95b19", "filename": "gcc/config/t-slibgcc-elf-ver", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Ft-slibgcc-elf-ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Ft-slibgcc-elf-ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-slibgcc-elf-ver?ref=4e8d0554ef223d2158e45b5831b9623a355d1d08", "patch": "@@ -4,28 +4,30 @@\n SHLIB_EXT = .so\n SHLIB_SOLINK = @shlib_base_name@.so\n SHLIB_SOVERSION = 1\n-SHLIB_SONAME = @shlib_so_name@.so.$(SHLIB_SOVERSION)\n-SHLIB_NAME = @shlib_base_name@.so.$(SHLIB_SOVERSION)\n+SHLIB_SONAME = @shlib_base_name@.so.$(SHLIB_SOVERSION)\n SHLIB_MAP = @shlib_map_file@\n SHLIB_OBJS = @shlib_objs@\n+SHLIB_DIR = @multilib_dir@\n SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n SHLIB_LC = -lc\n \n SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n \t-Wl,--soname=$(SHLIB_SONAME) \\\n \t-Wl,--version-script=$(SHLIB_MAP) \\\n-\t-o $(SHLIB_NAME).tmp @multilib_flags@ $(SHLIB_OBJS) $(SHLIB_LC) && \\\n-\trm -f $(SHLIB_SOLINK) && \\\n-\tif [ -f $(SHLIB_NAME) ]; then \\\n-\t  mv -f $(SHLIB_NAME) $(SHLIB_NAME).backup; \\\n+\t-o $(SHLIB_DIR)/$(SHLIB_SONAME).tmp @multilib_flags@ \\\n+\t$(SHLIB_OBJS) $(SHLIB_LC) && \\\n+\trm -f $(SHLIB_DIR)/$(SHLIB_SOLINK) && \\\n+\tif [ -f $(SHLIB_DIR)/$(SHLIB_SONAME) ]; then \\\n+\t  mv -f $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n+\t\t$(SHLIB_DIR)/$(SHLIB_SONAME).backup; \\\n \telse true; fi && \\\n-\tmv $(SHLIB_NAME).tmp $(SHLIB_NAME) && \\\n-\t$(LN_S) $(SHLIB_NAME) $(SHLIB_SOLINK)\n+\tmv $(SHLIB_DIR)/$(SHLIB_SONAME).tmp $(SHLIB_DIR)/$(SHLIB_SONAME) && \\\n+\t$(LN_S) $(SHLIB_SONAME) $(SHLIB_DIR)/$(SHLIB_SOLINK)\n # $(slibdir) double quoted to protect it from expansion while building\n # libgcc.mk.  We want this delayed until actual install time.\n SHLIB_INSTALL = \\\n \t$$(mkinstalldirs) $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n-\t$(INSTALL_DATA) $(SHLIB_NAME) \\\n+\t$(INSTALL_DATA) $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n \t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n \trm -f $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK); \\\n \t$(LN_S) $(SHLIB_SONAME) \\"}, {"sha": "02d21c6de678177797e64b4da7d31fc76f680fe9", "filename": "gcc/config/t-slibgcc-sld", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Ft-slibgcc-sld", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fconfig%2Ft-slibgcc-sld", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-slibgcc-sld?ref=4e8d0554ef223d2158e45b5831b9623a355d1d08", "patch": "@@ -2,27 +2,28 @@\n \n SHLIB_EXT = .so\n SHLIB_SOLINK = @shlib_base_name@.so\n-SHLIB_SONAME = @shlib_so_name@.so.1\n-SHLIB_NAME = @shlib_base_name@.so.1\n+SHLIB_SONAME = @shlib_base_name@.so.1\n SHLIB_MAP = @shlib_map_file@\n SHLIB_OBJS = @shlib_objs@\n+SHLIB_DIR = @multilib_dir@\n SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n \n SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n \t-Wl,-h,$(SHLIB_SONAME) -Wl,-z,text -Wl,-z,defs \\\n-\t-Wl,-M,$(SHLIB_MAP) -o $(SHLIB_NAME).tmp \\\n+\t-Wl,-M,$(SHLIB_MAP) -o $(SHLIB_DIR)/$(SHLIB_SONAME).tmp \\\n \t@multilib_flags@ $(SHLIB_OBJS) -lc && \\\n-\trm -f $(SHLIB_SOLINK) && \\\n-\tif [ -f $(SHLIB_NAME) ]; then \\\n-\t  mv -f $(SHLIB_NAME) $(SHLIB_NAME).backup; \\\n+\trm -f $(SHLIB_DIR)/$(SHLIB_SOLINK) && \\\n+\tif [ -f $(SHLIB_DIR)/$(SHLIB_SONAME) ]; then \\\n+\t  mv -f $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n+\t\t$(SHLIB_DIR)/$(SHLIB_SONAME).backup; \\\n \telse true; fi && \\\n-\tmv $(SHLIB_NAME).tmp $(SHLIB_NAME) && \\\n-\t$(LN_S) $(SHLIB_NAME) $(SHLIB_SOLINK)\n+\tmv $(SHLIB_DIR)/$(SHLIB_SONAME).tmp $(SHLIB_DIR)/$(SHLIB_SONAME) && \\\n+\t$(LN_S) $(SHLIB_SONAME) $(SHLIB_DIR)/$(SHLIB_SOLINK)\n # $(slibdir) double quoted to protect it from expansion while building\n # libgcc.mk.  We want this delayed until actual install time.\n SHLIB_INSTALL = \\\n \t$$(mkinstalldirs) $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n-\t$(INSTALL_DATA) $(SHLIB_NAME) \\\n+\t$(INSTALL_DATA) $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n \t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n \trm -f $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK); \\\n \t$(LN_S) $(SHLIB_SONAME) \\"}, {"sha": "ad8ee654c68906b59bcebd2211a7db428178a971", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=4e8d0554ef223d2158e45b5831b9623a355d1d08", "patch": "@@ -6373,11 +6373,6 @@ Dump out a @option{-L} option for each directory that GCC believes might\n contain startup files.  If the target supports multilibs then the\n current multilib directory will be prepended to each of these paths.\n \n-@item %M\n-Output the multilib directory with directory separators replaced with\n-@samp{_}.  If multilib directories are not set, or the multilib directory is\n-@file{.} then this option emits nothing.\n-\n @item %L\n Process the @code{lib} spec.  This is a spec string for deciding which\n libraries should be included on the command line to the linker."}, {"sha": "753ba33eeff2bf9bc5eb355ca0deff95b9f81512", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 29, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=4e8d0554ef223d2158e45b5831b9623a355d1d08", "patch": "@@ -473,8 +473,6 @@ or with constant text in a single argument.\n  %l     process LINK_SPEC as a spec.\n  %L     process LIB_SPEC as a spec.\n  %G     process LIBGCC_SPEC as a spec.\n- %M     output multilib_dir with directory separators replaced with \"_\";\n-\tif multilib_dir is not set or is \".\", output \"\".\n  %S     process STARTFILE_SPEC as a spec.  A capital S is actually used here.\n  %E     process ENDFILE_SPEC as a spec.  A capital E is actually used here.\n  %C     process CPP_SPEC as a spec.\n@@ -1704,11 +1702,7 @@ init_spec (void)\n \tif (in_sep && *p == '-' && strncmp (p, \"-lgcc\", 5) == 0)\n \t  {\n \t    init_gcc_specs (&obstack,\n-#ifdef NO_SHARED_LIBGCC_MULTILIB\n \t\t\t    \"-lgcc_s\"\n-#else\n-\t\t\t    \"-lgcc_s%M\"\n-#endif\n #ifdef USE_LIBUNWIND_EXCEPTIONS\n \t\t\t    \" -lunwind\"\n #endif\n@@ -1732,12 +1726,7 @@ init_spec (void)\n \t    /* Ug.  We don't know shared library extensions.  Hope that\n \t       systems that use this form don't do shared libraries.  */\n \t    init_gcc_specs (&obstack,\n-#ifdef NO_SHARED_LIBGCC_MULTILIB\n-\t\t\t    \"-lgcc_s\"\n-#else\n-\t\t\t    \"-lgcc_s%M\"\n-#endif\n-\t\t\t    ,\n+\t\t\t    \"-lgcc_s\",\n \t\t\t    \"libgcc.a%s\",\n \t\t\t    \"libgcc_eh.a%s\"\n #ifdef USE_LIBUNWIND_EXCEPTIONS\n@@ -5078,23 +5067,6 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t      return value;\n \t    break;\n \n-\t  case 'M':\n-\t    if (multilib_dir && strcmp (multilib_dir, \".\") != 0)\n-\t      {\n-\t\tchar *p;\n-\t\tconst char *q;\n-\t\tsize_t len;\n-\n-\t\tlen = strlen (multilib_dir);\n-\t\tobstack_blank (&obstack, len + 1);\n-\t\tp = obstack_next_free (&obstack) - (len + 1);\n-\n-\t\t*p++ = '_';\n-\t\tfor (q = multilib_dir; *q ; ++q, ++p)\n-\t\t  *p = (IS_DIR_SEPARATOR (*q) ? '_' : *q);\n-\t      }\n-\t    break;\n-\n \t  case 'R':\n \t    /* We assume there is a directory\n \t       separator at the end of this string.  */"}, {"sha": "91e564086ec997709d0d2bd038958f9937b8a14b", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 34, "deletions": 136, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8d0554ef223d2158e45b5831b9623a355d1d08/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=4e8d0554ef223d2158e45b5831b9623a355d1d08", "patch": "@@ -33,7 +33,6 @@\n # EXTRA_MULTILIB_PARTS\n # SHLIB_EXT\n # SHLIB_LINK\n-# SHLIB_MULTILIB\n # SHLIB_MKMAP\n # SHLIB_MKMAP_OPTS\n # SHLIB_MAPFILES\n@@ -158,79 +157,29 @@ for ml in $MULTILIBS; do\n   # Work out relevant parameters that depend only on the multilib.\n   dir=`echo ${ml} | sed -e 's/;.*$//' -e 's/=/$(EQ)/g'`\n   flags=`echo ${ml} | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`;\n-  shlib_dir=\n-  shlib_dir_qual=\n+  shlib_slibdir_qual=\n   libgcc_a=$dir/libgcc.a\n   libgcov_a=$dir/libgcov.a\n   libgcc_eh_a=\n   libgcc_s_so=\n   libunwind_a=\n   libunwind_so=\n-  if [ \"$dir\" = . ]; then\n-    suffix=\n-  else\n-    suffix=`echo $dir | sed s,/,_,g`\n-  fi\n \n   if [ \"$LIBUNWIND\" ]; then\n     libunwind_a=$dir/libunwind.a\n   fi\n   if [ \"$SHLIB_LINK\" ]; then\n-    if [ -z \"$SHLIB_MULTILIB\" ]; then\n-      if [ \"$dir\" = . ]; then\n-\tlibgcc_eh_a=$dir/libgcc_eh.a\n-\tlibgcc_s_so_base=libgcc_s\n-\tlibgcc_s_so=${libgcc_s_so_base}${SHLIB_EXT}\n-\tlibgcc_s_soname=libgcc_s\n-\tif [ \"$LIBUNWIND\" ]; then\n-\t  libunwind_so_base=libunwind\n-\t  libunwind_so=${libunwind_so_base}${SHLIB_EXT}\n-\t  libunwind_soname=libunwind\n-\tfi\n-      else\n-\tlibgcc_eh_a=$dir/libgcc_eh.a\n-\tlibgcc_s_so_base=libgcc_s_${suffix}\n-\tlibgcc_s_so=${libgcc_s_so_base}${SHLIB_EXT}\n-\tlibgcc_s_soname=libgcc_s_${suffix}\n-\tif [ \"$LIBUNWIND\" ]; then\n-\t  libunwind_so_base=libunwind_${suffix}\n-\t  libunwind_so=${libunwind_so_base}${SHLIB_EXT}\n-\tfi\n-      fi\n-\n-      if [ -n \"$MULTILIB_OSDIRNAMES\" ]; then\n-\tif [ \"$dir\" != . ]; then\n-\t  gcc_multilib_dir=`./xgcc -B./ $flags --print-multi-directory`\n-\t  os_multilib_dir=`./xgcc -B./ $flags --print-multi-os-directory`\n-\t  shlib_dir=\"$dir\"/\n-\t  gcc_multilib_sup=`echo $gcc_multilib_dir | sed 's~^[^/]*/~~'`\n-\t  os_multilib_base=`echo $os_multilib_dir | sed -n \"s~/${gcc_multilib_sup}\\$~~p\"`\n-\t  if [ -z \"$os_multilib_base\" ]; then\n-\t    libgcc_s_soname=libgcc_s\n-\t    libunwind_soname=libunwind\n-\t    if [ \"$os_multilib_dir\" != \".\" ]; then\n-\t      shlib_dir_qual=\"/$os_multilib_dir\"\n-\t    fi\n-\t  else\n-\t    libgcc_s_soname=libgcc_s_`echo $gcc_multilib_sup | sed s,/,_,g`\n-\t    libunwind_soname=libunwind_`echo $gcc_multilib_sup | sed s,/,_,g`\n-\t    shlib_dir_qual=\"/$os_multilib_base\"\n-\t  fi\n-\tfi\n-      fi\n-\n-    elif [ \"$SHLIB_MULTILIB\" = \"$dir\" ]; then\n-      libgcc_eh_a=$dir/libgcc_eh.a\n-      libgcc_s_so_base=libgcc_s\n-      libgcc_s_so=${libgcc_s_so_base}${SHLIB_EXT}\n-      libgcc_s_soname=libgcc_s\n-      if [ \"$LIBUNWIND\" ]; then\n-\tlibunwind_so_base=libunwind\n-\tlibunwind_so=${libunwind_so_base}${SHLIB_EXT}\n-\tlibunwind_soname=libunwind\n-      fi\n+    libgcc_eh_a=$dir/libgcc_eh.a\n+    libgcc_s_so=$dir/libgcc_s${SHLIB_EXT}\n+    if [ \"$LIBUNWIND\" ]; then\n+      libunwind_so=$dir/libunwind${SHLIB_EXT}\n+    fi\n+    os_multilib_dir=`./xgcc -B./ $flags --print-multi-os-directory`\n+    if [ \"$os_multilib_dir\" != . ]; then\n+      shlib_slibdir_qual=\"/$os_multilib_dir\"\n     fi\n   fi\n+\n   libgcc_s_so_extra=\n   libunwind_so_extra=\n \n@@ -244,20 +193,9 @@ for ml in $MULTILIBS; do\n   echo \\# libgcc_eh_a: $libgcc_eh_a\n   echo \\# libunwind_a: $libunwind_a\n   echo \\#\n-  echo \\# gcc_multilib_dir: $gcc_multilib_dir\n-  echo \\# gcc_multilib_sup: $gcc_multilib_sup\n-  echo \\# os_multilib_dir: $os_multilib_dir\n-  echo \\# os_multilib_base: $os_multilib_base\n-  echo \\# shlib_dir: $shlib_dir\n-  echo \\# shlib_dir_qual: $shlib_dir_qual\n-  echo \\#\n+  echo \\# shlib_slibdir_qual: $shlib_slibdir_qual\n   echo \\# libgcc_s_so: $libgcc_s_so\n-  echo \\# libgcc_s_so_base: $libgcc_s_so_base\n-  echo \\# libgcc_s_soname: $libgcc_s_soname\n-  echo \\# \n   echo \\# libunwind_so: $libunwind_so\n-  echo \\# libunwind_so_base: $libunwind_so_base\n-  echo \\# libunwind_soname: $libunwind_soname\n   echo \\#\n   echo\n \n@@ -687,6 +625,11 @@ for ml in $MULTILIBS; do\n       extra=\"$extra $targ\"\n     done\n \n+    if [ \"$dir\" = . ]; then\n+      suffix=\n+    else\n+      suffix=`echo $dir | sed s,/,_,g`\n+    fi\n     echo extra$suffix: stmp-dirs\n     echo \"\t$make_compile\" \\\\\n     echo '\t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)' $flags '\" ' \\\\\n@@ -777,8 +720,7 @@ EOF\n \t | sed -e \"s%@multilib_flags@%$flags%g\" \\\n \t       -e \"s%@multilib_dir@%$dir%g\" \\\n \t       -e \"s%@shlib_objs@%\\$(objects)%g\" \\\n-\t       -e \"s%@shlib_base_name@%$libgcc_s_so_base%g\" \\\n-\t       -e \"s%@shlib_so_name@%$libgcc_s_soname%g\" \\\n+\t       -e \"s%@shlib_base_name@%libgcc_s%g\" \\\n \t       -e \"s%@shlib_map_file@%$mapfile%g\" \\\n \t       -e \"s%@shlib_slibdir_qual@%$shlib_dir_qual%g\"\n     echo \"all: $libgcc_s_so\"\n@@ -791,8 +733,7 @@ EOF\n \t   | sed -e \"s%@multilib_flags@%$flags%g\" \\\n \t\t -e \"s%@multilib_dir@%$dir%g\" \\\n \t\t -e \"s%@shlib_objs@%\\$(objects)%g\" \\\n-\t\t -e \"s%@shlib_base_name@%$libunwind_so_base%g\" \\\n-\t\t -e \"s%@shlib_so_name@%$libunwind_soname%g\" \\\n+\t\t -e \"s%@shlib_base_name@%libunwind%g\" \\\n \t\t -e \"s%@shlib_slibdir_qual@%$shlib_dir_qual%g\"\n     echo \"all: $libunwind_so\"\n   fi\n@@ -839,66 +780,23 @@ for ml in $MULTILIBS; do\n     echo '\t$(INSTALL_DATA)' ${dir}/libgcc_eh.a ${ldir}/\n     echo '\t$(RANLIB_FOR_TARGET)' ${ldir}/libgcc_eh.a\n \n-    if [ -z \"$SHLIB_MULTILIB\" ]; then\n-      if [ \"$dir\" = . ]; then\n-\tshlib_base_name=libgcc_s\n-\tshlibunwind_base_name=libunwind\n-      else\n-\tshlib_base_name=libgcc_s_`echo $dir | sed s,/,_,g`\n-\tshlibunwind_base_name=libunwind_`echo $dir | sed s,/,_,g`\n-      fi\n-      shlib_so_name=\"$shlib_base_name\"\n-      shlibunwind_so_name=\"$shlibunwind_base_name\"\n-      shlib_dir=\n-      shlib_slibdir_qual=\n-      if [ -n \"$MULTILIB_OSDIRNAMES\" ]; then\n-\tgcc_multilib_dir=`./xgcc -B./ $flags --print-multi-directory`\n-\tos_multilib_dir=`./xgcc -B./ $flags --print-multi-os-directory`\n-\tif [ \"$dir\" != . ]; then\n-\t  shlib_dir=\"$dir\"/\n-\tfi\n-\tgcc_multilib_sup=`echo $gcc_multilib_dir | sed 's~^[^/]*/~~'`\n-\tos_multilib_base=`echo $os_multilib_dir | sed -n \"s~/${gcc_multilib_sup}\\$~~p\"`\n-\tif [ -z \"$os_multilib_base\" ]; then\n-\t  shlib_so_name=libgcc_s\n-\t  shlibunwind_so_name=libunwind\n-\t  if [ \"$os_multilib_dir\" != \".\" ]; then\n-\t    shlib_slibdir_qual=\"/$os_multilib_dir\"\n-\t  fi\n-\telse\n-\t  shlib_so_name=libgcc_s_`echo $gcc_multilib_sup | sed s,/,_,g`\n-\t  shlibunwind_so_name=libunwind_`echo $gcc_multilib_sup | sed s,/,_,g`\n-\t  shlib_slibdir_qual=\"/$os_multilib_base\"\n-\tfi\n-      fi\n-      echo \"\t$SHLIB_INSTALL\" \\\n-\t| sed -e \"s%@shlib_base_name@%$shlib_base_name%g\" \\\n-\t      -e \"s%@shlib_so_name@%$shlib_so_name%g\" \\\n+    shlib_slibdir_qual=\n+    os_multilib_dir=`./xgcc -B./ $flags --print-multi-os-directory`\n+    if [ \"$os_multilib_dir\" != . ]; then\n+      shlib_slibdir_qual=\"/$os_multilib_dir\"\n+    fi\n+    echo \"\t$SHLIB_INSTALL\" \\\n+      | sed -e \"s%@multilib_dir@%$dir%g\" \\\n+\t    -e \"s%@shlib_base_name@%libgcc_s%g\" \\\n+\t    -e \"s%@shlib_slibdir_qual@%$shlib_slibdir_qual%g\"\n+    if [ \"$LIBUNWIND\" ]; then\n+      echo \"\t$SHLIBUNWIND_INSTALL\" \\\n+\t| sed -e \"s%@multilib_dir@%$dir%g\" \\\n+\t      -e \"s%@shlib_base_name@%libunwind%g\" \\\n \t      -e \"s%@shlib_slibdir_qual@%$shlib_slibdir_qual%g\"\n-      if [ \"$LIBUNWIND\" ]; then\n-\techo \"\t$SHLIBUNWIND_INSTALL\" \\\n-\t   | sed -e \"s%@shlib_base_name@%$shlibunwind_base_name%g\" \\\n-\t\t -e \"s%@shlib_so_name@%$shlibunwind_so_name%g\" \\\n-\t\t -e \"s%@shlib_slibdir_qual@%$shlib_slibdir_qual%g\"\n-\tlibunwinddir='$(DESTDIR)$(slibdir)$(shlib_slibdir_qual)/$(shlib_dir)'\n-\techo '\t$(INSTALL_DATA)' ${dir}/libunwind.a ${libunwinddir}/\n-\techo '\t$(RANLIB_FOR_TARGET)' ${libunwinddir}/libunwind.a\n-      fi\n-    elif [ \"$SHLIB_MULTILIB\" = \"$dir\" ]; then\n-      shlib_base_name=\"libgcc_s\";\n-      echo \"\t$SHLIB_INSTALL\" \\\n-\t| sed -e \"s%@shlib_base_name@%$shlib_base_name%g\" \\\n-\t      -e \"s%@shlib_so_name@%$shlib_base_name%g\" \\\n-\t      -e \"s%@shlib_slibdir_qual@%%g\"\n-      if [ \"$LIBUNWIND\" ]; then\n-\techo \"\t$SHLIBUNWIND_INSTALL\" \\\n-\t   | sed -e \"s%@shlib_base_name@%$shlibunwind_base_name%g\" \\\n-\t\t -e \"s%@shlib_so_name@%$shlibunwind_base_name%g\" \\\n-\t\t -e \"s%@shlib_slibdir_qual@%%g\"\n-\tlibunwinddir='$(DESTDIR)$(slibdir)'\n-\techo '\t$(INSTALL_DATA)' ${dir}/libunwind.a ${libunwinddir}/\n-\techo '\t$(RANLIB_FOR_TARGET)' ${libunwinddir}/libunwind.a\n-      fi\n+      libunwinddir='$(DESTDIR)$(slibdir)$(shlib_slibdir_qual)/$(shlib_dir)'\n+      echo '\t$(INSTALL_DATA)' ${dir}/libunwind.a ${libunwinddir}/\n+      echo '\t$(RANLIB_FOR_TARGET)' ${libunwinddir}/libunwind.a\n     fi\n   fi\n done"}]}