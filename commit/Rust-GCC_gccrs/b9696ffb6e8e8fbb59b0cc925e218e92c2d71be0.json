{"sha": "b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk2OTZmZmI2ZThlOGZiYjU5YjBjYzkyNWUyMThlOTJjMmQ3MWJlMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-10T12:21:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-10T12:21:19Z"}, "message": "[multiple changes]\n\n2014-10-10  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch7.adb, einfo.adb, einfo.ads, sem_prag.adb, sem_ch12.adb,\n\tfreeze.adb, sem_util.adb, sem_res.adb, exp_ch6.adb, exp_ch13.adb,\n\tsem_ch6.adb, sem_cat.adb, sem_disp.adb\n\t(Is_Subprogram_Or_Generic_Subprogram): New primitive. Use this primitive\n\tthroughout where appropriate.\n\n2014-10-10  Bob Duff  <duff@adacore.com>\n\n\t* a-coinho-shared.ads: Minor reformatting.\n\t* s-traceb.adb: Minor clean up.\n\n2014-10-10  Robert Dewar  <dewar@adacore.com>\n\n\t* ali.adb (Scan_ALI): Read and process new GP flag on ALI P line.\n\t* ali.ads (GNATprove_Mode): New component in ALI table.\n\t(GNATprove_Mode_Specified): New global.\n\t* gnatbind.adb (Gnatbind): Give fatal error if any file compiled\n\tin GNATProve mode.\n\t* lib-writ.ads, lib-writ.adb (GP): New flag on P line for\n\tGNATProve_Mode.\n\n2014-10-10  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch3.adb (Build_Init_Procedure): Adding assertion.\n\t(Build_Init_Statement): Ensure that statements\n\tassociated with the parent components are located at the beginning\n\tof the returned list of statements.\n\n2014-10-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch13.adb (Inherit_Aspects_At_Freeze_Node): If the full\n\tview of a private type T that has a type invariant is a scalar\n\tor constrained array type, the base type created for the full\n\tview has the same type invariant.\n\nFrom-SVN: r216074", "tree": {"sha": "855a30ced6ee7e81f10a0eb96168f1d3102e77ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/855a30ced6ee7e81f10a0eb96168f1d3102e77ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/comments", "author": null, "committer": null, "parents": [{"sha": "1e3ed0fc933a9c77ddc14f7097dd601d824c2b35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e3ed0fc933a9c77ddc14f7097dd601d824c2b35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e3ed0fc933a9c77ddc14f7097dd601d824c2b35"}], "stats": {"total": 258, "additions": 170, "deletions": 88}, "files": [{"sha": "e835483dca779d10ada895629b80b83b4af07c32", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -1,3 +1,40 @@\n+2014-10-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch7.adb, einfo.adb, einfo.ads, sem_prag.adb, sem_ch12.adb,\n+\tfreeze.adb, sem_util.adb, sem_res.adb, exp_ch6.adb, exp_ch13.adb,\n+\tsem_ch6.adb, sem_cat.adb, sem_disp.adb\n+\t(Is_Subprogram_Or_Generic_Subprogram): New primitive. Use this primitive\n+\tthroughout where appropriate.\n+\n+2014-10-10  Bob Duff  <duff@adacore.com>\n+\n+\t* a-coinho-shared.ads: Minor reformatting.\n+\t* s-traceb.adb: Minor clean up.\n+\n+2014-10-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* ali.adb (Scan_ALI): Read and process new GP flag on ALI P line.\n+\t* ali.ads (GNATprove_Mode): New component in ALI table.\n+\t(GNATprove_Mode_Specified): New global.\n+\t* gnatbind.adb (Gnatbind): Give fatal error if any file compiled\n+\tin GNATProve mode.\n+\t* lib-writ.ads, lib-writ.adb (GP): New flag on P line for\n+\tGNATProve_Mode.\n+\n+2014-10-10  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch3.adb (Build_Init_Procedure): Adding assertion.\n+\t(Build_Init_Statement): Ensure that statements\n+\tassociated with the parent components are located at the beginning\n+\tof the returned list of statements.\n+\n+2014-10-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb (Inherit_Aspects_At_Freeze_Node): If the full\n+\tview of a private type T that has a type invariant is a scalar\n+\tor constrained array type, the base type created for the full\n+\tview has the same type invariant.\n+\n 2014-10-10  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_util.ads, sem_ch12.adb, exp_util.adb, i-fortra.ads: Minor code"}, {"sha": "2ec30f88aefe95db193839ca01ee55e399612ddd", "filename": "gcc/ada/a-coinho-shared.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fa-coinho-shared.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fa-coinho-shared.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho-shared.ads?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -29,12 +29,12 @@\n -- <http://www.gnu.org/licenses/>.                                          --\n ------------------------------------------------------------------------------\n \n---  Missing documentation: what is this unit all about??? From its name it\n---  is some variation of a-coinho.ads/adb, but documentation needs to be\n---  HERE explaining that ???\n+--  This is an optimized version of Indefinite_Holders using copy-on-write.\n+--  It is used on platforms that support atomic built-ins.\n \n private with Ada.Finalization;\n private with Ada.Streams;\n+\n private with System.Atomic_Counters;\n \n generic"}, {"sha": "3a3431878aa03461d600b052cf221930725e3334", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -111,6 +111,7 @@ package body ALI is\n       Locking_Policy_Specified               := ' ';\n       No_Normalize_Scalars_Specified         := False;\n       No_Object_Specified                    := False;\n+      GNATprove_Mode_Specified               := False;\n       Normalize_Scalars_Specified            := False;\n       Partition_Elaboration_Policy_Specified := ' ';\n       Queuing_Policy_Specified               := ' ';\n@@ -875,6 +876,7 @@ package body ALI is\n         First_Sdep                   => No_Sdep_Id,\n         First_Specific_Dispatching   => Specific_Dispatching.Last + 1,\n         First_Unit                   => No_Unit_Id,\n+        GNATprove_Mode               => False,\n         Last_Interrupt_State         => Interrupt_States.Last,\n         Last_Sdep                    => No_Sdep_Id,\n         Last_Specific_Dispatching    => Specific_Dispatching.Last,\n@@ -1089,6 +1091,13 @@ package body ALI is\n                ALIs.Table (Id).Partition_Elaboration_Policy :=\n                  Partition_Elaboration_Policy_Specified;\n \n+            --  Processing for GP\n+\n+            elsif C = 'G' then\n+               Checkc ('P');\n+               GNATprove_Mode_Specified := True;\n+               ALIs.Table (Id).GNATprove_Mode := True;\n+\n             --  Processing for Lx\n \n             elsif C = 'L' then"}, {"sha": "c48d913d8a3ed7b022119313fbf6da797baae8a1", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -176,6 +176,11 @@ package ALI is\n       --  always be set as well in this case. Not set if 'P' appears in\n       --  Ignore_Lines.\n \n+      GNATprove_Mode : Boolean;\n+      --  Set to True if ALI and object file produced in GNATprove_Mode as\n+      --  signalled by GP appearing on the P line. Not set if 'P' appears in\n+      --  Ignore_Lines.\n+\n       No_Object : Boolean;\n       --  Set to True if no object file generated. Not set if 'P' appears in\n       --  Ignore_Lines.\n@@ -465,6 +470,9 @@ package ALI is\n    --  Set to False by Initialize_ALI. Set to True if Scan_ALI reads\n    --  a unit for which dynamic elaboration checking is enabled.\n \n+   GNATprove_Mode_Specified : Boolean := False;\n+   --  Set to True if an ali file was produced in GNATprove mode.\n+\n    Initialize_Scalars_Used : Boolean := False;\n    --  Set True if an ali file contains the Initialize_Scalars flag\n "}, {"sha": "e4e036019968c37f8e8a6be1668c856d0c7c5d0e", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -1129,8 +1129,7 @@ package body Einfo is\n                        E_Package_Body,\n                        E_Subprogram_Body,\n                        E_Variable)\n-          or else Is_Generic_Subprogram (Id)\n-          or else Is_Subprogram (Id));\n+          or else Is_Subprogram_Or_Generic_Subprogram (Id));\n       return Node34 (Id);\n    end Contract;\n \n@@ -3405,6 +3404,13 @@ package body Einfo is\n       return Ekind (Id) in Subprogram_Kind;\n    end Is_Subprogram;\n \n+   function Is_Subprogram_Or_Generic_Subprogram (Id : E) return B is\n+   begin\n+      return Ekind (Id) in Subprogram_Kind\n+               or else\n+             Ekind (Id) in Generic_Subprogram_Kind;\n+   end Is_Subprogram_Or_Generic_Subprogram;\n+\n    function Is_Task_Type                        (Id : E) return B is\n    begin\n       return Ekind (Id) in Task_Kind;\n@@ -3593,15 +3599,14 @@ package body Einfo is\n    begin\n       pragma Assert\n         (Ekind_In (Id, E_Entry,\n-         E_Entry_Family,\n-         E_Generic_Package,\n-         E_Package,\n-         E_Package_Body,\n-         E_Subprogram_Body,\n-         E_Variable,\n-         E_Void)\n-         or else Is_Generic_Subprogram (Id)\n-         or else Is_Subprogram (Id));\n+                         E_Entry_Family,\n+                         E_Generic_Package,\n+                         E_Package,\n+                         E_Package_Body,\n+                         E_Subprogram_Body,\n+                         E_Variable,\n+                         E_Void)\n+          or else Is_Subprogram_Or_Generic_Subprogram (Id));\n       Set_Node34 (Id, V);\n    end Set_Contract;\n "}, {"sha": "da63627748c77cf53aabe02f2b553eeed469f7f2", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -2974,6 +2974,10 @@ package Einfo is\n --       Applies to all entities, true for function, procedure and operator\n --       entities.\n \n+--    Is_Subprogram_Or_Generic_Subprogram\n+--       Applies to all entities, true for function procedure and operator\n+--       entities, and also for the corresponding generic entities.\n+\n --    Is_Synchronized_Interface (synthesized)\n --       Defined in types that are interfaces. True if interface is declared\n --       synchronized, task, or protected, or is derived from a synchronized\n@@ -6964,6 +6968,7 @@ package Einfo is\n    function Is_Scalar_Type                      (Id : E) return B;\n    function Is_Signed_Integer_Type              (Id : E) return B;\n    function Is_Subprogram                       (Id : E) return B;\n+   function Is_Subprogram_Or_Generic_Subprogram (Id : E) return B;\n    function Is_Task_Type                        (Id : E) return B;\n    function Is_Type                             (Id : E) return B;\n \n@@ -8800,6 +8805,7 @@ package Einfo is\n    pragma Inline (Is_Base_Type);\n    pragma Inline (Is_Package_Or_Generic_Package);\n    pragma Inline (Is_Packed_Array);\n+   pragma Inline (Is_Subprogram_Or_Generic_Subprogram);\n    pragma Inline (Is_Volatile);\n    pragma Inline (Is_Wrapper_Package);\n    pragma Inline (Known_RM_Size);"}, {"sha": "ff73d94522b38f5968fc8289f405d5120f8280bb", "filename": "gcc/ada/exp_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fexp_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fexp_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -528,7 +528,7 @@ package body Exp_Ch13 is\n            and then\n              (Is_Entry (E_Scope)\n                 or else (Is_Subprogram (E_Scope)\n-                           and then Is_Protected_Type (Scope (E_Scope)))\n+                          and then Is_Protected_Type (Scope (E_Scope)))\n                 or else Is_Task_Type (E_Scope))\n          then\n             null;"}, {"sha": "9541ad096c1c31e143fb8705b01ccffa532290fa", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 44, "deletions": 20, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -2372,7 +2372,15 @@ package body Exp_Ch3 is\n                   --  generated.\n \n                   if not Is_Interface (Etype (Rec_Ent)) then\n-                     Prepend_To (Body_Stmts, Remove_Head (Stmts));\n+                     declare\n+                        First_Stmt : constant Node_Id := Remove_Head (Stmts);\n+                     begin\n+                        pragma Assert\n+                          (Nkind (First_Stmt) = N_Procedure_Call_Statement\n+                             and then\n+                           Is_Init_Proc (Name (First_Stmt)));\n+                        Prepend_To (Body_Stmts, First_Stmt);\n+                     end;\n                   end if;\n \n                   Append_List_To (Body_Stmts, Stmts);\n@@ -2655,15 +2663,16 @@ package body Exp_Ch3 is\n       ---------------------------\n \n       function Build_Init_Statements (Comp_List : Node_Id) return List_Id is\n-         Checks     : constant List_Id := New_List;\n-         Actions    : List_Id   := No_List;\n-         Comp_Loc   : Source_Ptr;\n-         Counter_Id : Entity_Id := Empty;\n-         Decl       : Node_Id;\n-         Has_POC    : Boolean;\n-         Id         : Entity_Id;\n-         Stmts      : List_Id;\n-         Typ        : Entity_Id;\n+         Checks       : constant List_Id := New_List;\n+         Actions      : List_Id   := No_List;\n+         Comp_Loc     : Source_Ptr;\n+         Counter_Id   : Entity_Id := Empty;\n+         Decl         : Node_Id;\n+         Has_POC      : Boolean;\n+         Id           : Entity_Id;\n+         Parent_Stmts : List_Id;\n+         Stmts        : List_Id;\n+         Typ          : Entity_Id;\n \n          procedure Increment_Counter (Loc : Source_Ptr);\n          --  Generate an \"increment by one\" statement for the current counter\n@@ -2727,6 +2736,7 @@ package body Exp_Ch3 is\n             return New_List (Make_Null_Statement (Loc));\n          end if;\n \n+         Parent_Stmts := New_List;\n          Stmts := New_List;\n \n          --  Loop through visible declarations of task types and protected\n@@ -2956,29 +2966,43 @@ package body Exp_Ch3 is\n                end if;\n \n                if Present (Checks) then\n-                  Append_List_To (Stmts, Checks);\n+                  if Chars (Id) = Name_uParent then\n+                     Append_List_To (Parent_Stmts, Checks);\n+                  else\n+                     Append_List_To (Stmts, Checks);\n+                  end if;\n                end if;\n \n                if Present (Actions) then\n-                  Append_List_To (Stmts, Actions);\n+                  if Chars (Id) = Name_uParent then\n+                     Append_List_To (Parent_Stmts, Actions);\n \n-                  --  Preserve the initialization state in the current counter\n+                  else\n+                     Append_List_To (Stmts, Actions);\n \n-                  if Chars (Id) /= Name_uParent\n-                    and then Needs_Finalization (Typ)\n-                  then\n-                     if No (Counter_Id) then\n-                        Make_Counter (Comp_Loc);\n-                     end if;\n+                     --  Preserve the initialization state in the current\n+                     --  counter\n \n-                     Increment_Counter (Comp_Loc);\n+                     if Needs_Finalization (Typ) then\n+                        if No (Counter_Id) then\n+                           Make_Counter (Comp_Loc);\n+                        end if;\n+\n+                        Increment_Counter (Comp_Loc);\n+                     end if;\n                   end if;\n                end if;\n             end if;\n \n             Next_Non_Pragma (Decl);\n          end loop;\n \n+         --  The parent field must be initialized first because variable\n+         --  size components of the parent affect the location of all the\n+         --  new components.\n+\n+         Prepend_List_To (Stmts, Parent_Stmts);\n+\n          --  Set up tasks and protected object support. This needs to be done\n          --  before any component with a per-object access discriminant\n          --  constraint, or any variant part (which may contain such"}, {"sha": "25a3972e758aac38805f0597ecfcd70f85074c9c", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -5825,9 +5825,8 @@ package body Exp_Ch6 is\n         Defining_Identifier\n           (First (Parameter_Specifications (Parent (Corr))));\n \n-      if Is_Subprogram (Proc)\n-        and then Proc /= Corr\n-      then\n+      if Is_Subprogram (Proc) and then Proc /= Corr then\n+\n          --  Protected function or procedure\n \n          Set_Entity (Rec, Param);"}, {"sha": "d5dbb440fbbdd8540e63715d82282b61bb31c2a9", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -1703,7 +1703,6 @@ package body Freeze is\n       E := From;\n       while Present (E) loop\n          if Is_Subprogram (E) then\n-\n             if not Default_Expressions_Processed (E) then\n                Process_Default_Expressions (E, After);\n             end if;"}, {"sha": "0d99ccf155c07fc1aa15f1900d1914130d1ec43e", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -776,6 +776,13 @@ begin\n          raise Unrecoverable_Error;\n       end if;\n \n+      --  Quit with message if we had a GNATprove file\n+\n+      if GNATprove_Mode_Specified then\n+         Error_Msg (\"one or more files compiled in GNATprove mode\");\n+         raise Unrecoverable_Error;\n+      end if;\n+\n       --  Output list of ALI files in closure\n \n       if Output_ALI_List then"}, {"sha": "67a4859a81f87479dd15ae791365e675de2aaf33", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -1153,6 +1153,10 @@ package body Lib.Writ is\n          end if;\n       end if;\n \n+      if GNATprove_Mode then\n+         Write_Info_Str (\" GP\");\n+      end if;\n+\n       if Partition_Elaboration_Policy /= ' ' then\n          Write_Info_Str  (\" E\");\n          Write_Info_Char (Partition_Elaboration_Policy);"}, {"sha": "91c16c0f081fdab1d1ff8ae027c533a4b19630ee", "filename": "gcc/ada/lib-writ.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Flib-writ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Flib-writ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.ads?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -192,6 +192,9 @@ package Lib.Writ is\n    --              the units in this file, where x is the first character\n    --              (upper case) of the policy name (e.g. 'C' for Concurrent).\n \n+   --         GP   Set if this compilation was done in GNATprove mode, either\n+   --              from direct use of GNATprove, or from use of -gnatdF.\n+\n    --         Lx   A valid Locking_Policy pragma applies to all the units in\n    --              this file, where x is the first character (upper case) of\n    --              the policy name (e.g. 'C' for Ceiling_Locking).\n@@ -200,7 +203,9 @@ package Lib.Writ is\n    --              were not compiled to produce an object. This can occur as a\n    --              result of the use of -gnatc, or if no object can be produced\n    --              (e.g. when a package spec is compiled instead of the body,\n-   --              or a subunit on its own).\n+   --              or a subunit on its own). Note that in GNATprove mode, we\n+   --              do produce an object. The object is not suitable for binding\n+   --              and linking, but we do not set NO, instead we set GP.\n \n    --         NR   No_Run_Time. Indicates that a pragma No_Run_Time applies\n    --              to all units in the file."}, {"sha": "4855644434e5f943d7b5c9819733de5487160c3a", "filename": "gcc/ada/s-traceb.adb", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fs-traceb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fs-traceb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-traceb.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -38,16 +38,6 @@ pragma Compiler_Unit_Warning;\n \n package body System.Traceback is\n \n---   procedure Call_Chain\n---     (Traceback   : System.Address;\n---      Max_Len     : Natural;\n---      Len         : out Natural;\n---      Exclude_Min : System.Address := System.Null_Address;\n---      Exclude_Max : System.Address := System.Null_Address;\n---      Skip_Frames : Natural := 1);\n---   --  Same as the exported version, but takes Traceback as an Address\n---  ???See declaration in the spec for why this is temporarily commented out.\n-\n    ------------------\n    -- C_Call_Chain --\n    ------------------"}, {"sha": "04638aaa8d081230ac8807b2c7f4034ddf609cf2", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -615,9 +615,7 @@ package body Sem_Cat is\n \n       E := Current_Scope;\n       loop\n-         if Is_Subprogram (E)\n-              or else\n-            Is_Generic_Subprogram (E)\n+         if Is_Subprogram_Or_Generic_Subprogram (E)\n               or else\n             Is_Concurrent_Type (E)\n          then"}, {"sha": "595a3b0a8b437614073ba705adab7543c5cea914", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -3543,9 +3543,7 @@ package body Sem_Ch12 is\n          else\n             E := First_Entity (Gen_Unit);\n             while Present (E) loop\n-               if Is_Subprogram (E)\n-                 and then Is_Inlined (E)\n-               then\n+               if Is_Subprogram (E) and then Is_Inlined (E) then\n                   return True;\n                end if;\n \n@@ -6558,7 +6556,7 @@ package body Sem_Ch12 is\n \n          if Ekind (Scop) = E_Generic_Package\n            or else (Is_Subprogram (Scop)\n-                      and then Nkind (Unit_Declaration_Node (Scop)) =\n+                     and then Nkind (Unit_Declaration_Node (Scop)) =\n                                         N_Generic_Subprogram_Declaration)\n          then\n             Elmt := First_Elmt (Inner_Instances (Inner));"}, {"sha": "10f4a7480b617ba4eb90ea1f16a6ea243d314abf", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -10705,6 +10705,15 @@ package body Sem_Ch13 is\n          if Class_Present (Get_Rep_Item (Typ, Name_Invariant)) then\n             Set_Has_Inheritable_Invariants (Typ);\n          end if;\n+\n+      --  If the full view of the type is a scalar type or array type, the\n+      --  implicit base type created for it has the same invariant.\n+\n+      elsif Has_Invariants (Typ) and then Base_Type (Typ) /= Typ\n+        and then not Has_Invariants (Base_Type (Typ))\n+      then\n+         Set_Has_Invariants (Base_Type (Typ));\n+         Set_Invariant_Procedure (Base_Type (Typ), Invariant_Procedure (Typ));\n       end if;\n \n       --  Volatile"}, {"sha": "41c7fd8dae7a167e563fcaac6cb7ac44b02bea36", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -8406,7 +8406,7 @@ package body Sem_Ch6 is\n    procedure List_Inherited_Pre_Post_Aspects (E : Entity_Id) is\n    begin\n       if Opt.List_Inherited_Aspects\n-        and then (Is_Subprogram (E) or else Is_Generic_Subprogram (E))\n+        and then Is_Subprogram_Or_Generic_Subprogram (E)\n       then\n          declare\n             Inherited : constant Subprogram_List := Inherited_Subprograms (E);"}, {"sha": "2d96314fc35c75139ec8157b642ec56462a0b162", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -2808,7 +2808,7 @@ package body Sem_Ch7 is\n \n       --  Body required if subprogram\n \n-      elsif Is_Subprogram (P) or else Is_Generic_Subprogram (P) then\n+      elsif Is_Subprogram_Or_Generic_Subprogram (P) then\n          return True;\n \n       --  Treat a block as requiring a body\n@@ -2937,7 +2937,7 @@ package body Sem_Ch7 is\n \n       --  Body required if subprogram\n \n-      elsif Is_Subprogram (P) or else Is_Generic_Subprogram (P) then\n+      elsif Is_Subprogram_Or_Generic_Subprogram (P) then\n          Error_Msg_N (\"info: & requires body (subprogram case)?Y?\", P);\n \n       --  Body required if generic parent has Elaborate_Body"}, {"sha": "a915ab05e77c005dda482a58a6ecf8183ae7f061", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -2098,10 +2098,7 @@ package body Sem_Disp is\n                      and then\n                        Is_Interface (Find_Dispatching_Type (Parent_Op)));\n \n-               if Is_Subprogram         (Parent_Op)\n-                    or else\n-                  Is_Generic_Subprogram (Parent_Op)\n-               then\n+               if Is_Subprogram_Or_Generic_Subprogram (Parent_Op) then\n                   Store_IS (Parent_Op);\n                end if;\n             end loop;\n@@ -2134,10 +2131,7 @@ package body Sem_Disp is\n                      --  The following test eliminates some odd cases in which\n                      --  Ekind (Prim) is Void, to be investigated further ???\n \n-                     if not (Is_Subprogram         (Prim)\n-                                or else\n-                             Is_Generic_Subprogram (Prim))\n-                     then\n+                     if not Is_Subprogram_Or_Generic_Subprogram (Prim) then\n                         null;\n \n                      --  For [generic] subprogram, look at interface alias"}, {"sha": "436b9b12a29baa3865221bf808671ecb61cc7750", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -6736,10 +6736,9 @@ package body Sem_Prag is\n                     (\"dispatching subprogram# cannot use Stdcall convention!\",\n                      Arg1);\n \n-               --  Subprogram is allowed, but not a generic subprogram\n+               --  Subprograms are not allowed\n \n-               elsif not Is_Subprogram (E)\n-                 and then not Is_Generic_Subprogram (E)\n+               elsif not Is_Subprogram_Or_Generic_Subprogram (E)\n \n                  --  A variable is OK\n \n@@ -7016,18 +7015,15 @@ package body Sem_Prag is\n          --  For Intrinsic, a subprogram is required\n \n          if C = Convention_Intrinsic\n-           and then not Is_Subprogram (E)\n-           and then not Is_Generic_Subprogram (E)\n+           and then not Is_Subprogram_Or_Generic_Subprogram (E)\n          then\n             Error_Pragma_Arg\n               (\"second argument of pragma% must be a subprogram\", Arg2);\n          end if;\n \n          --  Deal with non-subprogram cases\n \n-         if not Is_Subprogram (E)\n-           and then not Is_Generic_Subprogram (E)\n-         then\n+         if not Is_Subprogram_Or_Generic_Subprogram (E) then\n             Set_Convention_From_Pragma (E);\n \n             if Is_Type (E) then\n@@ -7885,9 +7881,8 @@ package body Sem_Prag is\n                end if;\n             end if;\n \n-         elsif Is_Subprogram (Def_Id)\n-           or else Is_Generic_Subprogram (Def_Id)\n-         then\n+         elsif Is_Subprogram_Or_Generic_Subprogram (Def_Id) then\n+\n             --  If the name is overloaded, pragma applies to all of the denoted\n             --  entities in the same declarative part, unless the pragma comes\n             --  from an aspect specification or was generated by the compiler\n@@ -7909,9 +7904,7 @@ package body Sem_Prag is\n                --  If it is not a subprogram, it must be in an outer scope and\n                --  pragma does not apply.\n \n-               elsif not Is_Subprogram (Def_Id)\n-                 and then not Is_Generic_Subprogram (Def_Id)\n-               then\n+               elsif not Is_Subprogram_Or_Generic_Subprogram (Def_Id) then\n                   null;\n \n                --  The pragma does not apply to primitives of interfaces"}, {"sha": "b35ffbd862619de329eec4376b572d622c97d8f4", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -4289,9 +4289,7 @@ package body Sem_Res is\n             then\n                Error_Msg_N (\"class-wide argument not allowed here!\", A);\n \n-               if Is_Subprogram (Nam)\n-                 and then Comes_From_Source (Nam)\n-               then\n+               if Is_Subprogram (Nam) and then Comes_From_Source (Nam) then\n                   Error_Msg_Node_2 := F_Typ;\n                   Error_Msg_NE\n                     (\"& is not a dispatching operation of &!\", A, Nam);"}, {"sha": "85105e538e0444a9e69655270d291f5b85c6dab2", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=b9696ffb6e8e8fbb59b0cc925e218e92c2d71be0", "patch": "@@ -4321,7 +4321,7 @@ package body Sem_Util is\n    function Current_Subprogram return Entity_Id is\n       Scop : constant Entity_Id := Current_Scope;\n    begin\n-      if Is_Subprogram (Scop) or else Is_Generic_Subprogram (Scop) then\n+      if Is_Subprogram_Or_Generic_Subprogram (Scop) then\n          return Scop;\n       else\n          return Enclosing_Subprogram (Scop);\n@@ -16491,8 +16491,7 @@ package body Sem_Util is\n          while not Comes_From_Source (Val_Actual)\n            and then Nkind (Val_Actual) in N_Entity\n            and then (Ekind (Val_Actual) = E_Enumeration_Literal\n-                      or else Is_Subprogram (Val_Actual)\n-                      or else Is_Generic_Subprogram (Val_Actual))\n+                      or else Is_Subprogram_Or_Generic_Subprogram (Val_Actual))\n            and then Present (Alias (Val_Actual))\n          loop\n             Val_Actual := Alias (Val_Actual);"}]}