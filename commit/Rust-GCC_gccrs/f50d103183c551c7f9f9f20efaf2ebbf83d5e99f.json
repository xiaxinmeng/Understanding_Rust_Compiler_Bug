{"sha": "f50d103183c551c7f9f9f20efaf2ebbf83d5e99f", "node_id": "C_kwDOANBUbNoAKGY1MGQxMDMxODNjNTUxYzdmOWY5ZjIwZWZhZjJlYmJmODNkNWU5OWY", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-03T15:31:32Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-04T04:23:14Z"}, "message": "[PR107130] range-ops: Separate out ffs and popcount optimizations.\n\n__builtin_popcount and __builtin_ffs were sharing the same range-ops\nentry, but the nonzero mask optimization is not valid for ffs.\nSeparate them out into two entries.\n\n\tPR tree-optimization/107130\n\ngcc/ChangeLog:\n\n\t* gimple-range-op.cc (class cfn_popcount): Call op_cfn_ffs.\n\t(class cfn_ffs): New.\n\t(gimple_range_op_handler::maybe_builtin_call): Separate out\n\tCASE_CFN_FFS into its own case.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/tree-ssa/pr107130.c: New test.", "tree": {"sha": "77e624677cb5b50d227f3697078e6d93f18a8dc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77e624677cb5b50d227f3697078e6d93f18a8dc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f50d103183c551c7f9f9f20efaf2ebbf83d5e99f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f50d103183c551c7f9f9f20efaf2ebbf83d5e99f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f50d103183c551c7f9f9f20efaf2ebbf83d5e99f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f50d103183c551c7f9f9f20efaf2ebbf83d5e99f/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70e3f71a279856eabf99bbc92c0345c3ad20b615", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e3f71a279856eabf99bbc92c0345c3ad20b615", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70e3f71a279856eabf99bbc92c0345c3ad20b615"}], "stats": {"total": 56, "additions": 46, "deletions": 10}, "files": [{"sha": "5b71d1cce6d39ba68afd5e53a6264b9252611462", "filename": "gcc/gimple-range-op.cc", "status": "modified", "additions": 27, "deletions": 10, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50d103183c551c7f9f9f20efaf2ebbf83d5e99f/gcc%2Fgimple-range-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50d103183c551c7f9f9f20efaf2ebbf83d5e99f/gcc%2Fgimple-range-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-op.cc?ref=f50d103183c551c7f9f9f20efaf2ebbf83d5e99f", "patch": "@@ -387,8 +387,8 @@ cfn_toupper_tolower::fold_range (irange &r, tree type, const irange &lh,\n   return true;\n }\n \n-// Implement range operator for CFN_BUILT_IN_FFS and CFN_BUILT_IN_POPCOUNT.\n-class cfn_popcount : public range_operator\n+// Implement range operator for CFN_BUILT_IN_FFS.\n+class cfn_ffs : public range_operator\n {\n public:\n   using range_operator::fold_range;\n@@ -397,14 +397,6 @@ class cfn_popcount : public range_operator\n   {\n     if (lh.undefined_p ())\n       return false;\n-    // Calculating the popcount of a singleton is trivial.\n-    if (lh.singleton_p ())\n-      {\n-\twide_int nz = lh.get_nonzero_bits ();\n-\twide_int pop = wi::shwi (wi::popcount (nz), TYPE_PRECISION (type));\n-\tr.set (type, pop, pop);\n-\treturn true;\n-      }\n     // __builtin_ffs* and __builtin_popcount* return [0, prec].\n     int prec = TYPE_PRECISION (lh.type ());\n     // If arg is non-zero, then ffs or popcount are non-zero.\n@@ -420,6 +412,26 @@ class cfn_popcount : public range_operator\n     r.set (build_int_cst (type, mini), build_int_cst (type, maxi));\n     return true;\n   }\n+} op_cfn_ffs;\n+\n+// Implement range operator for CFN_BUILT_IN_POPCOUNT.\n+class cfn_popcount : public cfn_ffs\n+{\n+public:\n+  using range_operator::fold_range;\n+  virtual bool fold_range (irange &r, tree type, const irange &lh,\n+\t\t\t   const irange &rh, relation_kind rel) const\n+  {\n+    // Calculating the popcount of a singleton is trivial.\n+    if (lh.singleton_p ())\n+      {\n+\twide_int nz = lh.get_nonzero_bits ();\n+\twide_int pop = wi::shwi (wi::popcount (nz), TYPE_PRECISION (type));\n+\tr.set (type, pop, pop);\n+\treturn true;\n+      }\n+    return cfn_ffs::fold_range (r, type, lh, rh, rel);\n+  }\n } op_cfn_popcount;\n \n // Implement range operator for CFN_BUILT_IN_CLZ\n@@ -734,6 +746,11 @@ gimple_range_op_handler::maybe_builtin_call ()\n       break;\n \n     CASE_CFN_FFS:\n+      m_op1 = gimple_call_arg (call, 0);\n+      m_int = &op_cfn_ffs;\n+      m_valid = true;\n+      break;\n+\n     CASE_CFN_POPCOUNT:\n       m_op1 = gimple_call_arg (call, 0);\n       m_int = &op_cfn_popcount;"}, {"sha": "11fb816ad710922b13bc1c76127be70d73432ad7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr107130.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50d103183c551c7f9f9f20efaf2ebbf83d5e99f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107130.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50d103183c551c7f9f9f20efaf2ebbf83d5e99f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107130.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107130.c?ref=f50d103183c551c7f9f9f20efaf2ebbf83d5e99f", "patch": "@@ -0,0 +1,19 @@\n+// { dg-do compile }\n+// { dg-options \"-Os -fno-tree-ccp -fno-tree-forwprop -fno-tree-fre -fdump-tree-vrp1\" }\n+\n+static inline int\n+foo (int i)\n+{\n+  return __builtin_ffsl (i);\n+}\n+\n+int\n+main (void)\n+{\n+  int x = foo (41);\n+  if (x != 1)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n+// { dg-final { scan-tree-dump-not \"builtin_abort\" \"vrp1\" } }"}]}