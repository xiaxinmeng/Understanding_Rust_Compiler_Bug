{"sha": "ce61cc7357cf7007b539ca864304fbe2f9d38e40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U2MWNjNzM1N2NmNzAwN2I1MzljYTg2NDMwNGZiZTJmOWQzOGU0MA==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1996-10-11T19:58:56Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1996-10-11T19:58:56Z"}, "message": "disable has_inlines\n\nFrom-SVN: r12951", "tree": {"sha": "8bcd2d65b561416437f7f620c2d5b1a095943546", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bcd2d65b561416437f7f620c2d5b1a095943546"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce61cc7357cf7007b539ca864304fbe2f9d38e40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce61cc7357cf7007b539ca864304fbe2f9d38e40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce61cc7357cf7007b539ca864304fbe2f9d38e40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce61cc7357cf7007b539ca864304fbe2f9d38e40/comments", "author": null, "committer": null, "parents": [{"sha": "4e88bbcd5da3afb76013087584781f7c7f1c90e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e88bbcd5da3afb76013087584781f7c7f1c90e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e88bbcd5da3afb76013087584781f7c7f1c90e9"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "26fa80f2bee03d1f0e25b383c1d02b419c385a3c", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce61cc7357cf7007b539ca864304fbe2f9d38e40/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce61cc7357cf7007b539ca864304fbe2f9d38e40/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=ce61cc7357cf7007b539ca864304fbe2f9d38e40", "patch": "@@ -6739,7 +6739,7 @@ gen_subprogram_die (decl, context_die)\n     {\n       current_function_has_inlines = 0;\n       decls_for_scope (outer_scope, subr_die, 0);\n-#ifdef MIPS_DEBUGGING_INFO\n+#if 0 && defined (MIPS_DEBUGGING_INFO)\n       if (current_function_has_inlines)\n \t{\n \t  add_AT_flag (subr_die, DW_AT_MIPS_has_inlines, 1);"}]}