{"sha": "8b29fd4e11c04cd6ef48f6874cb446e553e6cfca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIyOWZkNGUxMWMwNGNkNmVmNDhmNjg3NGNiNDQ2ZTU1M2U2Y2ZjYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-08-30T12:41:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-08-30T12:41:17Z"}, "message": "re PR tree-optimization/58277 (wrong code at -O3)\n\n\tPR tree-optimization/58277\n\t* tree-ssa-strlen.c (strlen_enter_block): If do_invalidate gave up\n\tafter seeing too many stmts with vdef in between dombb and current\n\tbb, invalidate everything.\n\n\t* gcc.c-torture/execute/pr58277-1.c: New test.\n\t* gcc.c-torture/execute/pr58277-2.c: New test.\n\nFrom-SVN: r202104", "tree": {"sha": "54be20e071ba593541b99d863786e7130f9104e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54be20e071ba593541b99d863786e7130f9104e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b29fd4e11c04cd6ef48f6874cb446e553e6cfca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b29fd4e11c04cd6ef48f6874cb446e553e6cfca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b29fd4e11c04cd6ef48f6874cb446e553e6cfca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b29fd4e11c04cd6ef48f6874cb446e553e6cfca/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "26d75703036bbdd170c157fd70a5ff1a29c27f22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d75703036bbdd170c157fd70a5ff1a29c27f22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26d75703036bbdd170c157fd70a5ff1a29c27f22"}], "stats": {"total": 235, "additions": 235, "deletions": 0}, "files": [{"sha": "b3e38447ac2c234780d97352f6b5c6230f2ce944", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b29fd4e11c04cd6ef48f6874cb446e553e6cfca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b29fd4e11c04cd6ef48f6874cb446e553e6cfca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b29fd4e11c04cd6ef48f6874cb446e553e6cfca", "patch": "@@ -1,3 +1,10 @@\n+2013-08-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/58277\n+\t* tree-ssa-strlen.c (strlen_enter_block): If do_invalidate gave up\n+\tafter seeing too many stmts with vdef in between dombb and current\n+\tbb, invalidate everything.\n+\n 2013-08-30  Richard Biener  <rguenther@suse.de>\n \n \t* fold-const.c (fold_single_bit_test): Fix overflow test."}, {"sha": "e7e71853bae3df87c944290e2805ddd7da59dd9d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b29fd4e11c04cd6ef48f6874cb446e553e6cfca/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b29fd4e11c04cd6ef48f6874cb446e553e6cfca/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8b29fd4e11c04cd6ef48f6874cb446e553e6cfca", "patch": "@@ -1,3 +1,9 @@\n+2013-08-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/58277\n+\t* gcc.c-torture/execute/pr58277-1.c: New test.\n+\t* gcc.c-torture/execute/pr58277-2.c: New test.\n+\n 2013-08-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.dg/guality/param-1.c: New test."}, {"sha": "811988f43711e60b6d568a3331951fb462420d1c", "filename": "gcc/testsuite/gcc.c-torture/execute/pr58277-1.c", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b29fd4e11c04cd6ef48f6874cb446e553e6cfca/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58277-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b29fd4e11c04cd6ef48f6874cb446e553e6cfca/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58277-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58277-1.c?ref=8b29fd4e11c04cd6ef48f6874cb446e553e6cfca", "patch": "@@ -0,0 +1,102 @@\n+/* PR tree-optimization/58277 */\n+\n+extern void abort (void);\n+static int a[2];\n+int b, c, d, *e, f, g, h, **i = &e, k, l = 1, n, o, p;\n+static int **volatile j = &e;\n+const int m;\n+char u;\n+\n+int\n+bar ()\n+{\n+  u = 0;\n+  return m;\n+}\n+\n+__attribute__((noinline, noclone)) void\n+baz ()\n+{\n+  asm (\"\");\n+}\n+\n+static int\n+foo ()\n+{\n+  int t1;\n+  g = bar ();\n+  if (l)\n+    ;\n+  else\n+    for (;; h++)\n+      {\n+\t*i = 0;\n+\to = *e = 0;\n+\tif (p)\n+\t  {\n+\t    f = 0;\n+\t    return 0;\n+\t  }\n+\tfor (;; k++)\n+\t  {\n+\t    int *t2 = 0;\n+\t    int *const *t3[] = {\n+\t      0, 0, 0, 0, 0, 0, 0, 0, 0, &t2, 0, 0, &t2, &t2, &t2,\n+\t      &t2, &t2, 0, 0, 0, 0, 0, 0, 0, &t2, 0, 0, 0, 0, 0, 0,\n+\t      0, 0, 0, 0, &t2, 0, 0, 0, 0, 0, 0, 0, &t2, &t2,\n+\t      &t2, &t2, &t2, 0, 0, 0, 0, 0, 0, 0, &t2, 0, 0, 0,\n+\t      &t2, 0, 0, 0, &t2, 0, &t2, 0, 0, &t2, 0, 0, 0, 0,\n+\t      0, &t2, 0, 0, 0, 0, &t2, &t2, 0, 0, 0, 0, &t2, 0,\n+\t      0, 0, 0, 0, 0, 0, &t2, 0, 0, 0, 0, 0, &t2, 0, 0, 0,\n+\t      &t2, &t2\n+\t    };\n+\t    int *const **t4[] = {&t3[0]};\n+\t    **i = 0;\n+\t    if (**j)\n+\t      break;\n+\t    u = 0;\n+\t  }\n+\t*i = *j;\n+\tt1 = 0;\n+\tfor (; t1 < 5; t1++)\n+\t  *i = *j;\n+      }\n+  *j = 0;\n+  return 1;\n+}\n+\n+int\n+main ()\n+{\n+  int t5;\n+  a[0] = 1;\n+  {\n+    int *t6[6] = {&d, &d};\n+    for (n = 1; n; n--)\n+      if (foo())\n+\t{\n+\t  int *t7[] = {0};\n+\t  d = 0;\n+\t  for (; u < 1; u++)\n+\t    *i = *j;\n+\t  *i = 0;\n+\t  *i = 0;\n+\t  int t8[5] = {0};\n+\t  *i = &t8[0];\n+\t  int *const *t9 = &t6[0];\n+\t  int *const **t10 = &t9;\n+\t  *t10 = &t7[0];\n+\t}\n+  }\n+  u = 0;\n+  for (; b; b++)\n+    for (t5 = 0; t5 < 10; t5++)\n+      c = a[a[a[a[a[a[a[a[c]]]]]]]];\n+\n+  baz ();\n+\n+  if (!a[a[a[a[a[a[a[a[a[a[a[a[a[a[a[u]]]]]]]]]]]]]]])\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "d919c2f3f801c3165ef24d0ca9aca340b5326f14", "filename": "gcc/testsuite/gcc.c-torture/execute/pr58277-2.c", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b29fd4e11c04cd6ef48f6874cb446e553e6cfca/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58277-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b29fd4e11c04cd6ef48f6874cb446e553e6cfca/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58277-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58277-2.c?ref=8b29fd4e11c04cd6ef48f6874cb446e553e6cfca", "patch": "@@ -0,0 +1,98 @@\n+/* PR tree-optimization/58277 */\n+\n+extern void abort (void);\n+static int a[1], b, c, e, i, j, k, m, q[] = { 1, 1 }, t;\n+int volatile d;\n+int **r;\n+static int ***volatile s = &r;\n+int f, g, o, x;\n+static int *volatile h = &f, *p;\n+char n;\n+\n+static void\n+fn1 ()\n+{\n+  b = a[a[a[a[a[a[a[a[b]]]]]]]];\n+  b = a[a[a[a[a[a[a[a[b]]]]]]]];\n+  b = a[a[b]];\n+  b = a[a[a[a[a[a[a[a[b]]]]]]]];\n+  b = a[a[a[a[a[a[a[a[b]]]]]]]];\n+}\n+\n+static int\n+fn2 ()\n+{\n+  n = 0;\n+  for (; g; t++)\n+    {\n+      for (;; m++)\n+\t{\n+\t  d;\n+\t  int *u;\n+\t  int **v[] = {\n+\t    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+\t    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+\t    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+\t    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+\t    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+\t    0, 0, 0, 0, 0, &u, 0, 0, 0, 0, &u, &u, &u, &u, &u, &u, &u, 0,\n+\t    &u, 0, &u, &u, &u, 0, &u, &u, 0, &u, &u, &u, &u, 0, &u, &u, &u,\n+\t    &u, &u, 0, &u, &u, 0, &u, 0, &u, &u, 0, &u, &u, &u, &u, &u, 0,\n+\t    &u, 0, 0, 0, &u, &u, &u, 0, 0, &u, &u, &u, 0, &u, 0, &u, &u\n+\t  };\n+\t  int ***w[] = { &v[0] };\n+\t  if (*p)\n+\t    break;\n+\t  return 0;\n+\t}\n+      *h = 0;\n+    }\n+  return 1;\n+}\n+\n+static void\n+fn3 ()\n+{\n+  int *y[] = { 0, 0, 0, 0, 0, 0, 0, 0 };\n+  for (; i; i++)\n+    x = 0;\n+  if (fn2 ())\n+    {\n+      int *z[6] = { };\n+      for (; n < 1; n++)\n+\t*h = 0;\n+      int t1[7];\n+      for (; c; c++)\n+\to = t1[0];\n+      for (; e; e--)\n+\t{\n+\t  int **t2 = &y[0];\n+\t  int ***t3 = &t2;\n+\t  *t3 = &z[0];\n+\t}\n+    }\n+  *s = 0;\n+  for (n = 0;; n = 0)\n+    {\n+      int t4 = 0;\n+      if (q[n])\n+\tbreak;\n+      *r = &t4;\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  for (; j; j--)\n+    a[0] = 0;\n+  fn3 ();\n+  for (; k; k++)\n+    fn1 ();\n+  fn1 ();\n+ \n+  if (n)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "5c21b92ec6819ff3bfb8a748789561be03115429", "filename": "gcc/tree-ssa-strlen.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b29fd4e11c04cd6ef48f6874cb446e553e6cfca/gcc%2Ftree-ssa-strlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b29fd4e11c04cd6ef48f6874cb446e553e6cfca/gcc%2Ftree-ssa-strlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.c?ref=8b29fd4e11c04cd6ef48f6874cb446e553e6cfca", "patch": "@@ -1952,6 +1952,28 @@ strlen_enter_block (struct dom_walk_data *walk_data ATTRIBUTE_UNUSED,\n \t\t  int count_vdef = 100;\n \t\t  do_invalidate (dombb, phi, visited, &count_vdef);\n \t\t  BITMAP_FREE (visited);\n+\t\t  if (count_vdef == 0)\n+\t\t    {\n+\t\t      /* If there were too many vdefs in between immediate\n+\t\t\t dominator and current bb, invalidate everything.\n+\t\t\t If stridx_to_strinfo has been unshared, we need\n+\t\t\t to free it, otherwise just set it to NULL.  */\n+\t\t      if (!strinfo_shared ())\n+\t\t\t{\n+\t\t\t  unsigned int i;\n+\t\t\t  strinfo si;\n+\n+\t\t\t  for (i = 1;\n+\t\t\t       vec_safe_iterate (stridx_to_strinfo, i, &si);\n+\t\t\t       ++i)\n+\t\t\t    {\n+\t\t\t      free_strinfo (si);\n+\t\t\t      (*stridx_to_strinfo)[i] = NULL;\n+\t\t\t    }\n+\t\t\t}\n+\t\t      else\n+\t\t\tstridx_to_strinfo = NULL;\n+\t\t    }\n \t\t  break;\n \t\t}\n \t    }"}]}