{"sha": "61226dc8a6eb0371d39f437813fbb3279d87f723", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEyMjZkYzhhNmViMDM3MWQzOWY0Mzc4MTNmYmIzMjc5ZDg3ZjcyMw==", "commit": {"author": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-03-02T10:22:30Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-03-02T10:22:30Z"}, "message": "Fix PR42640: Correctly initialize the value of the new induction variable.\n\n2010-03-02  Reza Yazdani  <reza.yazdani@amd.com>\n\n\tPR middle-end/42640\n\t* tree-loop-distribution.c (update_phis_for_loop_copy): Replaced\n\tthe assignment from the new induction variable to the assignment\n\tof the value from the original loop PHI function.\n\n\t* gcc.dg/tree-ssa/pr42640.c: New.\n\nFrom-SVN: r157161", "tree": {"sha": "b0076122adc5adf6b7a8bd73fa49ac375ec186db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0076122adc5adf6b7a8bd73fa49ac375ec186db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61226dc8a6eb0371d39f437813fbb3279d87f723", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61226dc8a6eb0371d39f437813fbb3279d87f723", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61226dc8a6eb0371d39f437813fbb3279d87f723", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61226dc8a6eb0371d39f437813fbb3279d87f723/comments", "author": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef74edbdd8c9a674de3b7a0a20784de3d6bbb4d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef74edbdd8c9a674de3b7a0a20784de3d6bbb4d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef74edbdd8c9a674de3b7a0a20784de3d6bbb4d8"}], "stats": {"total": 80, "additions": 75, "deletions": 5}, "files": [{"sha": "9e9755a87a1085f0de2b83fdfb1751a25329c186", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61226dc8a6eb0371d39f437813fbb3279d87f723/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61226dc8a6eb0371d39f437813fbb3279d87f723/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61226dc8a6eb0371d39f437813fbb3279d87f723", "patch": "@@ -1,3 +1,10 @@\n+2010-03-02  Reza Yazdani  <reza.yazdani@amd.com>\n+\n+\tPR middle-end/42640\n+\t* tree-loop-distribution.c (update_phis_for_loop_copy): Replaced\n+\tthe assignment from the new induction variable to the assignment\n+\tof the value from the original loop PHI function.\n+\n 2010-03-01  Janis Johnson  <janis187@us.ibm.com>\n \t    Daniel Jacobowitz  <dan@codesourcery.com>\n \n@@ -27,7 +34,7 @@\n 2010-03-01  Christian Bruel  <christian.bruel@st.com>\n \n \t* except.c (dw2_build_landing_pads): set LABEL_PRESERVE_P.\n-\t\n+\n 2010-03-01  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/linux64.h (ASM_SPEC): Use SPEC_32 and SPEC_64.\n@@ -47,7 +54,7 @@\n \t64-bit, SPARC and x86.\n \t(sol_gt_pch_get_address): New function.\n \n-2010-03-01  Marco Poletti  <poletti.marco@gmail.com> \n+2010-03-01  Marco Poletti  <poletti.marco@gmail.com>\n \n \t* toplev.h (inform_n, error_n): Declare.\n \t* diagnostic.c (inform_n, error_n): New function.\n@@ -133,7 +140,7 @@\n \t* doc/standards.texi: Likewise.\n \t* doc/extend.texi: Likewise.\n \t* doc/trouble.texi: Likewise.\n-\t* doc/cppopts.texi: Likewise. \n+\t* doc/cppopts.texi: Likewise.\n \t* doc/install.texi: Likewise.\n \t* c.opt (std=c90,std=gnu90): New options.\n \t* c-opts.c (c_common_handle_option): Handle them."}, {"sha": "63ceb9a4addd9efb65379c38d8aaf501c71f73c9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61226dc8a6eb0371d39f437813fbb3279d87f723/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61226dc8a6eb0371d39f437813fbb3279d87f723/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=61226dc8a6eb0371d39f437813fbb3279d87f723", "patch": "@@ -1,3 +1,8 @@\n+2010-03-02  Reza Yazdani  <reza.yazdani@amd.com>\n+\n+\tPR middle-end/42640\n+\t* gcc.dg/tree-ssa/pr42640.c: New.\n+\n 2010-03-01  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/43220"}, {"sha": "70807c091d6e75252f67f1579b46c02eea8afbc5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr42640.c", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61226dc8a6eb0371d39f437813fbb3279d87f723/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr42640.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61226dc8a6eb0371d39f437813fbb3279d87f723/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr42640.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr42640.c?ref=61226dc8a6eb0371d39f437813fbb3279d87f723", "patch": "@@ -0,0 +1,58 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ftree-loop-distribution\" } */\n+\n+/* Checks if loop distribution works correctly if the subscript used\n+   is assigned to a loop invariant value.  */\n+\n+extern void abort (void);\n+struct S { int a; int b; int c; };\n+\n+int get_rr_node_index (int i)\n+{\n+  return i;\n+}\n+\n+struct S nodes[8];\n+struct S *rr_node = nodes;\n+volatile int io_rat = 2;\n+void\n+doit (int i, int j)\n+{\n+  int s_node, p_node, inode, ipad, iloop;\n+\n+  for (ipad = 0; ipad < io_rat; ipad++)\n+    {\n+      p_node = get_rr_node_index (ipad+2);\n+      inode = get_rr_node_index (ipad);\n+\n+      for (iloop = 1; iloop <= 2; iloop++)\n+\t{\n+\t  rr_node[inode].a = i;\n+\t  rr_node[inode].b = j;\n+\t  rr_node[inode].c = ipad;\n+\t  inode = p_node;\n+\t}\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  int i;\n+\n+  doit (1, 2);\n+\n+  if (rr_node[0].a != rr_node[1].a\n+      || rr_node[2].a != rr_node[3].a\n+      || rr_node[1].a != 1\n+      || rr_node[0].b != rr_node[1].b\n+      || rr_node[2].b != rr_node[3].b\n+      || rr_node[1].b != 2\n+      || rr_node[0].c != 0\n+      || rr_node[1].c != 1\n+      || rr_node[2].c != 0\n+      || rr_node[3].c != 1)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "920ab8ce7e2d323842288429214add433caad008", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61226dc8a6eb0371d39f437813fbb3279d87f723/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61226dc8a6eb0371d39f437813fbb3279d87f723/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=61226dc8a6eb0371d39f437813fbb3279d87f723", "patch": "@@ -118,8 +118,8 @@ update_phis_for_loop_copy (struct loop *orig_loop, struct loop *new_loop)\n \n \t  if (!new_ssa_name)\n \t    /* This only happens if there are no definitions inside the\n-\t       loop.  Use the phi_result in this case.  */\n-\t    new_ssa_name = PHI_RESULT (phi_new);\n+\t       loop.  Use the the invariant in the new loop as is.  */\n+\t    new_ssa_name = def;\n \t}\n       else\n \t/* Could be an integer.  */"}]}