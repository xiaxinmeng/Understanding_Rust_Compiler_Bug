{"sha": "d8a60d2424392cce4e9ac6e4a9689e32c4ecaa5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhhNjBkMjQyNDM5MmNjZTRlOWFjNmU0YTk2ODllMzJjNGVjYWE1YQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2010-03-03T22:10:17Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2010-03-03T22:10:17Z"}, "message": "re PR middle-end/32693 ([H8] : ICE: in gen_rtx_SUBREG, at emit-rtl.c:693)\n\n\t* PR middle-end/32693\n\t* expmed.c (store_bit_field_1): Use gen_lowpart_SUBREG rather\n\tthan gen_rtx_SUBREG.\n\t(extract_bit_field_1): Likewise.\n\nFrom-SVN: r157207", "tree": {"sha": "5892657c76a46f77697f12e5568e7d72f1c35088", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5892657c76a46f77697f12e5568e7d72f1c35088"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8a60d2424392cce4e9ac6e4a9689e32c4ecaa5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a60d2424392cce4e9ac6e4a9689e32c4ecaa5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8a60d2424392cce4e9ac6e4a9689e32c4ecaa5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a60d2424392cce4e9ac6e4a9689e32c4ecaa5a/comments", "author": null, "committer": null, "parents": [{"sha": "8ec49cffc2ab188190544d494b8bb7907732d17e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ec49cffc2ab188190544d494b8bb7907732d17e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ec49cffc2ab188190544d494b8bb7907732d17e"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "d9bcac0aa47b21a7d268db28b586a6adf2fabb06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a60d2424392cce4e9ac6e4a9689e32c4ecaa5a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a60d2424392cce4e9ac6e4a9689e32c4ecaa5a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d8a60d2424392cce4e9ac6e4a9689e32c4ecaa5a", "patch": "@@ -1,3 +1,10 @@\n+2010-03-03  Jeff Law  <law@redhat.com>\n+\n+\t* PR middle-end/32693\n+\t* expmed.c (store_bit_field_1): Use gen_lowpart_SUBREG rather\n+\tthan gen_rtx_SUBREG.\n+\t(extract_bit_field_1): Likewise.\n+\n 2010-03-03  Janis Johnson  <janis187@us.ibm.com>\n \n \t* doc/sourcebuild.texi (Test directives): Document that arguments"}, {"sha": "aa2409942d9dd9d070d7dc2443d0bc1ac0806920", "filename": "gcc/expmed.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a60d2424392cce4e9ac6e4a9689e32c4ecaa5a/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a60d2424392cce4e9ac6e4a9689e32c4ecaa5a/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=d8a60d2424392cce4e9ac6e4a9689e32c4ecaa5a", "patch": "@@ -698,7 +698,7 @@ store_bit_field_1 (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n \t   and we will need the original value of op0 if insv fails.  */\n \txop0 = gen_rtx_SUBREG (op_mode, SUBREG_REG (xop0), SUBREG_BYTE (xop0));\n       if (REG_P (xop0) && GET_MODE (xop0) != op_mode)\n-\txop0 = gen_rtx_SUBREG (op_mode, xop0, 0);\n+\txop0 = gen_lowpart_SUBREG (op_mode, xop0);\n \n       /* If the destination is a paradoxical subreg such that we need a\n \t truncate to the inner mode, perform the insertion on a temporary and\n@@ -1542,7 +1542,7 @@ extract_bit_field_1 (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n       /* If op0 is a register, we need it in EXT_MODE to make it\n \t acceptable to the format of ext(z)v.  */\n       if (REG_P (xop0) && GET_MODE (xop0) != ext_mode)\n-\txop0 = gen_rtx_SUBREG (ext_mode, xop0, 0);\n+\txop0 = gen_lowpart_SUBREG (ext_mode, xop0);\n       if (MEM_P (xop0))\n \t/* Get ref to first byte containing part of the field.  */\n \txop0 = adjust_address (xop0, byte_mode, xoffset);"}]}