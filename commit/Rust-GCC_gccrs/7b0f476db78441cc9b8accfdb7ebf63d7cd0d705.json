{"sha": "7b0f476db78441cc9b8accfdb7ebf63d7cd0d705", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IwZjQ3NmRiNzg0NDFjYzliOGFjY2ZkYjdlYmY2M2Q3Y2QwZDcwNQ==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@linux-m68k.org", "date": "2010-03-09T21:57:36Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2010-03-09T21:57:36Z"}, "message": "re PR target/43294 (Error: junk at end of line, first unrecognized character is `@')\n\nPR target/43294\n* config/m68k/m68k.c (TARGET_DELEGITIMIZE_ADDRESS): Define.\n(m68k_delegitimize_address): New function.\n\nFrom-SVN: r157328", "tree": {"sha": "9d1207adfab26eb57a6f6544f330345eb2577bcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d1207adfab26eb57a6f6544f330345eb2577bcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b0f476db78441cc9b8accfdb7ebf63d7cd0d705", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b0f476db78441cc9b8accfdb7ebf63d7cd0d705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b0f476db78441cc9b8accfdb7ebf63d7cd0d705", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b0f476db78441cc9b8accfdb7ebf63d7cd0d705/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8325c9b804e4165308944bf947100625603a9486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8325c9b804e4165308944bf947100625603a9486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8325c9b804e4165308944bf947100625603a9486"}], "stats": {"total": 63, "additions": 62, "deletions": 1}, "files": [{"sha": "20e0b7290f48f260d6a7d2eac1915e3dcbeef336", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b0f476db78441cc9b8accfdb7ebf63d7cd0d705/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b0f476db78441cc9b8accfdb7ebf63d7cd0d705/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b0f476db78441cc9b8accfdb7ebf63d7cd0d705", "patch": "@@ -1,3 +1,9 @@\n+2010-03-09  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\tPR target/43294\n+\t* config/m68k/m68k.c (TARGET_DELEGITIMIZE_ADDRESS): Define.\n+\t(m68k_delegitimize_address): New function.\n+\n 2010-03-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/43299"}, {"sha": "faee39e6723ac177fdaff042f447d20cb38bd2f5", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 56, "deletions": 1, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b0f476db78441cc9b8accfdb7ebf63d7cd0d705/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b0f476db78441cc9b8accfdb7ebf63d7cd0d705/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=7b0f476db78441cc9b8accfdb7ebf63d7cd0d705", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines for insn-output.c for Motorola 68000 family.\n    Copyright (C) 1987, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-   2001, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   2001, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -154,6 +154,7 @@ static bool m68k_return_in_memory (const_tree, const_tree);\n #endif\n static void m68k_output_dwarf_dtprel (FILE *, int, rtx) ATTRIBUTE_UNUSED;\n static void m68k_trampoline_init (rtx, tree, rtx);\n+static rtx m68k_delegitimize_address (rtx);\n \f\n \n /* Specify the identification number of the library being built */\n@@ -271,6 +272,9 @@ const char *m68k_library_id_string = \"_current_shared_library_a5_offset_\";\n #undef TARGET_TRAMPOLINE_INIT\n #define TARGET_TRAMPOLINE_INIT m68k_trampoline_init\n \n+#undef TARGET_DELEGITIMIZE_ADDRESS\n+#define TARGET_DELEGITIMIZE_ADDRESS m68k_delegitimize_address\n+\n static const struct attribute_spec m68k_attribute_table[] =\n {\n   /* { name, min_len, max_len, decl_req, type_req, fn_type_req, handler } */\n@@ -4616,6 +4620,57 @@ m68k_output_dwarf_dtprel (FILE *file, int size, rtx x)\n   fputs (\"@TLSLDO+0x8000\", file);\n }\n \n+/* In the name of slightly smaller debug output, and to cater to\n+   general assembler lossage, recognize various UNSPEC sequences\n+   and turn them back into a direct symbol reference.  */\n+\n+static rtx\n+m68k_delegitimize_address (rtx x)\n+{\n+  rtx orig_x = delegitimize_mem_from_attrs (x);\n+  rtx y;\n+  rtx addend = NULL_RTX;\n+  rtx result;\n+\n+  x = orig_x;\n+  if (MEM_P (x))\n+    x = XEXP (x, 0);\n+\n+  if (GET_CODE (x) == PLUS\n+      && GET_CODE (XEXP (x, 1)) == CONST\n+      && REG_P (XEXP (x, 0))\n+      && REGNO (XEXP (x, 0)) == PIC_REG)\n+    {\n+      y = x = XEXP (XEXP (x, 1), 0);\n+\n+      /* Handle an addend.  */\n+      if ((GET_CODE (x) == PLUS || GET_CODE (x) == MINUS)\n+\t  && CONST_INT_P (XEXP (x, 1)))\n+\t{\n+\t  addend = XEXP (x, 1);\n+\t  x = XEXP (x, 0);\n+\t}\n+\n+      if (GET_CODE (x) == UNSPEC\n+\t  && (XINT (x, 1) == UNSPEC_RELOC16\n+\t      || XINT (x, 1) == UNSPEC_RELOC32))\n+\t{\n+\t  result = XVECEXP (x, 0, 0);\n+\t  if (addend)\n+\t    {\n+\t      if (GET_CODE (y) == PLUS)\n+\t\tresult = gen_rtx_PLUS (Pmode, result, addend);\n+\t      else\n+\t\tresult = gen_rtx_MINUS (Pmode, result, addend);\n+\t      result = gen_rtx_CONST (Pmode, result);\n+\t    }\n+\t  return result;\n+\t}\n+    }\n+\n+  return orig_x;\n+}\n+  \n \f\n /* A C compound statement to output to stdio stream STREAM the\n    assembler syntax for an instruction operand that is a memory"}]}