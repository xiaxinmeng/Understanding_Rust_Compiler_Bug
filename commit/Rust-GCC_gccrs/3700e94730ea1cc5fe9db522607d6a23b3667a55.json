{"sha": "3700e94730ea1cc5fe9db522607d6a23b3667a55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzcwMGU5NDczMGVhMWNjNWZlOWRiNTIyNjA3ZDZhMjNiMzY2N2E1NQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-03-28T05:20:48Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-03-28T05:20:48Z"}, "message": "re PR other/59545 (Signed integer overflow issues)\n\n\tPR other/59545\ncompiler: Fix bogus invalid static_cast to Unary_expression.\n\nFrom-SVN: r208888", "tree": {"sha": "0d913741459464155b0c7f225ee1a5bd2409b0d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d913741459464155b0c7f225ee1a5bd2409b0d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3700e94730ea1cc5fe9db522607d6a23b3667a55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3700e94730ea1cc5fe9db522607d6a23b3667a55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3700e94730ea1cc5fe9db522607d6a23b3667a55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3700e94730ea1cc5fe9db522607d6a23b3667a55/comments", "author": null, "committer": null, "parents": [{"sha": "c63de3b3f8b6602b3800be478e092ec126980b1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c63de3b3f8b6602b3800be478e092ec126980b1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c63de3b3f8b6602b3800be478e092ec126980b1a"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "f45b4a2270968370d3899de40008fa57f715bda8", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3700e94730ea1cc5fe9db522607d6a23b3667a55/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3700e94730ea1cc5fe9db522607d6a23b3667a55/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=3700e94730ea1cc5fe9db522607d6a23b3667a55", "patch": "@@ -4262,8 +4262,12 @@ Unary_expression::do_get_tree(Translate_context* context)\n \n           go_assert(!this->expr_->is_composite_literal()\n                     || this->expr_->is_immutable());\n-          Unary_expression* ue = static_cast<Unary_expression*>(this->expr_);\n-          go_assert(ue == NULL || ue->op() != OPERATOR_AND);\n+\t  if (this->expr_->classification() == EXPRESSION_UNARY)\n+\t    {\n+\t      Unary_expression* ue =\n+\t\tstatic_cast<Unary_expression*>(this->expr_);\n+\t      go_assert(ue->op() != OPERATOR_AND);\n+\t    }\n \t}\n \n       // Build a decl for a constant constructor."}]}