{"sha": "a339a01c961e4a059214830d83acab6033dfe757", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMzOWEwMWM5NjFlNGEwNTkyMTQ4MzBkODNhY2FiNjAzM2RmZTc1Nw==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2015-08-24T09:56:48Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2015-08-24T09:56:48Z"}, "message": "Remove the hack for AARCH64_EXTRA_TUNE_ALL.\n\n\n2015-08-24  Andrew Pinski  <apinski@cavium.com>\n\n        * config/aarch64/aarch64-tuning-flags.def: Remove all index to\n        AARCH64_EXTRA_TUNING_OPTION.\n        * config/aarch64/aarch64-protos.h (aarch64_extra_tuning_flags_index): New enum.\n        (aarch64_extra_tuning_flags): Base the shifted value on the index instead\n        of the argument to AARCH64_EXTRA_TUNING_OPTION.\n        * config/aarch64/aarch64.c: Remove the last argument to\n        AARCH64_EXTRA_TUNING_OPTION.\n\nFrom-SVN: r227117", "tree": {"sha": "38ce6c7802f27e5a9b4a83833e9cee59ab3b4bf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38ce6c7802f27e5a9b4a83833e9cee59ab3b4bf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a339a01c961e4a059214830d83acab6033dfe757", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a339a01c961e4a059214830d83acab6033dfe757", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a339a01c961e4a059214830d83acab6033dfe757", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a339a01c961e4a059214830d83acab6033dfe757/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4fe3a2a110f1e9086313c54a152a033ec0adcee4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fe3a2a110f1e9086313c54a152a033ec0adcee4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fe3a2a110f1e9086313c54a152a033ec0adcee4"}], "stats": {"total": 44, "additions": 28, "deletions": 16}, "files": [{"sha": "b1a7f9cfbe663bcf514dfc40df0a6c883510d95e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a339a01c961e4a059214830d83acab6033dfe757/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a339a01c961e4a059214830d83acab6033dfe757/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a339a01c961e4a059214830d83acab6033dfe757", "patch": "@@ -1,3 +1,13 @@\n+2015-08-24  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* config/aarch64/aarch64-tuning-flags.def: Remove all index to\n+\tAARCH64_EXTRA_TUNING_OPTION.\n+\t* config/aarch64/aarch64-protos.h (aarch64_extra_tuning_flags_index): New enum.\n+\t(aarch64_extra_tuning_flags): Base the shifted value on the index instead\n+\tof the argument to AARCH64_EXTRA_TUNING_OPTION.\n+\t* config/aarch64/aarch64.c: Remove the last argument to\n+\tAARCH64_EXTRA_TUNING_OPTION.\n+\n 2015-08-23  Nathan Sidwell  <nathan@acm.org>\n \n \t* config/nvptx/nvptx.c (walk_args_for_param): Promote arg reg"}, {"sha": "4b3cbedbd0a5fa186619e05c0c0b400c8257b1c0", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a339a01c961e4a059214830d83acab6033dfe757/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a339a01c961e4a059214830d83acab6033dfe757/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=a339a01c961e4a059214830d83acab6033dfe757", "patch": "@@ -222,21 +222,25 @@ enum aarch64_fusion_pairs\n };\n #undef AARCH64_FUSION_PAIR\n \n-#define AARCH64_EXTRA_TUNING_OPTION(x, name, index) \\\n-  AARCH64_EXTRA_TUNE_##name = (1 << index),\n+#define AARCH64_EXTRA_TUNING_OPTION(x, name) \\\n+  AARCH64_EXTRA_TUNE_##name##_index,\n+/* Supported tuning flags indexes.  */\n+enum aarch64_extra_tuning_flags_index\n+{\n+#include \"aarch64-tuning-flags.def\"\n+  AARCH64_EXTRA_TUNE_index_END\n+};\n+#undef AARCH64_EXTRA_TUNING_OPTION\n+\n+\n+#define AARCH64_EXTRA_TUNING_OPTION(x, name) \\\n+  AARCH64_EXTRA_TUNE_##name = (1u << AARCH64_EXTRA_TUNE_##name##_index),\n /* Supported tuning flags.  */\n enum aarch64_extra_tuning_flags\n {\n   AARCH64_EXTRA_TUNE_NONE = 0,\n #include \"aarch64-tuning-flags.def\"\n-\n-/* Hacky macro to build the \"all\" flag mask.\n-   Expands to 0 | AARCH64_TUNE_index0 | AARCH64_TUNE_index1 , etc.  */\n-#undef AARCH64_EXTRA_TUNING_OPTION\n-#define AARCH64_EXTRA_TUNING_OPTION(x, name, y) \\\n-  | AARCH64_EXTRA_TUNE_##name\n-  AARCH64_EXTRA_TUNE_ALL = 0\n-#include \"aarch64-tuning-flags.def\"\n+  AARCH64_EXTRA_TUNE_ALL = (1u << AARCH64_EXTRA_TUNE_index_END) - 1\n };\n #undef AARCH64_EXTRA_TUNING_OPTION\n "}, {"sha": "628386b5a1d1bfd012771c33dad7198a7298e47a", "filename": "gcc/config/aarch64/aarch64-tuning-flags.def", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a339a01c961e4a059214830d83acab6033dfe757/gcc%2Fconfig%2Faarch64%2Faarch64-tuning-flags.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a339a01c961e4a059214830d83acab6033dfe757/gcc%2Fconfig%2Faarch64%2Faarch64-tuning-flags.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-tuning-flags.def?ref=a339a01c961e4a059214830d83acab6033dfe757", "patch": "@@ -20,15 +20,13 @@\n /* Additional control over certain tuning parameters.  Before including\n    this file, define a macro:\n \n-     AARCH64_EXTRA_TUNING_OPTION (name, internal_name, index_bit)\n+     AARCH64_EXTRA_TUNING_OPTION (name, internal_name)\n \n    Where:\n \n      NAME is a string giving a friendly name for the tuning flag.\n      INTERNAL_NAME gives the internal name suitable for appending to\n-     AARCH64_TUNE_ to give an enum name.\n-     INDEX_BIT is the bit to set in the bitmask of supported tuning\n-     flags.  */\n+     AARCH64_TUNE_ to give an enum name. */\n \n-AARCH64_EXTRA_TUNING_OPTION (\"rename_fma_regs\", RENAME_FMA_REGS, 0)\n+AARCH64_EXTRA_TUNING_OPTION (\"rename_fma_regs\", RENAME_FMA_REGS)\n "}, {"sha": "87bbf6e7988e4ef796c09075ee584822483cbbce", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a339a01c961e4a059214830d83acab6033dfe757/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a339a01c961e4a059214830d83acab6033dfe757/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=a339a01c961e4a059214830d83acab6033dfe757", "patch": "@@ -182,7 +182,7 @@ static const struct aarch64_flag_desc aarch64_fusible_pairs[] =\n };\n #undef AARCH64_FUION_PAIR\n \n-#define AARCH64_EXTRA_TUNING_OPTION(name, internal_name, y) \\\n+#define AARCH64_EXTRA_TUNING_OPTION(name, internal_name) \\\n   { name, AARCH64_EXTRA_TUNE_##internal_name },\n static const struct aarch64_flag_desc aarch64_tuning_flags[] =\n {"}]}