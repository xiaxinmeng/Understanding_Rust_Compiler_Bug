{"sha": "1362aa31311322ad03b604cf8a6ad646f84232be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM2MmFhMzEzMTEzMjJhZDAzYjYwNGNmOGE2YWQ2NDZmODQyMzJiZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-09-06T21:15:45Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-09-06T21:15:45Z"}, "message": "re PR bootstrap/41241 (bootstrap comparison failure)\n\n\tPR bootstrap/41241\n\t* combine-stack-adj.c (try_apply_stack_adjustment): Handle stores.\n\t(combine_stack_adjustments_for_block): Allow insns between stack\n\tadjustments and stores with corresponding with pre-(dec|inc)rement\n\tor pre-modify.\n\nFrom-SVN: r151463", "tree": {"sha": "2b564bf489c100b7874e0af4630bfa7154bc5fa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b564bf489c100b7874e0af4630bfa7154bc5fa2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1362aa31311322ad03b604cf8a6ad646f84232be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1362aa31311322ad03b604cf8a6ad646f84232be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1362aa31311322ad03b604cf8a6ad646f84232be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1362aa31311322ad03b604cf8a6ad646f84232be/comments", "author": null, "committer": null, "parents": [{"sha": "90588a106ef2e2fe5d524ef138652f68bce5f72c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90588a106ef2e2fe5d524ef138652f68bce5f72c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90588a106ef2e2fe5d524ef138652f68bce5f72c"}], "stats": {"total": 58, "additions": 38, "deletions": 20}, "files": [{"sha": "9c08f4780cce31b26514523e8cb622d1c684296d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1362aa31311322ad03b604cf8a6ad646f84232be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1362aa31311322ad03b604cf8a6ad646f84232be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1362aa31311322ad03b604cf8a6ad646f84232be", "patch": "@@ -1,3 +1,11 @@\n+2009-09-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR bootstrap/41241\n+\t* combine-stack-adj.c (try_apply_stack_adjustment): Handle stores.\n+\t(combine_stack_adjustments_for_block): Allow insns between stack\n+\tadjustments and stores with corresponding with pre-(dec|inc)rement\n+\tor pre-modify.\n+\n 2009-09-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/41241"}, {"sha": "8849697bfcebeb2b8c34c6ccfe97adcb83ef0c21", "filename": "gcc/combine-stack-adj.c", "status": "modified", "additions": 30, "deletions": 20, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1362aa31311322ad03b604cf8a6ad646f84232be/gcc%2Fcombine-stack-adj.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1362aa31311322ad03b604cf8a6ad646f84232be/gcc%2Fcombine-stack-adj.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine-stack-adj.c?ref=1362aa31311322ad03b604cf8a6ad646f84232be", "patch": "@@ -206,7 +206,12 @@ try_apply_stack_adjustment (rtx insn, struct csa_reflist *reflist,\n   rtx set;\n \n   set = single_set_for_csa (insn);\n-  validate_change (insn, &XEXP (SET_SRC (set), 1), GEN_INT (new_adjust), 1);\n+  if (MEM_P (SET_DEST (set)))\n+    validate_change (insn, &SET_DEST (set),\n+\t\t     replace_equiv_address (SET_DEST (set), stack_pointer_rtx),\n+\t\t     1);\n+  else\n+    validate_change (insn, &XEXP (SET_SRC (set), 1), GEN_INT (new_adjust), 1);\n \n   for (ml = reflist; ml ; ml = ml->next)\n     {\n@@ -468,28 +473,33 @@ combine_stack_adjustments_for_block (basic_block bb)\n \t      continue;\n \t    }\n \n-\t  /* Find a predecrement of exactly the previous adjustment and\n-\t     turn it into a direct store.  Obviously we can't do this if\n-\t     there were any intervening uses of the stack pointer.  */\n-\t  if (reflist == NULL\n-\t      && MEM_P (dest)\n-\t      && ((GET_CODE (XEXP (dest, 0)) == PRE_DEC\n-\t\t   && (last_sp_adjust\n-\t\t       == (HOST_WIDE_INT) GET_MODE_SIZE (GET_MODE (dest))))\n-\t\t  || (GET_CODE (XEXP (dest, 0)) == PRE_MODIFY\n+\t  /* Find a store with pre-(dec|inc)rement or pre-modify of exactly\n+\t     the previous adjustment and turn it into a simple store.  This\n+\t     is equivalent to anticipating the stack adjustment so this must\n+\t     be an allocation.  */\n+\t  if (MEM_P (dest)\n+\t      && ((STACK_GROWS_DOWNWARD\n+\t\t   ? (GET_CODE (XEXP (dest, 0)) == PRE_DEC\n+\t\t      && last_sp_adjust\n+\t\t\t == (HOST_WIDE_INT) GET_MODE_SIZE (GET_MODE (dest)))\n+\t\t   : (GET_CODE (XEXP (dest, 0)) == PRE_INC\n+\t\t      && last_sp_adjust\n+\t\t         == -(HOST_WIDE_INT) GET_MODE_SIZE (GET_MODE (dest))))\n+\t\t  || ((STACK_GROWS_DOWNWARD\n+\t\t       ? last_sp_adjust >= 0 : last_sp_adjust <= 0)\n+\t\t      && GET_CODE (XEXP (dest, 0)) == PRE_MODIFY\n \t\t      && GET_CODE (XEXP (XEXP (dest, 0), 1)) == PLUS\n-\t\t      && XEXP (XEXP (XEXP (dest, 0), 1), 0) == stack_pointer_rtx\n-\t\t      && (GET_CODE (XEXP (XEXP (XEXP (dest, 0), 1), 1))\n-\t\t          == CONST_INT)\n-\t\t      && (INTVAL (XEXP (XEXP (XEXP (dest, 0), 1), 1))\n-\t\t          == -last_sp_adjust)))\n+\t\t      && XEXP (XEXP (XEXP (dest, 0), 1), 0)\n+\t\t\t == stack_pointer_rtx\n+\t\t      && GET_CODE (XEXP (XEXP (XEXP (dest, 0), 1), 1))\n+\t\t         == CONST_INT\n+\t\t      && INTVAL (XEXP (XEXP (XEXP (dest, 0), 1), 1))\n+\t\t         == -last_sp_adjust))\n \t      && XEXP (XEXP (dest, 0), 0) == stack_pointer_rtx\n-\t      && ! reg_mentioned_p (stack_pointer_rtx, src)\n+\t      && !reg_mentioned_p (stack_pointer_rtx, src)\n \t      && memory_address_p (GET_MODE (dest), stack_pointer_rtx)\n-\t      && validate_change (insn, &SET_DEST (set),\n-\t\t\t\t  replace_equiv_address (dest,\n-\t\t\t\t\t\t\t stack_pointer_rtx),\n-\t\t\t\t  0))\n+\t      && try_apply_stack_adjustment (insn, reflist, 0,\n+\t\t\t\t\t     -last_sp_adjust))\n \t    {\n \t      delete_insn (last_sp_set);\n \t      free_csa_reflist (reflist);"}]}