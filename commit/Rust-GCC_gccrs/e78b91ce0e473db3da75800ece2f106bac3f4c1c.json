{"sha": "e78b91ce0e473db3da75800ece2f106bac3f4c1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc4YjkxY2UwZTQ3M2RiM2RhNzU4MDBlY2UyZjEwNmJhYzNmNGMxYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-12-01T18:31:17Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-12-01T18:31:17Z"}, "message": "hashtable_policy.h (struct _LessThan): Remove.\n\n2007-12-01  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1_impl/hashtable_policy.h (struct _LessThan): Remove.\n\t(_Prime_rehash_policy::_M_bkt_for_elements, _Prime_rehash_policy::\n\t_M_need_rehash): Adjust.\n\nFrom-SVN: r130558", "tree": {"sha": "65ead973a7e7fe54ffbda3c62e671f2713833cdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65ead973a7e7fe54ffbda3c62e671f2713833cdb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e78b91ce0e473db3da75800ece2f106bac3f4c1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e78b91ce0e473db3da75800ece2f106bac3f4c1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e78b91ce0e473db3da75800ece2f106bac3f4c1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e78b91ce0e473db3da75800ece2f106bac3f4c1c/comments", "author": null, "committer": null, "parents": [{"sha": "d87135d45a245b35f2f143b7ca970e833af46e8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d87135d45a245b35f2f143b7ca970e833af46e8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d87135d45a245b35f2f143b7ca970e833af46e8d"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "2c5ba2ed94f70edcda0b88e4ffaaf01f06aeb8c7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e78b91ce0e473db3da75800ece2f106bac3f4c1c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e78b91ce0e473db3da75800ece2f106bac3f4c1c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e78b91ce0e473db3da75800ece2f106bac3f4c1c", "patch": "@@ -1,3 +1,9 @@\n+2007-12-01  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1_impl/hashtable_policy.h (struct _LessThan): Remove.\n+\t(_Prime_rehash_policy::_M_bkt_for_elements, _Prime_rehash_policy::\n+\t_M_need_rehash): Adjust.\n+\n 2007-12-01  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_tempbuf.h (__get_temporary_buffer): Fold"}, {"sha": "5c48504a79853850e0a8ce0d03e7bc8269b7d20b", "filename": "libstdc++-v3/include/tr1_impl/hashtable_policy.h", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e78b91ce0e473db3da75800ece2f106bac3f4c1c/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fhashtable_policy.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e78b91ce0e473db3da75800ece2f106bac3f4c1c/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fhashtable_policy.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fhashtable_policy.h?ref=e78b91ce0e473db3da75800ece2f106bac3f4c1c", "patch": "@@ -66,14 +66,6 @@ namespace __detail\n   // place to put TR1 .cc files yet.  There's no good reason for any of\n   // _Prime_rehash_policy's member functions to be inline, and there's\n   // certainly no good reason for _Primes<> to exist at all.  \n-  struct _LessThan\n-  {\n-    template<typename _Tp, typename _Up>\n-      bool\n-      operator()(_Tp __x, _Up __y)\n-      { return __x < __y; }\n-  };\n-\n   template<int __ulongsize = sizeof(unsigned long)>\n     struct _Primes\n     {\n@@ -545,7 +537,7 @@ namespace __detail\n \t\t\t\t\t + _Primes<>::__n_primes);\n     const float __min_bkts = __n / _M_max_load_factor;\n     const unsigned long* __p = std::lower_bound(_Primes<>::__primes, __last,\n-\t\t\t\t\t\t__min_bkts, _LessThan());\n+\t\t\t\t\t\t__min_bkts);\n     _M_next_resize = static_cast<std::size_t>(std::ceil(*__p\n \t\t\t\t\t\t\t* _M_max_load_factor));\n     return *__p;\n@@ -575,8 +567,7 @@ namespace __detail\n \t    const unsigned long* const __last = (_Primes<>::__primes\n \t\t\t\t\t\t + _Primes<>::__n_primes);\n \t    const unsigned long* __p = std::lower_bound(_Primes<>::__primes,\n-\t\t\t\t\t\t\t__last, __min_bkts,\n-\t\t\t\t\t\t\t_LessThan());\n+\t\t\t\t\t\t\t__last, __min_bkts);\n \t    _M_next_resize = \n \t      static_cast<std::size_t>(std::ceil(*__p * _M_max_load_factor));\n \t    return std::make_pair(true, *__p);"}]}