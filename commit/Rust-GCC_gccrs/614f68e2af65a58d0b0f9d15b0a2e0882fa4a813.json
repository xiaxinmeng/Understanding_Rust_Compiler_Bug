{"sha": "614f68e2af65a58d0b0f9d15b0a2e0882fa4a813", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE0ZjY4ZTJhZjY1YTU4ZDBiMGY5ZDE1YjBhMmUwODgyZmE0YTgxMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-01-11T00:16:27Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-01-11T00:16:27Z"}, "message": "(globalize_reg): New function.\n\n(init_reg_sets_1): Don't handle global regs here.\n\nFrom-SVN: r6371", "tree": {"sha": "c6bec2d2e5dd40733bd2d4ce9a34cdac3135fa5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6bec2d2e5dd40733bd2d4ce9a34cdac3135fa5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/614f68e2af65a58d0b0f9d15b0a2e0882fa4a813", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/614f68e2af65a58d0b0f9d15b0a2e0882fa4a813", "html_url": "https://github.com/Rust-GCC/gccrs/commit/614f68e2af65a58d0b0f9d15b0a2e0882fa4a813", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/614f68e2af65a58d0b0f9d15b0a2e0882fa4a813/comments", "author": null, "committer": null, "parents": [{"sha": "b0c38416058b481942e65a4e01fb0d10ca209606", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0c38416058b481942e65a4e01fb0d10ca209606", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0c38416058b481942e65a4e01fb0d10ca209606"}], "stats": {"total": 41, "additions": 30, "deletions": 11}, "files": [{"sha": "a922afdaeb37fb2e5bc1be02a658e90a47e236be", "filename": "gcc/regclass.c", "status": "modified", "additions": 30, "deletions": 11, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614f68e2af65a58d0b0f9d15b0a2e0882fa4a813/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614f68e2af65a58d0b0f9d15b0a2e0882fa4a813/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=614f68e2af65a58d0b0f9d15b0a2e0882fa4a813", "patch": "@@ -1,5 +1,5 @@\n /* Compute register class preferences for pseudo-registers.\n-   Copyright (C) 1987, 1988, 1991, 1992, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 91, 92, 93, 1994 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -361,16 +361,6 @@ init_reg_sets_1 ()\n   CONDITIONAL_REGISTER_USAGE;\n #endif\n \n-  for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n-    if (global_regs[i])\n-      {\n-\tif (call_used_regs[i] && ! fixed_regs[i])\n-\t  warning (\"call-clobbered register used for global register variable\");\n-\tfixed_regs[i] = 1;\n-\t/* Prevent saving/restoring of this reg.  */\n-\tcall_used_regs[i] = 1;\n-      }\n-\n   /* Initialize \"constant\" tables.  */\n \n   CLEAR_HARD_REG_SET (fixed_reg_set);\n@@ -434,6 +424,35 @@ fix_register (name, fixed, call_used)\n       warning (\"unknown register name: %s\", name);\n     }\n }\n+\n+/* Mark register number I as global.  */\n+\n+void\n+globalize_reg (i)\n+     int i;\n+{\n+  if (global_regs[i])\n+    {\n+      warning (\"register used for two global register variables\");\n+      return;\n+    }\n+\n+  if (call_used_regs[i] && ! fixed_regs[i])\n+    warning (\"call-clobbered register used for global register variable\");\n+\n+  global_regs[i] = 1;\n+\n+  /* If already fixed, nothing else to do.  */\n+  if (fixed_regs[i])\n+    return;\n+\n+  fixed_regs[i] = call_used_regs[i] = call_fixed_regs[i] = 1;\n+  n_non_fixed_regs--;\n+\n+  SET_HARD_REG_BIT (fixed_reg_set, i);\n+  SET_HARD_REG_BIT (call_used_reg_set, i);\n+  SET_HARD_REG_BIT (call_fixed_reg_set, i);\n+}\n \f\n /* Now the data and code for the `regclass' pass, which happens\n    just before local-alloc.  */"}]}