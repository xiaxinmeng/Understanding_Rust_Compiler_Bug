{"sha": "507014743436b1383e17dcc42ea64cbf3a865550", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA3MDE0NzQzNDM2YjEzODNlMTdkY2M0MmVhNjRjYmYzYTg2NTU1MA==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-05T21:32:44Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-05T21:32:44Z"}, "message": "stor-layout.c (pending_sizes): Change the type to VEC(tree,gc) *.\n\n\t* stor-layout.c (pending_sizes): Change the type to\n\tVEC(tree,gc) *.\n\t(get_pending_sizes, put_pending_size, put_pending_sizes):\n\tUpdate the uses of pending_sizes.\n\t* c-decl.c (store_parm_decls): Likewise.\n\t* c-tree.h (struct c_arg_info): Likewise.\n\t* tree.h: Update the prototype for get_pending_sizes and\n\tput_pending_sizes.\n\nFrom-SVN: r159085", "tree": {"sha": "541f3e3edc7e4a4873031ecdbba69ae40d69cf52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/541f3e3edc7e4a4873031ecdbba69ae40d69cf52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/507014743436b1383e17dcc42ea64cbf3a865550", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/507014743436b1383e17dcc42ea64cbf3a865550", "html_url": "https://github.com/Rust-GCC/gccrs/commit/507014743436b1383e17dcc42ea64cbf3a865550", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/507014743436b1383e17dcc42ea64cbf3a865550/comments", "author": null, "committer": null, "parents": [{"sha": "f0999267303330ddeac1c758917bcb3f5d77a1ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0999267303330ddeac1c758917bcb3f5d77a1ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0999267303330ddeac1c758917bcb3f5d77a1ce"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "774d7c85c9b6ba9f9aeb850a50255637ca23b518", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/507014743436b1383e17dcc42ea64cbf3a865550/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/507014743436b1383e17dcc42ea64cbf3a865550/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=507014743436b1383e17dcc42ea64cbf3a865550", "patch": "@@ -1,3 +1,14 @@\n+2010-05-05  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* stor-layout.c (pending_sizes): Change the type to\n+\tVEC(tree,gc) *.\n+\t(get_pending_sizes, put_pending_size, put_pending_sizes):\n+\tUpdate the uses of pending_sizes.\n+\t* c-decl.c (store_parm_decls): Likewise.\n+\t* c-tree.h (struct c_arg_info): Likewise.\n+\t* tree.h: Update the prototype for get_pending_sizes and\n+\tput_pending_sizes.\n+\n 2010-05-05  Jason Merrill  <jason@redhat.com>\n \n \tPR debug/43370"}, {"sha": "dd07b6582d847c96fd972bbcdfc335b0dcdef42f", "filename": "gcc/c-decl.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/507014743436b1383e17dcc42ea64cbf3a865550/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/507014743436b1383e17dcc42ea64cbf3a865550/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=507014743436b1383e17dcc42ea64cbf3a865550", "patch": "@@ -7990,9 +7990,12 @@ store_parm_decls (void)\n      thus won't naturally see the SAVE_EXPR containing the increment.  All\n      other pending sizes would be handled by gimplify_parameters.  */\n   {\n+    VEC(tree,gc) *pending_sizes = get_pending_sizes ();\n     tree t;\n-    for (t = nreverse (get_pending_sizes ()); t ; t = TREE_CHAIN (t))\n-      add_stmt (TREE_VALUE (t));\n+    int i;\n+\n+    for (i = 0; VEC_iterate (tree, pending_sizes, i, t); i++)\n+      add_stmt (t);\n   }\n \n   /* Even though we're inside a function body, we still don't want to"}, {"sha": "3090a6738426be7eda9b83ebcb7ab0ea72c06feb", "filename": "gcc/c-tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/507014743436b1383e17dcc42ea64cbf3a865550/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/507014743436b1383e17dcc42ea64cbf3a865550/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=507014743436b1383e17dcc42ea64cbf3a865550", "patch": "@@ -306,11 +306,11 @@ struct c_arg_info {\n   /* A list of non-parameter decls (notably enumeration constants)\n      defined with the parameters.  */\n   tree others;\n-  /* A list of VLA sizes from the parameters.  In a function\n+  /* A VEC of VLA sizes from the parameters.  In a function\n      definition, these are used to ensure that side-effects in sizes\n      of arrays converted to pointers (such as a parameter int i[n++])\n      take place; otherwise, they are ignored.  */\n-  tree pending_sizes;\n+  VEC(tree,gc) *pending_sizes;\n   /* True when these arguments had [*].  */\n   BOOL_BITFIELD had_vla_unspec : 1;\n };"}, {"sha": "20b03a8acace9bda81fdc9961a4738e212ac57e1", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/507014743436b1383e17dcc42ea64cbf3a865550/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/507014743436b1383e17dcc42ea64cbf3a865550/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=507014743436b1383e17dcc42ea64cbf3a865550", "patch": "@@ -69,7 +69,7 @@ extern void debug_rli (record_layout_info);\n \f\n /* SAVE_EXPRs for sizes of types and decls, waiting to be expanded.  */\n \n-static GTY(()) tree pending_sizes;\n+static GTY(()) VEC(tree,gc) *pending_sizes;\n \n /* Show that REFERENCE_TYPES are internal and should use address_mode.\n    Called only by front end.  */\n@@ -80,12 +80,12 @@ internal_reference_types (void)\n   reference_types_internal = 1;\n }\n \n-/* Get a list of all the objects put on the pending sizes list.  */\n+/* Get a VEC of all the objects put on the pending sizes list.  */\n \n-tree\n+VEC(tree,gc) *\n get_pending_sizes (void)\n {\n-  tree chain = pending_sizes;\n+  VEC(tree,gc) *chain = pending_sizes;\n \n   pending_sizes = 0;\n   return chain;\n@@ -101,14 +101,14 @@ put_pending_size (tree expr)\n   expr = skip_simple_arithmetic (expr);\n \n   if (TREE_CODE (expr) == SAVE_EXPR)\n-    pending_sizes = tree_cons (NULL_TREE, expr, pending_sizes);\n+    VEC_safe_push (tree, gc, pending_sizes, expr);\n }\n \n /* Put a chain of objects into the pending sizes list, which must be\n    empty.  */\n \n void\n-put_pending_sizes (tree chain)\n+put_pending_sizes (VEC(tree,gc) *chain)\n {\n   gcc_assert (!pending_sizes);\n   pending_sizes = chain;"}, {"sha": "4e5ef70da8bb4d448ada0cb97d00ecb9f1eb2d9c", "filename": "gcc/tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/507014743436b1383e17dcc42ea64cbf3a865550/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/507014743436b1383e17dcc42ea64cbf3a865550/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=507014743436b1383e17dcc42ea64cbf3a865550", "patch": "@@ -4424,9 +4424,9 @@ extern tree size_diffop_loc (location_t, tree, tree);\n extern tree round_up_loc (location_t, tree, int);\n #define round_down(T,N) round_down_loc (UNKNOWN_LOCATION, T, N)\n extern tree round_down_loc (location_t, tree, int);\n-extern tree get_pending_sizes (void);\n+extern VEC(tree,gc) *get_pending_sizes (void);\n extern void put_pending_size (tree);\n-extern void put_pending_sizes (tree);\n+extern void put_pending_sizes (VEC(tree,gc) *);\n extern void finalize_size_functions (void);\n \n /* Type for sizes of data-type.  */"}]}