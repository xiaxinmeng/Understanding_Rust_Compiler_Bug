{"sha": "eb07751679c5f2c0c823093a2c76e56613007651", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIwNzc1MTY3OWM1ZjJjMGM4MjMwOTNhMmM3NmU1NjYxMzAwNzY1MQ==", "commit": {"author": {"name": "James Norris", "email": "jnorris@codesourcery.com", "date": "2016-02-02T19:17:37Z"}, "committer": {"name": "James Norris", "email": "jnorris@gcc.gnu.org", "date": "2016-02-02T19:17:37Z"}, "message": "gimplify.c (omp_notice_variable): Add usage check.\n\n\tgcc/\n\t* gimplify.c (omp_notice_variable): Add usage check.\n\n\tgcc/testsuite/\n\t* c-c++-common/goacc/routine-5.c: Add tests.\n\nFrom-SVN: r233089", "tree": {"sha": "5c1b21dbfc6ecef6750b8b7f939ce5fdc942236e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c1b21dbfc6ecef6750b8b7f939ce5fdc942236e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb07751679c5f2c0c823093a2c76e56613007651", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb07751679c5f2c0c823093a2c76e56613007651", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb07751679c5f2c0c823093a2c76e56613007651", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb07751679c5f2c0c823093a2c76e56613007651/comments", "author": null, "committer": null, "parents": [{"sha": "578fb2259b0f644142f9a795a3fc433cba5f2da6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/578fb2259b0f644142f9a795a3fc433cba5f2da6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/578fb2259b0f644142f9a795a3fc433cba5f2da6"}], "stats": {"total": 128, "additions": 127, "deletions": 1}, "files": [{"sha": "2cb845618556a68c05abade583988dd9a3fc9973", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb07751679c5f2c0c823093a2c76e56613007651/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb07751679c5f2c0c823093a2c76e56613007651/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb07751679c5f2c0c823093a2c76e56613007651", "patch": "@@ -1,3 +1,7 @@\n+2016-02-02  James Norris  <jnorris@codesourcery.com\n+\n+\t* gimplify.c (omp_notice_variable): Add usage check.\n+\n 2016-02-02  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* config/nvptx/nvptx.c (nvptx_print_operand): Treat LEU, GEU, LTU, GTU"}, {"sha": "b0ee27e9997f117f501045a79a04aba6170d8329", "filename": "gcc/gimplify.c", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb07751679c5f2c0c823093a2c76e56613007651/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb07751679c5f2c0c823093a2c76e56613007651/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=eb07751679c5f2c0c823093a2c76e56613007651", "patch": "@@ -6087,9 +6087,9 @@ omp_notice_variable (struct gimplify_omp_ctx *ctx, tree decl, bool in_code)\n   if (ctx->region_type == ORT_NONE)\n     return lang_hooks.decls.omp_disregard_value_expr (decl, false);\n \n-  /* Threadprivate variables are predetermined.  */\n   if (is_global_var (decl))\n     {\n+      /* Threadprivate variables are predetermined.  */\n       if (DECL_THREAD_LOCAL_P (decl))\n \treturn omp_notice_threadprivate_variable (ctx, decl, NULL_TREE);\n \n@@ -6100,6 +6100,30 @@ omp_notice_variable (struct gimplify_omp_ctx *ctx, tree decl, bool in_code)\n \t  if (value && DECL_P (value) && DECL_THREAD_LOCAL_P (value))\n \t    return omp_notice_threadprivate_variable (ctx, decl, value);\n \t}\n+\n+      if (gimplify_omp_ctxp->outer_context == NULL\n+\t  && VAR_P (decl)\n+\t  && get_oacc_fn_attrib (current_function_decl))\n+\t{\n+\t  location_t loc = DECL_SOURCE_LOCATION (decl);\n+\n+\t  if (lookup_attribute (\"omp declare target link\",\n+\t\t\t\tDECL_ATTRIBUTES (decl)))\n+\t    {\n+\t      error_at (loc,\n+\t\t\t\"%qE with %<link%> clause used in %<routine%> function\",\n+\t\t\tDECL_NAME (decl));\n+\t      return false;\n+\t    }\n+\t  else if (!lookup_attribute (\"omp declare target\",\n+\t\t\t\t      DECL_ATTRIBUTES (decl)))\n+\t    {\n+\t      error_at (loc,\n+\t\t\t\"%qE requires a %<declare%> directive for use \"\n+\t\t\t\"in a %<routine%> function\", DECL_NAME (decl));\n+\t      return false;\n+\t    }\n+\t}\n     }\n \n   n = splay_tree_lookup (ctx->variables, (splay_tree_key)decl);"}, {"sha": "8277dff817e3ecfa50627092bbe4109bc0fe2403", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb07751679c5f2c0c823093a2c76e56613007651/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb07751679c5f2c0c823093a2c76e56613007651/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eb07751679c5f2c0c823093a2c76e56613007651", "patch": "@@ -1,3 +1,7 @@\n+2016-02-02  James Norris  <jnorris@codesourcery.com>\n+\n+\t* c-c++-common/goacc/routine-5.c: Add tests.\n+\n 2016-02-02  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* gcc.target/nvptx/unsigned-cmp.c: New test."}, {"sha": "c34838f9d03a1b73c866870b0095f770606be586", "filename": "gcc/testsuite/c-c++-common/goacc/routine-5.c", "status": "modified", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb07751679c5f2c0c823093a2c76e56613007651/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Froutine-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb07751679c5f2c0c823093a2c76e56613007651/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Froutine-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Froutine-5.c?ref=eb07751679c5f2c0c823093a2c76e56613007651", "patch": "@@ -45,3 +45,97 @@ using namespace g;\n #pragma acc routine (a) /* { dg-error \"does not refer to\" } */\n   \n #pragma acc routine (c) /* { dg-error \"does not refer to\" } */\n+\n+int vb1;\t\t/* { dg-error \"directive for use\" } */\n+extern int vb2;\t\t/* { dg-error \"directive for use\" } */\n+static int vb3;\t\t/* { dg-error \"directive for use\" } */\n+\n+#pragma acc routine\n+int\n+func1 (int a)\n+{\n+  vb1 = a + 1;\n+  vb2 = vb1 + 1;\n+  vb3 = vb2 + 1;\n+\n+  return vb3;\n+}\n+\n+#pragma acc routine\n+int\n+func2 (int a)\n+{\n+  extern int vb4;\t/* { dg-error \"directive for use\" } */\n+  static int vb5;\t/* { dg-error \"directive for use\" } */\n+\n+  vb4 = a + 1;\n+  vb5 = vb4 + 1;\n+\n+  return vb5;\n+}\n+\n+extern int vb6;\t\t\t/* { dg-error \"clause used in\" } */\n+#pragma acc declare link (vb6)\n+static int vb7;\t\t\t/* { dg-error \"clause used in\" } */\n+#pragma acc declare link (vb7)\n+\n+#pragma acc routine\n+int\n+func3 (int a)\n+{\n+  vb6 = a + 1;\n+  vb7 = vb6 + 1;\n+\n+  return vb7;\n+}\n+\n+int vb8;\n+#pragma acc declare create (vb8)\n+extern int vb9;\n+#pragma acc declare create (vb9)\n+static int vb10;\n+#pragma acc declare create (vb10)\n+\n+#pragma acc routine\n+int\n+func4 (int a)\n+{\n+  vb8 = a + 1;\n+  vb9 = vb8 + 1;\n+  vb10 = vb9 + 1;\n+\n+  return vb10;\n+}\n+\n+int vb11;\n+#pragma acc declare device_resident (vb11)\n+extern int vb12;\n+#pragma acc declare device_resident (vb12)\n+extern int vb13;\n+#pragma acc declare device_resident (vb13)\n+\n+#pragma acc routine\n+int\n+func5 (int a)\n+{\n+  vb11 = a + 1;\n+  vb12 = vb11 + 1;\n+  vb13 = vb12 + 1;\n+\n+  return vb13;\n+}\n+\n+#pragma acc routine\n+int\n+func6 (int a)\n+{\n+  extern int vb14;\n+#pragma acc declare create (vb14)\n+  static int vb15;\n+#pragma acc declare create (vb15)\n+\n+  vb14 = a + 1;\n+  vb15 = vb14 + 1;\n+\n+  return vb15;\n+}"}]}