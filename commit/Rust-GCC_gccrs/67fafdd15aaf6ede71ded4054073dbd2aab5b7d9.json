{"sha": "67fafdd15aaf6ede71ded4054073dbd2aab5b7d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdmYWZkZDE1YWFmNmVkZTcxZGVkNDA1NDA3M2RiZDJhYWI1YjdkOQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2011-12-09T22:05:26Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2011-12-09T22:05:26Z"}, "message": "tree.c (build_common_builtin_nodes): Do not use TM_PURE attribute unless language has support for TM.\n\n        PR/51291\n        * tree.c (build_common_builtin_nodes): Do not use TM_PURE\n        attribute unless language has support for TM.\n        * config/i386/i386.c (ix86_init_tm_builtins): Exit gracefully in\n        the absence of TM builtins.\n\nFrom-SVN: r182179", "tree": {"sha": "b7d95696ada2ba75617979d123bb2a15adb775e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7d95696ada2ba75617979d123bb2a15adb775e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67fafdd15aaf6ede71ded4054073dbd2aab5b7d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67fafdd15aaf6ede71ded4054073dbd2aab5b7d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67fafdd15aaf6ede71ded4054073dbd2aab5b7d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67fafdd15aaf6ede71ded4054073dbd2aab5b7d9/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f420307e03a391b8e4bcd57be36d8d6325c7638", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f420307e03a391b8e4bcd57be36d8d6325c7638", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f420307e03a391b8e4bcd57be36d8d6325c7638"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "cb28824febf9b8ff4a21930c5d500364db713495", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67fafdd15aaf6ede71ded4054073dbd2aab5b7d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67fafdd15aaf6ede71ded4054073dbd2aab5b7d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=67fafdd15aaf6ede71ded4054073dbd2aab5b7d9", "patch": "@@ -1,3 +1,11 @@\n+2011-12-09  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR/51291\n+\t* tree.c (build_common_builtin_nodes): Do not use TM_PURE\n+\tattribute unless language has support for TM.\n+\t* config/i386/i386.c (ix86_init_tm_builtins): Exit gracefully in\n+\tthe absence of TM builtins.\n+\n 2011-12-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimple-fold.c (gimple_fold_stmt_to_constant_1) <GIMPLE_UNARY_RHS>:"}, {"sha": "15c6c37aa29942a17c437a10910817039e3739f5", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67fafdd15aaf6ede71ded4054073dbd2aab5b7d9/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67fafdd15aaf6ede71ded4054073dbd2aab5b7d9/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=67fafdd15aaf6ede71ded4054073dbd2aab5b7d9", "patch": "@@ -27023,6 +27023,11 @@ ix86_init_tm_builtins (void)\n   if (!flag_tm)\n     return;\n \n+  /* If there are no builtins defined, we must be compiling in a\n+     language without trans-mem support.  */\n+  if (!builtin_decl_explicit_p (BUILT_IN_TM_LOAD_1))\n+    return;\n+\n   /* Use whatever attributes a normal TM load has.  */\n   decl = builtin_decl_explicit (BUILT_IN_TM_LOAD_1);\n   attrs_load = DECL_ATTRIBUTES (decl);"}, {"sha": "7e56fadbdbc2e46da465359f9a5e59d67efcc16d", "filename": "gcc/testsuite/gfortran.dg/trans-mem-skel.f90", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67fafdd15aaf6ede71ded4054073dbd2aab5b7d9/gcc%2Ftestsuite%2Fgfortran.dg%2Ftrans-mem-skel.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67fafdd15aaf6ede71ded4054073dbd2aab5b7d9/gcc%2Ftestsuite%2Fgfortran.dg%2Ftrans-mem-skel.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftrans-mem-skel.f90?ref=67fafdd15aaf6ede71ded4054073dbd2aab5b7d9", "patch": "@@ -0,0 +1,5 @@\n+! { dg-do compile }\n+! { dg-options \"-fgnu-tm\" }\n+program foo\n+      real x\n+end program foo"}, {"sha": "cbe5542118160163fb69deacf0037eca34b46221", "filename": "gcc/tree.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67fafdd15aaf6ede71ded4054073dbd2aab5b7d9/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67fafdd15aaf6ede71ded4054073dbd2aab5b7d9/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=67fafdd15aaf6ede71ded4054073dbd2aab5b7d9", "patch": "@@ -9437,6 +9437,7 @@ void\n build_common_builtin_nodes (void)\n {\n   tree tmp, ftype;\n+  int ecf_flags;\n \n   if (!builtin_decl_explicit_p (BUILT_IN_MEMCPY)\n       || !builtin_decl_explicit_p (BUILT_IN_MEMMOVE))\n@@ -9589,9 +9590,12 @@ build_common_builtin_nodes (void)\n      its value in the landing pad.  */\n   ftype = build_function_type_list (ptr_type_node,\n \t\t\t\t    integer_type_node, NULL_TREE);\n+  ecf_flags = ECF_PURE | ECF_NOTHROW | ECF_LEAF;\n+  /* Only use TM_PURE if we we have TM language support.  */\n+  if (builtin_decl_explicit_p (BUILT_IN_TM_LOAD_1))\n+    ecf_flags |= ECF_TM_PURE;\n   local_define_builtin (\"__builtin_eh_pointer\", ftype, BUILT_IN_EH_POINTER,\n-\t\t\t\"__builtin_eh_pointer\",\n-\t\t\tECF_PURE | ECF_NOTHROW | ECF_LEAF | ECF_TM_PURE);\n+\t\t\t\"__builtin_eh_pointer\", ecf_flags);\n \n   tmp = lang_hooks.types.type_for_mode (targetm.eh_return_filter_mode (), 0);\n   ftype = build_function_type_list (tmp, integer_type_node, NULL_TREE);"}]}