{"sha": "27d815b2367e440d9e1e234cfca2fe1ec45b85e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdkODE1YjIzNjdlNDQwZDllMWUyMzRjZmNhMmZlMWVjNDViODVlMQ==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2015-12-08T06:10:17Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2015-12-08T06:10:17Z"}, "message": "constraints.md (Wfr): Change to be a non-memory constraint.\n\n* config/rl78/constraints.md (Wfr): Change to be a non-memory\nconstraint.\n* config/rl78/rl78-protos.h (rl78_one_far_p): Declare.\n* config/rl78/rl78.c (rl78_one_far_p): Define.\n* config/rl78/rl78-virt (movqi_virt): Fix far memory\nalternatives.\n(movhi_virt): Likewise.\n(zero_extendqihi2_virt): Likewise.\n(extendqihi2_virt): Likewise.\n(add<mode>3_virt): Likewise.\n(sub<mode>3_virt): Likewise.\n(andqi3_virt): Likewise.\n(iorqi3_virt): Likewise.\n(xorqi3_virt): Likewise.\n* config/rl78/rl78-real.md (bf,br): Use long forms to avoid reloc\noverflow in large files.\n\nFrom-SVN: r231394", "tree": {"sha": "95e7d794d07d0146dddce64dbf3661348d177f72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95e7d794d07d0146dddce64dbf3661348d177f72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27d815b2367e440d9e1e234cfca2fe1ec45b85e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d815b2367e440d9e1e234cfca2fe1ec45b85e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27d815b2367e440d9e1e234cfca2fe1ec45b85e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27d815b2367e440d9e1e234cfca2fe1ec45b85e1/comments", "author": null, "committer": null, "parents": [{"sha": "196889fa048a0e79f3f7bc2a6c11493efd0ddcdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196889fa048a0e79f3f7bc2a6c11493efd0ddcdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/196889fa048a0e79f3f7bc2a6c11493efd0ddcdd"}], "stats": {"total": 105, "additions": 72, "deletions": 33}, "files": [{"sha": "858d2b8ffa0ab0d5fc80164a80c691a37c4d43cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d815b2367e440d9e1e234cfca2fe1ec45b85e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d815b2367e440d9e1e234cfca2fe1ec45b85e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27d815b2367e440d9e1e234cfca2fe1ec45b85e1", "patch": "@@ -1,3 +1,22 @@\n+2015-12-07  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/rl78/constraints.md (Wfr): Change to be a non-memory\n+\tconstraint.\n+\t* config/rl78/rl78-protos.h (rl78_one_far_p): Declare.\n+\t* config/rl78/rl78.c (rl78_one_far_p): Define.\n+\t* config/rl78/rl78-virt (movqi_virt): Fix far memory\n+\talternatives.\n+\t(movhi_virt): Likewise.\n+\t(zero_extendqihi2_virt): Likewise.\n+\t(extendqihi2_virt): Likewise.\n+\t(add<mode>3_virt): Likewise.\n+\t(sub<mode>3_virt): Likewise.\n+\t(andqi3_virt): Likewise.\n+\t(iorqi3_virt): Likewise.\n+\t(xorqi3_virt): Likewise.\n+\t* config/rl78/rl78-real.md (bf,br): Use long forms to avoid reloc\n+\toverflow in large files.\n+\n 2015-12-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR target/63668"}, {"sha": "93c5f32ad47238e52f6d7f6cae4a7b6741336313", "filename": "gcc/config/rl78/constraints.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d815b2367e440d9e1e234cfca2fe1ec45b85e1/gcc%2Fconfig%2Frl78%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d815b2367e440d9e1e234cfca2fe1ec45b85e1/gcc%2Fconfig%2Frl78%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Fconstraints.md?ref=27d815b2367e440d9e1e234cfca2fe1ec45b85e1", "patch": "@@ -364,7 +364,7 @@\n                || satisfies_constraint_Cs1 (op)\")\n   )\n \n-(define_memory_constraint \"Wfr\"\n+(define_constraint \"Wfr\"\n   \"ES/CS far pointer\"\n   (and (match_code \"mem\")\n        (match_test \"rl78_far_p (op)\"))"}, {"sha": "7a8b4c9e2381e54cc793ad3634a922a7e7813176", "filename": "gcc/config/rl78/rl78-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d815b2367e440d9e1e234cfca2fe1ec45b85e1/gcc%2Fconfig%2Frl78%2Frl78-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d815b2367e440d9e1e234cfca2fe1ec45b85e1/gcc%2Fconfig%2Frl78%2Frl78-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78-protos.h?ref=27d815b2367e440d9e1e234cfca2fe1ec45b85e1", "patch": "@@ -54,3 +54,5 @@ int\t\trl78_saddr_p (rtx x);\n int\t\trl78_sfr_p (rtx x);\n void\t\trl78_output_aligned_common (FILE *, tree, const char *,\n \t\t\t\t\t    int, int, int);\n+\n+int\t\trl78_one_far_p (rtx *operands, int num_operands);"}, {"sha": "8deb1bd20c2dbd2859f7fa1352f4c5a1cf34e79b", "filename": "gcc/config/rl78/rl78-real.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d815b2367e440d9e1e234cfca2fe1ec45b85e1/gcc%2Fconfig%2Frl78%2Frl78-real.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d815b2367e440d9e1e234cfca2fe1ec45b85e1/gcc%2Fconfig%2Frl78%2Frl78-real.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78-real.md?ref=27d815b2367e440d9e1e234cfca2fe1ec45b85e1", "patch": "@@ -589,7 +589,7 @@\n \t\t      (label_ref (match_operand 1 \"\" \"\"))\n \t\t      (pc)))]\n   \"\"\n-  \"bf\\tA.%B0, $%1\"\n+  \"bt\\tA.%B0, $1f\\n\\tbr !!%1\\n\\t1:\"\n   [(set (attr \"update_Z\") (const_string \"clobber\"))]\n )\n \n@@ -601,7 +601,7 @@\n \t\t      (label_ref (match_operand 1 \"\" \"\"))\n \t\t      (pc)))]\n   \"\"\n-  \"bt\\tA.%B0, $%1\"\n+  \"bf\\tA.%B0, $1f\\n\\tbr !!%1\\n\\t1:\"\n   [(set (attr \"update_Z\") (const_string \"clobber\"))]\n )\n "}, {"sha": "a26aa1da85de449e5c9ef0fa4693a311e76b6ad2", "filename": "gcc/config/rl78/rl78-virt.md", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d815b2367e440d9e1e234cfca2fe1ec45b85e1/gcc%2Fconfig%2Frl78%2Frl78-virt.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d815b2367e440d9e1e234cfca2fe1ec45b85e1/gcc%2Fconfig%2Frl78%2Frl78-virt.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78-virt.md?ref=27d815b2367e440d9e1e234cfca2fe1ec45b85e1", "patch": "@@ -42,8 +42,8 @@\n )\n \n (define_insn \"*movqi_virt\"\n-  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=vY,v,Wfr\")\n-\t(match_operand    1 \"general_operand\" \"vInt8J,YWfr,vInt8J\"))]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=vY,v,*Wfr,Y,*Wfr,*Wfr\")\n+\t(match_operand    1 \"general_operand\" \"vInt8JY,*Wfr,vInt8J,*Wfr,Y,*Wfr\"))]\n   \"rl78_virt_insns_ok ()\"\n   \"v.mov %0, %1\"\n   [(set_attr \"valloc\" \"op1\")]\n@@ -58,8 +58,8 @@\n )\n \n (define_insn \"*movhi_virt\"\n-  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=vS,  Y,   v,   Wfr\")\n-\t(match_operand:HI 1 \"general_operand\"      \"viYS, viS, Wfr, vi\"))]\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=vS,  Y,   v,   *Wfr\")\n+\t(match_operand:HI 1 \"general_operand\"      \"viYS, viS, *Wfr, vi\"))]\n   \"rl78_virt_insns_ok ()\"\n   \"v.movw %0, %1\"\n   [(set_attr \"valloc\" \"op1\")]\n@@ -68,17 +68,17 @@\n ;;---------- Conversions ------------------------\n \n (define_insn \"*zero_extendqihi2_virt\"\n-  [(set (match_operand:HI                 0 \"rl78_nonfar_nonimm_operand\" \"=vm\")\n-\t(zero_extend:HI (match_operand:QI 1 \"general_operand\" \"vim\")))]\n-  \"rl78_virt_insns_ok ()\"\n+  [(set (match_operand:HI                 0 \"rl78_nonfar_nonimm_operand\" \"=vY,*Wfr\")\n+\t(zero_extend:HI (match_operand:QI 1 \"general_operand\" \"vim,viY\")))]\n+  \"rl78_virt_insns_ok () && rl78_one_far_p (operands, 2)\"\n   \"v.zero_extend\\t%0, %1\"\n   [(set_attr \"valloc\" \"op1\")]\n   )\n \n (define_insn \"*extendqihi2_virt\"\n-  [(set (match_operand:HI                 0 \"rl78_nonfar_nonimm_operand\" \"=vm\")\n-\t(sign_extend:HI (match_operand:QI 1 \"general_operand\" \"vim\")))]\n-  \"rl78_virt_insns_ok ()\"\n+  [(set (match_operand:HI                 0 \"rl78_nonfar_nonimm_operand\" \"=vY,*Wfr\")\n+\t(sign_extend:HI (match_operand:QI 1 \"general_operand\" \"vim,viY\")))]\n+  \"rl78_virt_insns_ok () && rl78_one_far_p (operands, 2)\"\n   \"v.sign_extend\\t%0, %1\"\n   [(set_attr \"valloc\" \"op1\")]\n   )\n@@ -95,20 +95,20 @@\n )\n \n (define_insn \"*add<mode>3_virt\"\n-  [(set (match_operand:QHI           0 \"rl78_nonfar_nonimm_operand\" \"=vY,S\")\n-\t(plus:QHI (match_operand:QHI 1 \"rl78_nonfar_operand\" \"viY,0\")\n-\t\t  (match_operand:QHI 2 \"rl78_general_operand\" \"vim,i\")))\n+  [(set (match_operand:QHI           0 \"rl78_nonimmediate_operand\" \"=vY,  S, *Wfr,  vY\")\n+\t(plus:QHI (match_operand:QHI 1 \"rl78_general_operand\"      \"%viY, 0, 0viY, *Wfr\")\n+\t\t  (match_operand:QHI 2 \"rl78_general_operand\"       \"vim, i, viY,  viY\")))\n    ]\n-  \"rl78_virt_insns_ok ()\"\n+  \"rl78_virt_insns_ok () && rl78_one_far_p (operands, 3)\"\n   \"v.add\\t%0, %1, %2\"\n )\n \n (define_insn \"*sub<mode>3_virt\"\n-  [(set (match_operand:QHI            0 \"rl78_nonfar_nonimm_operand\" \"=vm,S\")\n-\t(minus:QHI (match_operand:QHI 1 \"rl78_nonfar_operand\" \"vim,0\")\n-\t\t   (match_operand:QHI 2 \"rl78_general_operand\" \"vim,i\")))\n+  [(set (match_operand:QHI            0 \"rl78_nonimmediate_operand\" \"=vY, S, *Wfr,  vY\")\n+\t(minus:QHI (match_operand:QHI 1 \"rl78_general_operand\"      \"viY, 0, 0viY, *Wfr\")\n+\t\t   (match_operand:QHI 2 \"rl78_general_operand\"      \"vim, i, viY,  viY\")))\n    ]\n-  \"rl78_virt_insns_ok ()\"\n+  \"rl78_virt_insns_ok () && rl78_one_far_p (operands, 3)\"\n   \"v.sub\\t%0, %1, %2\"\n )\n \n@@ -131,29 +131,29 @@\n )\n \n (define_insn \"*andqi3_virt\"\n-  [(set (match_operand:QI         0 \"rl78_nonimmediate_operand\" \"=vm\")\n-\t(and:QI (match_operand:QI 1 \"rl78_general_operand\" \"vim\")\n-\t\t(match_operand:QI 2 \"rl78_general_operand\" \"vim\")))\n+  [(set (match_operand:QI         0 \"rl78_nonimmediate_operand\" \"=vm,  *Wfr,  vY\")\n+\t(and:QI (match_operand:QI 1 \"rl78_general_operand\"      \"%vim, 0viY, *Wfr\")\n+\t\t(match_operand:QI 2 \"rl78_general_operand\"      \"vim,  viY,  viY\")))\n    ]\n-  \"rl78_virt_insns_ok ()\"\n+  \"rl78_virt_insns_ok () && rl78_one_far_p (operands, 3)\"\n   \"v.and\\t%0, %1, %2\"\n )\n \n (define_insn \"*iorqi3_virt\"\n-  [(set (match_operand:QI         0 \"rl78_nonimmediate_operand\" \"=vm\")\n-\t(ior:QI (match_operand:QI 1 \"rl78_general_operand\" \"vim\")\n-\t\t(match_operand:QI 2 \"rl78_general_operand\" \"vim\")))\n+  [(set (match_operand:QI         0 \"rl78_nonimmediate_operand\" \"=vm,  *Wfr,  vY\")\n+\t(ior:QI (match_operand:QI 1 \"rl78_general_operand\"      \"%vim, 0viY, *Wfr\")\n+\t\t(match_operand:QI 2 \"rl78_general_operand\"      \"vim,  viY,  viY\")))\n    ]\n-  \"rl78_virt_insns_ok ()\"\n+  \"rl78_virt_insns_ok () && rl78_one_far_p (operands, 3)\"\n   \"v.or\\t%0, %1, %2\"\n )\n \n (define_insn \"*xorqi3_virt\"\n-  [(set (match_operand:QI         0 \"rl78_nonfar_nonimm_operand\" \"=v,vm,m\")\n-\t(xor:QI (match_operand:QI 1 \"rl78_nonfar_operand\" \"%0,vm,vm\")\n-\t\t(match_operand    2 \"rl78_general_operand\" \"i,vm,vim\")))\n+  [(set (match_operand:QI         0 \"rl78_nonimmediate_operand\" \"=vm,  *Wfr,  vY\")\n+\t(xor:QI (match_operand:QI 1 \"rl78_general_operand\"      \"%vim, 0viY, *Wfr\")\n+\t\t(match_operand    2 \"rl78_general_operand\"      \"vim,  viY,  viY\")))\n    ]\n-  \"rl78_virt_insns_ok ()\"\n+  \"rl78_virt_insns_ok () && rl78_one_far_p (operands, 3)\"\n   \"v.xor\\t%0, %1, %2\"\n )\n "}, {"sha": "0735d277cb9c23687ab23ce9483fa4dc3b555b37", "filename": "gcc/config/rl78/rl78.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27d815b2367e440d9e1e234cfca2fe1ec45b85e1/gcc%2Fconfig%2Frl78%2Frl78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27d815b2367e440d9e1e234cfca2fe1ec45b85e1/gcc%2Fconfig%2Frl78%2Frl78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.c?ref=27d815b2367e440d9e1e234cfca2fe1ec45b85e1", "patch": "@@ -610,6 +610,24 @@ rl78_force_nonfar_3 (rtx *operands, rtx (*gen)(rtx,rtx,rtx))\n   return 1;\n }\n \n+int\n+rl78_one_far_p (rtx *operands, int n)\n+{\n+  rtx which = NULL;\n+  int i, c = 0;\n+\n+  for (i = 0; i < n; i ++)\n+    if (rl78_far_p (operands[i]))\n+      {\n+\tif (which == NULL)\n+\t  which = operands[i];\n+\telse if (rtx_equal_p (operands[i], which))\n+\t  continue;\n+\tc ++;\n+      }\n+  return c <= 1;\n+}\n+\n #undef  TARGET_CAN_ELIMINATE\n #define TARGET_CAN_ELIMINATE\t\trl78_can_eliminate\n "}]}