{"sha": "ba829325377adccbfbbda284643200114c106896", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE4MjkzMjUzNzdhZGNjYmZiYmRhMjg0NjQzMjAwMTE0YzEwNjg5Ng==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2013-04-01T20:30:41Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2013-04-01T20:30:41Z"}, "message": "re PR fortran/56660 (Fails to read NAMELIST with certain form array syntax)\n\n2013-04-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libfortran/56660\n\t* io/list_read.c (nml_read_obj): Do not reset the read error flag\n\tinside nml_read_obj. If the read error flag is found set just exit.\n\tFix some whitespace on comments.\n\t(nml_read_obj_data): Reset the read error flag before the first call\n\tto nml_read_object.\n\nFrom-SVN: r197321", "tree": {"sha": "fe9a975d0da5ed9d4f9782a4e741693a3c4c3520", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe9a975d0da5ed9d4f9782a4e741693a3c4c3520"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba829325377adccbfbbda284643200114c106896", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba829325377adccbfbbda284643200114c106896", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba829325377adccbfbbda284643200114c106896", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba829325377adccbfbbda284643200114c106896/comments", "author": null, "committer": null, "parents": [{"sha": "a71751232c9ef260162f2ff0ec75272633a39feb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a71751232c9ef260162f2ff0ec75272633a39feb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a71751232c9ef260162f2ff0ec75272633a39feb"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "fe9ae95a8558dda65a36c38d79fe28e1923b95f7", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba829325377adccbfbbda284643200114c106896/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba829325377adccbfbbda284643200114c106896/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=ba829325377adccbfbbda284643200114c106896", "patch": "@@ -1,3 +1,12 @@\n+2013-04-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/56660\n+\t* io/list_read.c (nml_read_obj): Do not reset the read error flag\n+\tinside nml_read_obj. If the read error flag is found set just exit.\n+\tFix some whitespace on comments.\n+\t(nml_read_obj_data): Reset the read error flag before the first call\n+\tto nml_read_object.\n+\n 2013-03-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/56786"}, {"sha": "0693e50f4aaefb92f45cf1a909207a1374ae791a", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba829325377adccbfbbda284643200114c106896/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba829325377adccbfbbda284643200114c106896/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=ba829325377adccbfbbda284643200114c106896", "patch": "@@ -2490,9 +2490,9 @@ nml_read_obj (st_parameter_dt *dtp, namelist_info * nl, index_type offset,\n   size_t obj_name_len;\n   void * pdata;\n \n-  /* This object not touched in name parsing.  */\n-\n-  if (!nl->touched)\n+  /* If we have encountered a previous read error or this object has not been\n+     touched in name parsing, just return.  */\n+  if (dtp->u.p.nml_read_error || !nl->touched)\n     return true;\n \n   dtp->u.p.repeat_count = 0;\n@@ -2532,10 +2532,8 @@ nml_read_obj (st_parameter_dt *dtp, namelist_info * nl, index_type offset,\n \t\t\t\t - GFC_DESCRIPTOR_LBOUND(nl,dim))\n \t\t\t* GFC_DESCRIPTOR_STRIDE(nl,dim) * nl->size);\n \n-      /* Reset the error flag and try to read next value, if\n-\t dtp->u.p.repeat_count=0  */\n+      /* If we are finished with the repeat count, try to read next value.  */\n \n-      dtp->u.p.nml_read_error = 0;\n       nml_carry = 0;\n       if (--dtp->u.p.repeat_count <= 0)\n \t{\n@@ -2564,8 +2562,8 @@ nml_read_obj (st_parameter_dt *dtp, namelist_info * nl, index_type offset,\n \t    break;\n \n \t  case BT_REAL:\n-\t    /* Need to copy data back from the real location to the temp in order\n-\t       to handle nml reads into arrays.  */\n+\t    /* Need to copy data back from the real location to the temp in\n+\t       order to handle nml reads into arrays.  */\n \t    read_real (dtp, pdata, len);\n \t    memcpy (dtp->u.p.value, pdata, dlen);\n \t    break;\n@@ -3022,6 +3020,7 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n \tnl = first_nl;\n     }\n \n+  dtp->u.p.nml_read_error = 0;\n   if (!nml_read_obj (dtp, nl, 0, pprev_nl, nml_err_msg, nml_err_msg_size,\n \t\t    clow, chigh))\n     goto nml_err_ret;"}]}