{"sha": "70480968b46b95f2f1a6b290b271290c210f2cd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA0ODA5NjhiNDZiOTVmMmYxYTZiMjkwYjI3MTI5MGMyMTBmMmNkNA==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2014-10-20T07:53:37Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2014-10-20T07:53:37Z"}, "message": "PR 63589 Fix splitting of PATH in find_addr2line.\n\n2014-10-20  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR libfortran/63589\n\t* configure.ac: Check for strtok_r.\n\t* runtime/main.c (gfstrtok_r): Fallback implementation of\n\tstrtok_r.\n\t(find_addr2line): Use strtok_r to split PATH.\n\t* config.h.in: Regenerated.\n\t* configure: Regenerated.\n\nFrom-SVN: r216449", "tree": {"sha": "ca6deadcd02431554c183b307d7d10cc4ef3a6af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca6deadcd02431554c183b307d7d10cc4ef3a6af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70480968b46b95f2f1a6b290b271290c210f2cd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70480968b46b95f2f1a6b290b271290c210f2cd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70480968b46b95f2f1a6b290b271290c210f2cd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70480968b46b95f2f1a6b290b271290c210f2cd4/comments", "author": null, "committer": null, "parents": [{"sha": "e0d37441927c02aa63e61ad5f4b37067640fe4b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0d37441927c02aa63e61ad5f4b37067640fe4b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0d37441927c02aa63e61ad5f4b37067640fe4b2"}], "stats": {"total": 70, "additions": 51, "deletions": 19}, "files": [{"sha": "e22600214bfa43d2ba02a870ed3f12be79fad404", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70480968b46b95f2f1a6b290b271290c210f2cd4/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70480968b46b95f2f1a6b290b271290c210f2cd4/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=70480968b46b95f2f1a6b290b271290c210f2cd4", "patch": "@@ -1,3 +1,13 @@\n+2014-10-20  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/63589\n+\t* configure.ac: Check for strtok_r.\n+\t* runtime/main.c (gfstrtok_r): Fallback implementation of\n+\tstrtok_r.\n+\t(find_addr2line): Use strtok_r to split PATH.\n+\t* config.h.in: Regenerated.\n+\t* configure: Regenerated.\n+\n 2014-10-09  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* ieee/ieee_helper.c (ieee_is_finite_*, ieee_is_nan_*,"}, {"sha": "b69e5b72d2e7ee49e26e0c6f8158211375ae5649", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70480968b46b95f2f1a6b290b271290c210f2cd4/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70480968b46b95f2f1a6b290b271290c210f2cd4/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=70480968b46b95f2f1a6b290b271290c210f2cd4", "patch": "@@ -744,6 +744,9 @@\n /* Define to 1 if you have the `strtof' function. */\n #undef HAVE_STRTOF\n \n+/* Define to 1 if you have the `strtok_r' function. */\n+#undef HAVE_STRTOK_R\n+\n /* Define to 1 if you have the `strtold' function. */\n #undef HAVE_STRTOLD\n "}, {"sha": "df1782929ac27b5b3f3c014b71649bbb416f262a", "filename": "libgfortran/configure", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70480968b46b95f2f1a6b290b271290c210f2cd4/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70480968b46b95f2f1a6b290b271290c210f2cd4/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=70480968b46b95f2f1a6b290b271290c210f2cd4", "patch": "@@ -2604,6 +2604,7 @@ as_fn_append ac_func_list \" __secure_getenv\"\n as_fn_append ac_func_list \" mkostemp\"\n as_fn_append ac_func_list \" strnlen\"\n as_fn_append ac_func_list \" strndup\"\n+as_fn_append ac_func_list \" strtok_r\"\n as_fn_append ac_header_list \" math.h\"\n # Check that the precious variables saved in the cache have kept the same\n # value.\n@@ -12349,7 +12350,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12352 \"configure\"\n+#line 12353 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12455,7 +12456,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12458 \"configure\"\n+#line 12459 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -16485,6 +16486,9 @@ $as_echo \"#define HAVE_STRNLEN 1\" >>confdefs.h\n $as_echo \"#define HAVE_STRNDUP 1\" >>confdefs.h\n \n \n+$as_echo \"#define HAVE_STRTOK_R 1\" >>confdefs.h\n+\n+\n    # At some point, we should differentiate between architectures\n    # like x86, which have long double versions, and alpha/powerpc/etc.,\n    # which don't. For the time being, punt.\n@@ -16618,6 +16622,8 @@ done\n \n \n \n+\n+\n \n \n "}, {"sha": "b3150f49c99d7f683a051080ddc0b06962b9e97c", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70480968b46b95f2f1a6b290b271290c210f2cd4/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70480968b46b95f2f1a6b290b271290c210f2cd4/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=70480968b46b95f2f1a6b290b271290c210f2cd4", "patch": "@@ -275,6 +275,7 @@ if test \"x${with_newlib}\" = \"xyes\"; then\n    AC_DEFINE(HAVE_GMTIME_R, 1, [Define if you have gmtime_r.])\n    AC_DEFINE(HAVE_STRNLEN, 1, [Define if you have strnlen.])\n    AC_DEFINE(HAVE_STRNDUP, 1, [Define if you have strndup.])\n+   AC_DEFINE(HAVE_STRTOK_R, 1, [Define if you have strtok_r.])\n \n    # At some point, we should differentiate between architectures\n    # like x86, which have long double versions, and alpha/powerpc/etc.,\n@@ -289,7 +290,7 @@ else\n    strcasestr getrlimit gettimeofday stat fstat lstat getpwuid vsnprintf dup \\\n    getcwd localtime_r gmtime_r getpwuid_r ttyname_r clock_gettime \\\n    readlink getgid getpid getppid getuid geteuid umask getegid \\\n-   secure_getenv __secure_getenv mkostemp strnlen strndup)\n+   secure_getenv __secure_getenv mkostemp strnlen strndup strtok_r)\n fi\n \n # Check strerror_r, cannot be above as versions with two and three arguments exist"}, {"sha": "448dfee65d0bafd381551c125ac84341e28572fd", "filename": "libgfortran/runtime/main.c", "status": "modified", "additions": 28, "deletions": 16, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70480968b46b95f2f1a6b290b271290c210f2cd4/libgfortran%2Fruntime%2Fmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70480968b46b95f2f1a6b290b271290c210f2cd4/libgfortran%2Fruntime%2Fmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fmain.c?ref=70480968b46b95f2f1a6b290b271290c210f2cd4", "patch": "@@ -181,6 +181,16 @@ full_exe_path (void)\n }\n \n \n+#ifndef HAVE_STRTOK_R\n+static char*\n+gfstrtok_r (char *str, const char *delim, \n+\t    char **saveptr __attribute__ ((unused)))\n+{\n+  return strtok (str, delim);\n+}\n+#define strtok_r gfstrtok_r\n+#endif\n+\n char *addr2line_path;\n \n /* Find addr2line and store the path.  */\n@@ -189,30 +199,32 @@ void\n find_addr2line (void)\n {\n #ifdef HAVE_ACCESS\n-#define A2L_LEN 10\n+#define A2L_LEN 11\n   char *path = secure_getenv (\"PATH\");\n   if (!path)\n     return;\n+  char *tp = strdup (path);\n+  if (!tp)\n+    return;\n   size_t n = strlen (path);\n-  char ap[n + 1 + A2L_LEN];\n-  size_t ai = 0;\n-  for (size_t i = 0; i < n; i++)\n+  char *ap = xmalloc (n + A2L_LEN);\n+  char *saveptr;\n+  for (char *str = tp;; str = NULL)\n     {\n-      if (path[i] != ':')\n-\tap[ai++] = path[i];\n-      else\n+      char *token = strtok_r (str, \":\", &saveptr);\n+      if (!token)\n+\tbreak;\n+      size_t toklen = strlen (token);\n+      memcpy (ap, token, toklen);\n+      memcpy (ap + toklen, \"/addr2line\", A2L_LEN);\n+      if (access (ap, R_OK|X_OK) == 0)\n \t{\n-\t  ap[ai++] = '/';\n-\t  memcpy (ap + ai, \"addr2line\", A2L_LEN);\n-\t  if (access (ap, R_OK|X_OK) == 0)\n-\t    {\n-\t      addr2line_path = strdup (ap);\n-\t      return;\n-\t    }\n-\t  else\n-\t    ai = 0;\n+\t  addr2line_path = strdup (ap);\n+\t  break;\n \t}\n     }\n+  free (tp);\n+  free (ap);\n #endif\n }\n "}]}