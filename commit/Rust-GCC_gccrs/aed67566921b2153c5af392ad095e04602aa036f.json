{"sha": "aed67566921b2153c5af392ad095e04602aa036f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVkNjc1NjY5MjFiMjE1M2M1YWYzOTJhZDA5NWUwNDYwMmFhMDM2Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-09-22T16:31:09Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-09-22T16:31:09Z"}, "message": "decl.c (poplevel): Don't warn about unused vars in template scope.\n\n\t* decl.c (poplevel): Don't warn about unused vars in template scope.\n\t* error.c (dump_decl): Handle variable templates.\n\nFrom-SVN: r215472", "tree": {"sha": "511d01f3ac904501b9f571501f3d79ac5b19265c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/511d01f3ac904501b9f571501f3d79ac5b19265c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aed67566921b2153c5af392ad095e04602aa036f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aed67566921b2153c5af392ad095e04602aa036f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aed67566921b2153c5af392ad095e04602aa036f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aed67566921b2153c5af392ad095e04602aa036f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f421c516aa8df5cde8f0310d090562b01967583c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f421c516aa8df5cde8f0310d090562b01967583c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f421c516aa8df5cde8f0310d090562b01967583c"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "3dc8c7c3a3ba009ea9f4bd83666d28887fdf141a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed67566921b2153c5af392ad095e04602aa036f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed67566921b2153c5af392ad095e04602aa036f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=aed67566921b2153c5af392ad095e04602aa036f", "patch": "@@ -1,3 +1,8 @@\n+2014-09-22  Jason Merrill  <jason@redhat.com>\n+\n+\t* decl.c (poplevel): Don't warn about unused vars in template scope.\n+\t* error.c (dump_decl): Handle variable templates.\n+\n 2014-09-20  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/62017"}, {"sha": "12a9f43de2f809b3aa759dd2b036d814eaa66c27", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed67566921b2153c5af392ad095e04602aa036f/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed67566921b2153c5af392ad095e04602aa036f/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=aed67566921b2153c5af392ad095e04602aa036f", "patch": "@@ -624,6 +624,7 @@ poplevel (int keep, int reverse, int functionbody)\n \n   /* Before we remove the declarations first check for unused variables.  */\n   if ((warn_unused_variable || warn_unused_but_set_variable)\n+      && current_binding_level->kind != sk_template_parms\n       && !processing_template_decl)\n     for (tree d = getdecls (); d; d = TREE_CHAIN (d))\n       {"}, {"sha": "a03bfe12c163d859c8bee01fe451b2aabb311072", "filename": "gcc/cp/error.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed67566921b2153c5af392ad095e04602aa036f/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed67566921b2153c5af392ad095e04602aa036f/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=aed67566921b2153c5af392ad095e04602aa036f", "patch": "@@ -1044,6 +1044,18 @@ dump_decl (cxx_pretty_printer *pp, tree t, int flags)\n     case FIELD_DECL:\n     case PARM_DECL:\n       dump_simple_decl (pp, t, TREE_TYPE (t), flags);\n+\n+      /* Handle variable template specializations.  */\n+      if (TREE_CODE (t) == VAR_DECL\n+\t  && DECL_LANG_SPECIFIC (t)\n+\t  && DECL_TEMPLATE_INFO (t)\n+\t  && PRIMARY_TEMPLATE_P (DECL_TI_TEMPLATE (t)))\n+\t{\n+\t  pp_cxx_begin_template_argument_list (pp);\n+\t  tree args = INNERMOST_TEMPLATE_ARGS (DECL_TI_ARGS (t));\n+\t  dump_template_argument_list (pp, args, flags);\n+\t  pp_cxx_end_template_argument_list (pp);\n+\t}\n       break;\n \n     case RESULT_DECL:"}, {"sha": "49ea588cc5da3b7d893bb90826bff8300d6ef36c", "filename": "gcc/testsuite/g++.dg/cpp1y/var-templ12.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed67566921b2153c5af392ad095e04602aa036f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed67566921b2153c5af392ad095e04602aa036f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ12.C?ref=aed67566921b2153c5af392ad095e04602aa036f", "patch": "@@ -0,0 +1,10 @@\n+// { dg-do compile { target c++14 } }\n+// { dg-options \"-Wall\" }\n+\n+template <class T> T x;\n+template <> int x<int> = 0;\n+\n+int main()\n+{\n+  return x<int>;\n+}"}, {"sha": "e398d22fddc3395b89bdcebdc654146e97ab0a3e", "filename": "gcc/testsuite/g++.dg/cpp1y/var-templ13.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed67566921b2153c5af392ad095e04602aa036f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed67566921b2153c5af392ad095e04602aa036f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ13.C?ref=aed67566921b2153c5af392ad095e04602aa036f", "patch": "@@ -0,0 +1,5 @@\n+// { dg-do compile { target c++14 } }\n+\n+template <class T> T x;\n+template <> int x<int> = 0;\n+template <> int x<int> = 0;\t// { dg-error \"x<int>\" }"}]}