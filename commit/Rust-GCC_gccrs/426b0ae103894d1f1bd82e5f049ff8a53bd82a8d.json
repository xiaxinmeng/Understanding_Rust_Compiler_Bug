{"sha": "426b0ae103894d1f1bd82e5f049ff8a53bd82a8d", "node_id": "C_kwDOANBUbNoAKDQyNmIwYWUxMDM4OTRkMWYxYmQ4MmU1ZjA0OWZmOGE1M2JkODJhOGQ", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-02-23T13:09:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-02-23T14:56:54Z"}, "message": "Fix memory leak in PTA\n\nWhen handle_lhs_call calls .create on the passed in vector it leaks\nany previous allocated storage.  Avoid doing that and instead rely\non the caller for memory management, just truncate the vector.\n\n\t* tree-ssa-structalias.cc (handle_lhs_call): Do not\n\tre-create rhsc, only truncate it.", "tree": {"sha": "4da02e2deed7d495a65863e1c91578950840a307", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4da02e2deed7d495a65863e1c91578950840a307"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/426b0ae103894d1f1bd82e5f049ff8a53bd82a8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/426b0ae103894d1f1bd82e5f049ff8a53bd82a8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/426b0ae103894d1f1bd82e5f049ff8a53bd82a8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/426b0ae103894d1f1bd82e5f049ff8a53bd82a8d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f9a7095d910379cd86ac45f81c79b363f859996", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f9a7095d910379cd86ac45f81c79b363f859996", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f9a7095d910379cd86ac45f81c79b363f859996"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "07e0fd6827afcd1d95b35b6671bad1f56587dc92", "filename": "gcc/tree-ssa-structalias.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/426b0ae103894d1f1bd82e5f049ff8a53bd82a8d/gcc%2Ftree-ssa-structalias.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/426b0ae103894d1f1bd82e5f049ff8a53bd82a8d/gcc%2Ftree-ssa-structalias.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.cc?ref=426b0ae103894d1f1bd82e5f049ff8a53bd82a8d", "patch": "@@ -4408,17 +4408,17 @@ handle_lhs_call (gcall *stmt, tree lhs, int flags, vec<ce_s> &rhsc,\n       && (flags & ERF_RETURN_ARG_MASK) < gimple_call_num_args (stmt))\n     {\n       tree arg;\n-      rhsc.create (0);\n+      rhsc.truncate (0);\n       arg = gimple_call_arg (stmt, flags & ERF_RETURN_ARG_MASK);\n       get_constraint_for (arg, &rhsc);\n       process_all_all_constraints (lhsc, rhsc);\n-      rhsc.release ();\n+      rhsc.truncate (0);\n     }\n   else if (flags & ERF_NOALIAS)\n     {\n       varinfo_t vi;\n       struct constraint_expr tmpc;\n-      rhsc.create (0);\n+      rhsc.truncate (0);\n       vi = make_heapvar (\"HEAP\", true);\n       /* We are marking allocated storage local, we deal with it becoming\n          global by escaping and setting of vars_contains_escaped_heap.  */\n@@ -4435,7 +4435,7 @@ handle_lhs_call (gcall *stmt, tree lhs, int flags, vec<ce_s> &rhsc,\n       tmpc.type = ADDRESSOF;\n       rhsc.safe_push (tmpc);\n       process_all_all_constraints (lhsc, rhsc);\n-      rhsc.release ();\n+      rhsc.truncate (0);\n     }\n   else\n     process_all_all_constraints (lhsc, rhsc);"}]}