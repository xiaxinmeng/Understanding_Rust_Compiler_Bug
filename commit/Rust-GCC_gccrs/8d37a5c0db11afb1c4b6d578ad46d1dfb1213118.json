{"sha": "8d37a5c0db11afb1c4b6d578ad46d1dfb1213118", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQzN2E1YzBkYjExYWZiMWM0YjZkNTc4YWQ0NmQxZGZiMTIxMzExOA==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2001-12-17T01:18:41Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-12-17T01:18:41Z"}, "message": "re PR c/5105 (compound literal patch broken with inlining)\n\n\t* c-common.def (COMPOUND_LITERAL_EXPR): Contain a DECL_STMT, not\n\ta DECL directly.\n\t* c-common.h (COMPOUND_LITERAL_EXPR_DECL_STMT): New.\n\t(COMPOUND_LITERAL_EXPR_DECL): Adjust definition.\n\t* c-decl.c (build_compound_literal): Put the decl inside a\n\tDECL_STMT.\n\t* doc/c-tree.texi (COMPOUND_LITERAL_EXPR): Update documentation.\n\tFixes PR c/5105.\n\ntestsuite:\n\t* gcc.c-torture/compile/20011217-1.c: New test.\n\nFrom-SVN: r48085", "tree": {"sha": "b0c444fe54bd3f1b332cc67c0727beaa08189268", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0c444fe54bd3f1b332cc67c0727beaa08189268"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf6ede82ac9bf9fdd08be25e806e131ac9a8f47e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf6ede82ac9bf9fdd08be25e806e131ac9a8f47e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf6ede82ac9bf9fdd08be25e806e131ac9a8f47e"}], "stats": {"total": 59, "additions": 51, "deletions": 8}, "files": [{"sha": "c17e1cf71f09a34d8f728eef38be15a761cdf70b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d37a5c0db11afb1c4b6d578ad46d1dfb1213118", "patch": "@@ -1,3 +1,14 @@\n+2001-12-17  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* c-common.def (COMPOUND_LITERAL_EXPR): Contain a DECL_STMT, not\n+\ta DECL directly.\n+\t* c-common.h (COMPOUND_LITERAL_EXPR_DECL_STMT): New.\n+\t(COMPOUND_LITERAL_EXPR_DECL): Adjust definition.\n+\t* c-decl.c (build_compound_literal): Put the decl inside a\n+\tDECL_STMT.\n+\t* doc/c-tree.texi (COMPOUND_LITERAL_EXPR): Update documentation.\n+\tFixes PR c/5105.\n+\n 2001-12-16  Aldy Hernandez  <aldyh@redhat.com>\n \n         * config.gcc: Add powerpc-*-eabisimaltivec*."}, {"sha": "d9b14be05a9d71b3fef41c6e662fefdefe6efaa0", "filename": "gcc/c-common.def", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118/gcc%2Fc-common.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118/gcc%2Fc-common.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.def?ref=8d37a5c0db11afb1c4b6d578ad46d1dfb1213118", "patch": "@@ -103,7 +103,8 @@ DEFTREECODE (CASE_LABEL, \"case_label\", 'e', 3)\n DEFTREECODE (STMT_EXPR, \"stmt_expr\", 'e', 1)\n \n /* A COMPOUND_LITERAL_EXPR represents a C99 compound literal.  The\n-   COMPOND_LITERAL_EXPR_DECL is the decl for the anonymous object\n-   represented by the COMPOUND_LITERAL; the DECL_INITIAL of that\n-   decl is the CONSTRUCTOR that initializes the compound literal.  */\n+   COMPOND_LITERAL_EXPR_DECL_STMT is the a DECL_STMT containing the decl\n+   for the anonymous object represented by the COMPOUND_LITERAL;\n+   the DECL_INITIAL of that decl is the CONSTRUCTOR that initializes\n+   the compound literal.  */\n DEFTREECODE (COMPOUND_LITERAL_EXPR, \"compound_literal_expr\", 'e', 1)"}, {"sha": "61b8f84428b79fc66a1359734bc7125f51524a70", "filename": "gcc/c-common.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=8d37a5c0db11afb1c4b6d578ad46d1dfb1213118", "patch": "@@ -637,9 +637,11 @@ extern tree strip_array_types                   PARAMS ((tree));\n    the given label statement.  */\n #define LABEL_STMT_LABEL(NODE)  TREE_OPERAND (LABEL_STMT_CHECK (NODE), 0)\n \n-/* COMPOUND_LITERAL_EXPR accessor.  */\n-#define COMPOUND_LITERAL_EXPR_DECL(NODE)\t\t\\\n+/* COMPOUND_LITERAL_EXPR accessors.  */\n+#define COMPOUND_LITERAL_EXPR_DECL_STMT(NODE)\t\t\\\n   TREE_OPERAND (COMPOUND_LITERAL_EXPR_CHECK (NODE), 0)\n+#define COMPOUND_LITERAL_EXPR_DECL(NODE)\t\t\t\\\n+  DECL_STMT_DECL (COMPOUND_LITERAL_EXPR_DECL_STMT (NODE))\n \n /* Nonzero if this SCOPE_STMT is for the beginning of a scope.  */\n #define SCOPE_BEGIN_P(NODE) \\"}, {"sha": "c7e1e0a872a04b84ce8205b1087201b6837e2b6e", "filename": "gcc/c-decl.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=8d37a5c0db11afb1c4b6d578ad46d1dfb1213118", "patch": "@@ -3836,6 +3836,7 @@ build_compound_literal (type, init)\n      the COMPOUND_LITERAL_EXPR rather than added elsewhere as a DECL_STMT.  */\n   tree decl = build_decl (VAR_DECL, NULL_TREE, type);\n   tree complit;\n+  tree stmt;\n   DECL_EXTERNAL (decl) = 0;\n   TREE_PUBLIC (decl) = 0;\n   TREE_STATIC (decl) = (current_binding_level == global_binding_level);\n@@ -3855,7 +3856,8 @@ build_compound_literal (type, init)\n   if (type == error_mark_node || !COMPLETE_TYPE_P (type))\n     return error_mark_node;\n \n-  complit = build1 (COMPOUND_LITERAL_EXPR, TREE_TYPE (decl), decl);\n+  stmt = build_stmt (DECL_STMT, decl);\n+  complit = build1 (COMPOUND_LITERAL_EXPR, TREE_TYPE (decl), stmt);\n   TREE_SIDE_EFFECTS (complit) = 1;\n \n   layout_decl (decl, 0);"}, {"sha": "8d226474e49fe4bf5bb7e54c8a754db8c8eb7667", "filename": "gcc/doc/c-tree.texi", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118/gcc%2Fdoc%2Fc-tree.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118/gcc%2Fdoc%2Fc-tree.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fc-tree.texi?ref=8d37a5c0db11afb1c4b6d578ad46d1dfb1213118", "patch": "@@ -2219,13 +2219,16 @@ Conceptually, before any initialization is done, the entire area of\n storage is initialized to zero.\n \n @item COMPOUND_LITERAL_EXPR\n+@findex COMPOUND_LITERAL_EXPR_DECL_STMT\n @findex COMPOUND_LITERAL_EXPR_DECL\n These nodes represent ISO C99 compound literals.  The\n-@code{COMPOUND_LITERAL_EXPR_DECL} is an anonymous @code{VAR_DECL} for\n+@code{COMPOUND_LITERAL_EXPR_DECL_STMT} is a @code{DECL_STMT}\n+containing an anonymous @code{VAR_DECL} for\n the unnamed object represented by the compound literal; the\n @code{DECL_INITIAL} of that @code{VAR_DECL} is a @code{CONSTRUCTOR}\n representing the brace-enclosed list of initializers in the compound\n-literal.\n+literal.  That anonymous @code{VAR_DECL} can also be accessed directly\n+by the @code{COMPOUND_LITERAL_EXPR_DECL} macro.\n \n @item SAVE_EXPR\n "}, {"sha": "170ff3fe7737338d5f2bcb1a3635d8e5878a7b17", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d37a5c0db11afb1c4b6d578ad46d1dfb1213118", "patch": "@@ -1,3 +1,7 @@\n+2001-12-17  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* gcc.c-torture/compile/20011217-1.c: New test.\n+\n 2001-12-14  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* testsuite/gcc.dg/20011214-1.c: New."}, {"sha": "3e89ca04c192ea3eea9467f177c00af958ee2618", "filename": "gcc/testsuite/gcc.c-torture/compile/20011217-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011217-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d37a5c0db11afb1c4b6d578ad46d1dfb1213118/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011217-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011217-1.c?ref=8d37a5c0db11afb1c4b6d578ad46d1dfb1213118", "patch": "@@ -0,0 +1,20 @@\n+/* Test that the initializer of a compound literal is properly walked\n+   when tree inlining.  */\n+/* Origin: PR c/5105 from <aj@suse.de>.  */\n+\n+typedef struct { long p; } pt;\n+\n+inline pt f (pt _p)\n+{\n+  long p = _p.p;\n+\n+  return (pt) { (p) };\n+}\n+\n+static int mmap_mem (void)\n+{\n+  pt p;\n+  p = f (p);\n+\n+  return 0;\n+}"}]}