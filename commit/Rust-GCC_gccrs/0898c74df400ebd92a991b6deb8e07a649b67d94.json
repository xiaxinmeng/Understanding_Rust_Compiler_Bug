{"sha": "0898c74df400ebd92a991b6deb8e07a649b67d94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg5OGM3NGRmNDAwZWJkOTJhOTkxYjZkZWI4ZTA3YTY0OWI2N2Q5NA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2017-02-06T13:38:56Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2017-02-06T13:38:56Z"}, "message": "re PR rtl-optimization/78883 ([avr] ICE triggered by change to combine.c (r243578))\n\ngcc/\n\tPR target/78883\n\t* config/avr/avr.c (rtl-iter.h): Include it.\n\t(TARGET_LEGITIMATE_COMBINED_INSN): New hook define...\n\t(avr_legitimate_combined_insn): ...and implementation.\ngcc/testsuite/\n\tPR target/78883\n\t* gcc.c-torture/compile/pr78883.c: New test.\n\nFrom-SVN: r245209", "tree": {"sha": "a51ce978240c0ed9853ecaab15ca537bbd9caad2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a51ce978240c0ed9853ecaab15ca537bbd9caad2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0898c74df400ebd92a991b6deb8e07a649b67d94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0898c74df400ebd92a991b6deb8e07a649b67d94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0898c74df400ebd92a991b6deb8e07a649b67d94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0898c74df400ebd92a991b6deb8e07a649b67d94/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "406fde6e17b0a4b4f9d0c602e6a827d0592db420", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/406fde6e17b0a4b4f9d0c602e6a827d0592db420", "html_url": "https://github.com/Rust-GCC/gccrs/commit/406fde6e17b0a4b4f9d0c602e6a827d0592db420"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "759ab99f1ecce5be32f793049e4b60215db33358", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0898c74df400ebd92a991b6deb8e07a649b67d94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0898c74df400ebd92a991b6deb8e07a649b67d94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0898c74df400ebd92a991b6deb8e07a649b67d94", "patch": "@@ -1,3 +1,5 @@\n+2017-02-06  Georg-Johann Lay  <avr@gjlay.de>\n+\n 2017-02-06  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* config/s390/predicates.md (\"larl_operand\"): Use macros from hwint.h."}, {"sha": "cde63f10e633d2530bda59812386e2f0ace504c0", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0898c74df400ebd92a991b6deb8e07a649b67d94/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0898c74df400ebd92a991b6deb8e07a649b67d94/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=0898c74df400ebd92a991b6deb8e07a649b67d94", "patch": "@@ -49,6 +49,7 @@\n #include \"context.h\"\n #include \"tree-pass.h\"\n #include \"print-rtl.h\"\n+#include \"rtl-iter.h\"\n \n /* This file should be included last.  */\n #include \"target-def.h\"\n@@ -12823,6 +12824,34 @@ avr_convert_to_type (tree type, tree expr)\n }\n \n \n+/* Implement `TARGET_LEGITIMATE_COMBINED_INSN'.  */\n+\n+/* PR78883: Filter out paradoxical SUBREGs of MEM which are not handled\n+   properly by following passes.  As INSN_SCHEDULING is off and hence\n+   general_operand accepts such expressions, ditch them now.  */\n+\n+static bool\n+avr_legitimate_combined_insn (rtx_insn *insn)\n+{\n+  subrtx_iterator::array_type array;\n+\n+  FOR_EACH_SUBRTX (iter, array, PATTERN (insn), NONCONST)\n+    {\n+      const_rtx op = *iter;\n+\n+      if (SUBREG_P (op)\n+          && MEM_P (SUBREG_REG (op))\n+          && (GET_MODE_SIZE (GET_MODE (op))\n+              > GET_MODE_SIZE (GET_MODE (SUBREG_REG (op)))))\n+        {\n+          return false;\n+        }\n+    }\n+\n+  return true;\n+}\n+\n+\n /* PR63633: The middle-end might come up with hard regs as input operands.\n \n    RMASK is a bit mask representing a subset of hard registers R0...R31:\n@@ -14364,6 +14393,9 @@ avr_fold_builtin (tree fndecl, int n_args ATTRIBUTE_UNUSED, tree *arg,\n #define TARGET_USE_BY_PIECES_INFRASTRUCTURE_P \\\n   avr_use_by_pieces_infrastructure_p\n \n+#undef  TARGET_LEGITIMATE_COMBINED_INSN\n+#define TARGET_LEGITIMATE_COMBINED_INSN avr_legitimate_combined_insn\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n \f"}, {"sha": "2396bd0e83477aed6cf2b76ffbe1d0abc23e7d2f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0898c74df400ebd92a991b6deb8e07a649b67d94/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0898c74df400ebd92a991b6deb8e07a649b67d94/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0898c74df400ebd92a991b6deb8e07a649b67d94", "patch": "@@ -1,3 +1,8 @@\n+2017-02-06  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/78883\n+\t* gcc.c-torture/compile/pr78883.c: New test.\n+\n 2017-02-05  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR tree-ssa/79347"}, {"sha": "8401f88505869e218faffb310c9a81b4f78d4dbe", "filename": "gcc/testsuite/gcc.c-torture/compile/pr78883.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0898c74df400ebd92a991b6deb8e07a649b67d94/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr78883.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0898c74df400ebd92a991b6deb8e07a649b67d94/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr78883.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr78883.c?ref=0898c74df400ebd92a991b6deb8e07a649b67d94", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+\n+int foo (int *p)\n+{\n+  int i;\n+  for (i = 0; i < 5; i++)\n+    {\n+      if (p[i] & 1)\n+        return i;\n+    }\n+  return -1;\n+}"}]}