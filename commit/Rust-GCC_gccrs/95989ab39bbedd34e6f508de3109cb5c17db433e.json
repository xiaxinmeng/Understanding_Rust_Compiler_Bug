{"sha": "95989ab39bbedd34e6f508de3109cb5c17db433e", "node_id": "C_kwDOANBUbNoAKDk1OTg5YWIzOWJiZWRkMzRlNmY1MDhkZTMxMDljYjVjMTdkYjQzM2U", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2022-08-15T18:39:17Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2022-08-24T19:15:32Z"}, "message": "[RISCV] Use a constraint for bset<mode>_mask and bset<mode>_1_mask\n\nA constraint here just makes it easier to understand what the\noperands are.\n\nOK? Built and tested on riscv32-linux-gnu and riscv64-linux-gnu with\n--with-arch=rvNimafdc_zba_zbb_zbc_zbs (where N is 32 and 64).\n\nThanks,\nAndrew Pinski\n\ngcc/ChangeLog:\n\n\t* config/riscv/constraints.md (DsS): New constraint.\n\t(DsD): New constraint.\n\t* config/riscv/iterators.md (shiftm1c): New iterator.\n\t* config/riscv/bitmanip.md (*bset<mode>_mask):\n\tUse shiftm1c.\n\t(*bset<mode>_1_mask): Likewise.", "tree": {"sha": "8fd16f0ab40f9451beb402f33aab7b8a777f9acd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fd16f0ab40f9451beb402f33aab7b8a777f9acd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95989ab39bbedd34e6f508de3109cb5c17db433e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95989ab39bbedd34e6f508de3109cb5c17db433e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95989ab39bbedd34e6f508de3109cb5c17db433e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95989ab39bbedd34e6f508de3109cb5c17db433e/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7d4b734f2d81eccb67903e4fa8f94249238d39c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d4b734f2d81eccb67903e4fa8f94249238d39c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7d4b734f2d81eccb67903e4fa8f94249238d39c"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "73b2c1040b6eff26b5974ecaf6bbaa427d2e1f78", "filename": "gcc/config/riscv/bitmanip.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95989ab39bbedd34e6f508de3109cb5c17db433e/gcc%2Fconfig%2Friscv%2Fbitmanip.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95989ab39bbedd34e6f508de3109cb5c17db433e/gcc%2Fconfig%2Friscv%2Fbitmanip.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fbitmanip.md?ref=95989ab39bbedd34e6f508de3109cb5c17db433e", "patch": "@@ -297,7 +297,7 @@\n \t(ior:X (ashift:X (const_int 1)\n \t\t\t (subreg:QI\n \t\t\t  (and:X (match_operand:X 2 \"register_operand\" \"r\")\n-\t\t\t\t (match_operand 3 \"<X:shiftm1>\" \"i\")) 0))\n+\t\t\t\t (match_operand 3 \"<X:shiftm1>\" \"<X:shiftm1p>\")) 0))\n \t       (match_operand:X 1 \"register_operand\" \"r\")))]\n   \"TARGET_ZBS\"\n   \"bset\\t%0,%1,%2\"\n@@ -316,7 +316,7 @@\n \t(ashift:X (const_int 1)\n \t\t  (subreg:QI\n \t\t   (and:X (match_operand:X 1 \"register_operand\" \"r\")\n-\t\t\t  (match_operand 2 \"<X:shiftm1>\" \"i\")) 0)))]\n+\t\t\t  (match_operand 2 \"<X:shiftm1>\" \"<X:shiftm1p>\")) 0)))]\n   \"TARGET_ZBS\"\n   \"bset\\t%0,x0,%1\"\n   [(set_attr \"type\" \"bitmanip\")])"}, {"sha": "444870ad060b4341e1f048dfe1c1c83eae6995d6", "filename": "gcc/config/riscv/constraints.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95989ab39bbedd34e6f508de3109cb5c17db433e/gcc%2Fconfig%2Friscv%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95989ab39bbedd34e6f508de3109cb5c17db433e/gcc%2Fconfig%2Friscv%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fconstraints.md?ref=95989ab39bbedd34e6f508de3109cb5c17db433e", "patch": "@@ -60,6 +60,18 @@\n   (and (match_code \"const_int\")\n        (match_test \"IN_RANGE (ival, 1, 3)\")))\n \n+(define_constraint \"DsS\"\n+  \"@internal\n+   31 immediate\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival == 31\")))\n+\n+(define_constraint \"DsD\"\n+  \"@internal\n+   63 immediate\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival == 63\")))\n+\n ;; Floating-point constant +0.0, used for FCVT-based moves when FMV is\n ;; not available in RV32.\n (define_constraint \"G\""}, {"sha": "39dffabc235d428560d6d9ee0f426f7d89106abe", "filename": "gcc/config/riscv/iterators.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95989ab39bbedd34e6f508de3109cb5c17db433e/gcc%2Fconfig%2Friscv%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95989ab39bbedd34e6f508de3109cb5c17db433e/gcc%2Fconfig%2Friscv%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fiterators.md?ref=95989ab39bbedd34e6f508de3109cb5c17db433e", "patch": "@@ -114,6 +114,7 @@\n \n ; bitmanip mode attribute\n (define_mode_attr shiftm1 [(SI \"const31_operand\") (DI \"const63_operand\")])\n+(define_mode_attr shiftm1p [(SI \"DsS\") (DI \"DsD\")])\n \n ;; -------------------------------------------------------------------\n ;; Code Iterators"}]}