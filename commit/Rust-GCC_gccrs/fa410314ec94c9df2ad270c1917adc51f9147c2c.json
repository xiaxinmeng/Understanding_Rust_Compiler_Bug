{"sha": "fa410314ec94c9df2ad270c1917adc51f9147c2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE0MTAzMTRlYzk0YzlkZjJhZDI3MGMxOTE3YWRjNTFmOTE0N2MyYw==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-10-29T15:12:38Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-10-30T10:26:30Z"}, "message": "[OpenACC] Elaborate testcases that verify column location information [PR92793]\n\nAfter PR92793 commit 9c81750c5bedd7883182ee2684a012c6210ebe1d \"Fortran] PR\n92793 - fix column used for error diagnostic\", commit\nd0d0ba20f2345023e9cec2419c9fb9e6cc7098c6 did \"Add tests to verify OpenACC\nclause locations\", later fixed up in PR92901 commit\ne6c90dba73291435c244decb9a89c47019cc5a45 to \"Fix PR92901: Change test\nexpectation for C++ in OpenACC test clause-locations.c\".\n\nNow, add some more testing to verify/document the status quo.\n\n\tgcc/testsuite/\n\tPR fortran/92793\n\t* c-c++-common/goacc/clause-locations.c: Rewrite into...\n\t* c-c++-common/goacc/pr92793-1.c: ... this.\n\t* gfortran.dg/goacc/clause-locations.f90: Rewrite into...\n\t* gfortran.dg/goacc/pr92793-1.f90: ... this.", "tree": {"sha": "4198df8ce9d4384d69c21e2ae637e4131332e805", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4198df8ce9d4384d69c21e2ae637e4131332e805"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa410314ec94c9df2ad270c1917adc51f9147c2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa410314ec94c9df2ad270c1917adc51f9147c2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa410314ec94c9df2ad270c1917adc51f9147c2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa410314ec94c9df2ad270c1917adc51f9147c2c/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63d0da8852553ec42d5256e9c96ee21d26e0c2cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63d0da8852553ec42d5256e9c96ee21d26e0c2cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63d0da8852553ec42d5256e9c96ee21d26e0c2cd"}], "stats": {"total": 140, "additions": 103, "deletions": 37}, "files": [{"sha": "913988d9b5a5edc517fdfd072c35c0fcd5fb9b24", "filename": "gcc/testsuite/c-c++-common/goacc/clause-locations.c", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63d0da8852553ec42d5256e9c96ee21d26e0c2cd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fclause-locations.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63d0da8852553ec42d5256e9c96ee21d26e0c2cd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fclause-locations.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fclause-locations.c?ref=63d0da8852553ec42d5256e9c96ee21d26e0c2cd", "patch": "@@ -1,19 +0,0 @@\n-/* Verify that the location information for clauses is correct. */\n-\n-void\n-check_clause_columns() {\n-  int i, j, sum, diff;\n-\n-  #pragma acc parallel\n-  {\n-    #pragma acc loop reduction(+:sum)\n-    for (i = 1; i <= 10; i++)\n-      {\n-        #pragma acc loop reduction(-:diff) reduction(-:sum)\n-\t/* { dg-warning \"53: conflicting reduction operations for .sum.\" \"\" { target c } .-1 } */\n-\t/* { dg-warning \"56: conflicting reduction operations for .sum.\" \"\" { target c++ } .-2 } */\n-\tfor (j = 1; j <= 10; j++)\n-\t  sum = 1;\n-      }\n-  }\n-}"}, {"sha": "d7a2ae4879928218df42180a37b8f8b1e405f5a7", "filename": "gcc/testsuite/c-c++-common/goacc/pr92793-1.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa410314ec94c9df2ad270c1917adc51f9147c2c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fpr92793-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa410314ec94c9df2ad270c1917adc51f9147c2c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fpr92793-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fpr92793-1.c?ref=fa410314ec94c9df2ad270c1917adc51f9147c2c", "patch": "@@ -0,0 +1,56 @@\n+/* Verify column location information.  */\n+\n+/* See also 'gfortran.dg/goacc/pr92793-1.f90'.  */\n+\n+/* { dg-additional-options \"-fdump-tree-original-lineno\" }, and also\n+   { dg-additional-options \"-fdump-tree-gimple-lineno\" } as the former doesn't\n+   actually contain location information.  */\n+\n+/* No tabs.  Funny indentation/spacing for a reason.  */\n+\n+\n+static void\n+check ()\n+{\n+  int i, j, sum, diff;\n+\n+ #pragma   acc  parallel \\\n+  /* C, C++ location information points to the 'a' in '#pragma acc parallel'.  */ \\\n+  /* { dg-final { scan-tree-dump-times \"pr92793-1\\\\\\.c:17:12\\\\\\] #pragma acc parallel\" 1 \"original\" { xfail *-*-* } } } */ \\\n+  /* { dg-final { scan-tree-dump-times \"pr92793-1\\\\\\.c:17:12\\\\\\] #pragma omp target oacc_parallel\" 1 \"gimple\" } } */\n+  {\n+#pragma     acc loop \\\n+  /* C, C++ location information points to the 'a' in '#pragma acc loop'.  */ \\\n+  /* { dg-final { scan-tree-dump-times \"pr92793-1\\\\\\.c:22:13\\\\\\] #pragma acc loop\" 1 \"original\" { xfail *-*-* } } } */ \\\n+  /* { dg-final { scan-tree-dump-times \"pr92793-1\\\\\\.c:22:13\\\\\\] #pragma acc loop\" 1 \"gimple\" } } */ \\\n+       reduction  (  + :   sum) /* { dg-line sum1 } */ \\\n+  /* C location information points to the '(' in 'reduction(+:sum)'.  */ \\\n+  /* { dg-message \"19: location of the previous reduction for 'sum'\" \"\" { target c } sum1 } */ \\\n+  /* C++ location information points to 'sum' in 'reduction(+:sum)'.  */ \\\n+  /* { dg-message \"28: location of the previous reduction for 'sum'\" \"\" { target c++ } sum1 } */ \\\n+  independent\n+    for (i = 1; i <= 10; i++)\n+      {\n+     #pragma      acc     loop \\\n+  /* C, C++ location information points to the 'a' in '#pragma acc loop'.  */ \\\n+  /* { dg-final { scan-tree-dump-times \"pr92793-1\\\\\\.c:34:19\\\\\\] #pragma acc loop\" 1 \"original\" { xfail *-*-* } } } */ \\\n+  /* { dg-final { scan-tree-dump-times \"pr92793-1\\\\\\.c:34:19\\\\\\] #pragma acc loop\" 1 \"gimple\" } } */ \\\n+ reduction  ( -  : diff  ) \\\n+reduction(-:sum  ) /* { dg-line sum2 } */ \\\n+  /* C location information points to the '(' in 'reduction(-:sum)'.  */ \\\n+  /* { dg-warning \"10: conflicting reduction operations for 'sum'\" \"\" { target c } sum2 } */ \\\n+  /* C++ location information points to 'sum' in 'reduction(-:sum)'.  */ \\\n+  /* { dg-warning \"13: conflicting reduction operations for 'sum'\" \"\" { target c++ } sum2 } */ \\\n+  independent\n+        for (j = 1; j <= 10; j++)\n+          {\n+                sum\n+                  =\n+             1 ;\n+            /* C, C++ location information points to the '=' in 'sum = 1'.  */ \\\n+            /* { dg-final { scan-tree-dump-times \"pr92793-1\\\\\\.c:48:19\\\\\\] sum = 1\" 1 \"original\" { xfail *-*-* } } } */ \\\n+            /* { dg-final { scan-tree-dump-times \"pr92793-1\\\\\\.c:48:19\\\\\\] sum = 1\" 1 \"gimple\" } } */\n+          }\n+      }\n+  }\n+}"}, {"sha": "29798d3154255f3e4f0927728dabb3cd41f257be", "filename": "gcc/testsuite/gfortran.dg/goacc/clause-locations.f90", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63d0da8852553ec42d5256e9c96ee21d26e0c2cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fclause-locations.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63d0da8852553ec42d5256e9c96ee21d26e0c2cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fclause-locations.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fclause-locations.f90?ref=63d0da8852553ec42d5256e9c96ee21d26e0c2cd", "patch": "@@ -1,18 +0,0 @@\n-! Verify that the location information for clauses is correct.\n-! See also PR 92793.\n-\n-subroutine check_clause_columns ()\n-  implicit none (type, external)\n-  integer :: i, j, sum, diff\n-\n-  !$acc parallel\n-    !$acc loop reduction(+:sum)\n-    do i = 1, 10\n-      !$acc loop reduction(-:diff) reduction(-:sum)  ! { dg-warning \"47: conflicting reduction operations for .sum.\" }\n-      do j = 1, 10\n-            sum = 1\n-      end do\n-    end do\n-  !$acc end parallel\n-end subroutine check_clause_columns\n-"}, {"sha": "a572c6b3437b21e50eaf3ed23eaa9bea8646e529", "filename": "gcc/testsuite/gfortran.dg/goacc/pr92793-1.f90", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa410314ec94c9df2ad270c1917adc51f9147c2c/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr92793-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa410314ec94c9df2ad270c1917adc51f9147c2c/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr92793-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr92793-1.f90?ref=fa410314ec94c9df2ad270c1917adc51f9147c2c", "patch": "@@ -0,0 +1,47 @@\n+! Verify column location information.\n+\n+! See also 'c-c++-common/goacc/pr92793-1.c'.\n+\n+! { dg-additional-options \"-fdump-tree-original-lineno\" }\n+! { dg-additional-options \"-fdump-tree-gimple-lineno\" }\n+\n+! No tabs.  Funny indentation/spacing for a reason.\n+\n+\n+subroutine check ()\n+  implicit none (type, external)\n+  integer :: i, j, sum, diff\n+\n+ !$acc    parallel &\n+     !$acc & & ! Fortran location information points to the last line of the directive, and there is no column location information.\n+!$acc  && ! { dg-final { scan-tree-dump-times \"pr92793-1\\\\\\.f90:18:0\\\\\\] #pragma acc parallel\" 1 \"original\" } }\n+  !$acc & ! { dg-final { scan-tree-dump-times \"pr92793-1\\\\\\.f90:18:0\\\\\\] #pragma omp target oacc_parallel\" 1 \"gimple\" } }\n+      !$acc loop &\n+    !$acc & & ! Fortran location information points to the last line of the directive, and there is no column location information.\n+      !$acc  &   & ! { dg-final { scan-tree-dump-times \"pr92793-1\\\\\\.f90:26:0\\\\\\] #pragma acc loop\" 1 \"original\" } }\n+     !$acc &     & ! { dg-final { scan-tree-dump-times \"pr92793-1\\\\\\.f90:26:0\\\\\\] #pragma acc loop\" 1 \"gimple\" } }\n+    !$acc&       reduction  ( +    : sum ) & ! { dg-line sum1 }\n+ !$acc && ! Fortran location information points to the ':' in 'reduction(+:sum)'.\n+   !$acc   &    &  ! { dg-message \"36: location of the previous reduction for 'sum'\" \"\" { target *-*-* } sum1 }\n+!$acc&     independent\n+  do i = 1, 10\n+      !$acc loop &\n+!$acc & & ! Fortran location information points to the last line of the directive, and there is no column location information.\n+   !$acc & & ! { dg-final { scan-tree-dump-times \"pr92793-1\\\\\\.f90:36:0\\\\\\] #pragma acc loop\" 1 \"original\" } }\n+    !$acc & & ! { dg-final { scan-tree-dump-times \"pr92793-1\\\\\\.f90:36:0\\\\\\] #pragma acc loop\" 1 \"gimple\" } }\n+  !$acc & reduction(-: diff     ) &\n+             !$acc&reduction(- :    sum) & ! { dg-line sum2 }\n+            !$acc & & ! Fortran location information points to the ':' in 'reduction(-:sum)'.\n+          !$acc& & ! { dg-warning \"32: conflicting reduction operations for 'sum'\" \"\" { target *-*-* } sum2 }\n+          !$acc       &independent\n+     do j = 1, 10\n+           sum &\n+   & = &\n+      & 1\n+        ! Fortran location information points to the last line of the statement, and there is no column location information.\n+        ! { dg-final { scan-tree-dump-times \"pr92793-1\\\\\\.f90:40:0\\\\\\] sum = 1\" 1 \"original\" } }\n+        ! { dg-final { scan-tree-dump-times \"pr92793-1\\\\\\.f90:40:0\\\\\\] sum = 1\" 1 \"gimple\" } }\n+     end do\n+  end do\n+!$acc end  parallel\n+end subroutine check"}]}