{"sha": "c1a9b6df9c71f5c3cd580de8bb426890f4093414", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFhOWI2ZGY5YzcxZjVjM2NkNTgwZGU4YmI0MjY4OTBmNDA5MzQxNA==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2012-07-09T10:47:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-09T10:47:50Z"}, "message": "prj-util.adb, [...] (For_Interface_Sources): New routine.\n\n2012-07-09  Pascal Obry  <obry@adacore.com>\n\n\t* prj-util.adb, prj-util.ads (For_Interface_Sources): New routine.\n\nFrom-SVN: r189370", "tree": {"sha": "a9a5980ffa08d35bacf9a4af13ff23225023e899", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9a5980ffa08d35bacf9a4af13ff23225023e899"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1a9b6df9c71f5c3cd580de8bb426890f4093414", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1a9b6df9c71f5c3cd580de8bb426890f4093414", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1a9b6df9c71f5c3cd580de8bb426890f4093414", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1a9b6df9c71f5c3cd580de8bb426890f4093414/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b3f532ce538f8fc13b7af7cc73b94aa43bb03669", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3f532ce538f8fc13b7af7cc73b94aa43bb03669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3f532ce538f8fc13b7af7cc73b94aa43bb03669"}], "stats": {"total": 157, "additions": 156, "deletions": 1}, "files": [{"sha": "d9096dcf6cc0819ade83a822338b3c780484f5b6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a9b6df9c71f5c3cd580de8bb426890f4093414/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a9b6df9c71f5c3cd580de8bb426890f4093414/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c1a9b6df9c71f5c3cd580de8bb426890f4093414", "patch": "@@ -1,3 +1,7 @@\n+2012-07-09  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-util.adb, prj-util.ads (For_Interface_Sources): New routine.\n+\n 2012-07-09  Tristan Gingold  <gingold@adacore.com>\n \n \t* seh_init.c (__gnat_SEH_error_handler): On Win64 and SEH,"}, {"sha": "4ad2668f1261216feb5a3ea46139d6d911bc1fb4", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 141, "deletions": 1, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a9b6df9c71f5c3cd580de8bb426890f4093414/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a9b6df9c71f5c3cd580de8bb426890f4093414/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=c1a9b6df9c71f5c3cd580de8bb426890f4093414", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,11 +23,14 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Ada.Containers.Indefinite_Ordered_Sets;\n+with Ada.Directories;\n with Ada.Unchecked_Deallocation;\n \n with GNAT.Case_Util; use GNAT.Case_Util;\n with GNAT.Regexp;    use GNAT.Regexp;\n \n+with ALI;      use ALI;\n with Osint;    use Osint;\n with Output;   use Output;\n with Opt;\n@@ -390,6 +393,143 @@ package body Prj.Util is\n       return Add_Suffix (Name_Find);\n    end Executable_Of;\n \n+   ---------------------------\n+   -- For_Interface_Sources --\n+   ---------------------------\n+\n+   procedure For_Interface_Sources\n+     (Tree : Project_Tree_Ref; Project : Project_Id)\n+   is\n+      use Ada;\n+      use type Ada.Containers.Count_Type;\n+\n+      package Dep_Names is new Containers.Indefinite_Ordered_Sets (String);\n+\n+      function Load_ALI (Filename : String) return ALI_Id;\n+      --  Load an ALI file and returns its id\n+\n+      --------------\n+      -- Load_ALI --\n+      --------------\n+\n+      function Load_ALI (Filename : String) return ALI_Id is\n+         Result   : ALI_Id := No_ALI_Id;\n+         Text     : Text_Buffer_Ptr;\n+         Lib_File : File_Name_Type;\n+      begin\n+         if Directories.Exists (Filename) then\n+            Name_Len := 0;\n+            Add_Str_To_Name_Buffer (Filename);\n+            Lib_File := Name_Find;\n+            Text := Osint.Read_Library_Info (Lib_File);\n+            Result :=\n+              ALI.Scan_ALI\n+                (Lib_File,\n+                 Text,\n+                 Ignore_ED  => False,\n+                 Err        => True,\n+                 Read_Lines => \"UD\");\n+            Free (Text);\n+         end if;\n+\n+         return Result;\n+      end Load_ALI;\n+\n+      Iter : Source_Iterator := For_Each_Source (Tree, Project);\n+      Sid  : Source_Id;\n+      ALI  : ALI_Id;\n+\n+      First_Unit  : Unit_Id;\n+      Second_Unit : Unit_Id;\n+      Body_Needed : Boolean;\n+      Deps        : Dep_Names.Set;\n+\n+   begin\n+      --  First look at all the spec, check if the body is needed\n+\n+      loop\n+         Sid := Element (Iter);\n+         exit when Sid = No_Source;\n+\n+         --  Skip sources that are removed/excluded and sources not part of\n+         --  the interface for standalone libraries.\n+\n+         if Sid.Kind = Spec\n+           and then not Sid.Locally_Removed\n+           and then (Project.Standalone_Library = No\n+                     or else Sid.Declared_In_Interfaces)\n+         then\n+            Action (Sid);\n+\n+            --  Check ALI for dependencies on body and sep\n+\n+            ALI := Load_ALI\n+              (Get_Name_String (Get_Object_Directory (Sid.Project, True))\n+               & Get_Name_String (Sid.Dep_Name));\n+\n+            if ALI /= No_ALI_Id then\n+               First_Unit := ALIs.Table (ALI).First_Unit;\n+               Second_Unit := No_Unit_Id;\n+               Body_Needed := True;\n+\n+               --  If there is both a spec and a body, check if they are both\n+               --  needed.\n+\n+               if Units.Table (First_Unit).Utype = Is_Body then\n+                  Second_Unit := ALIs.Table (ALI).Last_Unit;\n+\n+                  --  If the body is not needed, then reset First_Unit\n+\n+                  if not Units.Table (Second_Unit).Body_Needed_For_SAL then\n+                     Body_Needed := False;\n+                  end if;\n+\n+               elsif Units.Table (First_Unit).Utype = Is_Spec_Only then\n+                  Body_Needed := False;\n+               end if;\n+\n+               --  Handle all the separates, if any\n+\n+               if Body_Needed then\n+                  if Other_Part (Sid) /= null then\n+                     Deps.Include (Get_Name_String (Other_Part (Sid).File));\n+                  end if;\n+\n+                  for Dep in ALIs.Table (ALI).First_Sdep ..\n+                    ALIs.Table (ALI).Last_Sdep\n+                  loop\n+                     if Sdep.Table (Dep).Subunit_Name /= No_Name then\n+                        Deps.Include\n+                          (Get_Name_String (Sdep.Table (Dep).Sfile));\n+                     end if;\n+                  end loop;\n+               end if;\n+            end if;\n+         end if;\n+\n+         Next (Iter);\n+      end loop;\n+\n+      --  Now handle the bodies and separates if needed\n+\n+      if Deps.Length /= 0 then\n+         Iter := For_Each_Source (Tree, Project);\n+\n+         loop\n+            Sid := Element (Iter);\n+            exit when Sid = No_Source;\n+\n+            if Sid.Kind /= Spec\n+              and then Deps.Contains (Get_Name_String (Sid.File))\n+            then\n+               Action (Sid);\n+            end if;\n+\n+            Next (Iter);\n+         end loop;\n+      end if;\n+   end For_Interface_Sources;\n+\n    --------------\n    -- Get_Line --\n    --------------"}, {"sha": "96bfdb8cc3b0267563698fb5a1a6e3432590f2d4", "filename": "gcc/ada/prj-util.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a9b6df9c71f5c3cd580de8bb426890f4093414/gcc%2Fada%2Fprj-util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a9b6df9c71f5c3cd580de8bb426890f4093414/gcc%2Fada%2Fprj-util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.ads?ref=c1a9b6df9c71f5c3cd580de8bb426890f4093414", "patch": "@@ -233,6 +233,17 @@ package Prj.Util is\n    procedure Next (Iter : in out Source_Info_Iterator);\n    --  Advance the iterator to the next source in the project\n \n+   generic\n+      with procedure Action (Source : Source_Id);\n+   procedure For_Interface_Sources\n+     (Tree : Project_Tree_Ref; Project : Project_Id);\n+   --  Call Action for every sources that are needed to use Project. This\n+   --  is either the sources corresponding to the unit in the Interfaces\n+   --  attributes or all sources of the project. Note that only the body\n+   --  needed (because the unit if generic or contains some inline pragmas)\n+   --  are handled. This routine must be called only when the project as\n+   --  sucessfully been built.\n+\n private\n    type Text_File_Data is record\n       FD                  : File_Descriptor := Invalid_FD;"}]}