{"sha": "525d13b031ea53d127623316d6c7751ca89cb591", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI1ZDEzYjAzMWVhNTNkMTI3NjIzMzE2ZDZjNzc1MWNhODljYjU5MQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2011-01-20T00:19:07Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2011-01-20T00:19:07Z"}, "message": "tm.texi.in (BRANCH_COST): Englishify.\n\n\t* doc/tm.texi.in (BRANCH_COST): Englishify.\n\t* doc/tm.texi (BRANCH_COST): Likewise.\n\nFrom-SVN: r169043", "tree": {"sha": "d508222c687f98d91acee1a71a96e05b15e498a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d508222c687f98d91acee1a71a96e05b15e498a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/525d13b031ea53d127623316d6c7751ca89cb591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/525d13b031ea53d127623316d6c7751ca89cb591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/525d13b031ea53d127623316d6c7751ca89cb591", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/525d13b031ea53d127623316d6c7751ca89cb591/comments", "author": null, "committer": null, "parents": [{"sha": "34d2545c34f00f831c14f72cf9e1f902b2b638cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34d2545c34f00f831c14f72cf9e1f902b2b638cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34d2545c34f00f831c14f72cf9e1f902b2b638cf"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "3c9e65981b0418af2f0e32873517bc24aeb84d01", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525d13b031ea53d127623316d6c7751ca89cb591/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525d13b031ea53d127623316d6c7751ca89cb591/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=525d13b031ea53d127623316d6c7751ca89cb591", "patch": "@@ -6177,13 +6177,13 @@ are the same as to this target hook.\n @end deftypefn\n \n @defmac BRANCH_COST (@var{speed_p}, @var{predictable_p})\n-A C expression for the cost of a branch instruction.  A value of 1 is the\n-default; other values are interpreted relative to that. Parameter @var{speed_p}\n-is true when the branch in question should be optimized for speed.  When\n-it is false, @code{BRANCH_COST} should be returning value optimal for code size\n-rather then performance considerations.  @var{predictable_p} is true for well\n-predictable branches. On many architectures the @code{BRANCH_COST} can be\n-reduced then.\n+A C expression for the cost of a branch instruction.  A value of 1 is\n+the default; other values are interpreted relative to that. Parameter\n+@var{speed_p} is true when the branch in question should be optimized\n+for speed.  When it is false, @code{BRANCH_COST} should return a value\n+optimal for code size rather than performance.  @var{predictable_p} is\n+true for well-predicted branches. On many architectures the\n+@code{BRANCH_COST} can be reduced then.\n @end defmac\n \n Here are additional macros which do not specify precise relative costs,"}, {"sha": "71d7b46914b7c9d64a1ecba2a0812d5703398669", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525d13b031ea53d127623316d6c7751ca89cb591/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525d13b031ea53d127623316d6c7751ca89cb591/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=525d13b031ea53d127623316d6c7751ca89cb591", "patch": "@@ -6157,13 +6157,13 @@ are the same as to this target hook.\n @end deftypefn\n \n @defmac BRANCH_COST (@var{speed_p}, @var{predictable_p})\n-A C expression for the cost of a branch instruction.  A value of 1 is the\n-default; other values are interpreted relative to that. Parameter @var{speed_p}\n-is true when the branch in question should be optimized for speed.  When\n-it is false, @code{BRANCH_COST} should be returning value optimal for code size\n-rather then performance considerations.  @var{predictable_p} is true for well\n-predictable branches. On many architectures the @code{BRANCH_COST} can be\n-reduced then.\n+A C expression for the cost of a branch instruction.  A value of 1 is\n+the default; other values are interpreted relative to that. Parameter\n+@var{speed_p} is true when the branch in question should be optimized\n+for speed.  When it is false, @code{BRANCH_COST} should return a value\n+optimal for code size rather than performance.  @var{predictable_p} is\n+true for well-predicted branches. On many architectures the\n+@code{BRANCH_COST} can be reduced then.\n @end defmac\n \n Here are additional macros which do not specify precise relative costs,"}]}