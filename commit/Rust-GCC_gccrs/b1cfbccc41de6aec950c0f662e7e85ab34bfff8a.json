{"sha": "b1cfbccc41de6aec950c0f662e7e85ab34bfff8a", "node_id": "C_kwDOANBUbNoAKGIxY2ZiY2NjNDFkZTZhZWM5NTBjMGY2NjJlN2U4NWFiMzRiZmZmOGE", "commit": {"author": {"name": "Philipp Tomsich", "email": "philipp.tomsich@vrull.eu", "date": "2022-10-03T19:59:50Z"}, "committer": {"name": "Philipp Tomsich", "email": "philipp.tomsich@vrull.eu", "date": "2022-10-06T10:33:49Z"}, "message": "aarch64: fix off-by-one in reading cpuinfo\n\nFixes: 341573406b39\n\nDon't subtract one from the result of strnlen() when trying to point\nto the first character after the current string.  This issue would\ncause individual characters (where the 128 byte buffers are stitched\ntogether) to be lost.\n\ngcc/ChangeLog:\n\n\t* config/aarch64/driver-aarch64.cc (readline): Fix off-by-one.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/aarch64/cpunative/info_18: New test.\n\t* gcc.target/aarch64/cpunative/native_cpu_18.c: New test.\n\nSigned-off-by: Philipp Tomsich <philipp.tomsich@vrull.eu>", "tree": {"sha": "e136e634e3a239158ea348492741aefbd9ebc0bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e136e634e3a239158ea348492741aefbd9ebc0bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1cfbccc41de6aec950c0f662e7e85ab34bfff8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1cfbccc41de6aec950c0f662e7e85ab34bfff8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1cfbccc41de6aec950c0f662e7e85ab34bfff8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1cfbccc41de6aec950c0f662e7e85ab34bfff8a/comments", "author": {"login": "ptomsich", "id": 14983582, "node_id": "MDQ6VXNlcjE0OTgzNTgy", "avatar_url": "https://avatars.githubusercontent.com/u/14983582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptomsich", "html_url": "https://github.com/ptomsich", "followers_url": "https://api.github.com/users/ptomsich/followers", "following_url": "https://api.github.com/users/ptomsich/following{/other_user}", "gists_url": "https://api.github.com/users/ptomsich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptomsich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptomsich/subscriptions", "organizations_url": "https://api.github.com/users/ptomsich/orgs", "repos_url": "https://api.github.com/users/ptomsich/repos", "events_url": "https://api.github.com/users/ptomsich/events{/privacy}", "received_events_url": "https://api.github.com/users/ptomsich/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ptomsich", "id": 14983582, "node_id": "MDQ6VXNlcjE0OTgzNTgy", "avatar_url": "https://avatars.githubusercontent.com/u/14983582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptomsich", "html_url": "https://github.com/ptomsich", "followers_url": "https://api.github.com/users/ptomsich/followers", "following_url": "https://api.github.com/users/ptomsich/following{/other_user}", "gists_url": "https://api.github.com/users/ptomsich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptomsich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptomsich/subscriptions", "organizations_url": "https://api.github.com/users/ptomsich/orgs", "repos_url": "https://api.github.com/users/ptomsich/repos", "events_url": "https://api.github.com/users/ptomsich/events{/privacy}", "received_events_url": "https://api.github.com/users/ptomsich/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85333b9265720fc4e49397301cb16324d2b89aa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85333b9265720fc4e49397301cb16324d2b89aa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85333b9265720fc4e49397301cb16324d2b89aa7"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "2ae47c020d3e6e6c9b55691c7a57ec2abb0bd0e1", "filename": "gcc/config/aarch64/driver-aarch64.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1cfbccc41de6aec950c0f662e7e85ab34bfff8a/gcc%2Fconfig%2Faarch64%2Fdriver-aarch64.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1cfbccc41de6aec950c0f662e7e85ab34bfff8a/gcc%2Fconfig%2Faarch64%2Fdriver-aarch64.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fdriver-aarch64.cc?ref=b1cfbccc41de6aec950c0f662e7e85ab34bfff8a", "patch": "@@ -203,9 +203,9 @@ readline (FILE *f)\n \treturn std::string ();\n       /* If we're not at the end of the line then override the\n \t \\0 added by fgets.  */\n-      last = strnlen (buf, size) - 1;\n+      last = strnlen (buf, size);\n     }\n-  while (!feof (f) && buf[last] != '\\n');\n+  while (!feof (f) && last > 0 && buf[last - 1] != '\\n');\n \n   std::string result (buf);\n   free (buf);"}, {"sha": "25061a4abe83154f1fa2a5b0961aafc4da1cd822", "filename": "gcc/testsuite/gcc.target/aarch64/cpunative/info_18", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1cfbccc41de6aec950c0f662e7e85ab34bfff8a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Finfo_18", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1cfbccc41de6aec950c0f662e7e85ab34bfff8a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Finfo_18", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Finfo_18?ref=b1cfbccc41de6aec950c0f662e7e85ab34bfff8a", "patch": "@@ -0,0 +1,8 @@\n+processor\t: 0\n+BogoMIPS\t: 2000.00\n+Features\t: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm jscvt fcma lrcpc dcpop sha3 asimddp sha512 asimdfhm dit uscat ilrcpc flagm ssbs sb dcpodp flagm2 frint i8mm bf16 rng ecv\n+CPU implementer\t: 0xc0\n+CPU architecture: 8\n+CPU variant\t: 0x0\n+CPU part\t: 0xac3\n+CPU revision\t: 0"}, {"sha": "b5f0a3005f50cbf01edbcb8aefcc3c34aa11207f", "filename": "gcc/testsuite/gcc.target/aarch64/cpunative/native_cpu_18.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1cfbccc41de6aec950c0f662e7e85ab34bfff8a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1cfbccc41de6aec950c0f662e7e85ab34bfff8a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpunative%2Fnative_cpu_18.c?ref=b1cfbccc41de6aec950c0f662e7e85ab34bfff8a", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile { target { { aarch64*-*-linux*} && native } } } */\n+/* { dg-set-compiler-env-var GCC_CPUINFO \"$srcdir/gcc.target/aarch64/cpunative/info_18\" } */\n+/* { dg-additional-options \"-mcpu=native\" } */\n+\n+int main()\n+{\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler {\\.arch armv8.6-a\\+crc\\+fp16\\+aes\\+sha3\\+rng} } } */\n+\n+/* Test one where the boundary of buffer size would overwrite the last\n+   character read when stitching the fgets-calls together.  With the\n+   test data provided, this would truncate the 'sha512' into 'ha512'\n+   (dropping the 'sha3' feature). */"}]}