{"sha": "46121d60c508a382e89bd7c4c403e981da09ee4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYxMjFkNjBjNTA4YTM4MmU4OWJkN2M0YzQwM2U5ODFkYTA5ZWU0YQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-12-10T18:33:26Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-12-10T18:33:26Z"}, "message": "re PR target/64180 (PowerPC carry bit improvements)\n\n\tPR target/64180\n\t* config/rs6000/rs6000.md (*add<mode>3_internal1): Rename to\n\t\"*add<mode>3\".\n\t(*add<mode>3_internal2, *add<mode>3_internal3, and (their splitters):\n\tDelete.\n\t(*add<mode>3_dot, *add<mode>3_dot2): New.\n\t(*add<mode>3_imm_dot, *add<mode>3_imm_dot2): New.\n\nFrom-SVN: r218593", "tree": {"sha": "f29766ec9fd7a61ae5f98baa75ddc7c99f1801e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f29766ec9fd7a61ae5f98baa75ddc7c99f1801e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46121d60c508a382e89bd7c4c403e981da09ee4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46121d60c508a382e89bd7c4c403e981da09ee4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46121d60c508a382e89bd7c4c403e981da09ee4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46121d60c508a382e89bd7c4c403e981da09ee4a/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d262c86cc9dcc93ce1607100214e46e67783a6b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d262c86cc9dcc93ce1607100214e46e67783a6b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d262c86cc9dcc93ce1607100214e46e67783a6b6"}], "stats": {"total": 129, "additions": 84, "deletions": 45}, "files": [{"sha": "8ed3e8c9f3807d893f99f9b6424d785eff53d245", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46121d60c508a382e89bd7c4c403e981da09ee4a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46121d60c508a382e89bd7c4c403e981da09ee4a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46121d60c508a382e89bd7c4c403e981da09ee4a", "patch": "@@ -1,3 +1,13 @@\n+2014-12-10  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/64180\n+\t* config/rs6000/rs6000.md (*add<mode>3_internal1): Rename to\n+\t\"*add<mode>3\".\n+\t(*add<mode>3_internal2, *add<mode>3_internal3, and (their splitters):\n+\tDelete.\n+\t(*add<mode>3_dot, *add<mode>3_dot2): New.\n+\t(*add<mode>3_imm_dot, *add<mode>3_imm_dot2): New.\n+\n 2014-12-10  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/64180"}, {"sha": "6712443e051a2ea00a70ba4655cea1212b6a3fed", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 74, "deletions": 45, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46121d60c508a382e89bd7c4c403e981da09ee4a/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46121d60c508a382e89bd7c4c403e981da09ee4a/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=46121d60c508a382e89bd7c4c403e981da09ee4a", "patch": "@@ -1491,7 +1491,7 @@\n     }\n })\n \n-(define_insn \"*add<mode>3_internal1\"\n+(define_insn \"*add<mode>3\"\n   [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r,r\")\n \t(plus:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"%r,b,b\")\n \t\t  (match_operand:GPR 2 \"add_operand\" \"r,I,L\")))]\n@@ -1510,70 +1510,99 @@\n   \"addis %0,%1,ha16(%2)\"\n   [(set_attr \"type\" \"add\")])\n \n-(define_insn \"*add<mode>3_internal2\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC (plus:P (match_operand:P 1 \"gpc_reg_operand\" \"%r,r,r,r\")\n-\t\t\t    (match_operand:P 2 \"reg_or_short_operand\" \"r,I,r,I\"))\n+(define_insn_and_split \"*add<mode>3_dot\"\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (plus:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t      (match_operand:GPR 2 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:P 3 \"=r,r,r,r\"))]\n-  \"\"\n+   (clobber (match_scratch:GPR 0 \"=r,r\"))]\n+  \"<MODE>mode == Pmode\"\n   \"@\n-   add. %3,%1,%2\n-   addic. %3,%1,%2\n-   #\n+   add. %0,%1,%2\n    #\"\n-  [(set_attr \"type\" \"add,compare,compare,compare\")\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[3], CCmode)\"\n+  [(set (match_dup 0)\n+\t(plus:GPR (match_dup 1)\n+\t\t (match_dup 2)))\n+   (set (match_dup 3)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\"\n+  [(set_attr \"type\" \"add\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_cr0_operand\" \"\")\n-\t(compare:CC (plus:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"\")\n-\t\t\t      (match_operand:GPR 2 \"reg_or_short_operand\" \"\"))\n+(define_insn_and_split \"*add<mode>3_dot2\"\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (plus:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t      (match_operand:GPR 2 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:GPR 3 \"\"))]\n-  \"reload_completed\"\n-  [(set (match_dup 3)\n+   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n \t(plus:GPR (match_dup 1)\n-\t\t (match_dup 2)))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 3)\n+\t\t  (match_dup 2)))]\n+  \"<MODE>mode == Pmode\"\n+  \"@\n+   add. %0,%1,%2\n+   #\"\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[3], CCmode)\"\n+  [(set (match_dup 0)\n+\t(plus:GPR (match_dup 1)\n+\t\t  (match_dup 2)))\n+   (set (match_dup 3)\n+\t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n-  \"\")\n+  \"\"\n+  [(set_attr \"type\" \"add\")\n+   (set_attr \"dot\" \"yes\")\n+   (set_attr \"length\" \"4,8\")])\n \n-(define_insn \"*add<mode>3_internal3\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC (plus:P (match_operand:P 1 \"gpc_reg_operand\" \"%r,r,r,r\")\n-\t\t\t    (match_operand:P 2 \"reg_or_short_operand\" \"r,I,r,I\"))\n+(define_insn_and_split \"*add<mode>3_imm_dot\"\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (plus:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"%r,r\")\n+\t\t\t      (match_operand:GPR 2 \"short_cint_operand\" \"I,I\"))\n \t\t    (const_int 0)))\n-   (set (match_operand:P 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n-\t(plus:P (match_dup 1)\n-\t\t(match_dup 2)))]\n-  \"\"\n+   (clobber (match_scratch:GPR 0 \"=r,r\"))\n+   (clobber (reg:GPR CA_REGNO))]\n+  \"<MODE>mode == Pmode\"\n   \"@\n-   add. %0,%1,%2\n    addic. %0,%1,%2\n-   #\n    #\"\n-  [(set_attr \"type\" \"add,compare,compare,compare\")\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[3], CCmode)\"\n+  [(set (match_dup 0)\n+\t(plus:GPR (match_dup 1)\n+\t\t  (match_dup 2)))\n+   (set (match_dup 3)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\"\n+  [(set_attr \"type\" \"add\")\n    (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n+   (set_attr \"length\" \"4,8\")])\n \n-(define_split\n-  [(set (match_operand:CC 3 \"cc_reg_not_cr0_operand\" \"\")\n-\t(compare:CC (plus:P (match_operand:P 1 \"gpc_reg_operand\" \"\")\n-\t\t\t    (match_operand:P 2 \"reg_or_short_operand\" \"\"))\n+(define_insn_and_split \"*add<mode>3_imm_dot2\"\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (plus:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"%r,r\")\n+\t\t\t      (match_operand:GPR 2 \"short_cint_operand\" \"I,I\"))\n \t\t    (const_int 0)))\n-   (set (match_operand:P 0 \"gpc_reg_operand\" \"\")\n-\t(plus:P (match_dup 1) (match_dup 2)))]\n-  \"reload_completed\"\n+   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(plus:GPR (match_dup 1)\n+\t\t  (match_dup 2)))\n+   (clobber (reg:GPR CA_REGNO))]\n+  \"<MODE>mode == Pmode\"\n+  \"@\n+   addic. %0,%1,%2\n+   #\"\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[3], CCmode)\"\n   [(set (match_dup 0)\n-\t(plus:P (match_dup 1)\n-\t\t(match_dup 2)))\n+\t(plus:GPR (match_dup 1)\n+\t\t  (match_dup 2)))\n    (set (match_dup 3)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n-  \"\")\n+  \"\"\n+  [(set_attr \"type\" \"add\")\n+   (set_attr \"dot\" \"yes\")\n+   (set_attr \"length\" \"4,8\")])\n \n ;; Split an add that we can't do in one insn into two insns, each of which\n ;; does one 16-bit part.  This is used by combine.  Note that the low-order"}]}