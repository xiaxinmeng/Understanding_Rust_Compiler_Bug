{"sha": "74a5d8b9fe448b0b12402e99de63948e10be7382", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRhNWQ4YjlmZTQ0OGIwYjEyNDAyZTk5ZGU2Mzk0OGUxMGJlNzM4Mg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-02-23T16:35:25Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-02-23T16:35:25Z"}, "message": "re PR fortran/30660 (Allocatable components of a derived type \"require\" the SAVE attribute.)\n\n2007-02-23  Paul Thomas <pault@gcc.gnu.org>\n\n        PR fortran/30660\n        * resolve.c (has_default_initializer): New function.\n        (resolve_fl_variable): Call has_default_initializer to determine if\n        the derived type has a default initializer to its ultimate\n        components.\n\n2007-02-23  Paul Thomas <pault@gcc.gnu.org>\n\n        PR fortran/30660\n        * gfortran.dg/alloc_comp_basics_4.f90: Add component with an\n        allocatable component.\n\nFrom-SVN: r122263", "tree": {"sha": "fceb6d1d9d0b1d44e068a31c3230419fe5ff643f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fceb6d1d9d0b1d44e068a31c3230419fe5ff643f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74a5d8b9fe448b0b12402e99de63948e10be7382", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74a5d8b9fe448b0b12402e99de63948e10be7382", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74a5d8b9fe448b0b12402e99de63948e10be7382", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74a5d8b9fe448b0b12402e99de63948e10be7382/comments", "author": null, "committer": null, "parents": [{"sha": "0a8f8c4572b2f0cea7f56922122275d2ff76746c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a8f8c4572b2f0cea7f56922122275d2ff76746c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a8f8c4572b2f0cea7f56922122275d2ff76746c"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "777f926421b435082a645a73dc5409904793f0ca", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74a5d8b9fe448b0b12402e99de63948e10be7382/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74a5d8b9fe448b0b12402e99de63948e10be7382/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=74a5d8b9fe448b0b12402e99de63948e10be7382", "patch": "@@ -1,3 +1,12 @@\n+2007-02-23  Paul Thomas <pault@gcc.gnu.org>\n+\n+\tPR fortran/30660\n+\t* resolve.c (has_default_initializer): New function.\n+\t(resolve_fl_variable): Call has_default_initializer to determine if\n+\tthe derived type has a default initializer to its ultimate\n+\tcomponents.\n+\n+\n 2007-02-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \t* options.c (set_default_std_flags): New function to consolidate"}, {"sha": "a66d1ae98070855c7b0b9fec32eac0dedf3f5fbc", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74a5d8b9fe448b0b12402e99de63948e10be7382/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74a5d8b9fe448b0b12402e99de63948e10be7382/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=74a5d8b9fe448b0b12402e99de63948e10be7382", "patch": "@@ -5529,6 +5529,21 @@ resolve_fl_var_and_proc (gfc_symbol *sym, int mp_flag)\n }\n \n \n+static gfc_component *\n+has_default_initializer (gfc_symbol *der)\n+{\n+  gfc_component *c;\n+  for (c = der->components; c; c = c->next)\n+    if ((c->ts.type != BT_DERIVED && c->initializer)\n+        || (c->ts.type == BT_DERIVED\n+              && !c->pointer\n+              && has_default_initializer (c->ts.derived)))\n+      break;\n+\n+  return c;\n+}\n+\n+\n /* Resolve symbols with flavor variable.  */\n \n static try\n@@ -5676,9 +5691,7 @@ resolve_fl_variable (gfc_symbol *sym, int mp_flag)\n      components.  */\n   c = NULL;\n   if (sym->ts.type == BT_DERIVED && !(sym->value || flag))\n-    for (c = sym->ts.derived->components; c; c = c->next)\n-      if (c->initializer)\n-      break;\n+    c = has_default_initializer (sym->ts.derived);\n \n   /* 4th constraint in section 11.3:  \"If an object of a type for which\n      component-initialization is specified (R429) appears in the"}, {"sha": "45bed9f21a633d58a141579910ed7e95c355252b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74a5d8b9fe448b0b12402e99de63948e10be7382/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74a5d8b9fe448b0b12402e99de63948e10be7382/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=74a5d8b9fe448b0b12402e99de63948e10be7382", "patch": "@@ -1,3 +1,10 @@\n+2007-02-23  Paul Thomas <pault@gcc.gnu.org>\n+\n+\tPR fortran/30660\n+\t* gfortran.dg/alloc_comp_basics_4.f90: Add component with an\n+\tallocatable component.\n+\n+\n 2007-02-23  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.dg/torture/builtin-logb-1.c: New test."}, {"sha": "508d5670689f03243310a51a73f23e9be5fabe54", "filename": "gcc/testsuite/gfortran.dg/alloc_comp_basics_4.f90", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74a5d8b9fe448b0b12402e99de63948e10be7382/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_basics_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74a5d8b9fe448b0b12402e99de63948e10be7382/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_basics_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_basics_4.f90?ref=74a5d8b9fe448b0b12402e99de63948e10be7382", "patch": "@@ -6,8 +6,14 @@\n ! Contributed by Toon Moene <toon@moene.indiv.nluug.nl>\n !\n MODULE types_m\n+  TYPE coord_t\n+    INTEGER ncord\n+    REAL,ALLOCATABLE,DIMENSION(:) :: x, y\n+  END TYPE\n+\n   TYPE grib_t\n     REAL,DIMENSION(:),ALLOCATABLE :: vdata\n+   TYPE(coord_t) coords\n   END TYPE\n END MODULE\n "}]}