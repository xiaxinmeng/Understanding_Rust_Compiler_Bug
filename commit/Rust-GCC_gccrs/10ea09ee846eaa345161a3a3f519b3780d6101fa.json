{"sha": "10ea09ee846eaa345161a3a3f519b3780d6101fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBlYTA5ZWU4NDZlYWEzNDUxNjFhM2EzZjUxOWIzNzgwZDYxMDFmYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-26T09:10:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-26T09:10:21Z"}, "message": "gimplify: Fix -fcompare-debug differences caused by gimplify_body [PR94281]\n\nThe following testcase FAILs, because gimplify_body adds a GIMPLE_NOP only\nwhen there are no statements in the function and with -g there is a\nDEBUG_BEGIN_STMT, so it doesn't add it and due to -fno-tree-dce that never\ngets removed afterwards.  Similarly, if the body seq after gimplification\ncontains some DEBUG_BEGIN_STMTs plus a single gbind, then we could behave\ndifferently between -g0 and -g, by using that gbind as the body in the -g0\ncase and not in the -g case.\nThis patch fixes that by ignoring DEBUG_BEGIN_STMTs (other debug stmts can't\nappear at this point yet thankfully) during decisions and if we pick the\nsingle gbind and there are DEBUG_BEGIN_STMTs next to it, it moves them into\nthe gbind.\nWhile debugging this, I found also a bug in the gimple_seq_last_nondebug_stmt\nfunction, for a seq that has a single non-DEBUG_BEGIN_STMT statement\nfollowed by one or more DEBUG_BEGIN_STMTs it would return NULL rather than\nthe first statement.\n\n2020-03-26  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/94281\n\t* gimple.h (gimple_seq_first_nondebug_stmt): New function.\n\t(gimple_seq_last_nondebug_stmt): Don't return NULL if seq contains\n\ta single non-debug stmt followed by one or more debug stmts.\n\t* gimplify.c (gimplify_body): Use gimple_seq_first_nondebug_stmt\n\tinstead of gimple_seq_first_stmt, use gimple_seq_first_nondebug_stmt\n\tand gimple_seq_last_nondebug_stmt instead of gimple_seq_first and\n\tgimple_seq_last to check if outer_stmt gbind could be reused and\n\tif yes and it is surrounded by any debug stmts, move them into the\n\tgbind body.\n\n\t* g++.dg/debug/pr94281.C: New test.", "tree": {"sha": "fa1093ef2fea98dbc89a5336b18885639f2addfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa1093ef2fea98dbc89a5336b18885639f2addfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10ea09ee846eaa345161a3a3f519b3780d6101fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10ea09ee846eaa345161a3a3f519b3780d6101fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10ea09ee846eaa345161a3a3f519b3780d6101fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10ea09ee846eaa345161a3a3f519b3780d6101fa/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dab932d1519ba07fb4c49e6849ee7ceb02c0d603", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dab932d1519ba07fb4c49e6849ee7ceb02c0d603", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dab932d1519ba07fb4c49e6849ee7ceb02c0d603"}], "stats": {"total": 74, "additions": 70, "deletions": 4}, "files": [{"sha": "8005e1a91f7cccdaf0991e6afb9b49fc0751e387", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ea09ee846eaa345161a3a3f519b3780d6101fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ea09ee846eaa345161a3a3f519b3780d6101fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10ea09ee846eaa345161a3a3f519b3780d6101fa", "patch": "@@ -1,5 +1,16 @@\n 2020-03-26  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/94281\n+\t* gimple.h (gimple_seq_first_nondebug_stmt): New function.\n+\t(gimple_seq_last_nondebug_stmt): Don't return NULL if seq contains\n+\ta single non-debug stmt followed by one or more debug stmts.\n+\t* gimplify.c (gimplify_body): Use gimple_seq_first_nondebug_stmt\n+\tinstead of gimple_seq_first_stmt, use gimple_seq_first_nondebug_stmt\n+\tand gimple_seq_last_nondebug_stmt instead of gimple_seq_first and\n+\tgimple_seq_last to check if outer_stmt gbind could be reused and\n+\tif yes and it is surrounded by any debug stmts, move them into the\n+\tgbind body.\n+\n \tPR rtl-optimization/92264\n \t* var-tracking.c (add_stores): Call cselib_set_value_sp_based even\n \tfor sp based values in !frame_pointer_needed"}, {"sha": "305d98f5438b2b5c9e2dda57035c5343ba4099a1", "filename": "gcc/gimple.h", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ea09ee846eaa345161a3a3f519b3780d6101fa/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ea09ee846eaa345161a3a3f519b3780d6101fa/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=10ea09ee846eaa345161a3a3f519b3780d6101fa", "patch": "@@ -4728,6 +4728,18 @@ is_gimple_debug (const gimple *gs)\n }\n \n \n+/* Return the first nondebug statement in GIMPLE sequence S.  */\n+\n+static inline gimple *\n+gimple_seq_first_nondebug_stmt (gimple_seq s)\n+{\n+  gimple_seq_node n = gimple_seq_first (s);\n+  while (n && is_gimple_debug (n))\n+    n = n->next;\n+  return n;\n+}\n+\n+\n /* Return the last nondebug statement in GIMPLE sequence S.  */\n \n static inline gimple *\n@@ -4737,7 +4749,7 @@ gimple_seq_last_nondebug_stmt (gimple_seq s)\n   for (n = gimple_seq_last (s);\n        n && is_gimple_debug (n);\n        n = n->prev)\n-    if (n->prev == s)\n+    if (n == s)\n       return NULL;\n   return n;\n }"}, {"sha": "787435c38cd6dae51734e8f2b360fbc6df00f891", "filename": "gcc/gimplify.c", "status": "modified", "additions": 32, "deletions": 3, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ea09ee846eaa345161a3a3f519b3780d6101fa/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ea09ee846eaa345161a3a3f519b3780d6101fa/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=10ea09ee846eaa345161a3a3f519b3780d6101fa", "patch": "@@ -14849,7 +14849,7 @@ gimplify_body (tree fndecl, bool do_parms)\n   /* Gimplify the function's body.  */\n   seq = NULL;\n   gimplify_stmt (&DECL_SAVED_TREE (fndecl), &seq);\n-  outer_stmt = gimple_seq_first_stmt (seq);\n+  outer_stmt = gimple_seq_first_nondebug_stmt (seq);\n   if (!outer_stmt)\n     {\n       outer_stmt = gimple_build_nop ();\n@@ -14859,8 +14859,37 @@ gimplify_body (tree fndecl, bool do_parms)\n   /* The body must contain exactly one statement, a GIMPLE_BIND.  If this is\n      not the case, wrap everything in a GIMPLE_BIND to make it so.  */\n   if (gimple_code (outer_stmt) == GIMPLE_BIND\n-      && gimple_seq_first (seq) == gimple_seq_last (seq))\n-    outer_bind = as_a <gbind *> (outer_stmt);\n+      && (gimple_seq_first_nondebug_stmt (seq)\n+\t  == gimple_seq_last_nondebug_stmt (seq)))\n+    {\n+      outer_bind = as_a <gbind *> (outer_stmt);\n+      if (gimple_seq_first_stmt (seq) != outer_stmt\n+\t  || gimple_seq_last_stmt (seq) != outer_stmt)\n+\t{\n+\t  /* If there are debug stmts before or after outer_stmt, move them\n+\t     inside of outer_bind body.  */\n+\t  gimple_stmt_iterator gsi = gsi_for_stmt (outer_stmt, &seq);\n+\t  gimple_seq second_seq = NULL;\n+\t  if (gimple_seq_first_stmt (seq) != outer_stmt\n+\t      && gimple_seq_last_stmt (seq) != outer_stmt)\n+\t    {\n+\t      second_seq = gsi_split_seq_after (gsi);\n+\t      gsi_remove (&gsi, false);\n+\t    }\n+\t  else if (gimple_seq_first_stmt (seq) != outer_stmt)\n+\t    gsi_remove (&gsi, false);\n+\t  else\n+\t    {\n+\t      gsi_remove (&gsi, false);\n+\t      second_seq = seq;\n+\t      seq = NULL;\n+\t    }\n+\t  gimple_seq_add_seq_without_update (&seq,\n+\t\t\t\t\t     gimple_bind_body (outer_bind));\n+\t  gimple_seq_add_seq_without_update (&seq, second_seq);\n+\t  gimple_bind_set_body (outer_bind, seq);\n+\t}\n+    }\n   else\n     outer_bind = gimple_build_bind (NULL_TREE, seq, NULL);\n "}, {"sha": "ea31955bbe2142bfe644056aa7cbb67a810d7071", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ea09ee846eaa345161a3a3f519b3780d6101fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ea09ee846eaa345161a3a3f519b3780d6101fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=10ea09ee846eaa345161a3a3f519b3780d6101fa", "patch": "@@ -1,5 +1,8 @@\n 2020-03-26  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/94281\n+\t* g++.dg/debug/pr94281.C: New test.\n+\n \tPR c++/81349\n \t* g++.dg/cpp1z/pr81349.C: New test.\n "}, {"sha": "06386917423f10304c202de56d4e2cfe3ca72d68", "filename": "gcc/testsuite/g++.dg/debug/pr94281.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10ea09ee846eaa345161a3a3f519b3780d6101fa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr94281.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10ea09ee846eaa345161a3a3f519b3780d6101fa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr94281.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr94281.C?ref=10ea09ee846eaa345161a3a3f519b3780d6101fa", "patch": "@@ -0,0 +1,11 @@\n+// PR debug/94281\n+// { dg-do compile }\n+// { dg-options \"-O1 -fno-tree-dce -fipa-icf -fno-tree-forwprop -fcompare-debug\" }\n+\n+void fn1()\n+{\n+}\n+void fn2()\n+{\n+  ;\n+}"}]}