{"sha": "26144dde3b68a331a8db86a9c8eaaa63d572bce9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYxNDRkZGUzYjY4YTMzMWE4ZGI4NmE5YzhlYWFhNjNkNTcyYmNlOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-04-15T02:23:05Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-04-15T02:23:05Z"}, "message": "re PR c++/70528 (bogus error: constructor required before non-static data member)\n\n\tPR c++/70528\n\n\t* class.c (type_has_constexpr_default_constructor): Return true\n\tfor an implicitly declared constructor.\n\nFrom-SVN: r235002", "tree": {"sha": "c7a53813d3d706b0dc74aadf3bfb2d89e39d703d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7a53813d3d706b0dc74aadf3bfb2d89e39d703d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26144dde3b68a331a8db86a9c8eaaa63d572bce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26144dde3b68a331a8db86a9c8eaaa63d572bce9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26144dde3b68a331a8db86a9c8eaaa63d572bce9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26144dde3b68a331a8db86a9c8eaaa63d572bce9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eab43e698f00ecc489453c3811ec98d9cc094f69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab43e698f00ecc489453c3811ec98d9cc094f69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eab43e698f00ecc489453c3811ec98d9cc094f69"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "12900d3cd45b3d03b2638bc388fc6489b1cb605e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26144dde3b68a331a8db86a9c8eaaa63d572bce9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26144dde3b68a331a8db86a9c8eaaa63d572bce9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=26144dde3b68a331a8db86a9c8eaaa63d572bce9", "patch": "@@ -1,5 +1,9 @@\n 2016-04-14  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/70528\n+\t* class.c (type_has_constexpr_default_constructor): Return true\n+\tfor an implicitly declared constructor.\n+\n \tPR c++/70622\n \t* parser.c (cp_parser_init_declarator): Add auto_result parm.\n \t(cp_parser_simple_declaration): Pass it."}, {"sha": "e6d5bb0fe9c1f1d101d5b9686d33f09bb3a4ca18", "filename": "gcc/cp/class.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26144dde3b68a331a8db86a9c8eaaa63d572bce9/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26144dde3b68a331a8db86a9c8eaaa63d572bce9/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=26144dde3b68a331a8db86a9c8eaaa63d572bce9", "patch": "@@ -3346,7 +3346,6 @@ add_implicitly_declared_members (tree t, tree* access_decls,\n       CLASSTYPE_LAZY_DEFAULT_CTOR (t) = 1;\n       if (cxx_dialect >= cxx11)\n \tTYPE_HAS_CONSTEXPR_CTOR (t)\n-\t  /* This might force the declaration.  */\n \t  = type_has_constexpr_default_constructor (t);\n     }\n \n@@ -5349,8 +5348,11 @@ type_has_constexpr_default_constructor (tree t)\n     {\n       if (!TYPE_HAS_COMPLEX_DFLT (t))\n \treturn trivial_default_constructor_is_constexpr (t);\n-      /* Non-trivial, we need to check subobject constructors.  */\n-      lazily_declare_fn (sfk_constructor, t);\n+      /* Assume it's constexpr to avoid unnecessary instantiation; if the\n+\t definition would have made the class non-literal, it will still be\n+\t non-literal because of the base or member in question, and that\n+\t gives a better diagnostic.  */\n+      return true;\n     }\n   fns = locate_ctor (t);\n   return (fns && DECL_DECLARED_CONSTEXPR_P (fns));"}, {"sha": "42ca30a38ce10b11720312db3e6175e2c6136b93", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor12.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26144dde3b68a331a8db86a9c8eaaa63d572bce9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26144dde3b68a331a8db86a9c8eaaa63d572bce9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor12.C?ref=26144dde3b68a331a8db86a9c8eaaa63d572bce9", "patch": "@@ -3,6 +3,7 @@\n \n template <typename Tp>\n struct C {\n+  C() = default;\n   constexpr C(const Tp& r) { }\n };\n "}, {"sha": "8d352d0bb99d25cd8ad3cf4bb6dbb8bcff28b805", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-default-ctor.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26144dde3b68a331a8db86a9c8eaaa63d572bce9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-default-ctor.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26144dde3b68a331a8db86a9c8eaaa63d572bce9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-default-ctor.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-default-ctor.C?ref=26144dde3b68a331a8db86a9c8eaaa63d572bce9", "patch": "@@ -7,6 +7,6 @@ struct A {\n struct B: A { };\n constexpr int f(B b) { return b.i; }\n \n-struct C { C(); };\t       // { dg-message \"calls non-constexpr\" }\n-struct D: C { };\t       // { dg-message \"no constexpr constructor\" }\n+struct C { C(); };\t       // { dg-message \"\" }\n+struct D: C { };\t       // { dg-message \"\" }\n constexpr int g(D d) { return 42; } // { dg-error \"invalid type\" }"}, {"sha": "bf95b2443c79e83a6cc08dd1eb8fa9d9990051cf", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ice6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26144dde3b68a331a8db86a9c8eaaa63d572bce9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26144dde3b68a331a8db86a9c8eaaa63d572bce9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ice6.C?ref=26144dde3b68a331a8db86a9c8eaaa63d572bce9", "patch": "@@ -6,6 +6,6 @@ struct A\n   A(int);\n };\n \n-struct B : A {};                   // { dg-error \"no matching\" }\n+struct B : A {};                   // { dg-message \"\" }\n \n constexpr int foo(B) { return 0; } // { dg-error \"invalid type\" }"}, {"sha": "7e2d58b422efc245652eb0b7c97ee52fb701d5da", "filename": "gcc/testsuite/g++.dg/cpp0x/inh-ctor19.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26144dde3b68a331a8db86a9c8eaaa63d572bce9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26144dde3b68a331a8db86a9c8eaaa63d572bce9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor19.C?ref=26144dde3b68a331a8db86a9c8eaaa63d572bce9", "patch": "@@ -8,7 +8,7 @@ struct A\n \n struct B : A\n {\n-  using A::A;   // { dg-error \"inherited\" }\n+  using A::A;\n };\n \n constexpr B b;  // { dg-error \"literal\" }"}, {"sha": "af1c84e1e94468289ae420ab9f5a48907401c177", "filename": "gcc/testsuite/g++.dg/cpp0x/pr70528.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26144dde3b68a331a8db86a9c8eaaa63d572bce9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr70528.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26144dde3b68a331a8db86a9c8eaaa63d572bce9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr70528.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr70528.C?ref=26144dde3b68a331a8db86a9c8eaaa63d572bce9", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/70258\n+// { dg-do compile { target c++11 } }\n+\n+template <class T>\n+struct H\n+{\n+  template <typename A = T, typename = decltype (A())>\n+  H ();\n+};\n+\n+struct J {\n+  struct K {\n+    int First = 0;\n+  };\n+  H<K> FunctionMDInfo;\n+};"}]}