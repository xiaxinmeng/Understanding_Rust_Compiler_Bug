{"sha": "e5012ba5ec6637f89f3d100821cc3fe78dfa9994", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUwMTJiYTVlYzY2MzdmODlmM2QxMDA4MjFjYzNmZTc4ZGZhOTk5NA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-09-29T17:36:18Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-09-29T17:36:18Z"}, "message": "[multiple changes]\n\n2003-09-29  Paolo Carlini  <pcarlini@unitus.it>\n\n\tPR libstdc++/12296\n\t* include/bits/istream.tcc (peek): Set eofbit if sgetc\n\treturns eof.\n\t* testsuite/27_io/basic_istream/peek/char/12296.cc:\n\tNew, from the PR.\n\n2003-09-29  Nathan Myers  <ncm@cantrip.org>\n\t    Paolo Carlini  <pcarlini@unitus.it>\n\n\tPR libstdc++/11400\n\t* include/bits/stl_algo.h (search_n):\n\tUse iterator_traits<>::difference_type for __n.\n\t* testsuite/25_algorithms/search_n/11400.cc: New, from the PR.\n\nFrom-SVN: r71911", "tree": {"sha": "f5fa10c57d387828ff902347673353a40f932323", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5fa10c57d387828ff902347673353a40f932323"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5012ba5ec6637f89f3d100821cc3fe78dfa9994", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5012ba5ec6637f89f3d100821cc3fe78dfa9994", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5012ba5ec6637f89f3d100821cc3fe78dfa9994", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5012ba5ec6637f89f3d100821cc3fe78dfa9994/comments", "author": null, "committer": null, "parents": [{"sha": "38b35623d39f02a596440e8c3845f9aa56b33893", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38b35623d39f02a596440e8c3845f9aa56b33893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38b35623d39f02a596440e8c3845f9aa56b33893"}], "stats": {"total": 99, "additions": 96, "deletions": 3}, "files": [{"sha": "08ce582dc9cc5f3380248165b0911939af9ec77e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5012ba5ec6637f89f3d100821cc3fe78dfa9994/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5012ba5ec6637f89f3d100821cc3fe78dfa9994/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e5012ba5ec6637f89f3d100821cc3fe78dfa9994", "patch": "@@ -1,3 +1,19 @@\n+2003-09-29  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\tPR libstdc++/12296\n+\t* include/bits/istream.tcc (peek): Set eofbit if sgetc\n+\treturns eof.\n+\t* testsuite/27_io/basic_istream/peek/char/12296.cc:\n+\tNew, from the PR.\n+\n+2003-09-29  Nathan Myers  <ncm@cantrip.org>\n+\t    Paolo Carlini  <pcarlini@unitus.it>\n+\n+\tPR libstdc++/11400\n+\t* include/bits/stl_algo.h (search_n):\n+\tUse iterator_traits<>::difference_type for __n.\n+\t* testsuite/25_algorithms/search_n/11400.cc: New, from the PR.\n+\n 2003-09-29  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* testsuite/22_locale/locale/cons/12352.cc:"}, {"sha": "bf583377e725e2273e252470162c559c0a63a44d", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5012ba5ec6637f89f3d100821cc3fe78dfa9994/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5012ba5ec6637f89f3d100821cc3fe78dfa9994/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=e5012ba5ec6637f89f3d100821cc3fe78dfa9994", "patch": "@@ -761,7 +761,11 @@ namespace std\n       if (__cerb)\n \t{\n \t  try \n-\t    { __c = this->rdbuf()->sgetc(); }\n+\t    {\n+\t      __c = this->rdbuf()->sgetc();\n+\t      if (traits_type::eq_int_type(__c, traits_type::eof()))\n+\t\tthis->setstate(ios_base::eofbit);\n+\t    }\n \t  catch(...)\n \t    {\n \t      // 27.6.1.3 paragraph 1"}, {"sha": "598eb0f01c9cafee095fc76df7ed2c81ef42d687", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5012ba5ec6637f89f3d100821cc3fe78dfa9994/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5012ba5ec6637f89f3d100821cc3fe78dfa9994/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=e5012ba5ec6637f89f3d100821cc3fe78dfa9994", "patch": "@@ -609,7 +609,7 @@ namespace std\n       else {\n \t__first = std::find(__first, __last, __val);\n \twhile (__first != __last) {\n-\t  _Integer __n = __count - 1;\n+\t  typename iterator_traits<_ForwardIterator>::difference_type __n = __count - 1;\n \t  _ForwardIterator __i = __first;\n \t  ++__i;\n \t  while (__i != __last && __n != 0 && *__i == __val) {\n@@ -661,7 +661,7 @@ namespace std\n \t  ++__first;\n \t}\n \twhile (__first != __last) {\n-\t  _Integer __n = __count - 1;\n+\t  typename iterator_traits<_ForwardIterator>::difference_type __n = __count - 1;\n \t  _ForwardIterator __i = __first;\n \t  ++__i;\n \t  while (__i != __last && __n != 0 && __binary_pred(*__i, __val)) {"}, {"sha": "a7003768ee2a20f7883ca09542f2847111c745c6", "filename": "libstdc++-v3/testsuite/25_algorithms/search_n/11400.cc", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5012ba5ec6637f89f3d100821cc3fe78dfa9994/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsearch_n%2F11400.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5012ba5ec6637f89f3d100821cc3fe78dfa9994/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsearch_n%2F11400.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsearch_n%2F11400.cc?ref=e5012ba5ec6637f89f3d100821cc3fe78dfa9994", "patch": "@@ -0,0 +1,32 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 25.1.9 [lib.alg.search]\n+\n+// { dg-do compile }\n+\n+#include <algorithm>\n+#include <functional>\n+\n+struct Integral { operator int() const; };\n+\n+namespace std\n+{\n+  template int* search_n (int*, int*, Integral, const int&);\n+  template int* search_n (int*, int*, Integral, const int&, greater<int>);\n+}"}, {"sha": "8b4ef74e423c99063559e0b637ff78614fba7a06", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/peek/char/12296.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5012ba5ec6637f89f3d100821cc3fe78dfa9994/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fchar%2F12296.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5012ba5ec6637f89f3d100821cc3fe78dfa9994/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fchar%2F12296.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fpeek%2Fchar%2F12296.cc?ref=e5012ba5ec6637f89f3d100821cc3fe78dfa9994", "patch": "@@ -0,0 +1,41 @@\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/12296\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  istringstream stream;\n+  VERIFY( stream.rdstate() == ios_base::goodbit );\n+  istringstream::int_type c = stream.peek();\n+  VERIFY( c == istringstream::traits_type::eof() );\n+  VERIFY( stream.rdstate() == ios_base::eofbit );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}