{"sha": "93dfac24adf650e093d21f71193072626595a37d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNkZmFjMjRhZGY2NTBlMDkzZDIxZjcxMTkzMDcyNjI2NTk1YTM3ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-04-22T18:52:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-04-22T18:52:48Z"}, "message": "re PR tree-optimization/48717 (integer wrong code bug)\n\n\tPR tree-optimization/48717\n\t* tree-ssa-forwprop.c (associate_plusminus): For A + ~A and\n\t~A + A optimizations use build_int_cst_type instead of build_int_cst.\n\n\t* gcc.c-torture/execute/pr48717.c: New test.\n\nFrom-SVN: r172868", "tree": {"sha": "2bf01e9f8e4fb935acc4ef6d566f351cce6b5acd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bf01e9f8e4fb935acc4ef6d566f351cce6b5acd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93dfac24adf650e093d21f71193072626595a37d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93dfac24adf650e093d21f71193072626595a37d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93dfac24adf650e093d21f71193072626595a37d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93dfac24adf650e093d21f71193072626595a37d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1d284ec5c859481b080f19d5ddc13e2580c708ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d284ec5c859481b080f19d5ddc13e2580c708ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d284ec5c859481b080f19d5ddc13e2580c708ef"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "a30a78cb0cd7cc53f674730223df5546b61aa25e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dfac24adf650e093d21f71193072626595a37d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dfac24adf650e093d21f71193072626595a37d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93dfac24adf650e093d21f71193072626595a37d", "patch": "@@ -1,3 +1,9 @@\n+2011-04-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/48717\n+\t* tree-ssa-forwprop.c (associate_plusminus): For A + ~A and\n+\t~A + A optimizations use build_int_cst_type instead of build_int_cst.\n+\n 2011-04-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/48723"}, {"sha": "639886aadcd6fb49296d44bc242991f08e6bc49e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dfac24adf650e093d21f71193072626595a37d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dfac24adf650e093d21f71193072626595a37d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=93dfac24adf650e093d21f71193072626595a37d", "patch": "@@ -1,3 +1,8 @@\n+2011-04-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/48717\n+\t* gcc.c-torture/execute/pr48717.c: New test.\n+\n 2011-04-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/48723"}, {"sha": "a746374a26d13ce8c31f141e679e9ce47570d664", "filename": "gcc/testsuite/gcc.c-torture/execute/pr48717.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dfac24adf650e093d21f71193072626595a37d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr48717.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dfac24adf650e093d21f71193072626595a37d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr48717.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr48717.c?ref=93dfac24adf650e093d21f71193072626595a37d", "patch": "@@ -0,0 +1,26 @@\n+/* PR tree-optimization/48717 */\n+\n+extern void abort (void);\n+\n+int v = 1, w;\n+\n+unsigned short\n+foo (unsigned short x, unsigned short y)\n+{\n+  return x + y;\n+}\n+\n+void\n+bar (void)\n+{\n+  v = foo (~w, w);\n+}\n+\n+int\n+main ()\n+{\n+  bar ();\n+  if (v != (unsigned short) -1)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "f26c47eab4e9b1e34c666eb773b3ba2345537a87", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93dfac24adf650e093d21f71193072626595a37d/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93dfac24adf650e093d21f71193072626595a37d/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=93dfac24adf650e093d21f71193072626595a37d", "patch": "@@ -1815,7 +1815,7 @@ associate_plusminus (gimple stmt)\n \t\t{\n \t\t  /* ~A + A -> -1.  */\n \t\t  code = INTEGER_CST;\n-\t\t  rhs1 = build_int_cst (TREE_TYPE (rhs2), -1);\n+\t\t  rhs1 = build_int_cst_type (TREE_TYPE (rhs2), -1);\n \t\t  rhs2 = NULL_TREE;\n \t\t  gimple_assign_set_rhs_with_ops (&gsi, code, rhs1, NULL_TREE);\n \t\t  gcc_assert (gsi_stmt (gsi) == stmt);\n@@ -1915,7 +1915,7 @@ associate_plusminus (gimple stmt)\n \t\t{\n \t\t  /* A + ~A -> -1.  */\n \t\t  code = INTEGER_CST;\n-\t\t  rhs1 = build_int_cst (TREE_TYPE (rhs1), -1);\n+\t\t  rhs1 = build_int_cst_type (TREE_TYPE (rhs1), -1);\n \t\t  rhs2 = NULL_TREE;\n \t\t  gimple_assign_set_rhs_with_ops (&gsi, code, rhs1, NULL_TREE);\n \t\t  gcc_assert (gsi_stmt (gsi) == stmt);"}]}