{"sha": "cb2eb96f4d81b3ce61fd0070b59bfaf568c04f31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IyZWI5NmY0ZDgxYjNjZTYxZmQwMDcwYjU5YmZhZjU2OGMwNGYzMQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-07-19T05:13:56Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-07-19T05:13:56Z"}, "message": "re PR middle-end/28283 (SuperH: Very unoptimal code generated for 64-bit ints)\n\n\n\tPR middle-end/28283\n\t* expmed.c (expand_shift): Additionally check that the shift_cost\n\tis not MAX_COST and that INTVAL(op1) is less than MAX_BITS_PER_WORD\n\tbefore implementing a LSHIFT_EXPR as a sequence of additions.\n\t* config/sh/sh.c (shift_costs): Return MAX_COST to inform the\n\tmiddle-end that DImode shifts need to be synthesized by expand.\n\nFrom-SVN: r115578", "tree": {"sha": "3487eac9da851d55f914f10ff317d63bd8311b83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3487eac9da851d55f914f10ff317d63bd8311b83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb2eb96f4d81b3ce61fd0070b59bfaf568c04f31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb2eb96f4d81b3ce61fd0070b59bfaf568c04f31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb2eb96f4d81b3ce61fd0070b59bfaf568c04f31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb2eb96f4d81b3ce61fd0070b59bfaf568c04f31/comments", "author": null, "committer": null, "parents": [{"sha": "f604fc3b2ea1d6738af942668d16ddd5cd2663a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f604fc3b2ea1d6738af942668d16ddd5cd2663a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f604fc3b2ea1d6738af942668d16ddd5cd2663a8"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "24bf834c7bcb614d98228a7205a84048ef9e416f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2eb96f4d81b3ce61fd0070b59bfaf568c04f31/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2eb96f4d81b3ce61fd0070b59bfaf568c04f31/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb2eb96f4d81b3ce61fd0070b59bfaf568c04f31", "patch": "@@ -1,3 +1,12 @@\n+2006-07-18  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/28283\n+\t* expmed.c (expand_shift): Additionally check that the shift_cost\n+\tis not MAX_COST and that INTVAL(op1) is less than MAX_BITS_PER_WORD\n+\tbefore implementing a LSHIFT_EXPR as a sequence of additions.\n+\t* config/sh/sh.c (shift_costs): Return MAX_COST to inform the\n+\tmiddle-end that DImode shifts need to be synthesized by expand.\n+\n 2006-07-18  Diego Novillo  <dnovillo@redhat.com>\n \n \tPR 28410"}, {"sha": "15eae4c7cd713c666acfe87b166d1f75874178a9", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2eb96f4d81b3ce61fd0070b59bfaf568c04f31/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2eb96f4d81b3ce61fd0070b59bfaf568c04f31/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=cb2eb96f4d81b3ce61fd0070b59bfaf568c04f31", "patch": "@@ -1944,7 +1944,7 @@ shiftcosts (rtx x)\n \treturn 2;\n \n       /* Everything else is invalid, because there is no pattern for it.  */\n-      return 10000;\n+      return MAX_COST;\n     }\n   /* If shift by a non constant, then this will be expensive.  */\n   if (GET_CODE (XEXP (x, 1)) != CONST_INT)"}, {"sha": "0f3a14df509aaeeb72cf93df63418acbd342bc3b", "filename": "gcc/expmed.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2eb96f4d81b3ce61fd0070b59bfaf568c04f31/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2eb96f4d81b3ce61fd0070b59bfaf568c04f31/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=cb2eb96f4d81b3ce61fd0070b59bfaf568c04f31", "patch": "@@ -2217,7 +2217,9 @@ expand_shift (enum tree_code code, enum machine_mode mode, rtx shifted,\n       && GET_CODE (op1) == CONST_INT\n       && INTVAL (op1) > 0\n       && INTVAL (op1) < GET_MODE_BITSIZE (mode)\n-      && shift_cost[mode][INTVAL (op1)] > INTVAL (op1) * add_cost[mode])\n+      && INTVAL (op1) < MAX_BITS_PER_WORD\n+      && shift_cost[mode][INTVAL (op1)] > INTVAL (op1) * add_cost[mode]\n+      && shift_cost[mode][INTVAL (op1)] != MAX_COST)\n     {\n       int i;\n       for (i = 0; i < INTVAL (op1); i++)"}]}