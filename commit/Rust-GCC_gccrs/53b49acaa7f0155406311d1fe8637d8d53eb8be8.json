{"sha": "53b49acaa7f0155406311d1fe8637d8d53eb8be8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNiNDlhY2FhN2YwMTU1NDA2MzExZDFmZTg2MzdkOGQ1M2ViOGJlOA==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-09-01T17:58:18Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-09-01T17:58:18Z"}, "message": "config.gcc: Remove host-specific stuff which is unused here since the introduction of...\n\n\t* config.gcc: Remove host-specific stuff which is unused here\n\tsince the introduction of config.host.\n\nFrom-SVN: r70978", "tree": {"sha": "13de98b375682ba303d47cd256b2997317bf78d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13de98b375682ba303d47cd256b2997317bf78d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53b49acaa7f0155406311d1fe8637d8d53eb8be8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b49acaa7f0155406311d1fe8637d8d53eb8be8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53b49acaa7f0155406311d1fe8637d8d53eb8be8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b49acaa7f0155406311d1fe8637d8d53eb8be8/comments", "author": null, "committer": null, "parents": [{"sha": "330532ab094f0f61e869eef0a04bf41269ff062b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/330532ab094f0f61e869eef0a04bf41269ff062b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/330532ab094f0f61e869eef0a04bf41269ff062b"}], "stats": {"total": 67, "additions": 3, "deletions": 64}, "files": [{"sha": "47bf7928c9c9484fe6113287d9b5fb7b9ce2c99b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b49acaa7f0155406311d1fe8637d8d53eb8be8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b49acaa7f0155406311d1fe8637d8d53eb8be8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53b49acaa7f0155406311d1fe8637d8d53eb8be8", "patch": "@@ -1,5 +1,8 @@\n 2003-09-01  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n+\t* config.gcc: Remove host-specific stuff which is unused here\n+\tsince the introduction of config.host.\n+\n \t* doc/fragments.texi: Mention config.host.\n \t* doc/sourcebuild.texi: Mention config.host.  Give brief descriptions\n \tof config.build, config.host, and config.gcc."}, {"sha": "e6b22e7f27f7e59f8536346898a972c51a2f0f0d", "filename": "gcc/config.gcc", "status": "modified", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b49acaa7f0155406311d1fe8637d8d53eb8be8/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b49acaa7f0155406311d1fe8637d8d53eb8be8/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=53b49acaa7f0155406311d1fe8637d8d53eb8be8", "patch": "@@ -86,8 +86,6 @@\n #  extra_headers\tList of used header files from the directory\n #\t\t\tconfig/${cpu_type}.\n #\n-#  host_xmake_file\tList of host-specific makefile-fragments.\n-#\n #  extra_passes\t\tList of extra executables compiled for this target\n #\t\t\tmachine, used for compiling from source to object.\n #\n@@ -96,14 +94,6 @@\n #\n #  extra_programs\tLike extra_passes, but these are used when linking.\n #\n-#  host_extra_objs\tList of extra host-dependent objects that should\n-#\t\t\tbe linked into the compiler proper.\n-#\n-#  host_extra_gcc_objs\tList of extra host-dependent objects that should\n-#\t\t\tbe linked into the gcc driver.\n-#\n-#  out_host_hook_obj\tAn object file that provides the host hooks.\n-#\n #  c_target_objs\tList of extra target-dependent objects that be\n #\t\t\tlinked into the C compiler only.\n #\n@@ -112,12 +102,6 @@\n #\n #  target_gtfiles       List of extra source files with type information.\n #\n-#  host_xm_defines\tList of macros to define when compiling for the\n-#\t\t\thost machine.\n-#\n-#  host_xm_file\t\tList of files to include when compiling for the\n-#\t\t\thost machine.\n-#\n #  xm_defines\t\tList of macros to define when compiling for the\n #\t\t\ttarget machine.\n #\n@@ -133,9 +117,6 @@\n #\t\t\tSet to yes if gdb needs a dir command with\n #\t\t\t`dirname $out_file`.\n #\n-#  host_exeext\t\tSet to the suffix, if the host machine requires\n-#\t\t\texecutables to have a file name suffix.\n-#\n #  thread_file\t\tSet to control which thread package to use.\n #\n #  gas\t\t\tSet to yes or no depending on whether the target\n@@ -155,33 +136,19 @@\n # The following variables are used in each case-construct to build up the\n # outgoing variables:\n #\n-#  xmake_file\t\tMakefile-fragment when this system is as a host,\n-#\t\t\tfor host_xmake_file.\n-#\n-#  extra_host_objs\tList of extra objects that should be linked into\n-#\t\t\tthe compiler proper when this system is a host,\n-#\t\t\tfor host_extra_objs.\n-#\n-#  host_hook_obj\tAn object file that provides the host hooks.\n-#\n-#  exeext\t\tThe suffix for executables on this system.\n-#\n #  gnu_ld\t\tSet to yes or no depending on whether the target\n #\t\t\tsystem normally uses GNU ld.\n \n out_file=\n-xmake_file=\n tmake_file=\n extra_headers=\n extra_passes=\n extra_parts=\n extra_programs=\n extra_objs=\n-extra_host_objs=\n extra_gcc_objs=\n c_target_objs=\n cxx_target_objs=\n-host_hook_obj=host-default.o\n tm_defines=\n xm_defines=\n # Set this to force installation and use of collect2.\n@@ -190,9 +157,6 @@ use_collect2=\n target_cpu_default=\n # Set this if gdb needs a dir command with `dirname $out_file`\n gdb_needs_out_file_path=\n-# Set this if the build machine requires executables to have a\n-# file name suffix.\n-exeext=\n # Set this to control which thread package will be used.\n thread_file=\n # Reinitialize these from the flag values every loop pass, since some\n@@ -474,7 +438,6 @@ case $machine in\n \t*) echo 'Please update *-*-freebsd* in gcc/config.gcc'; exit 1;;\n \tesac\n \ttmake_file=\"t-slibgcc-elf-ver t-freebsd\"\n-\txmake_file=none\n \tcase x${enable_threads} in\n \txno) fbsd_tm_file=\"${fbsd_tm_file} freebsd-nthr.h\";;\n \tx | xyes | xpthreads | xposix)\n@@ -521,9 +484,6 @@ case $machine in\n \tif test -f $srcdir/config/${cpu_type}/xm-$rest.h\n \tthen xm_file=${cpu_type}/xm-$rest.h\n \tfi\n-\tif test -f $srcdir/config/${cpu_type}/x-$rest\n-\tthen xmake_file=${cpu_type}/x-$rest\n-\tfi\n \tif test -f $srcdir/config/${cpu_type}/t-$rest\n \tthen tmake_file=${cpu_type}/t-$rest\n \tfi\n@@ -602,8 +562,6 @@ alpha64-dec-*vms*)\n \ttm_file=\"${tm_file} alpha/vms.h alpha/vms64.h\"\n \txm_file=\"alpha/xm-vms.h\"\n \ttmake_file=\"alpha/t-alpha alpha/t-vms alpha/t-vms64 alpha/t-ieee\"\n-\txmake_file=alpha/x-vms\n-\texeext=.exe\n \t# This removes the cpu type and manufacturer components and\n \t#  replaces \".\" with \"_\" in the operating system version.\n \tcase $host in *-*-*vms*)\n@@ -618,8 +576,6 @@ alpha*-dec-*vms*)\n \ttm_file=\"${tm_file} alpha/vms.h\"\n \txm_file=alpha/xm-vms.h\n \ttmake_file=\"alpha/t-alpha alpha/t-vms alpha/t-ieee\"\n-\txmake_file=alpha/x-vms\n-\texeext=.exe\n \t# This removes the cpu type and manufacturer components and\n \t#  replaces \".\" with \"_\" in the operating system version.\n \tcase $host in *-*-*vms*)\n@@ -782,20 +738,17 @@ hppa1.1-*-pro*)\n \ttarget_cpu_default=\"(MASK_JUMP_IN_DELAY | MASK_PORTABLE_RUNTIME | MASK_GAS | MASK_NO_SPACE_REGS | MASK_SOFT_FLOAT)\"\n \ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h elfos.h pa/elf.h pa/pa-pro-end.h libgloss.h\"\n \ttmake_file=\"pa/t-bsd pa/t-pro\"\n-\txmake_file=\"pa/x-ada\"\n \t;;\n hppa1.1-*-osf*)\n \ttarget_cpu_default=\"MASK_PA_11\"\n \ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h pa/som.h pa/pa-osf.h\"\n \ttmake_file=\"pa/t-bsd pa/t-pa\"\n-\txmake_file=\"pa/x-ada\"\n \tuse_collect2=yes\n \t;;\n hppa1.1-*-rtems*)\n \ttarget_cpu_default=\"(MASK_JUMP_IN_DELAY | MASK_PORTABLE_RUNTIME | MASK_GAS | MASK_NO_SPACE_REGS | MASK_SOFT_FLOAT)\"\n \ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h elfos.h pa/elf.h pa/pa-pro-end.h libgloss.h pa/rtems.h rtems.h\"\n \ttmake_file=\"pa/t-bsd pa/t-pro t-rtems\"\n-\txmake_file=\"pa/x-ada\"\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n@@ -804,14 +757,12 @@ hppa1.1-*-bsd*)\n \ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h pa/som.h\"\n \ttarget_cpu_default=\"MASK_PA_11\"\n \ttmake_file=\"pa/t-bsd pa/t-pa\"\n-\txmake_file=\"pa/x-ada\"\n \tuse_collect2=yes\n \t;;\n hppa1.1-*-hpux10* | hppa2*-*-hpux10*)\n \ttarget_cpu_default=\"MASK_PA_11\"\n \ttm_file=\"${tm_file} pa/pa32-regs.h pa/long_double.h dbxelf.h pa/som.h pa/pa-hpux.h pa/pa-hpux10.h\"\n \ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n-\txmake_file=\"pa/x-ada\"\n \tif test x$enable_threads = x; then\n \t    enable_threads=$have_pthread_h\n \tfi\n@@ -825,7 +776,6 @@ hppa1.1-*-hpux10* | hppa2*-*-hpux10*)\n hppa1.0-*-hpux10*)\n \ttm_file=\"${tm_file} pa/pa32-regs.h pa/long_double.h dbxelf.h pa/som.h pa/pa-hpux.h pa/pa-hpux10.h\"\n \ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n-\txmake_file=\"pa/x-ada\"\n \tif test x$enable_threads = x; then\n \t    enable_threads=$have_pthread_h\n \tfi\n@@ -849,7 +799,6 @@ hppa*64*-*-hpux11*)\n \tfi\n \tneed_64bit_hwint=yes\n \ttmake_file=\"pa/t-pa64 pa/t-pa-hpux\"\n-\txmake_file=\"pa/x-ada\"\n \ttarget_cpu_default=\"(MASK_PA_11|MASK_PA_20|MASK_GAS)\"\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o\"\n \tif test x$gnu_ld = xyes\n@@ -866,7 +815,6 @@ hppa1.1-*-hpux11* | hppa2*-*-hpux11*)\n \ttarget_cpu_default=\"MASK_PA_11\"\n \ttm_file=\"${tm_file} pa/pa32-regs.h pa/long_double.h dbxelf.h pa/som.h pa/pa-hpux.h pa/pa-hpux11.h\"\n \ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n-\txmake_file=\"pa/x-ada\"\n \tcase x${enable_threads} in\n \txyes | xposix )\n \t\tthread_file=posix \n@@ -877,7 +825,6 @@ hppa1.1-*-hpux11* | hppa2*-*-hpux11*)\n hppa1.0-*-hpux11*)\n \ttm_file=\"${tm_file} pa/pa32-regs.h pa/long_double.h dbxelf.h pa/som.h pa/pa-hpux.h pa/pa-hpux11.h\"\n \ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n-\txmake_file=\"pa/x-ada\"\n \tcase x${enable_threads} in\n \txyes | xposix )\n \t\tthread_file=posix \n@@ -1008,7 +955,6 @@ i[34567]86-pc-msdosdjgpp*)\n \ttmake_file=i386/t-djgpp\n \tgnu_ld=yes\n \tgas=yes\n-\texeext=.exe\n \tcase $host in *pc-msdosdjgpp*)\n \t\ttarget_alias=djgpp\n \t\t;;\n@@ -1141,18 +1087,15 @@ i[34567]86-*-pe | i[34567]86-*-cygwin*)\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='posix'\n \tfi\n-\texeext=.exe\n \t;;\n i[34567]86-*-mingw32*)\n \ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/cygming.h i386/mingw32.h\"\n \txm_file=i386/xm-mingw32.h\n \ttmake_file=\"i386/t-cygming i386/t-mingw32\"\n-\txmake_file=i386/x-mingw32\n \textra_objs=winnt.o\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='win32'\n \tfi\n-\texeext=.exe\n \tcase $machine in\n \t\t*mingw32crt*)\n \t\t\ttm_file=\"${tm_file} i386/crtdll.h\"\n@@ -1168,13 +1111,11 @@ i[34567]86-*-uwin*)\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='win32'\n \tfi\n-\texeext=.exe\n \t;;\n i[34567]86-*-interix3*)\n \ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/i386-interix.h i386/i386-interix3.h interix.h interix3.h\"\n \ttmake_file=\"t-interix i386/t-interix\"\n \textra_objs=winnt.o\n-\txmake_file=\"x-interix\"\n \tif test x$enable_threads = xyes ; then\n \t\tthread_file='posix'\n \tfi\n@@ -1199,7 +1140,6 @@ i[34567]86-*-kaos*)\n \t;;\n i860-*-sysv4*)\n         tm_file=\"${tm_file} elfos.h svr4.h i860/sysv4.h\"\n-        xmake_file=i860/x-sysv4\n         tmake_file=\"i860/t-i860 i860/t-svr4\"\n         extra_parts=\"crtbegin.o crtend.o\"\n         ;;\n@@ -1623,9 +1563,6 @@ powerpc-*-darwin*)\n \textra_headers=altivec.h\n \t# override ppc default\n \tneed_64bit_hwint=\n-\t# powerpc-darwin host support.\n-\thost_hook_obj=host-darwin.o\n-\txmake_file=rs6000/x-darwin\n \t;;\n powerpc*-*-freebsd*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h ${fbsd_tm_file} rs6000/sysv4.h rs6000/freebsd.h\"\n@@ -2031,7 +1968,6 @@ sparc64-*-elf*)\n sparc64-*-freebsd*|ultrasparc-*-freebsd*)\n \ttm_file=\"${tm_file} ${fbsd_tm_file} dbxelf.h elfos.h sparc/sysv4.h sparc/freebsd.h\"\n \ttmake_file=\"${tmake_file} sparc/t-crtfm\"\n-\txmake_file=none\n \tcase \"x$with_cpu\" in\n \t\txultrasparc) ;;\n \t\tx) with_cpu=ultrasparc ;;"}]}