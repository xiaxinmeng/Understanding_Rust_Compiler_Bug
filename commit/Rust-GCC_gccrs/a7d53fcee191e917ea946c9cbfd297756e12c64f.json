{"sha": "a7d53fcee191e917ea946c9cbfd297756e12c64f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdkNTNmY2VlMTkxZTkxN2VhOTQ2YzljYmZkMjk3NzU2ZTEyYzY0Zg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-10T01:49:46Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-10T01:49:46Z"}, "message": "(default_conversion): Use STRIP_TYPE_NOPS.\n\n(build_binary_op, build_function_call): Likewise.\n\nFrom-SVN: r1548", "tree": {"sha": "16d2ed4bc682b124d9b4f6df3c9309baaa5f0acd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16d2ed4bc682b124d9b4f6df3c9309baaa5f0acd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7d53fcee191e917ea946c9cbfd297756e12c64f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7d53fcee191e917ea946c9cbfd297756e12c64f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7d53fcee191e917ea946c9cbfd297756e12c64f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7d53fcee191e917ea946c9cbfd297756e12c64f/comments", "author": null, "committer": null, "parents": [{"sha": "0fafb45e4b8e5c4d102833d9fe39334cc35e43d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fafb45e4b8e5c4d102833d9fe39334cc35e43d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fafb45e4b8e5c4d102833d9fe39334cc35e43d7"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "d3da8d0e57a61a3f47eac63f48c1ddb28ad147ab", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7d53fcee191e917ea946c9cbfd297756e12c64f/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7d53fcee191e917ea946c9cbfd297756e12c64f/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=a7d53fcee191e917ea946c9cbfd297756e12c64f", "patch": "@@ -889,8 +889,14 @@ default_conversion (exp)\n       type = TREE_TYPE (exp);\n     }\n \n-  /* Strip NON_LVALUE_EXPRs, etc., since we aren't using as an lvalue.  */\n-  STRIP_NOPS (exp);\n+  /* Strip NON_LVALUE_EXPRs and no-op conversions, since we aren't using as\n+     an lvalue.  */\n+  /* Do not use STRIP_NOPS here!  It will remove conversions from pointer\n+     to integer and cause infinite recursion.  */\n+  while (TREE_CODE (exp) == NON_LVALUE_EXPR\n+\t || (TREE_CODE (exp) == NOP_EXPR\n+\t     && TREE_TYPE (TREE_OPERAND (exp, 0)) == TREE_TYPE (exp)))\n+    exp = TREE_OPERAND (exp, 0);\n \n   /* Normally convert enums to int,\n      but convert wide enums to something wider.  */\n@@ -1774,7 +1780,7 @@ build_function_call (function, params)\n   tree name = NULL_TREE;\n \n   /* Strip NON_LVALUE_EXPRs, etc., since we aren't using as an lvalue.  */\n-  STRIP_NOPS (function);\n+  STRIP_TYPE_NOPS (function);\n \n   /* Convert anything with function type to a pointer-to-function.  */\n   if (TREE_CODE (function) == FUNCTION_DECL)\n@@ -2226,8 +2232,8 @@ build_binary_op (code, orig_op0, orig_op1, convert_p)\n   code1 = TREE_CODE (type1);\n \n   /* Strip NON_LVALUE_EXPRs, etc., since we aren't using as an lvalue.  */\n-  STRIP_NOPS (op0);\n-  STRIP_NOPS (op1);\n+  STRIP_TYPE_NOPS (op0);\n+  STRIP_TYPE_NOPS (op1);\n \n   /* If an error was already reported for one of the arguments,\n      avoid reporting another error.  */"}]}