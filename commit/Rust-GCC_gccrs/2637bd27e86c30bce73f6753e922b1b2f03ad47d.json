{"sha": "2637bd27e86c30bce73f6753e922b1b2f03ad47d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYzN2JkMjdlODZjMzBiY2U3M2Y2NzUzZTkyMmIxYjJmMDNhZDQ3ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-07-28T08:47:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-07-28T08:47:38Z"}, "message": "re PR middle-end/52478 (-ftrapv calls the wrong functions in libgcc)\n\n2014-07-28  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/52478\n\t* optabs.c (gen_int_libfunc): For -ftrapv libfuncs make\n\tsure to register SImode ones, not only >= word_mode ones.\n\t* expr.c (expand_expr_real_2): When expanding -ftrapv\n\tbinops do not use OPTAB_LIB_WIDEN.\n\n\t* gcc.dg/torture/ftrapv-1.c: New testcase.\n\nFrom-SVN: r213117", "tree": {"sha": "50c7abb69f3b2210ca85d4268d2632528cf587c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50c7abb69f3b2210ca85d4268d2632528cf587c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2637bd27e86c30bce73f6753e922b1b2f03ad47d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2637bd27e86c30bce73f6753e922b1b2f03ad47d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2637bd27e86c30bce73f6753e922b1b2f03ad47d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2637bd27e86c30bce73f6753e922b1b2f03ad47d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "02b278a886da80a9432453993f5310cd760ca956", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02b278a886da80a9432453993f5310cd760ca956", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02b278a886da80a9432453993f5310cd760ca956"}], "stats": {"total": 62, "additions": 59, "deletions": 3}, "files": [{"sha": "fcb95b1a9cb756f46f7df145cd96449f62c5a7b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2637bd27e86c30bce73f6753e922b1b2f03ad47d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2637bd27e86c30bce73f6753e922b1b2f03ad47d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2637bd27e86c30bce73f6753e922b1b2f03ad47d", "patch": "@@ -1,3 +1,11 @@\n+2014-07-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/52478\n+\t* optabs.c (gen_int_libfunc): For -ftrapv libfuncs make\n+\tsure to register SImode ones, not only >= word_mode ones.\n+\t* expr.c (expand_expr_real_2): When expanding -ftrapv\n+\tbinops do not use OPTAB_LIB_WIDEN.\n+\n 2014-07-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \tPR middle-end/61919"}, {"sha": "de0da345198819fa6ac2cce9bad0829a26cf3d4c", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2637bd27e86c30bce73f6753e922b1b2f03ad47d/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2637bd27e86c30bce73f6753e922b1b2f03ad47d/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=2637bd27e86c30bce73f6753e922b1b2f03ad47d", "patch": "@@ -9212,7 +9212,9 @@ expand_expr_real_2 (sepops ops, rtx target, enum machine_mode tmode,\n   if (modifier == EXPAND_STACK_PARM)\n     target = 0;\n   temp = expand_binop (mode, this_optab, op0, op1, target,\n-\t\t       unsignedp, OPTAB_LIB_WIDEN);\n+\t\t       unsignedp,\n+\t\t       trapv_binoptab_p (this_optab)\n+\t\t       ? OPTAB_LIB : OPTAB_LIB_WIDEN);\n   gcc_assert (temp);\n   /* Bitwise operations do not need bitfield reduction as we expect their\n      operands being properly truncated.  */"}, {"sha": "c7bd9d07485a10a6084b735eabbee2edbc61cafe", "filename": "gcc/optabs.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2637bd27e86c30bce73f6753e922b1b2f03ad47d/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2637bd27e86c30bce73f6753e922b1b2f03ad47d/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=2637bd27e86c30bce73f6753e922b1b2f03ad47d", "patch": "@@ -5559,13 +5559,17 @@ gen_int_libfunc (optab optable, const char *opname, char suffix,\n \t\t enum machine_mode mode)\n {\n   int maxsize = 2 * BITS_PER_WORD;\n+  int minsize = BITS_PER_WORD;\n \n   if (GET_MODE_CLASS (mode) != MODE_INT)\n     return;\n   if (maxsize < LONG_LONG_TYPE_SIZE)\n     maxsize = LONG_LONG_TYPE_SIZE;\n-  if (GET_MODE_CLASS (mode) != MODE_INT\n-      || GET_MODE_BITSIZE (mode) < BITS_PER_WORD\n+  if (minsize > INT_TYPE_SIZE\n+      && (trapv_binoptab_p (optable)\n+\t  || trapv_unoptab_p (optable)))\n+    minsize = INT_TYPE_SIZE;\n+  if (GET_MODE_BITSIZE (mode) < minsize\n       || GET_MODE_BITSIZE (mode) > maxsize)\n     return;\n   gen_libfunc (optable, opname, suffix, mode);"}, {"sha": "014896c627c1579589c0602bc6562ef09ede3de2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2637bd27e86c30bce73f6753e922b1b2f03ad47d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2637bd27e86c30bce73f6753e922b1b2f03ad47d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2637bd27e86c30bce73f6753e922b1b2f03ad47d", "patch": "@@ -1,3 +1,8 @@\n+2014-07-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/52478\n+\t* gcc.dg/torture/ftrapv-1.c: New testcase.\n+\n 2014-07-28  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/61921"}, {"sha": "4fdccd887aed2f677da0f135c9e93ce362c069e4", "filename": "gcc/testsuite/gcc.dg/torture/ftrapv-1.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2637bd27e86c30bce73f6753e922b1b2f03ad47d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fftrapv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2637bd27e86c30bce73f6753e922b1b2f03ad47d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fftrapv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fftrapv-1.c?ref=2637bd27e86c30bce73f6753e922b1b2f03ad47d", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftrapv\" } */\n+/* { dg-require-effective-target trapping } */\n+/* { dg-require-fork } */\n+\n+#include <stdlib.h>\n+#include <unistd.h>\n+#include <sys/types.h>\n+#include <sys/wait.h>\n+\n+/* Verify SImode operations properly trap.  PR middle-end/52478  */\n+\n+/* Disallow inlining/cloning which would constant propagate and trigger\n+   unrelated bugs.  */\n+\n+int __attribute__((noinline,noclone))\n+iaddv (int a, int b)\n+{\n+  return a + b;\n+}\n+\n+int main(void)\n+{\n+  pid_t child = fork ();\n+  int status = 0;\n+  if (child == 0)\n+    {\n+      volatile int x = iaddv (__INT_MAX__, 1);\n+      exit (0);\n+    }\n+  else if (child == -1)\n+    return 0;\n+  if (wait (&status) == child \n+      && status == 0)\n+    abort ();\n+  return 0;\n+}"}]}