{"sha": "41bc37bad8cb29027155f247e6ad4be83d64f163", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFiYzM3YmFkOGNiMjkwMjcxNTVmMjQ3ZTZhZDRiZTgzZDY0ZjE2Mw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-01-15T15:37:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-01-15T15:37:29Z"}, "message": "re PR tree-optimization/88855 (ICE: verify_ssa failed (error: SSA_NAME_OCCURS_IN_ABNORMAL_PHI should be set))\n\n2019-01-15  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/88855\n\t* tree-if-conv.c (combine_blocks): Collect\n\tSSA_NAME_OCCURS_IN_ABNORMAL_PHI from propagated out virtuals.\n\n\t* gcc.dg/pr88855.c: New testcase.\n\nFrom-SVN: r267939", "tree": {"sha": "7af239e52f83931e3758bbb6954a1653a729570e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7af239e52f83931e3758bbb6954a1653a729570e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41bc37bad8cb29027155f247e6ad4be83d64f163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41bc37bad8cb29027155f247e6ad4be83d64f163", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41bc37bad8cb29027155f247e6ad4be83d64f163", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41bc37bad8cb29027155f247e6ad4be83d64f163/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "10ddff67d3ebe819614f1e885567cbb96cad31ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10ddff67d3ebe819614f1e885567cbb96cad31ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10ddff67d3ebe819614f1e885567cbb96cad31ae"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "14f0730a0388bd28eb709963371db5952e9ce21e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41bc37bad8cb29027155f247e6ad4be83d64f163/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41bc37bad8cb29027155f247e6ad4be83d64f163/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41bc37bad8cb29027155f247e6ad4be83d64f163", "patch": "@@ -1,3 +1,9 @@\n+2019-01-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/88855\n+\t* tree-if-conv.c (combine_blocks): Collect\n+\tSSA_NAME_OCCURS_IN_ABNORMAL_PHI from propagated out virtuals.\n+\n 2019-01-15  Tom de Vries  <tdevries@suse.de>\n \n \tPR target/80547"}, {"sha": "a5cfa7f6291f0ae80b00b5834de6ebee2d796b71", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41bc37bad8cb29027155f247e6ad4be83d64f163/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41bc37bad8cb29027155f247e6ad4be83d64f163/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=41bc37bad8cb29027155f247e6ad4be83d64f163", "patch": "@@ -1,3 +1,8 @@\n+2019-01-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/88855\n+\t* gcc.dg/pr88855.c: New testcase.\n+\n 2019-01-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/diagnostic/typedef-initialized.C: New."}, {"sha": "be6ffe3675a6aae8a42e62294aaab8cd25e1138d", "filename": "gcc/testsuite/gcc.dg/pr88855.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41bc37bad8cb29027155f247e6ad4be83d64f163/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88855.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41bc37bad8cb29027155f247e6ad4be83d64f163/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88855.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88855.c?ref=41bc37bad8cb29027155f247e6ad4be83d64f163", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -ftree-loop-if-convert -ftree-vrp -fno-tree-copy-prop -fno-tree-dce -fno-tree-dominator-opts\" } */\n+\n+typedef int jmp_buf[1];\n+\n+extern void exit(int) __attribute__((__noreturn__));\n+extern int setjmpx(jmp_buf) __attribute__((__returns_twice__));\n+\n+jmp_buf jbAnagram;\n+int a[6];\n+int d;\n+int b () { exit (1); }\n+int c () { b (); }\n+int e ()\n+{\n+  int f = 0;\n+  for (; f < 6; f++)\n+    a[f] = d;\n+  c ();\n+  setjmpx (jbAnagram);\n+}"}, {"sha": "bdd4c2aa6c42721247664dc93c2beba3fd7d1a3e", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41bc37bad8cb29027155f247e6ad4be83d64f163/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41bc37bad8cb29027155f247e6ad4be83d64f163/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=41bc37bad8cb29027155f247e6ad4be83d64f163", "patch": "@@ -2633,6 +2633,8 @@ combine_blocks (struct loop *loop)\n \t      FOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n \t\tSET_USE (use_p, last_vdef);\n \t    }\n+\t  if (SSA_NAME_OCCURS_IN_ABNORMAL_PHI (gimple_phi_result (vphi)))\n+\t    SSA_NAME_OCCURS_IN_ABNORMAL_PHI (last_vdef) = 1;\n \t  gsi = gsi_for_stmt (vphi); \n \t  remove_phi_node (&gsi, true);\n \t}\n@@ -2691,6 +2693,8 @@ combine_blocks (struct loop *loop)\n \t      FOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n \t\tSET_USE (use_p, last_vdef);\n \t    }\n+\t  if (SSA_NAME_OCCURS_IN_ABNORMAL_PHI (gimple_phi_result (vphi)))\n+\t    SSA_NAME_OCCURS_IN_ABNORMAL_PHI (last_vdef) = 1;\n \t  gimple_stmt_iterator gsi = gsi_for_stmt (vphi); \n \t  remove_phi_node (&gsi, true);\n \t}"}]}