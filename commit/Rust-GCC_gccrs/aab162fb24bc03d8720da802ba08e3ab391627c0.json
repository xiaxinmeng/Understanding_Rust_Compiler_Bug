{"sha": "aab162fb24bc03d8720da802ba08e3ab391627c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFiMTYyZmIyNGJjMDNkODcyMGRhODAyYmEwOGUzYWIzOTE2MjdjMA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2018-11-09T09:53:11Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2018-11-09T09:53:11Z"}, "message": "tree-vrp.c (value_range::check): Do not access internals directly.\n\n\t* tree-vrp.c (value_range::check): Do not access internals\n\tdirectly.\n\t(value_range::singleton_p): Same.\n\t(value_range::type): Same.\n\t(vrp_finalize): Use value_range API.\n\nFrom-SVN: r265955", "tree": {"sha": "ba3151434cf4b00aba9a3cad0fdbab667b45d302", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba3151434cf4b00aba9a3cad0fdbab667b45d302"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aab162fb24bc03d8720da802ba08e3ab391627c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aab162fb24bc03d8720da802ba08e3ab391627c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aab162fb24bc03d8720da802ba08e3ab391627c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aab162fb24bc03d8720da802ba08e3ab391627c0/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e40dcaedba8763b465f9d73928209d0fd8a0e86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e40dcaedba8763b465f9d73928209d0fd8a0e86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e40dcaedba8763b465f9d73928209d0fd8a0e86"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "9df874d646b97bc5db991618a92b9dd066324252", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aab162fb24bc03d8720da802ba08e3ab391627c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aab162fb24bc03d8720da802ba08e3ab391627c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aab162fb24bc03d8720da802ba08e3ab391627c0", "patch": "@@ -1,3 +1,11 @@\n+2018-11-08  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree-vrp.c (value_range::check): Do not access internals\n+\tdirectly.\n+\t(value_range::singleton_p): Same.\n+\t(value_range::type): Same.\n+\t(vrp_finalize): Use value_range API.\n+\n 2018-11-08  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* tree-vrp.c (may_contain_p): Do not access m_min/m_max directly."}, {"sha": "73b9e047389a46b916d08f01006870e91bb31d2e", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aab162fb24bc03d8720da802ba08e3ab391627c0/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aab162fb24bc03d8720da802ba08e3ab391627c0/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=aab162fb24bc03d8720da802ba08e3ab391627c0", "patch": "@@ -157,7 +157,7 @@ value_range::check ()\n       }\n     case VR_UNDEFINED:\n     case VR_VARYING:\n-      gcc_assert (!m_min && !m_max);\n+      gcc_assert (!min () && !max ());\n       gcc_assert (!m_equiv || bitmap_empty_p (m_equiv));\n       break;\n     default:\n@@ -291,11 +291,11 @@ bool\n value_range::singleton_p (tree *result) const\n {\n   if (m_kind == VR_RANGE\n-      && vrp_operand_equal_p (m_min, m_max)\n-      && is_gimple_min_invariant (m_min))\n+      && vrp_operand_equal_p (min (), max ())\n+      && is_gimple_min_invariant (min ()))\n     {\n       if (result)\n-        *result = m_min;\n+        *result = min ();\n       return true;\n     }\n   return false;\n@@ -306,8 +306,8 @@ value_range::type () const\n {\n   /* Types are only valid for VR_RANGE and VR_ANTI_RANGE, which are\n      known to have non-zero min/max.  */\n-  gcc_assert (m_min);\n-  return TREE_TYPE (m_min);\n+  gcc_assert (min ());\n+  return TREE_TYPE (min ());\n }\n \n /* Dump value range to FILE.  */\n@@ -6558,9 +6558,7 @@ vrp_prop::vrp_finalize (bool warn_array_bounds_p)\n \t  && range_includes_zero_p (vr) == 0)\n \tset_ptr_nonnull (name);\n       else if (!POINTER_TYPE_P (TREE_TYPE (name)))\n-\tset_range_info (name, vr->kind (),\n-\t\t\twi::to_wide (vr->min ()),\n-\t\t\twi::to_wide (vr->max ()));\n+\tset_range_info (name, *vr);\n     }\n \n   /* If we're checking array refs, we want to merge information on"}]}