{"sha": "996746aa210bc2e21c573619b2575f4c075df326", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk2NzQ2YWEyMTBiYzJlMjFjNTczNjE5YjI1NzVmNGMwNzVkZjMyNg==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2013-09-05T11:01:35Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2013-09-05T11:01:35Z"}, "message": "linux64.h: Define OPTION_BIONIC and OPTION_UCLIBC.\n\n* config/rs6000/linux64.h: Define OPTION_BIONIC and OPTION_UCLIBC.\n* config/rs6000/linux.h: Ditto.\n* alpha/linux.h: Ditto.\n* config/bfin/uclinux.h: Define TARGET_LIBC_HAS_FUNCTION as\nno_c99_libc_has_function.\n* config/c6x/uclinux-elf.h: Ditto.\n* config/lm32/uclinux-elf.h: Ditto.\n* config/m68k/uclinux.h: Ditto.\n* config/moxie/uclinux.h: Ditto.\n* config.gcc (bfin*-linux-uclibc*): Add t-linux-android to tmake_file.\n(crisv32-*-linux*, cris-*-linux*): Ditto.\n* config/bfin/bfin.c: Include \"tm_p.h\".\n\nFrom-SVN: r202274", "tree": {"sha": "0f59f812f7326b969b21ab9cb0759e0371692496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f59f812f7326b969b21ab9cb0759e0371692496"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/996746aa210bc2e21c573619b2575f4c075df326", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/996746aa210bc2e21c573619b2575f4c075df326", "html_url": "https://github.com/Rust-GCC/gccrs/commit/996746aa210bc2e21c573619b2575f4c075df326", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/996746aa210bc2e21c573619b2575f4c075df326/comments", "author": null, "committer": null, "parents": [{"sha": "c370d99fc1834816ab642b5d3b5cfbc57e41830a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c370d99fc1834816ab642b5d3b5cfbc57e41830a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c370d99fc1834816ab642b5d3b5cfbc57e41830a"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "8a5743b78719ea71fdf1d9a3a21178c844061711", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996746aa210bc2e21c573619b2575f4c075df326/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996746aa210bc2e21c573619b2575f4c075df326/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=996746aa210bc2e21c573619b2575f4c075df326", "patch": "@@ -1,3 +1,18 @@\n+2013-09-05  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\n+\t* config/rs6000/linux64.h: Define OPTION_BIONIC and OPTION_UCLIBC.\n+\t* config/rs6000/linux.h: Ditto.\n+\t* alpha/linux.h: Ditto.\n+\t* config/bfin/uclinux.h: Define TARGET_LIBC_HAS_FUNCTION as\n+\tno_c99_libc_has_function.\n+\t* config/c6x/uclinux-elf.h: Ditto.\n+\t* config/lm32/uclinux-elf.h: Ditto.\n+\t* config/m68k/uclinux.h: Ditto.\n+\t* config/moxie/uclinux.h: Ditto.\n+\t* config.gcc (bfin*-linux-uclibc*): Add t-linux-android to tmake_file.\n+\t(crisv32-*-linux*, cris-*-linux*): Ditto.\n+\t* config/bfin/bfin.c: Include \"tm_p.h\".\n+\n 2013-09-05  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-loop.c (vect_analyze_loop_operations): Properly"}, {"sha": "d0cb680d04a8804fe5023a6ad9a06cf210398cf8", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=996746aa210bc2e21c573619b2575f4c075df326", "patch": "@@ -1018,7 +1018,7 @@ bfin*-uclinux*)\n \t;;\n bfin*-linux-uclibc*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h bfin/elf.h gnu-user.h linux.h glibc-stdint.h bfin/linux.h ./linux-sysroot-suffix.h\"\n-\ttmake_file=\"bfin/t-bfin-linux t-slibgcc\"\n+\ttmake_file=\"bfin/t-bfin-linux t-slibgcc t-linux-android\"\n \tuse_collect2=no\n \t;;\n bfin*-rtems*)\n@@ -1053,7 +1053,7 @@ cris-*-elf | cris-*-none)\n crisv32-*-linux* | cris-*-linux*)\n \ttm_file=\"dbxelf.h elfos.h ${tm_file} gnu-user.h linux.h glibc-stdint.h cris/linux.h\"\n \t# We need to avoid using t-linux, so override default tmake_file\n-\ttmake_file=\"cris/t-cris cris/t-linux t-slibgcc\"\n+\ttmake_file=\"cris/t-cris cris/t-linux t-slibgcc t-linux-android\"\n \textra_options=\"${extra_options} cris/linux.opt\"\n \tcase $target in\n \t  cris-*-*)"}, {"sha": "da5842fda85b484bfb4d04466aa25dc4ba682219", "filename": "gcc/config/alpha/linux.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Falpha%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Falpha%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux.h?ref=996746aa210bc2e21c573619b2575f4c075df326", "patch": "@@ -59,8 +59,12 @@ along with GCC; see the file COPYING3.  If not see\n \n #ifdef SINGLE_LIBC\n #define OPTION_GLIBC  (DEFAULT_LIBC == LIBC_GLIBC)\n+#define OPTION_UCLIBC (DEFAULT_LIBC == LIBC_UCLIBC)\n+#define OPTION_BIONIC (DEFAULT_LIBC == LIBC_BIONIC)\n #else\n #define OPTION_GLIBC  (linux_libc == LIBC_GLIBC)\n+#define OPTION_UCLIBC (linux_libc == LIBC_UCLIBC)\n+#define OPTION_BIONIC (linux_libc == LIBC_BIONIC)\n #endif\n \n /* Determine what functions are present at the runtime;"}, {"sha": "18457f8f7b6b44e17a47eec207cb01918afbd8ea", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=996746aa210bc2e21c573619b2575f4c075df326", "patch": "@@ -46,6 +46,7 @@\n #include \"cgraph.h\"\n #include \"langhooks.h\"\n #include \"bfin-protos.h\"\n+#include \"tm_p.h\"\n #include \"tm-preds.h\"\n #include \"tm-constrs.h\"\n #include \"gt-bfin.h\""}, {"sha": "63cba99cec6796df437e50c9bb1c2d98fec66559", "filename": "gcc/config/bfin/uclinux.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Fbfin%2Fuclinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Fbfin%2Fuclinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fuclinux.h?ref=996746aa210bc2e21c573619b2575f4c075df326", "patch": "@@ -44,3 +44,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_SUPPORTS_SYNC_CALLS 1\n \n #define SUBTARGET_FDPIC_NOT_SUPPORTED\n+\n+#undef TARGET_LIBC_HAS_FUNCTION\n+#define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function"}, {"sha": "fa0937ed2680c29293b4fd60a2f5d610a7daefd2", "filename": "gcc/config/c6x/uclinux-elf.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Fc6x%2Fuclinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Fc6x%2Fuclinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fuclinux-elf.h?ref=996746aa210bc2e21c573619b2575f4c075df326", "patch": "@@ -62,3 +62,5 @@\n \t\t    : \"0\" (_beg), \"b\" (_end), \"b\" (_scno));\t\\\n }\n \n+#undef TARGET_LIBC_HAS_FUNCTION\n+#define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function"}, {"sha": "a5e8163cf6f30a2bd08d12ac83c7b038441c61c8", "filename": "gcc/config/lm32/uclinux-elf.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Flm32%2Fuclinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Flm32%2Fuclinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Fuclinux-elf.h?ref=996746aa210bc2e21c573619b2575f4c075df326", "patch": "@@ -77,3 +77,5 @@\n #undef  CC1_SPEC\n #define CC1_SPEC \"%{G*} %{!fno-PIC:-fPIC}\"\n \n+#undef TARGET_LIBC_HAS_FUNCTION\n+#define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function"}, {"sha": "b1af7d2c585ca496c6c7a998c4681252b388d874", "filename": "gcc/config/m68k/uclinux.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Fm68k%2Fuclinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Fm68k%2Fuclinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fuclinux.h?ref=996746aa210bc2e21c573619b2575f4c075df326", "patch": "@@ -67,3 +67,6 @@ along with GCC; see the file COPYING3.  If not see\n    sections.  */\n #undef M68K_OFFSETS_MUST_BE_WITHIN_SECTIONS_P\n #define M68K_OFFSETS_MUST_BE_WITHIN_SECTIONS_P 1\n+\n+#undef TARGET_LIBC_HAS_FUNCTION\n+#define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function"}, {"sha": "85c65f257ce6146e8371a040d1f93e239e7c9f8b", "filename": "gcc/config/moxie/uclinux.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Fmoxie%2Fuclinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Fmoxie%2Fuclinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fuclinux.h?ref=996746aa210bc2e21c573619b2575f4c075df326", "patch": "@@ -37,3 +37,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n  --wrap=mmap --wrap=munmap --wrap=alloca\\\n  %{fmudflapth: --wrap=pthread_create\\\n }} %{fmudflap|fmudflapth: --wrap=main}\"\n+\n+#undef TARGET_LIBC_HAS_FUNCTION\n+#define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function"}, {"sha": "2e5a56b3929c8e9d34c2b535571738dd49cd3136", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=996746aa210bc2e21c573619b2575f4c075df326", "patch": "@@ -28,8 +28,12 @@\n \n #ifdef SINGLE_LIBC\n #define OPTION_GLIBC  (DEFAULT_LIBC == LIBC_GLIBC)\n+#define OPTION_UCLIBC (DEFAULT_LIBC == LIBC_UCLIBC)\n+#define OPTION_BIONIC (DEFAULT_LIBC == LIBC_BIONIC)\n #else\n #define OPTION_GLIBC  (linux_libc == LIBC_GLIBC)\n+#define OPTION_UCLIBC (linux_libc == LIBC_UCLIBC)\n+#define OPTION_BIONIC (linux_libc == LIBC_BIONIC)\n #endif\n \n /* Determine what functions are present at the runtime;"}, {"sha": "439f53f2d233a1279ac10d2bca83519d3e5e8edc", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996746aa210bc2e21c573619b2575f4c075df326/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=996746aa210bc2e21c573619b2575f4c075df326", "patch": "@@ -288,8 +288,12 @@ extern int dot_symbols;\n \n #ifdef SINGLE_LIBC\n #define OPTION_GLIBC  (DEFAULT_LIBC == LIBC_GLIBC)\n+#define OPTION_UCLIBC (DEFAULT_LIBC == LIBC_UCLIBC)\n+#define OPTION_BIONIC (DEFAULT_LIBC == LIBC_BIONIC)\n #else\n #define OPTION_GLIBC  (linux_libc == LIBC_GLIBC)\n+#define OPTION_UCLIBC (linux_libc == LIBC_UCLIBC)\n+#define OPTION_BIONIC (linux_libc == LIBC_BIONIC)\n #endif\n \n /* Determine what functions are present at the runtime;"}]}