{"sha": "08024fb5840bf2e207cf804f41ec153be3582b24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgwMjRmYjU4NDBiZjJlMjA3Y2Y4MDRmNDFlYzE1M2JlMzU4MmIyNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-06-30T17:05:49Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-06-30T17:05:49Z"}, "message": "re PR target/32433 (Code for __builtin_ffs does not benefit from compiler optimizations)\n\n        PR target/32433\n        * config/i386/i386.md (ffssi2): Expand as ffs_cmove for TARGET_CMOVE.\n        (ffs_cmove): New expander to expand using ctz pattern.\n        (*ffs_cmove): Remove pattern.\n        (*ffs_no_cmove): Enable only for !TARGET_CMOVE.\n        (ffsdi2): Expand using ctz pattern.\n        (*ffs_rex64): Remove pattern.\n\nFrom-SVN: r126154", "tree": {"sha": "00ebcd28a0bca3236e8f4cc175bfc54d09015f2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00ebcd28a0bca3236e8f4cc175bfc54d09015f2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08024fb5840bf2e207cf804f41ec153be3582b24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08024fb5840bf2e207cf804f41ec153be3582b24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08024fb5840bf2e207cf804f41ec153be3582b24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08024fb5840bf2e207cf804f41ec153be3582b24/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb2c598d55a057229ec9bf731fe41a4d8e7ba708", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb2c598d55a057229ec9bf731fe41a4d8e7ba708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb2c598d55a057229ec9bf731fe41a4d8e7ba708"}], "stats": {"total": 69, "additions": 35, "deletions": 34}, "files": [{"sha": "dc35a49316b7d81d65fc624f0c23e03fd27fc591", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08024fb5840bf2e207cf804f41ec153be3582b24/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08024fb5840bf2e207cf804f41ec153be3582b24/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08024fb5840bf2e207cf804f41ec153be3582b24", "patch": "@@ -1,3 +1,13 @@\n+2007-06-30  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/32433\n+\t* config/i386/i386.md (ffssi2): Expand as ffs_cmove for TARGET_CMOVE.\n+\t(ffs_cmove): New expander to expand using ctz pattern.\n+\t(*ffs_cmove): Remove pattern.\n+\t(*ffs_no_cmove): Enable only for !TARGET_CMOVE.\n+\t(ffsdi2): Expand using ctz pattern.\n+\t(*ffs_rex64): Remove pattern.\n+\n 2007-06-30  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR rtl-optimization/32296"}, {"sha": "a57d4d65ea78b7e7088a95c71d6b87b1d5f63c5a", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 25, "deletions": 34, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08024fb5840bf2e207cf804f41ec153be3582b24/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08024fb5840bf2e207cf804f41ec153be3582b24/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=08024fb5840bf2e207cf804f41ec153be3582b24", "patch": "@@ -14586,36 +14586,40 @@\n       (clobber (match_scratch:SI 2 \"\"))\n       (clobber (reg:CC FLAGS_REG))])]\n   \"\"\n-  \"\")\n+{\n+  if (TARGET_CMOVE)\n+    {\n+      emit_insn (gen_ffs_cmove (operands[0], operands[1]));\n+      DONE;\n+    }\n+})\n \n-(define_insn_and_split \"*ffs_cmove\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(ffs:SI (match_operand:SI 1 \"nonimmediate_operand\" \"rm\")))\n-   (clobber (match_scratch:SI 2 \"=&r\"))\n-   (clobber (reg:CC FLAGS_REG))]\n-  \"TARGET_CMOVE\"\n-  \"#\"\n-  \"&& reload_completed\"\n+(define_expand \"ffs_cmove\"\n   [(set (match_dup 2) (const_int -1))\n-   (parallel [(set (reg:CCZ FLAGS_REG) (compare:CCZ (match_dup 1) (const_int 0)))\n-\t      (set (match_dup 0) (ctz:SI (match_dup 1)))])\n+   (parallel [(set (reg:CCZ FLAGS_REG)\n+\t\t   (compare:CCZ (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t\t\t(const_int 0)))\n+\t      (set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+\t\t   (ctz:SI (match_dup 1)))])\n    (set (match_dup 0) (if_then_else:SI\n \t\t\t(eq (reg:CCZ FLAGS_REG) (const_int 0))\n \t\t\t(match_dup 2)\n \t\t\t(match_dup 0)))\n    (parallel [(set (match_dup 0) (plus:SI (match_dup 0) (const_int 1)))\n \t      (clobber (reg:CC FLAGS_REG))])]\n-  \"\")\n+  \"TARGET_CMOVE\"\n+  \"operands[2] = gen_reg_rtx (SImode);\")\n \n (define_insn_and_split \"*ffs_no_cmove\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r\")\n \t(ffs:SI (match_operand:SI 1 \"nonimmediate_operand\" \"rm\")))\n    (clobber (match_scratch:SI 2 \"=&q\"))\n    (clobber (reg:CC FLAGS_REG))]\n-  \"\"\n+  \"!TARGET_CMOVE\"\n   \"#\"\n-  \"reload_completed\"\n-  [(parallel [(set (reg:CCZ FLAGS_REG) (compare:CCZ (match_dup 1) (const_int 0)))\n+  \"&& reload_completed\"\n+  [(parallel [(set (reg:CCZ FLAGS_REG)\n+\t\t   (compare:CCZ (match_dup 1) (const_int 0)))\n \t      (set (match_dup 0) (ctz:SI (match_dup 1)))])\n    (set (strict_low_part (match_dup 3))\n \t(eq:QI (reg:CCZ FLAGS_REG) (const_int 0)))\n@@ -14641,33 +14645,20 @@\n   [(set_attr \"prefix_0f\" \"1\")])\n \n (define_expand \"ffsdi2\"\n-  [(parallel\n-     [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t   (ffs:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")))\n-      (clobber (match_scratch:DI 2 \"\"))\n-      (clobber (reg:CC FLAGS_REG))])]\n-  \"TARGET_64BIT && TARGET_CMOVE\"\n-  \"\")\n-\n-(define_insn_and_split \"*ffs_rex64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(ffs:DI (match_operand:DI 1 \"nonimmediate_operand\" \"rm\")))\n-   (clobber (match_scratch:DI 2 \"=&r\"))\n-   (clobber (reg:CC FLAGS_REG))]\n-  \"TARGET_64BIT && TARGET_CMOVE\"\n-  \"#\"\n-  \"&& reload_completed\"\n   [(set (match_dup 2) (const_int -1))\n    (parallel [(set (reg:CCZ FLAGS_REG)\n-\t\t   (compare:CCZ (match_dup 1) (const_int 0)))\n-\t      (set (match_dup 0) (ctz:DI (match_dup 1)))])\n+\t\t   (compare:CCZ (match_operand:DI 1 \"register_operand\" \"\")\n+\t\t\t\t(const_int 0)))\n+\t      (set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n+\t\t   (ctz:DI (match_dup 1)))])\n    (set (match_dup 0) (if_then_else:DI\n \t\t\t(eq (reg:CCZ FLAGS_REG) (const_int 0))\n \t\t\t(match_dup 2)\n \t\t\t(match_dup 0)))\n    (parallel [(set (match_dup 0) (plus:DI (match_dup 0) (const_int 1)))\n \t      (clobber (reg:CC FLAGS_REG))])]\n-  \"\")\n+  \"TARGET_64BIT\"\n+  \"operands[2] = gen_reg_rtx (DImode);\")\n \n (define_insn \"*ffsdi_1\"\n   [(set (reg:CCZ FLAGS_REG)"}]}