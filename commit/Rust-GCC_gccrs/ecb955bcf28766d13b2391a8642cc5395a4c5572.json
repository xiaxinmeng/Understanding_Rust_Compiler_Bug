{"sha": "ecb955bcf28766d13b2391a8642cc5395a4c5572", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNiOTU1YmNmMjg3NjZkMTNiMjM5MWE4NjQyY2M1Mzk1YTRjNTU3Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-28T07:29:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-28T07:29:50Z"}, "message": "[multiple changes]\n\n2009-07-28  Sergey Rybin  <rybin@adacore.com>\n\n\t* gnat_ugn.texi: gnatcheck Deeply_Nested_Inlining rule: Update doc.\n\n2009-07-28  Pascal Obry  <obry@adacore.com>\n\n\t* g-expect.adb: Record standard handles only on Windows.\n\nFrom-SVN: r150145", "tree": {"sha": "a38f52a14940fd6eb259c9bfcc8d99a88aaf4e4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a38f52a14940fd6eb259c9bfcc8d99a88aaf4e4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecb955bcf28766d13b2391a8642cc5395a4c5572", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecb955bcf28766d13b2391a8642cc5395a4c5572", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecb955bcf28766d13b2391a8642cc5395a4c5572", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecb955bcf28766d13b2391a8642cc5395a4c5572/comments", "author": null, "committer": null, "parents": [{"sha": "549fd9e42b5a8958d5a0372366acc2925cc9ca90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/549fd9e42b5a8958d5a0372366acc2925cc9ca90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/549fd9e42b5a8958d5a0372366acc2925cc9ca90"}], "stats": {"total": 55, "additions": 28, "deletions": 27}, "files": [{"sha": "476e505fc5ee2e392428e43712cafd465897312c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecb955bcf28766d13b2391a8642cc5395a4c5572/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecb955bcf28766d13b2391a8642cc5395a4c5572/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ecb955bcf28766d13b2391a8642cc5395a4c5572", "patch": "@@ -1,3 +1,11 @@\n+2009-07-28  Sergey Rybin  <rybin@adacore.com>\n+\n+\t* gnat_ugn.texi: gnatcheck Deeply_Nested_Inlining rule: Update doc.\n+\n+2009-07-28  Pascal Obry  <obry@adacore.com>\n+\n+\t* g-expect.adb: Record standard handles only on Windows.\n+\n 2009-07-27  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj.ads, prj-nmsc.adb (Override_Kind): add debug trace"}, {"sha": "5f88f63f0764149ffaed096bdb01c7931d27f8c5", "filename": "gcc/ada/g-expect.adb", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecb955bcf28766d13b2391a8642cc5395a4c5572/gcc%2Fada%2Fg-expect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecb955bcf28766d13b2391a8642cc5395a4c5572/gcc%2Fada%2Fg-expect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect.adb?ref=ecb955bcf28766d13b2391a8642cc5395a4c5572", "patch": "@@ -1195,21 +1195,25 @@ package body GNAT.Expect is\n       pragma Warnings (Off, Pipe2);\n       pragma Warnings (Off, Pipe3);\n \n+      On_Windows : constant Boolean := Directory_Separator = '\\';\n+\n       Input  : File_Descriptor;\n       Output : File_Descriptor;\n       Error  : File_Descriptor;\n \n    begin\n-      --  Since Windows does not have a separate fork/exec, we need to\n-      --  perform the following actions:\n-      --    - save stdin, stdout, stderr\n-      --    - replace them by our pipes\n-      --    - create the child with process handle inheritance\n-      --    - revert to the previous stdin, stdout and stderr.\n-\n-      Input  := Dup (GNAT.OS_Lib.Standin);\n-      Output := Dup (GNAT.OS_Lib.Standout);\n-      Error  := Dup (GNAT.OS_Lib.Standerr);\n+      if On_Windows then\n+         --  Since Windows does not have a separate fork/exec, we need to\n+         --  perform the following actions:\n+         --    - save stdin, stdout, stderr\n+         --    - replace them by our pipes\n+         --    - create the child with process handle inheritance\n+         --    - revert to the previous stdin, stdout and stderr.\n+\n+         Input  := Dup (GNAT.OS_Lib.Standin);\n+         Output := Dup (GNAT.OS_Lib.Standout);\n+         Error  := Dup (GNAT.OS_Lib.Standerr);\n+      end if;\n \n       --  Since we are still called from the parent process, there is no way\n       --  currently we can cleanly close the unneeded ends of the pipes, but\n@@ -1223,8 +1227,8 @@ package body GNAT.Expect is\n \n       Portable_Execvp (Pid.Pid'Access, Cmd & ASCII.NUL, Args);\n \n-      --  The following commands are not executed on Unix systems, and are\n-      --  only required for Windows systems. We are now in the parent process.\n+      --  The following commands are not executed on Unix systems, and are only\n+      --  required for Windows systems. We are now in the parent process.\n \n       --  Restore the old descriptors\n \n@@ -1277,8 +1281,8 @@ package body GNAT.Expect is\n          --  Reuse the standard output pipe for standard error\n \n          Pipe3.all := Pipe2.all;\n-      else\n \n+      else\n          --  Create a separate pipe for standard error\n \n          if Create_Pipe (Pipe3) /= 0 then"}, {"sha": "b776c90957f2c44ceb9e2f5e3c5e119c87cad43d", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecb955bcf28766d13b2391a8642cc5395a4c5572/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecb955bcf28766d13b2391a8642cc5395a4c5572/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=ecb955bcf28766d13b2391a8642cc5395a4c5572", "patch": "@@ -21308,23 +21308,12 @@ for a generic declaration.\n @cindex @code{Deeply_Nested_Inlining} rule (for @command{gnatcheck})\n \n @noindent\n-Flags the body of a subprogram (or generic subprogram) if\n-pragma Inline has been applied to the subprogram but the body\n-contains a call to another inlined subprogram that results in nested inlining\n+Flags a subprogram (or generic subprogram) if\n+pragma Inline has been applied to the subprogram but the subprogram\n+calls to another inlined subprogram that results in nested inlining\n with nesting depth exceeding the value specified by the\n @option{N} rule parameter.\n \n-This rule assumes that pragma Inline applies equally to calls on\n-subprograms regardless of whether the subprogram declaration appears in the\n-same compilation unit as the call, or in a separately compiled\n-(e.g., @i{with}ed) unit.\n-\n-This rule may be useful when either the @option{-gnatn} or @option{-gnatN}\n-option is used.\n-\n-If a subprogram should be flagged according to this rule, the body declaration\n-is flagged only if it is not a completion of a subprogram declaration.\n-\n This rule requires the global analysis of all the compilation units that\n are @command{gnatcheck} arguments; such analysis may affect the tool's\n performance."}]}