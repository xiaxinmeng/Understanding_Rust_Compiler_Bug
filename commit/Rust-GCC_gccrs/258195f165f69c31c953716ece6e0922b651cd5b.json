{"sha": "258195f165f69c31c953716ece6e0922b651cd5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU4MTk1ZjE2NWY2OWMzMWM5NTM3MTZlY2U2ZTA5MjJiNjUxY2Q1Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-05-07T22:37:14Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-05-07T22:37:14Z"}, "message": "A non-type template parm with a placeholder type is type-dependent.\n\n\t* pt.c (type_dependent_expression_p): A non-type template parm with\n\ta placeholder type is type-dependent.\n\nFrom-SVN: r270984", "tree": {"sha": "bf05c52e5bf182e538ec540b4e9b0a437c9a2511", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf05c52e5bf182e538ec540b4e9b0a437c9a2511"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/258195f165f69c31c953716ece6e0922b651cd5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/258195f165f69c31c953716ece6e0922b651cd5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/258195f165f69c31c953716ece6e0922b651cd5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/258195f165f69c31c953716ece6e0922b651cd5b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "76ddb9ebd9de3bc35f69f93a3e3769589d1b7d35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ddb9ebd9de3bc35f69f93a3e3769589d1b7d35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76ddb9ebd9de3bc35f69f93a3e3769589d1b7d35"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "bd0914b8ffad89703764272973e2a057ecf27a4b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258195f165f69c31c953716ece6e0922b651cd5b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258195f165f69c31c953716ece6e0922b651cd5b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=258195f165f69c31c953716ece6e0922b651cd5b", "patch": "@@ -1,3 +1,8 @@\n+2019-05-07  Jason Merrill  <jason@redhat.com>\n+\n+\t* pt.c (type_dependent_expression_p): A non-type template parm with\n+\ta placeholder type is type-dependent.\n+\n 2019-05-06  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/90265 - ICE with generic lambda."}, {"sha": "92b67106d6305952fa3027964b1888a288a2c993", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/258195f165f69c31c953716ece6e0922b651cd5b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/258195f165f69c31c953716ece6e0922b651cd5b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=258195f165f69c31c953716ece6e0922b651cd5b", "patch": "@@ -25981,6 +25981,13 @@ type_dependent_expression_p (tree expression)\n       return false;\n     }\n \n+  /* The type of a non-type template parm declared with a placeholder type\n+     depends on the corresponding template argument, even though\n+     placeholders are not normally considered dependent.  */\n+  if (TREE_CODE (expression) == TEMPLATE_PARM_INDEX\n+      && is_auto (TREE_TYPE (expression)))\n+    return true;\n+\n   gcc_assert (TREE_CODE (expression) != TYPE_DECL);\n \n   /* Dependent type attributes might not have made it from the decl to"}]}