{"sha": "a4935dea3fa78cd019774991efe03ffbf96aecb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ5MzVkZWEzZmE3OGNkMDE5Nzc0OTkxZWZlMDNmZmJmOTZhZWNiNw==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@adacore.com", "date": "2011-10-13T10:49:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-10-13T10:49:57Z"}, "message": "a-ngrear.adb (\"abs\"): Adjust for modified L2_Norm generic\n\n2011-10-13  Geert Bosch  <bosch@adacore.com>\n\n\t* a-ngrear.adb (\"abs\"): Adjust for modified L2_Norm generic\n\t* s-gearop.ads (L2_Norm): Change profile to be suitable for\n\tComplex_Vector\n\t* s-gearop.adb (L2_Norm): Reimplement using direct definition,\n\tnot inner product\n\nFrom-SVN: r179908", "tree": {"sha": "86e465d761c3562ee46b5e2f2cad7b18e37c7567", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86e465d761c3562ee46b5e2f2cad7b18e37c7567"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4935dea3fa78cd019774991efe03ffbf96aecb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4935dea3fa78cd019774991efe03ffbf96aecb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4935dea3fa78cd019774991efe03ffbf96aecb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4935dea3fa78cd019774991efe03ffbf96aecb7/comments", "author": null, "committer": null, "parents": [{"sha": "3e7302c3cbddf59061529884465a594597ac3f3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e7302c3cbddf59061529884465a594597ac3f3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e7302c3cbddf59061529884465a594597ac3f3a"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "39d4ec08fbb813b54fd7f3dd274238487c8215a3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4935dea3fa78cd019774991efe03ffbf96aecb7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4935dea3fa78cd019774991efe03ffbf96aecb7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a4935dea3fa78cd019774991efe03ffbf96aecb7", "patch": "@@ -1,3 +1,11 @@\n+2011-10-13  Geert Bosch  <bosch@adacore.com>\n+\n+\t* a-ngrear.adb (\"abs\"): Adjust for modified L2_Norm generic\n+\t* s-gearop.ads (L2_Norm): Change profile to be suitable for\n+\tComplex_Vector\n+\t* s-gearop.adb (L2_Norm): Reimplement using direct definition,\n+\tnot inner product\n+\n 2011-10-13  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch5.adb, sem_ch3.adb, impunit.adb, impunit.ads, sem_type.adb,"}, {"sha": "8ffd95e875e33dde68d1be35d2e9837ce39e4083", "filename": "gcc/ada/a-ngrear.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4935dea3fa78cd019774991efe03ffbf96aecb7/gcc%2Fada%2Fa-ngrear.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4935dea3fa78cd019774991efe03ffbf96aecb7/gcc%2Fada%2Fa-ngrear.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngrear.adb?ref=a4935dea3fa78cd019774991efe03ffbf96aecb7", "patch": "@@ -356,10 +356,14 @@ package body Ada.Numerics.Generic_Real_Arrays is\n \n       function \"abs\" is new\n         L2_Norm\n-          (Scalar        => Real'Base,\n-           Vector        => Real_Vector,\n-           Inner_Product => \"*\",\n-           Sqrt          => Sqrt);\n+          (X_Scalar      => Real'Base,\n+           Result_Real   => Real'Base,\n+           X_Vector      => Real_Vector,\n+           \"abs\"         => \"+\");\n+      --  While the L2_Norm by definition uses the absolute values of the\n+      --  elements of X_Vector, for real values the subsequent squaring\n+      --  makes this unnecessary, so we substitute the \"+\" identity function\n+      --  instead.\n \n       function \"abs\" is new\n         Vector_Elementwise_Operation"}, {"sha": "7582e9860e6ab2088c50349c951f531437d0b267", "filename": "gcc/ada/s-gearop.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4935dea3fa78cd019774991efe03ffbf96aecb7/gcc%2Fada%2Fs-gearop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4935dea3fa78cd019774991efe03ffbf96aecb7/gcc%2Fada%2Fs-gearop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-gearop.adb?ref=a4935dea3fa78cd019774991efe03ffbf96aecb7", "patch": "@@ -336,9 +336,14 @@ package body System.Generic_Array_Operations is\n    -- L2_Norm --\n    -------------\n \n-   function L2_Norm (X : Vector) return Scalar is\n+   function L2_Norm (X : X_Vector) return Result_Real'Base is\n+      Sum    : Result_Real'Base := 0.0;\n    begin\n-      return Sqrt (Inner_Product (X, X));\n+      for J in X'Range loop\n+         Sum := Sum + Result_Real'Base (abs X (J))**2;\n+      end loop;\n+\n+      return Sqrt (Sum);\n    end L2_Norm;\n \n    ----------------------------------"}, {"sha": "ca6b7f3586f2d8b5d532a16ffbb16ff3a7d38d61", "filename": "gcc/ada/s-gearop.ads", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4935dea3fa78cd019774991efe03ffbf96aecb7/gcc%2Fada%2Fs-gearop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4935dea3fa78cd019774991efe03ffbf96aecb7/gcc%2Fada%2Fs-gearop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-gearop.ads?ref=a4935dea3fa78cd019774991efe03ffbf96aecb7", "patch": "@@ -291,11 +291,12 @@ pragma Pure (Generic_Array_Operations);\n    -------------\n \n    generic\n-      type Scalar is private;\n-      type Vector is array (Integer range <>) of Scalar;\n-      with function Inner_Product (Left, Right : Vector) return Scalar is <>;\n-      with function Sqrt (X : Scalar) return Scalar is <>;\n-   function L2_Norm (X : Vector) return Scalar;\n+      type X_Scalar is private;\n+      type Result_Real is digits <>;\n+      type X_Vector is array (Integer range <>) of X_Scalar;\n+      with function \"abs\" (Right : X_Scalar) return Result_Real is <>;\n+      with function Sqrt (X : Result_Real'Base) return Result_Real'Base is <>;\n+   function L2_Norm (X : X_Vector) return Result_Real'Base;\n \n    -------------------\n    -- Outer_Product --"}]}