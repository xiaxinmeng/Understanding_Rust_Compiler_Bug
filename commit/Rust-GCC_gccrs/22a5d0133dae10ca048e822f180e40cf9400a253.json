{"sha": "22a5d0133dae10ca048e822f180e40cf9400a253", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJhNWQwMTMzZGFlMTBjYTA0OGU4MjJmMTgwZTQwY2Y5NDAwYTI1Mw==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2007-10-22T15:29:17Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2007-10-22T15:29:17Z"}, "message": "re PR tree-optimization/33855 (Segfault in verify_ssa/execute_function_todo with -O)\n\n        PR tree-optimization/33855\n\n        * tree-ssa-phiopt.c (cond_store_replacement): Handle\n        * COMPLEX_TYPE\n        and VECTOR_TYPE.\n\n        * gcc.c-torture/compile/pr33855.c: New testcase.\n\nFrom-SVN: r129551", "tree": {"sha": "8102e28c36b811c04b10a0ba979e8d44c5bcbf86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8102e28c36b811c04b10a0ba979e8d44c5bcbf86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22a5d0133dae10ca048e822f180e40cf9400a253", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a5d0133dae10ca048e822f180e40cf9400a253", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22a5d0133dae10ca048e822f180e40cf9400a253", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a5d0133dae10ca048e822f180e40cf9400a253/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "174f8765a8a7198d4d3b05b476ed9ffa40c86cda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/174f8765a8a7198d4d3b05b476ed9ffa40c86cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/174f8765a8a7198d4d3b05b476ed9ffa40c86cda"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "35ca169bce1fd2e76e19e745dad5f414de485ba1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a5d0133dae10ca048e822f180e40cf9400a253/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a5d0133dae10ca048e822f180e40cf9400a253/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22a5d0133dae10ca048e822f180e40cf9400a253", "patch": "@@ -1,3 +1,9 @@\n+2007-10-22  Michael Matz  <matz@suse.de>\n+\n+\tPR tree-optimization/33855\n+\t* tree-ssa-phiopt.c (cond_store_replacement): Handle COMPLEX_TYPE\n+\tand VECTOR_TYPE.\n+\n 2007-10-22  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/33854"}, {"sha": "c49cd3123839149ed62ae5cc653aca85e0ae2104", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a5d0133dae10ca048e822f180e40cf9400a253/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a5d0133dae10ca048e822f180e40cf9400a253/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22a5d0133dae10ca048e822f180e40cf9400a253", "patch": "@@ -1,3 +1,8 @@\n+2007-10-22  Michael Matz  <matz@suse.de>\n+\n+\tPR tree-optimization/33855\n+\t* gcc.c-torture/compile/pr33855.c: New testcase.\n+\n 2007-10-22  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/33854"}, {"sha": "e678cb34105abda8ff349c932d6ba083bdc5d40f", "filename": "gcc/testsuite/gcc.c-torture/compile/pr33855.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a5d0133dae10ca048e822f180e40cf9400a253/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33855.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a5d0133dae10ca048e822f180e40cf9400a253/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33855.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33855.c?ref=22a5d0133dae10ca048e822f180e40cf9400a253", "patch": "@@ -0,0 +1,27 @@\n+/* Testcase by Martin Michlmayr <tbm@cyrius.com> */\n+/* Used to segfault due to cselim not marking the complex temp var\n+   as GIMPLE reg.  */\n+\n+typedef struct {\n+  int nsant, nvqd;\n+  _Complex long double *vqd;\n+} vsorc_t;\n+vsorc_t vsorc;\n+\n+void foo(int next_job, int ain_num, int iped, long t) {\n+  long double zpnorm;\n+\n+  while (!next_job)\n+    if (ain_num)\n+    {\n+      if (iped == 1)\n+        zpnorm = 0.0;\n+      int indx = vsorc.nvqd-1;\n+      vsorc.vqd[indx] = t*1.0fj;\n+      if (cabsl(vsorc.vqd[indx]) < 1.e-20)\n+        vsorc.vqd[indx] = 0.0fj;\n+      zpnorm = t;\n+      if (zpnorm > 0.0)\n+        iped = vsorc.nsant;\n+    }\n+}"}, {"sha": "6df8420c22f1564ce35ef08670426bb476c91dba", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a5d0133dae10ca048e822f180e40cf9400a253/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a5d0133dae10ca048e822f180e40cf9400a253/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=22a5d0133dae10ca048e822f180e40cf9400a253", "patch": "@@ -1287,6 +1287,9 @@ cond_store_replacement (basic_block middle_bb, basic_block join_bb,\n     {\n       condstoretemp = create_tmp_var (TREE_TYPE (lhs), \"cstore\");\n       get_var_ann (condstoretemp);\n+      if (TREE_CODE (TREE_TYPE (lhs)) == COMPLEX_TYPE\n+          || TREE_CODE (TREE_TYPE (lhs)) == VECTOR_TYPE)\n+\tDECL_GIMPLE_REG_P (condstoretemp) = 1;\n     }\n   add_referenced_var (condstoretemp);\n "}]}