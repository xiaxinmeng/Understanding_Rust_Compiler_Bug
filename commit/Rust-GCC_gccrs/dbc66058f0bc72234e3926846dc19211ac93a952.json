{"sha": "dbc66058f0bc72234e3926846dc19211ac93a952", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJjNjYwNThmMGJjNzIyMzRlMzkyNjg0NmRjMTkyMTFhYzkzYTk1Mg==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "drow@mvista.com", "date": "2003-09-11T03:11:31Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2003-09-11T03:11:31Z"}, "message": "re PR libstdc++/12189 (abi_check fails to build)\n\n\tPR libstdc++/12189\n\t* acinclude.m4 (GLIBCXX_CONFIGURE_TESTSUITE): Don't build\n\tabi_check if cross compiling.\n\t* aclocal.m4: Regenerated.\n\t* configure: Regenerated.\n\nCo-Authored-By: Andreas Jaeger <aj@suse.de>\n\nFrom-SVN: r71291", "tree": {"sha": "3cc091d2df064c2b8ecfe63057cc22e612eda151", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cc091d2df064c2b8ecfe63057cc22e612eda151"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbc66058f0bc72234e3926846dc19211ac93a952", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbc66058f0bc72234e3926846dc19211ac93a952", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbc66058f0bc72234e3926846dc19211ac93a952", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbc66058f0bc72234e3926846dc19211ac93a952/comments", "author": null, "committer": null, "parents": [{"sha": "6b657b2e096a3acd27973f061643c4f48edd65ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b657b2e096a3acd27973f061643c4f48edd65ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b657b2e096a3acd27973f061643c4f48edd65ef"}], "stats": {"total": 90, "additions": 54, "deletions": 36}, "files": [{"sha": "034951775e96bdcca6ff674157b6ffb50bbb0cb2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbc66058f0bc72234e3926846dc19211ac93a952/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbc66058f0bc72234e3926846dc19211ac93a952/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=dbc66058f0bc72234e3926846dc19211ac93a952", "patch": "@@ -1,3 +1,12 @@\n+2003-09-10  Daniel Jacobowitz  <drow@mvista.com>\n+\t    Andreas Jaeger <aj@suse.de>\n+\n+\tPR libstdc++/12189\n+\t* acinclude.m4 (GLIBCXX_CONFIGURE_TESTSUITE): Don't build\n+\tabi_check if cross compiling.\n+\t* aclocal.m4: Regenerated.\n+\t* configure: Regenerated.\n+\n 2003-09-10  Jeffrey D. Oldham  <oldham@codesourcery.com>\n \n \t* libsupc++/vec.cc (__cxa_vec_new2): If the allocator returns"}, {"sha": "177a4d45aa158dcbbb9be6b4b85f3709726edfa0", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbc66058f0bc72234e3926846dc19211ac93a952/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbc66058f0bc72234e3926846dc19211ac93a952/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=dbc66058f0bc72234e3926846dc19211ac93a952", "patch": "@@ -585,24 +585,27 @@ AC_DEFUN(GLIBCXX_CONFIGURE_TESTSUITE, [\n \n     # Look for setenv, so that extended locale tests can be performed.\n     GLIBCXX_CHECK_STDLIB_DECL_AND_LINKAGE_3(setenv)\n+\n+    if test $enable_symvers = no; then\n+      enable_abi_check=no\n+    else\n+      case \"$host\" in\n+        *-*-cygwin*)\n+          enable_abi_check=no ;;\n+        *)\n+          enable_abi_check=yes ;;\n+      esac\n+    fi\n+  else\n+    # Only build this as native, since automake does not understand\n+    # CXX_FOR_BUILD.\n+    enable_abi_check=no\n   fi\n \n   # Export file names for ABI checking.\n   baseline_dir=\"$glibcxx_srcdir/config/abi/${abi_baseline_pair}\\$(MULTISUBDIR)\"\n   AC_SUBST(baseline_dir)\n \n-  # Determine if checking the ABI is desirable.\n-  if test $enable_symvers = no || test $is_hosted = no; then\n-    enable_abi_check=no\n-  else\n-    case \"$host\" in\n-      *-*-cygwin*)\n-        enable_abi_check=no ;;\n-      *)\n-        enable_abi_check=yes ;;\n-    esac\n-  fi\n-\n   GLIBCXX_CONDITIONAL(GLIBCXX_TEST_WCHAR_T, test $enable_wchar_t = yes)\n   GLIBCXX_CONDITIONAL(GLIBCXX_TEST_ABI, test $enable_abi_check = yes)\n ])"}, {"sha": "f37b565168b1295215663b76a7ba127543a4d4d4", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbc66058f0bc72234e3926846dc19211ac93a952/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbc66058f0bc72234e3926846dc19211ac93a952/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=dbc66058f0bc72234e3926846dc19211ac93a952", "patch": "@@ -598,24 +598,27 @@ AC_DEFUN(GLIBCXX_CONFIGURE_TESTSUITE, [\n \n     # Look for setenv, so that extended locale tests can be performed.\n     GLIBCXX_CHECK_STDLIB_DECL_AND_LINKAGE_3(setenv)\n+\n+    if test $enable_symvers = no; then\n+      enable_abi_check=no\n+    else\n+      case \"$host\" in\n+        *-*-cygwin*)\n+          enable_abi_check=no ;;\n+        *)\n+          enable_abi_check=yes ;;\n+      esac\n+    fi\n+  else\n+    # Only build this as native, since automake does not understand\n+    # CXX_FOR_BUILD.\n+    enable_abi_check=no\n   fi\n \n   # Export file names for ABI checking.\n   baseline_dir=\"$glibcxx_srcdir/config/abi/${abi_baseline_pair}\\$(MULTISUBDIR)\"\n   AC_SUBST(baseline_dir)\n \n-  # Determine if checking the ABI is desirable.\n-  if test $enable_symvers = no || test $is_hosted = no; then\n-    enable_abi_check=no\n-  else\n-    case \"$host\" in\n-      *-*-cygwin*)\n-        enable_abi_check=no ;;\n-      *)\n-        enable_abi_check=yes ;;\n-    esac\n-  fi\n-\n   GLIBCXX_CONDITIONAL(GLIBCXX_TEST_WCHAR_T, test $enable_wchar_t = yes)\n   GLIBCXX_CONDITIONAL(GLIBCXX_TEST_ABI, test $enable_abi_check = yes)\n ])"}, {"sha": "2a416457af2d84db922ee04fc208a5c4c3e3d52f", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbc66058f0bc72234e3926846dc19211ac93a952/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbc66058f0bc72234e3926846dc19211ac93a952/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=dbc66058f0bc72234e3926846dc19211ac93a952", "patch": "@@ -59011,24 +59011,27 @@ done\n \n   fi\n \n+\n+    if test $enable_symvers = no; then\n+      enable_abi_check=no\n+    else\n+      case \"$host\" in\n+        *-*-cygwin*)\n+          enable_abi_check=no ;;\n+        *)\n+          enable_abi_check=yes ;;\n+      esac\n+    fi\n+  else\n+    # Only build this as native, since automake does not understand\n+    # CXX_FOR_BUILD.\n+    enable_abi_check=no\n   fi\n \n   # Export file names for ABI checking.\n   baseline_dir=\"$glibcxx_srcdir/config/abi/${abi_baseline_pair}\\$(MULTISUBDIR)\"\n \n \n-  # Determine if checking the ABI is desirable.\n-  if test $enable_symvers = no || test $is_hosted = no; then\n-    enable_abi_check=no\n-  else\n-    case \"$host\" in\n-      *-*-cygwin*)\n-        enable_abi_check=no ;;\n-      *)\n-        enable_abi_check=yes ;;\n-    esac\n-  fi\n-\n \n \n "}]}