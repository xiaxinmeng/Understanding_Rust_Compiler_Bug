{"sha": "02a9370c66bab014d6b746af354abc392109f710", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJhOTM3MGM2NmJhYjAxNGQ2Yjc0NmFmMzU0YWJjMzkyMTA5ZjcxMA==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2010-02-28T12:50:39Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2010-02-28T12:50:39Z"}, "message": "Fix typos in documentation.\n\ngcc/:\n\t* doc/invoke.texi (Warning Options, RX Options): Fix typos.\n\t(Warning Options): -Wno-conversion-null is valid for\n\tObjective-C++ as well.\n\t* doc/tm.texi (Named Address Spaces): Likewise.\n\t* doc/plugins.texi (Plugins): Replace TABs with spaces.\n\t* doc/tree-ssa.texi (Tree SSA): Likewise.\n\nFrom-SVN: r157121", "tree": {"sha": "0755cc66e350b95d0d6afa3cee131b1ab64c785f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0755cc66e350b95d0d6afa3cee131b1ab64c785f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02a9370c66bab014d6b746af354abc392109f710", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a9370c66bab014d6b746af354abc392109f710", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02a9370c66bab014d6b746af354abc392109f710", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a9370c66bab014d6b746af354abc392109f710/comments", "author": null, "committer": null, "parents": [{"sha": "bea9840ef1a9e0c7b7c33a4950088c732befa563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bea9840ef1a9e0c7b7c33a4950088c732befa563", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bea9840ef1a9e0c7b7c33a4950088c732befa563"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "d80793fd3ee45d2d856e65852803880e5832dcd9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a9370c66bab014d6b746af354abc392109f710/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a9370c66bab014d6b746af354abc392109f710/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02a9370c66bab014d6b746af354abc392109f710", "patch": "@@ -1,3 +1,12 @@\n+2010-02-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* doc/invoke.texi (Warning Options, RX Options): Fix typos.\n+\t(Warning Options): -Wno-conversion-null is valid for\n+\tObjective-C++ as well.\n+\t* doc/tm.texi (Named Address Spaces): Likewise.\n+\t* doc/plugins.texi (Plugins): Replace TABs with spaces.\n+\t* doc/tree-ssa.texi (Tree SSA): Likewise.\n+\n 2010-02-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/43202"}, {"sha": "768347d37dde4d1fc73e33bcff8a45451842d1ad", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a9370c66bab014d6b746af354abc392109f710/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a9370c66bab014d6b746af354abc392109f710/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=02a9370c66bab014d6b746af354abc392109f710", "patch": "@@ -3514,7 +3514,7 @@ incomplete types.  Runs in the frontend only.\n Level 3 (default for @option{-Wstrict-aliasing}):\n Should have very few false positives and few false\n negatives.  Slightly slower than levels 1 or 2 when optimization is enabled.\n-Takes care of the common punn+dereference pattern in the frontend:\n+Takes care of the common pun+dereference pattern in the frontend:\n @code{*(int*)&some_float}.\n If optimization is enabled, it also runs in the backend, where it deals\n with multiple statement cases using flow-sensitive points-to information.\n@@ -3877,7 +3877,7 @@ reference to them. Warnings about conversions between signed and\n unsigned integers are disabled by default in C++ unless\n @option{-Wsign-conversion} is explicitly enabled.\n \n-@item -Wno-conversion-null @r{(C++)}\n+@item -Wno-conversion-null @r{(C++ and Objective-C++ only)}\n @opindex Wconversion-null\n @opindex Wno-conversion-null\n Do not warn for conversions between @code{NULL} and non-pointer\n@@ -15584,7 +15584,7 @@ default option.\n \n @item -mmax-constant-size=@var{N}\n @opindex mmax-constant-size\n-Specifies the maxium size, in bytes, of a constant that can be used as\n+Specifies the maximum size, in bytes, of a constant that can be used as\n an operand in a RX instruction.  Although the RX instruction set does\n allow constants of up to 4 bytes in length to be used in instructions,\n a longer value equates to a longer instruction.  Thus in some\n@@ -15605,7 +15605,7 @@ versions of various instructions.  Disabled by default.\n @opindex mint-register\n Specify the number of registers to reserve for fast interrupt handler\n functions.  The value @var{N} can be between 0 and 4.  A value of 1\n-means that register @code{r13} will be reserved for ther exclusive use\n+means that register @code{r13} will be reserved for the exclusive use\n of fast interrupt handlers.  A value of 2 reserves @code{r13} and\n @code{r12}.  A value of 3 reserves @code{r13}, @code{r12} and\n @code{r11}, and a value of 4 reserves @code{r13} through @code{r10}."}, {"sha": "a1ca1def70aa8d16796b5899754fdaf1f05f2121", "filename": "gcc/doc/plugins.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a9370c66bab014d6b746af354abc392109f710/gcc%2Fdoc%2Fplugins.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a9370c66bab014d6b746af354abc392109f710/gcc%2Fdoc%2Fplugins.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fplugins.texi?ref=02a9370c66bab014d6b746af354abc392109f710", "patch": "@@ -148,14 +148,14 @@ enum plugin_event\n   PLUGIN_PRE_GENERICIZE,        /* Allows to see low level AST in C and C++ frontends.  */\n   PLUGIN_FINISH,                /* Called before GCC exits.  */\n   PLUGIN_INFO,                  /* Information about the plugin. */\n-  PLUGIN_GGC_START,\t\t/* Called at start of GCC Garbage Collection. */\n-  PLUGIN_GGC_MARKING,\t\t/* Extend the GGC marking. */\n-  PLUGIN_GGC_END,\t\t/* Called at end of GGC. */\n-  PLUGIN_REGISTER_GGC_ROOTS,\t/* Register an extra GGC root table. */\n-  PLUGIN_REGISTER_GGC_CACHES,\t/* Register an extra GGC cache table. */\n+  PLUGIN_GGC_START,             /* Called at start of GCC Garbage Collection. */\n+  PLUGIN_GGC_MARKING,           /* Extend the GGC marking. */\n+  PLUGIN_GGC_END,               /* Called at end of GGC. */\n+  PLUGIN_REGISTER_GGC_ROOTS,    /* Register an extra GGC root table. */\n+  PLUGIN_REGISTER_GGC_CACHES,   /* Register an extra GGC cache table. */\n   PLUGIN_ATTRIBUTES,            /* Called during attribute registration */\n   PLUGIN_START_UNIT,            /* Called before processing a translation unit.  */\n-  PLUGIN_PRAGMAS,\t        /* Called during pragma registration. */\n+  PLUGIN_PRAGMAS,               /* Called during pragma registration. */\n   /* Called before first pass from all_passes.  */\n   PLUGIN_ALL_PASSES_START,\n   /* Called after last pass from all_passes.  */"}, {"sha": "2ad07f77b0852d17678f42e9eff09c756993af8b", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a9370c66bab014d6b746af354abc392109f710/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a9370c66bab014d6b746af354abc392109f710/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=02a9370c66bab014d6b746af354abc392109f710", "patch": "@@ -9856,7 +9856,7 @@ address spaces other than the default address space.  These address\n spaces are new keywords that are similar to the @code{volatile} and\n @code{const} type attributes.\n \n-Pointers to named address spaces can a a different size than\n+Pointers to named address spaces can have a different size than\n pointers to the generic address space.\n \n For example, the SPU port uses the @code{__ea} address space to refer"}, {"sha": "cae3cecd89c80f29f7046089a3ba44ab597cd29a", "filename": "gcc/doc/tree-ssa.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a9370c66bab014d6b746af354abc392109f710/gcc%2Fdoc%2Ftree-ssa.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a9370c66bab014d6b746af354abc392109f710/gcc%2Fdoc%2Ftree-ssa.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftree-ssa.texi?ref=02a9370c66bab014d6b746af354abc392109f710", "patch": "@@ -38,7 +38,7 @@ passes for GIMPLE@.\n \n @menu\n * Annotations::         Attributes for variables.\n-* SSA Operands::  \tSSA names referenced by GIMPLE statements.\n+* SSA Operands::        SSA names referenced by GIMPLE statements.\n * SSA::                 Static Single Assignment representation.\n * Alias analysis::      Representing aliased loads and stores.\n * Memory model::        Memory model used by the middle-end."}]}