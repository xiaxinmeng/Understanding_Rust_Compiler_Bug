{"sha": "68dd05da9496df06cf539939583f2444b2ce9292", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhkZDA1ZGE5NDk2ZGYwNmNmNTM5OTM5NTgzZjI0NDRiMmNlOTI5Mg==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@linux-m68k.org", "date": "2016-01-06T10:46:20Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2016-01-06T10:46:20Z"}, "message": "* gcc.dg/atomic-invalid-2.c: Remove duplicated content.\n\nFrom-SVN: r232100", "tree": {"sha": "3fbac200d784d507f68236bdc56c21293ee9db9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fbac200d784d507f68236bdc56c21293ee9db9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68dd05da9496df06cf539939583f2444b2ce9292", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68dd05da9496df06cf539939583f2444b2ce9292", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68dd05da9496df06cf539939583f2444b2ce9292", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68dd05da9496df06cf539939583f2444b2ce9292/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b131d5b1e7ac7d2c75f71505cd935c3dac28a4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b131d5b1e7ac7d2c75f71505cd935c3dac28a4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b131d5b1e7ac7d2c75f71505cd935c3dac28a4b"}], "stats": {"total": 63, "additions": 4, "deletions": 59}, "files": [{"sha": "84581f7b524931718d0e2e8fe1db3a48d33ccacf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68dd05da9496df06cf539939583f2444b2ce9292/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68dd05da9496df06cf539939583f2444b2ce9292/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=68dd05da9496df06cf539939583f2444b2ce9292", "patch": "@@ -1,3 +1,7 @@\n+2016-01-06  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* gcc.dg/atomic-invalid-2.c: Remove duplicated content.\n+\n 2016-01-06  Marek Polacek  <polacek@redhat.com>\n \n \tPR sanitizer/69099"}, {"sha": "c73458e99576f3c74050887d4b0b6620100fd715", "filename": "gcc/testsuite/gcc.dg/atomic-invalid-2.c", "status": "modified", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68dd05da9496df06cf539939583f2444b2ce9292/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-invalid-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68dd05da9496df06cf539939583f2444b2ce9292/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-invalid-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-invalid-2.c?ref=68dd05da9496df06cf539939583f2444b2ce9292", "patch": "@@ -57,62 +57,3 @@ clear (atomic_int *i)\n   atomic_flag_clear_explicit (i, memory_order_acquire); /* { dg-warning \"invalid memory model\" } */\n   atomic_flag_clear_explicit (i, memory_order_acq_rel); /* { dg-warning \"invalid memory model\" } */\n }\n-/* PR c/69104.  Test atomic routines for invalid memory model errors.  This\n-   only needs to be tested on a single size.  */\n-/* { dg-do compile } */\n-/* { dg-require-effective-target sync_int_long } */\n-\n-#include <stdatomic.h>\n-\n-/* atomic_store_explicit():\n-   The order argument shall not be memory_order_acquire,\n-   memory_order_consume, nor memory_order_acq_rel.  */\n-\n-void\n-store (atomic_int *i)\n-{\n-  atomic_store_explicit (i, 0, memory_order_consume); /* { dg-warning \"invalid memory model\" } */\n-  atomic_store_explicit (i, 0, memory_order_acquire); /* { dg-warning \"invalid memory model\" } */\n-  atomic_store_explicit (i, 0, memory_order_acq_rel); /* { dg-warning \"invalid memory model\" } */\n-}\n-\n-/* atomic_load_explicit():\n-   The order argument shall not be memory_order_release nor\n-   memory_order_acq_rel.  */\n-\n-void\n-load (atomic_int *i)\n-{\n-  atomic_int j = atomic_load_explicit (i, memory_order_release); /* { dg-warning \"invalid memory model\" } */\n-  atomic_int k = atomic_load_explicit (i, memory_order_acq_rel); /* { dg-warning \"invalid memory model\" } */\n-}\n-\n-/* atomic_compare_exchange():\n-   The failure argument shall not be memory_order_release nor\n-   memory_order_acq_rel.  The failure argument shall be no stronger than the\n-   success argument.  */\n-\n-void\n-exchange (atomic_int *i)\n-{\n-  int r;\n-\n-  atomic_compare_exchange_strong_explicit (i, &r, 0, memory_order_seq_cst, memory_order_release); /* { dg-warning \"invalid failure memory\" } */\n-  atomic_compare_exchange_strong_explicit (i, &r, 0, memory_order_seq_cst, memory_order_acq_rel); /* { dg-warning \"invalid failure memory\" } */\n-  atomic_compare_exchange_strong_explicit (i, &r, 0, memory_order_relaxed, memory_order_consume); /* { dg-warning \"failure memory model cannot be stronger\" } */\n-\n-  atomic_compare_exchange_weak_explicit (i, &r, 0, memory_order_seq_cst, memory_order_release); /* { dg-warning \"invalid failure memory\" } */\n-  atomic_compare_exchange_weak_explicit (i, &r, 0, memory_order_seq_cst, memory_order_acq_rel); /* { dg-warning \"invalid failure memory\" } */\n-  atomic_compare_exchange_weak_explicit (i, &r, 0, memory_order_relaxed, memory_order_consume); /* { dg-warning \"failure memory model cannot be stronger\" } */\n-}\n-\n-/* atomic_flag_clear():\n-   The order argument shall not be memory_order_acquire nor\n-   memory_order_acq_rel.  */\n-\n-void\n-clear (atomic_int *i)\n-{\n-  atomic_flag_clear_explicit (i, memory_order_acquire); /* { dg-warning \"invalid memory model\" } */\n-  atomic_flag_clear_explicit (i, memory_order_acq_rel); /* { dg-warning \"invalid memory model\" } */\n-}"}]}