{"sha": "967af719d20daa485fa058923111e3e418d17028", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY3YWY3MTlkMjBkYWE0ODVmYTA1ODkyMzExMWUzZTQxOGQxNzAyOA==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2004-10-12T20:37:15Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-10-12T20:37:15Z"}, "message": "s390.c (s390_va_start): Use build_va_arg_indirect_ref.\n\n\t* config/s390/s390.c (s390_va_start): Use build_va_arg_indirect_ref.\n\t(s390_gimplify_va_arg): Likewise.\n\nFrom-SVN: r88949", "tree": {"sha": "0f704ef33c82d0f0938bd107e93b9347c39f6c72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f704ef33c82d0f0938bd107e93b9347c39f6c72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/967af719d20daa485fa058923111e3e418d17028", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/967af719d20daa485fa058923111e3e418d17028", "html_url": "https://github.com/Rust-GCC/gccrs/commit/967af719d20daa485fa058923111e3e418d17028", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/967af719d20daa485fa058923111e3e418d17028/comments", "author": null, "committer": null, "parents": [{"sha": "888d2cd6b58f62d8492ec2a937de25c634966301", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/888d2cd6b58f62d8492ec2a937de25c634966301", "html_url": "https://github.com/Rust-GCC/gccrs/commit/888d2cd6b58f62d8492ec2a937de25c634966301"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "a6050279f9f7ecbe1df751dd85408761e9fb76dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/967af719d20daa485fa058923111e3e418d17028/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/967af719d20daa485fa058923111e3e418d17028/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=967af719d20daa485fa058923111e3e418d17028", "patch": "@@ -1,3 +1,8 @@\n+2004-10-12  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_va_start): Use build_va_arg_indirect_ref.\n+\t(s390_gimplify_va_arg): Likewise.\n+\n 2004-10-12  Daniel Jacobowitz  <dan@debian.org>\n \n \t* defaults.h (REGNO_MODE_OK_FOR_BASE_P, REG_MODE_OK_FOR_BASE_P)"}, {"sha": "c67ad193a455bd1591e08bb25c3a1f502c87b298", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/967af719d20daa485fa058923111e3e418d17028/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/967af719d20daa485fa058923111e3e418d17028/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=967af719d20daa485fa058923111e3e418d17028", "patch": "@@ -7475,7 +7475,7 @@ s390_va_start (tree valist, rtx nextarg ATTRIBUTE_UNUSED)\n   f_ovf = TREE_CHAIN (f_fpr);\n   f_sav = TREE_CHAIN (f_ovf);\n \n-  valist = build1 (INDIRECT_REF, TREE_TYPE (TREE_TYPE (valist)), valist);\n+  valist = build_va_arg_indirect_ref (valist);\n   gpr = build (COMPONENT_REF, TREE_TYPE (f_gpr), valist, f_gpr, NULL_TREE);\n   fpr = build (COMPONENT_REF, TREE_TYPE (f_fpr), valist, f_fpr, NULL_TREE);\n   ovf = build (COMPONENT_REF, TREE_TYPE (f_ovf), valist, f_ovf, NULL_TREE);\n@@ -7565,7 +7565,7 @@ s390_gimplify_va_arg (tree valist, tree type, tree *pre_p,\n   f_ovf = TREE_CHAIN (f_fpr);\n   f_sav = TREE_CHAIN (f_ovf);\n \n-  valist = build1 (INDIRECT_REF, TREE_TYPE (TREE_TYPE (valist)), valist);\n+  valist = build_va_arg_indirect_ref (valist);\n   gpr = build (COMPONENT_REF, TREE_TYPE (f_gpr), valist, f_gpr, NULL_TREE);\n   fpr = build (COMPONENT_REF, TREE_TYPE (f_fpr), valist, f_fpr, NULL_TREE);\n   ovf = build (COMPONENT_REF, TREE_TYPE (f_ovf), valist, f_ovf, NULL_TREE);\n@@ -7700,15 +7700,15 @@ s390_gimplify_va_arg (tree valist, tree type, tree *pre_p,\n     {\n       t = build_pointer_type (build_pointer_type (type));\n       addr = fold_convert (t, addr);\n-      addr = build_fold_indirect_ref (addr);\n+      addr = build_va_arg_indirect_ref (addr);\n     }\n   else\n     {\n       t = build_pointer_type (type);\n       addr = fold_convert (t, addr);\n     }\n \n-  return build_fold_indirect_ref (addr);\n+  return build_va_arg_indirect_ref (addr);\n }\n \n "}]}