{"sha": "90ee136828b4edb0e3cc00736c9b11213ee4bf85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBlZTEzNjgyOGI0ZWRiMGUzY2MwMDczNmM5YjExMjEzZWU0YmY4NQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2005-03-21T17:50:19Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2005-03-21T17:50:19Z"}, "message": "Makefile.in: Set gcc_version directly, not via substitution.\n\n\t* Makefile.in: Set gcc_version directly, not via substitution.\n\t(libsubdir): Use $(gcc_version), not $(version).\n\t(mkheaders.almost): New rule.\n\t(mkheaders): Generate from mkheaders.almost.\n\t(clean): Also delete mkheaders.almost.\n\t* aclocal.m4: Do not include ../config/gcc-version.m4.\n\t* configure.ac: Do not invoke TL_AC_GCC_VERSION.  Generate\n\tmkheaders.almost from mkheaders.in.\n\t* configure: Regenerate.\n\nFrom-SVN: r96819", "tree": {"sha": "df976f44ca465117ed08cb1ff0c22fb46aa813f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df976f44ca465117ed08cb1ff0c22fb46aa813f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90ee136828b4edb0e3cc00736c9b11213ee4bf85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90ee136828b4edb0e3cc00736c9b11213ee4bf85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90ee136828b4edb0e3cc00736c9b11213ee4bf85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90ee136828b4edb0e3cc00736c9b11213ee4bf85/comments", "author": null, "committer": null, "parents": [{"sha": "140e859c6ca288c6c421db6dc04428755ccc066e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/140e859c6ca288c6c421db6dc04428755ccc066e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/140e859c6ca288c6c421db6dc04428755ccc066e"}], "stats": {"total": 60, "additions": 27, "deletions": 33}, "files": [{"sha": "54344bc75a3b99aa8bbaae33f80067253cd62ea1", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90ee136828b4edb0e3cc00736c9b11213ee4bf85/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90ee136828b4edb0e3cc00736c9b11213ee4bf85/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=90ee136828b4edb0e3cc00736c9b11213ee4bf85", "patch": "@@ -1,3 +1,15 @@\n+2005-03-21  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* Makefile.in: Set gcc_version directly, not via substitution.\n+\t(libsubdir): Use $(gcc_version), not $(version).\n+\t(mkheaders.almost): New rule.\n+\t(mkheaders): Generate from mkheaders.almost.\n+\t(clean): Also delete mkheaders.almost.\n+\t* aclocal.m4: Do not include ../config/gcc-version.m4.\n+\t* configure.ac: Do not invoke TL_AC_GCC_VERSION.  Generate\n+\tmkheaders.almost from mkheaders.in.\n+\t* configure: Regenerate.\n+\n 2005-03-21  Richard Guenther  <rguenth@gcc.gnu.org>\n \n \tPR target/20166\n@@ -123,7 +135,7 @@\n \n \t* inclhack.def (stdio_va_list): Break out clients from here...\n \t(stdio_va_list_clients): ...to here.  Also, don't fix if stdarg.h is\n-        included or ifdef va_start.\n+\tincluded or ifdef va_start.\n \t* fixincl.x: Regenerate.\n \n 2004-10-28  Mike Stump  <mrs@apple.com>"}, {"sha": "54382cc80214f4a6f8ac5ac017d84695feef0349", "filename": "fixincludes/Makefile.in", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90ee136828b4edb0e3cc00736c9b11213ee4bf85/fixincludes%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90ee136828b4edb0e3cc00736c9b11213ee4bf85/fixincludes%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FMakefile.in?ref=90ee136828b4edb0e3cc00736c9b11213ee4bf85", "patch": "@@ -49,10 +49,10 @@ target = @target@\n target_noncanonical:=@target_noncanonical@\n \n # The version of GCC in this tree\n-gcc_version=@gcc_version@\n+gcc_version := $(shell cat $(srcdir)/../gcc/BASE-VER)\n \n # Directory in which the compiler finds libraries etc.\n-libsubdir = $(libdir)/gcc/$(target_noncanonical)/$(version)\n+libsubdir = $(libdir)/gcc/$(target_noncanonical)/$(gcc_version)\n # Directory in which the compiler finds executables\n libexecsubdir = $(libexecdir)/gcc/$(target_noncanonical)/$(gcc_version)\n # Where our executable files go\n@@ -130,7 +130,7 @@ mostlyclean :\n \trm -f *.o *-stamp $(AF) $(FI) *~ fixinc.sh\n \n clean: mostlyclean\n-\trm -f mkheaders\n+\trm -f mkheaders mkheaders.almost\n \n distclean: clean\n \trm -f Makefile config.h config.log config.status stamp-h\n@@ -143,8 +143,13 @@ distclean : clean\n Makefile: $(srcdir)/Makefile.in config.status\n \t$(SHELL) ./config.status Makefile\n \n-mkheaders: $(srcdir)/mkheaders.in config.status\n-\tCONFIG_FILES=mkheaders CONFIG_HEADERS= ./config.status\n+mkheaders.almost: $(srcdir)/mkheaders.in config.status\n+\tCONFIG_FILES=mkheaders.almost:mkheaders.in \\\n+\tCONFIG_HEADERS= ./config.status\n+\n+mkheaders: mkheaders.almost $(srcdir)/../gcc/BASE-VER\n+\tsed -e 's/@gcc_version@/$(gcc_version)/' < $< > $@T\n+\tmv -f $@T $@\n \n config.h: stamp-h\n stamp-h: $(srcdir)/config.h.in config.status"}, {"sha": "6f1679e009a53f6b925784d4091cbc1d1023d805", "filename": "fixincludes/aclocal.m4", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90ee136828b4edb0e3cc00736c9b11213ee4bf85/fixincludes%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90ee136828b4edb0e3cc00736c9b11213ee4bf85/fixincludes%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Faclocal.m4?ref=90ee136828b4edb0e3cc00736c9b11213ee4bf85", "patch": "@@ -1,6 +1,5 @@\n sinclude(../config/acx.m4)\n sinclude(../config/accross.m4)\n-sinclude(../config/gcc-version.m4)\n sinclude(../config/gettext.m4)\n sinclude(../config/progtest.m4)\n "}, {"sha": "ed9974e8319b1e719be355e31a1daf0a3a615b7a", "filename": "fixincludes/configure", "status": "modified", "additions": 3, "deletions": 23, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90ee136828b4edb0e3cc00736c9b11213ee4bf85/fixincludes%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90ee136828b4edb0e3cc00736c9b11213ee4bf85/fixincludes%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fconfigure?ref=90ee136828b4edb0e3cc00736c9b11213ee4bf85", "patch": "@@ -309,7 +309,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT target_noncanonical TARGET gcc_version_trigger gcc_version_full gcc_version CPP EGREP MAINT LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT target_noncanonical TARGET CPP EGREP MAINT LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -2425,23 +2425,6 @@ _ACEOF\n \n fi\n \n-\n-if test \"${with_gcc_version_trigger+set}\" = set; then\n-  gcc_version_trigger=$with_gcc_version_trigger\n-else\n-  gcc_version_trigger=$srcdir/../gcc/version.c\n-fi\n-if test -f \"${gcc_version_trigger}\"; then\n-  gcc_version_full=`grep version_string \"${gcc_version_trigger}\" | sed -e 's/.*\"\\([^\"]*\\)\".*/\\1/'`\n-else\n-  gcc_version_full=`$CC -v 2>&1 | sed -n 's/^gcc version //p'`\n-fi\n-gcc_version=`echo ${gcc_version_full} | sed -e 's/\\([^ ]*\\) .*/\\1/'`\n-\n-\n-\n-\n-\n case $host in\n \tvax-dec-bsd* )\n \n@@ -4241,7 +4224,7 @@ fi\n \n           ac_config_headers=\"$ac_config_headers config.h\"\n \n-                    ac_config_files=\"$ac_config_files Makefile mkheaders\"\n+                    ac_config_files=\"$ac_config_files Makefile mkheaders.almost:mkheaders.in\"\n \n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n@@ -4768,7 +4751,7 @@ do\n   case \"$ac_config_target\" in\n   # Handling of arguments.\n   \"Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n-  \"mkheaders\" ) CONFIG_FILES=\"$CONFIG_FILES mkheaders\" ;;\n+  \"mkheaders.almost\" ) CONFIG_FILES=\"$CONFIG_FILES mkheaders.almost:mkheaders.in\" ;;\n   \"config.h\" ) CONFIG_HEADERS=\"$CONFIG_HEADERS config.h\" ;;\n   *) { { echo \"$as_me:$LINENO: error: invalid argument: $ac_config_target\" >&5\n echo \"$as_me: error: invalid argument: $ac_config_target\" >&2;}\n@@ -4875,9 +4858,6 @@ s,@EXEEXT@,$EXEEXT,;t t\n s,@OBJEXT@,$OBJEXT,;t t\n s,@target_noncanonical@,$target_noncanonical,;t t\n s,@TARGET@,$TARGET,;t t\n-s,@gcc_version_trigger@,$gcc_version_trigger,;t t\n-s,@gcc_version_full@,$gcc_version_full,;t t\n-s,@gcc_version@,$gcc_version,;t t\n s,@CPP@,$CPP,;t t\n s,@EGREP@,$EGREP,;t t\n s,@MAINT@,$MAINT,;t t"}, {"sha": "516179e2600b68f211190d3db5efbf7f194d3ea4", "filename": "fixincludes/configure.ac", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90ee136828b4edb0e3cc00736c9b11213ee4bf85/fixincludes%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90ee136828b4edb0e3cc00736c9b11213ee4bf85/fixincludes%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fconfigure.ac?ref=90ee136828b4edb0e3cc00736c9b11213ee4bf85", "patch": "@@ -52,8 +52,6 @@ if test $TARGET = twoprocess; then\n \t\t  [Define if testing and fixing are done by separate process])\n fi\n \n-TL_AC_GCC_VERSION([$srcdir/..])\n-\n case $host in\n \tvax-dec-bsd* )\n \t\tAC_DEFINE(exit, xexit, [Define to xexit if the host system does not support atexit])\n@@ -94,5 +92,5 @@ fi\n AC_SUBST(MAINT)\n \n AC_CONFIG_HEADERS(config.h, [echo timestamp > stamp-h])\n-AC_CONFIG_FILES(Makefile mkheaders)\n+AC_CONFIG_FILES(Makefile mkheaders.almost:mkheaders.in)\n AC_OUTPUT"}]}