{"sha": "80e2a014c8f9517884c069c7718faa5211c4f895", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBlMmEwMTRjOGY5NTE3ODg0YzA2OWM3NzE4ZmFhNTIxMWM0Zjg5NQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-05-18T14:37:30Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-05-18T14:37:30Z"}, "message": "ipacp_0.c: New test.\n\n\t* gcc.dg/lto/ipacp_0.c: New test.\n\t* gcc.dg/lto/ipacp_1.c: New test.\n\n\t* opts.c (decode_options): Do not disable whopr at ipa_cp.\n\t* ipa-prop.c (ipa_detect_param_modifications): Walk PHI nodes too.\n\nFrom-SVN: r159535", "tree": {"sha": "73de9712ab9d7c929ac571c089b4878eb3bd9419", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73de9712ab9d7c929ac571c089b4878eb3bd9419"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80e2a014c8f9517884c069c7718faa5211c4f895", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80e2a014c8f9517884c069c7718faa5211c4f895", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80e2a014c8f9517884c069c7718faa5211c4f895", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80e2a014c8f9517884c069c7718faa5211c4f895/comments", "author": null, "committer": null, "parents": [{"sha": "26195ca5a2ecf64f5a8ff0bfbe206eaf377b8a33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26195ca5a2ecf64f5a8ff0bfbe206eaf377b8a33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26195ca5a2ecf64f5a8ff0bfbe206eaf377b8a33"}], "stats": {"total": 57, "additions": 49, "deletions": 8}, "files": [{"sha": "4519c0ae2588fdd078ca8d12c94758c8c5a09548", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80e2a014c8f9517884c069c7718faa5211c4f895/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80e2a014c8f9517884c069c7718faa5211c4f895/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80e2a014c8f9517884c069c7718faa5211c4f895", "patch": "@@ -1,3 +1,8 @@\n+2010-05-18  Jan Hubicka  <jh@suse.cz>\n+\n+\t* opts.c (decode_options): Do not disable whopr at ipa_cp.\n+\t* ipa-prop.c (ipa_detect_param_modifications): Walk PHI nodes too.\n+\n 2010-05-18  Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR lto/44184"}, {"sha": "6afc7135737ebed431e48f7f7ec1a32bbb4104a3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80e2a014c8f9517884c069c7718faa5211c4f895/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80e2a014c8f9517884c069c7718faa5211c4f895/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=80e2a014c8f9517884c069c7718faa5211c4f895", "patch": "@@ -7456,8 +7456,6 @@ that otherwise would not fit in memory.  This option enables\n \n Disabled by default.\n \n-This option is experimental.\n-\n @item -fwpa\n @opindex fwpa\n This is an internal option used by GCC when compiling with"}, {"sha": "6437389876e0f8bc0eda6e4473982b5542b53af4", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80e2a014c8f9517884c069c7718faa5211c4f895/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80e2a014c8f9517884c069c7718faa5211c4f895/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=80e2a014c8f9517884c069c7718faa5211c4f895", "patch": "@@ -269,11 +269,18 @@ ipa_detect_param_modifications (struct cgraph_node *node)\n \n   func = DECL_STRUCT_FUNCTION (decl);\n   FOR_EACH_BB_FN (bb, func)\n-    for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n-      walk_stmt_load_store_addr_ops (gsi_stmt (gsi), info,\n-\t\t\t\t     visit_load_for_mod_analysis,\n-\t\t\t\t     visit_store_addr_for_mod_analysis,\n-\t\t\t\t     visit_store_addr_for_mod_analysis);\n+    {\n+      for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+\twalk_stmt_load_store_addr_ops (gsi_stmt (gsi), info,\n+\t\t\t\t       visit_load_for_mod_analysis,\n+\t\t\t\t       visit_store_addr_for_mod_analysis,\n+\t\t\t\t       visit_store_addr_for_mod_analysis);\n+      for (gsi = gsi_start (phi_nodes (bb)); !gsi_end_p (gsi); gsi_next (&gsi))\n+\twalk_stmt_load_store_addr_ops (gsi_stmt (gsi), info,\n+\t\t\t\t       visit_load_for_mod_analysis,\n+\t\t\t\t       visit_store_addr_for_mod_analysis,\n+\t\t\t\t       visit_store_addr_for_mod_analysis);\n+    }\n \n   info->modification_analysis_done = 1;\n }"}, {"sha": "d5a9fb3336ed0e3055c6b0d94e111aa22aa09c47", "filename": "gcc/opts.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80e2a014c8f9517884c069c7718faa5211c4f895/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80e2a014c8f9517884c069c7718faa5211c4f895/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=80e2a014c8f9517884c069c7718faa5211c4f895", "patch": "@@ -1150,7 +1150,6 @@ decode_options (unsigned int argc, const char **argv)\n   if (flag_wpa || flag_ltrans)\n     {\n       /* These passes are not WHOPR compatible yet.  */\n-      flag_ipa_cp = 0;\n       flag_ipa_pta = 0;\n       flag_ipa_struct_reorg = 0;\n     }"}, {"sha": "15200cd74fa89d3ad0b4a6db1e4c87525c76ffed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80e2a014c8f9517884c069c7718faa5211c4f895/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80e2a014c8f9517884c069c7718faa5211c4f895/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=80e2a014c8f9517884c069c7718faa5211c4f895", "patch": "@@ -1,3 +1,8 @@\n+2010-05-18  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcc.dg/lto/ipacp_0.c: New test.\n+\t* gcc.dg/lto/ipacp_1.c: New test.\n+\n 2010-05-18  Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR lto/44184"}, {"sha": "3212261baa785b42f14d528bba4eed5813378c89", "filename": "gcc/testsuite/gcc.dg/lto/ipacp_0.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80e2a014c8f9517884c069c7718faa5211c4f895/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipacp_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80e2a014c8f9517884c069c7718faa5211c4f895/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipacp_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipacp_0.c?ref=80e2a014c8f9517884c069c7718faa5211c4f895", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-lto-options {{ -O1 -fwhopr -fipa-cp -fipa-cp-clone}} } */\n+/* { dg-lto-do run } */\n+\n+/* Test that clonning happens and we unify declarations of a from both units.  */\n+const int a = 5;\n+extern void clone_me (int *);\n+\n+int\n+main(void)\n+{\n+  int i;\n+  for (i=0;i<100;i++)\n+   clone_me ((int *)&a);\n+  return 0;\n+}"}, {"sha": "69c1ec6e983cedcc811447ef8a3ee0b76b278e48", "filename": "gcc/testsuite/gcc.dg/lto/ipacp_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80e2a014c8f9517884c069c7718faa5211c4f895/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipacp_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80e2a014c8f9517884c069c7718faa5211c4f895/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipacp_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fipacp_1.c?ref=80e2a014c8f9517884c069c7718faa5211c4f895", "patch": "@@ -0,0 +1,12 @@\n+void abort (void);\n+extern int a;\n+\n+__attribute__ ((noinline))\n+void\n+clone_me (int *ptr)\n+{\n+  if (ptr != &a)\n+    abort ();\n+  if (!__builtin_constant_p (ptr != &a))\n+    abort ();\n+}"}]}