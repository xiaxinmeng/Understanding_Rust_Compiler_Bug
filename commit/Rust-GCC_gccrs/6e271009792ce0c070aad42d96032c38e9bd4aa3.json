{"sha": "6e271009792ce0c070aad42d96032c38e9bd4aa3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUyNzEwMDk3OTJjZTBjMDcwYWFkNDJkOTYwMzJjMzhlOWJkNGFhMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-04-23T10:10:10Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-04-23T10:10:10Z"}, "message": "re PR debug/90131 (wrong debug info at -O3)\n\n2019-04-23  Richard Biener  <rguenther@suse.de>\n\n\tPR debug/90131\n\t* tree-cfgcleanup.c (move_debug_stmts_from_forwarder): Add\n\tdest_single_pred_p argument.\n\t(remove_forwarder_block): Adjust.\n\t(remove_forwarder_block_with_phi): Likewise.\n\nFrom-SVN: r270505", "tree": {"sha": "ffa115952d0cca993030321e33eeea61e310a197", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffa115952d0cca993030321e33eeea61e310a197"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e271009792ce0c070aad42d96032c38e9bd4aa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e271009792ce0c070aad42d96032c38e9bd4aa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e271009792ce0c070aad42d96032c38e9bd4aa3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e271009792ce0c070aad42d96032c38e9bd4aa3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "48528842bd79cb2e2a1d478b1d90d748377bb76c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48528842bd79cb2e2a1d478b1d90d748377bb76c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48528842bd79cb2e2a1d478b1d90d748377bb76c"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "0823ca9bcfaf69aae630343958b6a9604586c5df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e271009792ce0c070aad42d96032c38e9bd4aa3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e271009792ce0c070aad42d96032c38e9bd4aa3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e271009792ce0c070aad42d96032c38e9bd4aa3", "patch": "@@ -1,3 +1,11 @@\n+2019-04-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/90131\n+\t* tree-cfgcleanup.c (move_debug_stmts_from_forwarder): Add\n+\tdest_single_pred_p argument.\n+\t(remove_forwarder_block): Adjust.\n+\t(remove_forwarder_block_with_phi): Likewise.\n+\n 2019-04-23  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \t    Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \t    Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "183b491ab1d3ccd0e448e16b1fb5df652cfec8ff", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e271009792ce0c070aad42d96032c38e9bd4aa3/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e271009792ce0c070aad42d96032c38e9bd4aa3/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=6e271009792ce0c070aad42d96032c38e9bd4aa3", "patch": "@@ -447,20 +447,20 @@ phi_alternatives_equal (basic_block dest, edge e1, edge e2)\n /* Move debug stmts from the forwarder block SRC to DEST.  */\n \n static void\n-move_debug_stmts_from_forwarder (basic_block src, basic_block dest)\n+move_debug_stmts_from_forwarder (basic_block src, basic_block dest,\n+\t\t\t\t bool dest_single_pred_p)\n {\n   if (!MAY_HAVE_DEBUG_STMTS)\n     return;\n \n-  bool can_move_debug_stmts = single_pred_p (dest);\n   gimple_stmt_iterator gsi_to = gsi_after_labels (dest);\n   for (gimple_stmt_iterator gsi = gsi_after_labels (src); !gsi_end_p (gsi);)\n     {\n       gimple *debug = gsi_stmt (gsi);\n       gcc_assert (is_gimple_debug (debug));\n       /* Move debug binds anyway, but not anything else like begin-stmt\n \t markers unless they are always valid at the destination.  */\n-      if (can_move_debug_stmts\n+      if (dest_single_pred_p\n \t  || gimple_debug_bind_p (debug))\n \t{\n \t  gsi_move_before (&gsi, &gsi_to);\n@@ -472,7 +472,7 @@ move_debug_stmts_from_forwarder (basic_block src, basic_block dest)\n \t     For anther, if the debug stmt is immediately followed by a\n \t     (debug) definition in the destination (on a post-dominated path?)\n \t     we can elide it without any bad effects.  */\n-\t  if (!can_move_debug_stmts)\n+\t  if (!dest_single_pred_p)\n \t    {\n \t      gimple_debug_bind_reset_value (debug);\n \t      update_stmt (debug);\n@@ -544,6 +544,7 @@ remove_forwarder_block (basic_block bb)\n   basic_block pred = NULL;\n   if (single_pred_p (bb))\n     pred = single_pred (bb);\n+  bool dest_single_pred_p = single_pred_p (dest);\n \n   /* Redirect the edges.  */\n   for (ei = ei_start (bb->preds); (e = ei_safe_edge (ei)); )\n@@ -602,7 +603,7 @@ remove_forwarder_block (basic_block bb)\n \n   /* Move debug statements.  Reset them if the destination does not\n      have a single predecessor.  */\n-  move_debug_stmts_from_forwarder (bb, dest);\n+  move_debug_stmts_from_forwarder (bb, dest, dest_single_pred_p);\n \n   bitmap_set_bit (cfgcleanup_altered_bbs, dest->index);\n \n@@ -1203,6 +1204,7 @@ remove_forwarder_block_with_phi (basic_block bb)\n   basic_block pred = NULL;\n   if (single_pred_p (bb))\n     pred = single_pred (bb);\n+  bool dest_single_pred_p = single_pred_p (dest);\n \n   /* Redirect each incoming edge to BB to DEST.  */\n   while (EDGE_COUNT (bb->preds) > 0)\n@@ -1287,7 +1289,7 @@ remove_forwarder_block_with_phi (basic_block bb)\n \n   /* Move debug statements.  Reset them if the destination does not\n      have a single predecessor.  */\n-  move_debug_stmts_from_forwarder (bb, dest);\n+  move_debug_stmts_from_forwarder (bb, dest, dest_single_pred_p);\n \n   /* Update the dominators.  */\n   dombb = get_immediate_dominator (CDI_DOMINATORS, bb);"}]}