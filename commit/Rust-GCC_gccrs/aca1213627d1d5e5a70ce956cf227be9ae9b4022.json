{"sha": "aca1213627d1d5e5a70ce956cf227be9ae9b4022", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNhMTIxMzYyN2QxZDVlNWE3MGNlOTU2Y2YyMjdiZTlhZTliNDAyMg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-06-24T10:53:24Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-06-24T12:11:32Z"}, "message": "Fix --gdwarf-5 configure tests for Windows\n\nThe issues are that 1) they use readelf instead of objdump and 2) they use\nELF syntax in the assembly code.\n\ngcc/\n\t* configure.ac (--gdwarf-5 option): Use objdump instead of readelf.\n\t(working --gdwarf-4/--gdwarf-5 for all sources): Likewise.\n\t(--gdwarf-4 not refusing generated .debug_line): Adjust for Windows.\n\t* configure: Regenerate.", "tree": {"sha": "5cbecc347885dc75a5133854db1aa0f8f57ac1bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cbecc347885dc75a5133854db1aa0f8f57ac1bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aca1213627d1d5e5a70ce956cf227be9ae9b4022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aca1213627d1d5e5a70ce956cf227be9ae9b4022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aca1213627d1d5e5a70ce956cf227be9ae9b4022", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aca1213627d1d5e5a70ce956cf227be9ae9b4022/comments", "author": null, "committer": null, "parents": [{"sha": "2898a02fd5e51e4562be2dc16b755288400e4456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2898a02fd5e51e4562be2dc16b755288400e4456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2898a02fd5e51e4562be2dc16b755288400e4456"}], "stats": {"total": 72, "additions": 46, "deletions": 26}, "files": [{"sha": "f0b2ebde3cfb6e8ede22c944d499e0ce606dda36", "filename": "gcc/configure", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aca1213627d1d5e5a70ce956cf227be9ae9b4022/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aca1213627d1d5e5a70ce956cf227be9ae9b4022/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=aca1213627d1d5e5a70ce956cf227be9ae9b4022", "patch": "@@ -29145,8 +29145,8 @@ fi\n   $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n   test $ac_status = 0; }; }\n     then\n-\tif test x$gcc_cv_readelf != x \\\n-      && $gcc_cv_readelf -wi conftest.o 2>&1 \\\n+\tif test x$gcc_cv_objdump != x \\\n+      && $gcc_cv_objdump -Wi conftest.o 2>&1 \\\n \t | grep DW_TAG_compile_unit > /dev/null 2>&1; then\n      gcc_cv_as_gdwarf_5_flag=yes;\n    fi\n@@ -29166,6 +29166,16 @@ $as_echo \"#define HAVE_AS_GDWARF_5_DEBUG_FLAG 1\" >>confdefs.h\n fi\n \n \n+ case $target_os in\n+   win32 | pe | cygwin* | mingw32*)\n+     section_flags=\\\"dr\\\"\n+     function_type=\".def foo; .scl 2; .type 32; .endef\"\n+     function_size=\"\";;\n+   *)\n+     section_flags=\\\"\\\",%progbits\n+     function_type=\".type foo, %function\"\n+     function_size=\".size foo, .-foo\";;\n+ esac\n  dwarf4_debug_info_size=0x46\n  dwarf4_high_pc_form=7\n  dwarf4_debug_aranges_size=0x2c\n@@ -29177,16 +29187,16 @@ fi\n .Ltext0:\n \t.p2align 4\n \t.globl\tfoo\n-\t.type\tfoo, %function\n+\t$function_type\n foo:\n .LFB0:\n .LM1:\n \t$insn\n .LM2:\n .LFE0:\n-\t.size\tfoo, .-foo\n+\t$function_size\n .Letext0:\n-\t.section\t.debug_info,\\\"\\\",%progbits\n+\t.section\t.debug_info,$section_flags\n .Ldebug_info0:\n \t.4byte\t$dwarf4_debug_info_size\n \t.2byte\t0x4\n@@ -29210,7 +29220,7 @@ foo:\n \t.byte\t0x1\n \t.byte\t0x9c\n \t.byte\t0\n-\t.section\t.debug_abbrev,\\\"\\\",%progbits\n+\t.section\t.debug_abbrev,$section_flags\n .Ldebug_abbrev0:\n \t.byte\t0x1\n \t.byte\t0x11\n@@ -29253,7 +29263,7 @@ foo:\n \t.byte\t0\n \t.byte\t0\n \t.byte\t0\n-\t.section\t.debug_aranges,\\\"\\\",%progbits\n+\t.section\t.debug_aranges,$section_flags\n \t.4byte\t$dwarf4_debug_aranges_size\n \t.2byte\t0x2\n \t.4byte\t.Ldebug_info0\n@@ -29265,7 +29275,7 @@ foo:\n \t.${dwarf4_addr_size}byte\t.Letext0-.Ltext0\n \t.${dwarf4_addr_size}byte\t0\n \t.${dwarf4_addr_size}byte\t0\n-\t.section\t.debug_line,\\\"\\\",%progbits\n+\t.section\t.debug_line,$section_flags\n .Ldebug_line0:\n \t.4byte\t.LELT0-.LSLT0\n .LSLT0:\n@@ -29319,7 +29329,7 @@ foo:\n \t.byte\t0x1\n \t.byte\t0x1\n .LELT0:\n-\t.section\t.debug_str,\\\"\\\",%progbits\n+\t.section\t.debug_str,$section_flags\n \t.ident\t\\\"GCC\\\"\n \"\n    dwarf4_success=no\n@@ -29491,10 +29501,10 @@ fi\n    conftest_s=\"\\\n \t.text\n \t.globl\tfoo\n-\t.type\tfoo, %function\n+\t$function_type\n foo:\n \t$insn\n-\t.size\tfoo, .-foo\n+\t$function_size\n \t.file\t1 \\\"foo.c\\\"\n \"\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for working --gdwarf-4/--gdwarf-5 for all sources\" >&5\n@@ -29512,8 +29522,8 @@ else\n   $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n   test $ac_status = 0; }; }\n     then\n-\t      if test x$gcc_cv_readelf != x \\\n-\t && $gcc_cv_readelf -w conftest.o 2>&1 \\\n+\t      if test x$gcc_cv_objdump != x \\\n+\t && $gcc_cv_objdump -W conftest.o 2>&1 \\\n \t\t| grep conftest.s > /dev/null 2>&1; then\n \tgcc_cv_as_working_gdwarf_n_flag=no\n       else"}, {"sha": "70089394429f042687b41161f3a5b9c95754f4b4", "filename": "gcc/configure.ac", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aca1213627d1d5e5a70ce956cf227be9ae9b4022/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aca1213627d1d5e5a70ce956cf227be9ae9b4022/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=aca1213627d1d5e5a70ce956cf227be9ae9b4022", "patch": "@@ -5457,13 +5457,23 @@ if test x\"$insn\" != x; then\n  gcc_GAS_CHECK_FEATURE([--gdwarf-5 option],\n   gcc_cv_as_gdwarf_5_flag,\n   [elf,2,36,0], [--gdwarf-5], [$insn],\n-  [if test x$gcc_cv_readelf != x \\\n-      && $gcc_cv_readelf -wi conftest.o 2>&1 \\\n+  [if test x$gcc_cv_objdump != x \\\n+      && $gcc_cv_objdump -Wi conftest.o 2>&1 \\\n \t | grep DW_TAG_compile_unit > /dev/null 2>&1; then\n      gcc_cv_as_gdwarf_5_flag=yes;\n    fi],[AC_DEFINE(HAVE_AS_GDWARF_5_DEBUG_FLAG, 1,\n [Define if your assembler supports the --gdwarf-5 option.])])\n \n+ case $target_os in\n+   win32 | pe | cygwin* | mingw32*)\n+     section_flags=\\\"dr\\\"\n+     function_type=\".def foo; .scl 2; .type 32; .endef\"\n+     function_size=\"\";;\n+   *)\n+     section_flags=\\\"\\\",%progbits\n+     function_type=\".type foo, %function\"\n+     function_size=\".size foo, .-foo\";;\n+ esac\n  dwarf4_debug_info_size=0x46\n  dwarf4_high_pc_form=7\n  dwarf4_debug_aranges_size=0x2c\n@@ -5475,16 +5485,16 @@ if test x\"$insn\" != x; then\n .Ltext0:\n \t.p2align 4\n \t.globl\tfoo\n-\t.type\tfoo, %function\n+\t$function_type\n foo:\n .LFB0:\n .LM1:\n \t$insn\n .LM2:\n .LFE0:\n-\t.size\tfoo, .-foo\n+\t$function_size\n .Letext0:\n-\t.section\t.debug_info,\\\"\\\",%progbits\n+\t.section\t.debug_info,$section_flags\n .Ldebug_info0:\n \t.4byte\t$dwarf4_debug_info_size\n \t.2byte\t0x4\n@@ -5508,7 +5518,7 @@ foo:\n \t.byte\t0x1\n \t.byte\t0x9c\n \t.byte\t0\n-\t.section\t.debug_abbrev,\\\"\\\",%progbits\n+\t.section\t.debug_abbrev,$section_flags\n .Ldebug_abbrev0:\n \t.byte\t0x1\n \t.byte\t0x11\n@@ -5551,7 +5561,7 @@ foo:\n \t.byte\t0\n \t.byte\t0\n \t.byte\t0\n-\t.section\t.debug_aranges,\\\"\\\",%progbits\n+\t.section\t.debug_aranges,$section_flags\n \t.4byte\t$dwarf4_debug_aranges_size\n \t.2byte\t0x2\n \t.4byte\t.Ldebug_info0\n@@ -5563,7 +5573,7 @@ foo:\n \t.${dwarf4_addr_size}byte\t.Letext0-.Ltext0\n \t.${dwarf4_addr_size}byte\t0\n \t.${dwarf4_addr_size}byte\t0\n-\t.section\t.debug_line,\\\"\\\",%progbits\n+\t.section\t.debug_line,$section_flags\n .Ldebug_line0:\n \t.4byte\t.LELT0-.LSLT0\n .LSLT0:\n@@ -5617,7 +5627,7 @@ foo:\n \t.byte\t0x1\n \t.byte\t0x1\n .LELT0:\n-\t.section\t.debug_str,\\\"\\\",%progbits\n+\t.section\t.debug_str,$section_flags\n \t.ident\t\\\"GCC\\\"\n \"\n    dwarf4_success=no\n@@ -5673,19 +5683,19 @@ foo:\n    conftest_s=\"\\\n \t.text\n \t.globl\tfoo\n-\t.type\tfoo, %function\n+\t$function_type\n foo:\n \t$insn\n-\t.size\tfoo, .-foo\n+\t$function_size\n \t.file\t1 \\\"foo.c\\\"\n \"\n    gcc_GAS_CHECK_FEATURE([working --gdwarf-4/--gdwarf-5 for all sources],\n      gcc_cv_as_working_gdwarf_n_flag,,\n      [--gdwarf-4],\n      [$conftest_s],\n      [changequote(,)dnl\n-      if test x$gcc_cv_readelf != x \\\n-\t && $gcc_cv_readelf -w conftest.o 2>&1 \\\n+      if test x$gcc_cv_objdump != x \\\n+\t && $gcc_cv_objdump -W conftest.o 2>&1 \\\n \t\t| grep conftest.s > /dev/null 2>&1; then\n \tgcc_cv_as_working_gdwarf_n_flag=no\n       else"}]}