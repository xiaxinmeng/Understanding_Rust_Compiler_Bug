{"sha": "67c2581668b93baed8e5b5e678656ce3ff306413", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdjMjU4MTY2OGI5M2JhZWQ4ZTViNWU2Nzg2NTZjZTNmZjMwNjQxMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-06-16T07:11:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-06-16T07:11:37Z"}, "message": "re PR rtl-optimization/71532 (FAIL: gfortran.dg/select_char_1.f90   -O2  execution test)\n\n\tPR rtl-optimization/71532\n\t* cse.c (cse_insn): For const/pure calls, invalidate argument passing\n\tmemory slots.\n\n\t* gcc.dg/torture/pr71532.c: New test.\n\nFrom-SVN: r237503", "tree": {"sha": "0b04943e88b5c999735334d10b33e213d9b3661e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b04943e88b5c999735334d10b33e213d9b3661e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67c2581668b93baed8e5b5e678656ce3ff306413", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67c2581668b93baed8e5b5e678656ce3ff306413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67c2581668b93baed8e5b5e678656ce3ff306413", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67c2581668b93baed8e5b5e678656ce3ff306413/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b189112fbbeeda82551fd71251728c107f2eeec5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b189112fbbeeda82551fd71251728c107f2eeec5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b189112fbbeeda82551fd71251728c107f2eeec5"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "0ffb38c3a1dd0325d7561d7006bfcdd9608b1c92", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c2581668b93baed8e5b5e678656ce3ff306413/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c2581668b93baed8e5b5e678656ce3ff306413/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=67c2581668b93baed8e5b5e678656ce3ff306413", "patch": "@@ -1,3 +1,9 @@\n+2016-06-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/71532\n+\t* cse.c (cse_insn): For const/pure calls, invalidate argument passing\n+\tmemory slots.\n+\n 2016-06-15  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/vsx.md (VSINT_84): Add DImode to enable loading"}, {"sha": "3b4cc96ce058d431e7b078282138049dc19e4808", "filename": "gcc/cse.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c2581668b93baed8e5b5e678656ce3ff306413/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c2581668b93baed8e5b5e678656ce3ff306413/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=67c2581668b93baed8e5b5e678656ce3ff306413", "patch": "@@ -5751,6 +5751,13 @@ cse_insn (rtx_insn *insn)\n     {\n       if (!(RTL_CONST_OR_PURE_CALL_P (insn)))\n \tinvalidate_memory ();\n+      else\n+\t/* For const/pure calls, invalidate any argument slots, because\n+\t   those are owned by the callee.  */\n+\tfor (tem = CALL_INSN_FUNCTION_USAGE (insn); tem; tem = XEXP (tem, 1))\n+\t  if (GET_CODE (XEXP (tem, 0)) == USE\n+\t      && MEM_P (XEXP (XEXP (tem, 0), 0)))\n+\t    invalidate (XEXP (XEXP (tem, 0), 0), VOIDmode);\n       invalidate_for_call ();\n     }\n "}, {"sha": "7362ecc111cdfc3f46e5e03ac926fddba67e698a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c2581668b93baed8e5b5e678656ce3ff306413/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c2581668b93baed8e5b5e678656ce3ff306413/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=67c2581668b93baed8e5b5e678656ce3ff306413", "patch": "@@ -1,3 +1,8 @@\n+2016-06-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/71532\n+\t* gcc.dg/torture/pr71532.c: New test.\n+\n 2016-06-15  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/p9-dimode1.c: New test."}, {"sha": "b10414f93f4e5dcca755316f7e0ea46e5efd9482", "filename": "gcc/testsuite/gcc.dg/torture/pr71532.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c2581668b93baed8e5b5e678656ce3ff306413/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71532.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c2581668b93baed8e5b5e678656ce3ff306413/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71532.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71532.c?ref=67c2581668b93baed8e5b5e678656ce3ff306413", "patch": "@@ -0,0 +1,39 @@\n+/* PR rtl-optimization/71532 */\n+/* { dg-do run } */\n+/* { dg-additional-options \"-mtune=slm\" { target i?86-*-* x86_64-*-* } } */\n+\n+__attribute__((noinline, noclone, pure)) int\n+foo (int a, int b, int c, int d, int e, int f, int g, int h, int i, int j, int k, int l)\n+{\n+  a++; b++; c++; d++; e++; f++; g++; h++; i++; j++; k++; l++;\n+  asm volatile (\"\" : : \"g\" (&a), \"g\" (&b), \"g\" (&c), \"g\" (&d) : \"memory\");\n+  asm volatile (\"\" : : \"g\" (&e), \"g\" (&f), \"g\" (&g), \"g\" (&h) : \"memory\");\n+  asm volatile (\"\" : : \"g\" (&i), \"g\" (&j), \"g\" (&k), \"g\" (&l) : \"memory\");\n+  return a + b + c + d + e + f + g + h + i + j + k + l;\n+}\n+\n+__attribute__((noinline, noclone, pure)) int\n+bar (int a, int b, int c, int d, int e, int f, int g, int h, int i, int j, int k, int l)\n+{\n+  a++; b++; c++; d++; e++; f++; g++; h++; i++; j++; k++; l++;\n+  asm volatile (\"\" : : \"g\" (&a), \"g\" (&b), \"g\" (&c), \"g\" (&d) : \"memory\");\n+  asm volatile (\"\" : : \"g\" (&e), \"g\" (&f), \"g\" (&g), \"g\" (&h) : \"memory\");\n+  asm volatile (\"\" : : \"g\" (&i), \"g\" (&j), \"g\" (&k), \"g\" (&l) : \"memory\");\n+  return 2 * a + b + c + d + e + f + g + h + i + j + k + l;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+test ()\n+{\n+  int a = foo (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n+  a += bar (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n+  return a;\n+}\n+\n+int\n+main ()\n+{\n+  if (test () != 182)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}