{"sha": "3e16b4359e86b36676ed01219e6deafa95f3c16b", "node_id": "C_kwDOANBUbNoAKDNlMTZiNDM1OWU4NmIzNjY3NmVkMDEyMTllNmRlYWZhOTVmM2MxNmI", "commit": {"author": {"name": "Surya Kumari Jangala", "email": "jskumari@linux.vnet.ibm.com", "date": "2022-06-10T14:22:57Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2022-06-14T17:36:48Z"}, "message": "regrename: Fix -fcompare-debug issue in check_new_reg_p [PR105041]\n\nIn check_new_reg_p, the nregs of a du chain is computed by obtaining the\nMODE of the first element in the chain, and then calling\nhard_regno_nregs() with the MODE. But the first element of the chain can\nbe a DEBUG_INSN whose mode need not be the same as the rest of the\nelements in the du chain. This was resulting in fcompare-debug failure\nas check_new_reg_p was returning a different result with -g for the same\ncandidate register. We can instead obtain nregs from the du chain\nitself.\n\n2022-06-10  Surya Kumari Jangala  <jskumari@linux.ibm.com>\n\ngcc/\n\tPR rtl-optimization/105041\n\t* regrename.cc (check_new_reg_p): Use nregs value from du chain.\n\ngcc/testsuite/\n\tPR rtl-optimization/105041\n\t* gcc.target/powerpc/pr105041.c: New test.", "tree": {"sha": "ee1e2755b35b6b4a74c92fc6f2f8dc13268fb8e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee1e2755b35b6b4a74c92fc6f2f8dc13268fb8e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e16b4359e86b36676ed01219e6deafa95f3c16b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e16b4359e86b36676ed01219e6deafa95f3c16b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e16b4359e86b36676ed01219e6deafa95f3c16b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e16b4359e86b36676ed01219e6deafa95f3c16b/comments", "author": null, "committer": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0e3ce634818b83965b87512938490df4d57f81d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0e3ce634818b83965b87512938490df4d57f81d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0e3ce634818b83965b87512938490df4d57f81d"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "f65135151d8ed9fa5a94f45e1768592951317b05", "filename": "gcc/regrename.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e16b4359e86b36676ed01219e6deafa95f3c16b/gcc%2Fregrename.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e16b4359e86b36676ed01219e6deafa95f3c16b/gcc%2Fregrename.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.cc?ref=3e16b4359e86b36676ed01219e6deafa95f3c16b", "patch": "@@ -324,8 +324,7 @@ static bool\n check_new_reg_p (int reg ATTRIBUTE_UNUSED, int new_reg,\n \t\t class du_head *this_head, HARD_REG_SET this_unavailable)\n {\n-  machine_mode mode = GET_MODE (*this_head->first->loc);\n-  int nregs = hard_regno_nregs (new_reg, mode);\n+  int nregs = this_head->nregs;\n   int i;\n   struct du_chain *tmp;\n "}, {"sha": "e5144b293a3a77bfe94d495dd954a1845df7e428", "filename": "gcc/testsuite/gcc.target/powerpc/pr105041.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e16b4359e86b36676ed01219e6deafa95f3c16b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr105041.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e16b4359e86b36676ed01219e6deafa95f3c16b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr105041.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr105041.c?ref=3e16b4359e86b36676ed01219e6deafa95f3c16b", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-options \"-mdejagnu-cpu=power4 -O2 -fcompare-debug -fharden-compares -frename-registers\" } */\n+\n+double m;\n+int n;\n+\n+unsigned int\n+foo (unsigned int x, int y)\n+{\n+  long long int a = y, b = !a;\n+  int c = 0;\n+\n+  if (b != x)\n+    while ((int) m == a)\n+      {\n+        c = a;\n+        a = 0;\n+      }\n+\n+  n = b = y;\n+\n+  return x + c;\n+}"}]}