{"sha": "116a365bd48cadc0ee03ebdd43fc85c1002b4367", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE2YTM2NWJkNDhjYWRjMGVlMDNlYmRkNDNmYzg1YzEwMDJiNDM2Nw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-09-17T22:58:38Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-09-17T22:58:38Z"}, "message": "re PR libstdc++/37547 ([c++0x] minmax with initializer_list gives incorrect results)\n\n2008-09-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/37547\n\t* include/bits/stl_algo.h (min(initializer_list<>),\n\tmin(initializer_list<>, Compare), max(initializer_list<>),\n\tmax(initializer_list<>, Compare), minmax(initializer_list<>),\n\tminmax(initializer_list<>, Compare)): Fix return type.\n\t* include/bits/algorithmfwd.h: Adjust.\n\t* testsuite/25_algorithms/headers/algorithm/synopsis.cc: Likewise.\n\t* testsuite/25_algorithms/max/requirements/explicit_instantiation/3.cc:\n        Likewise.\n        * testsuite/25_algorithms/max/requirements/explicit_instantiation/\n        pod2.cc: Likewise.\n\t* testsuite/25_algorithms/min/requirements/explicit_instantiation/3.cc:\n        Likewise.\n        * testsuite/25_algorithms/min/requirements/explicit_instantiation/\n        pod2.cc: Likewise.\n\t* testsuite/25_algorithms/minmax/requirements/explicit_instantiation/\n\t3.cc: Likewise.\n        * testsuite/25_algorithms/minmax/requirements/explicit_instantiation/\n        pod2.cc: Likewise.\n\t* testsuite/25_algorithms/max/37547.cc: New.\n\t* testsuite/25_algorithms/min/37547.cc: Likewise.\n\t* testsuite/25_algorithms/minmax/37547.cc: Likewise.\n\nFrom-SVN: r140435", "tree": {"sha": "f8d258492877d9eed5906263f6df625b1d47478a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8d258492877d9eed5906263f6df625b1d47478a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/116a365bd48cadc0ee03ebdd43fc85c1002b4367", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/116a365bd48cadc0ee03ebdd43fc85c1002b4367", "html_url": "https://github.com/Rust-GCC/gccrs/commit/116a365bd48cadc0ee03ebdd43fc85c1002b4367", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/116a365bd48cadc0ee03ebdd43fc85c1002b4367/comments", "author": null, "committer": null, "parents": [{"sha": "0b4e2af765d06ef7a49b7ad75cd205ea7c665819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b4e2af765d06ef7a49b7ad75cd205ea7c665819", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b4e2af765d06ef7a49b7ad75cd205ea7c665819"}], "stats": {"total": 215, "additions": 179, "deletions": 36}, "files": [{"sha": "0d9e413faa3a804aa91acd9675bd0ee721e2e470", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=116a365bd48cadc0ee03ebdd43fc85c1002b4367", "patch": "@@ -1,3 +1,28 @@\n+2008-09-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/37547\n+\t* include/bits/stl_algo.h (min(initializer_list<>),\n+\tmin(initializer_list<>, Compare), max(initializer_list<>),\n+\tmax(initializer_list<>, Compare), minmax(initializer_list<>),\n+\tminmax(initializer_list<>, Compare)): Fix return type.\n+\t* include/bits/algorithmfwd.h: Adjust.\n+\t* testsuite/25_algorithms/headers/algorithm/synopsis.cc: Likewise.\n+\t* testsuite/25_algorithms/max/requirements/explicit_instantiation/3.cc:\n+        Likewise.\n+        * testsuite/25_algorithms/max/requirements/explicit_instantiation/\n+        pod2.cc: Likewise.\n+\t* testsuite/25_algorithms/min/requirements/explicit_instantiation/3.cc:\n+        Likewise.\n+        * testsuite/25_algorithms/min/requirements/explicit_instantiation/\n+        pod2.cc: Likewise.\n+\t* testsuite/25_algorithms/minmax/requirements/explicit_instantiation/\n+\t3.cc: Likewise.\n+        * testsuite/25_algorithms/minmax/requirements/explicit_instantiation/\n+        pod2.cc: Likewise.\n+\t* testsuite/25_algorithms/max/37547.cc: New.\n+\t* testsuite/25_algorithms/min/37547.cc: Likewise.\n+\t* testsuite/25_algorithms/minmax/37547.cc: Likewise.\n+\n 2008-09-16  Chris Fairles  <chris.fairles@gmail.com>\n \n         * testsuite/25_algorithms/min/requirements/explicit_instantiation/3.cc:"}, {"sha": "0e2e2c0e277638dc268128d1c89f06c150c7096a", "filename": "libstdc++-v3/include/bits/algorithmfwd.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h?ref=116a365bd48cadc0ee03ebdd43fc85c1002b4367", "patch": "@@ -319,27 +319,27 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     minmax_element(_FIter, _FIter, _Compare);\n \n   template<typename _Tp>\n-    const _Tp&\n+    _Tp\n     min(initializer_list<_Tp>);\n \n   template<typename _Tp, typename _Compare>\n-    const _Tp&\n+    _Tp\n     min(initializer_list<_Tp>, _Compare);\n \n   template<typename _Tp>\n-    const _Tp&\n+    _Tp\n     max(initializer_list<_Tp>);\n \n   template<typename _Tp, typename _Compare>\n-    const _Tp&\n+    _Tp\n     max(initializer_list<_Tp>, _Compare);\n \n   template<typename _Tp>\n-    pair<const _Tp&, const _Tp&>\n+    pair<_Tp, _Tp>\n     minmax(initializer_list<_Tp>);\n \n   template<typename _Tp, typename _Compare>\n-    pair<const _Tp&, const _Tp&>\n+    pair<_Tp, _Tp>\n     minmax(initializer_list<_Tp>, _Compare);\n #endif\n "}, {"sha": "373881c7f1b36c7378a3bbfad0549a7c63046070", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=116a365bd48cadc0ee03ebdd43fc85c1002b4367", "patch": "@@ -4094,38 +4094,38 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       return std::make_pair(__min, __max);\n     }\n \n-  // N2722.\n+  // N2722 + fixes.\n   template<typename _Tp>\n-    inline const _Tp&\n+    inline _Tp\n     min(initializer_list<_Tp> __l)\n     { return *std::min_element(__l.begin(), __l.end()); }\n \n   template<typename _Tp, typename _Compare>\n-    inline const _Tp&\n+    inline _Tp\n     min(initializer_list<_Tp> __l, _Compare __comp)\n     { return *std::min_element(__l.begin(), __l.end(), __comp); }\n \n   template<typename _Tp>\n-    inline const _Tp&\n+    inline _Tp\n     max(initializer_list<_Tp> __l)\n     { return *std::max_element(__l.begin(), __l.end()); }\n \n   template<typename _Tp, typename _Compare>\n-    inline const _Tp&\n+    inline _Tp\n     max(initializer_list<_Tp> __l, _Compare __comp)\n     { return *std::max_element(__l.begin(), __l.end(), __comp); }\n \n   template<typename _Tp>\n-    inline pair<const _Tp&, const _Tp&>\n+    inline pair<_Tp, _Tp>\n     minmax(initializer_list<_Tp> __l)\n     {\n       pair<const _Tp*, const _Tp*> __p =\n \tstd::minmax_element(__l.begin(), __l.end());\n-      return std::make_pair(*__p.first, *__p.second);\n+      return std::pair<_Tp, _Tp>(*__p.first, *__p.second);\n     }\n \n   template<typename _Tp, typename _Compare>\n-    inline pair<const _Tp&, const _Tp&>\n+    inline pair<_Tp, _Tp>\n     minmax(initializer_list<_Tp> __l, _Compare __comp)\n     {\n       pair<const _Tp*, const _Tp*> __p ="}, {"sha": "aa4496b907b56dfe8d5cba39af884611e463b2bc", "filename": "libstdc++-v3/testsuite/25_algorithms/headers/algorithm/synopsis.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fheaders%2Falgorithm%2Fsynopsis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fheaders%2Falgorithm%2Fsynopsis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fheaders%2Falgorithm%2Fsynopsis.cc?ref=116a365bd48cadc0ee03ebdd43fc85c1002b4367", "patch": "@@ -533,27 +533,27 @@ namespace std\n     minmax_element(_FIter, _FIter, _Compare);\n \n   template<typename _Tp>\n-    const _Tp&\n+    _Tp\n     min(initializer_list<_Tp>);\n \n   template<typename _Tp, typename _Compare>\n-    const _Tp&\n+    _Tp\n     min(initializer_list<_Tp>, _Compare);\n \n   template<typename _Tp>\n-    const _Tp&\n+    _Tp\n     max(initializer_list<_Tp>);\n \n   template<typename _Tp, typename _Compare>\n-    const _Tp&\n+    _Tp\n     max(initializer_list<_Tp>, _Compare);\n \n   template<typename _Tp>\n-    pair<const _Tp&, const _Tp&>\n+    pair<_Tp, _Tp>\n     minmax(initializer_list<_Tp>);\n \n   template<typename _Tp, typename _Compare>\n-    pair<const _Tp&, const _Tp&>\n+    pair<_Tp, _Tp>\n     minmax(initializer_list<_Tp>, _Compare);\n #endif\n "}, {"sha": "233804c4254015f847a0bba7076b20460ce0f0f2", "filename": "libstdc++-v3/testsuite/25_algorithms/max/37547.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax%2F37547.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax%2F37547.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax%2F37547.cc?ref=116a365bd48cadc0ee03ebdd43fc85c1002b4367", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <algorithm>\n+#include <vector>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/37547\n+int test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::vector<int> v{1,2,3,4,5};\n+\n+  auto p = std::max({v});\n+  VERIFY ( p == v );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "1f242c9af3906c098441f641c5eaa7b5642f624f", "filename": "libstdc++-v3/testsuite/25_algorithms/max/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=116a365bd48cadc0ee03ebdd43fc85c1002b4367", "patch": "@@ -42,6 +42,6 @@ namespace std\n   typedef value_type* \t\titerator_type;\n   typedef std::less<value_type> compare_type;\n \n-  template const value_type&  max(initializer_list<value_type>);\n-  template const value_type&  max(initializer_list<value_type>, compare_type);\n+  template value_type max(initializer_list<value_type>);\n+  template value_type max(initializer_list<value_type>, compare_type);\n } "}, {"sha": "0e623e2e637a2320fd9b17100de2c920069c452e", "filename": "libstdc++-v3/testsuite/25_algorithms/max/requirements/explicit_instantiation/pod2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax%2Frequirements%2Fexplicit_instantiation%2Fpod2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax%2Frequirements%2Fexplicit_instantiation%2Fpod2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax%2Frequirements%2Fexplicit_instantiation%2Fpod2.cc?ref=116a365bd48cadc0ee03ebdd43fc85c1002b4367", "patch": "@@ -42,6 +42,6 @@ namespace std\n   typedef value_type* \t\titerator_type;\n   typedef std::less<value_type> compare_type;\n \n-  template const value_type&  max(initializer_list<value_type>);\n-  template const value_type&  max(initializer_list<value_type>, compare_type);\n+  template value_type max(initializer_list<value_type>);\n+  template value_type max(initializer_list<value_type>, compare_type);\n } "}, {"sha": "5d0ffd4764994f8d3820052b60f1f512f3c1f1b5", "filename": "libstdc++-v3/testsuite/25_algorithms/min/37547.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin%2F37547.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin%2F37547.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin%2F37547.cc?ref=116a365bd48cadc0ee03ebdd43fc85c1002b4367", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <algorithm>\n+#include <vector>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/37547\n+int test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::vector<int> v{1,2,3,4,5};\n+\n+  auto p = std::min({v});\n+  VERIFY ( p == v );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "7faea37947c2c68d69b272ae01835b3d04a2642d", "filename": "libstdc++-v3/testsuite/25_algorithms/min/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=116a365bd48cadc0ee03ebdd43fc85c1002b4367", "patch": "@@ -42,6 +42,6 @@ namespace std\n   typedef value_type* \t\titerator_type;\n   typedef std::less<value_type> compare_type;\n \n-  template const value_type&  min(initializer_list<value_type>);\n-  template const value_type&  min(initializer_list<value_type>, compare_type);\n+  template value_type min(initializer_list<value_type>);\n+  template value_type min(initializer_list<value_type>, compare_type);\n } "}, {"sha": "4800c1bd1c5913398bd00a151dcdcb9955b2fb31", "filename": "libstdc++-v3/testsuite/25_algorithms/min/requirements/explicit_instantiation/pod2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin%2Frequirements%2Fexplicit_instantiation%2Fpod2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin%2Frequirements%2Fexplicit_instantiation%2Fpod2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin%2Frequirements%2Fexplicit_instantiation%2Fpod2.cc?ref=116a365bd48cadc0ee03ebdd43fc85c1002b4367", "patch": "@@ -42,6 +42,6 @@ namespace std\n   typedef value_type* \t\titerator_type;\n   typedef std::less<value_type> compare_type;\n \n-  template const value_type&  min(initializer_list<value_type>);\n-  template const value_type&  min(initializer_list<value_type>, compare_type);\n+  template value_type min(initializer_list<value_type>);\n+  template value_type min(initializer_list<value_type>, compare_type);\n } "}, {"sha": "21de3907b3e22244f8f26857b503665b69dff1b5", "filename": "libstdc++-v3/testsuite/25_algorithms/minmax/37547.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fminmax%2F37547.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fminmax%2F37547.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fminmax%2F37547.cc?ref=116a365bd48cadc0ee03ebdd43fc85c1002b4367", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <algorithm>\n+#include <vector>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/37547\n+int test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::vector<int> v{1,2,3,4,5};\n+\n+  auto p = std::minmax({v});\n+  VERIFY ( p.first == v );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "a6506ca764cd692db946a24035c9278e0fee3cdd", "filename": "libstdc++-v3/testsuite/25_algorithms/minmax/requirements/explicit_instantiation/3.cc", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fminmax%2Frequirements%2Fexplicit_instantiation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fminmax%2Frequirements%2Fexplicit_instantiation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fminmax%2Frequirements%2Fexplicit_instantiation%2F3.cc?ref=116a365bd48cadc0ee03ebdd43fc85c1002b4367", "patch": "@@ -42,8 +42,7 @@ namespace std\n   typedef value_type* \t\titerator_type;\n   typedef std::less<value_type> compare_type;\n \n-  template pair<const value_type&, const value_type&>\n-    minmax(initializer_list<value_type>);\n-  template pair<const value_type&, const value_type&>\n-    minmax(initializer_list<value_type>, compare_type);\n+  template pair<value_type, value_type> minmax(initializer_list<value_type>);\n+  template pair<value_type, value_type> minmax(initializer_list<value_type>,\n+\t\t\t\t\t       compare_type);\n }"}, {"sha": "b31d38d3c8918d43c6e98d2bea6772232b56bd19", "filename": "libstdc++-v3/testsuite/25_algorithms/minmax/requirements/explicit_instantiation/pod2.cc", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fminmax%2Frequirements%2Fexplicit_instantiation%2Fpod2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/116a365bd48cadc0ee03ebdd43fc85c1002b4367/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fminmax%2Frequirements%2Fexplicit_instantiation%2Fpod2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fminmax%2Frequirements%2Fexplicit_instantiation%2Fpod2.cc?ref=116a365bd48cadc0ee03ebdd43fc85c1002b4367", "patch": "@@ -42,8 +42,7 @@ namespace std\n   typedef value_type* \t\titerator_type;\n   typedef std::less<value_type> compare_type;\n \n-  template pair<const value_type&, const value_type&>\n-    minmax(initializer_list<value_type>);\n-  template pair<const value_type&, const value_type&>\n-    minmax(initializer_list<value_type>, compare_type);\n+  template pair<value_type, value_type> minmax(initializer_list<value_type>);\n+  template pair<value_type, value_type> minmax(initializer_list<value_type>,\n+\t\t\t\t\t       compare_type);\n }"}]}