{"sha": "6c7e4a1815f9d873486d9c7d3b067432e049135a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM3ZTRhMTgxNWY5ZDg3MzQ4NmQ5YzdkM2IwNjc0MzJlMDQ5MTM1YQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-11-28T11:59:34Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-11-28T11:59:34Z"}, "message": "[ARM] Add Cortex-A17 support\n\n\t* config/arm/arm.md (generic_sched): Specify cortexa17 in 'no' list.\n\tInclude cortex-a17.md.\n\t* config/arm/arm.c (arm_issue_rate): Specify 2 for cortexa17.\n\t* config/arm/arm-cores.def (cortex-a17): New entry.\n\t* config/arm/arm-tables.opt: Regenerate.\n\t* config/arm/arm-tune.md: Regenerate.\n\t* config/arm/bpabi.h (BE8_LINK_SPEC): Specify mcpu=cortex-a17.\n\t* config/arm/cortex-a17.md: New file.\n\t* config/arm/cortex-a17-neon.md: New file.\n\t* config/arm/driver-arm.c (arm_cpu_table): Add entry for cortex-a17.\n\t* config/arm/t-aprofile: Add cortex-a17 entries to MULTILIB_MATCHES.\n\nFrom-SVN: r218145", "tree": {"sha": "defcf6858440ee1ed8313a4b4946e36675fce5dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/defcf6858440ee1ed8313a4b4946e36675fce5dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c7e4a1815f9d873486d9c7d3b067432e049135a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c7e4a1815f9d873486d9c7d3b067432e049135a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c7e4a1815f9d873486d9c7d3b067432e049135a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c7e4a1815f9d873486d9c7d3b067432e049135a/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70383ebcf0d172fa21828fad2bd48e26f3d81d6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70383ebcf0d172fa21828fad2bd48e26f3d81d6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70383ebcf0d172fa21828fad2bd48e26f3d81d6d"}], "stats": {"total": 806, "additions": 801, "deletions": 5}, "files": [{"sha": "24f2f8ed726cb14b6ae526be77115b9a5bd173db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c7e4a1815f9d873486d9c7d3b067432e049135a", "patch": "@@ -1,3 +1,17 @@\n+2014-11-28  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.md (generic_sched): Specify cortexa17 in 'no' list.\n+\tInclude cortex-a17.md.\n+\t* config/arm/arm.c (arm_issue_rate): Specify 2 for cortexa17.\n+\t* config/arm/arm-cores.def (cortex-a17): New entry.\n+\t* config/arm/arm-tables.opt: Regenerate.\n+\t* config/arm/arm-tune.md: Regenerate.\n+\t* config/arm/bpabi.h (BE8_LINK_SPEC): Specify mcpu=cortex-a17.\n+\t* config/arm/cortex-a17.md: New file.\n+\t* config/arm/cortex-a17-neon.md: New file.\n+\t* config/arm/driver-arm.c (arm_cpu_table): Add entry for cortex-a17.\n+\t* config/arm/t-aprofile: Add cortex-a17 entries to MULTILIB_MATCHES.\n+\n 2014-11-28  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/64084"}, {"sha": "f8003ce94a7ef72ce1bf387e768bd9085149b150", "filename": "gcc/config/arm/arm-cores.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Farm-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Farm-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cores.def?ref=6c7e4a1815f9d873486d9c7d3b067432e049135a", "patch": "@@ -150,6 +150,7 @@ ARM_CORE(\"cortex-a8\",\t\tcortexa8, cortexa8,\t\t7A,  FL_LDSCHED, cortex_a8)\n ARM_CORE(\"cortex-a9\",\t\tcortexa9, cortexa9,\t\t7A,  FL_LDSCHED, cortex_a9)\n ARM_CORE(\"cortex-a12\",\t  \tcortexa12, cortexa15,\t\t7A,  FL_LDSCHED | FL_THUMB_DIV | FL_ARM_DIV, cortex_a12)\n ARM_CORE(\"cortex-a15\",\t\tcortexa15, cortexa15,\t\t7A,  FL_LDSCHED | FL_THUMB_DIV | FL_ARM_DIV, cortex_a15)\n+ARM_CORE(\"cortex-a17\",\t\tcortexa17, cortexa17,\t\t7A,  FL_LDSCHED | FL_THUMB_DIV | FL_ARM_DIV, cortex_a12)\n ARM_CORE(\"cortex-r4\",\t\tcortexr4, cortexr4,\t\t7R,  FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-r4f\",\t\tcortexr4f, cortexr4f,\t\t7R,  FL_LDSCHED, cortex)\n ARM_CORE(\"cortex-r5\",\t\tcortexr5, cortexr5,\t\t7R,  FL_LDSCHED | FL_ARM_DIV, cortex)"}, {"sha": "9d8159face88468cac1a67e78e5486c18299fa1e", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=6c7e4a1815f9d873486d9c7d3b067432e049135a", "patch": "@@ -270,6 +270,9 @@ Enum(processor_type) String(cortex-a12) Value(cortexa12)\n EnumValue\n Enum(processor_type) String(cortex-a15) Value(cortexa15)\n \n+EnumValue\n+Enum(processor_type) String(cortex-a17) Value(cortexa17)\n+\n EnumValue\n Enum(processor_type) String(cortex-r4) Value(cortexr4)\n "}, {"sha": "7218542fc150b0e854670c4e008007e145304a5a", "filename": "gcc/config/arm/arm-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Farm-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Farm-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tune.md?ref=6c7e4a1815f9d873486d9c7d3b067432e049135a", "patch": "@@ -28,7 +28,7 @@\n \tcortexm1smallmultiply,cortexm0smallmultiply,cortexm0plussmallmultiply,\n \tgenericv7a,cortexa5,cortexa7,\n \tcortexa8,cortexa9,cortexa12,\n-\tcortexa15,cortexr4,cortexr4f,\n+\tcortexa15,cortexa17,cortexr4,cortexr4f,\n \tcortexr5,cortexr7,cortexm7,\n \tcortexm4,cortexm3,marvell_pj4,\n \tcortexa15cortexa7,cortexa53,cortexa57,"}, {"sha": "c40c3bd709a297b6199e4d25409fb01b264d42c2", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=6c7e4a1815f9d873486d9c7d3b067432e049135a", "patch": "@@ -27035,6 +27035,7 @@ arm_issue_rate (void)\n     case cortexa8:\n     case cortexa9:\n     case cortexa12:\n+    case cortexa17:\n     case cortexa53:\n     case fa726te:\n     case marvell_pj4:"}, {"sha": "c48001c952d758ab680e83487652d4be4cdb8a51", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=6c7e4a1815f9d873486d9c7d3b067432e049135a", "patch": "@@ -385,8 +385,8 @@\n           (ior (eq_attr \"tune\" \"fa526,fa626,fa606te,fa626te,fmp626,fa726te,\\\n                                 arm926ejs,arm1020e,arm1026ejs,arm1136js,\\\n                                 arm1136jfs,cortexa5,cortexa7,cortexa8,\\\n-                                cortexa9,cortexa12,cortexa15,cortexa53,\\\n-                                cortexm4,cortexm7,marvell_pj4\")\n+                                cortexa9,cortexa12,cortexa15,cortexa17,\\\n+                                cortexa53,cortexm4,cortexm7,marvell_pj4\")\n \t       (eq_attr \"tune_cortexr4\" \"yes\"))\n           (const_string \"no\")\n           (const_string \"yes\"))))\n@@ -417,6 +417,7 @@\n (include \"cortex-a8.md\")\n (include \"cortex-a9.md\")\n (include \"cortex-a15.md\")\n+(include \"cortex-a17.md\")\n (include \"cortex-a53.md\")\n (include \"cortex-r4.md\")\n (include \"cortex-r4f.md\")"}, {"sha": "22a37ae8653f1e60ae306b992100a3b20b584d2a", "filename": "gcc/config/arm/bpabi.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Fbpabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Fbpabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fbpabi.h?ref=6c7e4a1815f9d873486d9c7d3b067432e049135a", "patch": "@@ -64,7 +64,7 @@\n   \" %{!mlittle-endian:%{march=armv7-a|mcpu=cortex-a5    \\\n    |mcpu=cortex-a7                                      \\\n    |mcpu=cortex-a8|mcpu=cortex-a9|mcpu=cortex-a15       \\\n-   |mcpu=cortex-a12\t\t\t\t\t\\\n+   |mcpu=cortex-a12|mcpu=cortex-a17\t\t\t\\\n    |mcpu=cortex-a15.cortex-a7\t\t\t\t\\\n    |mcpu=marvell-pj4\t\t\t\t\t\\\n    |mcpu=cortex-a53\t\t\t\t\t\\\n@@ -85,7 +85,7 @@\n   \" %{mbig-endian:%{march=armv7-a|mcpu=cortex-a5        \\\n    |mcpu=cortex-a7                                      \\\n    |mcpu=cortex-a8|mcpu=cortex-a9|mcpu=cortex-a15       \\\n-   |mcpu=cortex-a12\t\t\t\t\t\\\n+   |mcpu=cortex-a12|mcpu=cortex-a17\t\t\t\\\n    |mcpu=cortex-a15.cortex-a7\t\t\t\t\\\n    |mcpu=cortex-a53\t\t\t\t\t\\\n    |mcpu=cortex-a57\t\t\t\t\t\\"}, {"sha": "95bc372459411585b9598f06548fe4708cdecd28", "filename": "gcc/config/arm/cortex-a17-neon.md", "status": "added", "additions": 605, "deletions": 0, "changes": 605, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Fcortex-a17-neon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Fcortex-a17-neon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a17-neon.md?ref=6c7e4a1815f9d873486d9c7d3b067432e049135a", "patch": "@@ -0,0 +1,605 @@\n+;; ARM Cortex-A17 NEON pipeline description\n+;; Copyright (C) 2014 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published by\n+;; the Free Software Foundation; either version 3, or (at your option)\n+;; any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but\n+;; WITHOUT ANY WARRANTY; without even the implied warranty of\n+;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+;; General Public License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+(define_attr \"cortex_a17_neon_type\"\n+  \"neon_abd, neon_abd_q, neon_arith_acc, neon_arith_acc_q,\n+   neon_arith_basic, neon_arith_complex,\n+   neon_reduc_add_acc, neon_multiply, neon_multiply_q,\n+   neon_multiply_long, neon_mla, neon_mla_q, neon_mla_long,\n+   neon_sat_mla_long, neon_shift_acc, neon_shift_imm_basic,\\\n+   neon_shift_imm_complex,\n+   neon_shift_reg_basic, neon_shift_reg_basic_q, neon_shift_reg_complex,\n+   neon_shift_reg_complex_q, neon_fp_negabs, neon_fp_arith,\n+   neon_fp_arith_q, neon_fp_cvt_int,\n+   neon_fp_cvt_int_q, neon_fp_cvt16, neon_fp_minmax, neon_fp_mul,\n+   neon_fp_mul_q, neon_fp_mla, neon_fp_mla_q, neon_fp_recpe_rsqrte,\n+   neon_fp_recpe_rsqrte_q, neon_bitops, neon_bitops_q, neon_from_gp,\n+   neon_from_gp_q, neon_move, neon_tbl3_tbl4, neon_zip_q, neon_to_gp,\n+   neon_load_a, neon_load_b, neon_load_c, neon_load_d, neon_load_e,\n+   neon_load_f, neon_load_g, neon_load_h, neon_store_a, neon_store_b,\n+   unknown\"\n+  (cond [\n+          (eq_attr \"type\" \"neon_abd, neon_abd_long\")\n+            (const_string \"neon_abd\")\n+          (eq_attr \"type\" \"neon_abd_q\")\n+            (const_string \"neon_abd_q\")\n+          (eq_attr \"type\" \"neon_arith_acc, neon_reduc_add_acc,\\\n+                           neon_reduc_add_acc_q\")\n+            (const_string \"neon_arith_acc\")\n+          (eq_attr \"type\" \"neon_arith_acc_q\")\n+            (const_string \"neon_arith_acc_q\")\n+          (eq_attr \"type\" \"neon_add, neon_add_q, neon_add_long,\\\n+                           neon_add_widen, neon_neg, neon_neg_q,\\\n+                           neon_reduc_add, neon_reduc_add_q,\\\n+                           neon_reduc_add_long, neon_sub, neon_sub_q,\\\n+                           neon_sub_long, neon_sub_widen, neon_logic,\\\n+                           neon_logic_q, neon_tst, neon_tst_q\")\n+            (const_string \"neon_arith_basic\")\n+          (eq_attr \"type\" \"neon_abs, neon_abs_q, neon_add_halve_narrow_q,\\\n+                           neon_add_halve, neon_add_halve_q,\\\n+                           neon_sub_halve, neon_sub_halve_q, neon_qabs,\\\n+                           neon_qabs_q, neon_qadd, neon_qadd_q, neon_qneg,\\\n+                           neon_qneg_q, neon_qsub, neon_qsub_q,\\\n+                           neon_sub_halve_narrow_q,\\\n+                           neon_compare, neon_compare_q,\\\n+                           neon_compare_zero, neon_compare_zero_q,\\\n+                           neon_minmax, neon_minmax_q, neon_reduc_minmax,\\\n+                           neon_reduc_minmax_q\")\n+            (const_string \"neon_arith_complex\")\n+\n+          (eq_attr \"type\" \"neon_mul_b, neon_mul_h, neon_mul_s,\\\n+                           neon_mul_h_scalar, neon_mul_s_scalar,\\\n+                           neon_sat_mul_b, neon_sat_mul_h,\\\n+                           neon_sat_mul_s, neon_sat_mul_h_scalar,\\\n+                           neon_sat_mul_s_scalar,\\\n+                           neon_mul_b_long, neon_mul_h_long,\\\n+                           neon_mul_s_long,\\\n+                           neon_mul_h_scalar_long, neon_mul_s_scalar_long,\\\n+                           neon_sat_mul_b_long, neon_sat_mul_h_long,\\\n+                           neon_sat_mul_s_long, neon_sat_mul_h_scalar_long,\\\n+                           neon_sat_mul_s_scalar_long\")\n+            (const_string \"neon_multiply\")\n+          (eq_attr \"type\" \"neon_mul_b_q, neon_mul_h_q, neon_mul_s_q,\\\n+                           neon_mul_h_scalar_q, neon_mul_s_scalar_q,\\\n+                           neon_sat_mul_b_q, neon_sat_mul_h_q,\\\n+                           neon_sat_mul_s_q, neon_sat_mul_h_scalar_q,\\\n+                           neon_sat_mul_s_scalar_q\")\n+            (const_string \"neon_multiply_q\")\n+          (eq_attr \"type\" \"neon_mla_b, neon_mla_h, neon_mla_s,\\\n+                           neon_mla_h_scalar, neon_mla_s_scalar,\\\n+                           neon_mla_b_long, neon_mla_h_long,\\\n+                           neon_mla_s_long,\\\n+                           neon_mla_h_scalar_long, neon_mla_s_scalar_long\")\n+            (const_string \"neon_mla\")\n+          (eq_attr \"type\" \"neon_mla_b_q, neon_mla_h_q, neon_mla_s_q,\\\n+                           neon_mla_h_scalar_q, neon_mla_s_scalar_q\")\n+            (const_string \"neon_mla_q\")\n+          (eq_attr \"type\" \"neon_sat_mla_b_long, neon_sat_mla_h_long,\\\n+                           neon_sat_mla_s_long, neon_sat_mla_h_scalar_long,\\\n+                           neon_sat_mla_s_scalar_long\")\n+            (const_string \"neon_sat_mla_long\")\n+\n+          (eq_attr \"type\" \"neon_shift_acc, neon_shift_acc_q\")\n+            (const_string \"neon_shift_acc\")\n+          (eq_attr \"type\" \"neon_shift_imm, neon_shift_imm_q,\\\n+                           neon_shift_imm_narrow_q, neon_shift_imm_long\")\n+            (const_string \"neon_shift_imm_basic\")\n+          (eq_attr \"type\" \"neon_sat_shift_imm, neon_sat_shift_imm_q,\\\n+                           neon_sat_shift_imm_narrow_q\")\n+            (const_string \"neon_shift_imm_complex\")\n+          (eq_attr \"type\" \"neon_shift_reg\")\n+            (const_string \"neon_shift_reg_basic\")\n+          (eq_attr \"type\" \"neon_shift_reg_q\")\n+            (const_string \"neon_shift_reg_basic_q\")\n+          (eq_attr \"type\" \"neon_sat_shift_reg\")\n+            (const_string \"neon_shift_reg_complex\")\n+          (eq_attr \"type\" \"neon_sat_shift_reg_q\")\n+            (const_string \"neon_shift_reg_complex_q\")\n+\n+          (eq_attr \"type\" \"neon_fp_neg_s, neon_fp_neg_s_q,\\\n+                           neon_fp_abs_s, neon_fp_abs_s_q\")\n+            (const_string \"neon_fp_negabs\")\n+          (eq_attr \"type\" \"neon_fp_addsub_s, neon_fp_abd_s,\\\n+                           neon_fp_reduc_add_s, neon_fp_compare_s,\\\n+                           neon_fp_minmax_s, neon_fp_minmax_s_q,\\\n+                           neon_fp_reduc_minmax_s, neon_fp_round_s,\\\n+                           neon_fp_round_s_q, neon_fp_round_d,\\\n+\t                   neon_fp_round_d_q, neon_fp_reduc_minmax_s_q\")\n+            (const_string \"neon_fp_arith\")\n+          (eq_attr \"type\" \"neon_fp_addsub_s_q, neon_fp_abd_s_q,\\\n+                           neon_fp_reduc_add_s_q, neon_fp_compare_s_q\")\n+            (const_string \"neon_fp_arith_q\")\n+          (eq_attr \"type\" \"neon_fp_to_int_s, neon_int_to_fp_s\")\n+            (const_string \"neon_fp_cvt_int\")\n+          (eq_attr \"type\" \"neon_fp_to_int_s_q, neon_int_to_fp_s_q\")\n+            (const_string \"neon_fp_cvt_int_q\")\n+          (eq_attr \"type\" \"neon_fp_cvt_narrow_s_q, neon_fp_cvt_widen_h\")\n+            (const_string \"neon_fp_cvt16\")\n+          (eq_attr \"type\" \"neon_fp_mul_s, neon_fp_mul_s_scalar\")\n+            (const_string \"neon_fp_mul\")\n+          (eq_attr \"type\" \"neon_fp_mul_s_q, neon_fp_mul_s_scalar_q\")\n+            (const_string \"neon_fp_mul_q\")\n+          (eq_attr \"type\" \"neon_fp_mla_s, neon_fp_mla_s_scalar\")\n+            (const_string \"neon_fp_mla\")\n+          (eq_attr \"type\" \"neon_fp_mla_s_q, neon_fp_mla_s_scalar_q\")\n+            (const_string \"neon_fp_mla_q\")\n+          (eq_attr \"type\" \"neon_fp_recpe_s, neon_fp_rsqrte_s\")\n+            (const_string \"neon_fp_recpe_rsqrte\")\n+          (eq_attr \"type\" \"neon_fp_recpe_s_q, neon_fp_rsqrte_s_q\")\n+            (const_string \"neon_fp_recpe_rsqrte_q\")\n+\n+          (eq_attr \"type\" \"neon_bsl, neon_cls, neon_cnt,\\\n+                           neon_rev, neon_permute,\\\n+                           neon_tbl1, neon_tbl2, neon_zip,\\\n+                           neon_dup, neon_dup_q, neon_ext, neon_ext_q,\\\n+                           neon_move, neon_move_q, neon_move_narrow_q\")\n+            (const_string \"neon_bitops\")\n+          (eq_attr \"type\" \"neon_bsl_q, neon_cls_q, neon_cnt_q,\\\n+                           neon_rev_q, neon_permute_q\")\n+            (const_string \"neon_bitops_q\")\n+          (eq_attr \"type\" \"neon_from_gp\")\n+            (const_string \"neon_from_gp\")\n+          (eq_attr \"type\" \"neon_from_gp_q\")\n+            (const_string \"neon_from_gp_q\")\n+          (eq_attr \"type\" \"neon_tbl3, neon_tbl4\")\n+            (const_string \"neon_tbl3_tbl4\")\n+          (eq_attr \"type\" \"neon_zip_q\")\n+            (const_string \"neon_zip_q\")\n+          (eq_attr \"type\" \"neon_to_gp, neon_to_gp_q\")\n+            (const_string \"neon_to_gp\")\n+\n+          (eq_attr \"type\" \"neon_load1_1reg, neon_load1_1reg_q,\\\n+                           neon_load1_one_lane, neon_load1_one_lane_q\")\n+            (const_string \"neon_load_a\")\n+\n+          (eq_attr \"type\" \"neon_load1_2reg, neon_load1_2reg_q\")\n+            (const_string \"neon_load_b\")\n+\n+          (eq_attr \"type\" \"neon_load1_3reg, neon_load1_3reg_q,\\\n+                           neon_load1_all_lanes,neon_load1_all_lanes_q,\\\n+                           neon_load2_one_lane, neon_load2_one_lane_q,\\\n+                           neon_load2_all_lanes, neon_load2_all_lanes_q\")\n+            (const_string \"neon_load_c\")\n+\n+          (eq_attr \"type\" \"neon_load1_4reg, neon_load1_4reg_q,\\\n+                          neon_load2_2reg, neon_load2_2reg_q\")\n+            (const_string \"neon_load_d\")\n+\n+          (eq_attr \"type\" \"neon_load3_one_lane,\\\n+                           neon_load3_all_lanes,\\\n+                           neon_load4_one_lane, neon_load4_all_lanes\")\n+            (const_string \"neon_load_e\")\n+\n+\n+          (eq_attr \"type\" \"neon_load3_one_lane_q,\\\n+                           neon_load3_all_lanes_q,\\\n+                           neon_load4_one_lane_q, neon_load4_all_lanes_q\")\n+            (const_string \"neon_load_f\")\n+\n+          (eq_attr \"type\" \"neon_load3_3reg,neon_load3_3reg_q\")\n+            (const_string \"neon_load_g\")\n+\n+          (eq_attr \"type\" \"neon_load2_4reg,neon_load2_4reg_q,\\\n+                           neon_load4_4reg,neon_load4_4reg_q\")\n+            (const_string \"neon_load_h\")\n+\n+          (eq_attr \"type\" \"neon_store1_1reg, neon_store1_1reg_q,\\\n+                           neon_store1_2reg, neon_store1_2reg_q,\\\n+                           neon_store1_3reg, neon_store1_3reg_q,\\\n+                           neon_store1_4reg, neon_store1_4reg_q,\\\n+                           neon_store1_one_lane, neon_store1_one_lane_q,\\\n+                           neon_store2_2reg, neon_store2_2reg_q,\\\n+                           neon_store3_one_lane, neon_store3_one_lane_q,\\\n+                           neon_store4_one_lane, neon_store4_one_lane_q\")\n+            (const_string \"neon_store_a\")\n+\n+          (eq_attr \"type\" \"neon_store2_4reg, neon_store2_4reg_q,\\\n+                           neon_store2_one_lane, neon_store2_one_lane_q,\\\n+                           neon_store3_3reg, neon_store3_3reg_q,\\\n+                           neon_store4_4reg, neon_store4_4reg_q\")\n+            (const_string \"neon_store_b\")\n+]\n+          (const_string \"unknown\")))\n+\n+(define_automaton \"cortex_a17_neon\")\n+\n+(define_cpu_unit \"ca17_asimd0, ca17_asimd1\" \"cortex_a17_neon\")\n+(define_cpu_unit \"ca17_fdiv0,ca17_simdfpadd0, ca17_simdfpmul0\" \"cortex_a17_neon\")\n+(define_cpu_unit \"ca17_simdimac0, ca17_simdialu0, ca17_perm0\" \"cortex_a17_neon\")\n+\n+(define_cpu_unit \"ca17_simdialu1, ca17_perm1, ca17_simdshift1\" \"cortex_a17_neon\")\n+(define_cpu_unit \"ca17_iacc1\" \"cortex_a17_neon\")\n+(define_cpu_unit \"ca17_fpmul1, ca17_fpadd1\" \"cortex_a17_neon\")\n+\n+\n+;; Integer Arithmetic Instructions.\n+\n+(define_insn_reservation  \"cortex_a17_neon_abd\" 5\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_abd\"))\n+  \"(ca17_asimd0+ca17_simdialu0) | (ca17_asimd1+ca17_simdialu1)\")\n+\n+(define_insn_reservation  \"cortex_a17_neon_abd_q\" 5\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_abd_q\"))\n+  \"ca17_asimd0+ca17_asimd1+ca17_simdialu0+ca17_simdialu1\")\n+\n+(define_insn_reservation  \"cortex_a17_neon_aba\" 7\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_arith_acc\"))\n+  \"ca17_asimd1+ca17_simdialu1, ca17_iacc1\")\n+\n+(define_insn_reservation  \"cortex_a17_neon_aba_q\" 8\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_arith_acc_q\"))\n+  \"ca17_asimd0+ca17_asimd1+ca17_simdialu0+ca17_simdialu1, ca17_iacc1*2\")\n+\n+(define_insn_reservation  \"cortex_a17_neon_arith_basic\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_arith_basic\"))\n+  \"(ca17_asimd0+ca17_simdialu0) | (ca17_asimd1+ca17_simdialu1)\")\n+\n+(define_insn_reservation  \"cortex_a17_neon_arith_complex\" 5\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_arith_complex\"))\n+  \"(ca17_asimd0+ca17_simdialu0) | (ca17_asimd1+ca17_simdialu1)\")\n+\n+;; Integer Multiply Instructions.\n+\n+(define_insn_reservation \"cortex_a17_neon_multiply\" 6\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_multiply\"))\n+  \"ca17_asimd0+ca17_simdimac0\")\n+\n+(define_insn_reservation \"cortex_a17_neon_multiply_q\" 7\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_multiply_q\"))\n+  \"(ca17_asimd0+ca17_simdimac0)*2\")\n+\n+(define_insn_reservation \"cortex_a17_neon_mla\" 6\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_mla\"))\n+  \"ca17_asimd0+ca17_simdimac0*2\")\n+\n+(define_insn_reservation \"cortex_a17_neon_mla_q\" 7\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_mla_q\"))\n+  \"(ca17_asimd0+ca17_simdimac0)*2,ca17_simdimac0\")\n+\n+(define_insn_reservation \"cortex_a17_neon_sat_mla_long\" 6\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_sat_mla_long\"))\n+  \"ca17_asimd0+ca17_simdimac0*2\")\n+\n+;; Integer Shift Instructions.\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_shift_acc\" 7\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_shift_acc\"))\n+  \"ca17_asimd1+ca17_simdshift1,ca17_iacc1\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_shift_imm_basic\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_shift_imm_basic\"))\n+  \"ca17_asimd1+ca17_simdshift1\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_shift_imm_complex\" 5\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_shift_imm_complex\"))\n+  \"ca17_asimd1+ca17_simdshift1\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_shift_reg_basic\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_shift_reg_basic\"))\n+  \"ca17_asimd1+ca17_simdshift1\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_shift_reg_basic_q\" 5\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_shift_reg_basic_q\"))\n+  \"(ca17_asimd1+ca17_simdshift1)*2\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_shift_reg_complex\" 5\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_shift_reg_complex\"))\n+  \"ca17_asimd1+ca17_simdshift1\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_shift_reg_complex_q\" 6\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_shift_reg_complex_q\"))\n+  \"(ca17_asimd1+ca17_simdshift1)*2\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_fp_negabs\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_fp_negabs\"))\n+  \"ca17_asimd0+ca17_simdfpadd0\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_fp_arith\" 6\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_fp_arith\"))\n+  \"ca17_asimd0+ca17_simdfpadd0\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_fp_arith_q\" 6\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_fp_arith_q\"))\n+  \"(ca17_asimd0+ca17_simdfpadd0)*2\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_fp_cvt_int\" 6\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_fp_cvt_int\"))\n+  \"ca17_asimd0+ca17_simdfpadd0\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_fp_cvt_int_q\" 6\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_fp_cvt_int_q\"))\n+  \"(ca17_asimd0+ca17_simdfpadd0)*2\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_fp_cvt16\" 10\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_fp_cvt16\"))\n+  \"ca17_asimd0+ca17_simdfpadd0\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_fp_mul\" 5\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_fp_mul\"))\n+  \"ca17_asimd0+ca17_simdfpmul0\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_fp_mul_q\" 5\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_fp_mul_q\"))\n+  \"(ca17_asimd0+ca17_simdfpmul0)*2\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_fp_mla\" 8\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_fp_mla\"))\n+  \"ca17_asimd0+ca17_simdfpmul0,ca17_simdfpadd0\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_fp_mla_q\" 9\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_fp_mla_q\"))\n+  \"ca17_asimd0+ca17_simdfpmul0,ca17_asimd0+ca17_simdfpadd0+ca17_simdfpmul0,ca17_simdfpadd0\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_fp_recps_rsqrte\" 9\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_fp_recpe_rsqrte\"))\n+  \"(ca17_asimd0+ca17_perm0)|(ca17_asimd1+ca17_perm1)\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_fp_recps_rsqrte_q\" 9\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_fp_recpe_rsqrte_q\"))\n+  \"(ca17_asimd0+ca17_perm0)*2|(ca17_asimd1+ca17_perm1)*2\")\n+\n+;; Miscelaneous Instructions.\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_bitops\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_bitops\"))\n+  \"(ca17_asimd0+ca17_perm0) | (ca17_asimd1+ca17_perm1)\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_bitops_q\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_bitops_q\"))\n+  \"(ca17_asimd0+ca17_perm0)*2 | (ca17_asimd1+ca17_perm1)*2\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_from_gp\" 2\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_from_gp\"))\n+  \"(ca17_asimd0+ca17_perm0)|(ca17_asimd1+ca17_perm1)\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_from_gp_q\" 3\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_from_gp_q\"))\n+  \"(ca17_asimd0+ca17_perm0)|(ca17_asimd1+ca17_perm1)\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_tbl3_tbl4\" 7\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_tbl3_tbl4\"))\n+  \"(ca17_asimd0+ca17_perm0)|(ca17_asimd1+ca17_perm1)\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_zip_q\" 7\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_zip_q\"))\n+  \"(ca17_asimd0+ca17_perm0)|(ca17_asimd1+ca17_perm1)\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_to_gp\" 2\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_to_gp\"))\n+  \"ca17_asimd0+ca17_perm0*3\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_vfp_flag\" 5\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"f_flag\"))\n+  \"ca17_asimd0+ca17_perm0\")\n+\n+;; Load Instructions.\n+\n+(define_insn_reservation\n+  \"cortex_a17_vfp_load\" 5\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"f_loads, f_loadd\"))\n+  \"ca17_ls0|ca17_ls1\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_load_a\" 6\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_load_a\"))\n+  \"ca17_ls0*2|ca17_ls1*2\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_load_b\" 7\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_load_b\"))\n+  \"ca17_ls0*2|ca17_ls1*2\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_load_c\" 8\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_load_c\"))\n+  \"ca17_ls0*2|ca17_ls1*2\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_load_d\" 9\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_load_d\"))\n+  \"ca17_ls0*2|ca17_ls1*2\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_load_e\" 9\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_load_e\"))\n+  \"ca17_ls0*2|ca17_ls1*2\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_load_f\" 10\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_load_f\"))\n+  \"ca17_ls0*2+ca17_ls1*2\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_load_g\" 10\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_load_g\"))\n+  \"ca17_ls0*2+ca17_ls1*2\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_load_h\" 11\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_load_h\"))\n+  \"ca17_ls0*2+ca17_ls1*2\")\n+\n+;; Store Instructions.\n+\n+(define_insn_reservation\n+  \"cortex_a17_vfp_store\" 0\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"f_stores, f_stored\"))\n+  \"ca17_ls0|ca17_ls1\")\n+\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_store_a\" 0\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_store_a\"))\n+  \"ca17_ls0*2|ca17_ls1*2\")\n+\n+(define_insn_reservation\n+  \"cortex_a17_neon_store_b\" 0\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"cortex_a17_neon_type\" \"neon_store_b\"))\n+  \"ca17_ls0*2+ca17_ls1*2\")\n+\n+;; VFP Operations.\n+\n+(define_insn_reservation \"cortex_a17_vfp_const\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"fconsts,fconstd\"))\n+  \"ca17_asimd1+ca17_fpadd1\")\n+\n+(define_insn_reservation \"cortex_a17_vfp_adds_subs\" 6\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"fadds\"))\n+  \"ca17_asimd1+ca17_fpadd1\")\n+\n+\n+(define_insn_reservation \"cortex_a17_vfp_addd_subd\" 6\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"faddd\"))\n+  \"ca17_asimd1+ca17_fpadd1\")\n+\n+(define_insn_reservation \"cortex_a17_vfp_mul\" 6\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"fmuls,fmuld\"))\n+  \"ca17_asimd1+ca17_fpmul1\")\n+\n+(define_insn_reservation \"cortex_a17_vfp_mac\" 11\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"fmacs,ffmas,fmacd,ffmad\"))\n+  \"ca17_asimd1+ca17_fpmul1,ca17_fpadd1\")\n+\n+(define_insn_reservation \"cortex_a17_vfp_cvt\" 6\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"f_cvt,f_cvtf2i,f_cvti2f,f_rints,f_rintd\"))\n+  \"ca17_asimd1+ca17_fpadd1\")\n+\n+(define_insn_reservation \"cortex_a17_vfp_cmp\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"fcmps,fcmpd\"))\n+  \"ca17_asimd1+ca17_fpadd1\")\n+\n+(define_insn_reservation \"cortex_a17_vfp_arithd\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"ffarithd\"))\n+  \"ca17_asimd1+ca17_fpadd1\")\n+\n+(define_insn_reservation \"cortex_a17_vfp_cpys\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"fmov,fcsel\"))\n+  \"ca17_asimd1+ca17_fpadd1\")\n+\n+(define_insn_reservation \"cortex_a17_gp_to_vfp\" 2\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"f_mcr, f_mcrr\"))\n+  \"(ca17_asimd0+ca17_perm0)|(ca17_asimd1+ca17_perm1)\")\n+\n+(define_insn_reservation \"cortex_a17_mov_vfp_to_gp\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"f_mrc, f_mrrc\"))\n+  \"ca17_asimd0+ca17_perm0*3\")\n+\n+(define_insn_reservation \"cortex_a17_vfp_ariths\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"ffariths\"))\n+  \"ca17_asimd1+ca17_fpadd1\")\n+\n+(define_insn_reservation \"cortex_a17_vfp_divs\" 18\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"fdivs, fsqrts\"))\n+  \"ca17_asimd0+ca17_fdiv0*10\")\n+\n+(define_insn_reservation \"cortex_a17_vfp_divd\" 32\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"fdivd, fsqrtd\"))\n+  \"ca17_asimd0+ca17_fdiv0*10\")\n+"}, {"sha": "9ee8ce83682fcbd3672ba3ba3be6f9e582803c18", "filename": "gcc/config/arm/cortex-a17.md", "status": "added", "additions": 169, "deletions": 0, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Fcortex-a17.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Fcortex-a17.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a17.md?ref=6c7e4a1815f9d873486d9c7d3b067432e049135a", "patch": "@@ -0,0 +1,169 @@\n+;; ARM Cortex-A17 pipeline description\n+;; Copyright (C) 2014 Free Software Foundation, Inc.\n+;;\n+;; Contributed by ARM Ltd.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published by\n+;; the Free Software Foundation; either version 3, or (at your option)\n+;; any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but\n+;; WITHOUT ANY WARRANTY; without even the implied warranty of\n+;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+;; General Public License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+\n+(define_automaton \"cortex_a17\")\n+\n+(define_cpu_unit \"ca17_ls0, ca17_ls1\" \"cortex_a17\")\n+(define_cpu_unit \"ca17_alu0, ca17_alu1\" \"cortex_a17\")\n+(define_cpu_unit \"ca17_mac\" \"cortex_a17\")\n+(define_cpu_unit \"ca17_idiv\" \"cortex_a17\")\n+(define_cpu_unit \"ca17_bx\" \"cortex_a17\")\n+\n+(define_reservation \"ca17_alu\" \"(ca17_alu0|ca17_alu1)\")\n+\n+\n+\n+;; Simple Execution Unit:\n+;;\n+;; Simple ALU\n+(define_insn_reservation \"cortex_a17_alu\" 1\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"alu_imm,alus_imm,logic_imm,logics_imm,\\\n+                        alu_sreg,alus_sreg,logic_reg,logics_reg,\\\n+                        adc_imm,adcs_imm,adc_reg,adcs_reg,\\\n+                        adr, mov_imm,mov_reg,\\\n+                        mvn_imm,mvn_reg,extend,\\\n+                        mrs,multiple,no_insn\"))\n+  \"ca17_alu\")\n+\n+(define_insn_reservation \"cortex_a17_alu_shiftimm\" 2\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"bfm,clz,rev,rbit, alu_shift_imm, alus_shift_imm,\n+                        logic_shift_imm,alu_dsp_reg, logics_shift_imm,shift_imm,\\\n+                        shift_reg, mov_shift,mvn_shift\"))\n+  \"ca17_alu\")\n+\n+\n+;; ALU ops with register controlled shift.\n+(define_insn_reservation \"cortex_a17_alu_shift_reg\" 2\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"alu_shift_reg,alus_shift_reg,\\\n+                        logic_shift_reg,logics_shift_reg\"))\n+  \"ca17_alu0\")\n+\n+\n+;; Multiply Execution Unit:\n+\n+;; 32-bit multiplies\n+(define_insn_reservation \"cortex_a17_mult32\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"mul,muls,smmul,smmulr\"))\n+  \"ca17_alu0+ca17_mac\")\n+\n+(define_insn_reservation \"cortex_a17_mac32\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"mla,mlas,smmla\"))\n+  \"ca17_alu0+ca17_mac,ca17_mac\")\n+\n+(define_insn_reservation \"cortex_a17_mac32_other\" 3\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"smlad,smladx,smlsd,smlsdx,smuad,smuadx,smusd,smusdx\"))\n+  \"ca17_alu0+ca17_mac,ca17_mac\")\n+\n+;; 64-bit multiplies\n+(define_insn_reservation \"cortex_a17_mac64\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"smlal,smlals,umaal,umlal,umlals\"))\n+  \"ca17_alu0+ca17_mac,ca17_mac\")\n+\n+(define_insn_reservation \"cortex_a17_mac64_other\" 3\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"smlald,smlalxy,smlsld\"))\n+  \"ca17_alu0+ca17_mac,ca17_mac\")\n+\n+(define_insn_reservation \"cortex_a17_mult64\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"smull,smulls,umull,umulls\"))\n+  \"ca17_alu0+ca17_mac,ca17_mac\")\n+\n+\n+(define_bypass 2 \"cortex_a17_mult*, cortex_a17_mac*\"\n+                 \"cortex_a17_mult*, cortex_a17_mac*\"\n+                 \"arm_mac_accumulator_is_result\")\n+\n+;; Integer divide\n+(define_insn_reservation \"cortex_a17_udiv\" 19\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"udiv\"))\n+  \"ca17_alu1+ca17_idiv*10\")\n+\n+(define_insn_reservation \"cortex_a17_sdiv\" 20\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"sdiv\"))\n+  \"ca17_alu1+ca17_idiv*11\")\n+\n+\n+\n+;; Branch execution Unit\n+;;\n+;; Branches take one issue slot.\n+;; No latency as there is no result\n+(define_insn_reservation \"cortex_a17_branch\" 0\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"branch\"))\n+  \"ca17_bx\")\n+\n+;; Load-store execution Unit\n+;;\n+;; Loads of up to two words.\n+(define_insn_reservation \"cortex_a17_load1\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"load_byte,load1,load2\"))\n+  \"ca17_ls0|ca17_ls1\")\n+\n+;; Loads of three words.\n+(define_insn_reservation \"cortex_a17_load3\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"load3\"))\n+  \"ca17_ls0+ca17_ls1\")\n+\n+;; Loads of four words.\n+(define_insn_reservation \"cortex_a17_load4\" 4\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"load4\"))\n+  \"ca17_ls0+ca17_ls1\")\n+\n+;; Stores of up to two words.\n+(define_insn_reservation \"cortex_a17_store1\" 0\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"store1,store2\"))\n+  \"ca17_ls0|ca17_ls1\")\n+\n+;; Stores of three words\n+(define_insn_reservation \"cortex_a17_store3\" 0\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"store3\"))\n+  \"ca17_ls0+ca17_ls1\")\n+\n+;; Stores of four words.\n+(define_insn_reservation \"cortex_a17_store4\" 0\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"store4\"))\n+  \"ca17_ls0+ca17_ls1\")\n+\n+(define_insn_reservation \"cortex_a17_call\" 0\n+  (and (eq_attr \"tune\" \"cortexa17\")\n+       (eq_attr \"type\" \"call\"))\n+  \"ca17_bx\")\n+\n+\n+(include \"../arm/cortex-a17-neon.md\")"}, {"sha": "bdaf48a9de460c438f2259122351b8e77d3e08bc", "filename": "gcc/config/arm/driver-arm.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Fdriver-arm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Fdriver-arm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fdriver-arm.c?ref=6c7e4a1815f9d873486d9c7d3b067432e049135a", "patch": "@@ -41,6 +41,7 @@ static struct vendor_cpu arm_cpu_table[] = {\n     {\"0xc08\", \"armv7-a\", \"cortex-a8\"},\n     {\"0xc09\", \"armv7-a\", \"cortex-a9\"},\n     {\"0xc0d\", \"armv7ve\", \"cortex-a12\"},\n+    {\"0xc0e\", \"armv7ve\", \"cortex-a17\"},\n     {\"0xc0f\", \"armv7ve\", \"cortex-a15\"},\n     {\"0xc14\", \"armv7-r\", \"cortex-r4\"},\n     {\"0xc15\", \"armv7-r\", \"cortex-r5\"},"}, {"sha": "441a4b534b0e3c794848e509c171a204ddd5e2f8", "filename": "gcc/config/arm/t-aprofile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Ft-aprofile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c7e4a1815f9d873486d9c7d3b067432e049135a/gcc%2Fconfig%2Farm%2Ft-aprofile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-aprofile?ref=6c7e4a1815f9d873486d9c7d3b067432e049135a", "patch": "@@ -83,6 +83,7 @@ MULTILIB_MATCHES       += march?armv7-a=mcpu?cortex-a9\n MULTILIB_MATCHES       += march?armv7-a=mcpu?cortex-a5\n MULTILIB_MATCHES       += march?armv7ve=mcpu?cortex-a15\n MULTILIB_MATCHES       += march?armv7ve=mcpu?cortex-a12\n+MULTILIB_MATCHES       += march?armv7ve=mcpu?cortex-a17\n MULTILIB_MATCHES       += march?armv7ve=mcpu?cortex-a15.cortex-a7\n MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a53\n MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a57"}]}