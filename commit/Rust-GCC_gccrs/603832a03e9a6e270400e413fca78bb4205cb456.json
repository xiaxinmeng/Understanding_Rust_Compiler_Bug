{"sha": "603832a03e9a6e270400e413fca78bb4205cb456", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAzODMyYTAzZTlhNmUyNzA0MDBlNDEzZmNhNzhiYjQyMDVjYjQ1Ng==", "commit": {"author": {"name": "Philipp Thomas", "email": "pthomas@suse.de", "date": "2000-06-06T07:23:42Z"}, "committer": {"name": "Philipp Thomas", "email": "pthomas@gcc.gnu.org", "date": "2000-06-06T07:23:42Z"}, "message": "configure.in (AC_C_INLINE): Added.\n\ngcc/:\n        * configure.in (AC_C_INLINE): Added.\n\t* configure: Regenerate.\n\ngcc/java:\n\t* Makefile.in (INTLLIBS): New.\n\t(LIBS): Add above.\n\t(DEPLIBS): Ditto.\n\ngcc/f:\n\t* Makefile.in(INTLLIBS): New macro.\n\t(LIBS): Add INTLLIBS.\n\t(DEPLIBS): Likewise.\n\ngcc/ch:\n\t* Makefile.in: Changed to be processed by configure.\n\t(INTLLIBS): New macro.\n\t(LIBS): Add INTLLIBS.\n\t(DEPLIBS): Likewise.\n\t* config-lang(outputs): Specify ch/Makefile.\n\ngcc/po:\n\t* Makefile.in.in: Add --define switch for xgettext.\n\ngcc/intl:\n\t* Makefile.in: Add -DIN_GCC to DEFS, add appropriate -I switches.\n\t* dcgettext.c: Define _GNU_SOURCE before any system header is\n\tincluded. Guard getcwd declaration with HAVE_DECL_GETCWD.\n\t* loadmsgcat.c (_nl_load_domain): Cast st.st_size in compaison to\n\tsize_t.\n\t* localealias.c: Define _GNU_SOURCE before any system header is\n\tincluded. Don't use return value of memcpy because it could be a\n\tmacro defined in terms of bcopy.\n\t(read_alias_file): Remove HAVE_MEMCPY guard and just don't use the\n\treturn value of memcpy. Cast argument to fgets and strlen to char *.\n\t* explodename.c (_nl_explode_name): Cast codeset to unsigned char **\n\tin call to _nl_normalize_codeset.\n\t* l10nflist.c: Define _GNU_SOURCE before any system header is\n\tincluded.\n\nFrom-SVN: r34423", "tree": {"sha": "4e523690464052c2689436ad3bd3941b891bbc36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e523690464052c2689436ad3bd3941b891bbc36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/603832a03e9a6e270400e413fca78bb4205cb456", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603832a03e9a6e270400e413fca78bb4205cb456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/603832a03e9a6e270400e413fca78bb4205cb456", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603832a03e9a6e270400e413fca78bb4205cb456/comments", "author": null, "committer": null, "parents": [{"sha": "f519a4527d3c69dc0f03b10c5c98be6799a913eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f519a4527d3c69dc0f03b10c5c98be6799a913eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f519a4527d3c69dc0f03b10c5c98be6799a913eb"}], "stats": {"total": 152, "additions": 111, "deletions": 41}, "files": [{"sha": "18e04ff49918ae0239793542541b6c0396bb984a", "filename": "gcc/ch/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fch%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fch%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FChangeLog?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -1,3 +1,10 @@\n+2000-06-04  Philipp Thomas  <pthomas@suse.de>\n+\n+\t* Makefile.in(INTLLIBS): New macro.\n+\t(LIBS): Add INTLLIBS.\n+\t(DEPLIBS): Likewise.\n+\t* config-lang(outputs): Specify ch/Makefile.\n+\n Sat Jun  3 15:31:07 2000  Jeffrey A Law  (law@cygnus.com)\n \n \t* chill.texi (INFO-DIR-ENTRY): Fix chill entry."}, {"sha": "65a2aa35fc62dc79dee0e3e94b0465d22ca9761c", "filename": "gcc/ch/Makefile.in", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fch%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fch%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FMakefile.in?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -54,7 +54,7 @@ T_CFLAGS =\n X_CPPFLAGS =\n T_CPPFLAGS =\n \n-CC = cc\n+CC = @CC@\n AR = ar\n AR_FLAGS = rc\n SHELL = /bin/sh\n@@ -81,18 +81,25 @@ GCC_CFLAGS=$(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS)\n program_transform_name =\n objdir = .\n \n-target= ... `configure' substitutes actual target name here.\n-xmake_file= ... `configure' substitutes actual x- file name here.\n-tmake_file= ... `configure' substitutes actual t- file name here.\n+target=@target@\n+xmake_file=@dep_host_xmake_file@\n+tmake_file=@dep_tmake_file@\n #version=`sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/' < $(srcdir)/version.c`\n #mainversion=`sed -e 's/.*\\\"\\([0-9]*\\.[0-9]*\\).*/\\1/' < $(srcdir)/version.c`\n \n # Directory where sources are, from where we are.\n-srcdir = .\n+srcdir = @srcdir@\n+VPATH = @srcdir@\n \n # CYGNUS LOCAL\n # Directory where texinfo.tex lives\n-texidir = $(srcdir)/../../texinfo\n+# texidir = $(srcdir)/../../texinfo\n+\n+# Top build directory, relative to here.\n+top_builddir = ..\n+\n+# Internationalization library.\n+INTLLIBS = @INTLLIBS@\n \n # Additional system libraries to link with.\n CLIB=\n@@ -111,17 +118,23 @@ all: all.indirect\n \n # sed inserts variable overrides after the following line.\n ####target overrides\n+@target_overrides@\n ####host overrides\n+@host_overrides@\n ####cross overrides\n+@cross_defines@\n+@cross_overrides@\n ####build overrides\n+@build_overrides@\n ####site overrides\n+# @site_overrides@\n #\f\n # Now figure out from those variables how to compile and link.\n \n all.indirect: Makefile ../chill ../cc1chill$(exeext)\n \n # IN_GCC tells obstack.h that we are using gcc's <stddef.h> file.\n-INTERNAL_CFLAGS = $(CROSS) -DIN_GCC\n+INTERNAL_CFLAGS = $(CROSS) -DIN_GCC @extra_c_flags@\n \n # This is the variable actually used when we compile.\n ALL_CFLAGS = $(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) $(XCFLAGS)\n@@ -134,8 +147,8 @@ LIBIBERTY = ../../libiberty/libiberty.a\n \n # How to link with both our special library facilities\n # and the system's installed libraries.\n-LIBS = $(LIBIBERTY) $(CLIB)\n-LIBDEPS = $(LIBIBERTY)\n+LIBS = $(LIBIBERTY) $(CLIB) $(INTLLIBS)\n+LIBDEPS = $(INTLLIBS) $(LIBIBERTY)\n \n # Specify the directories to be searched for header files.\n # Both . and srcdir are used, in that order,"}, {"sha": "1f2ebf68ed3a1dc011a9568ad2d5b690afd9ce86", "filename": "gcc/ch/config-lang.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fch%2Fconfig-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fch%2Fconfig-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fconfig-lang.in?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -33,3 +33,6 @@ compilers=\"cc1chill\\$(exeext)\"\n stagestuff=\"chill chill-cross\\$(exeext) cc1chill\\$(exeext)\"\n \n diff_excludes=\"-x -x ch/chill.info*\"\n+\n+outputs=ch/Makefile\n+"}, {"sha": "a49d88a1fa79bd8d23f971bcaf49ef9a59e57393", "filename": "gcc/configure.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -378,6 +378,8 @@ else\n     AC_MSG_RESULT(no)\n fi\n \n+AC_C_INLINE\n+\n # Find some useful tools\n AC_PROG_AWK\n AC_PROG_LEX"}, {"sha": "a60d88cfb08db6edf7a476104ece6aca2f17c554", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -1,3 +1,9 @@\n+2000-06-04  Philipp Thomas  <pthomas@suse.de>\n+\n+\t* Makefile.in(INTLLIBS): New macro.\n+\t(LIBS): Add INTLLIBS.\n+\t(DEPLIBS): Likewise.\n+\n 2000-06-02  Richard Henderson  <rth@cygnus.com>\n \n \t* com.c (lang_get_alias_set): New."}, {"sha": "301716b34642b43a12e6776e56fa9434b9d3538d", "filename": "gcc/f/Makefile.in", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Ff%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Ff%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMakefile.in?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -88,6 +88,12 @@ VPATH = @srcdir@\n # Additional system libraries to link with.\n CLIB=\n \n+# Top build directory, relative to here.\n+top_builddir = ..\n+\n+# Internationalization library.\n+INTLLIBS = @INTLLIBS@\n+\n # Choose the real default target.\n ALL=all\n \n@@ -135,8 +141,8 @@ LDFLAGS=$(BOOT_LDFLAGS)\n \n # How to link with both our special library facilities\n # and the system's installed libraries.\n-LIBS = $(LIBIBERTY) $(CLIB)\n-LIBDEPS = $(LIBIBERTY)\n+LIBS = $(LIBIBERTY) $(CLIB) $(INTLLIBS)\n+LIBDEPS = $(INTLLIBS) $(LIBIBERTY)\n \n # Specify the directories to be searched for header files.\n # Both . and srcdir are used, in that order,"}, {"sha": "00452d85c6fc69443eb482d957438de8e17a30a7", "filename": "gcc/intl/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fintl%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fintl%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl%2FChangeLog?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -1,3 +1,19 @@\n+2000-06-06  Philipp Thomas  <pthomas@suse.de>\n+\t* Makefile.in: Add -DIN_GCC to DEFS, add appropriate -I switches.\n+\t* dcgettext.c: Define _GNU_SOURCE before any system header is\n+\tincluded. Guard getcwd declaration with HAVE_DECL_GETCWD.\n+\t* loadmsgcat.c (_nl_load_domain): Cast st.st_size in compaison to\n+\tsize_t.\n+\t* localealias.c: Define _GNU_SOURCE before any system header is\n+\tincluded. Don't use return value of memcpy because it could be a\n+\tmacro defined in terms of bcopy.\n+\t(read_alias_file): Remove HAVE_MEMCPY guard and just don't use the\n+\treturn value of memcpy. Cast argument to fgets and strlen to char *.\n+\t* explodename.c (_nl_explode_name): Cast codeset to unsigned char **\n+\tin call to _nl_normalize_codeset.\n+\t* l10nflist.c: Define _GNU_SOURCE before any system header is\n+\tincluded.\n+\t\n 1998-04-29  Ulrich Drepper  <drepper@cygnus.com>\n \n \t* intl/localealias.c (read_alias_file): Use unsigned char for"}, {"sha": "489adf9ab4e7cd33a33fd52f7de8bdf4bc3a2145", "filename": "gcc/intl/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fintl%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fintl%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl%2FMakefile.in?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -48,7 +48,7 @@ CC = @CC@\n LIBTOOL = @LIBTOOL@\n RANLIB = @RANLIB@\n \n-DEFS = -DLOCALEDIR=\\\"$(localedir)\\\" -DGNULOCALEDIR=\\\"$(gnulocaledir)\\\" \\\n+DEFS = -DIN_GCC -DLOCALEDIR=\\\"$(localedir)\\\" -DGNULOCALEDIR=\\\"$(gnulocaledir)\\\" \\\n -DLOCALE_ALIAS_PATH=\\\"$(aliaspath)\\\" @DEFS@\n CPPFLAGS = @CPPFLAGS@\n CFLAGS = @CFLAGS@\n@@ -79,7 +79,8 @@ DISTFILES.gettext = libintl.glibc intlh.inst.in\n .c.lo:\n \t$(LIBTOOL) --mode=compile $(COMPILE) $<\n \n-INCLUDES = -I.. -I. -I$(top_srcdir)/intl -I$(top_srcdir)/lib\n+INCLUDES = -I.. -I. -I$(top_srcdir)/intl -I$(top_srcdir)/lib -I$(srcdir)/.. \\\n+-I$(srcdir)/../config -I$(srcdir)/../../include\n \n all: all-@USE_INCLUDED_LIBINTL@\n "}, {"sha": "4399b717d541984ce7f7436e22dad21f8670339e", "filename": "gcc/intl/dcgettext.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fintl%2Fdcgettext.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fintl%2Fdcgettext.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl%2Fdcgettext.c?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -19,6 +19,10 @@\n # include <config.h>\n #endif\n \n+# ifndef _GNU_SOURCE\n+#  define _GNU_SOURCE\t1\n+# endif\n+\n #include <sys/types.h>\n \n #ifdef __GNUC__\n@@ -58,9 +62,6 @@ void free ();\n #endif\n \n #if defined HAVE_STRING_H || defined _LIBC\n-# ifndef _GNU_SOURCE\n-#  define _GNU_SOURCE\t1\n-# endif\n # include <string.h>\n #else\n # include <strings.h>\n@@ -98,7 +99,7 @@ void free ();\n # if !defined HAVE_GETCWD\n char *getwd ();\n #  define getcwd(buf, max) getwd (buf)\n-# else\n+# elif !defined (HAVE_DECL_GETCWD)\n char *getcwd ();\n # endif\n # ifndef HAVE_STPCPY"}, {"sha": "5186d1ffd5b76695be14b21050607a2f2d6bd082", "filename": "gcc/intl/explodename.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fintl%2Fexplodename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fintl%2Fexplodename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl%2Fexplodename.c?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -108,8 +108,9 @@ _nl_explode_name (name, language, modifier, territory, codeset,\n \n \t  if (*codeset != cp && (*codeset)[0] != '\\0')\n \t    {\n-\t      *normalized_codeset = _nl_normalize_codeset (*codeset,\n-\t\t\t\t\t\t\t   cp - *codeset);\n+\t      *normalized_codeset = _nl_normalize_codeset (\n+\t      \t\t\t\t*((unsigned char **) codeset),\n+\t      \t\t\t\tcp - *codeset);\n \t      if (strcmp (*codeset, *normalized_codeset) == 0)\n \t\tfree ((char *) *normalized_codeset);\n \t      else"}, {"sha": "f02d2186f20f03a57621dd626d51f2ddb375ef95", "filename": "gcc/intl/l10nflist.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fintl%2Fl10nflist.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fintl%2Fl10nflist.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl%2Fl10nflist.c?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -20,11 +20,11 @@\n # include <config.h>\n #endif\n \n+#ifndef _GNU_SOURCE\n+# define _GNU_SOURCE\t1\n+#endif\n \n #if defined HAVE_STRING_H || defined _LIBC\n-# ifndef _GNU_SOURCE\n-#  define _GNU_SOURCE\t1\n-# endif\n # include <string.h>\n #else\n # include <strings.h>"}, {"sha": "f05946e1398de9b4994dfa96d6304b0a197b3048", "filename": "gcc/intl/loadmsgcat.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fintl%2Floadmsgcat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fintl%2Floadmsgcat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl%2Floadmsgcat.c?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -91,7 +91,7 @@ _nl_load_domain (domain_file)\n \n   /* We must know about the size of the file.  */\n   if (fstat (fd, &st) != 0\n-      || (size = (size_t) st.st_size) != st.st_size\n+      || (size = (size_t) st.st_size) != (size_t) st.st_size\n       || size < sizeof (struct mo_file_header))\n     {\n       /* Something went wrong.  */"}, {"sha": "7c2f6ccb4ce32e4466b011048ed705a2e169d175", "filename": "gcc/intl/localealias.c", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fintl%2Flocalealias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fintl%2Flocalealias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl%2Flocalealias.c?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -20,6 +20,10 @@\n # include <config.h>\n #endif\n \n+# ifndef _GNU_SOURCE\n+#  define _GNU_SOURCE\t1\n+# endif\n+\n #include <ctype.h>\n #include <stdio.h>\n #include <sys/types.h>\n@@ -53,9 +57,6 @@ void free ();\n #endif\n \n #if defined HAVE_STRING_H || defined _LIBC\n-# ifndef _GNU_SOURCE\n-#  define _GNU_SOURCE\t1\n-# endif\n # include <string.h>\n #else\n # include <strings.h>\n@@ -227,13 +228,8 @@ read_alias_file (fname, fname_len)\n \n   full_fname = (char *) alloca (fname_len + sizeof aliasfile);\n   ADD_BLOCK (block_list, full_fname);\n-#ifdef HAVE_MEMPCPY\n-  mempcpy (mempcpy (full_fname, fname, fname_len),\n-\t   aliasfile, sizeof aliasfile);\n-#else\n   memcpy (full_fname, fname, fname_len);\n   memcpy (&full_fname[fname_len], aliasfile, sizeof aliasfile);\n-#endif\n \n   fp = fopen (full_fname, \"r\");\n   if (fp == NULL)\n@@ -255,7 +251,7 @@ read_alias_file (fname, fname_len)\n       unsigned char *value;\n       unsigned char *cp;\n \n-      if (fgets (buf, sizeof buf, fp) == NULL)\n+      if (fgets ((char *)buf, sizeof buf, fp) == NULL)\n \t/* EOF reached.  */\n \tbreak;\n \n@@ -314,8 +310,8 @@ read_alias_file (fname, fname_len)\n \t      if (nmap >= maxmap)\n \t\textend_alias_table ();\n \n-\t      alias_len = strlen (alias) + 1;\n-\t      value_len = strlen (value) + 1;\n+\t      alias_len = strlen ((char *)alias) + 1;\n+\t      value_len = strlen ((char *)value) + 1;\n \n \t      if (string_space_act + alias_len + value_len > string_space_max)\n \t\t{\n@@ -333,12 +329,12 @@ read_alias_file (fname, fname_len)\n \t\t  string_space_max = new_size;\n \t\t}\n \n-\t      map[nmap].alias = memcpy (&string_space[string_space_act],\n-\t\t\t\t\talias, alias_len);\n+\t      memcpy (&string_space[string_space_act], alias, alias_len);\n+\t      map[nmap].alias = &string_space[string_space_act];\n \t      string_space_act += alias_len;\n \n-\t      map[nmap].value = memcpy (&string_space[string_space_act],\n-\t\t\t\t\tvalue, value_len);\n+\t      memcpy (&string_space[string_space_act], value, value_len);\n+\t      map[nmap].value = &string_space[string_space_act];\n \t      string_space_act += value_len;\n \n \t      ++nmap;"}, {"sha": "3bb303d3dde8cad50127f3df208545994018e2d4", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -1,3 +1,9 @@\n+2000-06-04  Philipp Thomas  <pthomas@suse.de>\n+\n+\t* Makefile.in (INTLLIBS): New.\n+\t(LIBS): Add above.\n+\t(DEPLIBS): Ditto.\n+\n Fri Jun  2 16:48:55 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* class.c (get_dispatch_table): Build the vtable dummy entry list"}, {"sha": "350398a8a39b28937b3a290f434090488299165d", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -110,6 +110,8 @@ GCJH_SOURCES = $(srcdir)/java/gjavah.c $(srcdir)/java/jcf-io.c \\\n gcjh$(exeext): $(GCJH_SOURCES) $(LIBDEPS) $(TREE_H)\n \tcd java && $(MAKE) $(LANG_FLAGS_TO_PASS) $(JAVA_FLAGS_TO_PASS) ../gcjh$(exeext)\n \n+$(INTL_TARGETS): $(srcdir)/java/parse.c $(srcdir)/java/parse-scan.c\n+\n # This must be kept in sync with dependencies in Makefile.in.\n JV_SCAN_SOURCES = $(srcdir)/java/parse-scan.y $(srcdir)/java/lex.c \\\n        $(srcdir)/java/parse.h $(srcdir)/java/lex.h $(srcdir)/java/jv-scan.c"}, {"sha": "bbb42d2d2f9b104e735e732e15de46cdf8b7cdd4", "filename": "gcc/java/Makefile.in", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMakefile.in?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -102,6 +102,12 @@ libgcj_zip = $(datadir)/libgcj.zip\n # Additional system libraries to link with.\n CLIB=\n \n+# Top build directory, relative to here.\n+top_builddir = ..\n+\n+# Internationalization library.\n+INTLLIBS = @INTLLIBS@\n+\n # Choose the real default target.\n ALL=all\n \n@@ -144,8 +150,8 @@ LIBIBERTY = ../../libiberty/libiberty.a\n \n # How to link with both our special library facilities\n # and the system's installed libraries.\n-LIBS = $(LIBIBERTY) $(CLIB)\n-LIBDEPS = $(LIBIBERTY) ../errors.o\n+LIBS = $(INTLLIBS) $(LIBIBERTY) $(CLIB)\n+LIBDEPS = $(INTLLIBS) $(LIBIBERTY) ../errors.o\n \n # Specify the directories to be searched for header files.\n # Both . and srcdir are used, in that order,"}, {"sha": "448adf2ea4502d215ded3652f36c72aab3e7da21", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -1,3 +1,7 @@\n+2000-06-06  Philipp Thomas  <pthomas@suse.de>\n+\n+\t* Makefile.in.in: Add --define switch for xgettext.\n+\n 2000-05-30  Philipp Thomas  <pthomas@suse.de>\n \n \t* Makefile.in.in: Create compiled catalogs in objdir, not"}, {"sha": "a2b0340ecadc90d405f5b18e7dcd0328e7cb6e1b", "filename": "gcc/po/Makefile.in.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fpo%2FMakefile.in.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603832a03e9a6e270400e413fca78bb4205cb456/gcc%2Fpo%2FMakefile.in.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FMakefile.in.in?ref=603832a03e9a6e270400e413fca78bb4205cb456", "patch": "@@ -85,7 +85,7 @@ all-no:\n $(srcdir)/$(PACKAGE).pot: $(POTFILES)\n \t$(XGETTEXT) --default-domain=$(PACKAGE) --directory=$(top_srcdir) \\\n \t  --add-comments --keyword=_ --keyword=N_ \\\n-\t  --files-from=$(srcdir)/POTFILES.in \\\n+\t  --files-from=$(srcdir)/POTFILES.in --defines \\\n \t&& test ! -f $(PACKAGE).po \\\n \t   || ( rm -f $(srcdir)/$(PACKAGE).pot \\\n \t\t&& mv $(PACKAGE).po $(srcdir)/$(PACKAGE).pot )"}]}