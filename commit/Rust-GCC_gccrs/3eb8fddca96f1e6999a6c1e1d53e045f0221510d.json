{"sha": "3eb8fddca96f1e6999a6c1e1d53e045f0221510d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ViOGZkZGNhOTZmMWU2OTk5YTZjMWUxZDUzZTA0NWYwMjIxNTEwZA==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2005-09-05T07:53:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-09-05T07:53:45Z"}, "message": "exp_dist.adb (Add_RACW_TypeCode, [...]): Do not generate dummy access formal for RACW/RAS TypeCode TSS.\n\n2005-09-01  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_dist.adb (Add_RACW_TypeCode, Add_RAS_TypeCode): Do not generate\n\tdummy access formal for RACW/RAS TypeCode TSS.\n\t(Build_TypeCode_Call): Do not generate dummy null access actual for\n\tcalls to the TypeCode TSS.\n\nFrom-SVN: r103863", "tree": {"sha": "01f1e55226746f8f5efb30d32d0ed8df86521107", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01f1e55226746f8f5efb30d32d0ed8df86521107"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3eb8fddca96f1e6999a6c1e1d53e045f0221510d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb8fddca96f1e6999a6c1e1d53e045f0221510d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eb8fddca96f1e6999a6c1e1d53e045f0221510d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb8fddca96f1e6999a6c1e1d53e045f0221510d/comments", "author": null, "committer": null, "parents": [{"sha": "04efc8a196dabed89d6a090da3a4b4f7a6fd6111", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04efc8a196dabed89d6a090da3a4b4f7a6fd6111", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04efc8a196dabed89d6a090da3a4b4f7a6fd6111"}], "stats": {"total": 119, "additions": 27, "deletions": 92}, "files": [{"sha": "d0e016d68982949450f611bd9708f36eeafbeee9", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 27, "deletions": 92, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eb8fddca96f1e6999a6c1e1d53e045f0221510d/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eb8fddca96f1e6999a6c1e1d53e045f0221510d/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=3eb8fddca96f1e6999a6c1e1d53e045f0221510d", "patch": "@@ -483,7 +483,7 @@ package body Exp_Dist is\n    --    Is_Known_Async... : True if we know that this is asynchronous\n    --    Is_Known_Non_A... : True if we know that this is not asynchronous\n    --    Spec              : a node with a Parameter_Specifications and\n-   --                        a Subtype_Mark if applicable\n+   --                        a Result_Definition if applicable\n    --    Stub_Type         : in case of RACW stubs, parameters of type access\n    --                        to Stub_Type will be marshalled using the\n    --                        address of the object (the addr field) rather\n@@ -1480,13 +1480,13 @@ package body Exp_Dist is\n            Make_Function_Specification (Loc,\n              Defining_Unit_Name       => Proc,\n              Parameter_Specifications => Param_Specs,\n-             Subtype_Mark             =>\n+             Result_Definition        =>\n                New_Occurrence_Of (\n-                 Entity (Subtype_Mark (Spec)), Loc));\n+                 Entity (Result_Definition (Spec)), Loc));\n \n          Set_Ekind (Proc, E_Function);\n          Set_Etype (Proc,\n-           New_Occurrence_Of (Entity (Subtype_Mark (Spec)), Loc));\n+           New_Occurrence_Of (Entity (Result_Definition (Spec)), Loc));\n \n       else\n          Proc_Spec :=\n@@ -2313,8 +2313,8 @@ package body Exp_Dist is\n                   Make_Defining_Identifier (Loc,\n                     Chars => Name_For_New_Spec),\n                 Parameter_Specifications => Parameters,\n-                Subtype_Mark             =>\n-                  New_Occurrence_Of (Entity (Subtype_Mark (Spec)), Loc));\n+                Result_Definition        =>\n+                  New_Occurrence_Of (Entity (Result_Definition (Spec)), Loc));\n \n          when N_Procedure_Specification | N_Access_Procedure_Definition =>\n             return\n@@ -3230,7 +3230,7 @@ package body Exp_Dist is\n                  Parameter_Type      =>\n                    New_Occurrence_Of (Standard_Boolean, Loc))),\n \n-            Subtype_Mark =>\n+            Result_Definition =>\n               New_Occurrence_Of (Fat_Type, Loc));\n \n          --  Set the kind and return type of the function to prevent\n@@ -3417,7 +3417,7 @@ package body Exp_Dist is\n                        True,\n                      Parameter_Type =>\n                        New_Occurrence_Of (RTE (RE_Subprogram_Id), Loc))),\n-                 Subtype_Mark =>\n+                 Result_Definition =>\n                    New_Occurrence_Of (RTE (RE_Unsigned_64), Loc)));\n          Append_To (Decls, Current_Declaration);\n          Analyze (Current_Declaration);\n@@ -3992,7 +3992,7 @@ package body Exp_Dist is\n                        Make_Attribute_Reference (Loc,\n                          Prefix         =>\n                            New_Occurrence_Of (\n-                             Etype (Subtype_Mark (Spec)), Loc),\n+                             Etype (Result_Definition (Spec)), Loc),\n \n                          Attribute_Name => Name_Input,\n \n@@ -4606,7 +4606,7 @@ package body Exp_Dist is\n \n             declare\n                Etyp   : constant Entity_Id :=\n-                          Etype (Subtype_Mark (Specification (Vis_Decl)));\n+                          Etype (Result_Definition (Specification (Vis_Decl)));\n                Result : constant Node_Id   :=\n                           Make_Defining_Identifier (Loc,\n                              New_Internal_Name ('R'));\n@@ -4873,7 +4873,7 @@ package body Exp_Dist is\n           Specification              => Make_Function_Specification (Loc,\n             Defining_Unit_Name =>\n               Make_Defining_Identifier (Loc, New_Internal_Name ('S')),\n-            Subtype_Mark       => New_Occurrence_Of (Var_Type, Loc)),\n+            Result_Definition  => New_Occurrence_Of (Var_Type, Loc)),\n           Declarations               => No_List,\n           Handled_Statement_Sequence =>\n             Make_Handled_Sequence_Of_Statements (Loc, New_List (\n@@ -5413,7 +5413,7 @@ package body Exp_Dist is\n                    Any_Parameter,\n                  Parameter_Type =>\n                    New_Occurrence_Of (RTE (RE_Any), Loc))),\n-             Subtype_Mark => New_Occurrence_Of (RACW_Type, Loc));\n+             Result_Definition => New_Occurrence_Of (RACW_Type, Loc));\n \n          --  NOTE: The usage occurrences of RACW_Parameter must\n          --  refer to the entity in the declaration spec, not those\n@@ -5727,7 +5727,7 @@ package body Exp_Dist is\n                    RACW_Parameter,\n                  Parameter_Type =>\n                    New_Occurrence_Of (RACW_Type, Loc))),\n-             Subtype_Mark => New_Occurrence_Of (RTE (RE_Any), Loc));\n+             Result_Definition => New_Occurrence_Of (RTE (RE_Any), Loc));\n \n          --  NOTE: The usage occurrences of RACW_Parameter must\n          --  refer to the entity in the declaration spec, not in\n@@ -5771,9 +5771,6 @@ package body Exp_Dist is\n          Func_Decl : Node_Id;\n          Func_Body : Node_Id;\n \n-         RACW_Parameter : constant Entity_Id :=\n-                            Make_Defining_Identifier (Loc, Name_R);\n-\n       begin\n          Fnam :=\n            Make_Defining_Identifier (Loc,\n@@ -5786,15 +5783,7 @@ package body Exp_Dist is\n            Make_Function_Specification (Loc,\n              Defining_Unit_Name =>\n                Fnam,\n-             Parameter_Specifications => New_List (\n-               Make_Parameter_Specification (Loc,\n-                 Defining_Identifier =>\n-                   RACW_Parameter,\n-                 Parameter_Type =>\n-                   Make_Access_Definition (Loc,\n-                     Subtype_Mark =>\n-                       New_Occurrence_Of (RACW_Type, Loc)))),\n-             Subtype_Mark => New_Occurrence_Of (RTE (RE_TypeCode), Loc));\n+             Result_Definition => New_Occurrence_Of (RTE (RE_TypeCode), Loc));\n \n          --  NOTE: The usage occurrences of RACW_Parameter must\n          --  refer to the entity in the declaration spec, not those\n@@ -6247,7 +6236,7 @@ package body Exp_Dist is\n                  Parameter_Type      =>\n                    New_Occurrence_Of (Standard_Boolean, Loc))),\n \n-            Subtype_Mark =>\n+            Result_Definition =>\n               New_Occurrence_Of (Fat_Type, Loc));\n \n          --  Set the kind and return type of the function to prevent\n@@ -6309,7 +6298,7 @@ package body Exp_Dist is\n                    Any_Parameter,\n                  Parameter_Type =>\n                    New_Occurrence_Of (RTE (RE_Any), Loc))),\n-             Subtype_Mark => New_Occurrence_Of (RAS_Type, Loc));\n+             Result_Definition => New_Occurrence_Of (RAS_Type, Loc));\n \n          Discard_Node (\n            Make_Subprogram_Body (Loc,\n@@ -6383,7 +6372,7 @@ package body Exp_Dist is\n                    RAS_Parameter,\n                  Parameter_Type =>\n                    New_Occurrence_Of (RAS_Type, Loc))),\n-             Subtype_Mark => New_Occurrence_Of (RTE (RE_Any), Loc));\n+             Result_Definition => New_Occurrence_Of (RTE (RE_Any), Loc));\n \n          Discard_Node (\n            Make_Subprogram_Body (Loc,\n@@ -6410,25 +6399,12 @@ package body Exp_Dist is\n          Decls : constant List_Id := New_List;\n          Name_String, Repo_Id_String : String_Id;\n \n-         RAS_Parameter : constant Entity_Id :=\n-                           Make_Defining_Identifier (Loc, Name_R);\n-\n       begin\n-         --  The spec for this subprogram has a dummy 'access RAS'\n-         --  argument, which serves only for overloading purposes.\n-\n          Func_Spec :=\n            Make_Function_Specification (Loc,\n              Defining_Unit_Name =>\n                Fnam,\n-             Parameter_Specifications => New_List (\n-               Make_Parameter_Specification (Loc,\n-                 Defining_Identifier =>\n-                   RAS_Parameter,\n-                 Parameter_Type =>\n-                   Make_Access_Definition (Loc,\n-                     Subtype_Mark => New_Occurrence_Of (RAS_Type, Loc)))),\n-             Subtype_Mark => New_Occurrence_Of (RTE (RE_TypeCode), Loc));\n+             Result_Definition => New_Occurrence_Of (RTE (RE_TypeCode), Loc));\n \n          PolyORB_Support.Helpers.Build_Name_And_Repository_Id\n            (RAS_Type, Name_Str => Name_String, Repo_Id_Str => Repo_Id_String);\n@@ -7018,7 +6994,7 @@ package body Exp_Dist is\n \n          if Is_Function then\n             Result_TC := PolyORB_Support.Helpers.Build_TypeCode_Call (Loc,\n-              Etype (Subtype_Mark (Spec)), Decls);\n+              Etype (Result_Definition (Spec)), Decls);\n          else\n             Result_TC := New_Occurrence_Of (RTE (RE_TC_Void), Loc);\n          end if;\n@@ -7315,7 +7291,7 @@ package body Exp_Dist is\n                  Make_Tag_Check (Loc,\n                    Make_Return_Statement (Loc,\n                      PolyORB_Support.Helpers.Build_From_Any_Call (\n-                         Etype (Subtype_Mark (Spec)),\n+                         Etype (Result_Definition (Spec)),\n                          Make_Selected_Component (Loc,\n                            Prefix        => Result,\n                            Selector_Name => Name_Argument),\n@@ -7892,7 +7868,7 @@ package body Exp_Dist is\n \n             declare\n                Etyp   : constant Entity_Id :=\n-                          Etype (Subtype_Mark (Specification (Vis_Decl)));\n+                          Etype (Result_Definition (Specification (Vis_Decl)));\n                Result : constant Node_Id   :=\n                           Make_Defining_Identifier (Loc,\n                             New_Internal_Name ('R'));\n@@ -8271,7 +8247,7 @@ package body Exp_Dist is\n                       Any_Parameter,\n                     Parameter_Type =>\n                       New_Occurrence_Of (RTE (RE_Any), Loc))),\n-                Subtype_Mark => New_Occurrence_Of (Typ, Loc));\n+                Result_Definition => New_Occurrence_Of (Typ, Loc));\n \n             --  The following  is taken care of by Exp_Dist.Add_RACW_From_Any\n \n@@ -9062,7 +9038,7 @@ package body Exp_Dist is\n                       Expr_Parameter,\n                     Parameter_Type =>\n                       New_Occurrence_Of (Typ, Loc))),\n-                Subtype_Mark => New_Occurrence_Of (RTE (RE_Any), Loc));\n+                Result_Definition => New_Occurrence_Of (RTE (RE_Any), Loc));\n             Set_Etype (Expr_Parameter, Typ);\n \n             Any_Decl :=\n@@ -9571,9 +9547,6 @@ package body Exp_Dist is\n             --  if Typ is incomplete.\n \n             Fnam    : Entity_Id := Empty;\n-            Tnam    : Entity_Id := Empty;\n-            Pnam    : Entity_Id := Empty;\n-            Args    : List_Id := Empty_List;\n             Lib_RE  : RE_Id := RE_Null;\n \n             Expr : Node_Id;\n@@ -9590,43 +9563,6 @@ package body Exp_Dist is\n                --  in the type's TSS.\n \n                Fnam := Find_Inherited_TSS (U_Type, TSS_TypeCode);\n-\n-               if Present (Fnam) then\n-\n-                  --  When a TypeCode TSS exists, it has a single parameter\n-                  --  that is an anonymous access to the corresponding type.\n-                  --  This parameter is not used in any way; its purpose is\n-                  --  solely to provide overloading of the TSS.\n-\n-                  Tnam :=\n-                    Make_Defining_Identifier (Loc, New_Internal_Name ('T'));\n-                  Pnam :=\n-                    Make_Defining_Identifier (Loc, New_Internal_Name ('P'));\n-\n-                  Append_To (Decls,\n-                    Make_Full_Type_Declaration (Loc,\n-                      Defining_Identifier => Tnam,\n-                      Type_Definition =>\n-                        Make_Access_To_Object_Definition (Loc,\n-                          Subtype_Indication =>\n-                            New_Occurrence_Of (U_Type, Loc))));\n-                  Append_To (Decls,\n-                    Make_Object_Declaration (Loc,\n-                      Defining_Identifier => Pnam,\n-                      Constant_Present    => True,\n-                      Object_Definition   => New_Occurrence_Of (Tnam, Loc),\n-\n-                     --  Use a variable here to force proper freezing of Tnam\n-\n-                      Expression          => Make_Null (Loc)));\n-\n-                  --  Normally, calling _TypeCode with a null access parameter\n-                  --  should raise Constraint_Error, but this check is\n-                  --  suppressed for expanded code, and we do not care anyway\n-                  --  because we do not actually ever use this value.\n-\n-                  Args := New_List (New_Occurrence_Of (Pnam, Loc));\n-               end if;\n             end if;\n \n             if No (Fnam) then\n@@ -9720,9 +9656,7 @@ package body Exp_Dist is\n             --  Call the function\n \n             Expr :=\n-              Make_Function_Call (Loc,\n-                Name => New_Occurrence_Of (Fnam, Loc),\n-                Parameter_Associations => Args);\n+              Make_Function_Call (Loc, Name => New_Occurrence_Of (Fnam, Loc));\n \n             --  Allow Expr to be used as arg to Build_To_Any_Call immediately\n \n@@ -10089,7 +10023,8 @@ package body Exp_Dist is\n               Make_Function_Specification (Loc,\n                 Defining_Unit_Name => Fnam,\n                 Parameter_Specifications => Empty_List,\n-                Subtype_Mark => New_Occurrence_Of (RTE (RE_TypeCode), Loc));\n+                Result_Definition =>\n+                  New_Occurrence_Of (RTE (RE_TypeCode), Loc));\n \n             Build_Name_And_Repository_Id (Typ,\n               Name_Str => Type_Name_Str, Repo_Id_Str => Type_Repo_Id_Str);\n@@ -10633,7 +10568,7 @@ package body Exp_Dist is\n    begin\n       if Nkind (Spec) = N_Function_Specification then\n          Set_Ekind (Snam, E_Function);\n-         Set_Etype (Snam, Entity (Subtype_Mark (Spec)));\n+         Set_Etype (Snam, Entity (Result_Definition (Spec)));\n       else\n          Set_Ekind (Snam, E_Procedure);\n          Set_Etype (Snam, Standard_Void_Type);"}]}