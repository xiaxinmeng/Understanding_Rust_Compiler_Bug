{"sha": "da3c61151d5e85eb4723f3e8f5a2ed1c33e56ea6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGEzYzYxMTUxZDVlODVlYjQ3MjNmM2U4ZjVhMmVkMWMzM2U1NmVhNg==", "commit": {"author": {"name": "Paul Eggert", "email": "eggert@gnu.org", "date": "1993-07-12T21:10:27Z"}, "committer": {"name": "Paul Eggert", "email": "eggert@gnu.org", "date": "1993-07-12T21:10:27Z"}, "message": "(convert_for_assignment): Use `convert_and_check',\n\nnot `convert', for converting arithmetic types, since\n`convert_and_check' no longer reports an error\nwhere it should just warn.\n\nFrom-SVN: r4910", "tree": {"sha": "251b0dce7cbc41f7a7edeb8df13cdff281aaf181", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/251b0dce7cbc41f7a7edeb8df13cdff281aaf181"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da3c61151d5e85eb4723f3e8f5a2ed1c33e56ea6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da3c61151d5e85eb4723f3e8f5a2ed1c33e56ea6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da3c61151d5e85eb4723f3e8f5a2ed1c33e56ea6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da3c61151d5e85eb4723f3e8f5a2ed1c33e56ea6/comments", "author": null, "committer": null, "parents": [{"sha": "90c939d4ee5262bc3fe87d3b98a3ae47be5c4341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90c939d4ee5262bc3fe87d3b98a3ae47be5c4341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90c939d4ee5262bc3fe87d3b98a3ae47be5c4341"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "8ff4da5524fc130e296b1650904747a7951165a6", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da3c61151d5e85eb4723f3e8f5a2ed1c33e56ea6/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da3c61151d5e85eb4723f3e8f5a2ed1c33e56ea6/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=da3c61151d5e85eb4723f3e8f5a2ed1c33e56ea6", "patch": "@@ -4178,11 +4178,7 @@ convert_for_assignment (type, rhs, errtype, fundecl, funname, parmnum)\n        &&\n       (coder == INTEGER_TYPE || coder == REAL_TYPE || coder == ENUMERAL_TYPE\n        || codel == COMPLEX_TYPE))\n-    /* Don't use convert_and_check here.  If the input has type int\n-       and did not overflow, and we are converting it here to a short,\n-       we don't want an error.  A warning would be okay, but it's too risky now\n-       to add an option to convert_and_check to get just warnings.  */\n-    return convert (type, rhs);\n+    return convert_and_check (type, rhs);\n   /* Conversion to a union from its member types.  */\n   else if (codel == UNION_TYPE)\n     {"}]}