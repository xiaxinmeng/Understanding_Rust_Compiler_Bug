{"sha": "b8cca31c48f15ca5d6fd451eff71de74be6f2c50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhjY2EzMWM0OGYxNWNhNWQ2ZmQ0NTFlZmY3MWRlNzRiZTZmMmM1MA==", "commit": {"author": {"name": "Julia Koval", "email": "julia.koval@intel.com", "date": "2017-10-20T06:31:33Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2017-10-20T06:31:33Z"}, "message": "Add GFNI command line options and macros\n\ngcc/\n\t* common/config/i386/i386-common.c (OPTION_MASK_ISA_GFNI_SET,\n\t(OPTION_MASK_ISA_GFNI_UNSET): New.\n\t(ix86_handle_option): Handle OPT_mgfni.\n\t* config/i386/cpuid.h (bit_GFNI): New.\n\t* config/i386/driver-i386.c (host_detect_local_cpu): Detect gfni.\n\t* config/i386/i386-c.c (ix86_target_macros_internal): Define __GFNI__.\n\t* config/i386/i386.c (ix86_target_string): Add -mgfni.\n\t(ix86_valid_target_attribute_inner_p): Add OPT_mgfni.\n\t* config/i386/i386.h (TARGET_GFNI, TARGET_GFNI_P): New.\n\t* config/i386/i386.opt: Add mgfni.\n\nFrom-SVN: r253922", "tree": {"sha": "0045bdeffa7072f25a018d8acc6f357e5af4bfcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0045bdeffa7072f25a018d8acc6f357e5af4bfcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8cca31c48f15ca5d6fd451eff71de74be6f2c50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8cca31c48f15ca5d6fd451eff71de74be6f2c50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8cca31c48f15ca5d6fd451eff71de74be6f2c50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/comments", "author": {"login": "vaalfreja", "id": 5216345, "node_id": "MDQ6VXNlcjUyMTYzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5216345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaalfreja", "html_url": "https://github.com/vaalfreja", "followers_url": "https://api.github.com/users/vaalfreja/followers", "following_url": "https://api.github.com/users/vaalfreja/following{/other_user}", "gists_url": "https://api.github.com/users/vaalfreja/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaalfreja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaalfreja/subscriptions", "organizations_url": "https://api.github.com/users/vaalfreja/orgs", "repos_url": "https://api.github.com/users/vaalfreja/repos", "events_url": "https://api.github.com/users/vaalfreja/events{/privacy}", "received_events_url": "https://api.github.com/users/vaalfreja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "793c096d45d11bdb0152c7065a473d20c247a865", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/793c096d45d11bdb0152c7065a473d20c247a865", "html_url": "https://github.com/Rust-GCC/gccrs/commit/793c096d45d11bdb0152c7065a473d20c247a865"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "676993d4c2a7c9cf52dc55c77d342631e66ee518", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8cca31c48f15ca5d6fd451eff71de74be6f2c50", "patch": "@@ -1,3 +1,16 @@\n+2017-10-20  Julia Koval  <julia.koval@intel.com>\n+\n+\t* common/config/i386/i386-common.c (OPTION_MASK_ISA_GFNI_SET,\n+\t(OPTION_MASK_ISA_GFNI_UNSET): New.\n+\t(ix86_handle_option): Handle OPT_mgfni.\n+\t* config/i386/cpuid.h (bit_GFNI): New.\n+\t* config/i386/driver-i386.c (host_detect_local_cpu): Detect gfni.\n+\t* config/i386/i386-c.c (ix86_target_macros_internal): Define __GFNI__.\n+\t* config/i386/i386.c (ix86_target_string): Add -mgfni.\n+\t(ix86_valid_target_attribute_inner_p): Add OPT_mgfni.\n+\t* config/i386/i386.h (TARGET_GFNI, TARGET_GFNI_P): New.\n+\t* config/i386/i386.opt: Add mgfni.\n+\n 2017-10-20  Orlando Arias  <oarias@knights.ucf.edu>\n \n \t* config/msp430/msp430.c (msp430_option_override): Disable"}, {"sha": "34edcb895fe125737576b27dd6152619e8677008", "filename": "gcc/common/config/i386/i386-common.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c?ref=b8cca31c48f15ca5d6fd451eff71de74be6f2c50", "patch": "@@ -137,6 +137,7 @@ along with GCC; see the file COPYING3.  If not see\n #define OPTION_MASK_ISA_CLZERO_SET OPTION_MASK_ISA_CLZERO\n #define OPTION_MASK_ISA_PKU_SET OPTION_MASK_ISA_PKU\n #define OPTION_MASK_ISA_RDPID_SET OPTION_MASK_ISA_RDPID\n+#define OPTION_MASK_ISA_GFNI_SET OPTION_MASK_ISA_GFNI\n \n /* Define a set of ISAs which aren't available when a given ISA is\n    disabled.  MMX and SSE ISAs are handled separately.  */\n@@ -202,6 +203,7 @@ along with GCC; see the file COPYING3.  If not see\n #define OPTION_MASK_ISA_CLZERO_UNSET OPTION_MASK_ISA_CLZERO\n #define OPTION_MASK_ISA_PKU_UNSET OPTION_MASK_ISA_PKU\n #define OPTION_MASK_ISA_RDPID_UNSET OPTION_MASK_ISA_RDPID\n+#define OPTION_MASK_ISA_GFNI_UNSET OPTION_MASK_ISA_GFNI\n \n /* SSE4 includes both SSE4.1 and SSE4.2.  -mno-sse4 should the same\n    as -mno-sse4.1. */\n@@ -484,6 +486,19 @@ ix86_handle_option (struct gcc_options *opts,\n \t}\n       return true;\n \n+    case OPT_mgfni:\n+      if (value)\n+\t{\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_GFNI_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_GFNI_SET;\n+\t}\n+      else\n+\t{\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_GFNI_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_GFNI_UNSET;\n+\t}\n+      return true;\n+\n     case OPT_mavx5124fmaps:\n       if (value)\n \t{"}, {"sha": "a16c2d7a5b863fbc2d54882523c1c44c50cf86d1", "filename": "gcc/config/i386/cpuid.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/gcc%2Fconfig%2Fi386%2Fcpuid.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/gcc%2Fconfig%2Fi386%2Fcpuid.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcpuid.h?ref=b8cca31c48f15ca5d6fd451eff71de74be6f2c50", "patch": "@@ -97,6 +97,7 @@\n #define bit_AVX512VBMI\t(1 << 1)\n #define bit_PKU\t(1 << 3)\n #define bit_OSPKE\t(1 << 4)\n+#define bit_GFNI\t(1 << 8)\n #define bit_AVX512VPOPCNTDQ\t(1 << 14)\n #define bit_RDPID\t(1 << 22)\n "}, {"sha": "8f4babde62adc7eace387c26872594658371c59e", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=b8cca31c48f15ca5d6fd451eff71de74be6f2c50", "patch": "@@ -415,6 +415,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n   unsigned int has_avx512vbmi = 0, has_avx512ifma = 0, has_clwb = 0;\n   unsigned int has_mwaitx = 0, has_clzero = 0, has_pku = 0, has_rdpid = 0;\n   unsigned int has_avx5124fmaps = 0, has_avx5124vnniw = 0;\n+  unsigned int has_gfni = 0;\n \n   bool arch;\n \n@@ -504,6 +505,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       has_avx512vbmi = ecx & bit_AVX512VBMI;\n       has_pku = ecx & bit_OSPKE;\n       has_rdpid = ecx & bit_RDPID;\n+      has_gfni = ecx & bit_GFNI;\n \n       has_avx5124vnniw = edx & bit_AVX5124VNNIW;\n       has_avx5124fmaps = edx & bit_AVX5124FMAPS;\n@@ -1048,6 +1050,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       const char *clzero  = has_clzero  ? \" -mclzero\"  : \" -mno-clzero\";\n       const char *pku = has_pku ? \" -mpku\" : \" -mno-pku\";\n       const char *rdpid = has_rdpid ? \" -mrdpid\" : \" -mno-rdpid\";\n+      const char *gfni = has_gfni ? \" -mgfni\" : \" -mno-gfni\";\n       options = concat (options, mmx, mmx3dnow, sse, sse2, sse3, ssse3,\n \t\t\tsse4a, cx16, sahf, movbe, aes, sha, pclmul,\n \t\t\tpopcnt, abm, lwp, fma, fma4, xop, bmi, sgx, bmi2,\n@@ -1057,7 +1060,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \t\t\tavx512cd, avx512pf, prefetchwt1, clflushopt,\n \t\t\txsavec, xsaves, avx512dq, avx512bw, avx512vl,\n \t\t\tavx512ifma, avx512vbmi, avx5124fmaps, avx5124vnniw,\n-\t\t\tclwb, mwaitx, clzero, pku, rdpid, NULL);\n+\t\t\tclwb, mwaitx, clzero, pku, rdpid, gfni, NULL);\n     }\n \n done:"}, {"sha": "0c6b9fd74fa188db021669a14e17927778348a6f", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=b8cca31c48f15ca5d6fd451eff71de74be6f2c50", "patch": "@@ -457,6 +457,8 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     def_or_undef (parse_in, \"__PKU__\");\n   if (isa_flag2 & OPTION_MASK_ISA_RDPID)\n     def_or_undef (parse_in, \"__RDPID__\");\n+  if (isa_flag2 & OPTION_MASK_ISA_GFNI)\n+    def_or_undef (parse_in, \"__GFNI__\");\n   if (TARGET_IAMCU)\n     {\n       def_or_undef (parse_in, \"__iamcu\");"}, {"sha": "45a219741dbb0da62331cf16bf25860bb2334f95", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b8cca31c48f15ca5d6fd451eff71de74be6f2c50", "patch": "@@ -2595,6 +2595,7 @@ ix86_target_string (HOST_WIDE_INT isa, HOST_WIDE_INT isa2,\n      ISAs come first.  Target string will be displayed in the same order.  */\n   static struct ix86_target_opts isa2_opts[] =\n   {\n+    { \"-mgfni\",\t\tOPTION_MASK_ISA_GFNI },\n     { \"-mrdpid\",\tOPTION_MASK_ISA_RDPID },\n     { \"-msgx\",\t\tOPTION_MASK_ISA_SGX },\n     { \"-mavx5124vnniw\", OPTION_MASK_ISA_AVX5124VNNIW },\n@@ -5121,6 +5122,7 @@ ix86_valid_target_attribute_inner_p (tree args, char *p_strings[],\n     IX86_ATTR_ISA (\"mpx\",\tOPT_mmpx),\n     IX86_ATTR_ISA (\"clwb\",\tOPT_mclwb),\n     IX86_ATTR_ISA (\"rdpid\",\tOPT_mrdpid),\n+    IX86_ATTR_ISA (\"gfni\",\tOPT_mgfni),\n \n     /* enum options */\n     IX86_ATTR_ENUM (\"fpmath=\",\tOPT_mfpmath_),"}, {"sha": "04b590c9a6fcc94d1f0151aaa9c041a023aa4b20", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=b8cca31c48f15ca5d6fd451eff71de74be6f2c50", "patch": "@@ -103,6 +103,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_SGX_P(x)\tTARGET_ISA_SGX_P(x)\n #define TARGET_RDPID\tTARGET_ISA_RDPID\n #define TARGET_RDPID_P(x)\tTARGET_ISA_RDPID_P(x)\n+#define TARGET_GFNI\tTARGET_ISA_GFNI\n+#define TARGET_GFNI_P(x)\tTARGET_ISA_GFNI_P(x)\n #define TARGET_BMI\tTARGET_ISA_BMI\n #define TARGET_BMI_P(x)\tTARGET_ISA_BMI_P(x)\n #define TARGET_BMI2\tTARGET_ISA_BMI2"}, {"sha": "42d44b2eb4a9d8a1e8140a40dac9ac70857dba79", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8cca31c48f15ca5d6fd451eff71de74be6f2c50/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=b8cca31c48f15ca5d6fd451eff71de74be6f2c50", "patch": "@@ -753,6 +753,10 @@ mrdpid\n Target Report Mask(ISA_RDPID) Var(ix86_isa_flags2) Save\n Support RDPID built-in functions and code generation.\n \n+mgfni\n+Target Report Mask(ISA_GFNI) Var(ix86_isa_flags2) Save\n+Support GFNI built-in functions and code generation.\n+\n mbmi\n Target Report Mask(ISA_BMI) Var(ix86_isa_flags) Save\n Support BMI built-in functions and code generation."}]}