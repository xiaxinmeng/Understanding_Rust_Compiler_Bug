{"sha": "a68d415b1d94bf3cbafd889642bedc71c0e6ac5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY4ZDQxNWIxZDk0YmYzY2JhZmQ4ODk2NDJiZWRjNzFjMGU2YWM1YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-20T13:52:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-20T13:52:22Z"}, "message": "[multiple changes]\n\n2011-12-20  Robert Dewar  <dewar@adacore.com>\n\n\t* a-cdlili.ads, sem_cat.adb, sem_ch10.adb: Minor reformatting.\n\n2011-12-20  Bob Duff  <duff@adacore.com>\n\n\t* s-taprop-mingw.adb (Yield): Do_Yield is no longer Unreferenced.\n\n2011-12-20  Vincent Pucci  <pucci@adacore.com>\n\n\t* impunit.adb: s-dimkio, s-dimmks and s-dmotpr defined as GNAT\n\tDefined Additions to System.\n\t* Makefile.rtl: s-dimkio, s-dimmks and s-dmotpr added.\n\t* s-dimkio.ads, s-dimmks.ads, s-dmotpr.ads: New files.\n\n2011-12-20  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_ch4.adb (Traverse_Homonyms): Allow a homonym to match when\n\twithin an instance, even if the homonym is marked Is_Hidden at\n\tthis point.\n\nFrom-SVN: r182535", "tree": {"sha": "7e2bfaa4402860f87df1ba84a54999ac4d758f05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e2bfaa4402860f87df1ba84a54999ac4d758f05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/comments", "author": null, "committer": null, "parents": [{"sha": "54c04d6ca59426c458abdf1d7ce70dd8bb2d4dcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54c04d6ca59426c458abdf1d7ce70dd8bb2d4dcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54c04d6ca59426c458abdf1d7ce70dd8bb2d4dcc"}], "stats": {"total": 581, "additions": 570, "deletions": 11}, "files": [{"sha": "c6afe588f1f5183076f20bec0cbb2f94caeed609", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a68d415b1d94bf3cbafd889642bedc71c0e6ac5a", "patch": "@@ -1,3 +1,24 @@\n+2011-12-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-cdlili.ads, sem_cat.adb, sem_ch10.adb: Minor reformatting.\n+\n+2011-12-20  Bob Duff  <duff@adacore.com>\n+\n+\t* s-taprop-mingw.adb (Yield): Do_Yield is no longer Unreferenced.\n+\n+2011-12-20  Vincent Pucci  <pucci@adacore.com>\n+\n+\t* impunit.adb: s-dimkio, s-dimmks and s-dmotpr defined as GNAT\n+\tDefined Additions to System.\n+\t* Makefile.rtl: s-dimkio, s-dimmks and s-dmotpr added.\n+\t* s-dimkio.ads, s-dimmks.ads, s-dmotpr.ads: New files.\n+\n+2011-12-20  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_ch4.adb (Traverse_Homonyms): Allow a homonym to match when\n+\twithin an instance, even if the homonym is marked Is_Hidden at\n+\tthis point.\n+\n 2011-12-20  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch3.adb, sem_ch5.adb, s-diinio.adb, s-diinio.ads, sem_dim.adb,"}, {"sha": "8f8e17646cfb02a12ae41fd3f7cf0c90c10de3ec", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=a68d415b1d94bf3cbafd889642bedc71c0e6ac5a", "patch": "@@ -506,7 +506,10 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-crtrun$(objext) \\\n   s-diflio$(objext) \\\n   s-diinio$(objext) \\\n+  s-dimkio$(objext) \\\n+  s-dimmks$(objext) \\\n   s-direio$(objext) \\\n+  s-dmotpr$(objext) \\\n   s-dsaser$(objext) \\\n   s-excdeb$(objext) \\\n   s-except$(objext) \\"}, {"sha": "6662ff161e6b57165970741d15cbd23718445140", "filename": "gcc/ada/a-cdlili.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fa-cdlili.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fa-cdlili.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.ads?ref=a68d415b1d94bf3cbafd889642bedc71c0e6ac5a", "patch": "@@ -143,10 +143,10 @@ package Ada.Containers.Doubly_Linked_Lists is\n    procedure Reverse_Elements (Container : in out List);\n \n    function Iterate (Container : List)\n-      return List_Iterator_Interfaces.Reversible_Iterator'class;\n+      return List_Iterator_Interfaces.Reversible_Iterator'Class;\n \n    function Iterate (Container : List; Start : Cursor)\n-      return List_Iterator_Interfaces.Reversible_Iterator'class;\n+      return List_Iterator_Interfaces.Reversible_Iterator'Class;\n \n    procedure Swap\n      (Container : in out List;"}, {"sha": "b1903d3542c56615a94a875e8a42b21ea7f19f60", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=a68d415b1d94bf3cbafd889642bedc71c0e6ac5a", "patch": "@@ -368,6 +368,9 @@ package body Impunit is\n     (\"s-assert\", F),  -- System.Assertions\n     (\"s-diflio\", F),  -- System.Dim_Float_IO\n     (\"s-diinio\", F),  -- System.Dim_Integer_IO\n+    (\"s-dimkio\", F),  -- System.Dim_Mks_IO\n+    (\"s-dimmks\", F),  -- System.Dim_Mks\n+    (\"s-dmotpr\", F),  -- System.Dim_Mks.Other_Prefixes\n     (\"s-memory\", F),  -- System.Memory\n     (\"s-parint\", F),  -- System.Partition_Interface\n     (\"s-pooglo\", F),  -- System.Pool_Global"}, {"sha": "27ac0cac9020868656e516660d87bc24f0ac8a8c", "filename": "gcc/ada/s-dimkio.ads", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fs-dimkio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fs-dimkio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-dimkio.ads?ref=a68d415b1d94bf3cbafd889642bedc71c0e6ac5a", "patch": "@@ -0,0 +1,38 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n+--                                                                          --\n+--                     S Y S T E M . D I M _ M K S _ I O                    --\n+--                                                                          --\n+--                                  S p e c                                 --\n+--                                                                          --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides IO routines for the MKS dimension system (see\n+--  System.Dim_Mks).\n+\n+with System.Dim_Mks; use System.Dim_Mks;\n+with System.Dim_Float_IO;\n+\n+package System.Dim_Mks_IO is new System.Dim_Float_IO (Mks_Type);"}, {"sha": "1026992327bb29cc1b5d364ac74936590c9b6e11", "filename": "gcc/ada/s-dimmks.ads", "status": "added", "additions": 324, "deletions": 0, "changes": 324, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fs-dimmks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fs-dimmks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-dimmks.ads?ref=a68d415b1d94bf3cbafd889642bedc71c0e6ac5a", "patch": "@@ -0,0 +1,324 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n+--                                                                          --\n+--                        S Y S T E M . D I M _ M K S                       --\n+--                                                                          --\n+--                                  S p e c                                 --\n+--                                                                          --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package defines the MKS dimension system which is the SI system of\n+--  units.\n+--  Some other prefixes of this sytem are defined in a child package (see\n+--  System.Dim_Mks.Other_Prefixes) in order to avoid too many constant\n+--  declarations in this package.\n+\n+with Ada.Numerics;\n+\n+package System.Dim_Mks is\n+\n+   e  : constant := Ada.Numerics.e;\n+   Pi : constant := Ada.Numerics.Pi;\n+\n+   --  Dimensioned type Mks_Type\n+\n+   type Mks_Type is new Long_Float\n+     with\n+      Dimension_System => ((Meter, 'm'),\n+        (Kilogram, \"kg\"),\n+        (Second,   's'),\n+        (Ampere,   'A'),\n+        (Kelvin,   'K'),\n+        (Mole,     \"mol\"),\n+        (Candela,  \"cd\"));\n+\n+   --  SI Base\n+\n+   subtype Length is Mks_Type\n+     with\n+      Dimension => ('m',\n+        Meter =>  1,\n+        others => 0);\n+   subtype Mass is Mks_Type\n+     with\n+      Dimension => (\"kg\",\n+        Kilogram => 1,\n+        others =>   0);\n+   subtype Time is Mks_Type\n+     with\n+      Dimension => ('s',\n+        Second => 1,\n+        others => 0);\n+   subtype Electric_Current is Mks_Type\n+     with\n+      Dimension => ('A',\n+        Ampere => 1,\n+        others => 0);\n+   subtype Thermodynamic_Temperature is Mks_Type\n+     with\n+      Dimension => ('K',\n+        Kelvin => 1,\n+        others => 0);\n+   subtype Amount_Of_Substance is Mks_Type\n+     with\n+      Dimension => (\"mol\",\n+        Mole =>   1,\n+        others => 0);\n+   subtype Luminous_Intensity is Mks_Type\n+     with\n+      Dimension => (\"cd\",\n+        Candela => 1,\n+        others =>  0);\n+\n+   --  SI Base units\n+\n+   m   : constant Length                    := 1.0;\n+   kg  : constant Mass                      := 1.0;\n+   s   : constant Time                      := 1.0;\n+   A   : constant Electric_Current          := 1.0;\n+   K   : constant Thermodynamic_Temperature := 1.0;\n+   mol : constant Amount_Of_Substance       := 1.0;\n+   cd  : constant Luminous_Intensity        := 1.0;\n+\n+   --  SI Derived dimensioned subtypes\n+\n+   subtype Angle is Mks_Type\n+     with\n+      Dimension => (\"rad\",\n+        others => 0);\n+\n+   subtype Solid_Angle is Mks_Type\n+     with\n+      Dimension => (\"sr\",\n+        others => 0);\n+\n+   subtype Frequency is Mks_Type\n+     with\n+      Dimension => (\"Hz\",\n+        Second => -1,\n+        others => 0);\n+   subtype Force is Mks_Type\n+     with\n+      Dimension => ('N',\n+        Meter =>    1,\n+        Kilogram => 1,\n+        Second =>  -2,\n+        others =>   0);\n+   subtype Pressure is Mks_Type\n+     with\n+      Dimension => (\"Pa\",\n+        Meter =>    -1,\n+        Kilogram => 1,\n+        Second =>   -2,\n+        others =>   0);\n+   subtype Energy is Mks_Type\n+     with\n+      Dimension => ('J',\n+        Meter =>    2,\n+        Kilogram => 1,\n+        Second =>   -2,\n+        others =>   0);\n+   subtype Power is Mks_Type\n+     with\n+      Dimension => ('W',\n+        Meter =>    2,\n+        Kilogram => 1,\n+        Second =>   -3,\n+        others =>   0);\n+   subtype Electric_Charge is Mks_Type\n+     with\n+      Dimension => ('C',\n+        Second => 1,\n+        Ampere => 1,\n+        others => 0);\n+   subtype Electric_Potential_Difference is Mks_Type\n+     with\n+      Dimension => ('V',\n+        Meter =>    2,\n+        Kilogram => 1,\n+        Second =>   -3,\n+        Ampere =>   -1,\n+        others =>   0);\n+   subtype Electric_Capacitance is Mks_Type\n+     with\n+      Dimension => ('F',\n+        Meter =>    -2,\n+        Kilogram => -1,\n+        Second =>   4,\n+        Ampere =>   2,\n+        others =>   0);\n+   subtype Electric_Resistance is Mks_Type\n+     with\n+      Dimension => (\"\u03a9\",\n+        Meter =>    2,\n+        Kilogram => 1,\n+        Second =>   -3,\n+        Ampere =>   -2,\n+        others =>   0);\n+   subtype Electric_Conductance is Mks_Type\n+     with\n+      Dimension => ('S',\n+        Meter =>    -2,\n+        Kilogram => -1,\n+        Second =>   3,\n+        Ampere =>   2,\n+        others =>   0);\n+   subtype Magnetic_Flux is Mks_Type\n+     with\n+      Dimension => (\"Wb\",\n+        Meter =>    2,\n+        Kilogram => 1,\n+        Second =>   -2,\n+        Ampere =>   -1,\n+        others =>   0);\n+   subtype Magnetic_Flux_Density is Mks_Type\n+     with\n+      Dimension => ('T',\n+        Kilogram => 1,\n+        Second =>   -2,\n+        Ampere =>   -1,\n+        others =>   0);\n+   subtype Inductance is Mks_Type\n+     with\n+      Dimension => ('H',\n+        Meter =>    2,\n+        Kilogram => 1,\n+        Second =>   -2,\n+        Ampere =>   -2,\n+        others =>   0);\n+   subtype Celsius_Temperature is Mks_Type\n+     with\n+      Dimension => (\"\u00b0C\",\n+        Kelvin => 1,\n+        others => 0);\n+   subtype Luminous_Flux is Mks_Type\n+     with\n+      Dimension => (\"lm\",\n+        Candela => 1,\n+        others =>  0);\n+   subtype Illuminance is Mks_Type\n+     with\n+      Dimension => (\"lx\",\n+        Meter =>   -2,\n+        Candela => 1,\n+        others =>  0);\n+   subtype Radioactivity is Mks_Type\n+     with\n+      Dimension => (\"Bq\",\n+        Second => -1,\n+        others => 0);\n+   subtype Absorbed_Dose is Mks_Type\n+     with\n+      Dimension => (\"Gy\",\n+        Meter =>  2,\n+        Second => -2,\n+        others => 0);\n+   subtype Equivalent_Dose is Mks_Type\n+     with\n+      Dimension => (\"Sv\",\n+        Meter =>  2,\n+        Second => -2,\n+        others => 0);\n+   subtype Catalytic_Activity is Mks_Type\n+     with\n+      Dimension => (\"kat\",\n+        Second => -1,\n+        Mole =>   1,\n+        others => 0);\n+\n+   rad : constant Angle                         := 1.0;\n+   sr  : constant Solid_Angle                   := 1.0;\n+   Hz  : constant Frequency                     := 1.0;\n+   N   : constant Force                         := 1.0;\n+   Pa  : constant Pressure                      := 1.0;\n+   J   : constant Energy                        := 1.0;\n+   W   : constant Power                         := 1.0;\n+   C   : constant Electric_Charge               := 1.0;\n+   V   : constant Electric_Potential_Difference := 1.0;\n+   F   : constant Electric_Capacitance          := 1.0;\n+   Ohm : constant Electric_Resistance           := 1.0;\n+   Si  : constant Electric_Conductance          := 1.0;\n+   Wb  : constant Magnetic_Flux                 := 1.0;\n+   T   : constant Magnetic_Flux_Density         := 1.0;\n+   H   : constant Inductance                    := 1.0;\n+   dC  : constant Celsius_Temperature           := 273.15;\n+   lm  : constant Luminous_Flux                 := 1.0;\n+   lx  : constant Illuminance                   := 1.0;\n+   Bq  : constant Radioactivity                 := 1.0;\n+   Gy  : constant Absorbed_Dose                 := 1.0;\n+   Sv  : constant Equivalent_Dose               := 1.0;\n+   kat : constant Catalytic_Activity            := 1.0;\n+\n+   --  SI prefixes for Meter\n+\n+   um  : constant Length := 1.0E-06;  -- micro (u)\n+   mm  : constant Length := 1.0E-03;  -- milli\n+   cm  : constant Length := 1.0E-02;  -- centi\n+   dm  : constant Length := 1.0E-01;  -- deci\n+   dam : constant Length := 1.0E+01;  -- deka\n+   hm  : constant Length := 1.0E+02;  -- hecto\n+   km  : constant Length := 1.0E+03;  -- kilo\n+   Mem : constant Length := 1.0E+06;  -- mega\n+\n+   --  SI prefixes for Kilogram\n+\n+   ug  : constant Mass := 1.0E-09;  -- micro (u)\n+   mg  : constant Mass := 1.0E-06;  -- milli\n+   cg  : constant Mass := 1.0E-05;  -- centi\n+   dg  : constant Mass := 1.0E-04;  -- deci\n+   g   : constant Mass := 1.0E-03;  -- gram\n+   dag : constant Mass := 1.0E-02;  -- deka\n+   hg  : constant Mass := 1.0E-01;  -- hecto\n+   Meg : constant Mass := 1.0E+03;  -- mega\n+\n+   --  SI prefixes for Second\n+\n+   us  : constant Time := 1.0E-06;  -- micro (u)\n+   ms  : constant Time := 1.0E-03;  -- milli\n+   cs  : constant Time := 1.0E-02;  -- centi\n+   ds  : constant Time := 1.0E-01;  -- deci\n+   das : constant Time := 1.0E+01;  -- deka\n+   hs  : constant Time := 1.0E+02;  -- hecto\n+   ks  : constant Time := 1.0E+03;  -- kilo\n+   Mes : constant Time := 1.0E+06;  -- mega\n+\n+   --  Other constants for Second\n+\n+   min  : constant Time := 60.0 * s;\n+   hour : constant Time := 60.0 * min;\n+   day  : constant Time := 24.0 * hour;\n+   year : constant Time := 365.25 * day;\n+\n+   --  SI prefixes for Ampere\n+\n+   mA  : constant Electric_Current := 1.0E-03;  -- milli\n+   cA  : constant Electric_Current := 1.0E-02;  -- centi\n+   dA  : constant Electric_Current := 1.0E-01;  -- deci\n+   daA : constant Electric_Current := 1.0E+01;  -- deka\n+   hA  : constant Electric_Current := 1.0E+02;  -- hecto\n+   kA  : constant Electric_Current := 1.0E+03;  -- kilo\n+   MeA : constant Electric_Current := 1.0E+06;  -- mega\n+\n+end System.Dim_Mks;"}, {"sha": "b91afb832544b726fa911f1e80b94bb589aa1327", "filename": "gcc/ada/s-dmotpr.ads", "status": "added", "additions": 168, "deletions": 0, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fs-dmotpr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fs-dmotpr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-dmotpr.ads?ref=a68d415b1d94bf3cbafd889642bedc71c0e6ac5a", "patch": "@@ -0,0 +1,168 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n+--                                                                          --\n+--         S Y S T E M . D I M _ M K S . O T H E R _ P R E F I X E S        --\n+--                                                                          --\n+--                                  S p e c                                 --\n+--                                                                          --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Package that defines some other prefixes for the MKS base unit system.\n+\n+--  These prefixes have been defined in a child package in order to avoid too\n+--  many constant declarations in System.Dim_Mks.\n+\n+package System.Dim_Mks.Other_Prefixes is\n+\n+   --  SI prefixes for Meter\n+\n+   ym  : constant Length := 1.0E-24;  -- yocto\n+   zm  : constant Length := 1.0E-21;  -- zepto\n+   am  : constant Length := 1.0E-18;  -- atto\n+   fm  : constant Length := 1.0E-15;  -- femto\n+   pm  : constant Length := 1.0E-12;  -- pico\n+   nm  : constant Length := 1.0E-09;  -- nano\n+   Gm  : constant Length := 1.0E+09;  -- giga\n+   Tm  : constant Length := 1.0E+12;  -- tera\n+   Pem : constant Length := 1.0E+15;  -- peta\n+   Em  : constant Length := 1.0E+18;  -- exa\n+   Zem : constant Length := 1.0E+21;  -- zetta\n+   Yom : constant Length := 1.0E+24;  -- yotta\n+\n+   --  SI prefixes for Kilogram\n+\n+   yg  : constant Mass := 1.0E-27;  -- yocto\n+   zg  : constant Mass := 1.0E-24;  -- zepto\n+   ag  : constant Mass := 1.0E-21;  -- atto\n+   fg  : constant Mass := 1.0E-18;  -- femto\n+   pg  : constant Mass := 1.0E-15;  -- pico\n+   ng  : constant Mass := 1.0E-12;  -- nano\n+   Gg  : constant Mass := 1.0E+06;  -- giga\n+   Tg  : constant Mass := 1.0E+09;  -- tera\n+   Peg : constant Mass := 1.0E+13;  -- peta\n+   Eg  : constant Mass := 1.0E+15;  -- exa\n+   Zeg : constant Mass := 1.0E+18;  -- zetta\n+   Yog : constant Mass := 1.0E+21;  -- yotta\n+\n+   --  SI prefixes for Second\n+\n+   ys  : constant Time := 1.0E-24;  -- yocto\n+   zs  : constant Time := 1.0E-21;  -- zepto\n+   as  : constant Time := 1.0E-18;  -- atto\n+   fs  : constant Time := 1.0E-15;  -- femto\n+   ps  : constant Time := 1.0E-12;  -- pico\n+   ns  : constant Time := 1.0E-09;  -- nano\n+   Gs  : constant Time := 1.0E+09;  -- giga\n+   Ts  : constant Time := 1.0E+12;  -- tera\n+   Pes : constant Time := 1.0E+15;  -- peta\n+   Es  : constant Time := 1.0E+18;  -- exa\n+   Zes : constant Time := 1.0E+21;  -- zetta\n+   Yos : constant Time := 1.0E+24;  -- yotta\n+\n+   --  SI prefixes for Ampere\n+\n+   yA  : constant Electric_Current := 1.0E-24;  -- yocto\n+   zA  : constant Electric_Current := 1.0E-21;  -- zepto\n+   aA  : constant Electric_Current := 1.0E-18;  -- atto\n+   fA  : constant Electric_Current := 1.0E-15;  -- femto\n+   nA  : constant Electric_Current := 1.0E-09;  -- nano\n+   uA  : constant Electric_Current := 1.0E-06;  -- micro (u)\n+   GA  : constant Electric_Current := 1.0E+09;  -- giga\n+   TA  : constant Electric_Current := 1.0E+12;  -- tera\n+   PeA : constant Electric_Current := 1.0E+15;  -- peta\n+   EA  : constant Electric_Current := 1.0E+18;  -- exa\n+   ZeA : constant Electric_Current := 1.0E+21;  -- zetta\n+   YoA : constant Electric_Current := 1.0E+24;  -- yotta\n+\n+   --  SI prefixes for Kelvin\n+\n+   yK  : constant Thermodynamic_Temperature := 1.0E-24;  -- yocto\n+   zK  : constant Thermodynamic_Temperature := 1.0E-21;  -- zepto\n+   aK  : constant Thermodynamic_Temperature := 1.0E-18;  -- atto\n+   fK  : constant Thermodynamic_Temperature := 1.0E-15;  -- femto\n+   pK  : constant Thermodynamic_Temperature := 1.0E-12;  -- pico\n+   nK  : constant Thermodynamic_Temperature := 1.0E-09;  -- nano\n+   uK  : constant Thermodynamic_Temperature := 1.0E-06;  -- micro (u)\n+   mK  : constant Thermodynamic_Temperature := 1.0E-03;  -- milli\n+   cK  : constant Thermodynamic_Temperature := 1.0E-02;  -- centi\n+   dK  : constant Thermodynamic_Temperature := 1.0E-01;  -- deci\n+   daK : constant Thermodynamic_Temperature := 1.0E+01;  -- deka\n+   hK  : constant Thermodynamic_Temperature := 1.0E+02;  -- hecto\n+   kK  : constant Thermodynamic_Temperature := 1.0E+03;  -- kilo\n+   MeK : constant Thermodynamic_Temperature := 1.0E+06;  -- mega\n+   GK  : constant Thermodynamic_Temperature := 1.0E+09;  -- giga\n+   TK  : constant Thermodynamic_Temperature := 1.0E+12;  -- tera\n+   PeK : constant Thermodynamic_Temperature := 1.0E+15;  -- peta\n+   EK  : constant Thermodynamic_Temperature := 1.0E+18;  -- exa\n+   ZeK : constant Thermodynamic_Temperature := 1.0E+21;  -- zetta\n+   YoK : constant Thermodynamic_Temperature := 1.0E+24;  -- yotta\n+\n+   --  SI prefixes for Mole\n+\n+   ymol  : constant Amount_Of_Substance := 1.0E-24;  -- yocto\n+   zmol  : constant Amount_Of_Substance := 1.0E-21;  -- zepto\n+   amol  : constant Amount_Of_Substance := 1.0E-18;  -- atto\n+   fmol  : constant Amount_Of_Substance := 1.0E-15;  -- femto\n+   pmol  : constant Amount_Of_Substance := 1.0E-12;  -- pico\n+   nmol  : constant Amount_Of_Substance := 1.0E-09;  -- nano\n+   umol  : constant Amount_Of_Substance := 1.0E-06;  -- micro (u)\n+   mmol  : constant Amount_Of_Substance := 1.0E-03;  -- milli\n+   cmol  : constant Amount_Of_Substance := 1.0E-02;  -- centi\n+   dmol  : constant Amount_Of_Substance := 1.0E-01;  -- deci\n+   damol : constant Amount_Of_Substance := 1.0E+01;  -- deka\n+   hmol  : constant Amount_Of_Substance := 1.0E+02;  -- hecto\n+   kmol  : constant Amount_Of_Substance := 1.0E+03;  -- kilo\n+   Memol : constant Amount_Of_Substance := 1.0E+06;  -- mega\n+   Gmol  : constant Amount_Of_Substance := 1.0E+09;  -- giga\n+   Tmol  : constant Amount_Of_Substance := 1.0E+12;  -- tera\n+   Pemol : constant Amount_Of_Substance := 1.0E+15;  -- peta\n+   Emol  : constant Amount_Of_Substance := 1.0E+18;  -- exa\n+   Zemol : constant Amount_Of_Substance := 1.0E+21;  -- zetta\n+   Yomol : constant Amount_Of_Substance := 1.0E+24;  -- yotta\n+\n+   --  SI prefixes for Candela\n+\n+   ycd  : constant Luminous_Intensity := 1.0E-24;  -- yocto\n+   zcd  : constant Luminous_Intensity := 1.0E-21;  -- zepto\n+   acd  : constant Luminous_Intensity := 1.0E-18;  -- atto\n+   fcd  : constant Luminous_Intensity := 1.0E-15;  -- femto\n+   pcd  : constant Luminous_Intensity := 1.0E-12;  -- pico\n+   ncd  : constant Luminous_Intensity := 1.0E-09;  -- nano\n+   ucd  : constant Luminous_Intensity := 1.0E-06;  -- micro (u)\n+   mcd  : constant Luminous_Intensity := 1.0E-03;  -- milli\n+   ccd  : constant Luminous_Intensity := 1.0E-02;  -- centi\n+   dcd  : constant Luminous_Intensity := 1.0E-01;  -- deci\n+   dacd : constant Luminous_Intensity := 1.0E+01;  -- deka\n+   hcd  : constant Luminous_Intensity := 1.0E+02;  -- hecto\n+   kcd  : constant Luminous_Intensity := 1.0E+03;  -- kilo\n+   Mecd : constant Luminous_Intensity := 1.0E+06;  -- mega\n+   Gcd  : constant Luminous_Intensity := 1.0E+09;  -- giga\n+   Tcd  : constant Luminous_Intensity := 1.0E+12;  -- tera\n+   Pecd : constant Luminous_Intensity := 1.0E+15;  -- peta\n+   Ecd  : constant Luminous_Intensity := 1.0E+18;  -- exa\n+   Zecd : constant Luminous_Intensity := 1.0E+21;  -- zetta\n+   Yocd : constant Luminous_Intensity := 1.0E+24;  -- yotta\n+\n+end System.Dim_Mks.Other_Prefixes;"}, {"sha": "50723076122f1c2232013004bd8653c4bf455875", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=a68d415b1d94bf3cbafd889642bedc71c0e6ac5a", "patch": "@@ -697,15 +697,12 @@ package body System.Task_Primitives.Operations is\n    -----------\n \n    procedure Yield (Do_Yield : Boolean := True) is\n-      pragma Unreferenced (Do_Yield);\n-\n    begin\n       --  Note: in a previous implementation if Do_Yield was False, then we\n       --  introduced a delay of 1 millisecond in an attempt to get closer to\n       --  annex D semantics, and in particular to make ACATS CXD8002 pass. But\n       --  this change introduced a huge performance regression evaluating the\n-      --  Count attribute. So we decided to remove this processing and just\n-      --  call SwitchToThread unconditionally (leaving Do_Yield unreferenced).\n+      --  Count attribute. So we decided to remove this processing.\n \n       --  Moreover, CXD8002 appears to pass on Windows (although we do not\n       --  guarantee full Annex D compliance on Windows in any case)."}, {"sha": "4d1794aeabedac55df50fb4638e7aa071ec69102", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=a68d415b1d94bf3cbafd889642bedc71c0e6ac5a", "patch": "@@ -976,7 +976,10 @@ package body Sem_Cat is\n \n                               --  Skip if error already posted on the WITH\n                               --  clause (in which case the Name attribute\n-                              --  may be invalid).\n+                              --  may be invalid). In particular, this fixes\n+                              --  the problem of hanging in the presence of a\n+                              --  WITH clause on a child that is an illegal\n+                              --  generic instantiation.\n \n                               or else Error_Posted (Item))\n             then"}, {"sha": "5c65ab0e4f1f1a488dd3f6b5b3dea84c635df0ab", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=a68d415b1d94bf3cbafd889642bedc71c0e6ac5a", "patch": "@@ -2681,8 +2681,8 @@ package body Sem_Ch10 is\n             pragma Assert (Serious_Errors_Detected /= 0);\n \n             --  Mark the node to indicate that a related error has been posted.\n-            --  This defends further compilation passes against cascaded errors\n-            --  caused by the invalid WITH clause node.\n+            --  This defends further compilation passes against improper use of\n+            --  the invalid WITH clause node.\n \n             Set_Error_Posted (N);\n             Set_Name (N, Error);"}, {"sha": "1c5654e7d7ff3b6580b490bc072b218bfb95ee54", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68d415b1d94bf3cbafd889642bedc71c0e6ac5a/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=a68d415b1d94bf3cbafd889642bedc71c0e6ac5a", "patch": "@@ -7168,11 +7168,13 @@ package body Sem_Ch4 is\n \n             --  Find a non-hidden operation whose first parameter is of the\n             --  class-wide type, a subtype thereof, or an anonymous access\n-            --  to same.\n+            --  to same. If in an instance, the operation can be considered\n+            --  even if hidden (it may be hidden because the instantiation is\n+            --  expanded after the containing package has been analyzed).\n \n             while Present (Hom) loop\n                if Ekind_In (Hom, E_Procedure, E_Function)\n-                 and then not Is_Hidden (Hom)\n+                 and then (not Is_Hidden (Hom) or else In_Instance)\n                  and then Scope (Hom) = Scope (Anc_Type)\n                  and then Present (First_Formal (Hom))\n                  and then"}]}