{"sha": "4ef0f1e90f1795b1f2d5bba05ed299e8c7635fd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVmMGYxZTkwZjE3OTViMWYyZDViYmEwNWVkMjk5ZThjNzYzNWZkNA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-11-05T11:40:51Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-11-05T16:16:20Z"}, "message": "Drop overflow from constants while building ranges in ranger.\n\nSometimes the overflow flag will leak into the IL.  Drop it while\ncreating ranges.\n\nThere are various places we could plug this.  This patch just plugs things\nat get_tree_range which is the entry point for ranges from tree expressions.\nIt fixes the PR, and probably fixes the ranger entirely, but we may need\nto revisit this.\n\nFor example, I looked to see if there were other places that created\nranges with TREE_OVERFLOW set, and there are various.  For example,\nthe following code pattern appears multiple times in vr-values.c:\n\n  else if (is_gimple_min_invariant (op0))\n    vr0.set (op0);\n\nThis can pick up TREE_OVERFLOW from the IL if present.  However, the\nranger won't see them so we're good.\n\nAt some point we should audit all this.  Or perhaps just nuke all\nTREE_OVERFLOW's at irange::set.\n\nFor now, this will do.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/97721\n\t* gimple-range.cc (get_tree_range): Drop overflow from constants.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/pr97721.c: New test.", "tree": {"sha": "58762b264edd47e2aa29482a9ee160b1da91a307", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58762b264edd47e2aa29482a9ee160b1da91a307"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ef0f1e90f1795b1f2d5bba05ed299e8c7635fd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef0f1e90f1795b1f2d5bba05ed299e8c7635fd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ef0f1e90f1795b1f2d5bba05ed299e8c7635fd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef0f1e90f1795b1f2d5bba05ed299e8c7635fd4/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8cc59ef4941c19d068b9dfe4e13753c9fd402c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8cc59ef4941c19d068b9dfe4e13753c9fd402c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8cc59ef4941c19d068b9dfe4e13753c9fd402c6"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "0c8ec40448fb0b577b2e04ee78b4f40c4027d757", "filename": "gcc/gimple-range.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef0f1e90f1795b1f2d5bba05ed299e8c7635fd4/gcc%2Fgimple-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef0f1e90f1795b1f2d5bba05ed299e8c7635fd4/gcc%2Fgimple-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range.cc?ref=4ef0f1e90f1795b1f2d5bba05ed299e8c7635fd4", "patch": "@@ -165,6 +165,8 @@ get_tree_range (irange &r, tree expr)\n   switch (TREE_CODE (expr))\n     {\n       case INTEGER_CST:\n+\tif (TREE_OVERFLOW_P (expr))\n+\t  expr = drop_tree_overflow (expr);\n \tr.set (expr, expr);\n \treturn true;\n "}, {"sha": "c2a2848ba13fd232f99f7ab3245d47f5a83f643d", "filename": "gcc/testsuite/gcc.dg/pr97721.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef0f1e90f1795b1f2d5bba05ed299e8c7635fd4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97721.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef0f1e90f1795b1f2d5bba05ed299e8c7635fd4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97721.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97721.c?ref=4ef0f1e90f1795b1f2d5bba05ed299e8c7635fd4", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile }\n+// { dg-options \"-O -fno-tree-dominator-opts\" }\n+\n+int ot;\n+\n+void\n+z6 (char *tw)\n+{ \n+  while (ot >= 0)\n+    --ot;\n+\n+  __builtin_strcpy (&tw[ot], tw);\n+}"}]}