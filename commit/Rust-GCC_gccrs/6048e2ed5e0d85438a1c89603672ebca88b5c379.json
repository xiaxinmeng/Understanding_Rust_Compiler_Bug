{"sha": "6048e2ed5e0d85438a1c89603672ebca88b5c379", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA0OGUyZWQ1ZTBkODU0MzhhMWM4OTYwMzY3MmViY2E4OGI1YzM3OQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2016-04-19T22:39:28Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2016-04-19T22:39:28Z"}, "message": "Remove ssememalign\n\nFrom INSTRUCTION EXCEPTION SPECIFICATION section in Intel software\ndeveloper manual volume 2, only legacy SSE instructions with memory\noperand not 16-byte aligned get General Protection fault.  There is\nno need to check 1, 2, 4, 8 byte alignments.  Since x86 backend has\naccurate constraints and predicates for 16-byte alignment, we can\nremove alignment check in ix86_legitimate_combined_insn.\n\n\t* config/i386/i386.c (ix86_legitimate_combined_insn): Remove\n\talignment check.\n\t* config/i386/i386.md (ssememalign): Removed.\n\t* config/i386/sse.md: Remove ssememalign attribute from patterns.\n\nFrom-SVN: r235224", "tree": {"sha": "2d5901a57a8225a7e52500f43903fd1e0856b79d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d5901a57a8225a7e52500f43903fd1e0856b79d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6048e2ed5e0d85438a1c89603672ebca88b5c379", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6048e2ed5e0d85438a1c89603672ebca88b5c379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6048e2ed5e0d85438a1c89603672ebca88b5c379", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6048e2ed5e0d85438a1c89603672ebca88b5c379/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "14f0f2fc44e8a3facd3398428fd60da6a50e7da4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f0f2fc44e8a3facd3398428fd60da6a50e7da4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14f0f2fc44e8a3facd3398428fd60da6a50e7da4"}], "stats": {"total": 56, "additions": 7, "deletions": 49}, "files": [{"sha": "306de523baae341da5937c57385d2d5d87113f78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6048e2ed5e0d85438a1c89603672ebca88b5c379/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6048e2ed5e0d85438a1c89603672ebca88b5c379/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6048e2ed5e0d85438a1c89603672ebca88b5c379", "patch": "@@ -1,3 +1,10 @@\n+2016-04-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.c (ix86_legitimate_combined_insn): Remove\n+\talignment check.\n+\t* config/i386/i386.md (ssememalign): Removed.\n+\t* config/i386/sse.md: Remove ssememalign attribute from patterns.\n+\n 2016-04-19  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/69201"}, {"sha": "0687701bde07bccbdcb73ac8ae3b00c583178a86", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6048e2ed5e0d85438a1c89603672ebca88b5c379/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6048e2ed5e0d85438a1c89603672ebca88b5c379/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6048e2ed5e0d85438a1c89603672ebca88b5c379", "patch": "@@ -7317,18 +7317,6 @@ ix86_legitimate_combined_insn (rtx_insn *insn)\n \t  bool win;\n \t  int j;\n \n-\t  /* For pre-AVX disallow unaligned loads/stores where the\n-\t     instructions don't support it.  */\n-\t  if (!TARGET_AVX\n-\t      && VECTOR_MODE_P (mode)\n-\t      && misaligned_operand (op, mode))\n-\t    {\n-\t      unsigned int min_align = get_attr_ssememalign (insn);\n-\t      if (min_align == 0\n-\t\t  || MEM_ALIGN (op) < min_align)\n-\t\treturn false;\n-\t    }\n-\n \t  /* A unary operator may be accepted by the predicate, but it\n \t     is irrelevant for matching constraints.  */\n \t  if (UNARY_P (op))"}, {"sha": "38eb98c6bc1a325cfa3d796c5e7c7d215a0364fe", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6048e2ed5e0d85438a1c89603672ebca88b5c379/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6048e2ed5e0d85438a1c89603672ebca88b5c379/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=6048e2ed5e0d85438a1c89603672ebca88b5c379", "patch": "@@ -460,13 +460,6 @@\n \t   (const_string \"unknown\")]\n \t (const_string \"integer\")))\n \n-;; The minimum required alignment of vector mode memory operands of the SSE\n-;; (non-VEX/EVEX) instruction in bits, if it is different from\n-;; GET_MODE_ALIGNMENT of the operand, otherwise 0.  If an instruction has\n-;; multiple alternatives, this should be conservative maximum of those minimum\n-;; required alignments.\n-(define_attr \"ssememalign\" \"\" (const_int 0))\n-\n ;; The (bounding maximum) length of an instruction immediate.\n (define_attr \"length_immediate\" \"\"\n   (cond [(eq_attr \"type\" \"incdec,setcc,icmov,str,lea,other,multi,idiv,leave,"}, {"sha": "78c28c57db25a2bb6265f39373d769d6051323cc", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6048e2ed5e0d85438a1c89603672ebca88b5c379/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6048e2ed5e0d85438a1c89603672ebca88b5c379/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=6048e2ed5e0d85438a1c89603672ebca88b5c379", "patch": "@@ -1181,7 +1181,6 @@\n   \"%vlddqu\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"movu\" \"1\")\n-   (set_attr \"ssememalign\" \"8\")\n    (set (attr \"prefix_data16\")\n      (if_then_else\n        (match_test \"TARGET_AVX\")\n@@ -1446,7 +1445,6 @@\n    vrcpss\\t{%1, %2, %0|%0, %2, %k1}\"\n   [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"sse\")\n-   (set_attr \"ssememalign\" \"32\")\n    (set_attr \"atom_sse_attr\" \"rcp\")\n    (set_attr \"btver2_sse_attr\" \"rcp\")\n    (set_attr \"prefix\" \"orig,vex\")\n@@ -1588,7 +1586,6 @@\n    vrsqrtss\\t{%1, %2, %0|%0, %2, %k1}\"\n   [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"sse\")\n-   (set_attr \"ssememalign\" \"32\")\n    (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"SF\")])\n \n@@ -4690,7 +4687,6 @@\n   \"%vcvtdq2pd\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %q1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"ssememalign\" \"64\")\n    (set_attr \"mode\" \"V2DF\")])\n \n (define_insn \"<mask_codefor>avx512f_cvtpd2dq512<mask_name><round_name>\"\n@@ -5751,7 +5747,6 @@\n    %vmovhps\\t{%2, %0|%q0, %2}\"\n   [(set_attr \"isa\" \"noavx,avx,noavx,avx,*\")\n    (set_attr \"type\" \"ssemov\")\n-   (set_attr \"ssememalign\" \"64\")\n    (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex\")\n    (set_attr \"mode\" \"V4SF,V4SF,V2SF,V2SF,V2SF\")])\n \n@@ -5797,7 +5792,6 @@\n    %vmovlps\\t{%2, %H0|%H0, %2}\"\n   [(set_attr \"isa\" \"noavx,avx,noavx,avx,*\")\n    (set_attr \"type\" \"ssemov\")\n-   (set_attr \"ssememalign\" \"64\")\n    (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex\")\n    (set_attr \"mode\" \"V4SF,V4SF,V2SF,V2SF,V2SF\")])\n \n@@ -6255,7 +6249,6 @@\n    %vmovhlps\\t{%1, %d0|%d0, %1}\n    %vmovlps\\t{%H1, %d0|%d0, %H1}\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"ssememalign\" \"64\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])\n \n@@ -6295,7 +6288,6 @@\n    %vmovlps\\t{%2, %H0|%H0, %2}\"\n   [(set_attr \"isa\" \"noavx,avx,noavx,avx,*\")\n    (set_attr \"type\" \"ssemov\")\n-   (set_attr \"ssememalign\" \"64\")\n    (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex\")\n    (set_attr \"mode\" \"V2SF,V2SF,V4SF,V4SF,V2SF\")])\n \n@@ -6310,7 +6302,6 @@\n    %vmovaps\\t{%1, %0|%0, %1}\n    %vmovlps\\t{%1, %d0|%d0, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"ssememalign\" \"64\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])\n \n@@ -6350,7 +6341,6 @@\n    %vmovlps\\t{%2, %0|%q0, %2}\"\n   [(set_attr \"isa\" \"noavx,avx,noavx,avx,*\")\n    (set_attr \"type\" \"sseshuf,sseshuf,ssemov,ssemov,ssemov\")\n-   (set_attr \"ssememalign\" \"64\")\n    (set_attr \"length_immediate\" \"1,1,*,*,*\")\n    (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex\")\n    (set_attr \"mode\" \"V4SF,V4SF,V2SF,V2SF,V2SF\")])\n@@ -7492,7 +7482,6 @@\n    %vmovhpd\\t{%1, %0|%q0, %1}\"\n   [(set_attr \"isa\" \"noavx,avx,sse3,noavx,avx,*\")\n    (set_attr \"type\" \"sselog,sselog,sselog,ssemov,ssemov,ssemov\")\n-   (set_attr \"ssememalign\" \"64\")\n    (set_attr \"prefix_data16\" \"*,*,*,1,*,1\")\n    (set_attr \"prefix\" \"orig,vex,maybe_vex,orig,vex,maybe_vex\")\n    (set_attr \"mode\" \"V2DF,V2DF,DF,V1DF,V1DF,V1DF\")])\n@@ -7652,7 +7641,6 @@\n    %vmovlpd\\t{%2, %H0|%H0, %2}\"\n   [(set_attr \"isa\" \"noavx,avx,sse3,noavx,avx,*\")\n    (set_attr \"type\" \"sselog,sselog,sselog,ssemov,ssemov,ssemov\")\n-   (set_attr \"ssememalign\" \"64\")\n    (set_attr \"prefix_data16\" \"*,*,*,1,*,1\")\n    (set_attr \"prefix\" \"orig,vex,maybe_vex,orig,vex,maybe_vex\")\n    (set_attr \"mode\" \"V2DF,V2DF,DF,V1DF,V1DF,V1DF\")])\n@@ -8322,7 +8310,6 @@\n    movhlps\\t{%1, %0|%0, %1}\n    movlps\\t{%H1, %0|%0, %H1}\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"ssememalign\" \"64\")\n    (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])\n \n ;; Avoid combining registers from different units in a single alternative,\n@@ -8410,7 +8397,6 @@\n    #\"\n   [(set_attr \"isa\" \"noavx,avx,noavx,avx,*,*,*\")\n    (set_attr \"type\" \"ssemov,ssemov,sselog,sselog,ssemov,fmov,imov\")\n-   (set_attr \"ssememalign\" \"64\")\n    (set_attr \"prefix_data16\" \"1,*,*,*,*,*,*\")\n    (set_attr \"prefix\" \"orig,vex,orig,vex,*,*,*\")\n    (set_attr \"mode\" \"V1DF,V1DF,V2DF,V2DF,DF,DF,DF\")])\n@@ -8479,7 +8465,6 @@\n \t      (const_string \"imov\")\n \t   ]\n \t   (const_string \"ssemov\")))\n-   (set_attr \"ssememalign\" \"64\")\n    (set_attr \"prefix_data16\" \"*,1,*,*,*,*,1,*,*,*,*\")\n    (set_attr \"length_immediate\" \"*,*,*,*,*,1,*,*,*,*,*\")\n    (set_attr \"prefix\" \"maybe_vex,orig,vex,orig,vex,orig,orig,vex,*,*,*\")\n@@ -8524,7 +8509,6 @@\n        (const_string \"1\")\n        (const_string \"*\")))\n    (set_attr \"length_immediate\" \"*,*,*,*,*,1,*,*,*\")\n-   (set_attr \"ssememalign\" \"64\")\n    (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex,orig,orig,vex,maybe_vex\")\n    (set_attr \"mode\" \"DF,DF,V1DF,V1DF,V1DF,V2DF,V1DF,V1DF,V1DF\")])\n \n@@ -14567,7 +14551,6 @@\n   \"TARGET_SSE4_1 && <mask_avx512bw_condition> && <mask_avx512vl_condition>\"\n   \"%vpmov<extsuffix>bw\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"ssememalign\" \"64\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"TI\")])\n@@ -14608,7 +14591,6 @@\n   \"TARGET_SSE4_1 && <mask_avx512vl_condition>\"\n   \"%vpmov<extsuffix>bd\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %k1}\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"ssememalign\" \"32\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"TI\")])\n@@ -14644,7 +14626,6 @@\n   \"TARGET_SSE4_1 && <mask_avx512vl_condition>\"\n   \"%vpmov<extsuffix>wd\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"ssememalign\" \"64\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"TI\")])\n@@ -14687,7 +14668,6 @@\n   \"TARGET_SSE4_1 && <mask_avx512vl_condition>\"\n   \"%vpmov<extsuffix>bq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %w1}\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"ssememalign\" \"16\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"TI\")])\n@@ -14725,7 +14705,6 @@\n   \"TARGET_SSE4_1 && <mask_avx512vl_condition>\"\n   \"%vpmov<extsuffix>wq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %k1}\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"ssememalign\" \"32\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"TI\")])\n@@ -14760,7 +14739,6 @@\n   \"TARGET_SSE4_1 && <mask_avx512vl_condition>\"\n   \"%vpmov<extsuffix>dq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"ssememalign\" \"64\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"TI\")])\n@@ -15048,7 +15026,6 @@\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"ssememalign\" \"8\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"memory\" \"none,load\")\n    (set_attr \"mode\" \"TI\")])\n@@ -15076,7 +15053,6 @@\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"ssememalign\" \"8\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"btver2_decode\" \"vector\")\n    (set_attr \"memory\" \"none,load\")\n@@ -15104,7 +15080,6 @@\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"ssememalign\" \"8\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"btver2_decode\" \"vector\")\n@@ -15131,7 +15106,6 @@\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"ssememalign\" \"8\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"memory\" \"none,load,none,load\")\n    (set_attr \"btver2_decode\" \"vector,vector,vector,vector\") \n@@ -15185,7 +15159,6 @@\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"ssememalign\" \"8\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"memory\" \"none,load\")\n    (set_attr \"mode\" \"TI\")])\n@@ -15208,7 +15181,6 @@\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"ssememalign\" \"8\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"memory\" \"none,load\")\n@@ -15233,7 +15205,6 @@\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"ssememalign\" \"8\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"memory\" \"none,load\")\n@@ -15258,7 +15229,6 @@\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"ssememalign\" \"8\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"memory\" \"none,load,none,load\")\n    (set_attr \"prefix\" \"maybe_vex\")"}]}