{"sha": "6e138b89b75b19230ee6a0e38c502c87d956c320", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUxMzhiODliNzViMTkyMzBlZTZhMGUzOGM1MDJjODdkOTU2YzMyMA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2000-12-18T18:03:08Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-12-18T18:03:08Z"}, "message": "[multiple changes]\n\n\n2000-12-18  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* configure.in: Set os_include_dir for cross_compiles.\n\t* configure: Regenerate.\n\t* configure.target (l_glibcpp_cxxflags): Don't try to be clever\n\twhen assigning ATOMICITYH. Only special case the special cases...\n\n2000-12-15  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* configure.in (gxx_target_include_dir): Install target-dependent\n\tinclude files in a target-dependent place.\n\t* configure: Regenerate.\n\t* src/Makefile.am: Add in support here.\n\t* src/Makefile.in: Regenerate.\n\nFrom-SVN: r38354", "tree": {"sha": "836c0fcb573f83255df1c5a899bd1a4bdb1cd4b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/836c0fcb573f83255df1c5a899bd1a4bdb1cd4b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e138b89b75b19230ee6a0e38c502c87d956c320", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e138b89b75b19230ee6a0e38c502c87d956c320", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e138b89b75b19230ee6a0e38c502c87d956c320", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e138b89b75b19230ee6a0e38c502c87d956c320/comments", "author": null, "committer": null, "parents": [{"sha": "4c6b28359192f483c5cc84ef868cfdbbcd0bd222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c6b28359192f483c5cc84ef868cfdbbcd0bd222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c6b28359192f483c5cc84ef868cfdbbcd0bd222"}], "stats": {"total": 1906, "additions": 965, "deletions": 941}, "files": [{"sha": "b0d45684a0c0cea0b1d6ec4bf7d33bfcfce4b193", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6e138b89b75b19230ee6a0e38c502c87d956c320", "patch": "@@ -1,9 +1,24 @@\n+2000-12-18  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* configure.in: Set os_include_dir for cross_compiles.\n+\t* configure: Regenerate.\n+\t* configure.target (l_glibcpp_cxxflags): Don't try to be clever\n+\twhen assigning ATOMICITYH. Only special case the special cases...\n+\n 2000-12-18  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* docs/html/17_intro/COPYING: Update to current\n \tftp://ftp.gnu.org/pub/gnu/Licenses/COPYING-2.0 (fixes references\n \tto 19yy as example year in copyright notice).\n \n+2000-12-15  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* configure.in (gxx_target_include_dir): Install target-dependent\n+\tinclude files in a target-dependent place.\n+\t* configure: Regenerate.\n+\t* src/Makefile.am: Add in support here.\n+\t* src/Makefile.in: Regenerate.\n+\n 2000-12-14  Benjamin Kosnik  <bkoz@fillmore.redhat.com>\n \n \t* src/Makefile.am (myinstallheaders): Install backwards headers in"}, {"sha": "5828c9a7ae47fe4214871be2a75920227864a6a8", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=6e138b89b75b19230ee6a0e38c502c87d956c320", "patch": "@@ -111,6 +111,7 @@ enable_static = @enable_static@\n gcc_version = @gcc_version@\n glibcpp_basedir = @glibcpp_basedir@\n gxx_include_dir = @gxx_include_dir@\n+gxx_target_include_dir = @gxx_target_include_dir@\n ifGNUmake = @ifGNUmake@\n libinst_wstring_la = @libinst_wstring_la@\n libio_la = @libio_la@"}, {"sha": "9139051bc0fb7ce3950ec6fc35fd185773571667", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 925, "deletions": 917, "changes": 1842, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=6e138b89b75b19230ee6a0e38c502c87d956c320"}, {"sha": "2e8ee1d60909176794e517ede6919e5cffcf00eb", "filename": "libstdc++-v3/configure.in", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.in?ref=6e138b89b75b19230ee6a0e38c502c87d956c320", "patch": "@@ -162,6 +162,7 @@ if test -n \"$with_cross_host\"; then\n \tAC_DEFINE(HAVE_ISINFF)\n \n \tctype_include_dir=\"config/os/newlib\"\n+\tos_include_dir=\"config/os/newlib\"\n \n \tAC_DEFINE(_GLIBCPP_BUGGY_FLOAT_COMPLEX)\n \tAC_DEFINE(_GLIBCPP_BUGGY_COMPLEX)\n@@ -203,10 +204,10 @@ include/bits/ctype_inline.h)\n AC_LINK_FILES($ctype_include_dir/bits/ctype_noninline.h, \\\n include/bits/ctype_noninline.h)\n \n-AM_CONDITIONAL(CANADIAN, test \"$CANADIAN\" = yes)\n AM_CONDITIONAL(NULL_TARGET, test \"$NULL_TARGET\" = yes)\n AM_CONDITIONAL(NATIVE, test \"$NATIVE\" = yes || test \"$NULL_TARGET\" = yes)\n AM_CONDITIONAL(USE_LIBDIR, test -z \"$with_cross_host\")\n+AM_CONDITIONAL(CANADIAN, test \"$CANADIAN\" = yes)\n  \n AC_CACHE_SAVE\n AC_LC_MESSAGES\n@@ -274,6 +275,12 @@ if test x${version_specific_libs} = xyes; then\n   AC_MSG_WARN(version specific directory is: $gcc_version)\n fi\n \n+# We have to install all the generated or linked includes files\n+# specified as build_headers in src/Makefile.am in a target-dependent\n+# place, or else multiple installs for different compilers will\n+# overwrite these files.\n+gxx_target_include_dir='$(exec_prefix)/$(target_alias)/include/g++-$(libstdcxx_interface)'\n+AC_SUBST(gxx_target_include_dir)\n \n \n # Export all the include and flag information to makefiles."}, {"sha": "accedf853c16169c5aa2f3c2fb2179305a31cc8d", "filename": "libstdc++-v3/configure.target", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2Fconfigure.target", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2Fconfigure.target", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.target?ref=6e138b89b75b19230ee6a0e38c502c87d956c320", "patch": "@@ -118,31 +118,14 @@ esac\n # THIS TABLE IS SORTED.  KEEP IT THAT WAY.\n \n case \"${target}\" in\n-   arm*-*-aout | arm*-*-elf)\n-     # Assume newlib\n-     os_include_dir=config/os/newlib\n-     ATOMICITYH=$cpu_include_dir\n-     ;;\n    *-*-aix*)\n      ATOMICITYH=$os_include_dir\n      ;;\n-   *-*-freebsd*)\n-     ATOMICITYH=$cpu_include_dir\n-     ;;\n    *-*-irix*)\n      ATOMICITYH=$os_include_dir\n      ;;\n-   *-*-linux*)\n-     ATOMICITYH=$cpu_include_dir\n-     ;;\n-   *-*-netbsd*)\n-     ATOMICITYH=$cpu_include_dir\n-     ;;\n-   sparc*-*-*)\n-     ATOMICITYH=$cpu_include_dir\n-     ;;\n    *)\n-     ATOMICITYH=\"config/cpu/generic\"\n+     ATOMICITYH=$cpu_include_dir\n      ;;\n esac\n "}, {"sha": "a80ad10e4c78fecee35fe94219bc17926a972822", "filename": "libstdc++-v3/libio/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.in?ref=6e138b89b75b19230ee6a0e38c502c87d956c320", "patch": "@@ -104,6 +104,7 @@ enable_static = @enable_static@\n gcc_version = @gcc_version@\n glibcpp_basedir = @glibcpp_basedir@\n gxx_include_dir = @gxx_include_dir@\n+gxx_target_include_dir = @gxx_target_include_dir@\n ifGNUmake = @ifGNUmake@\n libinst_wstring_la = @libinst_wstring_la@\n libio_la = @libio_la@"}, {"sha": "6e91e83deb6f6fab169b2039fe97ddcc128ed142", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=6e138b89b75b19230ee6a0e38c502c87d956c320", "patch": "@@ -104,6 +104,7 @@ enable_static = @enable_static@\n gcc_version = @gcc_version@\n glibcpp_basedir = @glibcpp_basedir@\n gxx_include_dir = @gxx_include_dir@\n+gxx_target_include_dir = @gxx_target_include_dir@\n ifGNUmake = @ifGNUmake@\n libinst_wstring_la = @libinst_wstring_la@\n libio_la = @libio_la@"}, {"sha": "0c1bb57b9e49fe1ec684206fd8a69e5c9e62f4b8", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=6e138b89b75b19230ee6a0e38c502c87d956c320", "patch": "@@ -101,6 +101,7 @@ enable_shared = @enable_shared@\n enable_static = @enable_static@\n glibcpp_basedir = @glibcpp_basedir@\n gxx_include_dir = @gxx_include_dir@\n+gxx_target_include_dir = @gxx_target_include_dir@\n ifGNUmake = @ifGNUmake@\n libinst_wstring_la = @libinst_wstring_la@\n libio_la = @libio_la@"}, {"sha": "0e4a02711775f64facc59eb29d7d58a9b6ef53d4", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=6e138b89b75b19230ee6a0e38c502c87d956c320", "patch": "@@ -21,7 +21,7 @@\n ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n ## USA.\n \n-## $Id: Makefile.am,v 1.57 2000/12/10 20:51:22 apbianco Exp $\n+## $Id: Makefile.am,v 1.58 2000/12/15 00:55:02 bkoz Exp $\n \n AUTOMAKE_OPTIONS = 1.3 gnits\n MAINT_CHARSET = latin1\n@@ -233,6 +233,8 @@ myincludep = $(prefix)/include/g++-@libstdcxx_interface@\n endif\n endif\n \n+targetincludep = @gxx_target_include_dir@\n+\n # We have our own special, ridiculously complicated installation routine\n # here, as automake/autoconf is currently brain-damaged when it comes\n # to installing sub-directories of headers. In particular, we want to\n@@ -253,6 +255,7 @@ myinstalldirs:\n \tif test -z \"$(MULTISUBDIR)\"; then \\\n \t$(mkinstalldirs) $(DESTDIR)$(myincludep)/bits; \\\n \t$(mkinstalldirs) $(DESTDIR)$(myincludep)/ext; \\\n+\t$(mkinstalldirs) $(DESTDIR)$(targetincludep)/bits; \\\n \tfi\n \n # NB: As libio_headers may be empty, need this to make sure bash doesn't\n@@ -284,8 +287,8 @@ myinstallheaders:\n \t  $(INSTALL_DATA) $(src_incdir)/std/$$i $(myincludep); \\\n \tdone; \\\n \tfor i in $(build_headers); do \\\n-        echo \"$(INSTALL_DATA) $(bld_incdir)/$$i $(myincludep)/bits/\"; \\\n-\t  $(INSTALL_DATA) $(bld_incdir)/$$i $(myincludep)/bits/; \\\n+        echo \"$(INSTALL_DATA) $(bld_incdir)/$$i $(targetincludep)/bits/\"; \\\n+\t  $(INSTALL_DATA) $(bld_incdir)/$$i $(targetincludep)/bits/; \\\n \tdone; \\\n \tlibio_headers_install='$(libio_headers)'; \\\n \tfor i in $$libio_headers_install; do \\"}, {"sha": "bd8bf837acff6520ab48a555ab043f47e6d0955f", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e138b89b75b19230ee6a0e38c502c87d956c320/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=6e138b89b75b19230ee6a0e38c502c87d956c320", "patch": "@@ -101,6 +101,7 @@ enable_shared = @enable_shared@\n enable_static = @enable_static@\n glibcpp_basedir = @glibcpp_basedir@\n gxx_include_dir = @gxx_include_dir@\n+gxx_target_include_dir = @gxx_target_include_dir@\n ifGNUmake = @ifGNUmake@\n libinst_wstring_la = @libinst_wstring_la@\n libio_la = @libio_la@\n@@ -195,6 +196,8 @@ libstdc___la_DEPENDENCIES = $(libstdc___la_LIBADD)\n @GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_TRUE@myincludep = $(libdir)/gcc-lib/$(target_alias)/@gcc_version@/include/g++\n @GXX_INCLUDE_DIR_FALSE@@VERSION_SPECIFIC_LIBS_FALSE@myincludep = $(prefix)/include/g++-@libstdcxx_interface@\n \n+targetincludep = @gxx_target_include_dir@\n+\n # NB: As libio_headers may be empty, need this to make sure bash doesn't\n # choke on an empty for... loop by using libio_headers_install\n # NB: installation of shadow headers is not attempted.\n@@ -526,6 +529,7 @@ myinstalldirs:\n \tif test -z \"$(MULTISUBDIR)\"; then \\\n \t$(mkinstalldirs) $(DESTDIR)$(myincludep)/bits; \\\n \t$(mkinstalldirs) $(DESTDIR)$(myincludep)/ext; \\\n+\t$(mkinstalldirs) $(DESTDIR)$(targetincludep)/bits; \\\n \tfi\n myinstallheaders: \n \tif test -z \"$(MULTISUBDIR)\"; then \\\n@@ -550,8 +554,8 @@ myinstallheaders:\n \t  $(INSTALL_DATA) $(src_incdir)/std/$$i $(myincludep); \\\n \tdone; \\\n \tfor i in $(build_headers); do \\\n-        echo \"$(INSTALL_DATA) $(bld_incdir)/$$i $(myincludep)/bits/\"; \\\n-\t  $(INSTALL_DATA) $(bld_incdir)/$$i $(myincludep)/bits/; \\\n+        echo \"$(INSTALL_DATA) $(bld_incdir)/$$i $(targetincludep)/bits/\"; \\\n+\t  $(INSTALL_DATA) $(bld_incdir)/$$i $(targetincludep)/bits/; \\\n \tdone; \\\n \tlibio_headers_install='$(libio_headers)'; \\\n \tfor i in $$libio_headers_install; do \\"}]}