{"sha": "48fb6d4090508e8dde8aaa95b366c2489f62950b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhmYjZkNDA5MDUwOGU4ZGRlOGFhYTk1YjM2NmMyNDg5ZjYyOTUwYg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2014-10-15T17:01:08Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-10-15T17:01:08Z"}, "message": "re PR lto/62026 (Crash in lto_get_decl_name_mapping)\n\n\n\tPR lto/62026\n\t* lto/pr62026.C: New testcase.\n\n\t* cgraphclones.c (duplicate_thunk_for_node): Get body to have args\n\tto duplicate.\n\t* lto-streamer-out.c (lto_output): Handle correctly thunks that was born\n\tat WPA time.\n\nFrom-SVN: r216278", "tree": {"sha": "1f015af4afa8c3718025ac862a9f9c29c76b5e0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f015af4afa8c3718025ac862a9f9c29c76b5e0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48fb6d4090508e8dde8aaa95b366c2489f62950b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48fb6d4090508e8dde8aaa95b366c2489f62950b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48fb6d4090508e8dde8aaa95b366c2489f62950b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48fb6d4090508e8dde8aaa95b366c2489f62950b/comments", "author": null, "committer": null, "parents": [{"sha": "d5ffd10bc2afc1da7e18e63721a5056fcc420633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ffd10bc2afc1da7e18e63721a5056fcc420633", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5ffd10bc2afc1da7e18e63721a5056fcc420633"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "5ba303dc5603b4822e77a725157b1e26af27600a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48fb6d4090508e8dde8aaa95b366c2489f62950b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48fb6d4090508e8dde8aaa95b366c2489f62950b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48fb6d4090508e8dde8aaa95b366c2489f62950b", "patch": "@@ -1,3 +1,11 @@\n+2014-10-15  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR lto/62026\n+\t* cgraphclones.c (duplicate_thunk_for_node): Get body to have args\n+\tto duplicate.\n+\t* lto-streamer-out.c (lto_output): Handle correctly thunks that was born\n+\tat WPA time.\n+\n 2014-10-15  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/63448"}, {"sha": "71b9269f984ffd194184e11de163292d88a8d7e1", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48fb6d4090508e8dde8aaa95b366c2489f62950b/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48fb6d4090508e8dde8aaa95b366c2489f62950b/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=48fb6d4090508e8dde8aaa95b366c2489f62950b", "patch": "@@ -295,6 +295,9 @@ duplicate_thunk_for_node (cgraph_node *thunk, cgraph_node *node)\n   if (thunk_of->thunk.thunk_p)\n     node = duplicate_thunk_for_node (thunk_of, node);\n \n+  if (!DECL_ARGUMENTS (thunk->decl))\n+    thunk->get_body ();\n+\n   cgraph_edge *cs;\n   for (cs = node->callers; cs; cs = cs->next_caller)\n     if (cs->caller->thunk.thunk_p"}, {"sha": "6d1384f21430845a4f36bb77f5f53e9099777818", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48fb6d4090508e8dde8aaa95b366c2489f62950b/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48fb6d4090508e8dde8aaa95b366c2489f62950b/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=48fb6d4090508e8dde8aaa95b366c2489f62950b", "patch": "@@ -2249,7 +2249,10 @@ lto_output (void)\n #endif\n \t      decl_state = lto_new_out_decl_state ();\n \t      lto_push_out_decl_state (decl_state);\n-\t      if (gimple_has_body_p (node->decl) || !flag_wpa)\n+\t      if (gimple_has_body_p (node->decl) || !flag_wpa\n+\t\t  /* Thunks have no body but they may be synthetized\n+\t\t     at WPA time.  */\n+\t\t  || DECL_ARGUMENTS (node->decl))\n \t\toutput_function (node);\n \t      else\n \t\tcopy_function_or_variable (node);"}, {"sha": "471cd7712beece8a04953bedf0ab79073bcf23f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48fb6d4090508e8dde8aaa95b366c2489f62950b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48fb6d4090508e8dde8aaa95b366c2489f62950b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=48fb6d4090508e8dde8aaa95b366c2489f62950b", "patch": "@@ -1,3 +1,8 @@\n+2014-10-15  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR lto/62026\n+\t* lto/pr62026.C: New testcase.\n+\n 2014-10-15  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/63448"}, {"sha": "63766a85b986e4a72c73bb22ca7b23cae0c74a38", "filename": "gcc/testsuite/g++.dg/lto/pr62026.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48fb6d4090508e8dde8aaa95b366c2489f62950b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr62026.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48fb6d4090508e8dde8aaa95b366c2489f62950b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr62026.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr62026.C?ref=48fb6d4090508e8dde8aaa95b366c2489f62950b", "patch": "@@ -0,0 +1,22 @@\n+// { dg-lto-do link }\n+// { dg-lto-options {{-flto -O3 -r -nostdlib}} }\n+class C;\n+class F {\n+  virtual C m_fn1();\n+};\n+class C {\n+ public:\n+  virtual int *m_fn3(int);\n+};\n+class G : F, C {\n+  int offsets;\n+  int *m_fn3(int);\n+};\n+C *a;\n+int *G::m_fn3(int) {\n+  if (offsets) return 0;\n+}\n+\n+void fn1() {\n+  for (;;) a->m_fn3(0);\n+}"}]}