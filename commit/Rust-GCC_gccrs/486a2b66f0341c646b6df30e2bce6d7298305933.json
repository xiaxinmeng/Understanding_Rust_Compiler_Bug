{"sha": "486a2b66f0341c646b6df30e2bce6d7298305933", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg2YTJiNjZmMDM0MWM2NDZiNmRmMzBlMmJjZTZkNzI5ODMwNTkzMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-02-06T20:32:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-02-06T20:32:45Z"}, "message": "re PR target/84146 (ICE with -mcet in dwarf2out_var_location, involving sigsetjmp)\n\n\tPR target/84146\n\t* config/i386/i386.c (rest_of_insert_endbranch): Only skip\n\tNOTE_INSN_CALL_ARG_LOCATION after a call, not anything else,\n\tand skip it regardless of bb boundaries.  Use CALL_P macro,\n\tdon't test INSN_P (insn) together with CALL_P or JUMP_P check\n\tunnecessarily, formatting fix.\n\n\t* gcc.target/i386/pr84146.c: New test.\n\nFrom-SVN: r257431", "tree": {"sha": "7c46a2da971cf452cbf57be6d41d898d1bc21f57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c46a2da971cf452cbf57be6d41d898d1bc21f57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/486a2b66f0341c646b6df30e2bce6d7298305933", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/486a2b66f0341c646b6df30e2bce6d7298305933", "html_url": "https://github.com/Rust-GCC/gccrs/commit/486a2b66f0341c646b6df30e2bce6d7298305933", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/486a2b66f0341c646b6df30e2bce6d7298305933/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "86f697aaa6ac674da3d402c57a58bd2e99fb8cb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86f697aaa6ac674da3d402c57a58bd2e99fb8cb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86f697aaa6ac674da3d402c57a58bd2e99fb8cb1"}], "stats": {"total": 50, "additions": 37, "deletions": 13}, "files": [{"sha": "8edc8cc84a1bd5ea90853e30d487d39b90caa441", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486a2b66f0341c646b6df30e2bce6d7298305933/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486a2b66f0341c646b6df30e2bce6d7298305933/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=486a2b66f0341c646b6df30e2bce6d7298305933", "patch": "@@ -1,3 +1,12 @@\n+2018-02-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/84146\n+\t* config/i386/i386.c (rest_of_insert_endbranch): Only skip\n+\tNOTE_INSN_CALL_ARG_LOCATION after a call, not anything else,\n+\tand skip it regardless of bb boundaries.  Use CALL_P macro,\n+\tdon't test INSN_P (insn) together with CALL_P or JUMP_P check\n+\tunnecessarily, formatting fix.\n+\n 2018-02-06  Michael Collison  <michael.collison@arm.com>\n \n \t* config/arm/thumb2.md:"}, {"sha": "faa9d9415f69387a565321cd551b60b91eab3448", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486a2b66f0341c646b6df30e2bce6d7298305933/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486a2b66f0341c646b6df30e2bce6d7298305933/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=486a2b66f0341c646b6df30e2bce6d7298305933", "patch": "@@ -2612,31 +2612,27 @@ rest_of_insert_endbranch (void)\n       for (insn = BB_HEAD (bb); insn != NEXT_INSN (BB_END (bb));\n \t   insn = NEXT_INSN (insn))\n \t{\n-\t  if (INSN_P (insn) && GET_CODE (insn) == CALL_INSN)\n+\t  if (CALL_P (insn))\n \t    {\n \t      if (find_reg_note (insn, REG_SETJMP, NULL) == NULL)\n \t\tcontinue;\n \t      /* Generate ENDBRANCH after CALL, which can return more than\n \t\t twice, setjmp-like functions.  */\n \n-\t      /* Skip notes and debug insns that must be next to the\n-\t\t call insn.  ??? This might skip a lot more than\n-\t\t that...  ??? Skipping barriers and emitting code\n-\t\t after them surely looks like a mistake; we probably\n-\t\t won't ever hit it, for we'll hit BB_END first.  */\n+\t      /* Skip notes that must immediately follow the call insn.  */\n \t      rtx_insn *next_insn = insn;\n-\t      while ((next_insn != BB_END (bb))\n-\t\t      && (DEBUG_INSN_P (NEXT_INSN (next_insn))\n-\t\t\t  || NOTE_P (NEXT_INSN (next_insn))\n-\t\t\t  || BARRIER_P (NEXT_INSN (next_insn))))\n-\t\tnext_insn = NEXT_INSN (next_insn);\n+\t      if (NEXT_INSN (insn)\n+\t\t  && NOTE_P (NEXT_INSN (insn))\n+\t\t  && (NOTE_KIND (NEXT_INSN (insn))\n+\t\t      == NOTE_INSN_CALL_ARG_LOCATION))\n+\t\tnext_insn = NEXT_INSN (insn);\n \n \t      cet_eb = gen_nop_endbr ();\n \t      emit_insn_after_setloc (cet_eb, next_insn, INSN_LOCATION (insn));\n \t      continue;\n \t    }\n \n-\t  if (INSN_P (insn) && JUMP_P (insn) && flag_cet_switch)\n+\t  if (JUMP_P (insn) && flag_cet_switch)\n \t    {\n \t      rtx target = JUMP_LABEL (insn);\n \t      if (target == NULL_RTX || ANY_RETURN_P (target))\n@@ -2671,7 +2667,7 @@ rest_of_insert_endbranch (void)\n \t  if ((LABEL_P (insn) && LABEL_PRESERVE_P (insn))\n \t      || (NOTE_P (insn)\n \t\t  && NOTE_KIND (insn) == NOTE_INSN_DELETED_LABEL))\n-/* TODO.  Check /s bit also.  */\n+\t    /* TODO.  Check /s bit also.  */\n \t    {\n \t      cet_eb = gen_nop_endbr ();\n \t      emit_insn_after (cet_eb, insn);"}, {"sha": "4134471fad9e5be7ca68b44e48bf928e9a94cd9b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486a2b66f0341c646b6df30e2bce6d7298305933/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486a2b66f0341c646b6df30e2bce6d7298305933/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=486a2b66f0341c646b6df30e2bce6d7298305933", "patch": "@@ -1,3 +1,8 @@\n+2018-02-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/84146\n+\t* gcc.target/i386/pr84146.c: New test.\n+\n 2018-02-06  Michael Collison  <michael.collison@arm.com>\n \n \t* gcc.target/arm/pr7676.c: New testcase for incorrect splitting."}, {"sha": "ba9b6336c0dbb70c5fad3c34d79f097538772751", "filename": "gcc/testsuite/gcc.target/i386/pr84146.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486a2b66f0341c646b6df30e2bce6d7298305933/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84146.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486a2b66f0341c646b6df30e2bce6d7298305933/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84146.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84146.c?ref=486a2b66f0341c646b6df30e2bce6d7298305933", "patch": "@@ -0,0 +1,14 @@\n+/* PR target/84146 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g -mcet -fcf-protection=full\" } */\n+\n+int __setjmp (void **);\n+void *buf[64];\n+\n+void\n+foo (void)\n+{\n+  __setjmp (buf);\n+  for (;;)\n+    ;\n+}"}]}