{"sha": "d730ef29fb00a6e572db89aa4fb0e01045e5a447", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDczMGVmMjlmYjAwYTZlNTcyZGI4OWFhNGZiMGUwMTA0NWU1YTQ0Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-05T11:10:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-05T11:10:06Z"}, "message": "(emdnorm, toe64, etoe64): Significand of Intel long double denormals\nis shifted down one bit.\n\nFrom-SVN: r9578", "tree": {"sha": "515a03b65dede77cb549d813d99f32f274c9db9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/515a03b65dede77cb549d813d99f32f274c9db9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d730ef29fb00a6e572db89aa4fb0e01045e5a447", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d730ef29fb00a6e572db89aa4fb0e01045e5a447", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d730ef29fb00a6e572db89aa4fb0e01045e5a447", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d730ef29fb00a6e572db89aa4fb0e01045e5a447/comments", "author": null, "committer": null, "parents": [{"sha": "0e8c9172226c75708e4e240ad27d11e4b31bbfc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e8c9172226c75708e4e240ad27d11e4b31bbfc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e8c9172226c75708e4e240ad27d11e4b31bbfc5"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "6c21b94b2c3c359208082ce347f4450b5bfc617a", "filename": "gcc/real.c", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d730ef29fb00a6e572db89aa4fb0e01045e5a447/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d730ef29fb00a6e572db89aa4fb0e01045e5a447/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=d730ef29fb00a6e572db89aa4fb0e01045e5a447", "patch": "@@ -2367,8 +2367,10 @@ emdnorm (s, lost, subflg, exp, rcntrl)\n     }\n \n   /* Shift down 1 temporarily if the data structure has an implied\n-     most significant bit and the number is denormal.  */\n-  if ((exp <= 0) && (rndprc != 64) && (rndprc != NBITS))\n+     most significant bit and the number is denormal.\n+     Intel long double denormals also lose one bit of precision.  */\n+  if ((exp <= 0) && (rndprc != NBITS)\n+      && ((rndprc != 64) || ((rndprc == 64) && ! REAL_WORDS_BIG_ENDIAN)))\n     {\n       lost |= s[NI - 1] & 1;\n       eshdn1 (s);\n@@ -2406,7 +2408,9 @@ emdnorm (s, lost, subflg, exp, rcntrl)\n       eaddm (rbit, s);\n     }\n  mddone:\n-  if ((exp <= 0) && (rndprc != 64) && (rndprc != NBITS))\n+/* Undo the temporary shift for denormal values. */\n+  if ((exp <= 0) && (rndprc != NBITS)\n+      && ((rndprc != 64) || ((rndprc == 64) && ! REAL_WORDS_BIG_ENDIAN)))\n     {\n       eshup1 (s);\n     }\n@@ -2948,6 +2952,19 @@ e64toe (pe, y)\n     {\n       for (i = 0; i < 5; i++)\n \t*p++ = *e++;\n+\n+      /* For denormal long double Intel format, shift significand up one\n+\t -- but only if the top significand bit is zero.  A top bit of 1\n+\t is \"pseudodenormal\" when the exponent is zero.  */\n+      if((yy[NE-1] & 0x7fff) == 0 && (yy[NE-2] & 0x8000) == 0)\n+\t{\n+\t  unsigned EMUSHORT temp[NI];\n+\n+\t  emovi(yy, temp);\n+\t  eshup1(temp);\n+\t  emovo(temp,y);\n+\t  return;\n+\t}\n     }\n   else\n     {\n@@ -3323,6 +3340,9 @@ toe64 (a, b)\n       return;\n     }\n #endif\n+  /* Shift denormal long double Intel format significand down one bit.  */\n+  if ((a[E] == 0) && ! REAL_WORDS_BIG_ENDIAN)\n+    eshdn1 (a);\n   p = a;\n #ifdef IBM\n   q = b;"}]}