{"sha": "cb8cc086f9218c5a0586b5b7fa10a7c122748d4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I4Y2MwODZmOTIxOGM1YTA1ODZiNWI3ZmExMGE3YzEyMjc0OGQ0ZQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@cygnus.com", "date": "1999-02-17T11:06:50Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "1999-02-17T11:06:50Z"}, "message": "rs6000.md ({add,sub}si3 `.'): Add alternatives to use CR other than cr0.\n\n\t* rs6000.md ({add,sub}si3 `.'): Add alternatives to use CR other\n\tthan cr0.\n\nFrom-SVN: r25267", "tree": {"sha": "bbfa226c929d8fe02ee2d523ca970fe3e8617393", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbfa226c929d8fe02ee2d523ca970fe3e8617393"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb8cc086f9218c5a0586b5b7fa10a7c122748d4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb8cc086f9218c5a0586b5b7fa10a7c122748d4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb8cc086f9218c5a0586b5b7fa10a7c122748d4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb8cc086f9218c5a0586b5b7fa10a7c122748d4e/comments", "author": null, "committer": null, "parents": [{"sha": "d5355be3c48608f81654b37f38e24de92c6dee2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5355be3c48608f81654b37f38e24de92c6dee2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5355be3c48608f81654b37f38e24de92c6dee2f"}], "stats": {"total": 160, "additions": 123, "deletions": 37}, "files": [{"sha": "7f3e1981a2975a26ca42764a6849f4c557f3e638", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb8cc086f9218c5a0586b5b7fa10a7c122748d4e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb8cc086f9218c5a0586b5b7fa10a7c122748d4e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb8cc086f9218c5a0586b5b7fa10a7c122748d4e", "patch": "@@ -1,3 +1,8 @@\n+Wed Feb 17 14:04:18 1999  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* rs6000.md ({add,sub}si3 `.'): Add alternatives to use CR other\n+\tthan cr0.\n+\n Wed Feb 17 16:59:28 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* loop.c (strength_reduce): Don't move giv insn for biv turned giv"}, {"sha": "6b94e12f0eb8c8a2a386157145d3b69720897634", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 118, "deletions": 37, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb8cc086f9218c5a0586b5b7fa10a7c122748d4e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb8cc086f9218c5a0586b5b7fa10a7c122748d4e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=cb8cc086f9218c5a0586b5b7fa10a7c122748d4e", "patch": "@@ -926,29 +926,67 @@\n   [(set_attr \"length\" \"4,4,4,4\")])\n \n (define_insn \"*addsi3_internal2\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x\")\n-\t(compare:CC (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\")\n-\t\t\t     (match_operand:SI 2 \"reg_or_short_operand\" \"r,I\"))\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+\t(compare:CC (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r\")\n+\t\t\t     (match_operand:SI 2 \"reg_or_short_operand\" \"r,I,r,I\"))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"=r,r\"))]\n+   (clobber (match_scratch:SI 3 \"=r,r,r,r\"))]\n   \"\"\n   \"@\n    {cax.|add.} %3,%1,%2\n-   {ai.|addic.} %3,%1,%2\"\n-  [(set_attr \"type\" \"compare\")])\n+   {ai.|addic.} %3,%1,%2\n+   #\n+   #\"\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"4,4,8,8\")])\n+\n+(define_split\n+  [(set (match_operand:CC 0 \"cc_reg_not_cr0_operand\" \"\")\n+\t(compare:CC (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t     (match_operand:SI 2 \"reg_or_short_operand\" \"\"))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:SI 3 \"\"))]\n+  \"reload_completed\"\n+  [(set (match_dup 3)\n+\t(plus:SI (match_dup 1)\n+\t\t (match_dup 2)))\n+   (set (match_dup 0)\n+\t(compare:CC (match_dup 3)\n+\t\t    (const_int 0)))]\n+  \"\")\n \n (define_insn \"*addsi3_internal3\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x\")\n-\t(compare:CC (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\")\n-\t\t\t     (match_operand:SI 2 \"reg_or_short_operand\" \"r,I\"))\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+\t(compare:CC (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r\")\n+\t\t\t     (match_operand:SI 2 \"reg_or_short_operand\" \"r,I,r,I\"))\n \t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(plus:SI (match_dup 1) (match_dup 2)))]\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+\t(plus:SI (match_dup 1)\n+\t\t (match_dup 2)))]\n   \"\"\n   \"@\n    {cax.|add.} %0,%1,%2\n-   {ai.|addic.} %0,%1,%2\"\n-  [(set_attr \"type\" \"compare\")])\n+   {ai.|addic.} %0,%1,%2\n+   #\n+   #\"\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"4,4,8,8\")])\n+\n+(define_split\n+  [(set (match_operand:CC 3 \"cc_reg_not_cr0_operand\" \"\")\n+\t(compare:CC (plus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t     (match_operand:SI 2 \"reg_or_short_operand\" \"\"))\n+\t\t    (const_int 0)))\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n+\t(plus:SI (match_dup 1) (match_dup 2)))]\n+  \"reload_completed\"\n+  [(set (match_dup 0)\n+\t(plus:SI (match_dup 1)\n+\t\t (match_dup 2)))\n+   (set (match_dup 3)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\")\n \n ;; Split an add that we can't do in one insn into two insns, each of which\n ;; does one 16-bit part.  This is used by combine.  Note that the low-order\n@@ -1015,46 +1053,89 @@\n    subfic %0,%2,%1\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (minus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n-\t\t\t      (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (minus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t      (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"=r\"))]\n+   (clobber (match_scratch:SI 3 \"=r,r\"))]\n   \"! TARGET_POWERPC\"\n-  \"{sf.|subfc.} %3,%2,%1\"\n-  [(set_attr \"type\" \"compare\")])\n+  \"@\n+   {sf.|subfc.} %3,%2,%1\n+   #\"\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn \"\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (minus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n-\t\t\t      (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (minus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t      (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"=r\"))]\n+   (clobber (match_scratch:SI 3 \"=r,r\"))]\n   \"TARGET_POWERPC\"\n-  \"subf. %3,%2,%1\"\n-  [(set_attr \"type\" \"compare\")])\n+  \"@\n+   subf. %3,%2,%1\n+   #\"\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"4,8\")])\n+\n+(define_split\n+  [(set (match_operand:CC 0 \"cc_reg_not_cr0_operand\" \"\")\n+\t(compare:CC (minus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t      (match_operand:SI 2 \"gpc_reg_operand\" \"\"))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:SI 3 \"\"))]\n+  \"reload_completed\"\n+  [(set (match_dup 3)\n+\t(minus:SI (match_dup 1)\n+\t\t  (match_dup 2)))\n+   (set (match_dup 0)\n+\t(compare:CC (match_dup 3)\n+\t\t    (const_int 0)))]\n+  \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (minus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n-\t\t\t      (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (minus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t      (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(minus:SI (match_dup 1) (match_dup 2)))]\n   \"! TARGET_POWERPC\"\n-  \"{sf.|subfc.} %0,%2,%1\"\n-  [(set_attr \"type\" \"compare\")])\n+  \"@\n+   {sf.|subfc.} %0,%2,%1\n+   #\"\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"4,8\")])\n \n (define_insn \"\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (minus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n-\t\t\t      (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (minus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t      (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(minus:SI (match_dup 1) (match_dup 2)))]\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(minus:SI (match_dup 1)\n+\t\t  (match_dup 2)))]\n   \"TARGET_POWERPC\"\n   \"subf. %0,%2,%1\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"compare\")\n+   (set_attr \"length\" \"4,8\")])\n+\n+(define_split\n+  [(set (match_operand:CC 3 \"cc_reg_not_cr0_operand\" \"\")\n+\t(compare:CC (minus:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t      (match_operand:SI 2 \"gpc_reg_operand\" \"\"))\n+\t\t    (const_int 0)))\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n+\t(minus:SI (match_dup 1)\n+\t\t  (match_dup 2)))]\n+  \"reload_completed\"\n+  [(set (match_dup 0)\n+\t(minus:SI (match_dup 1)\n+\t\t  (match_dup 2)))\n+   (set (match_dup 3)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\")\n \n (define_expand \"subsi3\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")"}]}