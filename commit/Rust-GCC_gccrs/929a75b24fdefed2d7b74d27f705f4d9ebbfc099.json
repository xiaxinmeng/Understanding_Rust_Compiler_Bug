{"sha": "929a75b24fdefed2d7b74d27f705f4d9ebbfc099", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI5YTc1YjI0ZmRlZmVkMmQ3Yjc0ZDI3ZjcwNWY0ZDllYmJmYzA5OQ==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2008-06-08T16:07:17Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2008-06-08T16:07:17Z"}, "message": "Remove commentary fixes.  Regenerate fixincl.x just to show there is no difference.\n\nFrom-SVN: r136561", "tree": {"sha": "ee44f4c15a67ea0e19d0a0915829c09a76eb556a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee44f4c15a67ea0e19d0a0915829c09a76eb556a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/929a75b24fdefed2d7b74d27f705f4d9ebbfc099", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/929a75b24fdefed2d7b74d27f705f4d9ebbfc099", "html_url": "https://github.com/Rust-GCC/gccrs/commit/929a75b24fdefed2d7b74d27f705f4d9ebbfc099", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/929a75b24fdefed2d7b74d27f705f4d9ebbfc099/comments", "author": null, "committer": null, "parents": [{"sha": "c1db9545dd92301f1ed321287b2363cf7d375fa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1db9545dd92301f1ed321287b2363cf7d375fa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1db9545dd92301f1ed321287b2363cf7d375fa3"}], "stats": {"total": 477, "additions": 82, "deletions": 395}, "files": [{"sha": "131de29fba2040fae9225fe649465bf5f22578b1", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929a75b24fdefed2d7b74d27f705f4d9ebbfc099/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929a75b24fdefed2d7b74d27f705f4d9ebbfc099/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=929a75b24fdefed2d7b74d27f705f4d9ebbfc099", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Saturday June  7, 2008 at 03:19:21 PM PDT\n+ * It has been AutoGen-ed  Sunday June  8, 2008 at 09:04:48 AM PDT\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Sat Jun  7 15:19:21 PDT 2008\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Sun Jun  8 09:04:48 PDT 2008\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *"}, {"sha": "3143dea9c1233cc841ef7ba4525ec951c66cb83e", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 80, "deletions": 393, "changes": 473, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929a75b24fdefed2d7b74d27f705f4d9ebbfc099/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929a75b24fdefed2d7b74d27f705f4d9ebbfc099/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=929a75b24fdefed2d7b74d27f705f4d9ebbfc099", "patch": "@@ -75,86 +75,86 @@ fix = {\n   files     = architecture/ppc/math.h;\n   bypass    = \"powl\";\n   replace = <<- _EndOfHeader_\n-/* This file prototypes the long double functions available on Mac OS\n-   10.3.9.  */\n-#ifndef __MATH__\n-# undef __APPLE_CC__\n-# define __APPLE_CC__  1345\n-# include_next <architecture/ppc/math.h>\n-# undef __APPLE_CC__\n-# define __APPLE_CC__ 1\n-# ifndef __LIBMLDBL_COMPAT\n-#  ifdef __LONG_DOUBLE_128__\n-#   define __LIBMLDBL_COMPAT(sym) __asm(\"_\" #sym \"$LDBL128\")\n-#  else\n-#   define __LIBMLDBL_COMPAT(sym)\n-#  endif /* __LONG_DOUBLE_128__ */\n-# endif /* __LIBMLDBL_COMPAT */\n-# ifdef __cplusplus\n-   extern \"C\" {\n-# endif\n-  extern long double acosl( long double ) __LIBMLDBL_COMPAT(acosl);\n-  extern long double asinl( long double ) __LIBMLDBL_COMPAT(asinl);\n-  extern long double atanl( long double ) __LIBMLDBL_COMPAT(atanl);\n-  extern long double atan2l( long double, long double ) __LIBMLDBL_COMPAT(atan2l);\n-  extern long double cosl( long double ) __LIBMLDBL_COMPAT(cosl);\n-  extern long double sinl( long double ) __LIBMLDBL_COMPAT(sinl);\n-  extern long double tanl( long double ) __LIBMLDBL_COMPAT(tanl);\n-  extern long double acoshl( long double ) __LIBMLDBL_COMPAT(acoshl);\n-  extern long double asinhl( long double ) __LIBMLDBL_COMPAT(asinhl);\n-  extern long double atanhl( long double ) __LIBMLDBL_COMPAT(atanhl);\n-  extern long double coshl( long double ) __LIBMLDBL_COMPAT(coshl);\n-  extern long double sinhl( long double ) __LIBMLDBL_COMPAT(sinhl);\n-  extern long double tanhl( long double ) __LIBMLDBL_COMPAT(tanhl);\n-  extern long double expl( long double ) __LIBMLDBL_COMPAT(expl);\n-  extern long double exp2l( long double ) __LIBMLDBL_COMPAT(exp2l);\n-  extern long double expm1l( long double ) __LIBMLDBL_COMPAT(expm1l);\n-  extern long double logl( long double ) __LIBMLDBL_COMPAT(logl);\n-  extern long double log10l( long double ) __LIBMLDBL_COMPAT(log10l);\n-  extern long double log2l( long double ) __LIBMLDBL_COMPAT(log2l);\n-  extern long double log1pl( long double ) __LIBMLDBL_COMPAT(log1pl);\n-  extern long double logbl( long double ) __LIBMLDBL_COMPAT(logbl);\n-  extern long double modfl( long double, long double * ) __LIBMLDBL_COMPAT(modfl);\n-  extern long double ldexpl( long double, int ) __LIBMLDBL_COMPAT(ldexpl);\n-  extern long double frexpl( long double, int * ) __LIBMLDBL_COMPAT(frexpl);\n-  extern int ilogbl( long double ) __LIBMLDBL_COMPAT(ilogbl);\n-  extern long double scalbnl( long double, int ) __LIBMLDBL_COMPAT(scalbnl);\n-  extern long double scalblnl( long double, long int ) __LIBMLDBL_COMPAT(scalblnl);\n-  extern long double fabsl( long double ) __LIBMLDBL_COMPAT(fabsl);\n-  extern long double cbrtl( long double ) __LIBMLDBL_COMPAT(cbrtl);\n-  extern long double hypotl( long double, long double ) __LIBMLDBL_COMPAT(hypotl);\n-  extern long double powl( long double, long double ) __LIBMLDBL_COMPAT(powl);\n-  extern long double sqrtl( long double ) __LIBMLDBL_COMPAT(sqrtl);\n-  extern long double erfl( long double ) __LIBMLDBL_COMPAT(erfl);\n-  extern long double erfcl( long double ) __LIBMLDBL_COMPAT(erfcl);\n-  extern long double lgammal( long double ) __LIBMLDBL_COMPAT(lgammal);\n-  extern long double tgammal( long double ) __LIBMLDBL_COMPAT(tgammal);\n-  extern long double ceill( long double ) __LIBMLDBL_COMPAT(ceill);\n-  extern long double floorl( long double ) __LIBMLDBL_COMPAT(floorl);\n-  extern long double nearbyintl( long double ) __LIBMLDBL_COMPAT(nearbyintl);\n-  extern long double rintl( long double ) __LIBMLDBL_COMPAT(rintl);\n-  extern long int lrintl( long double ) __LIBMLDBL_COMPAT(lrintl);\n-  extern long long int llrintl( long double ) __LIBMLDBL_COMPAT(llrintl);\n-  extern long double roundl( long double ) __LIBMLDBL_COMPAT(roundl);\n-  extern long int lroundl( long double ) __LIBMLDBL_COMPAT(lroundl);\n-  extern long long int llroundl( long double ) __LIBMLDBL_COMPAT(llroundl);\n-  extern long double truncl( long double ) __LIBMLDBL_COMPAT(truncl);\n-  extern long double fmodl( long double, long double) __LIBMLDBL_COMPAT(fmodl);\n-  extern long double remainderl( long double, long double ) __LIBMLDBL_COMPAT(remainderl);\n-  extern long double remquol( long double, long double, int * ) __LIBMLDBL_COMPAT(remquol);\n-  extern long double copysignl( long double, long double ) __LIBMLDBL_COMPAT(copysignl);\n-  extern long double nanl( const char * ) __LIBMLDBL_COMPAT(nanl);\n-  extern long double nextafterl( long double, long double ) __LIBMLDBL_COMPAT(nextafterl);\n-  extern long double nexttowardl( long double, long double ) __LIBMLDBL_COMPAT(nexttowardl);\n-  extern long double fdiml( long double, long double ) __LIBMLDBL_COMPAT(fdiml);\n-  extern long double fmaxl( long double, long double ) __LIBMLDBL_COMPAT(fmaxl);\n-  extern long double fminl( long double, long double ) __LIBMLDBL_COMPAT(fminl);\n-  extern long double fmal( long double, long double, long double ) __LIBMLDBL_COMPAT(fmal);\n-# ifdef __cplusplus\n-   }\n-# endif\n-#endif /* __MATH__ */\n-_EndOfHeader_;\n+\t/* This file prototypes the long double functions available on Mac OS\n+\t   10.3.9.  */\n+\t#ifndef __MATH__\n+\t# undef __APPLE_CC__\n+\t# define __APPLE_CC__  1345\n+\t# include_next <architecture/ppc/math.h>\n+\t# undef __APPLE_CC__\n+\t# define __APPLE_CC__ 1\n+\t# ifndef __LIBMLDBL_COMPAT\n+\t#  ifdef __LONG_DOUBLE_128__\n+\t#   define __LIBMLDBL_COMPAT(sym) __asm(\"_\" #sym \"$LDBL128\")\n+\t#  else\n+\t#   define __LIBMLDBL_COMPAT(sym)\n+\t#  endif /* __LONG_DOUBLE_128__ */\n+\t# endif /* __LIBMLDBL_COMPAT */\n+\t# ifdef __cplusplus\n+\t   extern \"C\" {\n+\t# endif\n+\t  extern long double acosl( long double ) __LIBMLDBL_COMPAT(acosl);\n+\t  extern long double asinl( long double ) __LIBMLDBL_COMPAT(asinl);\n+\t  extern long double atanl( long double ) __LIBMLDBL_COMPAT(atanl);\n+\t  extern long double atan2l( long double, long double ) __LIBMLDBL_COMPAT(atan2l);\n+\t  extern long double cosl( long double ) __LIBMLDBL_COMPAT(cosl);\n+\t  extern long double sinl( long double ) __LIBMLDBL_COMPAT(sinl);\n+\t  extern long double tanl( long double ) __LIBMLDBL_COMPAT(tanl);\n+\t  extern long double acoshl( long double ) __LIBMLDBL_COMPAT(acoshl);\n+\t  extern long double asinhl( long double ) __LIBMLDBL_COMPAT(asinhl);\n+\t  extern long double atanhl( long double ) __LIBMLDBL_COMPAT(atanhl);\n+\t  extern long double coshl( long double ) __LIBMLDBL_COMPAT(coshl);\n+\t  extern long double sinhl( long double ) __LIBMLDBL_COMPAT(sinhl);\n+\t  extern long double tanhl( long double ) __LIBMLDBL_COMPAT(tanhl);\n+\t  extern long double expl( long double ) __LIBMLDBL_COMPAT(expl);\n+\t  extern long double exp2l( long double ) __LIBMLDBL_COMPAT(exp2l);\n+\t  extern long double expm1l( long double ) __LIBMLDBL_COMPAT(expm1l);\n+\t  extern long double logl( long double ) __LIBMLDBL_COMPAT(logl);\n+\t  extern long double log10l( long double ) __LIBMLDBL_COMPAT(log10l);\n+\t  extern long double log2l( long double ) __LIBMLDBL_COMPAT(log2l);\n+\t  extern long double log1pl( long double ) __LIBMLDBL_COMPAT(log1pl);\n+\t  extern long double logbl( long double ) __LIBMLDBL_COMPAT(logbl);\n+\t  extern long double modfl( long double, long double * ) __LIBMLDBL_COMPAT(modfl);\n+\t  extern long double ldexpl( long double, int ) __LIBMLDBL_COMPAT(ldexpl);\n+\t  extern long double frexpl( long double, int * ) __LIBMLDBL_COMPAT(frexpl);\n+\t  extern int ilogbl( long double ) __LIBMLDBL_COMPAT(ilogbl);\n+\t  extern long double scalbnl( long double, int ) __LIBMLDBL_COMPAT(scalbnl);\n+\t  extern long double scalblnl( long double, long int ) __LIBMLDBL_COMPAT(scalblnl);\n+\t  extern long double fabsl( long double ) __LIBMLDBL_COMPAT(fabsl);\n+\t  extern long double cbrtl( long double ) __LIBMLDBL_COMPAT(cbrtl);\n+\t  extern long double hypotl( long double, long double ) __LIBMLDBL_COMPAT(hypotl);\n+\t  extern long double powl( long double, long double ) __LIBMLDBL_COMPAT(powl);\n+\t  extern long double sqrtl( long double ) __LIBMLDBL_COMPAT(sqrtl);\n+\t  extern long double erfl( long double ) __LIBMLDBL_COMPAT(erfl);\n+\t  extern long double erfcl( long double ) __LIBMLDBL_COMPAT(erfcl);\n+\t  extern long double lgammal( long double ) __LIBMLDBL_COMPAT(lgammal);\n+\t  extern long double tgammal( long double ) __LIBMLDBL_COMPAT(tgammal);\n+\t  extern long double ceill( long double ) __LIBMLDBL_COMPAT(ceill);\n+\t  extern long double floorl( long double ) __LIBMLDBL_COMPAT(floorl);\n+\t  extern long double nearbyintl( long double ) __LIBMLDBL_COMPAT(nearbyintl);\n+\t  extern long double rintl( long double ) __LIBMLDBL_COMPAT(rintl);\n+\t  extern long int lrintl( long double ) __LIBMLDBL_COMPAT(lrintl);\n+\t  extern long long int llrintl( long double ) __LIBMLDBL_COMPAT(llrintl);\n+\t  extern long double roundl( long double ) __LIBMLDBL_COMPAT(roundl);\n+\t  extern long int lroundl( long double ) __LIBMLDBL_COMPAT(lroundl);\n+\t  extern long long int llroundl( long double ) __LIBMLDBL_COMPAT(llroundl);\n+\t  extern long double truncl( long double ) __LIBMLDBL_COMPAT(truncl);\n+\t  extern long double fmodl( long double, long double) __LIBMLDBL_COMPAT(fmodl);\n+\t  extern long double remainderl( long double, long double ) __LIBMLDBL_COMPAT(remainderl);\n+\t  extern long double remquol( long double, long double, int * ) __LIBMLDBL_COMPAT(remquol);\n+\t  extern long double copysignl( long double, long double ) __LIBMLDBL_COMPAT(copysignl);\n+\t  extern long double nanl( const char * ) __LIBMLDBL_COMPAT(nanl);\n+\t  extern long double nextafterl( long double, long double ) __LIBMLDBL_COMPAT(nextafterl);\n+\t  extern long double nexttowardl( long double, long double ) __LIBMLDBL_COMPAT(nexttowardl);\n+\t  extern long double fdiml( long double, long double ) __LIBMLDBL_COMPAT(fdiml);\n+\t  extern long double fmaxl( long double, long double ) __LIBMLDBL_COMPAT(fmaxl);\n+\t  extern long double fminl( long double, long double ) __LIBMLDBL_COMPAT(fminl);\n+\t  extern long double fmal( long double, long double, long double ) __LIBMLDBL_COMPAT(fmal);\n+\t# ifdef __cplusplus\n+\t   }\n+\t# endif\n+\t#endif /* __MATH__ */\n+\t_EndOfHeader_;\n };\n \n \n@@ -355,29 +355,6 @@ fix = {\n };\n \n \n-/*\n- *  Completely replace <sys/varargs.h> with a file that includes gcc's\n- *  stdarg.h or varargs.h files as appropriate.\n- */\n-#ifdef SVR4\n-fix = {\n-    hackname = AAB_svr4_no_varargs;\n-    files    = sys/varargs.h;\n-    replace  = \"/* This file was generated by fixincludes.  */\\n\"\n-               \"#ifndef _SYS_VARARGS_H\\n\"\n-               \"#define _SYS_VARARGS_H\\n\\n\"\n-\n-               \"#ifdef __STDC__\\n\"\n-               \"#include <stdarg.h>\\n\"\n-               \"#else\\n\"\n-               \"#include <varargs.h>\\n\"\n-               \"#endif\\n\\n\"\n-\n-               \"#endif  /* _SYS_VARARGS_H */\\n\";\n-};\n-#endif\n-\n-\n /*\n  *  pthread.h on AIX 4.3.3 tries to define a macro without whitspace\n  *  which violates a requirement of ISO C.\n@@ -2217,20 +2194,6 @@ fix = {\n };\n \n \n-/*\n- * Apparently some SVR4 systems typedef longlong_t to long ?\n- */\n-#ifdef SVR4\n-fix = {\n-    hackname  = longlong_t;\n-    select    = \"typedef[ \\t]+(unsigned[ \\t]+)?long[ \\t]+(u_)?longlong_t\";\n-    c_fix     = format;\n-    c_fix_arg = \"typedef %1long long %2longlong_t\";\n-    test_text = \"typedef long longlong_t\\n\"\n-                \"typedef unsigned long u_longlong_t\";\n-};\n-#endif\n-\n /* \n  *  Remove header file warning from sys/time.h.  Autoconf's\n  *  AC_HEADER_TIME recommends to include both sys/time.h and time.h\n@@ -3414,98 +3377,6 @@ fix = {\n };\n \n \n-/*\n- *  Conditionalize some of <sys/endian.h> on __GNUC__ and __GNUG__.\n- *  On some systems (UnixWare 2, UnixWare 7), the file is byteorder.h\n- *  but we still \"hijack\" it and redirect it to the GNU byteorder.h..\n- */\n-#ifdef SVR5\n-fix = {\n-    hackname = svr4_endian;\n-    files    = sys/endian.h;\n-#ifdef LATER\n-    /*\n-     * since we emit our own sys/byteorder.h,\n-     * this fix can never be applied to that file.\n-     */\n-    files    = sys/byteorder.h;\n-#endif\n-    bypass   = '__GNUC__';\n-\n-    sed      = \"/#\\tifdef\\t__STDC__/i\\\\\\n\"\n-               \"#   if !defined (__GNUC__) && !defined (__GNUG__)\\n\";\n-\n-    sed      = \"/#\\t\\tinclude\\t<sys\\\\/byteorder.h>/s/\\t\\t/   /\";\n-\n-    sed      = \"/#   include\\t<sys\\\\/byteorder.h>/i\\\\\\n\"\n-               \"#   endif /* !defined (__GNUC__) && !defined (__GNUG__) */\\n\";\n-};\n-#endif /* SVR5 */\n-\n-\n-/*\n- *  Remove useless extern keyword from struct forward declarations\n- *  in <sys/stream.h> and <sys/strsubr.h>\n- */\n-#ifdef SVR4\n-fix = {\n-    hackname = svr4_extern_struct;\n-    files    = sys/stream.h;\n-    files    = sys/strsubr.h;\n-    select   = 'extern struct [a-z_]*;';\n-    sed      = 's/extern struct \\([a-z][a-z_]*\\)/struct \\1/';\n-};\n-#endif\n-\n-/*\n- *  Fix declarations of `ftw' and `nftw' in <ftw.h>.  On some/most SVR4\n- *  systems the file <ftw.h> contains extern declarations of these\n- *  functions followed by explicitly `static' definitions of these\n- *  functions... and that's not allowed according to ANSI C.  (Note\n- *  however that on Solaris, this header file glitch has been pre-fixed by\n- *  Sun.  In the Solaris version of <ftw.h> there are no static\n- *  definitions of any function so we don't need to do any of this stuff\n- *  when on Solaris.\n- */\n-#ifdef SVR4\n-#ifndef SOLARIS\n-fix = {\n-    hackname = svr4_ftw;\n-    files    = ftw.h;\n-    select   = '^extern int ftw\\(const';\n-\n-    sed = '/^extern int ftw(const/i' \"\\\\\\n\"\n-            \"#if !defined(_STYPES)\\\\\\n\"\n-            \"static\\\\\\n\"\n-            \"#else\\\\\\n\"\n-            \"extern\\\\\\n\"\n-            \"#endif\";\n-    sed = 's/extern \\(int ftw(const.*\\)$/\\1/';\n-    sed = \"/^extern int nftw/i\\\\\\n\"\n-            \"#if defined(_STYPES)\\\\\\n\"\n-            \"static\\\\\\n\"\n-            \"#else\\\\\\n\"\n-            \"extern\\\\\\n\"\n-            \"#endif\";\n-    sed = 's/extern \\(int nftw.*\\)$/\\1/';\n-    sed = \"/^extern int ftw(),/c\\\\\\n\"\n-            \"#if !defined(_STYPES)\\\\\\n\"\n-            \"static\\\\\\n\"\n-            \"#else\\\\\\n\"\n-            \"extern\\\\\\n\"\n-            \"#endif\\\\\\n\"\n-            \"  int ftw();\\\\\\n\"\n-            \"#if defined(_STYPES)\\\\\\n\"\n-            \"static\\\\\\n\"\n-            \"#else\\\\\\n\"\n-            \"extern\\\\\\n\"\n-            \"#endif\\\\\\n\"\n-            \"  int nftw();\";\n-};\n-#endif\n-#endif\n-\n-\n /*\n  *   Fix broken decl of getcwd present on some svr4 systems.\n  */\n@@ -3523,95 +3394,6 @@ fix = {\n };\n \n \n-/*\n- *  Delete any #defines of `__i386' which may be present in <ieeefp.h>.  They\n- *  tend to conflict with the compiler's own definition of this symbol.  (We\n- *  will use the compiler's definition.)\n- *  Likewise __sparc, for Solaris, and __i860, and a few others\n- *  (guessing it is necessary for all of them).\n- */\n-#ifdef SVR4\n-fix = {\n-    hackname = svr4_mach_defines;\n-    files    = ieeefp.h;\n-    select   = \"#define[ \\t]*__(i386|mips|sparc|m88k|m68k)[ \\t]\";\n-    sed      = \"/#define[ \\t]*__\\\\(i386|mips|sparc|m88k|m68k\\\\)[ \\t]/d\";\n-};\n-#endif\n-\n-\n-/*\n- *  Fix declarations of `makedev', `major', and `minor' in <sys/mkdev.h>.\n- *  They are declared as non-static then immediately redeclared as static.\n- */\n-#ifdef SVR5\n-fix = {\n-    hackname = svr4_mkdev;\n-    files    = sys/mkdev.h;\n-    select   = '^static';\n-\n-    sed      = \"/^dev_t makedev(/s/^/static /\";\n-    sed      = \"/^major_t major(/s/^/static /\";\n-    sed      = \"/^minor_t minor(/s/^/static /\";\n-};\n-#endif /* SVR5 */\n-\n-\n-/*\n- *  Fix reference to NC_NPI_RAW in <sys/netcspace.h>.\n- *  Also fix types of array initializers.\n- */\n-#ifdef SVR4\n-fix = {\n-    hackname = svr4_netcspace;\n-    files    = sys/netcspace.h;\n-    select   = 'NC_NPI_RAW';\n-    sed      = 's/NC_NPI_RAW/NC_TPI_RAW/g';\n-    sed      = 's/NC_/(unsigned long) NC_/';\n-};\n-#endif\n-\n-/*\n- *  Fix reference to NMSZ in <sys/adv.h>.\n- */\n-#ifdef SVR4\n-fix = {\n-    hackname = svr4_nmsz;\n-    files    = sys/adv.h;\n-    select   = '\\[NMSZ\\]';\n-    sed      = 's/\\[NMSZ\\]/\\[RFS_NMSZ\\]/g';\n-};\n-#endif\n-\n-\n-/*\n- * Some SVR4 systems supposedly use these non-ANSI preprocessor directives.\n- */\n-#ifdef SVR4\n-fix = {\n-    hackname  = svr4_preproc_lint_on;\n-    select    = '#lint\\(on\\)';\n-    c_fix     = format;\n-    c_fix_arg = 'defined(lint)';\n-    test_text = \"#if #lint(on)\";\n-};\n-fix = {\n-    hackname  = svr4_preproc_lint_off;\n-    select    = '#lint\\(off\\)';\n-    c_fix     = format;\n-    c_fix_arg = '!defined(lint)';\n-    test_text = \"#if #lint(off)\";\n-};\n-fix = {\n-    hackname  = svr4_preproc_machine;\n-    select    = '#(machine|system|cpu)\\(([^)]*)\\)';\n-    c_fix     = format;\n-    c_fix_arg = 'defined(__%1__)';\n-    test_text = \"#if #machine(i386) || #system(vax) || #cpu(sparc)\";\n-};\n-#endif\n-\n-\n /*\n  *   Fix broken decl of profil present on some svr4 systems.\n  */\n@@ -3633,75 +3415,6 @@ fix = {\n };\n \n \n-/*\n- *  Convert functions to prototype form, and fix arg names in <sys/stat.h>.\n- */\n-#ifdef SVR4\n-fix = {\n-    hackname = svr4_proto_form;\n-    files    = sys/stat.h;\n-    select   = 'const extern';\n-\n-    sed      = \"/^stat([ \\t]*[^c]/ {\\nN\\nN\\n\"\n-                   \"s/(.*)\\\\n/( /\\n\"\n-                   \"s/;\\\\n/, /\\n\"\n-                   \"s/;$/)/\\n\"  \"}\";\n-\n-    sed      = \"/^lstat([ \\t]*[^c]/ {\\nN\\nN\\n\"\n-                   \"s/(.*)\\\\n/( /\\n\"\n-                   \"s/;\\\\n/, /\\n\"\n-                   \"s/;$/)/\\n\"  \"}\";\n-\n-    sed      = \"/^fstat([ \\t]*[^i]/ {\\nN\\nN\\n\"\n-                   \"s/(.*)\\\\n/( /\\n\"\n-                   \"s/;\\\\n/, /\\n\"\n-                   \"s/;$/)/\\n\"  \"}\";\n-\n-    sed      = \"/^mknod([ \\t]*[^c]/{\\nN\\nN\\nN\\n\"\n-                   \"s/(.*)\\\\n/( /\\n\"\n-                   \"s/;\\\\n/, /g\\n\"\n-                   \"s/;$/)/\\n\"  \"}\";\n-\n-    sed      = \"1,$s/\\\\([^A-Za-z]\\\\)path\\\\([^A-Za-z]\\\\)/\\\\1__path\\\\2/g\";\n-    sed      = \"1,$s/\\\\([^A-Za-z]\\\\)buf\\\\([^A-Za-z]\\\\)/\\\\1__buf\\\\2/g\";\n-    sed      = \"1,$s/\\\\([^A-Za-z]\\\\)fd\\\\([^A-Za-z]\\\\)/\\\\1__fd\\\\2/g\";\n-    sed      = \"1,$s/ret\\\\([^u]\\\\)/__ret\\\\1/g\";\n-    sed      = \"1,$s/\\\\([^_]\\\\)mode\\\\([^_]\\\\)/\\\\1__mode\\\\2/g\";\n-    sed      = \"1,$s/\\\\([^_r]\\\\)dev\\\\([^_]\\\\)/\\\\1__dev\\\\2/g\";\n-};\n-#endif\n-\n-/*\n- *  Add a prototyped declaration of mmap to <sys/mman.h>.\n- */\n-#ifdef SVR4\n-fix = {\n-    hackname = svr4_proto_mmap;\n-    files    = sys/mman.h;\n-    select   = '^extern caddr_t mmap();$';\n-    sed = '/^extern caddr_t mmap();$/c' \"\\\\\\n\"\n-          \"#ifdef __STDC__\\\\\\n\"\n-          \"extern caddr_t mmap (caddr_t, size_t, int, int, int, off_t);\\\\\\n\"\n-          \"#else /* !defined(__STDC__) */\\\\\\n\"\n-          \"extern caddr_t mmap ();\\\\\\n\"\n-          \"#endif /* !defined(__STDC__) */\\\\\\n\";\n-};\n-#endif\n-\n-/*\n- *  Add a #define of _SIGACTION_ into <sys/signal.h>.\n- */\n-#ifdef SVR4\n-fix = {\n-    hackname = svr4_sigaction;\n-    files    = sys/signal.h;\n-    sed      = \"/^struct sigaction {/i\\\\\\n\"\n-               \"#define _SIGACTION_\";\n-    sed      = 's/(void *(\\*)())/(void (*)(int))/';\n-};\n-#endif\n-\n-\n /*\n  * Correct types for signal handler constants like SIG_DFL; they might be\n  * void (*) (), and should be void (*) (int).  C++ doesn't like the\n@@ -3717,18 +3430,6 @@ fix = {\n                 \"#define SIG_IGN (void (*)())0\\n\";\n };\n \n-/*\n- *  Put storage class at start of decl, to avoid warning.\n- */\n-#ifdef SVR4\n-fix = {\n-    hackname = svr4_storage_class;\n-    files    = rpc/types.h;\n-    select   = 'const extern';\n-    sed      = 's/const extern/extern const/g';\n-};\n-#endif\n-\n \n /*\n  *  Some SysV r4 systems, including Sequent's DYNIX/ptx, use the local\n@@ -3759,20 +3460,6 @@ fix = {\n };\n \n \n-/*\n- *  Like svr4_mach_defines, but with newfangled syntax.\n- *  Source lines are of #define __i386 #machine(i386).   Delete them.\n- */\n-#ifdef SVR5\n-fix = {\n-    hackname = svr5_mach_defines;\n-    files    = ieeefp.h;\n-    select   = \"#define[ \\t]*__i386.*\\(i386\\)\";\n-    sed      = \"/#define[ \\t]*__i386.*/d\";\n-};\n-#endif /*  SVR5 */\n-\n-\n /*\n  *  Fix return value of mem{ccpy,chr,cpy,set} and str{len,spn,cspn}\n  *  in string.h on sysV68"}]}