{"sha": "9784779754d2861aa1b9c8d94da971f83e383e01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc4NDc3OTc1NGQyODYxYWExYjljOGQ5NGRhOTcxZjgzZTM4M2UwMQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-11-09T13:13:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-30T14:16:16Z"}, "message": "[Ada] Fix folding of comparison operators in GNATprove mode\n\ngcc/ada/\n\n\t* exp_util.adb (Get_Current_Value_Condition): Don't use current\n\tvalue tracking in GNATprove mode.\n\t* sem_res.adb (Resolve_Comparison_Op): Remove incomplete\n\tspecial-casing for folding in GNATprove mode.", "tree": {"sha": "29b80b7503f0fb5fcf80c0be86e04d870e9ab751", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29b80b7503f0fb5fcf80c0be86e04d870e9ab751"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9784779754d2861aa1b9c8d94da971f83e383e01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9784779754d2861aa1b9c8d94da971f83e383e01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9784779754d2861aa1b9c8d94da971f83e383e01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9784779754d2861aa1b9c8d94da971f83e383e01/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a442bed36cfbfb739244963f22eaf10320a27ec9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a442bed36cfbfb739244963f22eaf10320a27ec9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a442bed36cfbfb739244963f22eaf10320a27ec9"}], "stats": {"total": 30, "additions": 12, "deletions": 18}, "files": [{"sha": "11efd46651e0130e55e0a7d8497a430b6c01bfdb", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9784779754d2861aa1b9c8d94da971f83e383e01/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9784779754d2861aa1b9c8d94da971f83e383e01/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=9784779754d2861aa1b9c8d94da971f83e383e01", "patch": "@@ -6360,6 +6360,17 @@ package body Exp_Util is\n          return;\n       end if;\n \n+      --  In GNATprove mode we don't want to use current value optimizer, in\n+      --  particular for loop invariant expressions and other assertions that\n+      --  act as cut points for proof. The optimizer often folds expressions\n+      --  into True/False where they trivially follow from the previous\n+      --  assignments, but this deprives proof from the information needed to\n+      --  discharge checks that are beyond the scope of the value optimizer.\n+\n+      if GNATprove_Mode then\n+         return;\n+      end if;\n+\n       --  Otherwise examine current value\n \n       declare"}, {"sha": "ed744ea749bda4cda6620edb45508a3f12b5e3c6", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9784779754d2861aa1b9c8d94da971f83e383e01/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9784779754d2861aa1b9c8d94da971f83e383e01/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=9784779754d2861aa1b9c8d94da971f83e383e01", "patch": "@@ -7457,24 +7457,7 @@ package body Sem_Res is\n \n       Analyze_Dimension (N);\n \n-      --  Evaluate the relation (note we do this after the above check since\n-      --  this Eval call may change N to True/False). Skip this evaluation\n-      --  inside assertions, in order to keep assertions as written by users\n-      --  for tools that rely on these, e.g. GNATprove for loop invariants.\n-      --  Except evaluation is still performed even inside assertions for\n-      --  comparisons between values of universal type, which are useless\n-      --  for static analysis tools, and not supported even by GNATprove.\n-      --  ??? It is suspicious to disable evaluation only for comparison\n-      --  operators and not, let's say, for calls to static functions.\n-\n-      if not GNATprove_Mode\n-        or else In_Assertion_Expr = 0\n-        or else (Is_Universal_Numeric_Type (Etype (L))\n-                   and then\n-                 Is_Universal_Numeric_Type (Etype (R)))\n-      then\n-         Eval_Relational_Op (N);\n-      end if;\n+      Eval_Relational_Op (N);\n    end Resolve_Comparison_Op;\n \n    --------------------------------"}]}