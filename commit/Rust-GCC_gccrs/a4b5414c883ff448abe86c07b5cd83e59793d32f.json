{"sha": "a4b5414c883ff448abe86c07b5cd83e59793d32f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRiNTQxNGM4ODNmZjQ0OGFiZTg2YzA3YjVjZDgzZTU5NzkzZDMyZg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-08-02T00:50:01Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-08-02T00:50:01Z"}, "message": "df.c (df_insn_table_realloc): Change parameter to unsigned.\n\n\t* df.c (df_insn_table_realloc): Change parameter to unsigned.\n\t* optabs.c (expand_binop): Make variable unsigned.\n\t* simplify-rtx.c (simplify_subreg): Likewise.\n\t* unroll.c (unroll_loop): Cast to avoid signed/unsigned warnings.\n\nFrom-SVN: r55960", "tree": {"sha": "263948557c9985a1d6149cb869094c9e03d8b729", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/263948557c9985a1d6149cb869094c9e03d8b729"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4b5414c883ff448abe86c07b5cd83e59793d32f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4b5414c883ff448abe86c07b5cd83e59793d32f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4b5414c883ff448abe86c07b5cd83e59793d32f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4b5414c883ff448abe86c07b5cd83e59793d32f/comments", "author": null, "committer": null, "parents": [{"sha": "a03e67c3a3cb59fa73878624ad9565e4fed4c6ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a03e67c3a3cb59fa73878624ad9565e4fed4c6ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a03e67c3a3cb59fa73878624ad9565e4fed4c6ca"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "de5c2b5d6eb3f92cb61e5bf11db1d1c1a8da86a1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b5414c883ff448abe86c07b5cd83e59793d32f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b5414c883ff448abe86c07b5cd83e59793d32f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4b5414c883ff448abe86c07b5cd83e59793d32f", "patch": "@@ -1,3 +1,10 @@\n+2002-08-01  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* df.c (df_insn_table_realloc): Change parameter to unsigned.\n+\t* optabs.c (expand_binop): Make variable unsigned.\n+\t* simplify-rtx.c (simplify_subreg): Likewise.\n+\t* unroll.c (unroll_loop): Cast to avoid signed/unsigned warnings.\n+\n 2002-08-01  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n \n \t* c-common.c (cb_register_builtins): Always define __GXX_ABI_VERSION."}, {"sha": "a7e862d115c8a0621383a7d4698a789eb5e141ca", "filename": "gcc/df.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b5414c883ff448abe86c07b5cd83e59793d32f/gcc%2Fdf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b5414c883ff448abe86c07b5cd83e59793d32f/gcc%2Fdf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf.c?ref=a4b5414c883ff448abe86c07b5cd83e59793d32f", "patch": "@@ -182,7 +182,7 @@ static void df_reg_table_realloc PARAMS((struct df *, int));\n #if 0\n static void df_def_table_realloc PARAMS((struct df *, int));\n #endif\n-static void df_insn_table_realloc PARAMS((struct df *, int));\n+static void df_insn_table_realloc PARAMS((struct df *, unsigned int));\n static void df_bitmaps_alloc PARAMS((struct df *, int));\n static void df_bitmaps_free PARAMS((struct df *, int));\n static void df_free PARAMS((struct df *));\n@@ -299,7 +299,7 @@ static inline bool read_modify_subreg_p PARAMS ((rtx));\n static void\n df_insn_table_realloc (df, size)\n      struct df *df;\n-     int size;\n+     unsigned int size;\n {\n   size++;\n   if (size <= df->insn_size)"}, {"sha": "1e4af105f4fb83bab88956c08e36a36ad66e7680", "filename": "gcc/optabs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b5414c883ff448abe86c07b5cd83e59793d32f/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b5414c883ff448abe86c07b5cd83e59793d32f/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=a4b5414c883ff448abe86c07b5cd83e59793d32f", "patch": "@@ -1219,7 +1219,7 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n     {\n       unsigned int i;\n       optab otheroptab = binoptab == add_optab ? sub_optab : add_optab;\n-      int nwords = GET_MODE_BITSIZE (mode) / BITS_PER_WORD;\n+      const unsigned int nwords = GET_MODE_BITSIZE (mode) / BITS_PER_WORD;\n       rtx carry_in = NULL_RTX, carry_out = NULL_RTX;\n       rtx xop0, xop1, xtarget;\n "}, {"sha": "135846ca82fa926ae3fa8b910870ffac94f80bd3", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b5414c883ff448abe86c07b5cd83e59793d32f/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b5414c883ff448abe86c07b5cd83e59793d32f/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=a4b5414c883ff448abe86c07b5cd83e59793d32f", "patch": "@@ -2280,7 +2280,7 @@ simplify_subreg (outermode, op, innermode, byte)\n   if (GET_CODE (op) == CONST_VECTOR)\n     {\n       int elt_size = GET_MODE_SIZE (GET_MODE_INNER (innermode));\n-      int offset = byte / elt_size;\n+      const unsigned int offset = byte / elt_size;\n       rtx elt;\n \n       if (GET_MODE_INNER (innermode) == outermode)"}, {"sha": "445ec5fc1a7d6f43f24d3d2696b37e0139d5c8f1", "filename": "gcc/unroll.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b5414c883ff448abe86c07b5cd83e59793d32f/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b5414c883ff448abe86c07b5cd83e59793d32f/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=a4b5414c883ff448abe86c07b5cd83e59793d32f", "patch": "@@ -343,8 +343,8 @@ unroll_loop (loop, insn_count, strength_reduce_p)\n     }\n   else if (loop_info->n_iterations > 0\n \t   /* Avoid overflow in the next expression.  */\n-\t   && loop_info->n_iterations < MAX_UNROLLED_INSNS\n-\t   && loop_info->n_iterations * insn_count < MAX_UNROLLED_INSNS)\n+\t   && loop_info->n_iterations < (unsigned) MAX_UNROLLED_INSNS\n+\t   && loop_info->n_iterations * insn_count < (unsigned) MAX_UNROLLED_INSNS)\n     {\n       unroll_number = loop_info->n_iterations;\n       unroll_type = UNROLL_COMPLETELY;\n@@ -374,7 +374,7 @@ unroll_loop (loop, insn_count, strength_reduce_p)\n       for (i = 3; i >= 0; i--)\n \twhile (factors[i].count--)\n \t  {\n-\t    if (temp * factors[i].factor < MAX_UNROLLED_INSNS)\n+\t    if (temp * factors[i].factor < (unsigned) MAX_UNROLLED_INSNS)\n \t      {\n \t\tunroll_number *= factors[i].factor;\n \t\ttemp *= factors[i].factor;"}]}