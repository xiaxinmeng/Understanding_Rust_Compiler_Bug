{"sha": "9cd9e512cb50cc49de86f397e716279286712f82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNkOWU1MTJjYjUwY2M0OWRlODZmMzk3ZTcxNjI3OTI4NjcxMmY4Mg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2006-01-24T23:48:17Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2006-01-24T23:48:17Z"}, "message": "alias.h (ALIAS_SET_MEMORY_BARRIER): New.\n\n        * alias.h (ALIAS_SET_MEMORY_BARRIER): New.\n        * alias.c (true_dependence): Respect it.\n        (canon_true_dependence, write_dependence_p): Likewise.\n        * builtins.c (get_builtin_sync_mem): Set it.\n\nFrom-SVN: r110189", "tree": {"sha": "0827a234c38b01dc573baa50665e2f3c2f1afe68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0827a234c38b01dc573baa50665e2f3c2f1afe68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cd9e512cb50cc49de86f397e716279286712f82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd9e512cb50cc49de86f397e716279286712f82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cd9e512cb50cc49de86f397e716279286712f82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd9e512cb50cc49de86f397e716279286712f82/comments", "author": null, "committer": null, "parents": [{"sha": "7faaba2884bb256dc3e2c9addd5357fbde4e2c9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7faaba2884bb256dc3e2c9addd5357fbde4e2c9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7faaba2884bb256dc3e2c9addd5357fbde4e2c9c"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "62a3fc7def66860281b4dac788232f4a0d05d7f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd9e512cb50cc49de86f397e716279286712f82/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd9e512cb50cc49de86f397e716279286712f82/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9cd9e512cb50cc49de86f397e716279286712f82", "patch": "@@ -1,3 +1,10 @@\n+2006-01-24  Richard Henderson  <rth@redehat.com>\n+\n+\t* alias.h (ALIAS_SET_MEMORY_BARRIER): New.\n+\t* alias.c (true_dependence): Respect it.\n+\t(canon_true_dependence, write_dependence_p): Likewise.\n+\t* builtins.c (get_builtin_sync_mem): Set it.\n+\n 2006-01-25  Zdenek Dvorak <dvorakz@suse.cz>\n \n \t* loop-iv.c (iv_analysis_loop_init): Use df analysis in a more"}, {"sha": "68dff253abf82e0a840d989b7f5938c8ae13d3f3", "filename": "gcc/alias.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd9e512cb50cc49de86f397e716279286712f82/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd9e512cb50cc49de86f397e716279286712f82/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=9cd9e512cb50cc49de86f397e716279286712f82", "patch": "@@ -1,5 +1,5 @@\n /* Alias analysis for GNU C\n-   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n    Free Software Foundation, Inc.\n    Contributed by John Carr (jfc@mit.edu).\n \n@@ -2209,6 +2209,9 @@ true_dependence (rtx mem, enum machine_mode mem_mode, rtx x,\n     return 1;\n   if (GET_MODE (mem) == BLKmode && GET_CODE (XEXP (mem, 0)) == SCRATCH)\n     return 1;\n+  if (MEM_ALIAS_SET (x) == ALIAS_SET_MEMORY_BARRIER\n+      || MEM_ALIAS_SET (mem) == ALIAS_SET_MEMORY_BARRIER)\n+    return 1;\n \n   if (DIFFERENT_ALIAS_SETS_P (x, mem))\n     return 0;\n@@ -2282,6 +2285,9 @@ canon_true_dependence (rtx mem, enum machine_mode mem_mode, rtx mem_addr,\n     return 1;\n   if (GET_MODE (mem) == BLKmode && GET_CODE (XEXP (mem, 0)) == SCRATCH)\n     return 1;\n+  if (MEM_ALIAS_SET (x) == ALIAS_SET_MEMORY_BARRIER\n+      || MEM_ALIAS_SET (mem) == ALIAS_SET_MEMORY_BARRIER)\n+    return 1;\n \n   if (DIFFERENT_ALIAS_SETS_P (x, mem))\n     return 0;\n@@ -2341,6 +2347,9 @@ write_dependence_p (rtx mem, rtx x, int writep)\n     return 1;\n   if (GET_MODE (mem) == BLKmode && GET_CODE (XEXP (mem, 0)) == SCRATCH)\n     return 1;\n+  if (MEM_ALIAS_SET (x) == ALIAS_SET_MEMORY_BARRIER\n+      || MEM_ALIAS_SET (mem) == ALIAS_SET_MEMORY_BARRIER)\n+    return 1;\n \n   if (DIFFERENT_ALIAS_SETS_P (x, mem))\n     return 0;"}, {"sha": "83cc2d55094f4344f3202888f7a6e1bccf788a04", "filename": "gcc/alias.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd9e512cb50cc49de86f397e716279286712f82/gcc%2Falias.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd9e512cb50cc49de86f397e716279286712f82/gcc%2Falias.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.h?ref=9cd9e512cb50cc49de86f397e716279286712f82", "patch": "@@ -27,4 +27,10 @@ extern HOST_WIDE_INT get_frame_alias_set (void);\n extern void record_base_value (unsigned int, rtx, int);\n extern bool component_uses_parent_alias_set (tree);\n \n+/* This alias set can be used to force a memory to conflict with all\n+   other memories, creating a barrier across which no memory reference\n+   can move.  Note that there are other legacy ways to create such\n+   memory barriers, including an address of SCRATCH.  */\n+#define ALIAS_SET_MEMORY_BARRIER\t((HOST_WIDE_INT) -1)\n+\n #endif /* GCC_ALIAS_H */"}, {"sha": "896fc48a4dedbc61415492b07d408e19bd16594c", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd9e512cb50cc49de86f397e716279286712f82/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd9e512cb50cc49de86f397e716279286712f82/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=9cd9e512cb50cc49de86f397e716279286712f82", "patch": "@@ -1,6 +1,6 @@\n /* Expand builtin functions.\n    Copyright (C) 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+   2000, 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -5406,6 +5406,7 @@ get_builtin_sync_mem (tree loc, enum machine_mode mode)\n   mem = validize_mem (gen_rtx_MEM (mode, addr));\n \n   set_mem_align (mem, get_pointer_alignment (loc, BIGGEST_ALIGNMENT));\n+  set_mem_alias_set (mem, ALIAS_SET_MEMORY_BARRIER);\n   MEM_VOLATILE_P (mem) = 1;\n \n   return mem;"}]}