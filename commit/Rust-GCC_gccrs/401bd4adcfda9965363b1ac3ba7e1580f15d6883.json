{"sha": "401bd4adcfda9965363b1ac3ba7e1580f15d6883", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAxYmQ0YWRjZmRhOTk2NTM2M2IxYWMzYmE3ZTE1ODBmMTVkNjg4Mw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-05-26T17:12:05Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-05-26T17:13:56Z"}, "message": "Warn on type punning that toggles scalar storage order\n\nAs documented in the manual, we do not support type punning that toggles\nthe scalar storage order, so this adds a warning for the case of unions.\n\ngcc/c/\n\tPR c/100653\n\t* c-decl.c (finish_struct): Warn for a union containing an aggregate\n\tfield with a differing scalar storage order.\ngcc/testsuite/\n\t* gcc.dg/sso-13.c: New test.", "tree": {"sha": "c71b1e857c1b29bbf42ae593ede1de9fa560e61a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c71b1e857c1b29bbf42ae593ede1de9fa560e61a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/401bd4adcfda9965363b1ac3ba7e1580f15d6883", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/401bd4adcfda9965363b1ac3ba7e1580f15d6883", "html_url": "https://github.com/Rust-GCC/gccrs/commit/401bd4adcfda9965363b1ac3ba7e1580f15d6883", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/401bd4adcfda9965363b1ac3ba7e1580f15d6883/comments", "author": null, "committer": null, "parents": [{"sha": "0e1fd432e9cd5a2a4703c9ef9cc61255ea22cc49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e1fd432e9cd5a2a4703c9ef9cc61255ea22cc49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e1fd432e9cd5a2a4703c9ef9cc61255ea22cc49"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "3c7b306809da4c490a1edd648c3154eec7e4e41d", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/401bd4adcfda9965363b1ac3ba7e1580f15d6883/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/401bd4adcfda9965363b1ac3ba7e1580f15d6883/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=401bd4adcfda9965363b1ac3ba7e1580f15d6883", "patch": "@@ -8853,6 +8853,13 @@ finish_struct (location_t loc, tree t, tree fieldlist, tree attributes,\n \t\t= c_build_qualified_type (fmain_type, TYPE_QUALS (ftype));\n \t    }\n \t}\n+\n+      if (TREE_CODE (t) == UNION_TYPE\n+\t  && AGGREGATE_TYPE_P (TREE_TYPE (field))\n+\t  && TYPE_REVERSE_STORAGE_ORDER (t)\n+\t     != TYPE_REVERSE_STORAGE_ORDER (TREE_TYPE (field)))\n+\twarning_at (DECL_SOURCE_LOCATION (field), OPT_Wscalar_storage_order,\n+\t\t    \"type punning toggles scalar storage order\");\n     }\n \n   /* Now we have the truly final field list."}, {"sha": "ddfde00b758c4fd4f721e3d98136b2c28735fe4f", "filename": "gcc/testsuite/gcc.dg/sso-13.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/401bd4adcfda9965363b1ac3ba7e1580f15d6883/gcc%2Ftestsuite%2Fgcc.dg%2Fsso-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/401bd4adcfda9965363b1ac3ba7e1580f15d6883/gcc%2Ftestsuite%2Fgcc.dg%2Fsso-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsso-13.c?ref=401bd4adcfda9965363b1ac3ba7e1580f15d6883", "patch": "@@ -0,0 +1,24 @@\n+/* Test support of scalar_storage_order attribute */\n+\n+/* { dg-do compile } */\n+\n+#if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n+#define REV_ENDIANNESS __attribute__((scalar_storage_order(\"big-endian\")))\n+#else\n+#define REV_ENDIANNESS __attribute__((scalar_storage_order(\"little-endian\")))\n+#endif\n+\n+typedef struct tIp6Addr\n+{\n+    unsigned int s6_addr32[4];\n+} tIp6Addr;\n+\n+struct _tBeTimNetAddr\n+{\n+    unsigned char isIPv4;\n+    union\n+    {\n+        unsigned int addr;\n+        tIp6Addr addr6;   /* { dg-warning \"type punning toggles\" } */\n+    } REV_ENDIANNESS u;\n+} REV_ENDIANNESS;"}]}