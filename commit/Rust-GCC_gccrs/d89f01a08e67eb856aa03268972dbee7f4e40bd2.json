{"sha": "d89f01a08e67eb856aa03268972dbee7f4e40bd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg5ZjAxYTA4ZTY3ZWI4NTZhYTAzMjY4OTcyZGJlZTdmNGU0MGJkMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2018-01-10T08:19:52Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-01-10T08:19:52Z"}, "message": "re PR rtl-optimization/83575 (ICE: verify_flow_info failed (error: multiple hot/cold transitions found))\n\n\n\tPR middle-end/83575\n\t* predict.c (force_edge_cold): Handle in more sane way edges\n\twith no prediction.\n\nFrom-SVN: r256420", "tree": {"sha": "87a7022307b8279ade8b91dba0b135afde198798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87a7022307b8279ade8b91dba0b135afde198798"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d89f01a08e67eb856aa03268972dbee7f4e40bd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d89f01a08e67eb856aa03268972dbee7f4e40bd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d89f01a08e67eb856aa03268972dbee7f4e40bd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d89f01a08e67eb856aa03268972dbee7f4e40bd2/comments", "author": null, "committer": null, "parents": [{"sha": "692aefcd5618a00e622a1c96957d943723040b4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/692aefcd5618a00e622a1c96957d943723040b4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/692aefcd5618a00e622a1c96957d943723040b4c"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "98ea00bd5be7922ae76731c446de86a49e748e09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d89f01a08e67eb856aa03268972dbee7f4e40bd2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d89f01a08e67eb856aa03268972dbee7f4e40bd2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d89f01a08e67eb856aa03268972dbee7f4e40bd2", "patch": "@@ -1,3 +1,9 @@\n+2018-01-09  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR middle-end/83575\n+\t* predict.c (force_edge_cold): Handle in more sane way edges\n+\twith no prediction.\n+\n 2018-01-09  Carl Love  <cel@us.ibm.com>\n \n \t* config/rs6002/altivec.md (p8_vmrgow): Add support for V2DI, V2DF,"}, {"sha": "b6be32d48bc2fe87e273e45fdfc3656e118e53e9", "filename": "gcc/predict.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d89f01a08e67eb856aa03268972dbee7f4e40bd2/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d89f01a08e67eb856aa03268972dbee7f4e40bd2/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=d89f01a08e67eb856aa03268972dbee7f4e40bd2", "patch": "@@ -4040,6 +4040,10 @@ force_edge_cold (edge e, bool impossible)\n   edge e2;\n   bool uninitialized_exit = false;\n \n+  /* When branch probability guesses are not known, then do nothing.  */\n+  if (!impossible && !e->count ().initialized_p ())\n+    return;\n+\n   profile_probability goal = (impossible ? profile_probability::never ()\n \t\t\t      : profile_probability::very_unlikely ());\n \n@@ -4050,17 +4054,23 @@ force_edge_cold (edge e, bool impossible)\n   FOR_EACH_EDGE (e2, ei, e->src->succs)\n     if (e2 != e)\n       {\n+\tif (e->flags & EDGE_FAKE)\n+\t  continue;\n \tif (e2->count ().initialized_p ())\n \t  count_sum += e2->count ();\n-\telse\n-\t  uninitialized_exit = true;\n \tif (e2->probability.initialized_p ())\n \t  prob_sum += e2->probability;\n+\telse \n+\t  uninitialized_exit = true;\n       }\n \n+  /* If we are not guessing profiles but have some other edges out,\n+     just assume the control flow goes elsewhere.  */\n+  if (uninitialized_exit)\n+    e->probability = goal;\n   /* If there are other edges out of e->src, redistribute probabilitity\n      there.  */\n-  if (prob_sum > profile_probability::never ())\n+  else if (prob_sum > profile_probability::never ())\n     {\n       if (!(e->probability < goal))\n \te->probability = goal;\n@@ -4100,8 +4110,7 @@ force_edge_cold (edge e, bool impossible)\n \tupdate_br_prob_note (e->src);\n       if (e->src->count == profile_count::zero ())\n \treturn;\n-      if (count_sum == profile_count::zero () && !uninitialized_exit\n-\t  && impossible)\n+      if (count_sum == profile_count::zero () && impossible)\n \t{\n \t  bool found = false;\n \t  if (e->src == ENTRY_BLOCK_PTR_FOR_FN (cfun))"}]}