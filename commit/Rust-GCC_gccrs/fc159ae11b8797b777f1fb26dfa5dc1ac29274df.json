{"sha": "fc159ae11b8797b777f1fb26dfa5dc1ac29274df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMxNTlhZTExYjg3OTdiNzc3ZjFmYjI2ZGZhNWRjMWFjMjkyNzRkZg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-03-06T06:05:02Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-03-06T06:05:02Z"}, "message": "re GNATS gcj/124 (protected constructor for InvocationTargetException still visible)\n\n\t* lib/libjava.exp (test_libjava): Document `shouldfail' token.\n\t(test_libjava_from_source): Handle `shouldfail' case.\n\t(test_libjava_from_javac): Likewise.\n\n\tTest for PR libgcj/124:\n\t* libjava.compile/PR124.java: New file.\n\t* libjava.compile/PR124.xfail: New file.\n\nFrom-SVN: r32353", "tree": {"sha": "19de468a694727520b908ff8c4516955d02b5352", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19de468a694727520b908ff8c4516955d02b5352"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc159ae11b8797b777f1fb26dfa5dc1ac29274df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc159ae11b8797b777f1fb26dfa5dc1ac29274df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc159ae11b8797b777f1fb26dfa5dc1ac29274df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc159ae11b8797b777f1fb26dfa5dc1ac29274df/comments", "author": null, "committer": null, "parents": [{"sha": "8cf870df7bec58d79f3e69249ad5dc05a234ea5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cf870df7bec58d79f3e69249ad5dc05a234ea5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cf870df7bec58d79f3e69249ad5dc05a234ea5c"}], "stats": {"total": 63, "additions": 58, "deletions": 5}, "files": [{"sha": "7d393bc4eca8e559a468641f028992151f290e82", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc159ae11b8797b777f1fb26dfa5dc1ac29274df/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc159ae11b8797b777f1fb26dfa5dc1ac29274df/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=fc159ae11b8797b777f1fb26dfa5dc1ac29274df", "patch": "@@ -1,3 +1,13 @@\n+2000-03-05  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* lib/libjava.exp (test_libjava): Document `shouldfail' token.\n+\t(test_libjava_from_source): Handle `shouldfail' case.\n+\t(test_libjava_from_javac): Likewise.\n+\n+\tTest for PR libgcj/124:\n+\t* libjava.compile/PR124.java: New file.\n+\t* libjava.compile/PR124.xfail: New file.\n+\n 2000-03-05  Anthony Green  <green@redhat.com>\n \n \t* libjava.lang/PR141.java: New file."}, {"sha": "ed58a1fdf3b62e87f47d5443e975b3020f8699dd", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc159ae11b8797b777f1fb26dfa5dc1ac29274df/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc159ae11b8797b777f1fb26dfa5dc1ac29274df/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=fc159ae11b8797b777f1fb26dfa5dc1ac29274df", "patch": "@@ -136,7 +136,7 @@ DIST_COMMON =  ChangeLog Makefile.am Makefile.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = gtar\n+TAR = tar\n GZIP_ENV = --best\n all: all-redirect\n .SUFFIXES:\n@@ -164,7 +164,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\"}, {"sha": "797741b295cfbeb504c1129de5f3be468f5d5847", "filename": "libjava/testsuite/lib/libjava.exp", "status": "modified", "additions": 36, "deletions": 3, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc159ae11b8797b777f1fb26dfa5dc1ac29274df/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc159ae11b8797b777f1fb26dfa5dc1ac29274df/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flib%2Flibjava.exp?ref=fc159ae11b8797b777f1fb26dfa5dc1ac29274df", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 1998, 1999 Red Hat, Inc.\n+# Copyright (C) 1998, 1999, 2000 Red Hat, Inc.\n \n load_lib \"libgloss.exp\"\n \n@@ -275,6 +275,11 @@ proc libjava_arguments {{mode compile}} {\n #   `xfail-gcj'   compilation from source will fail\n #   `xfail-javac' compilation with javac will fail\n #   `xfail-gcjC'  compilation with gcj -C will fail\n+#   `shouldfail'  compilation from source is supposed to fail\n+#                 This is different from xfail, which marks a known\n+#                 failure that we just havne't fixed.\n+#                 A compilation marked this way should fail with any\n+#                 front end.\n #   `xfail-byte'  compilation from bytecode will fail\n #   `xfail-exec'  exec will fail\n #   `xfail-output' output will be wrong\n@@ -334,14 +339,24 @@ proc test_libjava_from_source { options srcfile compile_args inpfile resultfile\n     }\n     if { $x != \"\" } {\n \tverbose \"target_compile failed: $x\" 2\n+\n+\tif {[info exists opts(shouldfail)]} {\n+\t    pass \"$errname compilation from source\"\n+\t    return\n+\t}\n+\n \tfail \"$errname compilation from source\"\n \tif {[info exists opts(xfail-gcj)] || ! [info exists opts(no-exec)]} {\n \t    setup_xfail \"*-*-*\"\n \t    fail \"$errname execution from source compiled test\"\n \t    setup_xfail \"*-*-*\"\n \t    fail \"$errname output from source compiled test\"\n \t}\n-\treturn;\n+\treturn\n+    }\n+    if {[info exists opts(shouldfail)]} {\n+\tfail \"$errname compilation from source\"\n+\treturn\n     }\n     pass \"$errname compilation from source\"\n \n@@ -409,6 +424,11 @@ proc test_libjava_from_source { options srcfile compile_args inpfile resultfile\n #   `xfail-gcj'   compilation from source will fail\n #   `xfail-javac' compilation with javac will fail\n #   `xfail-gcjC'  compilation with gcj -C will fail\n+#   `shouldfail'  compilation from source is supposed to fail\n+#                 This is different from xfail, which marks a known\n+#                 failure that we just havne't fixed.\n+#                 A compilation marked this way should fail with any\n+#                 front end.\n #   `xfail-byte'  compilation from bytecode will fail\n #   `xfail-exec'  exec will fail\n #   `xfail-output' output will be wrong\n@@ -443,6 +463,10 @@ proc test_libjava_from_javac { options srcfile compile_args inpfile resultfile e\n \tsetup_xfail *-*-*\n     }\n     if {! $bc_ok} then {\n+\tif {[info exists opts(shouldfail)]} {\n+\t    pass \"$errname byte compilation\"\n+\t    return\n+\t}\n \tfail \"$errname byte compilation\"\n \tsetup_xfail \"*-*-*\"\n \tfail \"$errname compilation from bytecode\"\n@@ -454,6 +478,10 @@ proc test_libjava_from_javac { options srcfile compile_args inpfile resultfile e\n \t}\n \treturn\n     }\n+    if {[info exists opts(shouldfail)]} {\n+\tfail \"$errname byte compilation\"\n+\treturn\n+    }\n     pass \"$errname byte compilation\"\n \n     # Find name to use for --main, and name of all class files.\n@@ -607,10 +635,15 @@ proc test_libjava_from_javac { options srcfile compile_args inpfile resultfile e\n # Run the test specified by srcfile and resultfile. compile_args and\n # exec_args are options telling this proc how to work.\n #   `no-link'     don't try to link the program\n-#   `no-exec' don't try to run the test\n+#   `no-exec'     don't try to run the test\n #   `xfail-gcj'   compilation from source will fail\n #   `xfail-javac' compilation with javac will fail\n #   `xfail-gcjC'  compilation with gcj -C will fail\n+#   `shouldfail'  compilation from source is supposed to fail\n+#                 This is different from xfail, which marks a known\n+#                 failure that we just havne't fixed.\n+#                 A compilation marked this way should fail with any\n+#                 front end.\n #   `xfail-byte'  compilation from bytecode will fail\n #   `xfail-exec'  exec will fail\n #   `xfail-output' output will be wrong"}, {"sha": "2ec1fe9ea01400d8a3e2677de07aad02a9df7843", "filename": "libjava/testsuite/libjava.compile/PR124.java", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc159ae11b8797b777f1fb26dfa5dc1ac29274df/libjava%2Ftestsuite%2Flibjava.compile%2FPR124.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc159ae11b8797b777f1fb26dfa5dc1ac29274df/libjava%2Ftestsuite%2Flibjava.compile%2FPR124.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.compile%2FPR124.java?ref=fc159ae11b8797b777f1fb26dfa5dc1ac29274df", "patch": "@@ -0,0 +1,9 @@\n+import java.lang.reflect.*;\n+\n+public class PR124\n+{\n+  public static void main (String[] args)\n+  {\n+    System.out.println (new InvocationTargetException ());\n+  }\n+}"}, {"sha": "e3b083b1fa5c94cc84c33928fde67ff8a4588c2f", "filename": "libjava/testsuite/libjava.compile/PR124.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc159ae11b8797b777f1fb26dfa5dc1ac29274df/libjava%2Ftestsuite%2Flibjava.compile%2FPR124.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc159ae11b8797b777f1fb26dfa5dc1ac29274df/libjava%2Ftestsuite%2Flibjava.compile%2FPR124.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.compile%2FPR124.xfail?ref=fc159ae11b8797b777f1fb26dfa5dc1ac29274df", "patch": "@@ -0,0 +1 @@\n+shouldfail"}]}