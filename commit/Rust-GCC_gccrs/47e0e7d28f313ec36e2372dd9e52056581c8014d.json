{"sha": "47e0e7d28f313ec36e2372dd9e52056581c8014d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdlMGU3ZDI4ZjMxM2VjMzZlMjM3MmRkOWU1MjA1NjU4MWM4MDE0ZA==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2014-11-21T05:32:51Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2014-11-21T05:32:51Z"}, "message": "[NDS32] Create correct CFI info for variadic function arguments.\n\ngcc/\n\t* config/nds32/nds32.c (nds32_emit_stack_push_multiple): Add new\n\tvaarg_p argument and create correct CFI info.\n\t(nds32_expand_prologue): Pass true or false to\n\tnds32_emit_stack_push_multiple function.\n\nFrom-SVN: r217903", "tree": {"sha": "f80b7799c9971d3d47649b328dad55ec9ebcc71f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f80b7799c9971d3d47649b328dad55ec9ebcc71f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47e0e7d28f313ec36e2372dd9e52056581c8014d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47e0e7d28f313ec36e2372dd9e52056581c8014d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47e0e7d28f313ec36e2372dd9e52056581c8014d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47e0e7d28f313ec36e2372dd9e52056581c8014d/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7064dcad59b39f4431d9695145ce4c7c7088d992", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7064dcad59b39f4431d9695145ce4c7c7088d992", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7064dcad59b39f4431d9695145ce4c7c7088d992"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "09d1a264ccf3d264c027347c4e424d52bbd398f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47e0e7d28f313ec36e2372dd9e52056581c8014d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47e0e7d28f313ec36e2372dd9e52056581c8014d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47e0e7d28f313ec36e2372dd9e52056581c8014d", "patch": "@@ -1,3 +1,10 @@\n+2014-11-21  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/nds32.c (nds32_emit_stack_push_multiple): Add new\n+\tvaarg_p argument and create correct CFI info.\n+\t(nds32_expand_prologue): Pass true or false to\n+\tnds32_emit_stack_push_multiple function.\n+\n 2014-11-21  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/nds32.c (nds32_expand_prologue): Set fp_adjust_insn"}, {"sha": "74ea4e6563f8d882ed17c00cce1526e7e9953150", "filename": "gcc/config/nds32/nds32.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47e0e7d28f313ec36e2372dd9e52056581c8014d/gcc%2Fconfig%2Fnds32%2Fnds32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47e0e7d28f313ec36e2372dd9e52056581c8014d/gcc%2Fconfig%2Fnds32%2Fnds32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.c?ref=47e0e7d28f313ec36e2372dd9e52056581c8014d", "patch": "@@ -381,7 +381,7 @@ nds32_compute_stack_frame (void)\n      \"push registers to memory\",\n      \"adjust stack pointer\".  */\n static void\n-nds32_emit_stack_push_multiple (rtx Rb, rtx Re, rtx En4)\n+nds32_emit_stack_push_multiple (rtx Rb, rtx Re, rtx En4, bool vaarg_p)\n {\n   int regno;\n   int extra_count;\n@@ -395,6 +395,7 @@ nds32_emit_stack_push_multiple (rtx Rb, rtx Re, rtx En4)\n   rtx push_rtx;\n   rtx adjust_sp_rtx;\n   rtx parallel_insn;\n+  rtx dwarf;\n \n   /* We need to provide a customized rtx which contains\n      necessary information for data analysis,\n@@ -517,6 +518,15 @@ nds32_emit_stack_push_multiple (rtx Rb, rtx Re, rtx En4)\n      We need to use RTX_FRAME_RELATED_P so that GCC is able to\n      generate CFI (Call Frame Information) stuff.  */\n   RTX_FRAME_RELATED_P (parallel_insn) = 1;\n+\n+  /* Don't use GCC's logic for CFI info if we are generate a push for VAARG\n+     since we will not restore those register at epilogue.  */\n+  if (vaarg_p)\n+    {\n+      dwarf = alloc_reg_note (REG_CFA_ADJUST_CFA,\n+\t\t\t      copy_rtx (adjust_sp_rtx), NULL_RTX);\n+      REG_NOTES (parallel_insn) = dwarf;\n+    }\n }\n \n /* Function to create a parallel rtx pattern\n@@ -2866,7 +2876,7 @@ nds32_expand_prologue (void)\n       Rb = gen_rtx_REG (SImode, cfun->machine->va_args_first_regno);\n       Re = gen_rtx_REG (SImode, cfun->machine->va_args_last_regno);\n       /* No need to push $fp, $gp, or $lp, so use GEN_INT(0).  */\n-      nds32_emit_stack_push_multiple (Rb, Re, GEN_INT (0));\n+      nds32_emit_stack_push_multiple (Rb, Re, GEN_INT (0), true);\n \n       /* We may also need to adjust stack pointer for padding bytes\n          because varargs may cause $sp not 8-byte aligned.  */\n@@ -2915,7 +2925,7 @@ nds32_expand_prologue (void)\n   if (!(REGNO (Rb) == SP_REGNUM && REGNO (Re) == SP_REGNUM && en4_const == 0))\n     {\n       /* Create multiple push instruction rtx.  */\n-      nds32_emit_stack_push_multiple (Rb, Re, GEN_INT (en4_const));\n+      nds32_emit_stack_push_multiple (Rb, Re, GEN_INT (en4_const), false);\n     }\n \n   /* Check frame_pointer_needed to see"}]}