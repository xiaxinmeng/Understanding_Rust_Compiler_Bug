{"sha": "28350fd1bee1e238e9c57b04c0796e1e17b659e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjgzNTBmZDFiZWUxZTIzOGU5YzU3YjA0YzA3OTZlMWUxN2I2NTllNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-10-29T08:48:01Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-10-29T08:48:01Z"}, "message": "[AArch64] Extend SVE reverse permutes to predicates\n\nThis is tested by the main SVE ACLE patches, but since it affects\nthe evpc routines, it seemed worth splitting out.\n\n2019-10-29  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64-sve.md (@aarch64_sve_rev<PRED_ALL:mode>):\n\tNew pattern.\n\t* config/aarch64/aarch64.c (aarch64_evpc_rev_global): Handle all\n\tSVE modes.\n\nFrom-SVN: r277562", "tree": {"sha": "6417b0f9dda58a72ec2169e997d3e8ce76c57507", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6417b0f9dda58a72ec2169e997d3e8ce76c57507"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28350fd1bee1e238e9c57b04c0796e1e17b659e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28350fd1bee1e238e9c57b04c0796e1e17b659e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28350fd1bee1e238e9c57b04c0796e1e17b659e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28350fd1bee1e238e9c57b04c0796e1e17b659e4/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "183bfdafc6f1f98711c5400498a7268cc1441096", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/183bfdafc6f1f98711c5400498a7268cc1441096", "html_url": "https://github.com/Rust-GCC/gccrs/commit/183bfdafc6f1f98711c5400498a7268cc1441096"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "d0c9ac2a8a01fcdcacc60d9a12689f3c10761a75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28350fd1bee1e238e9c57b04c0796e1e17b659e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28350fd1bee1e238e9c57b04c0796e1e17b659e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28350fd1bee1e238e9c57b04c0796e1e17b659e4", "patch": "@@ -1,3 +1,10 @@\n+2019-10-29  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64-sve.md (@aarch64_sve_rev<PRED_ALL:mode>):\n+\tNew pattern.\n+\t* config/aarch64/aarch64.c (aarch64_evpc_rev_global): Handle all\n+\tSVE modes.\n+\n 2019-10-29  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/aarch64/aarch64.md (FFR_REGNUM, FFRT_REGNUM): New constants."}, {"sha": "2d93d72b0de8a6686103b8ec0ecd5149e0970bbc", "filename": "gcc/config/aarch64/aarch64-sve.md", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28350fd1bee1e238e9c57b04c0796e1e17b659e4/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28350fd1bee1e238e9c57b04c0796e1e17b659e4/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md?ref=28350fd1bee1e238e9c57b04c0796e1e17b659e4", "patch": "@@ -111,6 +111,7 @@\n ;; ---- [INT,FP] General permutes\n ;; ---- [INT,FP] Special-purpose unary permutes\n ;; ---- [INT,FP] Special-purpose binary permutes\n+;; ---- [PRED] Special-purpose unary permutes\n ;; ---- [PRED] Special-purpose binary permutes\n ;;\n ;; == Conversions\n@@ -4749,6 +4750,20 @@\n   [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n+;; -------------------------------------------------------------------------\n+;; ---- [PRED] Special-purpose unary permutes\n+;; -------------------------------------------------------------------------\n+;; Includes:\n+;; - REV\n+;; -------------------------------------------------------------------------\n+\n+(define_insn \"@aarch64_sve_rev<mode>\"\n+  [(set (match_operand:PRED_ALL 0 \"register_operand\" \"=Upa\")\n+\t(unspec:PRED_ALL [(match_operand:PRED_ALL 1 \"register_operand\" \"Upa\")]\n+\t\t\t UNSPEC_REV))]\n+  \"TARGET_SVE\"\n+  \"rev\\t%0.<Vetype>, %1.<Vetype>\")\n+\n ;; -------------------------------------------------------------------------\n ;; ---- [PRED] Special-purpose binary permutes\n ;; -------------------------------------------------------------------------"}, {"sha": "3b4290a9204b4b98b305a993198731c28cf6cfd8", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28350fd1bee1e238e9c57b04c0796e1e17b659e4/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28350fd1bee1e238e9c57b04c0796e1e17b659e4/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=28350fd1bee1e238e9c57b04c0796e1e17b659e4", "patch": "@@ -18156,7 +18156,7 @@ aarch64_evpc_rev_global (struct expand_vec_perm_d *d)\n {\n   poly_uint64 nelt = d->perm.length ();\n \n-  if (!d->one_vector_p || d->vec_flags != VEC_SVE_DATA)\n+  if (!d->one_vector_p || d->vec_flags == VEC_ADVSIMD)\n     return false;\n \n   if (!d->perm.series_p (0, 1, nelt - 1, -1))"}]}