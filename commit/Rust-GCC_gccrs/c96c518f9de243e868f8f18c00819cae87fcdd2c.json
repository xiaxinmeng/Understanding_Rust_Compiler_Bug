{"sha": "c96c518f9de243e868f8f18c00819cae87fcdd2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk2YzUxOGY5ZGUyNDNlODY4ZjhmMThjMDA4MTljYWU4N2ZjZGQyYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-20T12:09:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-20T12:09:17Z"}, "message": "[multiple changes]\n\n2015-10-20  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* init.c (__gnat_vxsim_error_handler): Completely disable on\n\tVxWorks-7 as the VSBs used to build gcc do not support vxsim\n\tarchitecture.\n\n2015-10-20  Claire Dross  <dross@adacore.com>\n\n\t* a-cfdlli.ads, a-cfinve.ads, a-cofove.ads (Generic_Sorting): Explicit\n\tSPARK_Mode.\n\t* a-cfhase.ads, a-cforse.ads (Generic_Keys): Explicit SPARK_Mode.\n\n2015-10-20  Tristan Gingold  <gingold@adacore.com>\n\n\t* exp_ch9.adb (Expand_N_Protected_Type_Declaration):\n\tCheck for No_Implicit_Protected_Object_Allocations.\n\t* fe.h (Check_No_Implicit_Task_Alloc,\n\tCheck_No_Implicit_Protected_Alloc): Define and declare.\n\t* restrict.ads, restrict.adb (Check_No_Implicit_Task_Alloc,\n\tCheck_No_Implicit_Protected_Alloc): New procedures to check the\n\trestrictions.\n\t* s-rident.ads (No_Implicit_Task_Allocations)\n\t(No_Implicit_Protected_Object_Allocations): Declare new\n\trestrictions.\n\n2015-10-20  Yannick Moy  <moy@adacore.com>\n\n\t* sem_res.adb (Resolve_Selected_Component): Only set flag\n\twhen component is defined in a variant part.\n\t* sem_util.adb,\n\t* sem_util.ads (Is_Declared_Within_Variant): Promote local query\n\tas publicy visible one for use in Resolve_Selected_Component.\n\n2015-10-20  Philippe Gil  <gil@adacore.com>\n\n\t* g-debpoo.adb: allow instrumented System.Memory to use Debug_Pool\n\tfrom foreign threads.\n\t* g-debpoo.adb (Print_Traceback): NEW print traceback if available\n\tadded to support Stack_Trace_Depth = 0.\n\t(Print_Address): NEW print System.Address without no secondary\n\tstack use (Address_Image uses secondary stack)\n\nFrom-SVN: r229058", "tree": {"sha": "d0a0a7d8410dfab9e8d57ee81f5cd57dfc9c35b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0a0a7d8410dfab9e8d57ee81f5cd57dfc9c35b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c96c518f9de243e868f8f18c00819cae87fcdd2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c96c518f9de243e868f8f18c00819cae87fcdd2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c96c518f9de243e868f8f18c00819cae87fcdd2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c96c518f9de243e868f8f18c00819cae87fcdd2c/comments", "author": null, "committer": null, "parents": [{"sha": "03a72cd36ee1a0d2bb412f7e7353e30512627fe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03a72cd36ee1a0d2bb412f7e7353e30512627fe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03a72cd36ee1a0d2bb412f7e7353e30512627fe3"}], "stats": {"total": 351, "additions": 256, "deletions": 95}, "files": [{"sha": "65e6c4c932de5801ada9d00af56e755d289ecc9b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -1,3 +1,45 @@\n+2015-10-20  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* init.c (__gnat_vxsim_error_handler): Completely disable on\n+\tVxWorks-7 as the VSBs used to build gcc do not support vxsim\n+\tarchitecture.\n+\n+2015-10-20  Claire Dross  <dross@adacore.com>\n+\n+\t* a-cfdlli.ads, a-cfinve.ads, a-cofove.ads (Generic_Sorting): Explicit\n+\tSPARK_Mode.\n+\t* a-cfhase.ads, a-cforse.ads (Generic_Keys): Explicit SPARK_Mode.\n+\n+2015-10-20  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* exp_ch9.adb (Expand_N_Protected_Type_Declaration):\n+\tCheck for No_Implicit_Protected_Object_Allocations.\n+\t* fe.h (Check_No_Implicit_Task_Alloc,\n+\tCheck_No_Implicit_Protected_Alloc): Define and declare.\n+\t* restrict.ads, restrict.adb (Check_No_Implicit_Task_Alloc,\n+\tCheck_No_Implicit_Protected_Alloc): New procedures to check the\n+\trestrictions.\n+\t* s-rident.ads (No_Implicit_Task_Allocations)\n+\t(No_Implicit_Protected_Object_Allocations): Declare new\n+\trestrictions.\n+\n+2015-10-20  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Selected_Component): Only set flag\n+\twhen component is defined in a variant part.\n+\t* sem_util.adb,\n+\t* sem_util.ads (Is_Declared_Within_Variant): Promote local query\n+\tas publicy visible one for use in Resolve_Selected_Component.\n+\n+2015-10-20  Philippe Gil  <gil@adacore.com>\n+\n+\t* g-debpoo.adb: allow instrumented System.Memory to use Debug_Pool\n+\tfrom foreign threads.\n+\t* g-debpoo.adb (Print_Traceback): NEW print traceback if available\n+\tadded to support Stack_Trace_Depth = 0.\n+\t(Print_Address): NEW print System.Address without no secondary\n+\tstack use (Address_Image uses secondary stack)\n+\n 2015-10-20  Yannick Moy  <moy@adacore.com>\n \n \t* exp_ch9.adb (Expand_Entry_Barrier): Default initialize local variable"}, {"sha": "7b19dd65b36ceb1a8e1323dd8f38af66ac94ede5", "filename": "gcc/ada/a-cfdlli.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cfdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cfdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfdlli.adb?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2010-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2010-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -581,7 +581,7 @@ is\n    -- Generic_Sorting --\n    ---------------------\n \n-   package body Generic_Sorting is\n+   package body Generic_Sorting with SPARK_Mode => Off is\n \n       ---------------\n       -- Is_Sorted --"}, {"sha": "e0b96a3bd2af5196e3ebf84b5b55015e2601f8fa", "filename": "gcc/ada/a-cfdlli.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cfdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cfdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfdlli.ads?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -299,7 +299,7 @@ is\n \n    generic\n       with function \"<\" (Left, Right : Element_Type) return Boolean is <>;\n-   package Generic_Sorting is\n+   package Generic_Sorting with SPARK_Mode is\n \n       function Is_Sorted (Container : List) return Boolean with\n         Global => null;"}, {"sha": "ac2ea61adb42c23a9239d7c71c31703749dea956", "filename": "gcc/ada/a-cfhase.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cfhase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cfhase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhase.adb?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2010-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2010-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1387,7 +1387,7 @@ is\n       end;\n    end Vet;\n \n-   package body Generic_Keys is\n+   package body Generic_Keys with SPARK_Mode => Off is\n \n       -----------------------\n       -- Local Subprograms --"}, {"sha": "0c43cf255f382571e6175be71abeeff932aa2d92", "filename": "gcc/ada/a-cfhase.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cfhase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cfhase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhase.ads?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -279,7 +279,7 @@ is\n \n       with function Equivalent_Keys (Left, Right : Key_Type) return Boolean;\n \n-   package Generic_Keys is\n+   package Generic_Keys with SPARK_Mode is\n \n       function Key (Container : Set; Position : Cursor) return Key_Type with\n         Global => null;"}, {"sha": "da23a441c33c9d63f5ac3799d08342d091567016", "filename": "gcc/ada/a-cfinve.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cfinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cfinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfinve.adb?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2014, Free Software Foundation, Inc.           --\n+--          Copyright (C) 2014-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -174,7 +174,7 @@ is\n    -- Generic_Sorting --\n    ---------------------\n \n-   package body Generic_Sorting is\n+   package body Generic_Sorting with SPARK_Mode => Off is\n \n       function \"<\" (X, Y : Holder) return Boolean is (E (X) < E (Y));\n       package Def_Sorting is new Def.Generic_Sorting (\"<\");"}, {"sha": "2fef4af7856f54928c3393f89f6362f1b000431b", "filename": "gcc/ada/a-cfinve.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cfinve.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cfinve.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfinve.ads?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2014, Free Software Foundation, Inc.           --\n+--          Copyright (C) 2014-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -198,7 +198,7 @@ is\n \n    generic\n       with function \"<\" (Left, Right : Element_Type) return Boolean is <>;\n-   package Generic_Sorting is\n+   package Generic_Sorting with SPARK_Mode is\n \n       function Is_Sorted (Container : Vector) return Boolean with\n         Global => null;"}, {"sha": "2b09018ab57e907eedb4e12460211435da22f37e", "filename": "gcc/ada/a-cforse.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cforse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cforse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforse.adb?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2010-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2010-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -674,7 +674,7 @@ is\n    -- Generic_Keys --\n    ------------------\n \n-   package body Generic_Keys is\n+   package body Generic_Keys with SPARK_Mode => Off is\n \n       -----------------------\n       -- Local Subprograms --"}, {"sha": "a3cbae1b8521977d0f4027f64a0c71e4cb6a815d", "filename": "gcc/ada/a-cforse.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cforse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cforse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforse.ads?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -288,7 +288,7 @@ is\n \n       with function \"<\" (Left, Right : Key_Type) return Boolean is <>;\n \n-   package Generic_Keys is\n+   package Generic_Keys with SPARK_Mode is\n \n       function Equivalent_Keys (Left, Right : Key_Type) return Boolean with\n         Global => null;"}, {"sha": "c713bbca033af9e6ad28d46dc5dfa374a91fd572", "filename": "gcc/ada/a-cofove.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cofove.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cofove.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cofove.adb?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2010-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2010-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -355,7 +355,7 @@ is\n    -- Generic_Sorting --\n    ---------------------\n \n-   package body Generic_Sorting is\n+   package body Generic_Sorting with SPARK_Mode => Off is\n \n       ---------------\n       -- Is_Sorted --"}, {"sha": "622454e6ee13112e18c8cb08fe030b4c21940a2b", "filename": "gcc/ada/a-cofove.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cofove.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fa-cofove.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cofove.ads?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -203,7 +203,7 @@ is\n \n    generic\n       with function \"<\" (Left, Right : Element_Type) return Boolean is <>;\n-   package Generic_Sorting is\n+   package Generic_Sorting with SPARK_Mode is\n \n       function Is_Sorted (Container : Vector) return Boolean with\n         Global => null;"}, {"sha": "b0bf000b936192b86f8752f2abbe2d881dab9386", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -9140,6 +9140,8 @@ package body Exp_Ch9 is\n                      --  is OK to miss this check in -gnatc mode.\n \n                      Check_Restriction (No_Implicit_Heap_Allocations, Priv);\n+                     Check_Restriction\n+                       (No_Implicit_Protected_Object_Allocations, Priv);\n \n                   elsif Restriction_Active (No_Implicit_Heap_Allocations) then\n                      if not Discriminated_Size (Defining_Identifier (Priv))\n@@ -9162,6 +9164,34 @@ package body Exp_Ch9 is\n                            & \" restriction No_Implicit_Heap_Allocations??\",\n                            Priv, Prot_Typ);\n                      end if;\n+\n+                  --  Likewise for No_Implicit_Protected_Object_Allocations\n+\n+                  elsif Restriction_Active\n+                    (No_Implicit_Protected_Object_Allocations)\n+                  then\n+                     if not Discriminated_Size (Defining_Identifier (Priv))\n+                     then\n+\n+                        --  Any object of the type will be  non-static.\n+\n+                        Error_Msg_N (\"component has non-static size??\", Priv);\n+                        Error_Msg_NE\n+                          (\"\\creation of protected object of type& will\"\n+                           & \" violate restriction \"\n+                           & \"No_Implicit_Protected_Object_Allocations??\",\n+                           Priv, Prot_Typ);\n+                     else\n+\n+                        --  Object will be non-static if discriminants are.\n+\n+                        Error_Msg_NE\n+                          (\"creation of protected object of type& with \"\n+                           &  \"non-static discriminants  will violate \"\n+                           & \" restriction\"\n+                           & \" No_Implicit_Protected_Object_Allocations??\",\n+                           Priv, Prot_Typ);\n+                     end if;\n                   end if;\n                end if;\n "}, {"sha": "36befa6b5990262ad0e06521cbb6bc628b6f5d29", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -194,11 +194,15 @@ extern Boolean No_Strict_Aliasing_CP;\n \n #define No_Exception_Handlers_Set      restrict__no_exception_handlers_set\n #define Check_No_Implicit_Heap_Alloc   restrict__check_no_implicit_heap_alloc\n+#define Check_No_Implicit_Task_Alloc   restrict__check_no_implicit_task_alloc\n+#define Check_No_Implicit_Protected_Alloc restrict__check_no_implicit_protected_alloc\n #define Check_Elaboration_Code_Allowed restrict__check_elaboration_code_allowed\n #define Check_Implicit_Dynamic_Code_Allowed restrict__check_implicit_dynamic_code_allowed\n \n extern Boolean No_Exception_Handlers_Set   (void);\n extern void Check_No_Implicit_Heap_Alloc   (Node_Id);\n+extern void Check_No_Implicit_Task_Alloc   (Node_Id);\n+extern void Check_No_Implicit_Protected_Alloc (Node_Id);\n extern void Check_Elaboration_Code_Allowed (Node_Id);\n extern void Check_Implicit_Dynamic_Code_Allowed (Node_Id);\n "}, {"sha": "5857094ff2b296c02514f901b29416b540cac84e", "filename": "gcc/ada/g-debpoo.adb", "status": "modified", "additions": 115, "deletions": 62, "changes": 177, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fg-debpoo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fg-debpoo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debpoo.adb?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -302,6 +302,20 @@ package body GNAT.Debug_Pools is\n    --  Wrapper for Put_Line that ensures we always write to stdout instead of\n    --  the current output file defined in GNAT.IO.\n \n+   procedure Print_Traceback\n+     (Output_File : File_Type;\n+      Prefix      : String;\n+      Traceback   : Traceback_Htable_Elem_Ptr);\n+   --  Output Prefix & Traceback & EOL.\n+   --  Print nothing if Traceback is null.\n+\n+   procedure Print_Address (File : File_Type; Addr : Address);\n+   --  Output System.Address without using secondary stack.\n+   --  When System.Memory uses Debug_Pool, secondary stack cannot be used\n+   --  during Allocate calls, as some Allocate calls are done to\n+   --  register/initialize a secondary stack for a foreign thread.\n+   --  During these calls, the secondary stack is not available yet.\n+\n    package Validity is\n       function Is_Handled (Storage : System.Address) return Boolean;\n       pragma Inline (Is_Handled);\n@@ -460,6 +474,18 @@ package body GNAT.Debug_Pools is\n       end if;\n    end Output_File;\n \n+   -------------------\n+   -- Print_Address --\n+   -------------------\n+\n+   procedure Print_Address (File : File_Type; Addr : Address) is\n+      type My_Address is mod Memory_Size;\n+      function To_My_Address is new Ada.Unchecked_Conversion\n+        (System.Address, My_Address);\n+   begin\n+      Put (File, My_Address'Image (To_My_Address (Addr)));\n+   end Print_Address;\n+\n    --------------\n    -- Put_Line --\n    --------------\n@@ -481,7 +507,8 @@ package body GNAT.Debug_Pools is\n       procedure Print (Tr : Tracebacks_Array) is\n       begin\n          for J in Tr'Range loop\n-            Put (File, \"0x\" & Address_Image (PC_For (Tr (J))) & ' ');\n+            Print_Address (File, PC_For (Tr (J)));\n+            Put (File, ' ');\n          end loop;\n          Put (File, ASCII.LF);\n       end Print;\n@@ -964,12 +991,16 @@ package body GNAT.Debug_Pools is\n       if Pool.Low_Level_Traces then\n          Put (Output_File (Pool),\n               \"info: Allocated\"\n-                & Storage_Count'Image (Size_In_Storage_Elements)\n-                & \" bytes at 0x\" & Address_Image (Storage_Address)\n-                & \" (physically:\"\n-                & Storage_Count'Image (Local_Storage_Array'Length)\n-                & \" bytes at 0x\" & Address_Image (P.all'Address)\n-                & \"), at \");\n+              & Storage_Count'Image (Size_In_Storage_Elements)\n+              & \" bytes at \");\n+         Print_Address (Output_File (Pool), Storage_Address);\n+         Put (Output_File (Pool),\n+              \" (physically:\"\n+              & Storage_Count'Image (Local_Storage_Array'Length)\n+              & \" bytes at \");\n+         Print_Address (Output_File (Pool), P.all'Address);\n+         Put (Output_File (Pool),\n+              \"), at \");\n          Put_Line (Output_File (Pool), Pool.Stack_Trace_Depth, null,\n                    Allocate_Label'Address,\n                    Code_Address_For_Deallocate_End);\n@@ -1151,13 +1182,15 @@ package body GNAT.Debug_Pools is\n                Next := Header.Next;\n \n                if Pool.Low_Level_Traces then\n-                  Put_Line\n+                  Put\n                     (Output_File (Pool),\n                      \"info: Freeing physical memory \"\n-                       & Storage_Count'Image\n+                     & Storage_Count'Image\n                        ((abs Header.Block_Size) + Extra_Allocation)\n-                       & \" bytes at 0x\"\n-                       & Address_Image (Header.Allocation_Address));\n+                     & \" bytes at \");\n+                  Print_Address (Output_File (Pool),\n+                                 Header.Allocation_Address);\n+                  Put_Line (Output_File (Pool), \"\");\n                end if;\n \n                if System_Memory_Debug_Pool_Enabled then\n@@ -1343,6 +1376,21 @@ package body GNAT.Debug_Pools is\n \n    end Get_Size;\n \n+   ---------------------\n+   -- Print_Traceback --\n+   ---------------------\n+\n+   procedure Print_Traceback\n+     (Output_File : File_Type;\n+      Prefix      : String;\n+      Traceback   : Traceback_Htable_Elem_Ptr) is\n+   begin\n+      if Traceback /= null then\n+         Put (Output_File, Prefix);\n+         Put_Line (Output_File, 0, Traceback.Traceback);\n+      end if;\n+   end Print_Traceback;\n+\n    ----------------\n    -- Deallocate --\n    ----------------\n@@ -1411,12 +1459,11 @@ package body GNAT.Debug_Pools is\n             Put_Line (Output_File (Pool), Pool.Stack_Trace_Depth, null,\n                       Deallocate_Label'Address,\n                       Code_Address_For_Deallocate_End);\n-            Put (Output_File (Pool), \"   Memory already deallocated at \");\n-            Put_Line\n-               (Output_File (Pool), 0,\n-                To_Traceback (Header.Dealloc_Traceback).Traceback);\n-            Put (Output_File (Pool), \"   Memory was allocated at \");\n-            Put_Line (Output_File (Pool), 0, Header.Alloc_Traceback.Traceback);\n+            Print_Traceback (Output_File (Pool),\n+                             \"   Memory already deallocated at \",\n+                            To_Traceback (Header.Dealloc_Traceback));\n+            Print_Traceback (Output_File (Pool), \"   Memory was allocated at \",\n+                             Header.Alloc_Traceback);\n          end if;\n \n       else\n@@ -1439,16 +1486,20 @@ package body GNAT.Debug_Pools is\n             Put (Output_File (Pool),\n                  \"info: Deallocated\"\n                  & Storage_Count'Image (Header.Block_Size)\n-                 & \" bytes at 0x\" & Address_Image (Storage_Address)\n-                 & \" (physically\"\n+                 & \" bytes at \");\n+            Print_Address (Output_File (Pool), Storage_Address);\n+            Put (Output_File (Pool),\n+                 \" (physically\"\n                  & Storage_Count'Image (Header.Block_Size + Extra_Allocation)\n-                 & \" bytes at 0x\" & Address_Image (Header.Allocation_Address)\n-                 & \"), at \");\n+                 & \" bytes at \");\n+            Print_Address (Output_File (Pool), Header.Allocation_Address);\n+            Put (Output_File (Pool), \"), at \");\n+\n             Put_Line (Output_File (Pool), Pool.Stack_Trace_Depth, null,\n                       Deallocate_Label'Address,\n                       Code_Address_For_Deallocate_End);\n-            Put (Output_File (Pool), \"   Memory was allocated at \");\n-            Put_Line (Output_File (Pool), 0, Header.Alloc_Traceback.Traceback);\n+            Print_Traceback (Output_File (Pool), \"   Memory was allocated at \",\n+                             Header.Alloc_Traceback);\n          end if;\n \n          --  Remove this block from the list of used blocks\n@@ -1594,14 +1645,10 @@ package body GNAT.Debug_Pools is\n                  (Output_File (Pool), Pool.Stack_Trace_Depth, null,\n                   Dereference_Label'Address,\n                   Code_Address_For_Dereference_End);\n-               Put (Output_File (Pool), \"  First deallocation at \");\n-               Put_Line\n-                 (Output_File (Pool),\n-                  0, To_Traceback (Header.Dealloc_Traceback).Traceback);\n-               Put (Output_File (Pool), \"  Initial allocation at \");\n-               Put_Line\n-                 (Output_File (Pool),\n-                  0, Header.Alloc_Traceback.Traceback);\n+               Print_Traceback (Output_File (Pool), \"  First deallocation at \",\n+                                To_Traceback (Header.Dealloc_Traceback));\n+               Print_Traceback (Output_File (Pool), \"  Initial allocation at \",\n+                                Header.Alloc_Traceback);\n             end if;\n          end if;\n       end if;\n@@ -1787,10 +1834,12 @@ package body GNAT.Debug_Pools is\n \n             Put (\"Size: \" & Storage_Count'Image (Header.Block_Size) & \" at: \");\n \n-            for T in Header.Alloc_Traceback.Traceback'Range loop\n-               Put (\"0x\" & Address_Image\n-                      (PC_For (Header.Alloc_Traceback.Traceback (T))) & ' ');\n-            end loop;\n+            if Header.Alloc_Traceback /= null then\n+               for T in Header.Alloc_Traceback.Traceback'Range loop\n+                  Put (\"0x\" & Address_Image\n+                       (PC_For (Header.Alloc_Traceback.Traceback (T))) & ' ');\n+               end loop;\n+            end if;\n \n             Put_Line (\"\");\n             Current := Header.Next;\n@@ -2090,16 +2139,16 @@ package body GNAT.Debug_Pools is\n \n       else\n          Header := Header_Of (Storage);\n-         Put_Line (Standard_Output, \"0x\" & Address_Image (A)\n-                     & \" allocated at:\");\n-         Put_Line (Standard_Output, 0, Header.Alloc_Traceback.Traceback);\n+         Print_Address (Standard_Output, A);\n+         Put_Line (Standard_Output, \" allocated at:\");\n+         Print_Traceback (Standard_Output, \"\", Header.Alloc_Traceback);\n \n          if To_Traceback (Header.Dealloc_Traceback) /= null then\n-            Put_Line (Standard_Output, \"0x\" & Address_Image (A)\n-                      & \" logically freed memory, deallocated at:\");\n-            Put_Line\n-               (Standard_Output, 0,\n-                To_Traceback (Header.Dealloc_Traceback).Traceback);\n+            Print_Address (Standard_Output, A);\n+            Put_Line (Standard_Output,\n+                      \" logically freed memory, deallocated at:\");\n+            Print_Traceback (Standard_Output, \"\",\n+                             To_Traceback (Header.Dealloc_Traceback));\n          end if;\n       end if;\n    end Print_Pool;\n@@ -2180,30 +2229,34 @@ package body GNAT.Debug_Pools is\n \n          Actual_Size := size_t (Header.Block_Size);\n          Tracebk := Header.Alloc_Traceback.Traceback;\n-         Num_Calls := Tracebk'Length;\n \n-         --  (Code taken from memtrack.adb in GNAT's sources)\n+         if Header.Alloc_Traceback /= null then\n+            Num_Calls := Tracebk'Length;\n \n-         --  Logs allocation call using the format:\n+            --  (Code taken from memtrack.adb in GNAT's sources)\n \n-         --   'A' <mem addr> <size chunk> <len backtrace> <addr1> ... <addrn>\n+            --  Logs allocation call using the format:\n \n-         fputc (Character'Pos ('A'), File);\n-         fwrite (Current'Address, Address_Size, 1, File);\n-         fwrite (Actual_Size'Address, size_t'Max_Size_In_Storage_Elements, 1,\n-                 File);\n-         fwrite (Dummy_Time'Address, Duration'Max_Size_In_Storage_Elements, 1,\n-                 File);\n-         fwrite (Num_Calls'Address, Integer'Max_Size_In_Storage_Elements, 1,\n-                 File);\n+            --  'A' <mem addr> <size chunk> <len backtrace> <addr1> ... <addrn>\n \n-         for J in Tracebk'First .. Tracebk'First + Num_Calls - 1 loop\n-            declare\n-               Ptr : System.Address := PC_For (Tracebk (J));\n-            begin\n-               fwrite (Ptr'Address, Address_Size, 1, File);\n-            end;\n-         end loop;\n+            fputc (Character'Pos ('A'), File);\n+            fwrite (Current'Address, Address_Size, 1, File);\n+            fwrite (Actual_Size'Address, size_t'Max_Size_In_Storage_Elements,\n+                    1, File);\n+            fwrite (Dummy_Time'Address, Duration'Max_Size_In_Storage_Elements,\n+                    1, File);\n+            fwrite (Num_Calls'Address, Integer'Max_Size_In_Storage_Elements, 1,\n+                    File);\n+\n+            for J in Tracebk'First .. Tracebk'First + Num_Calls - 1 loop\n+               declare\n+                  Ptr : System.Address := PC_For (Tracebk (J));\n+               begin\n+                  fwrite (Ptr'Address, Address_Size, 1, File);\n+               end;\n+            end loop;\n+\n+         end if;\n \n          Current := Header.Next;\n       end loop;"}, {"sha": "e905a0b73359b15c986f730cf70a04540a32d6eb", "filename": "gcc/ada/init.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -1902,7 +1902,8 @@ __gnat_map_signal (int sig, siginfo_t *si ATTRIBUTE_UNUSED,\n   Raise_From_Signal_Handler (exception, msg);\n }\n \n-#if defined (__i386__) && !defined (VTHREADS)\n+#if defined (__i386__) && !defined (VTHREADS) && _WRS_VXWORKS_MAJOR < 7\n+\n extern void\n __gnat_vxsim_error_handler (int sig, siginfo_t *si, void *sc);\n \n@@ -1939,7 +1940,7 @@ __gnat_error_handler (int sig, siginfo_t *si, void *sc)\n   sigdelset (&mask, sig);\n   sigprocmask (SIG_SETMASK, &mask, NULL);\n \n-#if defined (__ARMEL__) || defined (__PPC__) || defined (__i386__)\n+#if defined (__ARMEL__) || defined (__PPC__) || (defined (__i386__) && _WRS_VXWORKS_MAJOR < 7)\n   /* On certain targets, kernel mode, we process signals through a Call Frame\n      Info trampoline, voiding the need for myriads of fallback_frame_state\n      variants in the ZCX runtime.  We have no simple way to distinguish ZCX\n@@ -2039,7 +2040,7 @@ __gnat_install_handler (void)\n   trap_0_entry->inst_fourth = 0xa1480000;\n #endif\n \n-#if defined (__i386__) && !defined (VTHREADS)\n+#if defined (__i386__) && !defined (VTHREADS) && _WRS_VXWORKS_MAJOR != 7\n   /*  By experiment, found that sysModel () returns the following string\n       prefix for vxsim when running on Linux and Windows.  */\n   model = sysModel ();"}, {"sha": "1dbd3d551add9fe2b90c46ef361a76362d4accc2", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -285,6 +285,24 @@ package body Restrict is\n       Check_Restriction (No_Implicit_Heap_Allocations, N);\n    end Check_No_Implicit_Heap_Alloc;\n \n+   ----------------------------------\n+   -- Check_No_Implicit_Task_Alloc --\n+   ----------------------------------\n+\n+   procedure Check_No_Implicit_Task_Alloc (N : Node_Id) is\n+   begin\n+      Check_Restriction (No_Implicit_Task_Allocations, N);\n+   end Check_No_Implicit_Task_Alloc;\n+\n+   ---------------------------------------\n+   -- Check_No_Implicit_Protected_Alloc --\n+   ---------------------------------------\n+\n+   procedure Check_No_Implicit_Protected_Alloc (N : Node_Id) is\n+   begin\n+      Check_Restriction (No_Implicit_Protected_Object_Allocations, N);\n+   end Check_No_Implicit_Protected_Alloc;\n+\n    -----------------------------------\n    -- Check_Obsolescent_2005_Entity --\n    -----------------------------------"}, {"sha": "48a531d0350df1f4e3ea6d822c7fa972ed01e068", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -337,6 +337,15 @@ package Restrict is\n    --  Equivalent to Check_Restriction (No_Implicit_Heap_Allocations, N).\n    --  Provided for easy use by back end, which has to check this restriction.\n \n+   procedure Check_No_Implicit_Task_Alloc (N : Node_Id);\n+   --  Equivalent to Check_Restriction (No_Implicit_Task_Allocations, N).\n+   --  Provided for easy use by back end, which has to check this restriction.\n+\n+   procedure Check_No_Implicit_Protected_Alloc (N : Node_Id);\n+   --  Equivalent to:\n+   --    Check_Restriction (No_Implicit_Protected_Object_Allocations, N)\n+   --  Provided for easy use by back end, which has to check this restriction.\n+\n    procedure Check_Obsolescent_2005_Entity (E : Entity_Id; N : Node_Id);\n    --  This routine checks if the entity E is one of the obsolescent entries\n    --  in Ada.Characters.Handling in Ada 2005 and No_Obsolescent_Features"}, {"sha": "4fdb6aca420dfb89e186832df989e26b6afab5c2", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -119,6 +119,8 @@ package System.Rident is\n       No_Implicit_Conditionals,                  -- GNAT\n       No_Implicit_Dynamic_Code,                  -- GNAT\n       No_Implicit_Heap_Allocations,              -- (RM D.8(8), H.4(3))\n+      No_Implicit_Task_Allocations,              -- GNAT\n+      No_Implicit_Protected_Object_Allocations,  -- GNAT\n       No_Implicit_Loops,                         -- GNAT\n       No_Initialize_Scalars,                     -- GNAT\n       No_Local_Allocators,                       -- (RM H.4(8))"}, {"sha": "7ff465a805b6af13ffd902d1d9b781b8609b5a5a", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -9883,6 +9883,8 @@ package body Sem_Res is\n         and then Ekind_In (Entity (S), E_Component, E_Discriminant)\n         and then Present (Original_Record_Component (Entity (S)))\n         and then Ekind (Original_Record_Component (Entity (S))) = E_Component\n+        and then\n+          Is_Declared_Within_Variant (Original_Record_Component (Entity (S)))\n         and then not Discriminant_Checks_Suppressed (T)\n         and then not Init_Component\n       then"}, {"sha": "b2f1f103a1e0e57ac8b84c77417ecb4c10744caf", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -11125,27 +11125,24 @@ package body Sem_Util is\n       end case;\n    end Is_Declaration;\n \n+   --------------------------------\n+   -- Is_Declared_Within_Variant --\n+   --------------------------------\n+\n+   function Is_Declared_Within_Variant (Comp : Entity_Id) return Boolean is\n+      Comp_Decl : constant Node_Id := Parent (Comp);\n+      Comp_List : constant Node_Id := Parent (Comp_Decl);\n+   begin\n+      return Nkind (Parent (Comp_List)) = N_Variant;\n+   end Is_Declared_Within_Variant;\n+\n    ----------------------------------------------\n    -- Is_Dependent_Component_Of_Mutable_Object --\n    ----------------------------------------------\n \n    function Is_Dependent_Component_Of_Mutable_Object\n      (Object : Node_Id) return Boolean\n    is\n-      function Is_Declared_Within_Variant (Comp : Entity_Id) return Boolean;\n-      --  Returns True if and only if Comp is declared within a variant part\n-\n-      --------------------------------\n-      -- Is_Declared_Within_Variant --\n-      --------------------------------\n-\n-      function Is_Declared_Within_Variant (Comp : Entity_Id) return Boolean is\n-         Comp_Decl : constant Node_Id   := Parent (Comp);\n-         Comp_List : constant Node_Id   := Parent (Comp_Decl);\n-      begin\n-         return Nkind (Parent (Comp_List)) = N_Variant;\n-      end Is_Declared_Within_Variant;\n-\n       P           : Node_Id;\n       Prefix_Type : Entity_Id;\n       P_Aliased   : Boolean := False;"}, {"sha": "872bdedf388c042a1cb286a6a45c8fd73090a6d4", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c96c518f9de243e868f8f18c00819cae87fcdd2c/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=c96c518f9de243e868f8f18c00819cae87fcdd2c", "patch": "@@ -1262,6 +1262,9 @@ package Sem_Util is\n    function Is_Declaration (N : Node_Id) return Boolean;\n    --  Determine whether arbitrary node N denotes a declaration\n \n+   function Is_Declared_Within_Variant (Comp : Entity_Id) return Boolean;\n+   --  Returns True iff component Comp is declared within a variant part\n+\n    function Is_Dependent_Component_Of_Mutable_Object\n      (Object : Node_Id) return Boolean;\n    --  Returns True if Object is the name of a subcomponent that depends on"}]}