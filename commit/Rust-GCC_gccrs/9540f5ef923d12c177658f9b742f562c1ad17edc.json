{"sha": "9540f5ef923d12c177658f9b742f562c1ad17edc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU0MGY1ZWY5MjNkMTJjMTc3NjU4ZjliNzQyZjU2MmMxYWQxN2VkYw==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2010-01-13T22:16:25Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2010-01-13T22:16:25Z"}, "message": "PR target/pr42542\n\n2010-01-13  Steve Ellcey  <sje@cup.hp.com>\n\n\tPR target/pr42542\n\t* config/ia64/ia64.c (ia64_expand_vecint_compare): Convert GTU to GT\n\tfor V2SI by subtracting (-(INT MAX) - 1) from both operands to make\n\tthem signed.\n\nFrom-SVN: r155870", "tree": {"sha": "158fc70e84b0d2462008c77e210f916e42e5a6b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/158fc70e84b0d2462008c77e210f916e42e5a6b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9540f5ef923d12c177658f9b742f562c1ad17edc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9540f5ef923d12c177658f9b742f562c1ad17edc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9540f5ef923d12c177658f9b742f562c1ad17edc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9540f5ef923d12c177658f9b742f562c1ad17edc/comments", "author": null, "committer": null, "parents": [{"sha": "a5859aaf073f326545266b691f5d74fc0f2f0f11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5859aaf073f326545266b691f5d74fc0f2f0f11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5859aaf073f326545266b691f5d74fc0f2f0f11"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "68edaec671665fa16dc6a86ed0ceae6859f4644c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9540f5ef923d12c177658f9b742f562c1ad17edc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9540f5ef923d12c177658f9b742f562c1ad17edc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9540f5ef923d12c177658f9b742f562c1ad17edc", "patch": "@@ -1,3 +1,10 @@\n+2010-01-13  Steve Ellcey  <sje@cup.hp.com>\n+\n+\tPR target/pr42542\n+\t* config/ia64/ia64.c (ia64_expand_vecint_compare): Convert GTU to GT\n+\tfor V2SI by subtracting (-(INT MAX) - 1) from both operands to make\n+\tthem signed.\n+\n 2010-01-13  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* config/bfin/libgcc-bfin.ver: Regenerate based on current"}, {"sha": "384de6d9854b121f9aa4cb53472163b57d99da01", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 10, "deletions": 17, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9540f5ef923d12c177658f9b742f562c1ad17edc/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9540f5ef923d12c177658f9b742f562c1ad17edc/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=9540f5ef923d12c177658f9b742f562c1ad17edc", "patch": "@@ -1733,25 +1733,18 @@ ia64_expand_vecint_compare (enum rtx_code code, enum machine_mode mode,\n \t  {\n \t    rtx t1, t2, mask;\n \n-\t    /* Perform a parallel modulo subtraction.  */\n-\t    t1 = gen_reg_rtx (V2SImode);\n-\t    emit_insn (gen_subv2si3 (t1, op0, op1));\n-\n-\t    /* Extract the original sign bit of op0.  */\n-\t    mask = GEN_INT (-0x80000000);\n+\t    /* Subtract (-(INT MAX) - 1) from both operands to make\n+\t       them signed.  */\n+\t    mask = GEN_INT (0x80000000);\n \t    mask = gen_rtx_CONST_VECTOR (V2SImode, gen_rtvec (2, mask, mask));\n-\t    mask = force_reg (V2SImode, mask);\n-\t    t2 = gen_reg_rtx (V2SImode);\n-\t    emit_insn (gen_andv2si3 (t2, op0, mask));\n-\n-\t    /* XOR it back into the result of the subtraction.  This results\n-\t       in the sign bit set iff we saw unsigned underflow.  */\n-\t    x = gen_reg_rtx (V2SImode);\n-\t    emit_insn (gen_xorv2si3 (x, t1, t2));\n-\n+\t    mask = force_reg (mode, mask);\n+\t    t1 = gen_reg_rtx (mode);\n+\t    emit_insn (gen_subv2si3 (t1, op0, mask));\n+\t    t2 = gen_reg_rtx (mode);\n+\t    emit_insn (gen_subv2si3 (t2, op1, mask));\n+\t    op0 = t1;\n+\t    op1 = t2;\n \t    code = GT;\n-\t    op0 = x;\n-\t    op1 = CONST0_RTX (mode);\n \t  }\n \t  break;\n "}]}