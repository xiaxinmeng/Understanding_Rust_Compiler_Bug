{"sha": "71c1543c4bbfb0c35fd2fbd776e3ea8d82d56cdc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFjMTU0M2M0YmJmYjBjMzVmZDJmYmQ3NzZlM2VhOGQ4MmQ1NmNkYw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2003-10-31T15:11:37Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2003-10-31T15:11:37Z"}, "message": "postreload.c (reload_combine): Check that REGY doesn't die in an insn of the form (set (regx) (plus (regx)...\n\n* postreload.c (reload_combine): Check that REGY doesn't die in an\ninsn of the form (set (regx) (plus (regx) (regy))), ie REGX != REGY.\n\nFrom-SVN: r73148", "tree": {"sha": "475d98a2798668b0b5903605f003d2129934ebcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/475d98a2798668b0b5903605f003d2129934ebcc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71c1543c4bbfb0c35fd2fbd776e3ea8d82d56cdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71c1543c4bbfb0c35fd2fbd776e3ea8d82d56cdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71c1543c4bbfb0c35fd2fbd776e3ea8d82d56cdc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71c1543c4bbfb0c35fd2fbd776e3ea8d82d56cdc/comments", "author": null, "committer": null, "parents": [{"sha": "4cabf776b3d5764eca3a5e2336fbdc42e2949625", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cabf776b3d5764eca3a5e2336fbdc42e2949625", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cabf776b3d5764eca3a5e2336fbdc42e2949625"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "b6927682a8b52adfe826e0d5da7510f891c07ff5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71c1543c4bbfb0c35fd2fbd776e3ea8d82d56cdc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71c1543c4bbfb0c35fd2fbd776e3ea8d82d56cdc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=71c1543c4bbfb0c35fd2fbd776e3ea8d82d56cdc", "patch": "@@ -1,3 +1,8 @@\n+2003-10-31  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* postreload.c (reload_combine): Check that REGY doesn't die in an\n+\tinsn of the form (set (regx) (plus (regx) (regy))), ie REGX != REGY.\n+\n 2003-10-31  Josef Zlomek  <zlomekj@suse.cz>\n \n \tPR/10239"}, {"sha": "362b50ebc13433f009f4fc62076a09550d0095f6", "filename": "gcc/postreload.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71c1543c4bbfb0c35fd2fbd776e3ea8d82d56cdc/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71c1543c4bbfb0c35fd2fbd776e3ea8d82d56cdc/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=71c1543c4bbfb0c35fd2fbd776e3ea8d82d56cdc", "patch": "@@ -718,7 +718,9 @@ reload_combine (void)\n \t ... (MEM (PLUS (REGZ) (REGY)))... .\n \n \t First, check that we have (set (REGX) (PLUS (REGX) (REGY)))\n-\t and that we know all uses of REGX before it dies.  */\n+\t and that we know all uses of REGX before it dies.  \n+\t Also, explicitly check that REGX != REGY; our life information\n+\t does not yet show whether REGY changes in this insn.  */\n       set = single_set (insn);\n       if (set != NULL_RTX\n \t  && GET_CODE (SET_DEST (set)) == REG\n@@ -728,6 +730,7 @@ reload_combine (void)\n \t  && GET_CODE (SET_SRC (set)) == PLUS\n \t  && GET_CODE (XEXP (SET_SRC (set), 1)) == REG\n \t  && rtx_equal_p (XEXP (SET_SRC (set), 0), SET_DEST (set))\n+\t  && !rtx_equal_p (XEXP (SET_SRC (set), 1), SET_DEST (set))\n \t  && last_label_ruid < reg_state[REGNO (SET_DEST (set))].use_ruid)\n \t{\n \t  rtx reg = SET_DEST (set);"}]}