{"sha": "fe517fb2c9ddd0300d5ecad7658ac8e4554069bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU1MTdmYjJjOWRkZDAzMDBkNWVjYWQ3NjU4YWM4ZTQ1NTQwNjliYg==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "2000-05-10T10:15:13Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-05-10T10:15:13Z"}, "message": "StringBuffer.java (delete): Call arrayCopy() correctly.\n\n2000-05-10  Bryce McKinlay  <bryce@albatross.co.nz>\n\n\t* java/lang/StringBuffer.java (delete): Call arrayCopy() correctly.\n\tAvoid arrayCopy() call where possible. Update `count' _after_ calling\n\tarrayCopy().\n\t(replace): Reimplemented. Fix javadoc.\n\t(reverse): Call ensureCapacity_unsynchronized().\n\t(StringBuffer (String)): Use DEFAULT_CAPACITY.\n\nFrom-SVN: r33819", "tree": {"sha": "2e85bf9857bc68b640764a1a390da11cbd147ccb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e85bf9857bc68b640764a1a390da11cbd147ccb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe517fb2c9ddd0300d5ecad7658ac8e4554069bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe517fb2c9ddd0300d5ecad7658ac8e4554069bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe517fb2c9ddd0300d5ecad7658ac8e4554069bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe517fb2c9ddd0300d5ecad7658ac8e4554069bb/comments", "author": null, "committer": null, "parents": [{"sha": "8f0c0ebd0cada1834717453f1ee22fe941be8f53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f0c0ebd0cada1834717453f1ee22fe941be8f53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f0c0ebd0cada1834717453f1ee22fe941be8f53"}], "stats": {"total": 44, "additions": 35, "deletions": 9}, "files": [{"sha": "dd8abaa6ba9c4479c1f1b85098332f1263868b12", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe517fb2c9ddd0300d5ecad7658ac8e4554069bb/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe517fb2c9ddd0300d5ecad7658ac8e4554069bb/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=fe517fb2c9ddd0300d5ecad7658ac8e4554069bb", "patch": "@@ -1,3 +1,12 @@\n+2000-05-10  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+\t* java/lang/StringBuffer.java (delete): Call arrayCopy() correctly.\n+\tAvoid arrayCopy() call where possible. Update `count' _after_ calling\n+\tarrayCopy().\n+\t(replace): Reimplemented. Fix javadoc.\n+\t(reverse): Call ensureCapacity_unsynchronized().\n+\t(StringBuffer (String)): Use DEFAULT_CAPACITY.\n+\t\n 2000-05-09  Tom Tromey  <tromey@cygnus.com>\n \n \t* java/lang/StringBuffer.java (toString): Don't mark buffer as"}, {"sha": "ed0e84c5395a66f9fe722b01dbe616a1595cab01", "filename": "libjava/java/lang/StringBuffer.java", "status": "modified", "additions": 26, "deletions": 9, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe517fb2c9ddd0300d5ecad7658ac8e4554069bb/libjava%2Fjava%2Flang%2FStringBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe517fb2c9ddd0300d5ecad7658ac8e4554069bb/libjava%2Fjava%2Flang%2FStringBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FStringBuffer.java?ref=fe517fb2c9ddd0300d5ecad7658ac8e4554069bb", "patch": "@@ -227,8 +227,9 @@ public synchronized StringBuffer delete (int start, int end)\n       end = count;\n     // This will unshare if required.\n     ensureCapacity_unsynchronized (count);\n+    if (count - end != 0)\n+      System.arraycopy (value, end, value, start, count - end);\n     count -= (end - start);\n-    System.arraycopy (value, end - 1, value, start, end - start);\n     return this;\n   }\n \n@@ -498,24 +499,40 @@ public int length ()\n     return count;\n   }\n \n-  /** Delete a character from this <code>StringBuffer</code>.\n-   *  @param index the index of the character to delete.\n+  /** Replace characters between index <code>start</code> (inclusive) and \n+   *  <code>end</code> (exclusive) with <code>str</code>. If <code>end</code> \n+   *  is larger than the size of this StringBuffer, all characters after\n+   *  <code>start</code> are replaced.\n+   *  @param start the beginning index of characters to delete (inclusive).\n+   *  @param end the ending index of characters to delete (exclusive).\n+   *  @param str the new <code>String</code> to insert.\n    *  @return this <code>StringBuffer</code>.\n-   *  @exception StringIndexOutOfBoundsException if <code>index</code>\n-   *             is out of bounds.\n    */\n   public synchronized StringBuffer replace (int start, int end, String str)\n   {\n-    // FIXME: this is inefficient.\n-    delete (start, end);\n-    return insert (start, str);\n+    if (start < 0 || start > count || start > end)\n+      throw new StringIndexOutOfBoundsException (start);\n+  \n+    int len = str.length();\n+    // Calculate the difference in 'count' after the replace.\n+    int delta = len - ((end > count ? count : end) - start);\n+    ensureCapacity_unsynchronized (count + delta);\n+        \n+    if (delta != 0 && end < count)\n+      System.arraycopy(value, end, value, end + delta, count - start);\n+    \n+    str.getChars (0, len, value, start);    \n+    count += delta;    \n+    return this;    \n   }\n \n   /** Reverse the characters in this StringBuffer.\n    *  @return this <code>StringBuffer</code>.\n    */\n   public synchronized StringBuffer reverse ()\n   {\n+    // Call ensureCapacity to enforce copy-on-write.\n+    ensureCapacity_unsynchronized (count);\n     for (int i = 0; i < count / 2; ++i)\n       {\n \tchar c = value[i];\n@@ -594,7 +611,7 @@ public StringBuffer (String str)\n     count = str.length();\n     // JLS: The initial capacity of the string buffer is 16 plus the\n     // length of the argument string.\n-    value = new char[count + 16];\n+    value = new char[count + DEFAULT_CAPACITY];\n     str.getChars(0, count, value, 0);\n     shared = false;\n   }"}]}