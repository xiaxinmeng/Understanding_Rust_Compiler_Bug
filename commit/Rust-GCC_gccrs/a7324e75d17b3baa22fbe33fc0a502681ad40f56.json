{"sha": "a7324e75d17b3baa22fbe33fc0a502681ad40f56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTczMjRlNzVkMTdiM2JhYTIyZmJlMzNmYzBhNTAyNjgxYWQ0MGY1Ng==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-01-29T01:29:03Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-01-29T01:29:03Z"}, "message": "re PR c++/13736 (Parser confused on compound casts)\n\n\tPR c++/13736\n\t* parser.c (cp_parser_direct_declarator): Do not prevent\n\tbacktracking inside a parenthesized declarator.\n\t(cp_parser_parameter_declaration): Fix typo in comment.\n\n\tPR c++/13736\n\t* g++.dg/parse/cast2.C (main): New test.\n\nFrom-SVN: r76825", "tree": {"sha": "a749774481323c60ee4d85c6ebcc2a24aceffaf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a749774481323c60ee4d85c6ebcc2a24aceffaf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7324e75d17b3baa22fbe33fc0a502681ad40f56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7324e75d17b3baa22fbe33fc0a502681ad40f56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7324e75d17b3baa22fbe33fc0a502681ad40f56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7324e75d17b3baa22fbe33fc0a502681ad40f56/comments", "author": null, "committer": null, "parents": [{"sha": "d173e68599639b825a1e12884fa35c00a024bee4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d173e68599639b825a1e12884fa35c00a024bee4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d173e68599639b825a1e12884fa35c00a024bee4"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "73451be58df1e336eff99bbbb84347c8c8d73cdc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7324e75d17b3baa22fbe33fc0a502681ad40f56/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7324e75d17b3baa22fbe33fc0a502681ad40f56/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a7324e75d17b3baa22fbe33fc0a502681ad40f56", "patch": "@@ -1,3 +1,10 @@\n+2004-01-28  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/13736\n+\t* parser.c (cp_parser_direct_declarator): Do not prevent\n+\tbacktracking inside a parenthesized declarator.\n+\t(cp_parser_parameter_declaration): Fix typo in comment.\n+\n 2004-01-28  Jan Hubicka  <jh@suse.cz>\n \n \t* semantics.c (expand_body)  Do emit_associated_thunks before"}, {"sha": "7c9be8507eceed853d4d86817b62cfab120eddeb", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7324e75d17b3baa22fbe33fc0a502681ad40f56/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7324e75d17b3baa22fbe33fc0a502681ad40f56/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=a7324e75d17b3baa22fbe33fc0a502681ad40f56", "patch": "@@ -10285,15 +10285,20 @@ cp_parser_direct_declarator (cp_parser* parser,\n \t     declarator.  */\n \t  if (first)\n \t    {\n+\t      bool saved_in_type_id_in_expr_p;\n+\n \t      parser->default_arg_ok_p = saved_default_arg_ok_p;\n \t      parser->in_declarator_p = saved_in_declarator_p;\n \t      \n \t      /* Consume the `('.  */\n \t      cp_lexer_consume_token (parser->lexer);\n \t      /* Parse the nested declarator.  */\n+\t      saved_in_type_id_in_expr_p = parser->in_type_id_in_expr_p;\n+\t      parser->in_type_id_in_expr_p = true;\n \t      declarator \n \t\t= cp_parser_declarator (parser, dcl_kind, ctor_dtor_or_conv_p,\n \t\t\t\t\t/*parenthesized_p=*/NULL);\n+\t      parser->in_type_id_in_expr_p = saved_in_type_id_in_expr_p;\n \t      first = false;\n \t      /* Expect a `)'.  */\n \t      if (!cp_parser_require (parser, CPP_CLOSE_PAREN, \"`)'\"))\n@@ -11048,11 +11053,11 @@ cp_parser_parameter_declaration (cp_parser *parser,\n       if (!parser->in_template_argument_list_p\n \t  /* In an expression context, having seen:\n \n-\t       (int((char *)...\n+\t       (int((char ...\n \n \t     we cannot be sure whether we are looking at a\n-\t     function-type (taking a \"char*\" as a parameter) or a cast\n-\t     of some object of type \"char*\" to \"int\".  */\n+\t     function-type (taking a \"char\" as a parameter) or a cast\n+\t     of some object of type \"char\" to \"int\".  */\n \t  && !parser->in_type_id_in_expr_p\n \t  && cp_parser_parsing_tentatively (parser)\n \t  && !cp_parser_committed_to_tentative_parse (parser)"}, {"sha": "3c0df5151653d3cd49a9d00883bce74c0d17f14b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7324e75d17b3baa22fbe33fc0a502681ad40f56/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7324e75d17b3baa22fbe33fc0a502681ad40f56/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a7324e75d17b3baa22fbe33fc0a502681ad40f56", "patch": "@@ -1,3 +1,8 @@\n+2004-01-28  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/13736\n+\t* g++.dg/parse/cast2.C (main): New test.\n+\n 2004-01-27  James E Wilson  <wilson@specifixinc.com>\n \n \t* objc.dg/encode-2.m (main): New local string.  Set depending on"}, {"sha": "d447bb4baecbf0bdd0342a311ce15e2530702d34", "filename": "gcc/testsuite/g++.dg/parse/cast2.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7324e75d17b3baa22fbe33fc0a502681ad40f56/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcast2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7324e75d17b3baa22fbe33fc0a502681ad40f56/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcast2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcast2.C?ref=a7324e75d17b3baa22fbe33fc0a502681ad40f56", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/13736\n+\n+struct string\n+{\n+  string() {}\n+  string(const string&) {}\n+  string(const char*) {}\n+};\n+\n+int main()\n+{\n+  string s2(string( (const char*)(\"\")));\n+}"}]}