{"sha": "e08932b2a757d7686a449c28012687515d978d31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA4OTMyYjJhNzU3ZDc2ODZhNDQ5YzI4MDEyNjg3NTE1ZDk3OGQzMQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-11-26T10:11:45Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-11-26T10:11:45Z"}, "message": "2003-11-26  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/DatagramPacket.java\n\t(DatagramPacket): Fixed documentation to become legal HTML.\n\nFrom-SVN: r73944", "tree": {"sha": "b6c7843b5283beca927e0f97f178eb4b820ba933", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6c7843b5283beca927e0f97f178eb4b820ba933"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e08932b2a757d7686a449c28012687515d978d31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e08932b2a757d7686a449c28012687515d978d31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e08932b2a757d7686a449c28012687515d978d31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e08932b2a757d7686a449c28012687515d978d31/comments", "author": null, "committer": null, "parents": [{"sha": "bb13f2ffa792692308cb8b13e5d09ef213236cfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb13f2ffa792692308cb8b13e5d09ef213236cfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb13f2ffa792692308cb8b13e5d09ef213236cfb"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "0100cb62bb96881c8195d87500bb9dbe681e35d1", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08932b2a757d7686a449c28012687515d978d31/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08932b2a757d7686a449c28012687515d978d31/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=e08932b2a757d7686a449c28012687515d978d31", "patch": "@@ -1,3 +1,8 @@\n+2003-11-26  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/DatagramPacket.java\n+\t(DatagramPacket): Fixed documentation to become legal HTML.\n+\n 2003-11-25  Michael Koch  <konqueror@gmx.de>\n \n \t* gcj/javaprims.h: Added missing java.util.Currency."}, {"sha": "f9a9cd5aef55874d14dc0c8f15a96b794a7e4450", "filename": "libjava/java/net/DatagramPacket.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08932b2a757d7686a449c28012687515d978d31/libjava%2Fjava%2Fnet%2FDatagramPacket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08932b2a757d7686a449c28012687515d978d31/libjava%2Fjava%2Fnet%2FDatagramPacket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FDatagramPacket.java?ref=e08932b2a757d7686a449c28012687515d978d31", "patch": "@@ -128,7 +128,7 @@ public DatagramPacket(byte[] buf, int offset, int length)\n    * receiving packets from the network.\n    *\n    * @param buf A buffer for storing the returned packet data\n-   * @param length The length of the buffer (must be <= buf.length)\n+   * @param length The length of the buffer (must be &lt;= buf.length)\n    */\n   public DatagramPacket(byte[] buf, int length)\n   {\n@@ -141,7 +141,7 @@ public DatagramPacket(byte[] buf, int length)\n    *\n    * @param buf A buffer containing the data to send\n    * @param offset The offset into the buffer to start writing from.\n-   * @param len The length of the buffer (must be <= buf.length)\n+   * @param len The length of the buffer (must be &lt;= buf.length)\n    * @param addr The address to send to\n    * @param port The port to send to\n    *\n@@ -176,7 +176,7 @@ public DatagramPacket(byte[] buf, int offset, int length,\n    * transmitting packets across the network.\n    *\n    * @param buf A buffer containing the data to send\n-   * @param length The length of the buffer (must be <= buf.length)\n+   * @param length The length of the buffer (must be &lt;= buf.length)\n    * @param address The address to send to\n    * @param port The port to send to\n    */\n@@ -191,7 +191,7 @@ public DatagramPacket(byte[] buf, int length, InetAddress address, int port)\n    *\n    * @param buf A buffer containing the data to send\n    * @param offset The offset into the buffer to start writing from.\n-   * @param length The length of the buffer (must be <= buf.length)\n+   * @param length The length of the buffer (must be &lt;= buf.length)\n    * @param address The socket address to send to\n    *\n    * @exception SocketException If an error occurs\n@@ -212,7 +212,7 @@ public DatagramPacket(byte[] buf, int offset, int length,\n    * transmitting packets across the network.\n    *\n    * @param buf A buffer containing the data to send\n-   * @param length The length of the buffer (must be <= buf.length)\n+   * @param length The length of the buffer (must be &lt;= buf.length)\n    * @param address The socket address to send to\n    *\n    * @exception SocketException If an error occurs"}]}