{"sha": "d7c665bf13c5b9ccde4f189d374281714f2eb64b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdjNjY1YmYxM2M1YjljY2RlNGYxODlkMzc0MjgxNzE0ZjJlYjY0Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-09-24T11:28:09Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-09-24T11:28:09Z"}, "message": "(length_used): New variable.\n\n(walk_attr_value): Set it when we have (eq_attr \"length\" ...).\n(write_const_num_delay_slots): Value is 1 unless LENGTH_USED is set.\n\nFrom-SVN: r2229", "tree": {"sha": "a0569a85ca03bf4edde730fe9d45aa1b1d9b345e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0569a85ca03bf4edde730fe9d45aa1b1d9b345e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7c665bf13c5b9ccde4f189d374281714f2eb64b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7c665bf13c5b9ccde4f189d374281714f2eb64b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7c665bf13c5b9ccde4f189d374281714f2eb64b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7c665bf13c5b9ccde4f189d374281714f2eb64b/comments", "author": null, "committer": null, "parents": [{"sha": "ba12108c7a4d3fdee5ab99920a2c2bdd5d3430e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba12108c7a4d3fdee5ab99920a2c2bdd5d3430e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba12108c7a4d3fdee5ab99920a2c2bdd5d3430e7"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "d8a6dc434902aef5f2a40a6e3294794d21ac9578", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c665bf13c5b9ccde4f189d374281714f2eb64b/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c665bf13c5b9ccde4f189d374281714f2eb64b/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=d7c665bf13c5b9ccde4f189d374281714f2eb64b", "patch": "@@ -248,6 +248,7 @@ static int got_define_asm_attributes;\n static int must_extract;\n static int must_constrain;\n static int address_used;\n+static int length_used;\n static int num_delays;\n static int have_annul_true, have_annul_false;\n static int num_units;\n@@ -4489,6 +4490,7 @@ max_attr_value (exp)\n \t`must_extract'\t  if we need to extract the insn operands\n \t`must_constrain'  if we must compute `which_alternative'\n \t`address_used'\t  if an address expression was used\n+\t`length_used'\t  if an (eq_attr \"length\" ...) was used\n  */\n \n static void\n@@ -4520,6 +4522,8 @@ walk_attr_value (exp)\n     case EQ_ATTR:\n       if (XSTR (exp, 0) == alternative_name)\n \tmust_extract = must_constrain = 1;\n+      else if (strcmp (XSTR (exp, 0), \"length\") == 0)\n+\tlength_used = 1;\n       return;\n \n     case MATCH_DUP:\n@@ -4772,7 +4776,7 @@ write_attr_case (attr, av, write_case_lines, prefix, suffix, indent, known_true)\n       printf (\"default:\\n\");\n     }\n \n-  /* See what we have to do to handle output this value.  */\n+  /* See what we have to do to output this value.  */\n   must_extract = must_constrain = address_used = 0;\n   walk_attr_value (av->value);\n \n@@ -5408,7 +5412,9 @@ fancy_abort ()\n   fatal (\"Internal gcc abort.\");\n }\n \n-/* Determine if an insn has a constant number of delay slots. */\n+/* Determine if an insn has a constant number of delay slots, i.e., the\n+   number of delay slots is not a function of the length of the insn.  */\n+\n void\n write_const_num_delay_slots ()\n {\n@@ -5426,13 +5432,18 @@ write_const_num_delay_slots ()\n       printf (\"    {\\n\");\n \n       for (av = attr->first_value; av; av = av->next)\n-\tif (GET_CODE (av->value) == COND && av->num_insns)\n-\t  {\n-\t    for (ie = av->first_insn; ie; ie = ie->next)\n+\t{\n+\t  length_used = 0;\n+\t  walk_attr_value (av->value);\n+\t  if (length_used)\n+\t    {\n+\t      for (ie = av->first_insn; ie; ie = ie->next)\n \t      if (ie->insn_code != -1)\n \t\tprintf (\"    case %d:\\n\", ie->insn_code);\n-\t    printf (\"      return 0;\\n\");\n-\t  }\n+\t      printf (\"      return 0;\\n\");\n+\t    }\n+\t}\n+\n       printf (\"    default:\\n\");\n       printf (\"      return 1;\\n\");\n       printf (\"    }\\n}\\n\");"}]}