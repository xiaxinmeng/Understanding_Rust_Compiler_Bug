{"sha": "11436beb875ef83f8de7a1d264834a276c6a3a7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE0MzZiZWI4NzVlZjgzZjhkZTdhMWQyNjQ4MzRhMjc2YzZhM2E3YQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-05-21T00:30:57Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-05-21T00:30:57Z"}, "message": "propagation_consistent.cc: Fix vs POD-ness of value_type.\n\n2011-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/21_strings/basic_string/requirements/exception/\n\tpropagation_consistent.cc: Fix vs POD-ness of value_type.\n\t* testsuite/21_strings/basic_string/requirements/exception/\n\tbasic.cc: Likewise.\n\t* testsuite/ext/vstring/requirements/exception/\n\tpropagation_consistent.cc: Likewise.\n\t* testsuite/ext/vstring/requirements/exception/basic.cc: Likewise.\n\nFrom-SVN: r173992", "tree": {"sha": "b1f6bffc80871badc2b02eefd113c39d4528b275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1f6bffc80871badc2b02eefd113c39d4528b275"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11436beb875ef83f8de7a1d264834a276c6a3a7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11436beb875ef83f8de7a1d264834a276c6a3a7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11436beb875ef83f8de7a1d264834a276c6a3a7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11436beb875ef83f8de7a1d264834a276c6a3a7a/comments", "author": null, "committer": null, "parents": [{"sha": "cab841122957ca4be42af022a50c0adc5249e7b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab841122957ca4be42af022a50c0adc5249e7b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cab841122957ca4be42af022a50c0adc5249e7b1"}], "stats": {"total": 45, "additions": 24, "deletions": 21}, "files": [{"sha": "e9fd3ac7c3a82537511222391a84ff198fdea750", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11436beb875ef83f8de7a1d264834a276c6a3a7a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11436beb875ef83f8de7a1d264834a276c6a3a7a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=11436beb875ef83f8de7a1d264834a276c6a3a7a", "patch": "@@ -1,3 +1,13 @@\n+2011-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/21_strings/basic_string/requirements/exception/\n+\tpropagation_consistent.cc: Fix vs POD-ness of value_type.\n+\t* testsuite/21_strings/basic_string/requirements/exception/\n+\tbasic.cc: Likewise.\n+\t* testsuite/ext/vstring/requirements/exception/\n+\tpropagation_consistent.cc: Likewise.\n+\t* testsuite/ext/vstring/requirements/exception/basic.cc: Likewise.\n+\n 2011-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/char_traits.h: Use noexcept throughout."}, {"sha": "987aaedf12df51d93dcdf8266d41d86a779a7621", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/requirements/exception/basic.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11436beb875ef83f8de7a1d264834a276c6a3a7a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11436beb875ef83f8de7a1d264834a276c6a3a7a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fbasic.cc?ref=11436beb875ef83f8de7a1d264834a276c6a3a7a", "patch": "@@ -3,7 +3,7 @@\n \n // 2009-11-10  Benjamin Kosnik  <benjamin@redhat.com>\n \n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -26,7 +26,9 @@\n void\n value()\n {\n-  typedef __gnu_cxx::throw_value_limit value_type;\n+  // NB: Instantiating with __gnu_cxx::throw_value_limit would be illegal,\n+  // isn't a POD type.\n+  typedef char value_type;\n   typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n   typedef std::char_traits<value_type> traits_type;\n   typedef std::basic_string<value_type, traits_type, allocator_type> test_type;"}, {"sha": "dfcda7f2fa92bd63c9285b16f2cf91e87b6617c2", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/requirements/exception/propagation_consistent.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11436beb875ef83f8de7a1d264834a276c6a3a7a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11436beb875ef83f8de7a1d264834a276c6a3a7a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=11436beb875ef83f8de7a1d264834a276c6a3a7a", "patch": "@@ -1,10 +1,9 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-require-cstdint \"\" }\n-// { dg-do run { xfail *-*-* } }\n \n // 2009-09-14  Benjamin Kosnik  <benjamin@redhat.com>\n \n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -27,7 +26,9 @@\n void\n value()\n {\n-  typedef __gnu_cxx::throw_value_limit value_type;\n+  // NB: Instantiating with __gnu_cxx::throw_value_limit would be illegal,\n+  // isn't a POD type.\n+  typedef char value_type;\n   typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n   typedef std::char_traits<value_type> traits_type;\n   typedef std::basic_string<value_type, traits_type, allocator_type> test_type;"}, {"sha": "5bc6f2744c910d9a3b54b0963a49abca28919095", "filename": "libstdc++-v3/testsuite/ext/vstring/requirements/exception/basic.cc", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11436beb875ef83f8de7a1d264834a276c6a3a7a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11436beb875ef83f8de7a1d264834a276c6a3a7a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fbasic.cc?ref=11436beb875ef83f8de7a1d264834a276c6a3a7a", "patch": "@@ -3,7 +3,7 @@\n \n // 2009-11-10  Benjamin Kosnik  <benjamin@redhat.com>\n \n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -26,14 +26,9 @@\n void\n value()\n {\n-#if 1\n+  // NB: Instantiating with __gnu_cxx::throw_value_limit would be illegal,\n+  // isn't a POD type.\n   typedef char value_type;\n-#else\n-  // XXX\n-  // __gnu_cxx::__rc_string_base<>::_Rep::_M_align\u2019 with constructor\n-  // not allowed in union\n-  // typedef __gnu_cxx::throw_value_limit value_type;\n-#endif\n   typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n   typedef std::char_traits<value_type> traits_type;\n "}, {"sha": "e609329ea7da97ab369ba6fb4ed3eb0a9143ff22", "filename": "libstdc++-v3/testsuite/ext/vstring/requirements/exception/propagation_consistent.cc", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11436beb875ef83f8de7a1d264834a276c6a3a7a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11436beb875ef83f8de7a1d264834a276c6a3a7a/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=11436beb875ef83f8de7a1d264834a276c6a3a7a", "patch": "@@ -3,7 +3,7 @@\n \n // 2009-09-14  Benjamin Kosnik  <benjamin@redhat.com>\n \n-// Copyright (C) 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -26,14 +26,9 @@\n void\n value()\n {\n-#if 1\n+  // NB: Instantiating with __gnu_cxx::throw_value_limit would be illegal,\n+  // isn't a POD type.\n   typedef char value_type;\n-#else\n-  // XXX\n-  // __gnu_cxx::__rc_string_base<>::_Rep::_M_align\u2019 with constructor\n-  // not allowed in union\n-  // typedef __gnu_cxx::throw_value_limit value_type;\n-#endif\n   typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n   typedef std::char_traits<value_type> traits_type;\n "}]}