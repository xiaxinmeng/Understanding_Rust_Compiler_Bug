{"sha": "b84d824df416552f65fb541138b49764ad8718df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg0ZDgyNGRmNDE2NTUyZjY1ZmI1NDExMzhiNDk3NjRhZDg3MThkZg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2012-11-20T13:12:16Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2012-11-20T13:12:16Z"}, "message": "v850.c (F): New function.\n\n\t* config/v850/v850.c (F): New function.  Mark the given insn as\n\tbeing frame related.\n\t(v850_all_frame_related): New function.  Mark the given push insn\n\tas being frame related.\n\t(v850_pass_by_reference): When using the RH850 ABI do not pass\n\targuments by reference.\n\t(v850_strict_argument_naming): Delete function.\n\t(v850_function_arg): Use word alignment with the RH850 ABI.\n\t(v850_arg_partial_bytes): Likewise.\n\t(v850_function_arg_advance): Likewise.\n\t(v850_print_operand): Handle CONST_INT and CONST_DOUBLE.\n\t(compute_register_save_size): Use df_regs_ever_live_p.\n\t(increment_stack): Mark prologue adjustments as being frame\n\trelated.\n\t(expand_prologue): Handle pretend args.  Mark insns generated as\n\tbeing frame related.\n\t(expand_epilogue): Likewise.\n\t(v850_return_in_memory): When using the RH850 ABI return\n\taggregates in memory.\n\t(v850_setup_incoming_varargs): Delete function.\n\t(v850_option_override): New function.\n\t(TARGET_DEBUG_UNWIND_INFO): Delete definition.\n\t(TARGET_SETUP_INCOMING_VARARGS): Likewise.\n\t(TARGET_STRICT_ARGUMENT_NAMING): Likewise.\n\t(TARGET_OPTION_OVERRIDE): Define.\n\t* config/v850/v850.h (ASM_SPEC): Pass 8byte-align and gcc-abi\n\toptions on to assembler.\n\t(LINK_SPEC): Likewise.\n\t(TARGET_CPU_CPP_BUILTINS): Define __V850_8BYTE_ALIGN__ and\n\t__V850_GCC_ABI__.\n\t(STACK_BOUNDARY): Set to BIGGEST_ALIGNMENT.\n\t(FUNCTION_BOUNDARY): With the RH850 ABI always 32-bit alignment.\n\t(BIGGEST_ALIGNMENT): With -8byte-align set to 64-bits.\n\t(BIGGEST_FIELD_ALIGNMENT): Likewise.\n\t(enum reg_class): Swap EVEN_REGS and GENERAL_REGS.\n\t(REG_CLASS_NAMES): Likewise.\n\t(REG_CLASS_CONTENTS): Likewise.\n\t(struct cum_arg): Delete anonymous_args field.\n\t(INIT_CUMULATIVE_ARGS): Update.\n\t(PREFERRED_DEBUG): Set to DWARF2_DEBUG.\n\t(DWARF2_FRAME_INFO): Define.\n\t(DWARF2_UNWIND_INFO): Define.\n\t(INCOMING_RETURN_ADDR_RTX): Define.\n\t(DWARF_FRAME_RETURN_COLUMN): Define.\n\t(TARGET_USE_FPU): Define.\n\t* config/v850/v850.md: Replace TARGET_V850E2V3 in floating point\n\tinsns with TARGET_USE_FPU.\n\t(fixuns_truncsfsi2): New pattern.\n\t(fixuns_truncdfsi2): New pattern.\n\t(fix_truncsfdi2): New pattern.\n\t(fixuns_truncsfdi2): New pattern.\n\t(fix_truncdfdi2): New pattern.\n\t(fixuns_truncdfdi2): New pattern.\n\t(unsfloatsisf2): New pattern.\n\t(unsfloatsidf2): New pattern.\n\t(floatdisf2): New pattern.\n\t(unsfloatdisf2): New pattern.\n\t(floatdidf2): New pattern.\n\t(unsfloatdidf2): New pattern.\n\t(fnmasf4): Fix RTl description.\n\t(fnmssf4): Likewise.\n\t* config/v850/v850.opt (mrelax): New option.\n\t(mlong-jumps): Likewise.\n\t(msoft-float): Likewise.\n\t(mhard-float): Likewise.\n\t(mrh850-abi): Likewise.\n\t(mgcc-abi): Likewise.\n\t(m8byte-align): Likewise.\n\t* config/v850/t-v850 (MULTILIB_OPTIONS): Update multilib options.\n\t(MULTILIB_DIRNAMES): Likewise.\n\nFrom-SVN: r193661", "tree": {"sha": "198b86948cadcabe4eac22fa19035f2e16be7042", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/198b86948cadcabe4eac22fa19035f2e16be7042"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b84d824df416552f65fb541138b49764ad8718df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b84d824df416552f65fb541138b49764ad8718df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b84d824df416552f65fb541138b49764ad8718df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b84d824df416552f65fb541138b49764ad8718df/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aef5ffaaabf541543a2b027254bc44490c1dead3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef5ffaaabf541543a2b027254bc44490c1dead3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aef5ffaaabf541543a2b027254bc44490c1dead3"}], "stats": {"total": 707, "additions": 513, "deletions": 194}, "files": [{"sha": "7c07c325d10223f3cdd43f9243f34e8f6b09c5b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b84d824df416552f65fb541138b49764ad8718df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b84d824df416552f65fb541138b49764ad8718df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b84d824df416552f65fb541138b49764ad8718df", "patch": "@@ -2,6 +2,79 @@\n \n \t* config/i386/i386.c (ix86_expand_call): Emit CLOBBERs in VOIDmode.\n \n+2012-11-20  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/v850/v850.c (F): New function.  Mark the given insn as\n+\tbeing frame related.\n+\t(v850_all_frame_related): New function.  Mark the given push insn\n+\tas being frame related.\n+\t(v850_pass_by_reference): When using the RH850 ABI do not pass\n+\targuments by reference.\n+\t(v850_strict_argument_naming): Delete function.\n+\t(v850_function_arg): Use word alignment with the RH850 ABI.\n+\t(v850_arg_partial_bytes): Likewise.\n+\t(v850_function_arg_advance): Likewise.\n+\t(v850_print_operand): Handle CONST_INT and CONST_DOUBLE.\n+\t(compute_register_save_size): Use df_regs_ever_live_p.\n+\t(increment_stack): Mark prologue adjustments as being frame\n+\trelated.\n+\t(expand_prologue): Handle pretend args.  Mark insns generated as\n+\tbeing frame related.\n+\t(expand_epilogue): Likewise.\n+\t(v850_return_in_memory): When using the RH850 ABI return\n+\taggregates in memory.\n+\t(v850_setup_incoming_varargs): Delete function.\n+\t(v850_option_override): New function.\n+\t(TARGET_DEBUG_UNWIND_INFO): Delete definition.\n+\t(TARGET_SETUP_INCOMING_VARARGS): Likewise.\n+\t(TARGET_STRICT_ARGUMENT_NAMING): Likewise.\n+\t(TARGET_OPTION_OVERRIDE): Define.\n+\t* config/v850/v850.h (ASM_SPEC): Pass 8byte-align and gcc-abi\n+\toptions on to assembler.\n+\t(LINK_SPEC): Likewise.\n+\t(TARGET_CPU_CPP_BUILTINS): Define __V850_8BYTE_ALIGN__ and\n+\t__V850_GCC_ABI__.\n+\t(STACK_BOUNDARY): Set to BIGGEST_ALIGNMENT.\n+\t(FUNCTION_BOUNDARY): With the RH850 ABI always 32-bit alignment.\n+\t(BIGGEST_ALIGNMENT): With -8byte-align set to 64-bits.\n+\t(BIGGEST_FIELD_ALIGNMENT): Likewise.\n+\t(enum reg_class): Swap EVEN_REGS and GENERAL_REGS.\n+\t(REG_CLASS_NAMES): Likewise.\n+\t(REG_CLASS_CONTENTS): Likewise.\n+\t(struct cum_arg): Delete anonymous_args field.\n+\t(INIT_CUMULATIVE_ARGS): Update.\n+\t(PREFERRED_DEBUG): Set to DWARF2_DEBUG.\n+\t(DWARF2_FRAME_INFO): Define.\n+\t(DWARF2_UNWIND_INFO): Define.\n+\t(INCOMING_RETURN_ADDR_RTX): Define.\n+\t(DWARF_FRAME_RETURN_COLUMN): Define.\n+\t(TARGET_USE_FPU): Define.\n+\t* config/v850/v850.md: Replace TARGET_V850E2V3 in floating point\n+\tinsns with TARGET_USE_FPU.\n+\t(fixuns_truncsfsi2): New pattern.\n+\t(fixuns_truncdfsi2): New pattern.\n+\t(fix_truncsfdi2): New pattern.\n+\t(fixuns_truncsfdi2): New pattern.\n+\t(fix_truncdfdi2): New pattern.\n+\t(fixuns_truncdfdi2): New pattern.\n+\t(unsfloatsisf2): New pattern.\n+\t(unsfloatsidf2): New pattern.\n+\t(floatdisf2): New pattern.\n+\t(unsfloatdisf2): New pattern.\n+\t(floatdidf2): New pattern.\n+\t(unsfloatdidf2): New pattern.\n+\t(fnmasf4): Fix RTl description.\n+\t(fnmssf4): Likewise.\n+\t* config/v850/v850.opt (mrelax): New option.\n+\t(mlong-jumps): Likewise.\n+\t(msoft-float): Likewise.\n+\t(mhard-float): Likewise.\n+\t(mrh850-abi): Likewise.\n+\t(mgcc-abi): Likewise.\n+\t(m8byte-align): Likewise.\n+\t* config/v850/t-v850 (MULTILIB_OPTIONS): Update multilib options.\n+\t(MULTILIB_DIRNAMES): Likewise.\n+\n 2012-11-20  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rx/rx.c (rx_function_arg_boundary): When using the RX ABI"}, {"sha": "33409d0d0f0f0f422112a2f0196642af92c1308d", "filename": "gcc/config/v850/t-v850", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b84d824df416552f65fb541138b49764ad8718df/gcc%2Fconfig%2Fv850%2Ft-v850", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b84d824df416552f65fb541138b49764ad8718df/gcc%2Fconfig%2Fv850%2Ft-v850", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Ft-v850?ref=b84d824df416552f65fb541138b49764ad8718df", "patch": "@@ -1,5 +1,5 @@\n # Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2008, 2009, 2010,\n-# 2011 Free Software Foundation, Inc.\n+# 2011, 2012 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -18,9 +18,8 @@\n # <http://www.gnu.org/licenses/>.\n \n # Create target-specific versions of the libraries\n-MULTILIB_OPTIONS  = mv850/mv850e/mv850e2/mv850e2v3\n-MULTILIB_DIRNAMES = v850 v850e v850e2 v850e2v3\n-MULTILIB_MATCHES  = mv850e=mv850e1 \n+MULTILIB_OPTIONS  = m8byte-align mgcc-abi msoft-float\n+MULTILIB_DIRNAMES =  8byte        gcc-abi  soft-float\n \n TCFLAGS = -mno-app-regs -msmall-sld -Wa,-mwarn-signed-overflow -Wa,-mwarn-unsigned-overflow\n "}, {"sha": "e1570c3261b1ff04aa6d11602da93b77655a8c53", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 174, "deletions": 83, "changes": 257, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b84d824df416552f65fb541138b49764ad8718df/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b84d824df416552f65fb541138b49764ad8718df/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=b84d824df416552f65fb541138b49764ad8718df", "patch": "@@ -72,6 +72,35 @@ static GTY(()) section * tdata_section;\n static GTY(()) section * zdata_section;\n static GTY(()) section * zbss_section;\n \f\n+/* We use this to wrap all emitted insns in the prologue.  */\n+static rtx\n+F (rtx x)\n+{\n+  if (GET_CODE (x) != CLOBBER)\n+    RTX_FRAME_RELATED_P (x) = 1;\n+  return x;\n+}\n+\n+/* Mark all the subexpressions of the PARALLEL rtx PAR as\n+   frame-related.  Return PAR.\n+\n+   dwarf2out.c:dwarf2out_frame_debug_expr ignores sub-expressions of a\n+   PARALLEL rtx other than the first if they do not have the\n+   FRAME_RELATED flag set on them.  */\n+\n+static rtx\n+v850_all_frame_related (rtx par)\n+{\n+  int len = XVECLEN (par, 0);\n+  int i;\n+\n+  gcc_assert (GET_CODE (par) == PARALLEL);\n+  for (i = 0; i < len; i++)\n+    F (XVECEXP (par, 0, i));\n+\n+  return par;\n+}\n+\n /* Handle the TARGET_PASS_BY_REFERENCE target hook.\n    Specify whether to pass the argument by reference.  */\n \n@@ -82,6 +111,9 @@ v850_pass_by_reference (cumulative_args_t cum ATTRIBUTE_UNUSED,\n {\n   unsigned HOST_WIDE_INT size;\n \n+  if (!TARGET_GCC_ABI)\n+    return 0;\n+\n   if (type)\n     size = int_size_in_bytes (type);\n   else\n@@ -90,14 +122,6 @@ v850_pass_by_reference (cumulative_args_t cum ATTRIBUTE_UNUSED,\n   return size > 8;\n }\n \n-/* Implementing the Varargs Macros.  */\n-\n-static bool\n-v850_strict_argument_naming (cumulative_args_t ca ATTRIBUTE_UNUSED)\n-{\n-  return !TARGET_GHS ? true : false;\n-}\n-\n /* Return an RTX to represent where an argument with mode MODE\n    and type TYPE will be passed to a function.  If the result\n    is NULL_RTX, the argument will be pushed.  */\n@@ -127,7 +151,9 @@ v850_function_arg (cumulative_args_t cum_v, enum machine_mode mode,\n       return NULL_RTX;\n     }\n \n-  if (size <= UNITS_PER_WORD && type)\n+  if (!TARGET_GCC_ABI)\n+    align = UNITS_PER_WORD;\n+  else if (size <= UNITS_PER_WORD && type)\n     align = TYPE_ALIGN (type) / BITS_PER_UNIT;\n   else\n     align = size;\n@@ -171,7 +197,7 @@ v850_arg_partial_bytes (cumulative_args_t cum_v, enum machine_mode mode,\n   CUMULATIVE_ARGS *cum = get_cumulative_args (cum_v);\n   int size, align;\n \n-  if (TARGET_GHS && !named)\n+  if (!named)\n     return 0;\n \n   if (mode == BLKmode)\n@@ -182,7 +208,9 @@ v850_arg_partial_bytes (cumulative_args_t cum_v, enum machine_mode mode,\n   if (size < 1)\n     size = 1;\n   \n-  if (type)\n+  if (!TARGET_GCC_ABI)\n+    align = UNITS_PER_WORD;\n+  else if (type)\n     align = TYPE_ALIGN (type) / BITS_PER_UNIT;\n   else\n     align = size;\n@@ -212,12 +240,18 @@ v850_function_arg_advance (cumulative_args_t cum_v, enum machine_mode mode,\n {\n   CUMULATIVE_ARGS *cum = get_cumulative_args (cum_v);\n \n-  cum->nbytes += (((type && int_size_in_bytes (type) > 8\n-\t\t    ? GET_MODE_SIZE (Pmode)\n-\t\t    : (mode != BLKmode\n-\t\t       ? GET_MODE_SIZE (mode)\n-\t\t       : int_size_in_bytes (type))) + UNITS_PER_WORD - 1)\n-\t\t  & -UNITS_PER_WORD);\n+  if (!TARGET_GCC_ABI)\n+    cum->nbytes += (((mode != BLKmode\n+\t\t      ? GET_MODE_SIZE (mode)\n+\t\t      : int_size_in_bytes (type)) + UNITS_PER_WORD - 1)\n+\t\t    & -UNITS_PER_WORD);\n+  else\n+    cum->nbytes += (((type && int_size_in_bytes (type) > 8\n+\t\t      ? GET_MODE_SIZE (Pmode)\n+\t\t      : (mode != BLKmode\n+\t\t\t ? GET_MODE_SIZE (mode)\n+\t\t\t : int_size_in_bytes (type))) + UNITS_PER_WORD - 1)\n+\t\t    & -UNITS_PER_WORD);\n }\n \n /* Return the high and low words of a CONST_DOUBLE */\n@@ -517,8 +551,25 @@ v850_print_operand (FILE * file, rtx x, int code)\n \t    fprintf (file, \"[r0]\");\n \t  break;\n \t  \n-\tdefault:\n+\tcase CONST_INT:\n+\t  {\n+\t    unsigned HOST_WIDE_INT v = INTVAL (x);\n+\n+\t    /* Trickery to avoid problems with shifting\n+\t       32-bits at a time on a 32-bit host.  */\n+\t    v = v >> 16;\n+\t    v = v >> 16;\t  \n+\t    fprintf (file, HOST_WIDE_INT_PRINT_HEX, v);\n+\t    break;\n+\t  }\n+\n+\tcase CONST_DOUBLE:\n+\t  fprintf (file, HOST_WIDE_INT_PRINT_HEX, CONST_DOUBLE_HIGH (x));\n \t  break;\n+\n+\tdefault:\n+\t  debug_rtx (x);\n+\t  gcc_unreachable ();\n \t}\n       break;\n     case 'S':\n@@ -583,6 +634,10 @@ v850_print_operand (FILE * file, rtx x, int code)\n \tcase SUBREG:\n \t  fputs (reg_names[subreg_regno (x)], file);\n \t  break;\n+\tcase CONST_DOUBLE:\n+\t  fprintf (file, HOST_WIDE_INT_PRINT_HEX, CONST_DOUBLE_LOW (x));\n+\t  break;\n+\t  \n \tcase CONST_INT:\n \tcase SYMBOL_REF:\n \tcase CONST:\n@@ -895,7 +950,7 @@ v850_float_nz_comparison_operator (rtx op, enum machine_mode mode)\n   if (GET_MODE (XEXP (op, 0)) == CC_FPU_NEmode)\n     return code == NE;\n \n-  return 0;\n+  return code == GT || code == GE || code == NE;\n }\n \n enum machine_mode\n@@ -1287,7 +1342,7 @@ v850_reorg (void)\n \tcase INSN:\n \t  pattern = single_set (insn);\n \n-\t  /* See if there are any memory references we can shorten */\n+\t  /* See if there are any memory references we can shorten.  */\n \t  if (pattern)\n \t    {\n \t      rtx src = SET_SRC (pattern);\n@@ -1301,11 +1356,11 @@ v850_reorg (void)\n \t      if (GET_CODE (dest) == SUBREG\n \t\t  && (GET_CODE (SUBREG_REG (dest)) == MEM\n \t\t      || GET_CODE (SUBREG_REG (dest)) == REG))\n-\t\talter_subreg (&dest, true);\n+\t\talter_subreg (&dest, false);\n \t      if (GET_CODE (src) == SUBREG\n \t\t  && (GET_CODE (SUBREG_REG (src)) == MEM\n \t\t      || GET_CODE (SUBREG_REG (src)) == REG))\n-\t\talter_subreg (&src, true);\n+\t\talter_subreg (&src, false);\n \n \t      if (GET_CODE (dest) == MEM && GET_CODE (src) == MEM)\n \t\tmem = NULL_RTX;\n@@ -1448,13 +1503,6 @@ compute_register_save_size (long * p_reg_saved)\n   int call_p = df_regs_ever_live_p (LINK_POINTER_REGNUM);\n   long reg_saved = 0;\n \n-  /* Always save the link pointer - we cannot rely upon df_regs_ever_live_p.  */\n-  if (!call_p)\n-    {\n-      df_set_regs_ever_live (LINK_POINTER_REGNUM, true);\n-      call_p = 1;\n-    }\n-\n   /* Count space for the register saves.  */\n   if (interrupt_handler)\n     {\n@@ -1547,6 +1595,34 @@ compute_register_save_size (long * p_reg_saved)\n   return size;\n }\n \n+/* Typical stack layout should looks like this after the function's prologue:\n+\n+                            |    |\n+                              --                       ^\n+                            |    | \\                   |\n+                            |    |   arguments saved   | Increasing\n+                            |    |   on the stack      |  addresses\n+    PARENT   arg pointer -> |    | /\n+  -------------------------- ---- -------------------\n+                            |    | - space for argument split between regs & stack\n+\t\t\t      --\n+    CHILD                   |    | \\    <-- (return address here)\n+                            |    |   other call\n+                            |    |   saved registers\n+                            |    | /\n+                              --\n+        frame pointer ->    |    | \\             ___\n+                            |    |   local        |\n+                            |    |   variables    |f\n+                            |    | /              |r\n+                              --                  |a\n+                            |    | \\              |m\n+                            |    |   outgoing     |e\n+                            |    |   arguments    |    | Decreasing\n+    (hard) frame pointer    |    |  /             |    |  addresses\n+       and stack pointer -> |    | /             _|_   |\n+  -------------------------- ---- ------------------   V */\n+\n int\n compute_frame_size (int size, long * p_reg_saved)\n {\n@@ -1590,7 +1666,7 @@ use_prolog_function (int num_save, int frame_size)\n }\n \n static void\n-increment_stack (unsigned int amount)\n+increment_stack (signed int amount, bool in_prologue)\n {\n   rtx inc;\n \n@@ -1603,11 +1679,15 @@ increment_stack (unsigned int amount)\n     {\n       rtx reg = gen_rtx_REG (Pmode, 12);\n \n-      emit_move_insn (reg, inc);\n+      inc = emit_move_insn (reg, inc);\n+      if (in_prologue)\n+\tF (inc);\n       inc = reg;\n     }\n \n-  emit_insn (gen_addsi3 (stack_pointer_rtx, stack_pointer_rtx, inc));\n+  inc = emit_insn (gen_addsi3 (stack_pointer_rtx, stack_pointer_rtx, inc));\n+  if (in_prologue)\n+    F (inc);\n }\n \n void\n@@ -1641,6 +1721,10 @@ expand_prologue (void)\n       \n       if (((1L << LINK_POINTER_REGNUM) & reg_saved) != 0)\n \tactual_fsize -= INTERRUPT_ALL_SAVE_SIZE;\n+\n+      /* Interrupt functions are not passed arguments, so no need to\n+\t allocate space for split structure arguments.  */\n+      gcc_assert (crtl->args.pretend_args_size == 0);\n     }\n \n   /* Identify all of the saved registers.  */\n@@ -1651,10 +1735,25 @@ expand_prologue (void)\n \tsave_regs[num_save++] = gen_rtx_REG (Pmode, i);\n     }\n \n+  if (crtl->args.pretend_args_size)\n+    {\n+      if (num_save == 0)\n+\t{\n+\t  increment_stack (- (actual_fsize + crtl->args.pretend_args_size), true);\n+\t  actual_fsize = 0;\n+\t}\n+      else\n+\tincrement_stack (- crtl->args.pretend_args_size, true);\n+    }\n+\n   /* See if we have an insn that allocates stack space and saves the particular\n-     registers we want to.  */\n+     registers we want to.  Note that the helpers won't\n+     allocate additional space for registers GCC saves to complete a\n+     \"split\" structure argument.  */\n   save_all = NULL_RTX;\n-  if (TARGET_PROLOG_FUNCTION && num_save > 0)\n+  if (TARGET_PROLOG_FUNCTION\n+      && !crtl->args.pretend_args_size\n+      && num_save > 0)\n     {\n       if (use_prolog_function (num_save, actual_fsize))\n \t{\n@@ -1694,6 +1793,8 @@ expand_prologue (void)\n \t\t  = gen_rtx_CLOBBER (VOIDmode, gen_rtx_REG (Pmode, 11));\n \t    }\n \n+\t  v850_all_frame_related (save_all);\n+\n \t  code = recog (save_all, NULL_RTX, NULL);\n \t  if (code >= 0)\n \t    {\n@@ -1734,26 +1835,26 @@ expand_prologue (void)\n \t  offset = init_stack_alloc - 4;\n \t  \n \t  if (init_stack_alloc)\n-\t    increment_stack (- (signed) init_stack_alloc);\n+\t    increment_stack (- (signed) init_stack_alloc, true);\n \t  \n \t  /* Save the return pointer first.  */\n \t  if (num_save > 0 && REGNO (save_regs[num_save-1]) == LINK_POINTER_REGNUM)\n \t    {\n-\t      emit_move_insn (gen_rtx_MEM (SImode,\n-\t\t\t\t\t   plus_constant (Pmode,\n-\t\t\t\t\t\t\t  stack_pointer_rtx,\n-\t\t\t\t\t\t\t  offset)),\n-\t\t\t      save_regs[--num_save]);\n+\t      F (emit_move_insn (gen_rtx_MEM (SImode,\n+\t\t\t\t\t      plus_constant (Pmode,\n+\t\t\t\t\t\t\t     stack_pointer_rtx,\n+\t\t\t\t\t\t\t     offset)),\n+\t\t\t\t save_regs[--num_save]));\n \t      offset -= 4;\n \t    }\n \t  \n \t  for (i = 0; i < num_save; i++)\n \t    {\n-\t      emit_move_insn (gen_rtx_MEM (SImode,\n-\t\t\t\t\t   plus_constant (Pmode,\n-\t\t\t\t\t\t\t  stack_pointer_rtx,\n-\t\t\t\t\t\t\t  offset)),\n-\t\t\t      save_regs[i]);\n+\t      F (emit_move_insn (gen_rtx_MEM (SImode,\n+\t\t\t\t\t      plus_constant (Pmode,\n+\t\t\t\t\t\t\t     stack_pointer_rtx,\n+\t\t\t\t\t\t\t     offset)),\n+\t\t\t\t save_regs[i]));\n \t      offset -= 4;\n \t    }\n \t}\n@@ -1763,15 +1864,11 @@ expand_prologue (void)\n      > 32K or we just called a function to save the registers and needed more\n      stack.  */\n   if (actual_fsize > init_stack_alloc)\n-    {\n-      int diff = actual_fsize - init_stack_alloc;\n-\n-      increment_stack (- diff);\n-    }\n+    increment_stack (init_stack_alloc - actual_fsize, true);\n \n   /* If we need a frame pointer, set it up now.  */\n   if (frame_pointer_needed)\n-    emit_move_insn (hard_frame_pointer_rtx, stack_pointer_rtx);\n+    F (emit_move_insn (hard_frame_pointer_rtx, stack_pointer_rtx));\n }\n \f\n \n@@ -1814,6 +1911,7 @@ expand_epilogue (void)\n \n   if (TARGET_PROLOG_FUNCTION\n       && num_restore > 0\n+      && !crtl->args.pretend_args_size\n       && !interrupt_handler)\n     {\n       int alloc_stack = (4 * num_restore);\n@@ -1851,7 +1949,7 @@ expand_epilogue (void)\n \t      rtx insn;\n \n \t      actual_fsize -= alloc_stack;\n-\t      increment_stack (actual_fsize);\n+\t      increment_stack (actual_fsize, false);\n \n \t      insn = emit_jump_insn (restore_all);\n \t      INSN_CODE (insn) = code;\n@@ -1877,7 +1975,7 @@ expand_epilogue (void)\n \n       /* Deallocate the rest of the stack if it is > 32K.  */\n       if ((unsigned int) actual_fsize > init_stack_free)\n-\tincrement_stack (actual_fsize - init_stack_free);\n+\tincrement_stack (actual_fsize - init_stack_free, false);\n \n       /* Special case interrupt functions that save all registers\n \t for a call.  */\n@@ -1918,7 +2016,8 @@ expand_epilogue (void)\n \t    }\n \n \t  /* Cut back the remainder of the stack.  */\n-\t  increment_stack (init_stack_free);\n+\t  increment_stack (init_stack_free + crtl->args.pretend_args_size,\n+\t\t\t   false);\n \t}\n \n       /* And return or use reti for interrupt handlers.  */\n@@ -2931,7 +3030,11 @@ static bool\n v850_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)\n {\n   /* Return values > 8 bytes in length in memory.  */\n-  return int_size_in_bytes (type) > 8 || TYPE_MODE (type) == BLKmode;\n+  return int_size_in_bytes (type) > 8\n+    || TYPE_MODE (type) == BLKmode\n+    /* With the rh850 ABI return all aggregates in memory.  */\n+    || ((! TARGET_GCC_ABI) && AGGREGATE_TYPE_P (type))\n+    ;\n }\n \n /* Worker function for TARGET_FUNCTION_VALUE.  */\n@@ -2945,18 +3048,6 @@ v850_function_value (const_tree valtype,\n }\n \n \f\n-/* Worker function for TARGET_SETUP_INCOMING_VARARGS.  */\n-\n-static void\n-v850_setup_incoming_varargs (cumulative_args_t ca,\n-\t\t\t     enum machine_mode mode ATTRIBUTE_UNUSED,\n-\t\t\t     tree type ATTRIBUTE_UNUSED,\n-\t\t\t     int *pretend_arg_size ATTRIBUTE_UNUSED,\n-\t\t\t     int second_time ATTRIBUTE_UNUSED)\n-{\n-  get_cumulative_args (ca)->anonymous_args = (!TARGET_GHS ? 1 : 0);\n-}\n-\n /* Worker function for TARGET_CAN_ELIMINATE.  */\n \n static bool\n@@ -3067,29 +3158,35 @@ static const struct attribute_spec v850_attribute_table[] =\n   { NULL,                0, 0, false, false, false, NULL, false }\n };\n \f\n-static enum unwind_info_type\n-v850_debug_unwind_info (void)\n+\n+static void\n+v850_option_override (void)\n {\n-  return UI_NONE;\n-}\n+  if (flag_exceptions || flag_non_call_exceptions)\n+    flag_omit_frame_pointer = 0;\n \n-#undef  TARGET_DEBUG_UNWIND_INFO\n-#define TARGET_DEBUG_UNWIND_INFO\tv850_debug_unwind_info\n+  /* The RH850 ABI does not (currently) support the use of the CALLT instruction.  */\n+  if (! TARGET_GCC_ABI)\n+    target_flags |= MASK_DISABLE_CALLT;\n+}\n \f\n /* Initialize the GCC target structure.  */\n \n+#undef  TARGET_OPTION_OVERRIDE\n+#define TARGET_OPTION_OVERRIDE\t\tv850_option_override\n+\n #undef  TARGET_MEMORY_MOVE_COST\n-#define TARGET_MEMORY_MOVE_COST v850_memory_move_cost\n+#define TARGET_MEMORY_MOVE_COST \tv850_memory_move_cost\n \n #undef  TARGET_ASM_ALIGNED_HI_OP\n #define TARGET_ASM_ALIGNED_HI_OP \"\\t.hword\\t\"\n \n #undef  TARGET_PRINT_OPERAND\n-#define TARGET_PRINT_OPERAND v850_print_operand\n+#define TARGET_PRINT_OPERAND \t\tv850_print_operand\n #undef  TARGET_PRINT_OPERAND_ADDRESS\n-#define TARGET_PRINT_OPERAND_ADDRESS v850_print_operand_address\n+#define TARGET_PRINT_OPERAND_ADDRESS \t\tv850_print_operand_address\n #undef  TARGET_PRINT_OPERAND_PUNCT_VALID_P\n-#define TARGET_PRINT_OPERAND_PUNCT_VALID_P v850_print_operand_punct_valid_p\n+#define TARGET_PRINT_OPERAND_PUNCT_VALID_P \tv850_print_operand_punct_valid_p\n \n #undef TARGET_ASM_OUTPUT_ADDR_CONST_EXTRA\n #define TARGET_ASM_OUTPUT_ADDR_CONST_EXTRA v850_output_addr_const_extra\n@@ -3143,9 +3240,6 @@ v850_debug_unwind_info (void)\n #undef  TARGET_CALLEE_COPIES\n #define TARGET_CALLEE_COPIES hook_bool_CUMULATIVE_ARGS_mode_tree_bool_true\n \n-#undef  TARGET_SETUP_INCOMING_VARARGS\n-#define TARGET_SETUP_INCOMING_VARARGS v850_setup_incoming_varargs\n-\n #undef  TARGET_ARG_PARTIAL_BYTES\n #define TARGET_ARG_PARTIAL_BYTES v850_arg_partial_bytes\n \n@@ -3166,9 +3260,6 @@ v850_debug_unwind_info (void)\n #undef  TARGET_TRAMPOLINE_INIT\n #define TARGET_TRAMPOLINE_INIT v850_trampoline_init\n \n-#undef  TARGET_STRICT_ARGUMENT_NAMING\n-#define TARGET_STRICT_ARGUMENT_NAMING v850_strict_argument_naming\n-\n #undef  TARGET_LEGITIMATE_CONSTANT_P\n #define TARGET_LEGITIMATE_CONSTANT_P v850_legitimate_constant_p\n "}, {"sha": "e6458bcbaec2774c01e71d45e3e8324b23ae6f92", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 50, "deletions": 23, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b84d824df416552f65fb541138b49764ad8718df/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b84d824df416552f65fb541138b49764ad8718df/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=b84d824df416552f65fb541138b49764ad8718df", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler. NEC V850 series\n    Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-   2007, 2008, 2009, 2010, 2011  Free Software Foundation, Inc.\n+   2007, 2008, 2009, 2010, 2011, 2012  Free Software Foundation, Inc.\n    Contributed by Jeff Law (law@cygnus.com).\n \n    This file is part of GCC.\n@@ -89,7 +89,13 @@ extern GTY(()) rtx v850_compare_op1;\n \n #define TARGET_V850E2_ALL      (TARGET_V850E2 || TARGET_V850E2V3) \n \n-#define ASM_SPEC \"%{mv850es:-mv850e1}%{!mv850es:%{mv*:-mv%*}}\"\n+#define ASM_SPEC \"%{m850es:-mv850e1}%{!mv850es:%{mv*:-mv%*}} \\\n+%{mrelax:-mrelax} \\\n+%{m8byte-align:-m8byte-align} \\\n+%{mgcc-abi:-mgcc-abi}\"\n+\n+#define LINK_SPEC \"%{mgcc-abi:-m v850}\"\n+\n #define CPP_SPEC \"\\\n   %{mv850e2v3:-D__v850e2v3__} \\\n   %{mv850e2:-D__v850e2__} \\\n@@ -104,15 +110,32 @@ extern GTY(()) rtx v850_compare_op1;\n  { \"subtarget_asm_spec\", SUBTARGET_ASM_SPEC }, \\\n  { \"subtarget_cpp_spec\", SUBTARGET_CPP_SPEC } \n \n-/* Names to predefine in the preprocessor for this target machine.  */\n-#define TARGET_CPU_CPP_BUILTINS() do {\t\t\\\n-  builtin_define( \"__v851__\" );                        \\\n-  builtin_define( \"__v850\" );\t\t\t\\\n-  builtin_assert( \"machine=v850\" );\t\t\\\n-  builtin_assert( \"cpu=v850\" );\t\t\t\\\n-  if (TARGET_EP)\t\t\t\t\\\n-    builtin_define (\"__EP__\");\t\t\t\\\n-} while(0)\n+\n+/* Macro to decide when FPU instructions can be used.  */\n+#define TARGET_USE_FPU  (TARGET_V850E2V3 && ! TARGET_SOFT_FLOAT)\n+\n+#define TARGET_CPU_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      builtin_define( \"__v851__\" );\t\t\\\n+      builtin_define( \"__v850\" );\t\t\\\n+      builtin_define( \"__v850__\" );\t\t\\\n+      builtin_assert( \"machine=v850\" );\t\t\\\n+      builtin_assert( \"cpu=v850\" );\t\t\\\n+      if (TARGET_EP)\t\t\t\t\\\n+\tbuiltin_define (\"__EP__\");\t\t\\\n+      if (TARGET_GCC_ABI)\t\t\t\\\n+\tbuiltin_define (\"__V850_GCC_ABI__\");\t\\\n+      else\t\t\t\t\t\\\n+\tbuiltin_define (\"__V850_RH850_ABI__\");\t\\\n+      if (! TARGET_DISABLE_CALLT)\t\t\\\n+\tbuiltin_define (\"__V850_CALLT__\");\t\\\n+      if (TARGET_8BYTE_ALIGN)\t\t\t\\\n+\tbuiltin_define (\"__V850_8BYTE_ALIGN__\");\\\n+      builtin_define (TARGET_USE_FPU ?\t\t\\\n+\t\t      \"__FPU_OK__\" : \"__NO_FPU__\");\\\n+    }\t\t\t\t\t\t\\\n+  while(0)\n \n #define MASK_CPU (MASK_V850 | MASK_V850E | MASK_V850E1 | MASK_V850E2 | MASK_V850E2V3)\n \f\n@@ -153,20 +176,20 @@ extern GTY(()) rtx v850_compare_op1;\n #define PARM_BOUNDARY\t\t32\n \n /* The stack goes in 32-bit lumps.  */\n-#define STACK_BOUNDARY \t\t32\n+#define STACK_BOUNDARY \t\tBIGGEST_ALIGNMENT\n \n /* Allocation boundary (in *bits*) for the code of a function.\n    16 is the minimum boundary; 32 would give better performance.  */\n-#define FUNCTION_BOUNDARY (optimize_size ? 16 : 32)\n+#define FUNCTION_BOUNDARY \t(((! TARGET_GCC_ABI) || optimize_size) ? 16 : 32)\n \n /* No data type wants to be aligned rounder than this.  */\n-#define BIGGEST_ALIGNMENT\t32\n+#define BIGGEST_ALIGNMENT\t(TARGET_8BYTE_ALIGN ? 64 : 32)\n \n /* Alignment of field after `int : 0' in a structure.  */\n #define EMPTY_FIELD_BOUNDARY 32\n \n /* No structure field wants to be aligned rounder than this.  */\n-#define BIGGEST_FIELD_ALIGNMENT 32\n+#define BIGGEST_FIELD_ALIGNMENT BIGGEST_ALIGNMENT\n \n /* Define this if move instructions will actually fail to work\n    when given unaligned data.  */\n@@ -291,15 +314,15 @@ extern GTY(()) rtx v850_compare_op1;\n    \n enum reg_class\n {\n-  NO_REGS, GENERAL_REGS, EVEN_REGS, ALL_REGS, LIM_REG_CLASSES\n+  NO_REGS, EVEN_REGS, GENERAL_REGS, ALL_REGS, LIM_REG_CLASSES\n };\n \n #define N_REG_CLASSES (int) LIM_REG_CLASSES\n \n /* Give names of register classes as strings for dump file.  */\n \n #define REG_CLASS_NAMES \\\n-{ \"NO_REGS\", \"GENERAL_REGS\", \"EVEN_REGS\", \"ALL_REGS\", \"LIM_REGS\" }\n+{ \"NO_REGS\", \"EVEN_REGS\", \"GENERAL_REGS\", \"ALL_REGS\", \"LIM_REGS\" }\n \n /* Define which registers fit in which classes.\n    This is an initializer for a vector of HARD_REG_SET\n@@ -308,8 +331,8 @@ enum reg_class\n #define REG_CLASS_CONTENTS                     \\\n {                                              \\\n   { 0x00000000,0x0 }, /* NO_REGS      */       \\\n-  { 0xffffffff,0x0 }, /* GENERAL_REGS */       \\\n   { 0x55555554,0x0 }, /* EVEN_REGS */          \\\n+  { 0xfffffffe,0x0 }, /* GENERAL_REGS */       \\\n   { 0xffffffff,0x0 }, /* ALL_REGS      */      \\\n }\n \n@@ -485,14 +508,14 @@ enum reg_class\n    such as FUNCTION_ARG to determine where the next arg should go.  */\n \n #define CUMULATIVE_ARGS struct cum_arg\n-struct cum_arg { int nbytes; int anonymous_args; };\n+struct cum_arg { int nbytes; };\n \n /* Initialize a variable CUM of type CUMULATIVE_ARGS\n    for a call to a function whose data type is FNTYPE.\n    For a library call, FNTYPE is 0.  */\n \n #define INIT_CUMULATIVE_ARGS(CUM, FNTYPE, LIBNAME, INDIRECT, N_NAMED_ARGS) \\\n- ((CUM).nbytes = 0, (CUM).anonymous_args = 0)\n+  do { (CUM).nbytes = 0; } while (0)\n \n /* When a parameter is passed in a register, stack space is still\n    allocated for it.  */\n@@ -785,10 +808,14 @@ typedef enum\n /* We don't have to worry about dbx compatibility for the v850.  */\n #define DEFAULT_GDB_EXTENSIONS 1\n \n-/* Use stabs debugging info by default.  */\n+/* Use dwarf2 debugging info by default.  */\n #undef  PREFERRED_DEBUGGING_TYPE\n-#define PREFERRED_DEBUGGING_TYPE  DBX_DEBUG\n-#define DBX_DEBUGGING_INFO        1\n+#define PREFERRED_DEBUGGING_TYPE   DWARF2_DEBUG\n+\n+#define DWARF2_FRAME_INFO          1\n+#define DWARF2_UNWIND_INFO         0\n+#define INCOMING_RETURN_ADDR_RTX   gen_rtx_REG (Pmode, LINK_POINTER_REGNUM)\n+#define DWARF_FRAME_RETURN_COLUMN  DWARF_FRAME_REGNUM (LINK_POINTER_REGNUM)\n \n #ifndef ASM_GENERATE_INTERNAL_LABEL\n #define ASM_GENERATE_INTERNAL_LABEL(STRING, PREFIX, NUM)  \\"}, {"sha": "c7735523598a98f984056ca91c9d9d28d73cd151", "filename": "gcc/config/v850/v850.md", "status": "modified", "additions": 182, "deletions": 80, "changes": 262, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b84d824df416552f65fb541138b49764ad8718df/gcc%2Fconfig%2Fv850%2Fv850.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b84d824df416552f65fb541138b49764ad8718df/gcc%2Fconfig%2Fv850%2Fv850.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.md?ref=b84d824df416552f65fb541138b49764ad8718df", "patch": "@@ -1,5 +1,5 @@\n ;; GCC machine description for NEC V850\n-;; Copyright (C) 1996, 1997, 1998, 1999, 2002, 2004, 2005, 2007, 2008, 2010\n+;; Copyright (C) 1996, 1997, 1998, 1999, 2002, 2004, 2005, 2007, 2008, 2010, 2012\n ;; Free Software Foundation, Inc.\n ;; Contributed by Jeff Law (law@cygnus.com).\n \n@@ -409,7 +409,7 @@\n   [(set (reg:CC CC_REGNUM)\n \t(compare (match_operand:SF 0 \"register_operand\" \"r\")\n \t\t (match_operand:SF 1 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   {\n     v850_compare_op0 = operands[0];\n     v850_compare_op1 = operands[1];\n@@ -420,7 +420,7 @@\n   [(set (reg:CC CC_REGNUM)\n \t(compare (match_operand:DF 0 \"even_reg_operand\" \"r\")\n \t\t (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   {\n     v850_compare_op0 = operands[0];\n     v850_compare_op1 = operands[1];\n@@ -1764,7 +1764,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=r\")\n \t(plus:SF (match_operand:SF 1 \"register_operand\" \"r\")\n \t\t (match_operand:SF 2 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"addf.s %1,%2,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1774,7 +1774,7 @@\n   [(set (match_operand:DF 0 \"even_reg_operand\" \"=r\")\n \t(plus:DF (match_operand:DF 1 \"even_reg_operand\" \"r\")\n \t(match_operand:DF 2 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"addf.d %1,%2,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1784,7 +1784,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=r\")\n \t(minus:SF (match_operand:SF 1 \"register_operand\" \"r\")\n \t\t  (match_operand:SF 2 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"subf.s %2,%1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1794,7 +1794,7 @@\n   [(set (match_operand:DF 0 \"even_reg_operand\" \"=r\")\n \t(minus:DF (match_operand:DF 1 \"even_reg_operand\" \"r\")\n \t\t  (match_operand:DF 2 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"subf.d %2,%1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1804,7 +1804,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=r\")\n \t(mult:SF (match_operand:SF 1 \"register_operand\" \"r\")\n \t\t (match_operand:SF 2 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"mulf.s %1,%2,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1814,7 +1814,7 @@\n   [(set (match_operand:DF 0 \"even_reg_operand\" \"=r\")\n \t(mult:DF (match_operand:DF 1 \"even_reg_operand\" \"r\")\n \t\t (match_operand:DF 2 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"mulf.d %1,%2,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1824,7 +1824,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=r\")\n \t(div:SF (match_operand:SF 1 \"register_operand\" \"r\")\n \t\t(match_operand:SF 2 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"divf.s %2,%1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1834,7 +1834,7 @@\n   [(set (match_operand:DF 0 \"register_operand\" \"=r\")\n \t(div:DF (match_operand:DF 1 \"even_reg_operand\" \"r\")\n \t\t(match_operand:DF 2 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"divf.d %2,%1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1844,7 +1844,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=r\")\n \t(smin:SF (match_operand:SF 1 \"reg_or_0_operand\" \"r\")\n \t\t (match_operand:SF 2 \"reg_or_0_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"minf.s %z1,%z2,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1854,7 +1854,7 @@\n   [(set (match_operand:DF 0 \"even_reg_operand\" \"=r\")\n \t(smin:DF (match_operand:DF 1 \"even_reg_operand\" \"r\")\n \t\t (match_operand:DF 2 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"minf.d %1,%2,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1864,7 +1864,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=r\")\n \t(smax:SF (match_operand:SF 1 \"reg_or_0_operand\" \"r\")\n \t\t (match_operand:SF 2 \"reg_or_0_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"maxf.s %z1,%z2,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1874,7 +1874,7 @@\n   [(set (match_operand:DF 0 \"even_reg_operand\" \"=r\")\n \t(smax:DF (match_operand:DF 1 \"even_reg_operand\" \"r\")\n \t\t (match_operand:DF 2 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"maxf.d %1,%2,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1883,7 +1883,7 @@\n (define_insn \"abssf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=r\")\n \t(abs:SF (match_operand:SF 1 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"absf.s %1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1892,7 +1892,7 @@\n (define_insn \"absdf2\"\n   [(set (match_operand:DF 0 \"even_reg_operand\" \"=r\")\n \t(abs:DF (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"absf.d %1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1901,7 +1901,7 @@\n (define_insn \"negsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=r\")\n \t(neg:SF (match_operand:SF 1 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"negf.s %1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1910,7 +1910,7 @@\n (define_insn \"negdf2\"\n   [(set (match_operand:DF 0 \"even_reg_operand\" \"=r\")\n \t(neg:DF (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"negf.d %1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1920,7 +1920,7 @@\n (define_insn \"sqrtsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=r\")\n \t(sqrt:SF (match_operand:SF 1 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"sqrtf.s %1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1929,7 +1929,7 @@\n (define_insn \"sqrtdf2\"\n   [(set (match_operand:DF 0 \"even_reg_operand\" \"=r\")\n \t(sqrt:DF (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"sqrtf.d %1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1939,56 +1939,158 @@\n (define_insn \"fix_truncsfsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(fix:SI (match_operand:SF 1 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"trncf.sw %1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n \n+(define_insn \"fixuns_truncsfsi2\"\n+  [(set (match_operand:SI                  0 \"register_operand\" \"=r\")\n+\t(unsigned_fix:SI (match_operand:SF 1 \"register_operand\" \"r\")))]\n+  \"TARGET_USE_FPU\"\n+  \"trncf.suw %1, %0\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"cc\" \"none_0hit\")\n+   (set_attr \"type\" \"fpu\")]\n+)\n+\n (define_insn \"fix_truncdfsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(fix:SI (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"trncf.dw %1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n \n-(define_expand \"fixuns_truncsfsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(fix:SI (match_operand:SF 1 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\")\n+(define_insn \"fixuns_truncdfsi2\"\n+  [(set (match_operand:SI                  0 \"register_operand\" \"=r\")\n+\t(unsigned_fix:SI (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n+  \"TARGET_USE_FPU\"\n+  \"trncf.duw %1, %0\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"cc\" \"none_0hit\")\n+   (set_attr \"type\" \"fpu\")]\n+)\n \n-(define_expand \"fixuns_truncdfsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(fix:SI (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\")\n+(define_insn \"fix_truncsfdi2\"\n+  [(set (match_operand:DI         0 \"register_operand\" \"=r\")\n+\t(fix:DI (match_operand:SF 1 \"register_operand\" \"r\")))]\n+  \"TARGET_USE_FPU\"\n+  \"trncf.sl %1, %0\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"cc\" \"none_0hit\")\n+   (set_attr \"type\" \"fpu\")])\n+\n+(define_insn \"fixuns_truncsfdi2\"\n+  [(set (match_operand:DI                  0 \"register_operand\" \"=r\")\n+\t(unsigned_fix:DI (match_operand:SF 1 \"register_operand\" \"r\")))]\n+  \"TARGET_USE_FPU\"\n+  \"trncf.sul %1, %0\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"cc\" \"none_0hit\")\n+   (set_attr \"type\" \"fpu\")]\n+)\n+\n+(define_insn \"fix_truncdfdi2\"\n+  [(set (match_operand:DI         0 \"register_operand\" \"=r\")\n+\t(fix:DI (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n+  \"TARGET_USE_FPU\"\n+  \"trncf.dl %1, %0\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"cc\" \"none_0hit\")\n+   (set_attr \"type\" \"fpu\")])\n+\n+(define_insn \"fixuns_truncdfdi2\"\n+  [(set (match_operand:DI                  0 \"register_operand\" \"=r\")\n+\t(unsigned_fix:DI (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n+  \"TARGET_USE_FPU\"\n+  \"trncf.dul %1, %0\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"cc\" \"none_0hit\")\n+   (set_attr \"type\" \"fpu\")]\n+)\n \n ;; int -> float\n (define_insn \"floatsisf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=r\")\n \t(float:SF (match_operand:SI 1 \"reg_or_0_operand\" \"rI\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"cvtf.ws %z1, %0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n \n+(define_insn \"unsfloatsisf2\"\n+  [(set (match_operand:SF                    0 \"register_operand\" \"=r\")\n+\t(unsigned_float:SF (match_operand:SI 1 \"reg_or_0_operand\" \"rI\")))]\n+  \"TARGET_USE_FPU\"\n+  \"cvtf.uws %z1, %0\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"cc\" \"none_0hit\")\n+   (set_attr \"type\" \"fpu\")])\n+\n (define_insn \"floatsidf2\"\n   [(set (match_operand:DF 0 \"even_reg_operand\" \"=r\")\n \t(float:DF (match_operand:SI 1 \"reg_or_0_operand\" \"rI\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"cvtf.wd %z1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n \n+(define_insn \"unsfloatsidf2\"\n+  [(set (match_operand:DF                    0 \"even_reg_operand\" \"=r\")\n+\t(unsigned_float:DF (match_operand:SI 1 \"reg_or_0_operand\" \"rI\")))]\n+  \"TARGET_USE_FPU\"\n+  \"cvtf.uwd %z1, %0\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"cc\" \"none_0hit\")\n+   (set_attr \"type\" \"fpu\")])\n+\n+(define_insn \"floatdisf2\"\n+  [(set (match_operand:SF           0 \"even_reg_operand\" \"=r\")\n+\t(float:SF (match_operand:DI 1 \"reg_or_0_operand\" \"rI\")))]\n+  \"TARGET_USE_FPU\"\n+  \"cvtf.ls %z1, %0\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"cc\" \"none_0hit\")\n+   (set_attr \"type\" \"fpu\")])\n+\n+(define_insn \"unsfloatdisf2\"\n+  [(set (match_operand:SF                    0 \"even_reg_operand\" \"=r\")\n+\t(unsigned_float:SF (match_operand:DI 1 \"reg_or_0_operand\" \"rI\")))]\n+  \"TARGET_USE_FPU\"\n+  \"cvtf.uls %z1, %0\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"cc\" \"none_0hit\")\n+   (set_attr \"type\" \"fpu\")])\n+\n+(define_insn \"floatdidf2\"\n+  [(set (match_operand:DF           0 \"even_reg_operand\" \"=r\")\n+\t(float:DF (match_operand:DI 1 \"reg_or_0_operand\" \"rI\")))]\n+  \"TARGET_USE_FPU\"\n+  \"cvtf.ld %z1, %0\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"cc\" \"none_0hit\")\n+   (set_attr \"type\" \"fpu\")])\n+\n+(define_insn \"unsfloatdidf2\"\n+  [(set (match_operand:DF                    0 \"even_reg_operand\" \"=r\")\n+\t(unsigned_float:DF (match_operand:DI 1 \"reg_or_0_operand\" \"rI\")))]\n+  \"TARGET_USE_FPU\"\n+  \"cvtf.uld %z1, %0\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"cc\" \"none_0hit\")\n+   (set_attr \"type\" \"fpu\")])\n+\n ;; single-float -> double-float\n (define_insn \"extendsfdf2\"\n   [(set (match_operand:DF 0 \"even_reg_operand\" \"=r\")\n \t(float_extend:DF\n \t (match_operand:SF 1 \"reg_or_0_operand\" \"rI\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"cvtf.sd %z1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -1999,7 +2101,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=r\")\n \t(float_truncate:SF\n \t (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"cvtf.ds %1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -2014,7 +2116,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=r\")\n \t(div:SF (match_operand:SF 1 \"const_float_1_operand\" \"\")\n \t\t(match_operand:SF 2 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"recipf.s %2,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -2024,7 +2126,7 @@\n   [(set (match_operand:DF 0 \"even_reg_operand\" \"=r\")\n \t(div:DF (match_operand:DF 1 \"const_float_1_operand\" \"\")\n \t\t(match_operand:DF 2 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"recipf.d %2,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -2035,7 +2137,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"=r\")\n \t(div:SF (match_operand:SF 1 \"const_float_1_operand\" \"\")\n \t\t(sqrt:SF (match_operand:SF 2 \"register_operand\" \"r\"))))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"rsqrtf.s %2,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -2045,7 +2147,7 @@\n   [(set (match_operand:DF 0 \"even_reg_operand\" \"=r\")\n \t(div:DF (match_operand:DF 1 \"const_float_1_operand\" \"\")\n \t\t(sqrt:DF (match_operand:DF 2 \"even_reg_operand\" \"r\"))))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"rsqrtf.d %2,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -2057,7 +2159,7 @@\n \t(fma:SF (match_operand:SF 1 \"register_operand\" \"r\")\n \t\t(match_operand:SF 2 \"register_operand\" \"r\")\n \t\t(match_operand:SF 3 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"maddf.s %2,%1,%3,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -2069,7 +2171,7 @@\n \t(fma:SF (match_operand:SF         1 \"register_operand\" \"r\")\n \t\t(match_operand:SF         2 \"register_operand\" \"r\")\n \t\t(neg:SF (match_operand:SF 3 \"register_operand\" \"r\"))))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"msubf.s %2,%1,%3,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -2078,10 +2180,10 @@\n ;;; negative-multiply-add\n (define_insn \"fnmasf4\"\n   [(set (match_operand:SF                 0 \"register_operand\" \"=r\")\n-\t(fma:SF (neg:SF (match_operand:SF 1 \"register_operand\" \"r\"))\n-\t\t(match_operand:SF         2 \"register_operand\" \"r\")\n-\t\t(match_operand:SF         3 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+\t(neg:SF (fma:SF (match_operand:SF 1 \"register_operand\" \"r\")\n+\t\t\t(match_operand:SF 2 \"register_operand\" \"r\")\n+\t\t\t(match_operand:SF 3 \"register_operand\" \"r\"))))]\n+  \"TARGET_USE_FPU\"\n   \"nmaddf.s %2,%1,%3,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -2090,10 +2192,10 @@\n ;; negative-multiply-subtract\n (define_insn \"fnmssf4\"\n   [(set (match_operand:SF                 0 \"register_operand\" \"=r\")\n-\t(fma:SF (neg:SF (match_operand:SF 1 \"register_operand\" \"r\"))\n-\t\t(match_operand:SF         2 \"register_operand\" \"r\")\n-\t\t(neg:SF (match_operand:SF 3 \"register_operand\" \"r\"))))]\n-  \"TARGET_V850E2V3\"\n+\t(neg:SF (fma:SF (match_operand:SF         1 \"register_operand\" \"r\")\n+\t\t\t(match_operand:SF         2 \"register_operand\" \"r\")\n+\t\t\t(neg:SF (match_operand:SF 3 \"register_operand\" \"r\")))))]\n+  \"TARGET_USE_FPU\"\n   \"nmsubf.s %2,%1,%3,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n@@ -2107,8 +2209,8 @@\n   [(set (reg:CC_FPU_LE FCC_REGNUM)\n         (compare:CC_FPU_LE (match_operand:SF 0 \"register_operand\" \"r\")\n \t\t\t   (match_operand:SF 1 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n-  \"cmpf.s le,%z0,%z1\"\n+  \"TARGET_USE_FPU\"\n+  \"cmpf.s le,%z1,%z0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n@@ -2117,8 +2219,8 @@\n   [(set (reg:CC_FPU_LT FCC_REGNUM)\n         (compare:CC_FPU_LT (match_operand:SF 0 \"register_operand\" \"r\")\n \t\t\t   (match_operand:SF 1 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n-  \"cmpf.s lt,%z0,%z1\"\n+  \"TARGET_USE_FPU\"\n+  \"cmpf.s lt,%z1,%z0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n@@ -2127,8 +2229,8 @@\n   [(set (reg:CC_FPU_GE FCC_REGNUM)\n         (compare:CC_FPU_GE (match_operand:SF 0 \"register_operand\" \"r\")\n \t\t\t   (match_operand:SF 1 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n-  \"cmpf.s ge,%z0,%z1\"\n+  \"TARGET_USE_FPU\"\n+  \"cmpf.s ge,%z1,%z0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n@@ -2137,8 +2239,8 @@\n   [(set (reg:CC_FPU_GT FCC_REGNUM)\n         (compare:CC_FPU_GT (match_operand:SF 0 \"register_operand\" \"r\")\n \t\t\t   (match_operand:SF 1 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n-  \"cmpf.s gt,%z0,%z1\"\n+  \"TARGET_USE_FPU\"\n+  \"cmpf.s gt,%z1,%z0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n@@ -2147,8 +2249,8 @@\n   [(set (reg:CC_FPU_EQ FCC_REGNUM)\n         (compare:CC_FPU_EQ (match_operand:SF 0 \"register_operand\" \"r\")\n \t\t\t   (match_operand:SF 1 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n-  \"cmpf.s eq,%z0,%z1\"\n+  \"TARGET_USE_FPU\"\n+  \"cmpf.s eq,%z1,%z0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n@@ -2157,8 +2259,8 @@\n   [(set (reg:CC_FPU_NE FCC_REGNUM)\n         (compare:CC_FPU_NE (match_operand:SF 0 \"register_operand\" \"r\")\n \t\t\t   (match_operand:SF 1 \"register_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n-  \"cmpf.s neq,%z0,%z1\"\n+  \"TARGET_USE_FPU\"\n+  \"cmpf.s neq,%z1,%z0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n@@ -2169,8 +2271,8 @@\n   [(set (reg:CC_FPU_LE FCC_REGNUM)\n         (compare:CC_FPU_LE (match_operand:DF 0 \"even_reg_operand\" \"r\")\n \t\t\t   (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n-  \"cmpf.d le,%z0,%z1\"\n+  \"TARGET_USE_FPU\"\n+  \"cmpf.d le,%z1,%z0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n@@ -2179,8 +2281,8 @@\n   [(set (reg:CC_FPU_LT FCC_REGNUM)\n         (compare:CC_FPU_LT (match_operand:DF 0 \"even_reg_operand\" \"r\")\n \t\t\t   (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n-  \"cmpf.d lt,%z0,%z1\"\n+  \"TARGET_USE_FPU\"\n+  \"cmpf.d lt,%z1,%z0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n@@ -2189,8 +2291,8 @@\n   [(set (reg:CC_FPU_GE FCC_REGNUM)\n         (compare:CC_FPU_GE (match_operand:DF 0 \"even_reg_operand\" \"r\")\n \t\t\t   (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n-  \"cmpf.d ge,%z0,%z1\"\n+  \"TARGET_USE_FPU\"\n+  \"cmpf.d ge,%z1,%z0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n@@ -2199,8 +2301,8 @@\n   [(set (reg:CC_FPU_GT FCC_REGNUM)\n         (compare:CC_FPU_GT (match_operand:DF 0 \"even_reg_operand\" \"r\")\n \t\t      (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n-  \"cmpf.d gt,%z0,%z1\"\n+  \"TARGET_USE_FPU\"\n+  \"cmpf.d gt,%z1,%z0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n@@ -2209,8 +2311,8 @@\n   [(set (reg:CC_FPU_EQ FCC_REGNUM)\n         (compare:CC_FPU_EQ (match_operand:DF 0 \"even_reg_operand\" \"r\")\n \t\t\t   (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n-  \"cmpf.d eq,%z0,%z1\"\n+  \"TARGET_USE_FPU\"\n+  \"cmpf.d eq,%z1,%z0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n@@ -2219,8 +2321,8 @@\n   [(set (reg:CC_FPU_NE FCC_REGNUM)\n         (compare:CC_FPU_NE (match_operand:DF 0 \"even_reg_operand\" \"r\")\n \t\t\t   (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n-  \"cmpf.d neq,%z0,%z1\"\n+  \"TARGET_USE_FPU\"\n+  \"cmpf.d neq,%z1,%z0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n@@ -2233,7 +2335,7 @@\n \n (define_insn \"trfsr\"\n   [(set (match_operand 0 \"\" \"\") (match_operand 1 \"\" \"\"))]\n-  \"TARGET_V850E2V3\n+  \"TARGET_USE_FPU\n    && GET_MODE(operands[0]) == GET_MODE(operands[1])\n    && GET_CODE(operands[0]) == REG && REGNO (operands[0]) == CC_REGNUM\n    && GET_CODE(operands[1]) == REG && REGNO (operands[1]) == FCC_REGNUM\n@@ -2260,7 +2362,7 @@\n \t (match_operand 3 \"v850_float_z_comparison_operator\" \"\")\n \t (match_operand:SF 1 \"reg_or_0_operand\" \"rIG\")\n \t (match_operand:SF 2 \"reg_or_0_operand\" \"rIG\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"cmovf.s 0,%z1,%z2,%0\"\n   [(set_attr \"cc\" \"clobber\")]) ;; ??? or none_0hit\n \n@@ -2270,7 +2372,7 @@\n \t (match_operand 3 \"v850_float_nz_comparison_operator\" \"\")\n \t (match_operand:SF 1 \"reg_or_0_operand\" \"rIG\")\n \t (match_operand:SF 2 \"reg_or_0_operand\" \"rIG\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"cmovf.s 0,%z2,%z1,%0\"\n   [(set_attr \"cc\" \"clobber\")]) ;; ??? or none_0hit\n \n@@ -2280,7 +2382,7 @@\n \t (match_operand 3 \"v850_float_z_comparison_operator\" \"\")\n \t (match_operand:DF 1 \"even_reg_operand\" \"r\")\n \t (match_operand:DF 2 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"cmovf.d 0,%z1,%z2,%0\"\n   [(set_attr \"cc\" \"clobber\")]) ;; ??? or none_0hit\n \n@@ -2290,7 +2392,7 @@\n \t (match_operand 3 \"v850_float_nz_comparison_operator\" \"\")\n \t (match_operand:DF 1 \"even_reg_operand\" \"r\")\n \t (match_operand:DF 2 \"even_reg_operand\" \"r\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"cmovf.d 0,%z2,%z1,%0\"\n   [(set_attr \"cc\" \"clobber\")]) ;; ??? or none_0hit\n \n@@ -2300,7 +2402,7 @@\n \t (match_operand 3 \"v850_float_z_comparison_operator\" \"\")\n \t (match_operand:DF 1 \"reg_or_0_operand\" \"rIG\")\n \t (match_operand:DF 2 \"reg_or_0_operand\" \"rIG\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"cmovf.s 0,%z1,%z2,%0 ; cmovf.s 0,%Z1,%Z2,%R0\"\n   [(set_attr \"length\" \"8\")\n    (set_attr \"cc\" \"clobber\")]) ;; ??? or none_0hit\n@@ -2311,7 +2413,7 @@\n \t (match_operand 3 \"v850_float_nz_comparison_operator\" \"\")\n \t (match_operand:DF 1 \"reg_or_0_operand\" \"rIG\")\n \t (match_operand:DF 2 \"reg_or_0_operand\" \"rIG\")))]\n-  \"TARGET_V850E2V3\"\n+  \"TARGET_USE_FPU\"\n   \"cmovf.s 0,%z2,%z1,%0 ; cmovf.s 0,%Z2,%Z1,%R0\"\n   [(set_attr \"length\" \"8\")\n    (set_attr \"cc\" \"clobber\")]) ;; ??? or none_0hit"}, {"sha": "fa92179067dacd6f734381898afbbf00bce1c8a5", "filename": "gcc/config/v850/v850.opt", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b84d824df416552f65fb541138b49764ad8718df/gcc%2Fconfig%2Fv850%2Fv850.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b84d824df416552f65fb541138b49764ad8718df/gcc%2Fconfig%2Fv850%2Fv850.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.opt?ref=b84d824df416552f65fb541138b49764ad8718df", "patch": "@@ -1,6 +1,6 @@\n ; Options for the NEC V850 port of the compiler.\n \n-; Copyright (C) 2005, 2007, 2010, 2011 Free Software Foundation, Inc.\n+; Copyright (C) 2005, 2007, 2010, 2011, 2012 Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;\n@@ -38,15 +38,14 @@ Enable backend debugging\n \n mdisable-callt\n Target Report Mask(DISABLE_CALLT)\n-Do not use the callt instruction\n+Do not use the callt instruction (default)\n \n mep\n Target Report Mask(EP)\n Reuse r30 on a per function basis\n \n mghs\n-Target Report Mask(GHS)\n-Support Green Hills ABI\n+Target RejectNegative InverseMask(GCC_ABI) MaskExists\n \n mlong-calls\n Target Report Mask(LONG_CALLS)\n@@ -119,3 +118,31 @@ Set the max size of data eligible for the ZDA area\n \n mzda-\n Target RejectNegative Joined Undocumented Alias(mzda=)\n+\n+mrelax\n+Target Report Mask(RELAX)\n+Enable relaxing in the assembler\n+\n+mlong-jumps\n+Target Report Mask(BIG_SWITCH) MaskExists\n+Prohibit PC relative jumps\n+\n+msoft-float\n+Target Report RejectNegative Mask(SOFT_FLOAT)\n+Inhibit the use of hardware floating point instructions\n+\n+mhard-float\n+Target Report RejectNegative InverseMask(SOFT_FLOAT) MaskExists\n+Allow the use of hardware floating point instructions for V850E2V3 and up\n+\n+mrh850-abi\n+Target RejectNegative Report InverseMask(GCC_ABI) MaskExists\n+Enable support for the RH850 ABI.  This is the default\n+\n+mgcc-abi\n+Target RejectNegative Report Mask(GCC_ABI)\n+Enable support for the old GCC ABI\n+\n+m8byte-align\n+Target Report Mask(8BYTE_ALIGN)\n+Support alignments of up to 64-bits"}]}