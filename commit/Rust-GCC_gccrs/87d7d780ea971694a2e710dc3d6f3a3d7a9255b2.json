{"sha": "87d7d780ea971694a2e710dc3d6f3a3d7a9255b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdkN2Q3ODBlYTk3MTY5NGEyZTcxMGRjM2Q2ZjNhM2Q3YTkyNTViMg==", "commit": {"author": {"name": "Devang Patel", "email": "dpatel@apple.com", "date": "2003-03-10T23:41:42Z"}, "committer": {"name": "Devang Patel", "email": "dpatel@gcc.gnu.org", "date": "2003-03-10T23:41:42Z"}, "message": "gcc.c (DEFAULT_SWITCH_TAKES_ARG): Remove.\n\n\nPR/9394\n        * gcc.c (DEFAULT_SWITCH_TAKES_ARG): Remove.\n        (DEFAULT_WORD_SWITCH_TAKES_ARG): Remove.\n        * gcc.h (DEFAULT_SWITCH_TAKES_ARG): Add.\n        (DEFAULT_WORD_SWITCH_TAKES_ARG): Add.\n        * cppspec.c (DEFAULT_SWTICH_TAKES_ARG): Remove.\n        (DEFAULT_WORD_SWITCH_TAKES_ARG): Remove.\n\ncp\n        * g++spec.c (lang_specific_driver): Use DEFAULT_WORD_SWITCH_TAKES_ARG.\n\ntestsuite\n\n        * g++.dg/cpp/c++_cmd_1.C: New test.\n        * g++.dg/cpp/c++_cmd_1.h: New file.\n\nFrom-SVN: r64144", "tree": {"sha": "984d98b935666a18064dc2fa49e37e242a2e6350", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/984d98b935666a18064dc2fa49e37e242a2e6350"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/comments", "author": null, "committer": null, "parents": [{"sha": "6b856d1594c650d1224777b65cc912584e9141a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b856d1594c650d1224777b65cc912584e9141a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b856d1594c650d1224777b65cc912584e9141a5"}], "stats": {"total": 110, "additions": 67, "deletions": 43}, "files": [{"sha": "fab6a903713bfc06c6d019471cd94be21a7a9333", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87d7d780ea971694a2e710dc3d6f3a3d7a9255b2", "patch": "@@ -1,10 +1,22 @@\n+\n+2003-03-10  Devang Patel  <dpatel@apple.com>\n+\t\n+\tPR c++/9394\n+\t* gcc.c (DEFAULT_SWITCH_TAKES_ARG): Remove.\n+\t(DEFAULT_WORD_SWITCH_TAKES_ARG): Remove.\n+\t* gcc.h (DEFAULT_SWITCH_TAKES_ARG): Add.\n+\t(DEFAULT_WORD_SWITCH_TAKES_ARG): Add.\n+\t* cppspec.c (DEFAULT_SWITCH_TAKES_ARG): Remove.\n+\t(DEFAULT_WORD_SWITCH_TAKES_ARG): Remove.\n+\t\n 2003-03-10  Steven Bosscher  <s.bosscher@student.tudelft.nl>\n \n \tPR optimization/7189\n \t* toplev.c (rest_of_compilation):  Move\n \tcheck_function_return_warnings up to just after\n \tdelete_unreachable_blocks.\n \n+\n 2003-03-10  Stephane Carrez  <stcarrez@nerim.fr>\n \n \t* config/m68hc11/m68hc11.h (HARD_REGNO_RENAME_OK): Define."}, {"sha": "93d3f22d2862f867379ecbf4e8885712a5e0a592", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=87d7d780ea971694a2e710dc3d6f3a3d7a9255b2", "patch": "@@ -1,3 +1,7 @@\n+2003-03-10  Devang Patel  <dpatel@apple.com>\n+\t\n+\tPR c++/9394\n+\t* g++spec.c (lang_specific_driver): Use DEFAULT_WORD_SWTCH_TAKES_ARG.\n 2003-03-10  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/9798"}, {"sha": "d2f99d9990c0e4110cdfe472736ca5f15786237a", "filename": "gcc/cp/g++spec.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2Fcp%2Fg%2B%2Bspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2Fcp%2Fg%2B%2Bspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fg%2B%2Bspec.c?ref=87d7d780ea971694a2e710dc3d6f3a3d7a9255b2", "patch": "@@ -189,6 +189,8 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n \t  else if (strcmp (argv[i], \"-static-libgcc\") == 0 \n \t\t   || strcmp (argv[i], \"-static\") == 0)\n \t    shared_libgcc = 0;\n+\t  else if (DEFAULT_WORD_SWITCH_TAKES_ARG (&argv[i][1]))\n+\t    i++;\n \t  else\n \t    /* Pass other options through.  */\n \t    continue;"}, {"sha": "1eba17c77190570a8d6a3990a3484a430385e469", "filename": "gcc/cppspec.c", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2Fcppspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2Fcppspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppspec.c?ref=87d7d780ea971694a2e710dc3d6f3a3d7a9255b2", "patch": "@@ -31,32 +31,10 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    assume the user knows what they're doing.  If no explicit input is\n    mentioned, it will read stdin.  */\n \n-/* Snarfed from gcc.c: */\n-\n-/* This defines which switch letters take arguments.  */\n-\n-#define DEFAULT_SWITCH_TAKES_ARG(CHAR) \\\n-  ((CHAR) == 'D' || (CHAR) == 'U' || (CHAR) == 'o' \\\n-   || (CHAR) == 'e' || (CHAR) == 'T' || (CHAR) == 'u' \\\n-   || (CHAR) == 'I' || (CHAR) == 'm' || (CHAR) == 'x' \\\n-   || (CHAR) == 'L' || (CHAR) == 'A' || (CHAR) == 'V' \\\n-   || (CHAR) == 'B' || (CHAR) == 'b')\n-\n #ifndef SWITCH_TAKES_ARG\n #define SWITCH_TAKES_ARG(CHAR) DEFAULT_SWITCH_TAKES_ARG(CHAR)\n #endif\n \n-/* This defines which multi-letter switches take arguments.  */\n-\n-#define DEFAULT_WORD_SWITCH_TAKES_ARG(STR)\t\t\\\n- (!strcmp (STR, \"Tdata\") || !strcmp (STR, \"Ttext\")\t\\\n-  || !strcmp (STR, \"Tbss\") || !strcmp (STR, \"include\")\t\\\n-  || !strcmp (STR, \"imacros\") || !strcmp (STR, \"aux-info\") \\\n-  || !strcmp (STR, \"idirafter\") || !strcmp (STR, \"iprefix\") \\\n-  || !strcmp (STR, \"iwithprefix\") || !strcmp (STR, \"iwithprefixbefore\") \\\n-  || !strcmp (STR, \"isystem\") || !strcmp (STR, \"specs\") \\\n-  || !strcmp (STR, \"MF\") || !strcmp (STR, \"MT\") || !strcmp (STR, \"MQ\"))\n-\n #ifndef WORD_SWITCH_TAKES_ARG\n #define WORD_SWITCH_TAKES_ARG(STR) DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\n #endif"}, {"sha": "1aa02528d87cbdaee57f76b6177f91dbab39cfce", "filename": "gcc/gcc.c", "status": "modified", "additions": 4, "deletions": 21, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=87d7d780ea971694a2e710dc3d6f3a3d7a9255b2", "patch": "@@ -819,30 +819,10 @@ struct user_specs\n \n static struct user_specs *user_specs_head, *user_specs_tail;\n \n-/* This defines which switch letters take arguments.  */\n-\n-#define DEFAULT_SWITCH_TAKES_ARG(CHAR) \\\n-  ((CHAR) == 'D' || (CHAR) == 'U' || (CHAR) == 'o' \\\n-   || (CHAR) == 'e' || (CHAR) == 'T' || (CHAR) == 'u' \\\n-   || (CHAR) == 'I' || (CHAR) == 'm' || (CHAR) == 'x' \\\n-   || (CHAR) == 'L' || (CHAR) == 'A' || (CHAR) == 'B' || (CHAR) == 'b')\n-\n #ifndef SWITCH_TAKES_ARG\n #define SWITCH_TAKES_ARG(CHAR) DEFAULT_SWITCH_TAKES_ARG(CHAR)\n #endif\n \n-/* This defines which multi-letter switches take arguments.  */\n-\n-#define DEFAULT_WORD_SWITCH_TAKES_ARG(STR)\t\t\\\n- (!strcmp (STR, \"Tdata\") || !strcmp (STR, \"Ttext\")\t\\\n-  || !strcmp (STR, \"Tbss\") || !strcmp (STR, \"include\")\t\\\n-  || !strcmp (STR, \"imacros\") || !strcmp (STR, \"aux-info\") \\\n-  || !strcmp (STR, \"idirafter\") || !strcmp (STR, \"iprefix\") \\\n-  || !strcmp (STR, \"iwithprefix\") || !strcmp (STR, \"iwithprefixbefore\") \\\n-  || !strcmp (STR, \"isystem\") || !strcmp (STR, \"-param\") \\\n-  || !strcmp (STR, \"specs\") \\\n-  || !strcmp (STR, \"MF\") || !strcmp (STR, \"MT\") || !strcmp (STR, \"MQ\"))\n-\n #ifndef WORD_SWITCH_TAKES_ARG\n #define WORD_SWITCH_TAKES_ARG(STR) DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\n #endif\n@@ -3162,8 +3142,11 @@ process_command (argc, argv)\n \n   /* If there is a -V or -b option (or both), process it now, before\n      trying to interpret the rest of the command line.  */\n+  /* Use heuristic that all configuration names must have at least one dash '-'.\n+     This allows to pass options that start with -b.  */\n   if (argc > 1 && argv[1][0] == '-'\n-      && (argv[1][1] == 'V' || argv[1][1] == 'b'))\n+      && (argv[1][1] == 'V' \n+\t  || (argv[1][1] == 'b' && strchr (argv[1] + 2, '-') != NULL)))\n     {\n       const char *new_version = DEFAULT_TARGET_VERSION;\n       const char *new_machine = DEFAULT_TARGET_MACHINE;"}, {"sha": "06691bd9f6b7e82e4246f7d29d32205c35900b21", "filename": "gcc/gcc.h", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2Fgcc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2Fgcc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.h?ref=87d7d780ea971694a2e710dc3d6f3a3d7a9255b2", "patch": "@@ -31,6 +31,28 @@ struct spec_function\n   const char *(*func) PARAMS ((int, const char **));\n };\n \n+/* This defines which switch letters take arguments.  */\n+\n+#define DEFAULT_SWITCH_TAKES_ARG(CHAR) \\\n+  ((CHAR) == 'D' || (CHAR) == 'U' || (CHAR) == 'o' \\\n+   || (CHAR) == 'e' || (CHAR) == 'T' || (CHAR) == 'u' \\\n+   || (CHAR) == 'I' || (CHAR) == 'm' || (CHAR) == 'x' \\\n+   || (CHAR) == 'L' || (CHAR) == 'A' || (CHAR) == 'V' \\\n+   || (CHAR) == 'B' || (CHAR) == 'b')\n+\n+/* This defines which multi-letter switches take arguments.  */\n+\n+#define DEFAULT_WORD_SWITCH_TAKES_ARG(STR)\t\t\\\n+ (!strcmp (STR, \"Tdata\") || !strcmp (STR, \"Ttext\")\t\\\n+  || !strcmp (STR, \"Tbss\") || !strcmp (STR, \"include\")\t\\\n+  || !strcmp (STR, \"imacros\") || !strcmp (STR, \"aux-info\") \\\n+  || !strcmp (STR, \"idirafter\") || !strcmp (STR, \"iprefix\") \\\n+  || !strcmp (STR, \"iwithprefix\") || !strcmp (STR, \"iwithprefixbefore\") \\\n+  || !strcmp (STR, \"isystem\") || !strcmp (STR, \"-param\") \\\n+  || !strcmp (STR, \"specs\") \\\n+  || !strcmp (STR, \"MF\") || !strcmp (STR, \"MT\") || !strcmp (STR, \"MQ\"))\n+\n+\n /* These are exported by gcc.c.  */\n extern int do_spec PARAMS ((const char *));\n extern void record_temp_file PARAMS ((const char *, int, int));"}, {"sha": "233d4c1a1408d06c84b4c802016b249675ff2345", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=87d7d780ea971694a2e710dc3d6f3a3d7a9255b2", "patch": "@@ -1,3 +1,8 @@\n+2003-03-10  Devang Patel  <dpatel@apple.com>\n+\n+\t* g++.dg/cpp/c++_cmd_1.C: New test.\n+\t* g++.dg/cpp/c++_cmd_1.h: New file.\n+\t\n 2003-03-10  Segher Boessenkool  <segher@koffie.nl>\n \n         * gcc.dg/altivec-9.c: New file."}, {"sha": "e4e0482936b7ff4b0958e7436027a492b0cf3b1d", "filename": "gcc/testsuite/g++.dg/cpp/c++_cmd_1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fc%2B%2B_cmd_1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fc%2B%2B_cmd_1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fc%2B%2B_cmd_1.C?ref=87d7d780ea971694a2e710dc3d6f3a3d7a9255b2", "patch": "@@ -0,0 +1,12 @@\n+/* Copyright (C) 2003 Free Software Foundation, Inc.  */\n+\n+/* { dg-do preprocess } */\n+/* { dg-options \"-c -include ${srcdir}/g++.dg/cpp/c++_cmd_1.h\" } */\n+\n+/* Contributed by Devang Patel  <dpatel@apple.com>  */\n+\n+int main ()\n+{\n+\treturn 0;\n+}\n+"}, {"sha": "06f4941bc540e25c5fa94b9df39de91cafdeb98f", "filename": "gcc/testsuite/g++.dg/cpp/c++_cmd_1.h", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fc%2B%2B_cmd_1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d7d780ea971694a2e710dc3d6f3a3d7a9255b2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fc%2B%2B_cmd_1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fc%2B%2B_cmd_1.h?ref=87d7d780ea971694a2e710dc3d6f3a3d7a9255b2", "patch": "@@ -0,0 +1,6 @@\n+/* Copyright (C) 2003 Free Software Foundation, Inc.  */\n+\n+/* Contributed by Devang Patel  <dpatel@apple.com>  */\n+\n+/* Header file for c++_cmd_1.C */\n+"}]}