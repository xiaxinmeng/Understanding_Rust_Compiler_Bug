{"sha": "1735e55db99c4dac8a4c93f6f637bce55cb3008a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTczNWU1NWRiOTljNGRhYzhhNGM5M2Y2ZjYzN2JjZTU1Y2IzMDA4YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-11-19T10:56:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-11-19T10:56:15Z"}, "message": "exp_dist.adb (Build_RPC_Receiver_Body): New subprogram.\n\n\t* exp_dist.adb (Build_RPC_Receiver_Body): New subprogram. This\n\tprocedures factors the common processing for building an RPC receiver\n\tfor an RCI package or an RACW type.\n\tStylistic cleanup: change '/= Empty' to 'Present ()'; move body of\n\tBuild_Remote_Subprogram_Proxy_Type into proper alphabetical order.\n\t(Get_PCS_Name): New subprogram. Returns the name of the PCS currently\n\tin use.\n\t(Specific_Add_RACW_Features): New subprogram. PCS-specific part of\n\tAdd_RACW_Features.\n\t(Specific_Add_RAST_Features): New subprogram. PCS-specific part of\n\tAdd_RAST_Features.\n\t(Assign_Subprogram_Identifier): New subprogram. Provision for assigning\n\tdistribution subprogram identifiers that are either subprogram numbers\n\tor strings.\n\t(Get_Subprogram_Ids): New subprogram. Retrieve both the numeric and\n\tstring distribution identifiers assigned to a given subprogram.\n\t(Get_Subprogram_Id): Reimplement in terms of Get_Subprogram_Ids.\n\t(Add_RAS_Dereference_TSS): Add comments.\n\t(Build_General_Calling_Stubs): Note that the RACW_Type formal parameter\n\tis not referenced yet because it will be used by the PolyORB DSA\n\timplementation.\n\t(Insert_Partition_Check): Remove fossile code.\n\t(First_RCI_Subprogram_Id): Document this constant.\n\t(Add_RAS_Access_TSS): Correct the setting of the Etype of the\n\tRAS_Access TSS.\n\t(Get_Pkg_Name_String): Remove subprogram. Usage occurrences are\n\treplaced with calls to Get_Library_Unit_Name_String. Previously there\n\twere several instances of the same code in different locations in the\n\tcompiler; this checkin completes the replacement of all of these\n\tinstances with calls to a common subprogram.\n\tMinor reformatting.\n\n\t* sem_dist.adb: Remove comment noting that RPC receiver generation\n\tshould be disabled for RACWs that implement RASs.\n\t(Process_Partition_Id): Use new subprogram Get_Library_Unit_Name_String.\n\n\t* sem_util.ads, sem_util.adb (Has_Stream): New function\n\t(Get_Library_Unit_Name_String): New subprogram to retrieve the fully\n\tqualified name of a library unit into the name buffer.\n\t(Note_Possible_Modification): Generate a reference only\n\tif the context comes from source.\n\n\t* snames.ads (PCS_Names): New subtype corresponding to names of\n\tsupported implementations of the Partition Communication Subsystem\n\t(PCS) (i.e. the runtime library support modules for the distributed\n\tsystems annex).\n\nFrom-SVN: r90903", "tree": {"sha": "b1d269ec2053fab57cf79b39805a25548be5bd3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1d269ec2053fab57cf79b39805a25548be5bd3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1735e55db99c4dac8a4c93f6f637bce55cb3008a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1735e55db99c4dac8a4c93f6f637bce55cb3008a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1735e55db99c4dac8a4c93f6f637bce55cb3008a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1735e55db99c4dac8a4c93f6f637bce55cb3008a/comments", "author": null, "committer": null, "parents": [{"sha": "ccf255117d1a4e2b57cb138b1b8a5696db18c7dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccf255117d1a4e2b57cb138b1b8a5696db18c7dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccf255117d1a4e2b57cb138b1b8a5696db18c7dd"}], "stats": {"total": 6376, "additions": 3442, "deletions": 2934}, "files": [{"sha": "cb00cc589a773fadecec93f105ed18fcb110f942", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 3361, "deletions": 2918, "changes": 6279, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1735e55db99c4dac8a4c93f6f637bce55cb3008a/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1735e55db99c4dac8a4c93f6f637bce55cb3008a/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=1735e55db99c4dac8a4c93f6f637bce55cb3008a"}, {"sha": "c0fccfdc92a2f66668add00a41cc9cd35dd14e69", "filename": "gcc/ada/sem_dist.adb", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1735e55db99c4dac8a4c93f6f637bce55cb3008a/gcc%2Fada%2Fsem_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1735e55db99c4dac8a4c93f6f637bce55cb3008a/gcc%2Fada%2Fsem_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.adb?ref=1735e55db99c4dac8a4c93f6f637bce55cb3008a", "patch": "@@ -43,7 +43,6 @@ with Snames;   use Snames;\n with Stand;    use Stand;\n with Stringt;  use Stringt;\n with Tbuild;   use Tbuild;\n-with Uname;    use Uname;\n \n package body Sem_Dist is\n \n@@ -290,18 +289,10 @@ package body Sem_Dist is\n       end if;\n \n       --  Get and store the String_Id corresponding to the name of the\n-      --  library unit whose Partition_Id is needed\n+      --  library unit whose Partition_Id is needed.\n \n-      Get_Unit_Name_String (Get_Unit_Name (Unit_Declaration_Node (Ety)));\n-\n-      --  Remove seven last character (\"(spec)\" or \" (body)\").\n-      --  (this is a bit nasty, should have interface for this ???)\n-\n-      Name_Len := Name_Len - 7;\n-\n-      Start_String;\n-      Store_String_Chars (Name_Buffer (1 .. Name_Len));\n-      Prefix_String := End_String;\n+      Get_Library_Unit_Name_String (Unit_Declaration_Node (Ety));\n+      Prefix_String := String_From_Name_Buffer;\n \n       --  Build the function call which will replace the attribute\n \n@@ -510,9 +501,6 @@ package body Sem_Dist is\n                     Name_Class))));\n       Set_Is_Remote_Call_Interface (RACW_Type, Is_RCI);\n       Set_Is_Remote_Types (RACW_Type, Is_RT);\n-      --  ??? Object RPC receiver generation should be bypassed for this\n-      --  RACW type, since actually calls will be received by the package\n-      --  RPC receiver for the designated RCI subprogram.\n \n       Subpkg_Decl :=\n         Make_Package_Declaration (Loc,"}, {"sha": "22066fe07ce9ac4d49778375dcfde5efb4b057b6", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 61, "deletions": 1, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1735e55db99c4dac8a4c93f6f637bce55cb3008a/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1735e55db99c4dac8a4c93f6f637bce55cb3008a/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=1735e55db99c4dac8a4c93f6f637bce55cb3008a", "patch": "@@ -58,6 +58,7 @@ with Stringt;  use Stringt;\n with Targparm; use Targparm;\n with Tbuild;   use Tbuild;\n with Ttypes;   use Ttypes;\n+with Uname;    use Uname;\n \n package body Sem_Util is\n \n@@ -2620,6 +2621,22 @@ package body Sem_Util is\n       end if;\n    end Get_Index_Bounds;\n \n+   ----------------------------------\n+   -- Get_Library_Unit_Name_string --\n+   ----------------------------------\n+\n+   procedure Get_Library_Unit_Name_String (Decl_Node : Node_Id) is\n+      Unit_Name_Id : constant Unit_Name_Type := Get_Unit_Name (Decl_Node);\n+\n+   begin\n+      Get_Unit_Name_String (Unit_Name_Id);\n+\n+      --  Remove seven last character (\" (spec)\" or \" (body)\").\n+\n+      Name_Len := Name_Len - 7;\n+      pragma Assert (Name_Buffer (Name_Len + 1) = ' ');\n+   end Get_Library_Unit_Name_String;\n+\n    ------------------------\n    -- Get_Name_Entity_Id --\n    ------------------------\n@@ -2864,6 +2881,43 @@ package body Sem_Util is\n       end if;\n    end Has_Private_Component;\n \n+   ----------------\n+   -- Has_Stream --\n+   ----------------\n+\n+   function Has_Stream (T : Entity_Id) return Boolean is\n+      E : Entity_Id;\n+\n+   begin\n+      if No (T) then\n+         return False;\n+\n+      elsif Is_RTE (Root_Type (T), RE_Root_Stream_Type) then\n+         return True;\n+\n+      elsif Is_Array_Type (T) then\n+         return Has_Stream (Component_Type (T));\n+\n+      elsif Is_Record_Type (T) then\n+         E := First_Component (T);\n+         while Present (E) loop\n+            if Has_Stream (Etype (E)) then\n+               return True;\n+            else\n+               Next_Component (E);\n+            end if;\n+         end loop;\n+\n+         return False;\n+\n+      elsif Is_Private_Type (T) then\n+         return Has_Stream (Underlying_Type (T));\n+\n+      else\n+         return False;\n+      end if;\n+   end Has_Stream;\n+\n    --------------------------\n    -- Has_Tagged_Component --\n    --------------------------\n@@ -5267,7 +5321,13 @@ package body Sem_Util is\n                   goto Continue;\n                end if;\n \n-               Generate_Reference (Ent, Exp, 'm');\n+               --  Generate a reference only if the assignment comes from\n+               --  source. This excludes, for example, calls to a dispatching\n+               --  assignment operation when the left-hand side is tagged.\n+\n+               if Modification_Comes_From_Source then\n+                  Generate_Reference (Ent, Exp, 'm');\n+               end if;\n             end if;\n \n             Kill_Checks (Ent);"}, {"sha": "9ee56372e4df1dcba24d735d7e56b3433d956492", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1735e55db99c4dac8a4c93f6f637bce55cb3008a/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1735e55db99c4dac8a4c93f6f637bce55cb3008a/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=1735e55db99c4dac8a4c93f6f637bce55cb3008a", "patch": "@@ -333,6 +333,10 @@ package Sem_Util is\n    --  The third argument supplies a source location for constructed\n    --  nodes returned by this function.\n \n+   procedure Get_Library_Unit_Name_String (Decl_Node : Node_Id);\n+   --  Retrieve the fully expanded name of the library unit declared by\n+   --  Decl_Node into the name buffer.\n+\n    function Get_Name_Entity_Id (Id : Name_Id) return Entity_Id;\n    --  An entity value is associated with each name in the name table. The\n    --  Get_Name_Entity_Id function fetches the Entity_Id of this entity,\n@@ -374,6 +378,14 @@ package Sem_Util is\n    --  Check if a type has a (sub)component of a private type that has not\n    --  yet received a full declaration.\n \n+   function Has_Stream (T : Entity_Id) return Boolean;\n+   --  Tests if type T is derived from Ada.Streams.Root_Stream_Type, or\n+   --  in the case of a composite type, has a component for which this\n+   --  predicate is True, and if so returns True. Otherwise a result of\n+   --  False means that there is no Stream type in sight. For a private\n+   --  type, the test is applied to the underlying type (or returns False\n+   --  if there is no underlying type).\n+\n    function Has_Tagged_Component (Typ : Entity_Id) return Boolean;\n    --  Typ must be a composite type (array or record). This function is used\n    --  to check if '=' has to be expanded into a bunch component comparaisons."}, {"sha": "10eb49b229c7aece59ee96e0da2486d76368da6a", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1735e55db99c4dac8a4c93f6f637bce55cb3008a/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1735e55db99c4dac8a4c93f6f637bce55cb3008a/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=1735e55db99c4dac8a4c93f6f637bce55cb3008a", "patch": "@@ -237,9 +237,14 @@ package Snames is\n \n    --  Names of implementations of the distributed systems annex\n \n+   First_PCS_Name                      : constant Name_Id := N + 064;\n    Name_No_DSA                         : constant Name_Id := N + 064;\n    Name_GARLIC_DSA                     : constant Name_Id := N + 065;\n    Name_PolyORB_DSA                    : constant Name_Id := N + 066;\n+   Last_PCS_Name                       : constant Name_Id := N + 066;\n+\n+   subtype PCS_Names is Name_Id\n+     range First_PCS_Name .. Last_PCS_Name;\n \n    --  Names of identifiers used in expanding distribution stubs\n "}]}