{"sha": "e150159cbe7698f9ac399ba9f367627d9427e519", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE1MDE1OWNiZTc2OThmOWFjMzk5YmE5ZjM2NzYyN2Q5NDI3ZTUxOQ==", "commit": {"author": {"name": "Stan Shebs", "email": "shebs@apple.com", "date": "2003-01-28T23:26:28Z"}, "committer": {"name": "Stan Shebs", "email": "shebs@gcc.gnu.org", "date": "2003-01-28T23:26:28Z"}, "message": "coretypes.h (cpp_reader): Forward declare struct.\n\n        * coretypes.h (cpp_reader): Forward declare struct.\n        * c-pragma.h (cpp_reader): Remove forward declaration.\n        * hashtable.h (cpp_reader): Likewise.\n        * scan.h (cpp_reader): Likewise.\n        * tree.h (cpp_reader): Likewise.\n        * config/darwin-protos.h (cpp_reader): Likewise.\n        * config/arm/arm-protos.h (cpp_reader): Likewise.\n        * config/rs6000/rs6000-protos.h: Remove GCC_CPPLIB_H ifdef, use\n        struct cpp_reader in prototypes.\n\nFrom-SVN: r62050", "tree": {"sha": "fe19250fe67272d9a305d79ce02ee1c5688ac467", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe19250fe67272d9a305d79ce02ee1c5688ac467"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e150159cbe7698f9ac399ba9f367627d9427e519", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e150159cbe7698f9ac399ba9f367627d9427e519", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e150159cbe7698f9ac399ba9f367627d9427e519", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e150159cbe7698f9ac399ba9f367627d9427e519/comments", "author": null, "committer": null, "parents": [{"sha": "e9e93c8b7ccf95207d5a6d8a421269c2d7a955be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9e93c8b7ccf95207d5a6d8a421269c2d7a955be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9e93c8b7ccf95207d5a6d8a421269c2d7a955be"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "89ffb3842823dc73b5db7a2517360dd1a852648f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e150159cbe7698f9ac399ba9f367627d9427e519", "patch": "@@ -1,3 +1,15 @@\n+2003-01-28  Stan Shebs  <shebs@apple.com>\n+\n+\t* coretypes.h (cpp_reader): Forward declare struct.\n+\t* c-pragma.h (cpp_reader): Remove forward declaration.\n+\t* hashtable.h (cpp_reader): Likewise.\n+\t* scan.h (cpp_reader): Likewise.\n+\t* tree.h (cpp_reader): Likewise.\n+\t* config/darwin-protos.h (cpp_reader): Likewise.\n+\t* config/arm/arm-protos.h (cpp_reader): Likewise.\n+\t* config/rs6000/rs6000-protos.h: Remove GCC_CPPLIB_H ifdef, use\n+\tstruct cpp_reader in prototypes.\n+\n 2003-01-28  Christian Cornelssen  <ccorn@cs.tu-berlin.de>\n \n \t* doc/install.texi: Add documentation for installation into"}, {"sha": "f6cf50f52ca588251156d731effb8cf381ec3f9e", "filename": "gcc/c-pragma.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2Fc-pragma.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2Fc-pragma.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pragma.h?ref=e150159cbe7698f9ac399ba9f367627d9427e519", "patch": "@@ -26,7 +26,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define YYDEBUG 1\n extern int yydebug;\n \n-struct cpp_reader;\n extern struct cpp_reader* parse_in;\n \n #ifdef HANDLE_SYSV_PRAGMA"}, {"sha": "1c3764d61c1530fc07f885194c620ca744067e5a", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=e150159cbe7698f9ac399ba9f367627d9427e519", "patch": "@@ -214,7 +214,6 @@ extern rtx arm_expand_builtin\t\tPARAMS ((tree, rtx, rtx,\n \t\t\t\t\t       enum machine_mode, int));\n #endif\n \n-struct cpp_reader;\n extern void arm_pr_long_calls\t\tPARAMS ((struct cpp_reader *));\n extern void arm_pr_no_long_calls\tPARAMS ((struct cpp_reader *));\n extern void arm_pr_long_calls_off\tPARAMS ((struct cpp_reader *));"}, {"sha": "d199854a633f42e9793bf5786813f32f9557eba3", "filename": "gcc/config/darwin-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2Fconfig%2Fdarwin-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2Fconfig%2Fdarwin-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-protos.h?ref=e150159cbe7698f9ac399ba9f367627d9427e519", "patch": "@@ -74,7 +74,6 @@ extern void machopic_select_section PARAMS ((tree, int,\n extern void machopic_select_rtx_section PARAMS ((enum machine_mode, rtx,\n \t\t\t\t\t\t unsigned HOST_WIDE_INT));\n \n-struct cpp_reader;\n extern void darwin_pragma_ignore PARAMS ((struct cpp_reader *));\n extern void darwin_pragma_options PARAMS ((struct cpp_reader *));\n extern void darwin_pragma_unused PARAMS ((struct cpp_reader *));"}, {"sha": "8dcfd8766f541cac16a6e286828f7680ed18f1ff", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=e150159cbe7698f9ac399ba9f367627d9427e519", "patch": "@@ -196,9 +196,7 @@ extern int rs6000_memory_move_cost PARAMS ((enum machine_mode,\n \n /* Declare functions in rs6000-c.c */\n \n-#ifdef GCC_CPPLIB_H\n-extern void rs6000_pragma_longcall PARAMS ((cpp_reader *));\n-extern void rs6000_cpu_cpp_builtins PARAMS ((cpp_reader *));\n-#endif\n+extern void rs6000_pragma_longcall PARAMS ((struct cpp_reader *));\n+extern void rs6000_cpu_cpp_builtins PARAMS ((struct cpp_reader *));\n \n #endif  /* rs6000-protos.h */"}, {"sha": "e800d004252cc2b5b0c9b7899c29c284cf3da08b", "filename": "gcc/coretypes.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2Fcoretypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2Fcoretypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoretypes.h?ref=e150159cbe7698f9ac399ba9f367627d9427e519", "patch": "@@ -44,6 +44,12 @@ typedef struct rtvec_def *rtvec;\n union tree_node;\n typedef union tree_node *tree;\n \n+/* Provide forward struct declaration so that we don't have to include\n+   all of cpplib.h whenever a random prototype includes a pointer.\n+   Note that the cpp_reader typedef remains part of cpplib.h.  */\n+\n+struct cpp_reader;\n+\n #else\n \n struct _dont_use_rtx_here_;"}, {"sha": "d0367049694d9c06746b69437479cd70213b8775", "filename": "gcc/hashtable.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhashtable.h?ref=e150159cbe7698f9ac399ba9f367627d9427e519", "patch": "@@ -32,11 +32,6 @@ struct ht_identifier GTY(())\n #define HT_LEN(NODE) ((NODE)->len)\n #define HT_STR(NODE) ((NODE)->str)\n \n-/* We want code outside cpplib, such as the compiler front-ends, to be\n-   able to include this header, and to be able to link with\n-   cpphashtbl.o without pulling in any other parts of cpplib.  */\n-\n-struct cpp_reader;\n typedef struct ht hash_table;\n typedef struct ht_identifier *hashnode;\n "}, {"sha": "9f30bdecda25c5db35e3111697c6eb8985ee8ae8", "filename": "gcc/scan.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2Fscan.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2Fscan.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fscan.h?ref=e150159cbe7698f9ac399ba9f367627d9427e519", "patch": "@@ -65,7 +65,6 @@ extern void recognized_function _PARAMS((const struct cpp_token *,\n extern void recognized_extern _PARAMS((const struct cpp_token *));\n extern unsigned int hashstr _PARAMS((const char *, unsigned int));\n \n-struct cpp_reader;\n extern int scan_decls _PARAMS((struct cpp_reader *, int, char **));\n \n /* get_token is a simple C lexer.  */"}, {"sha": "b124a507b73b1d1c4ea5909f933517742d2dd370", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e150159cbe7698f9ac399ba9f367627d9427e519/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=e150159cbe7698f9ac399ba9f367627d9427e519", "patch": "@@ -2374,7 +2374,6 @@ enum attribute_flags\n \n extern tree merge_decl_attributes PARAMS ((tree, tree));\n extern tree merge_type_attributes PARAMS ((tree, tree));\n-struct cpp_reader;\n extern void default_register_cpp_builtins PARAMS ((struct cpp_reader *));\n \n /* Split a list of declspecs and attributes into two.  */"}]}