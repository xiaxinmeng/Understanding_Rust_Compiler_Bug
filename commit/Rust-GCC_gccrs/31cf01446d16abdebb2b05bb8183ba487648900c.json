{"sha": "31cf01446d16abdebb2b05bb8183ba487648900c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFjZjAxNDQ2ZDE2YWJkZWJiMmIwNWJiODE4M2JhNDg3NjQ4OTAwYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1999-09-09T21:36:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-09-09T21:36:20Z"}, "message": "defaults.h (EH_FRAME_SECTION, [...]): Define here.\n\n\t* defaults.h (EH_FRAME_SECTION, EH_FRAME_SECTION_ASM_OP): Define here.\n\t* crtstuff.c: Not here.\n\t* dwarf2out.c: Or here.\n\t* libgcc2.c (__do_global_ctors, __do_global_dtors): Handle EH frame\n\tinfo.\n\nFrom-SVN: r29241", "tree": {"sha": "723f2802719575de5ff62a84c4285e1397b7da80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/723f2802719575de5ff62a84c4285e1397b7da80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31cf01446d16abdebb2b05bb8183ba487648900c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31cf01446d16abdebb2b05bb8183ba487648900c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31cf01446d16abdebb2b05bb8183ba487648900c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31cf01446d16abdebb2b05bb8183ba487648900c/comments", "author": null, "committer": null, "parents": [{"sha": "a8f73d4b365bbfe9145bfd4ae16159d632ca0c33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8f73d4b365bbfe9145bfd4ae16159d632ca0c33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8f73d4b365bbfe9145bfd4ae16159d632ca0c33"}], "stats": {"total": 64, "additions": 41, "deletions": 23}, "files": [{"sha": "27f5f129dcaee900526e7cd6f7a6522a92c1919b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31cf01446d16abdebb2b05bb8183ba487648900c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31cf01446d16abdebb2b05bb8183ba487648900c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31cf01446d16abdebb2b05bb8183ba487648900c", "patch": "@@ -1,3 +1,11 @@\n+Thu Sep  9 14:23:02 1999  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* defaults.h (EH_FRAME_SECTION, EH_FRAME_SECTION_ASM_OP): Define here.\n+\t* crtstuff.c: Not here.\n+\t* dwarf2out.c: Or here.\n+\t* libgcc2.c (__do_global_ctors, __do_global_dtors): Handle EH frame\n+\tinfo.\n+\n Thu Sep  9 09:40:58 1999  Mark Mitchell  <mark@codesourcery.com>\n \n \t* function.h (free_after_compilation): Remove decl parameter."}, {"sha": "6ce1c863acfe13f847dd6205f43e8ae6bf68b370", "filename": "gcc/crtstuff.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31cf01446d16abdebb2b05bb8183ba487648900c/gcc%2Fcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31cf01446d16abdebb2b05bb8183ba487648900c/gcc%2Fcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcrtstuff.c?ref=31cf01446d16abdebb2b05bb8183ba487648900c", "patch": "@@ -1,6 +1,6 @@\n /* Specialized bits of code needed to support construction and\n    destruction of file-scope objects in C++ code.\n-   Copyright (C) 1991, 94, 95, 96, 97, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1994-1999 Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@monkeys.com).\n \n This file is part of GNU CC.\n@@ -108,9 +108,6 @@ extern void *__deregister_frame_info (void *)\n #ifndef DTORS_SECTION_ASM_OP\n #define DTORS_SECTION_ASM_OP\t\".section\\t.dtors,\\\"aw\\\"\"\n #endif\n-#if !defined (EH_FRAME_SECTION_ASM_OP) && defined (DWARF2_UNWIND_INFO) && defined(ASM_OUTPUT_SECTION_NAME)\n-#define EH_FRAME_SECTION_ASM_OP\t\".section\\t.eh_frame,\\\"aw\\\"\"\n-#endif\n \n #ifdef OBJECT_FORMAT_ELF\n "}, {"sha": "2fe8cd4772a9b057bbbe6e89443b9e72d70a2bad", "filename": "gcc/defaults.h", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31cf01446d16abdebb2b05bb8183ba487648900c/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31cf01446d16abdebb2b05bb8183ba487648900c/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=31cf01446d16abdebb2b05bb8183ba487648900c", "patch": "@@ -1,7 +1,7 @@\n /* Definitions of various defaults for how to do assembler output\n    (most of which are designed to be appropriate for GAS or for\n    some BSD assembler).\n-   Copyright (C) 1992, 1996, 1997, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1996-1999 Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@monkeys.com)\n \n This file is part of GNU CC.\n@@ -155,6 +155,19 @@ do { fprintf (FILE, \"\\t%s\\t\", ASM_LONG);\t\t\t\t\\\n #define DWARF2_UNWIND_INFO 1\n #endif\n \n+#if defined (DWARF2_UNWIND_INFO) && !defined (EH_FRAME_SECTION)\n+# if defined (EH_FRAME_SECTION_ASM_OP)\n+#  define EH_FRAME_SECTION() eh_frame_section();\n+# else\n+   /* If we aren't using crtstuff to run ctors, don't use it for EH.  */\n+#  if defined (ASM_OUTPUT_SECTION_NAME) && defined (ASM_OUTPUT_CONSTRUCTOR)\n+#   define EH_FRAME_SECTION_ASM_OP\t\".section\\t.eh_frame,\\\"aw\\\"\"\n+#   define EH_FRAME_SECTION() \\\n+     do { named_section (NULL_TREE, \".eh_frame\", 0); } while (0)\n+#  endif\n+# endif\n+#endif\n+\n /* By default, we generate a label at the beginning and end of the\n    text section, and compute the size of the text section by\n    subtracting the two.  However, on some platforms that doesn't "}, {"sha": "a79339c32d1bade76ef61c203cc56619d5005dca", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31cf01446d16abdebb2b05bb8183ba487648900c/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31cf01446d16abdebb2b05bb8183ba487648900c/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=31cf01446d16abdebb2b05bb8183ba487648900c", "patch": "@@ -1674,24 +1674,6 @@ output_cfi (cfi, fde)\n      }\n }\n \n-#if !defined (EH_FRAME_SECTION)\n-#if defined (EH_FRAME_SECTION_ASM_OP)\n-#define EH_FRAME_SECTION() eh_frame_section();\n-#else\n-#if defined (ASM_OUTPUT_SECTION_NAME)\n-#define EH_FRAME_SECTION()\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\\\n-      named_section (NULL_TREE, \".eh_frame\", 0);\t\\\n-  } while (0)\n-#endif\n-#endif\n-#endif\n-\n-/* If we aren't using crtstuff to run ctors, don't use it for EH.  */\n-#if !defined (HAS_INIT_SECTION) && !defined (INIT_SECTION_ASM_OP)\n-#undef EH_FRAME_SECTION\n-#endif\n-\n /* Output the call frame information used to used to record information\n    that relates to calculating the frame pointer, and records the\n    location of saved registers.  */"}, {"sha": "33481b141286354effcf2bf3be8ce226f9f23a69", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31cf01446d16abdebb2b05bb8183ba487648900c/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31cf01446d16abdebb2b05bb8183ba487648900c/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=31cf01446d16abdebb2b05bb8183ba487648900c", "patch": "@@ -2836,6 +2836,15 @@ cacheflush (char *beg, int size, int flag)\n #endif\n \n #if !defined (HAS_INIT_SECTION) || !defined (OBJECT_FORMAT_ELF)\n+\n+/* Some ELF crosses use crtstuff.c to provide __CTOR_LIST__, but use this\n+   code to run constructors.  In that case, we need to handle EH here, too.  */\n+\n+#ifdef EH_FRAME_SECTION\n+#include \"frame.h\"\n+extern unsigned char __EH_FRAME_BEGIN__[];\n+#endif\n+\n /* Run all the global destructors on exit from the program.  */\n \n void\n@@ -2851,6 +2860,9 @@ __do_global_dtors ()\n       (*(p-1)) ();\n     }\n #endif\n+#ifdef EH_FRAME_SECTION\n+  __deregister_frame_info (__EH_FRAME_BEGIN__);\n+#endif\n }\n #endif\n \n@@ -2871,6 +2883,12 @@ int *_exit_dummy_ref = &_exit_dummy_decl;\n void\n __do_global_ctors ()\n {\n+#ifdef EH_FRAME_SECTION\n+  {\n+    static struct object object;\n+    __register_frame_info (__EH_FRAME_BEGIN__, &object);\n+  }\n+#endif\n   DO_GLOBAL_CTORS_BODY;\n   ON_EXIT (__do_global_dtors, 0);\n }"}]}