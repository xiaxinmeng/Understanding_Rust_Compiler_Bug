{"sha": "0394741f9b89489efdd72c95fae7d2867065a72b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM5NDc0MWY5Yjg5NDg5ZWZkZDcyYzk1ZmFlN2QyODY3MDY1YTcyYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-01-04T09:43:56Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-01-04T09:43:56Z"}, "message": "trans.c (Subprogram_Body_to_gnu): Evaluate the expressions of the parameter cache within the statement group of...\n\n\t* gcc-interface/trans.c (Subprogram_Body_to_gnu): Evaluate the\n\texpressions of the parameter cache within the statement group of\n\tthe CICO mechanism.\n\nFrom-SVN: r168456", "tree": {"sha": "b28d2267f1c974afa881f7d0c877433b2819c66f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b28d2267f1c974afa881f7d0c877433b2819c66f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0394741f9b89489efdd72c95fae7d2867065a72b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0394741f9b89489efdd72c95fae7d2867065a72b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0394741f9b89489efdd72c95fae7d2867065a72b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0394741f9b89489efdd72c95fae7d2867065a72b/comments", "author": null, "committer": null, "parents": [{"sha": "2a02d0907c0b500018ba900e93239e1b03281c67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a02d0907c0b500018ba900e93239e1b03281c67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a02d0907c0b500018ba900e93239e1b03281c67"}], "stats": {"total": 56, "additions": 31, "deletions": 25}, "files": [{"sha": "f644a5569b064aae5657ac505c92fc33dac7b755", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0394741f9b89489efdd72c95fae7d2867065a72b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0394741f9b89489efdd72c95fae7d2867065a72b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0394741f9b89489efdd72c95fae7d2867065a72b", "patch": "@@ -1,3 +1,9 @@\n+2011-01-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (Subprogram_Body_to_gnu): Evaluate the\n+\texpressions of the parameter cache within the statement group of\n+\tthe CICO mechanism.\n+\n 2011-01-04  Olivier Hainque  <hainque@adacore.com>\n             Eric Botcazou  <ebotcazou@adacore.com>\n "}, {"sha": "ecd948993fb7cdb233ceab0081ca73d05e414351", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0394741f9b89489efdd72c95fae7d2867065a72b/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0394741f9b89489efdd72c95fae7d2867065a72b/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=0394741f9b89489efdd72c95fae7d2867065a72b", "patch": "@@ -2603,6 +2603,31 @@ Subprogram_Body_to_gnu (Node_Id gnat_node)\n   gnat_poplevel ();\n   gnu_result = end_stmt_group ();\n \n+  /* If we populated the parameter attributes cache, we need to make sure that\n+     the cached expressions are evaluated on all the possible paths leading to\n+     their uses.  So we force their evaluation on entry of the function.  */\n+  cache = DECL_STRUCT_FUNCTION (gnu_subprog_decl)->language->parm_attr_cache;\n+  if (cache)\n+    {\n+      struct parm_attr_d *pa;\n+      int i;\n+\n+      start_stmt_group ();\n+\n+      FOR_EACH_VEC_ELT (parm_attr, cache, i, pa)\n+\t{\n+\t  if (pa->first)\n+\t    add_stmt_with_node_force (pa->first, gnat_node);\n+\t  if (pa->last)\n+\t    add_stmt_with_node_force (pa->last, gnat_node);\n+\t  if (pa->length)\n+\t    add_stmt_with_node_force (pa->length, gnat_node);\n+\t}\n+\n+      add_stmt (gnu_result);\n+      gnu_result = end_stmt_group ();\n+    }\n+\n   /* If we are dealing with a return from an Ada procedure with parameters\n      passed by copy-in/copy-out, we need to return a record containing the\n      final values of these parameters.  If the list contains only one entry,\n@@ -2637,31 +2662,6 @@ Subprogram_Body_to_gnu (Node_Id gnat_node)\n \n   VEC_pop (tree, gnu_return_label_stack);\n \n-  /* If we populated the parameter attributes cache, we need to make sure that\n-     the cached expressions are evaluated on all the possible paths leading to\n-     their uses.  So we force their evaluation on entry of the function.  */\n-  cache = DECL_STRUCT_FUNCTION (gnu_subprog_decl)->language->parm_attr_cache;\n-  if (cache)\n-    {\n-      struct parm_attr_d *pa;\n-      int i;\n-\n-      start_stmt_group ();\n-\n-      FOR_EACH_VEC_ELT (parm_attr, cache, i, pa)\n-\t{\n-\t  if (pa->first)\n-\t    add_stmt_with_node_force (pa->first, gnat_node);\n-\t  if (pa->last)\n-\t    add_stmt_with_node_force (pa->last, gnat_node);\n-\t  if (pa->length)\n-\t    add_stmt_with_node_force (pa->length, gnat_node);\n-\t}\n-\n-      add_stmt (gnu_result);\n-      gnu_result = end_stmt_group ();\n-    }\n-\n   end_subprog_body (gnu_result);\n \n   /* Attempt setting the end_locus of our GCC body tree, typically a"}]}