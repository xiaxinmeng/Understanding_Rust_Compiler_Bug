{"sha": "d132e873514ba221b4d168c242166f132162db33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEzMmU4NzM1MTRiYTIyMWI0ZDE2OGMyNDIxNjZmMTMyMTYyZGIzMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-11-28T08:54:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-11-28T08:54:31Z"}, "message": "re PR target/88189 (ix86_expand_sse_movcc and blend for scalars)\n\n\tPR target/88189\n\t* config/i386/i386.c (ix86_expand_sse_movcc): Handle DFmode and\n\tSFmode using sse4_1_blendvs[sd] with TARGET_SSE4_1.  Formatting fixes.\n\t* config/i386/sse.md (sse4_1_blendv<ssemodesuffix>): New pattern.\n\n\t* gcc.target/i386/sse4_1-pr88189-1.c: New test.\n\t* gcc.target/i386/sse4_1-pr88189-2.c: New test.\n\t* gcc.target/i386/avx-pr88189-1.c: New test.\n\t* gcc.target/i386/avx-pr88189-2.c: New test.\n\nFrom-SVN: r266548", "tree": {"sha": "d55ff6c6464799e6c9e8173423b4e65e327ee326", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d55ff6c6464799e6c9e8173423b4e65e327ee326"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d132e873514ba221b4d168c242166f132162db33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d132e873514ba221b4d168c242166f132162db33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d132e873514ba221b4d168c242166f132162db33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d132e873514ba221b4d168c242166f132162db33/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62574f122c7aab5fe06e1b68c659650c17964dc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62574f122c7aab5fe06e1b68c659650c17964dc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62574f122c7aab5fe06e1b68c659650c17964dc4"}], "stats": {"total": 153, "additions": 146, "deletions": 7}, "files": [{"sha": "d4b0355b6415373e78cef5dca91f8f3bce4e3857", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d132e873514ba221b4d168c242166f132162db33/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d132e873514ba221b4d168c242166f132162db33/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d132e873514ba221b4d168c242166f132162db33", "patch": "@@ -1,3 +1,10 @@\n+2018-11-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/88189\n+\t* config/i386/i386.c (ix86_expand_sse_movcc): Handle DFmode and\n+\tSFmode using sse4_1_blendvs[sd] with TARGET_SSE4_1.  Formatting fixes.\n+\t* config/i386/sse.md (sse4_1_blendv<ssemodesuffix>): New pattern.\n+\n 2018-11-27  Martin Liska  <mliska@suse.cz>\n \n \t* gcov.c (generate_results): Append current_working_directory"}, {"sha": "cef809f575fb573f71ec21cb762890113bd39723", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d132e873514ba221b4d168c242166f132162db33/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d132e873514ba221b4d168c242166f132162db33/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d132e873514ba221b4d168c242166f132162db33", "patch": "@@ -23585,30 +23585,27 @@ ix86_expand_sse_movcc (rtx dest, rtx cmp, rtx op_true, rtx op_false)\n     {\n       emit_insn (gen_rtx_SET (dest, cmp));\n     }\n-  else if (op_false == CONST0_RTX (mode)\n-      && !maskcmp)\n+  else if (op_false == CONST0_RTX (mode) && !maskcmp)\n     {\n       op_true = force_reg (mode, op_true);\n       x = gen_rtx_AND (mode, cmp, op_true);\n       emit_insn (gen_rtx_SET (dest, x));\n     }\n-  else if (op_true == CONST0_RTX (mode)\n-      && !maskcmp)\n+  else if (op_true == CONST0_RTX (mode) && !maskcmp)\n     {\n       op_false = force_reg (mode, op_false);\n       x = gen_rtx_NOT (mode, cmp);\n       x = gen_rtx_AND (mode, x, op_false);\n       emit_insn (gen_rtx_SET (dest, x));\n     }\n   else if (INTEGRAL_MODE_P (mode) && op_true == CONSTM1_RTX (mode)\n-      && !maskcmp)\n+\t   && !maskcmp)\n     {\n       op_false = force_reg (mode, op_false);\n       x = gen_rtx_IOR (mode, cmp, op_false);\n       emit_insn (gen_rtx_SET (dest, x));\n     }\n-  else if (TARGET_XOP\n-      && !maskcmp)\n+  else if (TARGET_XOP && !maskcmp)\n     {\n       op_true = force_reg (mode, op_true);\n \n@@ -23639,6 +23636,20 @@ ix86_expand_sse_movcc (rtx dest, rtx cmp, rtx op_true, rtx op_false)\n \t  if (TARGET_SSE4_1)\n \t    gen = gen_sse4_1_blendvpd;\n \t  break;\n+\tcase E_SFmode:\n+\t  if (TARGET_SSE4_1)\n+\t    {\n+\t      gen = gen_sse4_1_blendvss;\n+\t      op_true = force_reg (mode, op_true);\n+\t    }\n+\t  break;\n+\tcase E_DFmode:\n+\t  if (TARGET_SSE4_1)\n+\t    {\n+\t      gen = gen_sse4_1_blendvsd;\n+\t      op_true = force_reg (mode, op_true);\n+\t    }\n+\t  break;\n \tcase E_V16QImode:\n \tcase E_V8HImode:\n \tcase E_V4SImode:"}, {"sha": "501a1df14549d7104fb3a7a90cbb044f8be15546", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d132e873514ba221b4d168c242166f132162db33/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d132e873514ba221b4d168c242166f132162db33/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=d132e873514ba221b4d168c242166f132162db33", "patch": "@@ -15641,6 +15641,46 @@\n    (set_attr \"btver2_decode\" \"vector,vector,vector\") \n    (set_attr \"mode\" \"<MODE>\")])\n \n+;; Also define scalar versions.  These are used for conditional move.\n+;; Using subregs into vector modes causes register allocation lossage.\n+;; These patterns do not allow memory operands because the native\n+;; instructions read the full 128-bits.\n+\n+(define_insn \"sse4_1_blendv<ssemodesuffix>\"\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"=Yr,*x,x\")\n+\t(unspec:MODEF\n+\t  [(match_operand:MODEF 1 \"register_operand\" \"0,0,x\")\n+\t   (match_operand:MODEF 2 \"register_operand\" \"Yr,*x,x\")\n+\t   (match_operand:MODEF 3 \"register_operand\" \"Yz,Yz,x\")]\n+\t  UNSPEC_BLENDV))]\n+  \"TARGET_SSE4_1\"\n+{\n+  if (get_attr_mode (insn) == MODE_V4SF)\n+    return (which_alternative == 2\n+\t    ? \"vblendvps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+\t    : \"blendvps\\t{%3, %2, %0|%0, %2, %3}\");\n+  else\n+    return (which_alternative == 2\n+\t    ? \"vblendv<ssevecmodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+\t    : \"blendv<ssevecmodesuffix>\\t{%3, %2, %0|%0, %2, %3}\");\n+}\n+  [(set_attr \"isa\" \"noavx,noavx,avx\")\n+   (set_attr \"type\" \"ssemov\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix_data16\" \"1,1,*\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,orig,vex\")\n+   (set_attr \"btver2_decode\" \"vector,vector,vector\") \n+   (set (attr \"mode\")\n+\t(cond [(match_test \"TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL\")\n+\t\t (const_string \"V4SF\")\n+\t       (match_test \"TARGET_AVX\")\n+\t\t (const_string \"<ssevecmode>\")\n+\t       (match_test \"optimize_function_for_size_p (cfun)\")\n+\t\t (const_string \"V4SF\")\n+\t       ]\n+\t       (const_string \"<ssevecmode>\")))])\n+\n (define_insn \"<sse4_1>_dp<ssemodesuffix><avxsizesuffix>\"\n   [(set (match_operand:VF_128_256 0 \"register_operand\" \"=Yr,*x,x\")\n \t(unspec:VF_128_256"}, {"sha": "5d3b2d1266468903252529e5e7afd5695cbbee9a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d132e873514ba221b4d168c242166f132162db33/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d132e873514ba221b4d168c242166f132162db33/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d132e873514ba221b4d168c242166f132162db33", "patch": "@@ -1,5 +1,11 @@\n 2018-11-28  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/88189\n+\t* gcc.target/i386/sse4_1-pr88189-1.c: New test.\n+\t* gcc.target/i386/sse4_1-pr88189-2.c: New test.\n+\t* gcc.target/i386/avx-pr88189-1.c: New test.\n+\t* gcc.target/i386/avx-pr88189-2.c: New test.\n+\n \tPR c++/87476\n \t* g++.dg/cpp0x/pr87476-1.C: New test.\n \t* g++.dg/cpp0x/pr87476-2.C: New test."}, {"sha": "8025fa410fbf8a02b35b179d5b392d98cd50dcdc", "filename": "gcc/testsuite/gcc.target/i386/avx-pr88189-1.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d132e873514ba221b4d168c242166f132162db33/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr88189-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d132e873514ba221b4d168c242166f132162db33/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr88189-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr88189-1.c?ref=d132e873514ba221b4d168c242166f132162db33", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target avx } */\n+/* { dg-options \"-O2 -mavx -mfpmath=sse\" } */\n+\n+#define CHECK_H \"avx-check.h\"\n+#define TEST avx_test\n+\n+#include \"sse4_1-pr88189-1.c\""}, {"sha": "84c1466f2a245b1e720117abb1632031764d4abc", "filename": "gcc/testsuite/gcc.target/i386/avx-pr88189-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d132e873514ba221b4d168c242166f132162db33/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr88189-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d132e873514ba221b4d168c242166f132162db33/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr88189-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr88189-2.c?ref=d132e873514ba221b4d168c242166f132162db33", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx -mfpmath=sse\" } */\n+\n+__attribute__((noipa)) double\n+f1 (double a, double b)\n+{\n+  return a < 0 ? a : b;\n+}\n+\n+__attribute__((noipa)) float\n+f2 (float a, float b)\n+{\n+  return a < 0 ? a : b;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vblendvp\\[sd]\" 2 } } */"}, {"sha": "4db4cec2b6d7dcc9f4a68d65e9c4231b49459eaf", "filename": "gcc/testsuite/gcc.target/i386/sse4_1-pr88189-1.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d132e873514ba221b4d168c242166f132162db33/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-pr88189-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d132e873514ba221b4d168c242166f132162db33/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-pr88189-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-pr88189-1.c?ref=d132e873514ba221b4d168c242166f132162db33", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target sse4 } */\n+/* { dg-options \"-O2 -msse4.1 -mfpmath=sse\" } */\n+\n+#ifndef CHECK_H\n+#define CHECK_H \"sse4_1-check.h\"\n+#endif\n+\n+#ifndef TEST\n+#define TEST sse4_1_test\n+#endif\n+\n+#include CHECK_H\n+\n+__attribute__((noipa)) double\n+f1 (double a, double b)\n+{\n+  return a < 0 ? a : b;\n+}\n+\n+__attribute__((noipa)) float\n+f2 (float a, float b)\n+{\n+  return a < 0 ? a : b;\n+}\n+\n+static void\n+TEST (void)\n+{\n+  if (f1 (5.0, 7.0) != 7.0\n+      || f1 (-2.0, 7.0) != -2.0\n+      || f2 (1.0f, 2.0f) != 2.0f\n+      || f2 (-1.0f, -3.0f) != -1.0f)\n+    abort ();\n+}"}, {"sha": "7817e54a897719b07c99fbf25ef95553b1cb82a2", "filename": "gcc/testsuite/gcc.target/i386/sse4_1-pr88189-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d132e873514ba221b4d168c242166f132162db33/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-pr88189-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d132e873514ba221b4d168c242166f132162db33/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-pr88189-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-pr88189-2.c?ref=d132e873514ba221b4d168c242166f132162db33", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse4.1 -mno-avx -mfpmath=sse\" } */\n+\n+__attribute__((noipa)) double\n+f1 (double a, double b)\n+{\n+  return a < 0 ? a : b;\n+}\n+\n+__attribute__((noipa)) float\n+f2 (float a, float b)\n+{\n+  return a < 0 ? a : b;\n+}\n+\n+/* { dg-final { scan-assembler-times \"blendvp\\[sd]\" 2 } } */"}]}