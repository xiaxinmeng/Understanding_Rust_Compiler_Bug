{"sha": "30c73d1a3664f84897116ceb7a81cba553c8d52f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBjNzNkMWEzNjY0Zjg0ODk3MTE2Y2ViN2E4MWNiYTU1M2M4ZDUyZg==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2010-01-13T22:17:27Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2010-01-13T22:17:27Z"}, "message": "PR target/pr42542\n\n2010-01-13  Steve Ellcey  <sje@cup.hp.com>\n\n\tPR target/pr42542\n\t* gcc.target/ia64/pr42542-1.c: New.\n\t* gcc.target/ia64/pr42542-2.c: New.\n\t* gcc.target/ia64/pr42542-3.c: New.\n\nFrom-SVN: r155871", "tree": {"sha": "dd3e7b853f57b586047bfd2cffbbafa795f40688", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd3e7b853f57b586047bfd2cffbbafa795f40688"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30c73d1a3664f84897116ceb7a81cba553c8d52f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30c73d1a3664f84897116ceb7a81cba553c8d52f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30c73d1a3664f84897116ceb7a81cba553c8d52f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30c73d1a3664f84897116ceb7a81cba553c8d52f/comments", "author": null, "committer": null, "parents": [{"sha": "9540f5ef923d12c177658f9b742f562c1ad17edc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9540f5ef923d12c177658f9b742f562c1ad17edc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9540f5ef923d12c177658f9b742f562c1ad17edc"}], "stats": {"total": 219, "additions": 219, "deletions": 0}, "files": [{"sha": "16a0e7852b0cdc70088f2c4501a03baaec85c781", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30c73d1a3664f84897116ceb7a81cba553c8d52f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30c73d1a3664f84897116ceb7a81cba553c8d52f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=30c73d1a3664f84897116ceb7a81cba553c8d52f", "patch": "@@ -1,3 +1,10 @@\n+2010-01-13  Steve Ellcey  <sje@cup.hp.com>\n+\n+\tPR target/pr42542\n+\t* gcc.target/ia64/pr42542-1.c: New.\n+\t* gcc.target/ia64/pr42542-2.c: New.\n+\t* gcc.target/ia64/pr42542-3.c: New.\n+\n 2010-01-13  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/42634"}, {"sha": "9ce66f494a95ae3c1ff918bacdeed4d20ad1dbf4", "filename": "gcc/testsuite/gcc.target/ia64/pr42542-1.c", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30c73d1a3664f84897116ceb7a81cba553c8d52f/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fpr42542-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30c73d1a3664f84897116ceb7a81cba553c8d52f/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fpr42542-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fpr42542-1.c?ref=30c73d1a3664f84897116ceb7a81cba553c8d52f", "patch": "@@ -0,0 +1,68 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O1 -ftree-vectorize\" } */\n+\n+unsigned int v1[] __attribute__ ((aligned(16))) =\n+{\n+  0x80000000, 1, 0xa0000000, 2,\n+  3, 0xd0000000, 0xf0000000, 0xe0000000\n+};\n+unsigned int v2[] __attribute__ ((aligned(16))) =\n+{\n+  4, 0xb0000000, 5, 0xc0000000,\n+  0xd0000000, 6, 7, 8\n+};\n+\n+unsigned int max[] =\n+{\n+  0x80000000, 0xb0000000, 0xa0000000, 0xc0000000,\n+  0xd0000000, 0xd0000000, 0xf0000000, 0xe0000000\n+};\n+\n+unsigned int min[] =\n+{\n+  4, 1, 5, 2,\n+  3, 6, 7, 8\n+};\n+\n+unsigned int res[8] __attribute__ ((aligned(16)));\n+\n+extern void abort (void);\n+\n+void\n+find_max (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 8; i++)\n+    res[i] = v1[i] < v2[i] ? v2[i] : v1[i];\n+}\n+\n+void\n+find_min (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 8; i++)\n+    res[i] = v1[i] > v2[i] ? v2[i] : v1[i];\n+}\n+\n+int main (void)\n+{\n+  int i;\n+  int err = 0;\n+\n+  find_max ();\n+  for (i = 0; i < 8; i++)\n+    if (res[i] != max[i])\n+      err++;\n+\n+  find_min ();\n+  for (i = 0; i < 8; i++)\n+    if (res[i] != min[i])\n+      err++;\n+\n+  if (err)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "d41eef38386a1c67b9391cbb574e89ef6fb0881d", "filename": "gcc/testsuite/gcc.target/ia64/pr42542-2.c", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30c73d1a3664f84897116ceb7a81cba553c8d52f/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fpr42542-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30c73d1a3664f84897116ceb7a81cba553c8d52f/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fpr42542-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fpr42542-2.c?ref=30c73d1a3664f84897116ceb7a81cba553c8d52f", "patch": "@@ -0,0 +1,68 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O1 -ftree-vectorize\" } */\n+\n+unsigned short v1[] __attribute__ ((aligned(16))) =\n+{\n+  0x8000, 0x9000, 1, 10, 0xa000, 0xb000, 2, 20,\n+  3, 30, 0xd000, 0xe000, 0xf000, 0xe000, 25, 30\n+};\n+unsigned short v2[] __attribute__ ((aligned(16))) =\n+{\n+  4, 40, 0xb000, 0x8000, 5, 50, 0xc000, 0xf000,\n+  0xd000, 0xa000, 6, 65, 7, 75, 0xe000, 0xc000\n+};\n+\n+unsigned short max[] =\n+{\n+  0x8000, 0x9000, 0xb000, 0x8000, 0xa000, 0xb000, 0xc000, 0xf000,\n+  0xd000, 0xa000, 0xd000, 0xe000, 0xf000, 0xe000, 0xe000, 0xc000\n+};\n+\n+unsigned short min[] =\n+{\n+  4, 40, 1, 10, 5, 50, 2, 20,\n+  3, 30, 6, 65, 7, 75, 25, 30\n+};\n+\n+unsigned short res[16] __attribute__ ((aligned(16)));\n+\n+extern void abort (void);\n+\n+void\n+find_max (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 16; i++)\n+    res[i] = v1[i] < v2[i] ? v2[i] : v1[i];\n+}\n+\n+void\n+find_min (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 16; i++)\n+    res[i] = v1[i] > v2[i] ? v2[i] : v1[i];\n+}\n+\n+int main (void)\n+{\n+  int i;\n+  int err = 0;\n+\n+  find_max ();\n+  for (i = 0; i < 16; i++)\n+    if (res[i] != max[i])\n+      err++;\n+\n+  find_min ();\n+  for (i = 0; i < 16; i++)\n+    if (res[i] != min[i])\n+      err++;\n+\n+  if (err)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "29e090883b702e8352c94046fa05a327e8063763", "filename": "gcc/testsuite/gcc.target/ia64/pr42542-3.c", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30c73d1a3664f84897116ceb7a81cba553c8d52f/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fpr42542-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30c73d1a3664f84897116ceb7a81cba553c8d52f/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fpr42542-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fia64%2Fpr42542-3.c?ref=30c73d1a3664f84897116ceb7a81cba553c8d52f", "patch": "@@ -0,0 +1,76 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O1 -ftree-vectorize\" } */\n+\n+unsigned char v1[] __attribute__ ((aligned(16))) =\n+{\n+  0x80, 0xd0, 0x90, 0xa0, 1, 15, 10, 15,\n+  0xa0, 0xc0, 0xb0, 0xf0, 2, 25, 20, 35,\n+  3, 34, 30, 36, 0xd0, 0x80, 0xe0, 0xb0,\n+  0xf0, 0xe0, 0xe0, 0x80, 25, 34, 30, 40\n+};\n+unsigned char v2[] __attribute__ ((aligned(16))) =\n+{\n+  4, 44, 40, 48, 0xb0, 0x80, 0x80, 0x90,\n+  5, 55, 50, 51, 0xc0, 0xb0, 0xf0, 0xd0,\n+  0xd0, 0x80, 0xa0, 0xf0, 6, 61, 65, 68,\n+  7, 76, 75, 81, 0xe0, 0xf0, 0xc0, 0x90\n+};\n+\n+unsigned char max[] =\n+{\n+  0x80, 0xd0, 0x90, 0xa0, 0xb0, 0x80, 0x80, 0x90,\n+  0xa0, 0xc0, 0xb0, 0xf0, 0xc0, 0xb0, 0xf0, 0xd0,\n+  0xd0, 0x80, 0xa0, 0xf0, 0xd0, 0x80, 0xe0, 0xb0,\n+  0xf0, 0xe0, 0xe0, 0x80, 0xe0, 0xf0, 0xc0, 0x90\n+};\n+\n+unsigned char min[] =\n+{\n+  4, 44, 40, 48, 1, 15, 10, 15,\n+  5, 55, 50, 51, 2, 25, 20, 35,\n+  3, 34, 30, 36, 6, 61, 65, 68,\n+  7, 76, 75, 81, 25, 34, 30, 40\n+};\n+\n+unsigned char res[32] __attribute__ ((aligned(16)));\n+\n+extern void abort (void);\n+\n+void\n+find_max (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 32; i++)\n+    res[i] = v1[i] < v2[i] ? v2[i] : v1[i];\n+}\n+\n+void\n+find_min (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < 32; i++)\n+    res[i] = v1[i] > v2[i] ? v2[i] : v1[i];\n+}\n+\n+int main (void)\n+{\n+  int i;\n+  int err = 0;\n+\n+  find_max ();\n+  for (i = 0; i < 32; i++)\n+    if (res[i] != max[i])\n+      err++;\n+\n+  find_min ();\n+  for (i = 0; i < 32; i++)\n+    if (res[i] != min[i])\n+      err++;\n+\n+  if (err)\n+    abort ();\n+\n+  return 0;\n+}"}]}