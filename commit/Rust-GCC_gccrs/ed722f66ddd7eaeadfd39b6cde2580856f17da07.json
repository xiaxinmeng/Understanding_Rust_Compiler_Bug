{"sha": "ed722f66ddd7eaeadfd39b6cde2580856f17da07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ3MjJmNjZkZGQ3ZWFlYWRmZDM5YjZjZGUyNTgwODU2ZjE3ZGEwNw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2002-01-08T18:16:25Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2002-01-08T18:16:25Z"}, "message": "tm.texi (ASM_OUTPUT_EH_REGION_BEG, [...]): Remove documentation of obsolete macros.\n\n\t* doc/tm.texi (ASM_OUTPUT_EH_REGION_BEG, ASM_OUTPUT_EH_REGION_END,\n\tASM_OUTPUT_LABELREF_AS_INT, DOESNT_NEED_UNWINDER, EH_TABLE_LOOKUP,\n\tOBJC_SELECTORS_WITHOUT_LABELS, OMIT_EH_TABLE): Remove\n\tdocumentation of obsolete macros.\n\t* system.h: Poison these macros.\n\t* config/d30v/d30v.h, config/ns32k/encore.h,\n\tconfig/stormy16/stormy16.h: Remove definitions and commented out\n\tdefinitions of obsolete macros.\n\nFrom-SVN: r48650", "tree": {"sha": "b18f88dcea8d1769ada1595096e2ca4ce27225e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b18f88dcea8d1769ada1595096e2ca4ce27225e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed722f66ddd7eaeadfd39b6cde2580856f17da07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed722f66ddd7eaeadfd39b6cde2580856f17da07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed722f66ddd7eaeadfd39b6cde2580856f17da07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed722f66ddd7eaeadfd39b6cde2580856f17da07/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31e5e29ab3c92f1428875c89faadf720553c0c3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31e5e29ab3c92f1428875c89faadf720553c0c3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31e5e29ab3c92f1428875c89faadf720553c0c3d"}], "stats": {"total": 151, "additions": 18, "deletions": 133}, "files": [{"sha": "b04a7d3198157aa5b9aea7e4bff77efcf078a4a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed722f66ddd7eaeadfd39b6cde2580856f17da07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed722f66ddd7eaeadfd39b6cde2580856f17da07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed722f66ddd7eaeadfd39b6cde2580856f17da07", "patch": "@@ -1,3 +1,14 @@\n+2002-01-08  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* doc/tm.texi (ASM_OUTPUT_EH_REGION_BEG, ASM_OUTPUT_EH_REGION_END,\n+\tASM_OUTPUT_LABELREF_AS_INT, DOESNT_NEED_UNWINDER, EH_TABLE_LOOKUP,\n+\tOBJC_SELECTORS_WITHOUT_LABELS, OMIT_EH_TABLE): Remove\n+\tdocumentation of obsolete macros.\n+\t* system.h: Poison these macros.\n+\t* config/d30v/d30v.h, config/ns32k/encore.h,\n+\tconfig/stormy16/stormy16.h: Remove definitions and commented out\n+\tdefinitions of obsolete macros.\n+\n Tue Jan  8 15:56:41 2002  Nicola Pero  <nicola@brainstorm.co.uk>\n \n \t* objc/objc-act.c (handle_class_ref): Mark the declaration of"}, {"sha": "13ba36d60b020803dd307c51d31b860e56bf4632", "filename": "gcc/config/d30v/d30v.h", "status": "modified", "additions": 1, "deletions": 36, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed722f66ddd7eaeadfd39b6cde2580856f17da07/gcc%2Fconfig%2Fd30v%2Fd30v.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed722f66ddd7eaeadfd39b6cde2580856f17da07/gcc%2Fconfig%2Fd30v%2Fd30v.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.h?ref=ed722f66ddd7eaeadfd39b6cde2580856f17da07", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for Mitsubishi D30V.\n-   Copyright (C) 1997, 1998, 1999, 2000, 2001\n+   Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n    Free Software Foundation, Inc.\n    Contributed by Cygnus Solutions.\n \n@@ -996,14 +996,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n    at run-time.  This is used in `cpp'.  */\n /* #define MAX_WCHAR_TYPE_SIZE */\n \n-/* Define this macro if the compiler can group all the selectors together into\n-   a vector and use just one label at the beginning of the vector.  Otherwise,\n-   the compiler must give each selector its own assembler label.\n-\n-   On certain machines, it is important to have a separate label for each\n-   selector because this enables the linker to eliminate duplicate selectors.  */\n-/* #define OBJC_SELECTORS_WITHOUT_LABELS */\n-\n \f\n /* D30V register layout.  */\n \n@@ -4545,33 +4537,6 @@ fprintf (STREAM, \"\\t.word .L%d\\n\", VALUE)\n \f\n /* Assembler Commands for Exception Regions.  */\n \n-/* A C expression to output text to mark the start of an exception region.\n-\n-   This macro need not be defined on most platforms.  */\n-/* #define ASM_OUTPUT_EH_REGION_BEG() */\n-\n-/* A C expression to output text to mark the end of an exception region.\n-\n-   This macro need not be defined on most platforms.  */\n-/* #define ASM_OUTPUT_EH_REGION_END() */\n-\n-/* A C expression that is nonzero if the normal exception table output should\n-   be omitted.\n-\n-   This macro need not be defined on most platforms.  */\n-/* #define OMIT_EH_TABLE() */\n-\n-/* Alternate runtime support for looking up an exception at runtime and finding\n-   the associated handler, if the default method won't work.\n-\n-   This macro need not be defined on most platforms.  */\n-/* #define EH_TABLE_LOOKUP() */\n-\n-/* A C expression that decides whether or not the current function needs to\n-   have a function unwinder generated for it.  See the file `except.c' for\n-   details on when to define this, and how.  */\n-/* #define DOESNT_NEED_UNWINDER */\n-\n /* An rtx used to mask the return address found via RETURN_ADDR_RTX, so that it\n    does not contain any extraneous set bits in it.  */\n /* #define MASK_RETURN_ADDR */"}, {"sha": "452b893ec2d93bb5fefe63e13f637c597aa6f81c", "filename": "gcc/config/ns32k/encore.h", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed722f66ddd7eaeadfd39b6cde2580856f17da07/gcc%2Fconfig%2Fns32k%2Fencore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed722f66ddd7eaeadfd39b6cde2580856f17da07/gcc%2Fconfig%2Fns32k%2Fencore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fencore.h?ref=ed722f66ddd7eaeadfd39b6cde2580856f17da07", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  ENCORE NS32000 version.\n-   Copyright (C) 1988, 1993, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1993, 2000, 2001, 2002 Free Software Foundation, Inc.\n    Adapted by Robert Brown (brown@harvard.harvard.edu) from the Sequent\n    version by Michael Tiemann (tiemann@mcc.com).\n \n@@ -47,7 +47,6 @@ Boston, MA 02111-1307, USA.  */\n #undef PRINT_OPERAND_ADDRESS\n #undef TARGET_VERSION\n #undef FUNCTION_PROFILER\n-#undef ASM_OUTPUT_LABELREF_AS_INT\n \n #define TARGET_DEFAULT 9  /* 32332 with 32081.  */\n #define TARGET_VERSION fprintf (stderr, \" (32000, Encore syntax)\");\n@@ -96,14 +95,6 @@ output_file_directive ((FILE), main_input_filename)\n  *  uninitialized locals.\n  */\n \n-#define ASM_OUTPUT_LABELREF_AS_INT(STREAM, NAME)\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  fprintf (STREAM, \"\\t.double\\t\");\t\t\t\t\t\\\n-  ASM_OUTPUT_LABELREF (STREAM, NAME);\t\t\t\t\t\\\n-  fprintf (STREAM, \"\\n\");\t\t\t\t\t\t\\\n-} while (0)\n-\n-\n #define ASM_OUTPUT_LOCAL(FILE, NAME, SIZE, ROUNDED)\t\t\\\n ( fputs (\"\\t.bss \", (FILE)),\t\t\t\t\t\\\n   assemble_name ((FILE), (NAME)),\t\t\t\t\\"}, {"sha": "11465f7149b13f5f12d1ea8d5a28dedb3e4f721a", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed722f66ddd7eaeadfd39b6cde2580856f17da07/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed722f66ddd7eaeadfd39b6cde2580856f17da07/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=ed722f66ddd7eaeadfd39b6cde2580856f17da07", "patch": "@@ -932,14 +932,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n    objc_selector *'.  */\n /* #define OBJC_INT_SELECTORS */\n \n-/* Define this macro if the compiler can group all the selectors together into\n-   a vector and use just one label at the beginning of the vector.  Otherwise,\n-   the compiler must give each selector its own assembler label.\n-\n-   On certain machines, it is important to have a separate label for each\n-   selector because this enables the linker to eliminate duplicate selectors.  */\n-/* #define OBJC_SELECTORS_WITHOUT_LABELS */\n-\n \f\n /* Register Basics */\n \n@@ -4287,33 +4279,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n \f\n /* Assembler Commands for Exception Regions.  */\n \n-/* A C expression to output text to mark the start of an exception region.\n-\n-   This macro need not be defined on most platforms.  */\n-/* #define ASM_OUTPUT_EH_REGION_BEG() */\n-\n-/* A C expression to output text to mark the end of an exception region.\n-\n-   This macro need not be defined on most platforms.  */\n-/* #define ASM_OUTPUT_EH_REGION_END() */\n-\n-/* A C expression that is nonzero if the normal exception table output should\n-   be omitted.\n-\n-   This macro need not be defined on most platforms.  */\n-/* #define OMIT_EH_TABLE() */\n-\n-/* Alternate runtime support for looking up an exception at runtime and finding\n-   the associated handler, if the default method won't work.\n-\n-   This macro need not be defined on most platforms.  */\n-/* #define EH_TABLE_LOOKUP() */\n-\n-/* A C expression that decides whether or not the current function needs to\n-   have a function unwinder generated for it.  See the file `except.c' for\n-   details on when to define this, and how.  */\n-/* #define DOESNT_NEED_UNWINDER */\n-\n /* An rtx used to mask the return address found via RETURN_ADDR_RTX, so that it\n    does not contain any extraneous set bits in it.  */\n /* #define MASK_RETURN_ADDR */"}, {"sha": "c46c10e007ebf0f41650a5bd460277828a8bea77", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed722f66ddd7eaeadfd39b6cde2580856f17da07/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed722f66ddd7eaeadfd39b6cde2580856f17da07/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=ed722f66ddd7eaeadfd39b6cde2580856f17da07", "patch": "@@ -1557,16 +1557,6 @@ If you don't define this macro, the default is the first of\n unsigned int\"} that has as much precision as @code{long long unsigned\n int}.\n \n-@findex OBJC_SELECTORS_WITHOUT_LABELS\n-@item OBJC_SELECTORS_WITHOUT_LABELS\n-Define this macro if the compiler can group all the selectors together\n-into a vector and use just one label at the beginning of the vector.\n-Otherwise, the compiler must give each selector its own assembler\n-label.\n-\n-On certain machines, it is important to have a separate label for each\n-selector because this enables the linker to eliminate duplicate selectors.\n-\n @findex TARGET_PTRMEMFUNC_VBIT_LOCATION\n @item TARGET_PTRMEMFUNC_VBIT_LOCATION\n The C++ compiler represents a pointer-to-member-function with a struct\n@@ -6268,14 +6258,6 @@ A C statement (sans semicolon) to output to the stdio stream\n is customary on your operating system, as it is in most Berkeley Unix\n systems.  This macro is used in @code{assemble_name}.\n \n-@ignore @c Seems not to exist anymore.\n-@findex ASM_OUTPUT_LABELREF_AS_INT\n-@item ASM_OUTPUT_LABELREF_AS_INT (@var{file}, @var{label})\n-Define this macro for systems that use the program @command{collect2}.\n-The definition should be a C statement to output a word containing\n-a reference to the label @var{label}.\n-@end ignore\n-\n @findex ASM_OUTPUT_SYMBOL_REF\n @item ASM_OUTPUT_SYMBOL_REF (@var{stream}, @var{sym})\n A C statement (sans semicolon) to output a reference to\n@@ -7018,18 +7000,6 @@ This describes commands marking the start and the end of an exception\n region.\n \n @table @code\n-@findex ASM_OUTPUT_EH_REGION_BEG\n-@item ASM_OUTPUT_EH_REGION_BEG ()\n-A C expression to output text to mark the start of an exception region.\n-\n-This macro need not be defined on most platforms.\n-\n-@findex ASM_OUTPUT_EH_REGION_END\n-@item ASM_OUTPUT_EH_REGION_END ()\n-A C expression to output text to mark the end of an exception region.\n-\n-This macro need not be defined on most platforms.\n-\n @findex EH_FRAME_SECTION_NAME\n @item EH_FRAME_SECTION_NAME\n If defined, a C string constant for the name of the section containing\n@@ -7050,26 +7020,6 @@ collection and sections cannot be marked as not to be collected.\n Do not define this macro unless @code{TARGET_ASM_NAMED_SECTION} is\n also defined.\n \n-@findex OMIT_EH_TABLE\n-@item OMIT_EH_TABLE ()\n-A C expression that is nonzero if the normal exception table output\n-should be omitted.\n-\n-This macro need not be defined on most platforms.\n-\n-@findex EH_TABLE_LOOKUP\n-@item EH_TABLE_LOOKUP ()\n-Alternate runtime support for looking up an exception at runtime and\n-finding the associated handler, if the default method won't work.\n-\n-This macro need not be defined on most platforms.\n-\n-@findex DOESNT_NEED_UNWINDER\n-@item DOESNT_NEED_UNWINDER\n-A C expression that decides whether or not the current function needs to\n-have a function unwinder generated for it.  See the file @file{except.c}\n-for details on when to define this, and how.\n-\n @findex MASK_RETURN_ADDR\n @item MASK_RETURN_ADDR\n An rtx used to mask the return address found via @code{RETURN_ADDR_RTX}, so"}, {"sha": "e8bc825db8dba0a3d6fa51096a28642e84eadefb", "filename": "gcc/system.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed722f66ddd7eaeadfd39b6cde2580856f17da07/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed722f66ddd7eaeadfd39b6cde2580856f17da07/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=ed722f66ddd7eaeadfd39b6cde2580856f17da07", "patch": "@@ -1,6 +1,6 @@\n /* Get common system includes and various definitions and declarations based\n    on autoconf macros.\n-   Copyright (C) 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -597,7 +597,10 @@ typedef char _Bool;\n \tASM_OUTPUT_DESTRUCTOR\n \n /* And other obsolete target macros.  */\n- #pragma GCC poison INT_ASM_OP\n+ #pragma GCC poison INT_ASM_OP ASM_OUTPUT_EH_REGION_BEG\t\t\t   \\\n+\tASM_OUTPUT_EH_REGION_END ASM_OUTPUT_LABELREF_AS_INT\t\t   \\\n+\tDOESNT_NEED_UNWINDER EH_TABLE_LOOKUP OBJC_SELECTORS_WITHOUT_LABELS \\\n+\tOMIT_EH_TABLE\n \n #endif /* IN_GCC */\n "}]}