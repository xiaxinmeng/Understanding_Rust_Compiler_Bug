{"sha": "bf2480e2fbf29772f8acca9d184f18dbfb6d00bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYyNDgwZTJmYmYyOTc3MmY4YWNjYTlkMTg0ZjE4ZGJmYjZkMDBiYw==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2020-02-28T15:21:38Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-09T08:09:02Z"}, "message": "[Ada] Crash on exit statement within predicated loop\n\n2020-06-09  Justin Squirek  <squirek@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch5.adb (Expand_Predicated_Loop): Perserve the original\n\tloop identifier within the expansion.", "tree": {"sha": "c96da3a4c0db4d0ce52b9a47fe4a43944dd01d86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c96da3a4c0db4d0ce52b9a47fe4a43944dd01d86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf2480e2fbf29772f8acca9d184f18dbfb6d00bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf2480e2fbf29772f8acca9d184f18dbfb6d00bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf2480e2fbf29772f8acca9d184f18dbfb6d00bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf2480e2fbf29772f8acca9d184f18dbfb6d00bc/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "059a704a4195f49c299ab0e92f772df39a27971a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/059a704a4195f49c299ab0e92f772df39a27971a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/059a704a4195f49c299ab0e92f772df39a27971a"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "02e9f46d4ab7fd65f2ae4820278d0d9cd052cc9e", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2480e2fbf29772f8acca9d184f18dbfb6d00bc/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2480e2fbf29772f8acca9d184f18dbfb6d00bc/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=bf2480e2fbf29772f8acca9d184f18dbfb6d00bc", "patch": "@@ -4920,13 +4920,14 @@ package body Exp_Ch5 is\n    --  mode, the semantic analyzer may disallow one or both forms.\n \n    procedure Expand_Predicated_Loop (N : Node_Id) is\n-      Loc     : constant Source_Ptr := Sloc (N);\n-      Isc     : constant Node_Id    := Iteration_Scheme (N);\n-      LPS     : constant Node_Id    := Loop_Parameter_Specification (Isc);\n-      Loop_Id : constant Entity_Id  := Defining_Identifier (LPS);\n-      Ltype   : constant Entity_Id  := Etype (Loop_Id);\n-      Stat    : constant List_Id    := Static_Discrete_Predicate (Ltype);\n-      Stmts   : constant List_Id    := Statements (N);\n+      Orig_Loop_Id :          Node_Id    := Empty;\n+      Loc          : constant Source_Ptr := Sloc (N);\n+      Isc          : constant Node_Id    := Iteration_Scheme (N);\n+      LPS          : constant Node_Id    := Loop_Parameter_Specification (Isc);\n+      Loop_Id      : constant Entity_Id  := Defining_Identifier (LPS);\n+      Ltype        : constant Entity_Id  := Etype (Loop_Id);\n+      Stat         : constant List_Id    := Static_Discrete_Predicate (Ltype);\n+      Stmts        : constant List_Id    := Statements (N);\n \n    begin\n       --  Case of iteration over non-static predicate, should not be possible\n@@ -5205,7 +5206,13 @@ package body Exp_Ch5 is\n                 Alternatives => Alts);\n             Append_To (Stmts, Cstm);\n \n-            --  Rewrite the loop\n+            --  Rewrite the loop preserving the loop identifier in case there\n+            --  are exit statements referencing it.\n+\n+            if Present (Identifier (N)) then\n+               Orig_Loop_Id := New_Occurrence_Of\n+                                 (Entity (Identifier (N)), Loc);\n+            end if;\n \n             Set_Suppress_Assignment_Checks (D);\n \n@@ -5217,6 +5224,7 @@ package body Exp_Ch5 is\n                     Statements => New_List (\n                       Make_Loop_Statement (Loc,\n                         Statements => Stmts,\n+                        Identifier => Orig_Loop_Id,\n                         End_Label  => Empty)))));\n \n             Analyze (N);"}]}