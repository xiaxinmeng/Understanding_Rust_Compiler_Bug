{"sha": "11a2ff8d981110e1562caf7d98e41c1ff2e76056", "node_id": "C_kwDOANBUbNoAKDExYTJmZjhkOTgxMTEwZTE1NjJjYWY3ZDk4ZTQxYzFmZjJlNzYwNTY", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-01-06T16:43:36Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-01-08T00:05:16Z"}, "message": "analyzer: add logging of aliasing\n\ngcc/analyzer/ChangeLog:\n\t* engine.cc (impl_run_checkers): Pass logger to engine ctor.\n\t* region-model-manager.cc\n\t(region_model_manager::region_model_manager): Add logger param and\n\tuse it to initialize m_logger.\n\t* region-model.cc (engine::engine): New.\n\t* region-model.h (region_model_manager::region_model_manager):\n\tAdd logger param.\n\t(region_model_manager::get_logger): New.\n\t(region_model_manager::m_logger): New field.\n\t(engine::engine): New.\n\t* store.cc (store_manager::get_logger): New.\n\t(store::set_value): Log scope.  Log when marking a cluster as\n\tunknown due to possible aliasing.\n\t* store.h (store_manager::get_logger): New decl.", "tree": {"sha": "227af1645d64a2e47f0e051b34f5661f460901c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/227af1645d64a2e47f0e051b34f5661f460901c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11a2ff8d981110e1562caf7d98e41c1ff2e76056", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11a2ff8d981110e1562caf7d98e41c1ff2e76056", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11a2ff8d981110e1562caf7d98e41c1ff2e76056", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11a2ff8d981110e1562caf7d98e41c1ff2e76056/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4409152a4acaec5b58a93996088d0df9aaa779b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4409152a4acaec5b58a93996088d0df9aaa779b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4409152a4acaec5b58a93996088d0df9aaa779b8"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "346b65973b2cd12300750fc49a9dc3d8d54bb5cb", "filename": "gcc/analyzer/engine.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a2ff8d981110e1562caf7d98e41c1ff2e76056/gcc%2Fanalyzer%2Fengine.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a2ff8d981110e1562caf7d98e41c1ff2e76056/gcc%2Fanalyzer%2Fengine.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fengine.cc?ref=11a2ff8d981110e1562caf7d98e41c1ff2e76056", "patch": "@@ -5329,7 +5329,7 @@ impl_run_checkers (logger *logger)\n   FOR_EACH_FUNCTION_WITH_GIMPLE_BODY (node)\n     node->get_untransformed_body ();\n \n-  engine eng;\n+  engine eng (logger);\n \n   /* Create the supergraph.  */\n   supergraph sg (logger);"}, {"sha": "998bbe7858c94ae833350789ca0fbb89b144d6c3", "filename": "gcc/analyzer/region-model-manager.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a2ff8d981110e1562caf7d98e41c1ff2e76056/gcc%2Fanalyzer%2Fregion-model-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a2ff8d981110e1562caf7d98e41c1ff2e76056/gcc%2Fanalyzer%2Fregion-model-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model-manager.cc?ref=11a2ff8d981110e1562caf7d98e41c1ff2e76056", "patch": "@@ -66,8 +66,9 @@ namespace ana {\n \n /* region_model_manager's ctor.  */\n \n-region_model_manager::region_model_manager ()\n-: m_next_region_id (0),\n+region_model_manager::region_model_manager (logger *logger)\n+: m_logger (logger),\n+  m_next_region_id (0),\n   m_root_region (alloc_region_id ()),\n   m_stack_region (alloc_region_id (), &m_root_region),\n   m_heap_region (alloc_region_id (), &m_root_region),"}, {"sha": "8708a91551d4f7f71866a1b9d6aeaa5701820f14", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a2ff8d981110e1562caf7d98e41c1ff2e76056/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a2ff8d981110e1562caf7d98e41c1ff2e76056/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=11a2ff8d981110e1562caf7d98e41c1ff2e76056", "patch": "@@ -3965,6 +3965,13 @@ rejected_ranges_constraint::dump_to_pp (pretty_printer *pp) const\n \n /* class engine.  */\n \n+/* engine's ctor.  */\n+\n+engine::engine (logger *logger)\n+: m_mgr (logger)\n+{\n+}\n+\n /* Dump the managed objects by class to LOGGER, and the per-class totals.  */\n \n void"}, {"sha": "b1fa4fc82afc4e2812da489f4af2e8fa5da19750", "filename": "gcc/analyzer/region-model.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a2ff8d981110e1562caf7d98e41c1ff2e76056/gcc%2Fanalyzer%2Fregion-model.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a2ff8d981110e1562caf7d98e41c1ff2e76056/gcc%2Fanalyzer%2Fregion-model.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.h?ref=11a2ff8d981110e1562caf7d98e41c1ff2e76056", "patch": "@@ -240,7 +240,7 @@ namespace ana {\n class region_model_manager\n {\n public:\n-  region_model_manager ();\n+  region_model_manager (logger *logger = NULL);\n   ~region_model_manager ();\n \n   /* svalue consolidation.  */\n@@ -335,6 +335,8 @@ class region_model_manager\n   void enable_complexity_check (void) { m_check_complexity = true; }\n   void disable_complexity_check (void) { m_check_complexity = false; }\n \n+  logger *get_logger () const { return m_logger; }\n+\n private:\n   bool too_complex_p (const complexity &c) const;\n   bool reject_if_too_complex (svalue *sval);\n@@ -358,6 +360,8 @@ class region_model_manager\n   const svalue *maybe_fold_asm_output_svalue (tree type,\n \t\t\t\t\t      const vec<const svalue *> &inputs);\n \n+  logger *m_logger;\n+\n   unsigned m_next_region_id;\n   root_region m_root_region;\n   stack_region m_stack_region;\n@@ -1080,6 +1084,7 @@ class rejected_ranges_constraint : public rejected_constraint\n class engine\n {\n public:\n+  engine (logger *logger = NULL);\n   region_model_manager *get_model_manager () { return &m_mgr; }\n \n   void log_stats (logger *logger) const;"}, {"sha": "ade6dec624d3bd4f417c345090934149c2bf73e1", "filename": "gcc/analyzer/store.cc", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a2ff8d981110e1562caf7d98e41c1ff2e76056/gcc%2Fanalyzer%2Fstore.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a2ff8d981110e1562caf7d98e41c1ff2e76056/gcc%2Fanalyzer%2Fstore.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fstore.cc?ref=11a2ff8d981110e1562caf7d98e41c1ff2e76056", "patch": "@@ -1987,6 +1987,12 @@ binding_cluster::maybe_get_simple_value (store_manager *mgr) const\n \n /* class store_manager.  */\n \n+logger *\n+store_manager::get_logger () const\n+{\n+  return m_mgr->get_logger ();\n+}\n+\n /* binding consolidation.  */\n \n const concrete_binding *\n@@ -2353,6 +2359,9 @@ store::set_value (store_manager *mgr, const region *lhs_reg,\n \t\t  const svalue *rhs_sval,\n \t\t  uncertainty_t *uncertainty)\n {\n+  logger *logger = mgr->get_logger ();\n+  LOG_SCOPE (logger);\n+\n   remove_overlapping_bindings (mgr, lhs_reg);\n \n   rhs_sval = simplify_for_binding (rhs_sval);\n@@ -2405,6 +2414,18 @@ store::set_value (store_manager *mgr, const region *lhs_reg,\n \t      gcc_unreachable ();\n \n \t    case tristate::TS_UNKNOWN:\n+\t      if (logger)\n+\t\t{\n+\t\t  pretty_printer *pp = logger->get_printer ();\n+\t\t  logger->start_log_line ();\n+\t\t  logger->log_partial (\"possible aliasing of \");\n+\t\t  iter_base_reg->dump_to_pp (pp, true);\n+\t\t  logger->log_partial (\" when writing SVAL: \");\n+\t\t  rhs_sval->dump_to_pp (pp, true);\n+\t\t  logger->log_partial (\" to LHS_REG: \");\n+\t\t  lhs_reg->dump_to_pp (pp, true);\n+\t\t  logger->end_log_line ();\n+\t\t}\n \t      iter_cluster->mark_region_as_unknown (mgr, iter_base_reg,\n \t\t\t\t\t\t    uncertainty);\n \t      break;"}, {"sha": "ee084dd81f33780b25df97b8ba8d45ab86c74bdf", "filename": "gcc/analyzer/store.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a2ff8d981110e1562caf7d98e41c1ff2e76056/gcc%2Fanalyzer%2Fstore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a2ff8d981110e1562caf7d98e41c1ff2e76056/gcc%2Fanalyzer%2Fstore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fstore.h?ref=11a2ff8d981110e1562caf7d98e41c1ff2e76056", "patch": "@@ -787,6 +787,8 @@ class store_manager\n public:\n   store_manager (region_model_manager *mgr) : m_mgr (mgr) {}\n \n+  logger *get_logger () const;\n+\n   /* binding consolidation.  */\n   const concrete_binding *\n   get_concrete_binding (bit_offset_t start_bit_offset,"}]}