{"sha": "eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVjZDhiN2MwMGZmMjc3MGI5ODk5Y2I5YzlkZTFhZGRlYmRiNjQxNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-01-31T21:25:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-01-31T21:25:23Z"}, "message": "re PR sanitizer/59410 (tsan tests fail with address randomization disabled)\n\n\tPR sanitizer/59410\n\t* lib/tsan-dg.exp (tsan_init): Instead of not running any\n\ttsan tests if trivial testcase doesn't run, set dg-do-what-default\n\tto compile.\n\t(tsan_finish): Restore dg-do-what-default.\n\t* g++.dg/tsan/atomic_free.C: Remove dg-do line.\n\t* g++.dg/tsan/fd_close_norace2.C: Likewise.\n\t* g++.dg/tsan/default_options.C: Likewise.\n\t* g++.dg/tsan/aligned_vs_unaligned_race.C: Likewise.\n\t* g++.dg/tsan/atomic_free2.C: Likewise.\n\t* g++.dg/tsan/cond_race.C: Likewise.\n\t* g++.dg/tsan/fd_close_norace.C: Likewise.\n\t* g++.dg/tsan/benign_race.C: Likewise.\n\t* c-c++-common/tsan/fd_pipe_race.c: Likewise.\n\t* c-c++-common/tsan/simple_race.c: Likewise.\n\t* c-c++-common/tsan/mutexset1.c: Likewise.\n\t* c-c++-common/tsan/thread_leak2.c: Likewise.\n\t* c-c++-common/tsan/tls_race.c: Likewise.\n\t* c-c++-common/tsan/write_in_reader_lock.c: Likewise.\n\t* c-c++-common/tsan/race_on_barrier2.c: Likewise.\n\t* c-c++-common/tsan/free_race2.c: Likewise.\n\t* c-c++-common/tsan/thread_leak.c: Likewise.\n\t* c-c++-common/tsan/thread_leak1.c: Likewise.\n\t* c-c++-common/tsan/race_on_barrier.c: Likewise.\n\t* c-c++-common/tsan/free_race.c: Likewise.\n\t* c-c++-common/tsan/sleep_sync.c: Likewise.\n\t* c-c++-common/tsan/tiny_race.c: Likewise.\n\t* c-c++-common/tsan/race_on_mutex2.c: Likewise.\n\t* c-c++-common/tsan/atomic_stack.c: Likewise.\n\t* c-c++-common/tsan/race_on_mutex.c: Likewise.  Adjust line numbers\n\tin dg-output regexps.\n\t* c-c++-common/tsan/simple_stack.c: Likewise.\n\nFrom-SVN: r207371", "tree": {"sha": "baaa3e4765c447fbef287e7dbe4eb8a030e91d2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baaa3e4765c447fbef287e7dbe4eb8a030e91d2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "efa7882fa699212d9d5417df3e39882e831eacbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efa7882fa699212d9d5417df3e39882e831eacbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efa7882fa699212d9d5417df3e39882e831eacbb"}], "stats": {"total": 103, "additions": 61, "deletions": 42}, "files": [{"sha": "0f59583dff3105e6b56064024e60cc69ed6cf1fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,3 +1,38 @@\n+2014-01-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/59410\n+\t* lib/tsan-dg.exp (tsan_init): Instead of not running any\n+\ttsan tests if trivial testcase doesn't run, set dg-do-what-default\n+\tto compile.\n+\t(tsan_finish): Restore dg-do-what-default.\n+\t* g++.dg/tsan/atomic_free.C: Remove dg-do line.\n+\t* g++.dg/tsan/fd_close_norace2.C: Likewise.\n+\t* g++.dg/tsan/default_options.C: Likewise.\n+\t* g++.dg/tsan/aligned_vs_unaligned_race.C: Likewise.\n+\t* g++.dg/tsan/atomic_free2.C: Likewise.\n+\t* g++.dg/tsan/cond_race.C: Likewise.\n+\t* g++.dg/tsan/fd_close_norace.C: Likewise.\n+\t* g++.dg/tsan/benign_race.C: Likewise.\n+\t* c-c++-common/tsan/fd_pipe_race.c: Likewise.\n+\t* c-c++-common/tsan/simple_race.c: Likewise.\n+\t* c-c++-common/tsan/mutexset1.c: Likewise.\n+\t* c-c++-common/tsan/thread_leak2.c: Likewise.\n+\t* c-c++-common/tsan/tls_race.c: Likewise.\n+\t* c-c++-common/tsan/write_in_reader_lock.c: Likewise.\n+\t* c-c++-common/tsan/race_on_barrier2.c: Likewise.\n+\t* c-c++-common/tsan/free_race2.c: Likewise.\n+\t* c-c++-common/tsan/thread_leak.c: Likewise.\n+\t* c-c++-common/tsan/thread_leak1.c: Likewise.\n+\t* c-c++-common/tsan/race_on_barrier.c: Likewise.\n+\t* c-c++-common/tsan/free_race.c: Likewise.\n+\t* c-c++-common/tsan/sleep_sync.c: Likewise.\n+\t* c-c++-common/tsan/tiny_race.c: Likewise.\n+\t* c-c++-common/tsan/race_on_mutex2.c: Likewise.\n+\t* c-c++-common/tsan/atomic_stack.c: Likewise.\n+\t* c-c++-common/tsan/race_on_mutex.c: Likewise.  Adjust line numbers\n+\tin dg-output regexps.\n+\t* c-c++-common/tsan/simple_stack.c: Likewise.\n+\n 2014-01-31  Richard Henderson <rth@redhat.com>\n \n \t* g++.dg/tm/pr60004.C: New."}, {"sha": "6a37951201015a086354415af667b387d349fce1", "filename": "gcc/testsuite/c-c++-common/tsan/atomic_stack.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fatomic_stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fatomic_stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fatomic_stack.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>"}, {"sha": "28cd630d2c1a1ee2ad1be9db16144fb030aea8a0", "filename": "gcc/testsuite/c-c++-common/tsan/fd_pipe_race.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Ffd_pipe_race.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Ffd_pipe_race.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Ffd_pipe_race.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>"}, {"sha": "258f7b7420dfe0b6685839a7b070b56e3aab5b92", "filename": "gcc/testsuite/c-c++-common/tsan/free_race.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Ffree_race.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Ffree_race.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Ffree_race.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <stdlib.h>"}, {"sha": "3971180c22bda25d2bfa90836f320c32b4b7fdbf", "filename": "gcc/testsuite/c-c++-common/tsan/free_race2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Ffree_race2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Ffree_race2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Ffree_race2.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <stdlib.h>"}, {"sha": "7c32a8524b44ceefd609ac868bf7ab2c038f78a4", "filename": "gcc/testsuite/c-c++-common/tsan/mutexset1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fmutexset1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fmutexset1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fmutexset1.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>"}, {"sha": "0a0e5faba02612d633cc0d53b0a111f98e46b219", "filename": "gcc/testsuite/c-c++-common/tsan/race_on_barrier.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Frace_on_barrier.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Frace_on_barrier.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Frace_on_barrier.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>"}, {"sha": "b01a5cc21a27010f0ca78ede051b1683f5746c11", "filename": "gcc/testsuite/c-c++-common/tsan/race_on_barrier2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Frace_on_barrier2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Frace_on_barrier2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Frace_on_barrier2.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>"}, {"sha": "5dad345d85b46608d1387be267bd11699bc55c5b", "filename": "gcc/testsuite/c-c++-common/tsan/race_on_mutex.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Frace_on_mutex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Frace_on_mutex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Frace_on_mutex.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>\n@@ -38,7 +37,7 @@ int main() {\n /* { dg-output \"WARNING: ThreadSanitizer: data race.*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"  Atomic read of size 1 at .* by thread T2:(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"    #0 pthread_mutex_lock.*\" } */\n-/* { dg-output \"    #1 Thread2.* .*(race_on_mutex.c:22|\\\\?{2}:0) (.*)\" } */\n+/* { dg-output \"    #1 Thread2.* .*(race_on_mutex.c:21|\\\\?{2}:0) (.*)\" } */\n /* { dg-output \"  Previous write of size 1 at .* by thread T1:(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"    #0 pthread_mutex_init .* (.)*\" } */\n-/* { dg-output \"    #1 Thread1.* .*(race_on_mutex.c:13|\\\\?{2}:0) .*\" } */\n+/* { dg-output \"    #1 Thread1.* .*(race_on_mutex.c:12|\\\\?{2}:0) .*\" } */"}, {"sha": "80a6fb6c0eba5822eda578c7ea3bc78814eada8f", "filename": "gcc/testsuite/c-c++-common/tsan/race_on_mutex2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Frace_on_mutex2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Frace_on_mutex2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Frace_on_mutex2.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>"}, {"sha": "a40accd40a25e826b31807ceb964ffe75b7a6a8c", "filename": "gcc/testsuite/c-c++-common/tsan/simple_race.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fsimple_race.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fsimple_race.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fsimple_race.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-set-target-env-var TSAN_OPTIONS \"halt_on_error=1\" } */\n /* { dg-shouldfail \"tsan\" } */\n "}, {"sha": "b66a67085ca6547fa0eb3abc30e11c4b0036c921", "filename": "gcc/testsuite/c-c++-common/tsan/simple_stack.c", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fsimple_stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fsimple_stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fsimple_stack.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>\n@@ -51,16 +50,16 @@ int main() {\n \n /* { dg-output \"WARNING: ThreadSanitizer: data race.*\" } */\n /* { dg-output \"  Write of size 4 at .* by thread T1:(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 foo1.* .*(simple_stack.c:11|\\\\?{2}:0) (.*)\" } */\n-/* { dg-output \"    #1 bar1.* .*(simple_stack.c:16|\\\\?{2}:0) (.*)\" } */\n-/* { dg-output \"    #2 Thread1.* .*(simple_stack.c:30|\\\\?{2}:0) (.*)\" } */\n+/* { dg-output \"    #0 foo1.* .*(simple_stack.c:10|\\\\?{2}:0) (.*)\" } */\n+/* { dg-output \"    #1 bar1.* .*(simple_stack.c:15|\\\\?{2}:0) (.*)\" } */\n+/* { dg-output \"    #2 Thread1.* .*(simple_stack.c:29|\\\\?{2}:0) (.*)\" } */\n /* { dg-output \"  Previous read of size 4 at .* by thread T2:(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"    #0 foo2.* .*(simple_stack.c:20|\\\\?{2}:0) (.*)\" } */\n-/* { dg-output \"    #1 bar2.* .*(simple_stack.c:25|\\\\?{2}:0) (.*)\" } */\n-/* { dg-output \"    #2 Thread2.* .*(simple_stack.c:35|\\\\?{2}:0) (.*)\" } */\n+/* { dg-output \"    #0 foo2.* .*(simple_stack.c:19|\\\\?{2}:0) (.*)\" } */\n+/* { dg-output \"    #1 bar2.* .*(simple_stack.c:24|\\\\?{2}:0) (.*)\" } */\n+/* { dg-output \"    #2 Thread2.* .*(simple_stack.c:34|\\\\?{2}:0) (.*)\" } */\n /* { dg-output \"  Thread T1 \\\\(tid=.*, running\\\\) created by main thread at:(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"    #0 pthread_create .* (.*)\" } */\n-/* { dg-output \"    #1 StartThread.* .*(simple_stack.c:40|\\\\?{2}:0) (.*)\" } */\n+/* { dg-output \"    #1 StartThread.* .*(simple_stack.c:39|\\\\?{2}:0) (.*)\" } */\n /* { dg-output \"  Thread T2 (.*) created by main thread at:(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"    #0 pthread_create .* (.*)\" } */\n-/* { dg-output \"    #1 StartThread.* .*(simple_stack.c:40|\\\\?{2}:0) (.*)\" } */\n+/* { dg-output \"    #1 StartThread.* .*(simple_stack.c:39|\\\\?{2}:0) (.*)\" } */"}, {"sha": "44d44554c2ec74eb4abc5d026164c2cb424dfa87", "filename": "gcc/testsuite/c-c++-common/tsan/sleep_sync.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fsleep_sync.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fsleep_sync.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fsleep_sync.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>"}, {"sha": "02deaba5846b9c712b7ac54f7b678b797f81c6d1", "filename": "gcc/testsuite/c-c++-common/tsan/thread_leak.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fthread_leak.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fthread_leak.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fthread_leak.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,5 +1,3 @@\n-/* { dg-do run } */\n-\n #include <pthread.h>\n #include <stdio.h>\n "}, {"sha": "ce28ee487e87273fe0a79f61540976af27bd3786", "filename": "gcc/testsuite/c-c++-common/tsan/thread_leak1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fthread_leak1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fthread_leak1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fthread_leak1.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>"}, {"sha": "c9b8046652966549b4be0664007d24b6de031084", "filename": "gcc/testsuite/c-c++-common/tsan/thread_leak2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fthread_leak2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fthread_leak2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fthread_leak2.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>"}, {"sha": "962497b2821e0c99c928e8a3b57db92acf0ae21f", "filename": "gcc/testsuite/c-c++-common/tsan/tiny_race.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Ftiny_race.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Ftiny_race.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Ftiny_race.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>"}, {"sha": "423867e382d1305ae46a7fb9d681fa30422e9724", "filename": "gcc/testsuite/c-c++-common/tsan/tls_race.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Ftls_race.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Ftls_race.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Ftls_race.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>"}, {"sha": "898d23d50b74c8dccc7e80f1c3a227766b202731", "filename": "gcc/testsuite/c-c++-common/tsan/write_in_reader_lock.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fwrite_in_reader_lock.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fwrite_in_reader_lock.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fwrite_in_reader_lock.c?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>"}, {"sha": "390be86d7164fe3e884efb5fce4b0df4b35744a5", "filename": "gcc/testsuite/g++.dg/tsan/aligned_vs_unaligned_race.C", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Faligned_vs_unaligned_race.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Faligned_vs_unaligned_race.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Faligned_vs_unaligned_race.C?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,5 +1,3 @@\n-/* { dg-do run { target { x86_64-*-linux* } } } */\n-\n #include <pthread.h>\n #include <stdio.h>\n #include <stdint.h>"}, {"sha": "26d01ae3fddc0d31d331a71d91fe30500d1ac613", "filename": "gcc/testsuite/g++.dg/tsan/atomic_free.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fatomic_free.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fatomic_free.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fatomic_free.C?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>"}, {"sha": "1fe512cde93cea22ebaaba3fdc740fc548e7b255", "filename": "gcc/testsuite/g++.dg/tsan/atomic_free2.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fatomic_free2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fatomic_free2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fatomic_free2.C?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>"}, {"sha": "b5f17208a12d39b06dfd2e548e4ea75ef0fbda5d", "filename": "gcc/testsuite/g++.dg/tsan/benign_race.C", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fbenign_race.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fbenign_race.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fbenign_race.C?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,5 +1,3 @@\n-/* { dg-do run } */\n-\n #include <pthread.h>\n #include <stdio.h>\n #include <unistd.h>"}, {"sha": "a9376147763b422610749df423c625e3a9bffbdf", "filename": "gcc/testsuite/g++.dg/tsan/cond_race.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fcond_race.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fcond_race.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fcond_race.C?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n /* { dg-output \"ThreadSanitizer: data race.*\" } */\n /* { dg-output \"pthread_cond_signal.*\" } */"}, {"sha": "f0c0eceeb4b3c426bd1bac01ad03aff503bb0b0b", "filename": "gcc/testsuite/g++.dg/tsan/default_options.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fdefault_options.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fdefault_options.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fdefault_options.C?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,4 +1,3 @@\n-/* { dg-do run } */\n /* { dg-shouldfail \"tsan\" } */\n \n #include <pthread.h>"}, {"sha": "9babb6a8f1e0e4e9463913ef00e2df46a4b5867d", "filename": "gcc/testsuite/g++.dg/tsan/fd_close_norace.C", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Ffd_close_norace.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Ffd_close_norace.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Ffd_close_norace.C?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,5 +1,3 @@\n-/* { dg-do run } */\n-\n #include <pthread.h>\n #include <stdio.h>\n #include <unistd.h>"}, {"sha": "56f00f8aceed36d8e5eacc9067015df2f0a7d2ab", "filename": "gcc/testsuite/g++.dg/tsan/fd_close_norace2.C", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Ffd_close_norace2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Ffd_close_norace2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Ffd_close_norace2.C?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -1,5 +1,3 @@\n-/* { dg-do run } */\n-\n #include <pthread.h>\n #include <stdio.h>\n #include <unistd.h>"}, {"sha": "89696a9c00fca4847939a7d52f23c007c0d47fbd", "filename": "gcc/testsuite/lib/tsan-dg.exp", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Flib%2Ftsan-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eecd8b7c00ff2770b9899cb9c9de1addebdb6415/gcc%2Ftestsuite%2Flib%2Ftsan-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftsan-dg.exp?ref=eecd8b7c00ff2770b9899cb9c9de1addebdb6415", "patch": "@@ -69,6 +69,8 @@ proc tsan_init { args } {\n     global ALWAYS_CXXFLAGS\n     global TOOL_OPTIONS\n     global tsan_saved_TEST_ALWAYS_FLAGS\n+    global dg-do-what-default\n+    global tsan_saved_dg-do-what-default\n \n     set link_flags \"\"\n     if ![is_remote host] {\n@@ -79,6 +81,9 @@ proc tsan_init { args } {\n \t}\n     }\n \n+    if [info exists dg-do-what-default] {\n+\tset tsan_saved_dg-do-what-default ${dg-do-what-default}\n+    }\n     if [info exists TEST_ALWAYS_FLAGS] {\n \tset tsan_saved_TEST_ALWAYS_FLAGS $TEST_ALWAYS_FLAGS\n     }\n@@ -96,8 +101,11 @@ proc tsan_init { args } {\n \tif [check_runtime_nocache tsan_works {\n \t\tint main () { return 0; }\n \t    } \"-fPIE -pie -fsanitize=thread -g\"] {\n-\t    return 1\n+\t    set dg-do-what-default run\n+\t} else {\n+\t    set dg-do-what-default compile\n \t}\n+\treturn 1\n     }\n     return 0\n }\n@@ -109,10 +117,17 @@ proc tsan_init { args } {\n proc tsan_finish { args } {\n     global TEST_ALWAYS_FLAGS\n     global tsan_saved_TEST_ALWAYS_FLAGS\n+    global dg-do-what-default\n+    global tsan_saved_dg-do-what-default\n \n     if [info exists tsan_saved_TEST_ALWAYS_FLAGS] {\n \tset TEST_ALWAYS_FLAGS $tsan_saved_TEST_ALWAYS_FLAGS\n     } else {\n \tunset TEST_ALWAYS_FLAGS\n     }\n+    if [info exists tsan_saved_dg-do-what-default] {\n+\tset dg-do-what-default ${tsan_saved_dg-do-what-default}\n+    } else {\n+\tunset dg-do-what-default\n+    }\n }"}]}