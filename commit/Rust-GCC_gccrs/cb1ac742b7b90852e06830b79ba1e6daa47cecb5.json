{"sha": "cb1ac742b7b90852e06830b79ba1e6daa47cecb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IxYWM3NDJiN2I5MDg1MmUwNjgzMGI3OWJhMWU2ZGFhNDdjZWNiNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-01-03T17:24:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-01-03T17:24:13Z"}, "message": "simplify-rtx.c (simplify_binary_operation): If gen_lowpart_common fails, use gen_lowpart_SUBREG.\n\n\t* simplify-rtx.c (simplify_binary_operation) [DIV]: If\n\tgen_lowpart_common fails, use gen_lowpart_SUBREG.\n\n\t* gcc.c-torture/compile/20020103-1.c: New test.\n\nFrom-SVN: r48514", "tree": {"sha": "7688e1c97e6e18596cf660ee027a1f4b6c653c20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7688e1c97e6e18596cf660ee027a1f4b6c653c20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb1ac742b7b90852e06830b79ba1e6daa47cecb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb1ac742b7b90852e06830b79ba1e6daa47cecb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb1ac742b7b90852e06830b79ba1e6daa47cecb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb1ac742b7b90852e06830b79ba1e6daa47cecb5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "61d951df7bad54499674bbc6e748abb6616b15f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61d951df7bad54499674bbc6e748abb6616b15f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61d951df7bad54499674bbc6e748abb6616b15f8"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "ded183f2d0eb5a7342c4898c9b21845190de47be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb1ac742b7b90852e06830b79ba1e6daa47cecb5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb1ac742b7b90852e06830b79ba1e6daa47cecb5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb1ac742b7b90852e06830b79ba1e6daa47cecb5", "patch": "@@ -1,4 +1,10 @@\n+2002-01-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* simplify-rtx.c (simplify_binary_operation) [DIV]: If\n+\tgen_lowpart_common fails, use gen_lowpart_SUBREG.\n+\n 2002-01-03  Turly O'Connor  <turly@apple.com>\n+\n \t* darwin.c (machopic_output_possible_stub_label): Don't generate\n \tstub routines for pseudo-stubs which we've just defined.\n "}, {"sha": "84209cc0d3d8a9a6f479095202489e884cf5bdba", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb1ac742b7b90852e06830b79ba1e6daa47cecb5/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb1ac742b7b90852e06830b79ba1e6daa47cecb5/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=cb1ac742b7b90852e06830b79ba1e6daa47cecb5", "patch": "@@ -1413,8 +1413,15 @@ simplify_binary_operation (code, mode, op0, op1)\n \tcase DIV:\n \t  if (trueop1 == CONST1_RTX (mode))\n \t    {\n+\t      /* On some platforms DIV uses narrower mode than its\n+\t\t operands.  */\n \t      rtx x = gen_lowpart_common (mode, op0);\n-\t      return x ? x : op0;\n+\t      if (x)\n+\t\treturn x;\n+\t      else if (mode != GET_MODE (op0) && GET_MODE (op0) != VOIDmode)\n+\t\treturn gen_lowpart_SUBREG (mode, op0);\n+\t      else\n+\t\treturn op0;\n \t    }\n \n \t  /* In IEEE floating point, 0/x is not always 0.  */"}, {"sha": "18385395bc36eacf7bb463a7cce3b2a0ee7a833e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb1ac742b7b90852e06830b79ba1e6daa47cecb5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb1ac742b7b90852e06830b79ba1e6daa47cecb5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cb1ac742b7b90852e06830b79ba1e6daa47cecb5", "patch": "@@ -2,6 +2,8 @@\n \n \t* g++.dg/other/debug2.C: New test.\n \n+\t* gcc.c-torture/compile/20020103-1.c: New test.\n+\n 2002-01-02  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/gnu89-init-1.c: Added new tests."}, {"sha": "b9861688ddd6963c007e5aa26860118fb696ae6e", "filename": "gcc/testsuite/gcc.c-torture/compile/20020103-1.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb1ac742b7b90852e06830b79ba1e6daa47cecb5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020103-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb1ac742b7b90852e06830b79ba1e6daa47cecb5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020103-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020103-1.c?ref=cb1ac742b7b90852e06830b79ba1e6daa47cecb5", "patch": "@@ -0,0 +1,22 @@\n+/* This testcase failed on Alpha at -O2 when simplifying conditional\n+   expressions.  */\n+\n+int foo (void);\n+\n+struct A\n+{\n+  int a, b, c, d;\n+};\n+\n+void bar (struct A *x)\n+{\n+  int e, f;\n+\n+  e = foo ();\n+  e = e / x->b;\n+  if (e < 1)\n+    e = 1;\n+  f = (x->a + x->c) / e;\n+  if (f < x->d)\n+    x->d -= (1 << 16) / 8;\n+}"}]}