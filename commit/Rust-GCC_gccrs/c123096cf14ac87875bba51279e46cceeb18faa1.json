{"sha": "c123096cf14ac87875bba51279e46cceeb18faa1", "node_id": "C_kwDOANBUbNoAKGMxMjMwOTZjZjE0YWM4Nzg3NWJiYTUxMjc5ZTQ2Y2NlZWIxOGZhYTE", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-02-02T17:04:58Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-02-02T17:08:54Z"}, "message": "libstdc++: Fix invalid instantiations in tests\n\nThese tests instantiate std::multiset and std::set with a type that has\nno operator< so they should use a custom comparison function.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/23_containers/multiset/operators/cmp_c++20.cc: Use\n\tcustom comparison function for multiset.\n\t* testsuite/23_containers/set/operators/cmp_c++20.cc: Use custom\n\tcomparison function for set.", "tree": {"sha": "cb898bfaa57fb66011f59cc04089a5414a2c349a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb898bfaa57fb66011f59cc04089a5414a2c349a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c123096cf14ac87875bba51279e46cceeb18faa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c123096cf14ac87875bba51279e46cceeb18faa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c123096cf14ac87875bba51279e46cceeb18faa1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c123096cf14ac87875bba51279e46cceeb18faa1/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b229c5186093fa6603030ae83d5fe640ef7051a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b229c5186093fa6603030ae83d5fe640ef7051a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b229c5186093fa6603030ae83d5fe640ef7051a4"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "ad3ab78794662652f6e90224a00ea482f3f7e34a", "filename": "libstdc++-v3/testsuite/23_containers/multiset/operators/cmp_c++20.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c123096cf14ac87875bba51279e46cceeb18faa1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Foperators%2Fcmp_c%2B%2B20.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c123096cf14ac87875bba51279e46cceeb18faa1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Foperators%2Fcmp_c%2B%2B20.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Foperators%2Fcmp_c%2B%2B20.cc?ref=c123096cf14ac87875bba51279e46cceeb18faa1", "patch": "@@ -49,9 +49,13 @@ test01()\n   {\n     bool operator==(E) { return true; }\n   };\n-  static_assert( ! std::totally_ordered<std::multiset<E>> );\n+  struct Cmp\n+  {\n+    bool operator()(E, E) const { return false; }\n+  };\n+  static_assert( ! std::totally_ordered<std::multiset<E, Cmp>> );\n   static_assert( ! std::three_way_comparable<E> );\n-  static_assert( ! std::three_way_comparable<std::multiset<E>> );\n+  static_assert( ! std::three_way_comparable<std::multiset<E, Cmp>> );\n }\n \n void"}, {"sha": "58698bf426ff548f77277510765701a5f05875c5", "filename": "libstdc++-v3/testsuite/23_containers/set/operators/cmp_c++20.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c123096cf14ac87875bba51279e46cceeb18faa1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperators%2Fcmp_c%2B%2B20.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c123096cf14ac87875bba51279e46cceeb18faa1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperators%2Fcmp_c%2B%2B20.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperators%2Fcmp_c%2B%2B20.cc?ref=c123096cf14ac87875bba51279e46cceeb18faa1", "patch": "@@ -49,9 +49,13 @@ test01()\n   {\n     bool operator==(E) { return true; }\n   };\n-  static_assert( ! std::totally_ordered<std::set<E>> );\n+  struct Cmp\n+  {\n+    bool operator()(E, E) const { return false; }\n+  };\n+  static_assert( ! std::totally_ordered<std::set<E, Cmp>> );\n   static_assert( ! std::three_way_comparable<E> );\n-  static_assert( ! std::three_way_comparable<std::set<E>> );\n+  static_assert( ! std::three_way_comparable<std::set<E, Cmp>> );\n }\n \n void"}]}