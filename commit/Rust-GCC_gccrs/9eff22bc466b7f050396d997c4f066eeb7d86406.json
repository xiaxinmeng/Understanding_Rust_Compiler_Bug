{"sha": "9eff22bc466b7f050396d997c4f066eeb7d86406", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVmZjIyYmM0NjZiN2YwNTAzOTZkOTk3YzRmMDY2ZWViN2Q4NjQwNg==", "commit": {"author": {"name": "Lisa M. Goldstein", "email": "opus@gnu.org", "date": "2003-07-20T20:11:19Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2003-07-20T20:11:19Z"}, "message": "* doc/invoke.texi: Fixes to style, grammar and diction.\n\nFrom-SVN: r69613", "tree": {"sha": "2413791127103fd4dcc54d9fb047570d6f3b261d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2413791127103fd4dcc54d9fb047570d6f3b261d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9eff22bc466b7f050396d997c4f066eeb7d86406", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eff22bc466b7f050396d997c4f066eeb7d86406", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9eff22bc466b7f050396d997c4f066eeb7d86406", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eff22bc466b7f050396d997c4f066eeb7d86406/comments", "author": null, "committer": null, "parents": [{"sha": "6a6c0154f8560ed1fc7e629f97185894680583ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a6c0154f8560ed1fc7e629f97185894680583ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a6c0154f8560ed1fc7e629f97185894680583ad"}], "stats": {"total": 58, "additions": 31, "deletions": 27}, "files": [{"sha": "80944081a54546ff5469346100056cf1f8d8fa2c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eff22bc466b7f050396d997c4f066eeb7d86406/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eff22bc466b7f050396d997c4f066eeb7d86406/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9eff22bc466b7f050396d997c4f066eeb7d86406", "patch": "@@ -1,3 +1,7 @@\n+2003-07-20  Lisa M. Goldstein  <opus@gnu.org>\n+\n+        * doc/invoke.texi: Fixes to style, grammar and diction.\n+\n 2003-07-20  Roger Sayle  <roger@eyesopen.com>\n \n \t* builtins.def (BUILT_IN_ALLOCA): Remove \"#if SMALL_STACK\" form."}, {"sha": "6d661a4020b7fead449f6f23e5e00f9c31fdce48", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9eff22bc466b7f050396d997c4f066eeb7d86406/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9eff22bc466b7f050396d997c4f066eeb7d86406/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=9eff22bc466b7f050396d997c4f066eeb7d86406", "patch": "@@ -1593,14 +1593,14 @@ Instantiations of these templates may be mangled incorrectly.\n \n @item -Wctor-dtor-privacy @r{(C++ only)}\n @opindex Wctor-dtor-privacy\n-Warn when a class seems unusable, because all the constructors or\n-destructors in a class are private and the class has no friends or\n+Warn when a class seems unusable because all the constructors or\n+destructors in that class are private, and it has neither friends nor\n public static member functions.\n \n @item -Wnon-virtual-dtor @r{(C++ only)}\n @opindex Wnon-virtual-dtor\n-Warn when a class declares a non-virtual destructor that should probably\n-be virtual, because it looks like the class will be used polymorphically.\n+Warn when a class appears to be polymorphic, thereby requiring a virtual\n+destructor, yet it declares a non-virtual one.\n This warning is enabled by @option{-Wall}.\n \n @item -Wreorder @r{(C++ only)}\n@@ -1618,9 +1618,9 @@ struct A @{\n @};\n @end smallexample\n \n-Here the compiler will warn that the member initializers for @samp{i}\n-and @samp{j} will be rearranged to match the declaration order of the\n-members.  This warning is enabled by @option{-Wall}.\n+The compiler will rearrange the member initializers for @samp{i}\n+and @samp{j} to match the declaration order of the members, emitting\n+a warning to that effect.  This warning is enabled by @option{-Wall}.\n @end table\n \n The following @option{-W@dots{}} options are not affected by @option{-Wall}.\n@@ -1650,8 +1650,8 @@ Item 23:  Don't try to return a reference when you must return an object.\n \n @end itemize\n \n-and about violations of the following style guidelines from Scott Meyers'\n-@cite{More Effective C++} book:\n+Also warn about violations of the following style guidelines from \n+Scott Meyers' @cite{More Effective C++} book:\n \n @itemize @bullet\n @item\n@@ -1663,8 +1663,8 @@ Item 7:  Never overload @code{&&}, @code{||}, or @code{,}.\n \n @end itemize\n \n-If you use this option, you should be aware that the standard library\n-headers do not obey all of these guidelines; you can use @samp{grep -v}\n+When selecting this option, be aware that the standard library\n+headers do not obey all of these guidelines; use @samp{grep -v}\n to filter out those warnings.\n \n @item -Wno-deprecated @r{(C++ only)}\n@@ -1674,15 +1674,15 @@ Do not warn about usage of deprecated features.  @xref{Deprecated Features}.\n @item -Wno-non-template-friend @r{(C++ only)}\n @opindex Wno-non-template-friend\n Disable warnings when non-templatized friend functions are declared\n-within a template.  With the advent of explicit template specification\n+within a template.  Since the advent of explicit template specification\n support in G++, if the name of the friend is an unqualified-id (i.e.,\n @samp{friend foo(int)}), the C++ language specification demands that the\n friend declare or define an ordinary, nontemplate function.  (Section\n 14.5.3).  Before G++ implemented explicit specification, unqualified-ids\n could be interpreted as a particular specialization of a templatized\n function.  Because this non-conforming behavior is no longer the default\n behavior for G++, @option{-Wnon-template-friend} allows the compiler to\n-check existing code for potential trouble spots, and is on by default.\n+check existing code for potential trouble spots and is on by default.\n This new compiler behavior can be turned off with\n @option{-Wno-non-template-friend} which keeps the conformant compiler code\n but disables the helpful warning.\n@@ -1692,7 +1692,7 @@ but disables the helpful warning.\n Warn if an old-style (C-style) cast to a non-void type is used within\n a C++ program.  The new-style casts (@samp{static_cast},\n @samp{reinterpret_cast}, and @samp{const_cast}) are less vulnerable to\n-unintended effects, and much easier to grep for.\n+unintended effects and much easier to search for.\n \n @item -Woverloaded-virtual @r{(C++ only)}\n @opindex Woverloaded-virtual\n@@ -1712,7 +1712,7 @@ struct B: public A @{\n @end smallexample\n \n the @code{A} class version of @code{f} is hidden in @code{B}, and code\n-like this:\n+like:\n \n @smallexample\n B* b;\n@@ -1729,7 +1729,7 @@ to a plain pointer.\n @item -Wsign-promo @r{(C++ only)}\n @opindex Wsign-promo\n Warn when overload resolution chooses a promotion from unsigned or\n-enumeral type to a signed type over a conversion to an unsigned type of\n+enumeral type to a signed type, over a conversion to an unsigned type of\n the same size.  Previous versions of G++ would try to preserve\n unsignedness, but the standard mandates the current behavior.\n \n@@ -1764,7 +1764,7 @@ In this example, G++ will synthesize a default @samp{A& operator =\n @cindex Objective-C options, command line\n @cindex options, Objective-C\n This section describes the command-line options that are only meaningful\n-for Objective-C programs; but you can also use most of the GNU compiler\n+for Objective-C programs, but you can also use most of the GNU compiler\n options regardless of what language your program is in.  For example,\n you might compile a file @code{some_class.m} like this:\n \n@@ -1773,7 +1773,7 @@ gcc -g -fgnu-runtime -O -c some_class.m\n @end example\n \n @noindent\n-In this example, only @option{-fgnu-runtime} is an option meant only for\n+In this example, @option{-fgnu-runtime} is an option meant only for\n Objective-C programs; you can use the other options with any language\n supported by GCC@.\n \n@@ -1819,8 +1819,8 @@ and no warning is issued for them.\n Warn if multiple methods of different types for the same selector are\n found during compilation.  The check is performed on the list of methods\n in the final stage of compilation.  Additionally, a check is performed\n-that for each selector appearing in a @code{@@selector(@dots{})}\n-expression, a corresponding method with that selector has been found\n+for each selector appearing in a @code{@@selector(@dots{})}\n+expression, and a corresponding method for that selector has been found\n during compilation.  Because these checks scan the method table only at\n the end of compilation, these warnings are not produced if the final\n stage of compilation is not reached, for example because an error is\n@@ -1831,13 +1831,13 @@ being used.\n @opindex Wundeclared-selector\n Warn if a @code{@@selector(@dots{})} expression referring to an\n undeclared selector is found.  A selector is considered undeclared if no\n-method with that name has been declared (explicitly, in an\n-@code{@@interface} or @code{@@protocol} declaration, or implicitly, in\n-an @code{@@implementation} section) before the\n-@code{@@selector(@dots{})} expression.  This option always performs its\n-checks as soon as a @code{@@selector(@dots{})} expression is found\n-(while @code{-Wselector} only performs its checks in the final stage of\n-compilation), and so additionally enforces the coding style convention\n+method with that name has been declared before the \n+@code{@@selector(@dots{})} expression, either explicitly in an\n+@code{@@interface} or @code{@@protocol} declaration, or implicitly in\n+an @code{@@implementation} section.  This option always performs its\n+checks as soon as a @code{@@selector(@dots{})} expression is found,\n+while @code{-Wselector} only performs its checks in the final stage of\n+compilation.  This also enforces the coding style convention\n that methods and selectors must be declared before being used.\n \n @c not documented because only avail via -Wp"}]}