{"sha": "f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE2ODViN2MxN2NmYTlkMGE3NGQyZTc1ZjYzZDQyYWU2MWMyOWY3NA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-01-23T03:01:53Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-01-23T03:01:53Z"}, "message": "bad.c: Include intl.h.\n\n\t* bad.c: Include intl.h.\n\t(FFEBAD_MSGS1, FFEBAD_MSGS2): Replace by FFEBAD_MSG, SHORT,\n\tLONG.  Adjust definitions to work with exgettext.\n\t(ffebad_start_): Translate all error messages.\n\t(ffebad_finish): Mark constant strings for translation.\n\t* bad.h: Use FFEBAD_MSG.  Adjust prototype of ffebad_start_\n\tand definitions of ffebad_start_msg, ffebad_start_msg_lex to\n\twork with exgettext.\n\t* bad.def: Use FFEBAD_MSG, SHORT, LONG throughout.\n\n\t* com.c: Include intl.h.\n\t(lang_print_error_function): Always use ffeinfo_kind_message\n\tto get the kind label for a non-nested construct.  Translate\n\tit.  Translate constant strings.\n\t* info.c (FFEINFO_KIND): Adjust definition to work with exgettext.\n\t* info-k.def: Block xgettext from slurping copyright notice\n\tinto gcc.pot.  Adjust strings for their sole use, in com.c.\n\n\t* Make-lang.in (f/bad.o, f/com.o): Depend on intl.h.\n\nFrom-SVN: r49123", "tree": {"sha": "ca41794bb585929e8499cf7afd3ea5f69332e7c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca41794bb585929e8499cf7afd3ea5f69332e7c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/comments", "author": null, "committer": null, "parents": [{"sha": "bd571ffcd0877743e11bdc28415cd5c784c578dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd571ffcd0877743e11bdc28415cd5c784c578dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd571ffcd0877743e11bdc28415cd5c784c578dc"}], "stats": {"total": 1140, "additions": 574, "deletions": 566}, "files": [{"sha": "939b2676fd609b2504f32362b9cbe4b640d0899d", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74", "patch": "@@ -1,8 +1,30 @@\n-2001-01-14  David Billinghurst <David.Billinghurst@riotinto.com>\n-\n-        PR fortran/3807\n-        * f/intrin.c (ffeintrin_check_):  Allow for case of intrinsic\n-        control string have COL-spec an integer > 0.\n+2002-01-22  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* bad.c: Include intl.h.\n+\t(FFEBAD_MSGS1, FFEBAD_MSGS2): Replace by FFEBAD_MSG, SHORT,\n+\tLONG.  Adjust definitions to work with exgettext.\n+\t(ffebad_start_): Translate all error messages.\n+\t(ffebad_finish): Mark constant strings for translation.\n+\t* bad.h: Use FFEBAD_MSG.  Adjust prototype of ffebad_start_\n+\tand definitions of ffebad_start_msg, ffebad_start_msg_lex to\n+\twork with exgettext.\n+\t* bad.def: Use FFEBAD_MSG, SHORT, LONG throughout.\n+\n+\t* com.c: Include intl.h.\n+\t(lang_print_error_function): Always use ffeinfo_kind_message\n+\tto get the kind label for a non-nested construct.  Translate\n+\tit.  Translate constant strings.\n+\t* info.c (FFEINFO_KIND): Adjust definition to work with exgettext.\n+\t* info-k.def: Block xgettext from slurping copyright notice\n+\tinto gcc.pot.  Adjust strings for their sole use, in com.c.\n+\n+\t* Make-lang.in (f/bad.o, f/com.o): Depend on intl.h.\n+\n+2002-01-14  David Billinghurst <David.Billinghurst@riotinto.com>\n+\n+\tPR fortran/3807\n+\t* f/intrin.c (ffeintrin_check_):  Allow for case of intrinsic\n+\tcontrol string have COL-spec an integer > 0.\n \n 2002-01-08  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n@@ -46,7 +68,7 @@ Sun Dec 16 16:08:57 2001  Joseph S. Myers  <jsm28@cam.ac.uk>\n Sun Dec 16 10:36:51 2001  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Make-lang.in (f/version.o): Depend on f/version.h.\n-\t* version.c: Include ansidecl.h and f/version.h.\t\n+\t* version.c: Include ansidecl.h and f/version.h.\n \n Sun Dec 16 08:52:48 2001  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n "}, {"sha": "f9744d7ed155cd451e66843bc8228e95098db077", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74", "patch": "@@ -350,7 +350,7 @@ f/bad.o: f/bad.c f/proj.h $(CONFIG_H) $(SYSTEM_H) f/bad.h f/bad.def f/where.h \\\n  glimits.h f/top.h f/malloc.h flags.h f/com.h f/com-rt.def $(TREE_H) f/bld.h \\\n  f/bld-op.def f/bit.h f/info.h f/info-b.def f/info-k.def f/info-w.def \\\n  f/target.h f/lex.h f/type.h f/intrin.h f/intrin.def f/lab.h f/symbol.h \\\n- f/symbol.def f/equiv.h f/storag.h f/global.h f/name.h toplev.h\n+ f/symbol.def f/equiv.h f/storag.h f/global.h f/name.h toplev.h intl.h\n f/bit.o: f/bit.c f/proj.h $(CONFIG_H) $(SYSTEM_H) glimits.h f/bit.h \\\n  f/malloc.h\n f/bld.o: f/bld.c f/proj.h $(CONFIG_H) $(SYSTEM_H) f/bld.h f/bld-op.def f/bit.h \\\n@@ -364,7 +364,7 @@ f/com.o: f/com.c f/proj.h $(CONFIG_H) $(SYSTEM_H) flags.h $(RTL_H) $(TREE_H) \\\n  f/bad.def f/where.h glimits.h f/top.h f/lex.h f/type.h f/intrin.h \\\n  f/intrin.def f/lab.h f/symbol.h f/symbol.def f/equiv.h f/storag.h f/global.h \\\n  f/name.h f/expr.h f/implic.h f/src.h f/st.h $(GGC_H) toplev.h diagnostic.h \\\n- langhooks.h langhooks-def.h\n+ langhooks.h langhooks-def.h intl.h\n f/data.o: f/data.c f/proj.h $(CONFIG_H) $(SYSTEM_H) f/data.h f/bld.h f/bld-op.def \\\n  f/bit.h f/malloc.h f/com.h f/com-rt.def $(TREE_H) f/info.h f/info-b.def \\\n  f/info-k.def f/info-w.def f/target.h f/bad.h f/bad.def f/where.h glimits.h \\"}, {"sha": "4de713c03d37b25e47c24a0a0b04676cc8b7e672", "filename": "gcc/f/bad.c", "status": "modified", "additions": 21, "deletions": 17, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/gcc%2Ff%2Fbad.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/gcc%2Ff%2Fbad.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbad.c?ref=f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74", "patch": "@@ -1,5 +1,5 @@\n /* bad.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2002 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -42,6 +42,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"com.h\"\n #include \"toplev.h\"\n #include \"where.h\"\n+#include \"intl.h\"\n \n /* Externals defined here. */\n \n@@ -70,15 +71,18 @@ struct _ffebad_message_\n static const struct _ffebad_message_ ffebad_messages_[]\n =\n {\n-#define FFEBAD_MSGS1(KWD,SEV,MSG) { SEV, MSG },\n+#define FFEBAD_MSG(kwd,sev,msgid) { sev, msgid },\n #if FFEBAD_LONG_MSGS_ == 0\n-#define FFEBAD_MSGS2(KWD,SEV,LMSG,SMSG) { SEV, SMSG },\n+#define LONG(m)\n+#define SHORT(m) m\n #else\n-#define FFEBAD_MSGS2(KWD,SEV,LMSG,SMSG) { SEV, LMSG },\n+#define LONG(m) m\n+#define SHORT(m)\n #endif\n #include \"bad.def\"\n-#undef FFEBAD_MSGS1\n-#undef FFEBAD_MSGS2\n+#undef FFEBAD_MSG\n+#undef LONG\n+#undef SHORT\n };\n \n static struct\n@@ -161,7 +165,7 @@ ffebad_severity (ffebad errnum)\n \n bool\n ffebad_start_ (bool lex_override, ffebad errnum, ffebadSeverity sev,\n-\t       const char *message)\n+\t       const char *msgid)\n {\n   unsigned char i;\n \n@@ -174,12 +178,12 @@ ffebad_start_ (bool lex_override, ffebad errnum, ffebadSeverity sev,\n   if (errnum != FFEBAD)\n     {\n       ffebad_severity_ = ffebad_messages_[errnum].severity;\n-      ffebad_message_ = ffebad_messages_[errnum].message;\n+      ffebad_message_ = gettext (ffebad_messages_[errnum].message);\n     }\n   else\n     {\n       ffebad_severity_ = sev;\n-      ffebad_message_ = message;\n+      ffebad_message_ = gettext (msgid);\n     }\n \n   switch (ffebad_severity_)\n@@ -379,15 +383,15 @@ ffebad_finish ()\n   switch (ffebad_severity_)\n     {\n     case FFEBAD_severityINFORMATIONAL:\n-      s = \"note:\";\n+      s = _(\"note:\");\n       break;\n \n     case FFEBAD_severityWARNING:\n-      s = \"warning:\";\n+      s = _(\"warning:\");\n       break;\n \n     case FFEBAD_severitySEVERE:\n-      s = \"fatal:\";\n+      s = _(\"fatal:\");\n       break;\n \n     default:\n@@ -429,7 +433,7 @@ ffebad_finish ()\n \t\t   pointer);\n \t  last_line_num = ln;\n \t  last_col_num = cn;\n-\t  s = \"(continued):\";\n+\t  s = _(\"(continued):\");\n \t}\n       else\n \t{\n@@ -479,14 +483,14 @@ ffebad_finish ()\n \n \t      if ((index < 0) || (index >= FFEBAD_MAX_))\n \t\t{\n-\t\t  bufi = ffebad_bufputs_ (buf, bufi, \"[REPORT BUG!!] %\");\n+\t\t  bufi = ffebad_bufputs_ (buf, bufi, _(\"[REPORT BUG!!] %\"));\n \t\t  bufi = ffebad_bufputc_ (buf, bufi, c);\n \t\t}\n \t      else\n \t\t{\n \t\t  s = ffebad_string_[index];\n \t\t  if (s == NULL)\n-\t\t    bufi = ffebad_bufputs_ (buf, bufi, \"[REPORT BUG!!]\");\n+\t\t    bufi = ffebad_bufputs_ (buf, bufi, _(\"[REPORT BUG!!]\"));\n \t\t  else\n \t\t    bufi = ffebad_bufputs_ (buf, bufi, s);\n \t\t}\n@@ -497,7 +501,7 @@ ffebad_finish ()\n \n \t      if ((index < 0) || (index >= FFEBAD_MAX_))\n \t\t{\n-\t\t  bufi = ffebad_bufputs_ (buf, bufi, \"[REPORT BUG!!] %\");\n+\t\t  bufi = ffebad_bufputs_ (buf, bufi, _(\"[REPORT BUG!!] %\"));\n \t\t  bufi = ffebad_bufputc_ (buf, bufi, c);\n \t\t}\n \t      else\n@@ -518,7 +522,7 @@ ffebad_finish ()\n \t    bufi = ffebad_bufputc_ (buf, bufi, '%');\n \t  else\n \t    {\n-\t      bufi = ffebad_bufputs_ (buf, bufi, \"[REPORT BUG!!]\");\n+\t      bufi = ffebad_bufputs_ (buf, bufi, _(\"[REPORT BUG!!]\"));\n \t      bufi = ffebad_bufputc_ (buf, bufi, '%');\n \t      bufi = ffebad_bufputc_ (buf, bufi, c);\n \t    }"}, {"sha": "165a5a38fd1004bc804dc4bfbeaf70dde553b845", "filename": "gcc/f/bad.def", "status": "modified", "additions": 495, "deletions": 495, "changes": 990, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/gcc%2Ff%2Fbad.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/gcc%2Ff%2Fbad.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbad.def?ref=f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74", "patch": "@@ -1,5 +1,5 @@\n /* bad.def -- Public #include File (module.h template V1.0)\n-   Copyright (C) 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997, 2002 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -34,675 +34,675 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define SEVERE FFEBAD_severitySEVERE\n #define DISASTER FFEBAD_severityDISASTER\n \n-FFEBAD_MSGS1 (FFEBAD_MISSING_FIRST_BINARY_OPERAND, FATAL,\n+FFEBAD_MSG (FFEBAD_MISSING_FIRST_BINARY_OPERAND, FATAL,\n \"Missing first operand for binary operator at %0\")\n-FFEBAD_MSGS1 (FFEBAD_NULL_CHAR_CONST, WARN,\n+FFEBAD_MSG (FFEBAD_NULL_CHAR_CONST, WARN,\n \"Zero-length character constant at %0\")\n-FFEBAD_MSGS1 (FFEBAD_INVALID_TOKEN_IN_EXPRESSION, FATAL,\n+FFEBAD_MSG (FFEBAD_INVALID_TOKEN_IN_EXPRESSION, FATAL,\n \"Invalid token at %0 in expression or subexpression at %1\")\n-FFEBAD_MSGS1 (FFEBAD_MISSING_OPERAND_FOR_OPERATOR, FATAL,\n+FFEBAD_MSG (FFEBAD_MISSING_OPERAND_FOR_OPERATOR, FATAL,\n \"Missing operand for operator at %1 at end of expression at %0\")\n-FFEBAD_MSGS1 (FFEBAD_LABEL_ALREADY_DEFINED, FATAL,\n+FFEBAD_MSG (FFEBAD_LABEL_ALREADY_DEFINED, FATAL,\n \"Label %A already defined at %1 when redefined at %0\")\n-FFEBAD_MSGS1 (FFEBAD_UNRECOGNIZED_CHARACTER, FATAL,\n+FFEBAD_MSG (FFEBAD_UNRECOGNIZED_CHARACTER, FATAL,\n \"Unrecognized character at %0 [info -f g77 M LEX]\")\n-FFEBAD_MSGS1 (FFEBAD_LABEL_WITHOUT_STMT, WARN,\n+FFEBAD_MSG (FFEBAD_LABEL_WITHOUT_STMT, WARN,\n \"Label definition %A at %0 on empty statement (as of %1)\")\n-FFEBAD_MSGS2 (FFEBAD_EXTRA_LABEL_DEF, FATAL,\n-\"Extra label definition %A at %0 -- perhaps previous label definition %B at %1 should have CONTINUE statement?\",\n-\"Extra label definition %A at %0 following label definition %B at %1\")\n-FFEBAD_MSGS1 (FFEBAD_FIRST_CHAR_INVALID, FATAL,\n+FFEBAD_MSG (FFEBAD_EXTRA_LABEL_DEF, FATAL,\n+LONG(\"Extra label definition %A at %0 -- perhaps previous label definition %B at %1 should have CONTINUE statement?\")\n+SHORT(\"Extra label definition %A at %0 following label definition %B at %1\"))\n+FFEBAD_MSG (FFEBAD_FIRST_CHAR_INVALID, FATAL,\n \"Invalid first character at %0 [info -f g77 M LEX]\")\n-FFEBAD_MSGS1 (FFEBAD_LINE_TOO_LONG, FATAL,\n+FFEBAD_MSG (FFEBAD_LINE_TOO_LONG, FATAL,\n \"Line too long as of %0 [info -f g77 M LEX]\")\n-FFEBAD_MSGS1 (FFEBAD_LABEL_FIELD_NOT_NUMERIC, FATAL,\n+FFEBAD_MSG (FFEBAD_LABEL_FIELD_NOT_NUMERIC, FATAL,\n \"Non-numeric character at %0 in label field [info -f g77 M LEX]\")\n-FFEBAD_MSGS1 (FFEBAD_LABEL_NUMBER_INVALID, FATAL,\n+FFEBAD_MSG (FFEBAD_LABEL_NUMBER_INVALID, FATAL,\n \"Label number at %0 not in range 1-99999\")\n-FFEBAD_MSGS1 (FFEBAD_NON_ANSI_COMMENT, WARN,\n+FFEBAD_MSG (FFEBAD_NON_ANSI_COMMENT, WARN,\n \"At %0, '!' and '/*' are not valid comment delimiters\")\n-FFEBAD_MSGS1 (FFEBAD_NON_ANSI_CONTINUATION_COLUMN, WARN,\n+FFEBAD_MSG (FFEBAD_NON_ANSI_CONTINUATION_COLUMN, WARN,\n \"Continuation indicator at %0 must appear in column 6 [info -f g77 M LEX]\")\n-FFEBAD_MSGS1 (FFEBAD_LABEL_ON_CONTINUATION, FATAL,\n+FFEBAD_MSG (FFEBAD_LABEL_ON_CONTINUATION, FATAL,\n \"Label at %0 invalid with continuation line indicator at %1 [info -f g77 M LEX]\")\n-FFEBAD_MSGS2 (FFEBAD_INVALID_CONTINUATION, FATAL,\n-\"Continuation indicator at %0 invalid on first non-comment line of file or following END or INCLUDE [info -f g77 M LEX]\",\n-\"Continuation indicator at %0 invalid here [info -f g77 M LEX]\")\n-FFEBAD_MSGS1 (FFEBAD_NO_CLOSING_APOSTROPHE, FATAL,\n+FFEBAD_MSG (FFEBAD_INVALID_CONTINUATION, FATAL,\n+LONG(\"Continuation indicator at %0 invalid on first non-comment line of file or following END or INCLUDE [info -f g77 M LEX]\")\n+SHORT(\"Continuation indicator at %0 invalid here [info -f g77 M LEX]\"))\n+FFEBAD_MSG (FFEBAD_NO_CLOSING_APOSTROPHE, FATAL,\n \"Character constant at %0 has no closing apostrophe at %1\")\n-FFEBAD_MSGS1 (FFEBAD_NOT_ENOUGH_HOLLERITH_CHARS, FATAL,\n+FFEBAD_MSG (FFEBAD_NOT_ENOUGH_HOLLERITH_CHARS, FATAL,\n \"Hollerith constant at %0 specified %A more characters than are present as of %1\")\n-FFEBAD_MSGS1 (FFEBAD_MISSING_CLOSE_PAREN, FATAL,\n+FFEBAD_MSG (FFEBAD_MISSING_CLOSE_PAREN, FATAL,\n \"Missing close parenthese at %0 needed to match open parenthese at %1\")\n-FFEBAD_MSGS1 (FFEBAD_INTEGER_TOO_LARGE, FATAL,\n+FFEBAD_MSG (FFEBAD_INTEGER_TOO_LARGE, FATAL,\n \"Integer at %0 too large\")\n-FFEBAD_MSGS2 (FFEBAD_BAD_MAGICAL, WARN,\n-\"Integer at %0 too large except as negative number (preceded by unary minus sign)\",\n-\"Non-negative integer at %0 too large\")\n-FFEBAD_MSGS2 (FFEBAD_BAD_MAGICAL_PRECEDENCE, WARN,\n-\"Integer at %0 too large; even though preceded by unary minus sign at %1, subsequent operator at %2 has precedence over unary minus -- enclose unary minus sign and integer in parentheses to force precedence\",\n-\"Integer at %0 too large (%2 has precedence over %1)\")\n-FFEBAD_MSGS2 (FFEBAD_BAD_MAGICAL_BINARY, WARN,\n-\"Integer at %0 too large; even though preceded by minus sign at %1, because minus sign is a binary, not unary, operator -- insert plus sign before minus sign to change it to a unary minus sign\",\n-\"Integer at %0 too large (needs unary, not binary, minus at %1)\")\n-FFEBAD_MSGS2 (FFEBAD_BAD_MAGICAL_PRECEDENCE_BINARY, WARN,\n-\"Integer at %0 too large; even though preceded by minus sign at %1, subsequent operator at %2 has precedence over minus, and that minus sign should be a unary minus rather than a binary minus -- insert plus sign before minus sign to change it to a unary minus sign, and enclose unary minus sign and integer in parentheses to force precedence\",\n-\"Integer at %0 too large (%2 has precedence over %1, which needs to be unary, not binary, minus)\")\n-FFEBAD_MSGS1 (FFEBAD_IGNORING_PERIOD, FATAL,\n+FFEBAD_MSG (FFEBAD_BAD_MAGICAL, WARN,\n+LONG(\"Integer at %0 too large except as negative number (preceded by unary minus sign)\")\n+SHORT(\"Non-negative integer at %0 too large\"))\n+FFEBAD_MSG (FFEBAD_BAD_MAGICAL_PRECEDENCE, WARN,\n+LONG(\"Integer at %0 too large; even though preceded by unary minus sign at %1, subsequent operator at %2 has precedence over unary minus -- enclose unary minus sign and integer in parentheses to force precedence\")\n+SHORT(\"Integer at %0 too large (%2 has precedence over %1)\"))\n+FFEBAD_MSG (FFEBAD_BAD_MAGICAL_BINARY, WARN,\n+LONG(\"Integer at %0 too large; even though preceded by minus sign at %1, because minus sign is a binary, not unary, operator -- insert plus sign before minus sign to change it to a unary minus sign\")\n+SHORT(\"Integer at %0 too large (needs unary, not binary, minus at %1)\"))\n+FFEBAD_MSG (FFEBAD_BAD_MAGICAL_PRECEDENCE_BINARY, WARN,\n+LONG(\"Integer at %0 too large; even though preceded by minus sign at %1, subsequent operator at %2 has precedence over minus, and that minus sign should be a unary minus rather than a binary minus -- insert plus sign before minus sign to change it to a unary minus sign, and enclose unary minus sign and integer in parentheses to force precedence\")\n+SHORT(\"Integer at %0 too large (%2 has precedence over %1, which needs to be unary, not binary, minus)\"))\n+FFEBAD_MSG (FFEBAD_IGNORING_PERIOD, FATAL,\n \"Period at %0 not followed by digits for floating-point number or by `NOT.', `TRUE.', or `FALSE.'\")\n-FFEBAD_MSGS1 (FFEBAD_INSERTING_PERIOD, FATAL,\n+FFEBAD_MSG (FFEBAD_INSERTING_PERIOD, FATAL,\n \"Missing close-period between `.%A' at %0 and %1\")\n-FFEBAD_MSGS1 (FFEBAD_INVALID_EXPONENT, FATAL,\n+FFEBAD_MSG (FFEBAD_INVALID_EXPONENT, FATAL,\n \"Invalid exponent at %0 for real constant at %1; nondigit `%A' in exponent field\")\n-FFEBAD_MSGS1 (FFEBAD_MISSING_EXPONENT_VALUE, FATAL,\n+FFEBAD_MSG (FFEBAD_MISSING_EXPONENT_VALUE, FATAL,\n \"Missing value at %1 for real-number exponent at %0\")\n-FFEBAD_MSGS1 (FFEBAD_MISSING_BINARY_OPERATOR, FATAL,\n+FFEBAD_MSG (FFEBAD_MISSING_BINARY_OPERATOR, FATAL,\n \"Expected binary operator between expressions at %0 and at %1\")\n-FFEBAD_MSGS2 (FFEBAD_INVALID_DOTDOT, FATAL,\n-\"Period at %0 not followed by valid keyword forming a valid binary operator; `.%A.' is not a valid binary operator\",\n-\"`.%A.' at %0 not a binary operator\")\n-FFEBAD_MSGS2 (FFEBAD_QUOTE_MISSES_DIGITS, FATAL,\n-\"Double-quote at %0 not followed by a string of valid octal digits at %1\",\n-\"Invalid octal constant at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INVALID_BINARY_DIGIT, FATAL,\n-\"Invalid binary digit(s) found in string of digits at %0\",\n-\"Invalid binary constant at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INVALID_HEX_DIGIT, FATAL,\n-\"Invalid hexadecimal digit(s) found in string of digits at %0\",\n-\"Invalid hexadecimal constant at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INVALID_OCTAL_DIGIT, FATAL,\n-\"Invalid octal digit(s) found in string of digits at %0\",\n-\"Invalid octal constant at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INVALID_RADIX_SPECIFIER, FATAL,\n-\"Invalid radix specifier `%A' at %0 for typeless constant at %1\",\n-\"Invalid typeless constant at %1\")\n-FFEBAD_MSGS2 (FFEBAD_INVALID_TYPELESS_BINARY_DIGIT, FATAL,\n-\"Invalid binary digit(s) found in string of digits at %0\",\n-\"Invalid binary constant at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INVALID_TYPELESS_OCTAL_DIGIT, FATAL,\n-\"Invalid octal digit(s) found in string of digits at %0\",\n-\"Invalid octal constant at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INVALID_TYPELESS_HEX_DIGIT, FATAL,\n-\"Invalid hexadecimal digit(s) found in string of digits at %0\",\n-\"Invalid hexadecimal constant at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INVALID_COMPLEX_PART, FATAL,\n-\"%A part of complex constant at %0 must be a real or integer constant -- otherwise use CMPLX() or COMPLEX() in place of ()\",\n-\"%A part of complex constant at %0 not a real or integer constant\")\n-FFEBAD_MSGS2 (FFEBAD_INVALID_PERCENT, FATAL,\n-\"Invalid keyword `%%%A' at %0 in this context\",\n-\"Invalid keyword `%%%A' at %0\")\n-FFEBAD_MSGS2 (FFEBAD_NULL_EXPRESSION, FATAL,\n-\"Null expression between %0 and %1 invalid in this context\",\n-\"Invalid null expression between %0 and %1\")\n-FFEBAD_MSGS2 (FFEBAD_CONCAT_ARGS_TYPE, FATAL,\n-\"Concatenation operator at %0 must operate on two subexpressions of character type, but neither subexpression at %1 or %2 is of character type\",\n-\"Invalid operands at %1 and %2 for concatenation operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_CONCAT_ARG_TYPE, FATAL,\n-\"Concatenation operator at %0 must operate on two subexpressions of character type, but the subexpression at %1 is not of character type\",\n-\"Invalid operand at %1 for concatenation operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_CONCAT_ARG_KIND, FATAL,\n-\"Concatenation operator at %0 must operate on two scalar (not array) subexpressions, two function invocations returning character scalars, or a combination of both -- but the subexpression at %1 is %A\",\n-\"Invalid operand (is %A) at %1 for concatenation operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_MATH_ARGS_TYPE, FATAL,\n-\"Arithmetic operator at %0 must operate on two subexpressions of arithmetic type, but neither subexpression at %1 or %2 is of arithmetic type\",\n-\"Invalid operands at %1 and %2 for arithmetic operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_MATH_ARG_TYPE, FATAL,\n-\"Arithmetic operator at %0 must operate on two subexpressions of arithmetic type, but the subexpression at %1 is not of arithmetic type\",\n-\"Invalid operand at %1 for arithmetic operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_MATH_ARG_KIND, FATAL,\n-\"Arithmetic operator at %0 must operate on two scalar (not array) subexpressions, two function invocations returning arithmetic scalars, or a combination of both -- but the subexpression at %1 is %A\",\n-\"Invalid operand (is %A) at %1 for arithmetic operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_NO_CLOSING_QUOTE, FATAL,\n-\"Character constant at %0 has no closing quote at %1 [info -f g77 M LEX]\",\n-\"Unterminated character constant at %0 [info -f g77 M LEX]\")\n-FFEBAD_MSGS2 (FFEBAD_BAD_CHAR_CONTINUE, FATAL,\n-\"Continuation line at %0 must have initial `&' since it continues a character context [info -f g77 M LEX]\",\n-\"Missing initial `&' on continuation line at %0 [info -f g77 M LEX]\")\n-FFEBAD_MSGS2 (FFEBAD_BAD_LEXTOK_CONTINUE, FATAL,\n-\"Continuation line at %0 must have initial `&' since it continues a split lexical token [info -f g77 M LEX]\",\n-\"Missing initial `&' on continuation line at %0 [info -f g77 M LEX]\")\n-FFEBAD_MSGS2 (FFEBAD_BAD_FREE_CONTINUE, FATAL,\n-\"Continuation line at %0 invalid because it consists only of a single `&' as the only nonblank character\",\n-\"Invalid continuation line at %0\")\n-FFEBAD_MSGS2 (FFEBAD_STMT_BEGINS_BAD, FATAL,\n-\"Statement at %0 begins with invalid token [info -f g77 M LEX]\",\n-\"Invalid statement at %0 [info -f g77 M LEX]\")\n-FFEBAD_MSGS1 (FFEBAD_SEMICOLON, FATAL,\n+FFEBAD_MSG (FFEBAD_INVALID_DOTDOT, FATAL,\n+LONG(\"Period at %0 not followed by valid keyword forming a valid binary operator; `.%A.' is not a valid binary operator\")\n+SHORT(\"`.%A.' at %0 not a binary operator\"))\n+FFEBAD_MSG (FFEBAD_QUOTE_MISSES_DIGITS, FATAL,\n+LONG(\"Double-quote at %0 not followed by a string of valid octal digits at %1\")\n+SHORT(\"Invalid octal constant at %0\"))\n+FFEBAD_MSG (FFEBAD_INVALID_BINARY_DIGIT, FATAL,\n+LONG(\"Invalid binary digit(s) found in string of digits at %0\")\n+SHORT(\"Invalid binary constant at %0\"))\n+FFEBAD_MSG (FFEBAD_INVALID_HEX_DIGIT, FATAL,\n+LONG(\"Invalid hexadecimal digit(s) found in string of digits at %0\")\n+SHORT(\"Invalid hexadecimal constant at %0\"))\n+FFEBAD_MSG (FFEBAD_INVALID_OCTAL_DIGIT, FATAL,\n+LONG(\"Invalid octal digit(s) found in string of digits at %0\")\n+SHORT(\"Invalid octal constant at %0\"))\n+FFEBAD_MSG (FFEBAD_INVALID_RADIX_SPECIFIER, FATAL,\n+LONG(\"Invalid radix specifier `%A' at %0 for typeless constant at %1\")\n+SHORT(\"Invalid typeless constant at %1\"))\n+FFEBAD_MSG (FFEBAD_INVALID_TYPELESS_BINARY_DIGIT, FATAL,\n+LONG(\"Invalid binary digit(s) found in string of digits at %0\")\n+SHORT(\"Invalid binary constant at %0\"))\n+FFEBAD_MSG (FFEBAD_INVALID_TYPELESS_OCTAL_DIGIT, FATAL,\n+LONG(\"Invalid octal digit(s) found in string of digits at %0\")\n+SHORT(\"Invalid octal constant at %0\"))\n+FFEBAD_MSG (FFEBAD_INVALID_TYPELESS_HEX_DIGIT, FATAL,\n+LONG(\"Invalid hexadecimal digit(s) found in string of digits at %0\")\n+SHORT(\"Invalid hexadecimal constant at %0\"))\n+FFEBAD_MSG (FFEBAD_INVALID_COMPLEX_PART, FATAL,\n+LONG(\"%A part of complex constant at %0 must be a real or integer constant -- otherwise use CMPLX() or COMPLEX() in place of ()\")\n+SHORT(\"%A part of complex constant at %0 not a real or integer constant\"))\n+FFEBAD_MSG (FFEBAD_INVALID_PERCENT, FATAL,\n+LONG(\"Invalid keyword `%%%A' at %0 in this context\")\n+SHORT(\"Invalid keyword `%%%A' at %0\"))\n+FFEBAD_MSG (FFEBAD_NULL_EXPRESSION, FATAL,\n+LONG(\"Null expression between %0 and %1 invalid in this context\")\n+SHORT(\"Invalid null expression between %0 and %1\"))\n+FFEBAD_MSG (FFEBAD_CONCAT_ARGS_TYPE, FATAL,\n+LONG(\"Concatenation operator at %0 must operate on two subexpressions of character type, but neither subexpression at %1 or %2 is of character type\")\n+SHORT(\"Invalid operands at %1 and %2 for concatenation operator at %0\"))\n+FFEBAD_MSG (FFEBAD_CONCAT_ARG_TYPE, FATAL,\n+LONG(\"Concatenation operator at %0 must operate on two subexpressions of character type, but the subexpression at %1 is not of character type\")\n+SHORT(\"Invalid operand at %1 for concatenation operator at %0\"))\n+FFEBAD_MSG (FFEBAD_CONCAT_ARG_KIND, FATAL,\n+LONG(\"Concatenation operator at %0 must operate on two scalar (not array) subexpressions, two function invocations returning character scalars, or a combination of both -- but the subexpression at %1 is %A\")\n+SHORT(\"Invalid operand (is %A) at %1 for concatenation operator at %0\"))\n+FFEBAD_MSG (FFEBAD_MATH_ARGS_TYPE, FATAL,\n+LONG(\"Arithmetic operator at %0 must operate on two subexpressions of arithmetic type, but neither subexpression at %1 or %2 is of arithmetic type\")\n+SHORT(\"Invalid operands at %1 and %2 for arithmetic operator at %0\"))\n+FFEBAD_MSG (FFEBAD_MATH_ARG_TYPE, FATAL,\n+LONG(\"Arithmetic operator at %0 must operate on two subexpressions of arithmetic type, but the subexpression at %1 is not of arithmetic type\")\n+SHORT(\"Invalid operand at %1 for arithmetic operator at %0\"))\n+FFEBAD_MSG (FFEBAD_MATH_ARG_KIND, FATAL,\n+LONG(\"Arithmetic operator at %0 must operate on two scalar (not array) subexpressions, two function invocations returning arithmetic scalars, or a combination of both -- but the subexpression at %1 is %A\")\n+SHORT(\"Invalid operand (is %A) at %1 for arithmetic operator at %0\"))\n+FFEBAD_MSG (FFEBAD_NO_CLOSING_QUOTE, FATAL,\n+LONG(\"Character constant at %0 has no closing quote at %1 [info -f g77 M LEX]\")\n+SHORT(\"Unterminated character constant at %0 [info -f g77 M LEX]\"))\n+FFEBAD_MSG (FFEBAD_BAD_CHAR_CONTINUE, FATAL,\n+LONG(\"Continuation line at %0 must have initial `&' since it continues a character context [info -f g77 M LEX]\")\n+SHORT(\"Missing initial `&' on continuation line at %0 [info -f g77 M LEX]\"))\n+FFEBAD_MSG (FFEBAD_BAD_LEXTOK_CONTINUE, FATAL,\n+LONG(\"Continuation line at %0 must have initial `&' since it continues a split lexical token [info -f g77 M LEX]\")\n+SHORT(\"Missing initial `&' on continuation line at %0 [info -f g77 M LEX]\"))\n+FFEBAD_MSG (FFEBAD_BAD_FREE_CONTINUE, FATAL,\n+LONG(\"Continuation line at %0 invalid because it consists only of a single `&' as the only nonblank character\")\n+SHORT(\"Invalid continuation line at %0\"))\n+FFEBAD_MSG (FFEBAD_STMT_BEGINS_BAD, FATAL,\n+LONG(\"Statement at %0 begins with invalid token [info -f g77 M LEX]\")\n+SHORT(\"Invalid statement at %0 [info -f g77 M LEX]\"))\n+FFEBAD_MSG (FFEBAD_SEMICOLON, FATAL,\n \"Semicolon at %0 is an invalid token\")\n-FFEBAD_MSGS2 (FFEBAD_UNREC_STMT, FATAL,\n-\"Unrecognized statement name at %0 and invalid form for assignment or statement-function definition at %1\",\n-\"Invalid statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INVALID_STMT_FORM, FATAL,\n-\"Invalid form for %A statement at %0\",\n-\"Invalid %A statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INVALID_HOLL_IN_STMT, FATAL,\n-\"Invalid use of hollerith constant in statement at %0 -- enclose the constant in parentheses (for example, change BACKSPACE 2HAB to BACKSPACE (2HAB))\",\n-\"Enclose hollerith constant in statement at %0 in parentheses\")\n-FFEBAD_MSGS1 (FFEBAD_FORMAT_EXTRA_COMMA, FATAL,\n+FFEBAD_MSG (FFEBAD_UNREC_STMT, FATAL,\n+LONG(\"Unrecognized statement name at %0 and invalid form for assignment or statement-function definition at %1\")\n+SHORT(\"Invalid statement at %0\"))\n+FFEBAD_MSG (FFEBAD_INVALID_STMT_FORM, FATAL,\n+LONG(\"Invalid form for %A statement at %0\")\n+SHORT(\"Invalid %A statement at %0\"))\n+FFEBAD_MSG (FFEBAD_INVALID_HOLL_IN_STMT, FATAL,\n+LONG(\"Invalid use of hollerith constant in statement at %0 -- enclose the constant in parentheses (for example, change BACKSPACE 2HAB to BACKSPACE (2HAB))\")\n+SHORT(\"Enclose hollerith constant in statement at %0 in parentheses\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_EXTRA_COMMA, FATAL,\n \"Extraneous comma in FORMAT statement at %0\")\n-FFEBAD_MSGS1 (FFEBAD_FORMAT_MISSING_COMMA, WARN,\n+FFEBAD_MSG (FFEBAD_FORMAT_MISSING_COMMA, WARN,\n \"Missing comma in FORMAT statement at %0\")\n-FFEBAD_MSGS1 (FFEBAD_FORMAT_SPURIOUS_SIGN, FATAL,\n+FFEBAD_MSG (FFEBAD_FORMAT_SPURIOUS_SIGN, FATAL,\n \"Spurious sign in FORMAT statement at %0\")\n-FFEBAD_MSGS1 (FFEBAD_FORMAT_SPURIOUS_NUMBER, FATAL,\n+FFEBAD_MSG (FFEBAD_FORMAT_SPURIOUS_NUMBER, FATAL,\n \"Spurious number in FORMAT statement at %0\")\n-FFEBAD_MSGS1 (FFEBAD_FORMAT_TEXT_IN_NUMBER, FATAL,\n+FFEBAD_MSG (FFEBAD_FORMAT_TEXT_IN_NUMBER, FATAL,\n \"Spurious text trailing number in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_P_NOCOMMA, FATAL,\n-\"nP control edit descriptor not followed by comma but followed by edit descriptor at %0 other than D, E, EN, F, or G\",\n-\"Invalid edit descriptor at %0 following nP control edit descriptor\")\n-FFEBAD_MSGS1 (FFEBAD_FORMAT_BAD_SPEC, FATAL,\n+FFEBAD_MSG (FFEBAD_FORMAT_P_NOCOMMA, FATAL,\n+LONG(\"nP control edit descriptor not followed by comma but followed by edit descriptor at %0 other than D, E, EN, F, or G\")\n+SHORT(\"Invalid edit descriptor at %0 following nP control edit descriptor\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_SPEC, FATAL,\n \"Unrecognized FORMAT specifier at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_I_SPEC, FATAL,\n-\"Invalid I specifier in FORMAT statement at %0 -- correct form: [r]Iw.[m]\",\n-\"Invalid I specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_B_SPEC, FATAL,\n-\"Invalid B specifier in FORMAT statement at %0 -- correct form: [r]Bw.[m]\",\n-\"Invalid B specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_O_SPEC, FATAL,\n-\"Invalid O specifier in FORMAT statement at %0 -- correct form: [r]Ow.[m]\",\n-\"Invalid O specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_Z_SPEC, FATAL,\n-\"Invalid Z specifier in FORMAT statement at %0 -- correct form: [r]Zw.[m]\",\n-\"Invalid Z specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_F_SPEC, FATAL,\n-\"Invalid F specifier in FORMAT statement at %0 -- correct form: [r]Fw.d\",\n-\"Invalid F specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_E_SPEC, FATAL,\n-\"Invalid E specifier in FORMAT statement at %0 -- correct form: [r]Ew.d[Ee]\",\n-\"Invalid E specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_EN_SPEC, FATAL,\n-\"Invalid EN specifier in FORMAT statement at %0 -- correct form: [r]ENw.d[Ee]\",\n-\"Invalid EN specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_G_SPEC, FATAL,\n-\"Invalid G specifier in FORMAT statement at %0 -- correct form: [r]Gw.d[Ee]\",\n-\"Invalid G specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_L_SPEC, FATAL,\n-\"Invalid L specifier in FORMAT statement at %0 -- correct form: [r]Lw\",\n-\"Invalid L specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_A_SPEC, FATAL,\n-\"Invalid A specifier in FORMAT statement at %0 -- correct form: [r]A[w]\",\n-\"Invalid A specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_D_SPEC, FATAL,\n-\"Invalid D specifier in FORMAT statement at %0 -- correct form: [r]Dw.d\",\n-\"Invalid D specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_Q_SPEC, FATAL,\n-\"Invalid Q specifier in FORMAT statement at %0 -- correct form: Q\",\n-\"Invalid Q specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_DOLLAR_SPEC, FATAL,\n-\"Invalid $ specifier in FORMAT statement at %0 -- correct form: $\",\n-\"Invalid $ specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_P_SPEC, FATAL,\n-\"Invalid P specifier in FORMAT statement at %0 -- correct form: kP\",\n-\"Invalid P specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_T_SPEC, FATAL,\n-\"Invalid T specifier in FORMAT statement at %0 -- correct form: Tn\",\n-\"Invalid T specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_TL_SPEC, FATAL,\n-\"Invalid TL specifier in FORMAT statement at %0 -- correct form: TLn\",\n-\"Invalid TL specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_TR_SPEC, FATAL,\n-\"Invalid TR specifier in FORMAT statement at %0 -- correct form: TRn\",\n-\"Invalid TR specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_X_SPEC, FATAL,\n-\"Invalid X specifier in FORMAT statement at %0 -- correct form: nX\",\n-\"Invalid X specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_S_SPEC, FATAL,\n-\"Invalid S specifier in FORMAT statement at %0 -- correct form: S\",\n-\"Invalid S specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_SP_SPEC, FATAL,\n-\"Invalid SP specifier in FORMAT statement at %0 -- correct form: SP\",\n-\"Invalid SP specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_SS_SPEC, FATAL,\n-\"Invalid SS specifier in FORMAT statement at %0 -- correct form: SS\",\n-\"Invalid SS specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_BN_SPEC, FATAL,\n-\"Invalid BN specifier in FORMAT statement at %0 -- correct form: BN\",\n-\"Invalid BN specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_BZ_SPEC, FATAL,\n-\"Invalid BZ specifier in FORMAT statement at %0 -- correct form: BZ\",\n-\"Invalid BZ specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_COLON_SPEC, FATAL,\n-\"Invalid : specifier in FORMAT statement at %0 -- correct form: :\",\n-\"Invalid : specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_BAD_H_SPEC, FATAL,\n-\"Invalid H specifier in FORMAT statement at %0 -- correct form: nHcharacters  !where n is an unsigned decimal constant, and characters               !contains exactly n characters (including spaces)\",\n-\"Invalid H specifier in FORMAT statement at %0\")\n-FFEBAD_MSGS1 (FFEBAD_FORMAT_MISSING_PAREN, FATAL,\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_I_SPEC, FATAL,\n+LONG(\"Invalid I specifier in FORMAT statement at %0 -- correct form: [r]Iw.[m]\")\n+SHORT(\"Invalid I specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_B_SPEC, FATAL,\n+LONG(\"Invalid B specifier in FORMAT statement at %0 -- correct form: [r]Bw.[m]\")\n+SHORT(\"Invalid B specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_O_SPEC, FATAL,\n+LONG(\"Invalid O specifier in FORMAT statement at %0 -- correct form: [r]Ow.[m]\")\n+SHORT(\"Invalid O specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_Z_SPEC, FATAL,\n+LONG(\"Invalid Z specifier in FORMAT statement at %0 -- correct form: [r]Zw.[m]\")\n+SHORT(\"Invalid Z specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_F_SPEC, FATAL,\n+LONG(\"Invalid F specifier in FORMAT statement at %0 -- correct form: [r]Fw.d\")\n+SHORT(\"Invalid F specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_E_SPEC, FATAL,\n+LONG(\"Invalid E specifier in FORMAT statement at %0 -- correct form: [r]Ew.d[Ee]\")\n+SHORT(\"Invalid E specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_EN_SPEC, FATAL,\n+LONG(\"Invalid EN specifier in FORMAT statement at %0 -- correct form: [r]ENw.d[Ee]\")\n+SHORT(\"Invalid EN specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_G_SPEC, FATAL,\n+LONG(\"Invalid G specifier in FORMAT statement at %0 -- correct form: [r]Gw.d[Ee]\")\n+SHORT(\"Invalid G specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_L_SPEC, FATAL,\n+LONG(\"Invalid L specifier in FORMAT statement at %0 -- correct form: [r]Lw\")\n+SHORT(\"Invalid L specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_A_SPEC, FATAL,\n+LONG(\"Invalid A specifier in FORMAT statement at %0 -- correct form: [r]A[w]\")\n+SHORT(\"Invalid A specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_D_SPEC, FATAL,\n+LONG(\"Invalid D specifier in FORMAT statement at %0 -- correct form: [r]Dw.d\")\n+SHORT(\"Invalid D specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_Q_SPEC, FATAL,\n+LONG(\"Invalid Q specifier in FORMAT statement at %0 -- correct form: Q\")\n+SHORT(\"Invalid Q specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_DOLLAR_SPEC, FATAL,\n+LONG(\"Invalid $ specifier in FORMAT statement at %0 -- correct form: $\")\n+SHORT(\"Invalid $ specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_P_SPEC, FATAL,\n+LONG(\"Invalid P specifier in FORMAT statement at %0 -- correct form: kP\")\n+SHORT(\"Invalid P specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_T_SPEC, FATAL,\n+LONG(\"Invalid T specifier in FORMAT statement at %0 -- correct form: Tn\")\n+SHORT(\"Invalid T specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_TL_SPEC, FATAL,\n+LONG(\"Invalid TL specifier in FORMAT statement at %0 -- correct form: TLn\")\n+SHORT(\"Invalid TL specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_TR_SPEC, FATAL,\n+LONG(\"Invalid TR specifier in FORMAT statement at %0 -- correct form: TRn\")\n+SHORT(\"Invalid TR specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_X_SPEC, FATAL,\n+LONG(\"Invalid X specifier in FORMAT statement at %0 -- correct form: nX\")\n+SHORT(\"Invalid X specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_S_SPEC, FATAL,\n+LONG(\"Invalid S specifier in FORMAT statement at %0 -- correct form: S\")\n+SHORT(\"Invalid S specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_SP_SPEC, FATAL,\n+LONG(\"Invalid SP specifier in FORMAT statement at %0 -- correct form: SP\")\n+SHORT(\"Invalid SP specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_SS_SPEC, FATAL,\n+LONG(\"Invalid SS specifier in FORMAT statement at %0 -- correct form: SS\")\n+SHORT(\"Invalid SS specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_BN_SPEC, FATAL,\n+LONG(\"Invalid BN specifier in FORMAT statement at %0 -- correct form: BN\")\n+SHORT(\"Invalid BN specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_BZ_SPEC, FATAL,\n+LONG(\"Invalid BZ specifier in FORMAT statement at %0 -- correct form: BZ\")\n+SHORT(\"Invalid BZ specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_COLON_SPEC, FATAL,\n+LONG(\"Invalid : specifier in FORMAT statement at %0 -- correct form: :\")\n+SHORT(\"Invalid : specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_BAD_H_SPEC, FATAL,\n+LONG(\"Invalid H specifier in FORMAT statement at %0 -- correct form: nHcharacters  !where n is an unsigned decimal constant, and characters               !contains exactly n characters (including spaces)\")\n+SHORT(\"Invalid H specifier in FORMAT statement at %0\"))\n+FFEBAD_MSG (FFEBAD_FORMAT_MISSING_PAREN, FATAL,\n \"Missing close-parenthese(s) in FORMAT statement at %0\")\n-FFEBAD_MSGS1 (FFEBAD_FORMAT_MISSING_DOT, FATAL,\n+FFEBAD_MSG (FFEBAD_FORMAT_MISSING_DOT, FATAL,\n \"Missing number following period in FORMAT statement at %0\")\n-FFEBAD_MSGS1 (FFEBAD_FORMAT_MISSING_EXP, FATAL,\n+FFEBAD_MSG (FFEBAD_FORMAT_MISSING_EXP, FATAL,\n \"Missing number following `E' in FORMAT statement at %0\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_EXPR_TOKEN, FATAL,\n-\"Invalid token with FORMAT run-time expression at %0 -- use the traditional operators .LT., .LE., .GT., .GE., .EQ., and .NE. in place of the newer tokens <, <=, >, >=, ==, and !=, because > ends an expression within a FORMAT statement\",\n-\"Invalid token with FORMAT run-time expression at %0\")\n-FFEBAD_MSGS1 (FFEBAD_TRAILING_COMMA, WARN,\n+FFEBAD_MSG (FFEBAD_FORMAT_EXPR_TOKEN, FATAL,\n+LONG(\"Invalid token with FORMAT run-time expression at %0 -- use the traditional operators .LT., .LE., .GT., .GE., .EQ., and .NE. in place of the newer tokens <, <=, >, >=, ==, and !=, because > ends an expression within a FORMAT statement\")\n+SHORT(\"Invalid token with FORMAT run-time expression at %0\"))\n+FFEBAD_MSG (FFEBAD_TRAILING_COMMA, WARN,\n \"Spurious trailing comma preceding terminator at %0\")\n-FFEBAD_MSGS1 (FFEBAD_INTERFACE_ASSIGNMENT, WARN,\n+FFEBAD_MSG (FFEBAD_INTERFACE_ASSIGNMENT, WARN,\n \"At %0, specify OPERATOR instead of ASSIGNMENT for INTERFACE statement not specifying the assignment operator (=)\")\n-FFEBAD_MSGS1 (FFEBAD_INTERFACE_OPERATOR, WARN,\n+FFEBAD_MSG (FFEBAD_INTERFACE_OPERATOR, WARN,\n \"At %0, specify ASSIGNMENT instead of OPERATOR for INTERFACE statement specifying the assignment operator (=)\")\n-FFEBAD_MSGS2 (FFEBAD_INTERFACE_NONLETTER, FATAL,\n-\"Defined operator at %0 contains a nonletter -- must contain only letters A-Z (or a-z)\",\n-\"Nonletter in defined operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INVALID_TYPEDECL_ATTR, FATAL,\n-\"Invalid type-declaration attribute at %0 -- must be one of: DIMENSION(array-spec), EXTERNAL, INTRINSIC, PARAMETER, or SAVE\",\n-\"Invalid type-declaration attribute at %0\")\n-FFEBAD_MSGS1 (FFEBAD_INVALID_TYPEDECL_INIT, FATAL,\n+FFEBAD_MSG (FFEBAD_INTERFACE_NONLETTER, FATAL,\n+LONG(\"Defined operator at %0 contains a nonletter -- must contain only letters A-Z (or a-z)\")\n+SHORT(\"Nonletter in defined operator at %0\"))\n+FFEBAD_MSG (FFEBAD_INVALID_TYPEDECL_ATTR, FATAL,\n+LONG(\"Invalid type-declaration attribute at %0 -- must be one of: DIMENSION(array-spec), EXTERNAL, INTRINSIC, PARAMETER, or SAVE\")\n+SHORT(\"Invalid type-declaration attribute at %0\"))\n+FFEBAD_MSG (FFEBAD_INVALID_TYPEDECL_INIT, FATAL,\n \"Cannot specify =initialization-expr at %0 unless `::' appears before list of objects\")\n-FFEBAD_MSGS1 (FFEBAD_LABEL_USE_DEF, FATAL,\n+FFEBAD_MSG (FFEBAD_LABEL_USE_DEF, FATAL,\n \"Reference to label at %1 inconsistent with its definition at %0\")\n-FFEBAD_MSGS1 (FFEBAD_LABEL_USE_USE, FATAL,\n+FFEBAD_MSG (FFEBAD_LABEL_USE_USE, FATAL,\n \"Reference to label at %1 inconsistent with earlier reference at %0\")\n-FFEBAD_MSGS1 (FFEBAD_LABEL_DEF_DO, FATAL,\n+FFEBAD_MSG (FFEBAD_LABEL_DEF_DO, FATAL,\n \"DO-statement reference to label at %1 follows its definition at %0\")\n-FFEBAD_MSGS1 (FFEBAD_LABEL_BLOCK, WARN,\n+FFEBAD_MSG (FFEBAD_LABEL_BLOCK, WARN,\n \"Reference to label at %1 is outside block containing definition at %0\")\n-FFEBAD_MSGS1 (FFEBAD_LABEL_DO_BLOCK_DO, FATAL,\n+FFEBAD_MSG (FFEBAD_LABEL_DO_BLOCK_DO, FATAL,\n \"DO-statement references to label at %0 and %2 separated by unterminated block starting at %1\")\n-FFEBAD_MSGS1 (FFEBAD_LABEL_DO_BLOCK_END, FATAL,\n+FFEBAD_MSG (FFEBAD_LABEL_DO_BLOCK_END, FATAL,\n \"DO-statement reference to label at %0 and label definition at %2 separated by unterminated block starting at %1\")\n-FFEBAD_MSGS1 (FFEBAD_INVALID_LABEL_DEF, FATAL,\n+FFEBAD_MSG (FFEBAD_INVALID_LABEL_DEF, FATAL,\n \"Label definition at %0 invalid on this kind of statement\")\n-FFEBAD_MSGS1 (FFEBAD_ORDER_1, FATAL,\n+FFEBAD_MSG (FFEBAD_ORDER_1, FATAL,\n \"Statement at %0 invalid in this context\")\n-FFEBAD_MSGS1 (FFEBAD_ORDER_2, FATAL,\n+FFEBAD_MSG (FFEBAD_ORDER_2, FATAL,\n \"Statement at %0 invalid in context established by statement at %1\")\n-FFEBAD_MSGS1 (FFEBAD_CONSTRUCT_NAMED, FATAL,\n+FFEBAD_MSG (FFEBAD_CONSTRUCT_NAMED, FATAL,\n \"Statement at %0 must specify construct name specified at %1\")\n-FFEBAD_MSGS1 (FFEBAD_CONSTRUCT_NOT_NAMED, FATAL,\n+FFEBAD_MSG (FFEBAD_CONSTRUCT_NOT_NAMED, FATAL,\n \"Construct name at %0 superfluous, no construct name specified at %1\")\n-FFEBAD_MSGS1 (FFEBAD_CONSTRUCT_WRONG_NAME, FATAL,\n+FFEBAD_MSG (FFEBAD_CONSTRUCT_WRONG_NAME, FATAL,\n \"Construct name at %0 not the same as construct name at %1\")\n-FFEBAD_MSGS1 (FFEBAD_CONSTRUCT_NO_DO_NAME, FATAL,\n+FFEBAD_MSG (FFEBAD_CONSTRUCT_NO_DO_NAME, FATAL,\n \"Construct name at %0 does not match construct name for any containing DO constructs\")\n-FFEBAD_MSGS1 (FFEBAD_DO_HAD_LABEL, FATAL,\n+FFEBAD_MSG (FFEBAD_DO_HAD_LABEL, FATAL,\n \"Label definition missing at %0 for DO construct specifying label at %1\")\n-FFEBAD_MSGS1 (FFEBAD_AFTER_ELSE, FATAL,\n+FFEBAD_MSG (FFEBAD_AFTER_ELSE, FATAL,\n \"Statement at %0 follows ELSE block for IF construct at %1\")\n-FFEBAD_MSGS1 (FFEBAD_FORMAT_NO_LABEL_DEF, FATAL,\n+FFEBAD_MSG (FFEBAD_FORMAT_NO_LABEL_DEF, FATAL,\n \"No label definition for FORMAT statement at %0\")\n-FFEBAD_MSGS1 (FFEBAD_SECOND_ELSE_WHERE, FATAL,\n+FFEBAD_MSG (FFEBAD_SECOND_ELSE_WHERE, FATAL,\n \"Second occurrence of ELSE WHERE at %0 within WHERE at %1\")\n-FFEBAD_MSGS1 (FFEBAD_END_WO, WARN,\n+FFEBAD_MSG (FFEBAD_END_WO, WARN,\n \"END statement at %0 missing `%A' keyword required for internal or module procedure(s) bounded by %1\")\n-FFEBAD_MSGS1 (FFEBAD_INVALID_MODULE_PROCEDURE, FATAL,\n+FFEBAD_MSG (FFEBAD_INVALID_MODULE_PROCEDURE, FATAL,\n \"MODULE PROCEDURE statement at %0 disallowed because INTERFACE at %1 specifies no generic name, operator, or assignment\")\n-FFEBAD_MSGS1 (FFEBAD_BLOCKDATA_NOT_NAMED, FATAL,\n+FFEBAD_MSG (FFEBAD_BLOCKDATA_NOT_NAMED, FATAL,\n \"BLOCK DATA name at %0 superfluous, no name specified at %1\")\n-FFEBAD_MSGS1 (FFEBAD_PROGRAM_NOT_NAMED, FATAL,\n+FFEBAD_MSG (FFEBAD_PROGRAM_NOT_NAMED, FATAL,\n \"Program name at %0 superfluous, no PROGRAM statement specified at %1\")\n-FFEBAD_MSGS1 (FFEBAD_UNIT_WRONG_NAME, FATAL,\n+FFEBAD_MSG (FFEBAD_UNIT_WRONG_NAME, FATAL,\n \"Program unit name at %0 not the same as name at %1\")\n-FFEBAD_MSGS1 (FFEBAD_TYPE_WRONG_NAME, FATAL,\n+FFEBAD_MSG (FFEBAD_TYPE_WRONG_NAME, FATAL,\n \"Type name at %0 not the same as name at %1\")\n-FFEBAD_MSGS1 (FFEBAD_EOF_BEFORE_BLOCK_END, FATAL,\n+FFEBAD_MSG (FFEBAD_EOF_BEFORE_BLOCK_END, FATAL,\n \"End of source file before end of block started at %0\")\n-FFEBAD_MSGS1 (FFEBAD_UNDEF_LABEL, FATAL,\n+FFEBAD_MSG (FFEBAD_UNDEF_LABEL, FATAL,\n \"Undefined label, first referenced at %0\")\n-FFEBAD_MSGS1 (FFEBAD_CONFLICTING_SAVES, WARN,\n+FFEBAD_MSG (FFEBAD_CONFLICTING_SAVES, WARN,\n \"SAVE statement or attribute at %1 cannot be specified along with SAVE statement or attribute at %0\")\n-FFEBAD_MSGS1 (FFEBAD_CONFLICTING_ACCESSES, FATAL,\n+FFEBAD_MSG (FFEBAD_CONFLICTING_ACCESSES, FATAL,\n \"PUBLIC or PRIVATE statement at %1 cannot be specified along with PUBLIC or PRIVATE statement at %0\")\n-FFEBAD_MSGS1 (FFEBAD_RETURN_IN_MAIN, WARN,\n+FFEBAD_MSG (FFEBAD_RETURN_IN_MAIN, WARN,\n \"RETURN statement at %0 invalid within a main program unit\")\n-FFEBAD_MSGS1 (FFEBAD_ALTRETURN_IN_PROGRAM, FATAL,\n+FFEBAD_MSG (FFEBAD_ALTRETURN_IN_PROGRAM, FATAL,\n \"Alternate return specifier at %0 invalid within a main program unit\")\n-FFEBAD_MSGS1 (FFEBAD_ALTRETURN_IN_FUNCTION, FATAL,\n+FFEBAD_MSG (FFEBAD_ALTRETURN_IN_FUNCTION, FATAL,\n \"Alternate return specifier at %0 invalid within a function\")\n-FFEBAD_MSGS1 (FFEBAD_DERIVTYP_ACCESS, FATAL,\n+FFEBAD_MSG (FFEBAD_DERIVTYP_ACCESS, FATAL,\n \"Access specifier or PRIVATE statement at %0 invalid for derived-type definition within other than the specification part of a module\")\n-FFEBAD_MSGS1 (FFEBAD_DERIVTYP_ACCESS_FIRST, FATAL,\n+FFEBAD_MSG (FFEBAD_DERIVTYP_ACCESS_FIRST, FATAL,\n \"Access specifier at %0 must immediately follow derived-type statement at %1 with no intervening statements\")\n-FFEBAD_MSGS1 (FFEBAD_DERIVTYP_NO_COMPONENTS, FATAL,\n+FFEBAD_MSG (FFEBAD_DERIVTYP_NO_COMPONENTS, FATAL,\n \"No components specified as of %0 for derived-type definition beginning at %1\")\n-FFEBAD_MSGS1 (FFEBAD_STRUCT_NO_COMPONENTS, FATAL,\n+FFEBAD_MSG (FFEBAD_STRUCT_NO_COMPONENTS, FATAL,\n \"No components specified as of %0 for structure definition beginning at %1\")\n-FFEBAD_MSGS1 (FFEBAD_STRUCT_MISSING_NAME, FATAL,\n+FFEBAD_MSG (FFEBAD_STRUCT_MISSING_NAME, FATAL,\n \"Missing structure name for outer structure definition at %0\")\n-FFEBAD_MSGS1 (FFEBAD_STRUCT_IGNORING_FIELD, FATAL,\n+FFEBAD_MSG (FFEBAD_STRUCT_IGNORING_FIELD, FATAL,\n \"Field names at %0 for outer structure definition -- specify them in a subsequent RECORD statement instead\")\n-FFEBAD_MSGS1 (FFEBAD_STRUCT_MISSING_FIELD, FATAL,\n+FFEBAD_MSG (FFEBAD_STRUCT_MISSING_FIELD, FATAL,\n \"Missing field name(s) for structure definition at %0 within structure definition at %1\")\n-FFEBAD_MSGS1 (FFEBAD_MAP_NO_COMPONENTS, FATAL,\n+FFEBAD_MSG (FFEBAD_MAP_NO_COMPONENTS, FATAL,\n \"No components specified as of %0 for map beginning at %1\")\n-FFEBAD_MSGS1 (FFEBAD_UNION_NO_TWO_MAPS, FATAL,\n+FFEBAD_MSG (FFEBAD_UNION_NO_TWO_MAPS, FATAL,\n \"Zero or one maps specified as of %0 for union beginning at %1 -- at least two are required\")\n-FFEBAD_MSGS1 (FFEBAD_MISSING_SPECIFIER, FATAL,\n+FFEBAD_MSG (FFEBAD_MISSING_SPECIFIER, FATAL,\n \"Missing %A specifier in statement at %0\")\n-FFEBAD_MSGS1 (FFEBAD_NAMELIST_ITEMS, FATAL,\n+FFEBAD_MSG (FFEBAD_NAMELIST_ITEMS, FATAL,\n \"Items in I/O list starting at %0 invalid for namelist-directed I/O\")\n-FFEBAD_MSGS1 (FFEBAD_CONFLICTING_SPECS, FATAL,\n+FFEBAD_MSG (FFEBAD_CONFLICTING_SPECS, FATAL,\n \"Conflicting I/O control specifications at %0 and %1\")\n-FFEBAD_MSGS1 (FFEBAD_NO_UNIT_SPEC, FATAL,\n+FFEBAD_MSG (FFEBAD_NO_UNIT_SPEC, FATAL,\n \"No UNIT= specifier in I/O control list at %0\")\n-FFEBAD_MSGS1 (FFEBAD_MISSING_ADVANCE_SPEC, FATAL,\n+FFEBAD_MSG (FFEBAD_MISSING_ADVANCE_SPEC, FATAL,\n \"Specification at %0 requires ADVANCE=`NO' specification in same I/O control list\")\n-FFEBAD_MSGS1 (FFEBAD_MISSING_FORMAT_SPEC, FATAL,\n+FFEBAD_MSG (FFEBAD_MISSING_FORMAT_SPEC, FATAL,\n \"Specification at %0 requires explicit FMT= specification in same I/O control list\")\n-FFEBAD_MSGS2 (FFEBAD_SPEC_VALUE, FATAL,\n-\"Unrecognized value for character constant at %0 -- expecting %A\",\n-\"Unrecognized value for character constant at %0\")\n-FFEBAD_MSGS1 (FFEBAD_CASE_SECOND_DEFAULT, FATAL,\n+FFEBAD_MSG (FFEBAD_SPEC_VALUE, FATAL,\n+LONG(\"Unrecognized value for character constant at %0 -- expecting %A\")\n+SHORT(\"Unrecognized value for character constant at %0\"))\n+FFEBAD_MSG (FFEBAD_CASE_SECOND_DEFAULT, FATAL,\n \"Second occurrence of CASE DEFAULT at %0 within SELECT CASE at %1\")\n-FFEBAD_MSGS1 (FFEBAD_CASE_DUPLICATE, FATAL,\n+FFEBAD_MSG (FFEBAD_CASE_DUPLICATE, FATAL,\n \"Duplicate or overlapping case values/ranges at %0 and %1\")\n-FFEBAD_MSGS1 (FFEBAD_CASE_TYPE_DISAGREE, FATAL,\n+FFEBAD_MSG (FFEBAD_CASE_TYPE_DISAGREE, FATAL,\n \"Type and/or kind-type parameter disagreement between CASE value or value within range at %0 and SELECT CASE at %1\")\n-FFEBAD_MSGS1 (FFEBAD_CASE_LOGICAL_RANGE, FATAL,\n+FFEBAD_MSG (FFEBAD_CASE_LOGICAL_RANGE, FATAL,\n \"Range specification at %0 invalid for CASE statement within logical-type SELECT CASE statement\")\n-FFEBAD_MSGS2 (FFEBAD_CASE_BAD_RANGE, FATAL,\n-\"Range specification at %0 invalid -- at least one expression must be specified, or use CASE DEFAULT\",\n-\"Range specification at %0 invalid\")\n-FFEBAD_MSGS2 (FFEBAD_CASE_RANGE_USELESS, INFORM,\n-\"Range specification at %0 useless; first expression greater than second expression in range, so range can never be matched by any selection expression\",\n-\"Useless range at %0\")\n-FFEBAD_MSGS1 (FFEBAD_F90, FATAL,\n+FFEBAD_MSG (FFEBAD_CASE_BAD_RANGE, FATAL,\n+LONG(\"Range specification at %0 invalid -- at least one expression must be specified, or use CASE DEFAULT\")\n+SHORT(\"Range specification at %0 invalid\"))\n+FFEBAD_MSG (FFEBAD_CASE_RANGE_USELESS, INFORM,\n+LONG(\"Range specification at %0 useless; first expression greater than second expression in range, so range can never be matched by any selection expression\")\n+SHORT(\"Useless range at %0\"))\n+FFEBAD_MSG (FFEBAD_F90, FATAL,\n \"Fortran 90 feature at %0 unsupported\")\n-FFEBAD_MSGS2 (FFEBAD_KINDTYPE, FATAL,\n-\"Invalid kind at %0 for type at %1 -- unsupported or not permitted\",\n-\"Invalid kind at %0 for type at %1\")\n-FFEBAD_MSGS2 (FFEBAD_BAD_IMPLICIT, FATAL,\n-\"Cannot establish implicit type for initial letter `%A' at %0 -- already explicitly established or used to set implicit type of some name, or backwards order of letters in letter range\",\n-\"Cannot establish implicit type for initial letter `%A' at %0\")\n-FFEBAD_MSGS1 (FFEBAD_SYMERR, FATAL,\n+FFEBAD_MSG (FFEBAD_KINDTYPE, FATAL,\n+LONG(\"Invalid kind at %0 for type at %1 -- unsupported or not permitted\")\n+SHORT(\"Invalid kind at %0 for type at %1\"))\n+FFEBAD_MSG (FFEBAD_BAD_IMPLICIT, FATAL,\n+LONG(\"Cannot establish implicit type for initial letter `%A' at %0 -- already explicitly established or used to set implicit type of some name, or backwards order of letters in letter range\")\n+SHORT(\"Cannot establish implicit type for initial letter `%A' at %0\"))\n+FFEBAD_MSG (FFEBAD_SYMERR, FATAL,\n \"Invalid declaration of or reference to symbol `%A' at %0 [initially seen at %1]\")\n-FFEBAD_MSGS2 (FFEBAD_LABEL_WRONG_PLACE, FATAL,\n-\"Label definition %A (at %0) invalid -- must be in columns 1-5\",\n-\"Invalid label definition %A (at %0)\")\n-FFEBAD_MSGS1 (FFEBAD_NULL_ELEMENT, FATAL,\n+FFEBAD_MSG (FFEBAD_LABEL_WRONG_PLACE, FATAL,\n+LONG(\"Label definition %A (at %0) invalid -- must be in columns 1-5\")\n+SHORT(\"Invalid label definition %A (at %0)\"))\n+FFEBAD_MSG (FFEBAD_NULL_ELEMENT, FATAL,\n \"Null element at %0 for array reference at %1\")\n-FFEBAD_MSGS1 (FFEBAD_TOO_FEW_ELEMENTS, FATAL,\n+FFEBAD_MSG (FFEBAD_TOO_FEW_ELEMENTS, FATAL,\n \"Too few elements (%A missing) as of %0 for array reference at %1\")\n-FFEBAD_MSGS1 (FFEBAD_TOO_MANY_ELEMENTS, FATAL,\n+FFEBAD_MSG (FFEBAD_TOO_MANY_ELEMENTS, FATAL,\n \"Too many elements as of %0 for array reference at %1\")\n-FFEBAD_MSGS1 (FFEBAD_MISSING_COLON_IN_SUBSTR, FATAL,\n+FFEBAD_MSG (FFEBAD_MISSING_COLON_IN_SUBSTR, FATAL,\n \"Missing colon as of %0 in substring reference for %1\")\n-FFEBAD_MSGS1 (FFEBAD_BAD_SUBSTR, FATAL,\n+FFEBAD_MSG (FFEBAD_BAD_SUBSTR, FATAL,\n \"Invalid use at %0 of substring operator on %1\")\n-FFEBAD_MSGS1 (FFEBAD_RANGE_SUBSTR, WARN,\n+FFEBAD_MSG (FFEBAD_RANGE_SUBSTR, WARN,\n \"Substring begin/end point at %0 out of defined range\")\n-FFEBAD_MSGS1 (FFEBAD_RANGE_ARRAY, WARN,\n+FFEBAD_MSG (FFEBAD_RANGE_ARRAY, WARN,\n \"Array element value at %0 out of defined range\")\n-FFEBAD_MSGS1 (FFEBAD_EXPR_WRONG, FATAL,\n+FFEBAD_MSG (FFEBAD_EXPR_WRONG, FATAL,\n \"Expression at %0 has incorrect data type or rank for its context\")\n-FFEBAD_MSGS1 (FFEBAD_DIV_BY_ZERO, WARN,\n+FFEBAD_MSG (FFEBAD_DIV_BY_ZERO, WARN,\n \"Division by 0 (zero) at %0 (IEEE not yet supported)\")\n-FFEBAD_MSGS1 (FFEBAD_DO_STEP_ZERO, FATAL,\n+FFEBAD_MSG (FFEBAD_DO_STEP_ZERO, FATAL,\n \"%A step count known to be 0 (zero) at %0\")\n-FFEBAD_MSGS1 (FFEBAD_DO_END_OVERFLOW, WARN,\n+FFEBAD_MSG (FFEBAD_DO_END_OVERFLOW, WARN,\n \"%A end value plus step count known to overflow at %0\")\n-FFEBAD_MSGS1 (FFEBAD_DO_IMP_OVERFLOW, WARN,\n+FFEBAD_MSG (FFEBAD_DO_IMP_OVERFLOW, WARN,\n \"%A begin, end, and step-count values known to result in implementation-dependent behavior due to overflow(s) in intermediate calculations at %0\")\n-FFEBAD_MSGS1 (FFEBAD_DO_NULL, WARN,\n+FFEBAD_MSG (FFEBAD_DO_NULL, WARN,\n \"%A begin, end, and step-count values known to result in no iterations at %0\")\n-FFEBAD_MSGS1 (FFEBAD_BAD_TYPES, FATAL,\n+FFEBAD_MSG (FFEBAD_BAD_TYPES, FATAL,\n \"Type disagreement between expressions at %0 and %1\")\n-FFEBAD_MSGS2 (FFEBAD_FORMAT_EXPR_SPEC, FATAL,\n-\"Run-time expression at %0 in FORMAT statement that does not follow the first executable statement in the program unit -- move the statement\",\n-\"FORMAT at %0 with run-time expression must follow first executable statement\")\n-FFEBAD_MSGS2 (FFEBAD_BAD_IMPDO, FATAL,\n-\"Unexpected token at %0 in implied-DO construct at %1 -- form of implied-DO is `(item-list,do-var=start,end[,incr])'\",\n-\"Unexpected token at %0 in implied-DO construct at %1\")\n-FFEBAD_MSGS1 (FFEBAD_BAD_IMPDCL, FATAL,\n+FFEBAD_MSG (FFEBAD_FORMAT_EXPR_SPEC, FATAL,\n+LONG(\"Run-time expression at %0 in FORMAT statement that does not follow the first executable statement in the program unit -- move the statement\")\n+SHORT(\"FORMAT at %0 with run-time expression must follow first executable statement\"))\n+FFEBAD_MSG (FFEBAD_BAD_IMPDO, FATAL,\n+LONG(\"Unexpected token at %0 in implied-DO construct at %1 -- form of implied-DO is `(item-list,do-var=start,end[,incr])'\")\n+SHORT(\"Unexpected token at %0 in implied-DO construct at %1\"))\n+FFEBAD_MSG (FFEBAD_BAD_IMPDCL, FATAL,\n \"No specification for implied-DO iterator `%A' at %0\")\n-FFEBAD_MSGS1 (FFEBAD_IMPDO_PAREN, WARN,\n+FFEBAD_MSG (FFEBAD_IMPDO_PAREN, WARN,\n \"Gratuitous parentheses surround implied-DO construct at %0\")\n-FFEBAD_MSGS1 (FFEBAD_ZERO_SIZE, FATAL,\n+FFEBAD_MSG (FFEBAD_ZERO_SIZE, FATAL,\n \"Zero-size specification invalid at %0\")\n-FFEBAD_MSGS1 (FFEBAD_ZERO_ARRAY, FATAL,\n+FFEBAD_MSG (FFEBAD_ZERO_ARRAY, FATAL,\n \"Zero-size array at %0\")\n-FFEBAD_MSGS1 (FFEBAD_BAD_COMPLEX, FATAL,\n+FFEBAD_MSG (FFEBAD_BAD_COMPLEX, FATAL,\n \"Target machine does not support complex entity of kind specified at %0\")\n-FFEBAD_MSGS1 (FFEBAD_BAD_DBLCMPLX, FATAL,\n+FFEBAD_MSG (FFEBAD_BAD_DBLCMPLX, FATAL,\n \"Target machine does not support DOUBLE COMPLEX, specified at %0\")\n-FFEBAD_MSGS1 (FFEBAD_BAD_POWER, WARN,\n+FFEBAD_MSG (FFEBAD_BAD_POWER, WARN,\n \"Attempt to raise constant zero to a power at %0\")\n-FFEBAD_MSGS2 (FFEBAD_BOOL_ARGS_TYPE, FATAL,\n-\"Boolean/logical operator at %0 must operate on two subexpressions of logical type, but neither subexpression at %1 or %2 is of logical type\",\n-\"Invalid operands at %1 and %2 for boolean operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_BOOL_ARG_TYPE, FATAL,\n-\"Boolean/logical operator at %0 must operate on two subexpressions of logical type, but the subexpression at %1 is not of logical type\",\n-\"Invalid operand at %1 for boolean operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_BOOL_ARG_KIND, FATAL,\n-\"Boolean/logical operator at %0 must operate on two scalar (not array) subexpressions, two function invocations returning logical scalars, or a combination of both -- but the subexpression at %1 is %A\",\n-\"Invalid operand (is %A) at %1 for boolean operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_NOT_ARG_TYPE, FATAL,\n-\".NOT. operator at %0 must operate on subexpression of logical type, but the subexpression at %1 is not of logical type\",\n-\"Invalid operand at %1 for .NOT. operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_NOT_ARG_KIND, FATAL,\n-\".NOT. operator at %0 must operate on scalar subexpressions -- but the subexpression at %1 is %A\",\n-\"Invalid operand (is %A) at %1 for .NOT. operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_EQOP_ARGS_TYPE, FATAL,\n-\"Equality operator at %0 must operate on two subexpressions of arithmetic or character type, but neither subexpression at %1 or %2 is of arithmetic or character type\",\n-\"Invalid operands at %1 and %2 for equality operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_EQOP_ARG_TYPE, FATAL,\n-\"Equality operator at %0 must operate on two subexpressions of arithmetic or character type, but the subexpression at %1 is not of arithmetic or character type\",\n-\"Invalid operand at %1 for equality operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_EQOP_ARG_KIND, FATAL,\n-\"Equality operator at %0 must operate on two scalar (not array) subexpressions, two function invocations returning arithmetic or character scalars, or a combination of both -- but the subexpression at %1 is %A\",\n-\"Invalid operand (is %A) at %1 for equality operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_RELOP_ARGS_TYPE, FATAL,\n-\"Relational operator at %0 must operate on two subexpressions of integer, real, or character type, but neither subexpression at %1 or %2 is of integer, real, or character type\",\n-\"Invalid operands at %1 and %2 for relational operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_RELOP_ARG_TYPE, FATAL,\n-\"Relational operator at %0 must operate on two subexpressions of integer, real, or character type, but the subexpression at %1 is not of integer, real, or character type\",\n-\"Invalid operand at %1 for relational operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_RELOP_ARG_KIND, FATAL,\n-\"Relational operator at %0 must operate on two scalar (not array) subexpressions, two function invocations returning integer, real, or character scalars, or a combination of both -- but the subexpression at %1 is %A\",\n-\"Invalid operand (is %A) at %1 for relational operator at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INTRINSIC_REF, FATAL,\n-\"Reference to intrinsic `%A' at %0 invalid -- one or more arguments have incorrect type\",\n-\"Invalid reference to intrinsic `%A' at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INTRINSIC_TOOFEW, FATAL,\n-\"Too few arguments passed to intrinsic `%A' at %0\",\n-\"Too few arguments for intrinsic `%A' at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INTRINSIC_TOOMANY, FATAL,\n-\"Too many arguments passed to intrinsic `%A' at %0\",\n-\"Too many arguments for intrinsic `%A' at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INTRINSIC_DISABLED, FATAL,\n-\"Reference to disabled intrinsic `%A' at %0\",\n-\"Disabled intrinsic `%A' at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INTRINSIC_IS_SUBR, FATAL,\n-\"Reference to intrinsic subroutine `%A' as if it were a function at %0\",\n-\"Function reference to intrinsic subroutine `%A' at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INTRINSIC_IS_FUNC, FATAL,\n-\"Reference to intrinsic function `%A' as if it were a subroutine at %0\",\n-\"Subroutine reference to intrinsic function `%A' at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INTRINSIC_UNIMPL, FATAL,\n-\"Reference to unimplemented intrinsic `%A' at %0 -- use EXTERNAL to reference user-written procedure with this name\",\n-\"Unimplemented intrinsic `%A' at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INTRINSIC_UNIMPLW, WARN,\n-\"Reference to unimplemented intrinsic `%A' at %0 (assumed EXTERNAL)\",\n-\"Unimplemented intrinsic `%A' at %0 (assumed EXTERNAL)\")\n-FFEBAD_MSGS1 (FFEBAD_INTRINSIC_AMBIG, FATAL,\n+FFEBAD_MSG (FFEBAD_BOOL_ARGS_TYPE, FATAL,\n+LONG(\"Boolean/logical operator at %0 must operate on two subexpressions of logical type, but neither subexpression at %1 or %2 is of logical type\")\n+SHORT(\"Invalid operands at %1 and %2 for boolean operator at %0\"))\n+FFEBAD_MSG (FFEBAD_BOOL_ARG_TYPE, FATAL,\n+LONG(\"Boolean/logical operator at %0 must operate on two subexpressions of logical type, but the subexpression at %1 is not of logical type\")\n+SHORT(\"Invalid operand at %1 for boolean operator at %0\"))\n+FFEBAD_MSG (FFEBAD_BOOL_ARG_KIND, FATAL,\n+LONG(\"Boolean/logical operator at %0 must operate on two scalar (not array) subexpressions, two function invocations returning logical scalars, or a combination of both -- but the subexpression at %1 is %A\")\n+SHORT(\"Invalid operand (is %A) at %1 for boolean operator at %0\"))\n+FFEBAD_MSG (FFEBAD_NOT_ARG_TYPE, FATAL,\n+LONG(\".NOT. operator at %0 must operate on subexpression of logical type, but the subexpression at %1 is not of logical type\")\n+SHORT(\"Invalid operand at %1 for .NOT. operator at %0\"))\n+FFEBAD_MSG (FFEBAD_NOT_ARG_KIND, FATAL,\n+LONG(\".NOT. operator at %0 must operate on scalar subexpressions -- but the subexpression at %1 is %A\")\n+SHORT(\"Invalid operand (is %A) at %1 for .NOT. operator at %0\"))\n+FFEBAD_MSG (FFEBAD_EQOP_ARGS_TYPE, FATAL,\n+LONG(\"Equality operator at %0 must operate on two subexpressions of arithmetic or character type, but neither subexpression at %1 or %2 is of arithmetic or character type\")\n+SHORT(\"Invalid operands at %1 and %2 for equality operator at %0\"))\n+FFEBAD_MSG (FFEBAD_EQOP_ARG_TYPE, FATAL,\n+LONG(\"Equality operator at %0 must operate on two subexpressions of arithmetic or character type, but the subexpression at %1 is not of arithmetic or character type\")\n+SHORT(\"Invalid operand at %1 for equality operator at %0\"))\n+FFEBAD_MSG (FFEBAD_EQOP_ARG_KIND, FATAL,\n+LONG(\"Equality operator at %0 must operate on two scalar (not array) subexpressions, two function invocations returning arithmetic or character scalars, or a combination of both -- but the subexpression at %1 is %A\")\n+SHORT(\"Invalid operand (is %A) at %1 for equality operator at %0\"))\n+FFEBAD_MSG (FFEBAD_RELOP_ARGS_TYPE, FATAL,\n+LONG(\"Relational operator at %0 must operate on two subexpressions of integer, real, or character type, but neither subexpression at %1 or %2 is of integer, real, or character type\")\n+SHORT(\"Invalid operands at %1 and %2 for relational operator at %0\"))\n+FFEBAD_MSG (FFEBAD_RELOP_ARG_TYPE, FATAL,\n+LONG(\"Relational operator at %0 must operate on two subexpressions of integer, real, or character type, but the subexpression at %1 is not of integer, real, or character type\")\n+SHORT(\"Invalid operand at %1 for relational operator at %0\"))\n+FFEBAD_MSG (FFEBAD_RELOP_ARG_KIND, FATAL,\n+LONG(\"Relational operator at %0 must operate on two scalar (not array) subexpressions, two function invocations returning integer, real, or character scalars, or a combination of both -- but the subexpression at %1 is %A\")\n+SHORT(\"Invalid operand (is %A) at %1 for relational operator at %0\"))\n+FFEBAD_MSG (FFEBAD_INTRINSIC_REF, FATAL,\n+LONG(\"Reference to intrinsic `%A' at %0 invalid -- one or more arguments have incorrect type\")\n+SHORT(\"Invalid reference to intrinsic `%A' at %0\"))\n+FFEBAD_MSG (FFEBAD_INTRINSIC_TOOFEW, FATAL,\n+LONG(\"Too few arguments passed to intrinsic `%A' at %0\")\n+SHORT(\"Too few arguments for intrinsic `%A' at %0\"))\n+FFEBAD_MSG (FFEBAD_INTRINSIC_TOOMANY, FATAL,\n+LONG(\"Too many arguments passed to intrinsic `%A' at %0\")\n+SHORT(\"Too many arguments for intrinsic `%A' at %0\"))\n+FFEBAD_MSG (FFEBAD_INTRINSIC_DISABLED, FATAL,\n+LONG(\"Reference to disabled intrinsic `%A' at %0\")\n+SHORT(\"Disabled intrinsic `%A' at %0\"))\n+FFEBAD_MSG (FFEBAD_INTRINSIC_IS_SUBR, FATAL,\n+LONG(\"Reference to intrinsic subroutine `%A' as if it were a function at %0\")\n+SHORT(\"Function reference to intrinsic subroutine `%A' at %0\"))\n+FFEBAD_MSG (FFEBAD_INTRINSIC_IS_FUNC, FATAL,\n+LONG(\"Reference to intrinsic function `%A' as if it were a subroutine at %0\")\n+SHORT(\"Subroutine reference to intrinsic function `%A' at %0\"))\n+FFEBAD_MSG (FFEBAD_INTRINSIC_UNIMPL, FATAL,\n+LONG(\"Reference to unimplemented intrinsic `%A' at %0 -- use EXTERNAL to reference user-written procedure with this name\")\n+SHORT(\"Unimplemented intrinsic `%A' at %0\"))\n+FFEBAD_MSG (FFEBAD_INTRINSIC_UNIMPLW, WARN,\n+LONG(\"Reference to unimplemented intrinsic `%A' at %0 (assumed EXTERNAL)\")\n+SHORT(\"Unimplemented intrinsic `%A' at %0 (assumed EXTERNAL)\"))\n+FFEBAD_MSG (FFEBAD_INTRINSIC_AMBIG, FATAL,\n \"Reference to generic intrinsic `%A' at %0 could be to form %B or %C\")\n-FFEBAD_MSGS1 (FFEBAD_INTRINSIC_CMPAMBIG, FATAL,\n+FFEBAD_MSG (FFEBAD_INTRINSIC_CMPAMBIG, FATAL,\n \"Ambiguous use of intrinsic `%A' at %0 [info -f g77 M CMPAMBIG]\")\n-FFEBAD_MSGS1 (FFEBAD_INTRINSIC_EXPIMP, WARN,\n+FFEBAD_MSG (FFEBAD_INTRINSIC_EXPIMP, WARN,\n \"Intrinsic `%A' referenced %Bly at %0, %Cly at %1 [info -f g77 M EXPIMP]\")\n-FFEBAD_MSGS1 (FFEBAD_INTRINSIC_GLOBAL, WARN,\n+FFEBAD_MSG (FFEBAD_INTRINSIC_GLOBAL, WARN,\n \"Same name `%A' used for %B at %0 and %C at %1 [info -f g77 M INTGLOB]\")\n-FFEBAD_MSGS1 (FFEBAD_INTRINSIC_TYPE, WARN,\n+FFEBAD_MSG (FFEBAD_INTRINSIC_TYPE, WARN,\n \"Explicit type declaration for intrinsic `%A' disagrees with invocation at %0\")\n-FFEBAD_MSGS1 (FFEBAD_OPEN_INCLUDE, FATAL,\n+FFEBAD_MSG (FFEBAD_OPEN_INCLUDE, FATAL,\n \"Unable to open INCLUDE file `%A' at %0\")\n-FFEBAD_MSGS2 (FFEBAD_DOITER, FATAL,\n-\"Attempt to modify variable `%A' at %0 while it serves as DO-loop iterator at %1\",\n-\"Modification of DO-loop iterator `%A' at %0\")\n-FFEBAD_MSGS2 (FFEBAD_DOITER_IMPDO, FATAL,\n-\"Attempt to modify variable `%A' via item #%B in list at %0 while it serves as implied-DO iterator at %1\",\n-\"Modification of DO-loop iterator `%A' at %0\")\n-FFEBAD_MSGS2 (FFEBAD_TOO_MANY_DIMS, FATAL,\n-\"Array has too many dimensions, as of dimension specifier at %0\",\n-\"Too many dimensions at %0\")\n-FFEBAD_MSGS1 (FFEBAD_NULL_ARGUMENT, FATAL,\n+FFEBAD_MSG (FFEBAD_DOITER, FATAL,\n+LONG(\"Attempt to modify variable `%A' at %0 while it serves as DO-loop iterator at %1\")\n+SHORT(\"Modification of DO-loop iterator `%A' at %0\"))\n+FFEBAD_MSG (FFEBAD_DOITER_IMPDO, FATAL,\n+LONG(\"Attempt to modify variable `%A' via item #%B in list at %0 while it serves as implied-DO iterator at %1\")\n+SHORT(\"Modification of DO-loop iterator `%A' at %0\"))\n+FFEBAD_MSG (FFEBAD_TOO_MANY_DIMS, FATAL,\n+LONG(\"Array has too many dimensions, as of dimension specifier at %0\")\n+SHORT(\"Too many dimensions at %0\"))\n+FFEBAD_MSG (FFEBAD_NULL_ARGUMENT, FATAL,\n \"Null argument at %0 for statement function reference at %1\")\n-FFEBAD_MSGS1 (FFEBAD_NULL_ARGUMENT_W, WARN,\n+FFEBAD_MSG (FFEBAD_NULL_ARGUMENT_W, WARN,\n \"Null argument at %0 for procedure invocation at %1\")\n-FFEBAD_MSGS1 (FFEBAD_TOO_FEW_ARGUMENTS, FATAL,\n+FFEBAD_MSG (FFEBAD_TOO_FEW_ARGUMENTS, FATAL,\n \"%A too few arguments (starting with dummy argument `%B') as of %0 for statement function reference at %1\")\n-FFEBAD_MSGS1 (FFEBAD_TOO_MANY_ARGUMENTS, FATAL,\n+FFEBAD_MSG (FFEBAD_TOO_MANY_ARGUMENTS, FATAL,\n \"%A too many arguments as of %0 for statement function reference at %1\")\n-FFEBAD_MSGS1 (FFEBAD_ARRAY_AS_SFARG, FATAL,\n+FFEBAD_MSG (FFEBAD_ARRAY_AS_SFARG, FATAL,\n \"Array supplied at %1 for dummy argument `%A' in statement function reference at %0\")\n-FFEBAD_MSGS1 (FFEBAD_FORMAT_UNSUPPORTED, FATAL,\n+FFEBAD_MSG (FFEBAD_FORMAT_UNSUPPORTED, FATAL,\n \"Unsupported FORMAT specifier at %0\")\n-FFEBAD_MSGS1 (FFEBAD_FORMAT_VARIABLE, FATAL,\n+FFEBAD_MSG (FFEBAD_FORMAT_VARIABLE, FATAL,\n \"Variable-expression FORMAT specifier at %0 -- unsupported\")\n-FFEBAD_MSGS2 (FFEBAD_OPEN_UNSUPPORTED, FATAL,\n-\"Unsupported OPEN control item at %0 -- ACTION=, ASSOCIATEVARIABLE=, BLOCKSIZE=, BUFFERCOUNT=, CARRIAGECONTROL=, DEFAULTFILE=, DELIM=, DISPOSE=, EXTENDSIZE=, INITIALSIZE=, KEY=, MAXREC=, NOSPANBLOCKS, ORGANIZATION=, PAD=, POSITION=, READONLY=, RECORDTYPE=, SHARED=, and USEROPEN= are not supported\",\n-\"Unsupported OPEN control item at %0\")\n-FFEBAD_MSGS2 (FFEBAD_INQUIRE_UNSUPPORTED, FATAL,\n-\"Unsupported INQUIRE control item at %0 -- ACTION=, CARRIAGECONTROL=, DEFAULTFILE=, DELIM=, KEYED=, ORGANIZATION=, PAD=, POSITION=, READ=, READWRITE=, RECORDTYPE=, and WRITE= are not supported\",\n-\"Unsupported INQUIRE control item at %0\")\n-FFEBAD_MSGS2 (FFEBAD_READ_UNSUPPORTED, FATAL,\n-\"Unsupported READ control item at %0 -- ADVANCE=, EOR=, KEYEQ=, KEYGE=, KEYGT=, KEYID=, NULLS=, and SIZE= are not supported\",\n-\"Unsupported READ control item at %0\")\n-FFEBAD_MSGS2 (FFEBAD_WRITE_UNSUPPORTED, FATAL,\n-\"Unsupported WRITE control item at %0 -- ADVANCE= and EOR= are not supported\",\n-\"Unsupported WRITE control item at %0\")\n-FFEBAD_MSGS1 (FFEBAD_VXT_UNSUPPORTED, FATAL,\n+FFEBAD_MSG (FFEBAD_OPEN_UNSUPPORTED, FATAL,\n+LONG(\"Unsupported OPEN control item at %0 -- ACTION=, ASSOCIATEVARIABLE=, BLOCKSIZE=, BUFFERCOUNT=, CARRIAGECONTROL=, DEFAULTFILE=, DELIM=, DISPOSE=, EXTENDSIZE=, INITIALSIZE=, KEY=, MAXREC=, NOSPANBLOCKS, ORGANIZATION=, PAD=, POSITION=, READONLY=, RECORDTYPE=, SHARED=, and USEROPEN= are not supported\")\n+SHORT(\"Unsupported OPEN control item at %0\"))\n+FFEBAD_MSG (FFEBAD_INQUIRE_UNSUPPORTED, FATAL,\n+LONG(\"Unsupported INQUIRE control item at %0 -- ACTION=, CARRIAGECONTROL=, DEFAULTFILE=, DELIM=, KEYED=, ORGANIZATION=, PAD=, POSITION=, READ=, READWRITE=, RECORDTYPE=, and WRITE= are not supported\")\n+SHORT(\"Unsupported INQUIRE control item at %0\"))\n+FFEBAD_MSG (FFEBAD_READ_UNSUPPORTED, FATAL,\n+LONG(\"Unsupported READ control item at %0 -- ADVANCE=, EOR=, KEYEQ=, KEYGE=, KEYGT=, KEYID=, NULLS=, and SIZE= are not supported\")\n+SHORT(\"Unsupported READ control item at %0\"))\n+FFEBAD_MSG (FFEBAD_WRITE_UNSUPPORTED, FATAL,\n+LONG(\"Unsupported WRITE control item at %0 -- ADVANCE= and EOR= are not supported\")\n+SHORT(\"Unsupported WRITE control item at %0\"))\n+FFEBAD_MSG (FFEBAD_VXT_UNSUPPORTED, FATAL,\n \"Unsupported VXT statement at %0\")\n-FFEBAD_MSGS1 (FFEBAD_DATA_REINIT, FATAL,\n+FFEBAD_MSG (FFEBAD_DATA_REINIT, FATAL,\n \"Attempt to specify second initial value for `%A' at %0\")\n-FFEBAD_MSGS1 (FFEBAD_DATA_TOOFEW, FATAL,\n+FFEBAD_MSG (FFEBAD_DATA_TOOFEW, FATAL,\n \"Too few initial values in list of initializers for `%A' at %0\")\n-FFEBAD_MSGS1 (FFEBAD_DATA_TOOMANY, FATAL,\n+FFEBAD_MSG (FFEBAD_DATA_TOOMANY, FATAL,\n \"Too many initial values in list of initializers starting at %0\")\n-FFEBAD_MSGS1 (FFEBAD_DATA_RANGE, FATAL,\n+FFEBAD_MSG (FFEBAD_DATA_RANGE, FATAL,\n \"Array or substring specification for `%A' out of range in statement at %0\")\n-FFEBAD_MSGS1 (FFEBAD_DATA_SUBSCRIPT, FATAL,\n+FFEBAD_MSG (FFEBAD_DATA_SUBSCRIPT, FATAL,\n \"Array subscript #%B out of range for initialization of `%A' in statement at %0\")\n-FFEBAD_MSGS1 (FFEBAD_DATA_ZERO, FATAL,\n+FFEBAD_MSG (FFEBAD_DATA_ZERO, FATAL,\n \"Implied do-loop step count of 0 (zero) for iteration variable `%A' in statement at %0\")\n-FFEBAD_MSGS1 (FFEBAD_DATA_EMPTY, FATAL,\n+FFEBAD_MSG (FFEBAD_DATA_EMPTY, FATAL,\n \"Implied do-loop iteration count of 0 (zero) for iteration variable `%A' in statement at %0\")\n-FFEBAD_MSGS1 (FFEBAD_DATA_EVAL, FATAL,\n+FFEBAD_MSG (FFEBAD_DATA_EVAL, FATAL,\n \"Not an integer constant expression in implied do-loop in statement at %0\")\n-FFEBAD_MSGS1 (FFEBAD_DATA_MULTIPLE, FATAL,\n+FFEBAD_MSG (FFEBAD_DATA_MULTIPLE, FATAL,\n \"Attempt to specify second initial value for element of `%A' at %0\")\n-FFEBAD_MSGS1 (FFEBAD_EQUIV_COMMON, FATAL,\n+FFEBAD_MSG (FFEBAD_EQUIV_COMMON, FATAL,\n \"Attempt to EQUIVALENCE common areas `%A' and `%B' at %0\")\n-FFEBAD_MSGS1 (FFEBAD_EQUIV_ALIGN, FATAL,\n+FFEBAD_MSG (FFEBAD_EQUIV_ALIGN, FATAL,\n \"Can't place `%A' as directed by EQUIVALENCE due to alignment restrictions\")\n-FFEBAD_MSGS1 (FFEBAD_EQUIV_MISMATCH, FATAL,\n+FFEBAD_MSG (FFEBAD_EQUIV_MISMATCH, FATAL,\n \"Mismatched EQUIVALENCE requirements for placement of `%A' at both %C and %D bytes offset from `%B'\")\n-FFEBAD_MSGS1 (FFEBAD_EQUIV_RANGE, FATAL,\n+FFEBAD_MSG (FFEBAD_EQUIV_RANGE, FATAL,\n \"Array or substring specification for `%A' out of range in EQUIVALENCE statement\")\n-FFEBAD_MSGS1 (FFEBAD_EQUIV_SUBSTR, FATAL,\n+FFEBAD_MSG (FFEBAD_EQUIV_SUBSTR, FATAL,\n \"Substring of non-CHARACTER entity `%A' in EQUIVALENCE statement\")\n-FFEBAD_MSGS1 (FFEBAD_EQUIV_ARRAY, FATAL,\n+FFEBAD_MSG (FFEBAD_EQUIV_ARRAY, FATAL,\n \"Array reference to scalar variable `%A' in EQUIVALENCE statement\")\n-FFEBAD_MSGS1 (FFEBAD_EQUIV_SUBSCRIPT, WARN,\n+FFEBAD_MSG (FFEBAD_EQUIV_SUBSCRIPT, WARN,\n \"Array subscript #%B out of range for EQUIVALENCE of `%A'\")\n-FFEBAD_MSGS2 (FFEBAD_COMMON_PAD, WARN,\n-\"Padding of %A %D required before `%B' in common block `%C' at %0 -- consider reordering members, largest-type-size first\",\n-\"Padding of %A %D required before `%B' in common block `%C' at %0\")\n-FFEBAD_MSGS1 (FFEBAD_COMMON_NEG, FATAL,\n+FFEBAD_MSG (FFEBAD_COMMON_PAD, WARN,\n+LONG(\"Padding of %A %D required before `%B' in common block `%C' at %0 -- consider reordering members, largest-type-size first\")\n+SHORT(\"Padding of %A %D required before `%B' in common block `%C' at %0\"))\n+FFEBAD_MSG (FFEBAD_COMMON_NEG, FATAL,\n \"Attempt to extend COMMON area beyond its starting point via EQUIVALENCE of `%A'\")\n-FFEBAD_MSGS1 (FFEBAD_EQUIV_FEW, FATAL,\n+FFEBAD_MSG (FFEBAD_EQUIV_FEW, FATAL,\n \"Too few elements in reference to array `%A' in EQUIVALENCE statement\")\n-FFEBAD_MSGS1 (FFEBAD_EQUIV_MANY, FATAL,\n+FFEBAD_MSG (FFEBAD_EQUIV_MANY, FATAL,\n \"Too many elements in reference to array `%A' in EQUIVALENCE statement\")\n-FFEBAD_MSGS1 (FFEBAD_MIXED_TYPES, WARN,\n+FFEBAD_MSG (FFEBAD_MIXED_TYPES, WARN,\n \"Mixed CHARACTER and non-CHARACTER types via COMMON/EQUIVALENCE -- for example, `%A' and `%B'\")\n-FFEBAD_MSGS2 (FFEBAD_IMPLICIT_ADJLEN, FATAL,\n-\"Invalid length specification at %0 for IMPLICIT statement -- must be integer constant expression\",\n-\"Invalid length specification at %0\")\n-FFEBAD_MSGS2 (FFEBAD_ENTRY_CONFLICTS, FATAL,\n-\"Type of ENTRY point at %0 to function conflicts with type(s) of previous entrypoint(s) -- must all be identical-length CHARACTER or none be CHARACTER type\",\n-\"Type of ENTRY point at %0 to function conflicts with type(s) of previous entrypoint(s)\")\n-FFEBAD_MSGS1 (FFEBAD_RETURN_VALUE_UNSET, WARN,\n+FFEBAD_MSG (FFEBAD_IMPLICIT_ADJLEN, FATAL,\n+LONG(\"Invalid length specification at %0 for IMPLICIT statement -- must be integer constant expression\")\n+SHORT(\"Invalid length specification at %0\"))\n+FFEBAD_MSG (FFEBAD_ENTRY_CONFLICTS, FATAL,\n+LONG(\"Type of ENTRY point at %0 to function conflicts with type(s) of previous entrypoint(s) -- must all be identical-length CHARACTER or none be CHARACTER type\")\n+SHORT(\"Type of ENTRY point at %0 to function conflicts with type(s) of previous entrypoint(s)\"))\n+FFEBAD_MSG (FFEBAD_RETURN_VALUE_UNSET, WARN,\n \"Return value `%A' for FUNCTION at %0 not referenced in subprogram\")\n-FFEBAD_MSGS2 (FFEBAD_COMMON_ALREADY_INIT, FATAL,\n-\"Common block `%A' initialized at %0 already initialized at %1 -- only one program unit may specify initial values for a particular common block\",\n-\"Common block `%A' initialized at %0 already initialized at %1\")\n-FFEBAD_MSGS2 (FFEBAD_COMMON_INIT_PAD, WARN,\n-\"Initial padding for common block `%A' is %B %C at %0 -- consider reordering members, largest-type-size first\",\n-\"Initial padding for common block `%A' is %B %C at %0\")\n-FFEBAD_MSGS2 (FFEBAD_COMMON_DIFF_PAD, FATAL,\n-\"Initial padding for common block `%A' is %B %D at %0 but %C %E at %1 -- consider reordering members, largest-type-size first\",\n-\"Initial padding for common block `%A' is %B %D at %0 but %C %E at %1\")\n-FFEBAD_MSGS1 (FFEBAD_COMMON_DIFF_SAVE, WARN,\n+FFEBAD_MSG (FFEBAD_COMMON_ALREADY_INIT, FATAL,\n+LONG(\"Common block `%A' initialized at %0 already initialized at %1 -- only one program unit may specify initial values for a particular common block\")\n+SHORT(\"Common block `%A' initialized at %0 already initialized at %1\"))\n+FFEBAD_MSG (FFEBAD_COMMON_INIT_PAD, WARN,\n+LONG(\"Initial padding for common block `%A' is %B %C at %0 -- consider reordering members, largest-type-size first\")\n+SHORT(\"Initial padding for common block `%A' is %B %C at %0\"))\n+FFEBAD_MSG (FFEBAD_COMMON_DIFF_PAD, FATAL,\n+LONG(\"Initial padding for common block `%A' is %B %D at %0 but %C %E at %1 -- consider reordering members, largest-type-size first\")\n+SHORT(\"Initial padding for common block `%A' is %B %D at %0 but %C %E at %1\"))\n+FFEBAD_MSG (FFEBAD_COMMON_DIFF_SAVE, WARN,\n \"Common block `%A' is SAVEd, explicitly or implicitly, at %0 but not SAVEd at %1\")\n-FFEBAD_MSGS1 (FFEBAD_COMMON_DIFF_SIZE, WARN,\n+FFEBAD_MSG (FFEBAD_COMMON_DIFF_SIZE, WARN,\n \"Common block `%A' is %B %D in length at %0 but %C %E at %1\")\n-FFEBAD_MSGS2 (FFEBAD_COMMON_ENLARGED, FATAL,\n-\"Common block `%A' is initialized to %B %D long at %0 but enlarged to %C %E at %1 -- use consistent definitions or reorder program units in source file\",\n-\"Common block `%A' is initialized to %B %D long at %0 but enlarged to %C %E at %1\")\n-FFEBAD_MSGS1 (FFEBAD_COMMON_BLANK_INIT, WARN,\n+FFEBAD_MSG (FFEBAD_COMMON_ENLARGED, FATAL,\n+LONG(\"Common block `%A' is initialized to %B %D long at %0 but enlarged to %C %E at %1 -- use consistent definitions or reorder program units in source file\")\n+SHORT(\"Common block `%A' is initialized to %B %D long at %0 but enlarged to %C %E at %1\"))\n+FFEBAD_MSG (FFEBAD_COMMON_BLANK_INIT, WARN,\n \"Blank common initialized at %0\")\n-FFEBAD_MSGS1 (FFEBAD_NEED_INTRINSIC, WARN,\n+FFEBAD_MSG (FFEBAD_NEED_INTRINSIC, WARN,\n \"Intrinsic `%A' is passed as actual argument at %0 but not explicitly declared INTRINSIC\")\n-FFEBAD_MSGS1 (FFEBAD_NEED_EXTERNAL, WARN,\n+FFEBAD_MSG (FFEBAD_NEED_EXTERNAL, WARN,\n \"External procedure `%A' is passed as actual argument at %0 but not explicitly declared EXTERNAL\")\n-FFEBAD_MSGS1 (FFEBAD_SYMBOL_UPPER_CASE, WARN,\n+FFEBAD_MSG (FFEBAD_SYMBOL_UPPER_CASE, WARN,\n \"Character `%A' (for example) is upper-case in symbol name at %0\")\n-FFEBAD_MSGS1 (FFEBAD_SYMBOL_LOWER_CASE, WARN,\n+FFEBAD_MSG (FFEBAD_SYMBOL_LOWER_CASE, WARN,\n \"Character `%A' (for example) is lower-case in symbol name at %0\")\n-FFEBAD_MSGS1 (FFEBAD_SYMBOL_NOLOWER_INITCAP, WARN,\n+FFEBAD_MSG (FFEBAD_SYMBOL_NOLOWER_INITCAP, WARN,\n \"Character `%A' not followed at some point by lower-case character in symbol name at %0\")\n-FFEBAD_MSGS1 (FFEBAD_SYMBOL_LOWER_INITCAP, WARN,\n+FFEBAD_MSG (FFEBAD_SYMBOL_LOWER_INITCAP, WARN,\n \"Initial character `%A' is lower-case in symbol name at %0\")\n-FFEBAD_MSGS2 (FFEBAD_DO_REAL, WARN,\n-\"DO-variable `%A' is type REAL or DOUBLE PRECISION at %0 -- unexpected behavior likely\",\n-\"DO-variable `%A' is type REAL or DOUBLE PRECISION at %0\")\n-FFEBAD_MSGS1 (FFEBAD_NAMELIST_CASE, WARN,\n+FFEBAD_MSG (FFEBAD_DO_REAL, WARN,\n+LONG(\"DO-variable `%A' is type REAL or DOUBLE PRECISION at %0 -- unexpected behavior likely\")\n+SHORT(\"DO-variable `%A' is type REAL or DOUBLE PRECISION at %0\"))\n+FFEBAD_MSG (FFEBAD_NAMELIST_CASE, WARN,\n \"NAMELIST not adequately supported by run-time library for source files with case preserved\")\n-FFEBAD_MSGS1 (FFEBAD_NESTED_PERCENT, WARN,\n+FFEBAD_MSG (FFEBAD_NESTED_PERCENT, WARN,\n \"Nested %% construct (%%VAL, %%REF, or %%DESCR) at %0\")\n-FFEBAD_MSGS2 (FFEBAD_ACTUALARG, WARN,\n-\"Invalid actual argument at %0 -- replace hollerith constants with %%REF('string') and typeless constants with INTEGER constant equivalents, or use -fugly-args or -fugly\",\n-\"Invalid actual argument at %0\")\n-FFEBAD_MSGS2 (FFEBAD_QUAD_UNSUPPORTED, FATAL,\n-\"Quadruple-precision floating-point unsupported -- treating constant at %0 as double-precision\",\n-\"Quadruple-precision floating-point unsupported\")\n-FFEBAD_MSGS2 (FFEBAD_TOO_BIG_INIT, WARN,\n-\"Initialization of large (%B-unit) aggregate area `%A' at %0 currently very slow and takes lots of memory during g77 compile -- to be improved in 0.6\",\n-\"This could take a while (initializing `%A' at %0)...\")\n-FFEBAD_MSGS1 (FFEBAD_BLOCKDATA_STMT, FATAL,\n+FFEBAD_MSG (FFEBAD_ACTUALARG, WARN,\n+LONG(\"Invalid actual argument at %0 -- replace hollerith constants with %%REF('string') and typeless constants with INTEGER constant equivalents, or use -fugly-args or -fugly\")\n+SHORT(\"Invalid actual argument at %0\"))\n+FFEBAD_MSG (FFEBAD_QUAD_UNSUPPORTED, FATAL,\n+LONG(\"Quadruple-precision floating-point unsupported -- treating constant at %0 as double-precision\")\n+SHORT(\"Quadruple-precision floating-point unsupported\"))\n+FFEBAD_MSG (FFEBAD_TOO_BIG_INIT, WARN,\n+LONG(\"Initialization of large (%B-unit) aggregate area `%A' at %0 currently very slow and takes lots of memory during g77 compile -- to be improved in 0.6\")\n+SHORT(\"This could take a while (initializing `%A' at %0)...\"))\n+FFEBAD_MSG (FFEBAD_BLOCKDATA_STMT, FATAL,\n \"Statement at %0 invalid in BLOCK DATA program unit at %1\")\n-FFEBAD_MSGS1 (FFEBAD_TRUNCATING_CHARACTER, FATAL,\n+FFEBAD_MSG (FFEBAD_TRUNCATING_CHARACTER, FATAL,\n \"Truncating characters on right side of character constant at %0\")\n-FFEBAD_MSGS1 (FFEBAD_TRUNCATING_HOLLERITH, FATAL,\n+FFEBAD_MSG (FFEBAD_TRUNCATING_HOLLERITH, FATAL,\n \"Truncating characters on right side of hollerith constant at %0\")\n-FFEBAD_MSGS1 (FFEBAD_TRUNCATING_NUMERIC, FATAL,\n+FFEBAD_MSG (FFEBAD_TRUNCATING_NUMERIC, FATAL,\n \"Truncating non-zero data on left side of numeric constant at %0\")\n-FFEBAD_MSGS1 (FFEBAD_TRUNCATING_TYPELESS, FATAL,\n+FFEBAD_MSG (FFEBAD_TRUNCATING_TYPELESS, FATAL,\n \"Truncating non-zero data on left side of typeless constant at %0\")\n-FFEBAD_MSGS1 (FFEBAD_TYPELESS_OVERFLOW, FATAL,\n+FFEBAD_MSG (FFEBAD_TYPELESS_OVERFLOW, FATAL,\n \"Typeless constant at %0 too large\")\n-FFEBAD_MSGS1 (FFEBAD_AMPERSAND, WARN,\n+FFEBAD_MSG (FFEBAD_AMPERSAND, WARN,\n \"First-column ampersand continuation at %0\")\n-FFEBAD_MSGS1 (FFEBAD_FILEWIDE_ALREADY_SEEN, FATAL,\n+FFEBAD_MSG (FFEBAD_FILEWIDE_ALREADY_SEEN, FATAL,\n \"Global name `%A' defined at %0 already defined at %1 [info -f g77 M GLOBALS]\")\n-FFEBAD_MSGS1 (FFEBAD_FILEWIDE_ALREADY_SEEN_W, WARN,\n+FFEBAD_MSG (FFEBAD_FILEWIDE_ALREADY_SEEN_W, WARN,\n \"Global name `%A' defined at %0 already defined at %1 [info -f g77 M GLOBALS]\")\n-FFEBAD_MSGS1 (FFEBAD_FILEWIDE_DISAGREEMENT, FATAL,\n+FFEBAD_MSG (FFEBAD_FILEWIDE_DISAGREEMENT, FATAL,\n \"Global name `%A' is %B at %0 but is %C at %1 [info -f g77 M GLOBALS]\")\n-FFEBAD_MSGS1 (FFEBAD_FILEWIDE_DISAGREEMENT_W, WARN,\n+FFEBAD_MSG (FFEBAD_FILEWIDE_DISAGREEMENT_W, WARN,\n \"Global name `%A' is %B at %0 but is %C at %1 [info -f g77 M GLOBALS]\")\n-FFEBAD_MSGS1 (FFEBAD_FILEWIDE_TYPE_MISMATCH, FATAL,\n+FFEBAD_MSG (FFEBAD_FILEWIDE_TYPE_MISMATCH, FATAL,\n \"Global name `%A' at %0 has different type at %1 [info -f g77 M GLOBALS]\")\n-FFEBAD_MSGS1 (FFEBAD_FILEWIDE_TYPE_MISMATCH_W, WARN,\n+FFEBAD_MSG (FFEBAD_FILEWIDE_TYPE_MISMATCH_W, WARN,\n \"Global name `%A' at %0 has different type at %1 [info -f g77 M GLOBALS]\")\n-FFEBAD_MSGS1 (FFEBAD_FILEWIDE_NARGS, FATAL,\n+FFEBAD_MSG (FFEBAD_FILEWIDE_NARGS, FATAL,\n \"Too %B arguments passed to `%A' at %0 versus definition at %1 [info -f g77 M GLOBALS]\")\n-FFEBAD_MSGS1 (FFEBAD_FILEWIDE_NARGS_W, WARN,\n+FFEBAD_MSG (FFEBAD_FILEWIDE_NARGS_W, WARN,\n \"Too %B arguments for `%A' at %0 versus invocation at %1 [info -f g77 M GLOBALS]\")\n-FFEBAD_MSGS1 (FFEBAD_FILEWIDE_ARG, FATAL,\n+FFEBAD_MSG (FFEBAD_FILEWIDE_ARG, FATAL,\n \"Argument #%B of `%A' is %C at %0 but is %D at %1 [info -f g77 M GLOBALS]\")\n-FFEBAD_MSGS1 (FFEBAD_FILEWIDE_ARG_W, WARN,\n+FFEBAD_MSG (FFEBAD_FILEWIDE_ARG_W, WARN,\n \"Argument #%B of `%A' is %C at %0 but is %D at %1 [info -f g77 M GLOBALS]\")\n-FFEBAD_MSGS1 (FFEBAD_ARRAY_LARGE, FATAL,\n+FFEBAD_MSG (FFEBAD_ARRAY_LARGE, FATAL,\n \"Array `%A' at %0 is too large to handle\")\n-FFEBAD_MSGS1 (FFEBAD_SFUNC_UNUSED, WARN,\n+FFEBAD_MSG (FFEBAD_SFUNC_UNUSED, WARN,\n \"Statement function `%A' defined at %0 is not used\")\n-FFEBAD_MSGS1 (FFEBAD_INTRINSIC_Y2KBAD, WARN,\n+FFEBAD_MSG (FFEBAD_INTRINSIC_Y2KBAD, WARN,\n \"Intrinsic `%A', invoked at %0, known to be non-Y2K-compliant [info -f g77 M Y2KBAD]\")\n-FFEBAD_MSGS1 (FFEBAD_NOCANDO, DISASTER,\n+FFEBAD_MSG (FFEBAD_NOCANDO, DISASTER,\n \"Internal compiler error -- cannot perform operation\")\n \n #undef INFORM"}, {"sha": "bd7581e50d95587e74e4c3bdf475c62c41ca78ff", "filename": "gcc/f/bad.h", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/gcc%2Ff%2Fbad.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/gcc%2Ff%2Fbad.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbad.h?ref=f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74", "patch": "@@ -1,5 +1,5 @@\n /* bad.h -- Public #include File (module.h template V1.0)\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2002 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -34,11 +34,9 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n typedef enum\n   {\n-#define FFEBAD_MSGS1(KWD,SEV,MSG) KWD,\n-#define FFEBAD_MSGS2(KWD,SEV,LMSG,SMSG) KWD,\n+#define FFEBAD_MSG(KWD,SEV,MSG) KWD,\n #include \"bad.def\"\n-#undef FFEBAD_MSGS1\n-#undef FFEBAD_MSGS2\n+#undef FFEBAD_MSG\n     FFEBAD\n   } ffebad;\n \n@@ -82,7 +80,7 @@ void ffebad_init_0 (void);\n bool ffebad_is_fatal (ffebad errnum);\n ffebadSeverity ffebad_severity (ffebad errnum);\n bool ffebad_start_ (bool lex_override, ffebad errnum, ffebadSeverity sev,\n-\t\t    const char *message);\n+\t\t    const char *msgid);\n void ffebad_string (const char *string);\n \n /* Define macros. */\n@@ -95,8 +93,8 @@ void ffebad_string (const char *string);\n #define ffebad_set_inhibit(f) (ffebad_is_inhibited_ = (f))\n #define ffebad_start(e) ffebad_start_ (FALSE, (e), FFEBAD_severity, NULL)\n #define ffebad_start_lex(e) ffebad_start_ (TRUE, (e), FFEBAD_severity, NULL)\n-#define ffebad_start_msg(m,s) ffebad_start_ (FALSE, FFEBAD, (s), (m))\n-#define ffebad_start_msg_lex(m,s) ffebad_start_ (TRUE, FFEBAD, (s), (m))\n+#define ffebad_start_msg(msgid,s) ffebad_start_ (FALSE, FFEBAD, (s), (msgid))\n+#define ffebad_start_msg_lex(msgid,s) ffebad_start_ (TRUE, FFEBAD, (s), (msgid))\n #define ffebad_terminate_0()\n #define ffebad_terminate_1()\n #define ffebad_terminate_2()"}, {"sha": "979d7351642d60c76eb5e3ea74a181a38f05fe8b", "filename": "gcc/f/com.c", "status": "modified", "additions": 5, "deletions": 25, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74", "patch": "@@ -89,6 +89,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"convert.h\"\n #include \"ggc.h\"\n #include \"diagnostic.h\"\n+#include \"intl.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n \n@@ -13669,33 +13670,12 @@ lang_print_error_function (diagnostic_context *context __attribute__((unused)),\n       if (ffecom_nested_entry_ == NULL)\n \t{\n \t  s = ffecom_primary_entry_;\n-\t  switch (ffesymbol_kind (s))\n-\t    {\n-\t    case FFEINFO_kindFUNCTION:\n-\t      kind = \"function\";\n-\t      break;\n-\n-\t    case FFEINFO_kindSUBROUTINE:\n-\t      kind = \"subroutine\";\n-\t      break;\n-\n-\t    case FFEINFO_kindPROGRAM:\n-\t      kind = \"program\";\n-\t      break;\n-\n-\t    case FFEINFO_kindBLOCKDATA:\n-\t      kind = \"block-data\";\n-\t      break;\n-\n-\t    default:\n-\t      kind = ffeinfo_kind_message (ffesymbol_kind (s));\n-\t      break;\n-\t    }\n+\t  kind = _(ffeinfo_kind_message (ffesymbol_kind (s)));\n \t}\n       else\n \t{\n \t  s = ffecom_nested_entry_;\n-\t  kind = \"statement function\";\n+\t  kind = _(\"In statement function\");\n \t}\n     }\n \n@@ -13705,12 +13685,12 @@ lang_print_error_function (diagnostic_context *context __attribute__((unused)),\n \tfprintf (stderr, \"%s: \", file);\n \n       if (s == NULL)\n-\tfprintf (stderr, \"Outside of any program unit:\\n\");\n+\tfprintf (stderr, _(\"Outside of any program unit:\\n\"));\n       else\n \t{\n \t  const char *name = ffesymbol_text (s);\n \n-\t  fprintf (stderr, \"In %s `%s':\\n\", kind, name);\n+\t  fprintf (stderr, \"%s `%s':\\n\", kind, name);\n \t}\n \n       last_g = g;"}, {"sha": "9e6052d61502655bc8f9a324ed2917816386da99", "filename": "gcc/f/info-k.def", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/gcc%2Ff%2Finfo-k.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/gcc%2Ff%2Finfo-k.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Finfo-k.def?ref=f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74", "patch": "@@ -1,5 +1,5 @@\n /* info-k.def -- Public #include File (module.h template V1.0)\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2002 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -25,13 +25,17 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    Modifications:\n */\n \n-FFEINFO_KIND (FFEINFO_kindNONE, \"an unknown kind\", \"\")\n-FFEINFO_KIND (FFEINFO_kindENTITY, \"an entity\", \"e\")\n-FFEINFO_KIND (FFEINFO_kindFUNCTION, \"a function\", \"f\")\n-FFEINFO_KIND (FFEINFO_kindSUBROUTINE, \"a subroutine\", \"u\")\n-FFEINFO_KIND (FFEINFO_kindPROGRAM, \"a program\", \"p\")\n-FFEINFO_KIND (FFEINFO_kindBLOCKDATA, \"a block-data unit\", \"b\")\n-FFEINFO_KIND (FFEINFO_kindCOMMON, \"a common block\", \"c\")\n-FFEINFO_KIND (FFEINFO_kindCONSTRUCT, \"a construct\", \":\")\n-FFEINFO_KIND (FFEINFO_kindNAMELIST, \"a namelist\", \"n\")\n-FFEINFO_KIND (FFEINFO_kindANY, \"anything\", \"~\")\n+#\n+/* Kind messages are used in diagnostic location reports of the\n+   form \"<file>: In function `foo': <error message>\". */\n+\n+FFEINFO_KIND (FFEINFO_kindNONE, \"In unknown kind\", \"\")\n+FFEINFO_KIND (FFEINFO_kindENTITY, \"In entity\", \"e\")\n+FFEINFO_KIND (FFEINFO_kindFUNCTION, \"In function\", \"f\")\n+FFEINFO_KIND (FFEINFO_kindSUBROUTINE, \"In subroutine\", \"u\")\n+FFEINFO_KIND (FFEINFO_kindPROGRAM, \"In program\", \"p\")\n+FFEINFO_KIND (FFEINFO_kindBLOCKDATA, \"In block-data unit\", \"b\")\n+FFEINFO_KIND (FFEINFO_kindCOMMON, \"In common block\", \"c\")\n+FFEINFO_KIND (FFEINFO_kindCONSTRUCT, \"In construct\", \":\")\n+FFEINFO_KIND (FFEINFO_kindNAMELIST, \"In namelist\", \"n\")\n+FFEINFO_KIND (FFEINFO_kindANY, \"In anything\", \"~\")"}, {"sha": "1bedaa0772dd0bf1b2e8498b410354a3259ce09e", "filename": "gcc/f/info.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/gcc%2Ff%2Finfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74/gcc%2Ff%2Finfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Finfo.c?ref=f1685b7c17cfa9d0a74d2e75f63d42ae61c29f74", "patch": "@@ -1,5 +1,5 @@\n /* info.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2002 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -65,7 +65,7 @@ static const char *const ffeinfo_basictype_string_[]\n static const char *const ffeinfo_kind_message_[]\n =\n {\n-#define FFEINFO_KIND(KWD,LNAM,SNAM) LNAM,\n+#define FFEINFO_KIND(kwd,msgid,snam) msgid,\n #include \"info-k.def\"\n #undef FFEINFO_KIND\n };"}]}