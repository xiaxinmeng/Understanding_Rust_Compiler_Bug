{"sha": "1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJhNTYzZjVmOWJhNDJjY2JiMzZmNDIwMWJjYmJlMGM4MDdhZTI2ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-20T09:11:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-20T09:11:42Z"}, "message": "[multiple changes]\n\n2016-04-20  Javier Miranda  <miranda@adacore.com>\n\n\t* contracts.adb (Build_Postconditions_Procedure): Force its\n\tinlining when generating C code.\n\t* sem_attr.adb (Analyze_Attribute_Old_Result): Handle inlined\n\t_postconditions when generating C code.\n\t* exp_ch6.adb (Inlined_Subprogram): Inline calls to\n\t_postconditions when generating C code.\n\t* sinfo.ads, sinfo.adb (Corresponding_Spec, Set_Corresponding_Spec):\n\ttypes of return value and argument changed from Node_Id to\n\tEntity_Id.\n\n2016-04-20  Vincent Celier  <celier@adacore.com>\n\n\t* make.adb, clean.adb, gnatname.adb: Revert previous change for now.\n\n2016-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_ch12.adb (Analyze_Instance_And_Renamings): Do not reset\n\tthe Has_Delayed_Freeze flag on the anonymous instance node.\n\nFrom-SVN: r235243", "tree": {"sha": "918f75eaaa0499d130d89f924914044fdb189136", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/918f75eaaa0499d130d89f924914044fdb189136"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/comments", "author": null, "committer": null, "parents": [{"sha": "e361e9a1dbb5b357207de2b6459b8f69f96420da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e361e9a1dbb5b357207de2b6459b8f69f96420da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e361e9a1dbb5b357207de2b6459b8f69f96420da"}], "stats": {"total": 103, "additions": 86, "deletions": 17}, "files": [{"sha": "3a856be4c7f93b0682106fd7ddca4b33042f5b54", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e", "patch": "@@ -1,3 +1,24 @@\n+2016-04-20  Javier Miranda  <miranda@adacore.com>\n+\n+\t* contracts.adb (Build_Postconditions_Procedure): Force its\n+\tinlining when generating C code.\n+\t* sem_attr.adb (Analyze_Attribute_Old_Result): Handle inlined\n+\t_postconditions when generating C code.\n+\t* exp_ch6.adb (Inlined_Subprogram): Inline calls to\n+\t_postconditions when generating C code.\n+\t* sinfo.ads, sinfo.adb (Corresponding_Spec, Set_Corresponding_Spec):\n+\ttypes of return value and argument changed from Node_Id to\n+\tEntity_Id.\n+\n+2016-04-20  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb, clean.adb, gnatname.adb: Revert previous change for now.\n+\n+2016-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Instance_And_Renamings): Do not reset\n+\tthe Has_Delayed_Freeze flag on the anonymous instance node.\n+\n 2016-04-20  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_ch5.adb (Analyze_Iterator_Specification): Remove transient"}, {"sha": "db9be956b6b000d500b84c5bea90e24404a908fa", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e", "patch": "@@ -1386,8 +1386,9 @@ package body Clean is\n          --  Warn about 'gnatclean -P'\n \n          if Project_File_Name /= null then\n-            Fail\n-              (\"project files are no longer supported; use gprclean instead.\");\n+            Put_Line\n+              (\"warning: gnatclean -P is obsolete and will not be available\" &\n+               \" in the next release; use gprclean instead.\");\n          end if;\n \n          --  A project file was specified by a -P switch"}, {"sha": "a5f8bc3e5a309ed864ab38423d905ea3ca795b75", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e", "patch": "@@ -1800,6 +1800,36 @@ package body Contracts is\n                  End_Label  => Make_Identifier (Loc, Chars (Proc_Id))));\n \n          Insert_Before_First_Source_Declaration (Proc_Bod);\n+\n+         --  Force the front-end inlining of _PostConditions when generating\n+         --  C code, since its body may have references to itypes defined in\n+         --  the enclosing subprogram, thus causing problems for the unnested\n+         --  routines. For this purpose its declaration with proper decoration\n+         --  for inlining is needed.\n+\n+         if Generate_C_Code then\n+            declare\n+               Proc_Decl    : Node_Id;\n+               Proc_Decl_Id : Entity_Id;\n+\n+            begin\n+               Proc_Decl :=\n+                 Make_Subprogram_Declaration (Loc,\n+                   Specification =>\n+                     Copy_Subprogram_Spec (Specification (Proc_Bod)));\n+               Insert_Before (Proc_Bod, Proc_Decl);\n+\n+               Proc_Decl_Id := Defining_Entity (Specification (Proc_Decl));\n+               Set_Has_Pragma_Inline (Proc_Decl_Id);\n+               Set_Has_Pragma_Inline_Always (Proc_Decl_Id);\n+               Set_Is_Inlined (Proc_Decl_Id);\n+\n+               Set_Postconditions_Proc (Subp_Id, Proc_Decl_Id);\n+\n+               Analyze (Proc_Decl);\n+            end;\n+         end if;\n+\n          Analyze (Proc_Bod);\n       end Build_Postconditions_Procedure;\n "}, {"sha": "5675623e9b234d7e3b9e4e3d1f29b88a587c0392", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e", "patch": "@@ -3866,6 +3866,14 @@ package body Exp_Ch6 is\n                     and then In_Package_Body\n                   then\n                      Must_Inline := not In_Extended_Main_Source_Unit (Subp);\n+\n+                  --  Inline calls to _postconditions when generating C code\n+\n+                  elsif Generate_C_Code\n+                    and then In_Same_Extended_Unit (Sloc (Bod), Loc)\n+                    and then Chars (Name (N)) = Name_uPostconditions\n+                  then\n+                     Must_Inline := True;\n                   end if;\n                end if;\n "}, {"sha": "1030fde32a43d37bc4d5d3e25e8d41da55d26d11", "filename": "gcc/ada/gnatname.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fgnatname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fgnatname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatname.adb?ref=1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e", "patch": "@@ -659,7 +659,9 @@ begin\n    --  gprname did not succeed.\n \n    if Create_Project then\n-      Fail (\"project files are no longer supported; use gprname instead\");\n+      Write_Line\n+        (\"warning: gnatname -P is obsolete and will not be available in the\" &\n+         \" next release; use gprname instead\");\n    end if;\n \n    --  If no Ada or foreign pattern was specified, print the usage and return"}, {"sha": "308d4e6cced21c165a7760571f1d1e40a5a9b8a0", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e", "patch": "@@ -6509,8 +6509,7 @@ package body Make is\n       --  Warn about 'gnatmake -P'\n \n       if Project_File_Name /= null then\n-         Make_Failed\n-           (\"project files are no longer supported; use gprbuild instead\");\n+         Make_Failed (\"project file name missing after -P\");\n       end if;\n \n       --  If --subdirs= is specified, but not -P, this is equivalent to -D,"}, {"sha": "1d220c543d367a9e0ee5f5711d8cbfec48642ae8", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e", "patch": "@@ -1370,6 +1370,22 @@ package body Sem_Attr is\n \n          Legal   := True;\n          Spec_Id := Unique_Defining_Entity (Subp_Decl);\n+\n+         --  When generating C code, nested _postcondition subprograms are\n+         --  inlined by the front end to avoid problems (when unnested) with\n+         --  referenced itypes. Handle that here, since as part of inlining the\n+         --  expander nests subprogram within a dummy procedure named _parent\n+         --  (see Build_Postconditions_Procedure and Build_Body_To_Inline).\n+         --  Hence, in this context, the spec_id of _postconditions is the\n+         --  enclosing scope.\n+\n+         if Generate_C_Code\n+           and then Chars (Spec_Id) = Name_uParent\n+           and then Chars (Scope (Spec_Id)) = Name_uPostconditions\n+         then\n+            Spec_Id := Scope (Spec_Id);\n+            pragma Assert (Is_Inlined (Spec_Id));\n+         end if;\n       end Analyze_Attribute_Old_Result;\n \n       ---------------------------------"}, {"sha": "fe867f3ed708fdbfcd7bd83e827683f780103ded", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e", "patch": "@@ -4923,14 +4923,6 @@ package body Sem_Ch12 is\n \n          Set_Comes_From_Source (Act_Decl_Id, Comes_From_Source (Gen_Unit));\n \n-         --  The signature may involve types that are not frozen yet, but the\n-         --  subprogram will be frozen at the point the wrapper package is\n-         --  frozen, so it does not need its own freeze node. In fact, if one\n-         --  is created, it might conflict with the freezing actions from the\n-         --  wrapper package.\n-\n-         Set_Has_Delayed_Freeze (Anon_Id, False);\n-\n          --  If the instance is a child unit, mark the Id accordingly. Mark\n          --  the anonymous entity as well, which is the real subprogram and\n          --  which is used when the instance appears in a context clause."}, {"sha": "3ea7a6add277172330f80511cae242d7618814fc", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e", "patch": "@@ -691,7 +691,7 @@ package body Sinfo is\n    end Corresponding_Integer_Value;\n \n    function Corresponding_Spec\n-      (N : Node_Id) return Node_Id is\n+      (N : Node_Id) return Entity_Id is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Expression_Function\n@@ -3947,7 +3947,7 @@ package body Sinfo is\n    end Set_Corresponding_Integer_Value;\n \n    procedure Set_Corresponding_Spec\n-      (N : Node_Id; Val : Node_Id) is\n+      (N : Node_Id; Val : Entity_Id) is\n    begin\n       pragma Assert (False\n         or else NT (N).Nkind = N_Expression_Function"}, {"sha": "3161edb706a8c56940112b2000a68809467e8c40", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=1ba563f5f9ba42ccbb36f4201bcbbe0c807ae26e", "patch": "@@ -8993,7 +8993,7 @@ package Sinfo is\n      (N : Node_Id) return Uint;       -- Uint4\n \n    function Corresponding_Spec\n-     (N : Node_Id) return Node_Id;    -- Node5\n+     (N : Node_Id) return Entity_Id;  -- Node5\n \n    function Corresponding_Spec_Of_Stub\n      (N : Node_Id) return Node_Id;    -- Node2\n@@ -10033,7 +10033,7 @@ package Sinfo is\n      (N : Node_Id; Val : Uint);               -- Uint4\n \n    procedure Set_Corresponding_Spec\n-     (N : Node_Id; Val : Node_Id);            -- Node5\n+     (N : Node_Id; Val : Entity_Id);          -- Node5\n \n    procedure Set_Corresponding_Spec_Of_Stub\n      (N : Node_Id; Val : Node_Id);            -- Node2"}]}