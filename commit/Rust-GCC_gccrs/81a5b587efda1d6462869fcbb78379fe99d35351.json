{"sha": "81a5b587efda1d6462869fcbb78379fe99d35351", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFhNWI1ODdlZmRhMWQ2NDYyODY5ZmNiYjc4Mzc5ZmU5OWQzNTM1MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2003-11-27T11:40:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2003-11-27T11:40:45Z"}, "message": "[multiple changes]\n\n2003-11-26  Thomas Quinot  <quinot@act-europe.fr>\n\n\t* g-socket.ads, g-socket.adb:\n\tClarify documentation of function Stream. Introduce a Free procedure\n\tto release the returned Stream once it becomes unused.\n\n\t* 5asystem.ads: For Alpha Tru64, enable ZCX by default.\n\n2003-11-26  Arnaud Charlet  <charlet@act-europe.fr>\n\n\t(Cond_Timed_Wait): Introduce new constant Time_Out_Max,\n\tsince NT 4 cannot handle timeout values that are too large,\n\te.g. DWORD'Last - 1.\n\n2003-11-26  Ed Schonberg  <schonberg@gnat.com>\n\n\t* exp_ch4.adb:\n\t(Expand_N_Slice): Recognize all cases of slices that appear as actuals\n\tin procedure calls and whose expansion must be deferred.\n\n\t* exp_ch6.adb (Add_Call_By_Copy_Node): Remove previous fix. Proper fix\n\tis in exp_ch4.\n\n\t* sem_ch3.adb:\n\t(Build_Derived_Array_Type): Create operator for unconstrained type\n\tif ancestor is unconstrained.\n\n2003-11-26  Vincent Celier  <celier@gnat.com>\n\n\t* make.adb (Project_Object_Directory): New global variable\n\t(Change_To_Object_Directory): New procedure\n\t(Collect_Arguments_And_Compile): Call Change_To_Object_Directory instead\n\tof Change_Dir directly. Do not change working directory to object\n\tdirectory of main project after each compilation.\n\t(Gnatmake): Use Change_To_Object_Directory instead of Change_Dir\n\tdirectly.\n\tChange to object directory of main project before binding step.\n\t(Initialize): Initialize Project_Object_Directory to No_Project\n\n\t* mlib-prj.adb:\n\t(Build_Library): Take into account Builder'Default_Switches (\"Ada\") when\n\tbinding a Stand-Alone Library.\n\n\t* output.adb: Update Copyright notice\n\t(Write_Char): Output buffer when full\n\n2003-11-26  Robert Dewar  <dewar@gnat.com>\n\n\t* sem_ch13.adb: (Check_Size): Reset size if size is too small\n\n\t* sem_ch13.ads:\n\t(Check_Size): Fix documentation to include bit-packed array case\n\n\t* sem_res.adb: Implement restriction No_Direct_Boolean_Operators\n\n\t* s-rident.ads: Put No_Direct_Boolean_Operators in proper order\n\n\t* s-rident.ads: Add new restriction No_Direct_Boolean_Operators\n\nFrom-SVN: r73991", "tree": {"sha": "900429240d553526e03379183533d6964ac0cf18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/900429240d553526e03379183533d6964ac0cf18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81a5b587efda1d6462869fcbb78379fe99d35351", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a5b587efda1d6462869fcbb78379fe99d35351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81a5b587efda1d6462869fcbb78379fe99d35351", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a5b587efda1d6462869fcbb78379fe99d35351/comments", "author": null, "committer": null, "parents": [{"sha": "f4314bb628aa9f5ef498ab7891354f03ed32f4ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4314bb628aa9f5ef498ab7891354f03ed32f4ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4314bb628aa9f5ef498ab7891354f03ed32f4ac"}], "stats": {"total": 356, "additions": 286, "deletions": 70}, "files": [{"sha": "f0067b37f84c2d12e1e23af7e34f30f7e47ad5f6", "filename": "gcc/ada/5asystem.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2F5asystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2F5asystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5asystem.ads?ref=81a5b587efda1d6462869fcbb78379fe99d35351", "patch": "@@ -138,8 +138,8 @@ private\n    Support_Long_Shifts       : constant Boolean := True;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := False;\n-   GCC_ZCX_Support           : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := True;\n+   GCC_ZCX_Support           : constant Boolean := True;\n    Front_End_ZCX_Support     : constant Boolean := False;\n \n    --  Obsolete entries, to be removed eventually (bootstrap issues!)"}, {"sha": "aa84c28bfafc02c893d1694731913ff682f27035", "filename": "gcc/ada/5wtaprop.adb", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2F5wtaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2F5wtaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5wtaprop.adb?ref=81a5b587efda1d6462869fcbb78379fe99d35351", "patch": "@@ -296,9 +296,13 @@ package body System.Task_Primitives.Operations is\n       Timed_Out : out Boolean;\n       Status    : out Integer)\n    is\n-      Time_Out    : DWORD;\n-      Result      : BOOL;\n-      Wait_Result : DWORD;\n+      Time_Out_Max : constant DWORD := 16#FFFF0000#;\n+      --  NT 4 cannot handle timeout values that are too large,\n+      --  e.g. DWORD'Last - 1\n+\n+      Time_Out     : DWORD;\n+      Result       : BOOL;\n+      Wait_Result  : DWORD;\n \n    begin\n       --  Must reset Cond BEFORE L is unlocked.\n@@ -315,8 +319,8 @@ package body System.Task_Primitives.Operations is\n          Wait_Result := 0;\n \n       else\n-         if Rel_Time >= Duration (DWORD'Last - 1) / 1000 then\n-            Time_Out := DWORD'Last - 1;\n+         if Rel_Time >= Duration (Time_Out_Max) / 1000 then\n+            Time_Out := Time_Out_Max;\n          else\n             Time_Out := DWORD (Rel_Time * 1000);\n          end if;"}, {"sha": "0899e22a36ca946aee9d170f481d2ead84702eef", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=81a5b587efda1d6462869fcbb78379fe99d35351", "patch": "@@ -1,3 +1,62 @@\n+2003-11-26  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* g-socket.ads, g-socket.adb: \n+\tClarify documentation of function Stream. Introduce a Free procedure\n+\tto release the returned Stream once it becomes unused.\n+\n+\t* 5asystem.ads: For Alpha Tru64, enable ZCX by default.\n+\n+2003-11-26  Arnaud Charlet  <charlet@act-europe.fr>\n+\n+\t(Cond_Timed_Wait): Introduce new constant Time_Out_Max,\n+\tsince NT 4 cannot handle timeout values that are too large,\n+\te.g. DWORD'Last - 1.\n+\n+2003-11-26  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* exp_ch4.adb: \n+\t(Expand_N_Slice): Recognize all cases of slices that appear as actuals\n+\tin procedure calls and whose expansion must be deferred.\n+\n+\t* exp_ch6.adb (Add_Call_By_Copy_Node): Remove previous fix. Proper fix\n+\tis in exp_ch4.\n+\n+\t* sem_ch3.adb: \n+\t(Build_Derived_Array_Type): Create operator for unconstrained type\n+\tif ancestor is unconstrained.\n+\n+2003-11-26  Vincent Celier  <celier@gnat.com>\n+\n+\t* make.adb (Project_Object_Directory): New global variable\n+\t(Change_To_Object_Directory): New procedure\n+\t(Collect_Arguments_And_Compile): Call Change_To_Object_Directory instead\n+\tof Change_Dir directly. Do not change working directory to object\n+\tdirectory of main project after each compilation.\n+\t(Gnatmake): Use Change_To_Object_Directory instead of Change_Dir\n+\tdirectly.\n+\tChange to object directory of main project before binding step.\n+\t(Initialize): Initialize Project_Object_Directory to No_Project\n+\n+\t* mlib-prj.adb: \n+\t(Build_Library): Take into account Builder'Default_Switches (\"Ada\") when\n+\tbinding a Stand-Alone Library.\n+\n+\t* output.adb: Update Copyright notice\n+\t(Write_Char): Output buffer when full\n+\n+2003-11-26  Robert Dewar  <dewar@gnat.com>\n+\n+\t* sem_ch13.adb: (Check_Size): Reset size if size is too small\n+\n+\t* sem_ch13.ads: \n+\t(Check_Size): Fix documentation to include bit-packed array case\n+\n+\t* sem_res.adb: Implement restriction No_Direct_Boolean_Operators\n+\n+\t* s-rident.ads: Put No_Direct_Boolean_Operators in proper order\n+\n+\t* s-rident.ads: Add new restriction No_Direct_Boolean_Operators\n+\n 2003-11-24  Arnaud Charlet <charlet@act-europe.fr>\n \n \tPR ada/13142"}, {"sha": "86ff994762028e15649edfa35c5de14ea820dc7f", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 49, "deletions": 16, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=81a5b587efda1d6462869fcbb78379fe99d35351", "patch": "@@ -5333,11 +5333,36 @@ package body Exp_Ch4 is\n       Pfx  : constant Node_Id    := Prefix (N);\n       Ptp  : Entity_Id           := Etype (Pfx);\n \n+      function Is_Procedure_Actual (N : Node_Id) return Boolean;\n+      --  Check whether context is a procedure call, in which case\n+      --  expansion of a bit-packed slice is deferred until the call\n+      --  itself is expanded.\n+\n       procedure Make_Temporary;\n       --  Create a named variable for the value of the slice, in\n       --  cases where the back-end cannot handle it properly, e.g.\n       --  when packed types or unaligned slices are involved.\n \n+      -------------------------\n+      -- Is_Procedure_Actual --\n+      -------------------------\n+\n+      function Is_Procedure_Actual (N : Node_Id) return Boolean is\n+         Par : Node_Id := Parent (N);\n+      begin\n+         while Present (Par)\n+           and then Nkind (Par) not in N_Statement_Other_Than_Procedure_Call\n+         loop\n+            if Nkind (Par) = N_Procedure_Call_Statement then\n+               return True;\n+            else\n+               Par := Parent (Par);\n+            end if;\n+         end loop;\n+\n+         return False;\n+      end Is_Procedure_Actual;\n+\n       --------------------\n       -- Make_Temporary --\n       --------------------\n@@ -5422,26 +5447,34 @@ package body Exp_Ch4 is\n       --       is caught elsewhere, and the expansion would intefere\n       --       with generating the error message).\n \n-      if Is_Packed (Typ)\n-        and then Nkind (Parent (N)) /= N_Assignment_Statement\n-        and then (Nkind (Parent (Parent (N))) /= N_Assignment_Statement\n-                     or else\n-                  Parent (N) /= Name (Parent (Parent (N))))\n-        and then Nkind (Parent (N)) /= N_Indexed_Component\n-        and then not Is_Renamed_Object (N)\n-        and then Nkind (Parent (N)) /= N_Procedure_Call_Statement\n-        and then (Nkind (Parent (N)) /= N_Attribute_Reference\n-                    or else\n-                  Attribute_Name (Parent (N)) /= Name_Address)\n+      if not Is_Packed (Typ) then\n+         --  apply transformation for actuals of a function call, where\n+         --  Expand_Actuals is not used.\n+\n+         if Nkind (Parent (N)) = N_Function_Call\n+           and then Is_Possibly_Unaligned_Slice (N)\n+         then\n+            Make_Temporary;\n+         end if;\n+\n+      elsif Nkind (Parent (N)) = N_Assignment_Statement\n+        or else (Nkind (Parent (Parent (N))) = N_Assignment_Statement\n+                   and then Parent (N) = Name (Parent (Parent (N))))\n       then\n-         Make_Temporary;\n+         return;\n \n-      --  Same transformation for actuals in a function call, where\n-      --  Expand_Actuals is not used.\n+      elsif Nkind (Parent (N)) = N_Indexed_Component\n+        or else Is_Renamed_Object (N)\n+        or else Is_Procedure_Actual (N)\n+      then\n+         return;\n \n-      elsif Nkind (Parent (N)) = N_Function_Call\n-        and then Is_Possibly_Unaligned_Slice (N)\n+      elsif (Nkind (Parent (N)) = N_Attribute_Reference\n+        and then Attribute_Name (Parent (N)) = Name_Address)\n       then\n+         return;\n+\n+      else\n          Make_Temporary;\n       end if;\n    end Expand_N_Slice;"}, {"sha": "b0023aa1f447b271ab1aa243fdc2dd7fefd847ef", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=81a5b587efda1d6462869fcbb78379fe99d35351", "patch": "@@ -544,24 +544,8 @@ package body Exp_Ch6 is\n \n             --  If the formal is an (in-)out parameter, capture the name\n             --  of the variable in order to build the post-call assignment.\n-            --  The variable itself may have been expanded, for example if\n-            --  it is a complex bit-packed array, so we need to recover the\n-            --  original to ensure that we have the proper target for the\n-            --  assignment. Examine the slocs of the two nodes to determine\n-            --  whether the rewriting is an expansion, or a substitution done\n-            --  on an inlined body, in which case it must be respected.\n \n-            declare\n-               Orig : constant Node_Id := Original_Node (Expression (Actual));\n-            begin\n-               if Orig /= Expression (Actual)\n-                 and then Sloc (Orig) = Sloc (Expression (Actual))\n-               then\n-                  Var := Make_Var (Orig);\n-               else\n-                  Var := Make_Var (Expression (Actual));\n-               end if;\n-            end;\n+            Var := Make_Var (Expression (Actual));\n \n             Crep  := not Same_Representation\n                        (Etype (Formal), Etype (Expression (Actual)));"}, {"sha": "97967a5b8e72e915aecfd7f5839e03a48ab12b9b", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=81a5b587efda1d6462869fcbb78379fe99d35351", "patch": "@@ -34,6 +34,7 @@\n with Ada.Streams;                use Ada.Streams;\n with Ada.Exceptions;             use Ada.Exceptions;\n with Ada.Unchecked_Conversion;\n+with Ada.Unchecked_Deallocation;\n \n with Interfaces.C.Strings;\n \n@@ -777,6 +778,17 @@ package body GNAT.Sockets is\n       end if;\n    end Finalize;\n \n+   ----------\n+   -- Free --\n+   ----------\n+\n+   procedure Free (Stream : in out Stream_Access) is\n+      procedure Do_Free is new Ada.Unchecked_Deallocation\n+        (Ada.Streams.Root_Stream_Type'Class, Stream_Access);\n+   begin\n+      Do_Free (Stream);\n+   end Free;\n+\n    ---------\n    -- Get --\n    ---------"}, {"sha": "f78241c4178c6bad0fdc9d5daf3e0600ac0687f3", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=81a5b587efda1d6462869fcbb78379fe99d35351", "patch": "@@ -885,15 +885,15 @@ package GNAT.Sockets is\n    function Stream\n      (Socket : Socket_Type)\n       return   Stream_Access;\n-   --  Associate a stream with a stream-based socket that is already\n-   --  connected.\n+   --  Create a stream associated with a stream-based socket that is\n+   --  already connected.\n \n    function Stream\n      (Socket  : Socket_Type;\n       Send_To : Sock_Addr_Type)\n       return    Stream_Access;\n-   --  Associate a stream with a datagram-based socket that is already\n-   --  bound. Send_To is the socket address to which messages are\n+   --  Create a stream associated with a datagram-based socket that is\n+   --  already bound. Send_To is the socket address to which messages are\n    --  being sent.\n \n    function Get_Address\n@@ -902,6 +902,11 @@ package GNAT.Sockets is\n    --  Return the socket address from which the last message was\n    --  received.\n \n+   procedure Free (Stream : in out Stream_Access);\n+   --  Destroy a stream created by one of the Stream functions above, and\n+   --  release associated resources. The user is responsible for calling\n+   --  this subprogram when the stream is not needed anymore.\n+\n    type Socket_Set_Type is limited private;\n    --  This type allows to manipulate sets of sockets. It allows to\n    --  wait for events on multiple endpoints at one time. This is an"}, {"sha": "a304f10a2cdbaadba2ff6e9eb786fef7198214a6", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 61, "deletions": 17, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=81a5b587efda1d6462869fcbb78379fe99d35351", "patch": "@@ -312,6 +312,11 @@ package body Make is\n    Main_Project : Prj.Project_Id := No_Project;\n    --  The project id of the main project file, if any\n \n+   Project_Object_Directory : Project_Id := No_Project;\n+   --  The object directory of the project for the last compilation.\n+   --  Avoid calling Change_Dir if the current working directory is already\n+   --  this directory\n+\n    --  Packages of project files where unknown attributes are errors.\n \n    Naming_String   : aliased String := \"naming\";\n@@ -344,6 +349,10 @@ package body Make is\n    procedure Add_Object_Directories is\n      new Prj.Env.For_All_Object_Dirs (Action => Add_Object_Dir);\n \n+   procedure Change_To_Object_Directory (Project : Project_Id);\n+   --  Change to the object directory of project Project, if this is not\n+   --  already the current working directory.\n+\n    type Bad_Compilation_Info is record\n       File  : File_Name_Type;\n       Unit  : Unit_Name_Type;\n@@ -1107,6 +1116,36 @@ package body Make is\n       end if;\n    end Bind;\n \n+   --------------------------------\n+   -- Change_To_Object_Directory --\n+   --------------------------------\n+\n+   procedure Change_To_Object_Directory (Project : Project_Id) is\n+   begin\n+      --  Nothing to do if the current working directory is alresdy the one\n+      --  we want.\n+\n+      if Project_Object_Directory /= Project then\n+         Project_Object_Directory := Project;\n+\n+         --  If in a real project, set the working directory to the object\n+         --  directory of the project.\n+\n+         if Project /= No_Project then\n+            Change_Dir\n+              (Get_Name_String (Projects.Table (Project).Object_Directory));\n+\n+         --  Otherwise, for sources outside of any project, set the working\n+         --  directory to the object directory of the main project.\n+\n+         elsif Main_Project /= No_Project then\n+            Change_Dir\n+              (Get_Name_String\n+                 (Projects.Table (Main_Project).Object_Directory));\n+         end if;\n+      end if;\n+   end Change_To_Object_Directory;\n+\n    -----------\n    -- Check --\n    -----------\n@@ -2204,28 +2243,23 @@ package body Make is\n                end;\n             end if;\n \n-            --  Change to the object directory of the project file, if it is\n-            --  not the main project file.\n+            --  Change to the object directory of the project file,\n+            --  if necessary.\n \n-            if Arguments_Project /= Main_Project then\n-               Change_Dir\n-                 (Get_Name_String\n-                    (Projects.Table (Arguments_Project).Object_Directory));\n-            end if;\n+            Change_To_Object_Directory (Arguments_Project);\n \n             Pid := Compile (Arguments_Path_Name, Lib_File,\n                             Arguments (1 .. Last_Argument));\n \n-            --  Change back to the object directory of the main project file,\n-            --  if necessary.\n+         else\n+            --  If this is a source outside of any project file, make sure\n+            --  it will be compiled in the object directory of the main project\n+            --  file.\n \n-            if Arguments_Project /= Main_Project then\n-               Change_Dir\n-                 (Get_Name_String\n-                    (Projects.Table (Main_Project).Object_Directory));\n+            if Main_Project /= No_Project then\n+               Change_To_Object_Directory (Arguments_Project);\n             end if;\n \n-         else\n             Pid := Compile (Full_Source_File, Lib_File,\n                             Arguments (1 .. Last_Argument));\n          end if;\n@@ -3761,9 +3795,8 @@ package body Make is\n          --  project.\n \n          begin\n-            Change_Dir\n-              (Get_Name_String\n-                 (Projects.Table (Main_Project).Object_Directory));\n+            Project_Object_Directory := No_Project;\n+            Change_To_Object_Directory (Main_Project);\n \n          exception\n             when Directory_Error =>\n@@ -4623,6 +4656,13 @@ package body Make is\n             end Recursive_Compilation_Step;\n          end if;\n \n+         --  For binding and linking, we need to be in the object directory of\n+         --  the main project.\n+\n+         if Main_Project /= No_Project then\n+            Change_To_Object_Directory (Main_Project);\n+         end if;\n+\n          --  If we are here, it means that we need to rebuilt the current\n          --  main. So we set Executable_Obsolete to True to make sure that\n          --  the subsequent mains will be rebuilt.\n@@ -5713,6 +5753,10 @@ package body Make is\n          end;\n       end if;\n \n+      --  Make sure no project object directory is recorded\n+\n+      Project_Object_Directory := No_Project;\n+\n       --  Set the marking label to a value that is not zero\n \n       Marking_Label := 1;"}, {"sha": "70fefe57a6264898eade16ac1587a2efb81db379", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=81a5b587efda1d6462869fcbb78379fe99d35351", "patch": "@@ -806,6 +806,42 @@ package body MLib.Prj is\n               (B_Start & Get_Name_String (Data.Library_Name) & \".adb\");\n             Add_Argument (\"-L\" & Get_Name_String (Data.Library_Name));\n \n+            --  Check if Binder'Default_Switches (\"Ada) is defined. If it is,\n+            --  add these switches to call gnatbind.\n+\n+            declare\n+               Binder_Package : constant Package_Id :=\n+                 Value_Of\n+                   (Name        => Name_Binder,\n+                    In_Packages => Data.Decl.Packages);\n+            begin\n+               if Binder_Package /= No_Package then\n+                  declare\n+                     Defaults : constant Array_Element_Id :=\n+                                  Value_Of\n+                                    (Name      => Name_Default_Switches,\n+                                     In_Arrays =>\n+                                       Packages.Table\n+                                         (Binder_Package).Decl.Arrays);\n+                     Switches : Variable_Value :=\n+                                  Value_Of\n+                                    (Index => Name_Ada, In_Array => Defaults);\n+                     Switch : String_List_Id := Nil_String;\n+                  begin\n+                     if not Switches.Default then\n+                        Switch := Switches.Values;\n+\n+                        while Switch /= Nil_String loop\n+                           Add_Argument\n+                             (Get_Name_String\n+                                (String_Elements.Table (Switch).Value));\n+                           Switch := String_Elements.Table (Switch).Next;\n+                        end loop;\n+                     end if;\n+                  end;\n+               end if;\n+            end;\n+\n             --  Get all the ALI files of the project file\n \n             declare"}, {"sha": "ea52af636bf0274be003229d47575e1b67c110a6", "filename": "gcc/ada/output.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Foutput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Foutput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Foutput.adb?ref=81a5b587efda1d6462869fcbb78379fe99d35351", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2003, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -236,10 +236,12 @@ package body Output is\n \n    procedure Write_Char (C : Character) is\n    begin\n-      if Next_Column < Buffer'Length then\n-         Buffer (Natural (Next_Column)) := C;\n-         Next_Column := Next_Column + 1;\n+      if Next_Column = Buffer'Length then\n+         Write_Eol;\n       end if;\n+\n+      Buffer (Natural (Next_Column)) := C;\n+      Next_Column := Next_Column + 1;\n    end Write_Char;\n \n    ---------------"}, {"sha": "6b07f9190af29b98f511b3395e9b1d3879a9cc04", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=81a5b587efda1d6462869fcbb78379fe99d35351", "patch": "@@ -56,6 +56,7 @@ package System.Rident is\n       No_Asynchronous_Control,                 -- (RM D.7(10))\n       No_Calendar,                             -- GNAT\n       No_Delay,                                -- (RM H.4(21))\n+      No_Direct_Boolean_Operators,             -- GNAT\n       No_Dispatch,                             -- (RM H.4(19))\n       No_Dynamic_Interrupts,                   -- GNAT\n       No_Dynamic_Priorities,                   -- (RM D.9(9))"}, {"sha": "ca7ca0fb6c87092d7a686171b4dc62b1e6fa217e", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=81a5b587efda1d6462869fcbb78379fe99d35351", "patch": "@@ -2898,6 +2898,8 @@ package body Sem_Ch13 is\n                Error_Msg_Uint_1 := Asiz;\n                Error_Msg_NE\n                  (\"size for& too small, minimum allowed is ^\", N, T);\n+               Set_Esize   (T, Asiz);\n+               Set_RM_Size (T, Asiz);\n             end if;\n          end;\n \n@@ -2939,6 +2941,8 @@ package body Sem_Ch13 is\n                Error_Msg_Uint_1 := M;\n                Error_Msg_NE\n                  (\"size for& too small, minimum allowed is ^\", N, T);\n+               Set_Esize (T, M);\n+               Set_RM_Size (T, M);\n             else\n                Biased := True;\n             end if;"}, {"sha": "3abdffb80735ecadbe29d5d385ca0efd9d78e72e", "filename": "gcc/ada/sem_ch13.ads", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fsem_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fsem_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.ads?ref=81a5b587efda1d6462869fcbb78379fe99d35351", "patch": "@@ -79,14 +79,17 @@ package Sem_Ch13 is\n       Biased : out Boolean);\n    --  Called when size Siz is specified for subtype T. This subprogram checks\n    --  that the size is appropriate, posting errors on node N as required.\n-   --  For non-elementary types, a check is only made if an explicit size\n-   --  has been given for the type (and the specified size must match). The\n-   --  parameter Biased is set False if the size specified did not require\n+   --  This check is effective for elementary types and bit-packed arrays.\n+   --  For other non-elementary types, a check is only made if an explicit\n+   --  size has been given for the type (and the specified size must match).\n+   --  The parameter Biased is set False if the size specified did not require\n    --  the use of biased representation, and True if biased representation\n    --  was required to meet the size requirement. Note that Biased is only\n    --  set if the type is not currently biased, but biasing it is the only\n    --  way to meet the requirement. If the type is currently biased, then\n    --  this biased size is used in the initial check, and Biased is False.\n+   --  If the size is too small, and an error message is given, then both\n+   --  Esize and RM_Size are reset to the allowed minimum value in T.\n \n    procedure Record_Rep_Item (T : Entity_Id; N : Node_Id);\n    --  N is the node for either a representation pragma or an attribute"}, {"sha": "f74480cb34ceeed76045276dbae1bbdc6709e3f3", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=81a5b587efda1d6462869fcbb78379fe99d35351", "patch": "@@ -3061,14 +3061,21 @@ package body Sem_Ch3 is\n       --  declared in a closed scope (e.g., a subprogram), then we\n       --  need to explicitly introduce the new type's concatenation\n       --  operator since Derive_Subprograms will not inherit the\n-      --  parent's operator.\n+      --  parent's operator. If the parent type is unconstrained, the\n+      --  operator is of the unconstrained base type.\n \n       if Number_Dimensions (Parent_Type) = 1\n         and then not Is_Limited_Type (Parent_Type)\n         and then not Is_Derived_Type (Parent_Type)\n         and then not Is_Package (Scope (Base_Type (Parent_Type)))\n       then\n-         New_Concatenation_Op (Derived_Type);\n+         if not Is_Constrained (Parent_Type)\n+           and then Is_Constrained (Derived_Type)\n+         then\n+            New_Concatenation_Op (Implicit_Base);\n+         else\n+            New_Concatenation_Op (Derived_Type);\n+         end if;\n       end if;\n    end Build_Derived_Array_Type;\n "}, {"sha": "3b95b97c29c873f2e1cafdca19852967a06b1515", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a5b587efda1d6462869fcbb78379fe99d35351/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=81a5b587efda1d6462869fcbb78379fe99d35351", "patch": "@@ -88,6 +88,11 @@ package body Sem_Res is\n    --  Give list of candidate interpretations when a character literal cannot\n    --  be resolved.\n \n+   procedure Check_Direct_Boolean_Op (N : Node_Id);\n+   --  N is a binary operator node which may possibly operate on Boolean\n+   --  operands. If the operator does have Boolean operands, then a call is\n+   --  made to check the restriction No_Direct_Boolean_Operators.\n+\n    procedure Check_Discriminant_Use (N : Node_Id);\n    --  Enforce the restrictions on the use of discriminants when constraining\n    --  a component of a discriminated type (record or concurrent type).\n@@ -342,6 +347,17 @@ package body Sem_Res is\n       end if;\n    end Analyze_And_Resolve;\n \n+   -----------------------------\n+   -- Check_Direct_Boolean_Op --\n+   -----------------------------\n+\n+   procedure Check_Direct_Boolean_Op (N : Node_Id) is\n+   begin\n+      if Root_Type (Etype (Left_Opnd (N))) = Standard_Boolean then\n+         Check_Restriction (No_Direct_Boolean_Operators, N);\n+      end if;\n+   end Check_Direct_Boolean_Op;\n+\n    ----------------------------\n    -- Check_Discriminant_Use --\n    ----------------------------\n@@ -3852,6 +3868,8 @@ package body Sem_Res is\n       T : Entity_Id;\n \n    begin\n+      Check_Direct_Boolean_Op (N);\n+\n       --  If this is an intrinsic operation which is not predefined, use\n       --  the types of its declared arguments to resolve the possibly\n       --  overloaded operands. Otherwise the operands are unambiguous and\n@@ -4591,6 +4609,8 @@ package body Sem_Res is\n    --  Start of processing for Resolve_Equality_Op\n \n    begin\n+      Check_Direct_Boolean_Op (N);\n+\n       Set_Etype (N, Base_Type (Typ));\n       Generate_Reference (T, N, ' ');\n \n@@ -4972,6 +4992,8 @@ package body Sem_Res is\n       B_Typ : Entity_Id;\n \n    begin\n+      Check_Direct_Boolean_Op (N);\n+\n       --  Predefined operations on scalar types yield the base type. On\n       --  the other hand, logical operations on arrays yield the type of\n       --  the arguments (and the context)."}]}