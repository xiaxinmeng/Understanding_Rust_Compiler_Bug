{"sha": "1e813ab6c01a9a4628f991c7a91719e4988c590c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU4MTNhYjZjMDFhOWE0NjI4Zjk5MWM3YTkxNzE5ZTQ5ODhjNTkwYw==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2005-06-16T08:30:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T08:30:00Z"}, "message": "mlib-tgt-mingw.adb (Build_Dynamic_Library): Replace the previous implementation.\n\n2005-06-14  Pascal Obry  <obry@adacore.com>\n\n\t* mlib-tgt-mingw.adb (Build_Dynamic_Library): Replace the previous\n\timplementation. This new version generates the proper DllMain routine\n\tto initialize the SAL. The DllMain is generated in Ada and compiled\n\tbefore being added as option to the library build command.\n\nFrom-SVN: r101019", "tree": {"sha": "7989752290431503f56c42497b2dad143a8c8a93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7989752290431503f56c42497b2dad143a8c8a93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e813ab6c01a9a4628f991c7a91719e4988c590c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e813ab6c01a9a4628f991c7a91719e4988c590c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e813ab6c01a9a4628f991c7a91719e4988c590c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e813ab6c01a9a4628f991c7a91719e4988c590c/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "65b108320e2c468e783b36713d10a3319a2ebc6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65b108320e2c468e783b36713d10a3319a2ebc6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65b108320e2c468e783b36713d10a3319a2ebc6b"}], "stats": {"total": 164, "additions": 150, "deletions": 14}, "files": [{"sha": "185c1329f2cd9403bdc4212ac298ac8016f922c5", "filename": "gcc/ada/mlib-tgt-mingw.adb", "status": "modified", "additions": 150, "deletions": 14, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e813ab6c01a9a4628f991c7a91719e4988c590c/gcc%2Fada%2Fmlib-tgt-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e813ab6c01a9a4628f991c7a91719e4988c590c/gcc%2Fada%2Fmlib-tgt-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-mingw.adb?ref=1e813ab6c01a9a4628f991c7a91719e4988c590c", "patch": "@@ -31,13 +31,15 @@\n --  This is the Windows version of the body. Works only with GCC versions\n --  supporting the \"-shared\" option.\n \n+with Ada.Characters.Handling; use Ada.Characters.Handling;\n+with Ada.Text_IO;             use Ada; use Ada.Text_IO;\n+with GNAT.OS_Lib;             use GNAT.OS_Lib;\n+\n with Namet;  use Namet;\n with Opt;\n with Output; use Output;\n with Prj.Com;\n \n-with GNAT.OS_Lib; use GNAT.OS_Lib;\n-\n with MLib.Fil;\n with MLib.Utl;\n \n@@ -111,7 +113,6 @@ package body MLib.Tgt is\n    is\n       pragma Unreferenced (Foreign);\n       pragma Unreferenced (Afiles);\n-      pragma Unreferenced (Auto_Init);\n       pragma Unreferenced (Symbol_Data);\n       pragma Unreferenced (Interfaces);\n       pragma Unreferenced (Lib_Version);\n@@ -128,12 +129,149 @@ package body MLib.Tgt is\n          Write_Line (Lib_File);\n       end if;\n \n-      Tools.Gcc\n-        (Output_File => Lib_File,\n-         Objects     => Ofiles,\n-         Options     => Tools.No_Argument_List,\n-         Options_2   => Options & Options_2,\n-         Driver_Name => Driver_Name);\n+      --  Generate auto-init routine if in Auto_Init mode\n+\n+      if Auto_Init then\n+         declare\n+            Compile_Only  : aliased String := \"-c\";\n+            GCC           : constant String_Access :=\n+                              Locate_Exec_On_Path (\"gcc.exe\");\n+            Filename      : constant String := To_Lower (Lib_Filename);\n+            Autoinit_Spec : constant String := Filename & \"_autoinit.ads\";\n+            Autoinit_Body : aliased String  := Filename & \"_autoinit.adb\";\n+            Autoinit_Obj  : aliased String  := Filename & \"_autoinit.o\";\n+            Autoinit_Ali  : constant String := Filename & \"_autoinit.ali\";\n+            Init_Proc     : constant String := Lib_Filename & \"init\";\n+            Final_Proc    : constant String := Lib_Filename & \"final\";\n+            Autoinit_Opt  : constant Argument_List :=\n+                              (1 => Autoinit_Obj'Unchecked_Access);\n+            Arguments     : constant Argument_List (1 .. 2) :=\n+                              (Compile_Only'Unchecked_Access,\n+                               Autoinit_Body'Unchecked_Access);\n+            File          : Text_IO.File_Type;\n+            Success       : Boolean;\n+\n+         begin\n+            if Opt.Verbose_Mode then\n+               Write_Str (\"Creating auto-init Ada file \"\"\");\n+               Write_Str (Autoinit_Spec);\n+               Write_Str (\"\"\" and \"\"\");\n+               Write_Str (Autoinit_Body);\n+               Write_Line (\"\"\"\");\n+            end if;\n+\n+            --  Create the spec\n+\n+            Create (File, Out_File, Autoinit_Spec);\n+\n+            Put_Line (File, \"package \" & Lib_Filename & \"_autoinit is\");\n+            New_Line (File);\n+            Put_Line (File, \"   type HINSTANCE is new Integer;\");\n+            Put_Line (File, \"   type DWORD     is new Integer;\");\n+            Put_Line (File, \"   type LPVOID    is new Integer;\");\n+            Put_Line (File, \"   type BOOL      is new Integer;\");\n+            New_Line (File);\n+            Put_Line (File, \"   function DllMain\");\n+            Put_Line (File, \"     (hinstdll    : HINSTANCE;\");\n+            Put_Line (File, \"      fdwreason   : DWORD;\");\n+            Put_Line (File, \"      lpvreserved : LPVOID)\");\n+            Put_Line (File, \"      return BOOL;\");\n+            Put_Line\n+              (File, \"   pragma Export (Stdcall, DllMain, \"\"DllMain\"\");\");\n+            New_Line (File);\n+            Put_Line (File, \"end \" & Lib_Filename & \"_autoinit;\");\n+\n+            Close (File);\n+\n+            --  Create the body\n+\n+            Create (File, Out_File, Autoinit_Body);\n+\n+            Put_Line (File, \"package body \" & Lib_Filename & \"_autoinit is\");\n+            New_Line (File);\n+            Put_Line (File, \"   DLL_PROCESS_DETACH : constant := 0;\");\n+            Put_Line (File, \"   DLL_PROCESS_ATTACH : constant := 1;\");\n+            Put_Line (File, \"   DLL_THREAD_ATTACH  : constant := 2;\");\n+            Put_Line (File, \"   DLL_THREAD_DETACH  : constant := 3;\");\n+            New_Line (File);\n+            Put_Line (File, \"   procedure \" & Init_Proc & \";\");\n+            Put      (File, \"   pragma Import (C, \" & Init_Proc);\n+            Put_Line (File, \", \"\"\" & Init_Proc & \"\"\");\");\n+            New_Line (File);\n+            Put_Line (File, \"   procedure \" & Final_Proc & \";\");\n+            Put      (File, \"   pragma Import (C, \" & Final_Proc);\n+            Put_Line (File, \", \"\"\" & Final_Proc & \"\"\");\");\n+            New_Line (File);\n+            Put_Line (File, \"   function DllMain\");\n+            Put_Line (File, \"     (hinstdll    : HINSTANCE;\");\n+            Put_Line (File, \"      fdwreason   : DWORD;\");\n+            Put_Line (File, \"      lpvreserved : LPVOID)\");\n+            Put_Line (File, \"      return BOOL\");\n+            Put_Line (File, \"   is\");\n+            Put_Line (File, \"      pragma Unreferenced (hinstDLL);\");\n+            Put_Line (File, \"      pragma Unreferenced (lpvReserved);\");\n+            Put_Line (File, \"   begin\");\n+            Put_Line (File, \"      case fdwReason is\");\n+            Put_Line (File, \"         when DLL_PROCESS_ATTACH =>\");\n+            Put_Line (File, \"            \" & Init_Proc & \";\");\n+            Put_Line (File, \"         when DLL_PROCESS_DETACH =>\");\n+            Put_Line (File, \"            \" & Final_Proc & \";\");\n+            Put_Line (File, \"         when DLL_THREAD_ATTACH =>\");\n+            Put_Line (File, \"            null;\");\n+            Put_Line (File, \"         when DLL_THREAD_DETACH =>\");\n+            Put_Line (File, \"            null;\");\n+            Put_Line (File, \"         when others =>\");\n+            Put_Line (File, \"            null;\");\n+            Put_Line (File, \"      end case;\");\n+            Put_Line (File, \"      return 1;\");\n+            Put_Line (File, \"   exception\");\n+            Put_Line (File, \"      when others =>\");\n+            Put_Line (File, \"         return 0;\");\n+            Put_Line (File, \"   end DllMain;\");\n+            New_Line (File);\n+            Put_Line (File, \"end \" & Lib_Filename & \"_autoinit;\");\n+\n+            Close (File);\n+\n+            --  Compile the auto-init file\n+\n+            Spawn (GCC.all, Arguments, Success);\n+\n+            if not Success then\n+               Fail (\"unable to compile the auto-init unit for library \"\"\",\n+                     Lib_Filename, \"\"\"\");\n+            end if;\n+\n+            --  Build the SAL library\n+\n+            Tools.Gcc\n+              (Output_File => Lib_File,\n+               Objects     => Ofiles,\n+               Options     => Tools.No_Argument_List,\n+               Options_2   => Options & Options_2 & Autoinit_Opt,\n+               Driver_Name => Driver_Name);\n+\n+            --  Remove generated files\n+\n+            if Opt.Verbose_Mode then\n+               Write_Str (\"deleting auto-init generated files\");\n+               Write_Eol;\n+            end if;\n+\n+            Delete_File (Autoinit_Spec, Success);\n+            Delete_File (Autoinit_Body, Success);\n+            Delete_File (Autoinit_Obj, Success);\n+            Delete_File (Autoinit_Ali, Success);\n+         end;\n+\n+      else\n+         Tools.Gcc\n+           (Output_File => Lib_File,\n+            Objects     => Ofiles,\n+            Options     => Tools.No_Argument_List,\n+            Options_2   => Options & Options_2,\n+            Driver_Name => Driver_Name);\n+      end if;\n    end Build_Dynamic_Library;\n \n    -------------\n@@ -195,8 +333,7 @@ package body MLib.Tgt is\n    ------------------------\n \n    function Library_Exists_For\n-     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean\n-   is\n+     (Project : Project_Id; In_Tree : Project_Tree_Ref) return Boolean is\n    begin\n       if not In_Tree.Projects.Table (Project).Library then\n          Prj.Com.Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n@@ -235,8 +372,7 @@ package body MLib.Tgt is\n \n    function Library_File_Name_For\n      (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref) return Name_Id\n-   is\n+      In_Tree : Project_Tree_Ref) return Name_Id is\n    begin\n       if not In_Tree.Projects.Table (Project).Library then\n          Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n@@ -291,7 +427,7 @@ package body MLib.Tgt is\n \n    function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n    begin\n-      return False;\n+      return True;\n    end Standalone_Library_Auto_Init_Is_Supported;\n \n    ---------------------------"}]}