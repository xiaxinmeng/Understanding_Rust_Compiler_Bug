{"sha": "c3cbfd33bbe1ece62c196d4658d7264d49552553", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNjYmZkMzNiYmUxZWNlNjJjMTk2ZDQ2NThkNzI2NGQ0OTU1MjU1Mw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-07-08T13:40:03Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-07-08T13:40:03Z"}, "message": "Fix coretypes.h-related dependencies\n\nThe bug fix here is to build/min-insn-modes.o, the rest are related\nclean-ups.\n\n2017-07-08  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\t* Makefile.in (HOOKS_H, RTL_BASE_H, FUNCTION_H, EXPR_H, REGS_H)\n\t(REAL_H): Remove $(MACHMODE_H).\n\t(FIXED_VALUE_H, TREE_CORE_H, CFGLOOP_H): Remove $(MACHMODE_H) and\n\tdouble-int.h.\n\t(CORETYPES_H): Add signop.h, wide-int.h, wide-int-print.h,\n\t$(MACHMODE_H) and double-int.h.\n\t(build/min-insn-modes.o): Depend on $(CORETYPES_H) rather than\n\t$(MACHMODE_H).\n\t(gengtype-state.o, gengtype.o, build/gengtype.o): Don't depend on\n\tdouble-int.h.\n\nFrom-SVN: r250075", "tree": {"sha": "c9d4d789ad3de3eda76c5653409913501d020f09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9d4d789ad3de3eda76c5653409913501d020f09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3cbfd33bbe1ece62c196d4658d7264d49552553", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3cbfd33bbe1ece62c196d4658d7264d49552553", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3cbfd33bbe1ece62c196d4658d7264d49552553", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3cbfd33bbe1ece62c196d4658d7264d49552553/comments", "author": null, "committer": null, "parents": [{"sha": "dcbf81c94423262b09c3f81e5e1fd3c9b999ff2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcbf81c94423262b09c3f81e5e1fd3c9b999ff2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcbf81c94423262b09c3f81e5e1fd3c9b999ff2d"}], "stats": {"total": 44, "additions": 29, "deletions": 15}, "files": [{"sha": "f4ef97306000e3953668887f46234b80febab262", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cbfd33bbe1ece62c196d4658d7264d49552553/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cbfd33bbe1ece62c196d4658d7264d49552553/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3cbfd33bbe1ece62c196d4658d7264d49552553", "patch": "@@ -1,3 +1,16 @@\n+2017-07-08  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* Makefile.in (HOOKS_H, RTL_BASE_H, FUNCTION_H, EXPR_H, REGS_H)\n+\t(REAL_H): Remove $(MACHMODE_H).\n+\t(FIXED_VALUE_H, TREE_CORE_H, CFGLOOP_H): Remove $(MACHMODE_H) and\n+\tdouble-int.h.\n+\t(CORETYPES_H): Add signop.h, wide-int.h, wide-int-print.h,\n+\t$(MACHMODE_H) and double-int.h.\n+\t(build/min-insn-modes.o): Depend on $(CORETYPES_H) rather than\n+\t$(MACHMODE_H).\n+\t(gengtype-state.o, gengtype.o, build/gengtype.o): Don't depend on\n+\tdouble-int.h.\n+\n 2017-07-07  Andrew Pinski  <apinski@cavium.com>\n \n \t* config/aarch64/aarch64.c (aarch_macro_fusion_pair_p): Check"}, {"sha": "efca9169671a9e2fc75e6c74e484d05ff88ebc6f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cbfd33bbe1ece62c196d4658d7264d49552553/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cbfd33bbe1ece62c196d4658d7264d49552553/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=c3cbfd33bbe1ece62c196d4658d7264d49552553", "patch": "@@ -901,17 +901,18 @@ TARGET_H = $(TM_H) target.h $(TARGET_DEF) insn-modes.h insn-codes.h\n C_TARGET_H = c-family/c-target.h $(C_TARGET_DEF)\n COMMON_TARGET_H = common/common-target.h $(INPUT_H) $(COMMON_TARGET_DEF)\n MACHMODE_H = machmode.h mode-classes.def\n-HOOKS_H = hooks.h $(MACHMODE_H)\n+HOOKS_H = hooks.h\n HOSTHOOKS_DEF_H = hosthooks-def.h $(HOOKS_H)\n LANGHOOKS_DEF_H = langhooks-def.h $(HOOKS_H)\n TARGET_DEF_H = target-def.h target-hooks-def.h $(HOOKS_H) targhooks.h\n C_TARGET_DEF_H = c-family/c-target-def.h c-family/c-target-hooks-def.h \\\n   $(TREE_H) $(C_COMMON_H) $(HOOKS_H) common/common-targhooks.h\n-CORETYPES_H = coretypes.h insn-modes.h insn-modes-inline.h\n-RTL_BASE_H = $(CORETYPES_H) rtl.h rtl.def $(MACHMODE_H) reg-notes.def \\\n+CORETYPES_H = coretypes.h insn-modes.h signop.h wide-int.h wide-int-print.h \\\n+  insn-modes-inline.h $(MACHMODE_H) double-int.h\n+RTL_BASE_H = $(CORETYPES_H) rtl.h rtl.def reg-notes.def \\\n   insn-notes.def $(INPUT_H) $(REAL_H) statistics.h $(VEC_H) \\\n   $(FIXED_VALUE_H) alias.h $(HASHTAB_H)\n-FIXED_VALUE_H = fixed-value.h $(MACHMODE_H) double-int.h\n+FIXED_VALUE_H = fixed-value.h\n RTL_H = $(RTL_BASE_H) $(FLAGS_H) genrtl.h\n READ_MD_H = $(OBSTACK_H) $(HASHTAB_H) read-md.h\n PARAMS_H = params.h params-enum.h params.def\n@@ -921,10 +922,10 @@ BUILTINS_DEF = builtins.def sync-builtins.def omp-builtins.def \\\n INTERNAL_FN_DEF = internal-fn.def\n INTERNAL_FN_H = internal-fn.h $(INTERNAL_FN_DEF)\n TREE_CORE_H = tree-core.h $(CORETYPES_H) all-tree.def tree.def \\\n-\tc-family/c-common.def $(lang_tree_files) $(MACHMODE_H) \\\n+\tc-family/c-common.def $(lang_tree_files) \\\n \t$(BUILTINS_DEF) $(INPUT_H) statistics.h \\\n \t$(VEC_H) treestruct.def $(HASHTAB_H) \\\n-\tdouble-int.h alias.h $(SYMTAB_H) $(FLAGS_H) \\\n+\talias.h $(SYMTAB_H) $(FLAGS_H) \\\n \t$(REAL_H) $(FIXED_VALUE_H)\n TREE_H = tree.h $(TREE_CORE_H)  tree-check.h\n REGSET_H = regset.h $(BITMAP_H) hard-reg-set.h\n@@ -939,12 +940,12 @@ EMIT_RTL_H = emit-rtl.h\n FLAGS_H = flags.h flag-types.h $(OPTIONS_H)\n OPTIONS_H = options.h flag-types.h $(OPTIONS_H_EXTRA)\n FUNCTION_H = function.h $(HASHTAB_H) $(TM_H) hard-reg-set.h \\\n-\t$(VEC_H) $(INPUT_H) $(MACHMODE_H)\n-EXPR_H = expr.h insn-config.h $(FUNCTION_H) $(RTL_H) $(FLAGS_H) $(TREE_H) $(MACHMODE_H) $(EMIT_RTL_H)\n+\t$(VEC_H) $(INPUT_H)\n+EXPR_H = expr.h insn-config.h $(FUNCTION_H) $(RTL_H) $(FLAGS_H) $(TREE_H) \\\n+\t$(EMIT_RTL_H)\n OPTABS_H = optabs.h insn-codes.h insn-opinit.h\n-REGS_H = regs.h $(MACHMODE_H) hard-reg-set.h\n-CFGLOOP_H = cfgloop.h $(BASIC_BLOCK_H) double-int.h \\\n-\t$(BITMAP_H) sbitmap.h\n+REGS_H = regs.h hard-reg-set.h\n+CFGLOOP_H = cfgloop.h $(BASIC_BLOCK_H) $(BITMAP_H) sbitmap.h\n IPA_UTILS_H = ipa-utils.h $(TREE_H) $(CGRAPH_H)\n IPA_REFERENCE_H = ipa-reference.h $(BITMAP_H) $(TREE_H)\n CGRAPH_H = cgraph.h $(VEC_H) $(TREE_H) $(BASIC_BLOCK_H) $(FUNCTION_H) \\\n@@ -985,7 +986,7 @@ DIAGNOSTIC_H = diagnostic.h $(DIAGNOSTIC_CORE_H) $(PRETTY_PRINT_H)\n C_PRETTY_PRINT_H = c-family/c-pretty-print.h $(PRETTY_PRINT_H) \\\n \t$(C_COMMON_H) $(TREE_H)\n TREE_INLINE_H = tree-inline.h\n-REAL_H = real.h $(MACHMODE_H)\n+REAL_H = real.h\n LTO_STREAMER_H = lto-streamer.h $(LINKER_PLUGIN_API_H) $(TARGET_H) \\\n \t\t$(CGRAPH_H) $(VEC_H) $(HASH_TABLE_H) $(TREE_H) $(GIMPLE_H) \\\n \t\t$(GCOV_IO_H) $(DIAGNOSTIC_H) alloc-pool.h\n@@ -2642,7 +2643,7 @@ build/gensupport.o: gensupport.c $(BCONFIG_H) $(SYSTEM_H) \t\t\\\n build/ggc-none.o : ggc-none.c $(BCONFIG_H) $(SYSTEM_H) $(CORETYPES_H) \t\\\n   $(GGC_H)\n build/min-insn-modes.o : min-insn-modes.c $(BCONFIG_H) $(SYSTEM_H)\t\\\n-  $(MACHMODE_H)\n+  $(CORETYPES_H)\n build/print-rtl.o: print-rtl.c $(BCONFIG_H) $(SYSTEM_H) $(CORETYPES_H)\t\\\n   $(GTM_H) $(RTL_BASE_H)\n build/read-md.o: read-md.c $(BCONFIG_H) $(SYSTEM_H) $(CORETYPES_H)\t\\\n@@ -2727,12 +2728,12 @@ CFLAGS-gengtype-parse.o += -DHOST_GENERATOR_FILE\n build/gengtype-parse.o: $(BCONFIG_H)\n \n gengtype-state.o build/gengtype-state.o: gengtype-state.c $(SYSTEM_H) \\\n-  gengtype.h errors.h double-int.h version.h $(HASHTAB_H) $(OBSTACK_H) \\\n+  gengtype.h errors.h version.h $(HASHTAB_H) $(OBSTACK_H) \\\n   $(XREGEX_H)\n CFLAGS-gengtype-state.o += -DHOST_GENERATOR_FILE\n build/gengtype-state.o: $(BCONFIG_H)\n gengtype.o build/gengtype.o : gengtype.c $(SYSTEM_H) gengtype.h \t\\\n-  rtl.def insn-notes.def errors.h double-int.h version.h     \t\t\\\n+  rtl.def insn-notes.def errors.h version.h     \t\t\\\n   $(HASHTAB_H) $(OBSTACK_H) $(XREGEX_H)\n CFLAGS-gengtype.o += -DHOST_GENERATOR_FILE\n build/gengtype.o: $(BCONFIG_H)"}]}