{"sha": "5bc2042df437cd8aeebcdf5bbb858678e3733ca4", "node_id": "C_kwDOANBUbNoAKDViYzIwNDJkZjQzN2NkOGFlZWJjZGY1YmJiODU4Njc4ZTM3MzNjYTQ", "commit": {"author": {"name": "Keef Aragon", "email": "keef.aragon@konscious.net", "date": "2022-08-17T06:45:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-17T08:40:01Z"}, "message": "Fix bug in emergency cxa pool free\n\nThis probably has never actually affected anyone in practice. The normal\nABI implementation just uses malloc and only falls back to the pool on\nmalloc failure. But if that happens a bunch of times the freelist gets out\nof order which violates some of the invariants of the freelist (as well as\nthe comments that follow the bug). The bug is just a comparison reversal\nwhen traversing the freelist in the case where the pointer being returned\nto the pool is after the existing freelist.\n\nlibstdc++-v3/\n\t* libsupc++/eh_alloc.cc (pool::free): Inverse comparison.", "tree": {"sha": "2a247a8ba1bfc58c4b154a41acf898b75378ace4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a247a8ba1bfc58c4b154a41acf898b75378ace4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bc2042df437cd8aeebcdf5bbb858678e3733ca4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bc2042df437cd8aeebcdf5bbb858678e3733ca4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bc2042df437cd8aeebcdf5bbb858678e3733ca4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bc2042df437cd8aeebcdf5bbb858678e3733ca4/comments", "author": {"login": "kmaragon", "id": 5015405, "node_id": "MDQ6VXNlcjUwMTU0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5015405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmaragon", "html_url": "https://github.com/kmaragon", "followers_url": "https://api.github.com/users/kmaragon/followers", "following_url": "https://api.github.com/users/kmaragon/following{/other_user}", "gists_url": "https://api.github.com/users/kmaragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmaragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmaragon/subscriptions", "organizations_url": "https://api.github.com/users/kmaragon/orgs", "repos_url": "https://api.github.com/users/kmaragon/repos", "events_url": "https://api.github.com/users/kmaragon/events{/privacy}", "received_events_url": "https://api.github.com/users/kmaragon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cab897a67af120aa18efa7ddd7ee49b9a29e5dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cab897a67af120aa18efa7ddd7ee49b9a29e5dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cab897a67af120aa18efa7ddd7ee49b9a29e5dd"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "68f319869f9b42cadcf8559801639b467d5d864f", "filename": "libstdc++-v3/libsupc++/eh_alloc.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc2042df437cd8aeebcdf5bbb858678e3733ca4/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc2042df437cd8aeebcdf5bbb858678e3733ca4/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc?ref=5bc2042df437cd8aeebcdf5bbb858678e3733ca4", "patch": "@@ -224,8 +224,8 @@ namespace\n \t  free_entry **fe;\n \t  for (fe = &first_free_entry;\n \t       (*fe)->next\n-\t       && (reinterpret_cast <char *> ((*fe)->next)\n-\t\t   > reinterpret_cast <char *> (e) + sz);\n+\t       && (reinterpret_cast <char *> (e) + sz\n+\t\t   > reinterpret_cast <char *> ((*fe)->next));\n \t       fe = &(*fe)->next)\n \t    ;\n \t  // If we can merge the next block into us do so and continue"}]}