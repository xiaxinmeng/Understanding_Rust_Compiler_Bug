{"sha": "28fffc452eedb284d047b83adc7f8772b15bb0f8", "node_id": "C_kwDOANBUbNoAKDI4ZmZmYzQ1MmVlZGIyODRkMDQ3YjgzYWRjN2Y4NzcyYjE1YmIwZjg", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-01-12T09:44:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-09T09:27:32Z"}, "message": "[Ada] Refine description of SPARK with static Boolean expressions\n\nA number of SPARK pragmas controlled by an optional Boolean expression\nrequire those expressions to be static. This is now clarified in the\nGNAT RM.\n\ngcc/ada/\n\n\t* doc/gnat_rm/implementation_defined_pragmas.rst\n\t(Abstract_State, Async_Readers, Async_Writers,\n\tConstant_After_Elaboration, Effective_Reads, Effective_Writes,\n\tExtensions_Visible, Ghost, No_Caching, Volatile_Function): Only\n\tstatic Boolean expressions are allowed.\n\t* gnat_rm.texi: Regenerate.", "tree": {"sha": "f0fcb91bc61d880e124e5244909a47c97ef95492", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0fcb91bc61d880e124e5244909a47c97ef95492"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28fffc452eedb284d047b83adc7f8772b15bb0f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28fffc452eedb284d047b83adc7f8772b15bb0f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28fffc452eedb284d047b83adc7f8772b15bb0f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28fffc452eedb284d047b83adc7f8772b15bb0f8/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93e7c91eb7744b832df14a7afca45906ed3c580f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93e7c91eb7744b832df14a7afca45906ed3c580f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93e7c91eb7744b832df14a7afca45906ed3c580f"}], "stats": {"total": 56, "additions": 28, "deletions": 28}, "files": [{"sha": "25bfbc7ad21d2ef5711afa79ec3612226d151dd6", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_pragmas.rst", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28fffc452eedb284d047b83adc7f8772b15bb0f8/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28fffc452eedb284d047b83adc7f8772b15bb0f8/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst?ref=28fffc452eedb284d047b83adc7f8772b15bb0f8", "patch": "@@ -90,11 +90,11 @@ Syntax:\n     | (EXTERNAL_PROPERTY {, EXTERNAL_PROPERTY} )\n \n   EXTERNAL_PROPERTY ::=\n-      Async_Readers    [=> boolean_EXPRESSION]\n-    | Async_Writers    [=> boolean_EXPRESSION]\n-    | Effective_Reads  [=> boolean_EXPRESSION]\n-    | Effective_Writes [=> boolean_EXPRESSION]\n-      others            => boolean_EXPRESSION\n+      Async_Readers    [=> static_boolean_EXPRESSION]\n+    | Async_Writers    [=> static_boolean_EXPRESSION]\n+    | Effective_Reads  [=> static_boolean_EXPRESSION]\n+    | Effective_Writes [=> static_boolean_EXPRESSION]\n+      others            => static_boolean_EXPRESSION\n \n   STATE_NAME ::= defining_identifier\n \n@@ -600,7 +600,7 @@ Syntax:\n \n .. code-block:: ada\n \n-  pragma Async_Readers [ (boolean_EXPRESSION) ];\n+  pragma Async_Readers [ (static_boolean_EXPRESSION) ];\n \n For the semantics of this pragma, see the entry for aspect ``Async_Readers`` in\n the SPARK 2014 Reference Manual, section 7.1.2.\n@@ -614,7 +614,7 @@ Syntax:\n \n .. code-block:: ada\n \n-  pragma Async_Writers [ (boolean_EXPRESSION) ];\n+  pragma Async_Writers [ (static_boolean_EXPRESSION) ];\n \n For the semantics of this pragma, see the entry for aspect ``Async_Writers`` in\n the SPARK 2014 Reference Manual, section 7.1.2.\n@@ -1132,7 +1132,7 @@ Syntax:\n \n .. code-block:: ada\n \n-  pragma Constant_After_Elaboration [ (boolean_EXPRESSION) ];\n+  pragma Constant_After_Elaboration [ (static_boolean_EXPRESSION) ];\n \n For the semantics of this pragma, see the entry for aspect\n ``Constant_After_Elaboration`` in the SPARK 2014 Reference Manual, section 3.3.1.\n@@ -1656,7 +1656,7 @@ Syntax:\n \n .. code-block:: ada\n \n-  pragma Effective_Reads [ (boolean_EXPRESSION) ];\n+  pragma Effective_Reads [ (static_boolean_EXPRESSION) ];\n \n For the semantics of this pragma, see the entry for aspect ``Effective_Reads`` in\n the SPARK 2014 Reference Manual, section 7.1.2.\n@@ -1670,7 +1670,7 @@ Syntax:\n \n .. code-block:: ada\n \n-  pragma Effective_Writes [ (boolean_EXPRESSION) ];\n+  pragma Effective_Writes [ (static_boolean_EXPRESSION) ];\n \n For the semantics of this pragma, see the entry for aspect ``Effective_Writes``\n in the SPARK 2014 Reference Manual, section 7.1.2.\n@@ -2401,7 +2401,7 @@ Syntax:\n \n .. code-block:: ada\n \n-  pragma Extensions_Visible [ (boolean_EXPRESSION) ];\n+  pragma Extensions_Visible [ (static_boolean_EXPRESSION) ];\n \n For the semantics of this pragma, see the entry for aspect ``Extensions_Visible``\n in the SPARK 2014 Reference Manual, section 6.1.7.\n@@ -2615,7 +2615,7 @@ Syntax:\n \n .. code-block:: ada\n \n-  pragma Ghost [ (boolean_EXPRESSION) ];\n+  pragma Ghost [ (static_boolean_EXPRESSION) ];\n \n For the semantics of this pragma, see the entry for aspect ``Ghost`` in the SPARK\n 2014 Reference Manual, section 6.9.\n@@ -3969,7 +3969,7 @@ Syntax:\n \n .. code-block:: ada\n \n-  pragma No_Caching [ (boolean_EXPRESSION) ];\n+  pragma No_Caching [ (static_boolean_EXPRESSION) ];\n \n For the semantics of this pragma, see the entry for aspect ``No_Caching`` in\n the SPARK 2014 Reference Manual, section 7.1.2.\n@@ -7430,7 +7430,7 @@ Syntax:\n \n .. code-block:: ada\n \n-  pragma Volatile_Function [ (boolean_EXPRESSION) ];\n+  pragma Volatile_Function [ (static_boolean_EXPRESSION) ];\n \n For the semantics of this pragma, see the entry for aspect ``Volatile_Function``\n in the SPARK 2014 Reference Manual, section 7.1.2."}, {"sha": "495c13db04439dc56c963cc86a4600492189e2ca", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28fffc452eedb284d047b83adc7f8772b15bb0f8/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28fffc452eedb284d047b83adc7f8772b15bb0f8/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=28fffc452eedb284d047b83adc7f8772b15bb0f8", "patch": "@@ -1457,11 +1457,11 @@ EXTERNAL_PROPERTY_LIST ::=\n   | (EXTERNAL_PROPERTY @{, EXTERNAL_PROPERTY@} )\n \n EXTERNAL_PROPERTY ::=\n-    Async_Readers    [=> boolean_EXPRESSION]\n-  | Async_Writers    [=> boolean_EXPRESSION]\n-  | Effective_Reads  [=> boolean_EXPRESSION]\n-  | Effective_Writes [=> boolean_EXPRESSION]\n-    others            => boolean_EXPRESSION\n+    Async_Readers    [=> static_boolean_EXPRESSION]\n+  | Async_Writers    [=> static_boolean_EXPRESSION]\n+  | Effective_Reads  [=> static_boolean_EXPRESSION]\n+  | Effective_Writes [=> static_boolean_EXPRESSION]\n+    others            => static_boolean_EXPRESSION\n \n STATE_NAME ::= defining_identifier\n \n@@ -1983,7 +1983,7 @@ case, and it is recommended that these two options not be used together.\n Syntax:\n \n @example\n-pragma Async_Readers [ (boolean_EXPRESSION) ];\n+pragma Async_Readers [ (static_boolean_EXPRESSION) ];\n @end example\n \n For the semantics of this pragma, see the entry for aspect @code{Async_Readers} in\n@@ -1997,7 +1997,7 @@ the SPARK 2014 Reference Manual, section 7.1.2.\n Syntax:\n \n @example\n-pragma Async_Writers [ (boolean_EXPRESSION) ];\n+pragma Async_Writers [ (static_boolean_EXPRESSION) ];\n @end example\n \n For the semantics of this pragma, see the entry for aspect @code{Async_Writers} in\n@@ -2533,7 +2533,7 @@ clause), the GNAT uses the default alignment as described previously.\n Syntax:\n \n @example\n-pragma Constant_After_Elaboration [ (boolean_EXPRESSION) ];\n+pragma Constant_After_Elaboration [ (static_boolean_EXPRESSION) ];\n @end example\n \n For the semantics of this pragma, see the entry for aspect\n@@ -3060,7 +3060,7 @@ See Ada 2012 Reference Manual for details.\n Syntax:\n \n @example\n-pragma Effective_Reads [ (boolean_EXPRESSION) ];\n+pragma Effective_Reads [ (static_boolean_EXPRESSION) ];\n @end example\n \n For the semantics of this pragma, see the entry for aspect @code{Effective_Reads} in\n@@ -3074,7 +3074,7 @@ the SPARK 2014 Reference Manual, section 7.1.2.\n Syntax:\n \n @example\n-pragma Effective_Writes [ (boolean_EXPRESSION) ];\n+pragma Effective_Writes [ (static_boolean_EXPRESSION) ];\n @end example\n \n For the semantics of this pragma, see the entry for aspect @code{Effective_Writes}\n@@ -3852,7 +3852,7 @@ end Stacks;\n Syntax:\n \n @example\n-pragma Extensions_Visible [ (boolean_EXPRESSION) ];\n+pragma Extensions_Visible [ (static_boolean_EXPRESSION) ];\n @end example\n \n For the semantics of this pragma, see the entry for aspect @code{Extensions_Visible}\n@@ -4079,7 +4079,7 @@ No other value of digits is permitted.\n Syntax:\n \n @example\n-pragma Ghost [ (boolean_EXPRESSION) ];\n+pragma Ghost [ (static_boolean_EXPRESSION) ];\n @end example\n \n For the semantics of this pragma, see the entry for aspect @code{Ghost} in the SPARK\n@@ -5485,7 +5485,7 @@ earlier versions of the package body.\n Syntax:\n \n @example\n-pragma No_Caching [ (boolean_EXPRESSION) ];\n+pragma No_Caching [ (static_boolean_EXPRESSION) ];\n @end example\n \n For the semantics of this pragma, see the entry for aspect @code{No_Caching} in\n@@ -8948,7 +8948,7 @@ access only part of the object in this case.\n Syntax:\n \n @example\n-pragma Volatile_Function [ (boolean_EXPRESSION) ];\n+pragma Volatile_Function [ (static_boolean_EXPRESSION) ];\n @end example\n \n For the semantics of this pragma, see the entry for aspect @code{Volatile_Function}"}]}