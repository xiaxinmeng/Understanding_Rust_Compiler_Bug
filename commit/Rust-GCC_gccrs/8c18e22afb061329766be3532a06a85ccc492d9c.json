{"sha": "8c18e22afb061329766be3532a06a85ccc492d9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMxOGUyMmFmYjA2MTMyOTc2NmJlMzUzMmEwNmE4NWNjYzQ5MmQ5Yw==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2020-12-05T18:26:24Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2020-12-05T18:26:24Z"}, "message": "VAX: Correct fatal issues with the `ffs' builtin\n\nThe `builtins.md' machine description fragment is not included anywhere\nand is therefore dead code, which has become bitrotten due to non-use.\n\nIf actually enabled, it does not build due to the use of an unknown `t'\nconstraint:\n\n.../gcc/config/vax/builtins.md:42:1: error: undefined machine-specific constraint at this point: \"t\"\n.../gcc/config/vax/builtins.md:42:1: note:  in operand 1\n\nwhich came from commit becb93d02cc1 (\"builtins.md (ffssi2_internal):\nCorrect constraint.\"), which was not applied as posted and reviewed; `T'\nwas meant to be used instead.\n\nOnce this has been fixed this code still fails building:\n\n.../gcc/config/vax/builtins.md: In function 'rtx_def* gen_ffssi2(rtx, rtx)':\n.../gcc/config/vax/builtins.md:35:19: error: 'gen_bne' was not declared in this\nscope; did you mean 'gen_use'?\n   35 |   emit_jump_insn (gen_bne (label));\n      |                   ^~~~~~~\n      |                   gen_use\nmake[2]: *** [Makefile:1122: insn-emit.o] Error 1\n\nFinally the FFS machine instruction sets the Z condition code according\nto the comparison of the value held in the source operand against zero\nrather than the value held in the target operand.  If the source operand\nis found hold zero, then the target operand is set to the width of the\nsource operand, 32 for SImode (FFS supports arbitrary widths).\n\nCorrect the build issues then and update RTL to match the operation of\nthe machine instruction.  A test case will be added separately.\n\n\tgcc/\n\t* config/vax/builtins.md (ffssi2): Make preparation statements\n\tactually buildable.\n\t(ffssi2_internal): Fix input constraints; make the RTL pattern\n\tmatch reality for `cc0'.", "tree": {"sha": "255969031c87a1ff0e309ee58c6db5a7a0dda8e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/255969031c87a1ff0e309ee58c6db5a7a0dda8e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c18e22afb061329766be3532a06a85ccc492d9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c18e22afb061329766be3532a06a85ccc492d9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c18e22afb061329766be3532a06a85ccc492d9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c18e22afb061329766be3532a06a85ccc492d9c/comments", "author": null, "committer": null, "parents": [{"sha": "dfb21f37fde4f9e11e9b3b6b6ea6dc9d5fbed644", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfb21f37fde4f9e11e9b3b6b6ea6dc9d5fbed644", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfb21f37fde4f9e11e9b3b6b6ea6dc9d5fbed644"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "6bce7a85add02aaaea95a9201cdce08f24c4c97c", "filename": "gcc/config/vax/builtins.md", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c18e22afb061329766be3532a06a85ccc492d9c/gcc%2Fconfig%2Fvax%2Fbuiltins.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c18e22afb061329766be3532a06a85ccc492d9c/gcc%2Fconfig%2Fvax%2Fbuiltins.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fbuiltins.md?ref=8c18e22afb061329766be3532a06a85ccc492d9c", "patch": "@@ -31,8 +31,12 @@\n   \"\n {\n   rtx label = gen_label_rtx ();\n+  rtx label_ref = gen_rtx_LABEL_REF (VOIDmode, label);\n+  rtx cond = gen_rtx_NE (VOIDmode, cc0_rtx, const0_rtx);\n+  rtx target = gen_rtx_IF_THEN_ELSE (VOIDmode, cond, label_ref, pc_rtx);\n+\n   emit_insn (gen_ffssi2_internal (operands[0], operands[1]));\n-  emit_jump_insn (gen_bne (label));\n+  emit_jump_insn (gen_rtx_SET (pc_rtx, target));\n   emit_insn (gen_negsi2 (operands[0], const1_rtx));\n   emit_label (label);\n   emit_insn (gen_addsi3 (operands[0], operands[0], const1_rtx));\n@@ -41,8 +45,10 @@\n \n (define_insn \"ffssi2_internal\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=rQ\")\n-\t(ffs:SI (match_operand:SI 1 \"general_operand\" \"nrQt\")))\n-   (set (cc0) (match_dup 0))]\n+\t(ffs:SI (match_operand:SI 1 \"general_operand\" \"nrQT\")))\n+   (set (cc0)\n+\t(compare (match_dup 1)\n+\t\t (const_int 0)))]\n   \"\"\n   \"ffs $0,$32,%1,%0\")\n "}]}