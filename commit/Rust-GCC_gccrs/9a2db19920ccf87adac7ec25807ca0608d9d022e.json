{"sha": "9a2db19920ccf87adac7ec25807ca0608d9d022e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWEyZGIxOTkyMGNjZjg3YWRhYzdlYzI1ODA3Y2EwNjA4ZDlkMDIyZQ==", "commit": {"author": {"name": "Evgeny Stupachenko", "email": "evstupac@gmail.com", "date": "2014-10-31T13:30:06Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2014-10-31T13:30:06Z"}, "message": "re PR target/63534 (Bootstrap failure on x86_64/i686-linux)\n\ngcc/\n\n\tPR target/63534\n\t* config/i386/i386.c (ix86_init_pic_reg): Emit SET_GOT to\n\tREAL_PIC_OFFSET_TABLE_REGNUM for mcount profiling.\n\t(ix86_save_reg): Save REAL_PIC_OFFSET_TABLE_REGNUM when profiling\n\tusing mcount in 32bit PIC mode.\n\t(ix86_elim_entry_set_got): New.\n\t(ix86_expand_prologue): For the mcount profiling emit new SET_GOT\n\tin PROLOGUE, delete initial if possible.\n\ngcc/testsuite/\n\n\tPR target/63534\n\t* gcc.target/i386/mcount_pic.c: New.\n\nFrom-SVN: r216975", "tree": {"sha": "faa0a80a8c3e2c8b636f651c7f2a8d46a39e61c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faa0a80a8c3e2c8b636f651c7f2a8d46a39e61c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a2db19920ccf87adac7ec25807ca0608d9d022e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a2db19920ccf87adac7ec25807ca0608d9d022e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a2db19920ccf87adac7ec25807ca0608d9d022e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a2db19920ccf87adac7ec25807ca0608d9d022e/comments", "author": {"login": "evstupac", "id": 38332307, "node_id": "MDQ6VXNlcjM4MzMyMzA3", "avatar_url": "https://avatars.githubusercontent.com/u/38332307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evstupac", "html_url": "https://github.com/evstupac", "followers_url": "https://api.github.com/users/evstupac/followers", "following_url": "https://api.github.com/users/evstupac/following{/other_user}", "gists_url": "https://api.github.com/users/evstupac/gists{/gist_id}", "starred_url": "https://api.github.com/users/evstupac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evstupac/subscriptions", "organizations_url": "https://api.github.com/users/evstupac/orgs", "repos_url": "https://api.github.com/users/evstupac/repos", "events_url": "https://api.github.com/users/evstupac/events{/privacy}", "received_events_url": "https://api.github.com/users/evstupac/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bae83890e2d8b168f7503acd2df9a460fd5443a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae83890e2d8b168f7503acd2df9a460fd5443a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bae83890e2d8b168f7503acd2df9a460fd5443a3"}], "stats": {"total": 103, "additions": 93, "deletions": 10}, "files": [{"sha": "ae60aef8555508cb3148d614d785c9b96abd059e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a2db19920ccf87adac7ec25807ca0608d9d022e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a2db19920ccf87adac7ec25807ca0608d9d022e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a2db19920ccf87adac7ec25807ca0608d9d022e", "patch": "@@ -1,3 +1,14 @@\n+2014-10-31  Evgeny Stupachenko  <evstupac@gmail.com>\n+\n+\tPR target/63534\n+\t* config/i386/i386.c (ix86_init_pic_reg): Emit SET_GOT to\n+\tREAL_PIC_OFFSET_TABLE_REGNUM for mcount profiling.\n+\t(ix86_save_reg): Save REAL_PIC_OFFSET_TABLE_REGNUM when profiling\n+\tusing mcount in 32bit PIC mode.\n+\t(ix86_elim_entry_set_got): New.\n+\t(ix86_expand_prologue): For the mcount profiling emit new SET_GOT\n+\tin PROLOGUE, delete initial if possible.\n+\n 2014-10-31  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* ipa-inline.c (want_inline_small_function_p): Fix typo and formatting."}, {"sha": "9b224456f7d2b4e253e93ade2348516d214190bc", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 62, "deletions": 10, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a2db19920ccf87adac7ec25807ca0608d9d022e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a2db19920ccf87adac7ec25807ca0608d9d022e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9a2db19920ccf87adac7ec25807ca0608d9d022e", "patch": "@@ -6205,8 +6205,15 @@ ix86_init_pic_reg (void)\n     }\n   else\n     {\n-      rtx insn = emit_insn (gen_set_got (pic_offset_table_rtx));\n+      /*  If there is future mcount call in the function it is more profitable\n+\t  to emit SET_GOT into ABI defined REAL_PIC_OFFSET_TABLE_REGNUM.  */\n+      rtx reg = crtl->profile\n+\t\t? gen_rtx_REG (Pmode, REAL_PIC_OFFSET_TABLE_REGNUM)\n+\t\t: pic_offset_table_rtx;\n+      rtx insn = emit_insn (gen_set_got (reg));\n       RTX_FRAME_RELATED_P (insn) = 1;\n+      if (crtl->profile)\n+        emit_move_insn (pic_offset_table_rtx, reg);\n       add_reg_note (insn, REG_CFA_FLUSH_QUEUE, NULL_RTX);\n     }\n \n@@ -9486,15 +9493,23 @@ ix86_select_alt_pic_regnum (void)\n static bool\n ix86_save_reg (unsigned int regno, bool maybe_eh_return)\n {\n-  if (pic_offset_table_rtx\n-      && !ix86_use_pseudo_pic_reg ()\n-      && regno == REAL_PIC_OFFSET_TABLE_REGNUM\n-      && (df_regs_ever_live_p (REAL_PIC_OFFSET_TABLE_REGNUM)\n-\t  || crtl->profile\n-\t  || crtl->calls_eh_return\n-\t  || crtl->uses_const_pool\n-\t  || cfun->has_nonlocal_label))\n-    return ix86_select_alt_pic_regnum () == INVALID_REGNUM;\n+  if (regno == REAL_PIC_OFFSET_TABLE_REGNUM\n+      && pic_offset_table_rtx)\n+    {\n+      if (ix86_use_pseudo_pic_reg ())\n+\t{\n+\t  /* REAL_PIC_OFFSET_TABLE_REGNUM used by call to\n+\t  _mcount in prologue.  */\n+\t  if (!TARGET_64BIT && flag_pic && crtl->profile)\n+\t    return true;\n+\t}\n+      else if (df_regs_ever_live_p (REAL_PIC_OFFSET_TABLE_REGNUM)\n+\t       || crtl->profile\n+\t       || crtl->calls_eh_return\n+\t       || crtl->uses_const_pool\n+\t       || cfun->has_nonlocal_label)\n+        return ix86_select_alt_pic_regnum () == INVALID_REGNUM;\n+    }\n \n   if (crtl->calls_eh_return && maybe_eh_return)\n     {\n@@ -10833,6 +10848,29 @@ ix86_finalize_stack_realign_flags (void)\n   crtl->stack_realign_finalized = true;\n }\n \n+/* Delete SET_GOT right after entry block if it is allocated to reg.  */\n+\n+static void\n+ix86_elim_entry_set_got (rtx reg)\n+{\n+  basic_block bb = ENTRY_BLOCK_PTR_FOR_FN (cfun)->next_bb;\n+  rtx_insn *c_insn = BB_HEAD (bb);\n+  if (!NONDEBUG_INSN_P (c_insn))\n+    c_insn = next_nonnote_nondebug_insn (c_insn);\n+  if (c_insn && NONJUMP_INSN_P (c_insn))\n+    {\n+      rtx pat = PATTERN (c_insn);\n+      if (GET_CODE (pat) == PARALLEL)\n+\t{\n+\t  rtx vec = XVECEXP (pat, 0, 0);\n+\t  if (GET_CODE (vec) == SET\n+\t      && XINT (XEXP (vec, 1), 1) == UNSPEC_SET_GOT\n+\t      && REGNO (XEXP (vec, 0)) == REGNO (reg))\n+\t    delete_insn (c_insn);\n+\t}\n+    }\n+}\n+\n /* Expand the prologue into a bunch of separate insns.  */\n \n void\n@@ -11286,6 +11324,20 @@ ix86_expand_prologue (void)\n   if (!sse_registers_saved)\n     ix86_emit_save_sse_regs_using_mov (frame.sse_reg_save_offset);\n \n+  /* For the mcount profiling on 32 bit PIC mode we need to emit SET_GOT\n+     in PROLOGUE.  */\n+  if (!TARGET_64BIT && pic_offset_table_rtx && crtl->profile && !flag_fentry)\n+    {\n+      rtx pic = gen_rtx_REG (Pmode, REAL_PIC_OFFSET_TABLE_REGNUM);\n+      insn = emit_insn (gen_set_got (pic));\n+      RTX_FRAME_RELATED_P (insn) = 1;\n+      add_reg_note (insn, REG_CFA_FLUSH_QUEUE, NULL_RTX);\n+      emit_insn (gen_prologue_use (pic));\n+      /* Deleting already emmitted SET_GOT if exist and allocated to\n+\t REAL_PIC_OFFSET_TABLE_REGNUM.  */\n+      ix86_elim_entry_set_got (pic);\n+    }\n+\n   if (crtl->drap_reg && !crtl->stack_realign_needed)\n     {\n       /* vDRAP is setup but after reload it turns out stack realign"}, {"sha": "719986cd04562beec6a7d87e4d760857c97efd44", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a2db19920ccf87adac7ec25807ca0608d9d022e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a2db19920ccf87adac7ec25807ca0608d9d022e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9a2db19920ccf87adac7ec25807ca0608d9d022e", "patch": "@@ -1,3 +1,8 @@\n+2014-10-31  Evgeny Stupachenko  <evstupac@gmail.com>\n+\n+\tPR target/63534\n+\t* gcc.target/i386/mcount_pic.c: New.\n+\n 2014-10-31  Evgeny Stupachenko  <evstupac@gmail.com>\n \n \t* gcc.target/i386/pr23098.c: Remove xfail."}, {"sha": "6132cdf25f88a2a9912445987a48e3e3cf269f0b", "filename": "gcc/testsuite/gcc.target/i386/mcount_pic.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a2db19920ccf87adac7ec25807ca0608d9d022e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmcount_pic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a2db19920ccf87adac7ec25807ca0608d9d022e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmcount_pic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmcount_pic.c?ref=9a2db19920ccf87adac7ec25807ca0608d9d022e", "patch": "@@ -0,0 +1,15 @@\n+/* PR target/63534 */\n+/* Check correct mcount generation.  */\n+/* { dg-do run } */\n+/* { dg-require-effective-target fpic } */\n+/* { dg-require-effective-target ia32 } */\n+/* { dg-options \"-O2 -fpic -p -save-temps\" } */\n+\n+int main ()\n+{\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler \"mcount\" } } */\n+/* { dg-final { scan-assembler \"get_pc_thunk\" } } */\n+/* { dg-final { cleanup-saved-temps } } */"}]}