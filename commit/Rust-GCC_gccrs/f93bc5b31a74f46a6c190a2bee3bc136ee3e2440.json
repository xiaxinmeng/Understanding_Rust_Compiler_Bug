{"sha": "f93bc5b31a74f46a6c190a2bee3bc136ee3e2440", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkzYmM1YjMxYTc0ZjQ2YTZjMTkwYTJiZWUzYmMxMzZlZTNlMjQ0MA==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@vnet.ibm.com", "date": "2014-05-05T01:52:30Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2014-05-05T01:52:30Z"}, "message": "rs6000.h (RS6000_BTM_HARD_FLOAT): New define.\n\ngcc/\n\t* config/rs6000/rs6000.h (RS6000_BTM_HARD_FLOAT): New define.\n\t(RS6000_BTM_COMMON): Add RS6000_BTM_HARD_FLOAT.\n\t(TARGET_EXTRA_BUILTINS): Add TARGET_HARD_FLOAT.\n\t* config/rs6000/rs6000-builtin.def (BU_MISC_1):\n\tUse RS6000_BTM_HARD_FLOAT.\n\t(BU_MISC_2): Likewise.\n\t* config/rs6000/rs6000.c (rs6000_builtin_mask_calculate): Handle\n\tRS6000_BTM_HARD_FLOAT.\n\t(rs6000_option_override_internal): Enforce -mhard-float if -mhard-dfp\n\tis explicitly used.\n\t(rs6000_invalid_builtin): Add hard floating builtin support.\n\t(rs6000_expand_builtin): Relax the gcc_assert to allow the new\n\thard float builtins.\n\t(rs6000_builtin_mask_names): Add RS6000_BTM_HARD_FLOAT.\n\ngcc/testsuite/\n\t* gcc.target/powerpc/pack02.c (dg-options): Add -mhard-float.\n\t(dg-require-effective-target): Change target to powerpc_fprs.\n\t* gcc.target/powerpc/pack03.c (dg-options): Add -mhard-dfp.\n\t(dg-require-effective-target): Change target to dfprt.\n\nFrom-SVN: r210054", "tree": {"sha": "7354e92997abb72e8a2110b41d41854be156cb6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7354e92997abb72e8a2110b41d41854be156cb6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b89184027ec28c59bee9e2d3afb352170c378487", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b89184027ec28c59bee9e2d3afb352170c378487", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b89184027ec28c59bee9e2d3afb352170c378487"}], "stats": {"total": 61, "additions": 51, "deletions": 10}, "files": [{"sha": "9f374f15daa79a07291119cbcb318120a7ce650d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f93bc5b31a74f46a6c190a2bee3bc136ee3e2440", "patch": "@@ -1,3 +1,20 @@\n+2014-05-04  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.h (RS6000_BTM_HARD_FLOAT): New define.\n+\t(RS6000_BTM_COMMON): Add RS6000_BTM_HARD_FLOAT.\n+\t(TARGET_EXTRA_BUILTINS): Add TARGET_HARD_FLOAT.\n+\t* config/rs6000/rs6000-builtin.def (BU_MISC_1):\n+\tUse RS6000_BTM_HARD_FLOAT.\n+\t(BU_MISC_2): Likewise.\n+\t* config/rs6000/rs6000.c (rs6000_builtin_mask_calculate): Handle\n+\tRS6000_BTM_HARD_FLOAT.\n+\t(rs6000_option_override_internal): Enforce -mhard-float if -mhard-dfp\n+\tis explicitly used.\n+\t(rs6000_invalid_builtin): Add hard floating builtin support.\n+\t(rs6000_expand_builtin): Relax the gcc_assert to allow the new\n+\thard float builtins.\n+\t(rs6000_builtin_mask_names): Add RS6000_BTM_HARD_FLOAT.\n+\n 2014-05-03  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* config/sh/sh_optimize_sett_clrt.cc (sh_optimize_sett_clrt::execute):"}, {"sha": "8e15bdf1619d41f327e1cfd9d72e25d57b26d8fa", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=f93bc5b31a74f46a6c190a2bee3bc136ee3e2440", "patch": "@@ -626,15 +626,15 @@\n #define BU_MISC_1(ENUM, NAME, ATTR, ICODE)\t\t\t\t\\\n   RS6000_BUILTIN_2 (MISC_BUILTIN_ ## ENUM,\t\t/* ENUM */\t\\\n \t\t    \"__builtin_\" NAME,\t\t\t/* NAME */\t\\\n-\t\t    RS6000_BTM_ALWAYS,\t\t\t/* MASK */\t\\\n+\t\t    RS6000_BTM_HARD_FLOAT,\t\t/* MASK */\t\\\n \t\t    (RS6000_BTC_ ## ATTR\t\t/* ATTR */\t\\\n \t\t     | RS6000_BTC_UNARY),\t\t\t\t\\\n \t\t    CODE_FOR_ ## ICODE)\t\t\t/* ICODE */\n \n #define BU_MISC_2(ENUM, NAME, ATTR, ICODE)\t\t\t\t\\\n   RS6000_BUILTIN_2 (MISC_BUILTIN_ ## ENUM,\t\t/* ENUM */\t\\\n \t\t    \"__builtin_\" NAME,\t\t\t/* NAME */\t\\\n-\t\t    RS6000_BTM_ALWAYS,\t\t\t/* MASK */\t\\\n+\t\t    RS6000_BTM_HARD_FLOAT,\t\t/* MASK */\t\\\n \t\t    (RS6000_BTC_ ## ATTR\t\t/* ATTR */\t\\\n \t\t     | RS6000_BTC_BINARY),\t\t\t\t\\\n \t\t    CODE_FOR_ ## ICODE)\t\t\t/* ICODE */"}, {"sha": "bb521a934f48557eed77f66e275c2a79a2e7710e", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f93bc5b31a74f46a6c190a2bee3bc136ee3e2440", "patch": "@@ -3039,7 +3039,8 @@ rs6000_builtin_mask_calculate (void)\n \t  | ((TARGET_P8_VECTOR)\t\t    ? RS6000_BTM_P8_VECTOR : 0)\n \t  | ((TARGET_CRYPTO)\t\t    ? RS6000_BTM_CRYPTO\t   : 0)\n \t  | ((TARGET_HTM)\t\t    ? RS6000_BTM_HTM\t   : 0)\n-\t  | ((TARGET_DFP)\t\t    ? RS6000_BTM_DFP\t   : 0));\n+\t  | ((TARGET_DFP)\t\t    ? RS6000_BTM_DFP\t   : 0)\n+\t  | ((TARGET_HARD_FLOAT)\t    ? RS6000_BTM_HARD_FLOAT : 0));\n }\n \n /* Override command line options.  Mostly we process the processor type and\n@@ -3396,6 +3397,13 @@ rs6000_option_override_internal (bool global_init_p)\n       rs6000_isa_flags &= ~OPTION_MASK_VSX_TIMODE;\n     }\n \n+  if (TARGET_DFP && !TARGET_HARD_FLOAT)\n+    {\n+      if (rs6000_isa_flags_explicit & OPTION_MASK_DFP)\n+\terror (\"-mhard-dfp requires -mhard-float\");\n+      rs6000_isa_flags &= ~OPTION_MASK_DFP;\n+    }\n+\n   /* The quad memory instructions only works in 64-bit mode. In 32-bit mode,\n      silently turn off quad memory mode.  */\n   if ((TARGET_QUAD_MEMORY || TARGET_QUAD_MEMORY_ATOMIC) && !TARGET_POWERPC64)\n@@ -13559,6 +13567,8 @@ rs6000_invalid_builtin (enum rs6000_builtins fncode)\n     error (\"Builtin function %s requires the -mhard-dfp option\", name);\n   else if ((fnmask & RS6000_BTM_P8_VECTOR) != 0)\n     error (\"Builtin function %s requires the -mpower8-vector option\", name);\n+  else if ((fnmask & RS6000_BTM_HARD_FLOAT) != 0)\n+    error (\"Builtin function %s requires the -mhard-float option\", name);\n   else\n     error (\"Builtin function %s is not supported with the current options\",\n \t   name);\n@@ -13747,7 +13757,10 @@ rs6000_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n \treturn ret;\n     }  \n \n-  gcc_assert (TARGET_ALTIVEC || TARGET_VSX || TARGET_SPE || TARGET_PAIRED_FLOAT);\n+  unsigned attr = rs6000_builtin_info[uns_fcode].attr & RS6000_BTC_TYPE_MASK;\n+  gcc_assert (attr == RS6000_BTC_UNARY\n+\t      || attr == RS6000_BTC_BINARY\n+\t      || attr == RS6000_BTC_TERNARY);\n \n   /* Handle simple unary operations.  */\n   d = bdesc_1arg;\n@@ -31302,6 +31315,7 @@ static struct rs6000_opt_mask const rs6000_builtin_mask_names[] =\n   { \"crypto\",\t\t RS6000_BTM_CRYPTO,\tfalse, false },\n   { \"htm\",\t\t RS6000_BTM_HTM,\tfalse, false },\n   { \"hard-dfp\",\t\t RS6000_BTM_DFP,\tfalse, false },\n+  { \"hard-float\",\t RS6000_BTM_HARD_FLOAT,\tfalse, false },\n };\n \n /* Option variables that we want to support inside attribute((target)) and"}, {"sha": "21330dc657d94a6e34172862198c52a05b380a0e", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=f93bc5b31a74f46a6c190a2bee3bc136ee3e2440", "patch": "@@ -624,7 +624,8 @@ extern int rs6000_vector_align[];\n \t\t\t\t      || TARGET_CMPB\t  /* ISA 2.05 */ \\\n \t\t\t\t      || TARGET_POPCNTD\t  /* ISA 2.06 */ \\\n \t\t\t\t      || TARGET_ALTIVEC\t\t\t \\\n-\t\t\t\t      || TARGET_VSX)))\n+\t\t\t\t      || TARGET_VSX\t\t\t \\\n+\t\t\t\t      || TARGET_HARD_FLOAT)))\n \n /* E500 cores only support plain \"sync\", not lwsync.  */\n #define TARGET_NO_LWSYNC (rs6000_cpu == PROCESSOR_PPC8540 \\\n@@ -2517,6 +2518,7 @@ extern int frame_pointer_needed;\n #define RS6000_BTM_POPCNTD\tMASK_POPCNTD\t/* Target supports ISA 2.06.  */\n #define RS6000_BTM_CELL\t\tMASK_FPRND\t/* Target is cell powerpc.  */\n #define RS6000_BTM_DFP\t\tMASK_DFP\t/* Decimal floating point.  */\n+#define RS6000_BTM_HARD_FLOAT\tMASK_SOFT_FLOAT\t/* Hardware floating point.  */\n \n #define RS6000_BTM_COMMON\t(RS6000_BTM_ALTIVEC\t\t\t\\\n \t\t\t\t | RS6000_BTM_VSX\t\t\t\\\n@@ -2529,7 +2531,8 @@ extern int frame_pointer_needed;\n \t\t\t\t | RS6000_BTM_HTM\t\t\t\\\n \t\t\t\t | RS6000_BTM_POPCNTD\t\t\t\\\n \t\t\t\t | RS6000_BTM_CELL\t\t\t\\\n-\t\t\t\t | RS6000_BTM_DFP)\n+\t\t\t\t | RS6000_BTM_DFP\t\t\t\\\n+\t\t\t\t | RS6000_BTM_HARD_FLOAT)\n \n /* Define builtin enum index.  */\n "}, {"sha": "48134892a8be5e165627c5e1f00754a925e83710", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f93bc5b31a74f46a6c190a2bee3bc136ee3e2440", "patch": "@@ -1,3 +1,10 @@\n+2014-05-04  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/pack02.c (dg-options): Add -mhard-float.\n+\t(dg-require-effective-target): Change target to powerpc_fprs.\n+\t* gcc.target/powerpc/pack03.c (dg-options): Add -mhard-dfp.\n+\t(dg-require-effective-target): Change target to dfprt.\n+\n 2014-05-03  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/58582"}, {"sha": "584d6c292055831221f76666221fd4e9745040ca", "filename": "gcc/testsuite/gcc.target/powerpc/pack02.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpack02.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpack02.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpack02.c?ref=f93bc5b31a74f46a6c190a2bee3bc136ee3e2440", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do run { target { powerpc*-*-linux* } } } */\n /* { dg-skip-if \"\" { powerpc*-*-darwin* } { \"*\" } { \"\" } } */\n /* { dg-skip-if \"\" { powerpc*-*-*spe* } { \"*\" } { \"\" } } */\n-/* { dg-require-effective-target vsx_hw } */\n-/* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target powerpc_fprs } */\n+/* { dg-options \"-O2 -mhard-float\" } */\n \n #include <stddef.h>\n #include <stdlib.h>"}, {"sha": "bc582f232d69ec0f83c042437ee139a78efa5c45", "filename": "gcc/testsuite/gcc.target/powerpc/pack03.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpack03.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f93bc5b31a74f46a6c190a2bee3bc136ee3e2440/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpack03.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpack03.c?ref=f93bc5b31a74f46a6c190a2bee3bc136ee3e2440", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do run { target { powerpc*-*-linux* } } } */\n /* { dg-skip-if \"\" { powerpc*-*-darwin* } { \"*\" } { \"\" } } */\n /* { dg-skip-if \"\" { powerpc*-*-*spe* } { \"*\" } { \"\" } } */\n-/* { dg-require-effective-target vsx_hw } */\n-/* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target dfprt } */\n+/* { dg-options \"-O2 -mhard-dfp\" } */\n \n #include <stddef.h>\n #include <stdlib.h>"}]}