{"sha": "321e10dd4ceaa5675213936b5d4be25c5b64c551", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIxZTEwZGQ0Y2VhYTU2NzUyMTM5MzZiNWQ0YmUyNWM1YjY0YzU1MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-12-04T12:05:08Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-12-04T12:05:08Z"}, "message": "trans.c (add_decl_expr): At toplevel, mark the TYPE_ADA_SIZE field of records and unions.\n\n\t* gcc-interface/trans.c (add_decl_expr): At toplevel, mark the\n\tTYPE_ADA_SIZE field of records and unions.\n\n\t* gcc-interface/trans.c (Attribute_to_gnu) <Attr_Length>: Set the\n\tsource location of the node onto the comparison expression if it\n\tis not cached.\n\nFrom-SVN: r154978", "tree": {"sha": "77ca378a29ef39f0e2515a631ccdb5718d557816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77ca378a29ef39f0e2515a631ccdb5718d557816"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/321e10dd4ceaa5675213936b5d4be25c5b64c551", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/321e10dd4ceaa5675213936b5d4be25c5b64c551", "html_url": "https://github.com/Rust-GCC/gccrs/commit/321e10dd4ceaa5675213936b5d4be25c5b64c551", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/321e10dd4ceaa5675213936b5d4be25c5b64c551/comments", "author": null, "committer": null, "parents": [{"sha": "a7004a7e0efc80b227c32c63f1935a8410b0f6ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7004a7e0efc80b227c32c63f1935a8410b0f6ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7004a7e0efc80b227c32c63f1935a8410b0f6ad"}], "stats": {"total": 101, "additions": 100, "deletions": 1}, "files": [{"sha": "6334bbcad74a0c2f8ec999b9e1e2756132b19e32", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/321e10dd4ceaa5675213936b5d4be25c5b64c551/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/321e10dd4ceaa5675213936b5d4be25c5b64c551/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=321e10dd4ceaa5675213936b5d4be25c5b64c551", "patch": "@@ -1,3 +1,12 @@\n+2009-12-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (add_decl_expr): At toplevel, mark the\n+\tTYPE_ADA_SIZE field of records and unions.\n+\n+\t* gcc-interface/trans.c (Attribute_to_gnu) <Attr_Length>: Set the\n+\tsource location of the node onto the comparison expression if it\n+\tis not cached.\n+\n 2009-12-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_util.adb (Make_CW_Equivalent_Type): Set the"}, {"sha": "345c90eebe8af2cbbff287d25a2cc09b04252791", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/321e10dd4ceaa5675213936b5d4be25c5b64c551/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/321e10dd4ceaa5675213936b5d4be25c5b64c551/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=321e10dd4ceaa5675213936b5d4be25c5b64c551", "patch": "@@ -1624,6 +1624,16 @@ Attribute_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, int attribute)\n \t    else\n \t      pa->length = gnu_result;\n \t  }\n+\n+\t/* Set the source location onto the predicate of the condition in the\n+\t   'Length case but do not do it if the expression is cached to avoid\n+\t   messing up the debug info.  */\n+\telse if ((attribute == Attr_Range_Length || attribute == Attr_Length)\n+\t\t && TREE_CODE (gnu_result) == COND_EXPR\n+\t\t && EXPR_P (TREE_OPERAND (gnu_result, 0)))\n+\t  set_expr_location_from_node (TREE_OPERAND (gnu_result, 0),\n+\t\t\t\t       gnat_node);\n+\n \tbreak;\n       }\n \n@@ -5578,14 +5588,20 @@ add_decl_expr (tree gnu_decl, Entity_Id gnat_entity)\n \t Note that walk_tree knows how to deal with TYPE_DECL, but neither\n \t VAR_DECL nor CONST_DECL.  This appears to be somewhat arbitrary.  */\n       MARK_VISITED (gnu_stmt);\n-\n       if (TREE_CODE (gnu_decl) == VAR_DECL\n \t  || TREE_CODE (gnu_decl) == CONST_DECL)\n \t{\n \t  MARK_VISITED (DECL_SIZE (gnu_decl));\n \t  MARK_VISITED (DECL_SIZE_UNIT (gnu_decl));\n \t  MARK_VISITED (DECL_INITIAL (gnu_decl));\n \t}\n+      /* In any case, we have to deal with our own TYPE_ADA_SIZE field.  */\n+      else if (TREE_CODE (gnu_decl) == TYPE_DECL\n+\t       && ((TREE_CODE (type) == RECORD_TYPE\n+\t\t    && !TYPE_FAT_POINTER_P (type))\n+\t\t   || TREE_CODE (type) == UNION_TYPE\n+\t\t   || TREE_CODE (type) == QUAL_UNION_TYPE))\n+\tMARK_VISITED (TYPE_ADA_SIZE (type));\n     }\n   else\n     add_stmt_with_node (gnu_stmt, gnat_entity);"}, {"sha": "577d18b21633cf1ba2cf606837d9c81b5e6125a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/321e10dd4ceaa5675213936b5d4be25c5b64c551/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/321e10dd4ceaa5675213936b5d4be25c5b64c551/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=321e10dd4ceaa5675213936b5d4be25c5b64c551", "patch": "@@ -1,3 +1,9 @@\n+2009-12-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/specs/size_attribute1.ads: New test.\n+\t* gnat.dg/specs/size_attribute1_pkg1.ad[sb]: New helper.\n+\t* gnat.dg/specs/size_attribute1_pkg2.ad[sb]: Likewise.\n+\n 2009-12-04  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/42218"}, {"sha": "ece680728d4e10bacf5350558cde33b5f55f8e36", "filename": "gcc/testsuite/gnat.dg/specs/size_attribute1.ads", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/321e10dd4ceaa5675213936b5d4be25c5b64c551/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_attribute1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/321e10dd4ceaa5675213936b5d4be25c5b64c551/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_attribute1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_attribute1.ads?ref=321e10dd4ceaa5675213936b5d4be25c5b64c551", "patch": "@@ -0,0 +1,20 @@\n+-- { dg-do compile }\n+\n+with Size_Attribute1_Pkg1;\n+\n+package Size_Attribute1 is\n+\n+  function Num return Natural;\n+  pragma Import (Ada, Num);\n+\n+  type A is array (Natural range <>) of Integer;\n+\n+  type T is\n+    record\n+      F1 : Long_Float;\n+      F2 : A (1 .. Num);\n+    end record;\n+\n+  package My_Q is new Size_Attribute1_Pkg1 (T);\n+\n+end Size_Attribute1;"}, {"sha": "a0a45a9e4792344ebc04a8b4e3532a426dd6b696", "filename": "gcc/testsuite/gnat.dg/specs/size_attribute1_pkg1.adb", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/321e10dd4ceaa5675213936b5d4be25c5b64c551/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_attribute1_pkg1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/321e10dd4ceaa5675213936b5d4be25c5b64c551/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_attribute1_pkg1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_attribute1_pkg1.adb?ref=321e10dd4ceaa5675213936b5d4be25c5b64c551", "patch": "@@ -0,0 +1,13 @@\n+package body Size_Attribute1_Pkg1 is\n+\n+  type Rec is\n+    record\n+      F : T;\n+    end record;\n+\n+  procedure Dummy is\n+  begin\n+    null;\n+  end;\n+\n+end Size_Attribute1_Pkg1;"}, {"sha": "2cd2dc4d1d2303728fc9c3107f6b80236022a9b2", "filename": "gcc/testsuite/gnat.dg/specs/size_attribute1_pkg1.ads", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/321e10dd4ceaa5675213936b5d4be25c5b64c551/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_attribute1_pkg1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/321e10dd4ceaa5675213936b5d4be25c5b64c551/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_attribute1_pkg1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_attribute1_pkg1.ads?ref=321e10dd4ceaa5675213936b5d4be25c5b64c551", "patch": "@@ -0,0 +1,15 @@\n+-- { dg-excess-errors \"no code generated\" }\n+\n+with Size_Attribute1_Pkg2;\n+\n+generic\n+\n+  type T is private;\n+\n+package Size_Attribute1_Pkg1 is\n+\n+  package My_R is new Size_Attribute1_Pkg2 (T);\n+\n+  procedure Dummy;\n+\n+end Size_Attribute1_Pkg1;"}, {"sha": "ded1c8c659e111ee0a6855c3aa6b415901871a15", "filename": "gcc/testsuite/gnat.dg/specs/size_attribute1_pkg2.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/321e10dd4ceaa5675213936b5d4be25c5b64c551/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_attribute1_pkg2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/321e10dd4ceaa5675213936b5d4be25c5b64c551/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_attribute1_pkg2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_attribute1_pkg2.adb?ref=321e10dd4ceaa5675213936b5d4be25c5b64c551", "patch": "@@ -0,0 +1,9 @@\n+package body Size_Attribute1_Pkg2 is\n+\n+  procedure Proc is\n+    I : Integer := T'Size;\n+  begin\n+    null;\n+  end;\n+\n+end Size_Attribute1_Pkg2;"}, {"sha": "1561508037ca465c79d9da5a8adf8641140690d3", "filename": "gcc/testsuite/gnat.dg/specs/size_attribute1_pkg2.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/321e10dd4ceaa5675213936b5d4be25c5b64c551/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_attribute1_pkg2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/321e10dd4ceaa5675213936b5d4be25c5b64c551/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_attribute1_pkg2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fsize_attribute1_pkg2.ads?ref=321e10dd4ceaa5675213936b5d4be25c5b64c551", "patch": "@@ -0,0 +1,11 @@\n+-- { dg-excess-errors \"no code generated\" }\n+\n+generic\n+\n+  type T is private;\n+\n+package Size_Attribute1_Pkg2 is\n+\n+  procedure Proc;\n+\n+end Size_Attribute1_Pkg2;"}]}