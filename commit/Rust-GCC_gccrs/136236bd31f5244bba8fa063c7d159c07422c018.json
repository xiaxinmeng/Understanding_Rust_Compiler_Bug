{"sha": "136236bd31f5244bba8fa063c7d159c07422c018", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM2MjM2YmQzMWY1MjQ0YmJhOGZhMDYzYzdkMTU5YzA3NDIyYzAxOA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2016-07-06T13:14:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-07-06T13:14:25Z"}, "message": "sem_ch7.adb (Analyze_Package_Specification): Insert its freezing nodes after the last declaration.\n\n2016-07-06  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch7.adb (Analyze_Package_Specification): Insert its\n\tfreezing nodes after the last declaration. Needed to ensure\n\tthat global entities referenced in aspects of frozen types are\n\tproperly handled.\n\t* freeze.adb (Freeze_Entity): Minor code reorganization to ensure\n\tthat freezing nodes of generic packages are handled.\n\t* sem_ch13.adb (Freeze_Entity_Checks): Handle N_Freeze_Generic nodes.\n\t* sem_ch12.adb (Save_References_In_Identifier): Handle selected\n\tcomponents which denote a named number that is constant folded\n\tin the analyzed copy of the tree.\n\nFrom-SVN: r238047", "tree": {"sha": "07aa09f80817cdabd6d94d2c53f2f2947e11a1e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07aa09f80817cdabd6d94d2c53f2f2947e11a1e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/136236bd31f5244bba8fa063c7d159c07422c018", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136236bd31f5244bba8fa063c7d159c07422c018", "html_url": "https://github.com/Rust-GCC/gccrs/commit/136236bd31f5244bba8fa063c7d159c07422c018", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136236bd31f5244bba8fa063c7d159c07422c018/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9df9988191cbf8562a4e422ff3ea1198fad42e46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9df9988191cbf8562a4e422ff3ea1198fad42e46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9df9988191cbf8562a4e422ff3ea1198fad42e46"}], "stats": {"total": 105, "additions": 90, "deletions": 15}, "files": [{"sha": "8e8a370d0a1f4f93e10814041bebf55de91813d4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136236bd31f5244bba8fa063c7d159c07422c018/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136236bd31f5244bba8fa063c7d159c07422c018/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=136236bd31f5244bba8fa063c7d159c07422c018", "patch": "@@ -1,3 +1,16 @@\n+2016-07-06  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch7.adb (Analyze_Package_Specification): Insert its\n+\tfreezing nodes after the last declaration. Needed to ensure\n+\tthat global entities referenced in aspects of frozen types are\n+\tproperly handled.\n+\t* freeze.adb (Freeze_Entity): Minor code reorganization to ensure\n+\tthat freezing nodes of generic packages are handled.\n+\t* sem_ch13.adb (Freeze_Entity_Checks): Handle N_Freeze_Generic nodes.\n+\t* sem_ch12.adb (Save_References_In_Identifier): Handle selected\n+\tcomponents which denote a named number that is constant folded\n+\tin the analyzed copy of the tree.\n+\n 2016-07-06  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_aggr.adb Remove with and use clauses for Exp_Ch11 and Inline."}, {"sha": "12f60a0c90000a0d5e1e58306a39f4538b0296a6", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136236bd31f5244bba8fa063c7d159c07422c018/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136236bd31f5244bba8fa063c7d159c07422c018/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=136236bd31f5244bba8fa063c7d159c07422c018", "patch": "@@ -4945,6 +4945,12 @@ package body Freeze is\n          Ghost_Mode := Save_Ghost_Mode;\n          return No_List;\n \n+      elsif Ekind (E) = E_Generic_Package then\n+         Result := Freeze_Generic_Entities (E);\n+\n+         Ghost_Mode := Save_Ghost_Mode;\n+         return Result;\n+\n       --  It is improper to freeze an external entity within a generic because\n       --  its freeze node will appear in a non-valid context. The entity will\n       --  be frozen in the proper scope after the current generic is analyzed.\n@@ -5054,12 +5060,6 @@ package body Freeze is\n                return No_List;\n             end if;\n          end;\n-\n-      elsif Ekind (E) = E_Generic_Package then\n-         Result := Freeze_Generic_Entities (E);\n-\n-         Ghost_Mode := Save_Ghost_Mode;\n-         return Result;\n       end if;\n \n       --  Add checks to detect proper initialization of scalars that may appear"}, {"sha": "d79a8453adaf437bb952c8a5534c4705e98611b3", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 33, "deletions": 6, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136236bd31f5244bba8fa063c7d159c07422c018/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136236bd31f5244bba8fa063c7d159c07422c018/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=136236bd31f5244bba8fa063c7d159c07422c018", "patch": "@@ -14860,14 +14860,41 @@ package body Sem_Ch12 is\n             --  The node did not undergo a transformation\n \n             if Nkind (N) = Nkind (Get_Associated_Node (N)) then\n+               declare\n+                  Aux_N2         : constant Node_Id := Get_Associated_Node (N);\n+                  Orig_N2_Parent : constant Node_Id :=\n+                                     Original_Node (Parent (Aux_N2));\n+               begin\n+                  --  The parent of this identifier is a selected component\n+                  --  which denotes a named number that was constant folded.\n+                  --  Preserve the original name for ASIS and link the parent\n+                  --  with its expanded name. The constant folding will be\n+                  --  repeated in the instance.\n+\n+                  if Nkind (Parent (N)) = N_Selected_Component\n+                    and then Nkind_In (Parent (Aux_N2), N_Integer_Literal,\n+                                                        N_Real_Literal)\n+                    and then Is_Entity_Name (Orig_N2_Parent)\n+                    and then Ekind (Entity (Orig_N2_Parent)) in Named_Kind\n+                    and then Is_Global (Entity (Orig_N2_Parent))\n+                  then\n+                     N2 := Aux_N2;\n+                     Set_Associated_Node (Parent (N),\n+                       Original_Node (Parent (N2)));\n \n-               --  If this is a discriminant reference, always save it. It is\n-               --  used in the instance to find the corresponding discriminant\n-               --  positionally rather than by name.\n+                  --  Common case\n \n-               Set_Original_Discriminant\n-                 (N, Original_Discriminant (Get_Associated_Node (N)));\n-               Reset_Entity (N);\n+                  else\n+                     --  If this is a discriminant reference, always save it.\n+                     --  It is used in the instance to find the corresponding\n+                     --  discriminant positionally rather than by name.\n+\n+                     Set_Original_Discriminant\n+                       (N, Original_Discriminant (Get_Associated_Node (N)));\n+                  end if;\n+\n+                  Reset_Entity (N);\n+               end;\n \n             --  The analysis of the generic copy transformed the identifier\n             --  into another construct. Propagate the changes to the template."}, {"sha": "aad9f68fe96bdfdd8bc574b3f391d726a7e48627", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136236bd31f5244bba8fa063c7d159c07422c018/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136236bd31f5244bba8fa063c7d159c07422c018/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=136236bd31f5244bba8fa063c7d159c07422c018", "patch": "@@ -10789,10 +10789,20 @@ package body Sem_Ch13 is\n       --  the subtype name in the saved expression so that they will not cause\n       --  trouble in the preanalysis.\n \n-      --  This is also not needed in the generic case\n+      --  Case 1: Generic case. For freezing nodes of types defined in generics\n+      --  we must perform the analysis of its aspects; needed to ensure that\n+      --  they have the minimum decoration needed by ASIS.\n+\n+      if not Non_Generic_Case then\n+         if Has_Delayed_Aspects (E) then\n+            Push_Scope (Scope (E));\n+            Analyze_Aspects_At_Freeze_Point (E);\n+            Pop_Scope;\n+         end if;\n+\n+      --  Case 2: Non-generic case\n \n-      if Non_Generic_Case\n-        and then Has_Delayed_Aspects (E)\n+      elsif Has_Delayed_Aspects (E)\n         and then Scope (E) = Current_Scope\n       then\n          --  Retrieve the visibility to the discriminants in order to properly"}, {"sha": "4a3b2de04297a81405008c4a4957e79c801e8cb1", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/136236bd31f5244bba8fa063c7d159c07422c018/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/136236bd31f5244bba8fa063c7d159c07422c018/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=136236bd31f5244bba8fa063c7d159c07422c018", "patch": "@@ -39,6 +39,7 @@ with Exp_Ch7;   use Exp_Ch7;\n with Exp_Disp;  use Exp_Disp;\n with Exp_Dist;  use Exp_Dist;\n with Exp_Dbug;  use Exp_Dbug;\n+with Freeze;    use Freeze;\n with Ghost;     use Ghost;\n with Lib;       use Lib;\n with Lib.Xref;  use Lib.Xref;\n@@ -1502,7 +1503,20 @@ package body Sem_Ch7 is\n          declare\n             Orig_Spec : constant Node_Id := Specification (Orig_Decl);\n             Save_Priv : constant List_Id := Private_Declarations (Orig_Spec);\n+\n          begin\n+            --  Insert the freezing nodes after the visible declarations to\n+            --  ensure that we analyze its aspects; needed to ensure that\n+            --  global entities referenced in the aspects are properly handled.\n+\n+            if Ada_Version >= Ada_2012\n+              and then Is_Non_Empty_List (Vis_Decls)\n+              and then Is_Empty_List (Priv_Decls)\n+            then\n+               Insert_List_After_And_Analyze\n+                 (Last (Vis_Decls), Freeze_Entity (Id, Last (Vis_Decls)));\n+            end if;\n+\n             Set_Private_Declarations (Orig_Spec, Empty_List);\n             Save_Global_References   (Orig_Decl);\n             Set_Private_Declarations (Orig_Spec, Save_Priv);\n@@ -1690,6 +1704,17 @@ package body Sem_Ch7 is\n                           Generic_Formal_Declarations (Orig_Decl);\n \n          begin\n+            --  Insert the freezing nodes after the private declarations to\n+            --  ensure that we analyze its aspects; needed to ensure that\n+            --  global entities referenced in the aspects are properly handled.\n+\n+            if Ada_Version >= Ada_2012\n+              and then Is_Non_Empty_List (Priv_Decls)\n+            then\n+               Insert_List_After_And_Analyze\n+                 (Last (Priv_Decls), Freeze_Entity (Id, Last (Priv_Decls)));\n+            end if;\n+\n             Set_Visible_Declarations        (Orig_Spec, Empty_List);\n             Set_Generic_Formal_Declarations (Orig_Decl, Empty_List);\n             Save_Global_References          (Orig_Decl);"}]}