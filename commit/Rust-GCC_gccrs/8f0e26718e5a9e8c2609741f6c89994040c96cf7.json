{"sha": "8f0e26718e5a9e8c2609741f6c89994040c96cf7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYwZTI2NzE4ZTVhOWU4YzI2MDk3NDFmNmM4OTk5NDA0MGM5NmNmNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-03-30T15:54:05Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-03-30T15:54:05Z"}, "message": "fold-const.c (fold_binary): Add missing conversions.\n\n\t* fold-const.c (fold_binary) <BIT_IOR_EXPR>: Add missing conversions.\n\nFrom-SVN: r133732", "tree": {"sha": "8fc9263f7a28b554d1a353ce863bc6437db117f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fc9263f7a28b554d1a353ce863bc6437db117f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f0e26718e5a9e8c2609741f6c89994040c96cf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f0e26718e5a9e8c2609741f6c89994040c96cf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f0e26718e5a9e8c2609741f6c89994040c96cf7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f0e26718e5a9e8c2609741f6c89994040c96cf7/comments", "author": null, "committer": null, "parents": [{"sha": "9664860331e02d839e4cb38e750d7027846524d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9664860331e02d839e4cb38e750d7027846524d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9664860331e02d839e4cb38e750d7027846524d8"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "4d954bf12a5385a493bb14946d928af206a6731b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f0e26718e5a9e8c2609741f6c89994040c96cf7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f0e26718e5a9e8c2609741f6c89994040c96cf7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f0e26718e5a9e8c2609741f6c89994040c96cf7", "patch": "@@ -1,3 +1,7 @@\n+2008-03-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* fold-const.c (fold_binary) <BIT_IOR_EXPR>: Add missing conversions.\n+\n 2008-03-30  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/31023"}, {"sha": "6e5d9403e706ccee69af56e63bdd1c6761b28c3e", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f0e26718e5a9e8c2609741f6c89994040c96cf7/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f0e26718e5a9e8c2609741f6c89994040c96cf7/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=8f0e26718e5a9e8c2609741f6c89994040c96cf7", "patch": "@@ -10425,8 +10425,10 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t{\n \t  return fold_build1 (BIT_NOT_EXPR, type,\n \t\t\t      build2 (BIT_AND_EXPR, type,\n-\t\t\t\t      TREE_OPERAND (arg0, 0),\n-\t\t\t\t      TREE_OPERAND (arg1, 0)));\n+\t\t\t\t      fold_convert (type,\n+\t\t\t\t\t\t    TREE_OPERAND (arg0, 0)),\n+\t\t\t\t      fold_convert (type,\n+\t\t\t\t\t\t    TREE_OPERAND (arg1, 0))));\n \t}\n \n       /* See if this can be simplified into a rotate first.  If that"}, {"sha": "3124811858d5844d7ea597700f2764040fca1aa0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f0e26718e5a9e8c2609741f6c89994040c96cf7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f0e26718e5a9e8c2609741f6c89994040c96cf7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8f0e26718e5a9e8c2609741f6c89994040c96cf7", "patch": "@@ -1,3 +1,7 @@\n+2008-03-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/bit_packed_array2.adb: New test.\n+\n 2008-03-30  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/35740"}, {"sha": "b403122f5f1b0c159acd9d2f8b1cf6530f09ec67", "filename": "gcc/testsuite/gnat.dg/bit_packed_array2.adb", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f0e26718e5a9e8c2609741f6c89994040c96cf7/gcc%2Ftestsuite%2Fgnat.dg%2Fbit_packed_array2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f0e26718e5a9e8c2609741f6c89994040c96cf7/gcc%2Ftestsuite%2Fgnat.dg%2Fbit_packed_array2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fbit_packed_array2.adb?ref=8f0e26718e5a9e8c2609741f6c89994040c96cf7", "patch": "@@ -0,0 +1,19 @@\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws\" }\n+\n+procedure Bit_Packed_Array2 is\n+\n+  type Bit_Array is array (integer range <>) of Boolean;\n+  pragma Pack(Bit_Array);\n+\n+  b1  : Bit_Array(1..64);\n+  b2  : Bit_array(1..64);\n+  res : Bit_array(1..64);\n+\n+begin\n+\n+  if (not((not b1) or (not b2))) /= res then \n+    null;\n+  end if;\n+\n+end;"}]}