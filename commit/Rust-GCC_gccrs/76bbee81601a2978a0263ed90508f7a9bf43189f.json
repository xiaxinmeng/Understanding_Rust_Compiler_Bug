{"sha": "76bbee81601a2978a0263ed90508f7a9bf43189f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZiYmVlODE2MDFhMjk3OGEwMjYzZWQ5MDUwOGY3YTliZjQzMTg5Zg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2000-09-25T10:11:22Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2000-09-25T10:11:22Z"}, "message": "definitions in config/[npr]*:\n\nChanges add TABs on either or both sides, covering start of line,\nup to any operand for all .*ASM.*_OP definitions.\n\nFrom-SVN: r36611", "tree": {"sha": "bcdf0f9a047d474f6937b96a6523a892a6a7428a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcdf0f9a047d474f6937b96a6523a892a6a7428a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76bbee81601a2978a0263ed90508f7a9bf43189f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76bbee81601a2978a0263ed90508f7a9bf43189f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76bbee81601a2978a0263ed90508f7a9bf43189f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76bbee81601a2978a0263ed90508f7a9bf43189f/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78d057d88956b3dde01a370e16b9278761109d47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78d057d88956b3dde01a370e16b9278761109d47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78d057d88956b3dde01a370e16b9278761109d47"}], "stats": {"total": 69, "additions": 43, "deletions": 26}, "files": [{"sha": "e030477c8bc0a4265481ba6da11a70b638d78b12", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76bbee81601a2978a0263ed90508f7a9bf43189f", "patch": "@@ -210,6 +210,23 @@\n \tHere.\n \t* config/mips/osfrose.h (SET_ASM_OP): Here.\n \t* config/mips/sni-svr4.h (ABICALLS_ASM_OP): Here.\n+\t* config/ns32k/encore.h (SHARED_SECTION_ASM_OP): Here.\n+\t* config/ns32k/merlin.h (SHARED_SECTION_ASM_OP): Here.\n+\t* config/ns32k/ns32k.h (TEXT_SECTION_ASM_OP, DATA_SECTION_ASM_OP):\n+\tHere.\n+\t* config/ns32k/sequent.h (SHARED_SECTION_ASM_OP): Here.\n+\t* config/ns32k/tek6000.h (SHARED_SECTION_ASM_OP): Here.\n+\t* config/pa/pa-64.h (INT_ASM_OP, TYPE_ASM_OP, SIZE_ASM_OP): Here.\n+\t* config/pa/pa.h (ASM_STABS_OP, ASM_STABN_OP): Here.\n+\t* config/pj/pj.h (SET_ASM_OP, BSS_SECTION_ASM_OP): Here.\n+\t* config/pyr/pyr.h (TEXT_SECTION_ASM_OP, DATA_SECTION_ASM_OP):\n+\tHere.\n+\t* config/romp/romp.h (TEXT_SECTION_ASM_OP, DATA_SECTION_ASM_OP):\n+\tHere.\n+\t* config/rs6000/rs6000.h (SET_ASM_OP): Here.\n+\t* config/rs6000/sol2.h (ASM_STABN_OP): Here.\n+\t* config/rs6000/sysv4.h (SKIP_ASM_OP, LOCAL_ASM_OP, LCOMM_ASM_OP):\n+\tHere.\n \n 2000-09-25  Richard Henderson  <rth@cygnus.com>\n "}, {"sha": "3340dbdd7286a69d4e5621af57623ee37e884e27", "filename": "gcc/config/ns32k/encore.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fns32k%2Fencore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fns32k%2Fencore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fencore.h?ref=76bbee81601a2978a0263ed90508f7a9bf43189f", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  ENCORE NS32000 version.\n-   Copyright (C) 1988, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1993, 2000 Free Software Foundation, Inc.\n    Adapted by Robert Brown (brown@harvard.harvard.edu) from the Sequent\n    version by Michael Tiemann (tiemann@mcc.com).\n \n@@ -172,7 +172,7 @@ do {\t\t\t\t\t\t\t\\\n     \n /* Assembler pseudo-op for shared data segment. */\n \n-#define SHARED_SECTION_ASM_OP \".shrdata\"\n+#define SHARED_SECTION_ASM_OP \"\\t.shrdata\"\n \n /* This says how to output an assembler line\n    to define a shared common symbol. */"}, {"sha": "d3cd9cb214b19c5d04f20cb237b5e91ce797b8c5", "filename": "gcc/config/ns32k/merlin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fns32k%2Fmerlin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fns32k%2Fmerlin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fmerlin.h?ref=76bbee81601a2978a0263ed90508f7a9bf43189f", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  MERLIN NS32000 version.\n-   Copyright (C) 1990, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1990, 1994, 2000 Free Software Foundation, Inc.\n    By Mark Mason (mason@reed.bitnet, pyramid!unify!mason@uunet.uu.net).\n \n This file is part of GNU CC.\n@@ -56,7 +56,7 @@ Boston, MA 02111-1307, USA.  */\n #undef LABEL_ALIGN_AFTER_BARRIER\n \n /* Assembler pseudo-op for shared data segment. */\n-#define SHARED_SECTION_ASM_OP \".shdata\"\n+#define SHARED_SECTION_ASM_OP \"\\t.shdata\"\n \n /* %$ means print the prefix for an immediate operand. */\n "}, {"sha": "895af06385ed0602a22246407d62e8ff95fb9e68", "filename": "gcc/config/ns32k/ns32k.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fns32k%2Fns32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fns32k%2Fns32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.h?ref=76bbee81601a2978a0263ed90508f7a9bf43189f", "patch": "@@ -1488,11 +1488,11 @@ while (0)\n \n /* Output before read-only data.  */\n \n-#define TEXT_SECTION_ASM_OP \".text\"\n+#define TEXT_SECTION_ASM_OP \"\\t.text\"\n \n /* Output before writable data.  */\n \n-#define DATA_SECTION_ASM_OP \".data\"\n+#define DATA_SECTION_ASM_OP \"\\t.data\"\n \n /* Define the output Assembly Language */\n "}, {"sha": "30c15b8f2722da52ebb89384ff4d929721860617", "filename": "gcc/config/ns32k/sequent.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fns32k%2Fsequent.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fns32k%2Fsequent.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fsequent.h?ref=76bbee81601a2978a0263ed90508f7a9bf43189f", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  SEQUENT NS32000 version.\n-   Copyright (C) 1987 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 2000 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@mcc.com)\n \n This file is part of GNU CC.\n@@ -57,7 +57,7 @@ Boston, MA 02111-1307, USA.  */\n #undef LABEL_ALIGN_AFTER_BARRIER\n \n /* Assembler pseudo-op for shared data segment. */\n-#define SHARED_SECTION_ASM_OP \".shdata\"\n+#define SHARED_SECTION_ASM_OP \"\\t.shdata\"\n \n /* Control how stack adjust insns are output.  */\n #define SEQUENT_ADJUST_STACK"}, {"sha": "f8bb82390bd644698862b41274aa342f4ca18b2b", "filename": "gcc/config/ns32k/tek6000.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fns32k%2Ftek6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fns32k%2Ftek6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Ftek6000.h?ref=76bbee81601a2978a0263ed90508f7a9bf43189f", "patch": "@@ -1,7 +1,7 @@\n /* Definitions of target machine for GNU compiler.\n    Generic Tektronix 6000 series NS32000 version.\n    See ns32k/tek6100.h and ns32k/tek6200.h, which include this file.\n-   Copyright (C) 1990 Free Software Foundation, Inc.\n+   Copyright (C) 1990, 2000 Free Software Foundation, Inc.\n    Created by Snoopy  (sopwith.uucp!snoopy).\n    Based on work by Mark Mason (mason@reed.bitnet,\n    pyramid!unify!mason@uunet.uu.net) and Keith Packard.\n@@ -109,7 +109,7 @@ Boston, MA 02111-1307, USA.  */\n #undef LABEL_ALIGN_AFTER_BARRIER\n \n /* Assembler pseudo-op for shared data segment. */\n-#define SHARED_SECTION_ASM_OP \".shdata\"\n+#define SHARED_SECTION_ASM_OP \"\\t.shdata\"\n \n #ifdef UTEK_ASM\n #undef  FUNCTION_PROLOGUE"}, {"sha": "4e5b8079a94daba9a1c42fc708405fce2cba14d0", "filename": "gcc/config/pa/pa-64.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fpa%2Fpa-64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fpa%2Fpa-64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-64.h?ref=76bbee81601a2978a0263ed90508f7a9bf43189f", "patch": "@@ -347,7 +347,7 @@ do {\t\t\t\t\t\t\t\t\\\n   DECL_SECTION_NAME (DECL) = build_string (len, string);\t\\\n } while (0)\n \n-#define INT_ASM_OP \".dword\"\n+#define INT_ASM_OP \"\\t.dword\\t\"\n /* A C statement (sans semicolon) to output an element in the table of\n    global constructors.  */\n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t\t\\\n@@ -378,8 +378,8 @@ do {\t\t\t\t\t\t\t\t\\\n    different pseudo-op names for these, they may be overridden in the\n    file which includes this one.  */\n \n-#define TYPE_ASM_OP\t\".type\"\n-#define SIZE_ASM_OP\t\".size\"\n+#define TYPE_ASM_OP\t\"\\t.type\\t\"\n+#define SIZE_ASM_OP\t\"\\t.size\\t\"\n \n /* This is how we tell the assembler that a symbol is weak.  */\n "}, {"sha": "feb531bf7dfb327c8749ad752e1a2c2e21f55ac3", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=76bbee81601a2978a0263ed90508f7a9bf43189f", "patch": "@@ -234,8 +234,8 @@ extern int target_flags;\n #define DBX_CONTIN_LENGTH 3000\n \n /* Only labels should ever begin in column zero.  */\n-#define ASM_STABS_OP \"\\t.stabs\"\n-#define ASM_STABN_OP \"\\t.stabn\"\n+#define ASM_STABS_OP \"\\t.stabs\\t\"\n+#define ASM_STABN_OP \"\\t.stabn\\t\"\n \n /* GDB always assumes the current function's frame begins at the value\n    of the stack pointer upon entry to the current function.  Accessing"}, {"sha": "b60a284d34701c389fb99ee4bdbd1d95ca471b53", "filename": "gcc/config/pj/pj.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fpj%2Fpj.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fpj%2Fpj.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpj%2Fpj.h?ref=76bbee81601a2978a0263ed90508f7a9bf43189f", "patch": "@@ -1054,7 +1054,7 @@ struct pj_args\n #define ASM_APP_OFF             \"\"\n #define FILE_ASM_OP             \"\\t.file\\n\"\n \n-#define SET_ASM_OP              \".set\"\n+#define SET_ASM_OP              \"\\t.set\\t\"\n \n /* How to change between sections.  */\n \n@@ -1080,7 +1080,7 @@ do { fputs (current_function_varargs || current_function_stdarg         \\\n    `-fno-common' is passed, otherwise `ASM_OUTPUT_COMMON' will be\n    used.  */\n \n-#define BSS_SECTION_ASM_OP      \".section\\t.bss\"\n+#define BSS_SECTION_ASM_OP      \"\\t.section\\t.bss\"\n \n /* Like `ASM_OUTPUT_BSS' except takes the required alignment as a\n    separate, explicit argument.  If you define this macro, it is used"}, {"sha": "009a0d5738adf56abc91564ead992e7852db917f", "filename": "gcc/config/pyr/pyr.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fpyr%2Fpyr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fpyr%2Fpyr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpyr%2Fpyr.h?ref=76bbee81601a2978a0263ed90508f7a9bf43189f", "patch": "@@ -1123,11 +1123,11 @@ extern int swap_operands;\n \n /* Output before read-only data.  */\n \n-#define TEXT_SECTION_ASM_OP \".text\"\n+#define TEXT_SECTION_ASM_OP \"\\t.text\"\n \n /* Output before writable data.  */\n \n-#define DATA_SECTION_ASM_OP \".data\"\n+#define DATA_SECTION_ASM_OP \"\\t.data\"\n \n /* How to refer to registers in assembler output.\n    This sequence is indexed by compiler's hard-register-number (see above).  */"}, {"sha": "d91f1f5d257ea712c867a7c3790942a35347ad43", "filename": "gcc/config/romp/romp.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fromp%2Fromp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Fromp%2Fromp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.h?ref=76bbee81601a2978a0263ed90508f7a9bf43189f", "patch": "@@ -1384,11 +1384,11 @@ struct rt_cargs {int gregs, fregs; };\n \n /* Output before instructions and read-only data.  */\n \n-#define TEXT_SECTION_ASM_OP \".text\"\n+#define TEXT_SECTION_ASM_OP \"\\t.text\"\n \n /* Output before writable data.  */\n \n-#define DATA_SECTION_ASM_OP \".data\"\n+#define DATA_SECTION_ASM_OP \"\\t.data\"\n \n /* How to refer to registers in assembler output.\n    This sequence is indexed by compiler's hard-register-number (see above).  */"}, {"sha": "8ab59cb698086fa962ab3c958e1537a5ca4e1790", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=76bbee81601a2978a0263ed90508f7a9bf43189f", "patch": "@@ -2384,7 +2384,7 @@ extern int toc_initialized;\n \n /* This is how we tell the assembler that two symbols have the same value.  */\n \n-#define SET_ASM_OP \".set\"\n+#define SET_ASM_OP \"\\t.set\\t\"\n \n /* This implementes the `alias' attribute.  */\n "}, {"sha": "344f3ae0f701e7b383ceb011825847f0b0883332", "filename": "gcc/config/rs6000/sol2.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Frs6000%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Frs6000%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol2.h?ref=76bbee81601a2978a0263ed90508f7a9bf43189f", "patch": "@@ -90,7 +90,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* use .stabd instead of .stabn */\n \n-#define\tASM_STABN_OP\t\".stabd\"\n+#define\tASM_STABN_OP\t\"\\t.stabd\\t\"\n \n #undef  ASM_OUTPUT_SOURCE_LINE\n #define ASM_OUTPUT_SOURCE_LINE(file, line)\t\t\t\t\\"}, {"sha": "98eb9316f5f35630a182bb5968c3f6f47879c8f3", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76bbee81601a2978a0263ed90508f7a9bf43189f/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=76bbee81601a2978a0263ed90508f7a9bf43189f", "patch": "@@ -738,16 +738,16 @@ extern int rs6000_pic_labelno;\n \n /* Override elfos.h definition.  */\n #undef\tSKIP_ASM_OP\n-#define SKIP_ASM_OP\t\".space\"\n+#define SKIP_ASM_OP\t\"\\t.space\\t\"\n \n /* This says how to output assembler code to declare an\n    uninitialized internal linkage data object.  Under SVR4,\n    the linker seems to want the alignment of data objects\n    to depend on their types.  We do exactly that here.  */\n \n-#define\tLOCAL_ASM_OP\t\".local\"\n+#define\tLOCAL_ASM_OP\t\"\\t.local\\t\"\n \n-#define\tLCOMM_ASM_OP\t\".lcomm\"\n+#define\tLCOMM_ASM_OP\t\"\\t.lcomm\\t\"\n \n /* Override elfos.h definition.  */\n #undef\tASM_OUTPUT_ALIGNED_LOCAL"}]}