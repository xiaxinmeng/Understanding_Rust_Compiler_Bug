{"sha": "034a6629f4b3d64bf53dda42bf79b328c6d83190", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM0YTY2MjlmNGIzZDY0YmY1M2RkYTQyYmY3OWIzMjhjNmQ4MzE5MA==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2019-07-05T07:02:23Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-05T07:02:23Z"}, "message": "[Ada] Import documentation from the RM for Ada.Strings.Unbounded\n\n2019-07-05  Pierre-Marie de Rodat  <derodat@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/a-strunb.ads: Import documentation from the RM\n\nFrom-SVN: r273110", "tree": {"sha": "41534c134674c3e1304c62f668f18d9dd269afea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41534c134674c3e1304c62f668f18d9dd269afea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/034a6629f4b3d64bf53dda42bf79b328c6d83190", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/034a6629f4b3d64bf53dda42bf79b328c6d83190", "html_url": "https://github.com/Rust-GCC/gccrs/commit/034a6629f4b3d64bf53dda42bf79b328c6d83190", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/034a6629f4b3d64bf53dda42bf79b328c6d83190/comments", "author": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "13e8f0ed8e2cb25baa3fb424b4e721c46165ff93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13e8f0ed8e2cb25baa3fb424b4e721c46165ff93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13e8f0ed8e2cb25baa3fb424b4e721c46165ff93"}], "stats": {"total": 84, "additions": 84, "deletions": 0}, "files": [{"sha": "a3bdd0ce53e72df4f777f3f1402b0e2db39bfa8a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/034a6629f4b3d64bf53dda42bf79b328c6d83190/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/034a6629f4b3d64bf53dda42bf79b328c6d83190/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=034a6629f4b3d64bf53dda42bf79b328c6d83190", "patch": "@@ -1,3 +1,7 @@\n+2019-07-05  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* libgnat/a-strunb.ads: Import documentation from the RM\n+\n 2019-07-05  Pierre-Marie de Rodat  <derodat@adacore.com>\n \n \t* libgnat/a-strfix.ads: Import documentation from the RM"}, {"sha": "c0caf10bb727cec8cce0712d4df183b91fd2aa19", "filename": "gcc/ada/libgnat/a-strunb.ads", "status": "modified", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/034a6629f4b3d64bf53dda42bf79b328c6d83190/gcc%2Fada%2Flibgnat%2Fa-strunb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/034a6629f4b3d64bf53dda42bf79b328c6d83190/gcc%2Fada%2Flibgnat%2Fa-strunb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strunb.ads?ref=034a6629f4b3d64bf53dda42bf79b328c6d83190", "patch": "@@ -36,36 +36,64 @@\n with Ada.Strings.Maps;\n with Ada.Finalization;\n \n+--  The language-defined package Strings.Unbounded provides a private type\n+--  Unbounded_String and a set of operations. An object of type\n+--  Unbounded_String represents a String whose low bound is 1 and whose length\n+--  can vary conceptually between 0 and Natural'Last. The subprograms for\n+--  fixed-length string handling are either overloaded directly for\n+--  Unbounded_String, or are modified as needed to reflect the flexibility in\n+--  length. Since the Unbounded_String type is private, relevant constructor\n+--  and selector operations are provided.\n+\n package Ada.Strings.Unbounded is\n    pragma Preelaborate;\n \n    type Unbounded_String is private;\n    pragma Preelaborable_Initialization (Unbounded_String);\n \n    Null_Unbounded_String : constant Unbounded_String;\n+   --  Represents the null String. If an object of type Unbounded_String is not\n+   --  otherwise initialized, it will be initialized to the same value as\n+   --  Null_Unbounded_String.\n \n    function Length (Source : Unbounded_String) return Natural;\n+   --  Returns the length of the String represented by Source\n \n    type String_Access is access all String;\n+   --  Provides a (nonprivate) access type for explicit processing of\n+   --  unbounded-length strings.\n \n    procedure Free (X : in out String_Access);\n+   --  Performs an unchecked deallocation of an object of type String_Access\n \n    --------------------------------------------------------\n    -- Conversion, Concatenation, and Selection Functions --\n    --------------------------------------------------------\n \n    function To_Unbounded_String\n      (Source : String)  return Unbounded_String;\n+   --  Returns an Unbounded_String that represents Source\n \n    function To_Unbounded_String\n      (Length : Natural) return Unbounded_String;\n+   --  Returns an Unbounded_String that represents an uninitialized String\n+   --  whose length is Length.\n \n    function To_String (Source : Unbounded_String) return String;\n+   --  Returns the String with lower bound 1 represented by Source\n+\n+   --  To_String and To_Unbounded_String are related as follows:\n+   --\n+   --  * If S is a String, then To_String (To_Unbounded_String (S)) = S.\n+   --\n+   --  * If U is an Unbounded_String, then\n+   --    To_Unbounded_String (To_String (U)) = U.\n \n    procedure Set_Unbounded_String\n      (Target : out Unbounded_String;\n       Source : String);\n    pragma Ada_05 (Set_Unbounded_String);\n+   --  Sets Target to an Unbounded_String that represents Source\n \n    procedure Append\n      (Source   : in out Unbounded_String;\n@@ -79,6 +107,10 @@ package Ada.Strings.Unbounded is\n      (Source   : in out Unbounded_String;\n       New_Item : Character);\n \n+   --  For each of the Append procedures, the resulting string represented by\n+   --  the Source parameter is given by the concatenation of the original value\n+   --  of Source and the value of New_Item.\n+\n    function \"&\"\n      (Left  : Unbounded_String;\n       Right : Unbounded_String) return Unbounded_String;\n@@ -99,32 +131,53 @@ package Ada.Strings.Unbounded is\n      (Left  : Character;\n       Right : Unbounded_String) return Unbounded_String;\n \n+   --  Each of the \"&\" functions returns an Unbounded_String obtained by\n+   --  concatenating the string or character given or represented by one of the\n+   --  parameters, with the string or character given or represented by the\n+   --  other parameter, and applying To_Unbounded_String to the concatenation\n+   --  result string.\n+\n    function Element\n      (Source : Unbounded_String;\n       Index  : Positive) return Character;\n+   --  Returns the character at position Index in the string represented by\n+   --  Source; propagates Index_Error if Index > Length (Source).\n \n    procedure Replace_Element\n      (Source : in out Unbounded_String;\n       Index  : Positive;\n       By     : Character);\n+   --  Updates Source such that the character at position Index in the string\n+   --  represented by Source is By; propagates Index_Error if\n+   --  Index > Length (Source).\n \n    function Slice\n      (Source : Unbounded_String;\n       Low    : Positive;\n       High   : Natural) return String;\n+   --  Returns the slice at positions Low through High in the string\n+   --  represented by Source; propagates Index_Error if\n+   --  Low > Length (Source) + 1 or High > Length (Source). The bounds of the\n+   --  returned string are Low and High.\n \n    function Unbounded_Slice\n      (Source : Unbounded_String;\n       Low    : Positive;\n       High   : Natural) return Unbounded_String;\n    pragma Ada_05 (Unbounded_Slice);\n+   --  Returns the slice at positions Low through High in the string\n+   --  represented by Source as an Unbounded_String. This propagates\n+   --  Index_Error if Low > Length(Source) + 1 or High > Length (Source).\n \n    procedure Unbounded_Slice\n      (Source : Unbounded_String;\n       Target : out Unbounded_String;\n       Low    : Positive;\n       High   : Natural);\n    pragma Ada_05 (Unbounded_Slice);\n+   --  Sets Target to the Unbounded_String representing the slice at positions\n+   --  Low through High in the string represented by Source. This propagates\n+   --  Index_Error if Low > Length(Source) + 1 or High > Length (Source).\n \n    function \"=\"\n      (Left  : Unbounded_String;\n@@ -186,6 +239,10 @@ package Ada.Strings.Unbounded is\n      (Left  : String;\n       Right : Unbounded_String) return Boolean;\n \n+   --  Each of the functions \"=\", \"<\", \">\", \"<=\", and \">=\" returns the same\n+   --  result as the corresponding String operation applied to the String\n+   --  values given or represented by Left and Right.\n+\n    ------------------------\n    -- Search Subprograms --\n    ------------------------\n@@ -272,6 +329,11 @@ package Ada.Strings.Unbounded is\n       First  : out Positive;\n       Last   : out Natural);\n \n+   --  Each of the search subprograms (Index, Index_Non_Blank, Count,\n+   --  Find_Token) has the same effect as the corresponding subprogram in\n+   --  Strings.Fixed applied to the string represented by the Unbounded_String\n+   --  parameter.\n+\n    ------------------------------------\n    -- String Translation Subprograms --\n    ------------------------------------\n@@ -292,6 +354,11 @@ package Ada.Strings.Unbounded is\n      (Source  : in out Unbounded_String;\n       Mapping : Maps.Character_Mapping_Function);\n \n+   --  The Translate function has an analogous effect to the corresponding\n+   --  subprogram in Strings.Fixed. The translation is applied to the string\n+   --  represented by the Unbounded_String parameter, and the result is\n+   --  converted (via To_Unbounded_String) to an Unbounded_String.\n+\n    ---------------------------------------\n    -- String Transformation Subprograms --\n    ---------------------------------------\n@@ -388,6 +455,19 @@ package Ada.Strings.Unbounded is\n      (Left  : Natural;\n       Right : Unbounded_String) return Unbounded_String;\n \n+   --  Each of the transformation functions (Replace_Slice, Insert, Overwrite,\n+   --  Delete), selector functions (Trim, Head, Tail), and constructor\n+   --  functions (\"*\") is likewise analogous to its corresponding subprogram in\n+   --  Strings.Fixed. For each of the subprograms, the corresponding\n+   --  fixed-length string subprogram is applied to the string represented by\n+   --  the Unbounded_String parameter, and To_Unbounded_String is applied the\n+   --  result string.\n+   --\n+   --  For each of the procedures Translate, Replace_Slice, Insert, Overwrite,\n+   --  Delete, Trim, Head, and Tail, the resulting string represented by the\n+   --  Source parameter is given by the corresponding function for fixed-length\n+   --  strings applied to the string represented by Source's original value.\n+\n private\n    pragma Inline (Length);\n "}]}