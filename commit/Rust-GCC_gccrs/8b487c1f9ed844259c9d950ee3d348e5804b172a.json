{"sha": "8b487c1f9ed844259c9d950ee3d348e5804b172a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI0ODdjMWY5ZWQ4NDQyNTljOWQ5NTBlZTNkMzQ4ZTU4MDRiMTcyYQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-12T04:35:54Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-12T04:35:54Z"}, "message": "(calls_alloca): Don't look within DECL_INITIAL if it's 0.\n\nFrom-SVN: r2402", "tree": {"sha": "56debded5364803c09a1c002db3c91bed05d8ba8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56debded5364803c09a1c002db3c91bed05d8ba8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b487c1f9ed844259c9d950ee3d348e5804b172a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b487c1f9ed844259c9d950ee3d348e5804b172a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b487c1f9ed844259c9d950ee3d348e5804b172a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b487c1f9ed844259c9d950ee3d348e5804b172a/comments", "author": null, "committer": null, "parents": [{"sha": "9e06e321305fac06cf2c7b73e9623b46e21ca037", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e06e321305fac06cf2c7b73e9623b46e21ca037", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e06e321305fac06cf2c7b73e9623b46e21ca037"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4d6c848bb71f597d5907787f3fdb25c8e709d275", "filename": "gcc/calls.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b487c1f9ed844259c9d950ee3d348e5804b172a/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b487c1f9ed844259c9d950ee3d348e5804b172a/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=8b487c1f9ed844259c9d950ee3d348e5804b172a", "patch": "@@ -146,7 +146,7 @@ calls_alloca (exp)\n \tregister tree local;\n \n \tfor (local = BLOCK_VARS (exp); local; local = TREE_CHAIN (local))\n-\t  if (calls_alloca (DECL_INITIAL (local)))\n+\t  if (DECL_INITIAL (local) != 0 && calls_alloca (DECL_INITIAL (local)))\n \t    return 1;\n       }\n       {"}]}