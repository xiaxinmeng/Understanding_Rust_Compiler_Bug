{"sha": "57f0d303848213c1d82437b8c444afda8b72ede0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdmMGQzMDM4NDgyMTNjMWQ4MjQzN2I4YzQ0NGFmZGE4YjcyZWRlMA==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-01-29T07:22:16Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-01-29T07:22:16Z"}, "message": "[libbacktrace] Don't assign check_PROGRAMS to TESTS\n\nIn automake files, the check_PROGRAMS variable lists programs that need to be\nbuild for testing, and TESTS lists the programs that need to be run.\n\nThe libbacktrace/Makefile.am uses a shortcut:\n...\nTESTS = $(check_PROGRAMS)\n...\nto make sure that each program added with:\n...\ncheck_PROGRAMS += foo\n...\nis both build and run.\n\nHowever, for the allocfail.sh test, we need allocfail to be build and\nallocfail.sh to be run:\n...\ncheck_PROGRAMS += allocfail\nTESTS += allocfail.sh\n...\nbut the shortcut causes allocfail also to be run, which is not required.\n\nFix this by removing the short-cut, allowing check_PROGRAMS to retain its\noriginal semantics, and introducing a variable BUILDTESTS for programs that\nneed to be both build and run.\n\n2019-01-29  Tom de Vries  <tdevries@suse.de>\n\n\t* Makefile.am: Replace check_PROGRAMS with BUILDTESTS, except for\n\tallocfail.\n\t(TESTS): Don't add check_PROGRAMS. Add BUILDTESTS.\n\t(check_PROGRAMS): Add BUILDTESTS.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r268360", "tree": {"sha": "8e4f862e9e30a50086d958561cb3f011f1a0fe85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e4f862e9e30a50086d958561cb3f011f1a0fe85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57f0d303848213c1d82437b8c444afda8b72ede0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57f0d303848213c1d82437b8c444afda8b72ede0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57f0d303848213c1d82437b8c444afda8b72ede0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57f0d303848213c1d82437b8c444afda8b72ede0/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "375d59849a2773e926ce26de006247d6f0a9490d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375d59849a2773e926ce26de006247d6f0a9490d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/375d59849a2773e926ce26de006247d6f0a9490d"}], "stats": {"total": 170, "additions": 93, "deletions": 77}, "files": [{"sha": "3726c899c8ae6a39503330367ecf9aa6e7a701f9", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57f0d303848213c1d82437b8c444afda8b72ede0/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57f0d303848213c1d82437b8c444afda8b72ede0/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=57f0d303848213c1d82437b8c444afda8b72ede0", "patch": "@@ -1,3 +1,11 @@\n+2019-01-29  Tom de Vries  <tdevries@suse.de>\n+\n+\t* Makefile.am: Replace check_PROGRAMS with BUILDTESTS, except for\n+\tallocfail.\n+\t(TESTS): Don't add check_PROGRAMS. Add BUILDTESTS.\n+\t(check_PROGRAMS): Add BUILDTESTS.\n+\t* Makefile.in: Regenerate.\n+\n 2019-01-28  Tom de Vries  <tdevries@suse.de>\n \n \t* Makefile.am (xcoff_%.c): Generate sed result into temporary file."}, {"sha": "1c4ab07aa1925a70d0758ab24532ac7de9cb145f", "filename": "libbacktrace/Makefile.am", "status": "modified", "additions": 29, "deletions": 20, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57f0d303848213c1d82437b8c444afda8b72ede0/libbacktrace%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57f0d303848213c1d82437b8c444afda8b72ede0/libbacktrace%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.am?ref=57f0d303848213c1d82437b8c444afda8b72ede0", "patch": "@@ -84,9 +84,14 @@ libbacktrace_la_DEPENDENCIES = $(libbacktrace_la_LIBADD)\n \n # Testsuite.\n \n+# Add test to this variable, if you want it to be build.\n check_PROGRAMS =\n \n-TESTS = $(check_PROGRAMS)\n+# Add test to this variable, if you want it to be run.\n+TESTS =\n+\n+# Add test to this variable, if you want it to be build and run.\n+BUILDTESTS =\n \n if NATIVE\n check_LTLIBRARIES = libbacktrace_alloc.la\n@@ -115,37 +120,37 @@ xcoff_%.c: xcoff.c\n test_elf_SOURCES = test_format.c testlib.c\n test_elf_LDADD = libbacktrace_noformat.la elf.lo\n \n-check_PROGRAMS += test_elf\n+BUILDTESTS += test_elf\n \n test_xcoff_32_SOURCES = test_format.c testlib.c\n test_xcoff_32_LDADD = libbacktrace_noformat.la xcoff_32.lo\n \n-check_PROGRAMS += test_xcoff_32\n+BUILDTESTS += test_xcoff_32\n \n test_xcoff_64_SOURCES = test_format.c testlib.c\n test_xcoff_64_LDADD = libbacktrace_noformat.la xcoff_64.lo\n \n-check_PROGRAMS += test_xcoff_64\n+BUILDTESTS += test_xcoff_64\n \n test_pecoff_SOURCES = test_format.c testlib.c\n test_pecoff_LDADD = libbacktrace_noformat.la pecoff.lo\n \n-check_PROGRAMS += test_pecoff\n+BUILDTESTS += test_pecoff\n \n test_unknown_SOURCES = test_format.c testlib.c\n test_unknown_LDADD = libbacktrace_noformat.la unknown.lo\n \n-check_PROGRAMS += test_unknown\n+BUILDTESTS += test_unknown\n \n unittest_SOURCES = unittest.c testlib.c\n unittest_LDADD = libbacktrace.la\n \n-check_PROGRAMS += unittest\n+BUILDTESTS += unittest\n \n unittest_alloc_SOURCES = $(unittest_SOURCES)\n unittest_alloc_LDADD = libbacktrace_alloc.la\n \n-check_PROGRAMS += unittest_alloc\n+BUILDTESTS += unittest_alloc\n \n check_LTLIBRARIES += libbacktrace_instrumented_alloc.la\n \n@@ -171,13 +176,13 @@ btest_SOURCES = btest.c testlib.c\n btest_CFLAGS = $(AM_CFLAGS) -g -O\n btest_LDADD = libbacktrace.la\n \n-check_PROGRAMS += btest\n+BUILDTESTS += btest\n \n btest_alloc_SOURCES = $(btest_SOURCES)\n btest_alloc_CFLAGS = $(btest_CFLAGS)\n btest_alloc_LDADD = libbacktrace_alloc.la\n \n-check_PROGRAMS += btest_alloc\n+BUILDTESTS += btest_alloc\n \n if HAVE_DWZ\n \n@@ -202,12 +207,12 @@ endif HAVE_DWZ\n stest_SOURCES = stest.c\n stest_LDADD = libbacktrace.la\n \n-check_PROGRAMS += stest\n+BUILDTESTS += stest\n \n stest_alloc_SOURCES = $(stest_SOURCES)\n stest_alloc_LDADD = libbacktrace_alloc.la\n \n-check_PROGRAMS += stest_alloc\n+BUILDTESTS += stest_alloc\n \n ztest_SOURCES = ztest.c testlib.c\n ztest_CFLAGS = -DSRCDIR=\\\"$(srcdir)\\\"\n@@ -221,22 +226,22 @@ endif\n ztest_LDADD += $(CLOCK_GETTIME_LINK)\n ztest_alloc_LDADD += $(CLOCK_GETTIME_LINK)\n \n-check_PROGRAMS += ztest\n+BUILDTESTS += ztest\n \n ztest_alloc_SOURCES = $(ztest_SOURCES)\n ztest_alloc_CFLAGS = $(ztest_CFLAGS)\n \n-check_PROGRAMS += ztest_alloc\n+BUILDTESTS += ztest_alloc\n \n edtest_SOURCES = edtest.c edtest2_build.c testlib.c\n edtest_LDADD = libbacktrace.la\n \n-check_PROGRAMS += edtest\n+BUILDTESTS += edtest\n \n edtest_alloc_SOURCES = $(edtest_SOURCES)\n edtest_alloc_LDADD = libbacktrace_alloc.la\n \n-check_PROGRAMS += edtest_alloc\n+BUILDTESTS += edtest_alloc\n \n edtest2_build.c: gen_edtest2_build; @true\n gen_edtest2_build: $(srcdir)/edtest2.c\n@@ -246,13 +251,13 @@ gen_edtest2_build: $(srcdir)/edtest2.c\n \n if HAVE_PTHREAD\n \n-check_PROGRAMS += ttest\n+BUILDTESTS += ttest\n \n ttest_SOURCES = ttest.c testlib.c\n ttest_CFLAGS = $(AM_CFLAGS) -pthread\n ttest_LDADD = libbacktrace.la\n \n-check_PROGRAMS += ttest_alloc\n+BUILDTESTS += ttest_alloc\n \n ttest_alloc_SOURCES = $(ttest_SOURCES)\n ttest_alloc_CFLAGS = $(ttest_CFLAGS)\n@@ -282,7 +287,7 @@ ctesta_CFLAGS = $(AM_CFLAGS) -g\n ctesta_LDFLAGS = -Wl,--compress-debug-sections=zlib-gabi\n ctesta_LDADD = libbacktrace.la\n \n-check_PROGRAMS += ctestg ctesta\n+BUILDTESTS += ctestg ctesta\n \n ctestg_alloc_SOURCES = $(ctestg_SOURCES)\n ctestg_alloc_CFLAGS = $(ctestg_CFLAGS)\n@@ -294,12 +299,16 @@ ctesta_alloc_CFLAGS = $(ctesta_CFLAGS)\n ctesta_alloc_LDFLAGS = $(ctesta_LDFLAGS)\n ctesta_alloc_LDADD = libbacktrace_alloc.la\n \n-check_PROGRAMS += ctestg_alloc ctesta_alloc\n+BUILDTESTS += ctestg_alloc ctesta_alloc\n \n endif\n \n endif NATIVE\n \n+check_PROGRAMS += $(BUILDTESTS)\n+\n+TESTS += $(BUILDTESTS)\n+\n # We can't use automake's automatic dependency tracking, because it\n # breaks when using bootstrap-lean.  Automatic dependency tracking\n # with GCC bootstrap will cause some of the objects to depend on"}, {"sha": "862fc8ca314f32fe9875b7e31a9acb327928029f", "filename": "libbacktrace/Makefile.in", "status": "modified", "additions": 56, "deletions": 57, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57f0d303848213c1d82437b8c444afda8b72ede0/libbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57f0d303848213c1d82437b8c444afda8b72ede0/libbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.in?ref=57f0d303848213c1d82437b8c444afda8b72ede0", "patch": "@@ -120,19 +120,22 @@ POST_UNINSTALL = :\n build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n-check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3)\n+check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_5)\n+TESTS = $(am__append_3) $(am__append_4) $(am__append_5) \\\n+\t$(am__append_9) $(am__EXEEXT_5)\n @NATIVE_TRUE@am__append_1 = test_elf test_xcoff_32 test_xcoff_64 \\\n @NATIVE_TRUE@\ttest_pecoff test_unknown unittest unittest_alloc \\\n-@NATIVE_TRUE@\tallocfail btest btest_alloc stest stest_alloc \\\n-@NATIVE_TRUE@\tztest ztest_alloc edtest edtest_alloc\n-@NATIVE_TRUE@am__append_2 = allocfail.sh\n-@HAVE_DWZ_TRUE@@NATIVE_TRUE@am__append_3 = btest_dwz\n-@HAVE_DWZ_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_4 = btest_dwz_gnudebuglink\n-@HAVE_ZLIB_TRUE@@NATIVE_TRUE@am__append_5 = -lz\n+@NATIVE_TRUE@\tbtest btest_alloc stest stest_alloc ztest \\\n+@NATIVE_TRUE@\tztest_alloc edtest edtest_alloc\n+@NATIVE_TRUE@am__append_2 = allocfail\n+@NATIVE_TRUE@am__append_3 = allocfail.sh\n+@HAVE_DWZ_TRUE@@NATIVE_TRUE@am__append_4 = btest_dwz\n+@HAVE_DWZ_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_5 = btest_dwz_gnudebuglink\n @HAVE_ZLIB_TRUE@@NATIVE_TRUE@am__append_6 = -lz\n-@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__append_7 = ttest ttest_alloc\n-@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_8 = btest_gnudebuglink\n-@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__append_9 = ctestg ctesta \\\n+@HAVE_ZLIB_TRUE@@NATIVE_TRUE@am__append_7 = -lz\n+@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__append_8 = ttest ttest_alloc\n+@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_9 = btest_gnudebuglink\n+@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__append_10 = ctestg ctesta \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctestg_alloc \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctesta_alloc\n subdir = .\n@@ -181,21 +184,23 @@ libbacktrace_instrumented_alloc_la_OBJECTS =  \\\n libbacktrace_noformat_la_OBJECTS =  \\\n \t$(am_libbacktrace_noformat_la_OBJECTS)\n @NATIVE_TRUE@am_libbacktrace_noformat_la_rpath =\n-@NATIVE_TRUE@am__EXEEXT_1 = test_elf$(EXEEXT) test_xcoff_32$(EXEEXT) \\\n+@NATIVE_TRUE@am__EXEEXT_1 = allocfail$(EXEEXT)\n+@NATIVE_TRUE@am__EXEEXT_2 = test_elf$(EXEEXT) test_xcoff_32$(EXEEXT) \\\n @NATIVE_TRUE@\ttest_xcoff_64$(EXEEXT) test_pecoff$(EXEEXT) \\\n @NATIVE_TRUE@\ttest_unknown$(EXEEXT) unittest$(EXEEXT) \\\n-@NATIVE_TRUE@\tunittest_alloc$(EXEEXT) allocfail$(EXEEXT) \\\n-@NATIVE_TRUE@\tbtest$(EXEEXT) btest_alloc$(EXEEXT) \\\n-@NATIVE_TRUE@\tstest$(EXEEXT) stest_alloc$(EXEEXT) \\\n-@NATIVE_TRUE@\tztest$(EXEEXT) ztest_alloc$(EXEEXT) \\\n-@NATIVE_TRUE@\tedtest$(EXEEXT) edtest_alloc$(EXEEXT)\n-@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__EXEEXT_2 = ttest$(EXEEXT) \\\n+@NATIVE_TRUE@\tunittest_alloc$(EXEEXT) btest$(EXEEXT) \\\n+@NATIVE_TRUE@\tbtest_alloc$(EXEEXT) stest$(EXEEXT) \\\n+@NATIVE_TRUE@\tstest_alloc$(EXEEXT) ztest$(EXEEXT) \\\n+@NATIVE_TRUE@\tztest_alloc$(EXEEXT) edtest$(EXEEXT) \\\n+@NATIVE_TRUE@\tedtest_alloc$(EXEEXT)\n+@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__EXEEXT_3 = ttest$(EXEEXT) \\\n @HAVE_PTHREAD_TRUE@@NATIVE_TRUE@\tttest_alloc$(EXEEXT)\n-@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__EXEEXT_3 =  \\\n+@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__EXEEXT_4 =  \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctestg$(EXEEXT) \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctesta$(EXEEXT) \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctestg_alloc$(EXEEXT) \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctesta_alloc$(EXEEXT)\n+am__EXEEXT_5 = $(am__EXEEXT_2) $(am__EXEEXT_3) $(am__EXEEXT_4)\n @NATIVE_TRUE@am_allocfail_OBJECTS = allocfail.$(OBJEXT) \\\n @NATIVE_TRUE@\ttestlib.$(OBJEXT)\n allocfail_OBJECTS = $(am_allocfail_OBJECTS)\n@@ -789,8 +794,9 @@ libbacktrace_la_LIBADD = \\\n \t$(ALLOC_FILE)\n \n libbacktrace_la_DEPENDENCIES = $(libbacktrace_la_LIBADD)\n-TESTS = $(check_PROGRAMS) $(am__append_2) $(am__append_3) \\\n-\t$(am__append_4) $(am__append_8)\n+\n+# Add test to this variable, if you want it to be build and run.\n+BUILDTESTS = $(am__append_1) $(am__append_8) $(am__append_10)\n @NATIVE_TRUE@check_LTLIBRARIES = libbacktrace_alloc.la \\\n @NATIVE_TRUE@\tlibbacktrace_noformat.la \\\n @NATIVE_TRUE@\tlibbacktrace_instrumented_alloc.la\n@@ -835,9 +841,9 @@ TESTS = $(check_PROGRAMS) $(am__append_2) $(am__append_3) \\\n @NATIVE_TRUE@stest_alloc_LDADD = libbacktrace_alloc.la\n @NATIVE_TRUE@ztest_SOURCES = ztest.c testlib.c\n @NATIVE_TRUE@ztest_CFLAGS = -DSRCDIR=\\\"$(srcdir)\\\"\n-@NATIVE_TRUE@ztest_LDADD = libbacktrace.la $(am__append_5) \\\n+@NATIVE_TRUE@ztest_LDADD = libbacktrace.la $(am__append_6) \\\n @NATIVE_TRUE@\t$(CLOCK_GETTIME_LINK)\n-@NATIVE_TRUE@ztest_alloc_LDADD = libbacktrace_alloc.la $(am__append_6) \\\n+@NATIVE_TRUE@ztest_alloc_LDADD = libbacktrace_alloc.la $(am__append_7) \\\n @NATIVE_TRUE@\t$(CLOCK_GETTIME_LINK)\n @NATIVE_TRUE@ztest_alloc_SOURCES = $(ztest_SOURCES)\n @NATIVE_TRUE@ztest_alloc_CFLAGS = $(ztest_CFLAGS)\n@@ -1418,6 +1424,34 @@ recheck: all $(check_LTLIBRARIES) $(check_PROGRAMS)\n \t        am__force_recheck=am--force-recheck \\\n \t        TEST_LOGS=\"$$log_list\"; \\\n \texit $$?\n+allocfail.sh.log: allocfail.sh\n+\t@p='allocfail.sh'; \\\n+\tb='allocfail.sh'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+btest_dwz.log: btest_dwz\n+\t@p='btest_dwz'; \\\n+\tb='btest_dwz'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+btest_dwz_gnudebuglink.log: btest_dwz_gnudebuglink\n+\t@p='btest_dwz_gnudebuglink'; \\\n+\tb='btest_dwz_gnudebuglink'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+btest_gnudebuglink.log: btest_gnudebuglink\n+\t@p='btest_gnudebuglink'; \\\n+\tb='btest_gnudebuglink'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n test_elf.log: test_elf$(EXEEXT)\n \t@p='test_elf$(EXEEXT)'; \\\n \tb='test_elf'; \\\n@@ -1467,13 +1501,6 @@ unittest_alloc.log: unittest_alloc$(EXEEXT)\n \t--log-file $$b.log --trs-file $$b.trs \\\n \t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n \t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n-allocfail.log: allocfail$(EXEEXT)\n-\t@p='allocfail$(EXEEXT)'; \\\n-\tb='allocfail'; \\\n-\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n-\t--log-file $$b.log --trs-file $$b.trs \\\n-\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n-\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n btest.log: btest$(EXEEXT)\n \t@p='btest$(EXEEXT)'; \\\n \tb='btest'; \\\n@@ -1572,34 +1599,6 @@ ctesta_alloc.log: ctesta_alloc$(EXEEXT)\n \t--log-file $$b.log --trs-file $$b.trs \\\n \t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n \t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n-allocfail.sh.log: allocfail.sh\n-\t@p='allocfail.sh'; \\\n-\tb='allocfail.sh'; \\\n-\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n-\t--log-file $$b.log --trs-file $$b.trs \\\n-\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n-\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n-btest_dwz.log: btest_dwz\n-\t@p='btest_dwz'; \\\n-\tb='btest_dwz'; \\\n-\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n-\t--log-file $$b.log --trs-file $$b.trs \\\n-\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n-\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n-btest_dwz_gnudebuglink.log: btest_dwz_gnudebuglink\n-\t@p='btest_dwz_gnudebuglink'; \\\n-\tb='btest_dwz_gnudebuglink'; \\\n-\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n-\t--log-file $$b.log --trs-file $$b.trs \\\n-\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n-\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n-btest_gnudebuglink.log: btest_gnudebuglink\n-\t@p='btest_gnudebuglink'; \\\n-\tb='btest_gnudebuglink'; \\\n-\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n-\t--log-file $$b.log --trs-file $$b.trs \\\n-\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n-\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n .test.log:\n \t@p='$<'; \\\n \t$(am__set_b); \\"}]}