{"sha": "462ec41561b714df3641e9b0f54e9f0b8bac4ef1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYyZWM0MTU2MWI3MTRkZjM2NDFlOWIwZjU0ZTlmMGI4YmFjNGVmMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-06-23T16:49:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-06-23T16:49:00Z"}, "message": "re PR libstdc++/22109 (/home/dave/opt/gnu/bin/ld: BFD 2.16.91 20050612 internal error)\n\n\tPR libstdc++/22109\n\t* src/compatibility.cc (_GLIBCXX_SYMVER_COMPATIBILITY): Remove.\n\t(istreambuf_iterator, basic_fstream, basic_ifstream, basic_ofstream,\n\t_M_copy, _M_move, _M_assign, _M_disjunct, _M_check_length,\n\t_M_set_length_and_sharable, ignore, eq): Define to XX suffixed\n\tvariants.\n\t(ignore (streamsize)): Remove _W prefixed aliases.\n\t(_GLIBCXX_3_4_SYMVER_SPECIAL, _GLIBCXX_3_4_5_SYMVER_SPECIAL,\n\t_GLIBCXX_APPLY_SYMVER_SPECIAL): Remove.\n\t(_GLIBCXX_3_4_SYMVER, _GLIBCXX_3_4_5_SYMVER): Add XXname argument.\n\tUse #XXname instead of #name as the alias argument.\n\t* config/abi/compatibility.h: Replace uses of\n\t_GLIBCXX_APPLY_SYMVER_SPECIAL with _GLIBCXX_APPLY_SYMVER.  Always\n\tpass 2 arguments to the _GLIBCXX_APPLY_SYMVER macro.\n\t* include/bits/char_traits.h (char_traits::eq): Revert 2005-06-15\n\tchange.\n\t* acinclude.m4: Decrease glibcxx_min_gnu_ld_version back to 21400.\n\t* configure: Rebuilt.\n\nFrom-SVN: r101273", "tree": {"sha": "bad9e1e79fd3dfb06bf421c890b14ed70cadc0c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bad9e1e79fd3dfb06bf421c890b14ed70cadc0c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/462ec41561b714df3641e9b0f54e9f0b8bac4ef1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/462ec41561b714df3641e9b0f54e9f0b8bac4ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/462ec41561b714df3641e9b0f54e9f0b8bac4ef1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/462ec41561b714df3641e9b0f54e9f0b8bac4ef1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e57f2b4144b1346f1461faaf0d610699e794a8f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e57f2b4144b1346f1461faaf0d610699e794a8f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e57f2b4144b1346f1461faaf0d610699e794a8f2"}], "stats": {"total": 215, "additions": 115, "deletions": 100}, "files": [{"sha": "89bd3181771f155b8e51eb04d35bff4d19b66a6d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462ec41561b714df3641e9b0f54e9f0b8bac4ef1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462ec41561b714df3641e9b0f54e9f0b8bac4ef1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=462ec41561b714df3641e9b0f54e9f0b8bac4ef1", "patch": "@@ -1,3 +1,24 @@\n+2005-06-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libstdc++/22109\n+\t* src/compatibility.cc (_GLIBCXX_SYMVER_COMPATIBILITY): Remove.\n+\t(istreambuf_iterator, basic_fstream, basic_ifstream, basic_ofstream,\n+\t_M_copy, _M_move, _M_assign, _M_disjunct, _M_check_length,\n+\t_M_set_length_and_sharable, ignore, eq): Define to XX suffixed\n+\tvariants.\n+\t(ignore (streamsize)): Remove _W prefixed aliases.\n+\t(_GLIBCXX_3_4_SYMVER_SPECIAL, _GLIBCXX_3_4_5_SYMVER_SPECIAL,\n+\t_GLIBCXX_APPLY_SYMVER_SPECIAL): Remove.\n+\t(_GLIBCXX_3_4_SYMVER, _GLIBCXX_3_4_5_SYMVER): Add XXname argument.\n+\tUse #XXname instead of #name as the alias argument.\n+\t* config/abi/compatibility.h: Replace uses of\n+\t_GLIBCXX_APPLY_SYMVER_SPECIAL with _GLIBCXX_APPLY_SYMVER.  Always\n+\tpass 2 arguments to the _GLIBCXX_APPLY_SYMVER macro.\n+\t* include/bits/char_traits.h (char_traits::eq): Revert 2005-06-15\n+\tchange.\n+\t* acinclude.m4: Decrease glibcxx_min_gnu_ld_version back to 21400.\n+\t* configure: Rebuilt.\n+\n 2005-06-19  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/22111"}, {"sha": "ee1b9f3e89a76fc6ebcc1803a1f738faf38ca2ce", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462ec41561b714df3641e9b0f54e9f0b8bac4ef1/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462ec41561b714df3641e9b0f54e9f0b8bac4ef1/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=462ec41561b714df3641e9b0f54e9f0b8bac4ef1", "patch": "@@ -1710,8 +1710,7 @@ fi\n \n # For GNU ld, we need at least this version.  The format is described in\n # GLIBCXX_CHECK_LINKER_FEATURES above.\n-# Need 21590 because of compatibility.cc's asm .symver strings for GLIBCXX_3.4.\n-glibcxx_min_gnu_ld_version=21590\n+glibcxx_min_gnu_ld_version=21400\n \n # Check to see if unspecified \"yes\" value can win, given results above.\n # Change \"yes\" into either \"no\" or a style name."}, {"sha": "9faa61d7914b350fda6cd77aab98a59c0f8df6c4", "filename": "libstdc++-v3/config/abi/compatibility.h", "status": "modified", "additions": 73, "deletions": 38, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462ec41561b714df3641e9b0f54e9f0b8bac4ef1/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fcompatibility.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462ec41561b714df3641e9b0f54e9f0b8bac4ef1/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fcompatibility.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fcompatibility.h?ref=462ec41561b714df3641e9b0f54e9f0b8bac4ef1", "patch": "@@ -39,10 +39,12 @@ _ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv\n  */\n namespace __gnu_internal\n {\n-_GLIBCXX_APPLY_SYMVER(_ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv)\n+_GLIBCXX_APPLY_SYMVER(_ZNSt21istreambuf_iteratorXXIcSt11char_traitsIcEEppEv,\n+\t\t      _ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv)\n \n #ifdef _GLIBCXX_USE_WCHAR_T\n-_GLIBCXX_APPLY_SYMVER(_ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv)\n+_GLIBCXX_APPLY_SYMVER(_ZNSt21istreambuf_iteratorXXIwSt11char_traitsIwEEppEv,\n+\t\t      _ZNSt19istreambuf_iteratorIwSt11char_traitsIwEEppEv)\n #endif\n } // namespace std\n \n@@ -77,103 +79,136 @@ _ZNSt11char_traitsIwE2eqERKwS2_\n  */\n namespace __gnu_internal\n {\n-_GLIBCXX_APPLY_SYMVER_SPECIAL(_ZNSt11char_traitsIcE2eqERKcS2_)\n+_GLIBCXX_APPLY_SYMVER(_ZNSt11char_traitsIcE4eqXXERKcS2_,\n+\t\t      _ZNSt11char_traitsIcE2eqERKcS2_)\n \n #ifdef _GLIBCXX_SIZE_T_IS_UINT\n-_GLIBCXX_APPLY_SYMVER(_ZNSs7_M_copyEPcPKcj)\n+_GLIBCXX_APPLY_SYMVER(_ZNSs9_M_copyXXEPcPKcj,\n+\t\t      _ZNSs7_M_copyEPcPKcj)\n #else\n-_GLIBCXX_APPLY_SYMVER(_ZNSs7_M_copyEPcPKcm)\n+_GLIBCXX_APPLY_SYMVER(_ZNSs9_M_copyXXEPcPKcm,\n+\t\t      _ZNSs7_M_copyEPcPKcm)\n #endif\n \n #ifdef _GLIBCXX_SIZE_T_IS_UINT\n-_GLIBCXX_APPLY_SYMVER(_ZNSs7_M_moveEPcPKcj)\n+_GLIBCXX_APPLY_SYMVER(_ZNSs9_M_moveXXEPcPKcj,\n+\t\t      _ZNSs7_M_moveEPcPKcj)\n #else\n-_GLIBCXX_APPLY_SYMVER(_ZNSs7_M_moveEPcPKcm)\n+_GLIBCXX_APPLY_SYMVER(_ZNSs9_M_moveXXEPcPKcm,\n+\t\t      _ZNSs7_M_moveEPcPKcm)\n #endif\n \n #ifdef _GLIBCXX_SIZE_T_IS_UINT\n-_GLIBCXX_APPLY_SYMVER(_ZNSs9_M_assignEPcjc)\n+_GLIBCXX_APPLY_SYMVER(_ZNSs11_M_assignXXEPcjc,\n+\t\t      _ZNSs9_M_assignEPcjc)\n #else\n-_GLIBCXX_APPLY_SYMVER(_ZNSs9_M_assignEPcmc)\n+_GLIBCXX_APPLY_SYMVER(_ZNSs11_M_assignXXEPcmc,\n+\t\t      _ZNSs9_M_assignEPcmc)\n #endif\n \n-_GLIBCXX_APPLY_SYMVER(_ZNKSs11_M_disjunctEPKc)\n+_GLIBCXX_APPLY_SYMVER(_ZNKSs13_M_disjunctXXEPKc,\n+\t\t      _ZNKSs11_M_disjunctEPKc)\n \n #ifdef _GLIBCXX_SIZE_T_IS_UINT\n-_GLIBCXX_APPLY_SYMVER(_ZNKSs15_M_check_lengthEjjPKc)\n+_GLIBCXX_APPLY_SYMVER(_ZNKSs17_M_check_lengthXXEjjPKc,\n+\t\t      _ZNKSs15_M_check_lengthEjjPKc)\n #else\n-_GLIBCXX_APPLY_SYMVER(_ZNKSs15_M_check_lengthEmmPKc)\n+_GLIBCXX_APPLY_SYMVER(_ZNKSs17_M_check_lengthXXEmmPKc,\n+\t\t      _ZNKSs15_M_check_lengthEmmPKc)\n #endif\n \n #ifdef _GLIBCXX_SIZE_T_IS_UINT\n-  _GLIBCXX_APPLY_SYMVER(_ZNSs4_Rep26_M_set_length_and_sharableEj)\n+  _GLIBCXX_APPLY_SYMVER(_ZNSs4_Rep28_M_set_length_and_sharableXXEj,\n+\t\t\t_ZNSs4_Rep26_M_set_length_and_sharableEj)\n #else\n-  _GLIBCXX_APPLY_SYMVER(_ZNSs4_Rep26_M_set_length_and_sharableEm)\n+  _GLIBCXX_APPLY_SYMVER(_ZNSs4_Rep28_M_set_length_and_sharableXXEm,\n+\t\t\t_ZNSs4_Rep26_M_set_length_and_sharableEm)\n #endif\n \n-_GLIBCXX_APPLY_SYMVER(_ZNSi6ignoreEv)\n+_GLIBCXX_APPLY_SYMVER(_ZNSi8ignoreXXEv, _ZNSi6ignoreEv)\n \n #ifdef _GLIBCXX_PTRDIFF_T_IS_INT\n-_GLIBCXX_APPLY_SYMVER_SPECIAL(_ZNSi6ignoreEi)\n+_GLIBCXX_APPLY_SYMVER(_ZNSi8ignoreXXEi, _ZNSi6ignoreEi)\n #else\n-_GLIBCXX_APPLY_SYMVER_SPECIAL(_ZNSi6ignoreEl)\n+_GLIBCXX_APPLY_SYMVER(_ZNSi8ignoreXXEl, _ZNSi6ignoreEl)\n #endif\n \n-_GLIBCXX_APPLY_SYMVER(_ZNKSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv)\n+_GLIBCXX_APPLY_SYMVER(_ZNKSt15basic_fstreamXXIcSt11char_traitsIcEE7is_openEv,\n+\t\t      _ZNKSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv)\n \n-_GLIBCXX_APPLY_SYMVER(_ZNKSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv)\n+_GLIBCXX_APPLY_SYMVER(_ZNKSt16basic_ifstreamXXIcSt11char_traitsIcEE7is_openEv,\n+\t\t      _ZNKSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv)\n \n-_GLIBCXX_APPLY_SYMVER(_ZNKSt14basic_ofstreamIcSt11char_traitsIcEE7is_openEv)\n+_GLIBCXX_APPLY_SYMVER(_ZNKSt16basic_ofstreamXXIcSt11char_traitsIcEE7is_openEv,\n+\t\t      _ZNKSt14basic_ofstreamIcSt11char_traitsIcEE7is_openEv)\n \n   // Support for wchar_t.\n #ifdef _GLIBCXX_USE_WCHAR_T\n-_GLIBCXX_APPLY_SYMVER_SPECIAL(_ZNSt11char_traitsIwE2eqERKwS2_)\n+_GLIBCXX_APPLY_SYMVER(_ZNSt11char_traitsIwE4eqXXERKwS2_,\n+\t\t      _ZNSt11char_traitsIwE2eqERKwS2_)\n \n #ifdef _GLIBCXX_SIZE_T_IS_UINT\n-_GLIBCXX_APPLY_SYMVER(_ZNSbIwSt11char_traitsIwESaIwEE7_M_copyEPwPKwj)\n+_GLIBCXX_APPLY_SYMVER(_ZNSbIwSt11char_traitsIwESaIwEE9_M_copyXXEPwPKwj,\n+\t\t      _ZNSbIwSt11char_traitsIwESaIwEE7_M_copyEPwPKwj)\n #else\n-  _GLIBCXX_APPLY_SYMVER(_ZNSbIwSt11char_traitsIwESaIwEE7_M_copyEPwPKwm)\n+  _GLIBCXX_APPLY_SYMVER(_ZNSbIwSt11char_traitsIwESaIwEE9_M_copyXXEPwPKwm,\n+\t\t\t_ZNSbIwSt11char_traitsIwESaIwEE7_M_copyEPwPKwm)\n #endif\n \n #ifdef _GLIBCXX_SIZE_T_IS_UINT\n-_GLIBCXX_APPLY_SYMVER(_ZNSbIwSt11char_traitsIwESaIwEE7_M_moveEPwPKwj)\n+_GLIBCXX_APPLY_SYMVER(_ZNSbIwSt11char_traitsIwESaIwEE9_M_moveXXEPwPKwj,\n+\t\t      _ZNSbIwSt11char_traitsIwESaIwEE7_M_moveEPwPKwj)\n #else\n-_GLIBCXX_APPLY_SYMVER(_ZNSbIwSt11char_traitsIwESaIwEE7_M_moveEPwPKwm)\n+_GLIBCXX_APPLY_SYMVER(_ZNSbIwSt11char_traitsIwESaIwEE9_M_moveXXEPwPKwm,\n+\t\t      _ZNSbIwSt11char_traitsIwESaIwEE7_M_moveEPwPKwm)\n #endif\n \n #ifdef _GLIBCXX_SIZE_T_IS_UINT\n-_GLIBCXX_APPLY_SYMVER(_ZNSbIwSt11char_traitsIwESaIwEE9_M_assignEPwjw)\n+_GLIBCXX_APPLY_SYMVER(_ZNSbIwSt11char_traitsIwESaIwEE11_M_assignXXEPwjw,\n+\t\t      _ZNSbIwSt11char_traitsIwESaIwEE9_M_assignEPwjw)\n #else\n-_GLIBCXX_APPLY_SYMVER(_ZNSbIwSt11char_traitsIwESaIwEE9_M_assignEPwmw)\n+_GLIBCXX_APPLY_SYMVER(_ZNSbIwSt11char_traitsIwESaIwEE11_M_assignXXEPwmw,\n+\t\t      _ZNSbIwSt11char_traitsIwESaIwEE9_M_assignEPwmw)\n #endif\n \n-_GLIBCXX_APPLY_SYMVER(_ZNKSbIwSt11char_traitsIwESaIwEE11_M_disjunctEPKw)\n+_GLIBCXX_APPLY_SYMVER(_ZNKSbIwSt11char_traitsIwESaIwEE13_M_disjunctXXEPKw,\n+\t\t      _ZNKSbIwSt11char_traitsIwESaIwEE11_M_disjunctEPKw)\n \n #ifdef _GLIBCXX_SIZE_T_IS_UINT\n-_GLIBCXX_APPLY_SYMVER(_ZNKSbIwSt11char_traitsIwESaIwEE15_M_check_lengthEjjPKc)\n+_GLIBCXX_APPLY_SYMVER(_ZNKSbIwSt11char_traitsIwESaIwEE17_M_check_lengthXXEjjPKc,\n+\t\t      _ZNKSbIwSt11char_traitsIwESaIwEE15_M_check_lengthEjjPKc)\n #else\n-_GLIBCXX_APPLY_SYMVER(_ZNKSbIwSt11char_traitsIwESaIwEE15_M_check_lengthEmmPKc)\n+_GLIBCXX_APPLY_SYMVER(_ZNKSbIwSt11char_traitsIwESaIwEE17_M_check_lengthXXEmmPKc,\n+\t\t      _ZNKSbIwSt11char_traitsIwESaIwEE15_M_check_lengthEmmPKc)\n #endif\n \n #ifdef _GLIBCXX_SIZE_T_IS_UINT\n-_GLIBCXX_APPLY_SYMVER(_ZNSbIwSt11char_traitsIwESaIwEE4_Rep26_M_set_length_and_sharableEj)\n+_GLIBCXX_APPLY_SYMVER(_ZNSbIwSt11char_traitsIwESaIwEE4_Rep28_M_set_length_and_sharableXXEj,\n+\t\t      _ZNSbIwSt11char_traitsIwESaIwEE4_Rep26_M_set_length_and_sharableEj)\n #else\n-_GLIBCXX_APPLY_SYMVER(_ZNSbIwSt11char_traitsIwESaIwEE4_Rep26_M_set_length_and_sharableEm)\n+_GLIBCXX_APPLY_SYMVER(_ZNSbIwSt11char_traitsIwESaIwEE4_Rep28_M_set_length_and_sharableXXEm,\n+\t\t      _ZNSbIwSt11char_traitsIwESaIwEE4_Rep26_M_set_length_and_sharableEm)\n #endif\n \n-_GLIBCXX_APPLY_SYMVER(_ZNSt13basic_istreamIwSt11char_traitsIwEE6ignoreEv)\n+_GLIBCXX_APPLY_SYMVER(_ZNSt13basic_istreamIwSt11char_traitsIwEE8ignoreXXEv,\n+\t\t      _ZNSt13basic_istreamIwSt11char_traitsIwEE6ignoreEv)\n \n #ifdef _GLIBCXX_PTRDIFF_T_IS_INT\n-_GLIBCXX_APPLY_SYMVER_SPECIAL(_ZNSt13basic_istreamIwSt11char_traitsIwEE6ignoreEi)\n+_GLIBCXX_APPLY_SYMVER(_ZNSt13basic_istreamIwSt11char_traitsIwEE8ignoreXXEi,\n+\t\t      _ZNSt13basic_istreamIwSt11char_traitsIwEE6ignoreEi)\n #else\n-_GLIBCXX_APPLY_SYMVER_SPECIAL(_ZNSt13basic_istreamIwSt11char_traitsIwEE6ignoreEl)\n+_GLIBCXX_APPLY_SYMVER(_ZNSt13basic_istreamIwSt11char_traitsIwEE8ignoreXXEl,\n+\t\t      _ZNSt13basic_istreamIwSt11char_traitsIwEE6ignoreEl)\n #endif\n \n-_GLIBCXX_APPLY_SYMVER(_ZNKSt13basic_fstreamIwSt11char_traitsIwEE7is_openEv)\n+_GLIBCXX_APPLY_SYMVER(_ZNKSt15basic_fstreamXXIwSt11char_traitsIwEE7is_openEv,\n+\t\t      _ZNKSt13basic_fstreamIwSt11char_traitsIwEE7is_openEv)\n \n-_GLIBCXX_APPLY_SYMVER(_ZNKSt14basic_ifstreamIwSt11char_traitsIwEE7is_openEv)\n+_GLIBCXX_APPLY_SYMVER(_ZNKSt16basic_ifstreamXXIwSt11char_traitsIwEE7is_openEv,\n+\t\t      _ZNKSt14basic_ifstreamIwSt11char_traitsIwEE7is_openEv)\n \n-_GLIBCXX_APPLY_SYMVER(_ZNKSt14basic_ofstreamIwSt11char_traitsIwEE7is_openEv)\n+_GLIBCXX_APPLY_SYMVER(_ZNKSt16basic_ofstreamXXIwSt11char_traitsIwEE7is_openEv,\n+\t\t      _ZNKSt14basic_ofstreamIwSt11char_traitsIwEE7is_openEv)\n #endif\n }\n "}, {"sha": "fd3779979563da592f2e429fa7be5516f39b4953", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462ec41561b714df3641e9b0f54e9f0b8bac4ef1/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462ec41561b714df3641e9b0f54e9f0b8bac4ef1/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=462ec41561b714df3641e9b0f54e9f0b8bac4ef1", "patch": "@@ -87292,8 +87292,7 @@ fi\n \n # For GNU ld, we need at least this version.  The format is described in\n # GLIBCXX_CHECK_LINKER_FEATURES above.\n-# Need 21590 because of compatibility.cc's asm .symver strings for GLIBCXX_3.4.\n-glibcxx_min_gnu_ld_version=21590\n+glibcxx_min_gnu_ld_version=21400\n \n # Check to see if unspecified \"yes\" value can win, given results above.\n # Change \"yes\" into either \"no\" or a style name."}, {"sha": "57a92ac1083937ef0d5140d45cfb0fdbe315ae81", "filename": "libstdc++-v3/include/bits/char_traits.h", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462ec41561b714df3641e9b0f54e9f0b8bac4ef1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462ec41561b714df3641e9b0f54e9f0b8bac4ef1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h?ref=462ec41561b714df3641e9b0f54e9f0b8bac4ef1", "patch": "@@ -242,10 +242,7 @@ namespace std\n \n       static bool\n       eq(const char_type& __c1, const char_type& __c2)\n-#ifdef _GLIBCXX_SYMVER_COMPATIBILITY\n-      asm (\"_W_ZNSt11char_traitsIcE2eqERKcS2_\");\n-#endif\n-      ;\n+      { return __c1 == __c2; }\n \n       static bool\n       lt(const char_type& __c1, const char_type& __c2)\n@@ -297,9 +294,6 @@ namespace std\n       { return (__c == eof()) ? 0 : __c; }\n   };\n \n-  inline bool\n-  char_traits<char>::eq(const char_type& __c1, const char_type& __c2)\n-  { return __c1 == __c2; } \n \n #ifdef _GLIBCXX_USE_WCHAR_T\n   /// @brief  21.1.3.2  char_traits specializations\n@@ -317,11 +311,8 @@ namespace std\n       { __c1 = __c2; }\n \n       static bool\n-      eq(const char_type& __c1, const char_type& __c2) \n-#ifdef _GLIBCXX_SYMVER_COMPATIBILITY\n-      asm (\"_W_ZNSt11char_traitsIwE2eqERKwS2_\")\n-#endif\n-      ;\n+      eq(const char_type& __c1, const char_type& __c2)\n+      { return __c1 == __c2; }\n \n       static bool\n       lt(const char_type& __c1, const char_type& __c2)\n@@ -368,10 +359,6 @@ namespace std\n       not_eof(const int_type& __c)\n       { return eq_int_type(__c, eof()) ? 0 : __c; }\n   };\n-\n-  inline bool\n-  char_traits<wchar_t>::eq(const char_type& __c1, const char_type& __c2)\n-  { return __c1 == __c2; } \n #endif //_GLIBCXX_USE_WCHAR_T\n \n } // namespace std"}, {"sha": "1deb56c3f30d4499cc502c77cc98fd2ae73047f2", "filename": "libstdc++-v3/src/compatibility.cc", "status": "modified", "additions": 16, "deletions": 42, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/462ec41561b714df3641e9b0f54e9f0b8bac4ef1/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/462ec41561b714df3641e9b0f54e9f0b8bac4ef1/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc?ref=462ec41561b714df3641e9b0f54e9f0b8bac4ef1", "patch": "@@ -31,7 +31,18 @@\n #include <bits/c++config.h>\n \n #if defined(_GLIBCXX_SYMVER) && defined(PIC)\n-# define _GLIBCXX_SYMVER_COMPATIBILITY 1\n+#define istreambuf_iterator istreambuf_iteratorXX\n+#define basic_fstream basic_fstreamXX\n+#define basic_ifstream basic_ifstreamXX\n+#define basic_ofstream basic_ofstreamXX\n+#define _M_copy(a, b, c) _M_copyXX(a, b, c)\n+#define _M_move(a, b, c) _M_moveXX(a, b, c)\n+#define _M_assign(a, b, c) _M_assignXX(a, b, c)\n+#define _M_disjunct(a) _M_disjunctXX(a)\n+#define _M_check_length(a, b, c) _M_check_lengthXX(a, b, c)\n+#define _M_set_length_and_sharable(a) _M_set_length_and_sharableXX(a)\n+#define ignore ignoreXX\n+#define eq eqXX\n #endif\n \n #include <string>\n@@ -42,27 +53,6 @@\n namespace std\n {\n   // std::istream ignore explicit specializations.\n-#if defined(_GLIBCXX_SYMVER) && defined(PIC)\n-  template<>\n-    basic_istream<char>&\n-    basic_istream<char>::ignore(streamsize __n) \n-#ifdef _GLIBCXX_PTRDIFF_T_IS_INT\n-    asm (\"_W_ZNSi6ignoreEi\");\n-#else\n-    asm (\"_W_ZNSi6ignoreEl\");\n-#endif\n-\n-#ifdef _GLIBCXX_USE_WCHAR_T\n-  template<>\n-    basic_istream<wchar_t>&\n-    basic_istream<wchar_t>::ignore(streamsize __n)\n-#ifdef _GLIBCXX_PTRDIFF_T_IS_INT\n-     asm (\"_W_ZNSt13basic_istreamIwSt11char_traitsIwEE6ignoreEi\");\n-#else\n-     asm (\"_W_ZNSt13basic_istreamIwSt11char_traitsIwEE6ignoreEl\");\n-#endif\n-#endif\n-#endif // _GLIBCXX_SYMVER && PIC\n \n   template<>\n     basic_istream<char>&\n@@ -347,43 +337,27 @@ namespace std\n // In the future, GLIBCXX_ABI > 6 should remove all uses of\n // _GLIBCXX_*_SYMVER macros in this file.\n \n-#define _GLIBCXX_3_4_SYMVER(name) \\\n-   extern \"C\" void \\\n-   _X##name() \\\n-   __attribute__ ((alias(#name))); \\\n-   asm (\".symver \" \"_X\" #name \",\" #name \"@GLIBCXX_3.4\");\n-\n-#define _GLIBCXX_3_4_5_SYMVER(name) \\\n-   extern \"C\" void \\\n-   _Y##name() \\\n-   __attribute__ ((alias(#name))); \\\n-   asm (\".symver \" \"_Y\" #name  \",\" #name \"@@GLIBCXX_3.4.5\");\n-\n-#define _GLIBCXX_3_4_SYMVER_SPECIAL(name) \\\n+#define _GLIBCXX_3_4_SYMVER(XXname, name) \\\n    extern \"C\" void \\\n    _X##name() \\\n-   __attribute__ ((alias(\"_W\" #name))); \\\n+   __attribute__ ((alias(#XXname))); \\\n    asm (\".symver \" \"_X\" #name \",\" #name \"@GLIBCXX_3.4\");\n \n-#define _GLIBCXX_3_4_5_SYMVER_SPECIAL(name) \\\n+#define _GLIBCXX_3_4_5_SYMVER(XXname, name) \\\n    extern \"C\" void \\\n    _Y##name() \\\n-   __attribute__ ((alias(\"_W\" #name))); \\\n+   __attribute__ ((alias(#XXname))); \\\n    asm (\".symver \" \"_Y\" #name  \",\" #name \"@@GLIBCXX_3.4.5\");\n \n #define _GLIBCXX_ASM_SYMVER(cur, old, version) \\\n    asm (\".symver \" #cur \",\" #old \"@@\" #version);\n \n #define _GLIBCXX_APPLY_SYMVER _GLIBCXX_3_4_SYMVER\n-#define _GLIBCXX_APPLY_SYMVER_SPECIAL _GLIBCXX_3_4_SYMVER_SPECIAL\n #include <bits/compatibility.h>\n #undef _GLIBCXX_APPLY_SYMVER\n-#undef _GLIBCXX_APPLY_SYMVER_SPECIAL\n \n #define _GLIBCXX_APPLY_SYMVER _GLIBCXX_3_4_5_SYMVER\n-#define _GLIBCXX_APPLY_SYMVER_SPECIAL _GLIBCXX_3_4_5_SYMVER_SPECIAL\n #include <bits/compatibility.h>\n #undef _GLIBCXX_APPLY_SYMVER\n-#undef _GLIBCXX_APPLY_SYMVER_SPECIAL\n \n #endif"}]}