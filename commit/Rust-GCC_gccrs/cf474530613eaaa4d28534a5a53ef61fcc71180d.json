{"sha": "cf474530613eaaa4d28534a5a53ef61fcc71180d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y0NzQ1MzA2MTNlYWFhNGQyODUzNGE1YTUzZWY2MWZjYzcxMTgwZA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2017-03-28T17:01:05Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2017-03-28T17:01:05Z"}, "message": "re PR fortran/78661 ([OOP] Namelist output missing object designator under DTIO)\n\n2017-03-28  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/78661\n\t* trans-io.c (transfer_namelist_element): Perform a polymorphic call\n\tto a DTIO procedure if necessary.\n\n2017-03-28  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/78661\n\t* gfortran.dg/dtio_25.f90: Modified test case.\n\t* gfortran.dg/dtio_27.f90: New test case.\n\n2017-03-28  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/78661\n\t* io/write.c (nml_write_obj): Build a class container only if necessary.\n\nFrom-SVN: r246546", "tree": {"sha": "6beb828d036294eea66384e7a4eb740ad9421682", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6beb828d036294eea66384e7a4eb740ad9421682"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf474530613eaaa4d28534a5a53ef61fcc71180d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf474530613eaaa4d28534a5a53ef61fcc71180d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf474530613eaaa4d28534a5a53ef61fcc71180d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf474530613eaaa4d28534a5a53ef61fcc71180d/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "189d9d3a8fca52e18a62f16a4e316dc690a4d856", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/189d9d3a8fca52e18a62f16a4e316dc690a4d856", "html_url": "https://github.com/Rust-GCC/gccrs/commit/189d9d3a8fca52e18a62f16a4e316dc690a4d856"}], "stats": {"total": 191, "additions": 164, "deletions": 27}, "files": [{"sha": "7528f37a02025f600d080d3e5c307b4fc8cb9de2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf474530613eaaa4d28534a5a53ef61fcc71180d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf474530613eaaa4d28534a5a53ef61fcc71180d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cf474530613eaaa4d28534a5a53ef61fcc71180d", "patch": "@@ -1,3 +1,9 @@\n+2017-03-28  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/78661\n+\t* trans-io.c (transfer_namelist_element): Perform a polymorphic call\n+\tto a DTIO procedure if necessary.\n+\n 2017-03-25  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/80156"}, {"sha": "1b70136f493568e55cea432ff585e735ce27cbdd", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 45, "deletions": 14, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf474530613eaaa4d28534a5a53ef61fcc71180d/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf474530613eaaa4d28534a5a53ef61fcc71180d/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=cf474530613eaaa4d28534a5a53ef61fcc71180d", "patch": "@@ -1701,22 +1701,53 @@ transfer_namelist_element (stmtblock_t * block, const char * var_name,\n   /* Check if the derived type has a specific DTIO for the mode.\n      Note that although namelist io is forbidden to have a format\n      list, the specific subroutine is of the formatted kind.  */\n-  if (ts->type == BT_DERIVED)\n+  if (ts->type == BT_DERIVED || ts->type == BT_CLASS)\n     {\n-      gfc_symbol *dtio_sub = NULL;\n-      gfc_symbol *vtab;\n-      dtio_sub = gfc_find_specific_dtio_proc (ts->u.derived,\n-\t\t\t\t\t      last_dt == WRITE,\n-\t\t\t\t\t      true);\n-      if (dtio_sub != NULL)\n+      gfc_symbol *derived;\n+      if (ts->type==BT_CLASS)\n+\tderived = ts->u.derived->components->ts.u.derived;\n+      else\n+\tderived = ts->u.derived;\n+\n+      gfc_symtree *tb_io_st = gfc_find_typebound_dtio_proc (derived,\n+\t\t\t\t\t\t\tlast_dt == WRITE, true);\n+\n+      if (ts->type == BT_CLASS && tb_io_st)\n+\t{\n+\t  // polymorphic DTIO call  (based on the dynamic type)\n+\t  gfc_se se;\n+\t  gfc_symtree *st = gfc_find_symtree (sym->ns->sym_root, sym->name);\n+\t  // build vtable expr\n+\t  gfc_expr *expr = gfc_get_variable_expr (st);\n+\t  gfc_add_vptr_component (expr);\n+\t  gfc_init_se (&se, NULL);\n+\t  se.want_pointer = 1;\n+\t  gfc_conv_expr (&se, expr);\n+\t  vtable = se.expr;\n+\t  // build dtio expr\n+\t  gfc_add_component_ref (expr,\n+\t\t\t\ttb_io_st->n.tb->u.generic->specific_st->name);\n+\t  gfc_init_se (&se, NULL);\n+\t  se.want_pointer = 1;\n+\t  gfc_conv_expr (&se, expr);\n+\t  gfc_free_expr (expr);\n+\t  dtio_proc = se.expr;\n+\t}\n+      else\n \t{\n-\t  dtio_proc = gfc_get_symbol_decl (dtio_sub);\n-\t  dtio_proc = gfc_build_addr_expr (NULL, dtio_proc);\n-\t  vtab = gfc_find_derived_vtab (ts->u.derived);\n-\t  vtable = vtab->backend_decl;\n-\t  if (vtable == NULL_TREE)\n-\t    vtable = gfc_get_symbol_decl (vtab);\n-\t  vtable = gfc_build_addr_expr (pvoid_type_node, vtable);\n+\t  // non-polymorphic DTIO call (based on the declared type)\n+\t  gfc_symbol *dtio_sub = gfc_find_specific_dtio_proc (derived,\n+\t\t\t\t\t\t\tlast_dt == WRITE, true);\n+\t  if (dtio_sub != NULL)\n+\t    {\n+\t      dtio_proc = gfc_get_symbol_decl (dtio_sub);\n+\t      dtio_proc = gfc_build_addr_expr (NULL, dtio_proc);\n+\t      gfc_symbol *vtab = gfc_find_derived_vtab (derived);\n+\t      vtable = vtab->backend_decl;\n+\t      if (vtable == NULL_TREE)\n+\t\tvtable = gfc_get_symbol_decl (vtab);\n+\t      vtable = gfc_build_addr_expr (pvoid_type_node, vtable);\n+\t    }\n \t}\n     }\n "}, {"sha": "c7c82a3e39d8357d7545cf6e0b8cdf002bac49dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf474530613eaaa4d28534a5a53ef61fcc71180d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf474530613eaaa4d28534a5a53ef61fcc71180d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cf474530613eaaa4d28534a5a53ef61fcc71180d", "patch": "@@ -1,3 +1,9 @@\n+2017-03-28  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/78661\n+\t* gfortran.dg/dtio_25.f90: Modified test case.\n+\t* gfortran.dg/dtio_27.f90: New test case.\n+\n 2017-03-28  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/53383"}, {"sha": "6e66a3121feb91b6b5647da8d8695df0b0528ad0", "filename": "gcc/testsuite/gfortran.dg/dtio_25.f90", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf474530613eaaa4d28534a5a53ef61fcc71180d/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_25.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf474530613eaaa4d28534a5a53ef61fcc71180d/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_25.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_25.f90?ref=cf474530613eaaa4d28534a5a53ef61fcc71180d", "patch": "@@ -8,6 +8,8 @@ module m\n   contains\n     procedure :: write_formatted\n     generic :: write(formatted) => write_formatted\n+    procedure :: read_formatted\n+    generic :: read(formatted) => read_formatted\n   end type\n contains\n   subroutine write_formatted(dtv, unit, iotype, v_list, iostat, iomsg)\n@@ -18,11 +20,26 @@ subroutine write_formatted(dtv, unit, iotype, v_list, iostat, iomsg)\n     integer, intent(out) :: iostat\n     character(*), intent(inout) :: iomsg\n     if (iotype.eq.\"NAMELIST\") then\n-      write (unit, '(a,a,a,a,i5)') 'x%c=\"',dtv%c,'\",','x%k=', dtv%k\n+      write (unit, '(a3,a1,i3)') dtv%c,',', dtv%k\n     else\n       write (unit,*) dtv%c, dtv%k\n     end if\n   end subroutine\n+  subroutine read_formatted(dtv, unit, iotype, v_list, iostat, iomsg)\n+    class(t), intent(inout) :: dtv\n+    integer, intent(in) :: unit\n+    character(*), intent(in) :: iotype\n+    integer, intent(in) :: v_list(:)\n+    integer, intent(out) :: iostat\n+    character(*), intent(inout) :: iomsg\n+    character :: comma\n+    if (iotype.eq.\"NAMELIST\") then\n+      read (unit, '(a4,a1,i3)') dtv%c, comma, dtv%k    ! FIXME: need a4 here, with a3 above\n+    else\n+      read (unit,*) dtv%c, comma, dtv%k\n+    end if\n+    if (comma /= ',') call abort()\n+  end subroutine\n end module\n \n program p\n@@ -33,9 +50,8 @@ program p\n   namelist /nml/ x\n   x = t('a', 5)\n   write (buffer, nml)\n-  if (buffer.ne.'&NML x%c=\"a\",x%k=    5  /') call abort\n+  if (buffer.ne.'&NML  X=  a,  5  /') call abort\n   x = t('x', 0)\n   read (buffer, nml)\n   if (x%c.ne.'a'.or. x%k.ne.5) call abort\n end\n-"}, {"sha": "b8b6bad98f5260650a84a34a8f8efe2a89577109", "filename": "gcc/testsuite/gfortran.dg/dtio_27.f90", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf474530613eaaa4d28534a5a53ef61fcc71180d/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_27.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf474530613eaaa4d28534a5a53ef61fcc71180d/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_27.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_27.f90?ref=cf474530613eaaa4d28534a5a53ef61fcc71180d", "patch": "@@ -0,0 +1,65 @@\n+! { dg-do run }\n+!\n+! PR 78661: [OOP] Namelist output missing object designator under DTIO\n+!\n+! Contributed by Ian Harvey <ian_harvey@bigpond.com>\n+\n+MODULE m\n+  IMPLICIT NONE\n+  TYPE :: t\n+    CHARACTER :: c\n+  CONTAINS\n+    PROCEDURE :: write_formatted\n+    GENERIC :: WRITE(FORMATTED) => write_formatted\n+    PROCEDURE :: read_formatted\n+    GENERIC :: READ(FORMATTED) => read_formatted\n+  END TYPE\n+CONTAINS\n+  SUBROUTINE write_formatted(dtv, unit, iotype, v_list, iostat, iomsg)\n+    CLASS(t), INTENT(IN) :: dtv\n+    INTEGER, INTENT(IN) :: unit\n+    CHARACTER(*), INTENT(IN) :: iotype\n+    INTEGER, INTENT(IN) :: v_list(:)\n+    INTEGER, INTENT(OUT) :: iostat\n+    CHARACTER(*), INTENT(INOUT) :: iomsg\n+    WRITE (unit, \"(A)\", IOSTAT=iostat, IOMSG=iomsg) dtv%c\n+  END SUBROUTINE\n+  SUBROUTINE read_formatted(dtv, unit, iotype, v_list, iostat, iomsg)\n+    CLASS(t), INTENT(INOUT) :: dtv\n+    INTEGER, INTENT(IN) :: unit\n+    CHARACTER(*), INTENT(IN) :: iotype\n+    INTEGER, INTENT(IN) :: v_list(:)\n+    INTEGER, INTENT(OUT) :: iostat\n+    CHARACTER(*), INTENT(INOUT) :: iomsg\n+    READ (unit, \"(A)\", IOSTAT=iostat, IOMSG=iomsg) dtv%c\n+  END SUBROUTINE\n+END MODULE\n+\n+\n+PROGRAM p\n+\n+  USE m\n+  IMPLICIT NONE\n+  character(len=4), dimension(3) :: buffer\n+  call test_type\n+  call test_class\n+\n+contains\n+\n+  subroutine test_type\n+    type(t) :: x\n+    namelist /n1/ x\n+    x = t('a')\n+    write (buffer, n1)\n+    if (buffer(2) /= \" X=a\") call abort()\n+  end subroutine\n+\n+  subroutine test_class\n+    class(t), allocatable :: y\n+    namelist /n2/ y\n+    y = t('b')\n+    write (buffer, n2)\n+    if (buffer(2) /= \" Y=b\") call abort()\n+  end subroutine\n+\n+END"}, {"sha": "13fe6bbeb4478a2cb5d8ffd04f1353925c36deeb", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf474530613eaaa4d28534a5a53ef61fcc71180d/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf474530613eaaa4d28534a5a53ef61fcc71180d/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=cf474530613eaaa4d28534a5a53ef61fcc71180d", "patch": "@@ -1,3 +1,8 @@\n+2017-03-28  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/78661\n+\t* io/write.c (nml_write_obj): Build a class container only if necessary.\n+\n 2017-03-27  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \t* io/list_read.c: Insert /* Fall through. */ in the macro"}, {"sha": "af46fe8e6233d8804937a4dc58bd613f18a3c2da", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf474530613eaaa4d28534a5a53ef61fcc71180d/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf474530613eaaa4d28534a5a53ef61fcc71180d/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=cf474530613eaaa4d28534a5a53ef61fcc71180d", "patch": "@@ -2075,7 +2075,7 @@ nml_write_obj (st_parameter_dt *dtp, namelist_info * obj, index_type offset,\n   /* Write namelist variable names in upper case. If a derived type,\n      nothing is output.  If a component, base and base_name are set.  */\n \n-  if (obj->type != BT_DERIVED)\n+  if (obj->type != BT_DERIVED || obj->dtio_sub != NULL)\n     {\n       namelist_write_newline (dtp);\n       write_character (dtp, \" \", 1, 1, NODELIM);\n@@ -2227,15 +2227,10 @@ nml_write_obj (st_parameter_dt *dtp, namelist_info * obj, index_type offset,\n \t\t  int noiostat;\n \t\t  int *child_iostat = NULL;\n \t\t  gfc_array_i4 vlist;\n-\t\t  gfc_class list_obj;\n \t\t  formatted_dtio dtio_ptr = (formatted_dtio)obj->dtio_sub;\n \n \t\t  GFC_DIMENSION_SET(vlist.dim[0],1, 0, 0);\n \n-\t\t  list_obj.data = p;\n-\t\t  list_obj.vptr = obj->vtable;\n-\t\t  list_obj.len = 0;\n-\n \t\t  /* Set iostat, intent(out).  */\n \t\t  noiostat = 0;\n \t\t  child_iostat = (dtp->common.flags & IOPARM_HAS_IOSTAT) ?\n@@ -2252,7 +2247,6 @@ nml_write_obj (st_parameter_dt *dtp, namelist_info * obj, index_type offset,\n \t\t      child_iomsg = tmp_iomsg;\n \t\t      child_iomsg_len = IOMSG_LEN;\n \t\t    }\n-\t\t  namelist_write_newline (dtp);\n \n \t\t  /* If writing to an internal unit, stash it to allow\n \t\t     the child procedure to access it.  */\n@@ -2261,9 +2255,23 @@ nml_write_obj (st_parameter_dt *dtp, namelist_info * obj, index_type offset,\n \t\t      \n \t\t  /* Call the user defined formatted WRITE procedure.  */\n \t\t  dtp->u.p.current_unit->child_dtio++;\n-\t\t  dtio_ptr ((void *)&list_obj, &unit, iotype, &vlist,\n-\t\t\t    child_iostat, child_iomsg,\n-\t\t\t    iotype_len, child_iomsg_len);\n+\t\t  if (obj->type == BT_DERIVED)\n+\t\t    {\n+\t\t      // build a class container\n+\t\t      gfc_class list_obj;\n+\t\t      list_obj.data = p;\n+\t\t      list_obj.vptr = obj->vtable;\n+\t\t      list_obj.len = 0;\n+\t\t      dtio_ptr ((void *)&list_obj, &unit, iotype, &vlist,\n+\t\t\t\tchild_iostat, child_iomsg,\n+\t\t\t\tiotype_len, child_iomsg_len);\n+\t\t    }\n+\t\t  else\n+\t\t    {\n+\t\t      dtio_ptr (p, &unit, iotype, &vlist,\n+\t\t\t\tchild_iostat, child_iomsg,\n+\t\t\t\tiotype_len, child_iomsg_len);\n+\t\t    }\n \t\t  dtp->u.p.current_unit->child_dtio--;\n \n \t\t  goto obj_loop;"}]}