{"sha": "f786ab27b0730beec196df0902d7fefab7b55823", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc4NmFiMjdiMDczMGJlZWMxOTZkZjA5MDJkN2ZlZmFiN2I1NTgyMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-02-02T09:28:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-02-02T09:28:25Z"}, "message": "* gcc.c-torture/execute/bitfld-2.c: New test.\n\nFrom-SVN: r49438", "tree": {"sha": "0a58526859a0f603c72c8137d620edc4a462830a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a58526859a0f603c72c8137d620edc4a462830a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f786ab27b0730beec196df0902d7fefab7b55823", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f786ab27b0730beec196df0902d7fefab7b55823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f786ab27b0730beec196df0902d7fefab7b55823", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f786ab27b0730beec196df0902d7fefab7b55823/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea142788dcf5c765a25b6147ba50d8406410afaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea142788dcf5c765a25b6147ba50d8406410afaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea142788dcf5c765a25b6147ba50d8406410afaa"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "5d8541b140fef97705b9c1fad8863ac24c1277d7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f786ab27b0730beec196df0902d7fefab7b55823/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f786ab27b0730beec196df0902d7fefab7b55823/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f786ab27b0730beec196df0902d7fefab7b55823", "patch": "@@ -4,6 +4,8 @@\n \n \t* gcc.dg/20020201-3.c: New test.\n \n+\t* gcc.c-torture/execute/bitfld-2.c: New test.\n+\n 2002-02-02  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* gcc.dg/bitfld-1.c: Update."}, {"sha": "445879b14cc9948ad90aaf816fd832567b141871", "filename": "gcc/testsuite/gcc.c-torture/execute/bitfld-2.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f786ab27b0730beec196df0902d7fefab7b55823/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbitfld-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f786ab27b0730beec196df0902d7fefab7b55823/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbitfld-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbitfld-2.c?ref=f786ab27b0730beec196df0902d7fefab7b55823", "patch": "@@ -0,0 +1,28 @@\n+/* Test whether bit field boundaries aren't advanced if bit field type\n+   has alignment large enough.  */\n+extern void abort (void);\n+extern void exit (int);\n+\n+struct A {\n+  unsigned short a : 5;\n+  unsigned short b : 5;\n+  unsigned short c : 6;\n+};\n+\n+struct B {\n+  unsigned short a : 5;\n+  unsigned short b : 3;\n+  unsigned short c : 8;\n+};\n+\n+int main ()\n+{\n+  /* If short is not at least 16 bits wide, don't test anything.  */\n+  if ((unsigned short) 65521 != 65521)\n+    exit (0);\n+\n+  if (sizeof (struct A) != sizeof (struct B))\n+    abort ();\n+\n+  exit (0);\n+}"}]}