{"sha": "27f32a5400bc4949662ed57282bb33ec5d4d43db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdmMzJhNTQwMGJjNDk0OTY2MmVkNTcyODJiYjMzZWM1ZDRkNDNkYg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-09-22T23:50:42Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-09-22T23:50:42Z"}, "message": "(bi-arity, bi-opcode, bi-opname, bi-unparse, bi-lexer):\n\nMake the rules explicit.  Don't use $^.\n(bi-run.o, bi-parser.o, bi-lexer.o): Eliminate $<.\n(bc-arity.h, bc-opcode.h, bc-opname.h): Eliminate $< and $@.\n\nFrom-SVN: r5423", "tree": {"sha": "a625e9f172516b23c9bfddc0e08b5e78bc344f62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a625e9f172516b23c9bfddc0e08b5e78bc344f62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27f32a5400bc4949662ed57282bb33ec5d4d43db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27f32a5400bc4949662ed57282bb33ec5d4d43db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27f32a5400bc4949662ed57282bb33ec5d4d43db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27f32a5400bc4949662ed57282bb33ec5d4d43db/comments", "author": null, "committer": null, "parents": [{"sha": "a8ac57d39a94ed71958990947357e0839ff1bd8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8ac57d39a94ed71958990947357e0839ff1bd8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8ac57d39a94ed71958990947357e0839ff1bd8b"}], "stats": {"total": 36, "additions": 19, "deletions": 17}, "files": [{"sha": "883b997e3ee0c794a15e4f26c015d07f931707fb", "filename": "gcc/Makefile.in", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27f32a5400bc4949662ed57282bb33ec5d4d43db/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27f32a5400bc4949662ed57282bb33ec5d4d43db/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=27f32a5400bc4949662ed57282bb33ec5d4d43db", "patch": "@@ -1271,39 +1271,41 @@ bc-optab.o : bc-optab.c bc-typecd.def $(CONFIG_H) $(BYTECODE_H)\n \n bytecode: $(BI_ALL) $(BC_ALL)\n \n-bi-arity:\tbi-arity.o\n-bi-opcode:\tbi-opcode.o\n-bi-opname:\tbi-opname.o\n-bi-unparse:\tbi-unparse.o\n-bi-lexer:\tbi-lexer.o\n-\n-bi-arity bi-opcode bi-opname bi-unparse bi-lexer: $(BI_OBJ)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $^ $(LEXLIB)\n+bi-arity: bi-arity.o $(BI_OBJ)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ bi-arity.o $(BI_OBJ) $(LEXLIB)\n+bi-opcode: bi-opcode.o $(BI_OBJ)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ bi-opcode.o $(BI_OBJ) $(LEXLIB)\n+bi-opname: bi-opname.o $(BI_OBJ)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ bi-opname.o $(BI_OBJ) $(LEXLIB)\n+bi-unparse: bi-unparse.o $(BI_OBJ)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ bi-unparse.o $(BI_OBJ) $(LEXLIB)\n+bi-lexer: bi-lexer.o $(BI_OBJ)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ bi-lexer.o $(BI_OBJ) $(LEXLIB)\n \n bi-run.o:\t$(srcdir)/bi-run.c $(srcdir)/bi-run.h $(srcdir)/bc-typecd.h bc-opname.h bc-arity.h bc-opcode.h\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $<\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $(srcdir)/bi-run.c\n \n bi-parser.c: $(srcdir)/bi-parser.y $(srcdir)/bi-parser.h\n \n bi-parser.o:\t$(srcdir)/bi-parser.c $(srcdir)/bi-defs.h\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $<\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $(srcdir)/bi-parser.c\n \n bi-lexer.c:\t$(srcdir)/bi-lexer.l $(srcdir)/bi-parser.h\n \n bi-lexer.o:\tbi-lexer.c bi-parser.h\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $<\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c bi-lexer.c\n \n bc-arity.h:\t$(srcdir)/bytecode.def bi-arity\n-\t-rm -f $@\n-\tbi-arity <$< >$@\n+\t-rm -f bc-arity.h\n+\tbi-arity < $(srcdir)/bytecode.def > bc-arity.h\n \n bc-opcode.h:\t$(srcdir)/bytecode.def bi-opcode\n-\t-rm -f $@\n-\tbi-opcode <$< >$@\n+\t-rm -f bc-arity.h\n+\tbi-opcode < $(srcdir)/bytecode.def > bc-arity.h\n \n bc-opname.h:\t $(srcdir)/bytecode.def bi-opname\n-\t-rm -f $@\n-\tbi-opname <$< >$@\n+\t-rm -f bc-arity.h\n+\tbi-opname < $(srcdir)/bytecode.def > bc-arity.h\n \n bytecode.mostlyclean:\n \t-rm -f bc-arity.h bc-opcode.h bc-opname.h"}]}