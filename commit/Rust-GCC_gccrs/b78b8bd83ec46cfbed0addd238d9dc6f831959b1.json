{"sha": "b78b8bd83ec46cfbed0addd238d9dc6f831959b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc4YjhiZDgzZWM0NmNmYmVkMGFkZGQyMzhkOWRjNmY4MzE5NTliMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2004-11-27T09:39:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2004-11-27T09:39:00Z"}, "message": "re PR rtl-optimization/17825 (ICE in reg_bitfield_target_p)\n\n\tPR rtl-optimization/17825\n\t* combine.c (subst): Ignore STRICT_LOW_PART no matter if REG_P (new)\n\tor not.\n\n\t* gcc.c-torture/compile/20041119-1.c: New test.\n\nFrom-SVN: r91369", "tree": {"sha": "3c855f7b17093b28bc0452f6bb3ffd09773bdd73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c855f7b17093b28bc0452f6bb3ffd09773bdd73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b78b8bd83ec46cfbed0addd238d9dc6f831959b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b78b8bd83ec46cfbed0addd238d9dc6f831959b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b78b8bd83ec46cfbed0addd238d9dc6f831959b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b78b8bd83ec46cfbed0addd238d9dc6f831959b1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fcfbdb74da074a4f5cbe0729db5437b11870c32e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcfbdb74da074a4f5cbe0729db5437b11870c32e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcfbdb74da074a4f5cbe0729db5437b11870c32e"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "c1fe9b7dd0002ba579e32948c9b6600d3a9af9fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b78b8bd83ec46cfbed0addd238d9dc6f831959b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b78b8bd83ec46cfbed0addd238d9dc6f831959b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b78b8bd83ec46cfbed0addd238d9dc6f831959b1", "patch": "@@ -1,3 +1,9 @@\n+2004-11-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/17825\n+\t* combine.c (subst): Ignore STRICT_LOW_PART no matter if REG_P (new)\n+\tor not.\n+\n 2004-11-27  Alan Modra  <amodra@bigpond.net.au>\n \n \tPR target/12769"}, {"sha": "181a33e7590a1030117a202ae273a03e245e55dd", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b78b8bd83ec46cfbed0addd238d9dc6f831959b1/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b78b8bd83ec46cfbed0addd238d9dc6f831959b1/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=b78b8bd83ec46cfbed0addd238d9dc6f831959b1", "patch": "@@ -3556,10 +3556,10 @@ subst (rtx x, rtx from, rtx to, int in_dest, int unique_copy)\n \t      /* If this is a register being set, ignore it.  */\n \t      new = XEXP (x, i);\n \t      if (in_dest\n-\t\t  && (code == SUBREG || code == STRICT_LOW_PART\n-\t\t      || code == ZERO_EXTRACT)\n \t\t  && i == 0\n-\t\t  && REG_P (new))\n+\t\t  && (((code == SUBREG || code == ZERO_EXTRACT)\n+\t\t       && REG_P (new))\n+\t\t      || code == STRICT_LOW_PART))\n \t\t;\n \n \t      else if (COMBINE_RTX_EQUAL_P (XEXP (x, i), from))"}, {"sha": "dc3edeec50465c756d10b15047fd09bc7a048e54", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b78b8bd83ec46cfbed0addd238d9dc6f831959b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b78b8bd83ec46cfbed0addd238d9dc6f831959b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b78b8bd83ec46cfbed0addd238d9dc6f831959b1", "patch": "@@ -1,3 +1,8 @@\n+2004-11-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/17825\n+\t* gcc.c-torture/compile/20041119-1.c: New test.\n+\n 2004-11-27  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* lib/target-libpath.exp (restore_ld_library_path_env_vars):"}, {"sha": "3e0e565f406ae0ecbf03dfb47fd0aa2d51a25218", "filename": "gcc/testsuite/gcc.c-torture/compile/20041119-1.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b78b8bd83ec46cfbed0addd238d9dc6f831959b1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20041119-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b78b8bd83ec46cfbed0addd238d9dc6f831959b1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20041119-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20041119-1.c?ref=b78b8bd83ec46cfbed0addd238d9dc6f831959b1", "patch": "@@ -0,0 +1,30 @@\n+/* PR rtl-optimization/17825 */\n+#ifdef __i386__\n+register unsigned int reg __asm (\"esi\");\n+#elif defined __x86_64__\n+register unsigned int reg __asm (\"r14\");\n+#else\n+unsigned int reg;\n+#endif\n+\n+struct S\n+{\n+  unsigned int h[8];\n+} *b;\n+unsigned int c;\n+void foo (int);\n+\n+void\n+bar (void)\n+{\n+  unsigned int j, k, l, m;\n+\n+  j = (reg & 0xffff) | ((b->h[2] & 0xffff) << 16);\n+  k = c & 0xffff;\n+  if (k == 0)\n+    foo (0);\n+  l = (j / k) & 0xffff;\n+  m = (j % k) & 0xffff;\n+  reg = (reg & 0xffff0000) | l;\n+  b->h[2] = (b->h[2] & 0xffff0000) | m;\n+}"}]}