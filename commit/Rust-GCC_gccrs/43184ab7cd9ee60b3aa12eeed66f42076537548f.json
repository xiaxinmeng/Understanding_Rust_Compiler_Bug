{"sha": "43184ab7cd9ee60b3aa12eeed66f42076537548f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMxODRhYjdjZDllZTYwYjNhYTEyZWVlZDY2ZjQyMDc2NTM3NTQ4Zg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2015-10-23T12:50:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-23T12:50:16Z"}, "message": "a-exextr.adb, [...]: Minor reformatting.\n\n2015-10-23  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* a-exextr.adb, sem_ch6.adb, sem_ch13.adb: Minor reformatting.\n\nFrom-SVN: r229248", "tree": {"sha": "1d1f314960a330098446280b2037c989c4fc1aa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d1f314960a330098446280b2037c989c4fc1aa3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43184ab7cd9ee60b3aa12eeed66f42076537548f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43184ab7cd9ee60b3aa12eeed66f42076537548f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43184ab7cd9ee60b3aa12eeed66f42076537548f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43184ab7cd9ee60b3aa12eeed66f42076537548f/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed11bbfe441b0d223566174af18e04e4753f3fbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed11bbfe441b0d223566174af18e04e4753f3fbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed11bbfe441b0d223566174af18e04e4753f3fbb"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "161c024f3811990d3b7a72d5b8a65927b4f5914f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43184ab7cd9ee60b3aa12eeed66f42076537548f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43184ab7cd9ee60b3aa12eeed66f42076537548f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=43184ab7cd9ee60b3aa12eeed66f42076537548f", "patch": "@@ -1,3 +1,7 @@\n+2015-10-23  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* a-exextr.adb, sem_ch6.adb, sem_ch13.adb: Minor reformatting.\n+\n 2015-10-23  Arnaud Charlet  <charlet@adacore.com>\n \n \t* s-taskin.ads: Minor code clean up."}, {"sha": "2a6f82b83dfd43dde7410ee631d98117b5cb8f4a", "filename": "gcc/ada/a-exextr.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43184ab7cd9ee60b3aa12eeed66f42076537548f/gcc%2Fada%2Fa-exextr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43184ab7cd9ee60b3aa12eeed66f42076537548f/gcc%2Fada%2Fa-exextr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exextr.adb?ref=43184ab7cd9ee60b3aa12eeed66f42076537548f", "patch": "@@ -85,9 +85,11 @@ package body Exception_Traces is\n       if not Excep.Id.Not_Handled_By_Others\n         and then\n           (Exception_Trace = Every_Raise\n-            or else (Is_Unhandled\n-                       and then (Exception_Trace = Unhandled_Raise\n-                         or else Exception_Trace = Unhandled_Raise_In_Main)))\n+            or else\n+              (Is_Unhandled\n+                and then\n+                  (Exception_Trace = Unhandled_Raise\n+                    or else Exception_Trace = Unhandled_Raise_In_Main)))\n       then\n          --  Exception trace messages need to be protected when several tasks\n          --  can issue them at the same time."}, {"sha": "eb44653e1dd57b27cf792220db6a02d67def9e58", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43184ab7cd9ee60b3aa12eeed66f42076537548f/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43184ab7cd9ee60b3aa12eeed66f42076537548f/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=43184ab7cd9ee60b3aa12eeed66f42076537548f", "patch": "@@ -4873,9 +4873,10 @@ package body Sem_Ch13 is\n                      then\n                         declare\n                            Init : constant Node_Id :=\n-                             Expression (Declaration_Node (U_Ent));\n+                                    Expression (Declaration_Node (U_Ent));\n                         begin\n                            Set_Overlays_Constant (U_Ent);\n+\n                            if Present (Init)\n                              and then Comes_From_Source (Init)\n                            then"}, {"sha": "8b5a9fde91828f0b945d832756adb972bdf41e96", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43184ab7cd9ee60b3aa12eeed66f42076537548f/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43184ab7cd9ee60b3aa12eeed66f42076537548f/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=43184ab7cd9ee60b3aa12eeed66f42076537548f", "patch": "@@ -620,8 +620,8 @@ package body Sem_Ch6 is\n       --  Function result subtype\n \n       procedure Check_Aggregate_Accessibility (Aggr : Node_Id);\n-      --  Apply legality rule of 6.5 (8.2) to the access discriminants of\n-      --  an aggregate in a return statement.\n+      --  Apply legality rule of 6.5 (8.2) to the access discriminants of an\n+      --  aggregate in a return statement.\n \n       procedure Check_Limited_Return (Expr : Node_Id);\n       --  Check the appropriate (Ada 95 or Ada 2005) rules for returning\n@@ -644,9 +644,7 @@ package body Sem_Ch6 is\n          Obj    : Node_Id;\n \n       begin\n-         if Is_Record_Type (Typ)\n-           and then Has_Discriminants (Typ)\n-         then\n+         if Is_Record_Type (Typ) and then Has_Discriminants (Typ) then\n             Discr := First_Discriminant (Typ);\n             Assoc := First (Component_Associations (Aggr));\n             while Present (Discr) loop\n@@ -656,8 +654,8 @@ package body Sem_Ch6 is\n                     and then Attribute_Name (Expr) /= Name_Unrestricted_Access\n                   then\n                      Obj := Prefix (Expr);\n-                     while Nkind_In (Obj,\n-                       N_Selected_Component, N_Indexed_Component)\n+                     while Nkind_In (Obj, N_Indexed_Component,\n+                                          N_Selected_Component)\n                      loop\n                         Obj := Prefix (Obj);\n                      end loop;\n@@ -669,11 +667,11 @@ package body Sem_Ch6 is\n                         null;\n \n                      elsif Object_Access_Level (Obj) >\n-                       Scope_Depth (Scope (Scope_Id))\n+                             Scope_Depth (Scope (Scope_Id))\n                      then\n                         Error_Msg_N\n-                           (\"access discriminant in return aggregate \" &\n-                              \"will be a dangling reference\", Obj);\n+                          (\"access discriminant in return aggregate will be \"\n+                           & \"a dangling reference\", Obj);\n                      end if;\n                   end if;\n                end if;"}]}