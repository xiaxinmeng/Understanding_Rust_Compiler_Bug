{"sha": "e2df5c1deede2103cdc08e772cb57aede4288043", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJkZjVjMWRlZWRlMjEwM2NkYzA4ZTc3MmNiNTdhZWRlNDI4ODA0Mw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2005-08-13T11:08:21Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-08-13T11:08:21Z"}, "message": "s390.c (s390_split_branches): Revert 2005-08-12 change.\n\n\t* config/s390/s390.c (s390_split_branches): Revert 2005-08-12 change.\n\t(s390_register_info): Ignore clobbered_regs information for fixed\n\tregisters, and only fixed registers.\n\t(s390_init_frame_layout): Remove redundant call.\n\nFrom-SVN: r103054", "tree": {"sha": "6dcb5fafb77c62ebef64852aaf60b9672389c150", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6dcb5fafb77c62ebef64852aaf60b9672389c150"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2df5c1deede2103cdc08e772cb57aede4288043", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2df5c1deede2103cdc08e772cb57aede4288043", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2df5c1deede2103cdc08e772cb57aede4288043", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2df5c1deede2103cdc08e772cb57aede4288043/comments", "author": null, "committer": null, "parents": [{"sha": "18f0b880ce6abc7ea55bed430d79aca52d3361ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18f0b880ce6abc7ea55bed430d79aca52d3361ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18f0b880ce6abc7ea55bed430d79aca52d3361ac"}], "stats": {"total": 44, "additions": 26, "deletions": 18}, "files": [{"sha": "3776860daf6dbe6d9eebb29318eb5ee43baaf1b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2df5c1deede2103cdc08e772cb57aede4288043/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2df5c1deede2103cdc08e772cb57aede4288043/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2df5c1deede2103cdc08e772cb57aede4288043", "patch": "@@ -1,3 +1,10 @@\n+2005-08-13  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_split_branches): Revert 2005-08-12 change.\n+\t(s390_register_info): Ignore clobbered_regs information for fixed\n+\tregisters, and only fixed registers.\n+\t(s390_init_frame_layout): Remove redundant call.\n+\n 2005-08-12  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/invoke.texi (C++ Dialect Options): Add dynamic_cast to "}, {"sha": "aae047912849689b4442ba5e4a9fe8683905e4d2", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2df5c1deede2103cdc08e772cb57aede4288043/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2df5c1deede2103cdc08e772cb57aede4288043/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=e2df5c1deede2103cdc08e772cb57aede4288043", "patch": "@@ -4433,6 +4433,10 @@ s390_split_branches (void)\n       if (get_attr_length (insn) <= 4)\n \tcontinue;\n \n+      /* We are going to use the return register as scratch register,\n+\t make sure it will be saved/restored by the prologue/epilogue.  */\n+      cfun_frame_layout.save_return_addr_p = 1;\n+\n       if (!flag_pic)\n \t{\n \t  new_literal = 1;\n@@ -5828,34 +5832,34 @@ s390_register_info (int clobbered_regs[])\n   s390_regs_ever_clobbered (clobbered_regs);\n \n   for (i = 0; i < 16; i++)\n-    clobbered_regs[i] = clobbered_regs[i] && !global_regs[i];\n+    clobbered_regs[i] = clobbered_regs[i] && !global_regs[i] && !fixed_regs[i];\n \n   if (frame_pointer_needed)\n     clobbered_regs[HARD_FRAME_POINTER_REGNUM] = 1;\n \n   if (flag_pic)\n     clobbered_regs[PIC_OFFSET_TABLE_REGNUM] \n-    = regs_ever_live[PIC_OFFSET_TABLE_REGNUM];\n+      |= regs_ever_live[PIC_OFFSET_TABLE_REGNUM];\n \n   clobbered_regs[BASE_REGNUM] \n-    = cfun->machine->base_reg\n-      && REGNO (cfun->machine->base_reg) == BASE_REGNUM;\n+    |= (cfun->machine->base_reg\n+        && REGNO (cfun->machine->base_reg) == BASE_REGNUM);\n \n   clobbered_regs[RETURN_REGNUM]\n-    |= (cfun->machine->split_branches_pending_p\n-\t|| cfun_frame_layout.save_return_addr_p\n+    |= (!current_function_is_leaf\n \t|| TARGET_TPF_PROFILING\n-\t|| !current_function_is_leaf\n-\t|| current_function_stdarg\n-\t|| current_function_calls_eh_return);\n+\t|| cfun->machine->split_branches_pending_p\n+\t|| cfun_frame_layout.save_return_addr_p\n+\t|| current_function_calls_eh_return\n+\t|| current_function_stdarg);\n \n   clobbered_regs[STACK_POINTER_REGNUM]\n-    = !current_function_is_leaf\n-      || TARGET_TPF_PROFILING\n-      || cfun_save_high_fprs_p\n-      || get_frame_size () > 0\n-      || current_function_calls_alloca\n-      || current_function_stdarg;\n+    |= (!current_function_is_leaf\n+\t|| TARGET_TPF_PROFILING\n+\t|| cfun_save_high_fprs_p\n+\t|| get_frame_size () > 0\n+\t|| current_function_calls_alloca\n+\t|| current_function_stdarg);\n \n   for (i = 6; i < 16; i++)\n     if (clobbered_regs[i])\n@@ -6046,9 +6050,6 @@ s390_init_frame_layout (void)\n   int base_used;\n   int clobbered_regs[16];\n \n-  /* If return address register is explicitly used, we need to save it.  */\n-  s390_regs_ever_clobbered (clobbered_regs);\n-\n   /* On S/390 machines, we may need to perform branch splitting, which\n      will require both base and return address register.  We have no\n      choice but to assume we're going to need them until right at the"}]}