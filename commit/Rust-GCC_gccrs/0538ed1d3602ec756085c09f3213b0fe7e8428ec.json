{"sha": "0538ed1d3602ec756085c09f3213b0fe7e8428ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUzOGVkMWQzNjAyZWM3NTYwODVjMDlmMzIxM2IwZmU3ZTg0MjhlYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-03-18T09:16:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-03-18T09:16:56Z"}, "message": "re PR target/87561 (416.gamess is slower by ~10% starting from r264866 with -Ofast)\n\n2019-03-18  Richard Biener  <rguenther@suse.de>\n\n\tPR target/87561\n\t* config/i386/i386.c (ix86_add_stmt_cost): Apply strided\n\tload pessimization to stores as well.\n\nFrom-SVN: r269753", "tree": {"sha": "c60511490674645680b26f54ade4194ca9e6d153", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c60511490674645680b26f54ade4194ca9e6d153"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0538ed1d3602ec756085c09f3213b0fe7e8428ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0538ed1d3602ec756085c09f3213b0fe7e8428ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0538ed1d3602ec756085c09f3213b0fe7e8428ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0538ed1d3602ec756085c09f3213b0fe7e8428ec/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1d24f24c6afbd8fd00e31644d94fdb4f60d7ae36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d24f24c6afbd8fd00e31644d94fdb4f60d7ae36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d24f24c6afbd8fd00e31644d94fdb4f60d7ae36"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "a67a0bf744148c39a146c1381dc2f19806005ac3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0538ed1d3602ec756085c09f3213b0fe7e8428ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0538ed1d3602ec756085c09f3213b0fe7e8428ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0538ed1d3602ec756085c09f3213b0fe7e8428ec", "patch": "@@ -1,3 +1,9 @@\n+2019-03-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR target/87561\n+\t* config/i386/i386.c (ix86_add_stmt_cost): Apply strided\n+\tload pessimization to stores as well.\n+\n 2019-03-18  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR middle-end/86979"}, {"sha": "67af1374ed6720cb2deb17e2350f736fb3141f1a", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0538ed1d3602ec756085c09f3213b0fe7e8428ec/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0538ed1d3602ec756085c09f3213b0fe7e8428ec/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=0538ed1d3602ec756085c09f3213b0fe7e8428ec", "patch": "@@ -50564,9 +50564,10 @@ ix86_add_stmt_cost (void *data, int count, enum vect_cost_for_stmt kind,\n      latency and execution resources for the many scalar loads\n      (AGU and load ports).  Try to account for this by scaling the\n      construction cost by the number of elements involved.  */\n-  if (kind == vec_construct\n+  if ((kind == vec_construct || kind == vec_to_scalar)\n       && stmt_info\n-      && STMT_VINFO_TYPE (stmt_info) == load_vec_info_type\n+      && (STMT_VINFO_TYPE (stmt_info) == load_vec_info_type\n+\t  || STMT_VINFO_TYPE (stmt_info) == store_vec_info_type)\n       && STMT_VINFO_MEMORY_ACCESS_TYPE (stmt_info) == VMAT_ELEMENTWISE\n       && TREE_CODE (DR_STEP (STMT_VINFO_DATA_REF (stmt_info))) != INTEGER_CST)\n     {"}]}