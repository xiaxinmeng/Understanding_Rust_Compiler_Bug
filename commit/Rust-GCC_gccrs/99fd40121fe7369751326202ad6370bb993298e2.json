{"sha": "99fd40121fe7369751326202ad6370bb993298e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTlmZDQwMTIxZmU3MzY5NzUxMzI2MjAyYWQ2MzcwYmI5OTMyOThlMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-12T21:15:19Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-12T21:15:19Z"}, "message": "(prune_references): Add missing symmetic CONFLICTP call.\n\nFrom-SVN: r13143", "tree": {"sha": "334dcc0ddd2b4e999e6c757e78c510d26063a0aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/334dcc0ddd2b4e999e6c757e78c510d26063a0aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99fd40121fe7369751326202ad6370bb993298e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99fd40121fe7369751326202ad6370bb993298e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99fd40121fe7369751326202ad6370bb993298e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99fd40121fe7369751326202ad6370bb993298e2/comments", "author": null, "committer": null, "parents": [{"sha": "160b7bc403f3642b1f114969ecbea5b580ad0fb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/160b7bc403f3642b1f114969ecbea5b580ad0fb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/160b7bc403f3642b1f114969ecbea5b580ad0fb7"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "a4f5ab18f3b048409a53c98c7c7055c6f5a843ad", "filename": "gcc/global.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99fd40121fe7369751326202ad6370bb993298e2/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99fd40121fe7369751326202ad6370bb993298e2/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=99fd40121fe7369751326202ad6370bb993298e2", "patch": "@@ -871,7 +871,8 @@ prune_preferences ()\n \t we want to give the lower-priority allocno the first chance for\n \t these registers).  */\n       for (j = i + 1; j < max_allocno; j++)\n-\tif (CONFLICTP (allocno, allocno_order[j]))\n+\tif (CONFLICTP (allocno, allocno_order[j])\n+\t    || CONFLICTP (allocno_order[j], allocno))\n \t  {\n \t    COPY_HARD_REG_SET (temp,\n \t\t\t       hard_reg_full_preferences[allocno_order[j]]);"}]}