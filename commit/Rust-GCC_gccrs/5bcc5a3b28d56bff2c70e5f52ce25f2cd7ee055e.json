{"sha": "5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJjYzVhM2IyOGQ1NmJmZjJjNzBlNWY1MmNlMjVmMmNkN2VlMDU1ZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-04-30T13:50:24Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-04-30T13:50:24Z"}, "message": "Add option suggestion for -Werror=foo and corresponding pragma.\n\n2019-04-30  Martin Liska  <mliska@suse.cz>\n\n\t* opts.c (enable_warning_as_error): Provide hints\n\tfor unknown options.\n2019-04-30  Martin Liska  <mliska@suse.cz>\n\n\t* c-pragma.c (handle_pragma_diagnostic): Provide hints\n\tfor unknown options.\n2019-04-30  Martin Liska  <mliska@suse.cz>\n\n\t* gcc.dg/Werror-13.c: Add new tests for it.\n\t* gcc.dg/pragma-diag-6.c: Likewise.\n\nFrom-SVN: r270693", "tree": {"sha": "b434cee79d7c973543f21d75b421d156dc9a3bf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b434cee79d7c973543f21d75b421d156dc9a3bf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "44bf4743079e18380ff7ef208299545675f05671", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44bf4743079e18380ff7ef208299545675f05671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44bf4743079e18380ff7ef208299545675f05671"}], "stats": {"total": 60, "additions": 50, "deletions": 10}, "files": [{"sha": "f1df76a6a11801b4fc60bba6f7fc3082526b33b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e", "patch": "@@ -1,3 +1,8 @@\n+2019-04-30  Martin Liska  <mliska@suse.cz>\n+\n+\t* opts.c (enable_warning_as_error): Provide hints\n+\tfor unknown options.\n+\n 2019-04-30  Martin Liska  <mliska@suse.cz>\n \n \tPR debug/90288"}, {"sha": "89758652684815c502635f098f02d806d67878d6", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e", "patch": "@@ -1,3 +1,8 @@\n+2019-04-30  Martin Liska  <mliska@suse.cz>\n+\n+\t* c-pragma.c (handle_pragma_diagnostic): Provide hints\n+\tfor unknown options.\n+\n 2019-04-26  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* c-warn.c (strict_aliasing_warning): Apply COMPLETE_TYPE_P to"}, {"sha": "6b8ada59460558b99d6b1ceaf4f41049f5852228", "filename": "gcc/c-family/c-pragma.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e/gcc%2Fc-family%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e/gcc%2Fc-family%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.c?ref=5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e", "patch": "@@ -33,6 +33,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"c-pragma.h\"\n #include \"opts.h\"\n #include \"plugin.h\"\n+#include \"opt-suggestions.h\"\n \n #define GCC_BAD(gmsgid) \\\n   do { warning (OPT_Wpragmas, gmsgid); return; } while (0)\n@@ -804,8 +805,16 @@ handle_pragma_diagnostic(cpp_reader *ARG_UNUSED(dummy))\n   unsigned int option_index = find_opt (option_string + 1, lang_mask);\n   if (option_index == OPT_SPECIAL_unknown)\n     {\n-      warning_at (loc, OPT_Wpragmas,\n-\t\t  \"unknown option after %<#pragma GCC diagnostic%> kind\");\n+      option_proposer op;\n+      const char *hint = op.suggest_option (option_string + 1);\n+      if (hint)\n+\twarning_at (loc, OPT_Wpragmas,\n+\t\t    \"unknown option after %<#pragma GCC diagnostic%> kind;\"\n+\t\t    \" did you mean %<-%s%>\", hint);\n+      else\n+\twarning_at (loc, OPT_Wpragmas,\n+\t\t    \"unknown option after %<#pragma GCC diagnostic%> kind\");\n+\n       return;\n     }\n   else if (!(cl_options[option_index].flags & CL_WARNING))"}, {"sha": "926904c609e64c25d7bb7194e0af085668dac2c7", "filename": "gcc/opts.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e", "patch": "@@ -31,6 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-attr-common.h\"\n #include \"common/common-target.h\"\n #include \"spellcheck.h\"\n+#include \"opt-suggestions.h\"\n \n static void set_Wstrict_aliasing (struct gcc_options *opts, int onoff);\n \n@@ -3088,10 +3089,20 @@ enable_warning_as_error (const char *arg, int value, unsigned int lang_mask,\n   strcpy (new_option + 1, arg);\n   option_index = find_opt (new_option, lang_mask);\n   if (option_index == OPT_SPECIAL_unknown)\n-    error_at (loc, \"%<-Werror=%s%>: no option -%s\", arg, new_option);\n+    {\n+      option_proposer op;\n+      const char *hint = op.suggest_option (new_option);\n+      if (hint)\n+\terror_at (loc, \"%<-W%serror=%s%>: no option %<-%s%>;\"\n+\t\t  \" did you mean %<-%s%>?\", value ? \"\" : \"no-\",\n+\t\t  arg, new_option, hint);\n+      else\n+\terror_at (loc, \"%<-W%serror=%s%>: no option %<-%s%>\",\n+\t\t  value ? \"\" : \"no-\", arg, new_option);\n+    }\n   else if (!(cl_options[option_index].flags & CL_WARNING))\n-    error_at (loc, \"%<-Werror=%s%>: -%s is not an option that controls \"\n-\t      \"warnings\", arg, new_option);\n+    error_at (loc, \"%<-Werror=%s%>: %<-%s%> is not an option that \"\n+\t      \"controls warnings\", arg, new_option);\n   else\n     {\n       const diagnostic_t kind = value ? DK_ERROR : DK_WARNING;"}, {"sha": "b05cdcf5fa58caed45d626df680c0dc70a92f5e5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e", "patch": "@@ -1,3 +1,8 @@\n+2019-04-30  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/Werror-13.c: Add new tests for it.\n+\t* gcc.dg/pragma-diag-6.c: Likewise.\n+\n 2019-04-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/89093"}, {"sha": "3a02b7ea2b5ef471ef0aa9c5a084556986bec90b", "filename": "gcc/testsuite/gcc.dg/Werror-13.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-13.c?ref=5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e", "patch": "@@ -1,8 +1,10 @@\n /* { dg-do compile } */\n-/* { dg-options \"-Werror=error -Werror=p, -Werror=l, -Werror=fatal-errors\" } */\n-/* { dg-error \"-Wp, is not an option that controls warnings\" \"\" { target *-*-* } 0 } */\n-/* { dg-error \"-Wl, is not an option that controls warnings\" \"\" { target *-*-* } 0 } */\n-/* { dg-error \"-Werror is not an option that controls warnings\" \"\" { target *-*-* } 0 } */\n-/* { dg-error \"-Wfatal-errors is not an option that controls warnings\" \"\" { target *-*-* } 0 } */\n+/* { dg-options \"-Werror=error -Werror=p, -Werror=l, -Werror=fatal-errors -Werror=vla2 -Wno-error=misleading-indentation2\" } */\n+/* { dg-error \"'-Wp,' is not an option that controls warnings\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"'-Wl,' is not an option that controls warnings\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"'-Werror' is not an option that controls warnings\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"'-Wfatal-errors' is not an option that controls warnings\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"'-Werror=vla2': no option '-Wvla2'; did you mean '-Wvla.\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"'-Wno-error=misleading-indentation2': no option '-Wmisleading-indentation2'; did you mean '-Wmisleading-indentation'\" \"\" { target *-*-* } 0 } */\n \n int i;"}, {"sha": "0dca1dc1ef4f4170b96097904acda9c68a1f317f", "filename": "gcc/testsuite/gcc.dg/pragma-diag-6.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-diag-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-diag-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-diag-6.c?ref=5bcc5a3b28d56bff2c70e5f52ce25f2cd7ee055e", "patch": "@@ -2,4 +2,7 @@\n #pragma GCC diagnostic error \"-Wnoexcept\" /* { dg-warning \"is valid for C../ObjC.. but not for C\" } */\n #pragma GCC diagnostic error \"-fstrict-aliasing\" /* { dg-warning \"not an option that controls warnings\" } */\n #pragma GCC diagnostic error \"-Werror\" /* { dg-warning \"not an option that controls warnings\" } */\n+#pragma GCC diagnostic error \"-Wvla2\" /* { dg-warning \"unknown option after '#pragma GCC diagnostic' kind; did you mean '-Wvla'\" } */\n+#pragma GCC diagnostic error \"-Walla\" /* { dg-warning \"unknown option after '#pragma GCC diagnostic' kind; did you mean '-Wall'\" } */\n+#pragma GCC diagnostic warning \"-Walla\" /* { dg-warning \"unknown option after '#pragma GCC diagnostic' kind; did you mean '-Wall'\" } */\n int i;"}]}