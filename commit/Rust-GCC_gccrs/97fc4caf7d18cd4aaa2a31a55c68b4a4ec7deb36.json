{"sha": "97fc4caf7d18cd4aaa2a31a55c68b4a4ec7deb36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdmYzRjYWY3ZDE4Y2Q0YWFhMmEzMWE1NWM2OGI0YTRlYzdkZWIzNg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-01-05T07:38:47Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-01-05T07:38:47Z"}, "message": "calls.c (emit_library_call_value_1): Support INIT_CUMULATIVE_LIBCALL_ARGS.\n\n* calls.c (emit_library_call_value_1): Support\nINIT_CUMULATIVE_LIBCALL_ARGS.\n* tm.texi (INIT_CUMULATIVE_LIBCALL_ARGS): Document it.\n\nFrom-SVN: r38706", "tree": {"sha": "fc67cb4461acbc1d54a42438d9eee1c7e9e9a151", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc67cb4461acbc1d54a42438d9eee1c7e9e9a151"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97fc4caf7d18cd4aaa2a31a55c68b4a4ec7deb36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97fc4caf7d18cd4aaa2a31a55c68b4a4ec7deb36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97fc4caf7d18cd4aaa2a31a55c68b4a4ec7deb36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97fc4caf7d18cd4aaa2a31a55c68b4a4ec7deb36/comments", "author": null, "committer": null, "parents": [{"sha": "ffc5c6a98441d8e1abe6cdc0d2a93591e21191d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffc5c6a98441d8e1abe6cdc0d2a93591e21191d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffc5c6a98441d8e1abe6cdc0d2a93591e21191d7"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "77a7f79b7c0f6d01fc793c77f358f46514d5ccde", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97fc4caf7d18cd4aaa2a31a55c68b4a4ec7deb36/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97fc4caf7d18cd4aaa2a31a55c68b4a4ec7deb36/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97fc4caf7d18cd4aaa2a31a55c68b4a4ec7deb36", "patch": "@@ -1,3 +1,9 @@\n+2001-01-05  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* calls.c (emit_library_call_value_1): Support\n+\tINIT_CUMULATIVE_LIBCALL_ARGS.\n+\t* tm.texi (INIT_CUMULATIVE_LIBCALL_ARGS): Document it.\n+\n 2001-01-04  Richard Henderson  <rth@redhat.com>\n \n \t* c-decl.c (finish_struct): Detect flexible array members"}, {"sha": "ab6c5bb40e8e68d702f15d974021e4049438aca1", "filename": "gcc/calls.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97fc4caf7d18cd4aaa2a31a55c68b4a4ec7deb36/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97fc4caf7d18cd4aaa2a31a55c68b4a4ec7deb36/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=97fc4caf7d18cd4aaa2a31a55c68b4a4ec7deb36", "patch": "@@ -1,6 +1,6 @@\n /* Convert function calls to rtl insns, for GNU C compiler.\n    Copyright (C) 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -3589,7 +3589,11 @@ emit_library_call_value_1 (retval, orgfun, value, fn_type, outmode, nargs, p)\n   argvec = (struct arg *) alloca ((nargs + 1) * sizeof (struct arg));\n   memset ((char *) argvec, 0, (nargs + 1) * sizeof (struct arg));\n \n+#ifdef INIT_CUMULATIVE_LIBCALL_ARGS\n+  INIT_CUMULATIVE_LIBCALL_ARGS (args_so_far, outmode, fun);\n+#else\n   INIT_CUMULATIVE_ARGS (args_so_far, NULL_TREE, fun, 0);\n+#endif\n \n   args_size.constant = 0;\n   args_size.var = 0;"}, {"sha": "795abac65a70f8d8e060d9d07cbb1afe385c175a", "filename": "gcc/tm.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97fc4caf7d18cd4aaa2a31a55c68b4a4ec7deb36/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97fc4caf7d18cd4aaa2a31a55c68b4a4ec7deb36/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=97fc4caf7d18cd4aaa2a31a55c68b4a4ec7deb36", "patch": "@@ -3045,6 +3045,14 @@ an ordinary C function call is being processed.  Thus, each time this\n macro is called, either @var{libname} or @var{fntype} is nonzero, but\n never both of them at once.\n \n+@findex INIT_CUMULATIVE_LIBCALL_ARGS\n+@item INIT_CUMULATIVE_LIBCALL_ARGS (@var{cum}, @var{mode}, @var{libname})\n+Like @code{INIT_CUMULATIVE_ARGS} but only used for outgoing libcalls,\n+it gets a @code{MODE} argument instead of @var{fntype}, that would be\n+@code{NULL}.  @var{indirect} would always be zero, too.  If this macro\n+is not defined, @code{INIT_CUMULATIVE_ARGS (cum, NULL_RTX, libname,\n+0)} is used instead.\n+\n @findex INIT_CUMULATIVE_INCOMING_ARGS\n @item INIT_CUMULATIVE_INCOMING_ARGS (@var{cum}, @var{fntype}, @var{libname})\n Like @code{INIT_CUMULATIVE_ARGS} but overrides it for the purposes of"}]}