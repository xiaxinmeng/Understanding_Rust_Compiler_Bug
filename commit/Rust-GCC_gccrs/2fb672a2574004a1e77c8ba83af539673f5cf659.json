{"sha": "2fb672a2574004a1e77c8ba83af539673f5cf659", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZiNjcyYTI1NzQwMDRhMWU3N2M4YmE4M2FmNTM5NjczZjVjZjY1OQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2020-01-10T14:27:05Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2020-01-10T14:27:05Z"}, "message": "compiler: permit duplicate methods from embedded interfaces\n    \n    This is a language change for Go 1.14.\n    \n    Updates golang/go#6977\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/214240\n\nFrom-SVN: r280109", "tree": {"sha": "ba1efe5fc64fac371ba9c620dc86893c9163bd94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba1efe5fc64fac371ba9c620dc86893c9163bd94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fb672a2574004a1e77c8ba83af539673f5cf659", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb672a2574004a1e77c8ba83af539673f5cf659", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fb672a2574004a1e77c8ba83af539673f5cf659", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb672a2574004a1e77c8ba83af539673f5cf659/comments", "author": null, "committer": null, "parents": [{"sha": "9c158322b6fdb47666f49c001dc54ea9f5c853e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c158322b6fdb47666f49c001dc54ea9f5c853e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c158322b6fdb47666f49c001dc54ea9f5c853e9"}], "stats": {"total": 48, "additions": 21, "deletions": 27}, "files": [{"sha": "e7f037ac6b895067ecd1770b169b05825a5a42f2", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb672a2574004a1e77c8ba83af539673f5cf659/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb672a2574004a1e77c8ba83af539673f5cf659/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=2fb672a2574004a1e77c8ba83af539673f5cf659", "patch": "@@ -1,4 +1,4 @@\n-92ee4c2e295fc760105f187f6ea6dc65c81fa892\n+98c4c21b52afd6384f9364527bd7f5f9a1c752cf\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "d6cd326b2e290b344cd7b40efd7b0a8babfa4a78", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb672a2574004a1e77c8ba83af539673f5cf659/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb672a2574004a1e77c8ba83af539673f5cf659/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=2fb672a2574004a1e77c8ba83af539673f5cf659", "patch": "@@ -8943,8 +8943,12 @@ Interface_type::finalize_methods()\n \t  continue;\n \t}\n \n+      const Typed_identifier_list* imethods = it->parse_methods_;\n+      if (imethods == NULL)\n+\tcontinue;\n+\n       Named_type* nt = t->named_type();\n-      if (nt != NULL && it->parse_methods_ != NULL)\n+      if (nt != NULL)\n \t{\n \t  std::vector<Named_type*>::const_iterator q;\n \t  for (q = seen.begin(); q != seen.end(); ++q)\n@@ -8960,22 +8964,26 @@ Interface_type::finalize_methods()\n \t  seen.push_back(nt);\n \t}\n \n-      const Typed_identifier_list* imethods = it->parse_methods_;\n-      if (imethods == NULL)\n-\tcontinue;\n       for (Typed_identifier_list::const_iterator q = imethods->begin();\n \t   q != imethods->end();\n \t   ++q)\n \t{\n \t  if (q->name().empty())\n \t    inherit.push_back(*q);\n-\t  else if (this->find_method(q->name()) == NULL)\n-\t    this->all_methods_->push_back(Typed_identifier(q->name(),\n-\t\t\t\t\t\t\t   q->type(), tl));\n \t  else\n-\t    go_error_at(tl, \"inherited method %qs is ambiguous\",\n-\t\t     Gogo::message_name(q->name()).c_str());\n+\t    {\n+\t      const Typed_identifier* oldm = this->find_method(q->name());\n+\t      if (oldm == NULL)\n+\t\tthis->all_methods_->push_back(Typed_identifier(q->name(),\n+\t\t\t\t\t\t\t       q->type(), tl));\n+\t      else if (!Type::are_identical(q->type(), oldm->type(),\n+\t\t\t\t\t    Type::COMPARE_TAGS, NULL))\n+\t\tgo_error_at(tl, \"duplicate method %qs\",\n+\t\t\t    Gogo::message_name(q->name()).c_str());\n+\t    }\n \t}\n+\n+      seen.pop_back();\n     }\n \n   if (!this->all_methods_->empty())"}, {"sha": "b150479276366f1ce9e0ed4132371f7360be7b8d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug211.go", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c158322b6fdb47666f49c001dc54ea9f5c853e9/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug211.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c158322b6fdb47666f49c001dc54ea9f5c853e9/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug211.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug211.go?ref=9c158322b6fdb47666f49c001dc54ea9f5c853e9", "patch": "@@ -1,14 +0,0 @@\n-// errorcheck\n-\n-// Copyright 2009 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package main\n-\n-type R interface { duplicate() }\n-type S interface { duplicate() }\n-type T interface { R; S }\t// ERROR \"duplicate\"\n-\n-func main() {\n-}"}, {"sha": "706bb8d69019d51d2968a1d13b0911f17ecec973", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug251.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb672a2574004a1e77c8ba83af539673f5cf659/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug251.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb672a2574004a1e77c8ba83af539673f5cf659/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug251.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug251.go?ref=2fb672a2574004a1e77c8ba83af539673f5cf659", "patch": "@@ -1,18 +1,18 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n package main\n \n-type I1 interface {\n+type I1 interface { // GC_ERROR \"invalid recursive type\"\n \tm() I2\n \tI2 // GCCGO_ERROR \"loop|interface\"\n }\n \n type I2 interface {\n-\tI1 // ERROR \"loop|interface\"\n+\tI1 // GCCGO_ERROR \"loop|interface\"\n }\n \n "}]}