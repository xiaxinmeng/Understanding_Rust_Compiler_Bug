{"sha": "2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "node_id": "C_kwDOANBUbNoAKDJhMmFiMTlkNTU5NGQxYTViN2Q5NjRkYTE0MzJkNThjZWNhOGM2MTc", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-07T06:28:00Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T05:58:42Z"}, "message": "RISC-V: Add vwsub.vv C API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vwsub_vv-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv_m-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv_m-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv_m-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv_mu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv_mu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv_mu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv_tu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv_tu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv_tu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv_tum-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv_tum-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv_tum-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv_tumu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv_tumu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vwsub_vv_tumu-3.c: New test.", "tree": {"sha": "b99a46f76e60b3a45bc804299875521028d606a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b99a46f76e60b3a45bc804299875521028d606a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "524e491ab5370b8efd37dbcae241c5a4a1cdc30e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/524e491ab5370b8efd37dbcae241c5a4a1cdc30e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/524e491ab5370b8efd37dbcae241c5a4a1cdc30e"}], "stats": {"total": 1998, "additions": 1998, "deletions": 0}, "files": [{"sha": "42e9e46ad1e39ee28b02614a1c4bb04372e1c704", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv-1.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4(vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4(op1,op2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2(vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2(op1,op2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1(vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1(op1,op2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2(vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2(op1,op2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4(vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4(op1,op2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8(vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8(op1,op2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2(vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2(op1,op2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1(vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1(op1,op2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2(vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2(op1,op2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4(vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4(op1,op2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8(vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8(op1,op2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1(vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1(op1,op2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2(vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2(op1,op2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4(vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4(op1,op2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8(vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8(op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "256dfa1870fb97283fad291d184c27c2e745f887", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv-2.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4(vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4(op1,op2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2(vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2(op1,op2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1(vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1(op1,op2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2(vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2(op1,op2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4(vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4(op1,op2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8(vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8(op1,op2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2(vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2(op1,op2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1(vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1(op1,op2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2(vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2(op1,op2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4(vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4(op1,op2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8(vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8(op1,op2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1(vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1(op1,op2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2(vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2(op1,op2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4(vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4(op1,op2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8(vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8(op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "2f73241a984c721bd6dafaf93f6b8cd354c29480", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv-3.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4(vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4(op1,op2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2(vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2(op1,op2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1(vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1(op1,op2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2(vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2(op1,op2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4(vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4(op1,op2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8(vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8(op1,op2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2(vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2(op1,op2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1(vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1(op1,op2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2(vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2(op1,op2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4(vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4(op1,op2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8(vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8(op1,op2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1(vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1(op1,op2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2(vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2(op1,op2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4(vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4(op1,op2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8(vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8(op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "4c91451fb50611802ae0baa8c8bafd3286335eca", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv_m-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_m-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_m-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_m-1.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4_m(vbool64_t mask,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2_m(vbool32_t mask,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1_m(vbool16_t mask,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2_m(vbool8_t mask,vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4_m(vbool4_t mask,vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8_m(vbool2_t mask,vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2_m(vbool64_t mask,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1_m(vbool32_t mask,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2_m(vbool16_t mask,vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4_m(vbool8_t mask,vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8_m(vbool4_t mask,vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1_m(vbool64_t mask,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2_m(vbool32_t mask,vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4_m(vbool16_t mask,vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4_m(mask,op1,op2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8_m(vbool8_t mask,vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8_m(mask,op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "824c8e83ea3a8668a9d32e243564fefe02f9ed9d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv_m-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_m-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_m-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_m-2.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4_m(vbool64_t mask,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4_m(mask,op1,op2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2_m(vbool32_t mask,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2_m(mask,op1,op2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1_m(vbool16_t mask,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1_m(mask,op1,op2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2_m(vbool8_t mask,vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2_m(mask,op1,op2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4_m(vbool4_t mask,vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4_m(mask,op1,op2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8_m(vbool2_t mask,vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8_m(mask,op1,op2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2_m(vbool64_t mask,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2_m(mask,op1,op2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1_m(vbool32_t mask,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1_m(mask,op1,op2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2_m(vbool16_t mask,vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2_m(mask,op1,op2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4_m(vbool8_t mask,vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4_m(mask,op1,op2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8_m(vbool4_t mask,vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8_m(mask,op1,op2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1_m(vbool64_t mask,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1_m(mask,op1,op2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2_m(vbool32_t mask,vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2_m(mask,op1,op2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4_m(vbool16_t mask,vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4_m(mask,op1,op2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8_m(vbool8_t mask,vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8_m(mask,op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "212252c124fce3aab95969a095460959f8cd018c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv_m-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_m-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_m-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_m-3.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4_m(vbool64_t mask,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4_m(mask,op1,op2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2_m(vbool32_t mask,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2_m(mask,op1,op2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1_m(vbool16_t mask,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1_m(mask,op1,op2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2_m(vbool8_t mask,vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2_m(mask,op1,op2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4_m(vbool4_t mask,vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4_m(mask,op1,op2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8_m(vbool2_t mask,vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8_m(mask,op1,op2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2_m(vbool64_t mask,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2_m(mask,op1,op2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1_m(vbool32_t mask,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1_m(mask,op1,op2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2_m(vbool16_t mask,vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2_m(mask,op1,op2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4_m(vbool8_t mask,vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4_m(mask,op1,op2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8_m(vbool4_t mask,vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8_m(mask,op1,op2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1_m(vbool64_t mask,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1_m(mask,op1,op2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2_m(vbool32_t mask,vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2_m(mask,op1,op2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4_m(vbool16_t mask,vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4_m(mask,op1,op2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8_m(vbool8_t mask,vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8_m(mask,op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "00f9a1e5e5d7ce94b67c00465ae63194213e80f8", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv_mu-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_mu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_mu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_mu-1.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1_mu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2_mu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4_mu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8_mu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8_mu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "6e640060b2969fe699797603109fe7234f4420dd", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv_mu-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_mu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_mu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_mu-2.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1_mu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2_mu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4_mu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8_mu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8_mu(mask,merge,op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "2158fec1e710198fd3518360e686d7b11eae3bcd", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv_mu-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_mu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_mu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_mu-3.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4_mu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2_mu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1_mu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2_mu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4_mu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8_mu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2_mu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1_mu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2_mu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4_mu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8_mu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1_mu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2_mu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4_mu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8_mu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8_mu(mask,merge,op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "b0380b8b8ac0f7facf518bd8f1a46b35817fa652", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv_tu-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tu-1.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4_tu(vint16mf4_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2_tu(vint16mf2_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1_tu(vint16m1_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2_tu(vint16m2_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4_tu(vint16m4_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8_tu(vint16m8_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2_tu(vint32mf2_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1_tu(vint32m1_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2_tu(vint32m2_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4_tu(vint32m4_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8_tu(vint32m8_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1_tu(vint64m1_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2_tu(vint64m2_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4_tu(vint64m4_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4_tu(merge,op1,op2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8_tu(vint64m8_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8_tu(merge,op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "5c10eee825f623d673cce6c3db280da67a54f8f9", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv_tu-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tu-2.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4_tu(vint16mf4_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2_tu(vint16mf2_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1_tu(vint16m1_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2_tu(vint16m2_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4_tu(vint16m4_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8_tu(vint16m8_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2_tu(vint32mf2_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1_tu(vint32m1_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2_tu(vint32m2_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4_tu(vint32m4_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8_tu(vint32m8_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1_tu(vint64m1_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2_tu(vint64m2_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4_tu(vint64m4_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4_tu(merge,op1,op2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8_tu(vint64m8_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8_tu(merge,op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "6092820deb7f896e901d238df1b2c1bb052f6643", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv_tu-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tu-3.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4_tu(vint16mf4_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2_tu(vint16mf2_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1_tu(vint16m1_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2_tu(vint16m2_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4_tu(vint16m4_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8_tu(vint16m8_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2_tu(vint32mf2_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1_tu(vint32m1_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2_tu(vint32m2_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4_tu(vint32m4_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8_tu(vint32m8_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1_tu(vint64m1_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2_tu(vint64m2_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4_tu(vint64m4_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4_tu(merge,op1,op2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8_tu(vint64m8_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8_tu(merge,op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "4bef63e170124d321e9bf3e353096ef1110c9caa", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv_tum-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tum-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tum-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tum-1.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1_tum(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2_tum(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4_tum(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8_tum(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8_tum(mask,merge,op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "5f661f138e459fb16a679e4c75973c25cb918ed0", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv_tum-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tum-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tum-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tum-2.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1_tum(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2_tum(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4_tum(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8_tum(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8_tum(mask,merge,op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "950e8ee120496732742386aa67f29c6dd0b63dc0", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv_tum-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tum-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tum-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tum-3.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4_tum(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2_tum(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1_tum(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2_tum(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4_tum(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8_tum(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2_tum(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1_tum(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2_tum(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4_tum(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8_tum(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1_tum(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2_tum(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4_tum(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8_tum(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8_tum(mask,merge,op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "4db65894f769a189b72dafc123ddd0349f40d54c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv_tumu-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tumu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tumu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tumu-1.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1_tumu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2_tumu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4_tumu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8_tumu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8_tumu(mask,merge,op1,op2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "b8b0092f4fae0c98dae289304c2e0e1fd6fe94da", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv_tumu-2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tumu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tumu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tumu-2.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1_tumu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2_tumu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4_tumu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8_tumu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8_tumu(mask,merge,op1,op2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "0ec22f02fa69e2cc3b80d06f2e1452b7a353a7a7", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vwsub_vv_tumu-3.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tumu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2ab19d5594d1a5b7d964da1432d58ceca8c617/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tumu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvwsub_vv_tumu-3.c?ref=2a2ab19d5594d1a5b7d964da1432d58ceca8c617", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint16mf4_t test___riscv_vwsub_vv_i16mf4_tumu(vbool64_t mask,vint16mf4_t merge,vint8mf8_t op1,vint8mf8_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf4_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vwsub_vv_i16mf2_tumu(vbool32_t mask,vint16mf2_t merge,vint8mf4_t op1,vint8mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16mf2_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vwsub_vv_i16m1_tumu(vbool16_t mask,vint16m1_t merge,vint8mf2_t op1,vint8mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m1_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vwsub_vv_i16m2_tumu(vbool8_t mask,vint16m2_t merge,vint8m1_t op1,vint8m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m2_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vwsub_vv_i16m4_tumu(vbool4_t mask,vint16m4_t merge,vint8m2_t op1,vint8m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m4_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vwsub_vv_i16m8_tumu(vbool2_t mask,vint16m8_t merge,vint8m4_t op1,vint8m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i16m8_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vwsub_vv_i32mf2_tumu(vbool64_t mask,vint32mf2_t merge,vint16mf4_t op1,vint16mf4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32mf2_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vwsub_vv_i32m1_tumu(vbool32_t mask,vint32m1_t merge,vint16mf2_t op1,vint16mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m1_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vwsub_vv_i32m2_tumu(vbool16_t mask,vint32m2_t merge,vint16m1_t op1,vint16m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m2_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vwsub_vv_i32m4_tumu(vbool8_t mask,vint32m4_t merge,vint16m2_t op1,vint16m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m4_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vwsub_vv_i32m8_tumu(vbool4_t mask,vint32m8_t merge,vint16m4_t op1,vint16m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i32m8_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vwsub_vv_i64m1_tumu(vbool64_t mask,vint64m1_t merge,vint32mf2_t op1,vint32mf2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m1_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vwsub_vv_i64m2_tumu(vbool32_t mask,vint64m2_t merge,vint32m1_t op1,vint32m1_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m2_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vwsub_vv_i64m4_tumu(vbool16_t mask,vint64m4_t merge,vint32m2_t op1,vint32m2_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m4_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vwsub_vv_i64m8_tumu(vbool8_t mask,vint64m8_t merge,vint32m4_t op1,vint32m4_t op2,size_t vl)\n+{\n+    return __riscv_vwsub_vv_i64m8_tumu(mask,merge,op1,op2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vwsub\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}]}