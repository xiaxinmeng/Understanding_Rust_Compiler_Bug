{"sha": "e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdjMjZlMDRiMmRkNjI2NmQ2MmQ1YTU4MjVmZjdlYjQ0ZDFjZjE0ZQ==", "commit": {"author": {"name": "Andrew Burgess", "email": "andrew.burgess@embecosm.com", "date": "2020-01-22T14:54:26Z"}, "committer": {"name": "Andrew Burgess", "email": "andrew.burgess@embecosm.com", "date": "2020-01-27T22:02:35Z"}, "message": "gcc: Add new configure options to allow static libraries to be selected\n\nThe motivation behind this change is to make it easier for a user to\nlink against static libraries on a target where dynamic libraries are\nthe default library type (for example GNU/Linux).\n\nFurther, my motivation is really for linking libraries into GDB,\nhowever, the binutils-gdb/config/ directory is a copy of gcc/config/\nso changes for GDB need to be approved by the GCC project first.\n\nAfter making this change in the gcc/config/ directory I've run\nautoreconf on all of the configure scripts in the GCC tree and a\ncouple have been updated, so I'll use one of these to describe what my\nchange does.\n\nConsider libcpp, this library links against libiconv.  Currently if\nthe user builds on a system with both static and dynamic libiconv\ninstalled then autotools will pick up the dynamic libiconv by\ndefault.  This is almost certainly the right thing to do.\n\nHowever, if the user wants to link against static libiconv then things\nare a little harder, they could remove the dynamic libiconv from their\nsystem, but this is probably a bad idea (other things might depend on\nthat library), or the user can build their own version of libiconv,\ninstall it into a unique prefix, and then configure gcc using the\n--with-libiconv-prefix=DIR flag.  This works fine, but is somewhat\nannoying, the static library available, I just can't get autotools to\nuse it.\n\nMy change then adds a new flag --with-libiconv-type=TYPE, where type\nis either auto, static, or shared.  The default auto, ensures we keep\nthe existing behaviour unchanged.\n\nIf the user configures with --with-libiconv-type=static then the\nconfigure script will ignore any dynamic libiconv it finds, and will\nonly look for a static libiconv, if no static libiconv is found then\nthe configure will continue as though there is no libiconv at all\navailable.\n\nSimilarly a user can specify --with-libiconv-type=shared and force the\nuse of shared libiconv, any static libiconv will be ignored.\n\nAs I've implemented this change within the AC_LIB_LINKFLAGS_BODY macro\nthen only libraries configured using the AC_LIB_LINKFLAGS or\nAC_LIB_HAVE_LINKFLAGS macros will gain the new configure flag.\n\nIf this is accepted into GCC then there will be follow on patches for\nbinutils and GDB to regenerate some configure scripts in those\nprojects.\n\nFor GCC only two configure scripts needed updated after this commit,\nlibcpp and libstdc++-v3, both of which link against libiconv.\n\nconfig/ChangeLog:\n\n\t* lib-link.m4 (AC_LIB_LINKFLAGS_BODY): Add new\n\t--with-libXXX-type=... option.  Use this to guide the selection of\n\teither a shared library or a static library.\n\nlibcpp/ChangeLog:\n\n\t* configure: Regenerate.\n\nlibstdc++-v3/ChangeLog:\n\n\t* configure: Regenerate.", "tree": {"sha": "62d830b9fba6b4823faf161909504f0bbde3bdb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62d830b9fba6b4823faf161909504f0bbde3bdb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e/comments", "author": {"login": "T-J-Teru", "id": 475372, "node_id": "MDQ6VXNlcjQ3NTM3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-J-Teru", "html_url": "https://github.com/T-J-Teru", "followers_url": "https://api.github.com/users/T-J-Teru/followers", "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}", "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions", "organizations_url": "https://api.github.com/users/T-J-Teru/orgs", "repos_url": "https://api.github.com/users/T-J-Teru/repos", "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}", "received_events_url": "https://api.github.com/users/T-J-Teru/received_events", "type": "User", "site_admin": false}, "committer": {"login": "T-J-Teru", "id": 475372, "node_id": "MDQ6VXNlcjQ3NTM3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-J-Teru", "html_url": "https://github.com/T-J-Teru", "followers_url": "https://api.github.com/users/T-J-Teru/followers", "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}", "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions", "organizations_url": "https://api.github.com/users/T-J-Teru/orgs", "repos_url": "https://api.github.com/users/T-J-Teru/repos", "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}", "received_events_url": "https://api.github.com/users/T-J-Teru/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15d552394e1cb94598eef278ff3d9e9876097b33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15d552394e1cb94598eef278ff3d9e9876097b33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15d552394e1cb94598eef278ff3d9e9876097b33"}], "stats": {"total": 112, "additions": 85, "deletions": 27}, "files": [{"sha": "fb339196a2271cdcfb1c170ff7c981d32a5742c4", "filename": "config/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e", "patch": "@@ -1,3 +1,9 @@\n+2020-01-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* lib-link.m4 (AC_LIB_LINKFLAGS_BODY): Add new\n+\t--with-libXXX-type=... option.  Use this to guide the selection of\n+\teither a shared library or a static library.\n+\n 2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n \n \t* toolexeclibdir.m4: New file."}, {"sha": "662192e0a073518ccda8cc634a169dae07befb0d", "filename": "config/lib-link.m4", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e/config%2Flib-link.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e/config%2Flib-link.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Flib-link.m4?ref=e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e", "patch": "@@ -150,6 +150,11 @@ AC_DEFUN([AC_LIB_LINKFLAGS_BODY],\n       fi\n     fi\n ])\n+  AC_LIB_ARG_WITH([lib$1-type],\n+[  --with-lib$1-type=TYPE     type of library to search for (auto/static/shared) ],\n+  [ with_lib$1_type=$withval ], [ with_lib$1_type=auto ])\n+  lib_type=`eval echo \\$with_lib$1_type`\n+\n   dnl Search the library and its dependencies in $additional_libdir and\n   dnl $LDFLAGS. Using breadth-first-seach.\n   LIB[]NAME=\n@@ -195,13 +200,13 @@ AC_DEFUN([AC_LIB_LINKFLAGS_BODY],\n           found_so=\n           found_a=\n           if test $use_additional = yes; then\n-            if test -n \"$shlibext\" && test -f \"$additional_libdir/lib$name.$shlibext\"; then\n+            if test -n \"$shlibext\" && test -f \"$additional_libdir/lib$name.$shlibext\" && test x$lib_type != xstatic; then\n               found_dir=\"$additional_libdir\"\n               found_so=\"$additional_libdir/lib$name.$shlibext\"\n               if test -f \"$additional_libdir/lib$name.la\"; then\n                 found_la=\"$additional_libdir/lib$name.la\"\n               fi\n-            else\n+            elif test x$lib_type != xshared; then\n               if test -f \"$additional_libdir/lib$name.$libext\"; then\n                 found_dir=\"$additional_libdir\"\n                 found_a=\"$additional_libdir/lib$name.$libext\"\n@@ -217,13 +222,13 @@ AC_DEFUN([AC_LIB_LINKFLAGS_BODY],\n               case \"$x\" in\n                 -L*)\n                   dir=`echo \"X$x\" | sed -e 's/^X-L//'`\n-                  if test -n \"$shlibext\" && test -f \"$dir/lib$name.$shlibext\"; then\n+                  if test -n \"$shlibext\" && test -f \"$dir/lib$name.$shlibext\" && test x$lib_type != xstatic; then\n                     found_dir=\"$dir\"\n                     found_so=\"$dir/lib$name.$shlibext\"\n                     if test -f \"$dir/lib$name.la\"; then\n                       found_la=\"$dir/lib$name.la\"\n                     fi\n-                  else\n+                  elif test x$lib_type != xshared; then\n                     if test -f \"$dir/lib$name.$libext\"; then\n                       found_dir=\"$dir\"\n                       found_a=\"$dir/lib$name.$libext\"\n@@ -487,8 +492,13 @@ AC_DEFUN([AC_LIB_LINKFLAGS_BODY],\n             dnl known to the linker and runtime loader. (All the system\n             dnl directories known to the linker should also be known to the\n             dnl runtime loader, otherwise the system is severely misconfigured.)\n-            LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-l$name\"\n-            LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-l$name\"\n+            if x$lib_type = xauto || x$lib_type = xshared; then\n+              LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-l$name\"\n+              LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-l$name\"\n+            else\n+              LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-l:lib$name.$libext\"\n+              LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-l:lib$name.$libext\"\n+            fi\n           fi\n         fi\n       fi"}, {"sha": "ea9d60215e5b09a94496a2ea8565a8192c42c3f1", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e", "patch": "@@ -1,3 +1,7 @@\n+2020-01-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* configure: Regenerate.\n+\n 2020-01-24  Nathan Sidwell  <nathan@acm.org>\n \n \t* expr.c (parse_has_include): Remove bogus controlling macro code."}, {"sha": "7e53cade210675c7784ed8dfe898978092e97c3b", "filename": "libcpp/configure", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e", "patch": "@@ -730,6 +730,7 @@ enable_werror_always\n with_gnu_ld\n enable_rpath\n with_libiconv_prefix\n+with_libiconv_type\n enable_maintainer_mode\n enable_checking\n enable_canonical_system_headers\n@@ -1383,6 +1384,7 @@ Optional Packages:\n   --with-gnu-ld           assume the C compiler uses GNU ld default=no\n   --with-libiconv-prefix[=DIR]  search for libiconv in DIR/include and DIR/lib\n   --without-libiconv-prefix     don't search for libiconv in includedir and libdir\n+  --with-libiconv-type=TYPE     type of library to search for (auto/static/shared)\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -6753,6 +6755,16 @@ if test \"${with_libiconv_prefix+set}\" = set; then :\n \n fi\n \n+\n+# Check whether --with-libiconv-type was given.\n+if test \"${with_libiconv_type+set}\" = set; then :\n+  withval=$with_libiconv_type;  with_libiconv_type=$withval\n+else\n+   with_libiconv_type=auto\n+fi\n+\n+  lib_type=`eval echo \\$with_libiconv_type`\n+\n       LIBICONV=\n   LTLIBICONV=\n   INCICONV=\n@@ -6790,13 +6802,13 @@ fi\n           found_so=\n           found_a=\n           if test $use_additional = yes; then\n-            if test -n \"$shlibext\" && test -f \"$additional_libdir/lib$name.$shlibext\"; then\n+            if test -n \"$shlibext\" && test -f \"$additional_libdir/lib$name.$shlibext\" && test x$lib_type != xstatic; then\n               found_dir=\"$additional_libdir\"\n               found_so=\"$additional_libdir/lib$name.$shlibext\"\n               if test -f \"$additional_libdir/lib$name.la\"; then\n                 found_la=\"$additional_libdir/lib$name.la\"\n               fi\n-            else\n+            elif test x$lib_type != xshared; then\n               if test -f \"$additional_libdir/lib$name.$libext\"; then\n                 found_dir=\"$additional_libdir\"\n                 found_a=\"$additional_libdir/lib$name.$libext\"\n@@ -6820,13 +6832,13 @@ fi\n               case \"$x\" in\n                 -L*)\n                   dir=`echo \"X$x\" | sed -e 's/^X-L//'`\n-                  if test -n \"$shlibext\" && test -f \"$dir/lib$name.$shlibext\"; then\n+                  if test -n \"$shlibext\" && test -f \"$dir/lib$name.$shlibext\" && test x$lib_type != xstatic; then\n                     found_dir=\"$dir\"\n                     found_so=\"$dir/lib$name.$shlibext\"\n                     if test -f \"$dir/lib$name.la\"; then\n                       found_la=\"$dir/lib$name.la\"\n                     fi\n-                  else\n+                  elif test x$lib_type != xshared; then\n                     if test -f \"$dir/lib$name.$libext\"; then\n                       found_dir=\"$dir\"\n                       found_a=\"$dir/lib$name.$libext\"\n@@ -7054,8 +7066,13 @@ fi\n               done\n             fi\n           else\n-                                                            LIBICONV=\"${LIBICONV}${LIBICONV:+ }-l$name\"\n-            LTLIBICONV=\"${LTLIBICONV}${LTLIBICONV:+ }-l$name\"\n+                                                            if x$lib_type = xauto || x$lib_type = xshared; then\n+              LIBICONV=\"${LIBICONV}${LIBICONV:+ }-l$name\"\n+              LTLIBICONV=\"${LTLIBICONV}${LTLIBICONV:+ }-l$name\"\n+            else\n+              LIBICONV=\"${LIBICONV}${LIBICONV:+ }-l:lib$name.$libext\"\n+              LTLIBICONV=\"${LTLIBICONV}${LTLIBICONV:+ }-l:lib$name.$libext\"\n+            fi\n           fi\n         fi\n       fi"}, {"sha": "e49950caf1ed0b8373c8184aa4c165222d8f869e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e", "patch": "@@ -1,3 +1,7 @@\n+2020-01-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* configure: Regenerate.\n+\n 2020-01-27  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/93426"}, {"sha": "60ad38b47c6c152b0d174dc45ccebe5c7585cb2d", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 32, "deletions": 15, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=e7c26e04b2dd6266d62d5a5825ff7eb44d1cf14e", "patch": "@@ -931,6 +931,7 @@ enable_libstdcxx_time\n enable_tls\n enable_rpath\n with_libiconv_prefix\n+with_libiconv_type\n with_system_libunwind\n enable_linux_futex\n enable_symvers\n@@ -1665,6 +1666,7 @@ Optional Packages:\n   --with-gnu-ld           assume the C compiler uses GNU ld default=no\n   --with-libiconv-prefix[=DIR]  search for libiconv in DIR/include and DIR/lib\n   --without-libiconv-prefix     don't search for libiconv in includedir and libdir\n+  --with-libiconv-type=TYPE     type of library to search for (auto/static/shared)\n   --with-system-libunwind use installed libunwind\n   --with-default-libstdcxx-abi\n                           set the std::string ABI to use by default\n@@ -12057,7 +12059,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12060 \"configure\"\n+#line 12062 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12163,7 +12165,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12166 \"configure\"\n+#line 12168 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15855,7 +15857,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15858 \"configure\"\n+#line 15860 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -15890,7 +15892,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15893 \"configure\"\n+#line 15895 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -15925,7 +15927,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15928 \"configure\"\n+#line 15930 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -15961,7 +15963,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15964 \"configure\"\n+#line 15966 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -16114,7 +16116,7 @@ $as_echo \"mutex\" >&6; }\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 16117 \"configure\"\n+#line 16119 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -16156,7 +16158,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 16159 \"configure\"\n+#line 16161 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -16190,7 +16192,7 @@ $as_echo \"$enable_int128\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 16193 \"configure\"\n+#line 16195 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -29156,6 +29158,16 @@ if test \"${with_libiconv_prefix+set}\" = set; then :\n \n fi\n \n+\n+# Check whether --with-libiconv-type was given.\n+if test \"${with_libiconv_type+set}\" = set; then :\n+  withval=$with_libiconv_type;  with_libiconv_type=$withval\n+else\n+   with_libiconv_type=auto\n+fi\n+\n+  lib_type=`eval echo \\$with_libiconv_type`\n+\n       LIBICONV=\n   LTLIBICONV=\n   INCICONV=\n@@ -29193,13 +29205,13 @@ fi\n           found_so=\n           found_a=\n           if test $use_additional = yes; then\n-            if test -n \"$shlibext\" && test -f \"$additional_libdir/lib$name.$shlibext\"; then\n+            if test -n \"$shlibext\" && test -f \"$additional_libdir/lib$name.$shlibext\" && test x$lib_type != xstatic; then\n               found_dir=\"$additional_libdir\"\n               found_so=\"$additional_libdir/lib$name.$shlibext\"\n               if test -f \"$additional_libdir/lib$name.la\"; then\n                 found_la=\"$additional_libdir/lib$name.la\"\n               fi\n-            else\n+            elif test x$lib_type != xshared; then\n               if test -f \"$additional_libdir/lib$name.$libext\"; then\n                 found_dir=\"$additional_libdir\"\n                 found_a=\"$additional_libdir/lib$name.$libext\"\n@@ -29223,13 +29235,13 @@ fi\n               case \"$x\" in\n                 -L*)\n                   dir=`echo \"X$x\" | sed -e 's/^X-L//'`\n-                  if test -n \"$shlibext\" && test -f \"$dir/lib$name.$shlibext\"; then\n+                  if test -n \"$shlibext\" && test -f \"$dir/lib$name.$shlibext\" && test x$lib_type != xstatic; then\n                     found_dir=\"$dir\"\n                     found_so=\"$dir/lib$name.$shlibext\"\n                     if test -f \"$dir/lib$name.la\"; then\n                       found_la=\"$dir/lib$name.la\"\n                     fi\n-                  else\n+                  elif test x$lib_type != xshared; then\n                     if test -f \"$dir/lib$name.$libext\"; then\n                       found_dir=\"$dir\"\n                       found_a=\"$dir/lib$name.$libext\"\n@@ -29457,8 +29469,13 @@ fi\n               done\n             fi\n           else\n-                                                            LIBICONV=\"${LIBICONV}${LIBICONV:+ }-l$name\"\n-            LTLIBICONV=\"${LTLIBICONV}${LTLIBICONV:+ }-l$name\"\n+                                                            if x$lib_type = xauto || x$lib_type = xshared; then\n+              LIBICONV=\"${LIBICONV}${LIBICONV:+ }-l$name\"\n+              LTLIBICONV=\"${LTLIBICONV}${LTLIBICONV:+ }-l$name\"\n+            else\n+              LIBICONV=\"${LIBICONV}${LIBICONV:+ }-l:lib$name.$libext\"\n+              LTLIBICONV=\"${LTLIBICONV}${LTLIBICONV:+ }-l:lib$name.$libext\"\n+            fi\n           fi\n         fi\n       fi"}]}