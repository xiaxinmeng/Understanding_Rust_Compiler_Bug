{"sha": "018a61c9f452cf038e91ecddda8742c8be34c871", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE4YTYxYzlmNDUyY2YwMzhlOTFlY2RkZGE4NzQyYzhiZTM0Yzg3MQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2008-04-14T15:51:51Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2008-04-14T15:51:51Z"}, "message": "Add missing file from my previous commit...\n\nFrom-SVN: r134276", "tree": {"sha": "47ac8b27f0a73ebafad4100e6a327be7fcd8670c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47ac8b27f0a73ebafad4100e6a327be7fcd8670c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/018a61c9f452cf038e91ecddda8742c8be34c871", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/018a61c9f452cf038e91ecddda8742c8be34c871", "html_url": "https://github.com/Rust-GCC/gccrs/commit/018a61c9f452cf038e91ecddda8742c8be34c871", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/018a61c9f452cf038e91ecddda8742c8be34c871/comments", "author": null, "committer": null, "parents": [{"sha": "8f3723e0ae9d77ba02984c0dec5eaf03cd034437", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f3723e0ae9d77ba02984c0dec5eaf03cd034437", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f3723e0ae9d77ba02984c0dec5eaf03cd034437"}], "stats": {"total": 226, "additions": 226, "deletions": 0}, "files": [{"sha": "5c391fe187786726ab8724df03a80415cc4a1fb0", "filename": "gcc/config/bfin/constraints.md", "status": "added", "additions": 226, "deletions": 0, "changes": 226, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018a61c9f452cf038e91ecddda8742c8be34c871/gcc%2Fconfig%2Fbfin%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018a61c9f452cf038e91ecddda8742c8be34c871/gcc%2Fconfig%2Fbfin%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fconstraints.md?ref=018a61c9f452cf038e91ecddda8742c8be34c871", "patch": "@@ -0,0 +1,226 @@\n+;; Constraint definitions for Blackfin\n+;; Copyright (C) 2007 Free Software Foundation, Inc.\n+;; Contributed by Analog Devices\n+\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 2, or (at your\n+;; option) any later version.\n+\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING.  If not, write to\n+;; the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+;; Boston, MA 02110-1301, USA.\n+\n+(define_register_constraint \"a\" \"PREGS\"\n+  \"A Pn register.\")\n+\n+(define_register_constraint \"d\" \"DREGS\"\n+  \"A Rn register.\")\n+\n+(define_register_constraint \"z\" \"PREGS_CLOBBERED\"\n+  \"A call clobbered Pn register.\")\n+\n+(define_register_constraint \"D\" \"EVEN_DREGS\"\n+  \"An even-numbered Rn register.\")\n+\n+(define_register_constraint \"W\" \"ODD_DREGS\"\n+  \"An odd-numbered Rn register.\")\n+\n+(define_register_constraint \"e\" \"AREGS\"\n+  \"An accumulator register.\")\n+\n+(define_register_constraint \"A\" \"EVEN_AREGS\"\n+  \"An even-numbered accumulator; A0.\")\n+\n+(define_register_constraint \"B\" \"ODD_AREGS\"\n+  \"An odd-numbered accumulator; A1.\")\n+\n+(define_register_constraint \"b\" \"IREGS\"\n+  \"An I register.\")\n+\n+(define_register_constraint \"v\" \"BREGS\"\n+  \"A B register.\")\n+\n+(define_register_constraint \"f\" \"MREGS\"\n+  \"An M register.\")\n+\n+(define_register_constraint \"c\" \"CIRCREGS\"\n+  \"A register used for circular buffering, i.e. I, B, or L registers.\")\n+\n+(define_register_constraint \"C\" \"CCREGS\"\n+  \"The CC register.\")\n+\n+(define_register_constraint \"t\" \"LT_REGS\"\n+  \"LT0 or LT1.\")\n+\n+(define_register_constraint \"u\" \"LB_REGS\"\n+  \"LB0 or LB1.\")\n+\n+(define_register_constraint \"k\" \"LC_REGS\"\n+  \"LC0 or LC1.\")\n+\n+(define_register_constraint \"x\" \"MOST_REGS\"\n+  \"Any R, P, B, M, I or L register.\")\n+\n+(define_register_constraint \"y\" \"PROLOGUE_REGS\"\n+  \"Additional registers typically used only in prologues and epilogues:\n+   RETS, RETN, RETI, RETX, RETE, ASTAT, SEQSTAT and USP.\")\n+\n+(define_register_constraint \"w\" \"NON_A_CC_REGS\"\n+  \"Any register except accumulators or CC.\")\n+\n+(define_register_constraint \"Z\" \"FDPIC_REGS\"\n+  \"@internal The FD-PIC GOT pointer; P3.\")\n+\n+(define_register_constraint \"Y\" \"FDPIC_FPTR_REGS\"\n+  \"@internal The FD-PIC function pointer register; P1.\")\n+\n+(define_register_constraint \"q0\" \"D0REGS\"\n+  \"The register R0.\")\n+\n+(define_register_constraint \"q1\" \"D1REGS\"\n+  \"The register R1.\")\n+\n+(define_register_constraint \"q2\" \"D2REGS\"\n+  \"The register R2.\")\n+\n+(define_register_constraint \"q3\" \"D3REGS\"\n+  \"The register R3.\")\n+\n+(define_register_constraint \"q4\" \"D4REGS\"\n+  \"The register R4.\")\n+\n+(define_register_constraint \"q5\" \"D5REGS\"\n+  \"The register R5.\")\n+\n+(define_register_constraint \"q6\" \"D6REGS\"\n+  \"The register R6.\")\n+\n+(define_register_constraint \"q7\" \"D7REGS\"\n+  \"The register R7.\")\n+\n+(define_register_constraint \"qA\" \"P0REGS\"\n+  \"The register P0.\")\n+\n+;; Constant constraints.\n+\n+(define_constraint \"J\"\n+  \"A constant value of the form 2**N, where N 5-bit wide.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"log2constp (ival)\")))\n+\n+(define_constraint \"Ks3\"\n+  \"A signed 3 bit immediate.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival >= -4 && ival <= 3\")))\n+\n+(define_constraint \"Ku3\"\n+  \"An unsigned 3 bit immediate.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival >= 0 && ival <= 7\")))\n+\n+(define_constraint \"Ks4\"\n+  \"A signed 4 bit immediate.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival >= -8 && ival <= 7\")))\n+\n+(define_constraint \"Ku4\"\n+  \"An unsigned 4 bit immediate.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival >= 0 && ival <= 15\")))\n+\n+(define_constraint \"Ks5\"\n+  \"A signed 5 bit immediate.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival >= -16 && ival <= 15\")))\n+\n+(define_constraint \"Ku5\"\n+  \"An unsigned 5 bit immediate.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival >= 0 && ival <= 31\")))\n+\n+(define_constraint \"Ks7\"\n+  \"A signed 7 bit immediate.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival >= -64 && ival <= 63\")))\n+\n+(define_constraint \"KN7\"\n+  \"A constant that when negated is a signed 7 bit immediate.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival >= -63 && ival <= 64\")))\n+\n+(define_constraint \"Ksh\"\n+  \"A signed 16 bit immediate.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival >= -32768 && ival <= 32767\")))\n+\n+(define_constraint \"Kuh\"\n+  \"An unsigned 16 bit immediate.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival >= 0 && ival <= 65535\")))\n+\n+(define_constraint \"L\"\n+  \"A constant value of the form ~(2**N).\"\n+  (and (match_code \"const_int\")\n+       (match_test \"log2constp (~ival)\")))\n+\n+(define_constraint \"M1\"\n+  \"An integer with the value 255.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival == 255\")))\n+\n+(define_constraint \"M2\"\n+  \"An integer with the value 65535.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival == 65535\")))\n+\n+(define_constraint \"P0\"\n+  \"An integer with the value 0.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival == 0\")))\n+\n+(define_constraint \"P1\"\n+  \"An integer with the value 1.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival == 1\")))\n+\n+(define_constraint \"P2\"\n+  \"An integer with the value 2.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival == 2\")))\n+\n+(define_constraint \"P3\"\n+  \"An integer with the value 3.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival == 3\")))\n+\n+(define_constraint \"P4\"\n+  \"An integer with the value 4.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival == 4\")))\n+\n+(define_constraint \"PA\"\n+  \"An integer constant describing any macflag except variants involving M.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival != MACFLAG_M && ival != MACFLAG_IS_M\")))\n+\n+(define_constraint \"PB\"\n+  \"An integer constant describing any macflag involving M.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival == MACFLAG_M || ival == MACFLAG_IS_M\")))\n+\n+\n+;; Extra constraints\n+\n+(define_constraint \"Q\"\n+  \"A SYMBOL_REF.\"\n+  (match_code \"symbol_ref\"))\n+"}]}