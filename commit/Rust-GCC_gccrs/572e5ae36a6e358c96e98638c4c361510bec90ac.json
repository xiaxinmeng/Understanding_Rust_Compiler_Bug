{"sha": "572e5ae36a6e358c96e98638c4c361510bec90ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcyZTVhZTM2YTZlMzU4Yzk2ZTk4NjM4YzRjMzYxNTEwYmVjOTBhYw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2008-06-29T05:36:20Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2008-06-29T05:36:20Z"}, "message": "optabs.c (libfunc_decl_hash, [...]): Fix -Wcast-qual warnings.\n\n\t* optabs.c (libfunc_decl_hash, libfunc_decl_eq): Fix -Wcast-qual\n\twarnings.\n\n\t* Makefile.in (CXX_COMPAT_WARN, cxx_compat_warn): Delete.\n\t(bitmap.o-warn, dominance.o-warn): New.\n\t* configure.ac (cxx_compat_warn): Delete.\n\t(loose_warn): Add -Wcast-qual and -Wc++-compat.\n\t* system.h: Remove #pragma diagnostic for -Wcast-qual and\n\t-Wc++-compat.\n\t* configure: Regenerate.\n\t\ncp:\n\t* Make-lang.in (cp-warn): Delete $(CXX_COMPAT_WARN).\n\njava:\n\t* Make-lang.in (java/jcf-io.o-warn): New.\n\nFrom-SVN: r137246", "tree": {"sha": "4087c41736bddb46c32817dfe3abeba27c59d14b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4087c41736bddb46c32817dfe3abeba27c59d14b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/572e5ae36a6e358c96e98638c4c361510bec90ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/572e5ae36a6e358c96e98638c4c361510bec90ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/572e5ae36a6e358c96e98638c4c361510bec90ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/572e5ae36a6e358c96e98638c4c361510bec90ac/comments", "author": null, "committer": null, "parents": [{"sha": "4dc6c528c2b8e858ae65d91a82c6fae661894302", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dc6c528c2b8e858ae65d91a82c6fae661894302", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dc6c528c2b8e858ae65d91a82c6fae661894302"}], "stats": {"total": 145, "additions": 50, "deletions": 95}, "files": [{"sha": "26a22dbf4daccf6184318a35cc325f3a63b9b243", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=572e5ae36a6e358c96e98638c4c361510bec90ac", "patch": "@@ -1,3 +1,16 @@\n+2008-06-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (CXX_COMPAT_WARN, cxx_compat_warn): Delete.\n+\t(bitmap.o-warn, dominance.o-warn): New.\n+\t* configure.ac (cxx_compat_warn): Delete.\n+\t(loose_warn): Add -Wcast-qual and -Wc++-compat.\n+\t* system.h: Remove #pragma diagnostic for -Wcast-qual and\n+\t-Wc++-compat.\n+\t* configure: Regenerate.\n+\n+\t* optabs.c (libfunc_decl_hash, libfunc_decl_eq): Fix -Wcast-qual\n+\twarnings.\n+\n 2008-06-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* alloc-pool.c (create_alloc_pool): Fix -Wc++-compat warnings."}, {"sha": "b29b0a8143e13879addf5be63f771ef98637ea32", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=572e5ae36a6e358c96e98638c4c361510bec90ac", "patch": "@@ -160,10 +160,8 @@ coverageexts = .{gcda,gcno}\n # STRICT_WARN are the additional warning flags to\n # apply to the back end and the C front end, which may be compiled\n # with other compilers.\n-# CXX_COMPAT_WARN are C++ source compatibility warnings.\n LOOSE_WARN = @loose_warn@\n STRICT_WARN = @strict_warn@\n-CXX_COMPAT_WARN = @cxx_compat_warn@\n \n # This is set by --enable-checking.  The idea is to catch forgotten\n # \"extern\" tags in header files.\n@@ -189,6 +187,10 @@ build/gengtype-lex.o-warn = -Wno-error\n SYSCALLS.c.X-warn = -Wno-strict-prototypes -Wno-error\n # dfp.c contains alias violations\n dfp.o-warn = -Wno-error\n+# bitmap.c contains -Wc++compat warnings.\n+bitmap.o-warn = -Wno-error\n+# dominance.c contains a -Wc++compat warning.\n+dominance.o-warn = -Wno-error\n \n # All warnings have to be shut off in stage1 if the compiler used then\n # isn't gcc; configure determines that.  WARN_CFLAGS will be either"}, {"sha": "f2b15d192e762ae9375a1301ac0a168f8b66cdd9", "filename": "gcc/configure", "status": "modified", "additions": 16, "deletions": 84, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=572e5ae36a6e358c96e98638c4c361510bec90ac", "patch": "@@ -458,7 +458,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical build_libsubdir build_subdir host_subdir target_subdir GENINSRC CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT GNATBIND ac_ct_GNATBIND GNATMAKE ac_ct_GNATMAKE NO_MINUS_C_MINUS_O OUTPUT_OPTION CPP EGREP loose_warn cxx_compat_warn strict_warn warn_cflags nocommon_flag TREEBROWSER valgrind_path valgrind_path_defines valgrind_command coverage_flags enable_multilib enable_decimal_float enable_fixed_point enable_shared TARGET_SYSTEM_ROOT TARGET_SYSTEM_ROOT_DEFINE CROSS_SYSTEM_HEADER_DIR onestep PKGVERSION REPORT_BUGS_TO REPORT_BUGS_TEXI datarootdir docdir htmldir SET_MAKE AWK LN_S LN RANLIB ac_ct_RANLIB ranlib_flags INSTALL INSTALL_PROGRAM INSTALL_DATA make_compare_target have_mktemp_command MAKEINFO BUILD_INFO GENERATED_MANPAGES FLEX BISON NM AR COLLECT2_LIBS GNAT_LIBEXC LDEXP_LIB TARGET_GETGROUPS_T LIBICONV LTLIBICONV LIBICONV_DEP manext objext gthread_flags extra_modes_file extra_opt_files USE_NLS LIBINTL LIBINTL_DEP INCINTL XGETTEXT GMSGFMT POSUB CATALOGS DATADIRNAME INSTOBJEXT GENCAT CATOBJEXT host_cc_for_libada CROSS ALL SYSTEM_HEADER_DIR inhibit_libc CC_FOR_BUILD BUILD_CFLAGS BUILD_LDFLAGS STMP_FIXINC STMP_FIXPROTO collect2 LIBTOOL SED FGREP GREP LD DUMPBIN ac_ct_DUMPBIN ac_ct_AR STRIP ac_ct_STRIP lt_ECHO objdir enable_fast_install gcc_cv_as ORIGINAL_AS_FOR_TARGET gcc_cv_ld ORIGINAL_LD_FOR_TARGET gcc_cv_nm ORIGINAL_NM_FOR_TARGET gcc_cv_objdump libgcc_visibility GGC zlibdir zlibinc MAINT gcc_tooldir dollar slibdir subdirs srcdir all_compilers all_gtfiles all_lang_makefrags all_lang_makefiles all_languages all_selected_languages build_exeext build_install_headers_dir build_xm_file_list build_xm_include_list build_xm_defines build_file_translate check_languages cpp_install_dir xmake_file tmake_file extra_gcc_objs extra_headers_list extra_objs extra_parts extra_passes extra_programs float_h_file gcc_config_arguments gcc_gxx_include_dir host_exeext host_xm_file_list host_xm_include_list host_xm_defines out_host_hook_obj install lang_opt_files lang_specs_files lang_tree_files local_prefix md_file objc_boehm_gc out_file out_object_file thread_file tm_file_list tm_include_list tm_defines tm_p_file_list tm_p_include_list xm_file_list xm_include_list xm_defines c_target_objs cxx_target_objs fortran_target_objs target_cpu_default GMPLIBS GMPINC LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical build_libsubdir build_subdir host_subdir target_subdir GENINSRC CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT GNATBIND ac_ct_GNATBIND GNATMAKE ac_ct_GNATMAKE NO_MINUS_C_MINUS_O OUTPUT_OPTION CPP EGREP loose_warn strict_warn warn_cflags nocommon_flag TREEBROWSER valgrind_path valgrind_path_defines valgrind_command coverage_flags enable_multilib enable_decimal_float enable_fixed_point enable_shared TARGET_SYSTEM_ROOT TARGET_SYSTEM_ROOT_DEFINE CROSS_SYSTEM_HEADER_DIR onestep PKGVERSION REPORT_BUGS_TO REPORT_BUGS_TEXI datarootdir docdir htmldir SET_MAKE AWK LN_S LN RANLIB ac_ct_RANLIB ranlib_flags INSTALL INSTALL_PROGRAM INSTALL_DATA make_compare_target have_mktemp_command MAKEINFO BUILD_INFO GENERATED_MANPAGES FLEX BISON NM AR COLLECT2_LIBS GNAT_LIBEXC LDEXP_LIB TARGET_GETGROUPS_T LIBICONV LTLIBICONV LIBICONV_DEP manext objext gthread_flags extra_modes_file extra_opt_files USE_NLS LIBINTL LIBINTL_DEP INCINTL XGETTEXT GMSGFMT POSUB CATALOGS DATADIRNAME INSTOBJEXT GENCAT CATOBJEXT host_cc_for_libada CROSS ALL SYSTEM_HEADER_DIR inhibit_libc CC_FOR_BUILD BUILD_CFLAGS BUILD_LDFLAGS STMP_FIXINC STMP_FIXPROTO collect2 LIBTOOL SED FGREP GREP LD DUMPBIN ac_ct_DUMPBIN ac_ct_AR STRIP ac_ct_STRIP lt_ECHO objdir enable_fast_install gcc_cv_as ORIGINAL_AS_FOR_TARGET gcc_cv_ld ORIGINAL_LD_FOR_TARGET gcc_cv_nm ORIGINAL_NM_FOR_TARGET gcc_cv_objdump libgcc_visibility GGC zlibdir zlibinc MAINT gcc_tooldir dollar slibdir subdirs srcdir all_compilers all_gtfiles all_lang_makefrags all_lang_makefiles all_languages all_selected_languages build_exeext build_install_headers_dir build_xm_file_list build_xm_include_list build_xm_defines build_file_translate check_languages cpp_install_dir xmake_file tmake_file extra_gcc_objs extra_headers_list extra_objs extra_parts extra_passes extra_programs float_h_file gcc_config_arguments gcc_gxx_include_dir host_exeext host_xm_file_list host_xm_include_list host_xm_defines out_host_hook_obj install lang_opt_files lang_specs_files lang_tree_files local_prefix md_file objc_boehm_gc out_file out_object_file thread_file tm_file_list tm_include_list tm_defines tm_p_file_list tm_p_include_list xm_file_list xm_include_list xm_defines c_target_objs cxx_target_objs fortran_target_objs target_cpu_default GMPLIBS GMPINC LIBOBJS LTLIBOBJS'\n ac_subst_files='language_hooks'\n ac_pwd=`pwd`\n \n@@ -7015,7 +7015,7 @@ fi\n loose_warn=\n save_CFLAGS=\"$CFLAGS\"\n for option in -W -Wall -Wwrite-strings -Wstrict-prototypes \\\n-\t\t\t  -Wmissing-prototypes; do\n+\t  -Wmissing-prototypes -Wcast-qual -Wc++-compat; do\n   as_acx_Woption=`echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n \n   echo \"$as_me:$LINENO: checking whether $CC supports $option\" >&5\n@@ -7080,73 +7080,6 @@ fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n \n-cxx_compat_warn=\n-save_CFLAGS=\"$CFLAGS\"\n-for option in -Wc++-compat; do\n-  as_acx_Woption=`echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n-\n-  echo \"$as_me:$LINENO: checking whether $CC supports $option\" >&5\n-echo $ECHO_N \"checking whether $CC supports $option... $ECHO_C\" >&6\n-if eval \"test \\\"\\${$as_acx_Woption+set}\\\" = set\"; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  CFLAGS=\"$option\"\n-    cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-int\n-main ()\n-{\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n-  (eval $ac_compile) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest.$ac_objext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  eval \"$as_acx_Woption=yes\"\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-eval \"$as_acx_Woption=no\"\n-fi\n-rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n-\n-fi\n-echo \"$as_me:$LINENO: result: `eval echo '${'$as_acx_Woption'}'`\" >&5\n-echo \"${ECHO_T}`eval echo '${'$as_acx_Woption'}'`\" >&6\n-  if test `eval echo '${'$as_acx_Woption'}'` = yes; then\n-  cxx_compat_warn=\"$cxx_compat_warn${cxx_compat_warn:+ }$option\"\n-fi\n-\n-  done\n-CFLAGS=\"$save_CFLAGS\"\n-\n strict_warn=\n save_CFLAGS=\"$CFLAGS\"\n for option in -Wold-style-definition \\\n@@ -14726,13 +14659,13 @@ if test \"${lt_cv_nm_interface+set}\" = set; then\n else\n   lt_cv_nm_interface=\"BSD nm\"\n   echo \"int some_variable = 0;\" > conftest.$ac_ext\n-  (eval echo \"\\\"\\$as_me:14729: $ac_compile\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:14662: $ac_compile\\\"\" >&5)\n   (eval \"$ac_compile\" 2>conftest.err)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:14732: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:14665: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n   (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:14735: output\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:14668: output\\\"\" >&5)\n   cat conftest.out >&5\n   if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n     lt_cv_nm_interface=\"MS dumpbin\"\n@@ -15787,7 +15720,7 @@ ia64-*-hpux*)\n   ;;\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 15790 \"configure\"' > conftest.$ac_ext\n+  echo '#line 15723 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -16407,11 +16340,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:16410: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:16343: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:16414: \\$? = $ac_status\" >&5\n+   echo \"$as_me:16347: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -16729,11 +16662,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:16732: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:16665: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:16736: \\$? = $ac_status\" >&5\n+   echo \"$as_me:16669: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -16834,11 +16767,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:16837: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:16770: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:16841: \\$? = $ac_status\" >&5\n+   echo \"$as_me:16774: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -16889,11 +16822,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:16892: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:16825: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:16896: \\$? = $ac_status\" >&5\n+   echo \"$as_me:16829: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -19686,7 +19619,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19689 \"configure\"\n+#line 19622 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19786,7 +19719,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19789 \"configure\"\n+#line 19722 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -24550,7 +24483,6 @@ s,@OUTPUT_OPTION@,$OUTPUT_OPTION,;t t\n s,@CPP@,$CPP,;t t\n s,@EGREP@,$EGREP,;t t\n s,@loose_warn@,$loose_warn,;t t\n-s,@cxx_compat_warn@,$cxx_compat_warn,;t t\n s,@strict_warn@,$strict_warn,;t t\n s,@warn_cflags@,$warn_cflags,;t t\n s,@nocommon_flag@,$nocommon_flag,;t t"}, {"sha": "31b448720a25f55a69f90c882cf6dc5cf111aa8b", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=572e5ae36a6e358c96e98638c4c361510bec90ac", "patch": "@@ -323,8 +323,7 @@ AC_CHECK_TYPES([__int64], [AC_CHECK_SIZEOF(__int64)])\n # So, we only use -pedantic if we can disable those warnings.\n \n ACX_PROG_CC_WARNING_OPTS([-W -Wall -Wwrite-strings -Wstrict-prototypes \\\n-\t\t\t  -Wmissing-prototypes], [loose_warn])\n-ACX_PROG_CC_WARNING_OPTS([-Wc++-compat], [cxx_compat_warn])\n+\t  -Wmissing-prototypes -Wcast-qual -Wc++-compat], [loose_warn])\n ACX_PROG_CC_WARNING_OPTS([-Wold-style-definition \\\n                           -Wmissing-format-attribute], [strict_warn])\n ACX_PROG_CC_WARNING_ALMOST_PEDANTIC([-Wno-long-long -Wno-variadic-macros \\"}, {"sha": "50117700c4148da5ef5ac961732387c29a54cd32", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=572e5ae36a6e358c96e98638c4c361510bec90ac", "patch": "@@ -1,3 +1,7 @@\n+2008-06-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Make-lang.in (cp-warn): Delete $(CXX_COMPAT_WARN).\n+\n 2008-06-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/36364"}, {"sha": "6fced350ec4ef311a41928f9836fa740116708d9", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=572e5ae36a6e358c96e98638c4c361510bec90ac", "patch": "@@ -89,7 +89,7 @@ CXX_OBJS = cp/cp-lang.o stub-objc.o $(CXX_AND_OBJCXX_OBJS)\n c++_OBJS = $(CXX_OBJS) dummy-checksum.o cc1plus-checksum.o cp/g++spec.o\n \n # Use strict warnings for this front end.\n-cp-warn = $(STRICT_WARN) $(CXX_COMPAT_WARN)\n+cp-warn = $(STRICT_WARN)\n \n cc1plus-dummy$(exeext): $(CXX_OBJS) dummy-checksum.o $(BACKEND) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\"}, {"sha": "b5ceb09f1b90893f03eae28a198f266e365277ee", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=572e5ae36a6e358c96e98638c4c361510bec90ac", "patch": "@@ -1,3 +1,7 @@\n+2008-06-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Make-lang.in (java/jcf-io.o-warn): New.\n+\n 2008-06-24  Tom Tromey  <tromey@redhat.com>\n \n \t* jcf-path.c (jcf_path_init): Don't name variable 'try'."}, {"sha": "badbb7fdfbf10b9b35519dd4310491d45da7d505", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=572e5ae36a6e358c96e98638c4c361510bec90ac", "patch": "@@ -101,6 +101,9 @@ jvspec.o-warn = -Wno-error\n # Bison-1.75 output often yields (harmless) -Wtraditional warnings\n java/parse.o-warn = -Wno-error\n \n+# java/jcf-io.c contains a -Wc++compat warning.\n+java/jcf-io.o-warn = -Wno-error\n+\n jc1$(exeext): $(JAVA_OBJS) $(BACKEND) $(LIBDEPS) attribs.o\n \trm -f $@\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\"}, {"sha": "32a6396bd7000b442cafdc5cfb84188c8564a6d7", "filename": "gcc/optabs.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=572e5ae36a6e358c96e98638c4c361510bec90ac", "patch": "@@ -5992,13 +5992,13 @@ static GTY ((param_is (union tree_node))) htab_t libfunc_decls;\n static hashval_t\n libfunc_decl_hash (const void *entry)\n {\n-  return htab_hash_string (IDENTIFIER_POINTER (DECL_NAME ((tree) entry)));\n+  return htab_hash_string (IDENTIFIER_POINTER (DECL_NAME ((const_tree) entry)));\n }\n \n static int\n libfunc_decl_eq (const void *entry1, const void *entry2)\n {\n-  return DECL_NAME ((tree) entry1) == (tree) entry2;\n+  return DECL_NAME ((const_tree) entry1) == (const_tree) entry2;\n }\n \n rtx"}, {"sha": "be70b026ff454100bbbb6f665b83630356122d07", "filename": "gcc/system.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572e5ae36a6e358c96e98638c4c361510bec90ac/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=572e5ae36a6e358c96e98638c4c361510bec90ac", "patch": "@@ -797,11 +797,9 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n #define CONST_CAST_RTX(X) CONST_CAST(struct rtx_def *, (X))\n #define CONST_CAST_BB(X) CONST_CAST(struct basic_block_def *, (X))\n \n-/* Activate -Wcast-qual and -Wc++-compat as warnings (not errors via\n-   the -Werror flag).  */\n+/* Activate certain diagnostics as warnings (not errors via the\n+   -Werror flag).  */\n #if GCC_VERSION >= 4003\n-#pragma GCC diagnostic warning \"-Wcast-qual\"\n-#pragma GCC diagnostic warning \"-Wc++-compat\"\n /* If asserts are disabled, activate -Wuninitialized as a warning (not\n    an error/-Werror).  */\n #ifndef ENABLE_ASSERT_CHECKING"}]}