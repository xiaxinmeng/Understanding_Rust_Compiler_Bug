{"sha": "5e8006fa728c84b2075a8ff3540d2528846e862e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU4MDA2ZmE3MjhjODRiMjA3NWE4ZmYzNTQwZDI1Mjg4NDZlODYyZQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2003-03-26T16:24:54Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2003-03-26T16:24:54Z"}, "message": "8540.md: New file.\n\n2003-03-26  Vladimir Makarov  <vmakarov@redhat.com>\n\n        * config/rs6000/8540.md: New file.\n\n\t* config/rs6000/{40x.md, 603.md, 6xx.md, 7450.md, 7xx.md, mpc.md,\n\tpower4.md, rios1.md, rios2.md, rs64.md}: Add mult_compare to\n\treservations for imul.\n\n\t* config/rs6000/rs6000.md: Include 8540.md.  Change\n\tdelayed_compare onto mult_compare for insns generating\n\tmultiplication.\n\t(mult_compare, fpsimple, brinc, vecdiv, veccmpsimple, vecfdiv):\n\tNew type attribute values.\n\n\t* config/rs6000/spe.md (*negsf2_gp, *abssf2_gpr): Use type\n\tfpsimple instead of fp.\n\t(*divsf3_gpr): Use type vecfdiv instead of fp.\n\t(spe_evfsabs, spe_evfsnabs, spe_evfsneg): Use type vecsimple\n\tinstead of vecfloat.\n\t(spe_evfsdive): Use type vecfdiv instead of vecfloat.\n\t(spe_brinc): Use type brinc instead of veccomplex.\n\t(spe_evaddw, spe_evaddiw): Use type vecsimple instead of\n\tveccomplex.\n\t(spe_evdivws, spe_evdivwu): Use type vecdiv instead of veccomplex.\n\t(*movv2si_internal, *movv1di_internal, *movv4hi_internal,\n\t*movv2sf_internal): Define type attribute values for all\n\talternatives.\n\t(cmpsfeq_gpr, cmpsfgt_gpr, cmpsflt_gpr): Use type veccmp instead\n\tof fpcompare.\n\t(tstsfeq_gpr, tstsfgt_gpr, tstsflt_gpr): Use type veccmpsimple\n\tinstead of fpcompare.\n\nFrom-SVN: r64899", "tree": {"sha": "177cc95fa5ca013cecf115c8acc65cf515b5adf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/177cc95fa5ca013cecf115c8acc65cf515b5adf8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e8006fa728c84b2075a8ff3540d2528846e862e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e8006fa728c84b2075a8ff3540d2528846e862e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e8006fa728c84b2075a8ff3540d2528846e862e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e8006fa728c84b2075a8ff3540d2528846e862e/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "29ae93642d81acf4bba804d2929de1527d319b13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29ae93642d81acf4bba804d2929de1527d319b13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29ae93642d81acf4bba804d2929de1527d319b13"}], "stats": {"total": 342, "additions": 300, "deletions": 42}, "files": [{"sha": "7b1c44604eea7c53563a5db2b3ca2493d45935e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e8006fa728c84b2075a8ff3540d2528846e862e", "patch": "@@ -1,3 +1,35 @@\n+2003-03-26  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+        * config/rs6000/8540.md: New file.\n+\t\n+\t* config/rs6000/{40x.md, 603.md, 6xx.md, 7450.md, 7xx.md, mpc.md,\n+\tpower4.md, rios1.md, rios2.md, rs64.md}: Add mult_compare to\n+\treservations for imul.\n+\n+\t* config/rs6000/rs6000.md: Include 8540.md.  Change\n+\tdelayed_compare onto mult_compare for insns generating\n+\tmultiplication.\n+\t(mult_compare, fpsimple, brinc, vecdiv, veccmpsimple, vecfdiv):\n+\tNew type attribute values.\n+\n+\t* config/rs6000/spe.md (*negsf2_gp, *abssf2_gpr): Use type\n+\tfpsimple instead of fp.\n+\t(*divsf3_gpr): Use type vecfdiv instead of fp.\n+\t(spe_evfsabs, spe_evfsnabs, spe_evfsneg): Use type vecsimple\n+\tinstead of vecfloat.\n+\t(spe_evfsdive): Use type vecfdiv instead of vecfloat.\n+\t(spe_brinc): Use type brinc instead of veccomplex.\n+\t(spe_evaddw, spe_evaddiw): Use type vecsimple instead of\n+\tveccomplex.\n+\t(spe_evdivws, spe_evdivwu): Use type vecdiv instead of veccomplex.\n+\t(*movv2si_internal, *movv1di_internal, *movv4hi_internal,\n+\t*movv2sf_internal): Define type attribute values for all\n+\talternatives.\n+\t(cmpsfeq_gpr, cmpsfgt_gpr, cmpsflt_gpr): Use type veccmp instead\n+\tof fpcompare.\n+\t(tstsfeq_gpr, tstsfgt_gpr, tstsflt_gpr): Use type veccmpsimple\n+\tinstead of fpcompare.\n+\t\t\n 2003-03-26  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/power4.md: Allow delay between dispatch and"}, {"sha": "5e5240f836cea3f0620247e963da78714c04b139", "filename": "gcc/config/rs6000/40x.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2F40x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2F40x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F40x.md?ref=5e8006fa728c84b2075a8ff3540d2528846e862e", "patch": "@@ -46,12 +46,12 @@\n   \"iu_40x,nothing,bpu_40x\")\n \n (define_insn_reservation \"ppc403-imul\" 4\n-  (and (eq_attr \"type\" \"imul,imul2,imul3\")\n+  (and (eq_attr \"type\" \"imul,imul2,imul3,mult_compare\")\n        (eq_attr \"cpu\" \"ppc403\"))\n   \"iu_40x*4\")\n \n (define_insn_reservation \"ppc405-imul\" 5\n-  (and (eq_attr \"type\" \"imul\")\n+  (and (eq_attr \"type\" \"imul,mult_compare\")\n        (eq_attr \"cpu\" \"ppc405\"))\n   \"iu_40x*4\")\n "}, {"sha": "8fec3096affca5c193b4754224ac16e7507edb07", "filename": "gcc/config/rs6000/603.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2F603.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2F603.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F603.md?ref=5e8006fa728c84b2075a8ff3540d2528846e862e", "patch": "@@ -60,7 +60,7 @@\n \n ; This takes 2 or 3 cycles\n (define_insn_reservation \"ppc603-imul\" 3\n-  (and (eq_attr \"type\" \"imul\")\n+  (and (eq_attr \"type\" \"imul,mult_compare\")\n        (eq_attr \"cpu\" \"ppc603\"))\n   \"iu_603*2\")\n "}, {"sha": "aecf7781624a2fc92990a0616a2b82bb877e6edf", "filename": "gcc/config/rs6000/6xx.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2F6xx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2F6xx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F6xx.md?ref=5e8006fa728c84b2075a8ff3540d2528846e862e", "patch": "@@ -69,17 +69,17 @@\n   \"iu1_6xx|iu2_6xx\")\n \n (define_insn_reservation \"ppc604-imul\" 4\n-  (and (eq_attr \"type\" \"imul,imul2,imul3\")\n+  (and (eq_attr \"type\" \"imul,imul2,imul3,mult_compare\")\n        (eq_attr \"cpu\" \"ppc604\"))\n   \"mciu_6xx*2\")\n \n (define_insn_reservation \"ppc604e-imul\" 2\n-  (and (eq_attr \"type\" \"imul,imul2,imul3\")\n+  (and (eq_attr \"type\" \"imul,imul2,imul3,mult_compare\")\n        (eq_attr \"cpu\" \"ppc604e\"))\n   \"mciu_6xx\")\n \n (define_insn_reservation \"ppc620-imul\" 5\n-  (and (eq_attr \"type\" \"imul\")\n+  (and (eq_attr \"type\" \"imul,mult_compare\")\n        (eq_attr \"cpu\" \"ppc620,ppc630\"))\n   \"mciu_6xx*3\")\n "}, {"sha": "3d25054072800d79ec2f8ca5242a7b12c01fe587", "filename": "gcc/config/rs6000/7450.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2F7450.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2F7450.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F7450.md?ref=5e8006fa728c84b2075a8ff3540d2528846e862e", "patch": "@@ -69,7 +69,7 @@\n   \"ppc7450_du,(iu1_7450|iu2_7450|iu3_7450)\")\n \n (define_insn_reservation \"ppc7450-imul\" 4\n-  (and (eq_attr \"type\" \"imul\")\n+  (and (eq_attr \"type\" \"imul,mult_compare\")\n        (eq_attr \"cpu\" \"ppc7450\"))\n   \"ppc7450_du,mciu_7450*2\")\n "}, {"sha": "22a4f187c54a6543b3fa8f56bd38407187f2ee3a", "filename": "gcc/config/rs6000/7xx.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2F7xx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2F7xx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F7xx.md?ref=5e8006fa728c84b2075a8ff3540d2528846e862e", "patch": "@@ -64,7 +64,7 @@\n   \"ppc750_du,(iu1_7xx|iu2_7xx)\")\n \n (define_insn_reservation \"ppc750-imul\" 4\n-  (and (eq_attr \"type\" \"imul\")\n+  (and (eq_attr \"type\" \"imul,mult_compare\")\n        (eq_attr \"cpu\" \"ppc750,ppc7400\"))\n   \"ppc750_du,iu1_7xx*4\")\n "}, {"sha": "e8fd5bf90638a91df94303e041aa522367adcbfc", "filename": "gcc/config/rs6000/8540.md", "status": "added", "additions": 225, "deletions": 0, "changes": 225, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2F8540.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2F8540.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F8540.md?ref=5e8006fa728c84b2075a8ff3540d2528846e862e", "patch": "@@ -0,0 +1,225 @@\n+;; Pipeline description for Motorola PowerPC 8540 processor.\n+;;   Copyright (C) 2003 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GNU CC.\n+;;\n+;; GNU CC is free software; you can redistribute it and/or modify\n+;; it under the terms of the GNU General Public License as published by\n+;; the Free Software Foundation; either version 2, or (at your option)\n+;; any later version.\n+;;\n+;; GNU CC is distributed in the hope that it will be useful,\n+;; but WITHOUT ANY WARRANTY; without even the implied warranty of\n+;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+;; GNU General Public License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GNU CC; see the file COPYING.  If not, write to\n+;; the Free Software Foundation, 59 Temple Place - Suite 330,\n+;; Boston, MA 02111-1307, USA.\n+\n+(define_automaton \"ppc8540_most,ppc8540_long,ppc8540_retire\")\n+(define_cpu_unit \"ppc8540_decode_0,ppc8540_decode_1\" \"ppc8540_most\")\n+(define_cpu_unit \"ppc8540_issue_0,ppc8540_issue_1\"   \"ppc8540_most\")\n+\n+;; We could describe completion buffers slots in combination with the\n+;; retirement units and the order of completion but the result\n+;; automaton would behave in the same way because we can not describe\n+;; real latency time with taking in order completion into account.\n+;; Actually we could define the real latency time by querying reserved\n+;; automaton units but the current scheduler uses latency time before\n+;; issuing insns and making any reservations.\n+;;\n+;; So our description is aimed to achieve a insn schedule in which the\n+;; insns would not wait in the completion buffer.\n+(define_cpu_unit \"ppc8540_retire_0,ppc8540_retire_1\" \"ppc8540_retire\")\n+\n+;; Branch unit:\n+(define_cpu_unit \"ppc8540_bu\" \"ppc8540_most\")\n+\n+;; SIU:\n+(define_cpu_unit \"ppc8540_siu0_stage0,ppc8540_siu1_stage0\" \"ppc8540_most\")\n+\n+;; We could describe here MIU subunits for float multiply, float add\n+;; etc.  But the result automaton would behave the same way as the\n+;; described one pipeline below because MIU can start only one insn\n+;; per cycle.  Actually we could simplify the automaton more not\n+;; describing stages 1-3, the result automata would be the same.\n+(define_cpu_unit \"ppc8540_miu_stage0,ppc8540_miu_stage1\" \"ppc8540_most\")\n+(define_cpu_unit \"ppc8540_miu_stage2,ppc8540_miu_stage3\" \"ppc8540_most\")\n+\n+;; The following unit is used to describe non-pipelined division.\n+(define_cpu_unit \"ppc8540_miu_div\" \"ppc8540_long\")\n+\n+;; Here we simplified LSU unit description not describing the stages.\n+(define_cpu_unit \"ppc8540_lsu\" \"ppc8540_most\")\n+\n+;; The following units are used to make automata deterministic\n+(define_cpu_unit \"absent_ppc8540_decode_0\" \"ppc8540_most\")\n+(define_cpu_unit \"absent_ppc8540_issue_0\" \"ppc8540_most\")\n+(define_cpu_unit \"absent_ppc8540_retire_0\" \"ppc8540_retire\")\n+(define_cpu_unit \"absent_ppc8540_siu0_stage0\" \"ppc8540_most\")\n+\n+;; The following sets to make automata deterministic when option ndfa is used.\n+(absence_set \"absent_ppc8540_decode_0\" \"ppc8540_decode_0\")\n+(absence_set \"absent_ppc8540_issue_0\" \"ppc8540_issue_0\")\n+(absence_set \"absent_ppc8540_retire_0\" \"ppc8540_retire_0\")\n+(absence_set \"absent_ppc8540_siu0_stage0\" \"ppc8540_siu0_stage0\")\n+\n+;; Some useful abbreviations.\n+(define_reservation \"ppc8540_decode\"\n+    \"ppc8540_decode_0|ppc8540_decode_1+absent_ppc8540_decode_0\")\n+(define_reservation \"ppc8540_issue\"\n+    \"ppc8540_issue_0|ppc8540_issue_1+absent_ppc8540_issue_0\")\n+(define_reservation \"ppc8540_retire\"\n+   \"ppc8540_retire_0|ppc8540_retire_1+absent_ppc8540_retire_0\")\n+(define_reservation \"ppc8540_siu_stage0\"\n+   \"ppc8540_siu0_stage0|ppc8540_siu1_stage0+absent_ppc8540_siu0_stage0\")\n+\n+;; Simple SIU insns\n+(define_insn_reservation \"ppc8540_siu\" 1\n+  (and (eq_attr \"type\" \"integer,cmp,compare,delayed_compare,fast_compare\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_siu_stage0+ppc8540_retire\")\n+\n+;; Branch.  Actually this latency time is not used by the scheduler.\n+(define_insn_reservation \"ppc8540_branch\" 1\n+  (and (eq_attr \"type\" \"jmpreg,branch\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_bu+ppc8540_retire\")\n+\n+;; Multiply\n+(define_insn_reservation \"ppc8540_multiply\" 4\n+  (and (eq_attr \"type\" \"imul,imul2,imul3,mult_compare\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_miu_stage0,ppc8540_miu_stage1,\\\n+   ppc8540_miu_stage2,ppc8540_miu_stage3,ppc8540_retire\")\n+\n+;; Divide.  We use the average latency time here.  We omit reserving a\n+;; retire unit because of the result automata will be huge.\n+(define_insn_reservation \"ppc8540_divide\" 14\n+  (and (eq_attr \"type\" \"idiv\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_miu_stage0+ppc8540_miu_div,\\\n+   ppc8540_miu_div*13\")\n+\n+;; CR logical\n+(define_insn_reservation \"ppc8540_cr_logical\" 1\n+  (and (eq_attr \"type\" \"cr_logical,delayed_cr\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_bu+ppc8540_retire\")\n+\n+;; Mfcr\n+(define_insn_reservation \"ppc8540_mfcr\" 1\n+  (and (eq_attr \"type\" \"mfcr\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_siu1_stage0+ppc8540_retire\")\n+\n+;; Mtcrf\n+(define_insn_reservation \"ppc8540_mtcrf\" 1\n+  (and (eq_attr \"type\" \"mtcr\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_siu1_stage0+ppc8540_retire\")\n+\n+;; Mtjmpr\n+(define_insn_reservation \"ppc8540_mtjmpr\" 1\n+  (and (eq_attr \"type\" \"mtjmpr\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_siu_stage0+ppc8540_retire\")\n+\n+;; Loads\n+(define_insn_reservation \"ppc8540_load\" 3\n+  (and (eq_attr \"type\" \"load,load_ext,load_ext_u,load_ext_ux,load_ux,load_u\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_lsu,nothing*2,ppc8540_retire\")\n+\n+;; Stores.\n+(define_insn_reservation \"ppc8540_store\" 3\n+  (and (eq_attr \"type\" \"store,store_ux,store_u\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_lsu,nothing*2,ppc8540_retire\")\n+\n+;; Simple FP\n+(define_insn_reservation \"ppc8540_simple_float\" 1\n+  (and (eq_attr \"type\" \"fpsimple\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_siu_stage0,ppc8540_retire\")\n+\n+;; FP\n+(define_insn_reservation \"ppc8540_float\" 4\n+  (and (eq_attr \"type\" \"fp\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_miu_stage0,ppc8540_miu_stage1,\\\n+   ppc8540_miu_stage2,ppc8540_miu_stage3+ppc8540_retire\")\n+\n+;; float divides.  We omit reserving a retire unit because of the\n+;; result automata will be huge.\n+(define_insn_reservation \"ppc8540_float_vector_divide\" 29\n+  (and (eq_attr \"type\" \"vecfdiv\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_miu_stage0+ppc8540_miu_div,\\\n+   ppc8540_miu_div*28\")\n+\n+;; Brinc\n+(define_insn_reservation \"ppc8540_brinc\" 1\n+  (and (eq_attr \"type\" \"brinc\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_siu_stage0+ppc8540_retire\")\n+\n+;; Simple vector\n+(define_insn_reservation \"ppc8540_simple_vector\" 1\n+  (and (eq_attr \"type\" \"vecsimple\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_siu1_stage0+ppc8540_retire\")\n+\n+;; Simple vector compare\n+(define_insn_reservation \"ppc8540_simple_vector_compare\" 1\n+  (and (eq_attr \"type\" \"veccmpsimple\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_siu_stage0+ppc8540_retire\")\n+\n+;; Vector compare\n+(define_insn_reservation \"ppc8540_vector_compare\" 1\n+  (and (eq_attr \"type\" \"veccmp\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_siu1_stage0+ppc8540_retire\")\n+\n+;; evsplatfi evsplati\n+(define_insn_reservation \"ppc8540_vector_perm\" 1\n+  (and (eq_attr \"type\" \"vecperm\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_siu1_stage0+ppc8540_retire\")\n+\n+;; Vector float\n+(define_insn_reservation \"ppc8540_float_vector\" 4\n+  (and (eq_attr \"type\" \"vecfloat\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_miu_stage0,ppc8540_miu_stage1,\\\n+   ppc8540_miu_stage2,ppc8540_miu_stage3+ppc8540_retire\")\n+\n+;; Vector divides: Use the average.  We omit reserving a retire unit\n+;; because of the result automata will be huge.\n+(define_insn_reservation \"ppc8540_vector_divide\" 14\n+  (and (eq_attr \"type\" \"vecdiv\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_miu_stage0+ppc8540_miu_div,\\\n+   ppc8540_miu_div*13\")\n+\n+;; Complex vector.\n+(define_insn_reservation \"ppc8540_complex_vector\" 4\n+  (and (eq_attr \"type\" \"veccomplex\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_miu_stage0,ppc8540_miu_stage1,\\\n+   ppc8540_miu_stage2,ppc8540_miu_stage3+ppc8540_retire\")\n+\n+;; Vector load\n+(define_insn_reservation \"ppc8540_vector_load\" 3\n+  (and (eq_attr \"type\" \"vecload\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_lsu,nothing*2,ppc8540_retire\")\n+\n+;; Vector store\n+(define_insn_reservation \"ppc8540_vector_store\" 3\n+  (and (eq_attr \"type\" \"vecstore\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_lsu,nothing*2,ppc8540_retire\")"}, {"sha": "775520883a2bd1804a2bb9818bd786f0906da79e", "filename": "gcc/config/rs6000/mpc.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2Fmpc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2Fmpc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fmpc.md?ref=5e8006fa728c84b2075a8ff3540d2528846e862e", "patch": "@@ -47,7 +47,7 @@\n   \"iu_mpc\")\n \n (define_insn_reservation \"mpccore-imul\" 2\n-  (and (eq_attr \"type\" \"imul,imul2,imul3\")\n+  (and (eq_attr \"type\" \"imul,imul2,imul3,mult_compare\")\n        (eq_attr \"cpu\" \"mpccore\"))\n   \"mciu_mpc\")\n "}, {"sha": "99d78d3a29d5edd8dbf2c33161ad95568794d36b", "filename": "gcc/config/rs6000/power4.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2Fpower4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2Fpower4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower4.md?ref=5e8006fa728c84b2075a8ff3540d2528846e862e", "patch": "@@ -197,7 +197,7 @@\n (define_bypass 2 \"power4-compare\" \"power4-integer\")\n \n (define_insn_reservation \"power4-imul\" 7\n-  (and (eq_attr \"type\" \"imul,lmul\")\n+  (and (eq_attr \"type\" \"imul,lmul,mult_compare\")\n        (eq_attr \"cpu\" \"power4\"))\n   \"(q1_power4,iu1_power4*6)|(q2_power4,iu2_power4*6)\")\n "}, {"sha": "1e93209fed146ec1c195486a6d46c305472b14e3", "filename": "gcc/config/rs6000/rios1.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2Frios1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2Frios1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frios1.md?ref=5e8006fa728c84b2075a8ff3540d2528846e862e", "patch": "@@ -56,7 +56,7 @@\n   \"iu_rios1\")\n \n (define_insn_reservation \"rios1-imul\" 5\n-  (and (eq_attr \"type\" \"imul\")\n+  (and (eq_attr \"type\" \"imul,mult_compare\")\n        (eq_attr \"cpu\" \"rios1\"))\n   \"iu_rios1*5\")\n \n@@ -66,12 +66,12 @@\n   \"iu_rios1*4\")\n \n (define_insn_reservation \"rios1-imul3\" 3\n-  (and (eq_attr \"type\" \"imul\")\n+  (and (eq_attr \"type\" \"imul,mult_compare\")\n        (eq_attr \"cpu\" \"rios1\"))\n   \"iu_rios1*3\")\n \n (define_insn_reservation \"ppc601-imul\" 5\n-  (and (eq_attr \"type\" \"imul,imul2,imul3\")\n+  (and (eq_attr \"type\" \"imul,imul2,imul3,mult_compare\")\n        (eq_attr \"cpu\" \"ppc601\"))\n   \"iu_rios1*5\")\n "}, {"sha": "e45c40591e8a6b60d4db30758dfb18fa19735dc9", "filename": "gcc/config/rs6000/rios2.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2Frios2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2Frios2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frios2.md?ref=5e8006fa728c84b2075a8ff3540d2528846e862e", "patch": "@@ -44,7 +44,7 @@\n   \"iu1_rios2|iu2_rios2\")\n \n (define_insn_reservation \"rios2-imul\" 2\n-  (and (eq_attr \"type\" \"imul,imul2,imul3\")\n+  (and (eq_attr \"type\" \"imul,imul2,imul3,mult_compare\")\n        (eq_attr \"cpu\" \"rios2\"))\n   \"iu1_rios2*2\")\n "}, {"sha": "0915ebfc6c0375bc2bba6dc3995a26fd21938819", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=5e8006fa728c84b2075a8ff3540d2528846e862e", "patch": "@@ -39,7 +39,7 @@\n \f\n ;; Define an insn type attribute.  This is used in function unit delay\n ;; computations.\n-(define_attr \"type\" \"integer,load,load_ext,load_ext_u,load_ext_ux,load_ux,load_u,store,store_ux,store_u,fpload,fpload_ux,fpload_u,fpstore,fpstore_ux,fpstore_u,vecload,vecstore,imul,imul2,imul3,lmul,idiv,ldiv,branch,cmp,fast_compare,compare,delayed_compare,fpcompare,cr_logical,delayed_cr,mfcr,mtcr,mtjmpr,fp,dmul,sdiv,ddiv,ssqrt,dsqrt,jmpreg,vecsimple,veccomplex,veccmp,vecperm,vecfloat\"\n+(define_attr \"type\" \"integer,load,load_ext,load_ext_u,load_ext_ux,load_ux,load_u,store,store_ux,store_u,fpload,fpload_ux,fpload_u,fpstore,fpstore_ux,fpstore_u,vecload,vecstore,imul,imul2,imul3,lmul,idiv,ldiv,branch,cmp,fast_compare,compare,delayed_compare,mult_compare,fpcompare,cr_logical,delayed_cr,mfcr,mtcr,mtjmpr,fp,fpsimple,dmul,sdiv,ddiv,ssqrt,dsqrt,jmpreg,brinc,vecsimple,veccomplex,vecdiv,veccmp,veccmpsimple,vecperm,vecfloat,vecfdiv\"\n   (const_string \"integer\"))\n \n ;; Length (in bytes).\n@@ -72,6 +72,7 @@\n (include \"6xx.md\")\n (include \"7xx.md\")\n (include \"7450.md\")\n+(include \"8540.md\")\n (include \"power4.md\")\n \n \f\n@@ -1679,7 +1680,7 @@\n   \"@\n    {muls.|mullw.} %3,%1,%2\n    #\"\n-  [(set_attr \"type\" \"delayed_compare\")\n+  [(set_attr \"type\" \"mult_compare\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -1708,7 +1709,7 @@\n   \"@\n    {muls.|mullw.} %3,%1,%2\n    #\"\n-  [(set_attr \"type\" \"delayed_compare\")\n+  [(set_attr \"type\" \"mult_compare\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -1737,7 +1738,7 @@\n   \"@\n    {muls.|mullw.} %0,%1,%2\n    #\"\n-  [(set_attr \"type\" \"delayed_compare\")\n+  [(set_attr \"type\" \"mult_compare\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -1768,7 +1769,7 @@\n   \"@\n    {muls.|mullw.} %0,%1,%2\n    #\"\n-  [(set_attr \"type\" \"delayed_compare\")\n+  [(set_attr \"type\" \"mult_compare\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split"}, {"sha": "46291b30c5e68ac78370268fbfc213efce51e293", "filename": "gcc/config/rs6000/rs64.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2Frs64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2Frs64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs64.md?ref=5e8006fa728c84b2075a8ff3540d2528846e862e", "patch": "@@ -47,7 +47,7 @@\n   \"iu_rs64\")\n \n (define_insn_reservation \"rs64a-imul\" 20\n-  (and (eq_attr \"type\" \"imul\")\n+  (and (eq_attr \"type\" \"imul,mult_compare\")\n        (eq_attr \"cpu\" \"rs64a\"))\n   \"mciu_rs64*13\")\n "}, {"sha": "a1ba680a42a9684eb849a55126e704918076170d", "filename": "gcc/config/rs6000/spe.md", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2Fspe.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e8006fa728c84b2075a8ff3540d2528846e862e/gcc%2Fconfig%2Frs6000%2Fspe.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fspe.md?ref=5e8006fa728c84b2075a8ff3540d2528846e862e", "patch": "@@ -28,14 +28,14 @@\n         (neg:SF (match_operand:SF 1 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_HARD_FLOAT && !TARGET_FPRS\"\n   \"efsneg %0,%1\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"fpsimple\")])\n \n (define_insn \"*abssf2_gpr\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=r\")\n \t(abs:SF (match_operand:SF 1 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_HARD_FLOAT && !TARGET_FPRS\"\n   \"efsabs %0,%1\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"fpsimple\")])\n \n (define_insn \"*addsf3_gpr\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=r\")\n@@ -67,7 +67,7 @@\n                 (match_operand:SF 2 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_HARD_FLOAT && !TARGET_FPRS\"\n   \"efsdiv %0,%1,%2\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"vecfdiv\")])\n \n (define_insn \"spe_efsctuiz\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -617,7 +617,7 @@\n         (abs:V2SF (match_operand:V2SF 1 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_SPE\"\n   \"evfsabs %0,%1\"\n-  [(set_attr \"type\" \"vecfloat\")\n+  [(set_attr \"type\" \"vecsimple\")\n    (set_attr  \"length\" \"4\")])\n \n (define_insn \"spe_evfsadd\"\n@@ -717,7 +717,7 @@\n    (clobber (reg:SI SPEFSCR_REGNO))]\n   \"TARGET_SPE\"\n   \"evfsdiv %0,%1,%2\"\n-  [(set_attr \"type\" \"vecfloat\")\n+  [(set_attr \"type\" \"vecfdiv\")\n    (set_attr  \"length\" \"4\")])\n \n (define_insn \"spe_evfsmul\"\n@@ -735,15 +735,15 @@\n \t(unspec:V2SF [(match_operand:V2SF 1 \"gpc_reg_operand\" \"r\")] 537))]\n   \"TARGET_SPE\"\n   \"evfsnabs %0,%1\"\n-  [(set_attr \"type\" \"vecfloat\")\n+  [(set_attr \"type\" \"vecsimple\")\n    (set_attr  \"length\" \"4\")])\n \n (define_insn \"spe_evfsneg\"\n   [(set (match_operand:V2SF 0 \"gpc_reg_operand\" \"=r\")\n         (neg:V2SF (match_operand:V2SF 1 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_SPE\"\n   \"evfsneg %0,%1\"\n-  [(set_attr \"type\" \"vecfloat\")\n+  [(set_attr \"type\" \"vecsimple\")\n    (set_attr  \"length\" \"4\")])\n \n (define_insn \"spe_evfssub\"\n@@ -889,7 +889,7 @@\n \t\t    (match_operand:SI 2 \"gpc_reg_operand\" \"r\")] 556))]\n   \"TARGET_SPE\"\n   \"brinc %0,%1,%2\"\n-  [(set_attr \"type\" \"veccomplex\")\n+  [(set_attr \"type\" \"brinc\")\n    (set_attr  \"length\" \"4\")])\n \n (define_insn \"spe_evmhegsmfaa\"\n@@ -1847,7 +1847,7 @@\n \t\t   (match_operand:V2SI 2 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_SPE\"\n   \"evaddw %0,%1,%2\"\n-  [(set_attr \"type\" \"veccomplex\")\n+  [(set_attr \"type\" \"vecsimple\")\n    (set_attr  \"length\" \"4\")])\n \n (define_insn \"spe_evaddusiaaw\"\n@@ -1898,7 +1898,7 @@\n \t\t      (match_operand:QI 2 \"immediate_operand\" \"i\")] 677))]\n   \"TARGET_SPE\"\n   \"evaddiw %0,%1,%2\"\n-  [(set_attr \"type\" \"veccomplex\")\n+  [(set_attr \"type\" \"vecsimple\")\n    (set_attr  \"length\" \"4\")])\n \n (define_insn \"spe_evsubifw\"\n@@ -1978,7 +1978,7 @@\n    (clobber (reg:SI SPEFSCR_REGNO))]\n   \"TARGET_SPE\"\n   \"evdivws %0,%1,%2\"\n-  [(set_attr \"type\" \"veccomplex\")\n+  [(set_attr \"type\" \"vecdiv\")\n    (set_attr  \"length\" \"4\")])\n \n (define_insn \"spe_evdivwu\"\n@@ -1988,7 +1988,7 @@\n       (clobber (reg:SI SPEFSCR_REGNO))]\n   \"TARGET_SPE\"\n   \"evdivwu %0,%1,%2\"\n-  [(set_attr \"type\" \"veccomplex\")\n+  [(set_attr \"type\" \"vecdiv\")\n    (set_attr  \"length\" \"4\")])\n \n (define_insn \"spe_evsplatfi\"\n@@ -2194,7 +2194,7 @@\n    evstdd%X0 %1,%y0\n    evldd%X1 %0,%y1\n    evor %0,%1,%1\"\n-  [(set_attr \"type\" \"vecload\")])\n+  [(set_attr \"type\" \"vecload,vecload,vecsimple\")])\n \n (define_expand \"movv1di\"\n   [(set (match_operand:V1DI 0 \"nonimmediate_operand\" \"\")\n@@ -2210,7 +2210,7 @@\n    evstdd%X0 %1,%y0\n    evldd%X1 %0,%y1\n    evor %0,%1,%1\"\n-  [(set_attr \"type\" \"vecload\")])\n+  [(set_attr \"type\" \"vecload,vecload,vecsimple\")])\n \n (define_expand \"movv4hi\"\n   [(set (match_operand:V4HI 0 \"nonimmediate_operand\" \"\")\n@@ -2226,7 +2226,7 @@\n    evstdd%X0 %1,%y0\n    evldd%X1 %0,%y1\n    evor %0,%1,%1\"\n-  [(set_attr \"type\" \"vecload\")])\n+  [(set_attr \"type\" \"vecload,vecload,vecsimple\")])\n \n (define_expand \"movv2sf\"\n   [(set (match_operand:V2SF 0 \"nonimmediate_operand\" \"\")\n@@ -2242,7 +2242,7 @@\n    evstdd%X0 %1,%y0\n    evldd%X1 %0,%y1\n    evor %0,%1,%1\"\n-  [(set_attr \"type\" \"vecload\")])\n+  [(set_attr \"type\" \"vecload,vecload,vecsimple\")])\n \n (define_insn \"spe_evmwhssfaa\"\n   [(set (match_operand:V2SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -2466,45 +2466,45 @@\n \t\t (match_operand:SF 2 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_HARD_FLOAT && !TARGET_FPRS && !flag_unsafe_math_optimizations\"\n   \"efscmpeq %0,%1,%2\"\n-  [(set_attr \"type\" \"fpcompare\")])\n+  [(set_attr \"type\" \"veccmp\")])\n \n (define_insn \"tstsfeq_gpr\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n \t(eq:CCFP (match_operand:SF 1 \"gpc_reg_operand\" \"r\")\n \t\t (match_operand:SF 2 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_HARD_FLOAT && !TARGET_FPRS && flag_unsafe_math_optimizations\"\n   \"efststeq %0,%1,%2\"\n-  [(set_attr \"type\" \"fpcompare\")])\n+  [(set_attr \"type\" \"veccmpsimple\")])\n \n (define_insn \"cmpsfgt_gpr\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n \t(gt:CCFP (match_operand:SF 1 \"gpc_reg_operand\" \"r\")\n \t\t (match_operand:SF 2 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_HARD_FLOAT && !TARGET_FPRS && !flag_unsafe_math_optimizations\"\n   \"efscmpgt %0,%1,%2\"\n-  [(set_attr \"type\" \"fpcompare\")])\n+  [(set_attr \"type\" \"veccmp\")])\n \n (define_insn \"tstsfgt_gpr\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n \t(gt:CCFP (match_operand:SF 1 \"gpc_reg_operand\" \"r\")\n \t\t (match_operand:SF 2 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_HARD_FLOAT && !TARGET_FPRS && flag_unsafe_math_optimizations\"\n   \"efststgt %0,%1,%2\"\n-  [(set_attr \"type\" \"fpcompare\")])\n+  [(set_attr \"type\" \"veccmpsimple\")])\n \n (define_insn \"cmpsflt_gpr\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n \t(lt:CCFP (match_operand:SF 1 \"gpc_reg_operand\" \"r\")\n \t\t (match_operand:SF 2 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_HARD_FLOAT && !TARGET_FPRS && !flag_unsafe_math_optimizations\"\n   \"efscmplt %0,%1,%2\"\n-  [(set_attr \"type\" \"fpcompare\")])\n+  [(set_attr \"type\" \"veccmp\")])\n \n (define_insn \"tstsflt_gpr\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n \t(lt:CCFP (match_operand:SF 1 \"gpc_reg_operand\" \"r\")\n \t\t (match_operand:SF 2 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_HARD_FLOAT && !TARGET_FPRS && flag_unsafe_math_optimizations\"\n   \"efststlt %0,%1,%2\"\n-  [(set_attr \"type\" \"fpcompare\")])\n+  [(set_attr \"type\" \"veccmpsimple\")])\n "}]}