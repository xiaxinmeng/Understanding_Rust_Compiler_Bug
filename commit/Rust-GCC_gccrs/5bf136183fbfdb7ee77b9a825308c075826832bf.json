{"sha": "5bf136183fbfdb7ee77b9a825308c075826832bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJmMTM2MTgzZmJmZGI3ZWU3N2I5YTgyNTMwOGMwNzU4MjY4MzJiZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-25T22:51:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-25T22:51:43Z"}, "message": "(movsi): New strategy for moving small constants into dregs, if it\ncan't be done with moveq.\n\nFrom-SVN: r6902", "tree": {"sha": "913ed64da4b0dfe7b31552755ea327dd6ae5e172", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/913ed64da4b0dfe7b31552755ea327dd6ae5e172"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bf136183fbfdb7ee77b9a825308c075826832bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bf136183fbfdb7ee77b9a825308c075826832bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bf136183fbfdb7ee77b9a825308c075826832bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bf136183fbfdb7ee77b9a825308c075826832bf/comments", "author": null, "committer": null, "parents": [{"sha": "3d0f0ad043e5469b9149cb56dc4d17313c2a768e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d0f0ad043e5469b9149cb56dc4d17313c2a768e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d0f0ad043e5469b9149cb56dc4d17313c2a768e"}], "stats": {"total": 43, "additions": 8, "deletions": 35}, "files": [{"sha": "d5220aa039e40cc73030021a973e3dc036621da5", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 8, "deletions": 35, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bf136183fbfdb7ee77b9a825308c075826832bf/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bf136183fbfdb7ee77b9a825308c075826832bf/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=5bf136183fbfdb7ee77b9a825308c075826832bf", "patch": "@@ -761,47 +761,20 @@\n           return \\\"moveq%.l %1,%0\\\";\n #else\n \t  return \\\"moveq %1,%0\\\";\n-#endif\n-\t}\n-#ifndef NO_ADDSUB_Q\n-      else if (DATA_REG_P (operands[0])\n-\t       /* Do this with a moveq #N-8, dreg; addq #8,dreg */\n-\t       && INTVAL (operands[1]) < 136\n-\t       && INTVAL (operands[1]) >= 128)\n-        {\n-\t  operands[1] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[1]) - 8);\n-#if defined(MOTOROLA) && !defined(CRDS)\n-          return \\\"moveq%.l %1,%0\\;addq%.w %#8,%0\\\";\n-#else\n-\t  return \\\"moveq %1,%0\\;addq%.w %#8,%0\\\";\n #endif\n \t}\n       else if (DATA_REG_P (operands[0])\n-\t       /* Do this with a moveq #N+8, dreg; subq #8,dreg */\n-\t       && INTVAL (operands[1]) < -128\n-\t       && INTVAL (operands[1]) >= -136)\n+\t\t/* if -256 < N < 256 but N is not in range for a moveq\n+\t\t   N^ff will be, so use moveq #N^ff, dreg; not.b dreg.\t*/\n+\t       && INTVAL (operands[1]) < 256\n+\t       && INTVAL (operands[1]) >= -256)\n         {\n-\t  operands[1] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[1]) + 8);\n+\t  operands[1] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[1]) ^ 0xff);\n #if defined(MOTOROLA) && !defined(CRDS)\n-          return \\\"moveq%.l %1,%0;subq%.w %#8,%0\\\";\n+          return \\\"moveq%.l %1,%0\\;not%.b %0\\\";\n #else\n-\t  return \\\"moveq %1,%0;subq%.w %#8,%0\\\";\n-#endif\n-\t}\n-#endif\n-      else if (DATA_REG_P (operands[0])\n-\t       /* If N is in the right range and is even, then use\n-\t          moveq #N/2, dreg; addl dreg,dreg */\n-\t       && INTVAL (operands[1]) > 127\n-\t       && INTVAL (operands[1]) <= 254\n-\t       && INTVAL (operands[1]) % 2 == 0)\n-        {\n-\t  operands[1] = gen_rtx (CONST_INT, VOIDmode, INTVAL (operands[1]) / 2);\n-#if defined(MOTOROLA) && !defined(CRDS)\n-          return \\\"moveq%.l %1,%0\\;add%.w %0,%0\\\";\n-#else\n-\t  return \\\"moveq %1,%0\\;add%.w %0,%0\\\";\n-#endif\n+\t  return \\\"moveq %1,%0\\;not%.b %0\\\";\n+#endif\t \n \t}\n       else if (ADDRESS_REG_P (operands[0])\n \t       && INTVAL (operands[1]) < 0x8000"}]}