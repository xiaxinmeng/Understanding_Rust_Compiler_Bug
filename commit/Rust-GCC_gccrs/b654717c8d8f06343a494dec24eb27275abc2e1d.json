{"sha": "b654717c8d8f06343a494dec24eb27275abc2e1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY1NDcxN2M4ZDhmMDYzNDNhNDk0ZGVjMjRlYjI3Mjc1YWJjMmUxZA==", "commit": {"author": {"name": "Yury Gribov", "email": "y.gribov@samsung.com", "date": "2013-12-23T07:17:52Z"}, "committer": {"name": "Yury Gribov", "email": "ygribov@gcc.gnu.org", "date": "2013-12-23T07:17:52Z"}, "message": "mklog: Automatically insert comments in trivial cases.\n\n2013-12-23  Yury Gribov  <y.gribov@samsung.com>\n\n\t* mklog: Automatically insert comments in trivial cases.\n\nFrom-SVN: r206175", "tree": {"sha": "0f4d300e781baaddb4b7ef0e5981c061f9be7423", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f4d300e781baaddb4b7ef0e5981c061f9be7423"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b654717c8d8f06343a494dec24eb27275abc2e1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b654717c8d8f06343a494dec24eb27275abc2e1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b654717c8d8f06343a494dec24eb27275abc2e1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b654717c8d8f06343a494dec24eb27275abc2e1d/comments", "author": null, "committer": null, "parents": [{"sha": "c64476f15cea8856399295708bdbe44992beaf55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c64476f15cea8856399295708bdbe44992beaf55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c64476f15cea8856399295708bdbe44992beaf55"}], "stats": {"total": 112, "additions": 83, "deletions": 29}, "files": [{"sha": "d840c098135801ea8c0e8bf310855d7b50903b0d", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b654717c8d8f06343a494dec24eb27275abc2e1d/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b654717c8d8f06343a494dec24eb27275abc2e1d/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=b654717c8d8f06343a494dec24eb27275abc2e1d", "patch": "@@ -1,3 +1,7 @@\n+2013-12-23  Yury Gribov  <y.gribov@samsung.com>\n+\n+\t* mklog: Automatically insert comments in trivial cases.\n+\n 2013-12-19  Yury Gribov  <y.gribov@samsung.com>\n \n \t* mklog: Split generated message in parts."}, {"sha": "fb0514f2ddd19e868b9d056a371347e058668a8f", "filename": "contrib/mklog", "status": "modified", "additions": 79, "deletions": 29, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b654717c8d8f06343a494dec24eb27275abc2e1d/contrib%2Fmklog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b654717c8d8f06343a494dec24eb27275abc2e1d/contrib%2Fmklog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog?ref=b654717c8d8f06343a494dec24eb27275abc2e1d", "patch": "@@ -43,7 +43,7 @@ chdir $gcc_root;\n # Program starts here. You should not need to edit anything below this\n # line.\n #-----------------------------------------------------------------------------\n-if ( $#ARGV != 0 ) {\n+if ($#ARGV != 0) {\n     $prog = `basename $0`; chop ($prog);\n     print \"usage: $prog file.diff\\n\\n\";\n     print \"Adds a ChangeLog template to the start of file.diff\\n\";\n@@ -56,40 +56,76 @@ $dir = `dirname $diff`; chop ($dir);\n $basename = `basename $diff`; chop ($basename);\n $hdrline = \"$date  $name  <$addr>\";\n \n-my %cl_entries;\n+sub get_clname ($) {\n+\treturn ('ChangeLog', $_[0]) if ($_[0] !~ /[\\/\\\\]/);\n \n-sub get_clname($) {\n \tmy $dirname = $_[0];\n \twhile ($dirname) {\n \t\tmy $clname = \"$dirname/ChangeLog\";\n \t\tif (-f $clname) {\n-\t\t\tmy $filename_rel = substr ($_[0], length ($dirname) + 1);\n-\t\t\treturn ($filename_rel, $clname);\n+\t\t\tmy $relname = substr ($_[0], length ($dirname) + 1);\n+\t\t\treturn ($clname, $relname);\n \t\t} else {\n \t\t\t$dirname =~ s/[\\/\\\\]?[^\\/\\\\]*$//;\n \t\t} \n \t}\n-\treturn ($_[0], 'Unknown Changelog');\n+\n+\treturn ('Unknown ChangeLog', $_[0]);\n+}\n+\n+sub remove_suffixes ($) {\n+\tmy $filename = $_[0];\n+\t$filename =~ s/^[ab]\\///;\n+\t$filename =~ s/\\.jj$//;\n+\treturn $filename;\n }\n \n # For every file in the .diff print all the function names in ChangeLog\n # format.\n-$bof = 0;\n+%cl_entries = ();\n+$change_msg = undef;\n+$look_for_funs = 0;\n $clname = get_clname('');\n open (DFILE, $diff) or die \"Could not open file $diff for reading\";\n while (<DFILE>) {\n-    # Check if we found a new file.\n-    if (/^\\+\\+\\+ (b\\/)?(\\S+)/) {\n+    # Stop processing functions if we found a new file\n+\t# Remember both left and right names because one may be /dev/null.\n+    if (/^[+*][+*][+*] +(\\S+)/) {\n+\t\t$left = remove_suffixes ($1);\n+\t\t$look_for_funs = 0;\n+\t}\n+    if (/^--- +(\\S+)?/) {\n+\t\t$right = remove_suffixes ($1);\n+\t\t$look_for_funs = 0;\n+\t}\n+\n+\t# Check if the body of diff started.\n+\t# We should now have both left and right name,\n+\t# so we can decide filename.\n+\n+    if ($left && (/^\\*{15}$/ || /^@@ /)) {\n \t# If we have not seen any function names in the previous file (ie,\n-\t# $bof == 1), we just write out a ':' before starting the next\n+\t# $change_msg is empty), we just write out a ':' before starting the next\n \t# file.\n-\tif ($bof == 1) {\n-\t\t$cl_entries{$clname} .= \":\\n\";\n+\tif ($clname) {\n+\t\t$cl_entries{$clname} .= $change_msg ? \"$change_msg\" : \":\\n\";\n+\t}\n+\n+\tif ($left eq $right) {\n+\t\t$filename = $left;\n+\t} elsif($left eq '/dev/null') {\n+\t\t$filename = $right;\n+\t} elsif($right eq '/dev/null') {\n+\t\t$filename = $left;\n+\t} else {\n+\t\tprint STDERR \"Error: failed to parse diff for $left and $right\\n\";\n+\t\texit 1;\n \t}\n-\t$filename = $2;\n-\t($filename_rel, $clname) = get_clname ($filename);\n-\t$cl_entries{$clname} .= \"\\t* $filename_rel\";\n-\t$bof = 1;\n+\t$left = $right = undef;\n+\t($clname, $relname) = get_clname ($filename);\n+\t$cl_entries{$clname} .= \"\\t* $relname\";\n+\t$change_msg = '';\n+\t$look_for_funs = $filename =~ '\\.(c|cpp|C|cc|h|inc|def)$';\n     }\n \n     # Remember the last line in a unified diff block that might start\n@@ -98,6 +134,22 @@ while (<DFILE>) {\n         $save_fn = $1;\n     }\n \n+    # Check if file is newly added.\n+    # Two patterns: for context and unified diff.\n+    if (/^\\*\\*\\* 0 \\*\\*\\*\\*/\n+        || /^@@ -0,0 \\+1.* @@/) {\n+        $change_msg = $filename =~ /testsuite.*(?<!\\.exp)$/ ? \": New test.\\n\" : \": New file.\\n\";\n+        $look_for_funs = 0;\n+    }\n+\n+    # Check if file was removed.\n+    # Two patterns: for context and unified diff.\n+    if (/^--- 0 ----/\n+        || /^@@ -1.* \\+0,0 @@/) {\n+        $change_msg = \": Remove.\\n\";\n+        $look_for_funs = 0;\n+    }\n+\n     # If we find a new function, print it in brackets.  Special case if\n     # this is the first function in a file.  \n     #\n@@ -110,10 +162,11 @@ while (<DFILE>) {\n     # The fourth pattern looks for the starts of functions or classes\n     # within a unified diff block.\n \n-    if (/^\\*\\*\\*\\*\\*\\** ([a-zA-Z0-9_].*)/\n+    if ($look_for_funs\n+        && (/^\\*\\*\\*\\*\\*\\** ([a-zA-Z0-9_].*)/\n         || /^[\\-\\+\\!] ([a-zA-Z0-9_]+)[ \\t]*\\(.*/\n \t|| /^@@ .* @@ ([a-zA-Z0-9_].*)/\n-\t|| /^[-+ ](\\{)/)\n+\t|| /^[-+ ](\\{)/))\n       {\n \t$_ = $1;\n \tmy $fn;\n@@ -138,25 +191,24 @@ while (<DFILE>) {\n \t    # If this is the first function in the file, we display it next\n \t    # to the filename, so we need an extra space before the opening\n \t    # brace.\n-\t    if ($bof) {\n-\t\t$cl_entries{$clname} .= \" \";\n-\t\t$bof = 0;\n+\t    if (!$change_msg) {\n+\t\t$change_msg .= \" \";\n \t    } else {\n-\t\t$cl_entries{$clname} .= \"\\t\";\n+\t\t$change_msg .= \"\\t\";\n \t    }\n \n-\t\t$cl_entries{$clname} .= \"($fn):\\n\";\n+\t\t$change_msg .= \"($fn):\\n\";\n \t    $seen_names{$fn} = 1;\n \t}\n     }\n }\n \n-# If we have not seen any function names (ie, $bof == 1), we just\n+close (DFILE);\n+\n+# If we have not seen any function names (ie, $change_msg is empty), we just\n # write out a ':'. This happens when there is only one file with no\n # functions.\n-if ($bof == 1) {\n-\t$cl_entries{$clname} .= \":\\n\";\n-}\n+$cl_entries{$clname} .= $change_msg ? \": $change_msg\\n\" : \":\\n\";\n \n $temp = `mktemp /tmp/$basename.XXXXXX` || exit 1; chop ($temp);\n open (CLFILE, \">$temp\") or die \"Could not open file $temp for writing\";\n@@ -165,8 +217,6 @@ foreach my $clname (keys %cl_entries) {\n \tprint CLFILE \"$clname:\\n\\n$hdrline\\n\\n$cl_entries{$clname}\\n\";\n }\n \n-close (DFILE);\n-\n # Concatenate the ChangeLog template and the original .diff file.\n system (\"cat $diff >>$temp && mv $temp $diff\") == 0\n     or die \"Could not add the ChangeLog entry to $diff\";"}]}