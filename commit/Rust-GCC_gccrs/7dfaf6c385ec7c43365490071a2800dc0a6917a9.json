{"sha": "7dfaf6c385ec7c43365490071a2800dc0a6917a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RmYWY2YzM4NWVjN2M0MzM2NTQ5MDA3MWEyODAwZGMwYTY5MTdhOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-04-09T07:57:48Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-04-09T07:57:48Z"}, "message": "re PR ada/60411 (Ada bootstrap failure on ARM)\n\n\tPR ada/60411\n\t* s-osinte-android.ads: Adjust.\n\nFrom-SVN: r209237", "tree": {"sha": "8fd77d51d63617cf5205baed5dbda5c788db7969", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fd77d51d63617cf5205baed5dbda5c788db7969"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7dfaf6c385ec7c43365490071a2800dc0a6917a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dfaf6c385ec7c43365490071a2800dc0a6917a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dfaf6c385ec7c43365490071a2800dc0a6917a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dfaf6c385ec7c43365490071a2800dc0a6917a9/comments", "author": null, "committer": null, "parents": [{"sha": "da90fa4cf91a0080ead455ee65683a8b59a302c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da90fa4cf91a0080ead455ee65683a8b59a302c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da90fa4cf91a0080ead455ee65683a8b59a302c8"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "310c598d77e3bb69dbe225f1e29071566acb7116", "filename": "gcc/ada/s-osinte-android.ads", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dfaf6c385ec7c43365490071a2800dc0a6917a9/gcc%2Fada%2Fs-osinte-android.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dfaf6c385ec7c43365490071a2800dc0a6917a9/gcc%2Fada%2Fs-osinte-android.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-android.ads?ref=7dfaf6c385ec7c43365490071a2800dc0a6917a9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1995-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -75,7 +75,7 @@ package System.OS_Interface is\n    -- Signals --\n    -------------\n \n-   Max_Interrupt : constant := 63;\n+   Max_Interrupt : constant := 31;\n    type Signal is new int range 0 .. Max_Interrupt;\n    for Signal'Size use int'Size;\n \n@@ -114,9 +114,6 @@ package System.OS_Interface is\n    SIGXFSZ    : constant := System.Linux.SIGXFSZ;\n    SIGUNUSED  : constant := System.Linux.SIGUNUSED;\n    SIGSTKFLT  : constant := System.Linux.SIGSTKFLT;\n-   SIGLTHRRES : constant := System.Linux.SIGLTHRRES;\n-   SIGLTHRCAN : constant := System.Linux.SIGLTHRCAN;\n-   SIGLTHRDBG : constant := System.Linux.SIGLTHRDBG;\n \n    SIGADAABORT : constant := SIGABRT;\n    --  Change this to use another signal for task abort. SIGTERM might be a\n@@ -138,13 +135,9 @@ package System.OS_Interface is\n       SIGPROF,\n       --  To avoid confusing the profiler\n \n-      SIGKILL, SIGSTOP,\n+      SIGKILL, SIGSTOP);\n       --  These two signals actually can't be masked (POSIX won't allow it)\n \n-      SIGLTHRRES, SIGLTHRCAN, SIGLTHRDBG);\n-      --  These three signals are used by GNU/LinuxThreads starting from glibc\n-      --  2.1 (future 2.2).\n-\n    Reserved : constant Signal_Set := (SIGVTALRM, SIGUNUSED);\n    --  Not clear why these two signals are reserved. Perhaps they are not\n    --  supported by this version of GNU/Linux ???\n@@ -187,6 +180,8 @@ package System.OS_Interface is\n \n    SA_SIGINFO : constant := System.Linux.SA_SIGINFO;\n    SA_ONSTACK : constant := System.Linux.SA_ONSTACK;\n+   SA_NODEFER : constant := System.Linux.SA_NODEFER;\n+   SA_RESTART : constant := System.Linux.SA_RESTART;\n \n    SIG_BLOCK   : constant := 0;\n    SIG_UNBLOCK : constant := 1;\n@@ -580,17 +575,16 @@ package System.OS_Interface is\n \n private\n \n-   type sigset_t is\n-   --  array (0 .. OS_Constants.SIZEOF_sigset - 1) of unsigned_char;\n-       array (1 .. 127) of unsigned_char;\n+   type sigset_t is new Interfaces.C.unsigned_long;\n    pragma Convention (C, sigset_t);\n    for sigset_t'Alignment use Interfaces.C.unsigned_long'Alignment;\n \n    pragma Warnings (Off);\n    for struct_sigaction use record\n       sa_handler at Linux.sa_handler_pos range 0 .. Standard'Address_Size - 1;\n-      sa_mask    at Linux.sa_mask_pos    range 0 .. 1023;\n-      sa_flags   at Linux.sa_flags_pos   range 0 .. Standard'Address_Size - 1;\n+      sa_mask    at Linux.sa_mask_pos range 0 .. sigset_t'Size - 1;\n+      sa_flags   at Linux.sa_flags_pos\n+        range 0 .. Interfaces.C.unsigned_long'Size - 1;\n    end record;\n    --  We intentionally leave sa_restorer unspecified and let the compiler\n    --  append it after the last field, so disable corresponding warning."}]}