{"sha": "123a7fbfcbd7cdf4debecf4e2f323f594b69cbf7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIzYTdmYmZjYmQ3Y2RmNGRlYmVjZjRlMmYzMjNmNTk0YjY5Y2JmNw==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2001-05-26T16:39:15Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2001-05-26T16:39:15Z"}, "message": "Upgrade to current collection of tests\n\nFrom-SVN: r42633", "tree": {"sha": "06d68e50ac047c5e91914af305f7ffdd7fc7483b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06d68e50ac047c5e91914af305f7ffdd7fc7483b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/123a7fbfcbd7cdf4debecf4e2f323f594b69cbf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/123a7fbfcbd7cdf4debecf4e2f323f594b69cbf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/123a7fbfcbd7cdf4debecf4e2f323f594b69cbf7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/123a7fbfcbd7cdf4debecf4e2f323f594b69cbf7/comments", "author": null, "committer": null, "parents": [{"sha": "8d75cd1fda7737bf1be9a4e6f35509560319ba8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d75cd1fda7737bf1be9a4e6f35509560319ba8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d75cd1fda7737bf1be9a4e6f35509560319ba8d"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "aa7dbb10d16b6617c4169347cc08020f16a70672", "filename": "gcc/fixinc/tests/base/testing.h", "status": "modified", "additions": 41, "deletions": 5, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/123a7fbfcbd7cdf4debecf4e2f323f594b69cbf7/gcc%2Ffixinc%2Ftests%2Fbase%2Ftesting.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/123a7fbfcbd7cdf4debecf4e2f323f594b69cbf7/gcc%2Ffixinc%2Ftests%2Fbase%2Ftesting.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Ftesting.h?ref=123a7fbfcbd7cdf4debecf4e2f323f594b69cbf7", "patch": "@@ -9,8 +9,17 @@\n \n \n \n+#if defined( AVOID_WCHAR_T_TYPE_CHECK )\n+#ifndef __cplusplus\n+typedef unsigned short\twchar_t \t;\n+#endif /* wchar_t\n+ type */\n+#endif  /* AVOID_WCHAR_T_TYPE_CHECK */\n+\n+\n #if defined( CTRL_QUOTES_DEF_CHECK )\n-#define _CTRL(c) (c&037)\n+#define BSD43_CTRL(n, x) ((n<<8)+x)\n+\n #endif  /* CTRL_QUOTES_DEF_CHECK */\n \n \n@@ -19,8 +28,18 @@\n #endif  /* CTRL_QUOTES_USE_CHECK */\n \n \n+#if defined( DJGPP_WCHAR_H_CHECK )\n+#include <stddef.h>\n+#include <sys/djtypes.h>\n+extern __DJ_wint_t x;\n+\n+#endif  /* DJGPP_WCHAR_H_CHECK */\n+\n+\n #if defined( IO_QUOTES_DEF_CHECK )\n-#define XX_IO(x)        (x<<8|256)\n+#define BSD43__IOWR(n, x) ((n<<8)+x)\n+#define _IOWN(x,y,t)  (_IOC_IN|(((t)&_IOCPARM_MASK)<<16)|(x<<8)|y)\n+#define _IO(x,y)      (x<<8|y)\n #endif  /* IO_QUOTES_DEF_CHECK */\n \n \n@@ -38,18 +57,35 @@ extern __ptr_t memcpy __P ((__ptr_t __dest, __const __ptr_t __src,\n #endif  /* LIBC1_IFDEFD_MEMX_CHECK */\n \n \n+#if defined( MACHINE_ANSI_H_VA_LIST_CHECK )\n+ # define _BSD_VA_LIST_\t__builtin_va_list\n+#endif  /* MACHINE_ANSI_H_VA_LIST_CHECK */\n+\n+\n #if defined( MACHINE_NAME_CHECK )\n /* MACH_DIFF: */\n #if defined( __i386__ ) || defined( sparc ) || defined( vax )\n /* no uniform test, so be careful  :-) */\n #endif  /* MACHINE_NAME_CHECK */\n \n \n-#if defined( SCO_STRICT_ANSI_CHECK )\n-#if !defined(__STRICT_ANSI__) /* not standard C */\n+#if defined( STRICT_ANSI_NOT_CHECK )\n+#if  !defined(__STRICT_ANSI__) \n+#if  !defined(__STRICT_ANSI__)\n+#if  !defined(__STRICT_ANSI__)\n+#if  !defined(__STRICT_ANSI__)/* not std C */\n+int foo;\n+\n+#end-end-end-end-if :-)\n+#endif  /* STRICT_ANSI_NOT_CHECK */\n+\n+\n+#if defined( STRICT_ANSI_ONLY_CHECK )\n+#if  defined(__STRICT_ANSI__) /* is std C\n+ */\n int foo;\n #endif\n-#endif  /* SCO_STRICT_ANSI_CHECK */\n+#endif  /* STRICT_ANSI_ONLY_CHECK */\n \n \n #if defined( SYSV68_STRING_CHECK )"}]}