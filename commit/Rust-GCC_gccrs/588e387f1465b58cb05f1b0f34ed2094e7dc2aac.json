{"sha": "588e387f1465b58cb05f1b0f34ed2094e7dc2aac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg4ZTM4N2YxNDY1YjU4Y2IwNWYxYjBmMzRlZDIwOTRlN2RjMmFhYw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-09-11T20:46:39Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-09-11T20:46:39Z"}, "message": "(main): Provide upward compatibility with old version\nof collect (avoids infinite mutual recursion between the two).\n\nFrom-SVN: r5307", "tree": {"sha": "675cde1f610120b4610eb1a55ef96058660ffe16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/675cde1f610120b4610eb1a55ef96058660ffe16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/588e387f1465b58cb05f1b0f34ed2094e7dc2aac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/588e387f1465b58cb05f1b0f34ed2094e7dc2aac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/588e387f1465b58cb05f1b0f34ed2094e7dc2aac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/588e387f1465b58cb05f1b0f34ed2094e7dc2aac/comments", "author": null, "committer": null, "parents": [{"sha": "cc77d4d5c4cd4aec8810d5c3d21ea57b41bedc21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc77d4d5c4cd4aec8810d5c3d21ea57b41bedc21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc77d4d5c4cd4aec8810d5c3d21ea57b41bedc21"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "4168260a259116fdf9ebcd55a4a7a1c660c7c401", "filename": "gcc/collect2.c", "status": "modified", "additions": 27, "deletions": 6, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/588e387f1465b58cb05f1b0f34ed2094e7dc2aac/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/588e387f1465b58cb05f1b0f34ed2094e7dc2aac/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=588e387f1465b58cb05f1b0f34ed2094e7dc2aac", "patch": "@@ -751,6 +751,7 @@ main (argc, argv)\n   FILE *outf;\n   char *ld_file_name;\n   char *c_file_name;\n+  char *collect_name;\n   char *collect_names;\n   char *p;\n   char **c_argv;\n@@ -772,28 +773,48 @@ main (argc, argv)\n   output_file = \"a.out\";\n \n   /* We must check that we do not call ourselves in an infinite\n-     recursion loop. We save the name used for us in the COLLECT_NAMES\n-     environment variable, first getting the previous value.\n+     recursion loop. We append the name used for us to the COLLECT_NAMES\n+     environment variable.\n \n      In practice, collect will rarely invoke itself.  This can happen now\n      that we are no longer called gld.  A perfect example is when running\n      gcc in a build directory that has been installed.  When looking for \n      ld's, we'll find our installed version and believe that's the real ld.  */\n \n+  /* We must also append COLLECT_NAME to COLLECT_NAMES to watch for the\n+     previous version of collect (the one that used COLLECT_NAME and only\n+     handled two levels of recursion).  If we don't we may mutually recurse\n+     forever.  This can happen (I think) when bootstrapping the old version\n+     and a new one is installed (rare, but we should handle it).\n+     ??? Hopefully references to COLLECT_NAME can be removed at some point.  */\n+\n+  collect_name = (char *) getenv (\"COLLECT_NAME\");\n   collect_names = (char *) getenv (\"COLLECT_NAMES\");\n \n   p = (char *) xmalloc (strlen (\"COLLECT_NAMES=\")\n+\t\t\t+ (collect_name ? strlen (collect_name) + 1 : 0)\n \t\t\t+ (collect_names ? strlen (collect_names) + 1 : 0)\n \t\t\t+ strlen (argv[0]) + 1);\n+  strcpy (p, \"COLLECT_NAMES=\");\n+  if (collect_name != 0)\n+    sprintf (p + strlen (p), \"%s%c\", collect_name, PATH_SEPARATOR);\n   if (collect_names != 0)\n-    sprintf (p, \"COLLECT_NAMES=%s%c%s\",\n-\t     collect_names, PATH_SEPARATOR, argv[0]);\n-  else\n-    sprintf (p, \"COLLECT_NAMES=%s\", argv[0]);\n+    sprintf (p + strlen (p), \"%s%c\", collect_names, PATH_SEPARATOR);\n+  strcat (p, argv[0]);\n   putenv (p);\n \n   prefix_from_env (\"COLLECT_NAMES\", &our_file_names);\n \n+  /* Set environment variable COLLECT_NAME to our name so the previous version\n+     of collect won't find us.  If it does we'll mutually recurse forever.\n+     This can happen when bootstrapping the new version and an old version is\n+     installed.\n+     ??? Hopefully this bit of code can be removed at some point.  */\n+\n+  p = xmalloc (strlen (\"COLLECT_NAME=\") + strlen (argv[0]) + 1);\n+  sprintf (p, \"COLLECT_NAME=%s\", argv[0]);\n+  putenv (p);\n+\n   p = (char *) getenv (\"COLLECT_GCC_OPTIONS\");\n   if (p)\n     while (*p)"}]}