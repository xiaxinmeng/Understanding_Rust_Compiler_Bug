{"sha": "677956e82fc1b349da319c13053b894ec233deb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc3OTU2ZTgyZmMxYjM0OWRhMzE5YzEzMDUzYjg5NGVjMjMzZGViMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-03-17T11:12:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-03-17T11:12:00Z"}, "message": "re PR target/84902 (549.fotonik3d_r from SPEC2017 fails verification with -Ofast -march=native on Zen since r258518)\n\n\tPR target/84902\n\t* config/i386/i386.c (initial_ix86_tune_features,\n\tinitial_ix86_arch_features): Use unsigned HOST_WIDE_INT rather than\n\tunsigned long long.\n\t(set_ix86_tune_features): Change ix86_tune_mask from unsigned int\n\tto unsigned HOST_WIDE_INT, initialize to HOST_WIDE_INT_1U << ix86_tune\n\trather than 1u << ix86_tune.  Formatting fix.\n\t(ix86_option_override_internal): Change ix86_arch_mask from\n\tunsigned int to unsigned HOST_WIDE_INT, initialize to\n\tHOST_WIDE_INT_1U << ix86_arch rather than 1u << ix86_arch.\n\t(ix86_function_specific_restore): Likewise.\n\nFrom-SVN: r258618", "tree": {"sha": "af6175d8f0fabcbeaa9e9188d07b8cdbaebec014", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af6175d8f0fabcbeaa9e9188d07b8cdbaebec014"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/677956e82fc1b349da319c13053b894ec233deb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/677956e82fc1b349da319c13053b894ec233deb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/677956e82fc1b349da319c13053b894ec233deb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/677956e82fc1b349da319c13053b894ec233deb0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3d6f9bab7f03006f1415313fe905fb2e5d71c68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3d6f9bab7f03006f1415313fe905fb2e5d71c68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3d6f9bab7f03006f1415313fe905fb2e5d71c68"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "1063fd82f839e51084b6d96d71fd740f392d7552", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/677956e82fc1b349da319c13053b894ec233deb0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/677956e82fc1b349da319c13053b894ec233deb0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=677956e82fc1b349da319c13053b894ec233deb0", "patch": "@@ -1,3 +1,17 @@\n+2018-03-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/84902\n+\t* config/i386/i386.c (initial_ix86_tune_features,\n+\tinitial_ix86_arch_features): Use unsigned HOST_WIDE_INT rather than\n+\tunsigned long long.\n+\t(set_ix86_tune_features): Change ix86_tune_mask from unsigned int\n+\tto unsigned HOST_WIDE_INT, initialize to HOST_WIDE_INT_1U << ix86_tune\n+\trather than 1u << ix86_tune.  Formatting fix.\n+\t(ix86_option_override_internal): Change ix86_arch_mask from\n+\tunsigned int to unsigned HOST_WIDE_INT, initialize to\n+\tHOST_WIDE_INT_1U << ix86_arch rather than 1u << ix86_arch.\n+\t(ix86_function_specific_restore): Likewise.\n+\n 2018-03-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/84899"}, {"sha": "f45c756e289bc667cd77ae88a03515df3923c4a0", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/677956e82fc1b349da319c13053b894ec233deb0/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/677956e82fc1b349da319c13053b894ec233deb0/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=677956e82fc1b349da319c13053b894ec233deb0", "patch": "@@ -183,7 +183,7 @@ unsigned char ix86_tune_features[X86_TUNE_LAST];\n \n /* Feature tests against the various tunings used to create ix86_tune_features\n    based on the processor mask.  */\n-static unsigned long long initial_ix86_tune_features[X86_TUNE_LAST] = {\n+static unsigned HOST_WIDE_INT initial_ix86_tune_features[X86_TUNE_LAST] = {\n #undef DEF_TUNE\n #define DEF_TUNE(tune, name, selector) selector,\n #include \"x86-tune.def\"\n@@ -195,7 +195,7 @@ unsigned char ix86_arch_features[X86_ARCH_LAST];\n \n /* Feature tests against the various architecture variations, used to create\n    ix86_arch_features based on the processor mask.  */\n-static unsigned long long initial_ix86_arch_features[X86_ARCH_LAST] = {\n+static unsigned HOST_WIDE_INT initial_ix86_arch_features[X86_ARCH_LAST] = {\n   /* X86_ARCH_CMOV: Conditional move was added for pentiumpro.  */\n   ~(m_386 | m_486 | m_PENT | m_LAKEMONT | m_K6),\n \n@@ -3310,15 +3310,16 @@ parse_mtune_ctrl_str (bool dump)\n static void\n set_ix86_tune_features (enum processor_type ix86_tune, bool dump)\n {\n-  unsigned int ix86_tune_mask = 1u << ix86_tune;\n+  unsigned HOST_WIDE_INT ix86_tune_mask = HOST_WIDE_INT_1U << ix86_tune;\n   int i;\n \n   for (i = 0; i < X86_TUNE_LAST; ++i)\n     {\n       if (ix86_tune_no_default)\n         ix86_tune_features[i] = 0;\n       else\n-        ix86_tune_features[i] = !!(initial_ix86_tune_features[i] & ix86_tune_mask);\n+\tix86_tune_features[i]\n+\t  = !!(initial_ix86_tune_features[i] & ix86_tune_mask);\n     }\n \n   if (dump)\n@@ -3373,7 +3374,7 @@ ix86_option_override_internal (bool main_args_p,\n \t\t\t       struct gcc_options *opts_set)\n {\n   int i;\n-  unsigned int ix86_arch_mask;\n+  unsigned HOST_WIDE_INT ix86_arch_mask;\n   const bool ix86_tune_specified = (opts->x_ix86_tune_string != NULL);\n \n   const wide_int_bitmask PTA_3DNOW (HOST_WIDE_INT_1U << 0);\n@@ -4234,7 +4235,7 @@ ix86_option_override_internal (bool main_args_p,\n       XDELETEVEC (s);\n     }\n \n-  ix86_arch_mask = 1u << ix86_arch;\n+  ix86_arch_mask = HOST_WIDE_INT_1U << ix86_arch;\n   for (i = 0; i < X86_ARCH_LAST; ++i)\n     ix86_arch_features[i] = !!(initial_ix86_arch_features[i] & ix86_arch_mask);\n \n@@ -5159,7 +5160,7 @@ ix86_function_specific_restore (struct gcc_options *opts,\n {\n   enum processor_type old_tune = ix86_tune;\n   enum processor_type old_arch = ix86_arch;\n-  unsigned int ix86_arch_mask;\n+  unsigned HOST_WIDE_INT ix86_arch_mask;\n   int i;\n \n   /* We don't change -fPIC.  */\n@@ -5210,7 +5211,7 @@ ix86_function_specific_restore (struct gcc_options *opts,\n   /* Recreate the arch feature tests if the arch changed */\n   if (old_arch != ix86_arch)\n     {\n-      ix86_arch_mask = 1u << ix86_arch;\n+      ix86_arch_mask = HOST_WIDE_INT_1U << ix86_arch;\n       for (i = 0; i < X86_ARCH_LAST; ++i)\n \tix86_arch_features[i]\n \t  = !!(initial_ix86_arch_features[i] & ix86_arch_mask);"}]}