{"sha": "853e0b2def844b36a64fd716540f2b19330f0c51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUzZTBiMmRlZjg0NGIzNmE2NGZkNzE2NTQwZjJiMTkzMzBmMGM1MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-15T00:40:31Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-15T00:40:31Z"}, "message": "(HAVE_EXECUTABLE_SUFFIX): New macro.\n\n(convert_filename): New function.\n(process_command, case 'o'): Call it.\n(process_command, default case): Likewise; delete old code.\n\nFrom-SVN: r12713", "tree": {"sha": "cf84554b1ff8c35755ff2a08d41841e313d50e58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf84554b1ff8c35755ff2a08d41841e313d50e58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/853e0b2def844b36a64fd716540f2b19330f0c51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/853e0b2def844b36a64fd716540f2b19330f0c51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/853e0b2def844b36a64fd716540f2b19330f0c51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/853e0b2def844b36a64fd716540f2b19330f0c51/comments", "author": null, "committer": null, "parents": [{"sha": "89c8019a56af7c955c5c125bde1c2c3ad3fcb117", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89c8019a56af7c955c5c125bde1c2c3ad3fcb117", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89c8019a56af7c955c5c125bde1c2c3ad3fcb117"}], "stats": {"total": 69, "additions": 54, "deletions": 15}, "files": [{"sha": "7cb8dc18091a515f177e8aa56d808f95b4dd5833", "filename": "gcc/gcc.c", "status": "modified", "additions": 54, "deletions": 15, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/853e0b2def844b36a64fd716540f2b19330f0c51/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/853e0b2def844b36a64fd716540f2b19330f0c51/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=853e0b2def844b36a64fd716540f2b19330f0c51", "patch": "@@ -101,7 +101,9 @@ extern int pwait PROTO ((int, int *, int));\n #endif\n \n /* By default there is no special suffix for executables.  */\n-#ifndef EXECUTABLE_SUFFIX\n+#ifdef EXECUTABLE_SUFFIX\n+#define HAVE_EXECUTABLE_SUFFIX\n+#else\n #define EXECUTABLE_SUFFIX \"\"\n #endif\n \n@@ -2097,6 +2099,51 @@ static int warn_std;\n /* Gives value to pass as \"warn\" to add_prefix for standard prefixes.  */\n static int *warn_std_ptr = 0;\n \n+\f\n+#if defined(HAVE_OBJECT_SUFFIX) || defined(HAVE_EXECUTABLE_SUFFIX)\n+\n+/* Convert NAME to a new name if it is the standard suffix.  DO_EXE\n+   is true if we should look for an executable suffix as well.  */\n+\n+static char *\n+convert_filename (name, do_exe)\n+     char *name;\n+     int do_exe;\n+{\n+  int i;\n+  int len = strlen (name);\n+\n+#ifdef HAVE_OBJECT_SUFFIX\n+  /* Convert x.o to x.obj if OBJECT_SUFFIX is \".obj\".  */\n+  if (len > 2\n+      && name[len - 2] == '.'\n+      && name[len - 1] == 'o')\n+    {\n+      obstack_grow (&obstack, name[i], len - 2);\n+      obstack_grow0 (&obstack, OBJECT_SUFFIX, strlen (OBJECT_SUFFIX));\n+      name = obstack_finish (&obstack);\n+    }\n+#endif\n+\n+#ifdef HAVE_EXECUTABLE_SUFFIX\n+  /* If there is no filetype, make it the executable suffix (which includes\n+     the \".\").  But don't get confused if we have just \"-o\".  */\n+  if (! do_exe || EXECUTABLE_SUFFIX[0] == 0 || (len == 2 && name[0] == '-'))\n+    return name;\n+\n+  for (i = 0; i < len; i++)\n+    if (name[i] == '.')\n+      return name;\n+\n+  obstack_grow (&obstack, name, len);\n+  obstack_grow0 (&obstack, EXECUTABLE_SUFFIX, strlen (EXECUTABLE_SUFFIX));\n+  name = obstack_finish (&obstack);\n+#endif\n+\n+  return name;\n+}\n+#endif\n+\f\n /* Create the vector `switches' and its contents.\n    Store its length in `n_switches'.  */\n \n@@ -2476,6 +2523,11 @@ process_command (argc, argv)\n \n \t    case 'o':\n \t      have_o = 1;\n+#if defined(HAVE_EXECUTABLE_SUFFIX) || defined(HAVE_OBJECT_SUFFIX)\n+\t      argv[i] = convert_filename (argv[i], 1);\n+\t      if (p[1] == 0)\n+\t\targv[i+1] = convert_filename (argv[i+1], 1);\n+#endif\n \t      goto normal_switch;\n \n \t    default:\n@@ -2706,20 +2758,7 @@ process_command (argc, argv)\n       else\n \t{\n #ifdef HAVE_OBJECT_SUFFIX\n-\t  /* Convert x.o to x.obj if OBJECT_SUFFIX is \".obj\".  */\n-\t  if (strlen (argv[i]) > 2\n-\t      && argv[i][strlen (argv[i]) - 2] == '.'\n-\t      && argv[i][strlen (argv[i]) - 1] == 'o')\n-\t    {\n-\t      int j;\n-\n-\t      for (j = 0; j < strlen (argv[i]) - 2; j++)\n-\t\tobstack_1grow (&obstack, argv[i][j]);\n-\n-\t      obstack_grow (&obstack, OBJECT_SUFFIX, strlen (OBJECT_SUFFIX));\n-\t      obstack_1grow (&obstack, 0);\n-\t      argv[i] = obstack_finish (&obstack);\n-\t    }\n+\t  argv[i] = convert_filename (argv[i], 0);\n #endif\n \n \t  if (strcmp (argv[i], \"-\") != 0 && access (argv[i], R_OK) < 0)"}]}