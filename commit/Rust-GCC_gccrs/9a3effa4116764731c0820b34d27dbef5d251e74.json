{"sha": "9a3effa4116764731c0820b34d27dbef5d251e74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWEzZWZmYTQxMTY3NjQ3MzFjMDgyMGIzNGQyN2RiZWY1ZDI1MWU3NA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-10-27T17:49:21Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-10-27T17:49:21Z"}, "message": "Make filesystem::file_status default constructor non-explicit (LWG 2787)\n\n\t* include/bits/fs_dir.h (file_status): Make default constructor\n\tnon-explicit (LWG 2787).\n\t* testsuite/27_io/filesystem/file_status/1.cc: New test.\n\t* testsuite/experimental/filesystem/file_status/1.cc: New test.\n\nFrom-SVN: r254159", "tree": {"sha": "5c3a64cf337b01364ed2dc583732c5ca483d08d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c3a64cf337b01364ed2dc583732c5ca483d08d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a3effa4116764731c0820b34d27dbef5d251e74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a3effa4116764731c0820b34d27dbef5d251e74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a3effa4116764731c0820b34d27dbef5d251e74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a3effa4116764731c0820b34d27dbef5d251e74/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba05366bad9d07eb62822e78c5eb762831a7d16f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba05366bad9d07eb62822e78c5eb762831a7d16f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba05366bad9d07eb62822e78c5eb762831a7d16f"}], "stats": {"total": 171, "additions": 168, "deletions": 3}, "files": [{"sha": "f924ad4c5655b715a1059ebcb304d769421461ef", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a3effa4116764731c0820b34d27dbef5d251e74/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a3effa4116764731c0820b34d27dbef5d251e74/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9a3effa4116764731c0820b34d27dbef5d251e74", "patch": "@@ -1,5 +1,10 @@\n 2017-10-27  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/fs_dir.h (file_status): Make default constructor\n+\tnon-explicit (LWG 2787).\n+\t* testsuite/27_io/filesystem/file_status/1.cc: New test.\n+\t* testsuite/experimental/filesystem/file_status/1.cc: New test.\n+\n \t* include/std/fstream (basic_filebuf::_If_path): New SFINAE helper.\n \t(basic_filebuf::open<Path>(const Path&, const ios_base::openmode&))\n \t(basic_ifstream<Path>(const Path&, const ios_base::openmode&))"}, {"sha": "cd83d25c4adb7385de27064b9766fbaea702a04d", "filename": "libstdc++-v3/include/bits/fs_dir.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a3effa4116764731c0820b34d27dbef5d251e74/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_dir.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a3effa4116764731c0820b34d27dbef5d251e74/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_dir.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_dir.h?ref=9a3effa4116764731c0820b34d27dbef5d251e74", "patch": "@@ -50,10 +50,11 @@ namespace filesystem\n   class file_status\n   {\n   public:\n-    // constructors\n+    // constructors and destructor\n+    file_status() noexcept : file_status(file_type::none) {}\n+\n     explicit\n-    file_status(file_type __ft = file_type::none,\n-\t        perms __prms = perms::unknown) noexcept\n+    file_status(file_type __ft, perms __prms = perms::unknown) noexcept\n     : _M_type(__ft), _M_perms(__prms) { }\n \n     file_status(const file_status&) noexcept = default;"}, {"sha": "21613020f88d4fa5c75e0d56b7ca242b14964cee", "filename": "libstdc++-v3/testsuite/27_io/filesystem/file_status/1.cc", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a3effa4116764731c0820b34d27dbef5d251e74/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Ffile_status%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a3effa4116764731c0820b34d27dbef5d251e74/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Ffile_status%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Ffile_status%2F1.cc?ref=9a3effa4116764731c0820b34d27dbef5d251e74", "patch": "@@ -0,0 +1,84 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17 -lstdc++fs\" }\n+// { dg-do run { target c++17 } }\n+// { dg-require-filesystem-ts \"\" }\n+\n+#include <filesystem>\n+#include <testsuite_hooks.h>\n+\n+namespace fs = std::filesystem;\n+\n+template<typename... Args>\n+constexpr bool nothrow_constructible() {\n+  return std::is_nothrow_constructible<fs::file_status, Args...>::value;\n+}\n+\n+void\n+test01()\n+{\n+  fs::file_status st0;\n+  VERIFY( st0.type() == fs::file_type::none );\n+  VERIFY( st0.permissions() == fs::perms::unknown );\n+  static_assert( nothrow_constructible<>(), \"\" );\n+\n+  fs::file_status st1(fs::file_type::regular);\n+  VERIFY( st1.type() == fs::file_type::regular );\n+  VERIFY( st1.permissions() == fs::perms::unknown );\n+  static_assert( nothrow_constructible<fs::file_type>(), \"\" );\n+\n+  fs::file_status st2(fs::file_type::directory, fs::perms::owner_all);\n+  VERIFY( st2.type() == fs::file_type::directory );\n+  VERIFY( st2.permissions() == fs::perms::owner_all );\n+  static_assert( nothrow_constructible<fs::file_type, fs::perms>(), \"\" );\n+\n+  static_assert( nothrow_constructible<const fs::file_status&>(), \"\" );\n+  static_assert( nothrow_constructible<fs::file_status>(), \"\" );\n+}\n+\n+void\n+test02()\n+{\n+  fs::file_status st;\n+  VERIFY( st.type() == fs::file_type::none );\n+  VERIFY( st.permissions() == fs::perms::unknown );\n+\n+  st.type(fs::file_type::symlink);\n+  VERIFY( st.type() == fs::file_type::symlink );\n+  VERIFY( st.permissions() == fs::perms::unknown );\n+\n+  st.permissions(fs::perms::owner_all);\n+  VERIFY( st.type() == fs::file_type::symlink );\n+  VERIFY( st.permissions() == fs::perms::owner_all );\n+}\n+\n+void check_non_explicit_constructor(fs::file_status) { }\n+\n+void\n+test03()\n+{\n+  check_non_explicit_constructor( {} ); // LWG 2787\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n+  test03();\n+}"}, {"sha": "970ad177b95dc6ce2bc783b3540c3f1953941353", "filename": "libstdc++-v3/testsuite/experimental/filesystem/file_status/1.cc", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a3effa4116764731c0820b34d27dbef5d251e74/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Ffile_status%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a3effa4116764731c0820b34d27dbef5d251e74/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Ffile_status%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Ffile_status%2F1.cc?ref=9a3effa4116764731c0820b34d27dbef5d251e74", "patch": "@@ -0,0 +1,75 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-lstdc++fs\" }\n+// { dg-do run { target c++11 } }\n+// { dg-require-filesystem-ts \"\" }\n+\n+#include <experimental/filesystem>\n+#include <testsuite_hooks.h>\n+\n+namespace fs = std::experimental::filesystem;\n+\n+template<typename... Args>\n+constexpr bool nothrow_constructible() {\n+  return std::is_nothrow_constructible<fs::file_status, Args...>::value;\n+}\n+\n+void\n+test01()\n+{\n+  fs::file_status st0;\n+  VERIFY( st0.type() == fs::file_type::none );\n+  VERIFY( st0.permissions() == fs::perms::unknown );\n+  static_assert( nothrow_constructible<>(), \"\" );\n+\n+  fs::file_status st1(fs::file_type::regular);\n+  VERIFY( st1.type() == fs::file_type::regular );\n+  VERIFY( st1.permissions() == fs::perms::unknown );\n+  static_assert( nothrow_constructible<fs::file_type>(), \"\" );\n+\n+  fs::file_status st2(fs::file_type::directory, fs::perms::owner_all);\n+  VERIFY( st2.type() == fs::file_type::directory );\n+  VERIFY( st2.permissions() == fs::perms::owner_all );\n+  static_assert( nothrow_constructible<fs::file_type, fs::perms>(), \"\" );\n+\n+  static_assert( nothrow_constructible<const fs::file_status&>(), \"\" );\n+  static_assert( nothrow_constructible<fs::file_status>(), \"\" );\n+}\n+\n+void\n+test02()\n+{\n+  fs::file_status st;\n+  VERIFY( st.type() == fs::file_type::none );\n+  VERIFY( st.permissions() == fs::perms::unknown );\n+\n+  st.type(fs::file_type::symlink);\n+  VERIFY( st.type() == fs::file_type::symlink );\n+  VERIFY( st.permissions() == fs::perms::unknown );\n+\n+  st.permissions(fs::perms::owner_all);\n+  VERIFY( st.type() == fs::file_type::symlink );\n+  VERIFY( st.permissions() == fs::perms::owner_all );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n+}"}]}