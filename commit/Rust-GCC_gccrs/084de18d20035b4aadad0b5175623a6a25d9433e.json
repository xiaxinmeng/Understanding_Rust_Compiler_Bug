{"sha": "084de18d20035b4aadad0b5175623a6a25d9433e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg0ZGUxOGQyMDAzNWI0YWFkYWQwYjUxNzU2MjNhNmEyNWQ5NDMzZQ==", "commit": {"author": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2002-08-14T07:32:52Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2002-08-14T07:32:52Z"}, "message": "t-m68hc11-gas (LIB1ASMFUNCS): Build __far_trampoline.\n\n\t* config/m68hc11/t-m68hc11-gas (LIB1ASMFUNCS): Build __far_trampoline.\n\t(MULTILIB_OPTIONS): Must also generate for -mlong-calls.\n\n\t* config/m68hc11/larith.asm: Put a mode for ELF ABI flags.\n\t(ret, declare, farsym): New gas macros.\n\t(__premain, exit, abort, _cleanup, memcpy, memset, ___adddi3,\n\t___subdi3, ___notdi2, __mulhi32, __mulsi3): Use them to use 'rtc'\n\tand declare the symbol far when compiled with -mlong-calls.\n\t(__far_trampoline): New for 68HC12 trampoline code to invoke a\n\tfar handler using jsr/bsr.\n\n\t* config/m68hc11/m68hc11-crt0.S: Put a mode for ELF ABI flags.\n\t(jsr): New macro to transform a 'jsr' into a 'call'.\n\nFrom-SVN: r56282", "tree": {"sha": "2dd0b4fe61dda1b17e1d78dac99488db3b8f29de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dd0b4fe61dda1b17e1d78dac99488db3b8f29de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/084de18d20035b4aadad0b5175623a6a25d9433e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/084de18d20035b4aadad0b5175623a6a25d9433e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/084de18d20035b4aadad0b5175623a6a25d9433e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/084de18d20035b4aadad0b5175623a6a25d9433e/comments", "author": null, "committer": null, "parents": [{"sha": "f8a3bda25341af66f984cd595b6824566851d744", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a3bda25341af66f984cd595b6824566851d744", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8a3bda25341af66f984cd595b6824566851d744"}], "stats": {"total": 329, "additions": 186, "deletions": 143}, "files": [{"sha": "80b881747370dcf7f9ec63a9b8f3b3bd5e47ac08", "filename": "gcc/config/m68hc11/larith.asm", "status": "modified", "additions": 171, "deletions": 139, "changes": 310, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084de18d20035b4aadad0b5175623a6a25d9433e/gcc%2Fconfig%2Fm68hc11%2Flarith.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084de18d20035b4aadad0b5175623a6a25d9433e/gcc%2Fconfig%2Fm68hc11%2Flarith.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Flarith.asm?ref=084de18d20035b4aadad0b5175623a6a25d9433e", "patch": "@@ -35,23 +35,63 @@ Boston, MA 02111-1307, USA.  */\n \n \t.file \"larith.asm\"\n \n+#ifdef __HAVE_SHORT_INT__\n+\t.mode mshort\n+#else\n+\t.mode mlong\n+#endif\n+\n+#if defined(__USE_RTC__) && defined(mc68hc12)\n+# define ARG(N) N+1\n+\n+\t.macro ret\n+\trtc\n+\t.endm\n+\n+\t.macro declare name\n+\t.globl \\name\n+\t.type  \\name,@function\n+\t.size  \\name,.Lend-\\name\n+\t.far   \\name\n+\\name:\n+\t.endm\n+\n+\t.macro farsym name\n+\t.far NAME\n+\t.endm\n+\n+#else\n+# define ARG(N) N\n+\n+\t.macro ret\n+\trts\n+\t.endm\n+\n+\t.macro farsym name\n+\t.endm\n+\n+\t.macro declare name\n+\t.globl \\name\n+\t.type  \\name,@function\n+\t.size  \\name,.Lend-\\name\n+\\name:\n+\t.endm\n+\n+#endif\n+\n \t.sect .text\n \t\n \n #define REG(NAME)\t\t\t\\\n-NAME:\t.word 0;\t\t\t\\\n+NAME:\t.dc.w\t1;\t\t\t\\\n \t.type NAME,@object ;\t\t\\\n \t.size NAME,2\n \n #ifdef L_regs_min\n /* Pseudo hard registers used by gcc.\n-   They must be located in page0. \n-   They will normally appear at the end of .page0 section.  */\n-#ifdef mc68hc12\n-\t.sect .bss\n-#else\n-\t.sect .page0\n-#endif\n+   They should be located in page0.  */\n+\n+\t.sect .softregs\n \t.globl _.tmp\n \t.globl _.z,_.xy\n REG(_.tmp)\n@@ -61,64 +101,43 @@ REG(_.xy)\n #endif\n \n #ifdef L_regs_frame\n-#ifdef mc68hc12\n-\t.sect .bss\n-#else\n-\t.sect .page0\n-#endif\n+\t.sect .softregs\n \t.globl _.frame\n REG(_.frame)\n #endif\n \n #ifdef L_regs_d1_2\n-#ifdef mc68hc12\n-\t.sect .bss\n-#else\n-\t.sect .page0\n-#endif\n+\t.sect .softregs\n \t.globl _.d1,_.d2\n REG(_.d1)\n REG(_.d2)\n #endif\n \n #ifdef L_regs_d3_4\n-#ifdef mc68hc12\n-\t.sect .bss\n-#else\n-\t.sect .page0\n-#endif\n+\t.sect .softregs\n \t.globl _.d3,_.d4\n REG(_.d3)\n REG(_.d4)\n #endif\n \n #ifdef L_regs_d5_6\n-#ifdef mc68hc12\n-\t.sect .bss\n-#else\n-\t.sect .page0\n-#endif\n+\t.sect .softregs\n \t.globl _.d5,_.d6\n REG(_.d5)\n REG(_.d6)\n #endif\n \n #ifdef L_regs_d7_8\n-#ifdef mc68hc12\n-\t.sect .bss\n-#else\n-\t.sect .page0\n-#endif\n+\t.sect .softregs\n \t.globl _.d7,_.d8\n REG(_.d7)\n REG(_.d8)\n #endif\n \n #ifdef L_regs_d9_16\n /* Pseudo hard registers used by gcc.\n-   They must be located in page0. \n-   They will normally appear at the end of .page0 section.  */\n-\t.sect .page0\n+   They should be located in page0.  */\n+\t.sect .softregs\n \t.globl _.d9,_.d10,_.d11,_.d12,_.d13,_.d14\n \t.globl _.d15,_.d16\n REG(_.d9)\n@@ -134,13 +153,8 @@ REG(_.d16)\n \n #ifdef L_regs_d17_32\n /* Pseudo hard registers used by gcc.\n-   They must be located in page0. \n-   They will normally appear at the end of .page0 section.  */\n-#ifdef mc68hc12\n-\t.sect .bss\n-#else\n-\t.sect .page0\n-#endif\n+   They should be located in page0.  */\n+\t.sect .softregs\n \t.globl _.d17,_.d18,_.d19,_.d20,_.d21,_.d22\n \t.globl _.d23,_.d24,_.d25,_.d26,_.d27,_.d28\n \t.globl _.d29,_.d30,_.d31,_.d32\n@@ -167,12 +181,10 @@ REG(_.d32)\n ;; Specific initialization for 68hc11 before the main.\n ;; Nothing special for a generic routine; Just enable interrupts.\n ;;\n-\t.sect .text\n-\t.globl __premain\n-__premain:\n+\tdeclare\t__premain\n \tclra\n \ttap\t; Clear both I and X.\n-\trts\n+\tret\n #endif\n \n #ifdef L__exit\n@@ -195,6 +207,8 @@ __premain:\n \t.globl _exit\n \t.globl exit\n \t.weak  exit\n+\tfarsym  exit\n+\tfarsym  _exit\n exit:\n _exit:\n \n@@ -209,9 +223,8 @@ fatal:\n ;;\n ;; Abort operation.  This is defined for the GCC testsuite.\n ;;\n-\t.sect .text\n-\t.globl abort\n-abort:\n+\tdeclare\tabort\n+\n \tldd\t#255\t\t; \n #ifdef mc68hc12\n \ttrap\t#0x30\n@@ -226,32 +239,29 @@ abort:\n ;;\n ;; Cleanup operation used by exit().\n ;;\n-\t.sect .text\n-\t.globl _cleanup\n-_cleanup:\n-\trts\n+\tdeclare\t_cleanup\n+\n+\tret\n #endif\n \n ;-----------------------------------------\n ; required gcclib code\n ;-----------------------------------------\n #ifdef L_memcpy\n-\t.sect .text\n+       declare\tmemcpy\n+       declare\t__memcpy\n+\n \t.weak memcpy\n-\t.globl memcpy\n-\t.globl __memcpy\n ;;;\n ;;; void* memcpy(void*, const void*, size_t)\n ;;; \n ;;; D    = dst\tPmode\n ;;; 2,sp = src\tPmode\n ;;; 4,sp = size\tHImode (size_t)\n ;;; \n-__memcpy:\n-memcpy:\n #ifdef mc68hc12\n-\tldx\t2,sp\n-\tldy\t4,sp\n+\tldx\tARG(2),sp\n+\tldy\tARG(4),sp\n \tpshd\n \txgdy\n \tlsrd\n@@ -264,7 +274,7 @@ Loop:\n \tdbne\td,Loop\n Done:\n \tpuld\n-\trts\n+\tret\n #else\n \txgdy\n \ttsx\n@@ -294,27 +304,24 @@ End:\n #endif\n \n #ifdef L_memset\n-\t.sect .text\n-\t.globl memset\n-\t.globl __memset\n+       declare\tmemset\n+       declare\t__memset\n ;;;\n ;;; void* memset(void*, int value, size_t)\n ;;; \n #ifndef __HAVE_SHORT_INT__\n ;;; D    = dst\tPmode\n ;;; 2,sp = src\tSImode\n ;;; 6,sp = size\tHImode (size_t)\n-\tval  = 5\n-\tsize = 6\n+\tval  = ARG(5)\n+\tsize = ARG(6)\n #else\n ;;; D    = dst\tPmode\n ;;; 2,sp = src\tSImode\n ;;; 6,sp = size\tHImode (size_t)\n-\tval  = 3\n-\tsize = 4\n+\tval  = ARG(3)\n+\tsize = ARG(4)\n #endif\n-__memset:\n-memset:\n #ifdef mc68hc12\n \txgdx\n \tldab\tval,sp\n@@ -326,7 +333,7 @@ Loop:\n \tdbne\ty,Loop\n End:\n \tpuld\n-\trts\n+\tret\n #else\n \txgdx\n \ttsy\n@@ -345,95 +352,89 @@ End:\n \trts\n #endif\n #endif\n-\t\t\n+\n #ifdef L_adddi3\n-\t.sect .text\n-\t.globl ___adddi3\n+       declare\t___adddi3\n \n-___adddi3:\n \ttsx\n \txgdy\n-\tldd\t8,x\t\t; Add LSB\n-\taddd\t16,x\n-\tstd\t6,y\t\t; Save (carry preserved)\n-\n-\tldd\t6,x\n-\tadcb\t15,x\n-\tadca\t14,x\n-\tstd\t4,y\n-\n-\tldd\t4,x\n-\tadcb\t13,x\n-\tadca\t12,x\n-\tstd\t2,y\n+\tldd\tARG(8),x\t\t; Add LSB\n+\taddd\tARG(16),x\n+\tstd\tARG(6),y\t\t; Save (carry preserved)\n+\n+\tldd\tARG(6),x\n+\tadcb\tARG(15),x\n+\tadca\tARG(14),x\n+\tstd\tARG(4),y\n+\n+\tldd\tARG(4),x\n+\tadcb\tARG(13),x\n+\tadca\tARG(12),x\n+\tstd\tARG(2),y\n \t\n-\tldd\t2,x\n-\tadcb\t11,x\t\t; Add MSB\n-\tadca\t10,x\n-\tstd\t0,y\n+\tldd\tARG(2),x\n+\tadcb\tARG(11),x\t\t; Add MSB\n+\tadca\tARG(10),x\n+\tstd\tARG(0),y\n \n \txgdy\n-\trts\n+\tret\n #endif\n \n #ifdef L_subdi3\n-\t.sect .text\n-\t.globl ___subdi3\n+       declare\t___subdi3\n \n-___subdi3:\n \ttsx\n \txgdy\n-\tldd\t8,x\t\t; Subtract LSB\n-\tsubd\t16,x\n-\tstd\t6,y\t\t; Save, borrow preserved\n-\n-\tldd\t6,x\n-\tsbcb\t15,x\n-\tsbca\t14,x\n-\tstd\t4,y\n-\n-\tldd\t4,x\n-\tsbcb\t13,x\n-\tsbca\t12,x\n-\tstd\t2,y\n+\tldd\tARG(8),x\t\t; Subtract LSB\n+\tsubd\tARG(16),x\n+\tstd\tARG(6),y\t\t; Save, borrow preserved\n+\n+\tldd\tARG(6),x\n+\tsbcb\tARG(15),x\n+\tsbca\tARG(14),x\n+\tstd\tARG(4),y\n+\n+\tldd\tARG(4),x\n+\tsbcb\tARG(13),x\n+\tsbca\tARG(12),x\n+\tstd\tARG(2),y\n \t\n-\tldd\t2,x\t\t; Subtract MSB\n-\tsbcb\t11,x\n-\tsbca\t10,x\n-\tstd\t0,y\n+\tldd\tARG(2),x\t\t; Subtract MSB\n+\tsbcb\tARG(11),x\n+\tsbca\tARG(10),x\n+\tstd\tARG(0),y\n \n \txgdy\t\t\t;\n-\trts\n+\tret\n #endif\n \t\n #ifdef L_notdi2\n-\t.sect .text\n-\t.globl ___notdi2\n+        declare\t___notdi2\n \n-___notdi2:\n \ttsy\n \txgdx\n-\tldd\t8,y\n+\tldd\tARG(8),y\n \tcoma\n \tcomb\n-\tstd\t6,x\n+\tstd\tARG(6),x\n \t\n-\tldd\t6,y\n+\tldd\tARG(6),y\n \tcoma\n \tcomb\n-\tstd\t4,x\n+\tstd\tARG(4),x\n \n-\tldd\t4,y\n+\tldd\tARG(4),y\n \tcoma\n \tcomb\n-\tstd\t2,x\n+\tstd\tARG(2),x\n \n-\tldd\t2,y\n+\tldd\tARG(2),y\n \tcoma\n \tcomb\n-\tstd\t0,x\n+\tstd\tARG(0),x\n \txgdx\n-\trts\n+\tret\n #endif\n \t\n #ifdef L_negsi2\n@@ -845,8 +846,6 @@ ___mulhi3:\n #endif\n \n #ifdef L_mulhi32\n-\t.sect .text\n-\t.globl __mulhi32\n \n ;\n ;\n@@ -880,12 +879,13 @@ ___mulhi3:\n ;      <A-low>    1,x\n ;      <A-high>   0,x\n ;\n-__mulhi32:\n+\tdeclare\t__mulhi32\n+\n #ifdef mc68hc12\n-\tldy\t2,sp\n+\tldy\tARG(2),sp\n \temul\n \texg\tx,y\n-\trts\n+\tret\n #else\n \tpshx\t\t\t; Room for temp value\n \tpshb\n@@ -925,8 +925,6 @@ Ret:\n #endif\n \n #ifdef L_mulsi3\n-\t.sect .text\n-\t.globl __mulsi3\n \n ;\n ;      <B-low>    8,y\n@@ -945,22 +943,23 @@ Ret:\n ;\n ;\n \n-__mulsi3:\n+\tdeclare\t__mulsi3\n+\n #ifdef mc68hc12\n \tpshd\t\t\t\t; Save A.low\n-\tldy\t4,sp\n+\tldy\tARG(4),sp\n \temul\t\t\t\t; A.low * B.high\n-\tldy\t6,sp\n+\tldy\tARG(6),sp\n \texg\tx,d\n \temul\t\t\t\t; A.high * B.low\n \tleax\td,x\n-\tldy\t6,sp\n+\tldy\tARG(6),sp\n \tpuld\n \temul\t\t\t\t; A.low * B.low\n \texg\td,y\n \tleax\td,x\n \texg\td,y\n-\trts\n+\tret\n #else\n B_low\t=\t8\n B_high\t=\t6\n@@ -1186,6 +1185,39 @@ dtors_done:\n \n #endif\n \n+#ifdef L_far_tramp\n+#ifdef mc68hc12\n+\t.sect\t.text\n+\t.globl\t__far_trampoline\n+\n+;; This is a trampoline used by the linker to invoke a function\n+;; using rtc to return and being called with jsr/bsr.\n+;; The trampoline generated is:\n+;;\n+;;\tfoo_tramp:\n+;;\t\tldy\t#foo\n+;;\t\tcall\t__far_trampoline,page(foo)\n+;;\n+;; The linker transforms:\n+;;\n+;;\t\tjsr\tfoo\n+;;\n+;; into\n+;;\t\tjsr\tfoo_tramp\n+;;\n+;; The linker generated trampoline and _far_trampoline must be in \n+;; non-banked memory.\n+;;\n+__far_trampoline:\n+\tmovb\t0,sp, 2,sp\t; Copy page register below the caller's return\n+\tleas\t2,sp\t\t; address.\n+\tjmp\t0,y\t\t; We have a 'call/rtc' stack layout now\n+\t\t\t\t; and can jump to the far handler\n+\t\t\t\t; (whose memory bank is mapped due to the\n+\t\t\t\t; call to the trampoline).\n+#endif\n+#endif\n+.Lend:\n ;-----------------------------------------\n ; end required gcclib code\n ;-----------------------------------------"}, {"sha": "9351ee69c49157c96919866bbf3639674e3320f8", "filename": "gcc/config/m68hc11/m68hc11-crt0.S", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084de18d20035b4aadad0b5175623a6a25d9433e/gcc%2Fconfig%2Fm68hc11%2Fm68hc11-crt0.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084de18d20035b4aadad0b5175623a6a25d9433e/gcc%2Fconfig%2Fm68hc11%2Fm68hc11-crt0.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11-crt0.S?ref=084de18d20035b4aadad0b5175623a6a25d9433e", "patch": "@@ -1,5 +1,5 @@\n /* Startup code for M68HC11.\n-   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n \n This file is free software; you can redistribute it and/or modify it\n under the terms of the GNU General Public License as published by the\n@@ -36,6 +36,17 @@ Boston, MA 02111-1307, USA.  */\n ;-----------------------------------------\n \t.file\t\"crt0.s\"\n \n+#ifdef __HAVE_SHORT_INT__\n+\t.mode mshort\n+#else\n+\t.mode mlong\n+#endif\n+\n+#if defined(__USE_RTC__) && defined(mc68hc12)\n+\t.macro jsr name\n+\tcall\t\\name\n+\t.endm\n+#endif\n ;; \n ;; \n ;; The linker concatenate the .install* sections in the following order:"}, {"sha": "8201f3909bedbc527c1d1f43342153890a45bf1c", "filename": "gcc/config/m68hc11/t-m68hc11-gas", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084de18d20035b4aadad0b5175623a6a25d9433e/gcc%2Fconfig%2Fm68hc11%2Ft-m68hc11-gas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084de18d20035b4aadad0b5175623a6a25d9433e/gcc%2Fconfig%2Fm68hc11%2Ft-m68hc11-gas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Ft-m68hc11-gas?ref=084de18d20035b4aadad0b5175623a6a25d9433e", "patch": "@@ -25,7 +25,7 @@ LIB1ASMFUNCS = _mulsi3 \\\n \t_premain __exit _abort _cleanup \\\n \t_adddi3 _subdi3 _notdi2 \\\n \t_ashrhi3 _lshrhi3 _lshlhi3 _ashrqi3 _lshlqi3 _map_data _init_bss \\\n-\t_ctor _dtor\n+\t_ctor _dtor __far_trampoline\n \n TARGET_LIBGCC2_CFLAGS = -DUSE_GAS -DIN_GCC\n \n@@ -37,10 +37,10 @@ LIB2FUNCS_EXTRA = $(srcdir)/config/udivmodsi4.c \\\n LIBGCC2_DEBUG_CFLAGS =\n LIBGCC2_CFLAGS = -Os $(LIBGCC2_INCLUDES) $(TARGET_LIBGCC2_CFLAGS) $(LIBGCC2_DEBUG_CFLAGS) $(GTHREAD_FLAGS) -DIN_LIBGCC2\n \n-MULTILIB_OPTIONS  = m68hc11/m68hc12 mshort fshort-double\n+MULTILIB_OPTIONS  = m68hc11/m68hc12 mshort fshort-double mlong-calls\n MULTILIB_DIRNAMES =\n MULTILIB_MATCHES  = m68hc11=m6811 m68hc12=m6812\n-MULTILIB_EXCEPTIONS = -mnoshort -mno68hc11\n+MULTILIB_EXCEPTIONS = -mnoshort -mno68hc11 -mnolong-calls\n \n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib"}]}