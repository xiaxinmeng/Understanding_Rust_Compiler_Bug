{"sha": "2b4f7b944d1f1a45948b10d4d9ba1169cc187016", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI0ZjdiOTQ0ZDFmMWE0NTk0OGIxMGQ0ZDliYTExNjljYzE4NzAxNg==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-01-28T01:06:29Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-01-28T01:06:29Z"}, "message": "Low-hanging C++-lexer speedup (PR c++/24208)\n\ngcc/cp/ChangeLog:\n\n\tPR c++/24208\n\t* parser.c (LEXER_DEBUGGING_ENABLED_P): New macro.\n\t(cp_lexer_debugging_p): Use it.\n\t(cp_lexer_start_debugging): Likewise.\n\t(cp_lexer_stop_debugging): Likewise.\n\nFrom-SVN: r232912", "tree": {"sha": "2e9e77464bd247864b9c633aff892a1fcbfaa05e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e9e77464bd247864b9c633aff892a1fcbfaa05e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b4f7b944d1f1a45948b10d4d9ba1169cc187016", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b4f7b944d1f1a45948b10d4d9ba1169cc187016", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b4f7b944d1f1a45948b10d4d9ba1169cc187016", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b4f7b944d1f1a45948b10d4d9ba1169cc187016/comments", "author": null, "committer": null, "parents": [{"sha": "069ec73a9bae6d03426a11e9153d1ef01ce2258f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/069ec73a9bae6d03426a11e9153d1ef01ce2258f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/069ec73a9bae6d03426a11e9153d1ef01ce2258f"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "6b790e10511d5e28ee106e5200310d1d7d31f5d5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4f7b944d1f1a45948b10d4d9ba1169cc187016/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4f7b944d1f1a45948b10d4d9ba1169cc187016/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2b4f7b944d1f1a45948b10d4d9ba1169cc187016", "patch": "@@ -1,3 +1,11 @@\n+2016-01-28  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/24208\n+\t* parser.c (LEXER_DEBUGGING_ENABLED_P): New macro.\n+\t(cp_lexer_debugging_p): Use it.\n+\t(cp_lexer_start_debugging): Likewise.\n+\t(cp_lexer_stop_debugging): Likewise.\n+\n 2016-01-27  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/68062"}, {"sha": "d03b0c9596d09dae0b273f2e76bbad1bb6fd8873", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b4f7b944d1f1a45948b10d4d9ba1169cc187016/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b4f7b944d1f1a45948b10d4d9ba1169cc187016/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=2b4f7b944d1f1a45948b10d4d9ba1169cc187016", "patch": "@@ -706,11 +706,21 @@ cp_lexer_destroy (cp_lexer *lexer)\n   ggc_free (lexer);\n }\n \n+/* This needs to be set to TRUE before the lexer-debugging infrastructure can\n+   be used.  The point of this flag is to help the compiler to fold away calls\n+   to cp_lexer_debugging_p within this source file at compile time, when the\n+   lexer is not being debugged.  */\n+\n+#define LEXER_DEBUGGING_ENABLED_P false\n+\n /* Returns nonzero if debugging information should be output.  */\n \n static inline bool\n cp_lexer_debugging_p (cp_lexer *lexer)\n {\n+  if (!LEXER_DEBUGGING_ENABLED_P)\n+    return false;\n+\n   return lexer->debugging_p;\n }\n \n@@ -1296,6 +1306,10 @@ debug (cp_token *ptr)\n static void\n cp_lexer_start_debugging (cp_lexer* lexer)\n {\n+  if (!LEXER_DEBUGGING_ENABLED_P)\n+    fatal_error (input_location,\n+\t\t \"LEXER_DEBUGGING_ENABLED_P is not set to true\");\n+\n   lexer->debugging_p = true;\n   cp_lexer_debug_stream = stderr;\n }\n@@ -1305,6 +1319,10 @@ cp_lexer_start_debugging (cp_lexer* lexer)\n static void\n cp_lexer_stop_debugging (cp_lexer* lexer)\n {\n+  if (!LEXER_DEBUGGING_ENABLED_P)\n+    fatal_error (input_location,\n+\t\t \"LEXER_DEBUGGING_ENABLED_P is not set to true\");\n+\n   lexer->debugging_p = false;\n   cp_lexer_debug_stream = NULL;\n }"}]}