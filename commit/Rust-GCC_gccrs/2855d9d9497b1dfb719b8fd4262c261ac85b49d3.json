{"sha": "2855d9d9497b1dfb719b8fd4262c261ac85b49d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg1NWQ5ZDk0OTdiMWRmYjcxOWI4ZmQ0MjYyYzI2MWFjODViNDlkMw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2010-11-02T12:30:26Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2010-11-02T12:30:26Z"}, "message": "Basic support for Intel Core i7\n\n\t* i386.c (ix86_option_override_internal): Add entry for corei7, use\n\tgeneric tuning.  Use generic32 when compiling for 32-bit ABI.\n\nCo-Authored-By: H.J. Lu <hjl.tools@gmail.com>\nCo-Authored-By: Maxim Kuvyrkov <maxim@codesourcery.com>\n\nFrom-SVN: r166176", "tree": {"sha": "9eb65848ea0c4c14dbb9e213734eef514c010075", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9eb65848ea0c4c14dbb9e213734eef514c010075"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2855d9d9497b1dfb719b8fd4262c261ac85b49d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2855d9d9497b1dfb719b8fd4262c261ac85b49d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2855d9d9497b1dfb719b8fd4262c261ac85b49d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2855d9d9497b1dfb719b8fd4262c261ac85b49d3/comments", "author": null, "committer": null, "parents": [{"sha": "de4df14c7d6e8f5db942804e6fdc37033b46c3bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de4df14c7d6e8f5db942804e6fdc37033b46c3bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de4df14c7d6e8f5db942804e6fdc37033b46c3bb"}], "stats": {"total": 55, "additions": 42, "deletions": 13}, "files": [{"sha": "b97cf78b4a736ac26bed0cafbfce412766e00242", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2855d9d9497b1dfb719b8fd4262c261ac85b49d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2855d9d9497b1dfb719b8fd4262c261ac85b49d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2855d9d9497b1dfb719b8fd4262c261ac85b49d3", "patch": "@@ -1,3 +1,12 @@\n+2010-11-02  Bernd Schmidt  <bernds@codesourcery.com>\n+\t    Maxim Kuvyrkov  <maxim@codesourcery.com>\n+\t    H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tBasic support for Intel Core i7\n+\n+\t* i386.c (ix86_option_override_internal): Add entry for corei7, use\n+\tgeneric tuning.  Use generic32 when compiling for 32-bit ABI.\n+\n 2010-11-02  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* config/darwin.c (darwin_asm_named_section): Check for __DWARF"}, {"sha": "47c3bfe80d978d947413eb0f7b341a57a37feefc", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 33, "deletions": 13, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2855d9d9497b1dfb719b8fd4262c261ac85b49d3/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2855d9d9497b1dfb719b8fd4262c261ac85b49d3/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=2855d9d9497b1dfb719b8fd4262c261ac85b49d3", "patch": "@@ -3183,6 +3183,9 @@ ix86_option_override_internal (bool main_args_p)\n       {\"core2\", PROCESSOR_CORE2, CPU_CORE2,\n \tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n \t| PTA_SSSE3 | PTA_CX16},\n+      {\"corei7\", PROCESSOR_GENERIC64, CPU_GENERIC64,\n+       PTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n+       | PTA_SSSE3 | PTA_SSE4_1 | PTA_SSE4_2 | PTA_CX16},\n       {\"atom\", PROCESSOR_ATOM, CPU_ATOM,\n \tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n \t| PTA_SSSE3 | PTA_CX16 | PTA_MOVBE},\n@@ -3522,23 +3525,40 @@ ix86_option_override_internal (bool main_args_p)\n       {\n \tix86_schedule = processor_alias_table[i].schedule;\n \tix86_tune = processor_alias_table[i].processor;\n-\tif (TARGET_64BIT && !(processor_alias_table[i].flags & PTA_64BIT))\n+\tif (TARGET_64BIT)\n \t  {\n-\t    if (ix86_tune_defaulted)\n+\t    if (!(processor_alias_table[i].flags & PTA_64BIT))\n \t      {\n-\t\tix86_tune_string = \"x86-64\";\n-\t\tfor (i = 0; i < pta_size; i++)\n-\t\t  if (! strcmp (ix86_tune_string,\n-\t\t\t\tprocessor_alias_table[i].name))\n-\t\t    break;\n-\t\tix86_schedule = processor_alias_table[i].schedule;\n-\t\tix86_tune = processor_alias_table[i].processor;\n+\t\tif (ix86_tune_defaulted)\n+\t\t  {\n+\t\t    ix86_tune_string = \"x86-64\";\n+\t\t    for (i = 0; i < pta_size; i++)\n+\t\t      if (! strcmp (ix86_tune_string,\n+\t\t\t\t    processor_alias_table[i].name))\n+\t\t\tbreak;\n+\t\t    ix86_schedule = processor_alias_table[i].schedule;\n+\t\t    ix86_tune = processor_alias_table[i].processor;\n+\t\t  }\n+\t\telse\n+\t\t  error (\"CPU you selected does not support x86-64 \"\n+\t\t\t \"instruction set\");\n+\t      }\n+\t  }\n+\telse\n+\t  {\n+\t    /* Adjust tuning when compiling for 32-bit ABI.  */\n+\t    switch (ix86_tune)\n+\t      {\n+\t      case PROCESSOR_GENERIC64:\n+\t\tix86_tune = PROCESSOR_GENERIC32;\n+\t\tix86_schedule = CPU_PENTIUMPRO;\n+\t\tbreak;\n+\n+\t      default:\n+\t\tbreak;\n \t      }\n-\t    else\n-\t      error (\"CPU you selected does not support x86-64 \"\n-\t\t     \"instruction set\");\n \t  }\n-        /* Intel CPUs have always interpreted SSE prefetch instructions as\n+\t/* Intel CPUs have always interpreted SSE prefetch instructions as\n \t   NOPs; so, we can enable SSE prefetch instructions even when\n \t   -mtune (rather than -march) points us to a processor that has them.\n \t   However, the VIA C3 gives a SIGILL, so we only do that for i686 and"}]}