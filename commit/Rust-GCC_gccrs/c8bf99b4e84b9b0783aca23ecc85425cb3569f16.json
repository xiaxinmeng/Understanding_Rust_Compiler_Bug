{"sha": "c8bf99b4e84b9b0783aca23ecc85425cb3569f16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhiZjk5YjRlODRiOWIwNzgzYWNhMjNlY2M4NTQyNWNiMzU2OWYxNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-11-10T15:40:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-11-10T15:40:34Z"}, "message": "vec.h (VEC_BASE): If base is at offset 0 in the structure, use &(P)->base even if P is NULL.\n\n\t* vec.h (VEC_BASE): If base is at offset 0 in the structure,\n\tuse &(P)->base even if P is NULL.\n\nFrom-SVN: r181258", "tree": {"sha": "ab09cad2f5bd98719ee66798ec564bd0f5745126", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab09cad2f5bd98719ee66798ec564bd0f5745126"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8bf99b4e84b9b0783aca23ecc85425cb3569f16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8bf99b4e84b9b0783aca23ecc85425cb3569f16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8bf99b4e84b9b0783aca23ecc85425cb3569f16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8bf99b4e84b9b0783aca23ecc85425cb3569f16/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03989f55955ddb1f82ce79a7c2251039d0ba5d0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03989f55955ddb1f82ce79a7c2251039d0ba5d0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03989f55955ddb1f82ce79a7c2251039d0ba5d0e"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "86515365d217a1c65baeb16e1cb27836d3998c9a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8bf99b4e84b9b0783aca23ecc85425cb3569f16/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8bf99b4e84b9b0783aca23ecc85425cb3569f16/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8bf99b4e84b9b0783aca23ecc85425cb3569f16", "patch": "@@ -1,5 +1,8 @@\n 2011-11-10  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* vec.h (VEC_BASE): If base is at offset 0 in the structure,\n+\tuse &(P)->base even if P is NULL.\n+\n \tPR rtl-optimization/51023\n \t* combine.c (simplify_comparison) <case SIGN_EXTEND>: Don't use\n \tval_signbit_known_clear_p for signed comparison narrowing"}, {"sha": "d47795879f1834f0e6c2eec97ce888ec08b0b999", "filename": "gcc/vec.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8bf99b4e84b9b0783aca23ecc85425cb3569f16/gcc%2Fvec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8bf99b4e84b9b0783aca23ecc85425cb3569f16/gcc%2Fvec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.h?ref=c8bf99b4e84b9b0783aca23ecc85425cb3569f16", "patch": "@@ -549,7 +549,12 @@ typedef struct VEC(T,A)\t\t\t\t\t\t\t  \\\n } VEC(T,A)\n \n /* Convert to base type.  */\n+#if GCC_VERSION >= 4000\n+#define VEC_BASE(P) \\\n+  ((offsetof (__typeof (*P), base) == 0 || (P)) ? &(P)->base : 0)\n+#else\n #define VEC_BASE(P)  ((P) ? &(P)->base : 0)\n+#endif\n \n /* Vector of integer-like object.  */\n #define DEF_VEC_I(T)\t\t\t\t\t\t\t  \\"}]}