{"sha": "240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQwZmUyYTRhYzBlZDJjMjYyMzY1ZThjMTNkN2JjOTM0ZmI1ZmMxOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-22T15:56:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-22T15:56:47Z"}, "message": "[multiple changes]\n\n2009-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* exp_aggr.adb (Gen_Loop): Do not qualify the bounds of the range if\n\tthey are already of the base type of the index.\n\n2009-07-22  Brett Porter  <porter@adacore.com>\n\n\t* sysdep.c, init.c: Fix typo: _SPE_ should have been __SPE__.\n\n2009-07-22  Robert Dewar  <dewar@adacore.com>\n\n\t* vms_data.ads: Add entry for SCO_OUTPUT (-gnateS)\n\t* gnat_ugn.texi: Add documentation for -gnateS switch\n\t* ug_words: Add entry for -gnateS /SCO_OUTPUT\n\t* gcc-interface/Make-lang.in: Update dependenciest.3\n\n\t* get_scos.adb, get_scos.ads, gnat1drv.adb, par_sco.adb,\n\tpar_sco.ads, put_scos.adb, put_scos.ads, scos.adb, scos.ads: Initial\n\tcomplete information for SCO input/output.\n\nFrom-SVN: r149945", "tree": {"sha": "ee678145b2dde82f9ff47f5337fba7033e2f1e0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee678145b2dde82f9ff47f5337fba7033e2f1e0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/comments", "author": null, "committer": null, "parents": [{"sha": "f7f0159df726567169986a6ab8262a2312409b31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7f0159df726567169986a6ab8262a2312409b31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7f0159df726567169986a6ab8262a2312409b31"}], "stats": {"total": 666, "additions": 350, "deletions": 316}, "files": [{"sha": "4f26101bef451e4f566083547931be283503b13c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -1,3 +1,23 @@\n+2009-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_aggr.adb (Gen_Loop): Do not qualify the bounds of the range if\n+\tthey are already of the base type of the index.\n+\n+2009-07-22  Brett Porter  <porter@adacore.com>\n+\n+\t* sysdep.c, init.c: Fix typo: _SPE_ should have been __SPE__.\n+\n+2009-07-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* vms_data.ads: Add entry for SCO_OUTPUT (-gnateS)\n+\t* gnat_ugn.texi: Add documentation for -gnateS switch\n+\t* ug_words: Add entry for -gnateS /SCO_OUTPUT\n+\t* gcc-interface/Make-lang.in: Update dependenciest.3\n+\n+\t* get_scos.adb, get_scos.ads, gnat1drv.adb, par_sco.adb,\n+\tpar_sco.ads, put_scos.adb, put_scos.ads, scos.adb, scos.ads: Initial\n+\tcomplete information for SCO input/output.\n+\n 2009-07-22  Sergey Rybin  <rybin@adacore.com>\n \n \t* gnat_ugn.texi: Update doc for some gnatcheck rules."}, {"sha": "15338e4b24b80313b3dbe5d1e5da56c5600a6f55", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 30, "deletions": 11, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -1252,6 +1252,12 @@ package body Exp_Aggr is\n       function Gen_Loop (L, H : Node_Id; Expr : Node_Id) return List_Id is\n          L_J : Node_Id;\n \n+         L_L : Node_Id;\n+         --  Index_Base'(L)\n+\n+         L_H : Node_Id;\n+         --  Index_Base'(H)\n+\n          L_Range : Node_Id;\n          --  Index_Base'(L) .. Index_Base'(H)\n \n@@ -1330,19 +1336,32 @@ package body Exp_Aggr is\n \n          L_J := Make_Defining_Identifier (Loc, New_Internal_Name ('J'));\n \n-         --  Construct \"L .. H\"\n+         --  Construct \"L .. H\" in Index_Base. We use a qualified expression\n+         --  for the bound to convert to the index base, but we don't need\n+         --  to do that if we already have the base type at hand.\n+\n+         if Etype (L) = Index_Base then\n+            L_L := L;\n+         else\n+            L_L :=\n+              Make_Qualified_Expression (Loc,\n+                Subtype_Mark => Index_Base_Name,\n+                Expression   => L);\n+         end if;\n+\n+         if Etype (H) = Index_Base then\n+            L_H := H;\n+         else\n+            L_H :=\n+              Make_Qualified_Expression (Loc,\n+                Subtype_Mark => Index_Base_Name,\n+                Expression   => H);\n+         end if;\n \n          L_Range :=\n-           Make_Range\n-             (Loc,\n-              Low_Bound  => Make_Qualified_Expression\n-                              (Loc,\n-                               Subtype_Mark => Index_Base_Name,\n-                               Expression   => L),\n-              High_Bound => Make_Qualified_Expression\n-                              (Loc,\n-                               Subtype_Mark => Index_Base_Name,\n-                               Expression => H));\n+           Make_Range (Loc,\n+             Low_Bound => L_L,\n+             High_Bound => L_H);\n \n          --  Construct \"for L_J in Index_Base range L .. H\"\n "}, {"sha": "9a28ea3ef48012e492cecf1966b58723bf96eca4", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -2295,30 +2295,30 @@ ada/gnat1drv.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/elists.ads ada/elists.adb ada/err_vars.ads ada/errout.ads \\\n    ada/erroutc.ads ada/exp_tss.ads ada/expander.ads ada/fmap.ads \\\n    ada/fname.ads ada/fname-uf.ads ada/frontend.ads ada/get_targ.ads \\\n-   ada/gnat.ads ada/g-hesorg.ads ada/g-htable.ads ada/gnat1drv.ads \\\n-   ada/gnat1drv.adb ada/gnatvsn.ads ada/hlo.ads ada/hostparm.ads \\\n-   ada/inline.ads ada/lib.ads ada/lib.adb ada/lib-list.adb \\\n-   ada/lib-load.ads ada/lib-sort.adb ada/lib-writ.ads ada/lib-xref.ads \\\n-   ada/namet.ads ada/nlists.ads ada/nlists.adb ada/nmake.ads ada/opt.ads \\\n-   ada/osint.ads ada/output.ads ada/par_sco.ads ada/prepcomp.ads \\\n-   ada/repinfo.ads ada/restrict.ads ada/rident.ads ada/rtsfind.ads \\\n-   ada/sem.ads ada/sem.adb ada/sem_attr.ads ada/sem_ch10.ads \\\n-   ada/sem_ch11.ads ada/sem_ch12.ads ada/sem_ch13.ads ada/sem_ch2.ads \\\n-   ada/sem_ch3.ads ada/sem_ch4.ads ada/sem_ch5.ads ada/sem_ch6.ads \\\n-   ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_ch9.ads ada/sem_elim.ads \\\n-   ada/sem_eval.ads ada/sem_prag.ads ada/sem_type.ads ada/sem_util.ads \\\n-   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/sinput.adb \\\n-   ada/sinput-l.ads ada/snames.ads ada/sprint.ads ada/stand.ads \\\n-   ada/stringt.ads ada/stylesw.ads ada/system.ads ada/s-assert.ads \\\n-   ada/s-bitops.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/targparm.ads ada/tree_gen.ads ada/tree_io.ads ada/treepr.ads \\\n-   ada/ttypes.ads ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/usage.ads \\\n-   ada/validsw.ads ada/widechar.ads \n+   ada/gnat.ads ada/g-hesorg.ads ada/g-htable.ads ada/g-table.ads \\\n+   ada/g-table.adb ada/gnat1drv.ads ada/gnat1drv.adb ada/gnatvsn.ads \\\n+   ada/hlo.ads ada/hostparm.ads ada/inline.ads ada/lib.ads ada/lib.adb \\\n+   ada/lib-list.adb ada/lib-load.ads ada/lib-sort.adb ada/lib-writ.ads \\\n+   ada/lib-xref.ads ada/namet.ads ada/nlists.ads ada/nlists.adb \\\n+   ada/nmake.ads ada/opt.ads ada/osint.ads ada/output.ads ada/par_sco.ads \\\n+   ada/prepcomp.ads ada/repinfo.ads ada/restrict.ads ada/rident.ads \\\n+   ada/rtsfind.ads ada/scos.ads ada/sem.ads ada/sem.adb ada/sem_attr.ads \\\n+   ada/sem_ch10.ads ada/sem_ch11.ads ada/sem_ch12.ads ada/sem_ch13.ads \\\n+   ada/sem_ch2.ads ada/sem_ch3.ads ada/sem_ch4.ads ada/sem_ch5.ads \\\n+   ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_ch9.ads \\\n+   ada/sem_elim.ads ada/sem_eval.ads ada/sem_prag.ads ada/sem_type.ads \\\n+   ada/sem_util.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n+   ada/sinput.adb ada/sinput-l.ads ada/snames.ads ada/sprint.ads \\\n+   ada/stand.ads ada/stringt.ads ada/stylesw.ads ada/system.ads \\\n+   ada/s-assert.ads ada/s-bitops.ads ada/s-exctab.ads ada/s-htable.ads \\\n+   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n+   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/targparm.ads ada/tree_gen.ads ada/tree_io.ads \\\n+   ada/treepr.ads ada/ttypes.ads ada/types.ads ada/uintp.ads ada/uintp.adb \\\n+   ada/uname.ads ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \\\n+   ada/usage.ads ada/validsw.ads ada/widechar.ads \n \n ada/gnatbind.o : ada/ada.ads ada/a-comlin.ads ada/a-clrefi.ads \\\n    ada/a-except.ads ada/a-unccon.ads ada/a-uncdea.ads ada/ali.ads \\"}, {"sha": "14d4256a513134c61a3f39d0e6362f969b213b90", "filename": "gcc/ada/get_scos.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fget_scos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fget_scos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_scos.adb?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -149,11 +149,12 @@ procedure Get_SCOs is\n    begin\n       loop\n          Skipc;\n-         C := Getc;\n+         C := Nextc;\n          exit when C /= LF and then C /= CR;\n \n          if C = ' ' then\n             Skip_Spaces;\n+            C := Nextc;\n             exit when C /= LF and then C /= CR;\n          end if;\n       end loop;\n@@ -173,8 +174,7 @@ procedure Get_SCOs is\n --  Start of processing for Get_Scos\n \n begin\n-   SCO_Table.Init;\n-   SCO_Unit_Table.Init;\n+   SCOs.Initialize;\n \n    --  Loop through lines of SCO information\n \n@@ -276,7 +276,7 @@ begin\n                      Cond := C;\n                      Get_Sloc_Range (Loc1, Loc2);\n                      Add_SCO\n-                       (C2   => C,\n+                       (C2   => Cond,\n                         From => Loc1,\n                         To   => Loc2,\n                         Last => False);\n@@ -288,9 +288,14 @@ begin\n                   then\n                      Add_SCO (C1 => C, Last => False);\n \n+                  elsif C = ' ' then\n+                     Skip_Spaces;\n+\n                   else\n                      raise Data_Error;\n                   end if;\n+\n+                  C := Getc;\n                end loop;\n \n                --  Reset Last indication to True for last entry"}, {"sha": "639d938bbfe9ad68f164529cac716f9db3dd0652", "filename": "gcc/ada/get_scos.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fget_scos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fget_scos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_scos.ads?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -23,17 +23,17 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package contains the function used to read SCO information from an\n---  ALI file and populate the tables defined in package SCOs with the result.\n+--  This package contains the function used to read SCO information from an ALI\n+--  file and populate the tables defined in package SCOs with the result.\n \n generic\n-   --  These subprograms provide access to the ALI file. Locating, opening\n-   --  and providing access to the ALI file is the callers' responsibility.\n+   --  These subprograms provide access to the ALI file. Locating, opening and\n+   --  providing access to the ALI file is the callers' responsibility.\n \n    with function Getc return Character is <>;\n-   --  Get next character, positioning the ALI file ready to read the\n-   --  following character (equivalent to calling Skipc, then Nextc). If\n-   --  the end of file is encountered, the value Types.EOF is returned.\n+   --  Get next character, positioning the ALI file ready to read the following\n+   --  character (equivalent to calling Skipc, then Nextc). If the end of file\n+   --  is encountered, the value Types.EOF is returned.\n \n    with function Nextc return Character is <>;\n    --  Look at the next character, and return it, leaving the position of the"}, {"sha": "199e3ffb8da7fd3951225fc2f2d756a6abc3ec48", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -50,6 +50,7 @@ with Prepcomp;\n with Repinfo;  use Repinfo;\n with Restrict;\n with Rtsfind;\n+with SCOs;\n with Sem;\n with Sem_Ch8;\n with Sem_Ch12;\n@@ -537,6 +538,7 @@ begin\n       Urealp.Initialize;\n       Errout.Initialize;\n       Namet.Initialize;\n+      SCOs.Initialize;\n       Snames.Initialize;\n       Stringt.Initialize;\n       Inline.Initialize;"}, {"sha": "7b1d308e65c1e2dc1d6c0fbd10876cf2c9797186", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -4157,6 +4157,13 @@ Specify a preprocessing data file\n @end ifclear\n (@pxref{Integrated Preprocessing}).\n \n+@item -gnateS\n+@cindex @option{-gnateS} (@command{gcc})\n+Generate SCO (Source Coverage Obligation) information in the ALI\n+file. This information is used by advanced coverage tools. See\n+unit @file{SCOs} in the compiler sources for details in files\n+@file{scos.ads} and @file{scos.adb}.\n+\n @item -gnatE\n @cindex @option{-gnatE} (@command{gcc})\n Full dynamic elaboration checks.\n@@ -21013,6 +21020,7 @@ used as a parameter of the @option{+R} or @option{-R} options.\n * Improperly_Called_Protected_Entries::\n @end ignore\n * Metrics::\n+* Misnamed_Controlling_Parameters::\n * Misnamed_Identifiers::\n * Multiple_Entries_In_Protected_Definitions::\n * Name_Clashes::\n@@ -21798,6 +21806,25 @@ To turn OFF the check for cyclomatic complexity metric, use the following option\n -RMetrics_Cyclomatic_Complexity\n @end smallexample\n \n+\n+@node Misnamed_Controlling_Parameters\n+@subsection @code{Misnamed_Controlling_Parameters}\n+@cindex @code{Misnamed_Controlling_Parameters} rule (for @command{gnatcheck})\n+\n+@noindent\n+Flags a declaration of a dispatching operation, if the first parameter is\n+not a controlling one and its name is not @code{This} (the check for\n+parameter name is not case-sensitive). Declarations of dispatching functions\n+with controlling result and no controlling parameter are never flagged.\n+\n+A subprogram body declaration, subprogram renaming declaration of subprogram\n+body stub is flagged only if it is not a completion of a pripr subprogram\n+declaration.\n+\n+This rule has no parameters.\n+\n+\n+\n @node Misnamed_Identifiers\n @subsection @code{Misnamed_Identifiers}\n @cindex @code{Misnamed_Identifiers} rule (for @command{gnatcheck})"}, {"sha": "ffea0e66ce242cf739dab6ec862ab600821abcfa", "filename": "gcc/ada/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -1932,7 +1932,7 @@ __gnat_init_float (void)\n      overflow settings are an OS configuration issue.  The instructions\n      below have no effect.  */\n #if defined (_ARCH_PPC) && !defined (_SOFT_FLOAT) && !defined (VTHREADS)\n-#if defined (_SPE_)\n+#if defined (__SPE__)\n   {\n      const unsigned long spefscr_mask = 0xfffffff3;\n      unsigned long spefscr;"}, {"sha": "ea7726395a17d5291dcc5885dfaf5c4cf68f69de", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 160, "deletions": 239, "changes": 399, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -27,10 +27,12 @@ with Atree;    use Atree;\n with Debug;    use Debug;\n with Lib;      use Lib;\n with Lib.Util; use Lib.Util;\n+with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Opt;      use Opt;\n with Output;   use Output;\n with Put_SCOs;\n+with SCOs;     use SCOs;\n with Sinfo;    use Sinfo;\n with Sinput;   use Sinput;\n with Table;\n@@ -40,99 +42,25 @@ with GNAT.Heap_Sort_G;\n \n package body Par_SCO is\n \n-   ---------------\n-   -- SCO_Table --\n-   ---------------\n-\n-   --  Internal table used to store recorded SCO values. Table is populated by\n-   --  calls to SCO_Record, and entries may be modified by Set_SCO_Condition.\n-\n-   type SCO_Table_Entry is record\n-      From : Source_Ptr;\n-      To   : Source_Ptr;\n-      C1   : Character;\n-      C2   : Character;\n-      Last : Boolean;\n-   end record;\n-\n-   package SCO_Table is new Table.Table (\n-     Table_Component_Type => SCO_Table_Entry,\n-     Table_Index_Type     => Nat,\n-     Table_Low_Bound      => 1,\n-     Table_Initial        => 500,\n-     Table_Increment      => 300,\n-     Table_Name           => \"SCO_Table_Entry\");\n-\n-   --  The SCO_Table_Entry values appear as follows:\n-\n-   --    Statements\n-   --      C1   = 'S'\n-   --      C2   = ' '\n-   --      From = starting sloc\n-   --      To   = ending sloc\n-   --      Last = unused\n-\n-   --    Exit\n-   --      C1   = 'T'\n-   --      C2   = ' '\n-   --      From = starting sloc\n-   --      To   = ending sloc\n-   --      Last = unused\n-\n-   --    Simple Decision\n-   --      C1   = 'I', 'E', 'W', 'X' (if/exit/while/expression)\n-   --      C2   = 'c', 't', or 'f'\n-   --      From = starting sloc\n-   --      To   = ending sloc\n-   --      Last = True\n-\n-   --    Complex Decision\n-   --      C1   = 'I', 'E', 'W', 'X' (if/exit/while/expression)\n-   --      C2   = ' '\n-   --      From = No_Location\n-   --      To   = No_Location\n-   --      Last = False\n-\n-   --    Operator\n-   --      C1   = '!', '^', '&', '|'\n-   --      C2   = ' '\n-   --      From = No_Location\n-   --      To   = No_Location\n-   --      Last = False\n-\n-   --    Element\n-   --      C1   = ' '\n-   --      C2   = 'c', 't', or 'f' (condition/true/false)\n-   --      From = starting sloc\n-   --      To   = ending sloc\n-   --      Last = False for all but the last entry, True for last entry\n-\n-   --    Note: the sequence starting with a decision, and continuing with\n-   --    operators and elements up to and including the first one labeled with\n-   --    Last=True, indicate the sequence to be output for a complex decision\n-   --    on a single CD decision line.\n-\n-   ----------------\n-   -- Unit Table --\n-   ----------------\n+   -----------------------\n+   -- Unit Number Table --\n+   -----------------------\n \n-   --  This table keeps track of the units and the corresponding starting and\n-   --  ending indexes (From, To) in the SCO table. Note that entry zero is\n-   --  unused, it is for convenience in calling the sort routine.\n+   --  This table parallels the SCO_Unit_Table, keeping track of the unit\n+   --  numbers corresponding to the entries made in this table, so that before\n+   --  writing out the SCO information to the ALI file, we can fill in the\n+   --  proper dependency numbers and file names.\n \n-   type SCO_Unit_Table_Entry is record\n-      Unit : Unit_Number_Type;\n-      From : Nat;\n-      To   : Nat;\n-   end record;\n+   --  Note that the zero'th entry is here for convenience in sorting the\n+   --  table, the real lower bound is 1.\n \n-   package SCO_Unit_Table is new Table.Table (\n-     Table_Component_Type => SCO_Unit_Table_Entry,\n-     Table_Index_Type     => Int,\n-     Table_Low_Bound      => 0,\n+   package SCO_Unit_Number_Table is new Table.Table (\n+     Table_Component_Type => Unit_Number_Type,\n+     Table_Index_Type     => SCO_Unit_Index,\n+     Table_Low_Bound      => 0, -- see note above on sort\n      Table_Initial        => 20,\n      Table_Increment      => 200,\n-     Table_Name           => \"SCO_Unit_Table_Entry\");\n+     Table_Name           => \"SCO_Unit_Number_Entry\");\n \n    --------------------------\n    -- Condition Hash Table --\n@@ -196,55 +124,106 @@ package body Par_SCO is\n    procedure Traverse_Subprogram_Body             (N : Node_Id);\n    --  Traverse the corresponding construct, generating SCO table entries\n \n-   procedure dsco;\n-   --  Debug routine to dump SCO table\n+   procedure Write_SCOs_To_ALI_File is new Put_SCOs;\n+   --  Write SCO information to the ALI file using routines in Lib.Util\n \n    ----------\n    -- dsco --\n    ----------\n \n    procedure dsco is\n    begin\n+      --  Dump SCO unit table\n+\n       Write_Line (\"SCO Unit Table\");\n       Write_Line (\"--------------\");\n \n-      for Index in SCO_Unit_Table.First .. SCO_Unit_Table.Last loop\n-         Write_Str (\"  \");\n-         Write_Int (Index);\n-         Write_Str (\".  Unit = \");\n-         Write_Int (Int (SCO_Unit_Table.Table (Index).Unit));\n-         Write_Str (\"  From = \");\n-         Write_Int (Int (SCO_Unit_Table.Table (Index).From));\n-         Write_Str (\"  To = \");\n-         Write_Int (Int (SCO_Unit_Table.Table (Index).To));\n-         Write_Eol;\n+      for Index in 1 .. SCO_Unit_Table.Last loop\n+         declare\n+            UTE : SCO_Unit_Table_Entry renames SCO_Unit_Table.Table (Index);\n+\n+         begin\n+            Write_Str (\"  \");\n+            Write_Int (Int (Index));\n+            Write_Str (\".  Dep_Num = \");\n+            Write_Int (Int (UTE.Dep_Num));\n+            Write_Str (\"  From = \");\n+            Write_Int (Int (UTE.From));\n+            Write_Str (\"  To = \");\n+            Write_Int (Int (UTE.To));\n+\n+            Write_Str (\"  File_Name = \"\"\");\n+\n+            if UTE.File_Name /= null then\n+               Write_Str (UTE.File_Name.all);\n+            end if;\n+\n+            Write_Char ('\"');\n+            Write_Eol;\n+         end;\n       end loop;\n \n+      --  Dump SCO Unit number table if it contains any entries\n+\n+      if SCO_Unit_Number_Table.Last >= 1 then\n+         Write_Eol;\n+         Write_Line (\"SCO Unit Number Table\");\n+         Write_Line (\"---------------------\");\n+\n+         for Index in 1 .. SCO_Unit_Number_Table.Last loop\n+            Write_Str (\"  \");\n+            Write_Int (Int (Index));\n+            Write_Str (\". Unit_Number = \");\n+            Write_Int (Int (SCO_Unit_Number_Table.Table (Index)));\n+            Write_Eol;\n+         end loop;\n+      end if;\n+\n+      --  Dump SCO table itself\n+\n       Write_Eol;\n       Write_Line (\"SCO Table\");\n       Write_Line (\"---------\");\n \n-      for Index in SCO_Table.First .. SCO_Table.Last loop\n+      for Index in 1 .. SCO_Table.Last loop\n          declare\n             T : SCO_Table_Entry renames SCO_Table.Table (Index);\n \n          begin\n-            Write_Str (\"  \");\n-            Write_Int (Index);\n-            Write_Str (\".  C1 = '\");\n-            Write_Char (T.C1);\n-            Write_Str (\"' C2 = '\");\n-            Write_Char (T.C2);\n-            Write_Str (\"' From = \");\n-            Write_Location (T.From);\n-            Write_Str (\"  To = \");\n-            Write_Location (T.To);\n-            Write_Str (\" Last = \");\n+            Write_Str  (\"  \");\n+            Write_Int  (Index);\n+            Write_Char ('.');\n+\n+            if T.C1 /= ' ' then\n+               Write_Str  (\"  C1 = '\");\n+               Write_Char (T.C1);\n+               Write_Char (''');\n+            end if;\n+\n+            if T.C2 /= ' ' then\n+               Write_Str  (\"  C2 = '\");\n+               Write_Char (T.C2);\n+               Write_Char (''');\n+            end if;\n+\n+            if T.From /= No_Source_Location then\n+               Write_Str (\"  From = \");\n+               Write_Int (Int (T.From.Line));\n+               Write_Char (':');\n+               Write_Int (Int (T.From.Col));\n+            end if;\n+\n+            if T.To /= No_Source_Location then\n+               Write_Str (\"  To = \");\n+               Write_Int (Int (T.To.Line));\n+               Write_Char (':');\n+               Write_Int (Int (T.To.Col));\n+            end if;\n \n             if T.Last then\n-               Write_Str (\" True\");\n+               Write_Str (\"  True\");\n             else\n-               Write_Str (\" False\");\n+               Write_Str (\"  False\");\n             end if;\n \n             Write_Eol;\n@@ -305,9 +284,11 @@ package body Par_SCO is\n \n    procedure Initialize is\n    begin\n-      SCO_Unit_Table.Init;\n-      SCO_Unit_Table.Increment_Last;\n-      SCO_Table.Init;\n+      SCO_Unit_Number_Table.Init;\n+\n+      --  Set dummy 0'th entry in place for sort\n+\n+      SCO_Unit_Number_Table.Increment_Last;\n    end Initialize;\n \n    -------------------------\n@@ -381,9 +362,6 @@ package body Par_SCO is\n          C : Character;\n          L : Node_Id;\n \n-         FSloc : Source_Ptr;\n-         LSloc : Source_Ptr;\n-\n       begin\n          if No (N) then\n             return;\n@@ -407,8 +385,7 @@ package body Par_SCO is\n                end if;\n             end if;\n \n-            Sloc_Range (N, FSloc, LSloc);\n-            Set_Table_Entry (C, ' ', FSloc, LSloc, False);\n+            Set_Table_Entry (C, ' ', No_Location, No_Location, False);\n \n             Output_Decision_Operand (L);\n             Output_Decision_Operand (Right_Opnd (N));\n@@ -590,37 +567,12 @@ package body Par_SCO is\n    ----------------\n \n    procedure SCO_Output is\n-      Start : Nat;\n-      Stop  : Nat;\n-      U     : Unit_Number_Type;\n-\n-      procedure Output_Range (From : Source_Ptr; To : Source_Ptr);\n-      --  Outputs Sloc range in line:col-line:col format (for now we do not\n-      --  worry about generic instantiations???)\n-\n-      ------------------\n-      -- Output_Range --\n-      ------------------\n-\n-      procedure Output_Range (From : Source_Ptr; To : Source_Ptr) is\n-      begin\n-         Write_Info_Nat (Int (Get_Logical_Line_Number (From)));\n-         Write_Info_Char (':');\n-         Write_Info_Nat (Int (Get_Column_Number (From)));\n-         Write_Info_Char ('-');\n-         Write_Info_Nat (Int (Get_Logical_Line_Number (To)));\n-         Write_Info_Char (':');\n-         Write_Info_Nat (Int (Get_Column_Number (To)));\n-      end Output_Range;\n-\n-   --  Start of processing for SCO_Output\n-\n    begin\n       if Debug_Flag_Dot_OO then\n          dsco;\n       end if;\n \n-      --  Sort the unit table\n+      --  Sort the unit tables based on dependency numbers\n \n       Unit_Table_Sort : declare\n \n@@ -636,8 +588,12 @@ package body Par_SCO is\n \n          function Lt (Op1, Op2 : Natural) return Boolean is\n          begin\n-            return Dependency_Num (SCO_Unit_Table.Table (Nat (Op1)).Unit) <\n-                   Dependency_Num (SCO_Unit_Table.Table (Nat (Op2)).Unit);\n+            return\n+              Dependency_Num\n+                (SCO_Unit_Number_Table.Table (SCO_Unit_Index (Op1)))\n+                     <\n+              Dependency_Num\n+                (SCO_Unit_Number_Table.Table (SCO_Unit_Index (Op2)));\n          end Lt;\n \n          ----------\n@@ -646,8 +602,10 @@ package body Par_SCO is\n \n          procedure Move (From : Natural; To : Natural) is\n          begin\n-            SCO_Unit_Table.Table (Nat (To)) :=\n-              SCO_Unit_Table.Table (Nat (From));\n+            SCO_Unit_Table.Table (SCO_Unit_Index (To)) :=\n+              SCO_Unit_Table.Table (SCO_Unit_Index (From));\n+            SCO_Unit_Number_Table.Table (SCO_Unit_Index (To)) :=\n+              SCO_Unit_Number_Table.Table (SCO_Unit_Index (From));\n          end Move;\n \n          package Sorting is new GNAT.Heap_Sort_G (Move, Lt);\n@@ -658,88 +616,23 @@ package body Par_SCO is\n          Sorting.Sort (Integer (SCO_Unit_Table.Last));\n       end Unit_Table_Sort;\n \n-      --  Loop through entries in the unit table\n+      --  Loop through entries in the unit table to set file name and\n+      --  dependency number entries.\n \n       for J in 1 .. SCO_Unit_Table.Last loop\n-         U := SCO_Unit_Table.Table (J).Unit;\n-\n-         --  Output header line preceded by blank line\n-\n-         Write_Info_Terminate;\n-         Write_Info_Initiate ('C');\n-         Write_Info_Char (' ');\n-         Write_Info_Nat (Dependency_Num (U));\n-         Write_Info_Char (' ');\n-         Write_Info_Name (Reference_Name (Source_Index (U)));\n-         Write_Info_Terminate;\n-\n-         Start := SCO_Unit_Table.Table (J).From;\n-         Stop  := SCO_Unit_Table.Table (J).To;\n-\n-         --  Loop through relevant entries in SCO table, outputting C lines\n-\n-         while Start <= Stop loop\n-            declare\n-               T : SCO_Table_Entry renames SCO_Table.Table (Start);\n-\n-            begin\n-               Write_Info_Initiate ('C');\n-               Write_Info_Char (T.C1);\n-\n-               case T.C1 is\n-\n-                  --  Statements, exit\n-\n-                  when 'S' | 'T' =>\n-                     Write_Info_Char (' ');\n-                     Output_Range (T.From, T.To);\n-\n-                     --  Decision\n-\n-                  when 'I' | 'E' | 'W' | 'X' =>\n-                     if T.C2 = ' ' then\n-                        Start := Start + 1;\n-                     end if;\n-\n-                     --  Loop through table entries for this decision\n-\n-                     loop\n-                        declare\n-                           T : SCO_Table_Entry renames SCO_Table.Table (Start);\n-\n-                        begin\n-                           Write_Info_Char (' ');\n-\n-                           if T.C1 = '!' or else\n-                             T.C1 = '^' or else\n-                             T.C1 = '&' or else\n-                             T.C1 = '|'\n-                           then\n-                              Write_Info_Char (T.C1);\n-\n-                           else\n-                              Write_Info_Char (T.C2);\n-                              Output_Range (T.From, T.To);\n-                           end if;\n-\n-                           exit when T.Last;\n-                           Start := Start + 1;\n-                        end;\n-                     end loop;\n-\n-                  when others =>\n-                     raise Program_Error;\n-               end case;\n-\n-               Write_Info_Terminate;\n-            end;\n+         declare\n+            U   : constant Unit_Number_Type := SCO_Unit_Number_Table.Table (J);\n+            UTE : SCO_Unit_Table_Entry renames SCO_Unit_Table.Table (J);\n+         begin\n+            Get_Name_String (Reference_Name (Source_Index (U)));\n+            UTE.File_Name := new String'(Name_Buffer (1 .. Name_Len));\n+            UTE.Dep_Num := Dependency_Num (U);\n+         end;\n+      end loop;\n \n-            exit when Start = Stop;\n-            Start := Start + 1;\n+      --  Now the tables are all setup for output to the ALI file\n \n-            pragma Assert (Start <= Stop);\n-         end loop;\n-      end loop;\n+      Write_SCOs_To_ALI_File;\n    end SCO_Output;\n \n    ----------------\n@@ -759,8 +652,8 @@ package body Par_SCO is\n \n       --  Ignore call if this unit already recorded\n \n-      for J in 1 .. SCO_Unit_Table.Last loop\n-         if SCO_Unit_Table.Table (J).Unit = U then\n+      for J in 1 .. SCO_Unit_Number_Table.Last loop\n+         if U = SCO_Unit_Number_Table.Table (J) then\n             return;\n          end if;\n       end loop;\n@@ -799,9 +692,16 @@ package body Par_SCO is\n          Process_Decisions (Lu, 'X');\n       end if;\n \n-      --  Make entry for new unit in unit table\n+      --  Make entry for new unit in unit tables, we will fill in the file\n+      --  name and dependency numbers later.\n \n-      SCO_Unit_Table.Append ((Unit => U, From => From, To => SCO_Table.Last));\n+      SCO_Unit_Table.Append (\n+        (Dep_Num   => 0,\n+         File_Name => null,\n+         From      => From,\n+         To        => SCO_Table.Last));\n+\n+      SCO_Unit_Number_Table.Append (U);\n    end SCO_Record;\n \n    -----------------------\n@@ -827,12 +727,33 @@ package body Par_SCO is\n       To   : Source_Ptr;\n       Last : Boolean)\n    is\n+      function To_Source_Location (S : Source_Ptr) return Source_Location;\n+      --  Converts Source_Ptr value to Source_Location (line/col) format\n+\n+      ------------------------\n+      -- To_Source_Location --\n+      ------------------------\n+\n+      function To_Source_Location (S : Source_Ptr) return Source_Location is\n+      begin\n+         if S = No_Location then\n+            return No_Source_Location;\n+         else\n+            return\n+              (Line => Get_Logical_Line_Number (S),\n+               Col  => Get_Column_Number (S));\n+         end if;\n+      end To_Source_Location;\n+\n+   --  Start of processing for Set_Table_Entry\n+\n    begin\n-      SCO_Table.Append ((C1   => C1,\n-                         C2   => C2,\n-                         From => From,\n-                         To   => To,\n-                         Last => Last));\n+      Add_SCO\n+        (C1   => C1,\n+         C2   => C2,\n+         From => To_Source_Location (From),\n+         To   => To_Source_Location (To),\n+         Last => Last);\n    end Set_Table_Entry;\n \n    -----------------------------------------"}, {"sha": "31ed2d8a6d00155b97f9671651cf8cb28e065231", "filename": "gcc/ada/par_sco.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fpar_sco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fpar_sco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.ads?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -211,7 +211,12 @@ package Par_SCO is\n    --  unit U in the ALI file, as recorded by previous calls to SCO_Record,\n    --  possibly modified by calls to Set_SCO_Condition.\n \n+   procedure dsco;\n+   --  Debug routine to dump SCO table. This is a raw format dump showing\n+   --  exactly what the tables contain.\n+\n    procedure pscos;\n-   --  Debugging procedure to output contents of SCO binary tables in SCOs\n+   --  Debugging procedure to output contents of SCO binary tables in the\n+   --  format in which they appear in an ALI file.\n \n end Par_SCO;"}, {"sha": "d7667b85f3244f5466190a19ef413ae1cde6f320", "filename": "gcc/ada/put_scos.adb", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fput_scos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fput_scos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fput_scos.adb?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -29,7 +29,7 @@ procedure Put_SCOs is\n begin\n    --  Loop through entries in SCO_Unit_Table\n \n-   for U in SCO_Unit_Table.First .. SCO_Unit_Table.Last loop\n+   for U in 1 .. SCO_Unit_Table.Last loop\n       declare\n          SUT : SCO_Unit_Table_Entry renames SCO_Unit_Table.Table (U);\n \n@@ -50,16 +50,23 @@ begin\n \n          --  Loop through SCO entries for this unit\n \n-         Start := SCO_Table.First;\n-         Stop  := SCO_Table.Last;\n+         Start := SUT.From;\n+         Stop  := SUT.To;\n          loop\n-            declare\n+            exit when Start = Stop + 1;\n+            pragma Assert (Start <= Stop);\n+\n+            Output_SCO_Line : declare\n                T : SCO_Table_Entry renames SCO_Table.Table (Start);\n \n-               procedure Output_Range;\n+               procedure Output_Range (T : SCO_Table_Entry);\n                --  Outputs T.From and T.To in line:col-line:col format\n \n-               procedure Output_Range is\n+               ------------------\n+               -- Output_Range --\n+               ------------------\n+\n+               procedure Output_Range (T : SCO_Table_Entry) is\n                begin\n                   Write_Info_Nat  (Nat (T.From.Line));\n                   Write_Info_Char (':');\n@@ -70,6 +77,8 @@ begin\n                   Write_Info_Nat  (Nat (T.To.Col));\n                end Output_Range;\n \n+            --  Start of processing for Output_SCO_Line\n+\n             begin\n                Write_Info_Initiate ('C');\n                Write_Info_Char (T.C1);\n@@ -80,7 +89,7 @@ begin\n \n                   when 'S' | 'T' =>\n                      Write_Info_Char (' ');\n-                     Output_Range;\n+                     Output_Range (T);\n \n                      --  Decision\n \n@@ -107,7 +116,7 @@ begin\n \n                            else\n                               Write_Info_Char (T.C2);\n-                              Output_Range;\n+                              Output_Range (T);\n                            end if;\n \n                            exit when T.Last;\n@@ -120,19 +129,10 @@ begin\n                end case;\n \n                Write_Info_Terminate;\n-            end;\n+            end Output_SCO_Line;\n \n-            exit when Start = Stop;\n             Start := Start + 1;\n-\n-            pragma Assert (Start <= Stop);\n          end loop;\n       end;\n-\n-      --  If not last entry, blank line\n-\n-      if U /= SCO_Unit_Table.Last then\n-         Write_Info_Terminate;\n-      end if;\n    end loop;\n end Put_SCOs;"}, {"sha": "d8d77202b7d529ee9aa1421d7e5ca6e2e4df58cf", "filename": "gcc/ada/put_scos.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fput_scos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fput_scos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fput_scos.ads?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -31,7 +31,10 @@\n with Types; use Types;\n \n generic\n-   --  The following procedures are used to output text information\n+   --  The following procedures are used to output text information. The\n+   --  destination of the text information is thus under control of the\n+   --  particular instantiation. In particular, this procedure is used to\n+   --  write output to the ALI file, and also for debugging output.\n \n    with procedure Write_Info_Char (C : Character) is <>;\n    --  Outputs one character"}, {"sha": "c559e6f8dc44b025c95dbb68ffd3f0007e9b8d59", "filename": "gcc/ada/scos.adb", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fscos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fscos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.adb?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -25,9 +25,13 @@\n \n package body SCOs is\n \n+   -------------\n+   -- Add_SCO --\n+   -------------\n+\n    procedure Add_SCO\n-     (From : Source_Location := No_Location;\n-      To   : Source_Location := No_Location;\n+     (From : Source_Location := No_Source_Location;\n+      To   : Source_Location := No_Source_Location;\n       C1   : Character       := ' ';\n       C2   : Character       := ' ';\n       Last : Boolean         := False)\n@@ -36,4 +40,18 @@ package body SCOs is\n       SCO_Table.Append ((From, To, C1, C2, Last));\n    end Add_SCO;\n \n+   ----------------\n+   -- Initialize --\n+   ----------------\n+\n+   procedure Initialize is\n+   begin\n+      SCO_Table.Init;\n+      SCO_Unit_Table.Init;\n+\n+      --  Set dummy zeroth entry for sort routine, real entries start at 1\n+\n+      SCO_Unit_Table.Increment_Last;\n+   end Initialize;\n+\n end SCOs;"}, {"sha": "b1d99e169faa7e1a5a1da44f3b3d5053f6799801", "filename": "gcc/ada/scos.ads", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fscos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fscos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.ads?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -210,7 +210,7 @@ package SCOs is\n       Col  : Column_Number;\n    end record;\n \n-   No_Location : Source_Location := (No_Line_Number, No_Column_Number);\n+   No_Source_Location : Source_Location := (No_Line_Number, No_Column_Number);\n \n    type SCO_Table_Entry is record\n       From : Source_Location;\n@@ -282,9 +282,8 @@ package SCOs is\n \n    --  This table keeps track of the units and the corresponding starting and\n    --  ending indexes (From, To) in the SCO table. Note that entry zero is\n-   --  unused, it is for convenience in calling the sort routine. The Info\n-   --  field is an identifier supplied when an entry is built (e.g. in the\n-   --  compiler this is the Unit_Number_Type value.\n+   --  unused, it is for convenience in calling the sort routine. Thus the\n+   --  real lower bound for active entries is 1.\n \n    type SCO_Unit_Index is new Int;\n    --  Used to index values in this table. Values start at 1 and are assigned\n@@ -307,17 +306,20 @@ package SCOs is\n    package SCO_Unit_Table is new GNAT.Table (\n      Table_Component_Type => SCO_Unit_Table_Entry,\n      Table_Index_Type     => SCO_Unit_Index,\n-     Table_Low_Bound      => 0,\n+     Table_Low_Bound      => 0, -- see note above on sorting\n      Table_Initial        => 20,\n      Table_Increment      => 200);\n \n    -----------------\n    -- Subprograms --\n    -----------------\n \n+   procedure Initialize;\n+   --  Reset tables for a new compilation\n+\n    procedure Add_SCO\n-     (From : Source_Location := No_Location;\n-      To   : Source_Location := No_Location;\n+     (From : Source_Location := No_Source_Location;\n+      To   : Source_Location := No_Source_Location;\n       C1   : Character       := ' ';\n       C2   : Character       := ' ';\n       Last : Boolean         := False);"}, {"sha": "ffda3abaeec8fa12681553d7b0056745878bd1e7", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -954,7 +954,7 @@ __gnat_get_task_options (void)\n \n   /* Force VX_FP_TASK because it is almost always required */\n   options |= VX_FP_TASK;\n-#if defined (_SPE_)\n+#if defined (__SPE__)\n   options |= VX_SPE_TASK;\n #endif\n "}, {"sha": "5e168d2798de3b5353a2645db7f9371b1dbdc932", "filename": "gcc/ada/ug_words", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fug_words", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fug_words", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fug_words?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -66,6 +66,7 @@ gcc -c          ^ GNAT COMPILE\n -gnateG         ^ /GENERATE_PROCESSED_SOURCE\n -gnatem         ^ /MAPPING_FILE\n -gnatep         ^ /DATA_PREPROCESSING\n+-gnateS         ^ /SCO_OUTPUT\n -gnatE          ^ /CHECKS=ELABORATION\n -gnatf          ^ /REPORT_ERRORS=FULL\n -gnatF          ^ /UPPERCASE_EXTERNALS"}, {"sha": "aac1c783c2363f1de5d4ca0588441a7f09b7b656", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=240fe2a4ac0ed2c262365e8c13d7bc934fb5fc19", "patch": "@@ -2183,6 +2183,16 @@ package VMS_Data is\n    --\n    --    Build against an alternate runtime system named xxx or RTS-xxx.\n \n+   S_GCC_SCO     : aliased constant S := \"/SCO_OUTPUT \"   &\n+                                            \"-gnateS\";\n+   --        /NOSCO_OUTPUT (D)\n+   --        /SCO_OUTPUT\n+   --\n+   --   Controls the output of SCO (Source Coverage Obligation) information\n+   --   in the generated ALI file. This information is used by advanced source\n+   --   coverage tools. For a full description of the SCO format, see unit\n+   --   SCOs in the compiler sources (sco.ads/sco.adb).\n+\n    S_GCC_Search  : aliased constant S := \"/SEARCH=*\"                       &\n                                             \"-I*\";\n    --        /SEARCH=(directory[,...])\n@@ -3474,6 +3484,7 @@ package VMS_Data is\n                      S_GCC_Repinfo 'Access,\n                      S_GCC_RepinfX 'Access,\n                      S_GCC_RTS     'Access,\n+                     S_GCC_SCO     'Access,\n                      S_GCC_Search  'Access,\n                      S_GCC_Style   'Access,\n                      S_GCC_StyleX  'Access,"}]}