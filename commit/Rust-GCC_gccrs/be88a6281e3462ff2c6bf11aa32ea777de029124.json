{"sha": "be88a6281e3462ff2c6bf11aa32ea777de029124", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU4OGE2MjgxZTM0NjJmZjJjNmJmMTFhYTMyZWE3NzdkZTAyOTEyNA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2004-08-23T08:47:08Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-08-23T08:47:08Z"}, "message": "tree.h (enum size_type_kind): Remove USIZETYPE, UBITSIZETYPE.\n\n\t* tree.h (enum size_type_kind): Remove USIZETYPE, UBITSIZETYPE.\n\t(usize_type, ubitsizetype): Remove.\n\t* stor-layout.c (set_sizetype): Don't initialize usizetype,\n\tubitsizetype.\n\t* fold-const.c (size_diffop): TYPE can never be ubitsizetype.\n\nFrom-SVN: r86422", "tree": {"sha": "5d3b1898069b4a5386b068a0d2c742f4e6239425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d3b1898069b4a5386b068a0d2c742f4e6239425"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be88a6281e3462ff2c6bf11aa32ea777de029124", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be88a6281e3462ff2c6bf11aa32ea777de029124", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be88a6281e3462ff2c6bf11aa32ea777de029124", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be88a6281e3462ff2c6bf11aa32ea777de029124/comments", "author": null, "committer": null, "parents": [{"sha": "8dd16ecc7d71b9f1e1bdc4d870cf2436db9594a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dd16ecc7d71b9f1e1bdc4d870cf2436db9594a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dd16ecc7d71b9f1e1bdc4d870cf2436db9594a9"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "a673be7976b403b0ebafeca0d638ad7cb9e44fe5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be88a6281e3462ff2c6bf11aa32ea777de029124/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be88a6281e3462ff2c6bf11aa32ea777de029124/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be88a6281e3462ff2c6bf11aa32ea777de029124", "patch": "@@ -1,5 +1,11 @@\n 2004-08-23  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\t* tree.h (enum size_type_kind): Remove USIZETYPE, UBITSIZETYPE.\n+\t(usize_type, ubitsizetype): Remove.\n+\t* stor-layout.c (set_sizetype): Don't initialize usizetype,\n+\tubitsizetype.\n+\t* fold-const.c (size_diffop): TYPE can never be ubitsizetype.\n+\n \t* tree.h (build_distinct_type_copy): New.\n \t(build_type_copy): ... here.  Rename to ...\n \t(build_variant_type_copy): ... here."}, {"sha": "25fa07134454d78aaebccae9dc68c17a7a913741", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be88a6281e3462ff2c6bf11aa32ea777de029124/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be88a6281e3462ff2c6bf11aa32ea777de029124/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=be88a6281e3462ff2c6bf11aa32ea777de029124", "patch": "@@ -1728,8 +1728,7 @@ size_diffop (tree arg0, tree arg1)\n   if (!TYPE_UNSIGNED (type))\n     return size_binop (MINUS_EXPR, arg0, arg1);\n \n-  ctype = (type == bitsizetype || type == ubitsizetype\n-\t   ? sbitsizetype : ssizetype);\n+  ctype = type == bitsizetype ? sbitsizetype : ssizetype;\n \n   /* If either operand is not a constant, do the conversions to the signed\n      type and subtract.  The hardware will do the right thing with any"}, {"sha": "7f188f2783912b228bc21c60414c51668291a1e8", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be88a6281e3462ff2c6bf11aa32ea777de029124/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be88a6281e3462ff2c6bf11aa32ea777de029124/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=be88a6281e3462ff2c6bf11aa32ea777de029124", "patch": "@@ -1921,17 +1921,13 @@ set_sizetype (tree type)\n \n   if (TYPE_UNSIGNED (type))\n     {\n-      usizetype = sizetype;\n-      ubitsizetype = bitsizetype;\n       ssizetype = copy_node (make_signed_type (oprecision));\n       sbitsizetype = copy_node (make_signed_type (precision));\n     }\n   else\n     {\n       ssizetype = sizetype;\n       sbitsizetype = bitsizetype;\n-      usizetype = copy_node (make_unsigned_type (oprecision));\n-      ubitsizetype = copy_node (make_unsigned_type (precision));\n     }\n \n   TYPE_NAME (bitsizetype) = get_identifier (\"bit_size_type\");"}, {"sha": "920abe7efd65298dbb047fd3762346be5240650c", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be88a6281e3462ff2c6bf11aa32ea777de029124/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be88a6281e3462ff2c6bf11aa32ea777de029124/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=be88a6281e3462ff2c6bf11aa32ea777de029124", "patch": "@@ -3077,20 +3077,16 @@ enum size_type_kind\n {\n   SIZETYPE,\t\t/* Normal representation of sizes in bytes.  */\n   SSIZETYPE,\t\t/* Signed representation of sizes in bytes.  */\n-  USIZETYPE,\t\t/* Unsigned representation of sizes in bytes.  */\n   BITSIZETYPE,\t\t/* Normal representation of sizes in bits.  */\n   SBITSIZETYPE,\t\t/* Signed representation of sizes in bits.  */\n-  UBITSIZETYPE,\t        /* Unsigned representation of sizes in bits.  */\n   TYPE_KIND_LAST};\n \n extern GTY(()) tree sizetype_tab[(int) TYPE_KIND_LAST];\n \n #define sizetype sizetype_tab[(int) SIZETYPE]\n #define bitsizetype sizetype_tab[(int) BITSIZETYPE]\n #define ssizetype sizetype_tab[(int) SSIZETYPE]\n-#define usizetype sizetype_tab[(int) USIZETYPE]\n #define sbitsizetype sizetype_tab[(int) SBITSIZETYPE]\n-#define ubitsizetype sizetype_tab[(int) UBITSIZETYPE]\n \n extern tree size_binop (enum tree_code, tree, tree);\n extern tree size_diffop (tree, tree);"}]}