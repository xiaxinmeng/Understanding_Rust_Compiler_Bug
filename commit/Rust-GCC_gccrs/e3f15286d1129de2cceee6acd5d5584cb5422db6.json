{"sha": "e3f15286d1129de2cceee6acd5d5584cb5422db6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNmMTUyODZkMTEyOWRlMmNjZWVlNmFjZDVkNTU4NGNiNTQyMmRiNg==", "commit": {"author": {"name": "Richard Henderson", "email": "richard.henderson@linaro.org", "date": "2019-09-19T14:36:24Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2019-09-19T14:36:24Z"}, "message": "aarch64: Extend %R for integer registers\n\n\t* config/aarch64/aarch64.c (aarch64_print_operand): Allow integer\n\tregisters with %R.\n\nFrom-SVN: r275964", "tree": {"sha": "aed05ac7c1041b07231b5a25ae13c4f8d3e40014", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aed05ac7c1041b07231b5a25ae13c4f8d3e40014"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3f15286d1129de2cceee6acd5d5584cb5422db6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f15286d1129de2cceee6acd5d5584cb5422db6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3f15286d1129de2cceee6acd5d5584cb5422db6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f15286d1129de2cceee6acd5d5584cb5422db6/comments", "author": {"login": "rth7680", "id": 2529319, "node_id": "MDQ6VXNlcjI1MjkzMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2529319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rth7680", "html_url": "https://github.com/rth7680", "followers_url": "https://api.github.com/users/rth7680/followers", "following_url": "https://api.github.com/users/rth7680/following{/other_user}", "gists_url": "https://api.github.com/users/rth7680/gists{/gist_id}", "starred_url": "https://api.github.com/users/rth7680/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rth7680/subscriptions", "organizations_url": "https://api.github.com/users/rth7680/orgs", "repos_url": "https://api.github.com/users/rth7680/repos", "events_url": "https://api.github.com/users/rth7680/events{/privacy}", "received_events_url": "https://api.github.com/users/rth7680/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "efe126563bb8d28cb3958423a735d0021e75702f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe126563bb8d28cb3958423a735d0021e75702f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efe126563bb8d28cb3958423a735d0021e75702f"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "3081b8be62d5031a2c5eb11f98f2513cec505095", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f15286d1129de2cceee6acd5d5584cb5422db6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f15286d1129de2cceee6acd5d5584cb5422db6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3f15286d1129de2cceee6acd5d5584cb5422db6", "patch": "@@ -1,3 +1,8 @@\n+2019-09-19  Richard Henderson  <richard.henderson@linaro.org>\n+\n+\t* config/aarch64/aarch64.c (aarch64_print_operand): Allow integer\n+\tregisters with %R.\n+\n 2019-09-19  Feng Xue  <fxue@os.amperecomputing.com>\n \n \t* ipa-fnsummary.c (set_cond_stmt_execution_predicate): Do not compute"}, {"sha": "99d51e2aef9ecdd9c68a2d541a54765f3e15ae1b", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f15286d1129de2cceee6acd5d5584cb5422db6/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f15286d1129de2cceee6acd5d5584cb5422db6/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=e3f15286d1129de2cceee6acd5d5584cb5422db6", "patch": "@@ -8420,7 +8420,7 @@ sizetochar (int size)\n      'S/T/U/V':\t\tPrint a FP/SIMD register name for a register list.\n \t\t\tThe register printed is the FP/SIMD register name\n \t\t\tof X + 0/1/2/3 for S/T/U/V.\n-     'R':\t\tPrint a scalar FP/SIMD register name + 1.\n+     'R':\t\tPrint a scalar Integer/FP/SIMD register name + 1.\n      'X':\t\tPrint bottom 16 bits of integer constant in hex.\n      'w/x':\t\tPrint a general register name or the zero register\n \t\t\t(32-bit or 64-bit).\n@@ -8623,12 +8623,13 @@ aarch64_print_operand (FILE *f, rtx x, int code)\n       break;\n \n     case 'R':\n-      if (!REG_P (x) || !FP_REGNUM_P (REGNO (x)))\n-\t{\n-\t  output_operand_lossage (\"incompatible floating point / vector register operand for '%%%c'\", code);\n-\t  return;\n-\t}\n-      asm_fprintf (f, \"q%d\", REGNO (x) - V0_REGNUM + 1);\n+      if (REG_P (x) && FP_REGNUM_P (REGNO (x)))\n+\tasm_fprintf (f, \"q%d\", REGNO (x) - V0_REGNUM + 1);\n+      else if (REG_P (x) && GP_REGNUM_P (REGNO (x)))\n+\tasm_fprintf (f, \"x%d\", REGNO (x) - R0_REGNUM + 1);\n+      else\n+\toutput_operand_lossage (\"incompatible register operand for '%%%c'\",\n+\t\t\t\tcode);\n       break;\n \n     case 'X':"}]}