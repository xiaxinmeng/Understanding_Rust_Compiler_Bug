{"sha": "f6abf004d11245fdbb95a039d03e5ffa7aaaae8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZhYmYwMDRkMTEyNDVmZGJiOTVhMDM5ZDAzZTVmZmE3YWFhYWU4ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2009-01-06T16:24:30Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-01-06T16:24:30Z"}, "message": "struct-ret-3.c (CHUNK_SIZE): New define.\n\n\t* gcc.dg/struct-ret-3.c (CHUNK_SIZE): New define.  Use CHUNK_SIZE\n\tinstead of hardcoded number.  Increase CHUNK_SIZE to 16384 for\n\tlarge stack sizes.\n\nFrom-SVN: r143123", "tree": {"sha": "088e88e85b51cdc06db2b70e97a9da655bd62f6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/088e88e85b51cdc06db2b70e97a9da655bd62f6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6abf004d11245fdbb95a039d03e5ffa7aaaae8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6abf004d11245fdbb95a039d03e5ffa7aaaae8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6abf004d11245fdbb95a039d03e5ffa7aaaae8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6abf004d11245fdbb95a039d03e5ffa7aaaae8e/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "271c069e207f82ad589297587e5b03b4305d24a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/271c069e207f82ad589297587e5b03b4305d24a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/271c069e207f82ad589297587e5b03b4305d24a0"}], "stats": {"total": 42, "additions": 28, "deletions": 14}, "files": [{"sha": "cdd20c657bc573dbd134f4ed5c073e239e667e3f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6abf004d11245fdbb95a039d03e5ffa7aaaae8e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6abf004d11245fdbb95a039d03e5ffa7aaaae8e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6abf004d11245fdbb95a039d03e5ffa7aaaae8e", "patch": "@@ -1,3 +1,9 @@\n+2009-01-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.dg/struct-ret-3.c (CHUNK_SIZE): New define.  Use CHUNK_SIZE\n+\tinstead of hardcoded number.  Increase CHUNK_SIZE to 16384 for\n+\tlarge stack sizes.\n+\n 2009-01-06  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tAVX Programming Reference (December, 2008)"}, {"sha": "0be43b6d6bc596e13685be9400f87f69838a0431", "filename": "gcc/testsuite/gcc.dg/struct-ret-3.c", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6abf004d11245fdbb95a039d03e5ffa7aaaae8e/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-ret-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6abf004d11245fdbb95a039d03e5ffa7aaaae8e/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-ret-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-ret-3.c?ref=f6abf004d11245fdbb95a039d03e5ffa7aaaae8e", "patch": "@@ -9,6 +9,12 @@\n #include <errno.h>\n #include <unistd.h>\n \n+#if defined(STACK_SIZE) && (STACK_SIZE < 128*1024)\n+ #define CHUNK_SIZE 4096\n+#else\n+ #define CHUNK_SIZE 16384\n+#endif\n+\n unsigned long ossAlignX(unsigned long i, unsigned long X)\n {\n    return ((i + (X - 1)) & ~(unsigned long) (X - 1));\n@@ -59,46 +65,48 @@ int main(void)\n \n    struct stuff\n    {\n-      char c0[4096-sizeof(struct XXX)];\n+      char c0[CHUNK_SIZE-sizeof(struct XXX)];\n       struct XXX o;\n-      char c1[4096*2-sizeof(struct SQLU_DATAPART_0)];\n+      char c1[CHUNK_SIZE*2-sizeof(struct SQLU_DATAPART_0)];\n       struct SQLU_DATAPART_0 dp;\n-      char c2[4096*2-sizeof(struct SQLU_DICT_INFO_0)];\n+      char c2[CHUNK_SIZE*2-sizeof(struct SQLU_DICT_INFO_0)];\n       struct SQLU_DICT_INFO_0 di;\n-      char c3[4096];\n+      char c3[CHUNK_SIZE];\n    };\n \n-   char buf[sizeof(struct stuff)+4096];\n-   struct stuff *u = (struct stuff *)ossAlignX((unsigned long)&buf[0], 4096);\n+   char buf[sizeof(struct stuff)+CHUNK_SIZE];\n+   struct stuff *u\n+     = (struct stuff *)ossAlignX((unsigned long)&buf[0], CHUNK_SIZE);\n \n-   /* This test assumes system memory page size of 4096 bytes or less.  */\n-   if (sysconf(_SC_PAGESIZE) > 4096)\n+   /* This test assumes system memory page\n+      size of CHUNK_SIZE bytes or less.  */\n+   if (sysconf(_SC_PAGESIZE) > CHUNK_SIZE)\n      return 0;\n \n    memset(u, 1, sizeof(struct stuff));\n    u->c1[0] = '\\xAA';\n    u->c2[0] = '\\xBB';\n    u->c3[0] = '\\xCC';\n \n-   rc = mprotect(u->c1, 4096, PROT_NONE);\n+   rc = mprotect(u->c1, CHUNK_SIZE, PROT_NONE);\n    if (rc == -1)\n       printf(\"mprotect:c1: %d: %d(%s)\\n\", rc, errno, strerror(errno));\n \n-   rc = mprotect(u->c2, 4096, PROT_NONE);\n+   rc = mprotect(u->c2, CHUNK_SIZE, PROT_NONE);\n    if (rc == -1)\n       printf(\"mprotect:c2: %d: %d(%s)\\n\", rc, errno, strerror(errno));\n \n-   rc = mprotect(u->c3, 4096, PROT_NONE);\n+   rc = mprotect(u->c3, CHUNK_SIZE, PROT_NONE);\n    if (rc == -1)\n       printf(\"mprotect:c3: %d: %d(%s)\\n\", rc, errno, strerror(errno));\n \n    u->o.m_pDatapart = &u->dp;\n    u->dp.pDictRidderInfo = &u->di;\n    Initialize(&u->o, 0);\n \n-   mprotect(u->c1, 4096, PROT_READ|PROT_WRITE);\n-   mprotect(u->c2, 4096, PROT_READ|PROT_WRITE);\n-   mprotect(u->c3, 4096, PROT_READ|PROT_WRITE);\n+   mprotect(u->c1, CHUNK_SIZE, PROT_READ|PROT_WRITE);\n+   mprotect(u->c2, CHUNK_SIZE, PROT_READ|PROT_WRITE);\n+   mprotect(u->c3, CHUNK_SIZE, PROT_READ|PROT_WRITE);\n \n    return 0;\n }"}]}