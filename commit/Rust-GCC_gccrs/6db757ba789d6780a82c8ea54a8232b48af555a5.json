{"sha": "6db757ba789d6780a82c8ea54a8232b48af555a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRiNzU3YmE3ODlkNjc4MGE4MmM4ZWE1NGE4MjMyYjQ4YWY1NTVhNQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-01-03T23:28:10Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-01-03T23:28:10Z"}, "message": "lib1funcs.asm (__USER_LABEL_PREFIX__): Define if not already.\n\n\t* arm/lib1funcs.asm (__USER_LABEL_PREFIX__): Define if not already.\n\t(CONCAT1,CONCAT2,SYM): Define.\n\t(__udivsi3,__divsi3,__umodsi3,__modsi3,__div0): Use SYM to define\n\tglobal labels.\n\nFrom-SVN: r10939", "tree": {"sha": "7b895b6ce961dfd0078e35807b9f878bef1d93f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b895b6ce961dfd0078e35807b9f878bef1d93f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6db757ba789d6780a82c8ea54a8232b48af555a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6db757ba789d6780a82c8ea54a8232b48af555a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6db757ba789d6780a82c8ea54a8232b48af555a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6db757ba789d6780a82c8ea54a8232b48af555a5/comments", "author": null, "committer": null, "parents": [{"sha": "18a686c082bf449f8709b05e365b92bc41572823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18a686c082bf449f8709b05e365b92bc41572823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18a686c082bf449f8709b05e365b92bc41572823"}], "stats": {"total": 41, "additions": 27, "deletions": 14}, "files": [{"sha": "5490e25f2ff9a9fac513c3f14a5151984402195b", "filename": "gcc/config/arm/lib1funcs.asm", "status": "modified", "additions": 27, "deletions": 14, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db757ba789d6780a82c8ea54a8232b48af555a5/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db757ba789d6780a82c8ea54a8232b48af555a5/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flib1funcs.asm?ref=6db757ba789d6780a82c8ea54a8232b48af555a5", "patch": "@@ -275,16 +275,29 @@ Ldiv_zero:\n #define RETCOND\n #endif\n \n+#ifndef __USER_LABEL_PREFIX__\n+#define __USER_LABEL_PREFIX__ _\n+#endif\n+\n+/* ANSI concatenation macros.  */\n+\n+#define CONCAT1(a, b) CONCAT2(a, b)\n+#define CONCAT2(a, b) a ## b\n+\n+/* Use the right prefix for global labels.  */\n+\n+#define SYM(x) CONCAT1 (__USER_LABEL_PREFIX__, x)\n+\n #ifdef L_udivsi3\n \n ip\t.req\tr12\n sp\t.req\tr13\n lr\t.req\tr14\n pc\t.req\tr15\n .text\n-\t.globl ___udivsi3\n+\t.globl SYM (__udivsi3)\n \t.align 0\n-___udivsi3:\n+SYM (__udivsi3):\n \tstmdb\tsp!, {r4, r5, lr}\n \t@ Ready to divide.  Compute size of quotient; scale comparand.\n \tmovs\tlr, r1\n@@ -596,7 +609,7 @@ Lgot_result:\n Ldiv_zero:\n \t@ Divide by zero trap.  If it returns, return 0 (about as\n \t@ wrong as possible, but that is what SunOS does...).\n-\tbl\t___div0\n+\tbl\tSYM (__div0)\n \tmov\tr0, #0\n \tldmia\tsp!, {r4, r5, pc}RETCOND\n \n@@ -609,9 +622,9 @@ sp\t.req\tr13\n lr\t.req\tr14\n pc\t.req\tr15\n .text\n-\t.globl ___divsi3\n+\t.globl SYM (__divsi3)\n \t.align 0\n-___divsi3:\n+SYM (__divsi3):\n \tstmdb\tsp!, {r4, r5, r6, lr}\n \t@ compute sign of result; if neither is negative, no problem\n \teor\tr6, r1, r0\t@ compute sign\n@@ -930,7 +943,7 @@ Lgot_result:\n Ldiv_zero:\n \t@ Divide by zero trap.  If it returns, return 0 (about as\n \t@ wrong as possible, but that is what SunOS does...).\n-\tbl\t___div0\n+\tbl\tSYM (__div0)\n \tmov\tr0, #0\n \tldmia\tsp!, {r4, r5, r6, pc}RETCOND\n \n@@ -943,9 +956,9 @@ sp\t.req\tr13\n lr\t.req\tr14\n pc\t.req\tr15\n .text\n-\t.globl ___umodsi3\n+\t.globl SYM (__umodsi3)\n \t.align 0\n-___umodsi3:\n+SYM (__umodsi3):\n \tstmdb\tsp!, {r4, r5, lr}\n \t@ Ready to divide.  Compute size of quotient; scale comparand.\n \tmovs\tlr, r1\n@@ -1257,7 +1270,7 @@ Lgot_result:\n Ldiv_zero:\n \t@ Divide by zero trap.  If it returns, return 0 (about as\n \t@ wrong as possible, but that is what SunOS does...).\n-\tbl\t___div0\n+\tbl\tSYM (__div0)\n \tmov\tr0, #0\n \tldmia\tsp!, {r4, r5, pc}RETCOND\n \n@@ -1270,9 +1283,9 @@ sp\t.req\tr13\n lr\t.req\tr14\n pc\t.req\tr15\n .text\n-\t.globl ___modsi3\n+\t.globl SYM (__modsi3)\n \t.align 0\n-___modsi3:\n+SYM (__modsi3):\n \tstmdb\tsp!, {r4, r5, r6, lr}\n \t@ compute sign of result; if neither is negative, no problem\n \tmov\tr6, r0\n@@ -1591,17 +1604,17 @@ Lgot_result:\n Ldiv_zero:\n \t@ Divide by zero trap.  If it returns, return 0 (about as\n \t@ wrong as possible, but that is what SunOS does...).\n-\tbl\t___div0\n+\tbl\tSYM (__div0)\n \tmov\tr0, #0\n \tldmia\tsp!, {r4, r5, r6, pc}RETCOND\n \n #endif /* L_modsi3 */\n \n #ifdef L_dvmd_tls\n \n-\t.globl ___div0\n+\t.globl SYM (__div0)\n \t.align 0\n-___div0:\n+SYM (__div0):\n \tRET\tpc, lr\n \n #endif /* L_divmodsi_tools */"}]}