{"sha": "e990551a821ea234e518ef75a380f0c0ab7af2c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk5MDU1MWE4MjFlYTIzNGU1MThlZjc1YTM4MGYwYzBhYjdhZjJjMA==", "commit": {"author": {"name": "Jayant R Sonar", "email": "jayant.sonar@kpitcummins.com", "date": "2008-03-25T13:36:11Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2008-03-25T13:36:11Z"}, "message": "constraints.md (I28): New constraint.\n\n\t* config/sh/constraints.md (I28): New constraint.\n\t* config/sh/sh.c (broken_move): Add support for movi20s.\n\t* config/sh/sh.md (movsi_ie): Add the alternative for\n\tmovi20s.\n\n\t* gcc.target/sh/sh2a-movi20s.c: New test.\n\n\nCo-Authored-By: Naveen.H.S <naveen.hs@kpitcummins.com>\n\nFrom-SVN: r133514", "tree": {"sha": "cdcc23b1a70ca0b9624a0b6cd457d53893a02ff6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdcc23b1a70ca0b9624a0b6cd457d53893a02ff6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e990551a821ea234e518ef75a380f0c0ab7af2c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e990551a821ea234e518ef75a380f0c0ab7af2c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e990551a821ea234e518ef75a380f0c0ab7af2c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e990551a821ea234e518ef75a380f0c0ab7af2c0/comments", "author": null, "committer": null, "parents": [{"sha": "561642fa67798158762265f5100e3052275fe970", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/561642fa67798158762265f5100e3052275fe970", "html_url": "https://github.com/Rust-GCC/gccrs/commit/561642fa67798158762265f5100e3052275fe970"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "7ca50285e1f81343049fe1c2a92b65820559fab4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e990551a821ea234e518ef75a380f0c0ab7af2c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e990551a821ea234e518ef75a380f0c0ab7af2c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e990551a821ea234e518ef75a380f0c0ab7af2c0", "patch": "@@ -1,3 +1,11 @@\n+2008-03-25  Jayant Sonar  <Jayant.sonar@kpitcummins.com>\n+\t    Naveen.H.S  <naveen.hs@kpitcummins.com>\n+\n+\t* config/sh/constraints.md (I28): New constraint.\n+\t* config/sh/sh.c (broken_move): Add support for movi20s.\n+\t* config/sh/sh.md (movsi_ie): Add the alternative for\n+\tmovi20s.\n+\n 2008-03-25  Anil Paranjape  <anil.paranjape@kpitcummins.com>\n \t    Jayant Sonar  <Jayant.sonar@kpitcummins.com>\n \t    Naveen.H.S  <naveen.hs@kpitcummins.com>"}, {"sha": "7509fae67ee1cfd863d4a9d06551f89f938cc14a", "filename": "gcc/config/sh/constraints.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e990551a821ea234e518ef75a380f0c0ab7af2c0/gcc%2Fconfig%2Fsh%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e990551a821ea234e518ef75a380f0c0ab7af2c0/gcc%2Fconfig%2Fsh%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fconstraints.md?ref=e990551a821ea234e518ef75a380f0c0ab7af2c0", "patch": "@@ -112,6 +112,12 @@\n        (match_test \"ival >= -524288 && ival <= 524287\")\n        (match_test \"TARGET_SH2A\")))\n \n+(define_constraint \"I28\"\n+  \"A signed 28-bit constant, as used in SH2A movi20s.\"\n+  (and (match_code \"const_int\")\n+       (match_test \"ival >=  -134217728 && ival <= 134217727\")\n+       (match_test \"(ival & 255) == 0\")\n+       (match_test \"TARGET_SH2A\")))\n (define_constraint \"J16\"\n   \"0xffffffff00000000 or 0x00000000ffffffff.\"\n   (and (match_code \"const_int\")"}, {"sha": "df959d82746a51e70d4246e171964365165a8cea", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e990551a821ea234e518ef75a380f0c0ab7af2c0/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e990551a821ea234e518ef75a380f0c0ab7af2c0/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=e990551a821ea234e518ef75a380f0c0ab7af2c0", "patch": "@@ -3753,7 +3753,8 @@ broken_move (rtx insn)\n \t\t&& FP_REGISTER_P (REGNO (SET_DEST (pat))))\n \t  && ! (TARGET_SH2A\n \t\t&& GET_MODE (SET_DEST (pat)) == SImode\n-\t\t&& satisfies_constraint_I20 (SET_SRC (pat)))\n+\t\t&& (satisfies_constraint_I20 (SET_SRC (pat))\n+\t\t   || satisfies_constraint_I28 (SET_SRC (pat))))\n \t  && ! satisfies_constraint_I08 (SET_SRC (pat)))\n \treturn 1;\n     }"}, {"sha": "750e9d36d96df56fe86297622e7eb311542f94e7", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e990551a821ea234e518ef75a380f0c0ab7af2c0/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e990551a821ea234e518ef75a380f0c0ab7af2c0/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=e990551a821ea234e518ef75a380f0c0ab7af2c0", "patch": "@@ -4937,9 +4937,9 @@ label:\n ;; TARGET_FMOVD is in effect, and mode switching is done before reload.\n (define_insn \"movsi_ie\"\n   [(set (match_operand:SI 0 \"general_movdst_operand\"\n-\t    \"=r,r,r,r,t,r,r,r,r,m,<,<,x,l,x,l,y,<,r,y,r,*f,y,*f,y\")\n+\t    \"=r,r,r,r,r,t,r,r,r,r,m,<,<,x,l,x,l,y,<,r,y,r,*f,y,*f,y\")\n \t(match_operand:SI 1 \"general_movsrc_operand\"\n-\t \"Q,r,I08,I20,r,mr,x,l,t,r,x,l,r,r,>,>,>,y,i,r,y,y,*f,*f,y\"))]\n+\t \"Q,r,I08,I20,I28,r,mr,x,l,t,r,x,l,r,r,>,>,>,y,i,r,y,y,*f,*f,y\"))]\n   \"(TARGET_SH2E || TARGET_SH2A)\n    && (register_operand (operands[0], SImode)\n        || register_operand (operands[1], SImode))\"\n@@ -4948,6 +4948,7 @@ label:\n \tmov\t%1,%0\n \tmov\t%1,%0\n \tmovi20\t%1,%0\n+\tmovi20s\t%1,%0\n \tcmp/pl\t%1\n \tmov.l\t%1,%0\n \tsts\t%1,%0\n@@ -4969,13 +4970,14 @@ label:\n \tflds\t%1,fpul\n \tfmov\t%1,%0\n \t! move optimized away\"\n-  [(set_attr \"type\" \"pcload_si,move,movi8,move,*,load_si,mac_gp,prget,arith,store,mac_mem,pstore,gp_mac,prset,mem_mac,pload,load,fstore,pcload_si,gp_fpul,fpul_gp,fmove,fmove,fmove,nil\")\n-   (set_attr \"late_fp_use\" \"*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,yes,*,*,yes,*,*,*,*\")\n+  [(set_attr \"type\" \"pcload_si,move,movi8,move,move,*,load_si,mac_gp,prget,arith,store,mac_mem,pstore,gp_mac,prset,mem_mac,pload,load,fstore,pcload_si,gp_fpul,fpul_gp,fmove,fmove,fmove,nil\")\n+   (set_attr \"late_fp_use\" \"*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,yes,*,*,yes,*,*,*,*\")\n    (set_attr_alternative \"length\"\n      [(const_int 2)\n       (const_int 2)\n       (const_int 2)\n       (const_int 4)\n+      (const_int 4)\n       (const_int 2)\n       (if_then_else\n \t(ne (symbol_ref \"TARGET_SH2A\") (const_int 0))"}, {"sha": "7cee9300aed4545af914a5b9cf8d11e33b3e554b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e990551a821ea234e518ef75a380f0c0ab7af2c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e990551a821ea234e518ef75a380f0c0ab7af2c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e990551a821ea234e518ef75a380f0c0ab7af2c0", "patch": "@@ -1,3 +1,8 @@\n+2008-03-25  Jayant Sonar  <Jayant.sonar@kpitcummins.com>\n+\t    Naveen.H.S  <naveen.hs@kpitcummins.com>\n+\n+\t* gcc.target/sh/sh2a-movi20s.c: New test.\n+\n 2008-03-25  Anil Paranjape  <anil.paranjape@kpitcummins.com>\n \t    Jayant Sonar  <Jayant.sonar@kpitcummins.com>\n \t    Naveen.H.S  <naveen.hs@kpitcummins.com>"}, {"sha": "55d2f665b3b0965ac6ddcfa80a99e13c63150b21", "filename": "gcc/testsuite/gcc.target/sh/sh2a-movi20s.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e990551a821ea234e518ef75a380f0c0ab7af2c0/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fsh2a-movi20s.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e990551a821ea234e518ef75a380f0c0ab7af2c0/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fsh2a-movi20s.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fsh2a-movi20s.c?ref=e990551a821ea234e518ef75a380f0c0ab7af2c0", "patch": "@@ -0,0 +1,14 @@\n+/* Testcase to check generation of 'MOVI20S #imm20, Rn'.  */\n+/* { dg-do assemble {target sh*-*-*}}  */\n+/* { dg-options \"-O0\" } */\n+/* { dg-skip-if \"\" { \"sh*-*-*\" } \"*\" \"-m2a -m2a-nofpu -m2a-single -m2a-single-only\" }  */\n+/* { dg-final { scan-assembler \"movi20s\"} }  */\n+\n+volatile long la;\n+\n+void\n+testfun (void)\n+{\n+  la = -134217728;\n+  la = 134217216;\n+}"}]}