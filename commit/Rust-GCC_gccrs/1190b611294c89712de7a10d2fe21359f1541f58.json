{"sha": "1190b611294c89712de7a10d2fe21359f1541f58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE5MGI2MTEyOTRjODk3MTJkZTdhMTBkMmZlMjEzNTlmMTU0MWY1OA==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-03T21:00:41Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-03T21:00:41Z"}, "message": "trans-array.c (gfc_trans_preloop_setup): Move common code...\n\n\t* trans-array.c (gfc_trans_preloop_setup): Move common code...\n\t(add_array_offset): ...into that new function.\n\nFrom-SVN: r180848", "tree": {"sha": "d98c0affeaf0499ebfbfde5069b39059e2de8f3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d98c0affeaf0499ebfbfde5069b39059e2de8f3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1190b611294c89712de7a10d2fe21359f1541f58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1190b611294c89712de7a10d2fe21359f1541f58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1190b611294c89712de7a10d2fe21359f1541f58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1190b611294c89712de7a10d2fe21359f1541f58/comments", "author": null, "committer": null, "parents": [{"sha": "e2b3e6bdd69fb5f5cfe8725d0e3072df819e96b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2b3e6bdd69fb5f5cfe8725d0e3072df819e96b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2b3e6bdd69fb5f5cfe8725d0e3072df819e96b4"}], "stats": {"total": 64, "additions": 36, "deletions": 28}, "files": [{"sha": "49531070db0923bed8e75d9f2d0475f96ae04481", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1190b611294c89712de7a10d2fe21359f1541f58/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1190b611294c89712de7a10d2fe21359f1541f58/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1190b611294c89712de7a10d2fe21359f1541f58", "patch": "@@ -1,3 +1,8 @@\n+2011-11-03  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-array.c (gfc_trans_preloop_setup): Move common code...\n+\t(add_array_offset): ...into that new function.\n+\n 2011-11-03  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* trans-array.c (gfc_trans_preloop_setup): Use loop's dimension instead"}, {"sha": "f615e4e6a10d59b6878033876f7b170f516e651b", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 31, "deletions": 28, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1190b611294c89712de7a10d2fe21359f1541f58/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1190b611294c89712de7a10d2fe21359f1541f58/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=1190b611294c89712de7a10d2fe21359f1541f58", "patch": "@@ -2830,18 +2830,44 @@ gfc_conv_array_ref (gfc_se * se, gfc_array_ref * ar, gfc_symbol * sym,\n }\n \n \n+/* Add the offset corresponding to array's ARRAY_DIM dimension and loop's\n+   LOOP_DIM dimension (if any) to array's offset.  */\n+\n+static void\n+add_array_offset (stmtblock_t *pblock, gfc_loopinfo *loop, gfc_ss *ss,\n+\t\t  gfc_array_ref *ar, int array_dim, int loop_dim)\n+{\n+  gfc_se se;\n+  gfc_ss_info *info;\n+  tree stride, index;\n+\n+  info = &ss->data.info;\n+\n+  gfc_init_se (&se, NULL);\n+  se.loop = loop;\n+  se.expr = info->descriptor;\n+  stride = gfc_conv_array_stride (info->descriptor, array_dim);\n+  index = gfc_conv_array_index_offset (&se, info, array_dim, loop_dim, ar,\n+\t\t\t\t       stride);\n+  gfc_add_block_to_block (pblock, &se.pre);\n+\n+  info->offset = fold_build2_loc (input_location, PLUS_EXPR,\n+\t\t\t\t  gfc_array_index_type,\n+\t\t\t\t  info->offset, index);\n+  info->offset = gfc_evaluate_now (info->offset, pblock);\n+}\n+\n+\n /* Generate the code to be executed immediately before entering a\n    scalarization loop.  */\n \n static void\n gfc_trans_preloop_setup (gfc_loopinfo * loop, int dim, int flag,\n \t\t\t stmtblock_t * pblock)\n {\n-  tree index;\n   tree stride;\n   gfc_ss_info *info;\n   gfc_ss *ss;\n-  gfc_se se;\n   gfc_array_ref *ar;\n   int i;\n \n@@ -2896,36 +2922,13 @@ gfc_trans_preloop_setup (gfc_loopinfo * loop, int dim, int flag,\n \t\t  if (ar->dimen_type[i] != DIMEN_ELEMENT)\n \t\t    continue;\n \n-\t\t  gfc_init_se (&se, NULL);\n-\t\t  se.loop = loop;\n-\t\t  se.expr = info->descriptor;\n-\t\t  stride = gfc_conv_array_stride (info->descriptor, i);\n-\t\t  index = gfc_conv_array_index_offset (&se, info, i, -1,\n-\t\t\t\t\t\t       ar, stride);\n-\t\t  gfc_add_block_to_block (pblock, &se.pre);\n-\n-\t\t  info->offset = fold_build2_loc (input_location, PLUS_EXPR,\n-\t\t\t\t\t\t  gfc_array_index_type,\n-\t\t\t\t\t\t  info->offset, index);\n-\t\t  info->offset = gfc_evaluate_now (info->offset, pblock);\n+\t\t  add_array_offset (pblock, loop, ss, ar, i, /* unused */ -1);\n \t\t}\n \t    }\n \t}\n       else\n-\t{\n-\t  /* Add the offset for the previous loop dimension.  */\n-\t  gfc_init_se (&se, NULL);\n-\t  se.loop = loop;\n-\t  se.expr = info->descriptor;\n-\t  stride = gfc_conv_array_stride (info->descriptor, info->dim[i]);\n-\t  index = gfc_conv_array_index_offset (&se, info, info->dim[i], i,\n-\t\t\t\t\t       ar, stride);\n-\t  gfc_add_block_to_block (pblock, &se.pre);\n-\t  info->offset = fold_build2_loc (input_location, PLUS_EXPR,\n-\t\t\t\t\t  gfc_array_index_type, info->offset,\n-\t\t\t\t\t  index);\n-\t  info->offset = gfc_evaluate_now (info->offset, pblock);\n-\t}\n+\t/* Add the offset for the previous loop dimension.  */\n+\tadd_array_offset (pblock, loop, ss, ar, info->dim[i], i);\n \n       /* Remember this offset for the second loop.  */\n       if (dim == loop->temp_dim - 1)"}]}