{"sha": "9e253215882bcaf008af7df82731c88692969a61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUyNTMyMTU4ODJiY2FmMDA4YWY3ZGY4MjczMWM4ODY5Mjk2OWE2MQ==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@redhat.com", "date": "2002-05-25T03:40:20Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2002-05-25T03:40:20Z"}, "message": "c-torture.exp (c-torture-execute): Handle multiple sources.\n\n2002-05-24  Ben Elliston  <bje@redhat.com>\n\n\t* lib/c-torture.exp (c-torture-execute): Handle multiple sources.\n\nFrom-SVN: r53863", "tree": {"sha": "563050e935f1c1df1553c174bf4e67bc874b187e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/563050e935f1c1df1553c174bf4e67bc874b187e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e253215882bcaf008af7df82731c88692969a61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e253215882bcaf008af7df82731c88692969a61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e253215882bcaf008af7df82731c88692969a61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e253215882bcaf008af7df82731c88692969a61/comments", "author": null, "committer": null, "parents": [{"sha": "c7bdf0a6af41a480ecb6a103636ef9069721c0bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7bdf0a6af41a480ecb6a103636ef9069721c0bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7bdf0a6af41a480ecb6a103636ef9069721c0bd"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "3dc427f4b7033ea8eae3157733ec194873a49c4d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e253215882bcaf008af7df82731c88692969a61/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e253215882bcaf008af7df82731c88692969a61/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e253215882bcaf008af7df82731c88692969a61", "patch": "@@ -1,3 +1,7 @@\n+2002-05-24  Ben Elliston  <bje@redhat.com>\n+\n+\t* lib/c-torture.exp (c-torture-execute): Handle multiple sources.\n+\n 2002-05-24  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/verbose-asm.c: New test."}, {"sha": "f7b547a0708110401822eda78ba8cb49a2896a2c", "filename": "gcc/testsuite/lib/c-torture.exp", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e253215882bcaf008af7df82731c88692969a61/gcc%2Ftestsuite%2Flib%2Fc-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e253215882bcaf008af7df82731c88692969a61/gcc%2Ftestsuite%2Flib%2Fc-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fc-torture.exp?ref=9e253215882bcaf008af7df82731c88692969a61", "patch": "@@ -91,15 +91,19 @@ proc c-torture-compile { src option } {\n #\n # c-torture-execute -- utility to compile and execute a testcase\n #\n-# SRC is the full pathname of the testcase.\n+# SOURCES is a list of full pathnames to the test source files.\n+# The first filename in this list forms the \"testcase\".\n #\n # If the testcase has an associated .x file, we source that to run the\n # test instead.  We use .x so that we don't lengthen the existing filename\n # to more than 14 chars.\n #\n-proc c-torture-execute { src args } {\n+proc c-torture-execute { sources args } {\n     global tmpdir tool srcdir output compiler_conditional_xfail_data\n \n+    # Use the first source filename given as the filename under test.\n+    set src [lindex $sources 0]\n+\n     if { [llength $args] > 0 } {\n \tset additional_flags [lindex $args 0];\n     } else {\n@@ -164,7 +168,7 @@ proc c-torture-execute { src args } {\n \tif { $additional_flags != \"\" } {\n \t    lappend options \"additional_flags=$additional_flags\";\n \t}\n-\tset comp_output [gcc_target_compile \"$src\" \"${execname}\" executable $options];\n+\tset comp_output [gcc_target_compile \"$sources\" \"${execname}\" executable $options];\n \n \tif ![gcc_check_compile \"$testcase compilation\" $option $execname $comp_output] {\n \t    unresolved \"$testcase execution, $option\""}]}