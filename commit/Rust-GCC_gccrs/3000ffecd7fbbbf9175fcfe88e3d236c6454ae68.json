{"sha": "3000ffecd7fbbbf9175fcfe88e3d236c6454ae68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAwMGZmZWNkN2ZiYmJmOTE3NWZjZmU4OGUzZDIzNmM2NDU0YWU2OA==", "commit": {"author": {"name": "Oleg Raikhman", "email": "oleg@adapteva.com", "date": "2012-11-28T13:56:28Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2012-11-28T13:56:28Z"}, "message": "epiphany.h (ASM_OUTPUT_ALIGN_WITH_NOP): Define.\n\n2012-11-28  Oleg Raikhman  <oleg@adapteva.com>\n\n        * config/epiphany/epiphany.h (ASM_OUTPUT_ALIGN_WITH_NOP): Define.\n\nFrom-SVN: r193892", "tree": {"sha": "bdece186dca2829dfc2bbf01ca836c90c9db60c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdece186dca2829dfc2bbf01ca836c90c9db60c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3000ffecd7fbbbf9175fcfe88e3d236c6454ae68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3000ffecd7fbbbf9175fcfe88e3d236c6454ae68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3000ffecd7fbbbf9175fcfe88e3d236c6454ae68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3000ffecd7fbbbf9175fcfe88e3d236c6454ae68/comments", "author": {"login": "olerai", "id": 2277687, "node_id": "MDQ6VXNlcjIyNzc2ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/2277687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olerai", "html_url": "https://github.com/olerai", "followers_url": "https://api.github.com/users/olerai/followers", "following_url": "https://api.github.com/users/olerai/following{/other_user}", "gists_url": "https://api.github.com/users/olerai/gists{/gist_id}", "starred_url": "https://api.github.com/users/olerai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olerai/subscriptions", "organizations_url": "https://api.github.com/users/olerai/orgs", "repos_url": "https://api.github.com/users/olerai/repos", "events_url": "https://api.github.com/users/olerai/events{/privacy}", "received_events_url": "https://api.github.com/users/olerai/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be74e49e0db90b4e87fde8c20df95bbae97bedca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be74e49e0db90b4e87fde8c20df95bbae97bedca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be74e49e0db90b4e87fde8c20df95bbae97bedca"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "aa88b76838cc941d72e7c78a1237a30229caaa50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3000ffecd7fbbbf9175fcfe88e3d236c6454ae68/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3000ffecd7fbbbf9175fcfe88e3d236c6454ae68/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3000ffecd7fbbbf9175fcfe88e3d236c6454ae68", "patch": "@@ -1,3 +1,7 @@\n+2012-11-28  Oleg Raikhman  <oleg@adapteva.com>\n+\n+\t* config/epiphany/epiphany.h (ASM_OUTPUT_ALIGN_WITH_NOP): Define.\n+\n 2012-11-28  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* config/epiphany/epiphany.h (HARD_REGNO_RENAME_OK): Define."}, {"sha": "26a908a67ce295690bf3b572e8d6a1945f72c363", "filename": "gcc/config/epiphany/epiphany.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3000ffecd7fbbbf9175fcfe88e3d236c6454ae68/gcc%2Fconfig%2Fepiphany%2Fepiphany.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3000ffecd7fbbbf9175fcfe88e3d236c6454ae68/gcc%2Fconfig%2Fepiphany%2Fepiphany.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany.h?ref=3000ffecd7fbbbf9175fcfe88e3d236c6454ae68", "patch": "@@ -780,9 +780,16 @@ do {\t\t\t\t\t\t\t\\\n /* This is how to output an assembler line\n    that says to advance the location counter\n    to a multiple of 2**LOG bytes.  */\n-#define ASM_OUTPUT_ALIGN(FILE,LOG) \\\n+#define ASM_OUTPUT_ALIGN(FILE, LOG) \\\n do { if ((LOG) != 0) fprintf (FILE, \"\\t.balign %d\\n\", 1 << (LOG)); } while (0)\n \n+/* Inside the text section, align with nops rather than zeros.  */\n+#define ASM_OUTPUT_ALIGN_WITH_NOP(FILE, LOG) \\\n+do \\\n+{ \\\n+  if ((LOG) != 0) fprintf (FILE, \"\\t.balignw %d,0x01a2\\n\", 1 << (LOG)); \\\n+} while (0)\n+\n /* This is how to declare the size of a function.  */\n #undef ASM_DECLARE_FUNCTION_SIZE\n #define ASM_DECLARE_FUNCTION_SIZE(FILE, FNAME, DECL)\t\t\t\\"}]}