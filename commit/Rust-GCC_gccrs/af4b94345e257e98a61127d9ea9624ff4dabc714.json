{"sha": "af4b94345e257e98a61127d9ea9624ff4dabc714", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY0Yjk0MzQ1ZTI1N2U5OGE2MTEyN2Q5ZWE5NjI0ZmY0ZGFiYzcxNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-04-21T10:10:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-04-21T10:10:33Z"}, "message": "[multiple changes]\n\n2004-04-21  Pascal Obry  <obry@gnat.com>\n\n\t* adaint.c (__gnat_portable_spawn): Quote first argument (argv[0])\n\tpassed to spawnvp() to properly handle program pathname with spaces on\n\tWin32.\n\n2004-04-21  Emmanuel Briot  <briot@act-europe.fr>\n\n\t* g-debpoo.adb (Print_Info): Avoid extra work if Display_Slots is False.\n\t(Allocate, Deallocate, Free_Physically): Make sure the tasks are\n\tunlocked in case of exceptions.\n\n2004-04-21  Joel Brobecker  <brobecker@gnat.com>\n\n\t* gigi.h (get_target_no_dollar_in_label): Remove extern declaration.\n\tThis function does not exist anymore.\n\n2004-04-21  Thomas Quinot  <quinot@act-europe.fr>\n\n\t* gnatbind.adb, gnatlink.adb: Update name of imported C symbol.\n\n\t* link.c: Move variables to the __gnat name space.\n\n\t* Makefile.in: list link.o explicitly when needed.\n\n\t* mlib.adb: Remove pragma Linker_Option for \"link.o\" from mlib.\n\n2004-04-21  Javier Miranda  <miranda@gnat.com>\n\n\t* einfo.adb (Original_Access_Type): New subprogram\n\t(Set_Original_Access_Type): New subprogram\n\t(Write_Field21_Name): Write the name of the new field\n\n\t* einfo.ads (Original_Access_Type): New field present in access to\n\tsubprogram types.\n\tAddition of two new entities: E_Anonymous_Access_Subprogram_Type, and\n\tE_Anonymous_Access_Protected_Subprogram_Type.\n\n\t* lib-xref.adb (Output_One_Ref): Give support to anonymous access to\n\tsubprogram types.\n\n\t* lib-xref.ads (Xref_Entity_Letters): Initialize values corresponding\n\tto anonymous access to subprogram types.\n\n\t* sem_attr.adb (Resolve_Attribute): Give support to anonymous access\n\tto subprogram types.\n\n\t* sem_ch3.adb (Access_Definition): Complete decoration of entities\n\tcorresponding to anonymous access to subprogram types.\n\t(Analyze_Component_Declaration): Add new actual to the call to\n\tsubprogram replace_anonymous_access_to_protected_subprogram.\n\t(Array_Type_Declaration): Add new actual to the call to subprogram\n\treplace_anonymous_access_to_protected_subprogram.\n\t(Process_Discriminants): Add new actual to the call to subprogram\n\treplace_anonymous_access_to_protected_subprogram.\n\t(Replace_Anonymous_Access_To_Protected_Subprogram): New formal.\n\n\t* sem_ch3.ads (Replace_Anonymous_Access_To_Protected_Subprogram): New\n\tformal.\n\n\t* sem_ch6.adb, sem_type.adb, sem_res.adb: Give support to anonymous\n\taccess to subprogram types.\n\n\t* sem_util.adb (Has_Declarations): Addition of package_specification\n\tnodes.\n\n2004-04-21  Ed Schonberg  <schonberg@gnat.com>\n\n\t* sem_prag.adb (Make_Inline): If subprogram is a renaming, propagate\n\tinlined flags to renamed entity only if in current unit.\n\n2004-04-21  Thomas Quinot  <quinot@act-europe.fr>\n\n\t* s-parint.ads: Add DSA implementation marker.\n\n\t* rtsfind.ads, rtsfind.adb, snames.ads, snames.adb, s-rpc.adb: Use the\n\tvalue of System.Partition_Interface.DSA_Implementation to determine\n\twhat version of the distributed systems annex is available (no\n\timplementation, GLADE, or PolyORB).\n\n2004-04-21  Joel Brobecker  <brobecker@gnat.com>\n\n\t* targtyps.c (get_target_no_dollar_in_label): Remove, no longer used.\n\n2004-04-21  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n\n\t* utils.c (convert, case CONSTRUCTOR, COMPONENT_REF): Do not make node\n\twith new type if alias sets differ.\n\tFixes ACATS c41103b.\n\n2004-04-21  Vincent Celier  <celier@gnat.com>\n\n\t* prj.ads: Remove FORTRAN as an accepted language: not tested yet.\n\tAdd array Lang_Args for the language specific compiling argument\n\tswitches.\n\n\t* gnat_ugn.texi: Explain in more details when a library is rebuilt.\n\n2004-04-21  Sergey Rybin  <rybin@act-europe.fr>\n\n\t* gnat_rm.texi: Update the descripton of the Eliminate pragma\n\taccording to the recent changes in the format of the parameters of the\n\tpragma (replacing Homonym_Number with Source_Location).\n\nFrom-SVN: r80956", "tree": {"sha": "cb483e73b8234a7c09313d872880ca8992c5d9e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb483e73b8234a7c09313d872880ca8992c5d9e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af4b94345e257e98a61127d9ea9624ff4dabc714", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af4b94345e257e98a61127d9ea9624ff4dabc714", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af4b94345e257e98a61127d9ea9624ff4dabc714", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af4b94345e257e98a61127d9ea9624ff4dabc714/comments", "author": null, "committer": null, "parents": [{"sha": "0a7460199f1c204bf6b165fc8d29bfc5a5c8b0bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a7460199f1c204bf6b165fc8d29bfc5a5c8b0bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a7460199f1c204bf6b165fc8d29bfc5a5c8b0bf"}], "stats": {"total": 2116, "additions": 1228, "deletions": 888}, "files": [{"sha": "55b06a02c7fc1f262f85ff6c823301f7dda154d2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -1,3 +1,107 @@\n+2004-04-21  Pascal Obry  <obry@gnat.com>\n+\n+\t* adaint.c (__gnat_portable_spawn): Quote first argument (argv[0])\n+\tpassed to spawnvp() to properly handle program pathname with spaces on\n+\tWin32.\n+\n+2004-04-21  Emmanuel Briot  <briot@act-europe.fr>\n+\n+\t* g-debpoo.adb (Print_Info): Avoid extra work if Display_Slots is False.\n+\t(Allocate, Deallocate, Free_Physically): Make sure the tasks are\n+\tunlocked in case of exceptions.\n+\n+2004-04-21  Joel Brobecker  <brobecker@gnat.com>\n+\n+\t* gigi.h (get_target_no_dollar_in_label): Remove extern declaration.\n+\tThis function does not exist anymore.\n+\n+2004-04-21  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* gnatbind.adb, gnatlink.adb: Update name of imported C symbol.\n+\n+\t* link.c: Move variables to the __gnat name space.\n+\n+\t* Makefile.in: list link.o explicitly when needed.\n+\n+\t* mlib.adb: Remove pragma Linker_Option for \"link.o\" from mlib.\n+\n+2004-04-21  Javier Miranda  <miranda@gnat.com>\n+\n+\t* einfo.adb (Original_Access_Type): New subprogram\n+\t(Set_Original_Access_Type): New subprogram\n+\t(Write_Field21_Name): Write the name of the new field\n+\n+\t* einfo.ads (Original_Access_Type): New field present in access to\n+\tsubprogram types.\n+\tAddition of two new entities: E_Anonymous_Access_Subprogram_Type, and\n+\tE_Anonymous_Access_Protected_Subprogram_Type.\n+\n+\t* lib-xref.adb (Output_One_Ref): Give support to anonymous access to\n+\tsubprogram types.\n+\n+\t* lib-xref.ads (Xref_Entity_Letters): Initialize values corresponding\n+\tto anonymous access to subprogram types.\n+\n+\t* sem_attr.adb (Resolve_Attribute): Give support to anonymous access\n+\tto subprogram types.\n+\n+\t* sem_ch3.adb (Access_Definition): Complete decoration of entities\n+\tcorresponding to anonymous access to subprogram types.\n+\t(Analyze_Component_Declaration): Add new actual to the call to\n+\tsubprogram replace_anonymous_access_to_protected_subprogram.\n+\t(Array_Type_Declaration): Add new actual to the call to subprogram\n+\treplace_anonymous_access_to_protected_subprogram.\n+\t(Process_Discriminants): Add new actual to the call to subprogram\n+\treplace_anonymous_access_to_protected_subprogram.\n+\t(Replace_Anonymous_Access_To_Protected_Subprogram): New formal.\n+\n+\t* sem_ch3.ads (Replace_Anonymous_Access_To_Protected_Subprogram): New\n+\tformal.\n+\n+\t* sem_ch6.adb, sem_type.adb, sem_res.adb: Give support to anonymous\n+\taccess to subprogram types.\n+\n+\t* sem_util.adb (Has_Declarations): Addition of package_specification\n+\tnodes.\n+\n+2004-04-21  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* sem_prag.adb (Make_Inline): If subprogram is a renaming, propagate\n+\tinlined flags to renamed entity only if in current unit.\n+\n+2004-04-21  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* s-parint.ads: Add DSA implementation marker.\n+\n+\t* rtsfind.ads, rtsfind.adb, snames.ads, snames.adb, s-rpc.adb: Use the\n+\tvalue of System.Partition_Interface.DSA_Implementation to determine\n+\twhat version of the distributed systems annex is available (no\n+\timplementation, GLADE, or PolyORB).\n+\n+2004-04-21  Joel Brobecker  <brobecker@gnat.com>\n+\n+\t* targtyps.c (get_target_no_dollar_in_label): Remove, no longer used.\n+\n+2004-04-21  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* utils.c (convert, case CONSTRUCTOR, COMPONENT_REF): Do not make node\n+\twith new type if alias sets differ.\n+\tFixes ACATS c41103b.\n+\n+2004-04-21  Vincent Celier  <celier@gnat.com>\n+\n+\t* prj.ads: Remove FORTRAN as an accepted language: not tested yet.\n+\tAdd array Lang_Args for the language specific compiling argument\n+\tswitches.\n+\n+\t* gnat_ugn.texi: Explain in more details when a library is rebuilt.\n+\n+2004-04-21  Sergey Rybin  <rybin@act-europe.fr>\n+\n+\t* gnat_rm.texi: Update the descripton of the Eliminate pragma\n+\taccording to the recent changes in the format of the parameters of the\n+\tpragma (replacing Homonym_Number with Source_Location).\n+\n 2004-04-19  Arnaud Charlet  <charlet@act-europe.fr>\n \n \t* 5isystem.ads: Removed, unused."}, {"sha": "bafeae67aa66def9506de85b9373ec08378a38bc", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -251,7 +251,7 @@ LIBIBERTY = ../../libiberty/libiberty.a\n # and the system's installed libraries.\n LIBS = $(LIBINTL) $(LIBIBERTY) $(SYSLIBS)\n LIBDEPS = $(LIBINTL_DEP) $(LIBIBERTY)\n-TOOLS_LIBS = $(LIBGNAT) $(EXTRA_GNATTOOLS_OBJS) ../../../libiberty/libiberty.a $(SYSLIBS)\n+TOOLS_LIBS = $(LIBGNAT) $(EXTRA_GNATTOOLS_OBJS) link.o ../../../libiberty/libiberty.a $(SYSLIBS)\n \n # Specify the directories to be searched for header files.\n # Both . and srcdir are used, in that order,\n@@ -299,7 +299,7 @@ Makefile: ../config.status $(srcdir)/Makefile.in $(srcdir)/../version.c\n \f\n # Lists of files for various purposes.\n \n-GNATLINK_OBJS = gnatlink.o link.o \\\n+GNATLINK_OBJS = gnatlink.o \\\n  a-except.o ali.o alloc.o butil.o casing.o csets.o debug.o fmap.o fname.o gnatvsn.o \\\n  hostparm.o interfac.o i-c.o i-cstrin.o namet.o opt.o osint.o output.o rident.o \\\n  s-exctab.o s-secsta.o s-stalib.o s-stoele.o sdefault.o stylesw.o switch.o system.o \\\n@@ -308,7 +308,7 @@ GNATLINK_OBJS = gnatlink.o link.o \\\n GNATMAKE_OBJS = a-except.o ctrl_c.o ali.o ali-util.o s-casuti.o \\\n  alloc.o atree.o binderr.o butil.o casing.o csets.o debug.o elists.o einfo.o\\\n  erroutc.o errutil.o err_vars.o fmap.o fname.o fname-uf.o fname-sf.o \\\n- gnatmake.o gnatvsn.o hostparm.o interfac.o i-c.o i-cstrin.o krunch.o lib.o link.o \\\n+ gnatmake.o gnatvsn.o hostparm.o interfac.o i-c.o i-cstrin.o krunch.o lib.o \\\n  make.o makeusg.o makeutl.o mlib.o mlib-fil.o mlib-prj.o mlib-tgt.o mlib-utl.o \\\n  namet.o nlists.o opt.o osint.o osint-m.o output.o \\\n  prj.o prj-attr.o prj-com.o prj-dect.o prj-env.o prj-err.o prj-ext.o prj-nmsc.o \\\n@@ -583,7 +583,6 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n   a-intnam.ads<4zintnam.ads \\\n   s-osinte.ads<5zosinte.ads \\\n   s-parame.ads<5zparame.ads \\\n-  s-taspri.ads<5ztaspri.ads \\\n   s-vxwork.ads<5pvxwork.ads \\\n   a-taside.adb<1ataside.adb \\\n \n@@ -1660,7 +1659,7 @@ endif\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) vxaddr2line \n \t$(GNATLINK) -v vxaddr2line -o $@ --GCC=\"$(CC) $(ADA_INCLUDES)\" $(CLIB)\n \n-gnatmake-re: ../stamp-tools\n+gnatmake-re: ../stamp-tools link.o\n \t$(GNATMAKE) $(ADA_INCLUDES) -u sdefault --GCC=\"$(CC) $(MOST_ADA_FLAGS)\"\n \t$(GNATMAKE) -c $(ADA_INCLUDES) gnatmake --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatmake \n@@ -1673,19 +1672,19 @@ gnatlink-re: ../stamp-tools link.o\n \t$(GNATMAKE) -c $(ADA_INCLUDES) gnatlink --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatlink \n \t$(GNATLINK) -v gnatlink -o ../../gnatlinknew$(exeext) \\\n-\t\t    --GCC=\"$(CC) $(ADA_INCLUDES)\" link.o $(TOOLS_LIBS)\n+\t\t    --GCC=\"$(CC) $(ADA_INCLUDES)\" $(TOOLS_LIBS)\n \t$(MV)  ../../gnatlinknew$(exeext)  ../../gnatlink$(exeext)\n   \n # Needs to be built with CC=gcc\n # Since the RTL should be built with the latest compiler, remove the\n #  stamp target in the parent directory whenever gnat1 is rebuilt\n \n # Likewise for the tools\n-../../gnatmake$(exeext): $(P) b_gnatm.o $(GNATMAKE_OBJS)\n+../../gnatmake$(exeext): $(P) b_gnatm.o link.o $(GNATMAKE_OBJS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ b_gnatm.o $(GNATMAKE_OBJS) \\\n \t      $(TOOLS_LIBS)\n \n-../../gnatlink$(exeext): $(P) b_gnatl.o $(GNATLINK_OBJS)\n+../../gnatlink$(exeext): $(P) b_gnatl.o link.o $(GNATLINK_OBJS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ b_gnatl.o $(GNATLINK_OBJS) \\\n \t      $(TOOLS_LIBS)\n "}, {"sha": "d5262afbada57ee327b28377f2635c5bffb67cb5", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -1543,7 +1543,19 @@ __gnat_portable_spawn (char *args[])\n   int pid ATTRIBUTE_UNUSED;\n \n #if defined (MSDOS) || defined (_WIN32)\n-  status = spawnvp (P_WAIT, args[0],(const char* const*)args);\n+  /* args[0] must be quotes as it could contain a full pathname with spaces */\n+  const char *args_0 = args[0];\n+  args[0] = (char *)xmalloc (strlen (args_0) + 3);\n+  strcpy (args[0], \"\\\"\");\n+  strcat (args[0], args_0);\n+  strcat (args[0], \"\\\"\");\n+\n+  status = spawnvp (P_WAIT, args_0, (const char* const*)args);\n+\n+  /* restore previous value */\n+  free (args[0]);\n+  args[0] = args_0;\n+\n   if (status < 0)\n     return -1;\n   else"}, {"sha": "b2ad23f4da16ba3a15b748848cc89d28d2afd94d", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -1845,6 +1845,14 @@ package body Einfo is\n       return Node17 (Id);\n    end Object_Ref;\n \n+   function Original_Access_Type (Id : E) return E is\n+   begin\n+      pragma Assert\n+        (Ekind (Id) = E_Access_Subprogram_Type\n+           or else Ekind (Id) = E_Access_Protected_Subprogram_Type);\n+      return Node21 (Id);\n+   end Original_Access_Type;\n+\n    function Original_Array_Type (Id : E) return E is\n    begin\n       pragma Assert (Is_Array_Type (Id) or else Is_Modular_Integer_Type (Id));\n@@ -3747,7 +3755,6 @@ package body Einfo is\n       Set_Flag136 (Id, V);\n    end Set_No_Strict_Aliasing;\n \n-\n    procedure Set_Non_Binary_Modulus (Id : E; V : B := True) is\n    begin\n       pragma Assert (Ekind (Id) = E_Modular_Integer_Type);\n@@ -3796,6 +3803,14 @@ package body Einfo is\n       Set_Node17 (Id, V);\n    end Set_Object_Ref;\n \n+   procedure Set_Original_Access_Type (Id : E; V : E) is\n+   begin\n+      pragma Assert\n+        (Ekind (Id) = E_Access_Subprogram_Type\n+           or else Ekind (Id) = E_Access_Protected_Subprogram_Type);\n+      Set_Node21 (Id, V);\n+   end Set_Original_Access_Type;\n+\n    procedure Set_Original_Array_Type (Id : E; V : E) is\n    begin\n       pragma Assert (Is_Array_Type (Id) or else Is_Modular_Integer_Type (Id));\n@@ -6996,6 +7011,10 @@ package body Einfo is\n               Modular_Integer_Kind                       =>\n             Write_Str (\"Original_Array_Type\");\n \n+         when E_Access_Subprogram_Type                   |\n+              E_Access_Protected_Subprogram_Type         =>\n+            Write_Str (\"Original_Access_Type\");\n+\n          when others                                     =>\n             Write_Str (\"Field21??\");\n       end case;"}, {"sha": "9548da438ff2978df900c8ec1331ffb0bb535a9b", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -2633,6 +2633,12 @@ package Einfo is\n --       Applies to subprograms and subprogram types. Yields the number of\n --       formals as a value of type Pos.\n \n+--    Original_Access_Type (Node21)\n+--       Present in access to subprogram types. Anonymous access to protected\n+--       subprogram types are replaced by an occurrence of an internal access\n+--       to subprogram type. This field links the replacement entity with the\n+--       original entity.\n+\n --    Original_Array_Type (Node21)\n --       Present in modular types and array types and subtypes. Set only\n --       if the Is_Packed_Array_Type flag is set, indicating that the type\n@@ -3113,7 +3119,11 @@ package Einfo is\n    --  The following three entity kinds are introduced by the corresponding\n    --  type definitions:\n \n-   --    E_Access_Type,  E_General_Access_Type,  E_Anonymous_Access_Type.\n+   --    E_Access_Type,\n+   --    E_General_Access_Type,\n+   --    E_Anonymous_Access_Subprogram_Type,\n+   --    E_Anonymous_Access_Protected_Subprogram_Type\n+   --    E_Anonymous_Access_Type.\n \n    --  In addition, we define the kind E_Allocator_Type to label\n    --  allocators. This is because special resolution rules apply to this\n@@ -3321,6 +3331,14 @@ package Einfo is\n       --  and a protected operation within, and have different compile-time\n       --  and run-time properties than other access to subprograms.\n \n+      E_Anonymous_Access_Subprogram_Type,\n+      --  An anonymous access to subprogram type, created by an access to\n+      --  subprogram declaration.\n+\n+      E_Anonymous_Access_Protected_Subprogram_Type,\n+      --  An anonymous access to protected subprogram type, created by an\n+      --  access to subprogram declaration.\n+\n       E_Anonymous_Access_Type,\n       --  An anonymous access type created by an access parameter or access\n       --  discriminant.\n@@ -3542,6 +3560,8 @@ package Einfo is\n    --  E_General_Access_Type\n    --  E_Access_Subprogram_Type\n    --  E_Access_Protected_Subprogram_Type\n+   --  E_Anonymous_Access_Subprogram_Type\n+   --  E_Anonymous_Access_Protected_Subprogram_Type\n        E_Anonymous_Access_Type;\n \n    subtype Array_Kind                  is Entity_Kind range\n@@ -3637,6 +3657,8 @@ package Einfo is\n    --  E_General_Access_Type\n    --  E_Access_Subprogram_Type\n    --  E_Access_Protected_Subprogram_Type\n+   --  E_Anonymous_Access_Subprogram_Type\n+   --  E_Anonymous_Access_Protected_Subprogram_Type\n        E_Anonymous_Access_Type;\n \n    subtype Enumeration_Kind            is Entity_Kind range\n@@ -3809,6 +3831,8 @@ package Einfo is\n    --  E_General_Access_Type\n    --  E_Access_Subprogram_Type,\n    --  E_Access_Protected_Subprogram_Type\n+   --  E_Anonymous_Access_Subprogram_Type\n+   --  E_Anonymous_Access_Protected_Subprogram_Type\n    --  E_Anonymous_Access_Type\n    --  E_Array_Type\n    --  E_Array_Subtype\n@@ -3994,12 +4018,14 @@ package Einfo is\n    --  E_Access_Protected_Subprogram_Type\n    --    Equivalent_Type               (Node18)\n    --    Directly_Designated_Type      (Node20)\n+   --    Original_Access_Type          (Node21)\n    --    Needs_No_Actuals              (Flag22)\n    --    (plus type attributes)\n \n    --  E_Access_Subprogram_Type\n    --    Equivalent_Type               (Node18)   (remote types only)\n    --    Directly_Designated_Type      (Node20)\n+   --    Original_Access_Type          (Node21)\n    --    Needs_No_Actuals              (Flag22)\n    --    (plus type attributes)\n \n@@ -4025,6 +4051,8 @@ package Einfo is\n    --    Directly_Designated_Type      (Node20)\n    --    (plus type attributes)\n \n+   --  E_Anonymous_Access_Subprogram_Type\n+   --  E_Anonymous_Access_Protected_Subprogram_Type\n    --  E_Anonymous_Access_Type\n    --    Storage_Size_Variable         (Node15)   ??? is this needed ???\n    --    Directly_Designated_Type      (Node20)\n@@ -5180,6 +5208,7 @@ package Einfo is\n    function Normalized_Position                (Id : E) return U;\n    function Normalized_Position_Max            (Id : E) return U;\n    function Object_Ref                         (Id : E) return E;\n+   function Original_Access_Type               (Id : E) return E;\n    function Original_Array_Type                (Id : E) return E;\n    function Original_Record_Component          (Id : E) return E;\n    function Packed_Array_Type                  (Id : E) return E;\n@@ -5653,6 +5682,7 @@ package Einfo is\n    procedure Set_Normalized_Position           (Id : E; V : U);\n    procedure Set_Normalized_Position_Max       (Id : E; V : U);\n    procedure Set_Object_Ref                    (Id : E; V : E);\n+   procedure Set_Original_Access_Type          (Id : E; V : E);\n    procedure Set_Original_Array_Type           (Id : E; V : E);\n    procedure Set_Original_Record_Component     (Id : E; V : E);\n    procedure Set_Packed_Array_Type             (Id : E; V : E);\n@@ -6180,6 +6210,7 @@ package Einfo is\n    pragma Inline (Normalized_Position);\n    pragma Inline (Normalized_Position_Max);\n    pragma Inline (Object_Ref);\n+   pragma Inline (Original_Access_Type);\n    pragma Inline (Original_Array_Type);\n    pragma Inline (Original_Record_Component);\n    pragma Inline (Packed_Array_Type);\n@@ -6486,6 +6517,7 @@ package Einfo is\n    pragma Inline (Set_Normalized_Position);\n    pragma Inline (Set_Normalized_Position_Max);\n    pragma Inline (Set_Object_Ref);\n+   pragma Inline (Set_Original_Access_Type);\n    pragma Inline (Set_Original_Array_Type);\n    pragma Inline (Set_Original_Record_Component);\n    pragma Inline (Set_Packed_Array_Type);"}, {"sha": "4d93310db2fd311beb205c5d1f61fdf1f521b690", "filename": "gcc/ada/g-debpoo.adb", "status": "modified", "additions": 71, "deletions": 56, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fg-debpoo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fg-debpoo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debpoo.adb?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -769,6 +769,11 @@ package body GNAT.Debug_Pools is\n       end if;\n \n       Unlock_Task.all;\n+\n+   exception\n+      when others =>\n+         Unlock_Task.all;\n+         raise;\n    end Allocate;\n \n    ------------------\n@@ -1056,6 +1061,11 @@ package body GNAT.Debug_Pools is\n       end if;\n \n       Unlock_Task.all;\n+\n+   exception\n+      when others =>\n+         Unlock_Task.all;\n+         raise;\n    end Free_Physically;\n \n    ----------------\n@@ -1166,6 +1176,11 @@ package body GNAT.Debug_Pools is\n \n          Unlock_Task.all;\n       end if;\n+\n+   exception\n+      when others =>\n+         Unlock_Task.all;\n+         raise;\n    end Deallocate;\n \n    --------------------\n@@ -1310,71 +1325,71 @@ package body GNAT.Debug_Pools is\n \n       Put_Line (\"\");\n \n-      Data := Backtrace_Htable.Get_First;\n-      while Data /= null loop\n-         if Data.Kind in Alloc .. Dealloc then\n-            Elem :=\n-              new Traceback_Htable_Elem'\n-                   (Traceback => new Tracebacks_Array'(Data.Traceback.all),\n-                    Count     => Data.Count,\n-                    Kind      => Data.Kind,\n-                    Total     => Data.Total,\n-                    Next      => null);\n-            Backtrace_Htable_Cumulate.Set (Elem);\n-\n-            if Cumulate then\n-               if Data.Kind = Alloc then\n-                  K := Indirect_Alloc;\n-               else\n-                  K := Indirect_Dealloc;\n-               end if;\n+      if Display_Slots then\n+         Data := Backtrace_Htable.Get_First;\n+         while Data /= null loop\n+            if Data.Kind in Alloc .. Dealloc then\n+               Elem :=\n+                 new Traceback_Htable_Elem'\n+                      (Traceback => new Tracebacks_Array'(Data.Traceback.all),\n+                       Count     => Data.Count,\n+                       Kind      => Data.Kind,\n+                       Total     => Data.Total,\n+                       Next      => null);\n+               Backtrace_Htable_Cumulate.Set (Elem);\n+\n+               if Cumulate then\n+                  if Data.Kind = Alloc then\n+                     K := Indirect_Alloc;\n+                  else\n+                     K := Indirect_Dealloc;\n+                  end if;\n \n-               --  Propagate the direct call to all its parents\n+                  --  Propagate the direct call to all its parents\n \n-               for T in Data.Traceback'First + 1 .. Data.Traceback'Last loop\n-                  Elem := Backtrace_Htable_Cumulate.Get\n-                    (Data.Traceback\n-                       (T .. Data.Traceback'Last)'Unrestricted_Access);\n+                  for T in Data.Traceback'First + 1 .. Data.Traceback'Last loop\n+                     Elem := Backtrace_Htable_Cumulate.Get\n+                       (Data.Traceback\n+                          (T .. Data.Traceback'Last)'Unrestricted_Access);\n \n-                  --  If not, insert it\n+                     --  If not, insert it\n \n-                  if Elem = null then\n-                     Elem := new Traceback_Htable_Elem'\n-                               (Traceback => new Tracebacks_Array'\n-                                 (Data.Traceback (T .. Data.Traceback'Last)),\n-                        Count     => Data.Count,\n-                        Kind      => K,\n-                        Total     => Data.Total,\n-                        Next      => null);\n-                     Backtrace_Htable_Cumulate.Set (Elem);\n+                     if Elem = null then\n+                        Elem := new Traceback_Htable_Elem'\n+                          (Traceback => new Tracebacks_Array'\n+                             (Data.Traceback (T .. Data.Traceback'Last)),\n+                           Count     => Data.Count,\n+                           Kind      => K,\n+                           Total     => Data.Total,\n+                           Next      => null);\n+                        Backtrace_Htable_Cumulate.Set (Elem);\n \n-                     --  Properly take into account that the subprograms\n-                     --  indirectly called might be doing either allocations\n-                     --  or deallocations. This needs to be reflected in the\n-                     --  counts.\n+                        --  Properly take into account that the subprograms\n+                        --  indirectly called might be doing either allocations\n+                        --  or deallocations. This needs to be reflected in the\n+                        --  counts.\n \n-                  else\n-                     Elem.Count := Elem.Count + Data.Count;\n+                     else\n+                        Elem.Count := Elem.Count + Data.Count;\n \n-                     if K = Elem.Kind then\n-                        Elem.Total := Elem.Total + Data.Total;\n+                        if K = Elem.Kind then\n+                           Elem.Total := Elem.Total + Data.Total;\n \n-                     elsif Elem.Total > Data.Total then\n-                        Elem.Total := Elem.Total - Data.Total;\n+                        elsif Elem.Total > Data.Total then\n+                           Elem.Total := Elem.Total - Data.Total;\n \n-                     else\n-                        Elem.Kind  := K;\n-                        Elem.Total := Data.Total - Elem.Total;\n+                        else\n+                           Elem.Kind  := K;\n+                           Elem.Total := Data.Total - Elem.Total;\n+                        end if;\n                      end if;\n-                  end if;\n-               end loop;\n-            end if;\n+                  end loop;\n+               end if;\n \n-            Data := Backtrace_Htable.Get_Next;\n-         end if;\n-      end loop;\n+               Data := Backtrace_Htable.Get_Next;\n+            end if;\n+         end loop;\n \n-      if Display_Slots then\n          Put_Line (\"List of allocations/deallocations: \");\n \n          Data := Backtrace_Htable_Cumulate.Get_First;\n@@ -1397,6 +1412,8 @@ package body GNAT.Debug_Pools is\n \n             Data := Backtrace_Htable_Cumulate.Get_Next;\n          end loop;\n+\n+         Backtrace_Htable_Cumulate.Reset;\n       end if;\n \n       if Display_Leaks then\n@@ -1421,8 +1438,6 @@ package body GNAT.Debug_Pools is\n             Current := Header.Next;\n          end loop;\n       end if;\n-\n-      Backtrace_Htable_Cumulate.Reset;\n    end Print_Info;\n \n    ------------------"}, {"sha": "5f5b995fc617cd6b3bf1987674a60f17e5e025d9", "filename": "gcc/ada/gigi.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgigi.h?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2003 Free Software Foundation, Inc.          *\n+ *          Copyright (C) 1992-2004 Free Software Foundation, Inc.          *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -756,7 +756,6 @@ extern Pos get_target_double_size (void);\n extern Pos get_target_long_double_size (void);\n extern Pos get_target_pointer_size (void);\n extern Pos get_target_maximum_alignment (void);\n-extern Boolean get_target_no_dollar_in_label (void);\n extern Nat get_float_words_be (void);\n extern Nat get_words_be (void);\n extern Nat get_bytes_be (void);"}, {"sha": "3ebbcdf8ad7766db84a2aa946064b524525e74fa", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 66, "deletions": 22, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -1341,18 +1341,32 @@ pragma Eliminate (\n     [Entity          =>]  IDENTIFIER |\n                           SELECTED_COMPONENT |\n                           STRING_LITERAL\n-  [,[Parameter_Types =>]  PARAMETER_TYPES]\n-  [,[Result_Type     =>]  result_SUBTYPE_NAME]\n-  [,[Homonym_Number  =>]  INTEGER_LITERAL]);\n+    [,OVERLOADING_RESOLUTION]);\n+\n+OVERLOADING_RESOLUTION ::= PARAMETER_AND_RESULT_TYPE_PROFILE |\n+                           SOURCE_LOCATION\n+\n+PARAMETER_AND_RESULT_TYPE_PROFILE ::= PROCEDURE_PROFILE |\n+                                      FUNCTION_PROFILE\n+\n+PROCEDURE_PROFILE ::= Parameter_Types => PARAMETER_TYPES\n+\n+FUNCTION_PROFILE ::= [Parameter_Types => PARAMETER_TYPES,]\n+                      Result_Type => result_SUBTYPE_NAME]\n \n PARAMETER_TYPES ::= (SUBTYPE_NAME @{, SUBTYPE_NAME@})\n SUBTYPE_NAME    ::= STRING_LITERAL\n+\n+SOURCE_LOCATION ::= Source_Location => SOURCE_TRACE\n+SOURCE_TRACE    ::= STRING_LITERAL\n @end smallexample\n \n @noindent\n+\n This pragma indicates that the given entity is not used outside the\n-compilation unit it is defined in.  The entity may be either a subprogram\n-or a variable.\n+compilation unit it is defined in. The entity an explicitly declared\n+subprogram, including subprogram declared by subprogram instantiations and\n+subprograms declared in package instantiations.\n \n If the entity to be eliminated is a library level subprogram, then\n the first form of pragma @code{Eliminate} is used with only a single argument.\n@@ -1366,29 +1380,55 @@ the particular entity.  If the second argument is in string form, it must\n correspond to the internal manner in which GNAT stores entity names (see\n compilation unit Namet in the compiler sources for details).\n \n-The remaining parameters are optionally used to distinguish\n-between overloaded subprograms.  There are two ways of doing this.\n+The remaining parameters (OVERLOADING_RESOLUTION) are optionally used\n+to distinguish between overloaded subprograms. If a pragma does not contain\n+the OVERLOADING_RESOLUTION parameter(s), it is applied to all the overloaded\n+subprograms denoted by the first two parameters.\n+\n+Use PARAMETER_AND_RESULT_TYPE_PROFILE to specify the profile of the subprogram\n+to be eliminated in a manner similar to that used for the extended\n+@code{Import} and @code{Export} pragmas, except that the subtype names are\n+always given as string literals. At the moment, this form of distinguishing\n+overloaded subprograms is implemented only partially, so we do not recommend\n+using it for practical subprogram elimination.\n+\n+Note, that in case of a parameterless procedure its profile is represented\n+as @code{Parameter_Types => (\"\")}\n+\n+Alternatively, the @code{Source_Location} parameter is used to specify\n+which overloaded alternative is to be eliminated by pointing to the\n+location of the DEFINING_PROGRAM_UNIT_NAME of this subprogram in the\n+source text. The string literal submitted as SOURCE_TRACE should have\n+the following format:\n \n-Use @code{Parameter_Types} and @code{Result_Type} to specify the\n-profile of the subprogram to be eliminated in a manner similar to that\n-used for\n-the extended @code{Import} and @code{Export} pragmas, except that the\n-subtype names are always given as string literals, again corresponding\n-to the internal manner in which GNAT stores entity names.\n+@smallexample @c ada\n+SOURCE_TRACE ::= SOURCE_LOCATION@{LBRACKET SOURCE_LOCATION RBRACKET@}\n+\n+LBRACKET ::= [\n+RBRACKET ::= ]\n+\n+SOURCE_LOCATION ::= FILE_NAME:LINE_NUMBER\n+FILE_NAME       ::= STRING_LITERAL\n+LINE_NUMBER     ::= DIGIT @{DIGIT@}\n+@end smallexample\n+\n+SOURCE_TRACE should be the short name of the source file (with no directory\n+information), and LINE_NUMBER is supposed to point to the line where the\n+defining name of the subprogram is located.\n \n-Alternatively, the @code{Homonym_Number} parameter is used to specify\n-which overloaded alternative is to be eliminated.  A value of 1 indicates\n-the first subprogram (in lexical order), 2 indicates the second etc.\n+For the subprograms that are not a part of generic instantiations, only one\n+SOURCE_LOCATION is used. If a subprogram is declared in a package\n+instantiation, SOURCE_TRACE contains two SOURCE_LOCATIONs, the first one is\n+the location of the (DEFINING_PROGRAM_UNIT_NAME of the) instantiation, and the\n+second one denotes the declaration of the corresponding subprogram in the\n+generic package. This approach is recursively used to create SOURCE_LOCATIONs\n+in case of nested instantiations.\n \n The effect of the pragma is to allow the compiler to eliminate\n the code or data associated with the named entity.  Any reference to\n an eliminated entity outside the compilation unit it is defined in,\n causes a compile time or link time error.\n \n-The parameters of this pragma may be given in any order, as long as\n-the usual rules for use of named parameters and position parameters\n-are used.\n-\n The intention of pragma @code{Eliminate} is to allow a program to be compiled\n in a system independent manner, with unused entities eliminated, without\n the requirement of modifying the source text.  Normally the required set\n@@ -1400,6 +1440,10 @@ Note that the reason this pragma takes string literals where names might\n be expected is that a pragma @code{Eliminate} can appear in a context where the\n relevant names are not visible.\n \n+Note that any change in the source files that includes removing, splitting of\n+adding lines may make the set of Eliminate pragmas using SOURCE_LOCATION\n+parameter illegal.\n+\n @node Pragma Export_Exception\n @unnumberedsec Pragma Export_Exception\n @cindex OpenVMS\n@@ -12568,7 +12612,6 @@ primarily intended to be constructed automatically using a binding generator\n tool, although it is possible to construct them by hand.  No suitable binding\n generator tool is supplied with GNAT though.\n \n-\n Using these pragmas it is possible to achieve complete\n inter-operability between Ada tagged types and C class definitions.\n See @ref{Implementation Defined Pragmas}, for more details.\n@@ -12692,7 +12735,7 @@ including machine instructions in a subprogram.\n The two features are similar, and both are closely related to the mechanism\n provided by the asm instruction in the GNU C compiler.  Full understanding\n and use of the facilities in this package requires understanding the asm\n-instruction as described in @cite{Using the GNU Compiler Collection (GCC)} \n+instruction as described in @cite{Using the GNU Compiler Collection (GCC)}\n by Richard Stallman. The relevant section is titled ``Extensions to the C\n Language Family'' -> ``Assembler Instructions with C Expression Operands''.\n \n@@ -14099,3 +14142,4 @@ environment in which the gnat tool will execute.\n @contents\n \n @bye\n+"}, {"sha": "b009ec630cd57567ba8b8a9c0d2fe680286d39ed", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -12441,12 +12441,37 @@ When @command{gnatmake} detects that a project file\n is a library project file, it will check all immediate sources of the project\n and rebuild the library if any of the sources have been recompiled.\n \n-When a library is built or rebuilt, an attempt is made to delete all\n+Standard project files can import library project files. In such cases,\n+the libraries will only be rebuild if some of its sources are recompiled\n+because they are in the closure of some other source in an importing project.\n+Sources of the library project files that are not in such a closure will\n+not be checked, unless the full library is checked, because one of its sources\n+needs to be recompiled.\n+\n+For instance, assume the project file @code{A} imports the library project file\n+@code{L}. The immediate sources of A are @file{a1.adb}, @file{a2.ads} and\n+@file{a2.adb}. The immediate sources of L are @file{l1.ads}, @file{l1.adb},\n+@file{l2.ads}, @file{l2.adb}.\n+\n+If @file{l1.adb} has been modified, then the library associated with @code{L}\n+will be rebuild when compiling all the immediate sources of @code{A} only\n+if @file{a1.ads}, @file{a2.ads} or @file{a2.adb} includes a statement\n+@code{\"with L1;\"}.\n+\n+To be sure that all the sources in the library associated with @code{L} are\n+up to date, and that all the sources of parject @code{A} are also up to date,\n+the following two commands needs to be used:\n+\n+@smallexample\n+gnatmake -Pl.gpr\n+gnatmake -Pa.gpr\n+@end smallexample\n+\n+When a library is built or rebuilt, an attempt is made first to delete all\n files in the library directory.\n All @file{ALI} files will also be copied from the object directory to the\n library directory. To build executables, @command{gnatmake} will use the\n-library rather than the individual object files. The copy of the @file{ALI}\n-files are made read-only.\n+library rather than the individual object files.\n \n \n @c **********************************************"}, {"sha": "755a34efdee545ea13adf677b22487dcf3611f9d", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -364,7 +364,8 @@ begin\n \n    declare\n       Shared_Libgnat_Default : Character;\n-      pragma Import (C, Shared_Libgnat_Default, \"shared_libgnat_default\");\n+      pragma Import\n+        (C, Shared_Libgnat_Default, \"__gnat_shared_libgnat_default\");\n \n       SHARED : constant Character := 'H';\n       STATIC : constant Character := 'T';"}, {"sha": "41ef0a20929bbc3abe2f1980d994d9019d5391b4", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -158,7 +158,8 @@ procedure Gnatlink is\n    --  Set to False if bind file is not to be compiled\n \n    Object_List_File_Supported : Boolean;\n-   pragma Import (C, Object_List_File_Supported, \"objlist_file_supported\");\n+   pragma Import\n+     (C, Object_List_File_Supported, \"__gnat_objlist_file_supported\");\n    --  Predicate indicating whether the linker has an option whereby the\n    --  names of object files can be passed to the linker in a file.\n \n@@ -587,7 +588,7 @@ procedure Gnatlink is\n       --  Projected number of bytes for the linker command line\n \n       Link_Max : Integer;\n-      pragma Import (C, Link_Max, \"link_max\");\n+      pragma Import (C, Link_Max, \"__gnat_link_max\");\n       --  Maximum number of bytes on the command line supported by the OS\n       --  linker. Passed this limit the response file mechanism must be used\n       --  if supported.\n@@ -649,23 +650,24 @@ procedure Gnatlink is\n       RB_Nfirst    : Integer;             -- Slice first index\n \n       Run_Path_Option_Ptr : Interfaces.C.Strings.chars_ptr;\n-      pragma Import (C, Run_Path_Option_Ptr, \"run_path_option\");\n+      pragma Import (C, Run_Path_Option_Ptr, \"__gnat_run_path_option\");\n       --  Pointer to string representing the native linker option which\n       --  specifies the path where the dynamic loader should find shared\n       --  libraries. Equal to null string if this system doesn't support it.\n \n       Object_Library_Ext_Ptr : Interfaces.C.Strings.chars_ptr;\n-      pragma Import (C, Object_Library_Ext_Ptr, \"object_library_extension\");\n+      pragma Import\n+        (C, Object_Library_Ext_Ptr, \"__gnat_object_library_extension\");\n       --  Pointer to string specifying the default extension for\n       --  object libraries, e.g. Unix uses \".a\", VMS uses \".olb\".\n \n       Object_File_Option_Ptr : Interfaces.C.Strings.chars_ptr;\n-      pragma Import (C, Object_File_Option_Ptr, \"object_file_option\");\n+      pragma Import (C, Object_File_Option_Ptr, \"__gnat_object_file_option\");\n       --  Pointer to a string representing the linker option which specifies\n       --  the response file.\n \n       Using_GNU_Linker : Boolean;\n-      pragma Import (C, Using_GNU_Linker, \"using_gnu_linker\");\n+      pragma Import (C, Using_GNU_Linker, \"__gnat_using_gnu_linker\");\n       --  Predicate indicating whether this target uses the GNU linker. In\n       --  this case we must output a GNU linker compatible response file.\n "}, {"sha": "107c84951c2d994263f4f86a3b76c4ddb064b67c", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -1147,16 +1147,25 @@ package body Lib.Xref is\n \n                   --  Special handling for access parameter\n \n-                  if Ekind (Etype (XE.Ent)) = E_Anonymous_Access_Type\n-                    and then Is_Formal (XE.Ent)\n-                  then\n-                     Ctyp := 'p';\n+                  declare\n+                     K : constant Entity_Kind := Ekind (Etype (XE.Ent));\n+\n+                  begin\n+                     if (K = E_Anonymous_Access_Type\n+                           or else\n+                         K = E_Anonymous_Access_Subprogram_Type\n+                            or else K =\n+                         E_Anonymous_Access_Protected_Subprogram_Type)\n+                       and then Is_Formal (XE.Ent)\n+                     then\n+                        Ctyp := 'p';\n \n-                  --  Special handling for Boolean\n+                        --  Special handling for Boolean\n \n-                  elsif Ctyp = 'e' and then Is_Boolean_Type (Ent) then\n-                     Ctyp := 'b';\n-                  end if;\n+                     elsif Ctyp = 'e' and then Is_Boolean_Type (Ent) then\n+                        Ctyp := 'b';\n+                     end if;\n+                  end;\n                end if;\n \n                --  Special handling for abstract types and operations."}, {"sha": "59c703fb78e198a41706b244527daaadef1b274f", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1998-2003, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -395,6 +395,8 @@ package Lib.Xref is\n \n       E_Access_Subprogram_Type           => 'P',\n       E_Access_Protected_Subprogram_Type => 'P',\n+      E_Anonymous_Access_Subprogram_Type => ' ',\n+      E_Anonymous_Access_Protected_Subprogram_Type => ' ',\n       E_Anonymous_Access_Type            => ' ',\n       E_Array_Type                       => 'A',\n       E_Array_Subtype                    => 'A',"}, {"sha": "bf98e9035811bc939f086ab7215cb941b29e9411", "filename": "gcc/ada/link.c", "status": "modified", "additions": 87, "deletions": 88, "changes": 175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Flink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Flink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flink.c?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -30,10 +30,9 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-/*  This file contains parameterizations used by gnatlink.adb in handling   */\n-/*  very long linker lines in systems where there are limitations on the    */\n-/*  argument length when the command line is used to pass items to the      */\n-/*  linker                                                                  */\n+/*  This file contains host-specific parameters describing the behaviour    */\n+/*  of the linker. It is used by gnatlink as well as all tools that use     */\n+/*  Mlib.                                                                   */\n \n #include <string.h>\n \n@@ -83,113 +82,113 @@\n #define STATIC 'T'\n \n #if defined (__osf__)\n-const char *object_file_option = \"-Wl,-input,\";\n-const char *run_path_option = \"-Wl,-rpath,\";\n-int link_max = 10000;\n-unsigned char objlist_file_supported = 1;\n-char shared_libgnat_default = STATIC;\n-unsigned char using_gnu_linker = 0;\n-const char *object_library_extension = \".a\";\n+const char *__gnat_object_file_option = \"-Wl,-input,\";\n+const char *__gnat_run_path_option = \"-Wl,-rpath,\";\n+int __gnat_link_max = 10000;\n+unsigned char __gnat_objlist_file_supported = 1;\n+char __gnat_shared_libgnat_default = STATIC;\n+unsigned char __gnat_using_gnu_linker = 0;\n+const char *__gnat_object_library_extension = \".a\";\n \n #elif defined (sgi)\n-const char *object_file_option = \"-Wl,-objectlist,\";\n-const char *run_path_option = \"-Wl,-rpath,\";\n-int link_max = 5000;\n-unsigned char objlist_file_supported = 1;\n-char shared_libgnat_default = STATIC;\n-unsigned char using_gnu_linker = 0;\n-const char *object_library_extension = \".a\";\n+const char *__gnat_object_file_option = \"-Wl,-objectlist,\";\n+const char *__gnat_run_path_option = \"-Wl,-rpath,\";\n+int __gnat_link_max = 5000;\n+unsigned char __gnat_objlist_file_supported = 1;\n+char __gnat_shared_libgnat_default = STATIC;\n+unsigned char __gnat_using_gnu_linker = 0;\n+const char *__gnat_object_library_extension = \".a\";\n \n #elif defined (__WIN32)\n-const char *object_file_option = \"\";\n-const char *run_path_option = \"\";\n-int link_max = 30000;\n-unsigned char objlist_file_supported = 1;\n-char shared_libgnat_default = STATIC;\n-unsigned char using_gnu_linker = 1;\n-const char *object_library_extension = \".a\";\n+const char *__gnat_object_file_option = \"\";\n+const char *__gnat_run_path_option = \"\";\n+int __gnat_link_max = 30000;\n+unsigned char __gnat_objlist_file_supported = 1;\n+char __gnat_shared_libgnat_default = STATIC;\n+unsigned char __gnat_using_gnu_linker = 1;\n+const char *__gnat_object_library_extension = \".a\";\n \n #elif defined (__INTERIX)\n-const char *object_file_option = \"\";\n-const char *run_path_option = \"\";\n-int link_max = 5000;\n-unsigned char objlist_file_supported = 1;\n-char shared_libgnat_default = STATIC;\n-unsigned char using_gnu_linker = 1;\n-const char *object_library_extension = \".a\";\n+const char *__gnat_object_file_option = \"\";\n+const char *__gnat_run_path_option = \"\";\n+int __gnat_link_max = 5000;\n+unsigned char __gnat_objlist_file_supported = 1;\n+char __gnat_shared_libgnat_default = STATIC;\n+unsigned char __gnat_using_gnu_linker = 1;\n+const char *__gnat_object_library_extension = \".a\";\n \n #elif defined (hpux)\n-const char *object_file_option = \"-Wl,-c,\";\n-const char *run_path_option = \"-Wl,+b,\";\n-int link_max = 5000;\n-unsigned char objlist_file_supported = 1;\n-char shared_libgnat_default = STATIC;\n-unsigned char using_gnu_linker = 0;\n-const char *object_library_extension = \".a\";\n+const char *__gnat_object_file_option = \"-Wl,-c,\";\n+const char *__gnat_run_path_option = \"-Wl,+b,\";\n+int __gnat_link_max = 5000;\n+unsigned char __gnat_objlist_file_supported = 1;\n+char __gnat_shared_libgnat_default = STATIC;\n+unsigned char __gnat_using_gnu_linker = 0;\n+const char *__gnat_object_library_extension = \".a\";\n \n #elif defined (_AIX)\n-const char *object_file_option = \"-Wl,-f,\";\n-const char *run_path_option = \"\";\n-int link_max = 15000;\n-const unsigned char objlist_file_supported = 1;\n-char shared_libgnat_default = STATIC;\n-unsigned char using_gnu_linker = 0;\n-const char *object_library_extension = \".a\";\n+const char *__gnat_object_file_option = \"-Wl,-f,\";\n+const char *__gnat_run_path_option = \"\";\n+int __gnat_link_max = 15000;\n+const unsigned char __gnat_objlist_file_supported = 1;\n+char __gnat_shared_libgnat_default = STATIC;\n+unsigned char __gnat_using_gnu_linker = 0;\n+const char *__gnat_object_library_extension = \".a\";\n \n #elif defined (VMS)\n-const char *object_file_option = \"\";\n-const char *run_path_option = \"\";\n-char shared_libgnat_default = STATIC;\n-int link_max = 2147483647;\n-unsigned char objlist_file_supported = 0;\n-unsigned char using_gnu_linker = 0;\n-const char *object_library_extension = \".olb\";\n+const char *__gnat_object_file_option = \"\";\n+const char *__gnat_run_path_option = \"\";\n+char __gnat_shared_libgnat_default = STATIC;\n+int __gnat_link_max = 2147483647;\n+unsigned char __gnat_objlist_file_supported = 0;\n+unsigned char __gnat_using_gnu_linker = 0;\n+const char *__gnat_object_library_extension = \".olb\";\n \n #elif defined (sun)\n-const char *object_file_option = \"\";\n-const char *run_path_option = \"-Wl,-R,\";\n-char shared_libgnat_default = STATIC;\n-int link_max = 2147483647;\n-unsigned char objlist_file_supported = 0;\n-unsigned char using_gnu_linker = 0;\n-const char *object_library_extension = \".a\";\n+const char *__gnat_object_file_option = \"\";\n+const char *__gnat_run_path_option = \"-Wl,-R\";\n+char __gnat_shared_libgnat_default = STATIC;\n+int __gnat_link_max = 2147483647;\n+unsigned char __gnat_objlist_file_supported = 0;\n+unsigned char __gnat_using_gnu_linker = 0;\n+const char *__gnat_object_library_extension = \".a\";\n \n #elif defined (__FreeBSD__)\n-char *object_file_option = \"\";\n-char *run_path_option = \"-Wl,-rpath,\";\n-char shared_libgnat_default = STATIC;\n-int link_max = 2147483647;\n-unsigned char objlist_file_supported = 0;\n-unsigned char using_gnu_linker = 0;\n-char *object_library_extension = \".a\";\n+char *__gnat_object_file_option = \"\";\n+char *__gnat_run_path_option = \"-Wl,-rpath,\";\n+char __gnat_shared_libgnat_default = STATIC;\n+int __gnat_link_max = 2147483647;\n+unsigned char __gnat_objlist_file_supported = 0;\n+unsigned char __gnat_using_gnu_linker = 0;\n+char *__gnat_object_library_extension = \".a\";\n \n #elif defined (linux)\n-const char *object_file_option = \"\";\n-const char *run_path_option = \"-Wl,-rpath,\";\n-char shared_libgnat_default = STATIC;\n-int link_max = 8192;\n-unsigned char objlist_file_supported = 1;\n-unsigned char using_gnu_linker = 1;\n-const char *object_library_extension = \".a\";\n+const char *__gnat_object_file_option = \"\";\n+const char *__gnat_run_path_option = \"-Wl,-rpath,\";\n+char __gnat_shared_libgnat_default = STATIC;\n+int __gnat_link_max = 8192;\n+unsigned char __gnat_objlist_file_supported = 1;\n+unsigned char __gnat_using_gnu_linker = 1;\n+const char *__gnat_object_library_extension = \".a\";\n \n #elif defined (__svr4__) && defined (i386)\n-const char *object_file_option = \"\";\n-const char *run_path_option = \"\";\n-char shared_libgnat_default = STATIC;\n-int link_max = 2147483647;\n-unsigned char objlist_file_supported = 0;\n-unsigned char using_gnu_linker = 0;\n-const char *object_library_extension = \".a\";\n+const char *__gnat_object_file_option = \"\";\n+const char *__gnat_run_path_option = \"\";\n+char __gnat_shared_libgnat_default = STATIC;\n+int __gnat_link_max = 2147483647;\n+unsigned char __gnat_objlist_file_supported = 0;\n+unsigned char __gnat_using_gnu_linker = 0;\n+const char *__gnat_object_library_extension = \".a\";\n \n #else\n \n /*  These are the default settings for all other systems. No response file\n     is supported, the shared library default is STATIC.  */\n-const char *run_path_option = \"\";\n-const char *object_file_option = \"\";\n-char shared_libgnat_default = STATIC;\n-int link_max = 2147483647;\n-unsigned char objlist_file_supported = 0;\n-unsigned char using_gnu_linker = 0;\n-const char *object_library_extension = \".a\";\n+const char *__gnat_run_path_option = \"\";\n+const char *__gnat_object_file_option = \"\";\n+char __gnat_shared_libgnat_default = STATIC;\n+int __gnat_link_max = 2147483647;\n+unsigned char __gnat_objlist_file_supported = 0;\n+unsigned char __gnat_using_gnu_linker = 0;\n+const char *__gnat_object_library_extension = \".a\";\n #endif"}, {"sha": "8e6d0e37db93dc877e7dfac5e8b5b0749565fd63", "filename": "gcc/ada/mlib.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fmlib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fmlib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib.adb?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -41,9 +41,6 @@ with System;\n \n package body MLib is\n \n-   pragma Linker_Options (\"link.o\");\n-   --  For run_path_option string.\n-\n    -------------------\n    -- Build_Library --\n    -------------------\n@@ -296,7 +293,7 @@ package body MLib is\n    function Linker_Library_Path_Option return String_Access is\n \n       Run_Path_Option_Ptr : Interfaces.C.Strings.chars_ptr;\n-      pragma Import (C, Run_Path_Option_Ptr, \"run_path_option\");\n+      pragma Import (C, Run_Path_Option_Ptr, \"__gnat_run_path_option\");\n       --  Pointer to string representing the native linker option which\n       --  specifies the path where the dynamic loader should find shared\n       --  libraries. Equal to null string if this system doesn't support it."}, {"sha": "ebbc8599d074980c35b1f553ba15453ce2b7766d", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -71,7 +71,7 @@ package Prj is\n    --  To specify how to process project files\n \n    type Programming_Language is\n-     (Lang_Ada, Lang_C, Lang_C_Plus_Plus, Lang_Fortran);\n+     (Lang_Ada, Lang_C, Lang_C_Plus_Plus);\n    --  The list of language supported\n \n    subtype Other_Programming_Language is\n@@ -85,12 +85,10 @@ package Prj is\n    Lang_Ada_Name         : aliased String := \"ada\";\n    Lang_C_Name           : aliased String := \"c\";\n    Lang_C_Plus_Plus_Name : aliased String := \"c++\";\n-   Lang_Fortran_Name     : aliased String := \"for\";\n    Lang_Names : constant array (Programming_Language) of String_Access :=\n      (Lang_Ada         => Lang_Ada_Name        'Access,\n       Lang_C           => Lang_C_Name          'Access,\n-      Lang_C_Plus_Plus => Lang_C_Plus_Plus_Name'Access,\n-      Lang_Fortran     => Lang_Fortran_Name'Access);\n+      Lang_C_Plus_Plus => Lang_C_Plus_Plus_Name'Access);\n    --  Names of the supported programming languages, to be used after switch\n    --  -x when using a GCC compiler.\n \n@@ -100,25 +98,21 @@ package Prj is\n    Lang_Ada_Display_Name         : aliased String := \"Ada\";\n    Lang_C_Display_Name           : aliased String := \"C\";\n    Lang_C_Plus_Plus_Display_Name : aliased String := \"C++\";\n-   Lang_Fortran_Display_Name     : aliased String := \"Fortran\";\n    Lang_Display_Names :\n      constant array (Programming_Language) of String_Access :=\n        (Lang_Ada         => Lang_Ada_Display_Name        'Access,\n         Lang_C           => Lang_C_Display_Name          'Access,\n-        Lang_C_Plus_Plus => Lang_C_Plus_Plus_Display_Name'Access,\n-        Lang_Fortran     => Lang_Fortran_Display_Name'Access);\n+        Lang_C_Plus_Plus => Lang_C_Plus_Plus_Display_Name'Access);\n    --  Names of the supported programming languages, to be used for display\n    --  purposes.\n \n    Ada_Impl_Suffix         : aliased String := \".adb\";\n    C_Impl_Suffix           : aliased String := \".c\";\n    C_Plus_Plus_Impl_Suffix : aliased String := \".cc\";\n-   Fortran_Impl_Suffix     : aliased String := \".for\";\n    Lang_Suffixes : constant array (Programming_Language) of String_Access :=\n      (Lang_Ada         => Ada_Impl_Suffix        'Access,\n       Lang_C           => C_Impl_Suffix          'Access,\n-      Lang_C_Plus_Plus => C_Plus_Plus_Impl_Suffix'Access,\n-      Lang_Fortran     => Fortran_Impl_Suffix'Access);\n+      Lang_C_Plus_Plus => C_Plus_Plus_Impl_Suffix'Access);\n    --  Default extension of the sources of the different languages.\n \n    Lang_Suffix_Ids : array (Programming_Language) of Name_Id;\n@@ -127,17 +121,23 @@ package Prj is\n    Gnatmake_String    : aliased String := \"gnatmake\";\n    Gcc_String         : aliased String := \"gcc\";\n    G_Plus_Plus_String : aliased String := \"g++\";\n-   G77_String         : aliased String := \"g77\";\n    Default_Compiler_Names  :\n      constant array (Programming_Language) of String_Access :=\n      (Lang_Ada         => Gnatmake_String   'Access,\n       Lang_C           => Gcc_String        'Access,\n-      Lang_C_Plus_Plus => G_Plus_Plus_String'Access,\n-      Lang_Fortran     => G77_String        'Access);\n+      Lang_C_Plus_Plus => G_Plus_Plus_String'Access);\n    --  Default names of the compilers for the supported languages.\n    --  Used when no IDE'Compiler_Command is specified for a language.\n    --  For Ada, specify the gnatmake executable.\n \n+   Ada_Args_Strings        : aliased String := \"\";\n+   C_Args_String           : aliased String := \"c\";\n+   C_Plus_Plus_Args_String : aliased String := \"xx\";\n+   Lang_Args : constant array (Programming_Language) of String_Access :=\n+     (Lang_Ada         => Ada_Args_Strings       'Access,\n+      Lang_C           => C_Args_String          'Access,\n+      Lang_C_Plus_Plus => C_Plus_Plus_Args_String'Access);\n+\n    type Other_Source_Id is new Nat;\n    No_Other_Source : constant Other_Source_Id := 0;\n    type Other_Source is record"}, {"sha": "f677fab890eea4d087245a94c60d83859110700c", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 23, "deletions": 40, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -786,9 +786,6 @@ package body Rtsfind is\n       ---------------\n \n       procedure Check_RPC is\n-         Body_Name    : Unit_Name_Type;\n-         Unum         : Unit_Number_Type;\n-\n       begin\n          --  Bypass this check if debug flag -gnatdR set\n \n@@ -799,47 +796,33 @@ package body Rtsfind is\n          --  Otherwise we need the check if we are going after one of\n          --  the critical entities in System.RPC in stubs mode.\n \n+         --  ??? Should we do this for other s-parint/s-polint entities\n+         --  too?\n+\n          if (Distribution_Stub_Mode = Generate_Receiver_Stub_Body\n                       or else\n                         Distribution_Stub_Mode = Generate_Caller_Stub_Body)\n            and then (E = RE_Do_Rpc\n-                       or else E = RE_Do_Apc\n-                       or else E = RE_Params_Stream_Type\n-                       or else E = RE_RPC_Receiver)\n+                       or else\n+                     E = RE_Do_Apc\n+                       or else\n+                     E = RE_Params_Stream_Type\n+                       or else\n+                     E = RE_RPC_Receiver)\n          then\n-            --  Load body of System.Rpc, and abort if this is the body that is\n-            --  provided by GNAT, for which these features are not supported\n-            --  on current target. We identify the gnat body by the presence\n-            --  of a local entity called Gnat in the first declaration.\n-\n-            Lib_Unit := Unit (Cunit (U.Unum));\n-            Body_Name := Get_Body_Name (Get_Unit_Name (Lib_Unit));\n-            Unum :=\n-              Load_Unit\n-                (Load_Name  => Body_Name,\n-                 Required   => False,\n-                 Subunit    => False,\n-                 Error_Node => Empty,\n-                 Renamings  => True);\n-\n-            if Unum /= No_Unit then\n-               declare\n-                  Decls : constant List_Id :=\n-                            Declarations (Unit (Cunit (Unum)));\n-\n-               begin\n-                  if Present (Decls)\n-                    and then Nkind (First (Decls)) = N_Object_Declaration\n-                    and then\n-                      Chars (Defining_Identifier (First (Decls))) = Name_Gnat\n-                  then\n-                     Set_Standard_Error;\n-                     Write_Str (\"distribution feature not supported\");\n-                     Write_Eol;\n-                     raise Unrecoverable_Error;\n-                  end if;\n-               end;\n-            end if;\n+            declare\n+               DSA_Implementation : constant Entity_Id :=\n+                                      RTE (RE_DSA_Implementation);\n+            begin\n+               if Chars (Entity (Expression\n+                                  (Parent (DSA_Implementation)))) = Name_No_DSA\n+               then\n+                  Set_Standard_Error;\n+                  Write_Str (\"distribution feature not supported\");\n+                  Write_Eol;\n+                  raise Unrecoverable_Error;\n+               end if;\n+            end;\n          end if;\n       end Check_RPC;\n "}, {"sha": "b0eafd6ea7e6dddf160edcd2c784e171d083cb53", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -997,6 +997,7 @@ package Rtsfind is\n      RE_Size_Type,                       -- System.Parameters\n      RE_Unspecified_Size,                -- System.Parameters\n \n+     RE_DSA_Implementation,              -- System.Partition_Interface\n      RE_Get_Active_Partition_Id,         -- System.Partition_Interface\n      RE_Get_Passive_Partition_Id,        -- System.Partition_Interface\n      RE_Get_Local_Partition_Id,          -- System.Partition_Interface\n@@ -2066,6 +2067,7 @@ package Rtsfind is\n      RE_Size_Type                        => System_Parameters,\n      RE_Unspecified_Size                 => System_Parameters,\n \n+     RE_DSA_Implementation               => System_Partition_Interface,\n      RE_Get_Active_Partition_Id          => System_Partition_Interface,\n      RE_Get_Passive_Partition_Id         => System_Partition_Interface,\n      RE_Get_Local_Partition_Id           => System_Partition_Interface,"}, {"sha": "cf0a8b396e5826287ce8bd921919522663f5b32e", "filename": "gcc/ada/s-parint.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fs-parint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fs-parint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parint.ads?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -42,6 +42,9 @@ package System.Partition_Interface is\n \n    pragma Elaborate_Body;\n \n+   type DSA_Implementation_Name is (No_DSA, GLADE_DSA, PolyORB_DSA);\n+   DSA_Implementation : constant DSA_Implementation_Name := No_DSA;\n+\n    type Subprogram_Id is new Natural;\n    --  This type is used exclusively by stubs\n "}, {"sha": "ba4d0d9f1f6e9e4297b289ac6967488e8ab211ef", "filename": "gcc/ada/s-rpc.adb", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fs-rpc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fs-rpc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rpc.adb?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,13 +43,6 @@ with Ada.Exceptions; use Ada.Exceptions;\n \n package body System.RPC is\n \n-   GNAT : constant Boolean := True;\n-   pragma Unreferenced (GNAT);\n-   --  This dummy entity allows the compiler to recognize that this is the\n-   --  version of this package that is supplied by GNAT, not by the user.\n-   --  This is used to cause a compile time error if an attempt is made to\n-   --  use features in System.RPC that are only available from a true PCS.\n-\n    CRLF : constant String := ASCII.CR & ASCII.LF;\n \n    Msg : constant String :="}, {"sha": "171373ca3b91455dc19c4e3e497349be1f12fcd2", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -6507,7 +6507,12 @@ package body Sem_Attr is\n                --  also be accessibility checks on those, this is where the\n                --  checks can eventually be centralized ???\n \n-               if Ekind (Btyp) = E_Access_Subprogram_Type then\n+               if Ekind (Btyp) = E_Access_Subprogram_Type\n+                    or else\n+                  Ekind (Btyp) = E_Anonymous_Access_Subprogram_Type\n+                    or else\n+                  Ekind (Btyp) = E_Anonymous_Access_Protected_Subprogram_Type\n+               then\n                   if Convention (Btyp) /= Convention (Entity (P)) then\n                      Error_Msg_N\n                       (\"subprogram has invalid convention for context\", P);\n@@ -6533,8 +6538,12 @@ package body Sem_Attr is\n                   --  warning  is needed.\n \n                   elsif Attr_Id = Attribute_Access\n-                    and then Subprogram_Access_Level (Entity (P))\n-                      > Type_Access_Level (Btyp)\n+                    and then Subprogram_Access_Level (Entity (P)) >\n+                               Type_Access_Level (Btyp)\n+                    and then Ekind (Btyp) /=\n+                               E_Anonymous_Access_Subprogram_Type\n+                    and then Ekind (Btyp) /=\n+                               E_Anonymous_Access_Protected_Subprogram_Type\n                   then\n                      if not In_Instance_Body then\n                         Error_Msg_N\n@@ -6617,9 +6626,12 @@ package body Sem_Attr is\n             --  The rule does not apply to 'Unrestricted_Access.\n \n             if not (Ekind (Btyp) = E_Access_Subprogram_Type\n+                     or else Ekind (Btyp) = E_Anonymous_Access_Subprogram_Type\n                      or else (Is_Record_Type (Btyp) and then\n                               Present (Corresponding_Remote_Type (Btyp)))\n                      or else Ekind (Btyp) = E_Access_Protected_Subprogram_Type\n+                     or else Ekind (Btyp)\n+                               = E_Anonymous_Access_Protected_Subprogram_Type\n                      or else Is_Access_Constant (Btyp)\n                      or else Is_Variable (P)\n                      or else Attr_Id = Attribute_Unrestricted_Access)\n@@ -6791,13 +6803,17 @@ package body Sem_Attr is\n                end if;\n             end if;\n \n-            if Ekind (Btyp) = E_Access_Protected_Subprogram_Type\n+            if (Ekind (Btyp) = E_Access_Protected_Subprogram_Type\n+                  or else\n+                Ekind (Btyp) = E_Anonymous_Access_Protected_Subprogram_Type)\n               and then Is_Entity_Name (P)\n               and then not Is_Protected_Type (Scope (Entity (P)))\n             then\n                Error_Msg_N (\"context requires a protected subprogram\", P);\n \n-            elsif Ekind (Btyp) = E_Access_Subprogram_Type\n+            elsif (Ekind (Btyp) = E_Access_Subprogram_Type\n+                     or else\n+                   Ekind (Btyp) = E_Anonymous_Access_Subprogram_Type)\n               and then Ekind (Etype (N)) = E_Access_Protected_Subprogram_Type\n             then\n                Error_Msg_N (\"context requires a non-protected subprogram\", P);"}, {"sha": "8a1105ade548b34f8cb5e70a56de8faa80d22564", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 35, "deletions": 14, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -684,6 +684,15 @@ package body Sem_Ch3 is\n          Access_Subprogram_Declaration\n            (T_Name => Anon_Type,\n             T_Def  => Access_To_Subprogram_Definition (N));\n+\n+         if Ekind (Anon_Type) = E_Access_Protected_Subprogram_Type then\n+            Set_Ekind\n+              (Anon_Type, E_Anonymous_Access_Protected_Subprogram_Type);\n+         else\n+            Set_Ekind\n+              (Anon_Type, E_Anonymous_Access_Subprogram_Type);\n+         end if;\n+\n          return Anon_Type;\n       end if;\n \n@@ -992,7 +1001,7 @@ package body Sem_Ch3 is\n                                         (Access_Definition\n                                           (Component_Definition (N))))\n          then\n-            T := Replace_Anonymous_Access_To_Protected_Subprogram (N);\n+            T := Replace_Anonymous_Access_To_Protected_Subprogram (N, T);\n          end if;\n \n       else\n@@ -2986,14 +2995,17 @@ package body Sem_Ch3 is\n \n          --  Ada 0Y (AI-254)\n \n-         if Present (Access_To_Subprogram_Definition\n-                     (Access_Definition (Component_Def)))\n-           and then Protected_Present (Access_To_Subprogram_Definition\n-                                       (Access_Definition (Component_Def)))\n-         then\n-            Element_Type :=\n-              Replace_Anonymous_Access_To_Protected_Subprogram (Def);\n-         end if;\n+         declare\n+            CD : constant Node_Id :=\n+                   Access_To_Subprogram_Definition\n+                     (Access_Definition (Component_Def));\n+         begin\n+            if Present (CD) and then Protected_Present (CD) then\n+               Element_Type :=\n+                 Replace_Anonymous_Access_To_Protected_Subprogram\n+                   (Def, Element_Type);\n+            end if;\n+         end;\n \n       else\n          pragma Assert (False);\n@@ -3142,7 +3154,8 @@ package body Sem_Ch3 is\n    ------------------------------------------------------\n \n    function Replace_Anonymous_Access_To_Protected_Subprogram\n-     (N : Node_Id) return Entity_Id\n+     (N      : Node_Id;\n+      Prev_E : Entity_Id) return Entity_Id\n    is\n       Loc : constant Source_Ptr := Sloc (N);\n \n@@ -3184,17 +3197,23 @@ package body Sem_Ch3 is\n       Decl := Make_Full_Type_Declaration (Loc,\n                 Defining_Identifier => Anon,\n                 Type_Definition   =>\n-                  Access_To_Subprogram_Definition (Acc));\n+                  Copy_Separate_Tree (Access_To_Subprogram_Definition (Acc)));\n \n       Mark_Rewrite_Insertion (Decl);\n \n       --  Insert the new declaration in the nearest enclosing scope\n \n-      while not Has_Declarations (P) loop\n+      while Present (P) and then not Has_Declarations (P) loop\n          P := Parent (P);\n       end loop;\n \n-      Prepend (Decl, Declarations (P));\n+      pragma Assert (Present (P));\n+\n+      if Nkind (P) = N_Package_Specification then\n+         Prepend (Decl, Visible_Declarations (P));\n+      else\n+         Prepend (Decl, Declarations (P));\n+      end if;\n \n       --  Replace the anonymous type with an occurrence of the new declaration.\n       --  In all cases the rewriten node does not have the null-exclusion\n@@ -3221,6 +3240,7 @@ package body Sem_Ch3 is\n       Analyze (Decl);\n       Scope_Stack.Append (Curr_Scope);\n \n+      Set_Original_Access_Type (Anon, Prev_E);\n       return Anon;\n    end Replace_Anonymous_Access_To_Protected_Subprogram;\n \n@@ -11613,7 +11633,8 @@ package body Sem_Ch3 is\n                                            (Discriminant_Type (Discr)))\n             then\n                Discr_Type :=\n-                 Replace_Anonymous_Access_To_Protected_Subprogram (Discr);\n+                 Replace_Anonymous_Access_To_Protected_Subprogram\n+                   (Discr, Discr_Type);\n             end if;\n \n          else"}, {"sha": "08b2c202f5691dd8062d0368b06170be37e58092", "filename": "gcc/ada/sem_ch3.ads", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsem_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsem_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.ads?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -207,11 +207,14 @@ package Sem_Ch3  is\n    --  Prev is entity on the partial view, on which references are posted.\n \n    function Replace_Anonymous_Access_To_Protected_Subprogram\n-     (N : Node_Id) return Entity_Id;\n+     (N      : Node_Id;\n+      Prev_E : Entity_Id) return Entity_Id;\n    --  Ada 0Y (AI-254): Create and decorate an internal full type declaration\n    --  in the enclosing scope corresponding to an anonymous access to protected\n    --  subprogram. In addition, replace the anonymous access by an occurrence\n-   --  of this internal type. Return the entity of this type declaration.\n+   --  of this internal type. Prev_Etype is used to link the new internal\n+   --  entity with the anonymous entity. Return the entity of this type\n+   --  declaration.\n \n    procedure Set_Completion_Referenced (E : Entity_Id);\n    --  If E is the completion of a private or incomplete  type declaration,"}, {"sha": "b06eaa24b92c6c8defb2d0d9068882ed6ec19291", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 43, "deletions": 12, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -2956,6 +2956,7 @@ package body Sem_Ch6 is\n    is\n       Type_1 : Entity_Id := T1;\n       Type_2 : Entity_Id := T2;\n+      Are_Anonymous_Access_To_Subprogram_Types : Boolean := False;\n \n       function Base_Types_Match (T1, T2 : Entity_Id) return Boolean;\n       --  If neither T1 nor T2 are generic actual types, or if they are\n@@ -3030,11 +3031,32 @@ package body Sem_Ch6 is\n            or else Subtypes_Statically_Match (Type_1, Full_View (Type_2));\n       end if;\n \n+      --  Ada 0Y (AI-254): Detect anonymous access to subprogram types. In\n+      --  case of anonymous access to protected subprogram types the anonymous\n+      --  type declaration has been replaced by an occurrence of an internal\n+      --  access to subprogram type declaration\n+\n+      Are_Anonymous_Access_To_Subprogram_Types :=\n+        (Ekind (Type_1) = E_Anonymous_Access_Subprogram_Type\n+           and then Ekind (Type_2) = E_Anonymous_Access_Subprogram_Type)\n+      or else\n+        ((Ekind (Type_1) = E_Access_Protected_Subprogram_Type\n+          and then Ekind (Type_2) = E_Access_Protected_Subprogram_Type)\n+         and then (not Comes_From_Source (Type_1)\n+                     and not Comes_From_Source (Type_2))\n+         and then (Present (Original_Access_Type (Type_1))\n+                     and Present (Original_Access_Type (Type_2)))\n+         and then (Ekind (Original_Access_Type (Type_1))\n+                     = E_Anonymous_Access_Protected_Subprogram_Type\n+                   and Ekind (Original_Access_Type (Type_2))\n+                     = E_Anonymous_Access_Protected_Subprogram_Type));\n+\n       --  Test anonymous access type case. For this case, static subtype\n       --  matching is required for mode conformance (RM 6.3.1(15))\n \n-      if Ekind (Type_1) = E_Anonymous_Access_Type\n-        and then Ekind (Type_2) = E_Anonymous_Access_Type\n+      if (Ekind (Type_1) = E_Anonymous_Access_Type\n+          and then Ekind (Type_2) = E_Anonymous_Access_Type)\n+        or else Are_Anonymous_Access_To_Subprogram_Types --  Ada 0Y (AI-254)\n       then\n          declare\n             Desig_1 : Entity_Id;\n@@ -3083,11 +3105,17 @@ package body Sem_Ch6 is\n                  Conforming_Types\n                    (Etype (Base_Type (Desig_1)),\n                     Etype (Base_Type (Desig_2)), Ctype);\n+\n+            elsif Are_Anonymous_Access_To_Subprogram_Types then\n+               return Ctype = Type_Conformant\n+                        or else\n+                      Subtypes_Statically_Match (Desig_1, Desig_2);\n+\n             else\n                return Base_Type (Desig_1) = Base_Type (Desig_2)\n                 and then (Ctype = Type_Conformant\n-                          or else\n-                        Subtypes_Statically_Match (Desig_1, Desig_2));\n+                            or else\n+                          Subtypes_Statically_Match (Desig_1, Desig_2));\n             end if;\n          end;\n \n@@ -4958,14 +4986,17 @@ package body Sem_Ch6 is\n \n             --  Ada 0Y (AI-254)\n \n-            if Present (Access_To_Subprogram_Definition\n-                         (Parameter_Type (Param_Spec)))\n-              and then Protected_Present (Access_To_Subprogram_Definition\n-                                           (Parameter_Type (Param_Spec)))\n-            then\n-               Formal_Type :=\n-                 Replace_Anonymous_Access_To_Protected_Subprogram (Param_Spec);\n-            end if;\n+            declare\n+               AD : constant Node_Id :=\n+                      Access_To_Subprogram_Definition\n+                        (Parameter_Type (Param_Spec));\n+            begin\n+               if Present (AD) and then Protected_Present (AD) then\n+                  Formal_Type :=\n+                    Replace_Anonymous_Access_To_Protected_Subprogram\n+                      (Param_Spec, Formal_Type);\n+               end if;\n+            end;\n          end if;\n \n          Set_Etype (Formal, Formal_Type);"}, {"sha": "7dcf2787101affc03652b0a99c3b3a55bc908eb7", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -2949,21 +2949,24 @@ package body Sem_Prag is\n \n             --  Processing for procedure, operator or function.\n             --  If subprogram is aliased (as for an instance) indicate\n-            --  that the renamed entity is inlined.\n+            --  that the renamed entity (if declared in the same unit)\n+            --  is inlined.\n \n             if Is_Subprogram (Subp) then\n                while Present (Alias (Inner_Subp)) loop\n                   Inner_Subp := Alias (Inner_Subp);\n                end loop;\n \n-               Set_Inline_Flags (Inner_Subp);\n+               if In_Same_Source_Unit (Subp, Inner_Subp) then\n+                  Set_Inline_Flags (Inner_Subp);\n \n-               Decl := Parent (Parent (Inner_Subp));\n+                  Decl := Parent (Parent (Inner_Subp));\n \n-               if Nkind (Decl) = N_Subprogram_Declaration\n-                 and then Present (Corresponding_Body (Decl))\n-               then\n-                  Set_Inline_Flags (Corresponding_Body (Decl));\n+                  if Nkind (Decl) = N_Subprogram_Declaration\n+                    and then Present (Corresponding_Body (Decl))\n+                  then\n+                     Set_Inline_Flags (Corresponding_Body (Decl));\n+                  end if;\n                end if;\n \n                Applies := True;"}, {"sha": "9799860cf13f611e80c6ea6bcc13d7772608d71a", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -7076,7 +7076,9 @@ package body Sem_Res is\n             end if;\n          end;\n \n-      elsif Ekind (Target_Type) = E_Access_Subprogram_Type\n+      elsif (Ekind (Target_Type) = E_Access_Subprogram_Type\n+               or else\n+             Ekind (Target_Type) = E_Anonymous_Access_Subprogram_Type)\n         and then Conversion_Check\n                    (Ekind (Base_Type (Opnd_Type)) = E_Access_Subprogram_Type,\n                     \"illegal operand for access subprogram conversion\")"}, {"sha": "5da129f92945e5887f1130318a666237f3c56b80", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -731,6 +731,27 @@ package body Sem_Type is\n       then\n          return True;\n \n+      --  Ada 0Y (AI-254): An Anonymous_Access_To_Subprogram is compatible with\n+      --  itself, or with an anonymous type created for an attribute\n+      --  reference Access.\n+\n+      elsif (Ekind (Base_Type (T1)) = E_Anonymous_Access_Subprogram_Type\n+               or else\n+             Ekind (Base_Type (T1))\n+                      = E_Anonymous_Access_Protected_Subprogram_Type)\n+        and then Is_Access_Type (T2)\n+        and then (not Comes_From_Source (T1)\n+                   or else not Comes_From_Source (T2))\n+        and then (Is_Overloadable (Designated_Type (T2))\n+                    or else\n+                  Ekind (Designated_Type (T2)) = E_Subprogram_Type)\n+        and then\n+           Type_Conformant (Designated_Type (T1), Designated_Type (T2))\n+        and then\n+           Mode_Conformant (Designated_Type (T1), Designated_Type (T2))\n+      then\n+         return True;\n+\n       --  The context can be a remote access type, and the expression the\n       --  corresponding source type declared in a categorized package, or\n       --  viceversa."}, {"sha": "edeb3987438a4d2eaf8486e726313762362c9add", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -2688,7 +2688,8 @@ package body Sem_Util is\n         or else K = N_Package_Body\n         or else K = N_Protected_Body\n         or else K = N_Subprogram_Body\n-        or else K = N_Task_Body;\n+        or else K = N_Task_Body\n+        or else K = N_Package_Specification;\n    end Has_Declarations;\n \n    --------------------"}, {"sha": "6de6ee6148d7a23bba0fb5ebb77ec178d8780e6d", "filename": "gcc/ada/snames.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -119,6 +119,9 @@ package body Snames is\n      \"system#\" &\n      \"text_io#\" &\n      \"wide_text_io#\" &\n+     \"no_dsa#\" &\n+     \"glade_dsa#\" &\n+     \"polyorb_dsa#\" &\n      \"addr#\" &\n      \"async#\" &\n      \"get_active_partition_id#\" &"}, {"sha": "ce6c20082f9073a559be650ec43cde0d8a4bba9c", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 574, "deletions": 568, "changes": 1142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -233,57 +233,63 @@ package Snames is\n    Name_Text_IO                        : constant Name_Id := N + 060;\n    Name_Wide_Text_IO                   : constant Name_Id := N + 061;\n \n+   --  Names of implementations of the distributed systems annex\n+\n+   Name_No_DSA                         : constant Name_Id := N + 062;\n+   Name_GLADE_DSA                      : constant Name_Id := N + 063;\n+   Name_PolyORB_DSA                    : constant Name_Id := N + 064;\n+\n    --  Names of identifiers used in expanding distribution stubs\n \n-   Name_Addr                           : constant Name_Id := N + 062;\n-   Name_Async                          : constant Name_Id := N + 063;\n-   Name_Get_Active_Partition_ID        : constant Name_Id := N + 064;\n-   Name_Get_RCI_Package_Receiver       : constant Name_Id := N + 065;\n-   Name_Get_RCI_Package_Ref            : constant Name_Id := N + 066;\n-   Name_Origin                         : constant Name_Id := N + 067;\n-   Name_Params                         : constant Name_Id := N + 068;\n-   Name_Partition                      : constant Name_Id := N + 069;\n-   Name_Partition_Interface            : constant Name_Id := N + 070;\n-   Name_Ras                            : constant Name_Id := N + 071;\n-   Name_Call                           : constant Name_Id := N + 072;\n-   Name_RCI_Name                       : constant Name_Id := N + 073;\n-   Name_Receiver                       : constant Name_Id := N + 074;\n-   Name_Result                         : constant Name_Id := N + 075;\n-   Name_Rpc                            : constant Name_Id := N + 076;\n-   Name_Subp_Id                        : constant Name_Id := N + 077;\n-   Name_Operation                      : constant Name_Id := N + 078;\n-   Name_Argument                       : constant Name_Id := N + 079;\n-   Name_Arg_Modes                      : constant Name_Id := N + 080;\n-   Name_Handler                        : constant Name_Id := N + 081;\n-   Name_Target                         : constant Name_Id := N + 082;\n-   Name_Req                            : constant Name_Id := N + 083;\n-   Name_Obj_TypeCode                   : constant Name_Id := N + 084;\n+   Name_Addr                           : constant Name_Id := N + 065;\n+   Name_Async                          : constant Name_Id := N + 066;\n+   Name_Get_Active_Partition_ID        : constant Name_Id := N + 067;\n+   Name_Get_RCI_Package_Receiver       : constant Name_Id := N + 068;\n+   Name_Get_RCI_Package_Ref            : constant Name_Id := N + 069;\n+   Name_Origin                         : constant Name_Id := N + 070;\n+   Name_Params                         : constant Name_Id := N + 071;\n+   Name_Partition                      : constant Name_Id := N + 072;\n+   Name_Partition_Interface            : constant Name_Id := N + 073;\n+   Name_Ras                            : constant Name_Id := N + 074;\n+   Name_Call                           : constant Name_Id := N + 075;\n+   Name_RCI_Name                       : constant Name_Id := N + 076;\n+   Name_Receiver                       : constant Name_Id := N + 077;\n+   Name_Result                         : constant Name_Id := N + 078;\n+   Name_Rpc                            : constant Name_Id := N + 079;\n+   Name_Subp_Id                        : constant Name_Id := N + 080;\n+   Name_Operation                      : constant Name_Id := N + 081;\n+   Name_Argument                       : constant Name_Id := N + 082;\n+   Name_Arg_Modes                      : constant Name_Id := N + 083;\n+   Name_Handler                        : constant Name_Id := N + 084;\n+   Name_Target                         : constant Name_Id := N + 085;\n+   Name_Req                            : constant Name_Id := N + 086;\n+   Name_Obj_TypeCode                   : constant Name_Id := N + 087;\n \n    --  Operator Symbol entries. The actual names have an upper case O at\n    --  the start in place of the Op_ prefix (e.g. the actual name that\n    --  corresponds to Name_Op_Abs is \"Oabs\".\n \n-   First_Operator_Name                 : constant Name_Id := N + 085;\n-   Name_Op_Abs                         : constant Name_Id := N + 085; -- \"abs\"\n-   Name_Op_And                         : constant Name_Id := N + 086; -- \"and\"\n-   Name_Op_Mod                         : constant Name_Id := N + 087; -- \"mod\"\n-   Name_Op_Not                         : constant Name_Id := N + 088; -- \"not\"\n-   Name_Op_Or                          : constant Name_Id := N + 089; -- \"or\"\n-   Name_Op_Rem                         : constant Name_Id := N + 090; -- \"rem\"\n-   Name_Op_Xor                         : constant Name_Id := N + 091; -- \"xor\"\n-   Name_Op_Eq                          : constant Name_Id := N + 092; -- \"=\"\n-   Name_Op_Ne                          : constant Name_Id := N + 093; -- \"/=\"\n-   Name_Op_Lt                          : constant Name_Id := N + 094; -- \"<\"\n-   Name_Op_Le                          : constant Name_Id := N + 095; -- \"<=\"\n-   Name_Op_Gt                          : constant Name_Id := N + 096; -- \">\"\n-   Name_Op_Ge                          : constant Name_Id := N + 097; -- \">=\"\n-   Name_Op_Add                         : constant Name_Id := N + 098; -- \"+\"\n-   Name_Op_Subtract                    : constant Name_Id := N + 099; -- \"-\"\n-   Name_Op_Concat                      : constant Name_Id := N + 100; -- \"&\"\n-   Name_Op_Multiply                    : constant Name_Id := N + 101; -- \"*\"\n-   Name_Op_Divide                      : constant Name_Id := N + 102; -- \"/\"\n-   Name_Op_Expon                       : constant Name_Id := N + 103; -- \"**\"\n-   Last_Operator_Name                  : constant Name_Id := N + 103;\n+   First_Operator_Name                 : constant Name_Id := N + 088;\n+   Name_Op_Abs                         : constant Name_Id := N + 088; -- \"abs\"\n+   Name_Op_And                         : constant Name_Id := N + 089; -- \"and\"\n+   Name_Op_Mod                         : constant Name_Id := N + 090; -- \"mod\"\n+   Name_Op_Not                         : constant Name_Id := N + 091; -- \"not\"\n+   Name_Op_Or                          : constant Name_Id := N + 092; -- \"or\"\n+   Name_Op_Rem                         : constant Name_Id := N + 093; -- \"rem\"\n+   Name_Op_Xor                         : constant Name_Id := N + 094; -- \"xor\"\n+   Name_Op_Eq                          : constant Name_Id := N + 095; -- \"=\"\n+   Name_Op_Ne                          : constant Name_Id := N + 096; -- \"/=\"\n+   Name_Op_Lt                          : constant Name_Id := N + 097; -- \"<\"\n+   Name_Op_Le                          : constant Name_Id := N + 098; -- \"<=\"\n+   Name_Op_Gt                          : constant Name_Id := N + 099; -- \">\"\n+   Name_Op_Ge                          : constant Name_Id := N + 100; -- \">=\"\n+   Name_Op_Add                         : constant Name_Id := N + 101; -- \"+\"\n+   Name_Op_Subtract                    : constant Name_Id := N + 102; -- \"-\"\n+   Name_Op_Concat                      : constant Name_Id := N + 103; -- \"&\"\n+   Name_Op_Multiply                    : constant Name_Id := N + 104; -- \"*\"\n+   Name_Op_Divide                      : constant Name_Id := N + 105; -- \"/\"\n+   Name_Op_Expon                       : constant Name_Id := N + 106; -- \"**\"\n+   Last_Operator_Name                  : constant Name_Id := N + 106;\n \n    --  Names for all pragmas recognized by GNAT. The entries with the comment\n    --  \"Ada 83\" are pragmas that are defined in Ada 83, but not in Ada 95.\n@@ -306,140 +312,140 @@ package Snames is\n    --  only in GNAT for the AAMP. They are ignored in other versions with\n    --  appropriate warnings.\n \n-   First_Pragma_Name                   : constant Name_Id := N + 104;\n+   First_Pragma_Name                   : constant Name_Id := N + 107;\n \n    --  Configuration pragmas are grouped at start\n \n-   Name_Ada_83                         : constant Name_Id := N + 104; -- GNAT\n-   Name_Ada_95                         : constant Name_Id := N + 105; -- GNAT\n-   Name_C_Pass_By_Copy                 : constant Name_Id := N + 106; -- GNAT\n-   Name_Compile_Time_Warning           : constant Name_Id := N + 107; -- GNAT\n-   Name_Component_Alignment            : constant Name_Id := N + 108; -- GNAT\n-   Name_Convention_Identifier          : constant Name_Id := N + 109; -- GNAT\n-   Name_Discard_Names                  : constant Name_Id := N + 110;\n-   Name_Elaboration_Checks             : constant Name_Id := N + 111; -- GNAT\n-   Name_Eliminate                      : constant Name_Id := N + 112; -- GNAT\n-   Name_Explicit_Overriding            : constant Name_Id := N + 113;\n-   Name_Extend_System                  : constant Name_Id := N + 114; -- GNAT\n-   Name_Extensions_Allowed             : constant Name_Id := N + 115; -- GNAT\n-   Name_External_Name_Casing           : constant Name_Id := N + 116; -- GNAT\n-   Name_Float_Representation           : constant Name_Id := N + 117; -- GNAT\n-   Name_Initialize_Scalars             : constant Name_Id := N + 118; -- GNAT\n-   Name_Interrupt_State                : constant Name_Id := N + 119; -- GNAT\n-   Name_License                        : constant Name_Id := N + 120; -- GNAT\n-   Name_Locking_Policy                 : constant Name_Id := N + 121;\n-   Name_Long_Float                     : constant Name_Id := N + 122; -- VMS\n-   Name_No_Run_Time                    : constant Name_Id := N + 123; -- GNAT\n-   Name_No_Strict_Aliasing             : constant Name_Id := N + 124; -- GNAT\n-   Name_Normalize_Scalars              : constant Name_Id := N + 125;\n-   Name_Polling                        : constant Name_Id := N + 126; -- GNAT\n-   Name_Persistent_Data                : constant Name_Id := N + 127; -- GNAT\n-   Name_Persistent_Object              : constant Name_Id := N + 128; -- GNAT\n-   Name_Profile                        : constant Name_Id := N + 129; -- Ada0Y\n-   Name_Propagate_Exceptions           : constant Name_Id := N + 130; -- GNAT\n-   Name_Queuing_Policy                 : constant Name_Id := N + 131;\n-   Name_Ravenscar                      : constant Name_Id := N + 132;\n-   Name_Restricted_Run_Time            : constant Name_Id := N + 133;\n-   Name_Restrictions                   : constant Name_Id := N + 134;\n-   Name_Restriction_Warnings           : constant Name_Id := N + 135; -- GNAT\n-   Name_Reviewable                     : constant Name_Id := N + 136;\n-   Name_Source_File_Name               : constant Name_Id := N + 137; -- GNAT\n-   Name_Source_File_Name_Project       : constant Name_Id := N + 138; -- GNAT\n-   Name_Style_Checks                   : constant Name_Id := N + 139; -- GNAT\n-   Name_Suppress                       : constant Name_Id := N + 140;\n-   Name_Suppress_Exception_Locations   : constant Name_Id := N + 141; -- GNAT\n-   Name_Task_Dispatching_Policy        : constant Name_Id := N + 142;\n-   Name_Universal_Data                 : constant Name_Id := N + 143; -- AAMP\n-   Name_Unsuppress                     : constant Name_Id := N + 144; -- GNAT\n-   Name_Use_VADS_Size                  : constant Name_Id := N + 145; -- GNAT\n-   Name_Validity_Checks                : constant Name_Id := N + 146; -- GNAT\n-   Name_Warnings                       : constant Name_Id := N + 147; -- GNAT\n-   Last_Configuration_Pragma_Name      : constant Name_Id := N + 147;\n+   Name_Ada_83                         : constant Name_Id := N + 107; -- GNAT\n+   Name_Ada_95                         : constant Name_Id := N + 108; -- GNAT\n+   Name_C_Pass_By_Copy                 : constant Name_Id := N + 109; -- GNAT\n+   Name_Compile_Time_Warning           : constant Name_Id := N + 110; -- GNAT\n+   Name_Component_Alignment            : constant Name_Id := N + 111; -- GNAT\n+   Name_Convention_Identifier          : constant Name_Id := N + 112; -- GNAT\n+   Name_Discard_Names                  : constant Name_Id := N + 113;\n+   Name_Elaboration_Checks             : constant Name_Id := N + 114; -- GNAT\n+   Name_Eliminate                      : constant Name_Id := N + 115; -- GNAT\n+   Name_Explicit_Overriding            : constant Name_Id := N + 116;\n+   Name_Extend_System                  : constant Name_Id := N + 117; -- GNAT\n+   Name_Extensions_Allowed             : constant Name_Id := N + 118; -- GNAT\n+   Name_External_Name_Casing           : constant Name_Id := N + 119; -- GNAT\n+   Name_Float_Representation           : constant Name_Id := N + 120; -- GNAT\n+   Name_Initialize_Scalars             : constant Name_Id := N + 121; -- GNAT\n+   Name_Interrupt_State                : constant Name_Id := N + 122; -- GNAT\n+   Name_License                        : constant Name_Id := N + 123; -- GNAT\n+   Name_Locking_Policy                 : constant Name_Id := N + 124;\n+   Name_Long_Float                     : constant Name_Id := N + 125; -- VMS\n+   Name_No_Run_Time                    : constant Name_Id := N + 126; -- GNAT\n+   Name_No_Strict_Aliasing             : constant Name_Id := N + 127; -- GNAT\n+   Name_Normalize_Scalars              : constant Name_Id := N + 128;\n+   Name_Polling                        : constant Name_Id := N + 129; -- GNAT\n+   Name_Persistent_Data                : constant Name_Id := N + 130; -- GNAT\n+   Name_Persistent_Object              : constant Name_Id := N + 131; -- GNAT\n+   Name_Profile                        : constant Name_Id := N + 132; -- Ada0Y\n+   Name_Propagate_Exceptions           : constant Name_Id := N + 133; -- GNAT\n+   Name_Queuing_Policy                 : constant Name_Id := N + 134;\n+   Name_Ravenscar                      : constant Name_Id := N + 135;\n+   Name_Restricted_Run_Time            : constant Name_Id := N + 136;\n+   Name_Restrictions                   : constant Name_Id := N + 137;\n+   Name_Restriction_Warnings           : constant Name_Id := N + 138; -- GNAT\n+   Name_Reviewable                     : constant Name_Id := N + 139;\n+   Name_Source_File_Name               : constant Name_Id := N + 140; -- GNAT\n+   Name_Source_File_Name_Project       : constant Name_Id := N + 141; -- GNAT\n+   Name_Style_Checks                   : constant Name_Id := N + 142; -- GNAT\n+   Name_Suppress                       : constant Name_Id := N + 143;\n+   Name_Suppress_Exception_Locations   : constant Name_Id := N + 144; -- GNAT\n+   Name_Task_Dispatching_Policy        : constant Name_Id := N + 145;\n+   Name_Universal_Data                 : constant Name_Id := N + 146; -- AAMP\n+   Name_Unsuppress                     : constant Name_Id := N + 147; -- GNAT\n+   Name_Use_VADS_Size                  : constant Name_Id := N + 148; -- GNAT\n+   Name_Validity_Checks                : constant Name_Id := N + 149; -- GNAT\n+   Name_Warnings                       : constant Name_Id := N + 150; -- GNAT\n+   Last_Configuration_Pragma_Name      : constant Name_Id := N + 150;\n \n    --  Remaining pragma names\n \n-   Name_Abort_Defer                    : constant Name_Id := N + 148; -- GNAT\n-   Name_All_Calls_Remote               : constant Name_Id := N + 149;\n-   Name_Annotate                       : constant Name_Id := N + 150; -- GNAT\n+   Name_Abort_Defer                    : constant Name_Id := N + 151; -- GNAT\n+   Name_All_Calls_Remote               : constant Name_Id := N + 152;\n+   Name_Annotate                       : constant Name_Id := N + 153; -- GNAT\n \n    --  Note: AST_Entry is not in this list because its name matches the\n    --  name of the corresponding attribute. However, it is included in the\n    --  definition of the type Attribute_Id, and the functions Get_Pragma_Id\n    --  and Check_Pragma_Id correctly recognize and process Name_AST_Entry.\n    --  AST_Entry is a VMS specific pragma.\n \n-   Name_Assert                         : constant Name_Id := N + 151; -- GNAT\n-   Name_Asynchronous                   : constant Name_Id := N + 152;\n-   Name_Atomic                         : constant Name_Id := N + 153;\n-   Name_Atomic_Components              : constant Name_Id := N + 154;\n-   Name_Attach_Handler                 : constant Name_Id := N + 155;\n-   Name_Comment                        : constant Name_Id := N + 156; -- GNAT\n-   Name_Common_Object                  : constant Name_Id := N + 157; -- GNAT\n-   Name_Complex_Representation         : constant Name_Id := N + 158; -- GNAT\n-   Name_Controlled                     : constant Name_Id := N + 159;\n-   Name_Convention                     : constant Name_Id := N + 160;\n-   Name_CPP_Class                      : constant Name_Id := N + 161; -- GNAT\n-   Name_CPP_Constructor                : constant Name_Id := N + 162; -- GNAT\n-   Name_CPP_Virtual                    : constant Name_Id := N + 163; -- GNAT\n-   Name_CPP_Vtable                     : constant Name_Id := N + 164; -- GNAT\n-   Name_Debug                          : constant Name_Id := N + 165; -- GNAT\n-   Name_Elaborate                      : constant Name_Id := N + 166; -- Ada 83\n-   Name_Elaborate_All                  : constant Name_Id := N + 167;\n-   Name_Elaborate_Body                 : constant Name_Id := N + 168;\n-   Name_Export                         : constant Name_Id := N + 169;\n-   Name_Export_Exception               : constant Name_Id := N + 170; -- VMS\n-   Name_Export_Function                : constant Name_Id := N + 171; -- GNAT\n-   Name_Export_Object                  : constant Name_Id := N + 172; -- GNAT\n-   Name_Export_Procedure               : constant Name_Id := N + 173; -- GNAT\n-   Name_Export_Value                   : constant Name_Id := N + 174; -- GNAT\n-   Name_Export_Valued_Procedure        : constant Name_Id := N + 175; -- GNAT\n-   Name_External                       : constant Name_Id := N + 176; -- GNAT\n-   Name_Finalize_Storage_Only          : constant Name_Id := N + 177; -- GNAT\n-   Name_Ident                          : constant Name_Id := N + 178; -- VMS\n-   Name_Import                         : constant Name_Id := N + 179;\n-   Name_Import_Exception               : constant Name_Id := N + 180; -- VMS\n-   Name_Import_Function                : constant Name_Id := N + 181; -- GNAT\n-   Name_Import_Object                  : constant Name_Id := N + 182; -- GNAT\n-   Name_Import_Procedure               : constant Name_Id := N + 183; -- GNAT\n-   Name_Import_Valued_Procedure        : constant Name_Id := N + 184; -- GNAT\n-   Name_Inline                         : constant Name_Id := N + 185;\n-   Name_Inline_Always                  : constant Name_Id := N + 186; -- GNAT\n-   Name_Inline_Generic                 : constant Name_Id := N + 187; -- GNAT\n-   Name_Inspection_Point               : constant Name_Id := N + 188;\n-   Name_Interface                      : constant Name_Id := N + 189; -- Ada 83\n-   Name_Interface_Name                 : constant Name_Id := N + 190; -- GNAT\n-   Name_Interrupt_Handler              : constant Name_Id := N + 191;\n-   Name_Interrupt_Priority             : constant Name_Id := N + 192;\n-   Name_Java_Constructor               : constant Name_Id := N + 193; -- GNAT\n-   Name_Java_Interface                 : constant Name_Id := N + 194; -- GNAT\n-   Name_Keep_Names                     : constant Name_Id := N + 195; -- GNAT\n-   Name_Link_With                      : constant Name_Id := N + 196; -- GNAT\n-   Name_Linker_Alias                   : constant Name_Id := N + 197; -- GNAT\n-   Name_Linker_Options                 : constant Name_Id := N + 198;\n-   Name_Linker_Section                 : constant Name_Id := N + 199; -- GNAT\n-   Name_List                           : constant Name_Id := N + 200;\n-   Name_Machine_Attribute              : constant Name_Id := N + 201; -- GNAT\n-   Name_Main                           : constant Name_Id := N + 202; -- GNAT\n-   Name_Main_Storage                   : constant Name_Id := N + 203; -- GNAT\n-   Name_Memory_Size                    : constant Name_Id := N + 204; -- Ada 83\n-   Name_No_Return                      : constant Name_Id := N + 205; -- GNAT\n-   Name_Obsolescent                    : constant Name_Id := N + 206; -- GNAT\n-   Name_Optimize                       : constant Name_Id := N + 207;\n-   Name_Optional_Overriding            : constant Name_Id := N + 208;\n-   Name_Overriding                     : constant Name_Id := N + 209;\n-   Name_Pack                           : constant Name_Id := N + 210;\n-   Name_Page                           : constant Name_Id := N + 211;\n-   Name_Passive                        : constant Name_Id := N + 212; -- GNAT\n-   Name_Preelaborate                   : constant Name_Id := N + 213;\n-   Name_Priority                       : constant Name_Id := N + 214;\n-   Name_Psect_Object                   : constant Name_Id := N + 215; -- VMS\n-   Name_Pure                           : constant Name_Id := N + 216;\n-   Name_Pure_Function                  : constant Name_Id := N + 217; -- GNAT\n-   Name_Remote_Call_Interface          : constant Name_Id := N + 218;\n-   Name_Remote_Types                   : constant Name_Id := N + 219;\n-   Name_Share_Generic                  : constant Name_Id := N + 220; -- GNAT\n-   Name_Shared                         : constant Name_Id := N + 221; -- Ada 83\n-   Name_Shared_Passive                 : constant Name_Id := N + 222;\n+   Name_Assert                         : constant Name_Id := N + 154; -- GNAT\n+   Name_Asynchronous                   : constant Name_Id := N + 155;\n+   Name_Atomic                         : constant Name_Id := N + 156;\n+   Name_Atomic_Components              : constant Name_Id := N + 157;\n+   Name_Attach_Handler                 : constant Name_Id := N + 158;\n+   Name_Comment                        : constant Name_Id := N + 159; -- GNAT\n+   Name_Common_Object                  : constant Name_Id := N + 160; -- GNAT\n+   Name_Complex_Representation         : constant Name_Id := N + 161; -- GNAT\n+   Name_Controlled                     : constant Name_Id := N + 162;\n+   Name_Convention                     : constant Name_Id := N + 163;\n+   Name_CPP_Class                      : constant Name_Id := N + 164; -- GNAT\n+   Name_CPP_Constructor                : constant Name_Id := N + 165; -- GNAT\n+   Name_CPP_Virtual                    : constant Name_Id := N + 166; -- GNAT\n+   Name_CPP_Vtable                     : constant Name_Id := N + 167; -- GNAT\n+   Name_Debug                          : constant Name_Id := N + 168; -- GNAT\n+   Name_Elaborate                      : constant Name_Id := N + 169; -- Ada 83\n+   Name_Elaborate_All                  : constant Name_Id := N + 170;\n+   Name_Elaborate_Body                 : constant Name_Id := N + 171;\n+   Name_Export                         : constant Name_Id := N + 172;\n+   Name_Export_Exception               : constant Name_Id := N + 173; -- VMS\n+   Name_Export_Function                : constant Name_Id := N + 174; -- GNAT\n+   Name_Export_Object                  : constant Name_Id := N + 175; -- GNAT\n+   Name_Export_Procedure               : constant Name_Id := N + 176; -- GNAT\n+   Name_Export_Value                   : constant Name_Id := N + 177; -- GNAT\n+   Name_Export_Valued_Procedure        : constant Name_Id := N + 178; -- GNAT\n+   Name_External                       : constant Name_Id := N + 179; -- GNAT\n+   Name_Finalize_Storage_Only          : constant Name_Id := N + 180; -- GNAT\n+   Name_Ident                          : constant Name_Id := N + 181; -- VMS\n+   Name_Import                         : constant Name_Id := N + 182;\n+   Name_Import_Exception               : constant Name_Id := N + 183; -- VMS\n+   Name_Import_Function                : constant Name_Id := N + 184; -- GNAT\n+   Name_Import_Object                  : constant Name_Id := N + 185; -- GNAT\n+   Name_Import_Procedure               : constant Name_Id := N + 186; -- GNAT\n+   Name_Import_Valued_Procedure        : constant Name_Id := N + 187; -- GNAT\n+   Name_Inline                         : constant Name_Id := N + 188;\n+   Name_Inline_Always                  : constant Name_Id := N + 189; -- GNAT\n+   Name_Inline_Generic                 : constant Name_Id := N + 190; -- GNAT\n+   Name_Inspection_Point               : constant Name_Id := N + 191;\n+   Name_Interface                      : constant Name_Id := N + 192; -- Ada 83\n+   Name_Interface_Name                 : constant Name_Id := N + 193; -- GNAT\n+   Name_Interrupt_Handler              : constant Name_Id := N + 194;\n+   Name_Interrupt_Priority             : constant Name_Id := N + 195;\n+   Name_Java_Constructor               : constant Name_Id := N + 196; -- GNAT\n+   Name_Java_Interface                 : constant Name_Id := N + 197; -- GNAT\n+   Name_Keep_Names                     : constant Name_Id := N + 198; -- GNAT\n+   Name_Link_With                      : constant Name_Id := N + 199; -- GNAT\n+   Name_Linker_Alias                   : constant Name_Id := N + 200; -- GNAT\n+   Name_Linker_Options                 : constant Name_Id := N + 201;\n+   Name_Linker_Section                 : constant Name_Id := N + 202; -- GNAT\n+   Name_List                           : constant Name_Id := N + 203;\n+   Name_Machine_Attribute              : constant Name_Id := N + 204; -- GNAT\n+   Name_Main                           : constant Name_Id := N + 205; -- GNAT\n+   Name_Main_Storage                   : constant Name_Id := N + 206; -- GNAT\n+   Name_Memory_Size                    : constant Name_Id := N + 207; -- Ada 83\n+   Name_No_Return                      : constant Name_Id := N + 208; -- GNAT\n+   Name_Obsolescent                    : constant Name_Id := N + 209; -- GNAT\n+   Name_Optimize                       : constant Name_Id := N + 210;\n+   Name_Optional_Overriding            : constant Name_Id := N + 211;\n+   Name_Overriding                     : constant Name_Id := N + 212;\n+   Name_Pack                           : constant Name_Id := N + 213;\n+   Name_Page                           : constant Name_Id := N + 214;\n+   Name_Passive                        : constant Name_Id := N + 215; -- GNAT\n+   Name_Preelaborate                   : constant Name_Id := N + 216;\n+   Name_Priority                       : constant Name_Id := N + 217;\n+   Name_Psect_Object                   : constant Name_Id := N + 218; -- VMS\n+   Name_Pure                           : constant Name_Id := N + 219;\n+   Name_Pure_Function                  : constant Name_Id := N + 220; -- GNAT\n+   Name_Remote_Call_Interface          : constant Name_Id := N + 221;\n+   Name_Remote_Types                   : constant Name_Id := N + 222;\n+   Name_Share_Generic                  : constant Name_Id := N + 223; -- GNAT\n+   Name_Shared                         : constant Name_Id := N + 224; -- Ada 83\n+   Name_Shared_Passive                 : constant Name_Id := N + 225;\n \n    --  Note: Storage_Size is not in this list because its name matches the\n    --  name of the corresponding attribute. However, it is included in the\n@@ -449,27 +455,27 @@ package Snames is\n    --  Note: Storage_Unit is also omitted from the list because of a clash\n    --  with an attribute name, and is treated similarly.\n \n-   Name_Source_Reference               : constant Name_Id := N + 223; -- GNAT\n-   Name_Stream_Convert                 : constant Name_Id := N + 224; -- GNAT\n-   Name_Subtitle                       : constant Name_Id := N + 225; -- GNAT\n-   Name_Suppress_All                   : constant Name_Id := N + 226; -- GNAT\n-   Name_Suppress_Debug_Info            : constant Name_Id := N + 227; -- GNAT\n-   Name_Suppress_Initialization        : constant Name_Id := N + 228; -- GNAT\n-   Name_System_Name                    : constant Name_Id := N + 229; -- Ada 83\n-   Name_Task_Info                      : constant Name_Id := N + 230; -- GNAT\n-   Name_Task_Name                      : constant Name_Id := N + 231; -- GNAT\n-   Name_Task_Storage                   : constant Name_Id := N + 232; -- VMS\n-   Name_Thread_Body                    : constant Name_Id := N + 233; -- GNAT\n-   Name_Time_Slice                     : constant Name_Id := N + 234; -- GNAT\n-   Name_Title                          : constant Name_Id := N + 235; -- GNAT\n-   Name_Unchecked_Union                : constant Name_Id := N + 236; -- GNAT\n-   Name_Unimplemented_Unit             : constant Name_Id := N + 237; -- GNAT\n-   Name_Unreferenced                   : constant Name_Id := N + 238; -- GNAT\n-   Name_Unreserve_All_Interrupts       : constant Name_Id := N + 239; -- GNAT\n-   Name_Volatile                       : constant Name_Id := N + 240;\n-   Name_Volatile_Components            : constant Name_Id := N + 241;\n-   Name_Weak_External                  : constant Name_Id := N + 242; -- GNAT\n-   Last_Pragma_Name                    : constant Name_Id := N + 242;\n+   Name_Source_Reference               : constant Name_Id := N + 226; -- GNAT\n+   Name_Stream_Convert                 : constant Name_Id := N + 227; -- GNAT\n+   Name_Subtitle                       : constant Name_Id := N + 228; -- GNAT\n+   Name_Suppress_All                   : constant Name_Id := N + 229; -- GNAT\n+   Name_Suppress_Debug_Info            : constant Name_Id := N + 230; -- GNAT\n+   Name_Suppress_Initialization        : constant Name_Id := N + 231; -- GNAT\n+   Name_System_Name                    : constant Name_Id := N + 232; -- Ada 83\n+   Name_Task_Info                      : constant Name_Id := N + 233; -- GNAT\n+   Name_Task_Name                      : constant Name_Id := N + 234; -- GNAT\n+   Name_Task_Storage                   : constant Name_Id := N + 235; -- VMS\n+   Name_Thread_Body                    : constant Name_Id := N + 236; -- GNAT\n+   Name_Time_Slice                     : constant Name_Id := N + 237; -- GNAT\n+   Name_Title                          : constant Name_Id := N + 238; -- GNAT\n+   Name_Unchecked_Union                : constant Name_Id := N + 239; -- GNAT\n+   Name_Unimplemented_Unit             : constant Name_Id := N + 240; -- GNAT\n+   Name_Unreferenced                   : constant Name_Id := N + 241; -- GNAT\n+   Name_Unreserve_All_Interrupts       : constant Name_Id := N + 242; -- GNAT\n+   Name_Volatile                       : constant Name_Id := N + 243;\n+   Name_Volatile_Components            : constant Name_Id := N + 244;\n+   Name_Weak_External                  : constant Name_Id := N + 245; -- GNAT\n+   Last_Pragma_Name                    : constant Name_Id := N + 245;\n \n    --  Language convention names for pragma Convention/Export/Import/Interface\n    --  Note that Name_C is not included in this list, since it was already\n@@ -480,98 +486,98 @@ package Snames is\n    --  Entry and Protected, this is because these conventions cannot be\n    --  specified by a pragma.\n \n-   First_Convention_Name               : constant Name_Id := N + 243;\n-   Name_Ada                            : constant Name_Id := N + 243;\n-   Name_Assembler                      : constant Name_Id := N + 244;\n-   Name_COBOL                          : constant Name_Id := N + 245;\n-   Name_CPP                            : constant Name_Id := N + 246;\n-   Name_Fortran                        : constant Name_Id := N + 247;\n-   Name_Intrinsic                      : constant Name_Id := N + 248;\n-   Name_Java                           : constant Name_Id := N + 249;\n-   Name_Stdcall                        : constant Name_Id := N + 250;\n-   Name_Stubbed                        : constant Name_Id := N + 251;\n-   Last_Convention_Name                : constant Name_Id := N + 251;\n+   First_Convention_Name               : constant Name_Id := N + 246;\n+   Name_Ada                            : constant Name_Id := N + 246;\n+   Name_Assembler                      : constant Name_Id := N + 247;\n+   Name_COBOL                          : constant Name_Id := N + 248;\n+   Name_CPP                            : constant Name_Id := N + 249;\n+   Name_Fortran                        : constant Name_Id := N + 250;\n+   Name_Intrinsic                      : constant Name_Id := N + 251;\n+   Name_Java                           : constant Name_Id := N + 252;\n+   Name_Stdcall                        : constant Name_Id := N + 253;\n+   Name_Stubbed                        : constant Name_Id := N + 254;\n+   Last_Convention_Name                : constant Name_Id := N + 254;\n \n    --  The following names are preset as synonyms for Assembler\n \n-   Name_Asm                            : constant Name_Id := N + 252;\n-   Name_Assembly                       : constant Name_Id := N + 253;\n+   Name_Asm                            : constant Name_Id := N + 255;\n+   Name_Assembly                       : constant Name_Id := N + 256;\n \n    --  The following names are preset as synonyms for C\n \n-   Name_Default                        : constant Name_Id := N + 254;\n+   Name_Default                        : constant Name_Id := N + 257;\n    --  Name_Exernal (previously defined as pragma)\n \n    --  The following names are present as synonyms for Stdcall\n \n-   Name_DLL                            : constant Name_Id := N + 255;\n-   Name_Win32                          : constant Name_Id := N + 256;\n+   Name_DLL                            : constant Name_Id := N + 258;\n+   Name_Win32                          : constant Name_Id := N + 259;\n \n    --  Other special names used in processing pragmas\n \n-   Name_As_Is                          : constant Name_Id := N + 257;\n-   Name_Body_File_Name                 : constant Name_Id := N + 258;\n-   Name_Casing                         : constant Name_Id := N + 259;\n-   Name_Code                           : constant Name_Id := N + 260;\n-   Name_Component                      : constant Name_Id := N + 261;\n-   Name_Component_Size_4               : constant Name_Id := N + 262;\n-   Name_Copy                           : constant Name_Id := N + 263;\n-   Name_D_Float                        : constant Name_Id := N + 264;\n-   Name_Descriptor                     : constant Name_Id := N + 265;\n-   Name_Dot_Replacement                : constant Name_Id := N + 266;\n-   Name_Dynamic                        : constant Name_Id := N + 267;\n-   Name_Entity                         : constant Name_Id := N + 268;\n-   Name_External_Name                  : constant Name_Id := N + 269;\n-   Name_First_Optional_Parameter       : constant Name_Id := N + 270;\n-   Name_Form                           : constant Name_Id := N + 271;\n-   Name_G_Float                        : constant Name_Id := N + 272;\n-   Name_Gcc                            : constant Name_Id := N + 273;\n-   Name_Gnat                           : constant Name_Id := N + 274;\n-   Name_GPL                            : constant Name_Id := N + 275;\n-   Name_IEEE_Float                     : constant Name_Id := N + 276;\n-   Name_Homonym_Number                 : constant Name_Id := N + 277;\n-   Name_Internal                       : constant Name_Id := N + 278;\n-   Name_Link_Name                      : constant Name_Id := N + 279;\n-   Name_Lowercase                      : constant Name_Id := N + 280;\n-   Name_Max_Size                       : constant Name_Id := N + 281;\n-   Name_Mechanism                      : constant Name_Id := N + 282;\n-   Name_Mixedcase                      : constant Name_Id := N + 283;\n-   Name_Modified_GPL                   : constant Name_Id := N + 284;\n-   Name_Name                           : constant Name_Id := N + 285;\n-   Name_NCA                            : constant Name_Id := N + 286;\n-   Name_No                             : constant Name_Id := N + 287;\n-   Name_On                             : constant Name_Id := N + 288;\n-   Name_Parameter_Types                : constant Name_Id := N + 289;\n-   Name_Reference                      : constant Name_Id := N + 290;\n-   Name_No_Requeue                     : constant Name_Id := N + 291;\n-   Name_No_Task_Attributes             : constant Name_Id := N + 292;\n-   Name_Restricted                     : constant Name_Id := N + 293;\n-   Name_Result_Mechanism               : constant Name_Id := N + 294;\n-   Name_Result_Type                    : constant Name_Id := N + 295;\n-   Name_Runtime                        : constant Name_Id := N + 296;\n-   Name_SB                             : constant Name_Id := N + 297;\n-   Name_Secondary_Stack_Size           : constant Name_Id := N + 298;\n-   Name_Section                        : constant Name_Id := N + 299;\n-   Name_Semaphore                      : constant Name_Id := N + 300;\n-   Name_Spec_File_Name                 : constant Name_Id := N + 301;\n-   Name_Static                         : constant Name_Id := N + 302;\n-   Name_Stack_Size                     : constant Name_Id := N + 303;\n-   Name_Subunit_File_Name              : constant Name_Id := N + 304;\n-   Name_Task_Stack_Size_Default        : constant Name_Id := N + 305;\n-   Name_Task_Type                      : constant Name_Id := N + 306;\n-   Name_Time_Slicing_Enabled           : constant Name_Id := N + 307;\n-   Name_Top_Guard                      : constant Name_Id := N + 308;\n-   Name_UBA                            : constant Name_Id := N + 309;\n-   Name_UBS                            : constant Name_Id := N + 310;\n-   Name_UBSB                           : constant Name_Id := N + 311;\n-   Name_Unit_Name                      : constant Name_Id := N + 312;\n-   Name_Unknown                        : constant Name_Id := N + 313;\n-   Name_Unrestricted                   : constant Name_Id := N + 314;\n-   Name_Uppercase                      : constant Name_Id := N + 315;\n-   Name_User                           : constant Name_Id := N + 316;\n-   Name_VAX_Float                      : constant Name_Id := N + 317;\n-   Name_VMS                            : constant Name_Id := N + 318;\n-   Name_Working_Storage                : constant Name_Id := N + 319;\n+   Name_As_Is                          : constant Name_Id := N + 260;\n+   Name_Body_File_Name                 : constant Name_Id := N + 261;\n+   Name_Casing                         : constant Name_Id := N + 262;\n+   Name_Code                           : constant Name_Id := N + 263;\n+   Name_Component                      : constant Name_Id := N + 264;\n+   Name_Component_Size_4               : constant Name_Id := N + 265;\n+   Name_Copy                           : constant Name_Id := N + 266;\n+   Name_D_Float                        : constant Name_Id := N + 267;\n+   Name_Descriptor                     : constant Name_Id := N + 268;\n+   Name_Dot_Replacement                : constant Name_Id := N + 269;\n+   Name_Dynamic                        : constant Name_Id := N + 270;\n+   Name_Entity                         : constant Name_Id := N + 271;\n+   Name_External_Name                  : constant Name_Id := N + 272;\n+   Name_First_Optional_Parameter       : constant Name_Id := N + 273;\n+   Name_Form                           : constant Name_Id := N + 274;\n+   Name_G_Float                        : constant Name_Id := N + 275;\n+   Name_Gcc                            : constant Name_Id := N + 276;\n+   Name_Gnat                           : constant Name_Id := N + 277;\n+   Name_GPL                            : constant Name_Id := N + 278;\n+   Name_IEEE_Float                     : constant Name_Id := N + 279;\n+   Name_Homonym_Number                 : constant Name_Id := N + 280;\n+   Name_Internal                       : constant Name_Id := N + 281;\n+   Name_Link_Name                      : constant Name_Id := N + 282;\n+   Name_Lowercase                      : constant Name_Id := N + 283;\n+   Name_Max_Size                       : constant Name_Id := N + 284;\n+   Name_Mechanism                      : constant Name_Id := N + 285;\n+   Name_Mixedcase                      : constant Name_Id := N + 286;\n+   Name_Modified_GPL                   : constant Name_Id := N + 287;\n+   Name_Name                           : constant Name_Id := N + 288;\n+   Name_NCA                            : constant Name_Id := N + 289;\n+   Name_No                             : constant Name_Id := N + 290;\n+   Name_On                             : constant Name_Id := N + 291;\n+   Name_Parameter_Types                : constant Name_Id := N + 292;\n+   Name_Reference                      : constant Name_Id := N + 293;\n+   Name_No_Requeue                     : constant Name_Id := N + 294;\n+   Name_No_Task_Attributes             : constant Name_Id := N + 295;\n+   Name_Restricted                     : constant Name_Id := N + 296;\n+   Name_Result_Mechanism               : constant Name_Id := N + 297;\n+   Name_Result_Type                    : constant Name_Id := N + 298;\n+   Name_Runtime                        : constant Name_Id := N + 299;\n+   Name_SB                             : constant Name_Id := N + 300;\n+   Name_Secondary_Stack_Size           : constant Name_Id := N + 301;\n+   Name_Section                        : constant Name_Id := N + 302;\n+   Name_Semaphore                      : constant Name_Id := N + 303;\n+   Name_Spec_File_Name                 : constant Name_Id := N + 304;\n+   Name_Static                         : constant Name_Id := N + 305;\n+   Name_Stack_Size                     : constant Name_Id := N + 306;\n+   Name_Subunit_File_Name              : constant Name_Id := N + 307;\n+   Name_Task_Stack_Size_Default        : constant Name_Id := N + 308;\n+   Name_Task_Type                      : constant Name_Id := N + 309;\n+   Name_Time_Slicing_Enabled           : constant Name_Id := N + 310;\n+   Name_Top_Guard                      : constant Name_Id := N + 311;\n+   Name_UBA                            : constant Name_Id := N + 312;\n+   Name_UBS                            : constant Name_Id := N + 313;\n+   Name_UBSB                           : constant Name_Id := N + 314;\n+   Name_Unit_Name                      : constant Name_Id := N + 315;\n+   Name_Unknown                        : constant Name_Id := N + 316;\n+   Name_Unrestricted                   : constant Name_Id := N + 317;\n+   Name_Uppercase                      : constant Name_Id := N + 318;\n+   Name_User                           : constant Name_Id := N + 319;\n+   Name_VAX_Float                      : constant Name_Id := N + 320;\n+   Name_VMS                            : constant Name_Id := N + 321;\n+   Name_Working_Storage                : constant Name_Id := N + 322;\n \n    --  Names of recognized attributes. The entries with the comment \"Ada 83\"\n    --  are attributes that are defined in Ada 83, but not in Ada 95. These\n@@ -585,374 +591,374 @@ package Snames is\n    --  The entries marked VMS are recognized only in OpenVMS implementations\n    --  of GNAT, and are treated as illegal in all other contexts.\n \n-   First_Attribute_Name                : constant Name_Id := N + 320;\n-   Name_Abort_Signal                   : constant Name_Id := N + 320;  -- GNAT\n-   Name_Access                         : constant Name_Id := N + 321;\n-   Name_Address                        : constant Name_Id := N + 322;\n-   Name_Address_Size                   : constant Name_Id := N + 323;  -- GNAT\n-   Name_Aft                            : constant Name_Id := N + 324;\n-   Name_Alignment                      : constant Name_Id := N + 325;\n-   Name_Asm_Input                      : constant Name_Id := N + 326;  -- GNAT\n-   Name_Asm_Output                     : constant Name_Id := N + 327;  -- GNAT\n-   Name_AST_Entry                      : constant Name_Id := N + 328;  -- VMS\n-   Name_Bit                            : constant Name_Id := N + 329;  -- GNAT\n-   Name_Bit_Order                      : constant Name_Id := N + 330;\n-   Name_Bit_Position                   : constant Name_Id := N + 331;  -- GNAT\n-   Name_Body_Version                   : constant Name_Id := N + 332;\n-   Name_Callable                       : constant Name_Id := N + 333;\n-   Name_Caller                         : constant Name_Id := N + 334;\n-   Name_Code_Address                   : constant Name_Id := N + 335;  -- GNAT\n-   Name_Component_Size                 : constant Name_Id := N + 336;\n-   Name_Compose                        : constant Name_Id := N + 337;\n-   Name_Constrained                    : constant Name_Id := N + 338;\n-   Name_Count                          : constant Name_Id := N + 339;\n-   Name_Default_Bit_Order              : constant Name_Id := N + 340; -- GNAT\n-   Name_Definite                       : constant Name_Id := N + 341;\n-   Name_Delta                          : constant Name_Id := N + 342;\n-   Name_Denorm                         : constant Name_Id := N + 343;\n-   Name_Digits                         : constant Name_Id := N + 344;\n-   Name_Elaborated                     : constant Name_Id := N + 345; -- GNAT\n-   Name_Emax                           : constant Name_Id := N + 346; -- Ada 83\n-   Name_Enum_Rep                       : constant Name_Id := N + 347; -- GNAT\n-   Name_Epsilon                        : constant Name_Id := N + 348; -- Ada 83\n-   Name_Exponent                       : constant Name_Id := N + 349;\n-   Name_External_Tag                   : constant Name_Id := N + 350;\n-   Name_First                          : constant Name_Id := N + 351;\n-   Name_First_Bit                      : constant Name_Id := N + 352;\n-   Name_Fixed_Value                    : constant Name_Id := N + 353; -- GNAT\n-   Name_Fore                           : constant Name_Id := N + 354;\n-   Name_Has_Discriminants              : constant Name_Id := N + 355; -- GNAT\n-   Name_Identity                       : constant Name_Id := N + 356;\n-   Name_Img                            : constant Name_Id := N + 357; -- GNAT\n-   Name_Integer_Value                  : constant Name_Id := N + 358; -- GNAT\n-   Name_Large                          : constant Name_Id := N + 359; -- Ada 83\n-   Name_Last                           : constant Name_Id := N + 360;\n-   Name_Last_Bit                       : constant Name_Id := N + 361;\n-   Name_Leading_Part                   : constant Name_Id := N + 362;\n-   Name_Length                         : constant Name_Id := N + 363;\n-   Name_Machine_Emax                   : constant Name_Id := N + 364;\n-   Name_Machine_Emin                   : constant Name_Id := N + 365;\n-   Name_Machine_Mantissa               : constant Name_Id := N + 366;\n-   Name_Machine_Overflows              : constant Name_Id := N + 367;\n-   Name_Machine_Radix                  : constant Name_Id := N + 368;\n-   Name_Machine_Rounds                 : constant Name_Id := N + 369;\n-   Name_Machine_Size                   : constant Name_Id := N + 370; -- GNAT\n-   Name_Mantissa                       : constant Name_Id := N + 371; -- Ada 83\n-   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 372;\n-   Name_Maximum_Alignment              : constant Name_Id := N + 373; -- GNAT\n-   Name_Mechanism_Code                 : constant Name_Id := N + 374; -- GNAT\n-   Name_Model_Emin                     : constant Name_Id := N + 375;\n-   Name_Model_Epsilon                  : constant Name_Id := N + 376;\n-   Name_Model_Mantissa                 : constant Name_Id := N + 377;\n-   Name_Model_Small                    : constant Name_Id := N + 378;\n-   Name_Modulus                        : constant Name_Id := N + 379;\n-   Name_Null_Parameter                 : constant Name_Id := N + 380; -- GNAT\n-   Name_Object_Size                    : constant Name_Id := N + 381; -- GNAT\n-   Name_Partition_ID                   : constant Name_Id := N + 382;\n-   Name_Passed_By_Reference            : constant Name_Id := N + 383; -- GNAT\n-   Name_Pool_Address                   : constant Name_Id := N + 384;\n-   Name_Pos                            : constant Name_Id := N + 385;\n-   Name_Position                       : constant Name_Id := N + 386;\n-   Name_Range                          : constant Name_Id := N + 387;\n-   Name_Range_Length                   : constant Name_Id := N + 388; -- GNAT\n-   Name_Round                          : constant Name_Id := N + 389;\n-   Name_Safe_Emax                      : constant Name_Id := N + 390; -- Ada 83\n-   Name_Safe_First                     : constant Name_Id := N + 391;\n-   Name_Safe_Large                     : constant Name_Id := N + 392; -- Ada 83\n-   Name_Safe_Last                      : constant Name_Id := N + 393;\n-   Name_Safe_Small                     : constant Name_Id := N + 394; -- Ada 83\n-   Name_Scale                          : constant Name_Id := N + 395;\n-   Name_Scaling                        : constant Name_Id := N + 396;\n-   Name_Signed_Zeros                   : constant Name_Id := N + 397;\n-   Name_Size                           : constant Name_Id := N + 398;\n-   Name_Small                          : constant Name_Id := N + 399;\n-   Name_Storage_Size                   : constant Name_Id := N + 400;\n-   Name_Storage_Unit                   : constant Name_Id := N + 401; -- GNAT\n-   Name_Tag                            : constant Name_Id := N + 402;\n-   Name_Target_Name                    : constant Name_Id := N + 403; -- GNAT\n-   Name_Terminated                     : constant Name_Id := N + 404;\n-   Name_To_Address                     : constant Name_Id := N + 405; -- GNAT\n-   Name_Type_Class                     : constant Name_Id := N + 406; -- GNAT\n-   Name_UET_Address                    : constant Name_Id := N + 407; -- GNAT\n-   Name_Unbiased_Rounding              : constant Name_Id := N + 408;\n-   Name_Unchecked_Access               : constant Name_Id := N + 409;\n-   Name_Unconstrained_Array            : constant Name_Id := N + 410;\n-   Name_Universal_Literal_String       : constant Name_Id := N + 411; -- GNAT\n-   Name_Unrestricted_Access            : constant Name_Id := N + 412; -- GNAT\n-   Name_VADS_Size                      : constant Name_Id := N + 413; -- GNAT\n-   Name_Val                            : constant Name_Id := N + 414;\n-   Name_Valid                          : constant Name_Id := N + 415;\n-   Name_Value_Size                     : constant Name_Id := N + 416; -- GNAT\n-   Name_Version                        : constant Name_Id := N + 417;\n-   Name_Wchar_T_Size                   : constant Name_Id := N + 418; -- GNAT\n-   Name_Wide_Width                     : constant Name_Id := N + 419;\n-   Name_Width                          : constant Name_Id := N + 420;\n-   Name_Word_Size                      : constant Name_Id := N + 421; -- GNAT\n+   First_Attribute_Name                : constant Name_Id := N + 323;\n+   Name_Abort_Signal                   : constant Name_Id := N + 323;  -- GNAT\n+   Name_Access                         : constant Name_Id := N + 324;\n+   Name_Address                        : constant Name_Id := N + 325;\n+   Name_Address_Size                   : constant Name_Id := N + 326;  -- GNAT\n+   Name_Aft                            : constant Name_Id := N + 327;\n+   Name_Alignment                      : constant Name_Id := N + 328;\n+   Name_Asm_Input                      : constant Name_Id := N + 329;  -- GNAT\n+   Name_Asm_Output                     : constant Name_Id := N + 330;  -- GNAT\n+   Name_AST_Entry                      : constant Name_Id := N + 331;  -- VMS\n+   Name_Bit                            : constant Name_Id := N + 332;  -- GNAT\n+   Name_Bit_Order                      : constant Name_Id := N + 333;\n+   Name_Bit_Position                   : constant Name_Id := N + 334;  -- GNAT\n+   Name_Body_Version                   : constant Name_Id := N + 335;\n+   Name_Callable                       : constant Name_Id := N + 336;\n+   Name_Caller                         : constant Name_Id := N + 337;\n+   Name_Code_Address                   : constant Name_Id := N + 338;  -- GNAT\n+   Name_Component_Size                 : constant Name_Id := N + 339;\n+   Name_Compose                        : constant Name_Id := N + 340;\n+   Name_Constrained                    : constant Name_Id := N + 341;\n+   Name_Count                          : constant Name_Id := N + 342;\n+   Name_Default_Bit_Order              : constant Name_Id := N + 343; -- GNAT\n+   Name_Definite                       : constant Name_Id := N + 344;\n+   Name_Delta                          : constant Name_Id := N + 345;\n+   Name_Denorm                         : constant Name_Id := N + 346;\n+   Name_Digits                         : constant Name_Id := N + 347;\n+   Name_Elaborated                     : constant Name_Id := N + 348; -- GNAT\n+   Name_Emax                           : constant Name_Id := N + 349; -- Ada 83\n+   Name_Enum_Rep                       : constant Name_Id := N + 350; -- GNAT\n+   Name_Epsilon                        : constant Name_Id := N + 351; -- Ada 83\n+   Name_Exponent                       : constant Name_Id := N + 352;\n+   Name_External_Tag                   : constant Name_Id := N + 353;\n+   Name_First                          : constant Name_Id := N + 354;\n+   Name_First_Bit                      : constant Name_Id := N + 355;\n+   Name_Fixed_Value                    : constant Name_Id := N + 356; -- GNAT\n+   Name_Fore                           : constant Name_Id := N + 357;\n+   Name_Has_Discriminants              : constant Name_Id := N + 358; -- GNAT\n+   Name_Identity                       : constant Name_Id := N + 359;\n+   Name_Img                            : constant Name_Id := N + 360; -- GNAT\n+   Name_Integer_Value                  : constant Name_Id := N + 361; -- GNAT\n+   Name_Large                          : constant Name_Id := N + 362; -- Ada 83\n+   Name_Last                           : constant Name_Id := N + 363;\n+   Name_Last_Bit                       : constant Name_Id := N + 364;\n+   Name_Leading_Part                   : constant Name_Id := N + 365;\n+   Name_Length                         : constant Name_Id := N + 366;\n+   Name_Machine_Emax                   : constant Name_Id := N + 367;\n+   Name_Machine_Emin                   : constant Name_Id := N + 368;\n+   Name_Machine_Mantissa               : constant Name_Id := N + 369;\n+   Name_Machine_Overflows              : constant Name_Id := N + 370;\n+   Name_Machine_Radix                  : constant Name_Id := N + 371;\n+   Name_Machine_Rounds                 : constant Name_Id := N + 372;\n+   Name_Machine_Size                   : constant Name_Id := N + 373; -- GNAT\n+   Name_Mantissa                       : constant Name_Id := N + 374; -- Ada 83\n+   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 375;\n+   Name_Maximum_Alignment              : constant Name_Id := N + 376; -- GNAT\n+   Name_Mechanism_Code                 : constant Name_Id := N + 377; -- GNAT\n+   Name_Model_Emin                     : constant Name_Id := N + 378;\n+   Name_Model_Epsilon                  : constant Name_Id := N + 379;\n+   Name_Model_Mantissa                 : constant Name_Id := N + 380;\n+   Name_Model_Small                    : constant Name_Id := N + 381;\n+   Name_Modulus                        : constant Name_Id := N + 382;\n+   Name_Null_Parameter                 : constant Name_Id := N + 383; -- GNAT\n+   Name_Object_Size                    : constant Name_Id := N + 384; -- GNAT\n+   Name_Partition_ID                   : constant Name_Id := N + 385;\n+   Name_Passed_By_Reference            : constant Name_Id := N + 386; -- GNAT\n+   Name_Pool_Address                   : constant Name_Id := N + 387;\n+   Name_Pos                            : constant Name_Id := N + 388;\n+   Name_Position                       : constant Name_Id := N + 389;\n+   Name_Range                          : constant Name_Id := N + 390;\n+   Name_Range_Length                   : constant Name_Id := N + 391; -- GNAT\n+   Name_Round                          : constant Name_Id := N + 392;\n+   Name_Safe_Emax                      : constant Name_Id := N + 393; -- Ada 83\n+   Name_Safe_First                     : constant Name_Id := N + 394;\n+   Name_Safe_Large                     : constant Name_Id := N + 395; -- Ada 83\n+   Name_Safe_Last                      : constant Name_Id := N + 396;\n+   Name_Safe_Small                     : constant Name_Id := N + 397; -- Ada 83\n+   Name_Scale                          : constant Name_Id := N + 398;\n+   Name_Scaling                        : constant Name_Id := N + 399;\n+   Name_Signed_Zeros                   : constant Name_Id := N + 400;\n+   Name_Size                           : constant Name_Id := N + 401;\n+   Name_Small                          : constant Name_Id := N + 402;\n+   Name_Storage_Size                   : constant Name_Id := N + 403;\n+   Name_Storage_Unit                   : constant Name_Id := N + 404; -- GNAT\n+   Name_Tag                            : constant Name_Id := N + 405;\n+   Name_Target_Name                    : constant Name_Id := N + 406; -- GNAT\n+   Name_Terminated                     : constant Name_Id := N + 407;\n+   Name_To_Address                     : constant Name_Id := N + 408; -- GNAT\n+   Name_Type_Class                     : constant Name_Id := N + 409; -- GNAT\n+   Name_UET_Address                    : constant Name_Id := N + 410; -- GNAT\n+   Name_Unbiased_Rounding              : constant Name_Id := N + 411;\n+   Name_Unchecked_Access               : constant Name_Id := N + 412;\n+   Name_Unconstrained_Array            : constant Name_Id := N + 413;\n+   Name_Universal_Literal_String       : constant Name_Id := N + 414; -- GNAT\n+   Name_Unrestricted_Access            : constant Name_Id := N + 415; -- GNAT\n+   Name_VADS_Size                      : constant Name_Id := N + 416; -- GNAT\n+   Name_Val                            : constant Name_Id := N + 417;\n+   Name_Valid                          : constant Name_Id := N + 418;\n+   Name_Value_Size                     : constant Name_Id := N + 419; -- GNAT\n+   Name_Version                        : constant Name_Id := N + 420;\n+   Name_Wchar_T_Size                   : constant Name_Id := N + 421; -- GNAT\n+   Name_Wide_Width                     : constant Name_Id := N + 422;\n+   Name_Width                          : constant Name_Id := N + 423;\n+   Name_Word_Size                      : constant Name_Id := N + 424; -- GNAT\n \n    --  Attributes that designate attributes returning renamable functions,\n    --  i.e. functions that return other than a universal value.\n \n-   First_Renamable_Function_Attribute  : constant Name_Id := N + 422;\n-   Name_Adjacent                       : constant Name_Id := N + 422;\n-   Name_Ceiling                        : constant Name_Id := N + 423;\n-   Name_Copy_Sign                      : constant Name_Id := N + 424;\n-   Name_Floor                          : constant Name_Id := N + 425;\n-   Name_Fraction                       : constant Name_Id := N + 426;\n-   Name_Image                          : constant Name_Id := N + 427;\n-   Name_Input                          : constant Name_Id := N + 428;\n-   Name_Machine                        : constant Name_Id := N + 429;\n-   Name_Max                            : constant Name_Id := N + 430;\n-   Name_Min                            : constant Name_Id := N + 431;\n-   Name_Model                          : constant Name_Id := N + 432;\n-   Name_Pred                           : constant Name_Id := N + 433;\n-   Name_Remainder                      : constant Name_Id := N + 434;\n-   Name_Rounding                       : constant Name_Id := N + 435;\n-   Name_Succ                           : constant Name_Id := N + 436;\n-   Name_Truncation                     : constant Name_Id := N + 437;\n-   Name_Value                          : constant Name_Id := N + 438;\n-   Name_Wide_Image                     : constant Name_Id := N + 439;\n-   Name_Wide_Value                     : constant Name_Id := N + 440;\n-   Last_Renamable_Function_Attribute   : constant Name_Id := N + 440;\n+   First_Renamable_Function_Attribute  : constant Name_Id := N + 425;\n+   Name_Adjacent                       : constant Name_Id := N + 425;\n+   Name_Ceiling                        : constant Name_Id := N + 426;\n+   Name_Copy_Sign                      : constant Name_Id := N + 427;\n+   Name_Floor                          : constant Name_Id := N + 428;\n+   Name_Fraction                       : constant Name_Id := N + 429;\n+   Name_Image                          : constant Name_Id := N + 430;\n+   Name_Input                          : constant Name_Id := N + 431;\n+   Name_Machine                        : constant Name_Id := N + 432;\n+   Name_Max                            : constant Name_Id := N + 433;\n+   Name_Min                            : constant Name_Id := N + 434;\n+   Name_Model                          : constant Name_Id := N + 435;\n+   Name_Pred                           : constant Name_Id := N + 436;\n+   Name_Remainder                      : constant Name_Id := N + 437;\n+   Name_Rounding                       : constant Name_Id := N + 438;\n+   Name_Succ                           : constant Name_Id := N + 439;\n+   Name_Truncation                     : constant Name_Id := N + 440;\n+   Name_Value                          : constant Name_Id := N + 441;\n+   Name_Wide_Image                     : constant Name_Id := N + 442;\n+   Name_Wide_Value                     : constant Name_Id := N + 443;\n+   Last_Renamable_Function_Attribute   : constant Name_Id := N + 443;\n \n    --  Attributes that designate procedures\n \n-   First_Procedure_Attribute           : constant Name_Id := N + 441;\n-   Name_Output                         : constant Name_Id := N + 441;\n-   Name_Read                           : constant Name_Id := N + 442;\n-   Name_Write                          : constant Name_Id := N + 443;\n-   Last_Procedure_Attribute            : constant Name_Id := N + 443;\n+   First_Procedure_Attribute           : constant Name_Id := N + 444;\n+   Name_Output                         : constant Name_Id := N + 444;\n+   Name_Read                           : constant Name_Id := N + 445;\n+   Name_Write                          : constant Name_Id := N + 446;\n+   Last_Procedure_Attribute            : constant Name_Id := N + 446;\n \n    --  Remaining attributes are ones that return entities\n \n-   First_Entity_Attribute_Name         : constant Name_Id := N + 444;\n-   Name_Elab_Body                      : constant Name_Id := N + 444; -- GNAT\n-   Name_Elab_Spec                      : constant Name_Id := N + 445; -- GNAT\n-   Name_Storage_Pool                   : constant Name_Id := N + 446;\n+   First_Entity_Attribute_Name         : constant Name_Id := N + 447;\n+   Name_Elab_Body                      : constant Name_Id := N + 447; -- GNAT\n+   Name_Elab_Spec                      : constant Name_Id := N + 448; -- GNAT\n+   Name_Storage_Pool                   : constant Name_Id := N + 449;\n \n    --  These attributes are the ones that return types\n \n-   First_Type_Attribute_Name           : constant Name_Id := N + 447;\n-   Name_Base                           : constant Name_Id := N + 447;\n-   Name_Class                          : constant Name_Id := N + 448;\n-   Last_Type_Attribute_Name            : constant Name_Id := N + 448;\n-   Last_Entity_Attribute_Name          : constant Name_Id := N + 448;\n-   Last_Attribute_Name                 : constant Name_Id := N + 448;\n+   First_Type_Attribute_Name           : constant Name_Id := N + 450;\n+   Name_Base                           : constant Name_Id := N + 450;\n+   Name_Class                          : constant Name_Id := N + 451;\n+   Last_Type_Attribute_Name            : constant Name_Id := N + 451;\n+   Last_Entity_Attribute_Name          : constant Name_Id := N + 451;\n+   Last_Attribute_Name                 : constant Name_Id := N + 451;\n \n    --  Names of recognized locking policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. C for Ceiling_Locking). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Locking_Policy_Name           : constant Name_Id := N + 449;\n-   Name_Ceiling_Locking                : constant Name_Id := N + 449;\n-   Name_Inheritance_Locking            : constant Name_Id := N + 450;\n-   Last_Locking_Policy_Name            : constant Name_Id := N + 450;\n+   First_Locking_Policy_Name           : constant Name_Id := N + 452;\n+   Name_Ceiling_Locking                : constant Name_Id := N + 452;\n+   Name_Inheritance_Locking            : constant Name_Id := N + 453;\n+   Last_Locking_Policy_Name            : constant Name_Id := N + 453;\n \n    --  Names of recognized queuing policy identifiers.\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_Queuing). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Queuing_Policy_Name           : constant Name_Id := N + 451;\n-   Name_FIFO_Queuing                   : constant Name_Id := N + 451;\n-   Name_Priority_Queuing               : constant Name_Id := N + 452;\n-   Last_Queuing_Policy_Name            : constant Name_Id := N + 452;\n+   First_Queuing_Policy_Name           : constant Name_Id := N + 454;\n+   Name_FIFO_Queuing                   : constant Name_Id := N + 454;\n+   Name_Priority_Queuing               : constant Name_Id := N + 455;\n+   Last_Queuing_Policy_Name            : constant Name_Id := N + 455;\n \n    --  Names of recognized task dispatching policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_WIthinn_Priorities). If new policy names\n    --  are added, the first character must be distinct.\n \n-   First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 453;\n-   Name_FIFO_Within_Priorities         : constant Name_Id := N + 453;\n-   Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 453;\n+   First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 456;\n+   Name_FIFO_Within_Priorities         : constant Name_Id := N + 456;\n+   Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 456;\n \n    --  Names of recognized checks for pragma Suppress\n \n-   First_Check_Name                    : constant Name_Id := N + 454;\n-   Name_Access_Check                   : constant Name_Id := N + 454;\n-   Name_Accessibility_Check            : constant Name_Id := N + 455;\n-   Name_Discriminant_Check             : constant Name_Id := N + 456;\n-   Name_Division_Check                 : constant Name_Id := N + 457;\n-   Name_Elaboration_Check              : constant Name_Id := N + 458;\n-   Name_Index_Check                    : constant Name_Id := N + 459;\n-   Name_Length_Check                   : constant Name_Id := N + 460;\n-   Name_Overflow_Check                 : constant Name_Id := N + 461;\n-   Name_Range_Check                    : constant Name_Id := N + 462;\n-   Name_Storage_Check                  : constant Name_Id := N + 463;\n-   Name_Tag_Check                      : constant Name_Id := N + 464;\n-   Name_All_Checks                     : constant Name_Id := N + 465;\n-   Last_Check_Name                     : constant Name_Id := N + 465;\n+   First_Check_Name                    : constant Name_Id := N + 457;\n+   Name_Access_Check                   : constant Name_Id := N + 457;\n+   Name_Accessibility_Check            : constant Name_Id := N + 458;\n+   Name_Discriminant_Check             : constant Name_Id := N + 459;\n+   Name_Division_Check                 : constant Name_Id := N + 460;\n+   Name_Elaboration_Check              : constant Name_Id := N + 461;\n+   Name_Index_Check                    : constant Name_Id := N + 462;\n+   Name_Length_Check                   : constant Name_Id := N + 463;\n+   Name_Overflow_Check                 : constant Name_Id := N + 464;\n+   Name_Range_Check                    : constant Name_Id := N + 465;\n+   Name_Storage_Check                  : constant Name_Id := N + 466;\n+   Name_Tag_Check                      : constant Name_Id := N + 467;\n+   Name_All_Checks                     : constant Name_Id := N + 468;\n+   Last_Check_Name                     : constant Name_Id := N + 468;\n \n    --  Names corresponding to reserved keywords, excluding those already\n    --  declared in the attribute list (Access, Delta, Digits, Range).\n \n-   Name_Abort                          : constant Name_Id := N + 466;\n-   Name_Abs                            : constant Name_Id := N + 467;\n-   Name_Accept                         : constant Name_Id := N + 468;\n-   Name_And                            : constant Name_Id := N + 469;\n-   Name_All                            : constant Name_Id := N + 470;\n-   Name_Array                          : constant Name_Id := N + 471;\n-   Name_At                             : constant Name_Id := N + 472;\n-   Name_Begin                          : constant Name_Id := N + 473;\n-   Name_Body                           : constant Name_Id := N + 474;\n-   Name_Case                           : constant Name_Id := N + 475;\n-   Name_Constant                       : constant Name_Id := N + 476;\n-   Name_Declare                        : constant Name_Id := N + 477;\n-   Name_Delay                          : constant Name_Id := N + 478;\n-   Name_Do                             : constant Name_Id := N + 479;\n-   Name_Else                           : constant Name_Id := N + 480;\n-   Name_Elsif                          : constant Name_Id := N + 481;\n-   Name_End                            : constant Name_Id := N + 482;\n-   Name_Entry                          : constant Name_Id := N + 483;\n-   Name_Exception                      : constant Name_Id := N + 484;\n-   Name_Exit                           : constant Name_Id := N + 485;\n-   Name_For                            : constant Name_Id := N + 486;\n-   Name_Function                       : constant Name_Id := N + 487;\n-   Name_Generic                        : constant Name_Id := N + 488;\n-   Name_Goto                           : constant Name_Id := N + 489;\n-   Name_If                             : constant Name_Id := N + 490;\n-   Name_In                             : constant Name_Id := N + 491;\n-   Name_Is                             : constant Name_Id := N + 492;\n-   Name_Limited                        : constant Name_Id := N + 493;\n-   Name_Loop                           : constant Name_Id := N + 494;\n-   Name_Mod                            : constant Name_Id := N + 495;\n-   Name_New                            : constant Name_Id := N + 496;\n-   Name_Not                            : constant Name_Id := N + 497;\n-   Name_Null                           : constant Name_Id := N + 498;\n-   Name_Of                             : constant Name_Id := N + 499;\n-   Name_Or                             : constant Name_Id := N + 500;\n-   Name_Others                         : constant Name_Id := N + 501;\n-   Name_Out                            : constant Name_Id := N + 502;\n-   Name_Package                        : constant Name_Id := N + 503;\n-   Name_Pragma                         : constant Name_Id := N + 504;\n-   Name_Private                        : constant Name_Id := N + 505;\n-   Name_Procedure                      : constant Name_Id := N + 506;\n-   Name_Raise                          : constant Name_Id := N + 507;\n-   Name_Record                         : constant Name_Id := N + 508;\n-   Name_Rem                            : constant Name_Id := N + 509;\n-   Name_Renames                        : constant Name_Id := N + 510;\n-   Name_Return                         : constant Name_Id := N + 511;\n-   Name_Reverse                        : constant Name_Id := N + 512;\n-   Name_Select                         : constant Name_Id := N + 513;\n-   Name_Separate                       : constant Name_Id := N + 514;\n-   Name_Subtype                        : constant Name_Id := N + 515;\n-   Name_Task                           : constant Name_Id := N + 516;\n-   Name_Terminate                      : constant Name_Id := N + 517;\n-   Name_Then                           : constant Name_Id := N + 518;\n-   Name_Type                           : constant Name_Id := N + 519;\n-   Name_Use                            : constant Name_Id := N + 520;\n-   Name_When                           : constant Name_Id := N + 521;\n-   Name_While                          : constant Name_Id := N + 522;\n-   Name_With                           : constant Name_Id := N + 523;\n-   Name_Xor                            : constant Name_Id := N + 524;\n+   Name_Abort                          : constant Name_Id := N + 469;\n+   Name_Abs                            : constant Name_Id := N + 470;\n+   Name_Accept                         : constant Name_Id := N + 471;\n+   Name_And                            : constant Name_Id := N + 472;\n+   Name_All                            : constant Name_Id := N + 473;\n+   Name_Array                          : constant Name_Id := N + 474;\n+   Name_At                             : constant Name_Id := N + 475;\n+   Name_Begin                          : constant Name_Id := N + 476;\n+   Name_Body                           : constant Name_Id := N + 477;\n+   Name_Case                           : constant Name_Id := N + 478;\n+   Name_Constant                       : constant Name_Id := N + 479;\n+   Name_Declare                        : constant Name_Id := N + 480;\n+   Name_Delay                          : constant Name_Id := N + 481;\n+   Name_Do                             : constant Name_Id := N + 482;\n+   Name_Else                           : constant Name_Id := N + 483;\n+   Name_Elsif                          : constant Name_Id := N + 484;\n+   Name_End                            : constant Name_Id := N + 485;\n+   Name_Entry                          : constant Name_Id := N + 486;\n+   Name_Exception                      : constant Name_Id := N + 487;\n+   Name_Exit                           : constant Name_Id := N + 488;\n+   Name_For                            : constant Name_Id := N + 489;\n+   Name_Function                       : constant Name_Id := N + 490;\n+   Name_Generic                        : constant Name_Id := N + 491;\n+   Name_Goto                           : constant Name_Id := N + 492;\n+   Name_If                             : constant Name_Id := N + 493;\n+   Name_In                             : constant Name_Id := N + 494;\n+   Name_Is                             : constant Name_Id := N + 495;\n+   Name_Limited                        : constant Name_Id := N + 496;\n+   Name_Loop                           : constant Name_Id := N + 497;\n+   Name_Mod                            : constant Name_Id := N + 498;\n+   Name_New                            : constant Name_Id := N + 499;\n+   Name_Not                            : constant Name_Id := N + 500;\n+   Name_Null                           : constant Name_Id := N + 501;\n+   Name_Of                             : constant Name_Id := N + 502;\n+   Name_Or                             : constant Name_Id := N + 503;\n+   Name_Others                         : constant Name_Id := N + 504;\n+   Name_Out                            : constant Name_Id := N + 505;\n+   Name_Package                        : constant Name_Id := N + 506;\n+   Name_Pragma                         : constant Name_Id := N + 507;\n+   Name_Private                        : constant Name_Id := N + 508;\n+   Name_Procedure                      : constant Name_Id := N + 509;\n+   Name_Raise                          : constant Name_Id := N + 510;\n+   Name_Record                         : constant Name_Id := N + 511;\n+   Name_Rem                            : constant Name_Id := N + 512;\n+   Name_Renames                        : constant Name_Id := N + 513;\n+   Name_Return                         : constant Name_Id := N + 514;\n+   Name_Reverse                        : constant Name_Id := N + 515;\n+   Name_Select                         : constant Name_Id := N + 516;\n+   Name_Separate                       : constant Name_Id := N + 517;\n+   Name_Subtype                        : constant Name_Id := N + 518;\n+   Name_Task                           : constant Name_Id := N + 519;\n+   Name_Terminate                      : constant Name_Id := N + 520;\n+   Name_Then                           : constant Name_Id := N + 521;\n+   Name_Type                           : constant Name_Id := N + 522;\n+   Name_Use                            : constant Name_Id := N + 523;\n+   Name_When                           : constant Name_Id := N + 524;\n+   Name_While                          : constant Name_Id := N + 525;\n+   Name_With                           : constant Name_Id := N + 526;\n+   Name_Xor                            : constant Name_Id := N + 527;\n \n    --  Names of intrinsic subprograms\n \n    --  Note: Asm is missing from this list, since Asm is a legitimate\n    --  convention name. So is To_Adress, which is a GNAT attribute.\n \n-   First_Intrinsic_Name                : constant Name_Id := N + 525;\n-   Name_Divide                         : constant Name_Id := N + 525;\n-   Name_Enclosing_Entity               : constant Name_Id := N + 526;\n-   Name_Exception_Information          : constant Name_Id := N + 527;\n-   Name_Exception_Message              : constant Name_Id := N + 528;\n-   Name_Exception_Name                 : constant Name_Id := N + 529;\n-   Name_File                           : constant Name_Id := N + 530;\n-   Name_Import_Address                 : constant Name_Id := N + 531;\n-   Name_Import_Largest_Value           : constant Name_Id := N + 532;\n-   Name_Import_Value                   : constant Name_Id := N + 533;\n-   Name_Is_Negative                    : constant Name_Id := N + 534;\n-   Name_Line                           : constant Name_Id := N + 535;\n-   Name_Rotate_Left                    : constant Name_Id := N + 536;\n-   Name_Rotate_Right                   : constant Name_Id := N + 537;\n-   Name_Shift_Left                     : constant Name_Id := N + 538;\n-   Name_Shift_Right                    : constant Name_Id := N + 539;\n-   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 540;\n-   Name_Source_Location                : constant Name_Id := N + 541;\n-   Name_Unchecked_Conversion           : constant Name_Id := N + 542;\n-   Name_Unchecked_Deallocation         : constant Name_Id := N + 543;\n-   Name_To_Pointer                     : constant Name_Id := N + 544;\n-   Last_Intrinsic_Name                 : constant Name_Id := N + 544;\n+   First_Intrinsic_Name                : constant Name_Id := N + 528;\n+   Name_Divide                         : constant Name_Id := N + 528;\n+   Name_Enclosing_Entity               : constant Name_Id := N + 529;\n+   Name_Exception_Information          : constant Name_Id := N + 530;\n+   Name_Exception_Message              : constant Name_Id := N + 531;\n+   Name_Exception_Name                 : constant Name_Id := N + 532;\n+   Name_File                           : constant Name_Id := N + 533;\n+   Name_Import_Address                 : constant Name_Id := N + 534;\n+   Name_Import_Largest_Value           : constant Name_Id := N + 535;\n+   Name_Import_Value                   : constant Name_Id := N + 536;\n+   Name_Is_Negative                    : constant Name_Id := N + 537;\n+   Name_Line                           : constant Name_Id := N + 538;\n+   Name_Rotate_Left                    : constant Name_Id := N + 539;\n+   Name_Rotate_Right                   : constant Name_Id := N + 540;\n+   Name_Shift_Left                     : constant Name_Id := N + 541;\n+   Name_Shift_Right                    : constant Name_Id := N + 542;\n+   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 543;\n+   Name_Source_Location                : constant Name_Id := N + 544;\n+   Name_Unchecked_Conversion           : constant Name_Id := N + 545;\n+   Name_Unchecked_Deallocation         : constant Name_Id := N + 546;\n+   Name_To_Pointer                     : constant Name_Id := N + 547;\n+   Last_Intrinsic_Name                 : constant Name_Id := N + 547;\n \n    --  Reserved words used only in Ada 95\n \n-   First_95_Reserved_Word              : constant Name_Id := N + 545;\n-   Name_Abstract                       : constant Name_Id := N + 545;\n-   Name_Aliased                        : constant Name_Id := N + 546;\n-   Name_Protected                      : constant Name_Id := N + 547;\n-   Name_Until                          : constant Name_Id := N + 548;\n-   Name_Requeue                        : constant Name_Id := N + 549;\n-   Name_Tagged                         : constant Name_Id := N + 550;\n-   Last_95_Reserved_Word               : constant Name_Id := N + 550;\n+   First_95_Reserved_Word              : constant Name_Id := N + 548;\n+   Name_Abstract                       : constant Name_Id := N + 548;\n+   Name_Aliased                        : constant Name_Id := N + 549;\n+   Name_Protected                      : constant Name_Id := N + 550;\n+   Name_Until                          : constant Name_Id := N + 551;\n+   Name_Requeue                        : constant Name_Id := N + 552;\n+   Name_Tagged                         : constant Name_Id := N + 553;\n+   Last_95_Reserved_Word               : constant Name_Id := N + 553;\n \n    subtype Ada_95_Reserved_Words is\n      Name_Id range First_95_Reserved_Word .. Last_95_Reserved_Word;\n \n    --  Miscellaneous names used in semantic checking\n \n-   Name_Raise_Exception                : constant Name_Id := N + 551;\n+   Name_Raise_Exception                : constant Name_Id := N + 554;\n \n    --  Additional reserved words in GNAT Project Files\n    --  Note that Name_External is already previously declared\n \n-   Name_Binder                         : constant Name_Id := N + 552;\n-   Name_Body_Suffix                    : constant Name_Id := N + 553;\n-   Name_Builder                        : constant Name_Id := N + 554;\n-   Name_Compiler                       : constant Name_Id := N + 555;\n-   Name_Cross_Reference                : constant Name_Id := N + 556;\n-   Name_Default_Switches               : constant Name_Id := N + 557;\n-   Name_Exec_Dir                       : constant Name_Id := N + 558;\n-   Name_Executable                     : constant Name_Id := N + 559;\n-   Name_Executable_Suffix              : constant Name_Id := N + 560;\n-   Name_Extends                        : constant Name_Id := N + 561;\n-   Name_Finder                         : constant Name_Id := N + 562;\n-   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 563;\n-   Name_Gnatls                         : constant Name_Id := N + 564;\n-   Name_Gnatstub                       : constant Name_Id := N + 565;\n-   Name_Implementation                 : constant Name_Id := N + 566;\n-   Name_Implementation_Exceptions      : constant Name_Id := N + 567;\n-   Name_Implementation_Suffix          : constant Name_Id := N + 568;\n-   Name_Languages                      : constant Name_Id := N + 569;\n-   Name_Library_Dir                    : constant Name_Id := N + 570;\n-   Name_Library_Auto_Init              : constant Name_Id := N + 571;\n-   Name_Library_GCC                    : constant Name_Id := N + 572;\n-   Name_Library_Interface              : constant Name_Id := N + 573;\n-   Name_Library_Kind                   : constant Name_Id := N + 574;\n-   Name_Library_Name                   : constant Name_Id := N + 575;\n-   Name_Library_Options                : constant Name_Id := N + 576;\n-   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 577;\n-   Name_Library_Src_Dir                : constant Name_Id := N + 578;\n-   Name_Library_Symbol_File            : constant Name_Id := N + 579;\n-   Name_Library_Symbol_Policy          : constant Name_Id := N + 580;\n-   Name_Library_Version                : constant Name_Id := N + 581;\n-   Name_Linker                         : constant Name_Id := N + 582;\n-   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 583;\n-   Name_Locally_Removed_Files          : constant Name_Id := N + 584;\n-   Name_Naming                         : constant Name_Id := N + 585;\n-   Name_Object_Dir                     : constant Name_Id := N + 586;\n-   Name_Pretty_Printer                 : constant Name_Id := N + 587;\n-   Name_Project                        : constant Name_Id := N + 588;\n-   Name_Separate_Suffix                : constant Name_Id := N + 589;\n-   Name_Source_Dirs                    : constant Name_Id := N + 590;\n-   Name_Source_Files                   : constant Name_Id := N + 591;\n-   Name_Source_List_File               : constant Name_Id := N + 592;\n-   Name_Spec                           : constant Name_Id := N + 593;\n-   Name_Spec_Suffix                    : constant Name_Id := N + 594;\n-   Name_Specification                  : constant Name_Id := N + 595;\n-   Name_Specification_Exceptions       : constant Name_Id := N + 596;\n-   Name_Specification_Suffix           : constant Name_Id := N + 597;\n-   Name_Switches                       : constant Name_Id := N + 598;\n+   Name_Binder                         : constant Name_Id := N + 555;\n+   Name_Body_Suffix                    : constant Name_Id := N + 556;\n+   Name_Builder                        : constant Name_Id := N + 557;\n+   Name_Compiler                       : constant Name_Id := N + 558;\n+   Name_Cross_Reference                : constant Name_Id := N + 559;\n+   Name_Default_Switches               : constant Name_Id := N + 560;\n+   Name_Exec_Dir                       : constant Name_Id := N + 561;\n+   Name_Executable                     : constant Name_Id := N + 562;\n+   Name_Executable_Suffix              : constant Name_Id := N + 563;\n+   Name_Extends                        : constant Name_Id := N + 564;\n+   Name_Finder                         : constant Name_Id := N + 565;\n+   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 566;\n+   Name_Gnatls                         : constant Name_Id := N + 567;\n+   Name_Gnatstub                       : constant Name_Id := N + 568;\n+   Name_Implementation                 : constant Name_Id := N + 569;\n+   Name_Implementation_Exceptions      : constant Name_Id := N + 570;\n+   Name_Implementation_Suffix          : constant Name_Id := N + 571;\n+   Name_Languages                      : constant Name_Id := N + 572;\n+   Name_Library_Dir                    : constant Name_Id := N + 573;\n+   Name_Library_Auto_Init              : constant Name_Id := N + 574;\n+   Name_Library_GCC                    : constant Name_Id := N + 575;\n+   Name_Library_Interface              : constant Name_Id := N + 576;\n+   Name_Library_Kind                   : constant Name_Id := N + 577;\n+   Name_Library_Name                   : constant Name_Id := N + 578;\n+   Name_Library_Options                : constant Name_Id := N + 579;\n+   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 580;\n+   Name_Library_Src_Dir                : constant Name_Id := N + 581;\n+   Name_Library_Symbol_File            : constant Name_Id := N + 582;\n+   Name_Library_Symbol_Policy          : constant Name_Id := N + 583;\n+   Name_Library_Version                : constant Name_Id := N + 584;\n+   Name_Linker                         : constant Name_Id := N + 585;\n+   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 586;\n+   Name_Locally_Removed_Files          : constant Name_Id := N + 587;\n+   Name_Naming                         : constant Name_Id := N + 588;\n+   Name_Object_Dir                     : constant Name_Id := N + 589;\n+   Name_Pretty_Printer                 : constant Name_Id := N + 590;\n+   Name_Project                        : constant Name_Id := N + 591;\n+   Name_Separate_Suffix                : constant Name_Id := N + 592;\n+   Name_Source_Dirs                    : constant Name_Id := N + 593;\n+   Name_Source_Files                   : constant Name_Id := N + 594;\n+   Name_Source_List_File               : constant Name_Id := N + 595;\n+   Name_Spec                           : constant Name_Id := N + 596;\n+   Name_Spec_Suffix                    : constant Name_Id := N + 597;\n+   Name_Specification                  : constant Name_Id := N + 598;\n+   Name_Specification_Exceptions       : constant Name_Id := N + 599;\n+   Name_Specification_Suffix           : constant Name_Id := N + 600;\n+   Name_Switches                       : constant Name_Id := N + 601;\n    --  Other miscellaneous names used in front end\n \n-   Name_Unaligned_Valid                : constant Name_Id := N + 599;\n+   Name_Unaligned_Valid                : constant Name_Id := N + 602;\n \n    --  Mark last defined name for consistency check in Snames body\n \n-   Last_Predefined_Name                : constant Name_Id := N + 599;\n+   Last_Predefined_Name                : constant Name_Id := N + 602;\n \n    subtype Any_Operator_Name is Name_Id range\n      First_Operator_Name .. Last_Operator_Name;"}, {"sha": "0e81142a83543675a2699cb84c5c834e7cb7e716", "filename": "gcc/ada/targtyps.c", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Ftargtyps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Ftargtyps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargtyps.c?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                                  Body                                    *\n  *                                                                          *\n- *          Copyright (C) 1992-2003 Free Software Foundation, Inc.          *\n+ *          Copyright (C) 1992-2004 Free Software Foundation, Inc.          *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -148,16 +148,6 @@ get_target_maximum_alignment (void)\n   return BIGGEST_ALIGNMENT / BITS_PER_UNIT;\n }\n \n-Boolean\n-get_target_no_dollar_in_label (void)\n-{\n-#ifdef NO_DOLLAR_IN_LABEL\n-  return 1;\n-#else\n-  return 0;\n-#endif\n-}\n-\n #ifndef FLOAT_WORDS_BIG_ENDIAN\n #define FLOAT_WORDS_BIG_ENDIAN WORDS_BIG_ENDIAN\n #endif"}, {"sha": "3e3d6b57b018fe8928f02ed89eb54874ebbe049c", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af4b94345e257e98a61127d9ea9624ff4dabc714/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=af4b94345e257e98a61127d9ea9624ff4dabc714", "patch": "@@ -2994,11 +2994,13 @@ convert (tree type, tree expr)\n     case STRING_CST:\n     case CONSTRUCTOR:\n       /* If we are converting a STRING_CST to another constrained array type,\n-\t just make a new one in the proper type.  Likewise for a\n-\t CONSTRUCTOR.  */\n+\t just make a new one in the proper type.  Likewise for\n+\t CONSTRUCTOR if the alias sets are the same.  */\n       if (code == ecode && AGGREGATE_TYPE_P (etype)\n \t  && ! (TREE_CODE (TYPE_SIZE (etype)) == INTEGER_CST\n-\t\t&& TREE_CODE (TYPE_SIZE (type)) != INTEGER_CST))\n+\t\t&& TREE_CODE (TYPE_SIZE (type)) != INTEGER_CST)\n+\t  && (TREE_CODE (expr) == STRING_CST\n+\t      || get_alias_set (etype) == get_alias_set (type)))\n \t{\n \t  expr = copy_node (expr);\n \t  TREE_TYPE (expr) = type;\n@@ -3014,7 +3016,8 @@ convert (tree type, tree expr)\n       if (code == ecode && TYPE_MODE (type) == TYPE_MODE (etype)\n \t  && AGGREGATE_TYPE_P (type) && AGGREGATE_TYPE_P (etype)\n \t  && TYPE_ALIGN (type) == TYPE_ALIGN (etype)\n-\t  && operand_equal_p (TYPE_SIZE (type), TYPE_SIZE (etype), 0))\n+\t  && operand_equal_p (TYPE_SIZE (type), TYPE_SIZE (etype), 0)\n+\t  && get_alias_set (type) == get_alias_set (etype))\n \treturn build (COMPONENT_REF, type, TREE_OPERAND (expr, 0),\n \t\t      TREE_OPERAND (expr, 1));\n "}]}