{"sha": "21375863a04f7b758c1b9fa21df985c4333e453e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEzNzU4NjNhMDRmN2I3NThjMWI5ZmEyMWRmOTg1YzQzMzNlNDUzZQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-02-10T12:37:42Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-02-10T12:37:42Z"}, "message": "* mn10200.md (bset, bclr): Operand 0 is a read/write operand.\n\nFrom-SVN: r25134", "tree": {"sha": "5559b57f093c3a2ba038f61f48c4eaf439e7c26f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5559b57f093c3a2ba038f61f48c4eaf439e7c26f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21375863a04f7b758c1b9fa21df985c4333e453e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21375863a04f7b758c1b9fa21df985c4333e453e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21375863a04f7b758c1b9fa21df985c4333e453e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21375863a04f7b758c1b9fa21df985c4333e453e/comments", "author": null, "committer": null, "parents": [{"sha": "05a596505cfa4642b7d5df8c071eef0ce4fdfafc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05a596505cfa4642b7d5df8c071eef0ce4fdfafc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05a596505cfa4642b7d5df8c071eef0ce4fdfafc"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "3fdabcf041573c75a60edc6c7aeebc69c9db64ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21375863a04f7b758c1b9fa21df985c4333e453e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21375863a04f7b758c1b9fa21df985c4333e453e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21375863a04f7b758c1b9fa21df985c4333e453e", "patch": "@@ -17,6 +17,8 @@ Wed Feb 10 09:57:08 1999  Mark Mitchell  <mark@markmitchell.com>\n \n Wed Feb 10 10:09:41 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* mn10200.md (bset, bclr): Operand 0 is a read/write operand.\n+\n \t* reload1.c (reload_combine_note_store): Second argument is no\n \tlonger unused/ignored.  Handle multi-register hard regs.\n \t(move2add_note_store): Simplify."}, {"sha": "61b1a233c2d6fd5d48844c823fdce2cd54218611", "filename": "gcc/config/mn10200/mn10200.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21375863a04f7b758c1b9fa21df985c4333e453e/gcc%2Fconfig%2Fmn10200%2Fmn10200.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21375863a04f7b758c1b9fa21df985c4333e453e/gcc%2Fconfig%2Fmn10200%2Fmn10200.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10200%2Fmn10200.md?ref=21375863a04f7b758c1b9fa21df985c4333e453e", "patch": "@@ -656,7 +656,7 @@\n ;; These clears a constant set of bits in memory or in a register.\n ;; We must support register destinations to make reload happy.\n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"R,d\")\n+  [(set (match_operand:QI 0 \"general_operand\" \"+R,d\")\n \t(subreg:QI\n \t  (and:HI (subreg:HI (match_dup 0) 0)\n \t\t  (match_operand 1 \"const_int_operand\" \"\")) 0))\n@@ -669,7 +669,7 @@\n \n ;; This clears a variable set of bits in memory or in a register.\n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"R,d\")\n+  [(set (match_operand:QI 0 \"general_operand\" \"+R,d\")\n \t(subreg:QI\n \t  (and:HI (subreg:HI (match_dup 0) 0)\n \t\t  (not:HI (match_operand:HI 1 \"general_operand\" \"d,d\"))) 0))\n@@ -681,7 +681,7 @@\n   [(set_attr \"cc\" \"clobber\")])\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"R,d\")\n+  [(set (match_operand:QI 0 \"general_operand\" \"+R,d\")\n \t(subreg:QI\n \t  (and:HI (not:HI (match_operand:HI 1 \"general_operand\" \"d,d\"))\n \t\t  (subreg:HI (match_dup 0) 0)) 0))\n@@ -694,7 +694,7 @@\n \n ;; These set bits in memory.\n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"R,d\")\n+  [(set (match_operand:QI 0 \"general_operand\" \"+R,d\")\n \t(subreg:QI\n \t  (ior:HI (subreg:HI (match_dup 0) 0)\n \t\t  (match_operand:HI 1 \"general_operand\" \"d,d\")) 0))]\n@@ -705,11 +705,11 @@\n   [(set_attr \"cc\" \"clobber\")])\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"R,d\")\n+  [(set (match_operand:QI 0 \"general_operand\" \"+R,d\")\n \t(subreg:QI\n \t  (ior:HI (match_operand:HI 1 \"general_operand\" \"d,d\")\n \t\t  (subreg:HI (match_dup 0) 0)) 0))]\n-  \"\"\n+  \"0\"\n   \"@\n   bset %1,%0\n   or %1,%0\""}]}