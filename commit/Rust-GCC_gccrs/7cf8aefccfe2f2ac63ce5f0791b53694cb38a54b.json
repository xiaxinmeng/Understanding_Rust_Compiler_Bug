{"sha": "7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NmOGFlZmNjZmUyZjJhYzYzY2U1ZjA3OTFiNTM2OTRjYjM4YTU0Yg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-07-23T18:38:22Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-07-23T18:38:22Z"}, "message": "cmath (abs(_Tp)): Add.\n\n2009-07-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/c_std/cmath (abs(_Tp)): Add.\n\t* include/c_global/cmath (abs(_Tp)): Likewise.\n\t* testsuite/26_numerics/headers/cmath/overloads.cc: Extend.\n\nFrom-SVN: r150022", "tree": {"sha": "a2111588d46122f6a79724d1ee665e0d9e5eeaa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2111588d46122f6a79724d1ee665e0d9e5eeaa7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b/comments", "author": null, "committer": null, "parents": [{"sha": "88e18fedad6803c5f9abdbcf1c4a51c25e12706c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e18fedad6803c5f9abdbcf1c4a51c25e12706c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88e18fedad6803c5f9abdbcf1c4a51c25e12706c"}], "stats": {"total": 49, "additions": 43, "deletions": 6}, "files": [{"sha": "7ca37c7560bbbde60e79f073d4c1f0b47fe9dcbc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b", "patch": "@@ -1,3 +1,9 @@\n+2009-07-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/c_std/cmath (abs(_Tp)): Add.\n+\t* include/c_global/cmath (abs(_Tp)): Likewise.\n+\t* testsuite/26_numerics/headers/cmath/overloads.cc: Extend.\n+\n 2009-07-23  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* doc/html/ext/lwg-closed.html: Update to R65."}, {"sha": "a5c31c436d7295c76a28e898b10093c57f2e2664", "filename": "libstdc++-v3/include/c_global/cmath", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcmath?ref=7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b", "patch": "@@ -102,6 +102,12 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   abs(long double __x)\n   { return __builtin_fabsl(__x); }\n \n+  template<typename _Tp>\n+    inline typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, \n+\t\t\t\t\t   double>::__type\n+    abs(_Tp __x)\n+    { return __builtin_fabs(__x); }\n+\n   using ::acos;\n \n   inline float"}, {"sha": "3ee1393073f3355215b9dc00a60f0efa9f02ed4b", "filename": "libstdc++-v3/include/c_std/cmath", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcmath?ref=7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b", "patch": "@@ -93,6 +93,12 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   abs(long double __x)\n   { return __builtin_fabsl(__x); }\n \n+  template<typename _Tp>\n+    inline typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, \n+\t\t\t\t\t   double>::__type\n+    abs(_Tp __x)\n+    { return __builtin_fabs(__x); }\n+\n   using ::acos;\n \n   inline float\n@@ -120,8 +126,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   { return __builtin_asinl(__x); }\n \n   template<typename _Tp>\n-  inline typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,\n-\t\t\t\t\t double>::__type\n+    inline typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,\n+\t\t\t\t\t   double>::__type\n     asin(_Tp __x)\n     { return __builtin_asin(__x); }\n \n@@ -136,8 +142,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   { return __builtin_atanl(__x); }\n \n   template<typename _Tp>\n-  inline typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, \n-\t\t\t\t\t double>::__type\n+    inline typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, \n+\t\t\t\t\t   double>::__type\n     atan(_Tp __x)\n     { return __builtin_atan(__x); }\n \n@@ -293,8 +299,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   template<typename _Tp>\n     inline typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, \n \t\t\t\t\t   double>::__type\n-  ldexp(_Tp __x, int __exp)\n-  { return __builtin_ldexp(__x, __exp); }\n+    ldexp(_Tp __x, int __exp)\n+    { return __builtin_ldexp(__x, __exp); }\n \n   using ::log;\n "}, {"sha": "4418bc31b20ca9bf578b912adf483347e0bd635d", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/overloads.cc", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Foverloads.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Foverloads.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Foverloads.cc?ref=7cf8aefccfe2f2ac63ce5f0791b53694cb38a54b", "patch": "@@ -1,3 +1,21 @@\n+// Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n // PR 3181\n // Origin: pete@toyon.com\n \n@@ -8,6 +26,7 @@ int main()\n   int i = -1;\n   int j = 9;\n   double ans;\n+  ans = std::abs(i);\n   ans = std::acos(i);\n   ans = std::asin(i);\n   ans = std::atan(i);"}]}