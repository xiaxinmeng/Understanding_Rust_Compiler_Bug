{"sha": "710fdaadeeb456ff1f8fa784dcac7ea8e74d773a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzEwZmRhYWRlZWI0NTZmZjFmOGZhNzg0ZGNhYzdlYThlNzRkNzczYQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2001-08-13T17:37:17Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-08-13T17:37:17Z"}, "message": "eabi.asm: Define 64-bit versions of FPR save/restore routines.\n\n        * config/rs6000/eabi.asm: Define 64-bit versions of FPR\n        save/restore routines.\n        * ginclude/ppc-asm.h: Define 64-bit FUNC_* macros.\n\nFrom-SVN: r44862", "tree": {"sha": "f9b8aeaa9f7af54b74928bb430b696a958077c6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9b8aeaa9f7af54b74928bb430b696a958077c6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/710fdaadeeb456ff1f8fa784dcac7ea8e74d773a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/710fdaadeeb456ff1f8fa784dcac7ea8e74d773a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/710fdaadeeb456ff1f8fa784dcac7ea8e74d773a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/710fdaadeeb456ff1f8fa784dcac7ea8e74d773a/comments", "author": null, "committer": null, "parents": [{"sha": "3d146acbef811ec6c2d4789e9a1c6e695864d123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d146acbef811ec6c2d4789e9a1c6e695864d123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d146acbef811ec6c2d4789e9a1c6e695864d123"}], "stats": {"total": 134, "additions": 132, "deletions": 2}, "files": [{"sha": "eb476d11de61d6e32950685a3d3df8ad5712c30d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/710fdaadeeb456ff1f8fa784dcac7ea8e74d773a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/710fdaadeeb456ff1f8fa784dcac7ea8e74d773a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=710fdaadeeb456ff1f8fa784dcac7ea8e74d773a", "patch": "@@ -1,3 +1,9 @@\n+2001-08-13  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/eabi.asm: Define 64-bit versions of FPR\n+\tsave/restore routines.\n+\t* ginclude/ppc-asm.h: Define 64-bit FUNC_* macros.\n+\n 2001-08-13  Andreas Jaeger  <aj@suse.de>\n \n \t* gcc.c (init_spec): Revert last patch by Theodore Papadopoulo,"}, {"sha": "7ca745846492dec298bb2e15b8f094a172578303", "filename": "gcc/config/rs6000/eabi.asm", "status": "modified", "additions": 108, "deletions": 2, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/710fdaadeeb456ff1f8fa784dcac7ea8e74d773a/gcc%2Fconfig%2Frs6000%2Feabi.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/710fdaadeeb456ff1f8fa784dcac7ea8e74d773a/gcc%2Fconfig%2Frs6000%2Feabi.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi.asm?ref=710fdaadeeb456ff1f8fa784dcac7ea8e74d773a", "patch": "@@ -1,8 +1,9 @@\n /*\n- * special support for eabi\n+ * Special support for eabi and SVR4\n  *\n- *   Copyright (C) 1995, 1996, 1998, 2000 Free Software Foundation, Inc.\n+ *   Copyright (C) 1995, 1996, 1998, 2000, 2001 Free Software Foundation, Inc.\n  *   Written By Michael Meissner\n+ *   64-bit support written by David Edelsohn\n  * \n  * This file is free software; you can redistribute it and/or modify it\n  * under the terms of the GNU General Public License as published by the\n@@ -40,6 +41,8 @@\n \t.section \".text\"\n \t#include \"ppc-asm.h\"\n \n+#ifndef __powerpc64__\n+\n \t .section \".got2\",\"aw\"\n \t.align\t2\n .LCTOC1 = . /* +32768 */\n@@ -554,3 +557,106 @@ FUNC_END(_restgpr_17_x)\n FUNC_END(_restgpr_16_x)\n FUNC_END(_restgpr_15_x)\n FUNC_END(_restgpr_14_x)\n+\n+#else /* __powerpc64__ */\n+\n+\t.section \".text\"\n+\t.align 2\n+\n+/* Routines for saving floating point registers, called by the compiler. */\n+\n+.fsav:\n+FUNC_START(_savef14)\tstfd\t14,-144(1)\t/* save fp registers */\n+FUNC_START(_savef15)\tstfd\t15,-136(1)\n+FUNC_START(_savef16)\tstfd\t16,-128(1)\n+FUNC_START(_savef17)\tstfd\t17,-120(1)\n+FUNC_START(_savef18)\tstfd\t18,-112(1)\n+FUNC_START(_savef19)\tstfd\t19,-104(1)\n+FUNC_START(_savef20)\tstfd\t20,-96(1)\n+FUNC_START(_savef21)\tstfd\t21,-88(1)\n+FUNC_START(_savef22)\tstfd\t22,-80(1)\n+FUNC_START(_savef23)\tstfd\t23,-72(1)\n+FUNC_START(_savef24)\tstfd\t24,-64(1)\n+FUNC_START(_savef25)\tstfd\t25,-56(1)\n+FUNC_START(_savef26)\tstfd\t26,-48(1)\n+FUNC_START(_savef27)\tstfd\t27,-40(1)\n+FUNC_START(_savef28)\tstfd\t28,-32(1)\n+FUNC_START(_savef29)\tstfd\t29,-24(1)\n+FUNC_START(_savef30)\tstfd\t30,-16(1)\n+FUNC_START(_savef31)\tstfd\t31,-8(1)\n+\t\t\tblr\n+.LTfsav:\n+\t\t\t.long 0\n+\t\t\t.byte 0,12,0,0,0,0,0,0\n+\t\t\t.long 0\n+\t\t\t.long .LTfsav-.fsav\n+\t\t\t.short 4\n+\t\t\t.ascii \"fsav\"\n+FUNC_END(_savef31)\n+FUNC_END(_savef30)\n+FUNC_END(_savef29)\n+FUNC_END(_savef28)\n+FUNC_END(_savef27)\n+FUNC_END(_savef26)\n+FUNC_END(_savef25)\n+FUNC_END(_savef24)\n+FUNC_END(_savef23)\n+FUNC_END(_savef22)\n+FUNC_END(_savef21)\n+FUNC_END(_savef20)\n+FUNC_END(_savef19)\n+FUNC_END(_savef18)\n+FUNC_END(_savef17)\n+FUNC_END(_savef16)\n+FUNC_END(_savef15)\n+FUNC_END(_savef14)\n+\n+/* Routines for restoring floating point registers, called by the compiler. */\n+\n+.fres:\n+FUNC_START(_restf14)\tlfd\t14,-144(1)\t/* restore fp registers */\n+FUNC_START(_restf15)\tlfd\t15,-136(1)\n+FUNC_START(_restf16)\tlfd\t16,-128(1)\n+FUNC_START(_restf17)\tlfd\t17,-120(1)\n+FUNC_START(_restf18)\tlfd\t18,-112(1)\n+FUNC_START(_restf19)\tlfd\t19,-104(1)\n+FUNC_START(_restf20)\tlfd\t20,-96(1)\n+FUNC_START(_restf21)\tlfd\t21,-88(1)\n+FUNC_START(_restf22)\tlfd\t22,-80(1)\n+FUNC_START(_restf23)\tlfd\t23,-72(1)\n+FUNC_START(_restf24)\tlfd\t24,-64(1)\n+FUNC_START(_restf25)\tlfd\t25,-56(1)\n+FUNC_START(_restf26)\tlfd\t26,-48(1)\n+FUNC_START(_restf27)\tlfd\t27,-40(1)\n+FUNC_START(_restf28)\tlfd\t28,-32(1)\n+FUNC_START(_restf29)\tlfd\t29,-24(1)\n+FUNC_START(_restf30)\tlfd\t30,-16(1)\n+FUNC_START(_restf31)\tlfd\t31,-8(1)\n+\t\t\tblr\n+.LTfres:\n+\t\t\t.long 0\n+\t\t\t.byte 0,12,0,0,0,0,0,0\n+\t\t\t.long 0\n+\t\t\t.long .LTfres-.fres\n+\t\t\t.short 4\n+\t\t\t.ascii \"fres\"\n+FUNC_END(_restf31)\n+FUNC_END(_restf30)\n+FUNC_END(_restf29)\n+FUNC_END(_restf28)\n+FUNC_END(_restf27)\n+FUNC_END(_restf26)\n+FUNC_END(_restf25)\n+FUNC_END(_restf24)\n+FUNC_END(_restf23)\n+FUNC_END(_restf22)\n+FUNC_END(_restf21)\n+FUNC_END(_restf20)\n+FUNC_END(_restf19)\n+FUNC_END(_restf18)\n+FUNC_END(_restf17)\n+FUNC_END(_restf16)\n+FUNC_END(_restf15)\n+FUNC_END(_restf14)\n+\n+#endif"}, {"sha": "678743245f35aa82addfdc40b1c2f673e376a0f7", "filename": "gcc/ginclude/ppc-asm.h", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/710fdaadeeb456ff1f8fa784dcac7ea8e74d773a/gcc%2Fginclude%2Fppc-asm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/710fdaadeeb456ff1f8fa784dcac7ea8e74d773a/gcc%2Fginclude%2Fppc-asm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fppc-asm.h?ref=710fdaadeeb456ff1f8fa784dcac7ea8e74d773a", "patch": "@@ -156,6 +156,24 @@ GLUE(..,name):\n GLUE(.L,name): \\\n \t.size GLUE(..,name),GLUE(.L,name)-GLUE(..,name)\n \n+#elif defined (__powerpc64__)\n+#define FUNC_NAME(name) GLUE(.,name)\n+#define FUNC_START(name) \\\n+\t.section \".opd\",\"aw\"; \\\n+name: \\\n+\t.quad GLUE(.,name); \\\n+\t.quad .TOC.@tocbase; \\\n+\t.quad 0; \\\n+\t.previous; \\\n+\t.type GLUE(.,name),@function; \\\n+\t.globl name; \\\n+\t.globl GLUE(.,name); \\\n+GLUE(.,name):\n+\n+#define FUNC_END(name) \\\n+GLUE(.L,name): \\\n+\t.size GLUE(.,name),GLUE(.L,name)-GLUE(.,name)\n+\n #else\n #define FUNC_NAME(name) GLUE(__USER_LABEL_PREFIX__,name)\n #define FUNC_START(name) \\"}]}