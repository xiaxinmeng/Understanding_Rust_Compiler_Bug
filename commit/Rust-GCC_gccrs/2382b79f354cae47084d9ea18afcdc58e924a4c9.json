{"sha": "2382b79f354cae47084d9ea18afcdc58e924a4c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM4MmI3OWYzNTRjYWU0NzA4NGQ5ZWExOGFmY2RjNThlOTI0YTRjOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2003-02-09T19:18:54Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2003-02-09T19:18:54Z"}, "message": "toplev.c (rest_of_compilation): Recompute register usage after split_all_insns.\n\n\t* toplev.c (rest_of_compilation): Recompute register usage after\n\tsplit_all_insns.\n\nFrom-SVN: r62607", "tree": {"sha": "2d444c27dc2a8242116b693848782cb1ec2214fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d444c27dc2a8242116b693848782cb1ec2214fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2382b79f354cae47084d9ea18afcdc58e924a4c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2382b79f354cae47084d9ea18afcdc58e924a4c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2382b79f354cae47084d9ea18afcdc58e924a4c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2382b79f354cae47084d9ea18afcdc58e924a4c9/comments", "author": null, "committer": null, "parents": [{"sha": "8275b011ca18ef074a86f39f67b16718e0d647fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8275b011ca18ef074a86f39f67b16718e0d647fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8275b011ca18ef074a86f39f67b16718e0d647fc"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "826f092ea62974d59319f39a29bed317a6575b00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2382b79f354cae47084d9ea18afcdc58e924a4c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2382b79f354cae47084d9ea18afcdc58e924a4c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2382b79f354cae47084d9ea18afcdc58e924a4c9", "patch": "@@ -1,3 +1,8 @@\n+2002-02-09  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* toplev.c (rest_of_compilation): Recompute register usage after\n+\tsplit_all_insns.\n+\n 2003-02-09  Richard Henderson  <rth@redhat.com>\n \n \t* libgcc-std.ver (__clztf2): New."}, {"sha": "8b58ea627e21274ebaca81d2ea3c0f1ba8171a86", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2382b79f354cae47084d9ea18afcdc58e924a4c9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2382b79f354cae47084d9ea18afcdc58e924a4c9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2382b79f354cae47084d9ea18afcdc58e924a4c9", "patch": "@@ -1,3 +1,7 @@\n+2002-02-09  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* gcc.c-torture/execute/20030209-1.c: New test.\n+\n 2003-02-09  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* gcc.c-torture/execute/builtin-bitops-1.c: When testing the"}, {"sha": "c6aa77db1c76ee6f2b876ae69b852bb4b9e8e1da", "filename": "gcc/testsuite/gcc.c-torture/execute/20030209-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2382b79f354cae47084d9ea18afcdc58e924a4c9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030209-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2382b79f354cae47084d9ea18afcdc58e924a4c9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030209-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030209-1.c?ref=2382b79f354cae47084d9ea18afcdc58e924a4c9", "patch": "@@ -0,0 +1,11 @@\n+double x[100][100];\n+int main ()\n+{\n+  int i;\n+\n+  i = 99;\n+  x[i][0] = 42;\n+  if (x[99][0] != 42)\n+    abort ();\n+  exit (0);\n+}"}, {"sha": "a4cd1df45887cd214d4e77cbff34751318d01558", "filename": "gcc/toplev.c", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2382b79f354cae47084d9ea18afcdc58e924a4c9/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2382b79f354cae47084d9ea18afcdc58e924a4c9/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=2382b79f354cae47084d9ea18afcdc58e924a4c9", "patch": "@@ -2373,7 +2373,6 @@ rest_of_compilation (decl)\n   int tem;\n   int failure = 0;\n   int rebuild_label_notes_after_reload;\n-  int register_life_up_to_date;\n \n   timevar_push (TV_REST_OF_COMPILATION);\n \n@@ -3227,10 +3226,6 @@ rest_of_compilation (decl)\n      description to add extra information not needed previously.  */\n   split_all_insns (1);\n \n-  /* Any of the several passes since flow1 will have munged register\n-     lifetime data a bit.  */\n-  register_life_up_to_date = 0;\n-\n #ifdef OPTIMIZE_MODE_SWITCHING\n   timevar_push (TV_MODE_SWITCH);\n \n@@ -3241,6 +3236,11 @@ rest_of_compilation (decl)\n   timevar_pop (TV_MODE_SWITCH);\n #endif\n \n+  /* Any of the several passes since flow1 will have munged register\n+     lifetime data a bit.  We need it to be up to date for scheduling\n+     (see handling of reg_known_equiv in init_alias_analysis).  */\n+  recompute_reg_usage (insns, !optimize_size);\n+\n   timevar_push (TV_SCHED);\n \n #ifdef INSN_SCHEDULING\n@@ -3257,10 +3257,6 @@ rest_of_compilation (decl)\n       schedule_insns (rtl_dump_file);\n \n       close_dump_file (DFI_sched, print_rtl_with_bb, insns);\n-\n-      /* Register lifetime information was updated as part of verifying\n-\t the schedule.  */\n-      register_life_up_to_date = 1;\n     }\n #endif\n   timevar_pop (TV_SCHED);\n@@ -3280,9 +3276,6 @@ rest_of_compilation (decl)\n      RUN_JUMP_AFTER_RELOAD records whether or not we need to rerun the\n      jump optimizer after register allocation and reloading are finished.  */\n \n-  if (! register_life_up_to_date)\n-    recompute_reg_usage (insns, ! optimize_size);\n-\n   if (flag_new_regalloc)\n     {\n       delete_trivially_dead_insns (insns, max_reg_num ());"}]}