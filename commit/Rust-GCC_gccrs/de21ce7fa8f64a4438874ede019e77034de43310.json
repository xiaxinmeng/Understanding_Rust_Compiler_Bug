{"sha": "de21ce7fa8f64a4438874ede019e77034de43310", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUyMWNlN2ZhOGY2NGE0NDM4ODc0ZWRlMDE5ZTc3MDM0ZGU0MzMxMA==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2011-12-01T02:08:10Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2011-12-01T02:08:10Z"}, "message": "re PR middle-end/50283 (FAIL: g++.dg/eh/simd-1.C execution test)\n\n\tPR middle-end/50283\n\t* config/pa/pa.md (in_branch_delay): Disallow frame related insns.\n\t(in_nullified_branch_delay): Likewise.\n\t(in_call_delay): Likewise.\n\nFrom-SVN: r181868", "tree": {"sha": "5d1539761e7822dd7f8d1a4d53b6b6ab879f23b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d1539761e7822dd7f8d1a4d53b6b6ab879f23b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de21ce7fa8f64a4438874ede019e77034de43310", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de21ce7fa8f64a4438874ede019e77034de43310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de21ce7fa8f64a4438874ede019e77034de43310", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de21ce7fa8f64a4438874ede019e77034de43310/comments", "author": null, "committer": null, "parents": [{"sha": "48325d1cb6028cb16ba68c8b90ae23687ac29be3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48325d1cb6028cb16ba68c8b90ae23687ac29be3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48325d1cb6028cb16ba68c8b90ae23687ac29be3"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "addee392384bf37989d1ac017fd022f9bba84703", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de21ce7fa8f64a4438874ede019e77034de43310/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de21ce7fa8f64a4438874ede019e77034de43310/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de21ce7fa8f64a4438874ede019e77034de43310", "patch": "@@ -1,3 +1,10 @@\n+2011-11-30  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR middle-end/50283\n+\t* config/pa/pa.md (in_branch_delay): Disallow frame related insns.\n+\t(in_nullified_branch_delay): Likewise.\n+\t(in_call_delay): Likewise.\n+\n 2011-11-30  Richard Henderson  <rth@redhat.com>\n \n \t* predict.c (expr_expected_value_1): Assume compare-and-swap builtin"}, {"sha": "d5417febe8b392fffee722a531a4997f21982ac1", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de21ce7fa8f64a4438874ede019e77034de43310/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de21ce7fa8f64a4438874ede019e77034de43310/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=de21ce7fa8f64a4438874ede019e77034de43310", "patch": "@@ -121,26 +121,30 @@\n \n ;; Attributes for instruction and branch scheduling\n \n-;; For conditional branches.\n+;; For conditional branches. Frame related instructions are not allowed\n+;; because they confuse the unwind support.\n (define_attr \"in_branch_delay\" \"false,true\"\n   (if_then_else (and (eq_attr \"type\" \"!uncond_branch,btable_branch,branch,cbranch,fbranch,call,dyncall,multi,milli,parallel_branch\")\n-\t\t     (eq_attr \"length\" \"4\"))\n+\t\t     (eq_attr \"length\" \"4\")\n+\t\t     (not (match_test \"RTX_FRAME_RELATED_P (insn)\")))\n \t\t(const_string \"true\")\n \t\t(const_string \"false\")))\n \n ;; Disallow instructions which use the FPU since they will tie up the FPU\n ;; even if the instruction is nullified.\n (define_attr \"in_nullified_branch_delay\" \"false,true\"\n   (if_then_else (and (eq_attr \"type\" \"!uncond_branch,btable_branch,branch,cbranch,fbranch,call,dyncall,multi,milli,fpcc,fpalu,fpmulsgl,fpmuldbl,fpdivsgl,fpdivdbl,fpsqrtsgl,fpsqrtdbl,parallel_branch\")\n-\t\t     (eq_attr \"length\" \"4\"))\n+\t\t     (eq_attr \"length\" \"4\")\n+\t\t     (not (match_test \"RTX_FRAME_RELATED_P (insn)\")))\n \t\t(const_string \"true\")\n \t\t(const_string \"false\")))\n \n ;; For calls and millicode calls.  Allow unconditional branches in the\n ;; delay slot.\n (define_attr \"in_call_delay\" \"false,true\"\n   (cond [(and (eq_attr \"type\" \"!uncond_branch,btable_branch,branch,cbranch,fbranch,call,dyncall,multi,milli,parallel_branch\")\n-\t      (eq_attr \"length\" \"4\"))\n+\t      (eq_attr \"length\" \"4\")\n+\t      (not (match_test \"RTX_FRAME_RELATED_P (insn)\")))\n \t   (const_string \"true\")\n \t (eq_attr \"type\" \"uncond_branch\")\n \t   (if_then_else (match_test \"TARGET_JUMP_IN_DELAY\")"}]}