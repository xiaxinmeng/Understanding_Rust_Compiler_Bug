{"sha": "6a4d72a6d9aec655e70fdbdf548c9ed00c0350db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE0ZDcyYTZkOWFlYzY1NWU3MGZkYmRmNTQ4YzllZDAwYzAzNTBkYg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2008-07-30T15:52:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-07-30T15:52:58Z"}, "message": "sem_ch8.adb (Analyze_Subprogram_Renaming): When renaming an attribute as a actual in an instance...\n\n2008-07-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (Analyze_Subprogram_Renaming): When renaming an attribute\n\tas a actual in an instance, check for a missing attribute to prevent\n\tprogram_error on an illegal program.\n\t\n\t* exp_util.adb (Find_Prim_Op): Rather than Assert (False), raise program\n\terror if primitive is not found, so that exception can be handled\n\telsewhere on illegal programs.\n\nFrom-SVN: r138322", "tree": {"sha": "73834d6791dd4a6ffb55a7f7466b9fa288ad731b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73834d6791dd4a6ffb55a7f7466b9fa288ad731b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a4d72a6d9aec655e70fdbdf548c9ed00c0350db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4d72a6d9aec655e70fdbdf548c9ed00c0350db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a4d72a6d9aec655e70fdbdf548c9ed00c0350db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4d72a6d9aec655e70fdbdf548c9ed00c0350db/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "706d74594af2a6d72b160ad214881ba75502ae82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706d74594af2a6d72b160ad214881ba75502ae82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/706d74594af2a6d72b160ad214881ba75502ae82"}], "stats": {"total": 67, "additions": 46, "deletions": 21}, "files": [{"sha": "e4b4389618b19f23f92fd811d1016878c3bd49b1", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4d72a6d9aec655e70fdbdf548c9ed00c0350db/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4d72a6d9aec655e70fdbdf548c9ed00c0350db/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=6a4d72a6d9aec655e70fdbdf548c9ed00c0350db", "patch": "@@ -1581,7 +1581,10 @@ package body Exp_Util is\n                 or else Etype (First_Entity (Op)) = Etype (Last_Entity (Op)));\n \n          Next_Elmt (Prim);\n-         pragma Assert (Present (Prim));\n+\n+         if No (Prim) then\n+            raise Program_Error;\n+         end if;\n       end loop;\n \n       return Node (Prim);\n@@ -1608,7 +1611,10 @@ package body Exp_Util is\n       Prim := First_Elmt (Primitive_Operations (Typ));\n       while not Is_TSS (Node (Prim), Name) loop\n          Next_Elmt (Prim);\n-         pragma Assert (Present (Prim));\n+\n+         if No (Prim) then\n+            raise Program_Error;\n+         end if;\n       end loop;\n \n       return Node (Prim);"}, {"sha": "6a544c0072c3b8396ba31e8da2533c5cfeeadb34", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 38, "deletions": 19, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4d72a6d9aec655e70fdbdf548c9ed00c0350db/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4d72a6d9aec655e70fdbdf548c9ed00c0350db/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=6a4d72a6d9aec655e70fdbdf548c9ed00c0350db", "patch": "@@ -1578,25 +1578,44 @@ package body Sem_Ch8 is\n                --  an abstract formal subprogram must be dispatching\n                --  operation).\n \n-               case Attribute_Name (Nam) is\n-                  when Name_Input  =>\n-                     Stream_Prim :=\n-                       Find_Prim_Op (Prefix_Type, TSS_Stream_Input);\n-                  when Name_Output =>\n-                     Stream_Prim :=\n-                       Find_Prim_Op (Prefix_Type, TSS_Stream_Output);\n-                  when Name_Read   =>\n-                     Stream_Prim :=\n-                       Find_Prim_Op (Prefix_Type, TSS_Stream_Read);\n-                  when Name_Write  =>\n-                     Stream_Prim :=\n-                       Find_Prim_Op (Prefix_Type, TSS_Stream_Write);\n-                  when others      =>\n-                     Error_Msg_N\n-                       (\"attribute must be a primitive dispatching operation\",\n-                        Nam);\n-                     return;\n-               end case;\n+               begin\n+                  case Attribute_Name (Nam) is\n+                     when Name_Input  =>\n+                        Stream_Prim :=\n+                          Find_Prim_Op (Prefix_Type, TSS_Stream_Input);\n+                     when Name_Output =>\n+                        Stream_Prim :=\n+                          Find_Prim_Op (Prefix_Type, TSS_Stream_Output);\n+                     when Name_Read   =>\n+                        Stream_Prim :=\n+                          Find_Prim_Op (Prefix_Type, TSS_Stream_Read);\n+                     when Name_Write  =>\n+                        Stream_Prim :=\n+                          Find_Prim_Op (Prefix_Type, TSS_Stream_Write);\n+                     when others      =>\n+                        Error_Msg_N\n+                          (\"attribute must be a primitive\"\n+                            & \" dispatching operation\", Nam);\n+                        return;\n+                  end case;\n+               exception\n+\n+                  --  If no operation was found, and the type is limited,\n+                  --  the user should have defined one.\n+\n+                  when Program_Error =>\n+                     if Is_Limited_Type (Prefix_Type) then\n+                        Error_Msg_NE\n+                         (\"stream operation not defined for type&\",\n+                           N, Prefix_Type);\n+                        return;\n+\n+                     --  Otherwise, compiler should have generated default.\n+\n+                     else\n+                        raise;\n+                     end if;\n+               end;\n \n                --  Rewrite the attribute into the name of its corresponding\n                --  primitive dispatching subprogram. We can then proceed with"}]}