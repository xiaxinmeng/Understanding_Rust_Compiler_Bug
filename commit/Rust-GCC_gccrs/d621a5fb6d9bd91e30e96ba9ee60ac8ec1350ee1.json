{"sha": "d621a5fb6d9bd91e30e96ba9ee60ac8ec1350ee1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYyMWE1ZmI2ZDliZDkxZTMwZTk2YmE5ZWU2MGFjOGVjMTM1MGVlMQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2011-10-23T14:30:24Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2011-10-23T14:30:24Z"}, "message": "* ipa-inline.c (estimate_badness): Scale up and handle overflows.\n\nFrom-SVN: r180336", "tree": {"sha": "01f1d3b41396eb45236943ca2cc45f29cc451e85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01f1d3b41396eb45236943ca2cc45f29cc451e85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d621a5fb6d9bd91e30e96ba9ee60ac8ec1350ee1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d621a5fb6d9bd91e30e96ba9ee60ac8ec1350ee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d621a5fb6d9bd91e30e96ba9ee60ac8ec1350ee1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d621a5fb6d9bd91e30e96ba9ee60ac8ec1350ee1/comments", "author": null, "committer": null, "parents": [{"sha": "fe646a69c7ef9614370dde7a5e4983b5095e6074", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe646a69c7ef9614370dde7a5e4983b5095e6074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe646a69c7ef9614370dde7a5e4983b5095e6074"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "2602f76c41fed2ed9310fbaa25181154b2ca386a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d621a5fb6d9bd91e30e96ba9ee60ac8ec1350ee1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d621a5fb6d9bd91e30e96ba9ee60ac8ec1350ee1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d621a5fb6d9bd91e30e96ba9ee60ac8ec1350ee1", "patch": "@@ -1,3 +1,7 @@\n+2011-10-23  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa-inline.c (estimate_badness): Scale up and handle overflows.\n+\n 2011-10-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/50788"}, {"sha": "662c6b3cb5dba642d79dca741e891c0680653849", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d621a5fb6d9bd91e30e96ba9ee60ac8ec1350ee1/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d621a5fb6d9bd91e30e96ba9ee60ac8ec1350ee1/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=d621a5fb6d9bd91e30e96ba9ee60ac8ec1350ee1", "patch": "@@ -822,8 +822,10 @@ edge_badness (struct cgraph_edge *edge, bool dump)\n       /* Result must be integer in range 0...INT_MAX.\n \t Set the base of fixed point calculation so we don't lose much of\n \t precision for small bandesses (those are interesting) yet we don't\n-\t overflow for growths that are still in interesting range.  */\n-      badness = ((gcov_type)growth) * (1<<18);\n+\t overflow for growths that are still in interesting range.\n+\n+\t Fixed point arithmetic with point at 8th bit. */\n+      badness = ((gcov_type)growth) * (1<<(19+8));\n       badness = (badness + div / 2) / div;\n \n       /* Overall growth of inlining all calls of function matters: we want to\n@@ -838,10 +840,14 @@ edge_badness (struct cgraph_edge *edge, bool dump)\n \t We might mix the valud into the fraction by taking into account\n \t relative growth of the unit, but for now just add the number\n \t into resulting fraction.  */\n+      if (badness > INT_MAX / 2)\n+\t{\n+\t  badness = INT_MAX / 2;\n+\t  if (dump)\n+\t    fprintf (dump_file, \"Badness overflow\\n\");\n+\t}\n       growth_for_all = estimate_growth (callee);\n       badness += growth_for_all;\n-      if (badness > INT_MAX - 1)\n-\tbadness = INT_MAX - 1;\n       if (dump)\n \t{\n \t  fprintf (dump_file,"}]}