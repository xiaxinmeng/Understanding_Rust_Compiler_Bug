{"sha": "c9b0866a1e5a5c4fd536e6217c1f2b308219598b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzliMDg2NmExZTVhNWM0ZmQ1MzZlNjIxN2MxZjJiMzA4MjE5NTk4Yg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-09-09T14:31:16Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-09-09T14:31:16Z"}, "message": "re PR c++/43452 (Array delete causes error on incomplete type)\n\n2013-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/43452\n\t* doc/invoke.texi (-Wdelete-incomplete): Document it.\n\n/c-family\n2013-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/43452\n\t* c.opt (Wdelete-incomplete): Add.\n\n/cp\n2013-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/43452\n\t* init.c (build_vec_delete_1): When the type is incomplete emit a\n\twarning, enabled by default (not an error).\n\t(build_delete): Adjust to use OPT_Wdelete_incomplete.\n\n/testsuite\n2013-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/43452\n\t* g++.dg/warn/Wdelete-incomplete-1.C: New.\n\t* g++.dg/warn/Wdelete-incomplete-2.C: Likewise.\n\t* g++.dg/init/delete1.C: Adjust.\n\nFrom-SVN: r202404", "tree": {"sha": "ba7a48759b2510eff4b81f951387f1671f2df985", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba7a48759b2510eff4b81f951387f1671f2df985"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9b0866a1e5a5c4fd536e6217c1f2b308219598b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9b0866a1e5a5c4fd536e6217c1f2b308219598b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9b0866a1e5a5c4fd536e6217c1f2b308219598b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/comments", "author": null, "committer": null, "parents": [{"sha": "78d8b9f019c6445a62e816576dfb6005963708ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78d8b9f019c6445a62e816576dfb6005963708ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78d8b9f019c6445a62e816576dfb6005963708ca"}], "stats": {"total": 78, "additions": 70, "deletions": 8}, "files": [{"sha": "03a36575b1754009e624d7cb6f3ad4a6ddf9047c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9b0866a1e5a5c4fd536e6217c1f2b308219598b", "patch": "@@ -1,3 +1,8 @@\n+2013-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/43452\n+\t* doc/invoke.texi (-Wdelete-incomplete): Document it.\n+\n 2013-09-09  Ian Bolton  <ian.bolton@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_preferred_reload_class): Return\n@@ -7,7 +12,8 @@\n \n \t* config/aarch64/aarch64.c (aarch64_select_cc_mode): Return CC_SWP for\n \tcomparison with negated operand.\n-\t* config/aarch64/aarch64.md (compare_neg<mode>): Match canonical RTL form.\n+\t* config/aarch64/aarch64.md (compare_neg<mode>): Match canonical\n+\tRTL form.\n \n 2013-09-09  Richard Biener  <rguenther@suse.de>\n "}, {"sha": "4a93498299aa31723dc8b52d87ccd3138f4c1b3b", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=c9b0866a1e5a5c4fd536e6217c1f2b308219598b", "patch": "@@ -1,3 +1,8 @@\n+2013-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/43452\n+\t* c.opt (Wdelete-incomplete): Add.\n+\n 2013-09-08  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* c-common.c (same_scalar_type_ignoring_signedness): Delete."}, {"sha": "f390f342c91d420f2cbff7c6da276e481790ab83", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=c9b0866a1e5a5c4fd536e6217c1f2b308219598b", "patch": "@@ -339,6 +339,10 @@ Wdeclaration-after-statement\n C ObjC Var(warn_declaration_after_statement) Warning\n Warn when a declaration is found after a statement\n \n+Wdelete-incomplete\n+C++ ObjC++ Var(warn_delete_incomplete) Init(1) Warning\n+Warn when deleting a pointer to incomplete type\n+\n Wdelete-non-virtual-dtor\n C++ ObjC++ Var(warn_delnonvdtor) Warning LangEnabledBy(C++ ObjC++,Wall)\n Warn about deleting polymorphic objects with non-virtual destructors"}, {"sha": "bc9c49857f2fa4119a48bcf6978065f06237d331", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c9b0866a1e5a5c4fd536e6217c1f2b308219598b", "patch": "@@ -1,3 +1,10 @@\n+2013-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/43452\n+\t* init.c (build_vec_delete_1): When the type is incomplete emit a\n+\twarning, enabled by default (not an error).\n+\t(build_delete): Adjust to use OPT_Wdelete_incomplete.\n+\n 2013-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/58362"}, {"sha": "df7dc7d3a485985119c299ec72064fab1b4e08eb", "filename": "gcc/cp/init.c", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=c9b0866a1e5a5c4fd536e6217c1f2b308219598b", "patch": "@@ -3078,7 +3078,7 @@ build_vec_delete_1 (tree base, tree maxindex, tree type,\n {\n   tree virtual_size;\n   tree ptype = build_pointer_type (type = complete_type (type));\n-  tree size_exp = size_in_bytes (type);\n+  tree size_exp;\n \n   /* Temporary variables used by the loop.  */\n   tree tbase, tbase_init;\n@@ -3106,6 +3106,23 @@ build_vec_delete_1 (tree base, tree maxindex, tree type,\n   if (base == error_mark_node || maxindex == error_mark_node)\n     return error_mark_node;\n \n+  if (!COMPLETE_TYPE_P (type))\n+    {\n+      if ((complain & tf_warning)\n+\t  && warning (OPT_Wdelete_incomplete,\n+\t\t      \"possible problem detected in invocation of \"\n+\t\t      \"delete [] operator:\"))\n+       {\n+         cxx_incomplete_type_diagnostic (base, type, DK_WARNING);\n+         inform (input_location, \"neither the destructor nor the \"\n+                 \"class-specific operator delete [] will be called, \"\n+                 \"even if they are declared when the class is defined\");\n+       }\n+      return build_builtin_delete_call (base);\n+    } \n+\n+  size_exp = size_in_bytes (type);\n+\n   if (! MAYBE_CLASS_TYPE_P (type) || TYPE_HAS_TRIVIAL_DESTRUCTOR (type))\n     goto no_destructor;\n \n@@ -3820,11 +3837,13 @@ build_delete (tree type, tree addr, special_function_kind auto_delete,\n \t  if (!COMPLETE_TYPE_P (type))\n \t    {\n \t      if ((complain & tf_warning)\n-\t\t  && warning (0, \"possible problem detected in invocation of \"\n+\t\t  && warning (OPT_Wdelete_incomplete,\n+\t\t\t      \"possible problem detected in invocation of \"\n \t\t\t      \"delete operator:\"))\n \t\t{\n \t\t  cxx_incomplete_type_diagnostic (addr, type, DK_WARNING);\n-\t\t  inform (input_location, \"neither the destructor nor the class-specific \"\n+\t\t  inform (input_location,\n+\t\t\t  \"neither the destructor nor the class-specific \"\n \t\t\t  \"operator delete will be called, even if they are \"\n \t\t\t  \"declared when the class is defined\");\n \t\t}"}, {"sha": "5b3c078e77bde0aa5275dc11d1d85e0e61d39b0a", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c9b0866a1e5a5c4fd536e6217c1f2b308219598b", "patch": "@@ -240,8 +240,8 @@ Objective-C and Objective-C++ Dialects}.\n -Wno-attributes -Wno-builtin-macro-redefined @gol\n -Wc++-compat -Wc++11-compat -Wcast-align  -Wcast-qual  @gol\n -Wchar-subscripts -Wclobbered  -Wcomment -Wconditionally-supported  @gol\n--Wconversion  -Wcoverage-mismatch  -Wno-cpp  -Wno-deprecated  @gol\n--Wno-deprecated-declarations -Wdisabled-optimization  @gol\n+-Wconversion -Wcoverage-mismatch  -Wdelete-incomplete -Wno-cpp  @gol\n+-Wno-deprecated -Wno-deprecated-declarations -Wdisabled-optimization  @gol\n -Wno-div-by-zero -Wdouble-promotion -Wempty-body  -Wenum-compare @gol\n -Wno-endif-labels -Werror  -Werror=* @gol\n -Wfatal-errors  -Wfloat-equal  -Wformat  -Wformat=2 @gol\n@@ -4490,6 +4490,12 @@ types. @option{-Wconversion-null} is enabled by default.\n Warn when a literal '0' is used as null pointer constant.  This can\n be useful to facilitate the conversion to @code{nullptr} in C++11.\n \n+@item -Wdelete-incomplete @r{(C++ and Objective-C++ only)}\n+@opindex Wdelete-incomplete\n+@opindex Wno-delete-incomplete\n+Warn when deleting a pointer to incomplete type, which may cause\n+undefined behavior at runtime.  This warning is enabled by default.\n+\n @item -Wuseless-cast @r{(C++ and Objective-C++ only)}\n @opindex Wuseless-cast\n @opindex Wno-useless-cast"}, {"sha": "304dca1caf995a234235abf0ac27b5b683371c12", "filename": "gcc/testsuite/g++.dg/init/delete1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fdelete1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fdelete1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fdelete1.C?ref=c9b0866a1e5a5c4fd536e6217c1f2b308219598b", "patch": "@@ -1,7 +1,7 @@\n // PR c++/19811\n \n-class C; // { dg-error \"forward\" }\n+class C; // { dg-warning \"forward\" }\n \n void foo(void *p) {\n-  delete [] ((C*)p) ; // { dg-error \"\" }\n+  delete [] ((C*)p) ; // { dg-warning \"problem|incomplete\" }\n }"}, {"sha": "69689ba3488ae8714012178145e79334427dc0b2", "filename": "gcc/testsuite/g++.dg/warn/Wdelete-incomplete-1.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdelete-incomplete-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdelete-incomplete-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdelete-incomplete-1.C?ref=c9b0866a1e5a5c4fd536e6217c1f2b308219598b", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/43452\n+\n+class Foo;         // { dg-warning \"forward\" }\n+int main() {\n+   Foo* p;         // { dg-warning \"incomplete\" }\n+   delete [] p;    // { dg-warning \"problem\" }\n+}"}, {"sha": "6c3aaa74f1abc221d4bc43bdb3723abd7ea8d95b", "filename": "gcc/testsuite/g++.dg/warn/Wdelete-incomplete-2.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdelete-incomplete-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9b0866a1e5a5c4fd536e6217c1f2b308219598b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdelete-incomplete-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdelete-incomplete-2.C?ref=c9b0866a1e5a5c4fd536e6217c1f2b308219598b", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/43452\n+// { dg-options -Wno-delete-incomplete }\n+\n+class Foo;\n+int main() {\n+   Foo* p;\n+   delete [] p;\n+}"}]}