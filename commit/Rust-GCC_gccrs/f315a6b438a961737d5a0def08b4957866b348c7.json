{"sha": "f315a6b438a961737d5a0def08b4957866b348c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMxNWE2YjQzOGE5NjE3MzdkNWEwZGVmMDhiNDk1Nzg2NmIzNDhjNw==", "commit": {"author": {"name": "Daniel Kraft", "email": "d@domob.eu", "date": "2011-08-02T20:10:13Z"}, "committer": {"name": "Daniel Kraft", "email": "domob@gcc.gnu.org", "date": "2011-08-02T20:10:13Z"}, "message": "re PR fortran/49885 (Segmentation fault when writing to an automatic character array)\n\n2011-08-02  Daniel Kraft  <d@domob.eu>\n\n\tPR fortran/49885\n\t* trans-array.c (gfc_trans_auto_array_allocation): Change\n\tgfc_start_block to gfc_init_block to avoid spurious extra-scope.\n\n2011-08-02  Daniel Kraft  <d@domob.eu>\n\n\tPR fortran/49885\n\t* gfortran.dg/auto_char_dummy_array_3.f90: New test.\n\nFrom-SVN: r177211", "tree": {"sha": "3a57d821578e730d8e84cd24848546789954acd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a57d821578e730d8e84cd24848546789954acd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f315a6b438a961737d5a0def08b4957866b348c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f315a6b438a961737d5a0def08b4957866b348c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f315a6b438a961737d5a0def08b4957866b348c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f315a6b438a961737d5a0def08b4957866b348c7/comments", "author": {"login": "domob1812", "id": 4943644, "node_id": "MDQ6VXNlcjQ5NDM2NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domob1812", "html_url": "https://github.com/domob1812", "followers_url": "https://api.github.com/users/domob1812/followers", "following_url": "https://api.github.com/users/domob1812/following{/other_user}", "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}", "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions", "organizations_url": "https://api.github.com/users/domob1812/orgs", "repos_url": "https://api.github.com/users/domob1812/repos", "events_url": "https://api.github.com/users/domob1812/events{/privacy}", "received_events_url": "https://api.github.com/users/domob1812/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f1594b2b805e9214594ad1f4552f629429fd07e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f1594b2b805e9214594ad1f4552f629429fd07e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f1594b2b805e9214594ad1f4552f629429fd07e"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "912c011ba0a781bf38d0678641ba12b9b03944e9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f315a6b438a961737d5a0def08b4957866b348c7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f315a6b438a961737d5a0def08b4957866b348c7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f315a6b438a961737d5a0def08b4957866b348c7", "patch": "@@ -1,3 +1,9 @@\n+2011-08-02  Daniel Kraft  <d@domob.eu>\n+\n+\tPR fortran/49885\n+\t* trans-array.c (gfc_trans_auto_array_allocation): Change\n+\tgfc_start_block to gfc_init_block to avoid spurious extra-scope.\n+\n 2011-08-02  Tobias Burnus  <burnus@net-b.de>\n \n \t* trans-array.c (gfc_array_allocate): Pass token to"}, {"sha": "85acf0cfbd033f9cb179362664610dae483c51fd", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f315a6b438a961737d5a0def08b4957866b348c7/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f315a6b438a961737d5a0def08b4957866b348c7/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=f315a6b438a961737d5a0def08b4957866b348c7", "patch": "@@ -4887,7 +4887,7 @@ gfc_trans_auto_array_allocation (tree decl, gfc_symbol * sym,\n   gcc_assert (GFC_ARRAY_TYPE_P (type));\n   onstack = TREE_CODE (type) != POINTER_TYPE;\n \n-  gfc_start_block (&init);\n+  gfc_init_block (&init);\n \n   /* Evaluate character string length.  */\n   if (sym->ts.type == BT_CHARACTER"}, {"sha": "82f2776ba464a681f9ffae2ce87276cc39d0f167", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f315a6b438a961737d5a0def08b4957866b348c7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f315a6b438a961737d5a0def08b4957866b348c7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f315a6b438a961737d5a0def08b4957866b348c7", "patch": "@@ -1,3 +1,8 @@\n+2011-08-02  Daniel Kraft  <d@domob.eu>\n+\n+\tPR fortran/49885\n+\t* gfortran.dg/auto_char_dummy_array_3.f90: New test.\n+\n 2011-08-02  Kai Tietz  <ktietz@redhat.com>\n \n \tPR middle-end/49947"}, {"sha": "053956cabfd283849f7a7f422a551d7ab0eaa6e8", "filename": "gcc/testsuite/gfortran.dg/auto_char_dummy_array_3.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f315a6b438a961737d5a0def08b4957866b348c7/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_char_dummy_array_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f315a6b438a961737d5a0def08b4957866b348c7/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_char_dummy_array_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_char_dummy_array_3.f90?ref=f315a6b438a961737d5a0def08b4957866b348c7", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do run }\n+\n+! PR fortran/49885\n+! Check that character arrays with non-constant char-length are handled\n+! correctly.\n+\n+! Contributed by Daniel Kraft <d@domob.eu>,\n+! based on original test case and variant by Tobias Burnus in comment 2.\n+\n+PROGRAM main\n+  IMPLICIT NONE\n+\n+  CALL s (10)\n+      \n+CONTAINS\n+\n+  SUBROUTINE s (nb)\n+    INTEGER :: nb\n+    CHARACTER(MAX (80, nb)) :: bad_rec(1)\n+\n+    bad_rec(1)(1:2) = 'abc'\n+    IF (bad_rec(1)(1:2) /= 'ab') CALL abort ()\n+  END SUBROUTINE s\n+\n+END PROGRAM main"}]}