{"sha": "f5aada264731ac00bd7afaa254cb0ed1b6b62917", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVhYWRhMjY0NzMxYWMwMGJkN2FmYWEyNTRjYjBlZDFiNmI2MjkxNw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-05-25T01:30:57Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-05-25T01:30:57Z"}, "message": "G++ no longer defines builtins that do not begin with __builtin.\n\n\t* g++.old-deja/g++.abi/bitfields.C: Update accordingly.\n\t* g++.old-deja/g++.brendand/misc13.C: Likewise.\n\t* g++.old-deja/g++.law/builtin1.C: Likewise.\n\t* g++.old-deja/g++.law/cvt2.C: Likewise.\n\t* g++.old-deja/g++.mike/net5.C: Likewise.\n\t* g++.old-deja/g++.other/builtins1.C: Likewise.\n\t* g++.old-deja/g++.other/builtins2.C: Likewise.\n\t* g++.old-deja/g++.other/builtins3.C: Likewise.\n\t* g++.old-deja/g++.other/builtins4.C: Likewise.\n\t* g++.old-deja/g++.other/inline8.C: Likewise.\n\t* g++.old-deja/g++.robertl/eb39.C: Likewise.\n\nFrom-SVN: r42554", "tree": {"sha": "6ae5ab95d76a66131b71f92d89e3a72cc74ae46a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ae5ab95d76a66131b71f92d89e3a72cc74ae46a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5aada264731ac00bd7afaa254cb0ed1b6b62917", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5aada264731ac00bd7afaa254cb0ed1b6b62917", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5aada264731ac00bd7afaa254cb0ed1b6b62917", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5aada264731ac00bd7afaa254cb0ed1b6b62917/comments", "author": null, "committer": null, "parents": [{"sha": "0b1161fcb24c573c53bc27b8b935c73e1d855c8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b1161fcb24c573c53bc27b8b935c73e1d855c8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b1161fcb24c573c53bc27b8b935c73e1d855c8b"}], "stats": {"total": 166, "additions": 68, "deletions": 98}, "files": [{"sha": "5dc9c2d428b8080b76cb63f3b7333343ced0c618", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f5aada264731ac00bd7afaa254cb0ed1b6b62917", "patch": "@@ -1,3 +1,18 @@\n+2001-05-24  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tG++ no longer defines builtins that do not begin with __builtin.\n+\t* g++.old-deja/g++.abi/bitfields.C: Update accordingly.\n+\t* g++.old-deja/g++.brendand/misc13.C: Likewise.\n+\t* g++.old-deja/g++.law/builtin1.C: Likewise.\n+\t* g++.old-deja/g++.law/cvt2.C: Likewise.\n+\t* g++.old-deja/g++.mike/net5.C: Likewise.\n+\t* g++.old-deja/g++.other/builtins1.C: Likewise.\n+\t* g++.old-deja/g++.other/builtins2.C: Likewise.\n+\t* g++.old-deja/g++.other/builtins3.C: Likewise.\n+\t* g++.old-deja/g++.other/builtins4.C: Likewise.\n+\t* g++.old-deja/g++.other/inline8.C: Likewise.\n+\t* g++.old-deja/g++.robertl/eb39.C: Likewise.\n+\n 2001-05-24  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.pt/using1.C: Adjust."}, {"sha": "57d06b36744e69e81a5a343ef26147ce169f093f", "filename": "gcc/testsuite/g++.old-deja/g++.abi/bitfields.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fbitfields.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fbitfields.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fbitfields.C?ref=f5aada264731ac00bd7afaa254cb0ed1b6b62917", "patch": "@@ -55,7 +55,7 @@ check_bits (char *buf,\n #define CHECK_FIELD(AGGREGATE, FIELD, START_BIT, NUM_BITS, RVAL)          \\\n   do {                                                                    \\\n     AGGREGATE a__;                                                        \\\n-    memset (& a__, 0, sizeof (a__));                                      \\\n+    std::memset (& a__, 0, sizeof (a__));                                 \\\n     a__.FIELD = -1;                                                       \\\n     if (! check_bits ((char *) & a__, sizeof (a__), START_BIT, NUM_BITS)) \\\n       return RVAL;                                                        \\"}, {"sha": "5fe1e140d6c382b5999aa1f12cb55de27e20fb5f", "filename": "gcc/testsuite/g++.old-deja/g++.abi/vtable2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable2.C?ref=f5aada264731ac00bd7afaa254cb0ed1b6b62917", "patch": "@@ -1,4 +1,5 @@\n // Origin: Mark Mitchell <mark@codesourcery.com>\n+// Special g++ Options: -fno-strict-aliasing\n \n #if defined (__GXX_ABI_VERSION) && __GXX_ABI_VERSION >= 100\n "}, {"sha": "c2c8bc5601bf189841615cca6cf8b8119b222766", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/misc13.C", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b1161fcb24c573c53bc27b8b935c73e1d855c8b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fmisc13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b1161fcb24c573c53bc27b8b935c73e1d855c8b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fmisc13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fmisc13.C?ref=0b1161fcb24c573c53bc27b8b935c73e1d855c8b", "patch": "@@ -1,11 +0,0 @@\n-// Build don't link: \n-// GROUPS passed miscellaneous-bugs\n-// This should only give warnings from duplicate_decls; it should not get\n-// errors from push_overloaded_decl as well.\n-\n-namespace std {\n-extern \"C\"\n-{\n-  long unsigned int strlen(char*);// ERROR -  warning// ERROR -  warning.*\n-}\n-}"}, {"sha": "c285c29fe2e9560423cf034fbc3b874c75c5d94f", "filename": "gcc/testsuite/g++.old-deja/g++.law/builtin1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fbuiltin1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fbuiltin1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fbuiltin1.C?ref=f5aada264731ac00bd7afaa254cb0ed1b6b62917", "patch": "@@ -8,10 +8,9 @@\n //  the use of __builtin_alloca, and thus ends up being unresolved.\n // Special g++ Options: \n \n-extern \"C\" void* alloca( __SIZE_TYPE__ );\n extern \"C\" int printf (const char *, ...);\n \n void* junk() {\n-  return std::alloca(10);\n+  return __builtin_alloca(10);\n }\n main() { printf (\"PASS\\n\");}"}, {"sha": "7db6b2b566a5c0158e8d8db0c09947e987b17a8f", "filename": "gcc/testsuite/g++.old-deja/g++.law/cvt2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt2.C?ref=f5aada264731ac00bd7afaa254cb0ed1b6b62917", "patch": "@@ -8,8 +8,8 @@\n class cvec {\n public:\n         ~cvec(){ delete s; }\n-        cvec(const char*x) { s = new char[strlen(x)+1]; strcpy(s, x); }\n-\tcvec(const cvec& c) { s = new char[strlen(c.s)+1]; strcpy(s, c.s); }\n+        cvec(const char*x) { s = new char[std::strlen(x)+1]; std::strcpy(s, x); }\n+\tcvec(const cvec& c) { s = new char[std::strlen(c.s)+1]; std::strcpy(s, c.s); }\n         operator const char*() { return s; }\n private:\n         char *s;"}, {"sha": "665c0ba8188c586d011708354d4ecefaf665f1e7", "filename": "gcc/testsuite/g++.old-deja/g++.mike/net5.C", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b1161fcb24c573c53bc27b8b935c73e1d855c8b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b1161fcb24c573c53bc27b8b935c73e1d855c8b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet5.C?ref=0b1161fcb24c573c53bc27b8b935c73e1d855c8b", "patch": "@@ -1,10 +0,0 @@\n-// Build don't link:\n-// Special g++ Options:\n-\n-namespace std {\n-volatile void abort();\t\t// WARNING - mismatch\n-}\n-\n-volatile void oink() {\n-  std::abort() ;\n-}\t\t\t\t// gets bogus error - "}, {"sha": "4a1630b013d3c607ae4f69e29541e84c0e043d98", "filename": "gcc/testsuite/g++.old-deja/g++.other/builtins1.C", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbuiltins1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbuiltins1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbuiltins1.C?ref=f5aada264731ac00bd7afaa254cb0ed1b6b62917", "patch": "@@ -7,27 +7,14 @@\n namespace std \n {\n   extern \"C\" void abort (void);\n-  extern \"C\" __SIZE_TYPE__ strlen (const char *);\n }\n \n int main ()\n {\n   using namespace std;\n   \n-  if (strlen (\"hello\") != 5)\n-    abort ();\n-  if (std::strlen (\"hello\") != 5)\n-    abort ();\n   if (::__builtin_strlen (\"hello\") != 5)\n     abort ();\n   \n   return 0;\n }\n-\n-extern \"C\"\n-{\n-  static __SIZE_TYPE__ ::strlen (const char *)\n-  {\n-    std::abort ();\n-  }\n-}"}, {"sha": "9c55b762531025d185cb2e629afe9a5e424fe0cb", "filename": "gcc/testsuite/g++.old-deja/g++.other/builtins2.C", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbuiltins2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbuiltins2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbuiltins2.C?ref=f5aada264731ac00bd7afaa254cb0ed1b6b62917", "patch": "@@ -7,34 +7,16 @@\n namespace std \n {\n   extern \"C\" void abort (void);\n-  extern \"C\" char *strcpy (char *, const char *);\n-  extern \"C\" int memcmp (const void *, const void *, __SIZE_TYPE__);\n }\n \n int main ()\n {\n   using namespace std;\n   char f[16];\n   \n-  if (strcpy (f, \"hello world\") != f\n-      || memcmp (f, \"hello world\", sizeof (\"hello world\")))\n-    abort ();\n-\n-  if (std::strcpy (f, \"bye world\") != f\n-      || memcmp (f, \"bye world\", sizeof (\"bye world\")))\n-    abort ();\n-\n   if (::__builtin_strcpy (f, \"hello world\") != f\n-      || memcmp (f, \"hello world\", sizeof (\"hello world\")))\n+      || __builtin_memcmp (f, \"hello world\", sizeof (\"hello world\")))\n     abort ();\n   \n   return 0;\n }\n-\n-extern \"C\"\n-{\n-  static char * ::strcpy (char *, const char *)\n-  {\n-    std::abort ();\n-  }\n-}"}, {"sha": "e075d3fdba3ca8e55b6a529abf1f9c24145c1939", "filename": "gcc/testsuite/g++.old-deja/g++.other/builtins3.C", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbuiltins3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbuiltins3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbuiltins3.C?ref=f5aada264731ac00bd7afaa254cb0ed1b6b62917", "patch": "@@ -7,33 +7,17 @@\n namespace std \n {\n   extern \"C\" void abort (void);\n-  extern \"C\" void *alloca (__SIZE_TYPE__);\n }\n \n int main ()\n {\n   using namespace std;\n   void *foo;\n   \n-  foo = alloca (32);\n-  if (!foo)\n-    abort ();\n-\n-  foo = std::alloca (32);\n-  if (!foo)\n-    abort ();\n-\n   foo = ::__builtin_alloca (32);\n   if (!foo)\n     abort ();\n \n   return 0;\n }\n \n-extern \"C\"\n-{\n-  static void * ::alloca (__SIZE_TYPE__)\n-  {\n-    std::abort ();\n-  }\n-}"}, {"sha": "235bb1357523416479d57e563de0947bbb530b7a", "filename": "gcc/testsuite/g++.old-deja/g++.other/builtins4.C", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbuiltins4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbuiltins4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fbuiltins4.C?ref=f5aada264731ac00bd7afaa254cb0ed1b6b62917", "patch": "@@ -7,21 +7,12 @@\n namespace std \n {\n   extern \"C\" void abort (void);\n-  extern \"C\" int printf (const char *, ...);\n }\n \n int main ()\n {\n   using namespace std;\n   \n-  printf (\"hello world\\n\");\n-  printf (\"\\n\");\n-  printf (\"%s\\n\", \"hello world\");\n-  printf (\"%c\", '\\n');\n-  std::printf (\"hello world\\n\");\n-  std::printf (\"\\n\");\n-  std::printf (\"%s\\n\", \"hello world\");\n-  std::printf (\"%c\", '\\n');\n   ::__builtin_printf (\"hello world\\n\");\n   ::__builtin_printf (\"\\n\");\n   ::__builtin_printf (\"%s\\n\", \"hello world\");\n@@ -30,10 +21,3 @@ int main ()\n   return 0;\n }\n \n-extern \"C\"\n-{\n-  static int ::printf (const char *, ...)\n-  {\n-    std::abort ();\n-  }\n-}"}, {"sha": "1f3dd0eaa5c0c5ea86c2348e8b91ca819e4e3775", "filename": "gcc/testsuite/g++.old-deja/g++.other/inline21.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline21.C?ref=f5aada264731ac00bd7afaa254cb0ed1b6b62917", "patch": "@@ -0,0 +1,39 @@\n+// Special g++ Options: -O2\n+// Origin: suckfish@ihug.co.nz\n+\n+// DECLARATIONS\n+\n+struct Record {\n+   Record (int bb) :\n+      b (bb)\n+      { }\n+   int extra;   // Having an extra member in record is crucial.\n+   int b;\n+};\n+      \n+struct Container {\n+   Record record;\n+   // The const on the next line is crucial.\n+   Container ( const Record  b) : record(b) {}\n+};\n+\n+\n+// TEST FOR CORRECT BEHAVIOUR\n+\n+int myArray[3];\n+int * intp = myArray;\n+\n+void use_pair (const Container & c)\n+{\n+   *intp++ = c.record.b;\n+}\n+\n+extern \"C\" int printf (const char *,...);\n+\n+int main()\n+{\n+  use_pair (Container (1234));\n+\n+  if (myArray[0] != 1234)\n+    return 1;\n+}"}, {"sha": "17965d9a90bf132fc2e7edb7bc1db0eb10f5a07e", "filename": "gcc/testsuite/g++.old-deja/g++.other/inline8.C", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline8.C?ref=f5aada264731ac00bd7afaa254cb0ed1b6b62917", "patch": "@@ -23,36 +23,36 @@ public:\n \n NAMES_ITEM::NAMES_ITEM (const NAMES_ITEM& item2)\n         {\n-        size_t length=strlen(item2.name);\n+        size_t length=std::strlen(item2.name);\n \n         name=new char[length+1];\n-        memcpy(name,item2.name,length+1);\n+        std::memcpy(name,item2.name,length+1);\n         }\n \n NAMES_ITEM::NAMES_ITEM (const char* name2)      \n         {\n-        size_t length=strlen(name2);\n+        size_t length=std::strlen(name2);\n \n         name=new char[length+1];\n-        memcpy(name,name2,length+1);\n+        std::memcpy(name,name2,length+1);\n         }\n \n NAMES_ITEM::~NAMES_ITEM ()\n {\n-  if (strcmp (name, \"one\") != 0)\n+  if (std::strcmp (name, \"one\") != 0)\n     abort ();\n   \n   name=0;\n }\n \n bool NAMES_ITEM::operator==(const NAMES_ITEM& n) const\n {\n-  return (strcmp(name,n.name) == 0);\n+  return (std::strcmp(name,n.name) == 0);\n }\n \n bool operator<(const NAMES_ITEM& n1, const NAMES_ITEM& n2)\n     {\n-    return (strcmp(n1.name,n2.name) < 0);\n+    return (std::strcmp(n1.name,n2.name) < 0);\n     }\n \n     typedef map<NAMES_ITEM,size_t,less<NAMES_ITEM> > lookup_t;"}, {"sha": "98bee9c6fcf4fab023f927c7d4bb87908b06838a", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb39.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb39.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5aada264731ac00bd7afaa254cb0ed1b6b62917/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb39.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb39.C?ref=f5aada264731ac00bd7afaa254cb0ed1b6b62917", "patch": "@@ -11,7 +11,7 @@ extern bool foo2 (ostream &out, istream &in);\n bool\n foo1 (ostream &out, const char *in)\n {\n-  string tmp(in, strlen(in));\n+  string tmp(in, std::strlen(in));\n   stringbuf sb (tmp);\n   istream fmt (&sb);\n   return foo2 (out, fmt);"}]}