{"sha": "a33d623d2d3a78f5ef6f9e854946303e063eef63", "node_id": "C_kwDOANBUbNoAKGEzM2Q2MjNkMmQzYTc4ZjVlZjZmOWU4NTQ5NDYzMDNlMDYzZWVmNjM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-27T18:10:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-27T18:10:18Z"}, "message": "c++: Fix ICE on g++.dg/modules/adl-3_c.C [PR107379]\n\nAs mentioned in the PR, apparently my r13-2887 P1467R9 changes\nregressed these tests on powerpc64le-linux with IEEE quad by default.\n\nI believe my changes just uncovered a latent bug.\nThe problem is that push_namespace calls find_namespace_slot,\nwhich does:\n  tree *slot = DECL_NAMESPACE_BINDINGS (ns)\n    ->find_slot_with_hash (name, name ? IDENTIFIER_HASH_VALUE (name) : 0,\n                           create_p ? INSERT : NO_INSERT);\nIn the <identifier_node 0x7fffe9f55ac0 details> ns case, slot is non-NULL\nabove with a binding_vector in it.\nThen pushdecl is called and this does:\n                  slot = find_namespace_slot (ns, name, ns == current_namespace);\nwhere ns == current_namespace (ns is :: and name is details) is true.\nSo this again calls\n          tree *slot = DECL_NAMESPACE_BINDINGS (ns)\n            ->find_slot_with_hash (name, name ? IDENTIFIER_HASH_VALUE (name) : 0,\n                                   create_p ? INSERT : NO_INSERT);\nbut this time with create_p and so INSERT.\nAt this point we reach\n          if (insert == INSERT && m_size * 3 <= m_n_elements * 4)\n            expand ();\nand when we are unlucky and the occupancy of the hash table just reached 3/4,\nexpand () is called and the hash table is reallocated.  But when that happens,\nit means the slot pointer in the pushdecl caller (push_namespace) points to\nfreed memory and so any accesses to it in make_namespace_finish will be UB.\n\nThe following patch fixes it by calling find_namespace_slot again even if it\nwas non-NULL, just doesn't assert it is *slot == ns in that case (because\nit often is not).\n\n2022-10-27  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/107379\n\t* name-lookup.cc (push_namespace): Call find_namespace_slot again\n\tafter pushdecl as the hash table might be expanded during pushdecl.", "tree": {"sha": "6cc2ead66514705f01e42b5e3e7f178f4be81d54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cc2ead66514705f01e42b5e3e7f178f4be81d54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a33d623d2d3a78f5ef6f9e854946303e063eef63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a33d623d2d3a78f5ef6f9e854946303e063eef63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a33d623d2d3a78f5ef6f9e854946303e063eef63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a33d623d2d3a78f5ef6f9e854946303e063eef63/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7d1d7777bb86ad049f88214109fb561a741aa2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d1d7777bb86ad049f88214109fb561a741aa2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7d1d7777bb86ad049f88214109fb561a741aa2c"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "dfa6fb406751bb21e2240dd9c1f7e79589915501", "filename": "gcc/cp/name-lookup.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a33d623d2d3a78f5ef6f9e854946303e063eef63/gcc%2Fcp%2Fname-lookup.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a33d623d2d3a78f5ef6f9e854946303e063eef63/gcc%2Fcp%2Fname-lookup.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.cc?ref=a33d623d2d3a78f5ef6f9e854946303e063eef63", "patch": "@@ -8596,6 +8596,13 @@ push_namespace (tree name, bool make_inline)\n \t      /* This should find the slot created by pushdecl.  */\n \t      gcc_checking_assert (slot && *slot == ns);\n \t    }\n+\t  else\n+\t    {\n+\t      /* pushdecl could have expanded the hash table, so\n+\t\t slot might be invalid.  */\n+\t      slot = find_namespace_slot (current_namespace, name);\n+\t      gcc_checking_assert (slot);\n+\t    }\n \t  make_namespace_finish (ns, slot);\n \n \t  /* Add the anon using-directive here, we don't do it in"}]}