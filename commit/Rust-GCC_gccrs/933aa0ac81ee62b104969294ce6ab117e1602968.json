{"sha": "933aa0ac81ee62b104969294ce6ab117e1602968", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMzYWEwYWM4MWVlNjJiMTA0OTY5Mjk0Y2U2YWIxMTdlMTYwMjk2OA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T10:24:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T10:24:03Z"}, "message": "[multiple changes]\n\n2016-04-18  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_res.adb (Is_Protected_Operation_Call):\n\tAdd guards to account for a non-decorated selected component.\n\n2016-04-18  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Improve\n\timplementation of Body_Has_SPARK_Mode_On.\n\t* sem_prag.adb, sem_prag.ads (Get_SPARK_Mode_From_Annotation):\n\tNew function replacing previous Get_SPARK_Mode_From_Pragma, that\n\tdeals also with aspects.\n\t(Get_SPARK_Mode_Type): Make function internal again.\n\t* inline.adb, sem_ch7.adb, sem_util.adb: Use new\n\tGet_SPARK_Mode_From_Annotation.\n\nFrom-SVN: r235116", "tree": {"sha": "0cfd598972f4170dce02fa02318a0039fa66b807", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cfd598972f4170dce02fa02318a0039fa66b807"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/933aa0ac81ee62b104969294ce6ab117e1602968", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/933aa0ac81ee62b104969294ce6ab117e1602968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/933aa0ac81ee62b104969294ce6ab117e1602968", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/933aa0ac81ee62b104969294ce6ab117e1602968/comments", "author": null, "committer": null, "parents": [{"sha": "4179af278f73fc12431fc749bda65fbbf4752602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4179af278f73fc12431fc749bda65fbbf4752602", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4179af278f73fc12431fc749bda65fbbf4752602"}], "stats": {"total": 126, "additions": 84, "deletions": 42}, "files": [{"sha": "fd8d79ada7678b4786a8519f6cbd32d6baa7ad9e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933aa0ac81ee62b104969294ce6ab117e1602968/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933aa0ac81ee62b104969294ce6ab117e1602968/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=933aa0ac81ee62b104969294ce6ab117e1602968", "patch": "@@ -1,3 +1,19 @@\n+2016-04-18  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_res.adb (Is_Protected_Operation_Call):\n+\tAdd guards to account for a non-decorated selected component.\n+\n+2016-04-18  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Improve\n+\timplementation of Body_Has_SPARK_Mode_On.\n+\t* sem_prag.adb, sem_prag.ads (Get_SPARK_Mode_From_Annotation):\n+\tNew function replacing previous Get_SPARK_Mode_From_Pragma, that\n+\tdeals also with aspects.\n+\t(Get_SPARK_Mode_Type): Make function internal again.\n+\t* inline.adb, sem_ch7.adb, sem_util.adb: Use new\n+\tGet_SPARK_Mode_From_Annotation.\n+\n 2016-04-18  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* contracts.adb (Analyze_Object_Contract): Update references to"}, {"sha": "b3b5aba21fedd599cab1edaee1cbd392c7e3452d", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933aa0ac81ee62b104969294ce6ab117e1602968/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933aa0ac81ee62b104969294ce6ab117e1602968/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=933aa0ac81ee62b104969294ce6ab117e1602968", "patch": "@@ -1553,7 +1553,8 @@ package body Inline is\n       elsif Present (Spec_Id)\n         and then\n           (No (SPARK_Pragma (Spec_Id))\n-            or else Get_SPARK_Mode_From_Pragma (SPARK_Pragma (Spec_Id)) /= On)\n+            or else\n+           Get_SPARK_Mode_From_Annotation (SPARK_Pragma (Spec_Id)) /= On)\n       then\n          return False;\n "}, {"sha": "9563320e6c82d1960a3a8486aae6988db15a4829", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933aa0ac81ee62b104969294ce6ab117e1602968/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933aa0ac81ee62b104969294ce6ab117e1602968/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=933aa0ac81ee62b104969294ce6ab117e1602968", "patch": "@@ -2292,11 +2292,7 @@ package body Sem_Ch6 is\n             Item := First (Aspect_Specifications (N));\n             while Present (Item) loop\n                if Get_Aspect_Id (Item) = Aspect_SPARK_Mode then\n-                  return No (Expression (Item))\n-                           or else\n-                        (Nkind (Expression (Item)) = N_Identifier\n-                           and then\n-                         Get_SPARK_Mode_Type (Chars (Expression (Item))) = On);\n+                  return Get_SPARK_Mode_From_Annotation (Item) = On;\n                end if;\n \n                Next (Item);\n@@ -2308,18 +2304,28 @@ package body Sem_Ch6 is\n          if Present (Decls) then\n             Item := First (Decls);\n             while Present (Item) loop\n-               if Nkind (Item) = N_Pragma\n-                 and then Get_Pragma_Id (Item) = Pragma_SPARK_Mode\n-               then\n-                  return Get_SPARK_Mode_From_Pragma (Item) = On;\n+\n+               --  Pragmas that apply to a subprogram body are usually grouped\n+               --  together. Look for a potential pragma SPARK_Mode among them.\n+\n+               if Nkind (Item) = N_Pragma then\n+                  if Get_Pragma_Id (Item) = Pragma_SPARK_Mode then\n+                     return Get_SPARK_Mode_From_Annotation (Item) = On;\n+                  end if;\n+\n+               --  Otherwise the first non-pragma declarative item terminates\n+               --  the region where pragma SPARK_Mode may appear.\n+\n+               else\n+                  exit;\n                end if;\n \n                Next (Item);\n             end loop;\n          end if;\n \n-         --  Applicable SPARK_Mode is inherited from the enclosing subprogram\n-         --  or package.\n+         --  Otherwise, the applicable SPARK_Mode is inherited from the\n+         --  enclosing subprogram or package.\n \n          return SPARK_Mode = On;\n       end Body_Has_SPARK_Mode_On;\n@@ -3849,9 +3855,9 @@ package body Sem_Ch6 is\n \n       if Present (Spec_Id) and then Present (SPARK_Pragma (Body_Id)) then\n          if Present (SPARK_Pragma (Spec_Id)) then\n-            if Get_SPARK_Mode_From_Pragma (SPARK_Pragma (Spec_Id)) = Off\n+            if Get_SPARK_Mode_From_Annotation (SPARK_Pragma (Spec_Id)) = Off\n                  and then\n-               Get_SPARK_Mode_From_Pragma (SPARK_Pragma (Body_Id)) = On\n+               Get_SPARK_Mode_From_Annotation (SPARK_Pragma (Body_Id)) = On\n             then\n                Error_Msg_Sloc := Sloc (SPARK_Pragma (Body_Id));\n                Error_Msg_N (\"incorrect application of SPARK_Mode#\", N);"}, {"sha": "b332f2031b55c2a229539c22e872f645fffd3982", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933aa0ac81ee62b104969294ce6ab117e1602968/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933aa0ac81ee62b104969294ce6ab117e1602968/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=933aa0ac81ee62b104969294ce6ab117e1602968", "patch": "@@ -777,9 +777,10 @@ package body Sem_Ch7 is\n \n       if Present (SPARK_Pragma (Body_Id)) then\n          if Present (SPARK_Aux_Pragma (Spec_Id)) then\n-            if Get_SPARK_Mode_From_Pragma (SPARK_Aux_Pragma (Spec_Id)) = Off\n-                 and then\n-               Get_SPARK_Mode_From_Pragma (SPARK_Pragma (Body_Id)) = On\n+            if Get_SPARK_Mode_From_Annotation (SPARK_Aux_Pragma (Spec_Id)) =\n+                 Off\n+              and then\n+                Get_SPARK_Mode_From_Annotation (SPARK_Pragma (Body_Id)) = On\n             then\n                Error_Msg_Sloc := Sloc (SPARK_Pragma (Body_Id));\n                Error_Msg_N (\"incorrect application of SPARK_Mode#\", N);"}, {"sha": "7be7172d3b96fbb1524086db57e29182097a6823", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 37, "deletions": 17, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933aa0ac81ee62b104969294ce6ab117e1602968/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933aa0ac81ee62b104969294ce6ab117e1602968/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=933aa0ac81ee62b104969294ce6ab117e1602968", "patch": "@@ -235,6 +235,11 @@ package body Sem_Prag is\n    --  original one, following the renaming chain) is returned. Otherwise the\n    --  entity is returned unchanged. Should be in Einfo???\n \n+   function Get_SPARK_Mode_Type (N : Name_Id) return SPARK_Mode_Type;\n+   --  Subsidiary to the analysis of pragma SPARK_Mode as well as subprogram\n+   --  Get_SPARK_Mode_From_Annotation. Convert a name into a corresponding\n+   --  value of type SPARK_Mode_Type.\n+\n    function Has_Extra_Parentheses (Clause : Node_Id) return Boolean;\n    --  Subsidiary to the analysis of pragmas Depends and Refined_Depends.\n    --  Determine whether dependency clause Clause is surrounded by extra\n@@ -20338,8 +20343,8 @@ package body Sem_Prag is\n                   --  Issue an error if the new mode is less restrictive than\n                   --  that of the context.\n \n-                  if Get_SPARK_Mode_From_Pragma (Context_Pragma) = Off\n-                    and then Get_SPARK_Mode_From_Pragma (N) = On\n+                  if Get_SPARK_Mode_From_Annotation (Context_Pragma) = Off\n+                    and then Get_SPARK_Mode_From_Annotation (N) = On\n                   then\n                      Error_Msg_N\n                        (\"cannot change SPARK_Mode from Off to On\", Err_N);\n@@ -20376,8 +20381,8 @@ package body Sem_Prag is\n                      --  Issue an error if the new mode is less restrictive\n                      --  than that of the initial declaration.\n \n-                     if Get_SPARK_Mode_From_Pragma (Entity_Pragma) = Off\n-                       and then Get_SPARK_Mode_From_Pragma (N) = On\n+                     if Get_SPARK_Mode_From_Annotation (Entity_Pragma) = Off\n+                       and then Get_SPARK_Mode_From_Annotation (N) = On\n                      then\n                         Error_Msg_N (\"incorrect use of SPARK_Mode\", Err_N);\n                         Error_Msg_Sloc := Sloc (Entity_Pragma);\n@@ -27553,30 +27558,45 @@ package body Sem_Prag is\n       end if;\n    end Get_SPARK_Mode_Type;\n \n-   --------------------------------\n-   -- Get_SPARK_Mode_From_Pragma --\n-   --------------------------------\n+   ------------------------------------\n+   -- Get_SPARK_Mode_From_Annotation --\n+   ------------------------------------\n \n-   function Get_SPARK_Mode_From_Pragma (N : Node_Id) return SPARK_Mode_Type is\n-      Args : List_Id;\n+   function Get_SPARK_Mode_From_Annotation\n+     (N : Node_Id) return SPARK_Mode_Type\n+   is\n       Mode : Node_Id;\n \n    begin\n-      pragma Assert (Nkind (N) = N_Pragma);\n-      Args := Pragma_Argument_Associations (N);\n+      if Nkind (N) = N_Aspect_Specification then\n+         Mode := Expression (N);\n \n-      --  Extract the mode from the argument list\n-\n-      if Present (Args) then\n+      else pragma Assert (Nkind (N) = N_Pragma);\n          Mode := First (Pragma_Argument_Associations (N));\n-         return Get_SPARK_Mode_Type (Chars (Get_Pragma_Arg (Mode)));\n \n-      --  If SPARK_Mode pragma has no argument, default is ON\n+         if Present (Mode) then\n+            Mode := Get_Pragma_Arg (Mode);\n+         end if;\n+      end if;\n+\n+      --  Aspect or pragma SPARK_Mode specifies an explicit mode\n+\n+      if Present (Mode) then\n+         if Nkind (Mode) = N_Identifier then\n+            return Get_SPARK_Mode_Type (Chars (Mode));\n+\n+         --  In case of a malformed aspect or pragma, return the default None\n+\n+         else\n+            return None;\n+         end if;\n+\n+      --  Otherwise the lack of an expression defaults SPARK_Mode to On\n \n       else\n          return On;\n       end if;\n-   end Get_SPARK_Mode_From_Pragma;\n+   end Get_SPARK_Mode_From_Annotation;\n \n    ---------------------------\n    -- Has_Extra_Parentheses --"}, {"sha": "a78478e23a92d7d5cd57460108a5257536672a3b", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933aa0ac81ee62b104969294ce6ab117e1602968/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933aa0ac81ee62b104969294ce6ab117e1602968/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=933aa0ac81ee62b104969294ce6ab117e1602968", "patch": "@@ -397,13 +397,9 @@ package Sem_Prag is\n    --  Context denotes the entity of the function, package or procedure where\n    --  Prag resides.\n \n-   function Get_SPARK_Mode_From_Pragma (N : Node_Id) return SPARK_Mode_Type;\n-   --  Given a pragma SPARK_Mode node, return corresponding mode id\n-\n-   function Get_SPARK_Mode_Type (N : Name_Id) return SPARK_Mode_Type;\n-   --  Subsidiary to the analysis of pragma SPARK_Mode as well as subprogram\n-   --  Get_SPARK_Mode_From_Pragma. Convert a name into a corresponding value\n-   --  of type SPARK_Mode_Type.\n+   function Get_SPARK_Mode_From_Annotation\n+     (N : Node_Id) return SPARK_Mode_Type;\n+   --  Given an aspect or pragma SPARK_Mode node, return corresponding mode id\n \n    procedure Initialize;\n    --  Initializes data structures used for pragma processing. Must be called"}, {"sha": "c12356cae32d7d85b76731f15da458b4217f09d4", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933aa0ac81ee62b104969294ce6ab117e1602968/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933aa0ac81ee62b104969294ce6ab117e1602968/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=933aa0ac81ee62b104969294ce6ab117e1602968", "patch": "@@ -6895,8 +6895,10 @@ package body Sem_Res is\n \n                return\n                  Pref = Obj_Ref\n+                   and then Present (Etype (Pref))\n                    and then Is_Protected_Type (Etype (Pref))\n                    and then Is_Entity_Name (Subp)\n+                   and then Present (Entity (Subp))\n                    and then Ekind_In (Entity (Subp), E_Entry,\n                                                      E_Entry_Family,\n                                                      E_Function,"}, {"sha": "1146b9dfb1e4fc4c293f1506af9c10b197f4849e", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933aa0ac81ee62b104969294ce6ab117e1602968/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933aa0ac81ee62b104969294ce6ab117e1602968/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=933aa0ac81ee62b104969294ce6ab117e1602968", "patch": "@@ -18645,7 +18645,7 @@ package body Sem_Util is\n          null;\n \n       elsif Present (SPARK_Pragma (Context)) then\n-         SPARK_Mode := Get_SPARK_Mode_From_Pragma (SPARK_Pragma (Context));\n+         SPARK_Mode := Get_SPARK_Mode_From_Annotation (SPARK_Pragma (Context));\n       end if;\n    end Save_SPARK_Mode_And_Set;\n "}]}