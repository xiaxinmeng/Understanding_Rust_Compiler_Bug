{"sha": "4eefcc98fb1656dfb49ac482a05048ec859eb51f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVlZmNjOThmYjE2NTZkZmI0OWFjNDgyYTA1MDQ4ZWM4NTllYjUxZg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-01-08T12:12:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-01-08T12:12:56Z"}, "message": "re PR tree-optimization/34683 (SSA rewriting in the loop unroller causes quadratic behavior)\n\n2008-01-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/34683\n\t* tree-flow-inline.h (var_ann): Remove overzealous asserts.\n\nFrom-SVN: r131393", "tree": {"sha": "af197648abcc06aeeac49b83039ca2f34009e9b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af197648abcc06aeeac49b83039ca2f34009e9b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4eefcc98fb1656dfb49ac482a05048ec859eb51f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eefcc98fb1656dfb49ac482a05048ec859eb51f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eefcc98fb1656dfb49ac482a05048ec859eb51f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eefcc98fb1656dfb49ac482a05048ec859eb51f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0eb52172bcb1a9391cccb8f8b32fb0c48f20ca36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb52172bcb1a9391cccb8f8b32fb0c48f20ca36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eb52172bcb1a9391cccb8f8b32fb0c48f20ca36"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "903656cc23c27b5177683fad037b373811a1222d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eefcc98fb1656dfb49ac482a05048ec859eb51f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eefcc98fb1656dfb49ac482a05048ec859eb51f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4eefcc98fb1656dfb49ac482a05048ec859eb51f", "patch": "@@ -1,3 +1,8 @@\n+2008-01-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/34683\n+\t* tree-flow-inline.h (var_ann): Remove overzealous asserts.\n+\n 2008-01-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/34622"}, {"sha": "1afbd1a8fc79a0936ca03122d91ce147de1090f1", "filename": "gcc/tree-flow-inline.h", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eefcc98fb1656dfb49ac482a05048ec859eb51f/gcc%2Ftree-flow-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eefcc98fb1656dfb49ac482a05048ec859eb51f/gcc%2Ftree-flow-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow-inline.h?ref=4eefcc98fb1656dfb49ac482a05048ec859eb51f", "patch": "@@ -190,23 +190,28 @@ fill_referenced_var_vec (VEC (tree, heap) **vec)\n static inline var_ann_t\n var_ann (const_tree t)\n {\n-  gcc_assert (t);\n-  gcc_assert (DECL_P (t));\n-  gcc_assert (TREE_CODE (t) != FUNCTION_DECL);\n-  if (!MTAG_P (t) && (TREE_STATIC (t) || DECL_EXTERNAL (t)))\n+  var_ann_t ann;\n+\n+  if (!MTAG_P (t)\n+      && (TREE_STATIC (t) || DECL_EXTERNAL (t)))\n     {\n       struct static_var_ann_d *sann\n         = ((struct static_var_ann_d *)\n \t   htab_find_with_hash (gimple_var_anns (cfun), t, DECL_UID (t)));\n       if (!sann)\n \treturn NULL;\n-      gcc_assert (sann->ann.common.type == VAR_ANN);\n-      return &sann->ann;\n+      ann = &sann->ann;\n     }\n-  gcc_assert (!t->base.ann\n-\t      || t->base.ann->common.type == VAR_ANN);\n+  else\n+    {\n+      if (!t->base.ann)\n+\treturn NULL;\n+      ann = (var_ann_t) t->base.ann;\n+    }\n+\n+  gcc_assert (ann->common.type == VAR_ANN);\n \n-  return (var_ann_t) t->base.ann;\n+  return ann;\n }\n \n /* Return the variable annotation for T, which must be a _DECL node."}]}