{"sha": "9df0192130fd054a9edf84884ca7bbccf8f7679a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRmMDE5MjEzMGZkMDU0YTllZGY4NDg4NGNhN2JiY2NmOGY3Njc5YQ==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@codesourcery.com", "date": "2014-12-01T12:56:08Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@gcc.gnu.org", "date": "2014-12-01T12:56:08Z"}, "message": "mips.c (mips16_build_call_stub): Move the save of the return address in $18 ahead of passing arguments to FPRs.\n\n\t* config/mips/mips.c (mips16_build_call_stub): Move the save of\n\tthe return address in $18 ahead of passing arguments to FPRs.\n\nFrom-SVN: r218209", "tree": {"sha": "d4b75e1a2a77fc2a2dc6d8c329b70a72f0679a3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4b75e1a2a77fc2a2dc6d8c329b70a72f0679a3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9df0192130fd054a9edf84884ca7bbccf8f7679a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9df0192130fd054a9edf84884ca7bbccf8f7679a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9df0192130fd054a9edf84884ca7bbccf8f7679a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9df0192130fd054a9edf84884ca7bbccf8f7679a/comments", "author": null, "committer": null, "parents": [{"sha": "152ceb59c5cbf96a033816d38248273c3b5ceb2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/152ceb59c5cbf96a033816d38248273c3b5ceb2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/152ceb59c5cbf96a033816d38248273c3b5ceb2a"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "c31d8bcd462d664b42b1cdfd0825810fcc5ea22e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df0192130fd054a9edf84884ca7bbccf8f7679a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df0192130fd054a9edf84884ca7bbccf8f7679a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9df0192130fd054a9edf84884ca7bbccf8f7679a", "patch": "@@ -1,3 +1,8 @@\n+2014-12-01  Maciej W. Rozycki  <macro@codesourcery.com>\n+\n+\t* config/mips/mips.c (mips16_build_call_stub): Move the save of\n+\tthe return address in $18 ahead of passing arguments to FPRs.\n+\n 2014-12-01  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tPR target/64055"}, {"sha": "85992852cfe2a0e0569a80b3ee1d3c594c9ca00a", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9df0192130fd054a9edf84884ca7bbccf8f7679a/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9df0192130fd054a9edf84884ca7bbccf8f7679a/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=9df0192130fd054a9edf84884ca7bbccf8f7679a", "patch": "@@ -6942,6 +6942,17 @@ mips16_build_call_stub (rtx retval, rtx *fn_ptr, rtx args_size, int fp_code)\n \t  /* \"Save\" $sp in itself so we don't use the fake CFA.\n \t     This is: DW_CFA_val_expression r29, { DW_OP_reg29 }.  */\n \t  fprintf (asm_out_file, \"\\t.cfi_escape 0x16,29,1,0x6d\\n\");\n+\n+\t  /* Save the return address in $18.  The stub's caller knows\n+\t     that $18 might be clobbered, even though $18 is usually\n+\t     a call-saved register.\n+\n+\t     Do it early on in case the last move to a floating-point\n+\t     register can be scheduled into the delay slot of the\n+\t     call we are about to make.  */\n+\t  fprintf (asm_out_file, \"\\tmove\\t%s,%s\\n\",\n+\t\t   reg_names[GP_REG_FIRST + 18],\n+\t\t   reg_names[RETURN_ADDR_REGNUM]);\n \t}\n       else\n \t{\n@@ -6963,11 +6974,7 @@ mips16_build_call_stub (rtx retval, rtx *fn_ptr, rtx args_size, int fp_code)\n \n       if (fp_ret_p)\n \t{\n-\t  /* Save the return address in $18 and call the non-MIPS16 function.\n-\t     The stub's caller knows that $18 might be clobbered, even though\n-\t     $18 is usually a call-saved register.  */\n-\t  fprintf (asm_out_file, \"\\tmove\\t%s,%s\\n\",\n-\t\t   reg_names[GP_REG_FIRST + 18], reg_names[RETURN_ADDR_REGNUM]);\n+\t  /* Now call the non-MIPS16 function.  */\n \t  output_asm_insn (MIPS_CALL (\"jal\", &fn, 0, -1), &fn);\n \t  fprintf (asm_out_file, \"\\t.cfi_register 31,18\\n\");\n "}]}