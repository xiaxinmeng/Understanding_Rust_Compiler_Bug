{"sha": "f88b0a82c36eefd3b89399ce2b8f8ce1968da8c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg4YjBhODJjMzZlZWZkM2I4OTM5OWNlMmI4ZjhjZTE5NjhkYThjNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-06T21:52:34Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-06T21:52:34Z"}, "message": "(mark_referenced_resources, mark_set_resources): Change from USE and\nCLOBBER insns to using CALL_INSN_FUNCTION_USAGE.\n\nFrom-SVN: r7247", "tree": {"sha": "ced48240285a99923b67918a0e126bdad1334976", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ced48240285a99923b67918a0e126bdad1334976"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f88b0a82c36eefd3b89399ce2b8f8ce1968da8c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f88b0a82c36eefd3b89399ce2b8f8ce1968da8c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f88b0a82c36eefd3b89399ce2b8f8ce1968da8c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f88b0a82c36eefd3b89399ce2b8f8ce1968da8c5/comments", "author": null, "committer": null, "parents": [{"sha": "e3c69b8a5d4085bf6ce58d0d5244d6f8c51165ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3c69b8a5d4085bf6ce58d0d5244d6f8c51165ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3c69b8a5d4085bf6ce58d0d5244d6f8c51165ea"}], "stats": {"total": 55, "additions": 28, "deletions": 27}, "files": [{"sha": "d537839493b7308a8bb180e1f1bf45189a2a7e0f", "filename": "gcc/reorg.c", "status": "modified", "additions": 28, "deletions": 27, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f88b0a82c36eefd3b89399ce2b8f8ce1968da8c5/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f88b0a82c36eefd3b89399ce2b8f8ce1968da8c5/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=f88b0a82c36eefd3b89399ce2b8f8ce1968da8c5", "patch": "@@ -403,25 +403,27 @@ mark_referenced_resources (x, res, include_delayed_effects)\n \t    if (global_regs[i])\n \t      SET_HARD_REG_BIT (res->regs, i);\n \n-\t  /* Skip any labels between the CALL_INSN and possible USE insns.  */\n-\t  while (GET_CODE (insn) == CODE_LABEL)\n-\t    insn = PREV_INSN (insn);\n-\n-\t  for ( ; (insn && GET_CODE (insn) == INSN\n-\t\t   && GET_CODE (PATTERN (insn)) == USE);\n-\t       insn = PREV_INSN (insn))\n-\t    {\n-\t      for (i = 1; i < seq_size; i++)\n-\t\t{\n-\t\t  rtx slot_pat = PATTERN (XVECEXP (sequence, 0, i));\n-\t\t  if (GET_CODE (slot_pat) == SET\n-\t\t      && rtx_equal_p (SET_DEST (slot_pat),\n-\t\t\t\t      XEXP (PATTERN (insn), 0)))\n-\t\t    break;\n-\t\t}\n-\t      if (i >= seq_size)\n-\t\tmark_referenced_resources (XEXP (PATTERN (insn), 0), res, 0);\n-\t    }\n+\t {\n+\t   rtx link;\n+\n+           for (link = CALL_INSN_FUNCTION_USAGE (insn);\n+\t\tlink;\n+\t\tlink = XEXP (link, 1))\n+\t     if (GET_CODE (XEXP (link, 0)) == USE)\n+\t       {\n+\t         for (i = 1; i < seq_size; i++)\n+\t\t   {\n+\t\t     rtx slot_pat = PATTERN (XVECEXP (sequence, 0, i));\n+\t\t     if (GET_CODE (slot_pat) == SET\n+\t\t         && rtx_equal_p (SET_DEST (slot_pat),\n+\t\t\t\t         SET_DEST (XEXP (link, 0)))\n+\t\t       break;\n+\t\t   }\n+\t         if (i >= seq_size)\n+\t\t   mark_referenced_resources (SET_DEST (XEXP (link, 0)),\n+\t\t\t\t\t      res, 0);\n+\t       }\n+\t }\n \t}\n \n       /* ... fall through to other INSN processing ... */\n@@ -525,14 +527,13 @@ mark_set_resources (x, res, in_dest, include_delayed_effects)\n \t  if (NEXT_INSN (prev) != x)\n \t    next = NEXT_INSN (NEXT_INSN (prev));\n \n-\t  /* Skip any possible labels between the CALL_INSN and CLOBBERs.  */\n-\t  while (GET_CODE (next) == CODE_LABEL)\n-\t    next = NEXT_INSN (next);\n-\n-\t  for (; (next && GET_CODE (next) == INSN\n-\t\t  && GET_CODE (PATTERN (next)) == CLOBBER);\n-\t       next = NEXT_INSN (next))\n-\t    mark_set_resources (XEXP (PATTERN (next), 0), res, 1, 0);\n+\t { rtx link;\n+           for (link = CALL_INSN_FUNCTION_USAGE (insn);\n+\t\tlink;\n+\t\tlink = XEXP (link, 1))\n+\t     if (GET_CODE (XEXP (link, 0)) == CLOBBER)\n+\t       mark_set_resources (SET_DEST (XEXP (link, 0)), res, 1, 0);\n+         }\n \n \t  /* Check for a NOTE_INSN_SETJMP.  If it exists, then we must\n \t     assume that this call can clobber any register.  */"}]}