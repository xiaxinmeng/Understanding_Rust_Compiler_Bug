{"sha": "c707190b29e1e5b2d20fa9d68dcd7f043659aed4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzcwNzE5MGIyOWUxZTViMmQyMGZhOWQ2OGRjZDdmMDQzNjU5YWVkNA==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-02T16:50:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-02T16:50:26Z"}, "message": "Merge #602\n\n602: Add locus to TupleField and pass it and union variants to HIR class r=philberty a=dkm\n\nFrom Mark Wielaard : https://gcc.gnu.org/pipermail/gcc-rust/2021-August/000108.html\r\n\r\n> TupleField was missing a Location field and we dropped to locus when\r\n> lowering Union fields to HIR.\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>", "tree": {"sha": "cf79d3deafd2361cedb69f6a0757619719077aab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf79d3deafd2361cedb69f6a0757619719077aab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c707190b29e1e5b2d20fa9d68dcd7f043659aed4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhCCJSCRBK7hj4Ov3rIwAAp5EIAAvB8in+axJV3xbH2mT950Ff\ngXbsEssoHizW26cROYxIyuDOkjzgKcTzxhFa1gm76AvDOktyhlTKObVFQWgtC/lj\nrnjtnD0vvuOmAKFiAOrlgL9dqjI5UzZe5BQaYp+ObAPkR+T1yMj5LxZoZLm5dtHd\nikw4uBI7j04AUQ8Ii6eSgYdZqoTofXBTYUX65Q63BocB+RRAqM5vTuOfwGedtj72\nz91VzykVv/br9LuYHtJDNQ0Q5rjhkxaKp61uJ6SEkYd36wHSNHERMKtkO/MIIfop\nuOMsZIIrxU9fUp95+Ldy9ZF4xp8TPBtGPutWxRTbb2xe7NF8sZeOHvAtWPdIB84=\n=AjVq\n-----END PGP SIGNATURE-----\n", "payload": "tree cf79d3deafd2361cedb69f6a0757619719077aab\nparent 2fe7fb7ce537eb967653e04361306e63c21905b7\nparent cd67e5d5f138dbdff4ec859e4020e8091cb03aa7\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1627923026 +0000\ncommitter GitHub <noreply@github.com> 1627923026 +0000\n\nMerge #602\n\n602: Add locus to TupleField and pass it and union variants to HIR class r=philberty a=dkm\n\nFrom Mark Wielaard : https://gcc.gnu.org/pipermail/gcc-rust/2021-August/000108.html\r\n\r\n> TupleField was missing a Location field and we dropped to locus when\r\n> lowering Union fields to HIR.\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c707190b29e1e5b2d20fa9d68dcd7f043659aed4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c707190b29e1e5b2d20fa9d68dcd7f043659aed4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c707190b29e1e5b2d20fa9d68dcd7f043659aed4/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fe7fb7ce537eb967653e04361306e63c21905b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe7fb7ce537eb967653e04361306e63c21905b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fe7fb7ce537eb967653e04361306e63c21905b7"}, {"sha": "cd67e5d5f138dbdff4ec859e4020e8091cb03aa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd67e5d5f138dbdff4ec859e4020e8091cb03aa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd67e5d5f138dbdff4ec859e4020e8091cb03aa7"}], "stats": {"total": 37, "additions": 18, "deletions": 19}, "files": [{"sha": "6b0021a8b11948c74bbe2469005f80be3c32f1e3", "filename": "gcc/rust/ast/rust-item.h", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c707190b29e1e5b2d20fa9d68dcd7f043659aed4/gcc%2Frust%2Fast%2Frust-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c707190b29e1e5b2d20fa9d68dcd7f043659aed4/gcc%2Frust%2Fast%2Frust-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-item.h?ref=c707190b29e1e5b2d20fa9d68dcd7f043659aed4", "patch": "@@ -2002,9 +2002,10 @@ struct TupleField\n \n   std::unique_ptr<Type> field_type;\n \n-  // should this store location info?\n   NodeId node_id;\n \n+  Location locus;\n+\n public:\n   // Returns whether tuple field has outer attributes.\n   bool has_outer_attributes () const { return !outer_attrs.empty (); }\n@@ -2014,17 +2015,17 @@ struct TupleField\n   bool has_visibility () const { return !visibility.is_error (); }\n \n   // Complete constructor\n-  TupleField (std::unique_ptr<Type> field_type, Visibility vis,\n+  TupleField (std::unique_ptr<Type> field_type, Visibility vis, Location locus,\n \t      std::vector<Attribute> outer_attrs = std::vector<Attribute> ())\n     : outer_attrs (std::move (outer_attrs)), visibility (std::move (vis)),\n       field_type (std::move (field_type)),\n-      node_id (Analysis::Mappings::get ()->get_next_node_id ())\n+      node_id (Analysis::Mappings::get ()->get_next_node_id ()), locus (locus)\n   {}\n \n   // Copy constructor with clone\n   TupleField (TupleField const &other)\n     : outer_attrs (other.outer_attrs), visibility (other.visibility),\n-      node_id (other.node_id)\n+      node_id (other.node_id), locus (other.locus)\n   {\n     // guard to prevent null dereference (only required if error)\n     if (other.field_type != nullptr)\n@@ -2039,6 +2040,7 @@ struct TupleField\n     visibility = other.visibility;\n     outer_attrs = other.outer_attrs;\n     node_id = other.node_id;\n+    locus = other.locus;\n \n     // guard to prevent null dereference (only required if error)\n     if (other.field_type != nullptr)\n@@ -2059,12 +2061,14 @@ struct TupleField\n   // Creates an error state tuple field.\n   static TupleField create_error ()\n   {\n-    return TupleField (nullptr, Visibility::create_error ());\n+    return TupleField (nullptr, Visibility::create_error (), Location ());\n   }\n \n   std::string as_string () const;\n \n-  NodeId get_node_id () const { return node_id; };\n+  NodeId get_node_id () const { return node_id; }\n+\n+  Location get_locus () const { return locus; }\n \n   // TODO: this mutable getter seems really dodgy. Think up better way.\n   std::vector<Attribute> &get_outer_attrs () { return outer_attrs; }"}, {"sha": "d49d2b22bf02801c028a84cceb996230ad35a0e3", "filename": "gcc/rust/hir/rust-ast-lower-item.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c707190b29e1e5b2d20fa9d68dcd7f043659aed4/gcc%2Frust%2Fhir%2Frust-ast-lower-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c707190b29e1e5b2d20fa9d68dcd7f043659aed4/gcc%2Frust%2Fhir%2Frust-ast-lower-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-item.h?ref=c707190b29e1e5b2d20fa9d68dcd7f043659aed4", "patch": "@@ -111,12 +111,10 @@ class ASTLoweringItem : public ASTLoweringBase\n \t\t\t\t     mappings->get_next_localdef_id (\n \t\t\t\t       crate_num));\n \n-      // FIXME\n-      // AST::TupleField is missing Location info\n-      Location field_locus;\n       HIR::TupleField translated_field (mapping,\n \t\t\t\t\tstd::unique_ptr<HIR::Type> (type), vis,\n-\t\t\t\t\tfield_locus, field.get_outer_attrs ());\n+\t\t\t\t\tfield.get_locus (),\n+\t\t\t\t\tfield.get_outer_attrs ());\n       fields.push_back (std::move (translated_field));\n       return true;\n     });"}, {"sha": "c4c00ac0bee33a71f6b0159a516b648a9497ac01", "filename": "gcc/rust/hir/rust-ast-lower-stmt.h", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c707190b29e1e5b2d20fa9d68dcd7f043659aed4/gcc%2Frust%2Fhir%2Frust-ast-lower-stmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c707190b29e1e5b2d20fa9d68dcd7f043659aed4/gcc%2Frust%2Fhir%2Frust-ast-lower-stmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-stmt.h?ref=c707190b29e1e5b2d20fa9d68dcd7f043659aed4", "patch": "@@ -187,12 +187,10 @@ class ASTLoweringStmt : public ASTLoweringBase\n \t\t\t\t     mappings->get_next_localdef_id (\n \t\t\t\t       crate_num));\n \n-      // FIXME\n-      // AST::StructField is missing Location info\n-      Location field_locus;\n       HIR::StructField translated_field (mapping, field.get_field_name (),\n \t\t\t\t\t std::unique_ptr<HIR::Type> (type), vis,\n-\t\t\t\t\t field_locus, field.get_outer_attrs ());\n+\t\t\t\t\t field.get_locus (),\n+\t\t\t\t\t field.get_outer_attrs ());\n       fields.push_back (std::move (translated_field));\n       return true;\n     });\n@@ -240,12 +238,9 @@ class ASTLoweringStmt : public ASTLoweringBase\n \t\t\t\t     mappings->get_next_localdef_id (\n \t\t\t\t       crate_num));\n \n-      // FIXME\n-      // AST::StructField is missing Location info\n-      Location variant_locus;\n       HIR::StructField translated_variant (mapping, variant.get_field_name (),\n \t\t\t\t\t   std::unique_ptr<HIR::Type> (type),\n-\t\t\t\t\t   vis, variant_locus,\n+\t\t\t\t\t   vis, variant.get_locus (),\n \t\t\t\t\t   variant.get_outer_attrs ());\n       variants.push_back (std::move (translated_variant));\n       return true;"}, {"sha": "9eb212b4e728368a86b75aa07e1a96b162275798", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c707190b29e1e5b2d20fa9d68dcd7f043659aed4/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c707190b29e1e5b2d20fa9d68dcd7f043659aed4/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=c707190b29e1e5b2d20fa9d68dcd7f043659aed4", "patch": "@@ -4295,6 +4295,8 @@ Parser<ManagedTokenSource>::parse_tuple_field ()\n   // parse visibility if it exists\n   AST::Visibility vis = parse_visibility ();\n \n+  Location locus = lexer.peek_token ()->get_locus ();\n+\n   // parse type, which is required\n   std::unique_ptr<AST::Type> field_type = parse_type ();\n   if (field_type == nullptr)\n@@ -4308,7 +4310,7 @@ Parser<ManagedTokenSource>::parse_tuple_field ()\n       return AST::TupleField::create_error ();\n     }\n \n-  return AST::TupleField (std::move (field_type), std::move (vis),\n+  return AST::TupleField (std::move (field_type), std::move (vis), locus,\n \t\t\t  std::move (outer_attrs));\n }\n "}]}