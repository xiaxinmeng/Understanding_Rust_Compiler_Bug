{"sha": "8b674a6f60d931dc77b055775e75645c7b649b75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI2NzRhNmY2MGQ5MzFkYzc3YjA1NTc3NWU3NTY0NWM3YjY0OWI3NQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-09-18T23:28:00Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-09-18T23:28:00Z"}, "message": "compiler: Fix name of unexported method of embedded imported type.\n\nTest case is fixedbugs/bug478.go in master testsuite.\n\nFrom-SVN: r202726", "tree": {"sha": "61508661f0529b53b0140909a61b75358a459289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61508661f0529b53b0140909a61b75358a459289"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b674a6f60d931dc77b055775e75645c7b649b75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b674a6f60d931dc77b055775e75645c7b649b75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b674a6f60d931dc77b055775e75645c7b649b75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b674a6f60d931dc77b055775e75645c7b649b75/comments", "author": null, "committer": null, "parents": [{"sha": "57c6def418f116f355d3d5eb71f4dd5003eefb0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57c6def418f116f355d3d5eb71f4dd5003eefb0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57c6def418f116f355d3d5eb71f4dd5003eefb0b"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "7813cc1882273ab816dd266f06a499fc216110d3", "filename": "gcc/go/gofrontend/gogo-tree.cc", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b674a6f60d931dc77b055775e75645c7b649b75/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b674a6f60d931dc77b055775e75645c7b649b75/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc?ref=8b674a6f60d931dc77b055775e75645c7b649b75", "patch": "@@ -1009,6 +1009,16 @@ Named_object::get_id(Gogo* gogo)\n       else\n \tpackage_name = this->package_->package_name();\n \n+      // Note that this will be misleading if this is an unexported\n+      // method generated for an embedded imported type.  In that case\n+      // the unexported method should have the package name of the\n+      // package from which it is imported, but we are going to give\n+      // it our package name.  Fixing this would require knowing the\n+      // package name, but we only know the package path.  It might be\n+      // better to use package paths here anyhow.  This doesn't affect\n+      // the assembler code, because we always set that name in\n+      // Function::get_or_make_decl anyhow.  FIXME.\n+\n       decl_name = package_name + '.' + Gogo::unpack_hidden_name(this->name_);\n \n       Function_type* fntype;\n@@ -1317,7 +1327,21 @@ Function::get_or_make_decl(Gogo* gogo, Named_object* no, tree id)\n \t\t   || this->type_->is_method())\n \t    {\n \t      TREE_PUBLIC(decl) = 1;\n-\t      std::string asm_name = gogo->pkgpath_symbol();\n+\t      std::string pkgpath = gogo->pkgpath_symbol();\n+\t      if (this->type_->is_method()\n+\t\t  && Gogo::is_hidden_name(no->name())\n+\t\t  && Gogo::hidden_name_pkgpath(no->name()) != gogo->pkgpath())\n+\t\t{\n+\t\t  // This is a method we created for an unexported\n+\t\t  // method of an imported embedded type.  We need to\n+\t\t  // use the pkgpath of the imported package to avoid\n+\t\t  // a possible name collision.  See bug478 for a test\n+\t\t  // case.\n+\t\t  pkgpath = Gogo::hidden_name_pkgpath(no->name());\n+\t\t  pkgpath = Gogo::pkgpath_for_symbol(pkgpath);\n+\t\t}\n+\n+\t      std::string asm_name = pkgpath;\n \t      asm_name.append(1, '.');\n \t      asm_name.append(Gogo::unpack_hidden_name(no->name()));\n \t      if (this->type_->is_method())"}]}