{"sha": "f00e3d4e655069121d9cca74d6b70219a9c6378f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAwZTNkNGU2NTUwNjkxMjFkOWNjYTc0ZDZiNzAyMTlhOWM2Mzc4Zg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-05-19T12:32:48Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-05-19T12:32:48Z"}, "message": "context.h (context::set_passes): New.\n\n\t* context.h (context::set_passes): New.\n\t* context.c (context::context): Do not create pass manager.\n\t* toplev.c (general_init): Create pass manager here.\n\nFrom-SVN: r248268", "tree": {"sha": "139ddb25f5f33f8cd0aafe729081e7145d9480dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/139ddb25f5f33f8cd0aafe729081e7145d9480dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f00e3d4e655069121d9cca74d6b70219a9c6378f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f00e3d4e655069121d9cca74d6b70219a9c6378f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f00e3d4e655069121d9cca74d6b70219a9c6378f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f00e3d4e655069121d9cca74d6b70219a9c6378f/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f710ca61baca6ba7b6e513b68a9397e7b635989f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f710ca61baca6ba7b6e513b68a9397e7b635989f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f710ca61baca6ba7b6e513b68a9397e7b635989f"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "b11d20dee41759bf09902ba78c41dfcfa7912801", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f00e3d4e655069121d9cca74d6b70219a9c6378f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f00e3d4e655069121d9cca74d6b70219a9c6378f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f00e3d4e655069121d9cca74d6b70219a9c6378f", "patch": "@@ -1,3 +1,9 @@\n+2017-05-19  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* context.h (context::set_passes): New.\n+\t* context.c (context::context): Do not create pass manager.\n+\t* toplev.c (general_init): Create pass manager here.\n+\n 2017-05-19  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (splitter to load of -1 and mask): Don't"}, {"sha": "22d91b4fdf655ea36d75067f08c2319a42c59b5f", "filename": "gcc/context.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f00e3d4e655069121d9cca74d6b70219a9c6378f/gcc%2Fcontext.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f00e3d4e655069121d9cca74d6b70219a9c6378f/gcc%2Fcontext.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcontext.c?ref=f00e3d4e655069121d9cca74d6b70219a9c6378f", "patch": "@@ -29,14 +29,9 @@ along with GCC; see the file COPYING3.  If not see\n gcc::context *g;\n \n gcc::context::context ()\n+  : m_passes (NULL), m_dumps (new gcc::dump_manager ())\n {\n   have_offload = false;\n-\n-  /* The pass manager's constructor uses the dump manager (to set up\n-     dumps for the various passes), so the dump manager must be set up\n-     before the pass manager.  */\n-  m_dumps = new gcc::dump_manager ();\n-  m_passes = new gcc::pass_manager (this);\n }\n \n gcc::context::~context ()"}, {"sha": "4573f705c46151a37f87cd5f200e00bdae4946ea", "filename": "gcc/context.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f00e3d4e655069121d9cca74d6b70219a9c6378f/gcc%2Fcontext.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f00e3d4e655069121d9cca74d6b70219a9c6378f/gcc%2Fcontext.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcontext.h?ref=f00e3d4e655069121d9cca74d6b70219a9c6378f", "patch": "@@ -39,6 +39,12 @@ class context\n \n   /* Pass-management.  */\n \n+  void set_passes (pass_manager *m)\n+  {\n+    gcc_assert (!m_passes);\n+    m_passes = m;\n+  }\n+\n   pass_manager *get_passes () { gcc_assert (m_passes); return m_passes; }\n \n   /* Handling dump files.  */"}, {"sha": "814193a4509749579d8a78702ac0c904840a6401", "filename": "gcc/toplev.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f00e3d4e655069121d9cca74d6b70219a9c6378f/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f00e3d4e655069121d9cca74d6b70219a9c6378f/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=f00e3d4e655069121d9cca74d6b70219a9c6378f", "patch": "@@ -1154,9 +1154,13 @@ general_init (const char *argv0, bool init_signals)\n      processing.  */\n   init_ggc_heuristics ();\n \n-  /* Create the singleton holder for global state.\n-     Doing so also creates the pass manager and with it the passes.  */\n+  /* Create the singleton holder for global state.  This creates the\n+     dump manager.  */\n   g = new gcc::context ();\n+\n+  /* Create the passes.  */\n+  g->set_passes (new gcc::pass_manager (g));\n+\n   symtab = new (ggc_cleared_alloc <symbol_table> ()) symbol_table ();\n \n   statistics_early_init ();"}]}