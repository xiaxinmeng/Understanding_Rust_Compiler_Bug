{"sha": "e6b3f5ba80252a12abf02e5932300b11eb30d226", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZiM2Y1YmE4MDI1MmExMmFiZjAyZTU5MzIzMDBiMTFlYjMwZDIyNg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2015-05-22T13:17:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T13:17:54Z"}, "message": "sem_res.adb (Resolve_Actuals): If the call is to an overridden operation...\n\n2015-05-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_res.adb (Resolve_Actuals): If the call is to an overridden\n\toperation, replace the names of the actuals in named associations\n\twith the names of the actuals of the subprogram that is eventually\n\texecuted. The names of the formals and the defaults can differ\n\tbetween the two operations when they are operations of a formal\n\tderived type.\n\nFrom-SVN: r223569", "tree": {"sha": "50f3f536a4a1b6e559054f9d71807e7705264a4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50f3f536a4a1b6e559054f9d71807e7705264a4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6b3f5ba80252a12abf02e5932300b11eb30d226", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6b3f5ba80252a12abf02e5932300b11eb30d226", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6b3f5ba80252a12abf02e5932300b11eb30d226", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6b3f5ba80252a12abf02e5932300b11eb30d226/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d992a425b7b2ebb6ed34d545d7c4a4f68b6a0b14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d992a425b7b2ebb6ed34d545d7c4a4f68b6a0b14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d992a425b7b2ebb6ed34d545d7c4a4f68b6a0b14"}], "stats": {"total": 53, "additions": 49, "deletions": 4}, "files": [{"sha": "8b3f99f2797eaa547e9734903942aae7702e07a9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b3f5ba80252a12abf02e5932300b11eb30d226/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b3f5ba80252a12abf02e5932300b11eb30d226/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e6b3f5ba80252a12abf02e5932300b11eb30d226", "patch": "@@ -1,3 +1,12 @@\n+2015-05-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Actuals): If the call is to an overridden\n+\toperation, replace the names of the actuals in named associations\n+\twith the names of the actuals of the subprogram that is eventually\n+\texecuted. The names of the formals and the defaults can differ\n+\tbetween the two operations when they are operations of a formal\n+\tderived type.\n+\n 2015-05-22  Bob Duff  <duff@adacore.com>\n \n \t* a-convec.ads, a-convec.adb (Append): Check for fast path. Split"}, {"sha": "9d7ddf4fd32913e448446abd6796c6fccc0607d7", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6b3f5ba80252a12abf02e5932300b11eb30d226/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6b3f5ba80252a12abf02e5932300b11eb30d226/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=e6b3f5ba80252a12abf02e5932300b11eb30d226", "patch": "@@ -3050,6 +3050,14 @@ package body Sem_Res is\n       F_Typ  : Entity_Id;\n       Prev   : Node_Id := Empty;\n       Orig_A : Node_Id;\n+      Real_F : Entity_Id;\n+\n+      Real_Subp : Entity_Id;\n+      --  If the subprogram being called is an overridden operation,\n+      --  Real_Subp is the subprogram that will be called. It may have\n+      --  different formal names than the overridden operation, so after\n+      --  actual is resolved, the name of the actual in a named association\n+      --  must carry the name of the actual of the subprogram being called.\n \n       procedure Check_Aliased_Parameter;\n       --  Check rules on aliased parameters and related accessibility rules\n@@ -3560,12 +3568,27 @@ package body Sem_Res is\n       Check_Argument_Order;\n       Check_Function_Writable_Actuals (N);\n \n+      if Is_Overloadable (Nam)\n+        and then Is_Inherited_Operation (Nam)\n+        and then Present (Alias (Nam))\n+        and then Present (Overridden_Operation (Alias (Nam)))\n+      then\n+         Real_Subp := Alias (Nam);\n+      else\n+         Real_Subp := Empty;\n+      end if;\n+\n       if Present (First_Actual (N)) then\n          Check_Prefixed_Call;\n       end if;\n \n       A := First_Actual (N);\n       F := First_Formal (Nam);\n+\n+      if Present (Real_Subp) then\n+         Real_F := First_Formal (Real_Subp);\n+      end if;\n+\n       while Present (F) loop\n          if No (A) and then Needs_No_Actuals (Nam) then\n             null;\n@@ -4400,10 +4423,19 @@ package body Sem_Res is\n \n               and then not GNATprove_Mode\n             then\n-               Set_Entity (Selector_Name (Parent (A)), F);\n-               Generate_Reference (F, Selector_Name (Parent (A)));\n-               Set_Etype (Selector_Name (Parent (A)), F_Typ);\n-               Generate_Reference (F_Typ, N, ' ');\n+               --  If subprogram is overridden, use name of formal that\n+               --  is being called.\n+\n+               if Present (Real_Subp) then\n+                  Set_Entity (Selector_Name (Parent (A)), Real_F);\n+                  Set_Etype (Selector_Name (Parent (A)), Etype (Real_F));\n+\n+               else\n+                  Set_Entity (Selector_Name (Parent (A)), F);\n+                  Generate_Reference (F, Selector_Name (Parent (A)));\n+                  Set_Etype (Selector_Name (Parent (A)), F_Typ);\n+                  Generate_Reference (F_Typ, N, ' ');\n+               end if;\n             end if;\n \n             Prev := A;\n@@ -4503,6 +4535,10 @@ package body Sem_Res is\n \n             Next_Actual (A);\n \n+            if Present (Real_Subp) then\n+               Next_Formal (Real_F);\n+            end if;\n+\n          --  Case where actual is not present\n \n          else"}]}