{"sha": "a1259a13026fb572411d29b13318264e2d087346", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTEyNTlhMTMwMjZmYjU3MjQxMWQyOWIxMzMxODI2NGUyZDA4NzM0Ng==", "commit": {"author": {"name": "Yvan Roux", "email": "yvan.roux@linaro.org", "date": "2013-07-17T11:39:14Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2013-07-17T11:39:14Z"}, "message": "re PR target/57909 ([ARM] ICE with internal memcpy and -mno-unaligned-access)\n\nFix PR target/57909.\n\n2013-07-17  Yvan Roux  <yvan.roux@linaro.org>\n\n        PR target/57909\n        * config/arm/arm.c (gen_movmem_ldrd_strd): Fix unaligned load/store\n        usage in HI mode.\n\nFrom-SVN: r201005", "tree": {"sha": "b53cfcb26122ca0dbeb5d2dae7864c4e1ddf55d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b53cfcb26122ca0dbeb5d2dae7864c4e1ddf55d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1259a13026fb572411d29b13318264e2d087346", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1259a13026fb572411d29b13318264e2d087346", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1259a13026fb572411d29b13318264e2d087346", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1259a13026fb572411d29b13318264e2d087346/comments", "author": {"login": "yroux", "id": 2749479, "node_id": "MDQ6VXNlcjI3NDk0Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/2749479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yroux", "html_url": "https://github.com/yroux", "followers_url": "https://api.github.com/users/yroux/followers", "following_url": "https://api.github.com/users/yroux/following{/other_user}", "gists_url": "https://api.github.com/users/yroux/gists{/gist_id}", "starred_url": "https://api.github.com/users/yroux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yroux/subscriptions", "organizations_url": "https://api.github.com/users/yroux/orgs", "repos_url": "https://api.github.com/users/yroux/repos", "events_url": "https://api.github.com/users/yroux/events{/privacy}", "received_events_url": "https://api.github.com/users/yroux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "167f68ede42b2bb0bf287769951c5a6aca3e7281", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/167f68ede42b2bb0bf287769951c5a6aca3e7281", "html_url": "https://github.com/Rust-GCC/gccrs/commit/167f68ede42b2bb0bf287769951c5a6aca3e7281"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "58d44ff2ff3257e1ba1c98842717f8921911de71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1259a13026fb572411d29b13318264e2d087346/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1259a13026fb572411d29b13318264e2d087346/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1259a13026fb572411d29b13318264e2d087346", "patch": "@@ -1,3 +1,9 @@\n+2013-07-17  Yvan Roux  <yvan.roux@linaro.org>\n+\n+\tPR target/57909\n+\t* config/arm/arm.c (gen_movmem_ldrd_strd): Fix unaligned load/store\n+\tusage in HI mode.\n+\n 2013-07-17  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* config/s390/s390.c: (s390_expand_builtin): Allow -mhtm to be"}, {"sha": "35096e83b201cb76de12219929bc325994f11469", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1259a13026fb572411d29b13318264e2d087346/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1259a13026fb572411d29b13318264e2d087346/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=a1259a13026fb572411d29b13318264e2d087346", "patch": "@@ -12018,8 +12018,16 @@ gen_movmem_ldrd_strd (rtx *operands)\n       dst = adjust_address (dst, HImode, 0);\n       src = adjust_address (src, HImode, 0);\n       reg0 = gen_reg_rtx (SImode);\n-      emit_insn (gen_unaligned_loadhiu (reg0, src));\n-      emit_insn (gen_unaligned_storehi (dst, gen_lowpart (HImode, reg0)));\n+      if (src_aligned)\n+        emit_insn (gen_zero_extendhisi2 (reg0, src));\n+      else\n+        emit_insn (gen_unaligned_loadhiu (reg0, src));\n+\n+      if (dst_aligned)\n+        emit_insn (gen_movhi (dst, gen_lowpart(HImode, reg0)));\n+      else\n+        emit_insn (gen_unaligned_storehi (dst, gen_lowpart (HImode, reg0)));\n+\n       src = next_consecutive_mem (src);\n       dst = next_consecutive_mem (dst);\n       if (len == 2)"}]}