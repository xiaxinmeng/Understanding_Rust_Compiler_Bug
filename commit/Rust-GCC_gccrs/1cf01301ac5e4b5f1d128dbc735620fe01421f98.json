{"sha": "1cf01301ac5e4b5f1d128dbc735620fe01421f98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNmMDEzMDFhYzVlNGI1ZjFkMTI4ZGJjNzM1NjIwZmUwMTQyMWY5OA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-08-25T14:05:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-08-25T14:05:28Z"}, "message": "re PR tree-optimization/44562 (ICE: in get_alias_set, at alias.c:716 with -flto -fstrict-aliasing -fgraphite-identity)\n\n2010-08-25  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/44562\n\t* lto-streamer.c (lto_record_common_node): Do not mess with\n\tTYPE_CANONICAL when not in lto.\n\t* gimple.c (gimple_register_type): Likewise.\n\n\t* gcc.dg/graphite/id-27.c: New testcase.\n\t* gcc.dg/lto/20100825-1_0.c: Likewise.\n\nFrom-SVN: r163545", "tree": {"sha": "5be829b0ffed7290b19e398a7f2b7765810a510d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5be829b0ffed7290b19e398a7f2b7765810a510d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cf01301ac5e4b5f1d128dbc735620fe01421f98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cf01301ac5e4b5f1d128dbc735620fe01421f98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cf01301ac5e4b5f1d128dbc735620fe01421f98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cf01301ac5e4b5f1d128dbc735620fe01421f98/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a2c0ed2ee91b8e30a47466ce3a18779248718c1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c0ed2ee91b8e30a47466ce3a18779248718c1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2c0ed2ee91b8e30a47466ce3a18779248718c1b"}], "stats": {"total": 101, "additions": 96, "deletions": 5}, "files": [{"sha": "a0bef4e60a896c1db1663863ec87b8f39254ab2c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf01301ac5e4b5f1d128dbc735620fe01421f98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf01301ac5e4b5f1d128dbc735620fe01421f98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1cf01301ac5e4b5f1d128dbc735620fe01421f98", "patch": "@@ -1,3 +1,10 @@\n+2010-08-25  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/44562\n+\t* lto-streamer.c (lto_record_common_node): Do not mess with\n+\tTYPE_CANONICAL when not in lto.\n+\t* gimple.c (gimple_register_type): Likewise.\n+\n 2010-08-25  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/45316"}, {"sha": "50b2eab4c527a78555ae439d665cc0ef7a85ec9b", "filename": "gcc/gimple.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf01301ac5e4b5f1d128dbc735620fe01421f98/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf01301ac5e4b5f1d128dbc735620fe01421f98/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=1cf01301ac5e4b5f1d128dbc735620fe01421f98", "patch": "@@ -4215,8 +4215,9 @@ gimple_register_type (tree t)\n   gcc_assert (TYPE_P (t));\n \n   /* In TYPE_CANONICAL we cache the result of gimple_register_type.\n-     It is initially set to NULL during LTO streaming.  */\n-  if (TYPE_CANONICAL (t))\n+     It is initially set to NULL during LTO streaming.\n+     But do not mess with TYPE_CANONICAL when not in WPA or link phase.  */\n+  if (in_lto_p && TYPE_CANONICAL (t))\n     return TYPE_CANONICAL (t);\n \n   /* Always register the main variant first.  This is important so we\n@@ -4282,12 +4283,14 @@ gimple_register_type (tree t)\n \t  TYPE_NEXT_REF_TO (t) = NULL_TREE;\n \t}\n \n-      TYPE_CANONICAL (t) = new_type;\n+      if (in_lto_p)\n+\tTYPE_CANONICAL (t) = new_type;\n       t = new_type;\n     }\n   else\n     {\n-      TYPE_CANONICAL (t) = t;\n+      if (in_lto_p)\n+\tTYPE_CANONICAL (t) = t;\n       *slot = (void *) t;\n     }\n "}, {"sha": "27b7e56050826eaab39d307ae3e706c8d9cf568c", "filename": "gcc/lto-streamer.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf01301ac5e4b5f1d128dbc735620fe01421f98/gcc%2Flto-streamer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf01301ac5e4b5f1d128dbc735620fe01421f98/gcc%2Flto-streamer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.c?ref=1cf01301ac5e4b5f1d128dbc735620fe01421f98", "patch": "@@ -524,7 +524,8 @@ lto_record_common_node (tree *nodep, VEC(tree, heap) **common_nodes,\n     {\n       /* Type merging will get confused by the canonical types as they\n \t are set by the middle-end.  */\n-      TYPE_CANONICAL (node) = NULL_TREE;\n+      if (in_lto_p)\n+\tTYPE_CANONICAL (node) = NULL_TREE;\n       *nodep = node = gimple_register_type (node);\n     }\n "}, {"sha": "6e8b1407c28347b528f5d31b1caac77fb6bfd393", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf01301ac5e4b5f1d128dbc735620fe01421f98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf01301ac5e4b5f1d128dbc735620fe01421f98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1cf01301ac5e4b5f1d128dbc735620fe01421f98", "patch": "@@ -1,3 +1,9 @@\n+2010-08-25  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/44562\n+\t* gcc.dg/graphite/id-27.c: New testcase.\n+\t* gcc.dg/lto/20100825-1_0.c: Likewise.\n+\n 2010-08-25  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/45316"}, {"sha": "d2d4cd36bb8538c7b7e9d6fa6e91d8471439a242", "filename": "gcc/testsuite/gcc.dg/graphite/id-27.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf01301ac5e4b5f1d128dbc735620fe01421f98/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf01301ac5e4b5f1d128dbc735620fe01421f98/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-27.c?ref=1cf01301ac5e4b5f1d128dbc735620fe01421f98", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-options \"-O2 -fgraphite-identity -flto\" { target lto } } */\n+\n+typedef long ll;\n+void foo (int n, ll *p)\n+{\n+  while (n--)\n+    *p += *p;\n+}\n+\n+typedef long long lll;\n+void bar (int n, lll *p)\n+{\n+  while (n--)\n+    *p += *p;\n+}\n+\n+int main() { return 0; }"}, {"sha": "67b5ce035c75058c075a8bfe120a62fe8bcdf3fd", "filename": "gcc/testsuite/gcc.dg/lto/20100825-1_0.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf01301ac5e4b5f1d128dbc735620fe01421f98/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100825-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf01301ac5e4b5f1d128dbc735620fe01421f98/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100825-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100825-1_0.c?ref=1cf01301ac5e4b5f1d128dbc735620fe01421f98", "patch": "@@ -0,0 +1,57 @@\n+/* { dg-lto-do link } */\n+/* { dg-lto-options { { -O3 -flto } } } */\n+\n+typedef unsigned int UINT32;\n+typedef unsigned long long UINT64;\n+typedef struct { UINT64 w[2]; } UINT128;\n+void _bid_to_dpd128 (UINT128 *, UINT128 *);\n+static const int short_recip_scale[] = {\n+  1,\n+  65 - 64,\n+  69 - 64,\n+  71 - 64,\n+  75 - 64,\n+  78 - 64,\n+  81 - 64,\n+  85 - 64,\n+  88 - 64,\n+  91 - 64,\n+  95 - 64,\n+  98 - 64,\n+  101 - 64,\n+  105 - 64,\n+  108 - 64,\n+  111 - 64,\n+  115 - 64,\n+  118 - 64\n+};\n+\n+void _bid_to_dpd128 (UINT128 *, UINT128 *);\n+\n+void\n+_bid_to_dpd128 (UINT128 *pres, UINT128 *px) {\n+  UINT128 res;\n+  unsigned int comb;\n+  UINT128 bcoeff;\n+  UINT128 BH;\n+  UINT64 BL, d109;\n+  unsigned int amount;\n+  UINT128 x = *px;\n+\n+  comb = (x.w[1] ) >> 46;\n+  if ((comb & 0x1e000) == 0x1e000) {\n+    res = x;\n+  } else {\n+    bcoeff.w[1] = (x.w[1] & 0x0001ffffffffffffull);\n+    bcoeff.w[0] = x.w[0];\n+    amount = 9;\n+    BH.w[0] = (BH.w[0] >> amount) | (BH.w[1] << (64 - amount));\n+    BL = bcoeff.w[0] - BH.w[0] * 1000000000000000000ull;\n+    d109 = 0x3333333333333334ull;\n+    { UINT64 CXH, CXL, CYH,CYL,PL,PH,PM,PM2; CXH = (BH.w[0]) >> 32; CXL = (UINT32)(BH.w[0]); CYH = (d109) >> 32; CYL = (UINT32)(d109); PM = CXH*CYL; PH = CXH*CYH; PL = CXL*CYL; PM2 = CXL*CYH; PH += (PM>>32); PM = (UINT64)((UINT32)PM)+PM2+(PL>>32); };\n+    { UINT64 CXH, CXL, CYH,CYL,PL,PH,PM,PM2; CXH = (BL) >> 32; CXL = (UINT32)(BL); CYH = (d109) >> 32; CYL = (UINT32)(d109); PM = CXH*CYL; PH = CXH*CYH; PL = CXL*CYL; PM2 = CXL*CYH; PH += (PM>>32); PM = (UINT64)((UINT32)PM)+PM2+(PL>>32);  };\n+  }\n+  *pres = res;\n+}\n+\n+int main() { return 0; }"}]}