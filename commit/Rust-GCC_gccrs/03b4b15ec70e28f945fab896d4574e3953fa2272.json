{"sha": "03b4b15ec70e28f945fab896d4574e3953fa2272", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNiNGIxNWVjNzBlMjhmOTQ1ZmFiODk2ZDQ1NzRlMzk1M2ZhMjI3Mg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-07-17T08:11:22Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-17T08:11:22Z"}, "message": "[Ada] ICE on renaming of result of binary operation\n\n2018-07-17  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Variable>: Deal with\n\tmore rvalues in the expression of a renaming.\n\nFrom-SVN: r262793", "tree": {"sha": "58a4c3dfe6342356cddf398eab011ff122f906e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58a4c3dfe6342356cddf398eab011ff122f906e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03b4b15ec70e28f945fab896d4574e3953fa2272", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03b4b15ec70e28f945fab896d4574e3953fa2272", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03b4b15ec70e28f945fab896d4574e3953fa2272", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03b4b15ec70e28f945fab896d4574e3953fa2272/comments", "author": null, "committer": null, "parents": [{"sha": "69720717c143a9dc77d4c52dd5e2f19858425fa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69720717c143a9dc77d4c52dd5e2f19858425fa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69720717c143a9dc77d4c52dd5e2f19858425fa8"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "ae2ab5dfce68be14a249401f1fc0a20680fde2dd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03b4b15ec70e28f945fab896d4574e3953fa2272/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03b4b15ec70e28f945fab896d4574e3953fa2272/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=03b4b15ec70e28f945fab896d4574e3953fa2272", "patch": "@@ -1,3 +1,8 @@\n+2018-07-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Variable>: Deal with\n+\tmore rvalues in the expression of a renaming.\n+\n 2018-07-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/ada-tree.h (TYPE_RETURN_BY_DIRECT_REF_P): Define for"}, {"sha": "50d20e6e8ea878b6832cacd99396189e987f5d89", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03b4b15ec70e28f945fab896d4574e3953fa2272/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03b4b15ec70e28f945fab896d4574e3953fa2272/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=03b4b15ec70e28f945fab896d4574e3953fa2272", "patch": "@@ -969,8 +969,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t       function call is a constant object.  Therefore, it can be the\n \t       inner object of a constant renaming and the renaming must be\n \t       fully instantiated, i.e. it cannot be a reference to (part of)\n-\t       an existing object.  And treat other rvalues (addresses, null\n-\t       expressions, constructors and literals) the same way.  */\n+\t       an existing object.  And treat other rvalues the same way.  */\n \t    tree inner = gnu_expr;\n \t    while (handled_component_p (inner) || CONVERT_EXPR_P (inner))\n \t      inner = TREE_OPERAND (inner, 0);\n@@ -981,11 +980,11 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t      inner = TREE_OPERAND (inner, 1);\n \t    if ((TREE_CODE (inner) == CALL_EXPR\n \t\t && !call_is_atomic_load (inner))\n-\t\t|| TREE_CODE (inner) == ADDR_EXPR\n-\t\t|| TREE_CODE (inner) == NULL_EXPR\n-\t\t|| TREE_CODE (inner) == PLUS_EXPR\n \t\t|| TREE_CODE (inner) == CONSTRUCTOR\n \t\t|| CONSTANT_CLASS_P (inner)\n+\t\t|| COMPARISON_CLASS_P (inner)\n+\t\t|| BINARY_CLASS_P (inner)\n+\t\t|| EXPRESSION_CLASS_P (inner)\n \t\t/* We need to detect the case where a temporary is created to\n \t\t   hold the return value, since we cannot safely rename it at\n \t\t   top level as it lives only in the elaboration routine.  */\n@@ -1007,7 +1006,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t\t   underlying object lives only in the elaboration routine.  */\n \t\t|| (TREE_CODE (inner) == INDIRECT_REF\n \t\t    && (inner\n-\t\t\t  = remove_conversions (TREE_OPERAND (inner, 0), true))\n+\t\t\t= remove_conversions (TREE_OPERAND (inner, 0), true))\n \t\t    && TREE_CODE (inner) == VAR_DECL\n \t\t    && DECL_RETURN_VALUE_P (inner)))\n \t      ;"}]}