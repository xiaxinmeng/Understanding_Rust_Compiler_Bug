{"sha": "e3dfd6d5558ea8f9e0834f843803812955ba3c25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNkZmQ2ZDU1NThlYThmOWUwODM0Zjg0MzgwMzgxMjk1NWJhM2MyNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-03-06T18:06:47Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-03-06T18:06:47Z"}, "message": "re PR target/26532 (libmudflap failures on ia64)\n\n2006-03-06  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR target/26532\n\t* config/io/c_io_stdio.h (struct __ios_flags): Remove.\n\t* include/bits/ios_base.h: Adjust consistently.\n\t(ios_base::_S_local_word_size): Change to an anonymous enum.\n\t* src/ios.cc: Do not define static const data of __ios_flags,\n\tlikewise for ios_base::_S_local_word_size.\t\n\t* include/bits/locale_classes.h (locale::_S_categories_size):\n\tChange to an anonymous enum.\n\t* src/locale.cc: Don't define.\n\nFrom-SVN: r111789", "tree": {"sha": "7ba9fc2fe53da0e7be90104eaec93d11dd7d0a63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ba9fc2fe53da0e7be90104eaec93d11dd7d0a63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3dfd6d5558ea8f9e0834f843803812955ba3c25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3dfd6d5558ea8f9e0834f843803812955ba3c25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3dfd6d5558ea8f9e0834f843803812955ba3c25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3dfd6d5558ea8f9e0834f843803812955ba3c25/comments", "author": null, "committer": null, "parents": [{"sha": "7d14f0fcec5a42b1a532f616ea57abb86c54b5f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d14f0fcec5a42b1a532f616ea57abb86c54b5f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d14f0fcec5a42b1a532f616ea57abb86c54b5f3"}], "stats": {"total": 160, "additions": 49, "deletions": 111}, "files": [{"sha": "09f6ca1a62539e43c559af3b522522a26104743f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3dfd6d5558ea8f9e0834f843803812955ba3c25/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3dfd6d5558ea8f9e0834f843803812955ba3c25/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e3dfd6d5558ea8f9e0834f843803812955ba3c25", "patch": "@@ -1,3 +1,15 @@\n+2006-03-06  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR target/26532\n+\t* config/io/c_io_stdio.h (struct __ios_flags): Remove.\n+\t* include/bits/ios_base.h: Adjust consistently.\n+\t(ios_base::_S_local_word_size): Change to an anonymous enum.\n+\t* src/ios.cc: Do not define static const data of __ios_flags,\n+\tlikewise for ios_base::_S_local_word_size.\t\n+\t* include/bits/locale_classes.h (locale::_S_categories_size):\n+\tChange to an anonymous enum.\n+\t* src/locale.cc: Don't define.\n+\n 2006-03-03  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/26526"}, {"sha": "96676b4051fd1e800002ecfb1448059c12dc26f6", "filename": "libstdc++-v3/config/io/c_io_stdio.h", "status": "modified", "additions": 1, "deletions": 40, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3dfd6d5558ea8f9e0834f843803812955ba3c25/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fc_io_stdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3dfd6d5558ea8f9e0834f843803812955ba3c25/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fc_io_stdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fc_io_stdio.h?ref=e3dfd6d5558ea8f9e0834f843803812955ba3c25", "patch": "@@ -1,6 +1,6 @@\n // Underlying io library details -*- C++ -*-\n \n-// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -44,45 +44,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   // for basic_file.h\n   typedef FILE __c_file;\n \n-  // XXX GLIBCXX_ABI Deprecated\n-  // for ios_base.h\n-  struct __ios_flags\n-  {\n-    typedef short __int_type;\n-\n-    static const __int_type _S_boolalpha =\t0x0001;\n-    static const __int_type _S_dec =\t\t0x0002;\n-    static const __int_type _S_fixed = \t\t0x0004;\n-    static const __int_type _S_hex =\t\t0x0008;\n-    static const __int_type _S_internal = \t0x0010;\n-    static const __int_type _S_left =   \t0x0020;\n-    static const __int_type _S_oct =\t\t0x0040;\n-    static const __int_type _S_right =\t\t0x0080;\n-    static const __int_type _S_scientific =\t0x0100;\n-    static const __int_type _S_showbase =       0x0200;\n-    static const __int_type _S_showpoint =\t0x0400;\n-    static const __int_type _S_showpos =\t0x0800;\n-    static const __int_type _S_skipws =\t\t0x1000;\n-    static const __int_type _S_unitbuf =\t0x2000;\n-    static const __int_type _S_uppercase =\t0x4000;\n-    static const __int_type _S_adjustfield =\t0x0020 | 0x0080 | 0x0010;\n-    static const __int_type _S_basefield =\t0x0002 | 0x0040 | 0x0008;\n-    static const __int_type _S_floatfield =\t0x0100 | 0x0004;\n-\n-    // 27.4.2.1.3  Type ios_base::iostate\n-    static const __int_type _S_badbit =\t\t0x01;\n-    static const __int_type _S_eofbit =\t\t0x02;\n-    static const __int_type _S_failbit =       \t0x04;\n-\n-    // 27.4.2.1.4  Type openmode\n-    static const __int_type _S_app =\t\t0x01;\n-    static const __int_type _S_ate =\t\t0x02;\n-    static const __int_type _S_bin =\t\t0x04;\n-    static const __int_type _S_in =\t\t0x08;\n-    static const __int_type _S_out =\t\t0x10;\n-    static const __int_type _S_trunc =\t\t0x20;\n-  };\n-\n _GLIBCXX_END_NAMESPACE\n \n #endif"}, {"sha": "9b695079d7da40f0916add5f5ef65b55785c1d3c", "filename": "libstdc++-v3/include/bits/ios_base.h", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3dfd6d5558ea8f9e0834f843803812955ba3c25/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3dfd6d5558ea8f9e0834f843803812955ba3c25/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h?ref=e3dfd6d5558ea8f9e0834f843803812955ba3c25", "patch": "@@ -1,6 +1,6 @@\n // Iostreams base classes -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -253,65 +253,65 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     typedef _Ios_Fmtflags fmtflags;\n \n     /// Insert/extract @c bool in alphabetic rather than numeric format.\n-    static const fmtflags boolalpha =   fmtflags(__ios_flags::_S_boolalpha);\n+    static const fmtflags boolalpha =   _S_boolalpha;\n \n     /// Converts integer input or generates integer output in decimal base.\n-    static const fmtflags dec =         fmtflags(__ios_flags::_S_dec);\n+    static const fmtflags dec =         _S_dec;\n \n     /// Generate floating-point output in fixed-point notation.\n-    static const fmtflags fixed =       fmtflags(__ios_flags::_S_fixed);\n+    static const fmtflags fixed =       _S_fixed;\n \n     /// Converts integer input or generates integer output in hexadecimal base.\n-    static const fmtflags hex =         fmtflags(__ios_flags::_S_hex);\n+    static const fmtflags hex =         _S_hex;\n \n     /// Adds fill characters at a designated internal point in certain\n     /// generated output, or identical to @c right if no such point is\n     /// designated.\n-    static const fmtflags internal =    fmtflags(__ios_flags::_S_internal);\n+    static const fmtflags internal =    _S_internal;\n \n     /// Adds fill characters on the right (final positions) of certain\n     /// generated output.  (I.e., the thing you print is flush left.)\n-    static const fmtflags left =        fmtflags(__ios_flags::_S_left);\n+    static const fmtflags left =        _S_left;\n \n     /// Converts integer input or generates integer output in octal base.\n-    static const fmtflags oct =         fmtflags(__ios_flags::_S_oct);\n+    static const fmtflags oct =         _S_oct;\n \n     /// Adds fill characters on the left (initial positions) of certain\n     /// generated output.  (I.e., the thing you print is flush right.)\n-    static const fmtflags right =       fmtflags(__ios_flags::_S_right);\n+    static const fmtflags right =       _S_right;\n \n     /// Generates floating-point output in scientific notation.\n-    static const fmtflags scientific =  fmtflags(__ios_flags::_S_scientific);\n+    static const fmtflags scientific =  _S_scientific;\n \n     /// Generates a prefix indicating the numeric base of generated integer\n     /// output.\n-    static const fmtflags showbase =    fmtflags(__ios_flags::_S_showbase);\n+    static const fmtflags showbase =    _S_showbase;\n \n     /// Generates a decimal-point character unconditionally in generated\n     /// floating-point output.\n-    static const fmtflags showpoint =   fmtflags(__ios_flags::_S_showpoint);\n+    static const fmtflags showpoint =   _S_showpoint;\n \n     /// Generates a + sign in non-negative generated numeric output.\n-    static const fmtflags showpos =     fmtflags(__ios_flags::_S_showpos);\n+    static const fmtflags showpos =     _S_showpos;\n \n     /// Skips leading white space before certain input operations.\n-    static const fmtflags skipws =      fmtflags(__ios_flags::_S_skipws);\n+    static const fmtflags skipws =      _S_skipws;\n \n     /// Flushes output after each output operation.\n-    static const fmtflags unitbuf =     fmtflags(__ios_flags::_S_unitbuf);\n+    static const fmtflags unitbuf =     _S_unitbuf;\n \n     /// Replaces certain lowercase letters with their uppercase equivalents\n     /// in generated output.\n-    static const fmtflags uppercase =   fmtflags(__ios_flags::_S_uppercase);\n+    static const fmtflags uppercase =   _S_uppercase;\n \n     /// A mask of left|right|internal.  Useful for the 2-arg form of @c setf.\n-    static const fmtflags adjustfield = fmtflags(__ios_flags::_S_adjustfield);\n+    static const fmtflags adjustfield = _S_adjustfield;\n \n     /// A mask of dec|oct|hex.  Useful for the 2-arg form of @c setf.\n-    static const fmtflags basefield =   fmtflags(__ios_flags::_S_basefield);\n+    static const fmtflags basefield =   _S_basefield;\n \n     /// A mask of scientific|fixed.  Useful for the 2-arg form of @c setf.\n-    static const fmtflags floatfield =  fmtflags(__ios_flags::_S_floatfield);\n+    static const fmtflags floatfield =  _S_floatfield;\n \n     // 27.4.2.1.3  Type ios_base::iostate\n     /**\n@@ -329,18 +329,18 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n     /// Indicates a loss of integrity in an input or output sequence (such\n     /// as an irrecoverable read error from a file).\n-    static const iostate badbit =\tiostate(__ios_flags::_S_badbit);\n+    static const iostate badbit =\t_S_badbit;\n \n     /// Indicates that an input operation reached the end of an input sequence.\n-    static const iostate eofbit =\tiostate(__ios_flags::_S_eofbit);\n+    static const iostate eofbit =\t_S_eofbit;\n \n     /// Indicates that an input operation failed to read the expected\n     /// characters, or that an output operation failed to generate the\n     /// desired characters.\n-    static const iostate failbit =\tiostate(__ios_flags::_S_failbit);\n+    static const iostate failbit =\t_S_failbit;\n \n     /// Indicates all is well.\n-    static const iostate goodbit =\tiostate(0);\n+    static const iostate goodbit =\t_S_goodbit;\n \n     // 27.4.2.1.4  Type ios_base::openmode\n     /**\n@@ -359,25 +359,25 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     typedef _Ios_Openmode openmode;\n \n     /// Seek to end before each write.\n-    static const openmode app =\t\topenmode(__ios_flags::_S_app);\n+    static const openmode app =\t\t_S_app;\n \n     /// Open and seek to end immediately after opening.\n-    static const openmode ate =\t\topenmode(__ios_flags::_S_ate);\n+    static const openmode ate =\t\t_S_ate;\n \n     /// Perform input and output in binary mode (as opposed to text mode).\n     /// This is probably not what you think it is; see\n     /// http://gcc.gnu.org/onlinedocs/libstdc++/27_io/howto.html#3 and\n     /// http://gcc.gnu.org/onlinedocs/libstdc++/27_io/howto.html#7 for more.\n-    static const openmode binary =\topenmode(__ios_flags::_S_bin);\n+    static const openmode binary =\t_S_bin;\n \n     /// Open for input.  Default for @c ifstream and fstream.\n-    static const openmode in =\t\topenmode(__ios_flags::_S_in);\n+    static const openmode in =\t\t_S_in;\n \n     /// Open for output.  Default for @c ofstream and fstream.\n-    static const openmode out =\t\topenmode(__ios_flags::_S_out);\n+    static const openmode out =\t\t_S_out;\n \n     /// Open for input.  Default for @c ofstream.\n-    static const openmode trunc =\topenmode(__ios_flags::_S_trunc);\n+    static const openmode trunc =\t_S_trunc;\n \n     // 27.4.2.1.5  Type ios_base::seekdir\n     /**\n@@ -392,13 +392,13 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     typedef _Ios_Seekdir seekdir;\n \n     /// Request a seek relative to the beginning of the stream.\n-    static const seekdir beg =\t\tseekdir(0);\n+    static const seekdir beg =\t\t_S_beg;\n \n     /// Request a seek relative to the current position within the sequence.\n-    static const seekdir cur =\t\tseekdir(SEEK_CUR);\n+    static const seekdir cur =\t\t_S_cur;\n \n     /// Request a seek relative to the current end of the sequence.\n-    static const seekdir end =\t\tseekdir(SEEK_END);\n+    static const seekdir end =\t\t_S_end;\n \n     // Annex D.6\n     typedef int io_state;\n@@ -505,7 +505,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n     // Guaranteed storage.\n     // The first 5 iword and pword slots are reserved for internal use.\n-    static const int\t_S_local_word_size = 8;\n+    enum { _S_local_word_size = 8 };\n     _Words\t\t_M_local_word[_S_local_word_size];\n \n     // Allocated storage."}, {"sha": "f72b72ab669a8ca760b9a037532791f39f39c8b0", "filename": "libstdc++-v3/include/bits/locale_classes.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3dfd6d5558ea8f9e0834f843803812955ba3c25/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3dfd6d5558ea8f9e0834f843803812955ba3c25/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h?ref=e3dfd6d5558ea8f9e0834f843803812955ba3c25", "patch": "@@ -1,6 +1,6 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -307,7 +307,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     // macros. For GNU systems, the following are also valid:\n     // LC_PAPER, LC_NAME, LC_ADDRESS, LC_TELEPHONE, LC_MEASUREMENT,\n     // and LC_IDENTIFICATION.\n-    static const size_t _S_categories_size = 6 + _GLIBCXX_NUM_CATEGORIES;\n+    enum { _S_categories_size = 6 + _GLIBCXX_NUM_CATEGORIES };\n \n #ifdef __GTHREADS\n     static __gthread_once_t _S_once;"}, {"sha": "5b05f283a853dea79d2f763900a6df12aa94dbca", "filename": "libstdc++-v3/src/ios.cc", "status": "modified", "additions": 1, "deletions": 35, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3dfd6d5558ea8f9e0834f843803812955ba3c25/libstdc%2B%2B-v3%2Fsrc%2Fios.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3dfd6d5558ea8f9e0834f843803812955ba3c25/libstdc%2B%2B-v3%2Fsrc%2Fios.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fios.cc?ref=e3dfd6d5558ea8f9e0834f843803812955ba3c25", "patch": "@@ -1,6 +1,6 @@\n // Iostreams base classes -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -38,38 +38,6 @@\n \n _GLIBCXX_BEGIN_NAMESPACE(std)\n \n-  // XXX GLIBCXX_ABI Deprecated\n-   // Definitions for static const data members of __ios_flags.\n-  const __ios_flags::__int_type __ios_flags::_S_boolalpha;\n-  const __ios_flags::__int_type __ios_flags::_S_dec;\n-  const __ios_flags::__int_type __ios_flags::_S_fixed;\n-  const __ios_flags::__int_type __ios_flags::_S_hex;\n-  const __ios_flags::__int_type __ios_flags::_S_internal;\n-  const __ios_flags::__int_type __ios_flags::_S_left;\n-  const __ios_flags::__int_type __ios_flags::_S_oct;\n-  const __ios_flags::__int_type __ios_flags::_S_right;\n-  const __ios_flags::__int_type __ios_flags::_S_scientific;\n-  const __ios_flags::__int_type __ios_flags::_S_showbase;\n-  const __ios_flags::__int_type __ios_flags::_S_showpoint;\n-  const __ios_flags::__int_type __ios_flags::_S_showpos;\n-  const __ios_flags::__int_type __ios_flags::_S_skipws;\n-  const __ios_flags::__int_type __ios_flags::_S_unitbuf;\n-  const __ios_flags::__int_type __ios_flags::_S_uppercase;\n-  const __ios_flags::__int_type __ios_flags::_S_adjustfield;\n-  const __ios_flags::__int_type __ios_flags::_S_basefield;\n-  const __ios_flags::__int_type __ios_flags::_S_floatfield;\n-\n-  const __ios_flags::__int_type __ios_flags::_S_badbit;\n-  const __ios_flags::__int_type __ios_flags::_S_eofbit;\n-  const __ios_flags::__int_type __ios_flags::_S_failbit;\n-\n-  const __ios_flags::__int_type __ios_flags::_S_app;\n-  const __ios_flags::__int_type __ios_flags::_S_ate;\n-  const __ios_flags::__int_type __ios_flags::_S_bin;\n-  const __ios_flags::__int_type __ios_flags::_S_in;\n-  const __ios_flags::__int_type __ios_flags::_S_out;\n-  const __ios_flags::__int_type __ios_flags::_S_trunc;\n-\n   // Definitions for static const members of ios_base.\n   const ios_base::fmtflags ios_base::boolalpha;\n   const ios_base::fmtflags ios_base::dec;\n@@ -106,8 +74,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   const ios_base::seekdir ios_base::cur;\n   const ios_base::seekdir ios_base::end;\n \n-  const int ios_base::_S_local_word_size;\n-\n   _Atomic_word ios_base::Init::_S_refcount;\n \n   bool ios_base::Init::_S_synced_with_stdio = true;"}, {"sha": "c56ec51909b16a82e8ce6b309b47938eade29b27", "filename": "libstdc++-v3/src/locale.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3dfd6d5558ea8f9e0834f843803812955ba3c25/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3dfd6d5558ea8f9e0834f843803812955ba3c25/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc?ref=e3dfd6d5558ea8f9e0834f843803812955ba3c25", "patch": "@@ -71,7 +71,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   // These are no longer exported.\n   locale::_Impl*                locale::_S_classic;\n   locale::_Impl* \t\tlocale::_S_global; \n-  const size_t \t\t\tlocale::_S_categories_size;\n \n #ifdef __GTHREADS\n   __gthread_once_t \t\tlocale::_S_once = __GTHREAD_ONCE_INIT;"}]}