{"sha": "60f908dd027ea9561239e46b55246da68839b18b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBmOTA4ZGQwMjdlYTk1NjEyMzllNDZiNTUyNDZkYTY4ODM5YjE4Yg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-07-29T13:02:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T13:02:06Z"}, "message": "sem_aggr.adb, [...]: General cleanup of static predicate handling.\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_aggr.adb, exp_ch5.adb, sem_ch5.adb, exp_util.adb, einfo.adb,\n\teinfo.ads, sem_util.adb, sem_attr.adb, sem_case.adb, sem_eval.adb,\n\tsem_eval.ads, sem_ch13.adb: General cleanup of static predicate\n\thandling. Change name of Discrete_Predicate to\n\tDiscrete_Static_Predicate, and replace testing of the presence of this\n\tfield by testing the flag Has_Static_Expression.\n\nFrom-SVN: r213161", "tree": {"sha": "3d83be6d9e80b289bd87e7433e7c31576768ffb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d83be6d9e80b289bd87e7433e7c31576768ffb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60f908dd027ea9561239e46b55246da68839b18b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f908dd027ea9561239e46b55246da68839b18b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60f908dd027ea9561239e46b55246da68839b18b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f908dd027ea9561239e46b55246da68839b18b/comments", "author": null, "committer": null, "parents": [{"sha": "96e90ac1ec8cb9261093e434c88cced5d5675e2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96e90ac1ec8cb9261093e434c88cced5d5675e2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96e90ac1ec8cb9261093e434c88cced5d5675e2b"}], "stats": {"total": 123, "additions": 68, "deletions": 55}, "files": [{"sha": "e598c0cdd67e678e3f02dd146f0877d3f18e46cf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=60f908dd027ea9561239e46b55246da68839b18b", "patch": "@@ -1,3 +1,12 @@\n+2014-07-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_aggr.adb, exp_ch5.adb, sem_ch5.adb, exp_util.adb, einfo.adb,\n+\teinfo.ads, sem_util.adb, sem_attr.adb, sem_case.adb, sem_eval.adb,\n+\tsem_eval.ads, sem_ch13.adb: General cleanup of static predicate\n+\thandling. Change name of Discrete_Predicate to\n+\tDiscrete_Static_Predicate, and replace testing of the presence of this\n+\tfield by testing the flag Has_Static_Expression.\n+\n 2014-07-29  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_rm.texi: Document pragma Unevaluated_Use_Of_Old."}, {"sha": "ac624123bb103bcc9e5e9ede52c1d25ca1cfa23b", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=60f908dd027ea9561239e46b55246da68839b18b", "patch": "@@ -222,7 +222,7 @@ package body Einfo is\n    --    DT_Offset_To_Top_Func           Node25\n    --    PPC_Wrapper                     Node25\n    --    Related_Array_Object            Node25\n-   --    Static_Predicate                List25\n+   --    Static_Discrete_Predicate       List25\n    --    Task_Body_Procedure             Node25\n \n    --    Dispatch_Table_Wrappers         Elist26\n@@ -2971,11 +2971,11 @@ package body Einfo is\n       return Node19 (Id);\n    end Spec_Entity;\n \n-   function Static_Predicate (Id : E) return S is\n+   function Static_Discrete_Predicate (Id : E) return S is\n    begin\n       pragma Assert (Is_Discrete_Type (Id));\n       return List25 (Id);\n-   end Static_Predicate;\n+   end Static_Discrete_Predicate;\n \n    function Status_Flag_Or_Transient_Decl (Id : E) return N is\n    begin\n@@ -5761,11 +5761,11 @@ package body Einfo is\n       Set_Node19 (Id, V);\n    end Set_Spec_Entity;\n \n-   procedure Set_Static_Predicate (Id : E; V : S) is\n+   procedure Set_Static_Discrete_Predicate (Id : E; V : S) is\n    begin\n       pragma Assert (Is_Discrete_Type (Id) and then Has_Predicates (Id));\n       Set_List25 (Id, V);\n-   end Set_Static_Predicate;\n+   end Set_Static_Discrete_Predicate;\n \n    procedure Set_Status_Flag_Or_Transient_Decl (Id : E; V : E) is\n    begin\n@@ -9404,7 +9404,7 @@ package body Einfo is\n               E_Modular_Integer_Type                       |\n               E_Modular_Integer_Subtype                    |\n               E_Signed_Integer_Subtype                     =>\n-            Write_Str (\"Static_Predicate\");\n+            Write_Str (\"Static_Discrete_Predicate\");\n \n          when others                                       =>\n             Write_Str (\"Field25??\");"}, {"sha": "d6f7d7dd6de2d0e4bd3958806c3d6db37fc3a505", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=60f908dd027ea9561239e46b55246da68839b18b", "patch": "@@ -3897,7 +3897,7 @@ package Einfo is\n --       case where there is a separate spec, where this field references\n --       the corresponding parameter entities in the spec.\n \n---    Static_Predicate (List25)\n+--    Static_Discrete_Predicate (List25)\n --       Defined in discrete types/subtypes with static predicates (with the\n --       two flags Has_Predicates set and Has_Static_Predicate set). Set if the\n --       type/subtype has a static predicate. Points to a list of expression\n@@ -5526,7 +5526,7 @@ package Einfo is\n    --    Default_Aspect_Value                (Node19)   (base type only)\n    --    Scalar_Range                        (Node20)\n    --    Enum_Pos_To_Rep                     (Node23)   (type only)\n-   --    Static_Predicate                    (List25)\n+   --    Static_Discrete_Predicate           (List25)\n    --    Has_Biased_Representation           (Flag139)\n    --    Has_Contiguous_Rep                  (Flag181)\n    --    Has_Enumeration_Rep_Clause          (Flag66)\n@@ -5741,7 +5741,7 @@ package Einfo is\n    --    Default_Aspect_Value                (Node19)   (base type only)\n    --    Original_Array_Type                 (Node21)\n    --    Scalar_Range                        (Node20)\n-   --    Static_Predicate                    (List25)\n+   --    Static_Discrete_Predicate           (List25)\n    --    Non_Binary_Modulus                  (Flag58)   (base type only)\n    --    Has_Biased_Representation           (Flag139)\n    --    Has_Shift_Operator                  (Flag267)  (base type only)\n@@ -6037,7 +6037,7 @@ package Einfo is\n    --  E_Signed_Integer_Subtype\n    --    Default_Aspect_Value                (Node19)   (base type only)\n    --    Scalar_Range                        (Node20)\n-   --    Static_Predicate                    (List25)\n+   --    Static_Discrete_Predicate           (List25)\n    --    Has_Biased_Representation           (Flag139)\n    --    Has_Shift_Operator                  (Flag267)  (base type only)\n    --    Type_Low_Bound                      (synth)\n@@ -6790,7 +6790,7 @@ package Einfo is\n    function Spec_Entity                         (Id : E) return E;\n    function Static_Elaboration_Desired          (Id : E) return B;\n    function Static_Initialization               (Id : E) return N;\n-   function Static_Predicate                    (Id : E) return S;\n+   function Static_Discrete_Predicate           (Id : E) return S;\n    function Status_Flag_Or_Transient_Decl       (Id : E) return E;\n    function Storage_Size_Variable               (Id : E) return E;\n    function Stored_Constraint                   (Id : E) return L;\n@@ -7424,7 +7424,7 @@ package Einfo is\n    procedure Set_Spec_Entity                     (Id : E; V : E);\n    procedure Set_Static_Elaboration_Desired      (Id : E; V : B);\n    procedure Set_Static_Initialization           (Id : E; V : N);\n-   procedure Set_Static_Predicate                (Id : E; V : S);\n+   procedure Set_Static_Discrete_Predicate       (Id : E; V : S);\n    procedure Set_Status_Flag_Or_Transient_Decl   (Id : E; V : E);\n    procedure Set_Storage_Size_Variable           (Id : E; V : E);\n    procedure Set_Stored_Constraint               (Id : E; V : L);\n@@ -8208,7 +8208,7 @@ package Einfo is\n    pragma Inline (Spec_Entity);\n    pragma Inline (Static_Elaboration_Desired);\n    pragma Inline (Static_Initialization);\n-   pragma Inline (Static_Predicate);\n+   pragma Inline (Static_Discrete_Predicate);\n    pragma Inline (Status_Flag_Or_Transient_Decl);\n    pragma Inline (Storage_Size_Variable);\n    pragma Inline (Stored_Constraint);\n@@ -8641,7 +8641,7 @@ package Einfo is\n    pragma Inline (Set_Spec_Entity);\n    pragma Inline (Set_Static_Elaboration_Desired);\n    pragma Inline (Set_Static_Initialization);\n-   pragma Inline (Set_Static_Predicate);\n+   pragma Inline (Set_Static_Discrete_Predicate);\n    pragma Inline (Set_Status_Flag_Or_Transient_Decl);\n    pragma Inline (Set_Storage_Size_Variable);\n    pragma Inline (Set_Stored_Constraint);"}, {"sha": "78f876b8e8d5141cdc8f7aa0fd345b59763e60d9", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=60f908dd027ea9561239e46b55246da68839b18b", "patch": "@@ -3977,7 +3977,7 @@ package body Exp_Ch5 is\n       LPS     : constant Node_Id    := Loop_Parameter_Specification (Isc);\n       Loop_Id : constant Entity_Id  := Defining_Identifier (LPS);\n       Ltype   : constant Entity_Id  := Etype (Loop_Id);\n-      Stat    : constant List_Id    := Static_Predicate (Ltype);\n+      Stat    : constant List_Id    := Static_Discrete_Predicate (Ltype);\n       Stmts   : constant List_Id    := Statements (N);\n \n    begin"}, {"sha": "d2a5f84e0cd507c26b7936d1a84470efb76c6fd8", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=60f908dd027ea9561239e46b55246da68839b18b", "patch": "@@ -1980,7 +1980,7 @@ package body Exp_Util is\n             --  if the list is empty, corresponding to a False predicate, then\n             --  no choices are inserted.\n \n-            P := First (Static_Predicate (Entity (Choice)));\n+            P := First (Static_Discrete_Predicate (Entity (Choice)));\n             while Present (P) loop\n \n                --  If low bound and high bounds are equal, copy simple choice"}, {"sha": "1f72ed9f555eb1d5dbdece04f4c5001c42a16109", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=60f908dd027ea9561239e46b55246da68839b18b", "patch": "@@ -1721,11 +1721,11 @@ package body Sem_Aggr is\n                         --  original choice with the list of individual values\n                         --  covered by the predicate.\n \n-                        if Present (Static_Predicate (E)) then\n+                        if Present (Static_Discrete_Predicate (E)) then\n                            Delete_Choice := True;\n \n                            New_Cs := New_List;\n-                           P := First (Static_Predicate (E));\n+                           P := First (Static_Discrete_Predicate (E));\n                            while Present (P) loop\n                               C := New_Copy (P);\n                               Set_Sloc (C, Sloc (Choice));"}, {"sha": "8b703261ff35e58f0897577d9532aa7878070391", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=60f908dd027ea9561239e46b55246da68839b18b", "patch": "@@ -1498,7 +1498,7 @@ package body Sem_Attr is\n          --  Now test for dynamic predicate\n \n          if Has_Predicates (P_Type)\n-           and then No (Static_Predicate (P_Type))\n+           and then not (Has_Static_Predicate (P_Type))\n          then\n             Error_Attr_P\n               (\"prefix of % attribute may not have dynamic predicate\");\n@@ -1515,7 +1515,8 @@ package body Sem_Attr is\n          if Expr_Value (Type_Low_Bound (P_Type)) >\n             Expr_Value (Type_High_Bound (P_Type))\n            or else (Has_Predicates (P_Type)\n-                     and then Is_Empty_List (Static_Predicate (P_Type)))\n+                     and then\n+                       Is_Empty_List (Static_Discrete_Predicate (P_Type)))\n          then\n             Error_Attr_P\n               (\"prefix of % attribute must be subtype with \"\n@@ -8044,10 +8045,11 @@ package body Sem_Attr is\n       when Attribute_First_Valid => First_Valid :\n       begin\n          if Has_Predicates (P_Type)\n-           and then Present (Static_Predicate (P_Type))\n+           and then Has_Static_Predicate (P_Type)\n          then\n             declare\n-               FirstN : constant Node_Id := First (Static_Predicate (P_Type));\n+               FirstN : constant Node_Id :=\n+                          First (Static_Discrete_Predicate (P_Type));\n             begin\n                if Nkind (FirstN) = N_Range then\n                   Fold_Uint (N, Expr_Value (Low_Bound (FirstN)), Static);\n@@ -8296,10 +8298,11 @@ package body Sem_Attr is\n       when Attribute_Last_Valid => Last_Valid :\n       begin\n          if Has_Predicates (P_Type)\n-           and then Present (Static_Predicate (P_Type))\n+           and then Has_Static_Predicate (P_Type)\n          then\n             declare\n-               LastN : constant Node_Id := Last (Static_Predicate (P_Type));\n+               LastN : constant Node_Id :=\n+                         Last (Static_Discrete_Predicate (P_Type));\n             begin\n                if Nkind (LastN) = N_Range then\n                   Fold_Uint (N, Expr_Value (High_Bound (LastN)), Static);"}, {"sha": "709a2647f7d1a286c3590b11b3bcdfffc269dc0f", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=60f908dd027ea9561239e46b55246da68839b18b", "patch": "@@ -648,7 +648,7 @@ package body Sem_Case is\n       Num_Choices   : constant Nat     := Choice_Table'Last;\n       Has_Predicate : constant Boolean :=\n                         Is_OK_Static_Subtype (Bounds_Type)\n-                          and then Present (Static_Predicate (Bounds_Type));\n+                          and then Has_Static_Predicate (Bounds_Type);\n \n       Choice      : Node_Id;\n       Choice_Hi   : Uint;\n@@ -696,13 +696,10 @@ package body Sem_Case is\n \n       --  Note that in GNAT the predicate is considered static if the predicate\n       --  expression is static, independently of whether the aspect mentions\n-      --  Static explicitly.  It is unclear whether this is RM-conforming, but\n-      --  it's certainly useful, and GNAT source make use of this. The downside\n-      --  is that currently case expressions cannot appear in predicates that\n-      --  are not static.  ???\n+      --  Static explicitly.\n \n       if Has_Predicate then\n-         Pred    := First (Static_Predicate (Bounds_Type));\n+         Pred    := First (Static_Discrete_Predicate (Bounds_Type));\n          Prev_Lo := Uint_Minus_1;\n          Prev_Hi := Uint_Minus_1;\n          Error   := False;\n@@ -1387,7 +1384,7 @@ package body Sem_Case is\n \n          if Is_OK_Static_Subtype (Subtyp) then\n             if not Has_Predicates (Subtyp)\n-              or else Present (Static_Predicate (Subtyp))\n+              or else Has_Static_Predicate (Subtyp)\n             then\n                Bounds_Type := Subtyp;\n             else\n@@ -1464,7 +1461,7 @@ package body Sem_Case is\n                            --  Use of non-static predicate is an error\n \n                            if not Is_Discrete_Type (E)\n-                             or else No (Static_Predicate (E))\n+                             or else not Has_Static_Predicate (E)\n                            then\n                               Bad_Predicated_Subtype_Use\n                                 (\"cannot use subtype& with non-static \"\n@@ -1484,7 +1481,7 @@ package body Sem_Case is\n                                  --  list is empty, corresponding to a False\n                                  --  predicate, then no choices are checked.\n \n-                                 P := First (Static_Predicate (E));\n+                                 P := First (Static_Discrete_Predicate (E));\n                                  while Present (P) loop\n                                     C := New_Copy (P);\n                                     Set_Sloc (C, Sloc (Choice));"}, {"sha": "e0c67824a220ab5ad71fc4c01507830cabc5f5fb", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=60f908dd027ea9561239e46b55246da68839b18b", "patch": "@@ -97,8 +97,8 @@ package body Sem_Ch13 is\n    --  name, which is unique, so any identifier with Chars matching Nam must be\n    --  a reference to the type. If the predicate is non-static, this procedure\n    --  returns doing nothing. If the predicate is static, then the predicate\n-   --  list is stored in Static_Predicate (Typ), and the Expr is rewritten as\n-   --  a canonicalized membership operation.\n+   --  list is stored in Static_Discrete_Predicate (Typ), and the Expr is\n+   --  rewritten as a canonicalized membership operation.\n \n    procedure Build_Predicate_Functions (Typ : Entity_Id; N : Node_Id);\n    --  If Typ has predicates (indicated by Has_Predicates being set for Typ),\n@@ -6266,13 +6266,13 @@ package body Sem_Ch13 is\n \n       function Build_Val (V : Uint) return Node_Id;\n       --  Return an analyzed N_Identifier node referencing this value, suitable\n-      --  for use as an entry in the Static_Predicate list. This node is typed\n-      --  with the base type.\n+      --  for use as an entry in the Static_Discrte_Predicate list. This node\n+      --  is typed with the base type.\n \n       function Build_Range (Lo : Uint; Hi : Uint) return Node_Id;\n       --  Return an analyzed N_Range node referencing this range, suitable for\n-      --  use as an entry in the Static_Predicate list. This node is typed with\n-      --  the base type.\n+      --  use as an entry in the Static_Discrete_Predicate list. This node is\n+      --  typed with the base type.\n \n       function Get_RList (Exp : Node_Id) return RList;\n       --  This is a recursive routine that converts the given expression into a\n@@ -6295,12 +6295,14 @@ package body Sem_Ch13 is\n       --  name appears in parens, this routine will return False.\n \n       function Lo_Val (N : Node_Id) return Uint;\n-      --  Given static expression or static range from a Static_Predicate list,\n-      --  gets expression value or low bound of range.\n+      --  Given an entry from a Static_Discrete_Predicate list that is either\n+      --  a static expression or static range, gets either the expression value\n+      --  or the low bound of the range.\n \n       function Hi_Val (N : Node_Id) return Uint;\n-      --  Given static expression or static range from a Static_Predicate list,\n-      --  gets expression value of high bound of range.\n+      --  Given an entry from a Static_Discrete_Predicate list that is either\n+      --  a static expression or static range, gets either the expression value\n+      --  or the high bound of the range.\n \n       function Membership_Entry (N : Node_Id) return RList;\n       --  Given a single membership entry (range, value, or subtype), returns\n@@ -6920,18 +6922,19 @@ package body Sem_Ch13 is\n       begin\n          --  Not static if type does not have static predicates\n \n-         if not Has_Predicates (Typ) or else No (Static_Predicate (Typ)) then\n+         if not Has_Static_Predicate (Typ) then\n             raise Non_Static;\n          end if;\n \n          --  Otherwise we convert the predicate list to a range list\n \n          declare\n-            Result : RList (1 .. List_Length (Static_Predicate (Typ)));\n+            Spred  : constant List_Id := Static_Discrete_Predicate (Typ);\n+            Result : RList (1 .. List_Length (Spred));\n             P      : Node_Id;\n \n          begin\n-            P := First (Static_Predicate (Typ));\n+            P := First (Static_Discrete_Predicate (Typ));\n             for J in Result'Range loop\n                Result (J) := REnt'(Lo_Val (P), Hi_Val (P));\n                Next (P);\n@@ -6999,7 +7002,7 @@ package body Sem_Ch13 is\n          --  Processing was successful and all entries were static, so now we\n          --  can store the result as the predicate list.\n \n-         Set_Static_Predicate (Typ, Plist);\n+         Set_Static_Discrete_Predicate (Typ, Plist);\n \n          --  The processing for static predicates put the expression into\n          --  canonical form as a series of ranges. It also eliminated\n@@ -8027,7 +8030,7 @@ package body Sem_Ch13 is\n                   --  dynamic. But if we do succeed in building the list, then\n                   --  we mark the predicate as static.\n \n-                  if No (Static_Predicate (Typ)) then\n+                  if No (Static_Discrete_Predicate (Typ)) then\n                      Set_Has_Static_Predicate (Typ, False);\n                   end if;\n                end if;"}, {"sha": "265c2c7adc65c1a3c18b1edd32d5386e758fbe75", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=60f908dd027ea9561239e46b55246da68839b18b", "patch": "@@ -2480,8 +2480,8 @@ package body Sem_Ch5 is\n          --  function only, look for a dynamic predicate aspect as well.\n \n          if Is_Discrete_Type (Entity (DS))\n-           and then Present (Predicate_Function (Entity (DS)))\n-           and then (No (Static_Predicate (Entity (DS)))\n+           and then Has_Predicates (Entity (DS))\n+           and then (not Has_Static_Predicate (Entity (DS))\n                       or else Has_Dynamic_Predicate_Aspect (Entity (DS)))\n          then\n             Bad_Predicated_Subtype_Use"}, {"sha": "57152ae1bdf8c5cd5e3c75e825fd270912d3fbbd", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=60f908dd027ea9561239e46b55246da68839b18b", "patch": "@@ -330,7 +330,7 @@ package body Sem_Eval is\n       --  types, so no need to make a special test for that).\n \n       if not (Has_Static_Predicate (Typ)\n-              and then Compile_Time_Known_Value (Expr))\n+               and then Compile_Time_Known_Value (Expr))\n       then\n          return;\n       end if;\n@@ -354,7 +354,7 @@ package body Sem_Eval is\n \n       --  If static predicate matches, nothing to do\n \n-      if Choices_Match (Expr, Static_Predicate (Typ)) = Match then\n+      if Choices_Match (Expr, Static_Discrete_Predicate (Typ)) = Match then\n          return;\n       end if;\n \n@@ -383,6 +383,7 @@ package body Sem_Eval is\n            (\"??expression fails predicate check on &\", Expr, Typ);\n       end if;\n    end Check_Expression_Against_Static_Predicate;\n+\n    ------------------------------\n    -- Check_Non_Static_Context --\n    ------------------------------"}, {"sha": "fd9dce0f21b744cea68ea4d0ee63941f74450b21", "filename": "gcc/ada/sem_eval.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fsem_eval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fsem_eval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.ads?ref=60f908dd027ea9561239e46b55246da68839b18b", "patch": "@@ -232,7 +232,7 @@ package Sem_Eval is\n    --\n    --  Implementation note: an attempt to include this Ada 2012 case failed,\n    --  since it appears that this routine is called in some cases before the\n-   --  Static_Predicate field is set ???\n+   --  Static_Discrete_Predicate field is set ???\n    --\n    --  This differs from Is_OK_Static_Subtype (which is what must be used by\n    --  clients) in that it does not care whether the bounds raise a constraint\n@@ -250,7 +250,7 @@ package Sem_Eval is\n    --\n    --  Implementation note: an attempt to include this Ada 2012 case failed,\n    --  since it appears that this routine is called in some cases before the\n-   --  Static_Predicate field is set ???\n+   --  Static_Discrete_Predicate field is set ???\n    --\n    --  This differs from Is_Static_Subtype in that it includes the constraint\n    --  error checks, which are missing from Is_Static_Subtype."}, {"sha": "0782c502546e016e295970ff0aaf7be81b78b205", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f908dd027ea9561239e46b55246da68839b18b/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=60f908dd027ea9561239e46b55246da68839b18b", "patch": "@@ -798,7 +798,7 @@ package body Sem_Util is\n          --  Emit an optional suggestion on how to remedy the error if the\n          --  context warrants it.\n \n-         if Suggest_Static and then Present (Static_Predicate (Typ)) then\n+         if Suggest_Static and then Has_Static_Predicate (Typ) then\n             Error_Msg_FE (\"\\predicate of & should be marked static\", N, Typ);\n          end if;\n       end if;"}]}