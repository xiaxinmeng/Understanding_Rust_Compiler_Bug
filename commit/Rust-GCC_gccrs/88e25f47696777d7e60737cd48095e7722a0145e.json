{"sha": "88e25f47696777d7e60737cd48095e7722a0145e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhlMjVmNDc2OTY3NzdkN2U2MDczN2NkNDgwOTVlNzcyMmEwMTQ1ZQ==", "commit": {"author": {"name": "Sam Tebbs", "email": "sam.tebbs@arm.com", "date": "2018-08-16T09:43:58Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2018-08-16T09:43:58Z"}, "message": "[aarch64] Make common aarch64 options target-dependent\n\nThis patch replaces the \"Common\" attribute in some aarch64 options with \"Target\"\nto make them target-dependent. This doesn't affect their behaviour or how they\nare documented with \"--help\", but does mean that they follow the option\nspecification that target-specific options are given the \"Target\" attribute.\n\nTested by ensuring the changed options are still accepted as before and that\nthey aren't invokable from an invalid target. Bootstrapped and regression tested\non aarch64-none-elf with ... regressions.\n\n2018-08-16  Sam Tebbs  <sam.tebbs@arm.com>\n\n\t* config/aarch64/aarch64.opt (mlow-precision-recip-sqrt)\n\t(mlow-precision-sqrt, mlow-precision-div, mverbose-cost-dump): Replace\n\t\"Common\" with \"Target\".\n\nFrom-SVN: r263578", "tree": {"sha": "46e4e8883adeeeb6d087259c7801cb63cb106bbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46e4e8883adeeeb6d087259c7801cb63cb106bbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88e25f47696777d7e60737cd48095e7722a0145e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e25f47696777d7e60737cd48095e7722a0145e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88e25f47696777d7e60737cd48095e7722a0145e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e25f47696777d7e60737cd48095e7722a0145e/comments", "author": null, "committer": null, "parents": [{"sha": "c553659e1c1d7418954c604be93ef593e77a52e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c553659e1c1d7418954c604be93ef593e77a52e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c553659e1c1d7418954c604be93ef593e77a52e1"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "2831d6e7d0b564110f8c080f51372a1d8357ddad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88e25f47696777d7e60737cd48095e7722a0145e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88e25f47696777d7e60737cd48095e7722a0145e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88e25f47696777d7e60737cd48095e7722a0145e", "patch": "@@ -1,3 +1,9 @@\n+2018-08-16  Sam Tebbs  <sam.tebbs@arm.com>\n+\n+\t* config/aarch64/aarch64.opt (mlow-precision-recip-sqrt)\n+\t(mlow-precision-sqrt, mlow-precision-div, mverbose-cost-dump): Replace\n+\t\"Common\" with \"Target\".\n+\n 2018-08-15  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.opt (mmitigate-rop): Mark as deprecated."}, {"sha": "c8e820422245496eaf09dd6546472e1ff9e90d4f", "filename": "gcc/config/aarch64/aarch64.opt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88e25f47696777d7e60737cd48095e7722a0145e/gcc%2Fconfig%2Faarch64%2Faarch64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88e25f47696777d7e60737cd48095e7722a0145e/gcc%2Fconfig%2Faarch64%2Faarch64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.opt?ref=88e25f47696777d7e60737cd48095e7722a0145e", "patch": "@@ -167,20 +167,20 @@ EnumValue\n Enum(aarch64_ra_sign_scope_t) String(all) Value(AARCH64_FUNCTION_ALL)\n \n mlow-precision-recip-sqrt\n-Common Var(flag_mrecip_low_precision_sqrt) Optimization\n+Target Var(flag_mrecip_low_precision_sqrt) Optimization\n Enable the reciprocal square root approximation.  Enabling this reduces\n precision of reciprocal square root results to about 16 bits for\n single precision and to 32 bits for double precision.\n \n mlow-precision-sqrt\n-Common Var(flag_mlow_precision_sqrt) Optimization\n+Target Var(flag_mlow_precision_sqrt) Optimization\n Enable the square root approximation.  Enabling this reduces\n precision of square root results to about 16 bits for\n single precision and to 32 bits for double precision.\n If enabled, it implies -mlow-precision-recip-sqrt.\n \n mlow-precision-div\n-Common Var(flag_mlow_precision_div) Optimization\n+Target Var(flag_mlow_precision_div) Optimization\n Enable the division approximation.  Enabling this reduces\n precision of division results to about 16 bits for\n single precision and to 32 bits for double precision.\n@@ -212,7 +212,7 @@ Target RejectNegative Joined Enum(sve_vector_bits) Var(aarch64_sve_vector_bits)\n -msve-vector-bits=N\tSet the number of bits in an SVE vector register to N.\n \n mverbose-cost-dump\n-Common Undocumented Var(flag_aarch64_verbose_cost)\n+Target Undocumented Var(flag_aarch64_verbose_cost)\n Enables verbose cost model dumping in the debug dump files.\n \n mtrack-speculation"}]}