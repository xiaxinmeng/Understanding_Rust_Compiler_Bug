{"sha": "5cd0e96b0e8248436fa6f743feb057114abd2f62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNkMGU5NmIwZTgyNDg0MzZmYTZmNzQzZmViMDU3MTE0YWJkMmY2Mg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-05-07T15:53:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-05-07T15:53:40Z"}, "message": "re PR lto/43857 (-fresolution causes an ICE)\n\n2010-05-07  Richard Guenther <rguenther@suse.de>\n\n\t* gcc.c (LINK_COMMAND_SPEC): Provide a resolution file to\n\tthe linker plugin.\n\t(store_arg): Queue temp_filename for deletion instead of\n\tthe whole argument.\n\n\tlto/\n\tPR lto/43857\n\tPR lto/43371\n\t* lang.opt (fresolution): Change to ...\n\t(fresolution=): ... this.\n\t* lto-lang.c (lto_handle_option): Adjust.\n\n\tlto-plugin/\n\t* lto-plugin.c (free_2): Do not free resolution_file.\n\t(write_resolution): Check that we were passed a resolution file.\n\t(all_symbols_read_handler): Adjust.\n\t(cleanup_handler): Do not remove the resolution file.\n\t(process_option): Handle -fresolution=.\n\nFrom-SVN: r159159", "tree": {"sha": "29dabebed4129e0cb07c2120a2171cf6005fa4b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29dabebed4129e0cb07c2120a2171cf6005fa4b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cd0e96b0e8248436fa6f743feb057114abd2f62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cd0e96b0e8248436fa6f743feb057114abd2f62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cd0e96b0e8248436fa6f743feb057114abd2f62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cd0e96b0e8248436fa6f743feb057114abd2f62/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40bb78ad246919ee068382c3a2cdf6f299e412c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40bb78ad246919ee068382c3a2cdf6f299e412c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40bb78ad246919ee068382c3a2cdf6f299e412c9"}], "stats": {"total": 91, "additions": 51, "deletions": 40}, "files": [{"sha": "486a7137104dcdd79722e7baf6d0bf423f3f3373", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd0e96b0e8248436fa6f743feb057114abd2f62/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd0e96b0e8248436fa6f743feb057114abd2f62/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5cd0e96b0e8248436fa6f743feb057114abd2f62", "patch": "@@ -1,3 +1,10 @@\n+2010-05-07  Richard Guenther <rguenther@suse.de>\n+\n+\t* gcc.c (LINK_COMMAND_SPEC): Provide a resolution file to\n+\tthe linker plugin.\n+\t(store_arg): Queue temp_filename for deletion instead of\n+\tthe whole argument.\n+\n 2010-05-07  Richard Guenther  <rguenther@suse.de>\n \n \t* lto-wrapper.c (DUMPBASE_SUFFIX): Define."}, {"sha": "7e4343de4ac454f8bd769a70e80bb7d346c0f9b9", "filename": "gcc/gcc.c", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd0e96b0e8248436fa6f743feb057114abd2f62/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd0e96b0e8248436fa6f743feb057114abd2f62/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=5cd0e96b0e8248436fa6f743feb057114abd2f62", "patch": "@@ -782,6 +782,7 @@ proper position among the other output files.  */\n     -plugin %(linker_plugin_file) \\\n     -plugin-opt=%(lto_wrapper) \\\n     -plugin-opt=%(lto_gcc) \\\n+    -plugin-opt=-fresolution=%u.res \\\n     %{static|static-libgcc:-plugin-opt=-pass-through=%(lto_libgcc)}\t\\\n     %{static:-plugin-opt=-pass-through=-lc}\t\\\n     %{O*:-plugin-opt=-O%*} \\\n@@ -2044,6 +2045,23 @@ static int signal_count;\n /* Name with which this program was invoked.  */\n \n static const char *programname;\n+\n+/* This is the common prefix we use to make temp file names.\n+   It is chosen once for each run of this program.\n+   It is substituted into a spec by %g or %j.\n+   Thus, all temp file names contain this prefix.\n+   In practice, all temp file names start with this prefix.\n+\n+   This prefix comes from the envvar TMPDIR if it is defined;\n+   otherwise, from the P_tmpdir macro if that is defined;\n+   otherwise, in /usr/tmp or /tmp;\n+   or finally the current directory if all else fails.  */\n+\n+static const char *temp_filename;\n+\n+/* Length of the prefix.  */\n+\n+static int temp_filename_length;\n \f\n /* Allocate the argument vector.  */\n \n@@ -2081,7 +2099,7 @@ store_arg (const char *arg, int delete_always, int delete_failure)\n   if (strcmp (arg, \"-o\") == 0)\n     have_o_argbuf_index = argbuf_index;\n   if (delete_always || delete_failure)\n-    record_temp_file (arg, delete_always, delete_failure);\n+    record_temp_file (temp_filename, delete_always, delete_failure);\n }\n \f\n /* Load specs from a file name named FILENAME, replacing occurrences of\n@@ -2384,23 +2402,6 @@ read_specs (const char *filename, int main_p)\n /* Record the names of temporary files we tell compilers to write,\n    and delete them at the end of the run.  */\n \n-/* This is the common prefix we use to make temp file names.\n-   It is chosen once for each run of this program.\n-   It is substituted into a spec by %g or %j.\n-   Thus, all temp file names contain this prefix.\n-   In practice, all temp file names start with this prefix.\n-\n-   This prefix comes from the envvar TMPDIR if it is defined;\n-   otherwise, from the P_tmpdir macro if that is defined;\n-   otherwise, in /usr/tmp or /tmp;\n-   or finally the current directory if all else fails.  */\n-\n-static const char *temp_filename;\n-\n-/* Length of the prefix.  */\n-\n-static int temp_filename_length;\n-\n /* Define the list of temporary files to delete.  */\n \n struct temp_file"}, {"sha": "2496d66d6238a0ae71bb5faa45b8bb668ad79ba4", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd0e96b0e8248436fa6f743feb057114abd2f62/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd0e96b0e8248436fa6f743feb057114abd2f62/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=5cd0e96b0e8248436fa6f743feb057114abd2f62", "patch": "@@ -1,3 +1,11 @@\n+2010-05-07  Richard Guenther <rguenther@suse.de>\n+\n+\tPR lto/43857\n+\tPR lto/43371\n+\t* lang.opt (fresolution): Change to ...\n+\t(fresolution=): ... this.\n+\t* lto-lang.c (lto_handle_option): Adjust.\n+\n 2010-05-07  Richard Guenther  <rguenther@suse.de>\n \n \t* lto.c (DUMPBASE_SUFFIX): Remove."}, {"sha": "53ab8e808309323fb4bf973caf0ed7e5a76797f5", "filename": "gcc/lto/lang.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd0e96b0e8248436fa6f743feb057114abd2f62/gcc%2Flto%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd0e96b0e8248436fa6f743feb057114abd2f62/gcc%2Flto%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flang.opt?ref=5cd0e96b0e8248436fa6f743feb057114abd2f62", "patch": "@@ -36,8 +36,8 @@ fwpa\n LTO Report Var(flag_wpa) Optimization\n Run the link-time optimizer in whole program analysis (WPA) mode.\n \n-fresolution\n-LTO Separate\n+fresolution=\n+LTO Joined\n The resolution file\n \n ; This comment is to ensure we retain the blank line above."}, {"sha": "72149082d0a3cf23c3456e49e640733eeec93e1b", "filename": "gcc/lto/lto-lang.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd0e96b0e8248436fa6f743feb057114abd2f62/gcc%2Flto%2Flto-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd0e96b0e8248436fa6f743feb057114abd2f62/gcc%2Flto%2Flto-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-lang.c?ref=5cd0e96b0e8248436fa6f743feb057114abd2f62", "patch": "@@ -624,7 +624,7 @@ lto_handle_option (size_t scode, const char *arg,\n \n   switch (code)\n     {\n-    case OPT_fresolution:\n+    case OPT_fresolution_:\n       resolution_file_name = arg;\n       result = 1;\n       break;"}, {"sha": "df771284e67342ed838cc019b8594a39714f55aa", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd0e96b0e8248436fa6f743feb057114abd2f62/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd0e96b0e8248436fa6f743feb057114abd2f62/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=5cd0e96b0e8248436fa6f743feb057114abd2f62", "patch": "@@ -1,3 +1,11 @@\n+2010-05-07  Richard Guenther <rguenther@suse.de>\n+\n+\t* lto-plugin.c (free_2): Do not free resolution_file.\n+\t(write_resolution): Check that we were passed a resolution file.\n+\t(all_symbols_read_handler): Adjust.\n+\t(cleanup_handler): Do not remove the resolution file.\n+\t(process_option): Handle -fresolution=.\n+\n 2010-05-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR other/43620"}, {"sha": "cb785c428a8a491a20323df48d9f742eef54f01f", "filename": "lto-plugin/lto-plugin.c", "status": "modified", "additions": 6, "deletions": 19, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cd0e96b0e8248436fa6f743feb057114abd2f62/lto-plugin%2Flto-plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cd0e96b0e8248436fa6f743feb057114abd2f62/lto-plugin%2Flto-plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Flto-plugin.c?ref=5cd0e96b0e8248436fa6f743feb057114abd2f62", "patch": "@@ -294,12 +294,6 @@ free_2 (void)\n   if (arguments_file_name)\n     free (arguments_file_name);\n   arguments_file_name = NULL;\n-\n-  if (resolution_file)\n-    {\n-      free (resolution_file);\n-      resolution_file = NULL;\n-    }\n }\n \n /*  Writes the relocations to disk. */\n@@ -310,6 +304,7 @@ write_resolution (void)\n   unsigned int i;\n   FILE *f;\n \n+  check (resolution_file, LDPL_FATAL, \"resolution file not specified\");\n   f = fopen (resolution_file, \"w\");\n   check (f, LDPL_FATAL, \"could not open file\");\n \n@@ -467,7 +462,7 @@ static enum ld_plugin_status\n all_symbols_read_handler (void)\n {\n   unsigned i;\n-  unsigned num_lto_args = num_claimed_files + lto_wrapper_num_args + 2 + 1;\n+  unsigned num_lto_args = num_claimed_files + lto_wrapper_num_args + 1;\n   char **lto_argv;\n   const char **lto_arg_ptr;\n   if (num_claimed_files == 0)\n@@ -483,18 +478,13 @@ all_symbols_read_handler (void)\n   lto_arg_ptr = (const char **) lto_argv;\n   assert (lto_wrapper_argv);\n \n-  resolution_file = make_temp_file (\"\");\n-\n   write_resolution ();\n \n   free_1 ();\n \n   for (i = 0; i < lto_wrapper_num_args; i++)\n     *lto_arg_ptr++ = lto_wrapper_argv[i];\n \n-  *lto_arg_ptr++ = \"-fresolution\";\n-  *lto_arg_ptr++ = resolution_file;\n-\n   for (i = 0; i < num_claimed_files; i++)\n     {\n       struct plugin_file_info *info = &claimed_files[i];\n@@ -543,12 +533,6 @@ cleanup_handler (void)\n       check (t == 0, LDPL_FATAL, \"could not unlink arguments file\");\n     }\n \n-  if (resolution_file)\n-    {\n-      t = unlink (resolution_file);\n-      check (t == 0, LDPL_FATAL, \"could not unlink resolution file\");\n-    }\n-\n   for (i = 0; i < num_output_files; i++)\n     {\n       t = unlink (output_files[i]);\n@@ -657,10 +641,13 @@ process_option (const char *option)\n   else\n     {\n       int size;\n+      char *opt = xstrdup (option);\n       lto_wrapper_num_args += 1;\n       size = lto_wrapper_num_args * sizeof (char *);\n       lto_wrapper_argv = (char **) xrealloc (lto_wrapper_argv, size);\n-      lto_wrapper_argv[lto_wrapper_num_args - 1] = xstrdup(option);\n+      lto_wrapper_argv[lto_wrapper_num_args - 1] = opt;\n+      if (strncmp (option, \"-fresolution=\", sizeof (\"-fresolution=\") - 1) == 0)\n+\tresolution_file = opt + sizeof (\"-fresolution=\") - 1;\n     }\n }\n "}]}