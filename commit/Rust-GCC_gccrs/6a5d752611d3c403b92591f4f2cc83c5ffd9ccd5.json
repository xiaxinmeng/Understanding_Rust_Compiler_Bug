{"sha": "6a5d752611d3c403b92591f4f2cc83c5ffd9ccd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE1ZDc1MjYxMWQzYzQwM2I5MjU5MWY0ZjJjYzgzYzVmZmQ5Y2NkNQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-08-15T20:00:54Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-08-15T20:00:54Z"}, "message": "* arm.h (RETURN_ADDR_RTX): Define.\n\nFrom-SVN: r12645", "tree": {"sha": "939205c41e10200e12820f949c55a1da5045680f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/939205c41e10200e12820f949c55a1da5045680f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a5d752611d3c403b92591f4f2cc83c5ffd9ccd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a5d752611d3c403b92591f4f2cc83c5ffd9ccd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a5d752611d3c403b92591f4f2cc83c5ffd9ccd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a5d752611d3c403b92591f4f2cc83c5ffd9ccd5/comments", "author": null, "committer": null, "parents": [{"sha": "75bb87ea21776c16068b681529080f97c759a267", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75bb87ea21776c16068b681529080f97c759a267", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75bb87ea21776c16068b681529080f97c759a267"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "520e61bdd77520ca5364d560bd439433d9a551d6", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a5d752611d3c403b92591f4f2cc83c5ffd9ccd5/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a5d752611d3c403b92591f4f2cc83c5ffd9ccd5/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=6a5d752611d3c403b92591f4f2cc83c5ffd9ccd5", "patch": "@@ -1721,6 +1721,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n   ASM_OUTPUT_INT (FILE, XEXP (DECL_RTL (FUNCTION), 0));\t\t\t\\\n } while (0)\n \n+/* A C expression whose value is RTL representing the value of the return\n+   address for the frame COUNT steps up from the current frame.  */\n+\n+#define RETURN_ADDR_RTX(COUNT, FRAME)\t\\\n+  ((COUNT == 0)\t\t\t\t\\\n+   ? gen_rtx (MEM, Pmode, plus_constant (FRAME, -4)) \\\n+   : (rtx) 0)\n+\n /* Used to mask out junk bits from the return address, such as\n    processor state, interrupt status, condition codes and the like.  */\n #define MASK_RETURN_ADDR \\"}]}