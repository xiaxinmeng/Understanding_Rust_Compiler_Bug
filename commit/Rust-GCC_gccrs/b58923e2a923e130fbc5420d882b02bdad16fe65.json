{"sha": "b58923e2a923e130fbc5420d882b02bdad16fe65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU4OTIzZTJhOTIzZTEzMGZiYzU0MjBkODgyYjAyYmRhZDE2ZmU2NQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-06-06T06:59:22Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-06-06T06:59:22Z"}, "message": "ira-lives.c (single_reg_class): Add missing break.\n\ngcc/\n\t* ira-lives.c (single_reg_class): Add missing break.  Explicitly\n\treturn NO_REGS for extra address and memory constraints.  Handle\n\toperands that match (or are equivalent to something that matches)\n\textra constant constraints.  Ignore other non-register operands.\n\nFrom-SVN: r211300", "tree": {"sha": "e393195e90c0710139c92a43a664d960118499cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e393195e90c0710139c92a43a664d960118499cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b58923e2a923e130fbc5420d882b02bdad16fe65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b58923e2a923e130fbc5420d882b02bdad16fe65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b58923e2a923e130fbc5420d882b02bdad16fe65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b58923e2a923e130fbc5420d882b02bdad16fe65/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3def9a976919ceeda85707f324fa2d9a0336a2bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3def9a976919ceeda85707f324fa2d9a0336a2bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3def9a976919ceeda85707f324fa2d9a0336a2bb"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "a46cfda428bd2667159e78eb816c5956b255ef7c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b58923e2a923e130fbc5420d882b02bdad16fe65/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b58923e2a923e130fbc5420d882b02bdad16fe65/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b58923e2a923e130fbc5420d882b02bdad16fe65", "patch": "@@ -1,3 +1,10 @@\n+2014-06-06  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* ira-lives.c (single_reg_class): Add missing break.  Explicitly\n+\treturn NO_REGS for extra address and memory constraints.  Handle\n+\toperands that match (or are equivalent to something that matches)\n+\textra constant constraints.  Ignore other non-register operands.\n+\n 2014-06-06  Alan Modra  <amodra@gmail.com>\n \n \tPR target/61300"}, {"sha": "bb03967225b566418229ba65d0951c6c07456fb1", "filename": "gcc/ira-lives.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b58923e2a923e130fbc5420d882b02bdad16fe65/gcc%2Fira-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b58923e2a923e130fbc5420d882b02bdad16fe65/gcc%2Fira-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-lives.c?ref=b58923e2a923e130fbc5420d882b02bdad16fe65", "patch": "@@ -839,7 +839,8 @@ single_reg_class (const char *constraints, rtx op, rtx equiv_const)\n \t\t  && CONST_DOUBLE_OK_FOR_CONSTRAINT_P (equiv_const,\n \t\t\t\t\t\t       c, constraints)))\n \t    return NO_REGS;\n-\t  /* ??? what about memory */\n+\t  break;\n+\n \tcase 'r':\n \tcase 'a': case 'b': case 'c': case 'd': case 'e': case 'f':\n \tcase 'h': case 'j': case 'k': case 'l':\n@@ -848,9 +849,22 @@ single_reg_class (const char *constraints, rtx op, rtx equiv_const)\n \tcase 'A': case 'B': case 'C': case 'D':\n \tcase 'Q': case 'R': case 'S': case 'T': case 'U':\n \tcase 'W': case 'Y': case 'Z':\n+#ifdef EXTRA_CONSTRAINT_STR\n+\t  /* ??? Is this the best way to handle memory constraints?  */\n+\t  if (EXTRA_MEMORY_CONSTRAINT (c, constraints)\n+\t      || EXTRA_ADDRESS_CONSTRAINT (c, constraints))\n+\t    return NO_REGS;\n+\t  if (EXTRA_CONSTRAINT_STR (op, c, constraints)\n+\t      || (equiv_const != NULL_RTX\n+\t\t  && CONSTANT_P (equiv_const)\n+\t\t  && EXTRA_CONSTRAINT_STR (equiv_const, c, constraints)))\n+\t    return NO_REGS;\n+#endif\n \t  next_cl = (c == 'r'\n \t\t     ? GENERAL_REGS\n \t\t     : REG_CLASS_FROM_CONSTRAINT (c, constraints));\n+\t  if (next_cl == NO_REGS)\n+\t    break;\n \t  if (cl == NO_REGS\n \t      ? ira_class_singleton[next_cl][GET_MODE (op)] < 0\n \t      : (ira_class_singleton[cl][GET_MODE (op)]"}]}