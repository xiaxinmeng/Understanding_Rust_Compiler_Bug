{"sha": "cbd8652b67eee2f10ce276968983b494829fa42d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JkODY1MmI2N2VlZTJmMTBjZTI3Njk2ODk4M2I0OTQ4MjlmYTQyZA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-10-11T17:05:23Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-10-11T17:05:23Z"}, "message": "multiline.exp: complain about mismatched dg-{begin|end}-multiline-output\n\nMismatched dg-{begin|end}-multiline-output directives are currently\nsilently ignored, leading to difficult-to-diagnose test failures\ninvolving excess output.\n\nThis patch makes multiline.exp complain about them.\n\ngcc/testsuite/ChangeLog:\n\t* lib/multiline.exp (dg-begin-multiline-output): Issue an error if\n\tthere hasn't been a dg-end-multiline-output since the last\n\tdg-begin-multiline-output.\n\t(dg-end-multiline-output): Issue an error if there hasn't been a\n\tdg-begin-multiline-output.  Reset _multiline_last_beginning_line\n\tas soon possible.  Rename \"line\" to \"last_line\".\n\nFrom-SVN: r265046", "tree": {"sha": "daa81cdcb11522a45eef873181d9af1e565942d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/daa81cdcb11522a45eef873181d9af1e565942d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbd8652b67eee2f10ce276968983b494829fa42d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbd8652b67eee2f10ce276968983b494829fa42d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbd8652b67eee2f10ce276968983b494829fa42d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbd8652b67eee2f10ce276968983b494829fa42d/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cfef4c324ac300c0ad120f0fcee376159de84a0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfef4c324ac300c0ad120f0fcee376159de84a0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfef4c324ac300c0ad120f0fcee376159de84a0c"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "acac188edfddd0dcc3ff5a704d4e009fbb8ff678", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd8652b67eee2f10ce276968983b494829fa42d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd8652b67eee2f10ce276968983b494829fa42d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cbd8652b67eee2f10ce276968983b494829fa42d", "patch": "@@ -1,3 +1,12 @@\n+2018-10-11  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* lib/multiline.exp (dg-begin-multiline-output): Issue an error if\n+\tthere hasn't been a dg-end-multiline-output since the last\n+\tdg-begin-multiline-output.\n+\t(dg-end-multiline-output): Issue an error if there hasn't been a\n+\tdg-begin-multiline-output.  Reset _multiline_last_beginning_line\n+\tas soon possible.  Rename \"line\" to \"last_line\".\n+\n 2018-10-11  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* selftests/repeat.rtl: New file."}, {"sha": "6e431d94e1c32e6590e05faf3109b257489d1703", "filename": "gcc/testsuite/lib/multiline.exp", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd8652b67eee2f10ce276968983b494829fa42d/gcc%2Ftestsuite%2Flib%2Fmultiline.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd8652b67eee2f10ce276968983b494829fa42d/gcc%2Ftestsuite%2Flib%2Fmultiline.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fmultiline.exp?ref=cbd8652b67eee2f10ce276968983b494829fa42d", "patch": "@@ -72,6 +72,14 @@ proc dg-begin-multiline-output { args } {\n     global _multiline_last_beginning_line\n     verbose \"dg-begin-multiline-output: args: $args\" 3\n     set line [expr [lindex $args 0] + 1]\n+\n+    # Complain if there hasn't been a dg-end-multiline-output\n+    # since the last dg-begin-multiline-output\n+    if { $_multiline_last_beginning_line != -1 } {\n+\tset last_directive_line [expr $_multiline_last_beginning_line - 1]\n+\terror \"$last_directive_line: unterminated dg-begin-multiline-output\"\n+    }\n+    \n     set _multiline_last_beginning_line $line\n }\n \n@@ -84,8 +92,17 @@ proc dg-begin-multiline-output { args } {\n proc dg-end-multiline-output { args } {\n     global _multiline_last_beginning_line\n     verbose \"dg-end-multiline-output: args: $args\" 3\n-    set line [expr [lindex $args 0] - 1]\n-    verbose \"multiline output lines: $_multiline_last_beginning_line-$line\" 3\n+    set first_line $_multiline_last_beginning_line\n+\n+    # Complain if there hasn't been a dg-begin-multiline-output\n+    if { $first_line == -1 } {\n+\terror \"[lindex $args 0]: dg-end-multiline-output without dg-begin-multiline-output\"\n+\treturn\n+    }\n+    set _multiline_last_beginning_line -1\n+\n+    set last_line [expr [lindex $args 0] - 1]\n+    verbose \"multiline output lines: $first_line-$last_line\" 3\n \n     if { [llength $args] > 3 } {\n \terror \"[lindex $args 0]: too many arguments\"\n@@ -109,16 +126,14 @@ proc dg-end-multiline-output { args } {\n     # \"prog\" now contains the filename\n     # Load it and split it into lines\n \n-    set lines [_get_lines $prog $_multiline_last_beginning_line $line]\n+    set lines [_get_lines $prog $first_line $last_line]\n \n     verbose \"lines: $lines\" 3\n     # Create an entry of the form:  first-line, last-line, lines, maybe_x\n-    set entry [list $_multiline_last_beginning_line $line $lines $maybe_x]\n+    set entry [list $first_line $last_line $lines $maybe_x]\n     global multiline_expected_outputs\n     lappend multiline_expected_outputs $entry\n     verbose \"within dg-end-multiline-output: multiline_expected_outputs: $multiline_expected_outputs\" 3\n-\n-    set _multiline_last_beginning_line -1\n }\n \n # Hook to be called by prune.exp's prune_gcc_output to"}]}