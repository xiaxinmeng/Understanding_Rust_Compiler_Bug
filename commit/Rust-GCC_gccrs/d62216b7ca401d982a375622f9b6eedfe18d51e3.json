{"sha": "d62216b7ca401d982a375622f9b6eedfe18d51e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYyMjE2YjdjYTQwMWQ5ODJhMzc1NjIyZjliNmVlZGZlMThkNTFlMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-12T22:00:35Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-12T22:00:35Z"}, "message": "Initial revision\n\nFrom-SVN: r10335", "tree": {"sha": "aef8bf2a0865b54fccc4fbf3786c665c126550be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aef8bf2a0865b54fccc4fbf3786c665c126550be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d62216b7ca401d982a375622f9b6eedfe18d51e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d62216b7ca401d982a375622f9b6eedfe18d51e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d62216b7ca401d982a375622f9b6eedfe18d51e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d62216b7ca401d982a375622f9b6eedfe18d51e3/comments", "author": null, "committer": null, "parents": [{"sha": "4edb56f45d9c567ee9714ce37da391bef7f8b382", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4edb56f45d9c567ee9714ce37da391bef7f8b382", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4edb56f45d9c567ee9714ce37da391bef7f8b382"}], "stats": {"total": 181, "additions": 181, "deletions": 0}, "files": [{"sha": "f90c38a7e1caec3553e9cd9b0dfd66b89337a2bb", "filename": "gcc/config/winnt/config-nt.bat", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62216b7ca401d982a375622f9b6eedfe18d51e3/gcc%2Fconfig%2Fwinnt%2Fconfig-nt.bat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62216b7ca401d982a375622f9b6eedfe18d51e3/gcc%2Fconfig%2Fwinnt%2Fconfig-nt.bat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fwinnt%2Fconfig-nt.bat?ref=d62216b7ca401d982a375622f9b6eedfe18d51e3", "patch": "@@ -0,0 +1,51 @@\n+echo Configuring GCC for Windows NT on %2\n+rem This batch file assumes a unix-type \"sed\" program\n+\n+echo #include \"%2/xm-winnt.h\" >config.h\n+echo #include \"%2/xm-winnt.h\" >hconfig.h\n+echo #include \"%2/xm-winnt.h\" >tconfig.h\n+echo #include \"%2/winnt.h\" >tm.h\n+\n+rem This batch file assumes a unix-type \"sed\" program\n+\n+echo # Makefile generated by \"config-nt.bat\"> Makefile\n+echo all.nt: cpp.exe cc1.exe cc1obj.exe xgcc.exe ld.exe stmp-headers libgcc.lib stmp-float_h specs stamp-objlist>> Makefile\n+sed -f config/%2/config-nt.sed -f config/winnt/config-nt.sed Makefile.in >> Makefile\n+\n+set LANG=\n+\n+echo # >specs.h\n+echo # >options.h\n+\n+if not exist cp\\make-lang.in goto no_cp\n+if exist cp\\lang-specs.h echo #include \"cp/lang-specs.h\">>specs.h\n+if exist cp\\lang-options.h echo #include \"cp/lang-options.h\">>options.h\n+sed -f config/%2/config-nt.sed -f config/winnt/config-nt.sed cp\\make-lang.in >> Makefile\n+sed -f config/%2/config-nt.sed -f config/winnt/config-nt.sed cp\\makefile.in > cp\\Makefile\n+set LANG=%LANG% c++.#\t\n+:no_cp\n+\n+if not exist ada\\make-lang.in goto no_ada\n+if exist ada\\lang-specs.h echo #include \"ada/lang-specs.h\">>specs.h\n+if exist ada\\lang-options.h echo #include \"ada/lang-options.h\">>options.h\n+sed -f config/%2/config-nt.sed -f config/winnt/config-nt.sed ada\\make-lang.in >> Makefile\n+sed -f config/%2/config-nt.sed -f config/winnt/config-nt.sed ada\\makefile.in > ada\\Makefile\n+set LANG=%LANG% ada.#\t\n+:no_ada\n+\n+if not exist f\\make-lang.in goto no_f\n+if exist f\\lang-specs.h echo #include \"f/lang-specs.h\">>specs.h\n+if exist f\\lang-options.h echo #include \"f/lang-options.h\">>options.h\n+sed -f config/%2/config-nt.sed -f config/winnt/config-nt.sed f\\make-lang.in >> Makefile\n+sed -f config/%2/config-nt.sed -f config/winnt/config-nt.sed f\\makefile.in > f\\Makefile\n+set LANG=%LANG% f.#\t\n+:no_f\n+\n+echo lang.mostlyclean: %LANG% | sed \"s/#/mostlyclean/g\" >> Makefile\n+echo lang.clean: %LANG% | sed \"s/#/clean/g\" >> Makefile\n+echo lang.distclean: %LANG% | sed \"s/#/distclean/g\" >> Makefile\n+echo lang.realclean: %LANG% | sed \"s/#/realclean/g\" >> Makefile\n+\n+echo #define MULTILIB_SELECT \". ;\" > multilib.h1\n+copy multilib.h1 multilib.h\n+del multilib.h1"}, {"sha": "ecd8b860c6e55e3d229632d631aa9b8f0b408500", "filename": "gcc/config/winnt/config-nt.sed", "status": "added", "additions": 130, "deletions": 0, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62216b7ca401d982a375622f9b6eedfe18d51e3/gcc%2Fconfig%2Fwinnt%2Fconfig-nt.sed", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62216b7ca401d982a375622f9b6eedfe18d51e3/gcc%2Fconfig%2Fwinnt%2Fconfig-nt.sed", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fwinnt%2Fconfig-nt.sed?ref=d62216b7ca401d982a375622f9b6eedfe18d51e3", "patch": "@@ -0,0 +1,130 @@\n+/^Makefile/,/^\trm -f config.run/d\n+s/rm -f/del/\n+s/|| cp/|| copy/\n+/^config.status/,/\tfi/d\n+s/config.status//g\n+s/\\/dev\\/null/NUL/g\n+s/$(srcdir)\\/c-parse/c-parse/g\n+s/$(srcdir)\\/objc-parse.y/objc-parse.y/g\n+s/$(srcdir)\\/c-gperf/c-gperf/g\n+/^multilib.h/ s/multilib/not-multilib/\n+/^xmake_file=/ d\n+/^tmake_file=/ d\n+/^lang_specs_files=/ d\n+/^lang_options_files=/ d\n+/^version=/ c\\\n+version=2.7.0\n+s/CC = cc/CC = cl/\n+s/^SHELL =.*/SHELL =/\n+s/CFLAGS = -g/CFLAGS =/\n+s/:\\$/: \\$/g\n+s/<\\ *\\$(srcdir)\\//< $(srcdir)\\\\/g\n+s/^\t\\$(srcdir)\\/move-if-change/\tcopy/\n+s/^USE_/# USE_/\n+s/`echo \\$(srcdir)\\///g\n+s/ | sed 's,\\^\\\\\\.\\/,,'`//g\n+s/^\tcd \\$(srcdir)[ \t]*;/\t/\n+/^stamp-attrtab/,/copy/ {\n+  /\\\\$/d\n+  /\tfi/d\n+  /copy/ i\\\n+\\\t  genattrtab $(md_file) > tmp-attrtab.c\n+}\n+/^enquire[ \t]*:/ s/\\$(GCC_PARTS)//g\n+/^enquire.o[ \t]*:/ s/\\$(GCC_PASSES)//g\n+/^GCC_FOR_TARGET =/ c\\\n+GCC_FOR_TARGET = xgcc\n+/^ENQUIRE_LDFLAGS =/ c\\\n+ENQUIRE_LDFLAGS =\n+s/; *@true//\n+/> *stamp-objlist/ c\\\n+\techo.exe  $(OBJS) $(BC_OBJS) | sed -e \"s, \\([a-z]\\), ../\\1,g\" >stamp-objlist\n+/^OBJS.*stamp-objlist/ s?`cat ../stamp-objlist`?@../stamp-objlist?\n+s/^\\(SUBDIR_OBSTACK *=\\).*$/\\1 ..\\/obstack.o/\n+s/^\\(SUBDIR_USE_ALLOCA *=\\).*$/\\1/\n+s/^\\(SUBDIR_MALLOC *=\\).*$/\\1/\n+/####target/ i\\\n+STMP_FIXPROTO = \\\n+OTHER_FIXINCLUDES_DIRS=. \\\n+RANLIB = : \\\n+RANLIB_TEST = false \\\n+OLDCC = cl \\\n+MAKE = nmake \\\n+SYMLINK = copy \\\n+INSTALL = $(srcdir)/install.sh -c \\\n+exeext = .exe \\\n+objext = .obj \\\n+oldobjext = .obj \\\n+\\\n+EXTRA_PROGRAMS=ld.exe \\\n+\\\n+ld.obj: $(srcdir)/config/winnt/ld.c \\\n+\\\t$(CC) $(CFLAGS) \\\\\\\n+\\ \t-I. -I$(srcdir) -I$(srcdir)/config -c $(srcdir)/config/winnt/ld.c \\\n+\\\n+ld.exe: ld.obj \\\n+\tlink -out:ld.exe ld.obj $(LDFLAGS) $(CLIB) \\\n+\\\n+EXTRA_GCC_OBJS=spawnv.obj oldnames.obj \\\n+spawnv.obj: $(srcdir)/config/winnt/spawnv.c \\\n+\\\t$(CC) $(CFLAGS) \\\\\\\n+\\ \t-I. -I$(srcdir) -I$(srcdir)/config -c $(srcdir)/config/winnt/spawnv.c \\\n+\\\n+oldnames.obj: $(srcdir)/config/winnt/oldnames.c \\\n+\\\t$(CC) $(CFLAGS) \\\\\\\n+\\ \t-I. -I$(srcdir) -I$(srcdir)/config -c $(srcdir)/config/winnt/oldnames.c\n+s/^C c:/Cc:/\n+s/\\${OBJS}/\\$(OBJS)/g\n+s/\\${SYSTEM_HEADER_DIR}/\\$(SYSTEM_HEADER_DIR)/g\n+s/\\${HOST_CC}/\\$(HOST_CC)/g\n+s/ \\${srcdir}\\// /g\n+s/\\${mainversion}/\\$(mainversion)/g\n+s/\\ $(srcdir)\\/move-if-change$//\n+s/\\$(srcdir)\\/move-if-change/copy/g\n+/^# USE_HOST_OBSTACK/ i\\\n+USE_HOST_OBSTACK=obstack.obj\n+/^# USE_ALLOCA/ i\\\n+USE_ALLOCA=alloca.obj\n+/^# USE_HOST_ALLOCA/ i\\\n+USE_HOST_ALLOCA=alloca.obj\n+s/^ALLOCA =/ALLOCA = alloca.obj/\n+s/^ALLOCA_FINISH = true/ALLOCA_FINISH =/\n+s/\t\\.\\//\t/\n+s/^bi-\\([a-z]*\\) *:/bi-\\1.exe :/\n+s/ bi-\\([a-z]*\\)$/ bi-\\1.exe/\n+s/ bi-\\([a-z]*\\) / bi-\\1.exe /g\n+s/^gen\\([a-z]*\\) *:/gen\\1.exe :/\n+s/ gen\\([a-z]*\\)$/ gen\\1.exe/\n+s/ gen\\([a-z]*\\) / gen\\1.exe /g\n+s/genmultilib.exe/genmultilib/g\n+s/^cccp *:/cccp.exe :/\n+s/cccp$/cccp.exe/\n+s/cccp /cccp.exe /\n+s/CCCP=cccp.exe/CCCP=cccp/\n+s/(CCCP)$/(CCCP)$(exeext)/\n+s/^cpp *:/cpp.exe :/\n+s/cpp$/cpp.exe/\n+s/cpp /cpp.exe /\n+s/^cc1 *:/cc1.exe :/\n+s/cc1$/cc1.exe/\n+s/cc1 /cc1.exe /\n+s/^cc1obj *:/cc1obj.exe :/\n+s/cc1obj$/cc1obj.exe/\n+s/cc1obj /cc1obj.exe /\n+s/^xgcc *:/xgcc.exe :/\n+s/xgcc$/xgcc.exe/\n+s/xgcc /xgcc.exe /\n+s/^enquire *:/enquire.exe :/\n+s/enquire$/enquire.exe/\n+s/enquire /enquire.exe /\n+s/\\.o *:/.obj :/\n+s/\\.o$/.obj/\n+s/\\.o /.obj /g\n+s/-rm -f cpp.exe/del cpp.exe/\n+s/\\$(CC) \\$(ALL_CFLAGS) \\$(LDFLAGS) -o /link $(LDFLAGS) -out:/\n+s/\\$(HOST_CC) \\$(HOST_CFLAGS) \\$(HOST_LDFLAGS) -o /link $(HOST_LDFLAGS) -out:/\n+/^# Build libgcc.a/ r config/winnt/libgcc.mak\n+/^# Build libgcc.a/,/\f/ d\n+/^# Build the include directory\\./ r config/winnt/headers.mak\n+/^# Build the include directory\\./,/touch objc-headers/ d\n+s/^\\\f//"}]}