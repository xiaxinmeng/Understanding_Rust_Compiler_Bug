{"sha": "c0a5daa4018308b0a7fa2e96bfc0abf031c506e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBhNWRhYTQwMTgzMDhiMGE3ZmEyZTk2YmZjMGFiZjAzMWM1MDZlOQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2015-07-31T15:55:16Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2015-07-31T15:55:16Z"}, "message": "m32r.c (m32r_attribute_identifier): New function.\n\n\t* config/m32r/m32r.c (m32r_attribute_identifier): New function.\n\tReturns true for __model__.\n\t(TARGET_ATTRIBUTE_TAKES_IDENTIFIER_P): Define.\n\nFrom-SVN: r226445", "tree": {"sha": "df78817359b7beb3ba0c91af0cd012fb8ceea65a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df78817359b7beb3ba0c91af0cd012fb8ceea65a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0a5daa4018308b0a7fa2e96bfc0abf031c506e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0a5daa4018308b0a7fa2e96bfc0abf031c506e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0a5daa4018308b0a7fa2e96bfc0abf031c506e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0a5daa4018308b0a7fa2e96bfc0abf031c506e9/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b015c36906089cfbea506d45995350b718bee4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b015c36906089cfbea506d45995350b718bee4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b015c36906089cfbea506d45995350b718bee4a"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "63d18edb3ba0825bf900d9357f6da21931a47c03", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0a5daa4018308b0a7fa2e96bfc0abf031c506e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0a5daa4018308b0a7fa2e96bfc0abf031c506e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0a5daa4018308b0a7fa2e96bfc0abf031c506e9", "patch": "@@ -1,3 +1,9 @@\n+2015-07-31  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/m32r/m32r.c (m32r_attribute_identifier): New function.\n+\tReturns true for __model__.\n+\t(TARGET_ATTRIBUTE_TAKES_IDENTIFIER_P): Define.\n+\n 2015-07-31  Alan Modra  <amodra@gmail.com>\n \n \tPR target/66870"}, {"sha": "341f24ab426f7f8644ae513fa045b0e9fdb5ea1d", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0a5daa4018308b0a7fa2e96bfc0abf031c506e9/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0a5daa4018308b0a7fa2e96bfc0abf031c506e9/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=c0a5daa4018308b0a7fa2e96bfc0abf031c506e9", "patch": "@@ -113,6 +113,7 @@ static bool m32r_can_eliminate (const int, const int);\n static void m32r_conditional_register_usage (void);\n static void m32r_trampoline_init (rtx, tree, rtx);\n static bool m32r_legitimate_constant_p (machine_mode, rtx);\n+static bool m32r_attribute_identifier (const_tree);\n \f\n /* M32R specific attributes.  */\n \n@@ -129,6 +130,8 @@ static const struct attribute_spec m32r_attribute_table[] =\n /* Initialize the GCC target structure.  */\n #undef  TARGET_ATTRIBUTE_TABLE\n #define TARGET_ATTRIBUTE_TABLE m32r_attribute_table\n+#undef  TARGET_ATTRIBUTE_TAKES_IDENTIFIER_P\n+#define TARGET_ATTRIBUTE_TAKES_IDENTIFIER_P m32r_attribute_identifier\n \n #undef TARGET_LEGITIMATE_ADDRESS_P\n #define TARGET_LEGITIMATE_ADDRESS_P m32r_legitimate_address_p\n@@ -404,6 +407,13 @@ m32r_handle_model_attribute (tree *node ATTRIBUTE_UNUSED, tree name,\n \n   return NULL_TREE;\n }\n+\n+static bool\n+m32r_attribute_identifier (const_tree name)\n+{\n+  return strcmp (IDENTIFIER_POINTER (name), \"model\") == 0\n+    ||   strcmp (IDENTIFIER_POINTER (name), \"__model__\") == 0;\n+}\n \f\n /* Encode section information of DECL, which is either a VAR_DECL,\n    FUNCTION_DECL, STRING_CST, CONSTRUCTOR, or ???."}]}