{"sha": "7ab923ccffee2b00e18580a21e54cee3f3a0c24c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FiOTIzY2NmZmVlMmIwMGUxODU4MGEyMWU1NGNlZTNmM2EwYzI0Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-06-23T10:03:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-06-23T10:03:42Z"}, "message": "calls.c (compute_argument_addresses): Force stack slots into alias set 0.\n\n\t* calls.c (compute_argument_addresses): Force stack slots into\n\talias set 0.\n\t* expr.c (emit_push_insn): Force pushes into alias set 0.\n\nFrom-SVN: r34662", "tree": {"sha": "6b098c9cc6213a7d7fc73ae01e41aebcd5252b5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b098c9cc6213a7d7fc73ae01e41aebcd5252b5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ab923ccffee2b00e18580a21e54cee3f3a0c24c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ab923ccffee2b00e18580a21e54cee3f3a0c24c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ab923ccffee2b00e18580a21e54cee3f3a0c24c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ab923ccffee2b00e18580a21e54cee3f3a0c24c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "054451eaca6db3e5347180411e0c84cc84191a49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/054451eaca6db3e5347180411e0c84cc84191a49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/054451eaca6db3e5347180411e0c84cc84191a49"}], "stats": {"total": 50, "additions": 36, "deletions": 14}, "files": [{"sha": "4a37027c0e3c19babcbb67e49d22eca40dd14f23", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab923ccffee2b00e18580a21e54cee3f3a0c24c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab923ccffee2b00e18580a21e54cee3f3a0c24c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ab923ccffee2b00e18580a21e54cee3f3a0c24c", "patch": "@@ -1,3 +1,9 @@\n+2000-06-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* calls.c (compute_argument_addresses): Force stack slots into\n+\talias set 0.\n+\t* expr.c (emit_push_insn): Force pushes into alias set 0.\n+\n 2000-06-23  Richard Henderson  <rth@cygnus.com>\n \n \t* config/ia64/ia64.md (pred_rel_mutex): Only take one register."}, {"sha": "3561f5987f40d62ade43527b51b62dee9d01353c", "filename": "gcc/calls.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab923ccffee2b00e18580a21e54cee3f3a0c24c/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab923ccffee2b00e18580a21e54cee3f3a0c24c/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=7ab923ccffee2b00e18580a21e54cee3f3a0c24c", "patch": "@@ -1595,6 +1595,13 @@ compute_argument_addresses (args, argblock, num_actuals)\n \t  args[i].stack_slot = gen_rtx_MEM (args[i].mode, addr);\n \t  set_mem_attributes (args[i].stack_slot,\n \t\t\t      TREE_TYPE (args[i].tree_value), 1);\n+\n+\t  /* Function incoming arguments may overlap with sibling call\n+\t     outgoing arguments and we cannot allow reordering of reads\n+\t     from function arguments with stores to outgoing arguments\n+\t     of sibling calls.  */\n+\t  MEM_ALIAS_SET (args[i].stack) = 0;\n+\t  MEM_ALIAS_SET (args[i].stack_slot) = 0;\n \t}\n     }\n }"}, {"sha": "07fa592a76fab7386686bfa5b61ac5cd32d38e55", "filename": "gcc/expr.c", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab923ccffee2b00e18580a21e54cee3f3a0c24c/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab923ccffee2b00e18580a21e54cee3f3a0c24c/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=7ab923ccffee2b00e18580a21e54cee3f3a0c24c", "patch": "@@ -3052,6 +3052,8 @@ emit_push_insn (x, mode, type, size, align, partial, reg, extra,\n       else\n #endif /* PUSH_ROUNDING */\n \t{\n+\t  rtx target;\n+\n \t  /* Otherwise make space on the stack and copy the data\n \t     to the address of that space.  */\n \n@@ -3086,8 +3088,6 @@ emit_push_insn (x, mode, type, size, align, partial, reg, extra,\n \t\t\t\t\t\t  skip));\n \t  if (current_function_check_memory_usage && ! in_check_memory_usage)\n \t    {\n-\t      rtx target;\n-\t      \n \t      in_check_memory_usage = 1;\n \t      target = copy_to_reg (temp);\n \t      if (GET_CODE (x) == MEM && type && AGGREGATE_TYPE_P (type))\n@@ -3104,27 +3104,29 @@ emit_push_insn (x, mode, type, size, align, partial, reg, extra,\n \t      in_check_memory_usage = 0;\n \t    }\n \n+\t    target = gen_rtx_MEM (BLKmode, temp);\n+\n+\t    if (type != 0)\n+\t      {\n+\t\tset_mem_attributes (target, type, 1);\n+\t\t/* Function incoming arguments may overlap with sibling call\n+\t\t   outgoing arguments and we cannot allow reordering of reads\n+\t\t   from function arguments with stores to outgoing arguments\n+\t\t   of sibling calls.  */\n+\t\tMEM_ALIAS_SET (target) = 0;\n+\t      }\n+\n \t  /* TEMP is the address of the block.  Copy the data there.  */\n \t  if (GET_CODE (size) == CONST_INT\n \t      && MOVE_BY_PIECES_P ((unsigned) INTVAL (size), align))\n \t    {\n-\t      rtx target = gen_rtx_MEM (BLKmode, temp);\n-\n-\t      if (type != 0)\n-\t\tset_mem_attributes (target, type, 1);\n-\n-\t      move_by_pieces (gen_rtx_MEM (BLKmode, temp), xinner,\n-\t\t\t      INTVAL (size), align);\n+\t      move_by_pieces (target, xinner, INTVAL (size), align);\n \t      goto ret;\n \t    }\n \t  else\n \t    {\n \t      rtx opalign = GEN_INT (align / BITS_PER_UNIT);\n \t      enum machine_mode mode;\n-\t      rtx target = gen_rtx_MEM (BLKmode, temp);\n-\n-\t      if (type != 0)\n-\t\tset_mem_attributes (target, type, 1);\n \n \t      for (mode = GET_CLASS_NARROWEST_MODE (MODE_INT);\n \t\t   mode != VOIDmode;\n@@ -3293,7 +3295,14 @@ emit_push_insn (x, mode, type, size, align, partial, reg, extra,\n \n       dest = gen_rtx_MEM (mode, addr);\n       if (type != 0)\n-\tset_mem_attributes (dest, type, 1);\n+\t{\n+\t  set_mem_attributes (dest, type, 1);\n+\t  /* Function incoming arguments may overlap with sibling call\n+\t     outgoing arguments and we cannot allow reordering of reads\n+\t     from function arguments with stores to outgoing arguments\n+\t     of sibling calls.  */\n+\t  MEM_ALIAS_SET (dest) = 0;\n+\t}\n \n       emit_move_insn (dest, x);\n "}]}