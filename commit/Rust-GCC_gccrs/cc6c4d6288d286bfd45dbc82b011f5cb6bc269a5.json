{"sha": "cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M2YzRkNjI4OGQyODZiZmQ0NWRiYzgyYjAxMWY1Y2I2YmMyNjlhNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-08-06T08:35:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-08-06T08:35:47Z"}, "message": "[multiple changes]\n\n2012-08-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch4.adb: Minor reformatting.\n\n2012-08-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-oscons-tmplt.c, xoscons.adb: Per the Single UNIX Specification,\n\ttypes cc_t, speed_t, and tcflag_t defined in <termios.h> all are\n\tunsigned types. Add required special handling to have their correct\n\tunsigned values in s-oscons.ads.\n\n2012-08-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* par-ch13.adb: Minor reformatting.\n\n2012-08-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-sercom.adb, g-sercom.ads, g-sercom-mingw.adb, g-sercom-linux.adb\n\t(Set): Add Local and Flow_Control settings.\n\n2012-08-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_attr.adb: Suppress saving of 'Old if assertions are not\n\tenabled.\n\nFrom-SVN: r190170", "tree": {"sha": "63a411a3cf6a846e49f7e994420974199304592a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63a411a3cf6a846e49f7e994420974199304592a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/comments", "author": null, "committer": null, "parents": [{"sha": "aa24a99beeeef149925c540f5f252a2e9b41b493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa24a99beeeef149925c540f5f252a2e9b41b493", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa24a99beeeef149925c540f5f252a2e9b41b493"}], "stats": {"total": 329, "additions": 221, "deletions": 108}, "files": [{"sha": "bb501ffd96e4260fd1309235bc4092e7434c7aa0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5", "patch": "@@ -1,3 +1,28 @@\n+2012-08-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch4.adb: Minor reformatting.\n+\n+2012-08-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-oscons-tmplt.c, xoscons.adb: Per the Single UNIX Specification,\n+\ttypes cc_t, speed_t, and tcflag_t defined in <termios.h> all are\n+\tunsigned types. Add required special handling to have their correct\n+\tunsigned values in s-oscons.ads.\n+\n+2012-08-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* par-ch13.adb: Minor reformatting.\n+\n+2012-08-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-sercom.adb, g-sercom.ads, g-sercom-mingw.adb, g-sercom-linux.adb\n+\t(Set): Add Local and Flow_Control settings.\n+\n+2012-08-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_attr.adb: Suppress saving of 'Old if assertions are not\n+\tenabled.\n+\n 2012-08-06  Yannick Moy  <moy@adacore.com>\n \n \t* sem_ch4.adb (Analyze_Selected_Component): Issue an error in"}, {"sha": "b0f409d071c963131580f22d80c9f9dc1936d88b", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5", "patch": "@@ -3379,6 +3379,13 @@ package body Exp_Attr is\n          Asn_Stm : Node_Id;\n \n       begin\n+         --  If assertions are disabled, no need to create the declaration\n+         --  that preserves the value.\n+\n+         if not Assertions_Enabled then\n+            return;\n+         end if;\n+\n          --  Find the nearest subprogram body, ignoring _Preconditions\n \n          Subp := N;"}, {"sha": "d485c1b75e3f5532a7229ad96b29e9547fa5f586", "filename": "gcc/ada/g-sercom-linux.adb", "status": "modified", "additions": 39, "deletions": 35, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fg-sercom-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fg-sercom-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sercom-linux.adb?ref=cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                    Copyright (C) 2007-2010, AdaCore                      --\n+--                    Copyright (C) 2007-2012, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,11 +38,14 @@ with Ada.Unchecked_Deallocation;\n with System;               use System;\n with System.Communication; use System.Communication;\n with System.CRTL;          use System.CRTL;\n+with System.OS_Constants;\n \n with GNAT.OS_Lib; use GNAT.OS_Lib;\n \n package body GNAT.Serial_Communications is\n \n+   package OSC renames System.OS_Constants;\n+\n    use type Interfaces.C.unsigned;\n \n    type Port_Data is new int;\n@@ -54,43 +57,26 @@ package body GNAT.Serial_Communications is\n    function fcntl (fd : int; cmd : int; value : int) return int;\n    pragma Import (C, fcntl, \"fcntl\");\n \n-   O_RDWR   : constant := 8#02#;\n-   O_NOCTTY : constant := 8#0400#;\n-   O_NDELAY : constant := 8#04000#;\n-   FNDELAY  : constant := O_NDELAY;\n-   F_SETFL  : constant := 4;\n-   TCSANOW  : constant := 0;\n-   TCIFLUSH : constant := 0;\n-   CLOCAL   : constant := 8#04000#;\n-   CREAD    : constant := 8#0200#;\n-   CSTOPB   : constant := 8#0100#;\n-   CRTSCTS  : constant := 8#020000000000#;\n-   PARENB   : constant := 8#00400#;\n-   PARODD   : constant := 8#01000#;\n-\n-   --  c_cc indexes\n-\n-   VTIME : constant := 5;\n-   VMIN  : constant := 6;\n-\n    C_Data_Rate : constant array (Data_Rate) of unsigned :=\n-                   (B1200   => 8#000011#,\n-                    B2400   => 8#000013#,\n-                    B4800   => 8#000014#,\n-                    B9600   => 8#000015#,\n-                    B19200  => 8#000016#,\n-                    B38400  => 8#000017#,\n-                    B57600  => 8#010001#,\n-                    B115200 => 8#010002#);\n+                   (B1200   => OSC.B1200,\n+                    B2400   => OSC.B2400,\n+                    B4800   => OSC.B4800,\n+                    B9600   => OSC.B9600,\n+                    B19200  => OSC.B19200,\n+                    B38400  => OSC.B38400,\n+                    B57600  => OSC.B57600,\n+                    B115200 => OSC.B115200);\n \n    C_Bits      : constant array (Data_Bits) of unsigned :=\n-                   (CS7 => 8#040#, CS8 => 8#060#);\n+                   (CS7 => OSC.CS7, CS8 => OSC.CS8);\n \n    C_Stop_Bits : constant array (Stop_Bits_Number) of unsigned :=\n-                   (One => 0, Two => CSTOPB);\n+                   (One => 0, Two => OSC.CSTOPB);\n \n    C_Parity    : constant array (Parity_Check) of unsigned :=\n-                   (None => 0, Odd => PARENB or PARODD, Even => PARENB);\n+                   (None => 0,\n+                    Odd  => OSC.PARENB or OSC.PARODD,\n+                    Even => OSC.PARENB);\n \n    procedure Raise_Error (Message : String; Error : Integer := Errno);\n    pragma No_Return (Raise_Error);\n@@ -114,6 +100,8 @@ package body GNAT.Serial_Communications is\n      (Port : out Serial_Port;\n       Name : Port_Name)\n    is\n+      use OSC;\n+\n       C_Name : constant String := String (Name) & ASCII.NUL;\n       Res    : int;\n \n@@ -184,8 +172,12 @@ package body GNAT.Serial_Communications is\n       Stop_Bits : Stop_Bits_Number := One;\n       Parity    : Parity_Check     := None;\n       Block     : Boolean          := True;\n+      Local     : Boolean          := True;\n+      Flow      : Flow_Control     := None;\n       Timeout   : Duration         := 10.0)\n    is\n+      use OSC;\n+\n       type termios is record\n          c_iflag  : unsigned;\n          c_oflag  : unsigned;\n@@ -229,12 +221,24 @@ package body GNAT.Serial_Communications is\n                                 or C_Bits (Bits)\n                                 or C_Stop_Bits (Stop_Bits)\n                                 or C_Parity (Parity)\n-                                or CLOCAL\n-                                or CREAD\n-                                or CRTSCTS;\n-      Current.c_lflag      := 0;\n+                                or CREAD;\n       Current.c_iflag      := 0;\n+      Current.c_lflag      := 0;\n       Current.c_oflag      := 0;\n+\n+      if Local then\n+         Current.c_cflag := Current.c_cflag or CLOCAL;\n+      end if;\n+\n+      case Flow is\n+         when None =>\n+            null;\n+         when RTS_CTS =>\n+            Current.c_cflag := Current.c_cflag or CRTSCTS;\n+         when Xon_Xoff =>\n+            Current.c_iflag := Current.c_iflag or IXON;\n+      end case;\n+\n       Current.c_ispeed     := Data_Rate_Value (Rate);\n       Current.c_ospeed     := Data_Rate_Value (Rate);\n       Current.c_cc (VMIN)  := char'Val (0);"}, {"sha": "726d21f6bbbde0cfa4837fd44da5e787b28f1e31", "filename": "gcc/ada/g-sercom-mingw.adb", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fg-sercom-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fg-sercom-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sercom-mingw.adb?ref=cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                    Copyright (C) 2007-2010, AdaCore                      --\n+--                    Copyright (C) 2007-2012, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -175,8 +175,12 @@ package body GNAT.Serial_Communications is\n       Stop_Bits : Stop_Bits_Number := One;\n       Parity    : Parity_Check     := None;\n       Block     : Boolean          := True;\n+      Local     : Boolean          := True;\n+      Flow      : Flow_Control     := None;\n       Timeout   : Duration         := 10.0)\n    is\n+      pragma Unreferenced (Local);\n+\n       Success      : BOOL;\n       Com_Time_Out : aliased COMMTIMEOUTS;\n       Com_Settings : aliased DCB;\n@@ -197,13 +201,26 @@ package body GNAT.Serial_Communications is\n       Com_Settings.BaudRate        := DWORD (Data_Rate_Value (Rate));\n       Com_Settings.fParity         := 1;\n       Com_Settings.fBinary         := Bits1 (System.Win32.TRUE);\n-      Com_Settings.fOutxCtsFlow    := 0;\n       Com_Settings.fOutxDsrFlow    := 0;\n       Com_Settings.fDsrSensitivity := 0;\n-      Com_Settings.fDtrControl     := DTR_CONTROL_DISABLE;\n-      Com_Settings.fOutX           := 0;\n+      Com_Settings.fDtrControl     := DTR_CONTROL_ENABLE;\n       Com_Settings.fInX            := 0;\n-      Com_Settings.fRtsControl     := RTS_CONTROL_DISABLE;\n+      Com_Settings.fRtsControl     := RTS_CONTROL_ENABLE;\n+\n+      case Flow is\n+         when None =>\n+            Com_Settings.fOutX        := 0;\n+            Com_Settings.fOutxCtsFlow := 0;\n+\n+         when RTS_CTS =>\n+            Com_Settings.fOutX        := 0;\n+            Com_Settings.fOutxCtsFlow := 1;\n+\n+         when Xon_Xoff =>\n+            Com_Settings.fOutX        := 1;\n+            Com_Settings.fOutxCtsFlow := 0;\n+      end case;\n+\n       Com_Settings.fAbortOnError   := 0;\n       Com_Settings.ByteSize        := BYTE (C_Bits (Bits));\n       Com_Settings.Parity          := BYTE (C_Parity (Parity));"}, {"sha": "c2b511c59c7194d6dcef598f83f0f2582e9d930f", "filename": "gcc/ada/g-sercom.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fg-sercom.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fg-sercom.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sercom.adb?ref=cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2007-2010, AdaCore                     --\n+--                     Copyright (C) 2007-2012, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -82,6 +82,8 @@ package body GNAT.Serial_Communications is\n       Stop_Bits : Stop_Bits_Number := One;\n       Parity    : Parity_Check     := None;\n       Block     : Boolean          := True;\n+      Local     : Boolean          := True;\n+      Flow      : Flow_Control     := None;\n       Timeout   : Duration         := 10.0)\n    is\n    begin"}, {"sha": "b2a63911e491c7f0cd71498ce6de8772c45dd379", "filename": "gcc/ada/g-sercom.ads", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fg-sercom.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fg-sercom.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sercom.ads?ref=cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                    Copyright (C) 2007-2010, AdaCore                      --\n+--                    Copyright (C) 2007-2012, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,6 +62,9 @@ package GNAT.Serial_Communications is\n    type Parity_Check is (None, Even, Odd);\n    --  Either no parity check or an even or odd parity\n \n+   type Flow_Control is (None, RTS_CTS, Xon_Xoff);\n+   --  No flow control, hardware flow control, software flow control\n+\n    type Serial_Port is new Ada.Streams.Root_Stream_Type with private;\n \n    procedure Open\n@@ -77,12 +80,17 @@ package GNAT.Serial_Communications is\n       Stop_Bits : Stop_Bits_Number := One;\n       Parity    : Parity_Check     := None;\n       Block     : Boolean          := True;\n+      Local     : Boolean          := True;\n+      Flow      : Flow_Control     := None;\n       Timeout   : Duration         := 10.0);\n    --  The communication port settings. If Block is set then a read call\n    --  will wait for the whole buffer to be filed. If Block is not set then\n-   --  the given Timeout (in seconds) is used. Note that the timeout precision\n-   --  may be limited on some implementation (e.g. on GNU/Linux the maximum\n-   --  precision is a tenth of seconds).\n+   --  the given Timeout (in seconds) is used. If Local is set then modem\n+   --  control lines (in particular DCD) are ignored (not supported on\n+   --  Windows).\n+\n+   --  Note that the timeout precision may be limited on some implementation\n+   --  (e.g. on GNU/Linux the maximum precision is a tenth of seconds).\n \n    overriding procedure Read\n      (Port   : in out Serial_Port;"}, {"sha": "d3ed8515c388a0d6b4b5b89b6e98c69a2314bb77", "filename": "gcc/ada/par-ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fpar-ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fpar-ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch13.adb?ref=cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5", "patch": "@@ -467,7 +467,7 @@ package body Ch13 is\n                Attr_Name := Token_Name;\n \n                --  Note that the parser must complain in case of an internal\n-               --  attribute names that comes from source since internal names\n+               --  attribute name that comes from source since internal names\n                --  are meant to be used only by the compiler.\n \n                if not Is_Attribute_Name (Attr_Name)"}, {"sha": "062f514b4614cebc27bf8542b7b1e707efb7de59", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 63, "deletions": 44, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5", "patch": "@@ -169,6 +169,9 @@ int counter = 0;\n #define CND(name,comment) \\\n   printf (\"\\n->CND:$%d:\" #name \":$%d:\" comment, __LINE__, ((int) _VAL (name)));\n \n+#define CNU(name,comment) \\\n+  printf (\"\\n->CNU:$%d:\" #name \":$%u:\" comment, __LINE__, ((unsigned int) _VAL (name)));\n+\n #define CNS(name,comment) \\\n   printf (\"\\n->CNS:$%d:\" #name \":\" name \":\" comment, __LINE__);\n \n@@ -185,6 +188,13 @@ int counter = 0;\n   : : \"i\" (__LINE__), \"i\" ((int) name));\n /* Decimal constant in the range of type \"int\" */\n \n+#define CNU(name, comment) \\\n+  asm volatile(\"\\n->CNU:%0:\" #name \":%1:\" comment \\\n+  : : \"i\" (__LINE__), \"i\" ((int) name));\n+/* Decimal constant in the range of type \"unsigned int\" (note, assembler\n+ * always wants a signed int, we convert back in xoscons).\n+ */\n+\n #define CNS(name, comment) \\\n   asm volatile(\"\\n->CNS:%0:\" #name \":\" name \":\" comment \\\n   : : \"i\" (__LINE__));\n@@ -250,9 +260,9 @@ package System.OS_Constants is\n \n /*\n \n-   -----------------------------\n-   -- Platform identification --\n-   -----------------------------\n+   ---------------------------------\n+   -- General platform parameters --\n+   ---------------------------------\n \n    type OS_Type is (Windows, VMS, Other_OS);\n */\n@@ -273,6 +283,10 @@ C(\"Target_OS\", OS_Type, TARGET_OS, \"\")\n */\n #define Target_Name TARGET\n CST(Target_Name, \"\")\n+\n+#define sizeof_unsigned_int sizeof (unsigned int)\n+CND(sizeof_unsigned_int, \"Size of unsigned int\")\n+\n /*\n \n    -------------------\n@@ -630,210 +644,215 @@ CND(TCSANOW, \"Immediate\")\n #endif\n CND(TCIFLUSH, \"Flush input\")\n \n+#ifndef IXON\n+# define IXON -1\n+#endif\n+CNU(IXON, \"Output sw flow control\")\n+\n #ifndef CLOCAL\n # define CLOCAL -1\n #endif\n-CND(CLOCAL, \"Local\")\n+CNU(CLOCAL, \"Local\")\n \n #ifndef CRTSCTS\n # define CRTSCTS -1\n #endif\n-CND(CRTSCTS, \"Hardware flow control\")\n+CNU(CRTSCTS, \"Output hw flow control\")\n \n #ifndef CREAD\n # define CREAD -1\n #endif\n-CND(CREAD, \"Read\")\n+CNU(CREAD, \"Read\")\n \n #ifndef CS5\n # define CS5 -1\n #endif\n-CND(CS5, \"5 data bits\")\n+CNU(CS5, \"5 data bits\")\n \n #ifndef CS6\n # define CS6 -1\n #endif\n-CND(CS6, \"6 data bits\")\n+CNU(CS6, \"6 data bits\")\n \n #ifndef CS7\n # define CS7 -1\n #endif\n-CND(CS7, \"7 data bits\")\n+CNU(CS7, \"7 data bits\")\n \n #ifndef CS8\n # define CS8 -1\n #endif\n-CND(CS8, \"8 data bits\")\n+CNU(CS8, \"8 data bits\")\n \n #ifndef CSTOPB\n # define CSTOPB -1\n #endif\n-CND(CSTOPB, \"2 stop bits\")\n+CNU(CSTOPB, \"2 stop bits\")\n \n #ifndef PARENB\n # define PARENB -1\n #endif\n-CND(PARENB, \"Parity enable\")\n+CNU(PARENB, \"Parity enable\")\n \n #ifndef PARODD\n # define PARODD -1\n #endif\n-CND(PARODD, \"Parity odd\")\n+CNU(PARODD, \"Parity odd\")\n \n #ifndef B0\n # define B0 -1\n #endif\n-CND(B0, \"0 bps\")\n+CNU(B0, \"0 bps\")\n \n #ifndef B50\n # define B50 -1\n #endif\n-CND(B50, \"50 bps\")\n+CNU(B50, \"50 bps\")\n \n #ifndef B75\n # define B75 -1\n #endif\n-CND(B75, \"75 bps\")\n+CNU(B75, \"75 bps\")\n \n #ifndef B110\n # define B110 -1\n #endif\n-CND(B110, \"110 bps\")\n+CNU(B110, \"110 bps\")\n \n #ifndef B134\n # define B134 -1\n #endif\n-CND(B134, \"134 bps\")\n+CNU(B134, \"134 bps\")\n \n #ifndef B150\n # define B150 -1\n #endif\n-CND(B150, \"150 bps\")\n+CNU(B150, \"150 bps\")\n \n #ifndef B200\n # define B200 -1\n #endif\n-CND(B200, \"200 bps\")\n+CNU(B200, \"200 bps\")\n \n #ifndef B300\n # define B300 -1\n #endif\n-CND(B300, \"300 bps\")\n+CNU(B300, \"300 bps\")\n \n #ifndef B600\n # define B600 -1\n #endif\n-CND(B600, \"600 bps\")\n+CNU(B600, \"600 bps\")\n \n #ifndef B1200\n # define B1200 -1\n #endif\n-CND(B1200, \"1200 bps\")\n+CNU(B1200, \"1200 bps\")\n \n #ifndef B1800\n # define B1800 -1\n #endif\n-CND(B1800, \"1800 bps\")\n+CNU(B1800, \"1800 bps\")\n \n #ifndef B2400\n # define B2400 -1\n #endif\n-CND(B2400, \"2400 bps\")\n+CNU(B2400, \"2400 bps\")\n \n #ifndef B4800\n # define B4800 -1\n #endif\n-CND(B4800, \"4800 bps\")\n+CNU(B4800, \"4800 bps\")\n \n #ifndef B9600\n # define B9600 -1\n #endif\n-CND(B9600, \"9600 bps\")\n+CNU(B9600, \"9600 bps\")\n \n #ifndef B19200\n # define B19200 -1\n #endif\n-CND(B19200, \"19200 bps\")\n+CNU(B19200, \"19200 bps\")\n \n #ifndef B38400\n # define B38400 -1\n #endif\n-CND(B38400, \"38400 bps\")\n+CNU(B38400, \"38400 bps\")\n \n #ifndef B57600\n # define B57600 -1\n #endif\n-CND(B57600, \"57600 bps\")\n+CNU(B57600, \"57600 bps\")\n \n #ifndef B115200\n # define B115200 -1\n #endif\n-CND(B115200, \"115200 bps\")\n+CNU(B115200, \"115200 bps\")\n \n #ifndef B230400\n # define B230400 -1\n #endif\n-CND(B230400, \"230400 bps\")\n+CNU(B230400, \"230400 bps\")\n \n #ifndef B460800\n # define B460800 -1\n #endif\n-CND(B460800, \"460800 bps\")\n+CNU(B460800, \"460800 bps\")\n \n #ifndef B500000\n # define B500000 -1\n #endif\n-CND(B500000, \"500000 bps\")\n+CNU(B500000, \"500000 bps\")\n \n #ifndef B576000\n # define B576000 -1\n #endif\n-CND(B576000, \"576000 bps\")\n+CNU(B576000, \"576000 bps\")\n \n #ifndef B921600\n # define B921600 -1\n #endif\n-CND(B921600, \"921600 bps\")\n+CNU(B921600, \"921600 bps\")\n \n #ifndef B1000000\n # define B1000000 -1\n #endif\n-CND(B1000000, \"1000000 bps\")\n+CNU(B1000000, \"1000000 bps\")\n \n #ifndef B1152000\n # define B1152000 -1\n #endif\n-CND(B1152000, \"1152000 bps\")\n+CNU(B1152000, \"1152000 bps\")\n \n #ifndef B1500000\n # define B1500000 -1\n #endif\n-CND(B1500000, \"1500000 bps\")\n+CNU(B1500000, \"1500000 bps\")\n \n #ifndef B2000000\n # define B2000000 -1\n #endif\n-CND(B2000000, \"2000000 bps\")\n+CNU(B2000000, \"2000000 bps\")\n \n #ifndef B2500000\n # define B2500000 -1\n #endif\n-CND(B2500000, \"2500000 bps\")\n+CNU(B2500000, \"2500000 bps\")\n \n #ifndef B3000000\n # define B3000000 -1\n #endif\n-CND(B3000000, \"3000000 bps\")\n+CNU(B3000000, \"3000000 bps\")\n \n #ifndef B3500000\n # define B3500000 -1\n #endif\n-CND(B3500000, \"3500000 bps\")\n+CNU(B3500000, \"3500000 bps\")\n \n #ifndef B4000000\n # define B4000000 -1\n #endif\n-CND(B4000000, \"4000000 bps\")\n+CNU(B4000000, \"4000000 bps\")\n \n /*\n "}, {"sha": "d1cdeeabf5ffdda4daac53b73b8f4071f3bbb489", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5", "patch": "@@ -4343,9 +4343,8 @@ package body Sem_Ch4 is\n                      --  Emit appropriate message. Gigi will replace the\n                      --  node subsequently with the appropriate Raise.\n \n-                     --  In Alfa mode, this is an made into an error to\n-                     --  simplify the treatment of the formal verification\n-                     --  backend.\n+                     --  In Alfa mode, this is made into an error to simplify\n+                     --  the processing of the formal verification backend.\n \n                      if Alfa_Mode then\n                         Apply_Compile_Time_Constraint_Error"}, {"sha": "73e332200811dd3836e90f8dc8b228c47323618f", "filename": "gcc/ada/xoscons.adb", "status": "modified", "additions": 47, "deletions": 15, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fxoscons.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5/gcc%2Fada%2Fxoscons.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxoscons.adb?ref=cc6c4d6288d286bfd45dbc82b011f5cb6bc269a5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2008-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2008-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -73,13 +73,18 @@ procedure XOSCons is\n \n    type Asm_Info_Kind is\n      (CND,     --  Named number (decimal)\n+      CNU,     --  Named number (decimal, unsigned)\n       CNS,     --  Named number (freeform text)\n       C,       --  Constant object\n       TXT);    --  Literal text\n    --  Recognized markers found in assembly file. These markers are produced by\n    --  the same-named macros from the C template.\n \n+   subtype Asm_Int_Kind is Asm_Info_Kind range CND .. CNU;\n+   --  Asm_Info_Kind values with int values in input\n+\n    subtype Named_Number is Asm_Info_Kind range CND .. CNS;\n+   --  Asm_Info_Kind values with named numbers in output\n \n    type Asm_Info (Kind : Asm_Info_Kind := TXT) is record\n       Line_Number   : Integer;\n@@ -98,7 +103,7 @@ procedure XOSCons is\n       --  Value for CNS / C constant\n \n       Int_Value     : Int_Value_Type;\n-      --  Value for CND constant\n+      --  Value for CND / CNU constant\n \n       Comment       : String_Access;\n       --  Additional descriptive comment for constant, or free-form text (TXT)\n@@ -116,6 +121,9 @@ procedure XOSCons is\n    Max_Constant_Type_Len  : Natural := 0;\n    --  Lengths of longest name and longest value\n \n+   Size_Of_Unsigned_Int : Integer := 0;\n+   --  Size of unsigned int on target\n+\n    type Language is (Lang_Ada, Lang_C);\n \n    procedure Output_Info\n@@ -195,11 +203,12 @@ procedure XOSCons is\n                               - Info.Constant_Name'Length));\n          end case;\n \n-         if Info.Kind = CND then\n+         if Info.Kind in Asm_Int_Kind then\n             if not Info.Int_Value.Positive then\n                Put (\"-\");\n             end if;\n             Put (Trim (Info.Int_Value.Abs_Value'Img, Side => Left));\n+\n          else\n             declare\n                Is_String : constant Boolean :=\n@@ -246,7 +255,7 @@ procedure XOSCons is\n       procedure Find_Colon (Index : in out Integer);\n       --  Increment Index until the next colon in Line\n \n-      function Parse_Int (S : String) return Int_Value_Type;\n+      function Parse_Int (S : String; K : Asm_Int_Kind) return Int_Value_Type;\n       --  Parse a decimal number, preceded by an optional '$' or '#' character,\n       --  and return its value.\n \n@@ -275,9 +284,12 @@ procedure XOSCons is\n       -- Parse_Int --\n       ---------------\n \n-      function Parse_Int (S : String) return Int_Value_Type is\n+      function Parse_Int\n+        (S : String;\n+         K : Asm_Int_Kind) return Int_Value_Type\n+      is\n          First    : Integer := S'First;\n-         Positive : Boolean;\n+         Result   : Int_Value_Type;\n       begin\n          --  On some platforms, immediate integer values are prefixed with\n          --  a $ or # character in assembly output.\n@@ -287,14 +299,25 @@ procedure XOSCons is\n          end if;\n \n          if S (First) = '-' then\n-            Positive := False;\n+            Result.Positive := False;\n             First    := First + 1;\n          else\n-            Positive := True;\n+            Result.Positive := True;\n+         end if;\n+\n+         Result.Abs_Value := Long_Unsigned'Value (S (First .. S'Last));\n+\n+         if not Result.Positive and then K = CNU then\n+            --  Negative value, but unsigned expected: take 2's complement\n+            --  reciprocical value.\n+\n+            Result.Abs_Value := ((not Result.Abs_Value) + 1)\n+                                  and\n+                                (Shift_Left (1, Size_Of_Unsigned_Int) - 1);\n+            Result.Positive  := True;\n          end if;\n \n-         return (Positive  => Positive,\n-                 Abs_Value => Long_Unsigned'Value (S (First .. S'Last)));\n+         return Result;\n \n       exception\n          when E : others =>\n@@ -315,10 +338,10 @@ procedure XOSCons is\n          Find_Colon (Index2);\n \n          Info.Line_Number :=\n-           Integer (Parse_Int (Line (Index1 .. Index2 - 1)).Abs_Value);\n+           Integer (Parse_Int (Line (Index1 .. Index2 - 1), CNU).Abs_Value);\n \n          case Info.Kind is\n-            when CND | CNS | C =>\n+            when CND | CNU | CNS | C =>\n                Index1 := Index2 + 1;\n                Find_Colon (Index2);\n \n@@ -340,15 +363,24 @@ procedure XOSCons is\n                   Find_Colon (Index2);\n                end if;\n \n-               if Info.Kind = CND then\n-                  Info.Int_Value := Parse_Int (Line (Index1 .. Index2 - 1));\n-                  Info.Value_Len := Index2 - Index1 - 1;\n+               if Info.Kind = CND or else Info.Kind = CNU then\n+                  Info.Int_Value :=\n+                    Parse_Int (Line (Index1 .. Index2 - 1), Info.Kind);\n+                  Info.Value_Len := Info.Int_Value.Abs_Value'Img'Length - 1;\n+                  if not Info.Int_Value.Positive then\n+                     Info.Value_Len := Info.Value_Len + 1;\n+                  end if;\n \n                else\n                   Info.Text_Value := Field_Alloc;\n                   Info.Value_Len  := Info.Text_Value'Length;\n                end if;\n \n+               if Info.Constant_Name.all = \"sizeof_unsigned_int\" then\n+                  Size_Of_Unsigned_Int :=\n+                    8 * Integer (Info.Int_Value.Abs_Value);\n+               end if;\n+\n             when others =>\n                null;\n          end case;"}]}