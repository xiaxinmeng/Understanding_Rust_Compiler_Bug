{"sha": "8cac4d85875ff23588908341fdd69fb4c39a7210", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNhYzRkODU4NzVmZjIzNTg4OTA4MzQxZmRkNjlmYjRjMzlhNzIxMA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.com", "date": "2016-11-24T12:54:56Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2016-11-24T12:54:56Z"}, "message": "common.opt (flimit-function-alignment): New.\n\ngcc/\n\t* common.opt (flimit-function-alignment): New.\n\t* doc/invoke.texi (-flimit-function-alignment): Document.\n\t* emit-rtl.h (struct rtl_data): Add max_insn_address field.\n\t* final.c (shorten_branches): Set it.\n\t* varasm.c (assemble_start_function): Limit alignment if\n\trequested.\n\ngcc/testsuite/\n\t* gcc.target/i386/align-limit.c: New test.\n\nFrom-SVN: r242836", "tree": {"sha": "931322bd6dd2151c71ebdfbe6eb4426040b2f49b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/931322bd6dd2151c71ebdfbe6eb4426040b2f49b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cac4d85875ff23588908341fdd69fb4c39a7210", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cac4d85875ff23588908341fdd69fb4c39a7210", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cac4d85875ff23588908341fdd69fb4c39a7210", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cac4d85875ff23588908341fdd69fb4c39a7210/comments", "author": null, "committer": null, "parents": [{"sha": "eb2afa1a80613d37aa12fdd5a0624b45fdef9377", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb2afa1a80613d37aa12fdd5a0624b45fdef9377", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb2afa1a80613d37aa12fdd5a0624b45fdef9377"}], "stats": {"total": 47, "additions": 43, "deletions": 4}, "files": [{"sha": "92c2c9e00155c53f539fb6b8d3e5a0d914c3e400", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac4d85875ff23588908341fdd69fb4c39a7210/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac4d85875ff23588908341fdd69fb4c39a7210/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8cac4d85875ff23588908341fdd69fb4c39a7210", "patch": "@@ -1,3 +1,12 @@\n+2016-11-24  Bernd Schmidt  <bschmidt@redhat.com>\n+\n+\t* common.opt (flimit-function-alignment): New.\n+\t* doc/invoke.texi (-flimit-function-alignment): Document.\n+\t* emit-rtl.h (struct rtl_data): Add max_insn_address field.\n+\t* final.c (shorten_branches): Set it.\n+\t* varasm.c (assemble_start_function): Limit alignment if\n+\trequested.\n+\n 2016-11-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/71595"}, {"sha": "b350b07b9d8cfc99f9a9b0c16517c3dfefc7382c", "filename": "gcc/common.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac4d85875ff23588908341fdd69fb4c39a7210/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac4d85875ff23588908341fdd69fb4c39a7210/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=8cac4d85875ff23588908341fdd69fb4c39a7210", "patch": "@@ -924,6 +924,9 @@ Align the start of functions.\n falign-functions=\n Common RejectNegative Joined UInteger Var(align_functions)\n \n+flimit-function-alignment\n+Common Report Var(flag_limit_function_alignment) Optimization Init(0)\n+\n falign-jumps\n Common Report Var(align_jumps,0) Optimization UInteger\n Align labels which are only reached by jumping."}, {"sha": "34c7187e46dfd9dd04fea7b30b428145a0db69bb", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac4d85875ff23588908341fdd69fb4c39a7210/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac4d85875ff23588908341fdd69fb4c39a7210/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8cac4d85875ff23588908341fdd69fb4c39a7210", "patch": "@@ -373,7 +373,7 @@ Objective-C and Objective-C++ Dialects}.\n -fno-ira-share-spill-slots @gol\n -fisolate-erroneous-paths-dereference -fisolate-erroneous-paths-attribute @gol\n -fivopts -fkeep-inline-functions -fkeep-static-functions @gol\n--fkeep-static-consts -flive-range-shrinkage @gol\n+-fkeep-static-consts -flimit-function-alignment -flive-range-shrinkage @gol\n -floop-block -floop-interchange -floop-strip-mine @gol\n -floop-unroll-and-jam -floop-nest-optimize @gol\n -floop-parallelize-all -flra-remat -flto -flto-compression-level @gol\n@@ -8513,6 +8513,12 @@ If @var{n} is not specified or is zero, use a machine-dependent default.\n \n Enabled at levels @option{-O2}, @option{-O3}.\n \n+@item -flimit-function-alignment\n+If this option is enabled, the compiler tries to avoid unnecessarily\n+overaligning functions. It attempts to instruct the assembler to align\n+by the amount specified by @option{-falign-functions}, but not to\n+skip more bytes than the size of the function.\n+\n @item -falign-labels\n @itemx -falign-labels=@var{n}\n @opindex falign-labels"}, {"sha": "a919bf072ab56e4557e83213d75bc76d08ae1b47", "filename": "gcc/emit-rtl.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac4d85875ff23588908341fdd69fb4c39a7210/gcc%2Femit-rtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac4d85875ff23588908341fdd69fb4c39a7210/gcc%2Femit-rtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.h?ref=8cac4d85875ff23588908341fdd69fb4c39a7210", "patch": "@@ -288,6 +288,9 @@ struct GTY(()) rtl_data {\n      to eliminable regs (like the frame pointer) are set if an asm\n      sets them.  */\n   HARD_REG_SET asm_clobbers;\n+\n+  /* The highest address seen during shorten_branches.  */\n+  int max_insn_address;\n };\n \n #define return_label (crtl->x_return_label)"}, {"sha": "91acb01d96b196c69477e1abd2c0ec09e6af097f", "filename": "gcc/final.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac4d85875ff23588908341fdd69fb4c39a7210/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac4d85875ff23588908341fdd69fb4c39a7210/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=8cac4d85875ff23588908341fdd69fb4c39a7210", "patch": "@@ -1463,7 +1463,7 @@ shorten_branches (rtx_insn *first)\n       if (!increasing)\n \tbreak;\n     }\n-\n+  crtl->max_insn_address = insn_current_address;\n   free (varying_length);\n }\n "}, {"sha": "694e59dfd0fa105b3e3e4780fb9bc543ba70872c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac4d85875ff23588908341fdd69fb4c39a7210/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac4d85875ff23588908341fdd69fb4c39a7210/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8cac4d85875ff23588908341fdd69fb4c39a7210", "patch": "@@ -1,3 +1,7 @@\n+2016-11-24  Bernd Schmidt  <bschmidt@redhat.com>\n+\n+\t* gcc.target/i386/align-limit.c: New test.\n+\n 2016-11-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/71595"}, {"sha": "e34baf01f29aa24cffe9586346b4c6ede745ddf8", "filename": "gcc/testsuite/gcc.target/i386/align-limit.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac4d85875ff23588908341fdd69fb4c39a7210/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Falign-limit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac4d85875ff23588908341fdd69fb4c39a7210/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Falign-limit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Falign-limit.c?ref=8cac4d85875ff23588908341fdd69fb4c39a7210", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -falign-functions=64 -flimit-function-alignment\" } */\n+/* { dg-final { scan-assembler \".p2align 6,,1\" } } */\n+/* { dg-final { scan-assembler-not \".p2align 6,,63\" } } */\n+\n+void\n+test_func (void)\n+{\n+}"}, {"sha": "54e06acd542a3bec18ef7cd488b8ec3a97a32c48", "filename": "gcc/varasm.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cac4d85875ff23588908341fdd69fb4c39a7210/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cac4d85875ff23588908341fdd69fb4c39a7210/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=8cac4d85875ff23588908341fdd69fb4c39a7210", "patch": "@@ -1791,9 +1791,14 @@ assemble_start_function (tree decl, const char *fnname)\n       && align_functions_log > align\n       && optimize_function_for_speed_p (cfun))\n     {\n+      int align_log = align_functions_log;\n+      int max_skip = align_functions - 1;\n+      if (flag_limit_function_alignment && crtl->max_insn_address > 0\n+\t  && max_skip >= crtl->max_insn_address)\n+\tmax_skip = crtl->max_insn_address - 1;\n+\n #ifdef ASM_OUTPUT_MAX_SKIP_ALIGN\n-      ASM_OUTPUT_MAX_SKIP_ALIGN (asm_out_file,\n-\t\t\t\t align_functions_log, align_functions - 1);\n+      ASM_OUTPUT_MAX_SKIP_ALIGN (asm_out_file, align_log, max_skip);\n #else\n       ASM_OUTPUT_ALIGN (asm_out_file, align_functions_log);\n #endif"}]}