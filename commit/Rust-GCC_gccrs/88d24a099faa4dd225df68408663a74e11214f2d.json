{"sha": "88d24a099faa4dd225df68408663a74e11214f2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhkMjRhMDk5ZmFhNGRkMjI1ZGY2ODQwODY2M2E3NGUxMTIxNGYyZA==", "commit": {"author": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2015-01-09T13:26:26Z"}, "committer": {"name": "Sebastian Huber", "email": "sh@gcc.gnu.org", "date": "2015-01-09T13:26:26Z"}, "message": "typeof-2.c: Add checks for non-atomic types.\n\ngcc/testsuite/gcc.dg/typeof-2.c\n\ngcc/testsuite/ChangeLog\n\n\t* gcc.dg/typeof-2.c: Add checks for non-atomic types.\n\nFrom-SVN: r219381", "tree": {"sha": "79ce12b224cae12a453f940ad5728842f81ddb78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79ce12b224cae12a453f940ad5728842f81ddb78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88d24a099faa4dd225df68408663a74e11214f2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88d24a099faa4dd225df68408663a74e11214f2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88d24a099faa4dd225df68408663a74e11214f2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88d24a099faa4dd225df68408663a74e11214f2d/comments", "author": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f2782497acb6efa025c1f832a37a0afeb3925f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f2782497acb6efa025c1f832a37a0afeb3925f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f2782497acb6efa025c1f832a37a0afeb3925f7"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "a529f19205936730938f7f0fb7ab44141848fce3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88d24a099faa4dd225df68408663a74e11214f2d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88d24a099faa4dd225df68408663a74e11214f2d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=88d24a099faa4dd225df68408663a74e11214f2d", "patch": "@@ -1,3 +1,7 @@\n+2015-01-09  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* gcc.dg/typeof-2.c: Add checks for non-atomic types.\n+\n 2015-01-09  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/64410"}, {"sha": "21ef5b0b865e661de8a4bb9364fdf9ccbea7c836", "filename": "gcc/testsuite/gcc.dg/typeof-2.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88d24a099faa4dd225df68408663a74e11214f2d/gcc%2Ftestsuite%2Fgcc.dg%2Ftypeof-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88d24a099faa4dd225df68408663a74e11214f2d/gcc%2Ftestsuite%2Fgcc.dg%2Ftypeof-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftypeof-2.c?ref=88d24a099faa4dd225df68408663a74e11214f2d", "patch": "@@ -2,6 +2,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-std=c11\" } */\n \n+/* Check that the qualifiers are discarded for atomic types. */\n+\n extern int i;\n \n extern int * p;\n@@ -26,3 +28,32 @@ void f(void)\n   __auto_type ari = ri;\n   int **pari = &ari;\n }\n+\n+/* Check that the qualifiers are preserved for non-atomic types. */\n+\n+extern int const j;\n+\n+extern int volatile k;\n+\n+extern int * restrict q;\n+\n+extern int const nci;\n+extern __typeof (nci) j;\n+\n+extern int volatile nvi;\n+extern __typeof (nvi) k;\n+\n+extern int * restrict nri;\n+extern __typeof (nri) q;\n+\n+void g(void)\n+{\n+  __auto_type aci = nci;\n+  int const *paci = &aci;\n+\n+  __auto_type avi = nvi;\n+  int volatile *pavi = &avi;\n+\n+  __auto_type ari = nri;\n+  int * restrict *pari = &ari;\n+}"}]}