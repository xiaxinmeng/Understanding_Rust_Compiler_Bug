{"sha": "1e748a2b15347a0e5c9fd525218233abd773b46e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU3NDhhMmIxNTM0N2EwZTVjOWZkNTI1MjE4MjMzYWJkNzczYjQ2ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2004-07-01T19:45:28Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-07-01T19:45:28Z"}, "message": "* gimplify.c (gimplify_one_sizepos): Don't do anything if any VAR_DECL.\n\nFrom-SVN: r83998", "tree": {"sha": "525629489add52675bfec66f2826068c0530d833", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/525629489add52675bfec66f2826068c0530d833"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e748a2b15347a0e5c9fd525218233abd773b46e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e748a2b15347a0e5c9fd525218233abd773b46e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e748a2b15347a0e5c9fd525218233abd773b46e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e748a2b15347a0e5c9fd525218233abd773b46e/comments", "author": null, "committer": null, "parents": [{"sha": "8e6b96d398270fe98716792740ac2d50d2a464c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e6b96d398270fe98716792740ac2d50d2a464c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e6b96d398270fe98716792740ac2d50d2a464c4"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "2ac7f335f471ad3e81bf9a74172bf05355042dcc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e748a2b15347a0e5c9fd525218233abd773b46e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e748a2b15347a0e5c9fd525218233abd773b46e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e748a2b15347a0e5c9fd525218233abd773b46e", "patch": "@@ -1,5 +1,7 @@\n 2004-07-01  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* gimplify.c (gimplify_one_sizepos): Don't do anything if any VAR_DECL.\n+\n \t* tree-pretty-print.c (dump_generic_node, case ARRAY_REF): Use\n \taccess functions for lower bound and element size and only output\n \tif lower bound nonzero or element size not same as that of type."}, {"sha": "ed1af19a34490465f55f1bd34644edc9d5e61d0d", "filename": "gcc/gimplify.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e748a2b15347a0e5c9fd525218233abd773b46e/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e748a2b15347a0e5c9fd525218233abd773b46e/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=1e748a2b15347a0e5c9fd525218233abd773b46e", "patch": "@@ -4069,8 +4069,12 @@ void\n gimplify_one_sizepos (tree *expr_p, tree *stmt_p)\n {\n   /* We don't do anything if the value isn't there, is constant, or contains\n-     A PLACEHOLDER_EXPR.  */\n+     A PLACEHOLDER_EXPR.  We also don't want to do anything if it's already\n+     a VAR_DECL.  If it's a VAR_DECL from another function, the gimplfier\n+     will want to replace it with a new variable, but that will cause problems\n+     if this type is from outside the function.  It's OK to have that here.  */\n   if (*expr_p == NULL_TREE || TREE_CONSTANT (*expr_p)\n+      || TREE_CODE (*expr_p) == VAR_DECL\n       || CONTAINS_PLACEHOLDER_P (*expr_p))\n     return;\n "}]}