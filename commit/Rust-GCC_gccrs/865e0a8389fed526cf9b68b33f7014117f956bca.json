{"sha": "865e0a8389fed526cf9b68b33f7014117f956bca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY1ZTBhODM4OWZlZDUyNmNmOWI2OGIzM2Y3MDE0MTE3Zjk1NmJjYQ==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2001-05-24T04:37:54Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2001-05-24T04:37:54Z"}, "message": "This is still broken.  Do not use it yet\n\nFrom-SVN: r42518", "tree": {"sha": "1b3f684c41cb391effb5426399911763e4902f2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b3f684c41cb391effb5426399911763e4902f2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/865e0a8389fed526cf9b68b33f7014117f956bca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/865e0a8389fed526cf9b68b33f7014117f956bca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/865e0a8389fed526cf9b68b33f7014117f956bca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/865e0a8389fed526cf9b68b33f7014117f956bca/comments", "author": null, "committer": null, "parents": [{"sha": "c4df8f8c8930937a38cebf4a05377384f9a97885", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4df8f8c8930937a38cebf4a05377384f9a97885", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4df8f8c8930937a38cebf4a05377384f9a97885"}], "stats": {"total": 67, "additions": 34, "deletions": 33}, "files": [{"sha": "592a69b1f08451522409a8cbf5797e4da03d3638", "filename": "gcc/fixinc/check.tpl", "status": "modified", "additions": 34, "deletions": 33, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/865e0a8389fed526cf9b68b33f7014117f956bca/gcc%2Ffixinc%2Fcheck.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/865e0a8389fed526cf9b68b33f7014117f956bca/gcc%2Ffixinc%2Fcheck.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fcheck.tpl?ref=865e0a8389fed526cf9b68b33f7014117f956bca", "patch": "@@ -1,4 +1,4 @@\n-[= autogen template sh=check.sh =]\n+[= autogen5 template sh=check.sh =]\n [=\n #\n #  This file contanes the shell template to run tests on the fixes\n@@ -30,77 +30,78 @@ mkdir ${DESTDIR} ${SRCDIR}\n   set +e\n   for f in [=\n \n-  _EVAL fix.files _stack _join \"echo `\n+  (shellf \"echo `\n \n   for f in %s\n   do case $f in\n      */* ) echo $f | sed 's;/[^/]*$;;' ;;\n      esac\n   done | sort -u\n \n-  ` \" _printf _shell =]\n+  ` \" (join \" \" (stack \"fix.files\"))  ) =]\n   do\n     mkdir $f || mkdir -p $f\n   done ) > /dev/null 2>&1\n \n cd inc\n [=\n \n-_FOR fix =][=\n+FOR fix =][=\n \n-  _IF test_text _count 1 > =]\n+  IF (> (count \"test_text\") 1) =]\n #\n-#  [=hackname=] has [=_EVAL test_text _count=] tests\n+#  [=hackname=] has [=(count \"test_text\")=] tests\n #\n sfile=[=\n-    _IF files _exist =][=\n-      files[0] =][=\n-    _ELSE =]testing.h[=\n-    _ENDIF =][=\n-    _FOR test_text FROM 1 =]\n-dfile=`dirname $sfile`/[=hackname \"#_A-Z\" \"#-a-z\" _tr=]-[=_EVAL _index=].h\n+    IF (exist? \"files\") =][=\n+      files[] =][=\n+    ELSE  =]testing.h[=\n+    ENDIF =][=\n+    FOR test_text FROM 1 =]\n+dfile=`dirname $sfile`/[=(string-tr! (get \"hackname\") \"_A-Z\" \"-a-z\")\n+                        =]-[=(for-index)=].h\n cat >> $sfile <<_HACK_EOF_\n \n \n-#if defined( [=hackname _up=]_CHECK_[=_EVAL _index=] )\n+#if defined( [=(string-upcase! (get \"hackname\"))=]_CHECK_[=(for-index)=] )\n [=test_text=]\n-#endif  /* [=hackname _up=]_CHECK_[=_EVAL _index=] */\n+#endif  /* [=(string-upcase! (get \"hackname\"))=]_CHECK_[=(for-index)=] */\n _HACK_EOF_\n echo $sfile | ../../fixincl\n mv -f $sfile $dfile\n [ -f ${DESTDIR}/$sfile ] && mv ${DESTDIR}/$sfile ${DESTDIR}/$dfile[=\n-    /test_text =][=\n-  _ENDIF =][=\n+    ENDFOR  test_text =][=\n+  ENDIF               =][=\n \n-/fix\n+ENDFOR  fix\n \n =][=\n \n-_FOR fix =][=\n+FOR fix =][=\n \n-  _IF test_text _exist ! =][=\n-    _IF replace _exist ! =]\n+  IF (not (exist? \"test_text\")) =][=\n+    IF (not (exist? \"replace\")) =]\n echo No test for [=hackname=] in inc/[=\n-      _IF files _exist =][=\n+      IF (exist? \"files\")       =][=\n         files[0] =][=\n-      _ELSE =]testing.h[=\n-      _ENDIF =][=\n-    _ENDIF =][=\n-  _ELSE =]\n+      ELSE  =]testing.h[=\n+      ENDIF =][=\n+    ENDIF   =][=\n+  ELSE      =]\n cat >> [=\n-    _IF files _exist =][=\n+    IF (exist? \"files\") =][=\n       files[0] =][=\n-    _ELSE =]testing.h[=\n-    _ENDIF =] <<_HACK_EOF_\n+    ELSE =]testing.h[=\n+    ENDIF =] <<_HACK_EOF_\n \n \n-#if defined( [=hackname _up=]_CHECK )\n+#if defined( [=(string-upcase! (get \"hackname\"))=]_CHECK )\n [=test_text=]\n-#endif  /* [=hackname _up=]_CHECK */\n+#endif  /* [=(string-upcase! (get \"hackname\"))=]_CHECK */\n _HACK_EOF_\n-[=_ENDIF =][=\n+[=ENDIF =][=\n \n-/fix\n+ENDFOR  fix\n \n =]\n \n@@ -173,6 +174,6 @@ else\n fi\n $exitok[=\n \n-_eval _outfile \"chmod +x %s\" _printf _shell\n+(set-writable)\n \n =]"}]}