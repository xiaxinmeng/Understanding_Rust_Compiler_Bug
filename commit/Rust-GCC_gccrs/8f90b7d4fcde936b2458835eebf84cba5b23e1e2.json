{"sha": "8f90b7d4fcde936b2458835eebf84cba5b23e1e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY5MGI3ZDRmY2RlOTM2YjI0NTg4MzVlZWJmODRjYmE1YjIzZTFlMg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2013-06-07T12:23:46Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2013-06-07T12:23:46Z"}, "message": "rs6000.c (setup_incoming_varargs): Round up va_list_gpr_size.\n\n\t* config/rs6000/rs6000.c (setup_incoming_varargs): Round up\n\tva_list_gpr_size.\n\nFrom-SVN: r199808", "tree": {"sha": "e2353cab060f79ce84740bf6daa400bdd5d0b2ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2353cab060f79ce84740bf6daa400bdd5d0b2ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f90b7d4fcde936b2458835eebf84cba5b23e1e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f90b7d4fcde936b2458835eebf84cba5b23e1e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f90b7d4fcde936b2458835eebf84cba5b23e1e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f90b7d4fcde936b2458835eebf84cba5b23e1e2/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "961ce1191f290dc2abdd987427a6972622ed85a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/961ce1191f290dc2abdd987427a6972622ed85a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/961ce1191f290dc2abdd987427a6972622ed85a8"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "025e2c5bed821e4f9b09ae3069d76d9ea80ccb08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f90b7d4fcde936b2458835eebf84cba5b23e1e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f90b7d4fcde936b2458835eebf84cba5b23e1e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f90b7d4fcde936b2458835eebf84cba5b23e1e2", "patch": "@@ -1,3 +1,8 @@\n+2013-06-07  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (setup_incoming_varargs): Round up\n+\tva_list_gpr_size.\n+\n 2013-06-07  Alan Modra  <amodra@gmail.com>\n \n \t* varasm.c (force_const_mem): Assert mode is not VOID or BLK."}, {"sha": "3e019bb0697b244cccb1687076550e5629f7aa69", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f90b7d4fcde936b2458835eebf84cba5b23e1e2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f90b7d4fcde936b2458835eebf84cba5b23e1e2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=8f90b7d4fcde936b2458835eebf84cba5b23e1e2", "patch": "@@ -9370,20 +9370,17 @@ setup_incoming_varargs (cumulative_args_t cum, enum machine_mode mode,\n   if (! no_rtl && first_reg_offset < GP_ARG_NUM_REG\n       && cfun->va_list_gpr_size)\n     {\n-      int nregs = GP_ARG_NUM_REG - first_reg_offset;\n+      int n_gpr, nregs = GP_ARG_NUM_REG - first_reg_offset;\n \n       if (va_list_gpr_counter_field)\n-\t{\n-\t  /* V4 va_list_gpr_size counts number of registers needed.  */\n-\t  if (nregs > cfun->va_list_gpr_size)\n-\t    nregs = cfun->va_list_gpr_size;\n-\t}\n+\t/* V4 va_list_gpr_size counts number of registers needed.  */\n+\tn_gpr = cfun->va_list_gpr_size;\n       else\n-\t{\n-\t  /* char * va_list instead counts number of bytes needed.  */\n-\t  if (nregs > cfun->va_list_gpr_size / reg_size)\n-\t    nregs = cfun->va_list_gpr_size / reg_size;\n-\t}\n+\t/* char * va_list instead counts number of bytes needed.  */\n+\tn_gpr = (cfun->va_list_gpr_size + reg_size - 1) / reg_size;\n+\n+      if (nregs > n_gpr)\n+\tnregs = n_gpr;\n \n       mem = gen_rtx_MEM (BLKmode,\n \t\t\t plus_constant (Pmode, save_area,"}]}