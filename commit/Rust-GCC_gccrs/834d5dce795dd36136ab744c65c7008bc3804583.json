{"sha": "834d5dce795dd36136ab744c65c7008bc3804583", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM0ZDVkY2U3OTVkZDM2MTM2YWI3NDRjNjVjNzAwOGJjMzgwNDU4Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2010-10-22T19:43:21Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2010-10-22T19:43:21Z"}, "message": "Add __builtin_fma vector transform for i386.\n\nFrom-SVN: r165857", "tree": {"sha": "5cb76ee44764a1446bc7971fca1115943dd091c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cb76ee44764a1446bc7971fca1115943dd091c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/834d5dce795dd36136ab744c65c7008bc3804583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834d5dce795dd36136ab744c65c7008bc3804583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/834d5dce795dd36136ab744c65c7008bc3804583", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834d5dce795dd36136ab744c65c7008bc3804583/comments", "author": null, "committer": null, "parents": [{"sha": "7a12785c5fc5e9997b9fdeda9ead7900cac3b06d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a12785c5fc5e9997b9fdeda9ead7900cac3b06d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a12785c5fc5e9997b9fdeda9ead7900cac3b06d"}], "stats": {"total": 221, "additions": 220, "deletions": 1}, "files": [{"sha": "54939bccc83c0d8119a927aaeb6e21aebc2f299b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834d5dce795dd36136ab744c65c7008bc3804583/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834d5dce795dd36136ab744c65c7008bc3804583/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=834d5dce795dd36136ab744c65c7008bc3804583", "patch": "@@ -1,3 +1,8 @@\n+2010-10-22  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386.c (ix86_builtin_vectorized_function): Add\n+\tcases for __builtin_fma and __builtin_fmaf.\n+\n 2010-10-22  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.c (ix86_expand_fp_absneg_operator): Produce"}, {"sha": "bf16d08c9721599eb984678cde3f066e9f661cf7", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834d5dce795dd36136ab744c65c7008bc3804583/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834d5dce795dd36136ab744c65c7008bc3804583/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=834d5dce795dd36136ab744c65c7008bc3804583", "patch": "@@ -26105,8 +26105,28 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n \t}\n       break;\n \n+    case BUILT_IN_FMA:\n+      if (out_mode == DFmode && in_mode == DFmode)\n+\t{\n+\t  if (out_n == 2 && in_n == 2)\n+\t    return ix86_builtins[IX86_BUILTIN_VFMADDPD];\n+\t  if (out_n == 4 && in_n == 4)\n+\t    return ix86_builtins[IX86_BUILTIN_VFMADDPD256];\n+\t}\n+      break;\n+\n+    case BUILT_IN_FMAF:\n+      if (out_mode == SFmode && in_mode == SFmode)\n+\t{\n+\t  if (out_n == 4 && in_n == 4)\n+\t    return ix86_builtins[IX86_BUILTIN_VFMADDPS];\n+\t  if (out_n == 8 && in_n == 8)\n+\t    return ix86_builtins[IX86_BUILTIN_VFMADDPS256];\n+\t}\n+      break;\n+\n     default:\n-      ;\n+      break;\n     }\n \n   /* Dispatch to a handler for a vectorization library.  */"}, {"sha": "b84e4a0b3ec3404e92bbefd7569e371a030b9865", "filename": "gcc/testsuite/gcc.target/i386/fma3-builtin-2.c", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834d5dce795dd36136ab744c65c7008bc3804583/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma3-builtin-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834d5dce795dd36136ab744c65c7008bc3804583/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma3-builtin-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma3-builtin-2.c?ref=834d5dce795dd36136ab744c65c7008bc3804583", "patch": "@@ -0,0 +1,97 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mfma -mno-fma4\" } */\n+\n+#ifndef SIZE\n+#define SIZE 1024\n+#endif\n+\n+double vda[SIZE] __attribute__((__aligned__(32)));\n+double vdb[SIZE] __attribute__((__aligned__(32)));\n+double vdc[SIZE] __attribute__((__aligned__(32)));\n+double vdd[SIZE] __attribute__((__aligned__(32)));\n+\n+float vfa[SIZE] __attribute__((__aligned__(32)));\n+float vfb[SIZE] __attribute__((__aligned__(32)));\n+float vfc[SIZE] __attribute__((__aligned__(32)));\n+float vfd[SIZE] __attribute__((__aligned__(32)));\n+\n+void\n+vector_fma (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    vda[i] = __builtin_fma (vdb[i], vdc[i], vdd[i]);\n+}\n+\n+void\n+vector_fms (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    vda[i] = __builtin_fma (vdb[i], vdc[i], -vdd[i]);\n+}\n+\n+void\n+vector_fnma (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    vda[i] = __builtin_fma (-vdb[i], vdc[i], vdd[i]);\n+}\n+\n+void\n+vector_fnms (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    vda[i] = __builtin_fma (-vdb[i], vdc[i], -vdd[i]);\n+}\n+\n+void\n+vector_fmaf (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    vfa[i] = __builtin_fmaf (vfb[i], vfc[i], vfd[i]);\n+}\n+\n+void\n+vector_fmsf (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    vfa[i] = __builtin_fmaf (vfb[i], vfc[i], -vfd[i]);\n+}\n+\n+void\n+vector_fnmaf (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    vfa[i] = __builtin_fmaf (-vfb[i], vfc[i], vfd[i]);\n+}\n+\n+void\n+vector_fnmsf (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    vfa[i] = __builtin_fmaf (-vfb[i], vfc[i], -vfd[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfmadd...ps\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfmadd...pd\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfmsub...ps\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfmsub...pd\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd...ps\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd...pd\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub...ps\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub...pd\" 1 } } */"}, {"sha": "a7e3975719fa289e464a297fabe2af8361e29362", "filename": "gcc/testsuite/gcc.target/i386/fma4-builtin-2.c", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834d5dce795dd36136ab744c65c7008bc3804583/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-builtin-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834d5dce795dd36136ab744c65c7008bc3804583/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-builtin-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-builtin-2.c?ref=834d5dce795dd36136ab744c65c7008bc3804583", "patch": "@@ -0,0 +1,97 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mfma4\" } */\n+\n+#ifndef SIZE\n+#define SIZE 1024\n+#endif\n+\n+double vda[SIZE] __attribute__((__aligned__(32)));\n+double vdb[SIZE] __attribute__((__aligned__(32)));\n+double vdc[SIZE] __attribute__((__aligned__(32)));\n+double vdd[SIZE] __attribute__((__aligned__(32)));\n+\n+float vfa[SIZE] __attribute__((__aligned__(32)));\n+float vfb[SIZE] __attribute__((__aligned__(32)));\n+float vfc[SIZE] __attribute__((__aligned__(32)));\n+float vfd[SIZE] __attribute__((__aligned__(32)));\n+\n+void\n+vector_fma (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    vda[i] = __builtin_fma (vdb[i], vdc[i], vdd[i]);\n+}\n+\n+void\n+vector_fms (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    vda[i] = __builtin_fma (vdb[i], vdc[i], -vdd[i]);\n+}\n+\n+void\n+vector_fnma (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    vda[i] = __builtin_fma (-vdb[i], vdc[i], vdd[i]);\n+}\n+\n+void\n+vector_fnms (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    vda[i] = __builtin_fma (-vdb[i], vdc[i], -vdd[i]);\n+}\n+\n+void\n+vector_fmaf (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    vfa[i] = __builtin_fmaf (vfb[i], vfc[i], vfd[i]);\n+}\n+\n+void\n+vector_fmsf (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    vfa[i] = __builtin_fmaf (vfb[i], vfc[i], -vfd[i]);\n+}\n+\n+void\n+vector_fnmaf (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    vfa[i] = __builtin_fmaf (-vfb[i], vfc[i], vfd[i]);\n+}\n+\n+void\n+vector_fnmsf (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < SIZE; i++)\n+    vfa[i] = __builtin_fmaf (-vfb[i], vfc[i], -vfd[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vfmaddps\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfmaddpd\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfmsubps\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfmsubpd\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfnmaddps\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfnmaddpd\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfnmsubps\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vfnmsubpd\" 1 } } */"}]}