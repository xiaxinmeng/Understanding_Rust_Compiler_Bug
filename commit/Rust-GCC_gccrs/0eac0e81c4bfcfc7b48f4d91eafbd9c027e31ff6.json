{"sha": "0eac0e81c4bfcfc7b48f4d91eafbd9c027e31ff6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVhYzBlODFjNGJmY2ZjN2I0OGY0ZDkxZWFmYmQ5YzAyN2UzMWZmNg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-02-19T14:59:42Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-02-19T14:59:42Z"}, "message": "reg-stack.c (next_flags_user): Use current_block->end\n\n\t* reg-stack.c (next_flags_user): Use current_block->end\n\t(swap_rtx_condition): Look for next user if flags don't die;\n\tgive up on CALL_INSNs; use current_block->end.\n\nFrom-SVN: r39884", "tree": {"sha": "625126b53f56c723996597f2f47bd167c61cb6a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/625126b53f56c723996597f2f47bd167c61cb6a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0eac0e81c4bfcfc7b48f4d91eafbd9c027e31ff6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eac0e81c4bfcfc7b48f4d91eafbd9c027e31ff6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eac0e81c4bfcfc7b48f4d91eafbd9c027e31ff6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eac0e81c4bfcfc7b48f4d91eafbd9c027e31ff6/comments", "author": null, "committer": null, "parents": [{"sha": "e7ca84b3a6df74c93d6542a973983b4cf436bfa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7ca84b3a6df74c93d6542a973983b4cf436bfa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7ca84b3a6df74c93d6542a973983b4cf436bfa6"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "ee58bb40e5017af2f206cdf27cb88d75c44a34e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eac0e81c4bfcfc7b48f4d91eafbd9c027e31ff6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eac0e81c4bfcfc7b48f4d91eafbd9c027e31ff6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0eac0e81c4bfcfc7b48f4d91eafbd9c027e31ff6", "patch": "@@ -1,3 +1,9 @@\n+Mon Feb 19 15:51:30 CET 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* reg-stack.c (next_flags_user): Use current_block->end\n+\t(swap_rtx_condition): Look for next user if flags don't die;\n+\tgive up on CALL_INSNs; use current_block->end.\n+\n Mon Feb 19 08:27:21 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* sibcall.c (call_ends_block_p): New function."}, {"sha": "94300c394d42bd1992ee0503fb0951aed07666fc", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eac0e81c4bfcfc7b48f4d91eafbd9c027e31ff6/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eac0e81c4bfcfc7b48f4d91eafbd9c027e31ff6/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=0eac0e81c4bfcfc7b48f4d91eafbd9c027e31ff6", "patch": "@@ -335,22 +335,18 @@ next_flags_user (insn)\n {\n   /* Search forward looking for the first use of this value. \n      Stop at block boundaries.  */\n-  /* ??? This really cries for BLOCK_END!  */\n \n-  while (1)\n+  while (insn != current_block->end)\n     {\n       insn = NEXT_INSN (insn);\n-      if (!insn)\n-\treturn NULL_RTX;\n \n       if (INSN_P (insn) && reg_mentioned_p (ix86_flags_rtx, PATTERN (insn)))\n         return insn;\n \n-      if (GET_CODE (insn) == JUMP_INSN\n-\t  || GET_CODE (insn) == CODE_LABEL\n-\t  || GET_CODE (insn) == CALL_INSN)\n+      if (GET_CODE (insn) == CALL_INSN)\n \treturn NULL_RTX;\n     }\n+  return NULL_RTX;\n }\n \f\n /* Reorganise the stack into ascending numbers,\n@@ -1231,17 +1227,12 @@ swap_rtx_condition (insn)\n \n       /* Search forward looking for the first use of this value. \n \t Stop at block boundaries.  */\n-      /* ??? This really cries for BLOCK_END!  */\n-      while (1)\n+      while (insn != current_block->end)\n \t{\n \t  insn = NEXT_INSN (insn);\n-\t  if (insn == NULL_RTX)\n-\t    return 0;\n \t  if (INSN_P (insn) && reg_mentioned_p (dest, insn))\n \t    break;\n-\t  if (GET_CODE (insn) == JUMP_INSN)\n-\t    return 0;\n-\t  if (GET_CODE (insn) == CODE_LABEL)\n+\t  if (GET_CODE (insn) == CALL_INSN)\n \t    return 0;\n \t}\n \n@@ -1264,8 +1255,19 @@ swap_rtx_condition (insn)\n \n   if (swap_rtx_condition_1 (pat))\n     {\n+      int fail = 0;\n       INSN_CODE (insn) = -1;\n       if (recog_memoized (insn) == -1)\n+\tfail = 1;\n+      /* In case the flags don't die here, recurse to try fix\n+         following user too.  */\n+      else if (! dead_or_set_p (insn, ix86_flags_rtx))\n+\t{\n+\t  insn = next_flags_user (insn);\n+\t  if (!insn || !swap_rtx_condition (insn))\n+\t    fail = 1;\n+\t}\n+      if (fail)\n \t{\n \t  swap_rtx_condition_1 (pat);\n \t  return 0;"}]}