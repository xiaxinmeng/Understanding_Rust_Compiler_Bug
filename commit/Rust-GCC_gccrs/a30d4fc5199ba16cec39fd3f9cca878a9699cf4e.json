{"sha": "a30d4fc5199ba16cec39fd3f9cca878a9699cf4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMwZDRmYzUxOTliYTE2Y2VjMzlmZDNmOWNjYTg3OGE5Njk5Y2Y0ZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-10-06T09:18:55Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-10-06T13:49:42Z"}, "message": "dbgcnt: print list after compilation\n\ngcc/ChangeLog:\n\n\t* common.opt: Remove -fdbg-cnt-list from deferred options.\n\t* dbgcnt.c (dbg_cnt_set_limit_by_index): Make a copy\n\tto original_limits.\n\t(dbg_cnt_list_all_counters): Print also current counter value\n\tand print to stderr.\n\t* opts-global.c (handle_common_deferred_options): Do not handle\n\t-fdbg-cnt-list.\n\t* opts.c (common_handle_option): Likewise.\n\t* toplev.c (finalize): Handle it after compilation here.", "tree": {"sha": "792e99742209ea776be1a9797ebc1bd3d1a541d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/792e99742209ea776be1a9797ebc1bd3d1a541d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a30d4fc5199ba16cec39fd3f9cca878a9699cf4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a30d4fc5199ba16cec39fd3f9cca878a9699cf4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a30d4fc5199ba16cec39fd3f9cca878a9699cf4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a30d4fc5199ba16cec39fd3f9cca878a9699cf4e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8988ec5b4232ba1d54a2737d2d03a3161b64300e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8988ec5b4232ba1d54a2737d2d03a3161b64300e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8988ec5b4232ba1d54a2737d2d03a3161b64300e"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "7e789d1c47f0f52cf7d6121e8354283cafeef991", "filename": "gcc/common.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a30d4fc5199ba16cec39fd3f9cca878a9699cf4e/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a30d4fc5199ba16cec39fd3f9cca878a9699cf4e/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=a30d4fc5199ba16cec39fd3f9cca878a9699cf4e", "patch": "@@ -1202,7 +1202,7 @@ Common Report Var(flag_data_sections)\n Place data items into their own section.\n \n fdbg-cnt-list\n-Common Report Var(common_deferred_options) Defer\n+Common Report Var(flag_dbg_cnt_list)\n List all available debugging counters with their limits and counts.\n \n fdbg-cnt="}, {"sha": "2a2dd57507dccf7698241f176ad0c5cbc1776893", "filename": "gcc/dbgcnt.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a30d4fc5199ba16cec39fd3f9cca878a9699cf4e/gcc%2Fdbgcnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a30d4fc5199ba16cec39fd3f9cca878a9699cf4e/gcc%2Fdbgcnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbgcnt.c?ref=a30d4fc5199ba16cec39fd3f9cca878a9699cf4e", "patch": "@@ -45,6 +45,7 @@ static struct string2counter_map map[debug_counter_number_of_counters] =\n typedef std::pair<unsigned int, unsigned int> limit_tuple;\n \n static vec<limit_tuple> limits[debug_counter_number_of_counters];\n+static vec<limit_tuple> original_limits[debug_counter_number_of_counters];\n \n static unsigned int count[debug_counter_number_of_counters];\n \n@@ -134,6 +135,8 @@ dbg_cnt_set_limit_by_index (enum debug_counter index, const char *name,\n \t}\n     }\n \n+  original_limits[index] = limits[index].copy ();\n+\n   return true;\n }\n \n@@ -226,25 +229,27 @@ void\n dbg_cnt_list_all_counters (void)\n {\n   int i;\n-  printf (\"  %-30s %s\\n\", G_(\"counter name\"), G_(\"closed intervals\"));\n-  printf (\"-----------------------------------------------------------------\\n\");\n+  fprintf (stderr, \"  %-30s%-15s   %s\\n\", G_(\"counter name\"),\n+\t   G_(\"counter value\"), G_(\"closed intervals\"));\n+  fprintf (stderr, \"-----------------------------------------------------------------\\n\");\n   for (i = 0; i < debug_counter_number_of_counters; i++)\n     {\n-      printf (\"  %-30s \", map[i].name);\n-      if (limits[i].exists ())\n+      fprintf (stderr, \"  %-30s%-15d   \", map[i].name, count[i]);\n+      if (original_limits[i].exists ())\n \t{\n-\t  for (int j = limits[i].length () - 1; j >= 0; j--)\n+\t  for (int j = original_limits[i].length () - 1; j >= 0; j--)\n \t    {\n-\t      printf (\"[%u, %u]\", limits[i][j].first, limits[i][j].second);\n+\t      fprintf (stderr, \"[%u, %u]\", original_limits[i][j].first,\n+\t\t       original_limits[i][j].second);\n \t      if (j > 0)\n-\t\tprintf (\", \");\n+\t\tfprintf (stderr, \", \");\n \t    }\n-\t  putchar ('\\n');\n+\t  fprintf (stderr, \"\\n\");\n \t}\n       else\n-\tprintf (\"unset\\n\");\n+\tfprintf (stderr, \"unset\\n\");\n     }\n-  printf (\"\\n\");\n+  fprintf (stderr, \"\\n\");\n }\n \n #if CHECKING_P"}, {"sha": "1816acf805baec1aa5aa7f370ee31f6c43070047", "filename": "gcc/opts-global.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a30d4fc5199ba16cec39fd3f9cca878a9699cf4e/gcc%2Fopts-global.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a30d4fc5199ba16cec39fd3f9cca878a9699cf4e/gcc%2Fopts-global.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-global.c?ref=a30d4fc5199ba16cec39fd3f9cca878a9699cf4e", "patch": "@@ -378,10 +378,6 @@ handle_common_deferred_options (void)\n \t  dbg_cnt_process_opt (opt->arg);\n \t  break;\n \n-\tcase OPT_fdbg_cnt_list:\n-\t  dbg_cnt_list_all_counters ();\n-\t  break;\n-\n \tcase OPT_fdebug_prefix_map_:\n \t  add_debug_prefix_map (opt->arg);\n \t  break;"}, {"sha": "da503c32dd0f1ea3050bdc683356e95a9071d06e", "filename": "gcc/opts.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a30d4fc5199ba16cec39fd3f9cca878a9699cf4e/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a30d4fc5199ba16cec39fd3f9cca878a9699cf4e/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=a30d4fc5199ba16cec39fd3f9cca878a9699cf4e", "patch": "@@ -2361,11 +2361,6 @@ common_handle_option (struct gcc_options *opts,\n       /* Deferred.  */\n       break;\n \n-    case OPT_fdbg_cnt_list:\n-      /* Deferred.  */\n-      opts->x_exit_after_options = true;\n-      break;\n-\n     case OPT_fdebug_prefix_map_:\n     case OPT_ffile_prefix_map_:\n       /* Deferred.  */"}, {"sha": "8c1e1e1f44f905520641b17ff673f391c02521c5", "filename": "gcc/toplev.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a30d4fc5199ba16cec39fd3f9cca878a9699cf4e/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a30d4fc5199ba16cec39fd3f9cca878a9699cf4e/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=a30d4fc5199ba16cec39fd3f9cca878a9699cf4e", "patch": "@@ -86,6 +86,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"optinfo-emit-json.h\"\n #include \"ipa-modref-tree.h\"\n #include \"ipa-modref.h\"\n+#include \"dbgcnt.h\"\n \n #if defined(DBX_DEBUGGING_INFO) || defined(XCOFF_DEBUGGING_INFO)\n #include \"dbxout.h\"\n@@ -2213,6 +2214,9 @@ finalize (bool no_backend)\n   if (profile_report)\n     dump_profile_report ();\n \n+  if (flag_dbg_cnt_list)\n+    dbg_cnt_list_all_counters ();\n+\n   /* Language-specific end of compilation actions.  */\n   lang_hooks.finish ();\n }"}]}