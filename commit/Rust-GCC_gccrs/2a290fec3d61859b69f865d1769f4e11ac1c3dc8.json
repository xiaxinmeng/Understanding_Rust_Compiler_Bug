{"sha": "2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmEyOTBmZWMzZDYxODU5YjY5Zjg2NWQxNzY5ZjRlMTFhYzFjM2RjOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-06-14T10:49:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-06-14T10:49:59Z"}, "message": "[multiple changes]\n\n2012-06-14  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch7.adb, exp_util.adb, sem_aux.ads, exp_ch9.adb,\n\tsem_ch10.adb, freeze.adb, sem_util.adb, exp_ch4.adb,\n\ts-taprop-dummy.adb: Minor reformatting.\n\n2012-06-14  Vincent Pucci  <pucci@adacore.com>\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference): Lock_Free\n\tattribute case added.\n\t* par-prag.adb (Prag): Lock_Free pragma case added.\n\t* sem_attr.adb (Analyze_Attribute_Reference): Lock_Free attribute\n\tcase added.\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Record_Rep_Item\n\tcall added for Aspect_Lock_Free.\n\t* sem_ch9.adb (Allows_Lock_Free_Implementation): New Lock_Free\n\terror messages for subprogram bodies.\n\t(Lock_Free_Disabled): New routine.\n\t(Analyze_Protected_Body): Call to Lock_Free_Disabled added.\n\t* sem_prag.adb (Analyze_Pragma): Lock_Free pragma case added.\n\t* snames.adb-tmpl (Get_Pragma_Id): Name_Lock_Free case added.\n\t(Is_Pragma_Name): Name_Lock_Free case added.\n\t* snames.ads-tmpl: Attribute_Lock_Free and Pragma_Lock_Free added.\n\n2012-06-14  Ed Schonberg  <schonberg@adacore.com>\n\n\t* a-coorma.adb, a-cborma.adb, a-cbhama.adb, a-ciorma.adb: Add missing\n\taliased keyword.\n\n2012-06-14  Bob Duff  <duff@adacore.com>\n\n\t* lib.ads, lib.adb, sem.adb (Write_Unit_Info): Move this\n\tprocedure from Sem body to Lib spec, so it can be used for\n\tdebugging elsewhere.\n\n2012-06-14  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Check_Conformance): Add Ada 2012 check on mode\n\tconformance: \"aliased\" must apply to both or neither formal\n\tparameters.\n\nFrom-SVN: r188609", "tree": {"sha": "faeb8bf3d0b97c831e30b175c8171f08f0d0f8a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faeb8bf3d0b97c831e30b175c8171f08f0d0f8a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/comments", "author": null, "committer": null, "parents": [{"sha": "758ad97333838b7e5e839100a927b6cadbd030d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/758ad97333838b7e5e839100a927b6cadbd030d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/758ad97333838b7e5e839100a927b6cadbd030d3"}], "stats": {"total": 578, "additions": 408, "deletions": 170}, "files": [{"sha": "816d90158bf3c833813296cd1cbe4b20da64b63d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -1,3 +1,44 @@\n+2012-06-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch7.adb, exp_util.adb, sem_aux.ads, exp_ch9.adb,\n+\tsem_ch10.adb, freeze.adb, sem_util.adb, exp_ch4.adb,\n+\ts-taprop-dummy.adb: Minor reformatting.\n+\n+2012-06-14  Vincent Pucci  <pucci@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference): Lock_Free\n+\tattribute case added.\n+\t* par-prag.adb (Prag): Lock_Free pragma case added.\n+\t* sem_attr.adb (Analyze_Attribute_Reference): Lock_Free attribute\n+\tcase added.\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): Record_Rep_Item\n+\tcall added for Aspect_Lock_Free.\n+\t* sem_ch9.adb (Allows_Lock_Free_Implementation): New Lock_Free\n+\terror messages for subprogram bodies.\n+\t(Lock_Free_Disabled): New routine.\n+\t(Analyze_Protected_Body): Call to Lock_Free_Disabled added.\n+\t* sem_prag.adb (Analyze_Pragma): Lock_Free pragma case added.\n+\t* snames.adb-tmpl (Get_Pragma_Id): Name_Lock_Free case added.\n+\t(Is_Pragma_Name): Name_Lock_Free case added.\n+\t* snames.ads-tmpl: Attribute_Lock_Free and Pragma_Lock_Free added.\n+\n+2012-06-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* a-coorma.adb, a-cborma.adb, a-cbhama.adb, a-ciorma.adb: Add missing\n+\taliased keyword.\n+\n+2012-06-14  Bob Duff  <duff@adacore.com>\n+\n+\t* lib.ads, lib.adb, sem.adb (Write_Unit_Info): Move this\n+\tprocedure from Sem body to Lib spec, so it can be used for\n+\tdebugging elsewhere.\n+\n+2012-06-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Check_Conformance): Add Ada 2012 check on mode\n+\tconformance: \"aliased\" must apply to both or neither formal\n+\tparameters.\n+\n 2012-06-14  Gary Dismukes  <dismukes@adacore.com>\n \n \t* exp_ch9.adb: Minor reformatting."}, {"sha": "8eeaca2e22fb3db84c8a1f67c1992dcfe128fad5", "filename": "gcc/ada/a-cbhama.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fa-cbhama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fa-cbhama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhama.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -220,7 +220,7 @@ package body Ada.Containers.Bounded_Hashed_Maps is\n    end Constant_Reference;\n \n    function Constant_Reference\n-     (Container : Map;\n+     (Container : aliased Map;\n       Key       : Key_Type) return Constant_Reference_Type\n    is\n       Node : constant Count_Type := Key_Ops.Find (Container, Key);"}, {"sha": "a782d39af7139d05da97e610d750228a68db4894", "filename": "gcc/ada/a-cborma.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fa-cborma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fa-cborma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cborma.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -432,7 +432,7 @@ package body Ada.Containers.Bounded_Ordered_Maps is\n    end Constant_Reference;\n \n    function Constant_Reference\n-     (Container : Map;\n+     (Container : aliased Map;\n       Key       : Key_Type) return Constant_Reference_Type\n    is\n       Node : constant Count_Type := Key_Ops.Find (Container, Key);"}, {"sha": "e955dec891568a944b1de787046ecbcfe19038c6", "filename": "gcc/ada/a-ciorma.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fa-ciorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fa-ciorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorma.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -410,7 +410,7 @@ package body Ada.Containers.Indefinite_Ordered_Maps is\n    end Constant_Reference;\n \n    function Constant_Reference\n-     (Container : Map;\n+     (Container : aliased Map;\n       Key       : Key_Type) return Constant_Reference_Type\n    is\n       Node : constant Node_Access := Key_Ops.Find (Container.Tree, Key);"}, {"sha": "5aef3636fb0e34658a39a2d4cbff256026ebf13b", "filename": "gcc/ada/a-coorma.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fa-coorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fa-coorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorma.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -370,7 +370,7 @@ package body Ada.Containers.Ordered_Maps is\n    end Constant_Reference;\n \n    function Constant_Reference\n-     (Container : Map;\n+     (Container : aliased Map;\n       Key       : Key_Type) return Constant_Reference_Type\n    is\n       Node : constant Node_Access := Key_Ops.Find (Container.Tree, Key);"}, {"sha": "54ce3ee0baa31386f3587e8d2c6da26d6dff15fa", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -3065,6 +3065,29 @@ package body Exp_Attr is\n          end if;\n       end;\n \n+      ---------------\n+      -- Lock_Free --\n+      ---------------\n+\n+      --  Rewrite the attribute reference with the value of Uses_Lock_Free\n+\n+      when Attribute_Lock_Free => Lock_Free : declare\n+         Val : Entity_Id;\n+\n+      begin\n+         if Uses_Lock_Free (Ptyp) then\n+            Val := Standard_True;\n+\n+         else\n+            Val := Standard_False;\n+         end if;\n+\n+         Rewrite (N,\n+           New_Occurrence_Of (Val, Loc));\n+\n+         Analyze_And_Resolve (N, Standard_Boolean);\n+      end Lock_Free;\n+\n       -------------\n       -- Machine --\n       -------------"}, {"sha": "5ed4e8afacafc8f99b22e12c7817ec2a89d4a954", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -4277,8 +4277,7 @@ package body Exp_Ch4 is\n       --  is a finalization flag created to service expression Expr.\n \n       function Is_Controlled_Function_Call (Expr : Node_Id) return Boolean;\n-      --  Determine whether an expression is a rewritten controlled function\n-      --  call.\n+      --  Determine if expression Expr is a rewritten controlled function call\n \n       ------------------------\n       -- Create_Alternative --\n@@ -4431,7 +4430,8 @@ package body Exp_Ch4 is\n             --  handling.\n \n             if Is_Controlled_Function_Call (Thenx)\n-              or else Is_Controlled_Function_Call (Elsex)\n+                 or else\n+               Is_Controlled_Function_Call (Elsex)\n             then\n                Flag_Id := Make_Temporary (Loc, 'F');\n "}, {"sha": "a1d5634bb47a14c724f827414f03e42999a33086", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -1892,14 +1892,13 @@ package body Exp_Ch7 is\n                then\n                   Processing_Actions (Has_No_Init => True);\n \n-               --  Processing for intermediate results of conditional\n-               --  expressions where one of the alternatives uses a controlled\n-               --  function call.\n+               --  Process intermediate results of conditional expression with\n+               --  one of the alternatives using a controlled function call.\n \n                elsif Is_Access_Type (Obj_Typ)\n                  and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n                  and then Nkind (Status_Flag_Or_Transient_Decl (Obj_Id)) =\n-                            N_Defining_Identifier\n+                                                       N_Defining_Identifier\n                  and then Present (Expr)\n                  and then Nkind (Expr) = N_Null\n                then\n@@ -2728,20 +2727,19 @@ package body Exp_Ch7 is\n                --    end if;\n \n                if Nkind (Status_Flag_Or_Transient_Decl (Obj_Id)) =\n-                    N_Object_Declaration\n+                                                      N_Object_Declaration\n                then\n                   Fin_Stmts := New_List (\n                     Make_If_Statement (Loc,\n                       Condition       =>\n                         Make_Op_Ne (Loc,\n                           Left_Opnd  => New_Reference_To (Obj_Id, Loc),\n                           Right_Opnd => Make_Null (Loc)),\n-\n                       Then_Statements => Fin_Stmts));\n \n-               --  Return objects use a flag to aid their potential\n-               --  finalization when the enclosing function fails to return\n-               --  properly. Generate:\n+               --  Return objects use a flag to aid in processing their\n+               --  potential finalization when the enclosing function fails\n+               --  to return properly. Generate:\n \n                --    if not Flag then\n                --       <object finalization statements>"}, {"sha": "dd5a5d59a534e7a9467f649c422085661f7ea0f5", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -13342,7 +13342,7 @@ package body Exp_Ch9 is\n          --  or attribute definition clause, or there is an Interrupt_Priority\n          --  rep item and no Priority rep item, and we set the ceiling to\n          --  Interrupt_Priority'Last, an implementation-defined value, see\n-         --  D.3(10).\n+         --  (RM D.3(10)).\n \n          if Has_Rep_Item (Ptyp, Name_Priority) then\n             declare"}, {"sha": "a732da215c4a0342cbfd30e2567ef9e17bb7b020", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -7181,7 +7181,7 @@ package body Exp_Util is\n             elsif Is_Access_Type (Obj_Typ)\n               and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n               and then Nkind (Status_Flag_Or_Transient_Decl (Obj_Id)) =\n-                         N_Object_Declaration\n+                                                      N_Object_Declaration\n               and then Is_Finalizable_Transient\n                          (Status_Flag_Or_Transient_Decl (Obj_Id), Decl)\n             then"}, {"sha": "f0e643d05fed93211dc02381f20a37b2ee75d57d", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -2168,8 +2168,7 @@ package body Freeze is\n \n          --  Deal with Bit_Order aspect specifying a non-default bit order\n \n-         ADC :=\n-           Get_Attribute_Definition_Clause (Rec, Attribute_Bit_Order);\n+         ADC := Get_Attribute_Definition_Clause (Rec, Attribute_Bit_Order);\n \n          if Present (ADC) and then Base_Type (Rec) = Rec then\n             if not Placed_Component then\n@@ -2180,7 +2179,7 @@ package body Freeze is\n             --  Here is where we do the processing for reversed bit order\n \n             elsif Reverse_Bit_Order (Rec)\n-                    and then not Reverse_Storage_Order (Rec)\n+              and then not Reverse_Storage_Order (Rec)\n             then\n                Adjust_Record_For_Reverse_Bit_Order (Rec);\n "}, {"sha": "fc62239b29eabf95a9d8b036a4e6f289d5fea3f6", "filename": "gcc/ada/lib.adb", "status": "modified", "additions": 80, "deletions": 1, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Flib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Flib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,6 +37,7 @@ with Atree;    use Atree;\n with Csets;    use Csets;\n with Einfo;    use Einfo;\n with Fname;    use Fname;\n+with Nlists;   use Nlists;\n with Output;   use Output;\n with Sinfo;    use Sinfo;\n with Sinput;   use Sinput;\n@@ -1155,4 +1156,82 @@ package body Lib is\n       Version_Ref.Append (S);\n    end Version_Referenced;\n \n+   ---------------------\n+   -- Write_Unit_Info --\n+   ---------------------\n+\n+   procedure Write_Unit_Info\n+     (Unit_Num : Unit_Number_Type;\n+      Item     : Node_Id;\n+      Prefix   : String := \"\";\n+      Withs    : Boolean := False)\n+   is\n+   begin\n+      Write_Str (Prefix);\n+      Write_Unit_Name (Unit_Name (Unit_Num));\n+      Write_Str (\", unit \");\n+      Write_Int (Int (Unit_Num));\n+      Write_Str (\", \");\n+      Write_Int (Int (Item));\n+      Write_Str (\"=\");\n+      Write_Str (Node_Kind'Image (Nkind (Item)));\n+\n+      if Item /= Original_Node (Item) then\n+         Write_Str (\", orig = \");\n+         Write_Int (Int (Original_Node (Item)));\n+         Write_Str (\"=\");\n+         Write_Str (Node_Kind'Image (Nkind (Original_Node (Item))));\n+      end if;\n+\n+      Write_Eol;\n+\n+      --  Skip the rest if we're not supposed to print the withs\n+\n+      if not Withs then\n+         return;\n+      end if;\n+\n+      declare\n+         Context_Item : Node_Id;\n+\n+      begin\n+         Context_Item := First (Context_Items (Cunit (Unit_Num)));\n+         while Present (Context_Item)\n+           and then (Nkind (Context_Item) /= N_With_Clause\n+                      or else Limited_Present (Context_Item))\n+         loop\n+            Context_Item := Next (Context_Item);\n+         end loop;\n+\n+         if Present (Context_Item) then\n+            Indent;\n+            Write_Line (\"withs:\");\n+            Indent;\n+\n+            while Present (Context_Item) loop\n+               if Nkind (Context_Item) = N_With_Clause\n+                 and then not Limited_Present (Context_Item)\n+               then\n+                  pragma Assert (Present (Library_Unit (Context_Item)));\n+                  Write_Unit_Name\n+                    (Unit_Name\n+                       (Get_Cunit_Unit_Number (Library_Unit (Context_Item))));\n+\n+                  if Implicit_With (Context_Item) then\n+                     Write_Str (\" -- implicit\");\n+                  end if;\n+\n+                  Write_Eol;\n+               end if;\n+\n+               Context_Item := Next (Context_Item);\n+            end loop;\n+\n+            Outdent;\n+            Write_Line (\"end withs\");\n+            Outdent;\n+         end if;\n+      end;\n+   end Write_Unit_Info;\n+\n end Lib;"}, {"sha": "d7607ee097ba9aae871525438f644aa9ea050e09", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -673,6 +673,15 @@ package Lib is\n    --  that file not being compiled. The predicate Generic_May_Lack_ALI is\n    --  True for those generic units for which missing ALI files are allowed.\n \n+   procedure Write_Unit_Info\n+     (Unit_Num : Unit_Number_Type;\n+      Item     : Node_Id;\n+      Prefix   : String := \"\";\n+      Withs    : Boolean := False);\n+   --  Print out debugging information about the unit. Prefix precedes the rest\n+   --  of the printout. If Withs is True, we print out units with'ed by this\n+   --  unit (not counting limited withs).\n+\n private\n    pragma Inline (Cunit);\n    pragma Inline (Cunit_Entity);"}, {"sha": "e0834764865d9f9d8f3808544702b00ea8816c7c", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -1183,6 +1183,7 @@ begin\n            Pragma_Linker_Destructor              |\n            Pragma_Linker_Options                 |\n            Pragma_Linker_Section                 |\n+           Pragma_Lock_Free                      |\n            Pragma_Locking_Policy                 |\n            Pragma_Long_Float                     |\n            Pragma_Machine_Attribute              |"}, {"sha": "61cb2940c68b3a25d66a8ce8ce717d332d23e0d1", "filename": "gcc/ada/s-taprop-dummy.adb", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fs-taprop-dummy.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fs-taprop-dummy.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-dummy.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -46,27 +46,30 @@ package body System.Task_Primitives.Operations is\n    pragma Warnings (Off);\n    --  Turn off warnings since so many unreferenced parameters\n \n-   --------------------\n-   -- Local Packages --\n-   --------------------\n+   --------------\n+   -- Specific --\n+   --------------\n \n-   package Specific is\n+   --  Package Specific contains target specific routines, and the body of\n+   --  this package is target specific.\n \n+   package Specific is\n       procedure Set (Self_Id : Task_Id);\n       pragma Inline (Set);\n       --  Set the self id for the current task\n-\n    end Specific;\n \n    package body Specific is\n \n+      ---------\n+      -- Set --\n+      ---------\n+\n       procedure Set (Self_Id : Task_Id) is\n       begin\n          null;\n       end Set;\n-\n    end Specific;\n-   --  The body of this package is target specific\n \n    ----------------------------------\n    -- ATCB allocation/deallocation --"}, {"sha": "352665af23fa1d83176a50f30eba2d6e7e7f0684", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 0, "deletions": 87, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -91,15 +91,6 @@ package body Sem is\n    --  of this unit, since they count as dependences on their parent library\n    --  item. CU must be an N_Compilation_Unit whose Unit is not an N_Subunit.\n \n-   procedure Write_Unit_Info\n-     (Unit_Num : Unit_Number_Type;\n-      Item     : Node_Id;\n-      Prefix   : String := \"\";\n-      Withs    : Boolean := False);\n-   --  Print out debugging information about the unit. Prefix precedes the rest\n-   --  of the printout. If Withs is True, we print out units with'ed by this\n-   --  unit (not counting limited withs).\n-\n    -------------\n    -- Analyze --\n    -------------\n@@ -2290,82 +2281,4 @@ package body Sem is\n       end loop;\n    end Walk_Withs_Immediate;\n \n-   ---------------------\n-   -- Write_Unit_Info --\n-   ---------------------\n-\n-   procedure Write_Unit_Info\n-     (Unit_Num : Unit_Number_Type;\n-      Item     : Node_Id;\n-      Prefix   : String := \"\";\n-      Withs    : Boolean := False)\n-   is\n-   begin\n-      Write_Str (Prefix);\n-      Write_Unit_Name (Unit_Name (Unit_Num));\n-      Write_Str (\", unit \");\n-      Write_Int (Int (Unit_Num));\n-      Write_Str (\", \");\n-      Write_Int (Int (Item));\n-      Write_Str (\"=\");\n-      Write_Str (Node_Kind'Image (Nkind (Item)));\n-\n-      if Item /= Original_Node (Item) then\n-         Write_Str (\", orig = \");\n-         Write_Int (Int (Original_Node (Item)));\n-         Write_Str (\"=\");\n-         Write_Str (Node_Kind'Image (Nkind (Original_Node (Item))));\n-      end if;\n-\n-      Write_Eol;\n-\n-      --  Skip the rest if we're not supposed to print the withs\n-\n-      if not Withs then\n-         return;\n-      end if;\n-\n-      declare\n-         Context_Item : Node_Id;\n-\n-      begin\n-         Context_Item := First (Context_Items (Cunit (Unit_Num)));\n-         while Present (Context_Item)\n-           and then (Nkind (Context_Item) /= N_With_Clause\n-                      or else Limited_Present (Context_Item))\n-         loop\n-            Context_Item := Next (Context_Item);\n-         end loop;\n-\n-         if Present (Context_Item) then\n-            Indent;\n-            Write_Line (\"withs:\");\n-            Indent;\n-\n-            while Present (Context_Item) loop\n-               if Nkind (Context_Item) = N_With_Clause\n-                 and then not Limited_Present (Context_Item)\n-               then\n-                  pragma Assert (Present (Library_Unit (Context_Item)));\n-                  Write_Unit_Name\n-                    (Unit_Name\n-                       (Get_Cunit_Unit_Number (Library_Unit (Context_Item))));\n-\n-                  if Implicit_With (Context_Item) then\n-                     Write_Str (\" -- implicit\");\n-                  end if;\n-\n-                  Write_Eol;\n-               end if;\n-\n-               Context_Item := Next (Context_Item);\n-            end loop;\n-\n-            Outdent;\n-            Write_Line (\"end withs\");\n-            Outdent;\n-         end if;\n-      end;\n-   end Write_Unit_Info;\n-\n end Sem;"}, {"sha": "1e95a6d76ef1c8d732fafe8b82aff2213558a23b", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -3569,6 +3569,19 @@ package body Sem_Attr is\n          Check_Array_Type;\n          Set_Etype (N, Universal_Integer);\n \n+      ---------------\n+      -- Lock_Free --\n+      ---------------\n+\n+      when Attribute_Lock_Free =>\n+         Check_E0;\n+         Set_Etype (N, Standard_Boolean);\n+\n+         if not Is_Protected_Type (P_Type) then\n+            Error_Attr_P\n+              (\"prefix of % attribute must be a protected object\");\n+         end if;\n+\n       -------------\n       -- Machine --\n       -------------\n@@ -6767,6 +6780,15 @@ package body Sem_Attr is\n               True);\n          end if;\n \n+      ---------------\n+      -- Lock_Free --\n+      ---------------\n+\n+      --  Lock_Free attribute is a Boolean, thus no need to fold here.\n+\n+      when Attribute_Lock_Free =>\n+         null;\n+\n       ----------\n       -- Last --\n       ----------"}, {"sha": "bf09e99ba5a2b6c17302fbf632b7b62d18b5a9aa", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -163,7 +163,7 @@ package Sem_Aux is\n    --  Searches the Rep_Item chain for a given entity E, for an instance of a\n    --  rep item (pragma, attribute definition clause, or aspect specification)\n    --  whose name matches the given name Nam. If Check_Parents is False then it\n-   --  only returns rep item that has been directly specified to E (and not\n+   --  only returns rep item that has been directly specified for E (and not\n    --  inherited from its parents, if any). If one is found, it is returned,\n    --  otherwise Empty is returned. A special case is that when Nam is\n    --  Name_Priority, the call will also find Interrupt_Priority.\n@@ -172,11 +172,11 @@ package Sem_Aux is\n      (E             : Entity_Id;\n       Nam           : Name_Id;\n       Check_Parents : Boolean := True) return Node_Id;\n-   --  Searches the Rep_Item chain for a given entity E, for an instance of a\n-   --  representation pragma whose name matches the given name Nam. If\n+   --  Searches the Rep_Item chain for a given entity E, for an instance\n+   --  of a representation pragma whose name matches the given name Nam. If\n    --  Check_Parents is False then it only returns representation pragma that\n-   --  has been directly specified to E (and not inherited from its parents, if\n-   --  any). If one is found, it is returned, otherwise Empty is returned. A\n+   --  has been directly specified for E (and not inherited from its parents,\n+   --  if any). If one is found, it is returned, otherwise Empty is returned. A\n    --  special case is that when Nam is Name_Priority, the call will also find\n    --  Interrupt_Priority.\n \n@@ -186,19 +186,19 @@ package Sem_Aux is\n       Check_Parents : Boolean := True) return Boolean;\n    --  Searches the Rep_Item chain for the given entity E, for an instance of a\n    --  rep item (pragma, attribute definition clause, or aspect specification)\n-   --  with the given name Nam. If Check_Parents is False then it only returns\n-   --  rep item that has been directly specified to E (and not inherited from\n-   --  its parents, if any). If found then True is returned, otherwise False\n-   --  indicates that no matching entry was found.\n+   --  with the given name Nam. If Check_Parents is False then it only checks\n+   --  for a rep item that has been directly specified for E (and not inherited\n+   --  from its parents, if any). If found then True is returned, otherwise\n+   --  False indicates that no matching entry was found.\n \n    function Has_Rep_Pragma\n      (E             : Entity_Id;\n       Nam           : Name_Id;\n       Check_Parents : Boolean := True) return Boolean;\n    --  Searches the Rep_Item chain for the given entity E, for an instance of a\n    --  representation pragma with the given name Nam. If Check_Parents is False\n-   --  then it only returns representation pragma that has been directly\n-   --  specified to E (and not inherited from its parents, if any). If found\n+   --  then it only checks for a representation pragma that has been directly\n+   --  specified for E (and not inherited from its parents, if any). If found\n    --  then True is returned, otherwise False indicates that no matching entry\n    --  was found.\n "}, {"sha": "6ed11b877665bb35bd92d93e5c0f288dbc0fe72b", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -1261,7 +1261,6 @@ package body Sem_Ch10 is\n         and then Warn_On_Obsolescent_Feature\n         and then Nkind (Unit_Node) not in N_Generic_Instantiation\n       then\n-\n          --  Push current compilation unit as scope, so that the test for\n          --  being within an obsolescent unit will work correctly. The check\n          --  is not performed within an instantiation, because the warning"}, {"sha": "ddfa7e75b0c8ee2bd737c50598e0dc70638c5bde", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -1445,6 +1445,8 @@ package body Sem_Ch13 is\n                         then\n                            Set_Uses_Lock_Free (E);\n                         end if;\n+\n+                        Record_Rep_Item (E, Aspect);\n                      end if;\n \n                      goto Continue;"}, {"sha": "d0f918df3977aead55ebf0f1ed2cb60041fd287c", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -5503,6 +5503,18 @@ package body Sem_Ch6 is\n             end if;\n          end if;\n \n+         --  Ada 2012:  mode conformance also requires that formal parameters\n+         --  be both aliased, or neither.\n+\n+         if Ctype >= Mode_Conformant\n+           and then Ada_Version >= Ada_2012\n+         then\n+            if Is_Aliased (Old_Formal) /= Is_Aliased (New_Formal) then\n+               Conformance_Error\n+                 (\"\\aliased parameter mismatch!\", New_Formal);\n+            end if;\n+         end if;\n+\n          if Ctype = Fully_Conformant then\n \n             --  Names must match. Error message is more accurate if we do"}, {"sha": "58a27c9325658b5d44d32ac7a4301510e186a25e", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 107, "deletions": 30, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -23,7 +23,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Aspects;  use Aspects;\n with Atree;    use Atree;\n with Checks;   use Checks;\n with Debug;    use Debug;\n@@ -263,16 +262,41 @@ package body Sem_Ch9 is\n                begin\n                   --  Function calls and attribute references must be static\n \n-                  if Nkind_In (N, N_Attribute_Reference, N_Function_Call)\n+                  if Nkind (N) = N_Attribute_Reference\n                     and then not Is_Static_Expression (N)\n                   then\n+                     if Complain then\n+                        Error_Msg_N\n+                          (\"non-static attribute reference not allowed\",\n+                           N);\n+                     end if;\n+\n+                     return Abandon;\n+\n+                  elsif Nkind (N) = N_Function_Call\n+                    and then not Is_Static_Expression (N)\n+                  then\n+                     if Complain then\n+                        Error_Msg_N (\"non-static function call not allowed\",\n+                                     N);\n+                     end if;\n+\n                      return Abandon;\n \n                   --  Loop statements and procedure calls are prohibited\n \n-                  elsif Nkind_In (N, N_Loop_Statement,\n-                                     N_Procedure_Call_Statement)\n-                  then\n+                  elsif Nkind (N) = N_Loop_Statement then\n+                     if Complain then\n+                        Error_Msg_N (\"loop not allowed\", N);\n+                     end if;\n+\n+                     return Abandon;\n+\n+                  elsif Nkind (N) = N_Procedure_Call_Statement then\n+                     if Complain then\n+                        Error_Msg_N (\"procedure call not allowed\", N);\n+                     end if;\n+\n                      return Abandon;\n \n                   --  References\n@@ -295,6 +319,12 @@ package body Sem_Ch9 is\n                           and then not Scope_Within_Or_Same (Scope (Id),\n                                          Protected_Body_Subprogram (Sub_Id))\n                         then\n+                           if Complain then\n+                              Error_Msg_NE\n+                                (\"reference to global variable& not allowed\",\n+                                 N, Id);\n+                           end if;\n+\n                            return Abandon;\n \n                         --  Prohibit non-scalar out parameters (scalar\n@@ -305,6 +335,12 @@ package body Sem_Ch9 is\n                           and then not Is_Elementary_Type (Etype (Id))\n                           and then Scope_Within_Or_Same (Scope (Id), Sub_Id)\n                         then\n+                           if Complain then\n+                              Error_Msg_NE\n+                                (\"non-elementary out parameter& not allowed\",\n+                                 N, Id);\n+                           end if;\n+\n                            return Abandon;\n \n                         --  A protected subprogram may reference only one\n@@ -327,6 +363,13 @@ package body Sem_Ch9 is\n                                  --  body.\n \n                                  elsif Comp /= Id then\n+                                    if Complain then\n+                                       Error_Msg_N\n+                                         (\"only one protected component \" &\n+                                          \"allowed\",\n+                                          N);\n+                                    end if;\n+\n                                     return Abandon;\n                                  end if;\n                               end if;\n@@ -352,6 +395,13 @@ package body Sem_Ch9 is\n                                  --  body.\n \n                                  elsif Comp /= Prival_Link (Id) then\n+                                    if Complain then\n+                                       Error_Msg_N\n+                                         (\"only one protected component \" &\n+                                          \"allowed\",\n+                                          N);\n+                                    end if;\n+\n                                     return Abandon;\n                                  end if;\n                               end if;\n@@ -1375,7 +1425,6 @@ package body Sem_Ch9 is\n \n    procedure Analyze_Protected_Body (N : Node_Id) is\n       Body_Id : constant Entity_Id := Defining_Identifier (N);\n-      Aspect  : Node_Id;\n       Last_E  : Entity_Id;\n \n       Spec_Id : Entity_Id;\n@@ -1390,6 +1439,50 @@ package body Sem_Ch9 is\n       --  differs from Spec_Id in the case of a single protected object, since\n       --  Spec_Id is set to the protected type in this case).\n \n+      function Lock_Free_Disabled return Boolean;\n+      --  This routine returns False if the protected object has a Lock_Free\n+      --  aspect specification or a Lock_Free pragma that turns off the\n+      --  lock-free implementation (e.g. whose expression is False).\n+\n+      ------------------------\n+      -- Lock_Free_Disabled --\n+      ------------------------\n+\n+      function Lock_Free_Disabled return Boolean is\n+         Ritem : constant Node_Id :=\n+                   Get_Rep_Item\n+                     (Spec_Id, Name_Lock_Free, Check_Parents => False);\n+\n+      begin\n+         if Present (Ritem) then\n+            --  Pragma with one argument\n+\n+            if Nkind (Ritem) = N_Pragma\n+              and then Present (Pragma_Argument_Associations (Ritem))\n+            then\n+               return\n+                 Is_False (Static_Boolean\n+                  (Expression (First (Pragma_Argument_Associations (Ritem)))));\n+\n+            --  Aspect Specification with expression present\n+\n+            elsif Nkind (Ritem) = N_Aspect_Specification\n+              and then Present (Expression (Ritem))\n+            then\n+               return Is_False (Static_Boolean (Expression (Ritem)));\n+\n+            --  Otherwise, return False\n+\n+            else\n+               return False;\n+            end if;\n+         end if;\n+\n+         return False;\n+      end Lock_Free_Disabled;\n+\n+   --  Start of processing for Analyze_Protected_Body\n+\n    begin\n       Tasking_Used := True;\n       Set_Ekind (Body_Id, E_Protected_Body);\n@@ -1450,37 +1543,21 @@ package body Sem_Ch9 is\n       Process_End_Label (N, 't', Ref_Id);\n       End_Scope;\n \n-      --  Turn on/off the lock-free implementation for the protected object\n-\n-      --  Look for a Lock_Free aspect with a False expression that disables the\n-      --  lock-free implementation.\n-\n-      Aspect := First (Aspect_Specifications (Parent (Spec_Id)));\n-\n-      while Present (Aspect) loop\n-         if Get_Aspect_Id (Chars (Identifier (Aspect))) = Aspect_Lock_Free\n-           and then Present (Expression (Aspect))\n-           and then Entity (Expression (Aspect)) = Standard_False\n-         then\n-            return;\n-         end if;\n-\n-         Next (Aspect);\n-      end loop;\n-\n-      --  When a Lock_Free aspect forces the lock-free implementation, verify\n-      --  the protected body meets all the restrictions, otherwise\n-      --  Allows_Lock_Free_Implementation issues an error message.\n+      --  When a Lock_Free aspect specification/pragma forces the lock-free\n+      --  implementation, verify the protected body meets all the restrictions,\n+      --  otherwise Allows_Lock_Free_Implementation issues an error message.\n \n       if Uses_Lock_Free (Spec_Id) then\n          if not Allows_Lock_Free_Implementation (N, Complain => True) then\n             return;\n          end if;\n \n-      --  In other cases, check both the protected declaration and body satisfy\n-      --  the lock-free restrictions.\n+      --  In other cases, if there is no aspect specification/pragma that\n+      --  disables the lock-free implementation, check both the protected\n+      --  declaration and body satisfy the lock-free restrictions.\n \n-      elsif Allows_Lock_Free_Implementation (Parent (Spec_Id))\n+      elsif not Lock_Free_Disabled\n+        and then Allows_Lock_Free_Implementation (Parent (Spec_Id))\n         and then Allows_Lock_Free_Implementation (N)\n       then\n          Set_Uses_Lock_Free (Spec_Id);"}, {"sha": "8b2eb1c908cfe52bf181a6c6be0ef3caa3d8bbdc", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -11118,6 +11118,54 @@ package body Sem_Prag is\n          when Pragma_List =>\n             null;\n \n+         ---------------\n+         -- Lock_Free --\n+         ---------------\n+\n+         --  pragma Lock_Free [(Boolean_EXPRESSION)];\n+\n+         when Pragma_Lock_Free => Lock_Free : declare\n+            P   : constant Node_Id := Parent (N);\n+            Arg : Node_Id;\n+            Ent : Entity_Id;\n+            Val : Boolean;\n+\n+         begin\n+            Check_No_Identifiers;\n+            Check_At_Most_N_Arguments (1);\n+\n+            --  Protected definition case\n+\n+            if Nkind (P) = N_Protected_Definition then\n+               Ent := Defining_Identifier (Parent (P));\n+\n+               --  One argument\n+\n+               if Arg_Count = 1 then\n+                  Arg := Get_Pragma_Arg (Arg1);\n+                  Val := Is_True (Static_Boolean (Arg));\n+\n+               --  Zero argument. In this case the expression is considered to\n+               --  be True.\n+\n+               else\n+                  Val := True;\n+               end if;\n+\n+               --  Check duplicate pragma before we chain the pragma in the Rep\n+               --  Item chain of Ent.\n+\n+               Check_Duplicate_Pragma (Ent);\n+               Record_Rep_Item        (Ent, N);\n+               Set_Uses_Lock_Free     (Ent, Val);\n+\n+            --  Anything else is incorrect\n+\n+            else\n+               Pragma_Misplaced;\n+            end if;\n+         end Lock_Free;\n+\n          --------------------\n          -- Locking_Policy --\n          --------------------\n@@ -15212,6 +15260,7 @@ package body Sem_Prag is\n       Pragma_Linker_Options                 => -1,\n       Pragma_Linker_Section                 => -1,\n       Pragma_List                           => -1,\n+      Pragma_Lock_Free                      => -1,\n       Pragma_Locking_Policy                 => -1,\n       Pragma_Long_Float                     => -1,\n       Pragma_Machine_Attribute              => -1,"}, {"sha": "f42c75478163949f4f9e05acd82da13436deb984", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -7745,14 +7745,13 @@ package body Sem_Util is\n             when N_String_Literal =>\n                return Is_Internally_Generated_Renaming (Parent (N));\n \n-            --  AI05-0003:  in Ada 2012, a qualified expression is a name.\n-            --  This allows disambiguation of function calls and the use of\n-            --  aggregates in more contexts.\n+            --  AI05-0003: In Ada 2012 a qualified expression is a name.\n+            --  This allows disambiguation of function calls and the use\n+            --  of aggregates in more contexts.\n \n             when N_Qualified_Expression =>\n                if Ada_Version <  Ada_2012 then\n                   return False;\n-\n                else\n                   return Is_Object_Reference (Expression (N))\n                     or else Nkind (Expression (N)) = N_Aggregate;"}, {"sha": "4ac3c220549ce019220d64d1154324b5c48f7c3a", "filename": "gcc/ada/snames.adb-tmpl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsnames.adb-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsnames.adb-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb-tmpl?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -219,6 +219,8 @@ package body Snames is\n          return Pragma_Interface;\n       elsif N = Name_Interrupt_Priority then\n          return Pragma_Interrupt_Priority;\n+      elsif N = Name_Lock_Free then\n+         return Pragma_Lock_Free;\n       elsif N = Name_Priority then\n          return Pragma_Priority;\n       elsif N = Name_Relative_Deadline then\n@@ -421,6 +423,7 @@ package body Snames is\n         or else N = Name_Fast_Math\n         or else N = Name_Interface\n         or else N = Name_Interrupt_Priority\n+        or else N = Name_Lock_Free\n         or else N = Name_Relative_Deadline\n         or else N = Name_Priority\n         or else N = Name_Storage_Size"}, {"sha": "38bab59120bb8be0b9895ad7478ab357804cc1f2", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a290fec3d61859b69f865d1769f4e11ac1c3dc8/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=2a290fec3d61859b69f865d1769f4e11ac1c3dc8", "patch": "@@ -142,7 +142,6 @@ package Snames is\n    Name_Dimension                      : constant Name_Id := N + $;\n    Name_Dimension_System               : constant Name_Id := N + $;\n    Name_Dynamic_Predicate              : constant Name_Id := N + $;\n-   Name_Lock_Free                      : constant Name_Id := N + $;\n    Name_Post                           : constant Name_Id := N + $;\n    Name_Pre                            : constant Name_Id := N + $;\n    Name_Static_Predicate               : constant Name_Id := N + $;\n@@ -522,6 +521,12 @@ package Snames is\n    Name_Linker_Options                 : constant Name_Id := N + $;\n    Name_Linker_Section                 : constant Name_Id := N + $; -- GNAT\n    Name_List                           : constant Name_Id := N + $;\n+\n+   --  Note: Lock_Free is not in this list because its name matches the name of\n+   --  the corresponding attribute. However, it is included in the definition\n+   --  of the type Pragma_Id, and the functions Get_Pragma_Id and Is_Pragma_Id\n+   --  correctly recognize and process Lock_Free. Lock_Free is a GNAT pragma.\n+\n    Name_Machine_Attribute              : constant Name_Id := N + $; -- GNAT\n    Name_Main                           : constant Name_Id := N + $; -- GNAT\n    Name_Main_Storage                   : constant Name_Id := N + $; -- GNAT\n@@ -810,6 +815,7 @@ package Snames is\n    Name_Last_Valid                     : constant Name_Id := N + $; -- Ada 12\n    Name_Leading_Part                   : constant Name_Id := N + $;\n    Name_Length                         : constant Name_Id := N + $;\n+   Name_Lock_Free                      : constant Name_Id := N + $; -- GNAT\n    Name_Machine_Emax                   : constant Name_Id := N + $;\n    Name_Machine_Emin                   : constant Name_Id := N + $;\n    Name_Machine_Mantissa               : constant Name_Id := N + $;\n@@ -1388,6 +1394,7 @@ package Snames is\n       Attribute_Last_Valid,\n       Attribute_Leading_Part,\n       Attribute_Length,\n+      Attribute_Lock_Free,\n       Attribute_Machine_Emax,\n       Attribute_Machine_Emin,\n       Attribute_Machine_Mantissa,\n@@ -1774,6 +1781,7 @@ package Snames is\n       Pragma_Fast_Math,\n       Pragma_Interface,\n       Pragma_Interrupt_Priority,\n+      Pragma_Lock_Free,\n       Pragma_Priority,\n       Pragma_Storage_Size,\n       Pragma_Storage_Unit,\n@@ -1853,8 +1861,8 @@ package Snames is\n    function Is_Pragma_Name (N : Name_Id) return Boolean;\n    --  Test to see if the name N is the name of a recognized pragma. Note that\n    --  pragmas AST_Entry, CPU, Dispatching_Domain, Fast_Math,\n-   --  Interrupt_Priority, Priority, Storage_Size, and Storage_Unit are\n-   --  recognized as pragmas by this function even though their names are\n+   --  Interrupt_Priority, Lock_Free, Priority, Storage_Size, and Storage_Unit\n+   --  are recognized as pragmas by this function even though their names are\n    --  separate from the other pragma names. For this reason, clients should\n    --  always use this function, rather than do range tests on Name_Id values.\n \n@@ -1895,8 +1903,9 @@ package Snames is\n    --  if N is not a name of a known (Ada defined or GNAT-specific) pragma.\n    --  Note that the function also works correctly for names of pragmas that\n    --  are not included in the main list of pragma Names (AST_Entry, CPU,\n-   --  Dispatching_Domain, Interrupt_Priority, Priority, Storage_Size, and\n-   --  Storage_Unit (e.g. Name_Storage_Size returns Pragma_Storage_Size).\n+   --  Dispatching_Domain, Interrupt_Priority, Lock_Free, Priority,\n+   --  Storage_Size, and Storage_Unit (e.g. Name_Storage_Size returns\n+   --  Pragma_Storage_Size).\n \n    function Get_Queuing_Policy_Id (N : Name_Id) return Queuing_Policy_Id;\n    --  Returns Id of queuing policy corresponding to given name. It is an error"}]}