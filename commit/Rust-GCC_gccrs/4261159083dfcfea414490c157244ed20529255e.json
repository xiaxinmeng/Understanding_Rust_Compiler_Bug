{"sha": "4261159083dfcfea414490c157244ed20529255e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI2MTE1OTA4M2RmY2ZlYTQxNDQ5MGMxNTcyNDRlZDIwNTI5MjU1ZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2004-07-22T14:57:09Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-07-22T14:57:09Z"}, "message": "* pt.c\ncp:\n        * pt.c  (get_template_base): Check type is completable.\ntestsuite:\n        * g++.dg/template/crash20.c: New.\n\nFrom-SVN: r85050", "tree": {"sha": "fa1afdcf738deb036a74e2c2591c52bebeabefa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa1afdcf738deb036a74e2c2591c52bebeabefa7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4261159083dfcfea414490c157244ed20529255e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4261159083dfcfea414490c157244ed20529255e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4261159083dfcfea414490c157244ed20529255e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4261159083dfcfea414490c157244ed20529255e/comments", "author": null, "committer": null, "parents": [{"sha": "4f5492cdfdff0df9d102a03fc3486ba004bf1b44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f5492cdfdff0df9d102a03fc3486ba004bf1b44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f5492cdfdff0df9d102a03fc3486ba004bf1b44"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "ce91f8965edfbb42e99ba1023b79d8fb61adb9f2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4261159083dfcfea414490c157244ed20529255e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4261159083dfcfea414490c157244ed20529255e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4261159083dfcfea414490c157244ed20529255e", "patch": "@@ -1,3 +1,7 @@\n+2004-07-22  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* pt.c (get_template_base): Check type is completable.\n+\n 2004-07-21  Eric Christopher  <echristo@redhat.com>\n \n \t* decl.c (poplevel): Inline unused variable checking."}, {"sha": "ca84b39442376c3eda8beffffca773bcb8953eee", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4261159083dfcfea414490c157244ed20529255e/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4261159083dfcfea414490c157244ed20529255e/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=4261159083dfcfea414490c157244ed20529255e", "patch": "@@ -9458,6 +9458,10 @@ get_template_base (tree tparms, tree targs, tree parm, tree arg)\n   my_friendly_assert (IS_AGGR_TYPE_CODE (TREE_CODE (arg)), 92);\n   \n   arg_binfo = TYPE_BINFO (complete_type (arg));\n+  if (!arg_binfo)\n+    /* The type could not be completed.  */\n+    return NULL_TREE;\n+  \n   rval = get_template_base_recursive (tparms, targs,\n \t\t\t\t      parm, arg_binfo, \n \t\t\t\t      NULL_TREE,"}, {"sha": "9e20ccc21b4c209c0de11af25ce25f676f328f88", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4261159083dfcfea414490c157244ed20529255e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4261159083dfcfea414490c157244ed20529255e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4261159083dfcfea414490c157244ed20529255e", "patch": "@@ -1,3 +1,7 @@\n+2004-07-22  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.dg/template/crash20.c: New.\n+\n 2004-07-22  David Billinghurst (David.Billinghurst@riotinto.com)\n \n \t* gfortran.dg/g77/970625-2.f Copy from g77.f-torture/execute. "}, {"sha": "0492b72e35ebd02b78e125cb2f6f2446bffa8a97", "filename": "gcc/testsuite/g++.dg/template/crash20.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4261159083dfcfea414490c157244ed20529255e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4261159083dfcfea414490c157244ed20529255e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash20.C?ref=4261159083dfcfea414490c157244ed20529255e", "patch": "@@ -0,0 +1,20 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 22 Jul 2004 <nathan@codesourcery.com>\n+\n+// ICE with incompletable type.\n+\n+class INC;\n+\n+template <typename T> class B {};\n+\n+template<typename T> void Foo (B<T> &);\n+\n+void Foo (INC &);\n+\n+void Baz (INC *p)\n+{\n+  Foo (*p);\n+}\n+"}]}