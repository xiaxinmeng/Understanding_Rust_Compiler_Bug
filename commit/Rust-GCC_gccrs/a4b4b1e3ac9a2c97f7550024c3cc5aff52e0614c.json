{"sha": "a4b4b1e3ac9a2c97f7550024c3cc5aff52e0614c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRiNGIxZTNhYzlhMmM5N2Y3NTUwMDI0YzNjYzVhZmY1MmUwNjE0Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-28T21:06:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-28T21:45:22Z"}, "message": "c++: Fix return deduction of lambda in discarded stmt.\n\nA return statement in a discarded statement is not used for return type\ndeduction, but we still want to do deduction for a return statement in a\nlambda in a discarded statement.\n\n\tPR c++/93442\n\t* parser.c (cp_parser_lambda_expression): Clear in_discarded_stmt.", "tree": {"sha": "4fb1e60471d5ca75a6af4f96a45a526d40cae462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fb1e60471d5ca75a6af4f96a45a526d40cae462"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4b4b1e3ac9a2c97f7550024c3cc5aff52e0614c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4b4b1e3ac9a2c97f7550024c3cc5aff52e0614c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4b4b1e3ac9a2c97f7550024c3cc5aff52e0614c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4b4b1e3ac9a2c97f7550024c3cc5aff52e0614c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25d62480c89d6db90a66ba69f6dbaa820a1ac90b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25d62480c89d6db90a66ba69f6dbaa820a1ac90b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25d62480c89d6db90a66ba69f6dbaa820a1ac90b"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "9392c850750651291a5f0c27e3277e43c4cd9077", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b4b1e3ac9a2c97f7550024c3cc5aff52e0614c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b4b1e3ac9a2c97f7550024c3cc5aff52e0614c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a4b4b1e3ac9a2c97f7550024c3cc5aff52e0614c", "patch": "@@ -1,5 +1,8 @@\n 2020-01-28  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/93442\n+\t* parser.c (cp_parser_lambda_expression): Clear in_discarded_stmt.\n+\n \tPR c++/93477\n \tPR c++/91476\n \t* decl2.c (copy_linkage): Do copy DECL_ONE_ONLY and DECL_WEAK."}, {"sha": "b8327823777d7ab501053e50b3010440953ad06e", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b4b1e3ac9a2c97f7550024c3cc5aff52e0614c/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b4b1e3ac9a2c97f7550024c3cc5aff52e0614c/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=a4b4b1e3ac9a2c97f7550024c3cc5aff52e0614c", "patch": "@@ -10530,6 +10530,10 @@ cp_parser_lambda_expression (cp_parser* parser)\n     parser->implicit_template_scope = 0;\n     parser->auto_is_implicit_function_template_parm_p = false;\n \n+    /* The body of a lambda in a discarded statement is not discarded.  */\n+    bool discarded = in_discarded_stmt;\n+    in_discarded_stmt = 0;\n+\n     /* By virtue of defining a local class, a lambda expression has access to\n        the private variables of enclosing classes.  */\n \n@@ -10560,6 +10564,8 @@ cp_parser_lambda_expression (cp_parser* parser)\n \n     finish_struct (type, /*attributes=*/NULL_TREE);\n \n+    in_discarded_stmt = discarded;\n+\n     parser->num_template_parameter_lists = saved_num_template_parameter_lists;\n     parser->in_statement = in_statement;\n     parser->in_switch_statement_p = in_switch_statement_p;"}, {"sha": "64c4cd27fe61f93d21198a02e1cc74855ef008ec", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if-lambda1.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b4b1e3ac9a2c97f7550024c3cc5aff52e0614c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if-lambda1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b4b1e3ac9a2c97f7550024c3cc5aff52e0614c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if-lambda1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if-lambda1.C?ref=a4b4b1e3ac9a2c97f7550024c3cc5aff52e0614c", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/93442\n+// { dg-do compile { target c++17 } }\n+\n+struct bar {\n+    int foo(){return 0;}\n+};\n+\n+int foobar() {\n+    if constexpr(true) {\n+        return 0;\n+    } else {\n+        return [](){\n+            return bar{};\n+        }().foo();\n+    }\n+}"}]}