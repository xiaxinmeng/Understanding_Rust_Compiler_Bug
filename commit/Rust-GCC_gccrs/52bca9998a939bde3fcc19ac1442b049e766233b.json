{"sha": "52bca9998a939bde3fcc19ac1442b049e766233b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJiY2E5OTk4YTkzOWJkZTNmY2MxOWFjMTQ0MmIwNDllNzY2MjMzYg==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2006-11-03T22:12:37Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2006-11-03T22:12:37Z"}, "message": "tree-dump.c (dump_enable_all): Rename local variable ir_type to avoid name conflicts.\n\n\t* tree-dump.c (dump_enable_all): Rename local variable\n\tir_type to avoid name conflicts.\n\t* cfgloopmanip.c (lv_adjust_loop_entry_edge): Check for IR_GIMPLE\n\tinstead of using ir_type().\n\t* profile.c (tree_register_profile_hooks): Likewise.\n\t* value-prof.c (tree_register_value_prof_hooks): Likewise.\n\t* basic-block.h (struct edge_def): Likewise.\n\t* config/arm/arm.c (legitimize_pic_address): Likewise.\n\t* coretypes.h (ir_type): New enum of all intermediate languages\n\tused in GCC.\n\t* cfghooks.c (ir_type): Rename to...\n\t(current_ir_type): ...this.  Distinguish between cfgrtl and\n\tcfglayout mode when the current IR is RTL.  Return enum ir_type.\n\t* cfghooks.h (ir_type): Replace with current_ir_type prototype.\n\nFrom-SVN: r118465", "tree": {"sha": "b81f9de22e415ae2de2e244d323a481b46f0b6db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b81f9de22e415ae2de2e244d323a481b46f0b6db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52bca9998a939bde3fcc19ac1442b049e766233b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52bca9998a939bde3fcc19ac1442b049e766233b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52bca9998a939bde3fcc19ac1442b049e766233b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52bca9998a939bde3fcc19ac1442b049e766233b/comments", "author": null, "committer": null, "parents": [{"sha": "6c6aa1afedfc25ef15dda6692a617bd5c5358c9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c6aa1afedfc25ef15dda6692a617bd5c5358c9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c6aa1afedfc25ef15dda6692a617bd5c5358c9c"}], "stats": {"total": 64, "additions": 48, "deletions": 16}, "files": [{"sha": "5ecfc7afb2a141e92ea729cdd8a97855d317a586", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52bca9998a939bde3fcc19ac1442b049e766233b", "patch": "@@ -1,3 +1,20 @@\n+2006-11-03  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* tree-dump.c (dump_enable_all): Rename local variable\n+\tir_type to avoid name conflicts.\n+\t* cfgloopmanip.c (lv_adjust_loop_entry_edge): Check for IR_GIMPLE\n+\tinstead of using ir_type().\n+\t* profile.c (tree_register_profile_hooks): Likewise.\n+\t* value-prof.c (tree_register_value_prof_hooks): Likewise.\n+\t* basic-block.h (struct edge_def): Likewise.\n+\t* config/arm/arm.c (legitimize_pic_address): Likewise.\n+\t* coretypes.h (ir_type): New enum of all intermediate languages\n+\tused in GCC.\n+\t* cfghooks.c (ir_type): Rename to...\n+\t(current_ir_type): ...this.  Distinguish between cfgrtl and\n+\tcfglayout mode when the current IR is RTL.  Return enum ir_type.\n+\t* cfghooks.h (ir_type): Replace with current_ir_type prototype.\n+\n 2006-11-03  Paul Brook  <paul@codesourcery.com>\n \n \tgcc/"}, {"sha": "371b124baca33a016012279bf7b9e069b3f9893b", "filename": "gcc/basic-block.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=52bca9998a939bde3fcc19ac1442b049e766233b", "patch": "@@ -123,9 +123,9 @@ struct edge_def GTY(())\n \n   /* Instructions queued on the edge.  */\n   union edge_def_insns {\n-    rtx GTY ((tag (\"0\"))) r;\n-    tree GTY ((tag (\"1\"))) t;\n-  } GTY ((desc (\"ir_type ()\"))) insns;\n+    tree GTY ((tag (\"true\"))) t;\n+    rtx GTY ((tag (\"false\"))) r;\n+  } GTY ((desc (\"current_ir_type () == IR_GIMPLE\"))) insns;\n \n   /* Auxiliary info specific to a pass.  */\n   PTR GTY ((skip (\"\"))) aux;"}, {"sha": "4d89aea8f5c9123f4765e2bcf55ecfbbfa5e8a60", "filename": "gcc/cfghooks.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Fcfghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Fcfghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.c?ref=52bca9998a939bde3fcc19ac1442b049e766233b", "patch": "@@ -55,12 +55,19 @@ tree_register_cfg_hooks (void)\n   cfg_hooks = &tree_cfg_hooks;\n }\n \n-/* Returns current ir type (rtl = 0, trees = 1).  */\n+/* Returns current ir type.  */\n \n-int\n-ir_type (void)\n+enum ir_type\n+current_ir_type (void)\n {\n-  return cfg_hooks == &tree_cfg_hooks ? 1 : 0;\n+  if (cfg_hooks == &tree_cfg_hooks)\n+    return IR_GIMPLE;\n+  else if (cfg_hooks == &rtl_cfg_hooks)\n+    return IR_RTL_CFGRTL;\n+  else if (cfg_hooks == &cfg_layout_rtl_cfg_hooks)\n+    return IR_RTL_CFGLAYOUT;\n+  else\n+    gcc_unreachable ();\n }\n \n /* Verify the CFG consistency."}, {"sha": "bdab8676f535600c690493c411e8f598510045e1", "filename": "gcc/cfghooks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Fcfghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Fcfghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.h?ref=52bca9998a939bde3fcc19ac1442b049e766233b", "patch": "@@ -184,7 +184,7 @@ extern struct cfg_hooks rtl_cfg_hooks;\n extern struct cfg_hooks cfg_layout_rtl_cfg_hooks;\n \n /* Declarations.  */\n-extern int ir_type (void);\n+extern enum ir_type current_ir_type (void);\n extern void rtl_register_cfg_hooks (void);\n extern void cfg_layout_rtl_register_cfg_hooks (void);\n extern void tree_register_cfg_hooks (void);"}, {"sha": "1ef65143d442fe3c8316b95954c633438e0e47c8", "filename": "gcc/cfgloopmanip.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Fcfgloopmanip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Fcfgloopmanip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.c?ref=52bca9998a939bde3fcc19ac1442b049e766233b", "patch": "@@ -1268,7 +1268,8 @@ lv_adjust_loop_entry_edge (basic_block first_head,\n \t\t\t  cond_expr);\n \n   /* Don't set EDGE_TRUE_VALUE in RTL mode, as it's invalid there.  */\n-  e1 = make_edge (new_head, first_head, ir_type () ? EDGE_TRUE_VALUE : 0);\n+  e1 = make_edge (new_head, first_head,\n+\t\t  current_ir_type () == IR_GIMPLE ? EDGE_TRUE_VALUE : 0);\n   set_immediate_dominator (CDI_DOMINATORS, first_head, new_head);\n   set_immediate_dominator (CDI_DOMINATORS, second_head, new_head);\n "}, {"sha": "6527f5556da40433225ad1ff696a0d71f34df4d0", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=52bca9998a939bde3fcc19ac1442b049e766233b", "patch": "@@ -3230,7 +3230,7 @@ legitimize_pic_address (rtx orig, enum machine_mode mode, rtx reg)\n \t      /* Play games to avoid marking the function as needing pic\n \t\t if we are being called as part of the cost-estimation\n \t\t process.  */\n-\t      if (!ir_type())\n+\t      if (current_ir_type () != IR_GIMPLE)\n \t\tcurrent_function_uses_pic_offset_table = 1;\n \t    }\n \t  else\n@@ -3242,7 +3242,7 @@ legitimize_pic_address (rtx orig, enum machine_mode mode, rtx reg)\n \t      /* Play games to avoid marking the function as needing pic\n \t\t if we are being called as part of the cost-estimation\n \t\t process.  */\n-\t      if (!ir_type())\n+\t      if (current_ir_type () != IR_GIMPLE)\n \t\t{\n \t\t  current_function_uses_pic_offset_table = 1;\n \t\t  start_sequence ();"}, {"sha": "3f0c58a7e06ed09eea4a50d4ad7eca3705841dea", "filename": "gcc/coretypes.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Fcoretypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Fcoretypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoretypes.h?ref=52bca9998a939bde3fcc19ac1442b049e766233b", "patch": "@@ -48,6 +48,13 @@ typedef union tree_node *tree;\n union section;\n typedef union section section;\n \n+/* The major intermediate representations of GCC.  */\n+enum ir_type {\n+  IR_GIMPLE,\n+  IR_RTL_CFGRTL,\n+  IR_RTL_CFGLAYOUT\n+};\n+\n /* Provide forward struct declaration so that we don't have to include\n    all of cpplib.h whenever a random prototype includes a pointer.\n    Note that the cpp_reader typedef remains part of cpplib.h.  */"}, {"sha": "689af18a8e4bd2038e75879545ca98ad424cb356", "filename": "gcc/profile.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=52bca9998a939bde3fcc19ac1442b049e766233b", "patch": "@@ -1228,7 +1228,7 @@ end_branch_prob (void)\n void\n tree_register_profile_hooks (void)\n {\n-  gcc_assert (ir_type ());\n+  gcc_assert (current_ir_type () == IR_GIMPLE);\n   profile_hooks = &tree_profile_hooks;\n }\n "}, {"sha": "8c008ab705c88d5fa7f0f04402c928594e01128d", "filename": "gcc/tree-dump.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Ftree-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Ftree-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dump.c?ref=52bca9998a939bde3fcc19ac1442b049e766233b", "patch": "@@ -956,12 +956,12 @@ dump_end (enum tree_dump_index phase ATTRIBUTE_UNUSED, FILE *stream)\n static int\n dump_enable_all (int flags, int letter)\n {\n-  int ir_type = (flags & (TDF_TREE | TDF_RTL | TDF_IPA));\n+  int ir_dump_type = (flags & (TDF_TREE | TDF_RTL | TDF_IPA));\n   int n = 0;\n   size_t i;\n \n   for (i = TDI_none + 1; i < (size_t) TDI_end; i++)\n-    if ((dump_files[i].flags & ir_type)\n+    if ((dump_files[i].flags & ir_dump_type)\n \t&& (letter == 0 || letter == dump_files[i].letter))\n       {\n         dump_files[i].state = -1;\n@@ -970,7 +970,7 @@ dump_enable_all (int flags, int letter)\n       }\n \n   for (i = 0; i < extra_dump_files_in_use; i++)\n-    if ((extra_dump_files[i].flags & ir_type)\n+    if ((extra_dump_files[i].flags & ir_dump_type)\n \t&& (letter == 0 || letter == extra_dump_files[i].letter))\n       {\n         extra_dump_files[i].state = -1;"}, {"sha": "993bd514ad42ff7788f36cb50b51cd96fbc2c35f", "filename": "gcc/value-prof.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52bca9998a939bde3fcc19ac1442b049e766233b/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=52bca9998a939bde3fcc19ac1442b049e766233b", "patch": "@@ -854,8 +854,8 @@ static struct value_prof_hooks tree_value_prof_hooks = {\n void\n tree_register_value_prof_hooks (void)\n {\n+  gcc_assert (current_ir_type () == IR_GIMPLE);\n   value_prof_hooks = &tree_value_prof_hooks;\n-  gcc_assert (ir_type ());\n }\n \f\n /* IR-independent entry points.  */"}]}