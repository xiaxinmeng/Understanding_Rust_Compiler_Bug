{"sha": "d9a503018007da3173ace8c7f6a2211f8574e773", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDlhNTAzMDE4MDA3ZGEzMTczYWNlOGM3ZjZhMjIxMWY4NTc0ZTc3Mw==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2003-10-24T14:45:52Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2003-10-24T14:45:52Z"}, "message": "re PR c++/11076 (ICE with invalid base class)\n\n\tPR c++/11076\n\t* class.c (handle_using_decl): Swap arguments of error_not_base_type.\n\t* parser.c (cp_parser_direct_declarator): Only resolve typename for\n\tnamespace scope declarations.\n\n\t* g++.dg/template/crash13.C: New test.\n\nFrom-SVN: r72897", "tree": {"sha": "0a820e98eecb9257bbb9fec1d6b3f9ab1554cc1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a820e98eecb9257bbb9fec1d6b3f9ab1554cc1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9a503018007da3173ace8c7f6a2211f8574e773", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9a503018007da3173ace8c7f6a2211f8574e773", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9a503018007da3173ace8c7f6a2211f8574e773", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9a503018007da3173ace8c7f6a2211f8574e773/comments", "author": null, "committer": null, "parents": [{"sha": "b6d8393123f45dac768ba6da0dfd58f80074557d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d8393123f45dac768ba6da0dfd58f80074557d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6d8393123f45dac768ba6da0dfd58f80074557d"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "0d1cd9173ad0be3616c281fb64f3bf437a7698b0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a503018007da3173ace8c7f6a2211f8574e773/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a503018007da3173ace8c7f6a2211f8574e773/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d9a503018007da3173ace8c7f6a2211f8574e773", "patch": "@@ -1,3 +1,10 @@\n+2003-10-24  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/11076\n+\t* class.c (handle_using_decl): Swap arguments of error_not_base_type.\n+\t* parser.c (cp_parser_direct_declarator): Only resolve typename for\n+\tnamespace scope declarations.\n+\n 2003-10-24  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/12698, c++/12699, c++/12700, c++/12566"}, {"sha": "a053956ad9ae71f382a91ee8c1c28a40b4128361", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a503018007da3173ace8c7f6a2211f8574e773/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a503018007da3173ace8c7f6a2211f8574e773/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=d9a503018007da3173ace8c7f6a2211f8574e773", "patch": "@@ -1109,7 +1109,7 @@ handle_using_decl (tree using_decl, tree t)\n   binfo = lookup_base (t, ctype, ba_any, NULL);\n   if (! binfo)\n     {\n-      error_not_base_type (t, ctype);\n+      error_not_base_type (ctype, t);\n       return;\n     }\n   "}, {"sha": "9b040f557d0a9cd2dfae79727665527aa8717b41", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a503018007da3173ace8c7f6a2211f8574e773/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a503018007da3173ace8c7f6a2211f8574e773/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=d9a503018007da3173ace8c7f6a2211f8574e773", "patch": "@@ -9871,7 +9871,8 @@ cp_parser_direct_declarator (cp_parser* parser,\n \t  if (declarator == error_mark_node)\n \t    break;\n \t  \n-\t  if (TREE_CODE (declarator) == SCOPE_REF)\n+\t  if (TREE_CODE (declarator) == SCOPE_REF\n+\t      && !current_scope ())\n \t    {\n \t      tree scope = TREE_OPERAND (declarator, 0);\n "}, {"sha": "7a56993777c48c0190c8fea0909b8cbcf668d28f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a503018007da3173ace8c7f6a2211f8574e773/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a503018007da3173ace8c7f6a2211f8574e773/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d9a503018007da3173ace8c7f6a2211f8574e773", "patch": "@@ -1,3 +1,8 @@\n+2003-10-24  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/11076\n+\t* g++.dg/template/crash13.C: New test.\n+\n 2003-10-24  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* gcc.dg/c99-restrict-2.c: New test."}, {"sha": "1d2a1f5dde0d65225fe861ad00e5ef567f690391", "filename": "gcc/testsuite/g++.dg/template/crash13.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a503018007da3173ace8c7f6a2211f8574e773/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a503018007da3173ace8c7f6a2211f8574e773/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash13.C?ref=d9a503018007da3173ace8c7f6a2211f8574e773", "patch": "@@ -0,0 +1,18 @@\n+// { dg-do compile }\n+\n+// Origin: Volker Reichelt <reichelt@gcc.gnu.org>\n+\n+// PR c++/11076: ICE for invalid access declaration containing typename.\n+\n+template<typename, typename T=void> struct A\n+{\n+    typedef A<T,T> B;\n+};\n+\n+template <typename T> struct C\n+{\t\t\t\t// { dg-error \"not a base type\" }\n+    typedef typename A<T>::B X;\n+    X::Y;\n+};\n+\n+C<void> c;\t\t\t// { dg-error \"instantiated\" }"}]}