{"sha": "df41897928b4879df9f38a40a0e22659076544c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY0MTg5NzkyOGI0ODc5ZGY5ZjM4YTQwYTBlMjI2NTkwNzY1NDRjMQ==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2020-07-21T16:20:36Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2020-07-21T16:20:36Z"}, "message": "Scale down long-running tree-prof.exp tests for non-FDO testing.\n\n2020-07-21  Sandra Loosemore  <sandra@codesourcery.com>\n\ngcc/testsuite/\n\t* lib/profopt.exp (auto-profopt-execute): Pass -DFOR_AUTOFDO_TESTING\n\ton command line for both compiles.\n\t* gcc.dg/tree-prof/cold_partition_label.c: Scale down for\n\tnon-FDO testing.\n\t* gcc.dg/tree-prof/crossmodule-indir-call-topn-1.c: Likewise.\n\t* gcc.dg/tree-prof/crossmodule-indir-call-topn-2.c: Likewise.\n\t* gcc.dg/tree-prof/indir-call-prof-topn.c: Likewise.\n\t* gcc.dg/tree-prof/section-attr-1.c: Likewise.\n\t* gcc.dg/tree-prof/section-attr-2.c: Likewise.\n\t* gcc.dg/tree-prof/section-attr-3.c: Likewise.", "tree": {"sha": "ada3d6f7a1ca567816c5df0186936933938986ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ada3d6f7a1ca567816c5df0186936933938986ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df41897928b4879df9f38a40a0e22659076544c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df41897928b4879df9f38a40a0e22659076544c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df41897928b4879df9f38a40a0e22659076544c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df41897928b4879df9f38a40a0e22659076544c1/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e1e858cc8fbcbffa978a97ccdffdd2644639598", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e1e858cc8fbcbffa978a97ccdffdd2644639598", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e1e858cc8fbcbffa978a97ccdffdd2644639598"}], "stats": {"total": 60, "additions": 51, "deletions": 9}, "files": [{"sha": "511b61067c0e155aa843c436e9894cc9caf98e38", "filename": "gcc/testsuite/gcc.dg/tree-prof/cold_partition_label.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df41897928b4879df9f38a40a0e22659076544c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcold_partition_label.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df41897928b4879df9f38a40a0e22659076544c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcold_partition_label.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcold_partition_label.c?ref=df41897928b4879df9f38a40a0e22659076544c1", "patch": "@@ -3,6 +3,12 @@\n /* { dg-require-effective-target freorder } */\n /* { dg-options \"-O2 -freorder-blocks-and-partition -save-temps -fdump-tree-optimized\" } */\n \n+#ifdef FOR_AUTOFDO_TESTING\n+#define MAXITER 1000000\n+#else\n+#define MAXITER 10000\n+#endif\n+\n #define SIZE 10000\n \n const char *sarr[SIZE];\n@@ -32,7 +38,7 @@ main (int argc, char *argv[])\n   int i;\n   buf_hot =  \"hello\";\n   buf_cold = \"world\";\n-  for (i = 0; i < 1000000; i++)\n+  for (i = 0; i < MAXITER; i++)\n     foo (argc);\n   return 0;\n }"}, {"sha": "b57d30f916372c17b9987e9920a6bc138dffbca4", "filename": "gcc/testsuite/gcc.dg/tree-prof/crossmodule-indir-call-topn-1.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df41897928b4879df9f38a40a0e22659076544c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcrossmodule-indir-call-topn-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df41897928b4879df9f38a40a0e22659076544c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcrossmodule-indir-call-topn-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcrossmodule-indir-call-topn-1.c?ref=df41897928b4879df9f38a40a0e22659076544c1", "patch": "@@ -3,6 +3,12 @@\n /* { dg-require-profiling \"-fprofile-generate\" } */\n /* { dg-options \"-O2 -flto -DDOJOB=1 -fdump-ipa-profile_estimate\" } */\n \n+#ifdef FOR_AUTOFDO_TESTING\n+#define MAXITER 350000000\n+#else\n+#define MAXITER 3500000\n+#endif\n+\n #include <stdio.h>\n \n typedef int (*fptr) (int);\n@@ -22,7 +28,7 @@ main()\n \n   x = one (3);\n \n-  for (i = 0; i < 350000000; i++)\n+  for (i = 0; i < MAXITER; i++)\n     {\n       x = (*p) (3);\n       p = table[x];"}, {"sha": "6b5ae93214a561c46188f191f914b84d7152ef40", "filename": "gcc/testsuite/gcc.dg/tree-prof/crossmodule-indir-call-topn-2.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df41897928b4879df9f38a40a0e22659076544c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcrossmodule-indir-call-topn-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df41897928b4879df9f38a40a0e22659076544c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcrossmodule-indir-call-topn-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcrossmodule-indir-call-topn-2.c?ref=df41897928b4879df9f38a40a0e22659076544c1", "patch": "@@ -3,6 +3,12 @@\n /* { dg-require-profiling \"-fprofile-generate\" } */\n /* { dg-options \"-O2 -flto -DDOJOB=1 -fdump-ipa-profile_estimate\" } */\n \n+#ifdef FOR_AUTOFDO_TESTING\n+#define MAXITER 350000000\n+#else\n+#define MAXITER 3500000\n+#endif\n+\n #include <stdio.h>\n \n typedef int (*fptr) (int);\n@@ -21,7 +27,7 @@ int foo ()\n \n   x = one (3);\n \n-  for (i = 0; i < 350000000; i++)\n+  for (i = 0; i < MAXITER; i++)\n     {\n       x = (*p) (3);\n       p = table[x];"}, {"sha": "9a1a0be51b2559265be8c01584dfd5146c2b2f94", "filename": "gcc/testsuite/gcc.dg/tree-prof/indir-call-prof-topn.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df41897928b4879df9f38a40a0e22659076544c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof-topn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df41897928b4879df9f38a40a0e22659076544c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof-topn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof-topn.c?ref=df41897928b4879df9f38a40a0e22659076544c1", "patch": "@@ -1,6 +1,12 @@\n /* { dg-require-profiling \"-fprofile-generate\" } */\n /* { dg-options \"-O2 -fdump-ipa-profile_estimate\" } */\n \n+#ifdef FOR_AUTOFDO_TESTING\n+#define MAXITER 350000000\n+#else\n+#define MAXITER 3500000\n+#endif\n+\n #include <stdio.h>\n \n typedef int (*fptr) (int);\n@@ -26,7 +32,7 @@ main()\n \n   one (3);\n \n-  for (i = 0; i < 350000000; i++)\n+  for (i = 0; i < MAXITER; i++)\n     {\n       x = (*p) (3);\n       p = table[x];"}, {"sha": "2087d0d205957643661fe91d315e87769baee38c", "filename": "gcc/testsuite/gcc.dg/tree-prof/section-attr-1.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df41897928b4879df9f38a40a0e22659076544c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fsection-attr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df41897928b4879df9f38a40a0e22659076544c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fsection-attr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fsection-attr-1.c?ref=df41897928b4879df9f38a40a0e22659076544c1", "patch": "@@ -3,6 +3,12 @@\n /* { dg-require-effective-target freorder } */\n /* { dg-options \"-O2 -fno-profile-reorder-functions -freorder-blocks-and-partition -save-temps\" } */\n \n+#ifdef FOR_AUTOFDO_TESTING\n+#define MAXITER 1000000\n+#else\n+#define MAXITER 10000\n+#endif\n+\n #define SIZE 10000\n \n #define NOINLINE __attribute__((noinline)) __attribute__ ((noclone))\n@@ -24,7 +30,7 @@ main (int argc, char *argv[])\n   int i;\n   buf_hot =  \"hello\";\n   buf_cold = \"world\";\n-  for (i = 0; i < 1000000; i++)\n+  for (i = 0; i < MAXITER; i++)\n     foo (argc);\n   return 0;\n }"}, {"sha": "b02526beaeae04df927bd27273fa7f061a3063a1", "filename": "gcc/testsuite/gcc.dg/tree-prof/section-attr-2.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df41897928b4879df9f38a40a0e22659076544c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fsection-attr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df41897928b4879df9f38a40a0e22659076544c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fsection-attr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fsection-attr-2.c?ref=df41897928b4879df9f38a40a0e22659076544c1", "patch": "@@ -4,6 +4,12 @@\n /* { dg-require-effective-target freorder } */\n /* { dg-options \"-O2 -fno-profile-reorder-functions -freorder-blocks-and-partition -save-temps\" } */\n \n+#ifdef FOR_AUTOFDO_TESTING\n+#define MAXITER 1000000\n+#else\n+#define MAXITER 10000\n+#endif\n+\n #define SIZE 10000\n \n #define NOINLINE __attribute__((noinline)) __attribute__ ((noclone))\n@@ -20,7 +26,7 @@ main (int argc, char *argv[])\n   int i;\n   buf_hot =  \"hello\";\n   buf_cold = \"world\";\n-  for (i = 0; i < 1000000; i++)\n+  for (i = 0; i < MAXITER; i++)\n     foo (argc);\n   return 0;\n }"}, {"sha": "da0640706539beb88b992b89035b96f6dcf8132f", "filename": "gcc/testsuite/gcc.dg/tree-prof/section-attr-3.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df41897928b4879df9f38a40a0e22659076544c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fsection-attr-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df41897928b4879df9f38a40a0e22659076544c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fsection-attr-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fsection-attr-3.c?ref=df41897928b4879df9f38a40a0e22659076544c1", "patch": "@@ -4,6 +4,12 @@\n /* { dg-require-effective-target freorder } */\n /* { dg-options \"-O2 -fno-profile-reorder-functions -freorder-blocks-and-partition -save-temps\" } */\n \n+#ifdef FOR_AUTOFDO_TESTING\n+#define MAXITER 1000000\n+#else\n+#define MAXITER 10000\n+#endif\n+\n #define SIZE 10000\n \n #define NOINLINE __attribute__((noinline)) __attribute__ ((noclone))\n@@ -24,7 +30,7 @@ main (int argc, char *argv[])\n   int i;\n   buf_hot =  \"hello\";\n   buf_cold = \"world\";\n-  for (i = 0; i < 1000000; i++)\n+  for (i = 0; i < MAXITER; i++)\n     foo (argc);\n   return 0;\n }"}, {"sha": "d6863439d049e98f267f22f89dca8fed2102991c", "filename": "gcc/testsuite/lib/profopt.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df41897928b4879df9f38a40a0e22659076544c1/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df41897928b4879df9f38a40a0e22659076544c1/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fprofopt.exp?ref=df41897928b4879df9f38a40a0e22659076544c1", "patch": "@@ -289,8 +289,8 @@ proc auto-profopt-execute { src } {\n         return\n     }\n     set profile_wrapper [profopt-perf-wrapper]\n-    set profile_option \"-g\"\n-    set feedback_option \"-fauto-profile\"\n+    set profile_option \"-g -DFOR_AUTOFDO_TESTING\"\n+    set feedback_option \"-fauto-profile -DFOR_AUTOFDO_TESTING\"\n     set run_autofdo 1\n     profopt-execute $src\n     unset profile_wrapper"}]}