{"sha": "992113522d88d5676b29a74bde4f3d5f21fd0c85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkyMTEzNTIyZDg4ZDU2NzZiMjlhNzRiZGU0ZjNkNWYyMWZkMGM4NQ==", "commit": {"author": {"name": "Aaron Sawdey", "email": "acsawdey@linux.vnet.ibm.com", "date": "2017-03-22T17:47:55Z"}, "committer": {"name": "Aaron Sawdey", "email": "acsawdey@gcc.gnu.org", "date": "2017-03-22T17:47:55Z"}, "message": "re PR target/80123 (libgomp tests pr66199-2.c and pr66199-5.c fail with -mcpu=power9)\n\n2017-03-21  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>\n\n\tPR target/80123\n\t* doc/md.texi (Constraints): Document wA constraint.\n\t* config/rs6000/constraints.md (wA): New.\n\t* config/rs6000/rs6000.c (rs6000_debug_reg_global): Add wA reg_class.\n\t(rs6000_init_hard_regno_mode_ok): Init wA constraint.\n\t* config/rs6000/rs6000.h (RS6000_CONSTRAINT_wA): New.\n\t* config/rs6000/vsx.md (vsx_splat_<mode>): Use wA constraint.\n\nFrom-SVN: r246394", "tree": {"sha": "0d8a161baa97b5718c8ba78d3307c5f8182be606", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d8a161baa97b5718c8ba78d3307c5f8182be606"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/992113522d88d5676b29a74bde4f3d5f21fd0c85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/992113522d88d5676b29a74bde4f3d5f21fd0c85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/992113522d88d5676b29a74bde4f3d5f21fd0c85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/992113522d88d5676b29a74bde4f3d5f21fd0c85/comments", "author": null, "committer": null, "parents": [{"sha": "2f029c0898b6c1afcfe31c9f459f1ff43e9cce3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f029c0898b6c1afcfe31c9f459f1ff43e9cce3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f029c0898b6c1afcfe31c9f459f1ff43e9cce3f"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "eaf765086213b14f7734ed3ec38e83bbc216f305", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992113522d88d5676b29a74bde4f3d5f21fd0c85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992113522d88d5676b29a74bde4f3d5f21fd0c85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=992113522d88d5676b29a74bde4f3d5f21fd0c85", "patch": "@@ -1,3 +1,13 @@\n+2017-03-21  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>\n+\n+\tPR target/80123\n+\t* doc/md.texi (Constraints): Document wA constraint.\n+\t* config/rs6000/constraints.md (wA): New.\n+\t* config/rs6000/rs6000.c (rs6000_debug_reg_global): Add wA reg_class.\n+\t(rs6000_init_hard_regno_mode_ok): Init wA constraint.\n+\t* config/rs6000/rs6000.h (RS6000_CONSTRAINT_wA): New.\n+\t* config/rs6000/vsx.md (vsx_splat_<mode>): Use wA constraint.\n+\n 2017-03-22  Cesar Philippidis  <cesar@codesourcery.com>\n \n \tPR c++/80029"}, {"sha": "44f45d8b676123788c2688f124c035471ba7d709", "filename": "gcc/config/rs6000/constraints.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992113522d88d5676b29a74bde4f3d5f21fd0c85/gcc%2Fconfig%2Frs6000%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992113522d88d5676b29a74bde4f3d5f21fd0c85/gcc%2Fconfig%2Frs6000%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fconstraints.md?ref=992113522d88d5676b29a74bde4f3d5f21fd0c85", "patch": "@@ -133,6 +133,9 @@\n (define_register_constraint \"wz\" \"rs6000_constraints[RS6000_CONSTRAINT_wz]\"\n   \"Floating point register if the LFIWZX instruction is enabled or NO_REGS.\")\n \n+(define_register_constraint \"wA\" \"rs6000_constraints[RS6000_CONSTRAINT_wA]\"\n+  \"BASE_REGS if 64-bit instructions are enabled or NO_REGS.\")\n+\n ;; wB needs ISA 2.07 VUPKHSW\n (define_constraint \"wB\"\n   \"Signed 5-bit constant integer that can be loaded into an altivec register.\""}, {"sha": "9db85e698d589836c05e395547c475f693fb4b57", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992113522d88d5676b29a74bde4f3d5f21fd0c85/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992113522d88d5676b29a74bde4f3d5f21fd0c85/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=992113522d88d5676b29a74bde4f3d5f21fd0c85", "patch": "@@ -2468,6 +2468,7 @@ rs6000_debug_reg_global (void)\n \t   \"wx reg_class = %s\\n\"\n \t   \"wy reg_class = %s\\n\"\n \t   \"wz reg_class = %s\\n\"\n+\t   \"wA reg_class = %s\\n\"\n \t   \"wH reg_class = %s\\n\"\n \t   \"wI reg_class = %s\\n\"\n \t   \"wJ reg_class = %s\\n\"\n@@ -2500,6 +2501,7 @@ rs6000_debug_reg_global (void)\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_wx]],\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_wy]],\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_wz]],\n+\t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_wA]],\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_wH]],\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_wI]],\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_wJ]],\n@@ -3210,7 +3212,10 @@ rs6000_init_hard_regno_mode_ok (bool global_init_p)\n     }\n \n   if (TARGET_POWERPC64)\n-    rs6000_constraints[RS6000_CONSTRAINT_wr] = GENERAL_REGS;\n+    {\n+      rs6000_constraints[RS6000_CONSTRAINT_wr] = GENERAL_REGS;\n+      rs6000_constraints[RS6000_CONSTRAINT_wA] = BASE_REGS;\n+    }\n \n   if (TARGET_P8_VECTOR && TARGET_UPPER_REGS_SF)\t\t\t/* SFmode  */\n     {"}, {"sha": "3780a49d902b3c3519cc59aa7f08b42deb137bc5", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992113522d88d5676b29a74bde4f3d5f21fd0c85/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992113522d88d5676b29a74bde4f3d5f21fd0c85/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=992113522d88d5676b29a74bde4f3d5f21fd0c85", "patch": "@@ -1612,6 +1612,7 @@ enum r6000_reg_class_enum {\n   RS6000_CONSTRAINT_wx,\t\t/* FPR register for STFIWX */\n   RS6000_CONSTRAINT_wy,\t\t/* VSX register for SF */\n   RS6000_CONSTRAINT_wz,\t\t/* FPR register for LFIWZX */\n+  RS6000_CONSTRAINT_wA,\t\t/* BASE_REGS if 64-bit.  */\n   RS6000_CONSTRAINT_wH,\t\t/* Altivec register for 32-bit integers.  */\n   RS6000_CONSTRAINT_wI,\t\t/* VSX register for 32-bit integers.  */\n   RS6000_CONSTRAINT_wJ,\t\t/* VSX register for 8/16-bit integers.  */"}, {"sha": "bfc15270bb0ae601e545cc68ee5519e3d1a7d376", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992113522d88d5676b29a74bde4f3d5f21fd0c85/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992113522d88d5676b29a74bde4f3d5f21fd0c85/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=992113522d88d5676b29a74bde4f3d5f21fd0c85", "patch": "@@ -3072,7 +3072,7 @@\n \t\t\t\t\t\"=<VSa>,    <VSa>,we,<VS_64dm>\")\n \t(vec_duplicate:VSX_D\n \t (match_operand:<VS_scalar> 1 \"splat_input_operand\"\n-\t\t\t\t\t\"<VS_64reg>,Z,    b, wr\")))]\n+\t\t\t\t\t\"<VS_64reg>,Z,    b, wA\")))]\n   \"VECTOR_MEM_VSX_P (<MODE>mode)\"\n   \"@\n    xxpermdi %x0,%x1,%x1,0"}, {"sha": "dde3644890e3de3612a487966e29395cd76cb670", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/992113522d88d5676b29a74bde4f3d5f21fd0c85/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/992113522d88d5676b29a74bde4f3d5f21fd0c85/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=992113522d88d5676b29a74bde4f3d5f21fd0c85", "patch": "@@ -3122,6 +3122,9 @@ FP or VSX register to perform ISA 2.07 float ops or NO_REGS.\n @item wz\n Floating point register if the LFIWZX instruction is enabled or NO_REGS.\n \n+@item wA\n+Address base register if 64-bit instructions are enabled or NO_REGS.\n+\n @item wB\n Signed 5-bit constant integer that can be loaded into an altivec register.\n "}]}