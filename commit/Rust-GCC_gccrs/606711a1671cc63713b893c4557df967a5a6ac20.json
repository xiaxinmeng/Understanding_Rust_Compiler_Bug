{"sha": "606711a1671cc63713b893c4557df967a5a6ac20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA2NzExYTE2NzFjYzYzNzEzYjg5M2M0NTU3ZGY5NjdhNWE2YWMyMA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-03-07T15:33:52Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-03-07T15:33:52Z"}, "message": "Significantly speed up verifiers for a cgraph_node with many clones.\n\n2019-03-07  Martin Liska  <mliska@suse.cz>\n\n\t* cgraph.c (cgraph_node::verify_node): Verify with a neighbour\n\twhich is equivalent to searching for this in clones chain.\n\t* symtab.c (symtab_node::verify_base): Similarly compare ASM\n\tnames with a neighbour and special case first node in a chain.\n\nFrom-SVN: r269461", "tree": {"sha": "fd2183289f3e715a297915d890a8581a5d771fa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd2183289f3e715a297915d890a8581a5d771fa4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/606711a1671cc63713b893c4557df967a5a6ac20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/606711a1671cc63713b893c4557df967a5a6ac20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/606711a1671cc63713b893c4557df967a5a6ac20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/606711a1671cc63713b893c4557df967a5a6ac20/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c3f98ca6567d5b12d28421a4a3deec3b9c52efc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c3f98ca6567d5b12d28421a4a3deec3b9c52efc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c3f98ca6567d5b12d28421a4a3deec3b9c52efc"}], "stats": {"total": 60, "additions": 37, "deletions": 23}, "files": [{"sha": "e62b5e58fab0792ae0394ab366c5cfa23737e092", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/606711a1671cc63713b893c4557df967a5a6ac20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/606711a1671cc63713b893c4557df967a5a6ac20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=606711a1671cc63713b893c4557df967a5a6ac20", "patch": "@@ -1,3 +1,10 @@\n+2019-03-07  Martin Liska  <mliska@suse.cz>\n+\n+\t* cgraph.c (cgraph_node::verify_node): Verify with a neighbour\n+\twhich is equivalent to searching for this in clones chain.\n+\t* symtab.c (symtab_node::verify_base): Similarly compare ASM\n+\tnames with a neighbour and special case first node in a chain.\n+\n 2019-01-25  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/80916 - spurious \"static but not defined\" warning."}, {"sha": "dfe1833ed1dd29962462f9edfc3799d52f7d85df", "filename": "gcc/cgraph.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/606711a1671cc63713b893c4557df967a5a6ac20/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/606711a1671cc63713b893c4557df967a5a6ac20/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=606711a1671cc63713b893c4557df967a5a6ac20", "patch": "@@ -3240,14 +3240,14 @@ cgraph_node::verify_node (void)\n \n   if (clone_of)\n     {\n-      cgraph_node *n;\n-      for (n = clone_of->clones; n; n = n->next_sibling_clone)\n-\tif (n == this)\n-\t  break;\n-      if (!n)\n+      cgraph_node *first_clone = clone_of->clones;\n+      if (first_clone != this)\n \t{\n-\t  error (\"cgraph_node has wrong clone_of\");\n-\t  error_found = true;\n+\t  if (prev_sibling_clone->clone_of != clone_of)\n+\t    {\n+\t      error (\"cgraph_node has wrong clone_of\");\n+\t      error_found = true;\n+\t    }\n \t}\n     }\n   if (clones)"}, {"sha": "16a21359f8dd8719405e58aaa2444b87bb066d52", "filename": "gcc/symtab.c", "status": "modified", "additions": 23, "deletions": 16, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/606711a1671cc63713b893c4557df967a5a6ac20/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/606711a1671cc63713b893c4557df967a5a6ac20/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=606711a1671cc63713b893c4557df967a5a6ac20", "patch": "@@ -1040,23 +1040,30 @@ symtab_node::verify_base (void)\n   if (symtab->assembler_name_hash)\n     {\n       hashed_node = symtab_node::get_for_asmname (DECL_ASSEMBLER_NAME (decl));\n-      if (hashed_node && hashed_node->previous_sharing_asm_name)\n+      if (hashed_node)\n \t{\n-          error (\"assembler name hash list corrupted\");\n-          error_found = true;\n-\t}\n-      while (hashed_node)\n-\t{\n-\t  if (hashed_node == this)\n-\t    break;\n-\t  hashed_node = hashed_node->next_sharing_asm_name;\n-\t}\n-      if (!hashed_node\n-\t  && !(is_a <varpool_node *> (this)\n-\t       && DECL_HARD_REGISTER (decl)))\n-\t{\n-          error (\"node not found in symtab assembler name hash\");\n-          error_found = true;\n+\t  if (hashed_node->previous_sharing_asm_name)\n+\t    {\n+\t      error (\"assembler name hash list corrupted\");\n+\t      error_found = true;\n+\t    }\n+\t  else if (previous_sharing_asm_name == NULL)\n+\t    {\n+\t      if (hashed_node != this)\n+\t\t{\n+\t\t  error (\"assembler name hash list corrupted\");\n+\t\t  error_found = true;\n+\t\t}\n+\t    }\n+\t  else if (!(is_a <varpool_node *> (this) && DECL_HARD_REGISTER (decl)))\n+\t    {\n+\t      if (!asmname_hasher::equal (previous_sharing_asm_name,\n+\t\t\t\t\t  DECL_ASSEMBLER_NAME (decl)))\n+\t\t{\n+\t\t  error (\"node not found in symtab assembler name hash\");\n+\t\t  error_found = true;\n+\t\t}\n+\t    }\n \t}\n     }\n   if (previous_sharing_asm_name"}]}