{"sha": "3a3ae5e5eddd8b47c485af22843b1123bb3238cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2EzYWU1ZTVlZGRkOGI0N2M0ODVhZjIyODQzYjExMjNiYjMyMzhjYg==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2004-03-17T09:33:45Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2004-03-17T09:33:45Z"}, "message": "Patch for pending SB-1 DFA scheduler.\n\n\t* config/mips/mips.md (zero_extendsidi2): Add length attribute.\n\t(hazard_nop): Change type to nop.\n\t(type): Split arith into arith, shift, slt, clz.  Delete darith.\n\tFix all uses.  Change arith to multi if more than one insn emitted.\n\t* config/mips/5400.md (ir_vr54_arith): Likewise.\n\t* config/mips/5500.md (ir_vr55_arith): Likewise.\n\t* config/mips/7000.md (rm7_int_other): Likewise.\n\t* config/mips/9000.md (rm9k_int): Likewise.\n\t* config/mips/sr71k.md (ir_sr70_arith): Likewise.\n\nFrom-SVN: r79583", "tree": {"sha": "a11e06902e11a49aaac9bae4b825e336031d9c75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a11e06902e11a49aaac9bae4b825e336031d9c75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a3ae5e5eddd8b47c485af22843b1123bb3238cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a3ae5e5eddd8b47c485af22843b1123bb3238cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a3ae5e5eddd8b47c485af22843b1123bb3238cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a3ae5e5eddd8b47c485af22843b1123bb3238cb/comments", "author": null, "committer": null, "parents": [{"sha": "87599abdc5cce3b2f8c5956c1fa621a26795314f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87599abdc5cce3b2f8c5956c1fa621a26795314f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87599abdc5cce3b2f8c5956c1fa621a26795314f"}], "stats": {"total": 217, "additions": 116, "deletions": 101}, "files": [{"sha": "2cfe0c100fa7c4b086ad772a5ebdd09a24716f4f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3ae5e5eddd8b47c485af22843b1123bb3238cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3ae5e5eddd8b47c485af22843b1123bb3238cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a3ae5e5eddd8b47c485af22843b1123bb3238cb", "patch": "@@ -1,3 +1,15 @@\n+2004-03-17  James E Wilson  <wilson@specifixinc.com>\n+\n+\t* config/mips/mips.md (zero_extendsidi2): Add length attribute.\n+\t(hazard_nop): Change type to nop.\n+\t(type): Split arith into arith, shift, slt, clz.  Delete darith.\n+\tFix all uses.  Change arith to multi if more than one insn emitted.\n+\t* config/mips/5400.md (ir_vr54_arith): Likewise.\n+\t* config/mips/5500.md (ir_vr55_arith): Likewise.\n+\t* config/mips/7000.md (rm7_int_other): Likewise.\n+\t* config/mips/9000.md (rm9k_int): Likewise.\n+\t* config/mips/sr71k.md (ir_sr70_arith): Likewise.\n+\n 2004-03-17  Joel Brobecker  <brobecker@gnat.com>\n \n \t* dwarf2out.c (subrange_type_die): Define new variable \"subtype\""}, {"sha": "b0959a28c76ca40e865e35d9aec29539e24c1895", "filename": "gcc/config/mips/5400.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3ae5e5eddd8b47c485af22843b1123bb3238cb/gcc%2Fconfig%2Fmips%2F5400.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3ae5e5eddd8b47c485af22843b1123bb3238cb/gcc%2Fconfig%2Fmips%2F5400.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F5400.md?ref=3a3ae5e5eddd8b47c485af22843b1123bb3238cb", "patch": "@@ -60,7 +60,7 @@\n \n (define_insn_reservation \"ir_vr54_arith\" 1\n   (and (eq_attr \"cpu\" \"r5400\")\n-       (eq_attr \"type\" \"move,arith,darith,const,icmp,nop\"))\n+       (eq_attr \"type\" \"move,arith,shift,slt,clz,const,icmp,nop\"))\n   \"vr54_dp0|vr54_dp1\")\n \n (define_insn_reservation \"ir_vr54_imul_si\" 3"}, {"sha": "286fd8d71026c1130f495a10cff7ba21caeca789", "filename": "gcc/config/mips/5500.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3ae5e5eddd8b47c485af22843b1123bb3238cb/gcc%2Fconfig%2Fmips%2F5500.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3ae5e5eddd8b47c485af22843b1123bb3238cb/gcc%2Fconfig%2Fmips%2F5500.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F5500.md?ref=3a3ae5e5eddd8b47c485af22843b1123bb3238cb", "patch": "@@ -56,7 +56,7 @@\n \n (define_insn_reservation \"ir_vr55_arith\" 1\n   (and (eq_attr \"cpu\" \"r5500\")\n-       (eq_attr \"type\" \"move,arith,darith,const,icmp,nop\"))\n+       (eq_attr \"type\" \"move,arith,shift,slt,clz,const,icmp,nop\"))\n   \"vr55_dp0|vr55_dp1\")\n \n (define_insn_reservation \"ir_vr55_imul_si\" 3"}, {"sha": "ff400372c54558efefcf0010bc7dae1664d58e41", "filename": "gcc/config/mips/7000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3ae5e5eddd8b47c485af22843b1123bb3238cb/gcc%2Fconfig%2Fmips%2F7000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3ae5e5eddd8b47c485af22843b1123bb3238cb/gcc%2Fconfig%2Fmips%2F7000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F7000.md?ref=3a3ae5e5eddd8b47c485af22843b1123bb3238cb", "patch": "@@ -88,7 +88,7 @@\n \n (define_insn_reservation \"rm7_int_other\" 1\n \t\t\t (and (eq_attr \"cpu\" \"r7000\")\n-\t\t\t      (eq_attr \"type\" \"arith,darith,const,move,condmove,icmp,nop\"))\n+\t\t\t      (eq_attr \"type\" \"arith,shift,slt,clz,const,move,condmove,icmp,nop\"))\n \t\t\t \"rm7_iaddsub\")\n \n (define_insn_reservation \"rm7_ld\" 2 (and (eq_attr \"cpu\" \"r7000\")"}, {"sha": "6b5b441488b6362981e35d32afcfbf361de1358f", "filename": "gcc/config/mips/9000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3ae5e5eddd8b47c485af22843b1123bb3238cb/gcc%2Fconfig%2Fmips%2F9000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3ae5e5eddd8b47c485af22843b1123bb3238cb/gcc%2Fconfig%2Fmips%2F9000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F9000.md?ref=3a3ae5e5eddd8b47c485af22843b1123bb3238cb", "patch": "@@ -52,7 +52,7 @@\n \n (define_insn_reservation \"rm9k_int\" 1\n   (and (eq_attr \"cpu\" \"r9000\")\n-       (eq_attr \"type\" \"move,arith,darith,const,icmp,nop\"))\n+       (eq_attr \"type\" \"move,arith,shift,slt,clz,const,icmp,nop\"))\n   \"rm9k_any1 | rm9k_any2\")\n \n (define_insn_reservation \"rm9k_int_cmove\" 2"}, {"sha": "31fd2b3f2074494dfa19c612a879319e385fe737", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 99, "deletions": 96, "changes": 195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3ae5e5eddd8b47c485af22843b1123bb3238cb/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3ae5e5eddd8b47c485af22843b1123bb3238cb/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=3a3ae5e5eddd8b47c485af22843b1123bb3238cb", "patch": "@@ -105,8 +105,10 @@\n ;; condmove\tconditional moves\n ;; xfer\t\ttransfer to/from coprocessor\n ;; hilo\t\ttransfer of hi/lo registers\n-;; arith\tinteger arithmetic instruction\n-;; darith\tdouble precision integer arithmetic instructions\n+;; arith\tinteger arithmetic and logical instructions\n+;; shift\tinteger shift instructions\n+;; clz\t\tthe clz and clo instructions\n+;; slt\t\tset less than instructions\n ;; const\tload constant\n ;; imul\t\tinteger multiply\n ;; imadd\tinteger multiply-add\n@@ -125,7 +127,7 @@\n ;; multi\tmultiword sequence (or user asm statements)\n ;; nop\t\tno operation\n (define_attr \"type\"\n-  \"unknown,branch,jump,call,load,fpload,fpidxload,store,fpstore,fpidxstore,prefetch,prefetchx,move,condmove,xfer,hilo,const,arith,darith,imul,imadd,idiv,icmp,fadd,fmul,fmadd,fdiv,fabs,fneg,fcmp,fcvt,fsqrt,frsqrt,multi,nop\"\n+  \"unknown,branch,jump,call,load,fpload,fpidxload,store,fpstore,fpidxstore,prefetch,prefetchx,move,condmove,xfer,hilo,const,arith,shift,slt,clz,imul,imadd,idiv,icmp,fadd,fmul,fmadd,fdiv,fabs,fneg,fcmp,fcvt,fsqrt,frsqrt,multi,nop\"\n   (cond [(eq_attr \"jal\" \"!unset\") (const_string \"call\")\n \t (eq_attr \"got\" \"load\") (const_string \"load\")]\n \t(const_string \"unknown\")))\n@@ -915,7 +917,7 @@\n     ? \"srl\\t%3,%L0,31\\;sll\\t%M0,%M0,1\\;sll\\t%L0,%L1,1\\;addu\\t%M0,%M0,%3\"\n     : \"addu\\t%L0,%L1,%L2\\;sltu\\t%3,%L0,%L2\\;addu\\t%M0,%M1,%M2\\;addu\\t%M0,%M0,%3\";\n }\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"16\")])\n \n@@ -989,7 +991,7 @@\n    addu\\t%L0,%L1,%2\\;sltu\\t%3,%L0,%2\\;addu\\t%M0,%M1,%3\n    move\\t%L0,%L1\\;move\\t%M0,%M1\n    subu\\t%L0,%L1,%n2\\;sltu\\t%3,%L0,%2\\;subu\\t%M0,%M1,1\\;addu\\t%M0,%M0,%3\"\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"12,8,16\")])\n \n@@ -1049,7 +1051,7 @@\n   \"@\n     daddu\\t%0,%z1,%2\n     daddiu\\t%0,%z1,%2\"\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"DI\")])\n \n ;; For the mips16, we need to recognize stack pointer additions\n@@ -1281,7 +1283,7 @@\n    (clobber (match_operand:SI 3 \"register_operand\" \"=d\"))]\n   \"!TARGET_64BIT && !TARGET_DEBUG_G_MODE && !TARGET_MIPS16\"\n   \"sltu\\t%3,%L1,%L2\\;subu\\t%L0,%L1,%L2\\;subu\\t%M0,%M1,%M2\\;subu\\t%M0,%M0,%3\"\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"16\")])\n \n@@ -1347,7 +1349,7 @@\n \t\t  (match_operand:DI 2 \"register_operand\" \"d\")))]\n   \"TARGET_64BIT\"\n   \"dsubu\\t%0,%1,%2\"\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_insn \"subsi3_internal_2\"\n@@ -2863,15 +2865,15 @@ dsrl\\t%3,%3,1\\n\\\n \t(clz:SI (match_operand:SI 1 \"register_operand\" \"d\")))]\n   \"ISA_HAS_CLZ_CLO\"\n   \"clz\\t%0,%1\"\n-  [(set_attr \"type\" \"arith\")\n+  [(set_attr \"type\" \"clz\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"clzdi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n \t(clz:DI (match_operand:DI 1 \"register_operand\" \"d\")))]\n   \"ISA_HAS_DCLZ_DCLO\"\n   \"dclz\\t%0,%1\"\n-  [(set_attr \"type\" \"arith\")\n+  [(set_attr \"type\" \"clz\")\n    (set_attr \"mode\" \"DI\")])\n \f\n ;;\n@@ -2915,7 +2917,7 @@ dsrl\\t%3,%3,1\\n\\\n    (clobber (match_operand:SI 2 \"register_operand\" \"=d\"))]\n   \"! TARGET_64BIT && !TARGET_DEBUG_G_MODE && !TARGET_MIPS16\"\n   \"subu\\t%L0,%.,%L1\\;subu\\t%M0,%.,%M1\\;sltu\\t%2,%.,%L0\\;subu\\t%M0,%M0,%2\"\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"16\")])\n \n@@ -2966,7 +2968,7 @@ dsrl\\t%3,%3,1\\n\\\n   else\n     return \"nor\\t%0,%.,%1\";\n }\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"DI\")])\n \f\n ;;\n@@ -3034,7 +3036,7 @@ dsrl\\t%3,%3,1\\n\\\n   \"@\n    and\\t%0,%1,%2\n    andi\\t%0,%1,%x2\"\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_insn \"\"\n@@ -3043,7 +3045,7 @@ dsrl\\t%3,%3,1\\n\\\n \t\t(match_operand:DI 2 \"register_operand\" \"d\")))]\n   \"TARGET_64BIT && TARGET_MIPS16\"\n   \"and\\t%0,%2\"\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_expand \"iorsi3\"\n@@ -3100,7 +3102,7 @@ dsrl\\t%3,%3,1\\n\\\n   \"@\n    or\\t%0,%1,%2\n    ori\\t%0,%1,%x2\"\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_insn \"\"\n@@ -3109,7 +3111,7 @@ dsrl\\t%3,%3,1\\n\\\n \t\t(match_operand:DI 2 \"register_operand\" \"d\")))]\n   \"TARGET_64BIT && TARGET_MIPS16\"\n   \"or\\t%0,%2\"\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_expand \"xorsi3\"\n@@ -3169,7 +3171,7 @@ dsrl\\t%3,%3,1\\n\\\n   \"@\n    xor\\t%0,%1,%2\n    xori\\t%0,%1,%x2\"\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_insn \"\"\n@@ -3205,7 +3207,7 @@ dsrl\\t%3,%3,1\\n\\\n \t\t(not:DI (match_operand:DI 2 \"register_operand\" \"d\"))))]\n   \"TARGET_64BIT && !TARGET_MIPS16\"\n   \"nor\\t%0,%z1,%z2\"\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"DI\")])\n \f\n ;;\n@@ -3245,7 +3247,7 @@ dsrl\\t%3,%3,1\\n\\\n   \"@\n     sll\\t%0,%1,0\n     sw\\t%1,%0\"\n-  [(set_attr \"type\" \"darith,store\")\n+  [(set_attr \"type\" \"shift,store\")\n    (set_attr \"mode\" \"SI\")\n    (set_attr \"extended_mips16\" \"yes,*\")])\n \n@@ -3256,7 +3258,7 @@ dsrl\\t%3,%3,1\\n\\\n   \"@\n     sll\\t%0,%1,0\n     sh\\t%1,%0\"\n-  [(set_attr \"type\" \"darith,store\")\n+  [(set_attr \"type\" \"shift,store\")\n    (set_attr \"mode\" \"SI\")\n    (set_attr \"extended_mips16\" \"yes,*\")])\n \n@@ -3267,7 +3269,7 @@ dsrl\\t%3,%3,1\\n\\\n   \"@\n     sll\\t%0,%1,0\n     sb\\t%1,%0\"\n-  [(set_attr \"type\" \"darith,store\")\n+  [(set_attr \"type\" \"shift,store\")\n    (set_attr \"mode\" \"SI\")\n    (set_attr \"extended_mips16\" \"yes,*\")])\n \n@@ -3279,7 +3281,7 @@ dsrl\\t%3,%3,1\\n\\\n                                   (match_operand:DI 2 \"small_int\" \"I\"))))]\n   \"TARGET_64BIT && !TARGET_MIPS16 && INTVAL (operands[2]) >= 32\"\n   \"dsra\\t%0,%1,%2\"\n-  [(set_attr \"type\" \"darith\")\n+  [(set_attr \"type\" \"shift\")\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"\"\n@@ -3288,7 +3290,7 @@ dsrl\\t%3,%3,1\\n\\\n                                   (const_int 32))))]\n   \"TARGET_64BIT && !TARGET_MIPS16\"\n   \"dsra\\t%0,%1,32\"\n-  [(set_attr \"type\" \"darith\")\n+  [(set_attr \"type\" \"shift\")\n    (set_attr \"mode\" \"SI\")])\n \n \n@@ -3334,7 +3336,7 @@ dsrl\\t%3,%3,1\\n\\\n                          (match_operand:DI 1 \"register_operand\" \"d\"))))]\n   \"TARGET_64BIT && !TARGET_MIPS16\"\n   \"andi\\t%0,%1,0xffff\"\n-  [(set_attr \"type\"     \"darith\")\n+  [(set_attr \"type\"     \"arith\")\n    (set_attr \"mode\"     \"SI\")])\n \n (define_insn \"\"\n@@ -3343,7 +3345,7 @@ dsrl\\t%3,%3,1\\n\\\n                          (match_operand:DI 1 \"register_operand\" \"d\"))))]\n   \"TARGET_64BIT && !TARGET_MIPS16\"\n   \"andi\\t%0,%1,0xff\"\n-  [(set_attr \"type\"     \"darith\")\n+  [(set_attr \"type\"     \"arith\")\n    (set_attr \"mode\"     \"SI\")])\n \n (define_insn \"\"\n@@ -3352,7 +3354,7 @@ dsrl\\t%3,%3,1\\n\\\n                          (match_operand:DI 1 \"register_operand\" \"d\"))))]\n   \"TARGET_64BIT && !TARGET_MIPS16\"\n   \"andi\\t%0,%1,0xff\"\n-  [(set_attr \"type\"     \"darith\")\n+  [(set_attr \"type\"     \"arith\")\n    (set_attr \"mode\"     \"HI\")])\n \f\n ;;\n@@ -3376,8 +3378,9 @@ dsrl\\t%3,%3,1\\n\\\n    (set (match_dup 0)\n         (lshiftrt:DI (match_dup 0) (const_int 32)))]\n   \"operands[1] = gen_lowpart (DImode, operands[1]);\"\n-  [(set_attr \"type\" \"arith\")\n-   (set_attr \"mode\" \"DI\")])\n+  [(set_attr \"type\" \"multi\")\n+   (set_attr \"mode\" \"DI\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"*zero_extendsidi2_mem\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n@@ -3575,7 +3578,7 @@ dsrl\\t%3,%3,1\\n\\\n   \"@\n    sll\\t%0,%1,0\n    lw\\t%0,%1\"\n-  [(set_attr \"type\" \"arith,load\")\n+  [(set_attr \"type\" \"shift,load\")\n    (set_attr \"mode\" \"DI\")\n    (set_attr \"extended_mips16\" \"yes,*\")])\n \n@@ -5406,7 +5409,7 @@ dsrl\\t%3,%3,1\\n\\\n \n   return \"sll\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"shift\")\n    (set_attr \"mode\"\t\"SI\")])\n \n (define_insn \"ashlsi3_internal1_extend\"\n@@ -5420,7 +5423,7 @@ dsrl\\t%3,%3,1\\n\\\n \n   return \"sll\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"    \"arith\")\n+  [(set_attr \"type\"    \"shift\")\n    (set_attr \"mode\"    \"DI\")])\n \n \n@@ -5438,7 +5441,7 @@ dsrl\\t%3,%3,1\\n\\\n \n   return \"sll\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"shift\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr_alternative \"length\"\n \t\t[(const_int 4)\n@@ -5523,7 +5526,7 @@ or\\t%M0,%M0,%3\\n\\\n %~2:\\;\\\n sll\\t%L0,%L1,%2\\n\\\n %~3:\"\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"48\")])\n \n@@ -5539,7 +5542,7 @@ sll\\t%L0,%L1,%2\\n\\\n   operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n   return \"sll\\t%M0,%L1,%2\\;move\\t%L0,%.\";\n }\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"8\")])\n \n@@ -5594,7 +5597,7 @@ sll\\t%L0,%L1,%2\\n\\\n \n   return \"sll\\t%M0,%M1,%2\\;srl\\t%3,%L1,%4\\;or\\t%M0,%M0,%3\\;sll\\t%L0,%L1,%2\";\n }\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"16\")])\n \n@@ -5678,7 +5681,7 @@ sll\\t%L0,%L1,%2\\n\\\n \n   return \"dsll\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"shift\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_insn \"\"\n@@ -5695,7 +5698,7 @@ sll\\t%L0,%L1,%2\\n\\\n \n   return \"dsll\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"shift\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr_alternative \"length\"\n \t\t[(const_int 4)\n@@ -5756,7 +5759,7 @@ sll\\t%L0,%L1,%2\\n\\\n \n   return \"sra\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"shift\")\n    (set_attr \"mode\"\t\"SI\")])\n \n (define_insn \"ashrsi3_internal2\"\n@@ -5773,7 +5776,7 @@ sll\\t%L0,%L1,%2\\n\\\n \n   return \"sra\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"shift\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr_alternative \"length\"\n \t\t[(const_int 4)\n@@ -5855,7 +5858,7 @@ or\\t%L0,%L0,%3\\n\\\n %~2:\\;\\\n sra\\t%M0,%M1,%2\\n\\\n %~3:\"\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"48\")])\n \n@@ -5870,7 +5873,7 @@ sra\\t%M0,%M1,%2\\n\\\n   operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n   return \"sra\\t%L0,%M1,%2\\;sra\\t%M0,%M1,31\";\n }\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"8\")])\n \n@@ -5925,7 +5928,7 @@ sra\\t%M0,%M1,%2\\n\\\n \n   return \"srl\\t%L0,%L1,%2\\;sll\\t%3,%M1,%4\\;or\\t%L0,%L0,%3\\;sra\\t%M0,%M1,%2\";\n }\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"16\")])\n \n@@ -6009,7 +6012,7 @@ sra\\t%M0,%M1,%2\\n\\\n \n   return \"dsra\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"shift\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_insn \"\"\n@@ -6023,7 +6026,7 @@ sra\\t%M0,%M1,%2\\n\\\n \n   return \"dsra\\t%0,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"shift\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr_alternative \"length\"\n \t\t[(const_int 4)\n@@ -6083,7 +6086,7 @@ sra\\t%M0,%M1,%2\\n\\\n \n   return \"srl\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"shift\")\n    (set_attr \"mode\"\t\"SI\")])\n \n (define_insn \"lshrsi3_internal2\"\n@@ -6100,7 +6103,7 @@ sra\\t%M0,%M1,%2\\n\\\n \n   return \"srl\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"shift\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr_alternative \"length\"\n \t\t[(const_int 4)\n@@ -6205,7 +6208,7 @@ or\\t%L0,%L0,%3\\n\\\n %~2:\\;\\\n srl\\t%M0,%M1,%2\\n\\\n %~3:\"\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"48\")])\n \n@@ -6221,7 +6224,7 @@ srl\\t%M0,%M1,%2\\n\\\n   operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n   return \"srl\\t%L0,%M1,%2\\;move\\t%M0,%.\";\n }\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"8\")])\n \n@@ -6276,7 +6279,7 @@ srl\\t%M0,%M1,%2\\n\\\n \n   return \"srl\\t%L0,%L1,%2\\;sll\\t%3,%M1,%4\\;or\\t%L0,%L0,%3\\;srl\\t%M0,%M1,%2\";\n }\n-  [(set_attr \"type\"\t\"darith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"16\")])\n \n@@ -6360,7 +6363,7 @@ srl\\t%M0,%M1,%2\\n\\\n \n   return \"dsrl\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"shift\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_insn \"\"\n@@ -6374,7 +6377,7 @@ srl\\t%M0,%M1,%2\\n\\\n \n   return \"dsrl\\t%0,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"shift\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr_alternative \"length\"\n \t\t[(const_int 4)\n@@ -6397,7 +6400,7 @@ srl\\t%M0,%M1,%2\\n\\\n \n   return \"ror\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"     \"arith\")\n+  [(set_attr \"type\"     \"shift\")\n    (set_attr \"mode\"     \"SI\")])\n \n (define_insn \"rotrdi3\"\n@@ -6421,7 +6424,7 @@ srl\\t%M0,%M1,%2\\n\\\n \n   return \"dror\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"     \"arith\")\n+  [(set_attr \"type\"     \"shift\")\n    (set_attr \"mode\"     \"DI\")])\n \n \n@@ -7036,7 +7039,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (const_int 0)))]\n   \"!TARGET_MIPS16\"\n   \"sltu\\t%0,%1,1\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"SI\")])\n \n (define_insn \"\"\n@@ -7045,7 +7048,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (const_int 0)))]\n   \"TARGET_MIPS16\"\n   \"sltu\\t%1,1\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"SI\")])\n \n (define_insn \"seq_di_zero\"\n@@ -7054,7 +7057,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (const_int 0)))]\n   \"TARGET_64BIT && !TARGET_MIPS16\"\n   \"sltu\\t%0,%1,1\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_insn \"\"\n@@ -7063,7 +7066,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (const_int 0)))]\n   \"TARGET_64BIT && TARGET_MIPS16\"\n   \"sltu\\t%1,1\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_insn \"seq_si\"\n@@ -7074,7 +7077,7 @@ srl\\t%M0,%M1,%2\\n\\\n   \"@\n    xor\\t%0,%1,%2\\;sltu\\t%0,%0,1\n    xori\\t%0,%1,%2\\;sltu\\t%0,%0,1\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"8\")])\n \n@@ -7100,7 +7103,7 @@ srl\\t%M0,%M1,%2\\n\\\n   \"@\n    xor\\t%0,%1,%2\\;sltu\\t%0,%0,1\n    xori\\t%0,%1,%2\\;sltu\\t%0,%0,1\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"8\")])\n \n@@ -7152,7 +7155,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (const_int 0)))]\n   \"!TARGET_MIPS16\"\n   \"sltu\\t%0,%.,%1\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"SI\")])\n \n (define_insn \"sne_di_zero\"\n@@ -7161,7 +7164,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (const_int 0)))]\n   \"TARGET_64BIT && !TARGET_MIPS16\"\n   \"sltu\\t%0,%.,%1\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_insn \"sne_si\"\n@@ -7172,7 +7175,7 @@ srl\\t%M0,%M1,%2\\n\\\n   \"@\n     xor\\t%0,%1,%2\\;sltu\\t%0,%.,%0\n     xori\\t%0,%1,%x2\\;sltu\\t%0,%.,%0\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"8\")])\n \n@@ -7198,7 +7201,7 @@ srl\\t%M0,%M1,%2\\n\\\n   \"@\n     xor\\t%0,%1,%2\\;sltu\\t%0,%.,%0\n     xori\\t%0,%1,%x2\\;sltu\\t%0,%.,%0\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"8\")])\n \n@@ -7248,7 +7251,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (match_operand:SI 2 \"reg_or_0_operand\" \"dJ\")))]\n   \"!TARGET_MIPS16\"\n   \"slt\\t%0,%z2,%1\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"SI\")])\n \n (define_insn \"\"\n@@ -7257,7 +7260,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (match_operand:SI 2 \"register_operand\" \"d\")))]\n   \"TARGET_MIPS16\"\n   \"slt\\t%2,%1\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"SI\")])\n \n (define_insn \"sgt_di\"\n@@ -7266,7 +7269,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (match_operand:DI 2 \"reg_or_0_operand\" \"dJ\")))]\n   \"TARGET_64BIT && !TARGET_MIPS16\"\n   \"slt\\t%0,%z2,%1\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_insn \"\"\n@@ -7275,7 +7278,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (match_operand:DI 2 \"register_operand\" \"d\")))]\n   \"TARGET_64BIT && TARGET_MIPS16\"\n   \"slt\\t%2,%1\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_expand \"sge\"\n@@ -7306,7 +7309,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (match_operand:SI 2 \"arith_operand\" \"dI\")))]\n   \"TARGET_DEBUG_C_MODE && !TARGET_MIPS16\"\n   \"slt\\t%0,%1,%2\\;xori\\t%0,%0,0x0001\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"8\")])\n \n@@ -7329,7 +7332,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (match_operand:DI 2 \"arith_operand\" \"dI\")))]\n   \"TARGET_64BIT && TARGET_DEBUG_C_MODE && !TARGET_MIPS16\"\n   \"slt\\t%0,%1,%2\\;xori\\t%0,%0,0x0001\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"8\")])\n \n@@ -7375,7 +7378,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (match_operand:SI 2 \"arith_operand\" \"dI\")))]\n   \"!TARGET_MIPS16\"\n   \"slt\\t%0,%1,%2\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"SI\")])\n \n (define_insn \"\"\n@@ -7384,7 +7387,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (match_operand:SI 2 \"arith_operand\" \"d,I\")))]\n   \"TARGET_MIPS16\"\n   \"slt\\t%1,%2\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr_alternative \"length\"\n \t\t[(const_int 4)\n@@ -7398,7 +7401,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (match_operand:DI 2 \"arith_operand\" \"dI\")))]\n   \"TARGET_64BIT && !TARGET_MIPS16\"\n   \"slt\\t%0,%1,%2\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_insn \"\"\n@@ -7407,7 +7410,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (match_operand:DI 2 \"arith_operand\" \"d,I\")))]\n   \"TARGET_64BIT && TARGET_MIPS16\"\n   \"slt\\t%1,%2\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr_alternative \"length\"\n \t\t[(const_int 4)\n@@ -7449,7 +7452,7 @@ srl\\t%M0,%M1,%2\\n\\\n   operands[2] = GEN_INT (INTVAL (operands[2])+1);\n   return \"slt\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"SI\")])\n \n (define_insn \"\"\n@@ -7461,7 +7464,7 @@ srl\\t%M0,%M1,%2\\n\\\n   operands[2] = GEN_INT (INTVAL (operands[2])+1);\n   return \"slt\\t%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"SI\")\n    (set (attr \"length\") (if_then_else (match_operand:VOID 2 \"m16_uimm8_m1_1\" \"\")\n \t\t\t\t      (const_int 4)\n@@ -7476,7 +7479,7 @@ srl\\t%M0,%M1,%2\\n\\\n   operands[2] = GEN_INT (INTVAL (operands[2])+1);\n   return \"slt\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_insn \"\"\n@@ -7488,7 +7491,7 @@ srl\\t%M0,%M1,%2\\n\\\n   operands[2] = GEN_INT (INTVAL (operands[2])+1);\n   return \"slt\\t%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"DI\")\n    (set (attr \"length\") (if_then_else (match_operand:VOID 2 \"m16_uimm8_m1_1\" \"\")\n \t\t\t\t      (const_int 4)\n@@ -7500,7 +7503,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (match_operand:SI 2 \"register_operand\" \"d\")))]\n   \"TARGET_DEBUG_C_MODE && !TARGET_MIPS16\"\n   \"slt\\t%0,%z2,%1\\;xori\\t%0,%0,0x0001\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"8\")])\n \n@@ -7523,7 +7526,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t       (match_operand:DI 2 \"register_operand\" \"d\")))]\n   \"TARGET_64BIT && TARGET_DEBUG_C_MODE && !TARGET_MIPS16\"\n   \"slt\\t%0,%z2,%1\\;xori\\t%0,%0,0x0001\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"8\")])\n \n@@ -7572,7 +7575,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t\t(match_operand:SI 2 \"reg_or_0_operand\" \"dJ\")))]\n   \"!TARGET_MIPS16\"\n   \"sltu\\t%0,%z2,%1\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"SI\")])\n \n (define_insn \"\"\n@@ -7581,7 +7584,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t\t(match_operand:SI 2 \"register_operand\" \"d\")))]\n   \"TARGET_MIPS16\"\n   \"sltu\\t%2,%1\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"SI\")])\n \n (define_insn \"sgtu_di\"\n@@ -7590,7 +7593,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t\t(match_operand:DI 2 \"reg_or_0_operand\" \"dJ\")))]\n   \"TARGET_64BIT && !TARGET_MIPS16\"\n   \"sltu\\t%0,%z2,%1\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_insn \"\"\n@@ -7599,7 +7602,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t\t(match_operand:DI 2 \"register_operand\" \"d\")))]\n   \"TARGET_64BIT && TARGET_MIPS16\"\n   \"sltu\\t%2,%1\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_expand \"sgeu\"\n@@ -7630,7 +7633,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t\t(match_operand:SI 2 \"arith_operand\" \"dI\")))]\n   \"TARGET_DEBUG_C_MODE && !TARGET_MIPS16\"\n   \"sltu\\t%0,%1,%2\\;xori\\t%0,%0,0x0001\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"8\")])\n \n@@ -7653,7 +7656,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t\t(match_operand:DI 2 \"arith_operand\" \"dI\")))]\n   \"TARGET_64BIT && TARGET_DEBUG_C_MODE && !TARGET_MIPS16\"\n   \"sltu\\t%0,%1,%2\\;xori\\t%0,%0,0x0001\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"8\")])\n \n@@ -7699,7 +7702,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t\t(match_operand:SI 2 \"arith_operand\" \"dI\")))]\n   \"!TARGET_MIPS16\"\n   \"sltu\\t%0,%1,%2\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"SI\")])\n \n (define_insn \"\"\n@@ -7708,7 +7711,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t\t(match_operand:SI 2 \"arith_operand\" \"d,I\")))]\n   \"TARGET_MIPS16\"\n   \"sltu\\t%1,%2\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr_alternative \"length\"\n \t\t[(const_int 4)\n@@ -7722,7 +7725,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t\t(match_operand:DI 2 \"arith_operand\" \"dI\")))]\n   \"TARGET_64BIT && !TARGET_MIPS16\"\n   \"sltu\\t%0,%1,%2\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_insn \"\"\n@@ -7731,7 +7734,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t\t(match_operand:DI 2 \"arith_operand\" \"d,I\")))]\n   \"TARGET_64BIT && TARGET_MIPS16\"\n   \"sltu\\t%1,%2\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr_alternative \"length\"\n \t\t[(const_int 4)\n@@ -7773,7 +7776,7 @@ srl\\t%M0,%M1,%2\\n\\\n   operands[2] = GEN_INT (INTVAL (operands[2]) + 1);\n   return \"sltu\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"SI\")])\n \n (define_insn \"\"\n@@ -7785,7 +7788,7 @@ srl\\t%M0,%M1,%2\\n\\\n   operands[2] = GEN_INT (INTVAL (operands[2])+1);\n   return \"sltu\\t%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"SI\")\n    (set (attr \"length\") (if_then_else (match_operand:VOID 2 \"m16_uimm8_m1_1\" \"\")\n \t\t\t\t      (const_int 4)\n@@ -7800,7 +7803,7 @@ srl\\t%M0,%M1,%2\\n\\\n   operands[2] = GEN_INT (INTVAL (operands[2]) + 1);\n   return \"sltu\\t%0,%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"DI\")])\n \n (define_insn \"\"\n@@ -7812,7 +7815,7 @@ srl\\t%M0,%M1,%2\\n\\\n   operands[2] = GEN_INT (INTVAL (operands[2])+1);\n   return \"sltu\\t%1,%2\";\n }\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"slt\")\n    (set_attr \"mode\"\t\"DI\")\n    (set (attr \"length\") (if_then_else (match_operand:VOID 2 \"m16_uimm8_m1_1\" \"\")\n \t\t\t\t      (const_int 4)\n@@ -7824,7 +7827,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t\t(match_operand:SI 2 \"register_operand\" \"d\")))]\n   \"TARGET_DEBUG_C_MODE && !TARGET_MIPS16\"\n   \"sltu\\t%0,%z2,%1\\;xori\\t%0,%0,0x0001\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"8\")])\n \n@@ -7847,7 +7850,7 @@ srl\\t%M0,%M1,%2\\n\\\n \t\t(match_operand:DI 2 \"register_operand\" \"d\")))]\n   \"TARGET_64BIT && TARGET_DEBUG_C_MODE && !TARGET_MIPS16\"\n   \"sltu\\t%0,%z2,%1\\;xori\\t%0,%0,0x0001\"\n-  [(set_attr \"type\"\t\"arith\")\n+  [(set_attr \"type\"\t\"multi\")\n    (set_attr \"mode\"\t\"DI\")\n    (set_attr \"length\"\t\"8\")])\n \n@@ -8865,7 +8868,7 @@ ld\\\\t%2,%1-%S1(%2)\\;daddu\\\\t%2,%2,$31\\\\n\\\\t%*j\\\\t%2%/\"\n     else\n       return \"#nop\";\n   }\n-  [(set_attr \"type\"\t\"arith\")])\n+  [(set_attr \"type\"\t\"nop\")])\n \f\n ;; MIPS4 Conditional move instructions.\n "}, {"sha": "f90c6f6e5d017e35cc2ed43b503d18c362734581", "filename": "gcc/config/mips/sr71k.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3ae5e5eddd8b47c485af22843b1123bb3238cb/gcc%2Fconfig%2Fmips%2Fsr71k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3ae5e5eddd8b47c485af22843b1123bb3238cb/gcc%2Fconfig%2Fmips%2Fsr71k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsr71k.md?ref=3a3ae5e5eddd8b47c485af22843b1123bb3238cb", "patch": "@@ -201,7 +201,7 @@\n (define_insn_reservation \"ir_sr70_arith\"\n                                1\n                           (and (eq_attr \"cpu\" \"sr71000\")\n-                               (eq_attr \"type\" \"move,arith,darith,const\"))\n+                               (eq_attr \"type\" \"move,arith,shift,slt,clz,const\"))\n                          \"ri_insns\")\n \n ;; emulate repeat (dispatch stall) by spending extra cycle(s) in"}]}