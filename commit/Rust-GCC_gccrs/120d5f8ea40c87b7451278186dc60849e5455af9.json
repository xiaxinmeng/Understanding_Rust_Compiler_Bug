{"sha": "120d5f8ea40c87b7451278186dc60849e5455af9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIwZDVmOGVhNDBjODdiNzQ1MTI3ODE4NmRjNjA4NDllNTQ1NWFmOQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-12-19T02:12:42Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-12-19T02:12:42Z"}, "message": "In libobjc/: 2010-12-19 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn libobjc/:\n2010-12-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* init.c: Updated comments.\n\t* objc/objc-api.h: Updated comments.\n\t* objc/runtime.h (_objc_load_callback): Declare.\n\nFrom-SVN: r168044", "tree": {"sha": "2741b3549f5b11c253ebb01486885c0ed2703860", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2741b3549f5b11c253ebb01486885c0ed2703860"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/120d5f8ea40c87b7451278186dc60849e5455af9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/120d5f8ea40c87b7451278186dc60849e5455af9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/120d5f8ea40c87b7451278186dc60849e5455af9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/120d5f8ea40c87b7451278186dc60849e5455af9/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c34fc9884e9fef948e8b99a436d6f6d0eaf84130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c34fc9884e9fef948e8b99a436d6f6d0eaf84130", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c34fc9884e9fef948e8b99a436d6f6d0eaf84130"}], "stats": {"total": 59, "additions": 39, "deletions": 20}, "files": [{"sha": "7335e27bac6e4e829f05f15dc2fd6905bb10b58a", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120d5f8ea40c87b7451278186dc60849e5455af9/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120d5f8ea40c87b7451278186dc60849e5455af9/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=120d5f8ea40c87b7451278186dc60849e5455af9", "patch": "@@ -1,3 +1,9 @@\n+2010-12-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* init.c: Updated comments.\n+\t* objc/objc-api.h: Updated comments.\n+\t* objc/runtime.h (_objc_load_callback): Declare.\n+\t\n 2010-12-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc/Object.h: Include deprecated/typedstream.h and"}, {"sha": "a282d5ef70d3467a4ee955373698d8ef41876ca9", "filename": "libobjc/init.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120d5f8ea40c87b7451278186dc60849e5455af9/libobjc%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120d5f8ea40c87b7451278186dc60849e5455af9/libobjc%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Finit.c?ref=120d5f8ea40c87b7451278186dc60849e5455af9", "patch": "@@ -83,11 +83,7 @@ static void __objc_init_protocol (struct objc_protocol *protocol);\n /* Add protocol to class.  */\n static void __objc_class_add_protocols (Class, struct objc_protocol_list *);\n \n-/* This is a hook which is called by __objc_exec_class every time a\n-   class or a category is loaded into the runtime.  This may e.g. help\n-   a dynamic loader determine the classes that have been loaded when\n-   an object file is dynamically linked in.  */\n-/* TODO: This needs to be declared in a public file with the new API.  */\n+/* Load callback hook.  */\n void (*_objc_load_callback) (Class class, struct objc_category *category); /* !T:SAFE */\n \n /* Are all categories/classes resolved?  */\n@@ -724,6 +720,10 @@ __objc_exec_class (struct objc_module *module)\n   objc_send_load ();\n \n   objc_mutex_unlock (__objc_runtime_mutex);\n+\n+  /* TODO: Do we need to add a call to __objc_resolve_class_links()\n+     here ?  gnustep-base does it manually after it loads a module.\n+     Shouldn't we do it automatically ?  */\n }\n \n static void"}, {"sha": "521f79efb3746d51b103284af9d0f63ab41b23e0", "filename": "libobjc/objc/objc-api.h", "status": "modified", "additions": 20, "deletions": 15, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120d5f8ea40c87b7451278186dc60849e5455af9/libobjc%2Fobjc%2Fobjc-api.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120d5f8ea40c87b7451278186dc60849e5455af9/libobjc%2Fobjc%2Fobjc-api.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fobjc-api.h?ref=120d5f8ea40c87b7451278186dc60849e5455af9", "patch": "@@ -26,25 +26,28 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #ifndef __objc_api_INCLUDE_GNU\n #define __objc_api_INCLUDE_GNU\n \n-/*\n-  This file declares the \"traditional\" GNU Objective-C Runtime API.\n-  It is the API supported by older versions of the GNU Objective-C\n-  Runtime.  Include this file to use it.\n-\n-  This API is being replaced by the \"modern\" GNU Objective-C Runtime\n-  API, which is declared in objc/runtime.h.  The \"modern\" API is very\n-  similar to the API used by the modern Apple/NeXT runtime.\n-\n-  Because the two APIs have some conflicting definitions (in\n-  particular, Method and Category are defined differently) you should\n-  include either objc/objc-api.h (to use the traditional GNU\n-  Objective-C Runtime API) or objc/runtime.h (to use the modern GNU\n-  Objective-C Runtime API), but not both.\n-*/\n+/* This file declares the \"traditional\" GNU Objective-C Runtime API.\n+   It is the API supported by older versions of the GNU Objective-C\n+   Runtime.  Include this file to use it.\n+\n+   This API is being replaced by the \"modern\" GNU Objective-C Runtime\n+   API, which is declared in objc/runtime.h.  The \"modern\" API is very\n+   similar to the API used by the modern Apple/NeXT runtime.\n+\n+   The last version of GCC supporting the traditional API is GCC 4.6.\n+   This file will not exist in later versions of GCC.\n+\n+   Because the two APIs have some conflicting definitions (in\n+   particular, Method and Category are defined differently) you should\n+   include either objc/objc-api.h (to use the traditional GNU\n+   Objective-C Runtime API) or objc/runtime.h (to use the modern GNU\n+   Objective-C Runtime API), but not both.  */\n #ifdef __objc_runtime_INCLUDE_GNU\n # error You can not include both objc/objc-api.h and objc/runtime.h.  Include objc/objc-api.h for the traditional GNU Objective-C Runtime API and objc/runtime.h for the modern one.\n #endif\n \n+/* TODO: A deprecation warning any time the file is included ? */\n+\n #include \"objc.h\"\n #ifndef GNU_LIBOBJC_COMPILING_LIBOBJC_ITSELF\n # include \"deprecated/hash.h\"\n@@ -182,6 +185,8 @@ typedef struct objc_category Category, *Category_t;\n ** objc_get_class if the runtime is not able to find the class.\n ** This may e.g. try to load in the class using dynamic loading.\n ** The function is guaranteed to be passed a non-NULL name string.\n+** In the Modern API, this is replaced by\n+** objc_setGetUnknownClassHandler ().\n */\n objc_EXPORT Class (*_objc_lookup_class)(const char *name);\n "}, {"sha": "de8f7016ba4cdd186f41e754037c67d5d2e8c27f", "filename": "libobjc/objc/runtime.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/120d5f8ea40c87b7451278186dc60849e5455af9/libobjc%2Fobjc%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/120d5f8ea40c87b7451278186dc60849e5455af9/libobjc%2Fobjc%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fruntime.h?ref=120d5f8ea40c87b7451278186dc60849e5455af9", "patch": "@@ -876,6 +876,14 @@ objc_EXPORT Protocol **protocol_copyProtocolList (Protocol *protocol, unsigned i\n \n /* TODO: Add all the other functions in the API.  */\n \n+/** Implementation: the following hook is in init.c.  */\n+\n+/* This is a hook which is called by __objc_exec_class every time a\n+   class or a category is loaded into the runtime.  This may e.g. help\n+   a dynamic loader determine the classes that have been loaded when\n+   an object file is dynamically linked in.  */\n+objc_EXPORT void (*_objc_load_callback)(Class _class, struct objc_category *category);\n+\n \n /** Implementation: the following functions are in objc-foreach.c.  */\n "}]}