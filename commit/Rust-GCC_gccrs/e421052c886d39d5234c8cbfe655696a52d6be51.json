{"sha": "e421052c886d39d5234c8cbfe655696a52d6be51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQyMTA1MmM4ODZkMzlkNTIzNGM4Y2JmZTY1NTY5NmE1MmQ2YmU1MQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-12-22T20:55:04Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-12-22T20:55:04Z"}, "message": "elxsi.c: Include \"hard-reg-set.h\" and/or don't declare `call_used_regs' explicitly.\n\n\t* elxsi.c: Include \"hard-reg-set.h\" and/or don't declare\n\t`call_used_regs' explicitly.\n\t* i860.c: Likewise.\n\t* m68k.c: Likewise.\n\t* ns32k.c: Likewise.\n\t* pa.c: Likewise.\n\t* vax.c: Likewise.\n\t* we32k.c: Likewise.\n\nFrom-SVN: r48276", "tree": {"sha": "95d7e6d6ea1e34ebaf7f2c700fe1c342c2573410", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95d7e6d6ea1e34ebaf7f2c700fe1c342c2573410"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e421052c886d39d5234c8cbfe655696a52d6be51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e421052c886d39d5234c8cbfe655696a52d6be51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e421052c886d39d5234c8cbfe655696a52d6be51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e421052c886d39d5234c8cbfe655696a52d6be51/comments", "author": null, "committer": null, "parents": [{"sha": "91d2f4ba709e8212a81066af5c31c7d95df297b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d2f4ba709e8212a81066af5c31c7d95df297b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91d2f4ba709e8212a81066af5c31c7d95df297b7"}], "stats": {"total": 33, "additions": 13, "deletions": 20}, "files": [{"sha": "b9944d7085fc68bf38329f6ee1740c0eafaf72da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e421052c886d39d5234c8cbfe655696a52d6be51/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e421052c886d39d5234c8cbfe655696a52d6be51/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e421052c886d39d5234c8cbfe655696a52d6be51", "patch": "@@ -1,3 +1,14 @@\n+2001-12-22  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* elxsi.c: Include \"hard-reg-set.h\" and/or don't declare\n+\t`call_used_regs' explicitly.\n+\t* i860.c: Likewise.\n+\t* m68k.c: Likewise.\n+\t* ns32k.c: Likewise.\n+\t* pa.c: Likewise.\n+\t* vax.c: Likewise.\n+\t* we32k.c: Likewise.\n+\n Fri Dec 21 23:30:14 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.h (TARGET_CPU_DEFAULT_pentium_mmx): New."}, {"sha": "f27d9286a4268ceedb47dd95db7a429ccf270071", "filename": "gcc/config/elxsi/elxsi.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e421052c886d39d5234c8cbfe655696a52d6be51/gcc%2Fconfig%2Felxsi%2Felxsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e421052c886d39d5234c8cbfe655696a52d6be51/gcc%2Fconfig%2Felxsi%2Felxsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felxsi%2Felxsi.c?ref=e421052c886d39d5234c8cbfe655696a52d6be51", "patch": "@@ -30,6 +30,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"expr.h\"\n #include \"regs.h\"\n #include \"flags.h\"\n+#include \"hard-reg-set.h\"\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n@@ -103,7 +104,6 @@ elxsi_output_function_prologue (file, size)\n {\n   register int regno;\n   register int cnt = 0;\n-  extern char call_used_regs[];\n \n   /* the below two lines are a HACK, and should be deleted, but\n      for now are very much needed (1.35) */\n@@ -141,7 +141,6 @@ elxsi_output_function_epilogue (file, size)\n {\n   register int regno;\n   register int cnt = 0;\n-  extern char call_used_regs[];\n \n   /* this conditional is ONLY here because there is a BUG;\n      EXIT_IGNORE_STACK is ignored itself when the first part of"}, {"sha": "f79af15c76ac5a6e21a4fc8eea9366c8dce53707", "filename": "gcc/config/i860/i860.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e421052c886d39d5234c8cbfe655696a52d6be51/gcc%2Fconfig%2Fi860%2Fi860.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e421052c886d39d5234c8cbfe655696a52d6be51/gcc%2Fconfig%2Fi860%2Fi860.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fi860.c?ref=e421052c886d39d5234c8cbfe655696a52d6be51", "patch": "@@ -1661,8 +1661,6 @@ sfmode_constant_to_ulong (x)\n #define STACK_ALIGNMENT\t16\n #endif\n \n-extern char call_used_regs[];\n-\n const char *current_function_original_name;\n \n static int must_preserve_r1;"}, {"sha": "9e6880b9934222a5fa626d53bfeef03670580d7d", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e421052c886d39d5234c8cbfe655696a52d6be51/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e421052c886d39d5234c8cbfe655696a52d6be51/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=e421052c886d39d5234c8cbfe655696a52d6be51", "patch": "@@ -197,7 +197,6 @@ m68k_output_function_prologue (stream, size)\n {\n   register int regno;\n   register int mask = 0;\n-  extern char call_used_regs[];\n   HOST_WIDE_INT fsize = ((size) + 3) & -4;\n \n   /* unos stack probe */\n@@ -257,7 +256,6 @@ m68k_output_function_prologue (stream, size)\n   register int regno;\n   register int mask = 0;\n   int num_saved_regs = 0, first = 1;\n-  extern char call_used_regs[];\n   HOST_WIDE_INT fsize = ((size) + 3) & -4;\n \n   if (frame_pointer_needed)\n@@ -361,7 +359,6 @@ m68k_output_function_prologue (stream, size)\n {\n   register int regno;\n   register int mask = 0;\n-  extern char call_used_regs[];\n   HOST_WIDE_INT fsize = ((size) + 3) & -4;\n \n   if (frame_pointer_needed)\n@@ -414,7 +411,6 @@ m68k_output_function_prologue (stream, size)\n   register int regno;\n   register int mask = 0;\n   int num_saved_regs = 0;\n-  extern char call_used_regs[];\n   HOST_WIDE_INT fsize = (size + 3) & -4;\n   HOST_WIDE_INT cfa_offset = INCOMING_FRAME_SP_OFFSET;\n   HOST_WIDE_INT cfa_store_offset = cfa_offset;\n@@ -817,7 +813,6 @@ m68k_output_function_epilogue (stream, size)\n   register int mask, fmask;\n   register int nregs;\n   HOST_WIDE_INT offset, foffset, fpoffset;\n-  extern char call_used_regs[];\n   HOST_WIDE_INT fsize = ((size) + 3) & -4;\n   int big = 0;\n \n@@ -930,7 +925,6 @@ m68k_output_function_epilogue (stream, size)\n   register int mask, fmask;\n   register int nregs;\n   HOST_WIDE_INT offset, foffset, fpoffset, first = 1;\n-  extern char call_used_regs[];\n   HOST_WIDE_INT fsize = ((size) + 3) & -4;\n   int big = 0;\n   rtx insn = get_last_insn ();\n@@ -1101,7 +1095,6 @@ m68k_output_function_epilogue (stream, size)\n   register int mask, fmask;\n   register int nregs;\n   HOST_WIDE_INT offset, foffset;\n-  extern char call_used_regs[];\n   HOST_WIDE_INT fsize = ((size) + 3) & -4;\n   int big = 0;\n \n@@ -1197,7 +1190,6 @@ m68k_output_function_epilogue (stream, size)\n   register int mask, fmask;\n   register int nregs;\n   HOST_WIDE_INT offset, foffset, fpoffset;\n-  extern char call_used_regs[];\n   HOST_WIDE_INT fsize = (size + 3) & -4;\n   int big = 0;\n   rtx insn = get_last_insn ();"}, {"sha": "7c3afe2ecae0bd7a044659199ef6aace823b0189", "filename": "gcc/config/ns32k/ns32k.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e421052c886d39d5234c8cbfe655696a52d6be51/gcc%2Fconfig%2Fns32k%2Fns32k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e421052c886d39d5234c8cbfe655696a52d6be51/gcc%2Fconfig%2Fns32k%2Fns32k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.c?ref=e421052c886d39d5234c8cbfe655696a52d6be51", "patch": "@@ -145,7 +145,6 @@ ns32k_output_function_prologue (file, size)\n   register int regno, g_regs_used = 0;\n   int used_regs_buf[8], *bufp = used_regs_buf;\n   int used_fregs_buf[17], *fbufp = used_fregs_buf;\n-  extern char call_used_regs[];\n \n   for (regno = R0_REGNUM; regno < F0_REGNUM; regno++)\n     if (regs_ever_live[regno]\n@@ -233,7 +232,6 @@ ns32k_output_function_prologue (file, size)\n   register int regno, g_regs_used = 0;\n   int used_regs_buf[8], *bufp = used_regs_buf;\n   int used_fregs_buf[8], *fbufp = used_fregs_buf;\n-  extern char call_used_regs[];\n \n   for (regno = 0; regno < 8; regno++)\n     if (regs_ever_live[regno]\n@@ -327,7 +325,6 @@ ns32k_output_function_epilogue (file, size)\n   register int regno, g_regs_used = 0, f_regs_used = 0;\n   int used_regs_buf[8], *bufp = used_regs_buf;\n   int used_fregs_buf[17], *fbufp = used_fregs_buf;\n-  extern char call_used_regs[];\n \n   if (flag_pic && current_function_uses_pic_offset_table)\n     fprintf (file, \"\\tlprd sb,tos\\n\");\n@@ -404,7 +401,6 @@ ns32k_output_function_epilogue (file, size)\n   register int regno, g_regs_used = 0, f_regs_used = 0;\n   int used_regs_buf[8], *bufp = used_regs_buf;\n   int used_fregs_buf[8], *fbufp = used_fregs_buf;\n-  extern char call_used_regs[];\n \n   *fbufp++ = -2;\n   for (regno = 8; regno < 16; regno++)"}, {"sha": "0813fe11e9bf0187b83d8e3cbd424a95ec7e8b85", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e421052c886d39d5234c8cbfe655696a52d6be51/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e421052c886d39d5234c8cbfe655696a52d6be51/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=e421052c886d39d5234c8cbfe655696a52d6be51", "patch": "@@ -3043,7 +3043,6 @@ pa_output_function_prologue (file, size)\n void\n hppa_expand_prologue ()\n {\n-  extern char call_used_regs[];\n   int size = get_frame_size ();\n   int merge_sp_adjust_with_store = 0;\n   int i, offset;"}, {"sha": "0f89cfb462d07e389efe8ccb98423929b9da0a4b", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e421052c886d39d5234c8cbfe655696a52d6be51/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e421052c886d39d5234c8cbfe655696a52d6be51/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=e421052c886d39d5234c8cbfe655696a52d6be51", "patch": "@@ -69,7 +69,6 @@ vax_output_function_prologue (file, size)\n {\n   register int regno;\n   register int mask = 0;\n-  extern char call_used_regs[];\n \n   for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n     if (regs_ever_live[regno] && !call_used_regs[regno])"}, {"sha": "2403041ac69bd1f92d6f6d2e27f75fcf25af3057", "filename": "gcc/config/we32k/we32k.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e421052c886d39d5234c8cbfe655696a52d6be51/gcc%2Fconfig%2Fwe32k%2Fwe32k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e421052c886d39d5234c8cbfe655696a52d6be51/gcc%2Fconfig%2Fwe32k%2Fwe32k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fwe32k%2Fwe32k.c?ref=e421052c886d39d5234c8cbfe655696a52d6be51", "patch": "@@ -32,6 +32,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"regs.h\"\n #include \"tree.h\"\n #include \"expr.h\"\n+#include \"hard-reg-set.h\"\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n@@ -68,7 +69,6 @@ we32k_output_function_prologue (file, size)\n {\n   register int nregs_to_save;\n   register int regno;\n-  extern char call_used_regs[];\n \n   nregs_to_save = 0;\n   for (regno = 8; regno > 2; regno--)\n@@ -95,7 +95,6 @@ we32k_output_function_epilogue (file, size)\n {\n   register int nregs_to_restore;\n   register int regno;\n-  extern char call_used_regs[];\n \n   nregs_to_restore = 0;\n   for (regno = 8; regno > 2; regno--)"}]}