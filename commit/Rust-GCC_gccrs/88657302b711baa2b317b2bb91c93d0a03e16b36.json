{"sha": "88657302b711baa2b317b2bb91c93d0a03e16b36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg2NTczMDJiNzExYmFhMmIzMTdiMmJiOTFjOTNkMGEwM2UxNmIzNg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-05-26T01:31:47Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-05-26T01:31:47Z"}, "message": "Standardize header guards.\n\nFrom-SVN: r42615", "tree": {"sha": "a63afad955af14544b1903785b68f16116173e26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a63afad955af14544b1903785b68f16116173e26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88657302b711baa2b317b2bb91c93d0a03e16b36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88657302b711baa2b317b2bb91c93d0a03e16b36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88657302b711baa2b317b2bb91c93d0a03e16b36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88657302b711baa2b317b2bb91c93d0a03e16b36/comments", "author": null, "committer": null, "parents": [{"sha": "f811f821d511e7d03dbca9cd645d03bc721b92a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f811f821d511e7d03dbca9cd645d03bc721b92a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f811f821d511e7d03dbca9cd645d03bc721b92a2"}], "stats": {"total": 656, "additions": 352, "deletions": 304}, "files": [{"sha": "381e456d050d6fbee84da447694a066bc2850498", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -1,3 +1,23 @@\n+2001-05-25  Sam TH  <sam@uchicago.edu>\n+\n+\t* basic-block.h: Fix header include guards.\n+\t* bitmap.h c-dump.h c-lex.h c-pragma.h c-tree.h collect2.h\n+\tcppdefault.h cpphash.h cpplib.h defaults.h diagnostic.h errors.h\n+\texcept.h flags.h gcc.h gcov-io.h graph.h gstab.h gthr-aix.h\n+\tgthr-dce.h gthr-posix.h gthr-rtems.h gthr-single.h gthr-solaris.h\n+\tgthr-vxworks.h gthr-win32.h gthr.h hard-reg-set.h hwint.h\n+\tinsn-addr.h libgcc2.h mbchar.h mkdeps.h params.h prefix.h real.h\n+\trtl.h sbitmap.h system.h timevar.h toplev.h tradcpp.h tsystem.h\n+\tvarray.h version.h: Likewise.\n+\t* config/dbxelf.h config/fp-bit.h config/arm/arm-protos.h\n+\tconfig/arm/arm.h config/c4x/c4x-protos.h\n+\tconfig/h8300/h8300-protos.h config/h8300/h8300.h\n+\tconfig/i370/i370-protos.h config/i370/i370.h\n+\tconfig/i960/i960-protos.h config/mcore/mcore.h\n+\tconfig/mips/mips-protos.h config/sh/sh-protos.h config/sh/sh.h\n+\tconfig/v850/v850-protos.h config/v850/v850.h: Likewise.\n+\t* fixinc/fixlib.h fixinc/server.h: Likewise.\t\n+\n 2001-05-25  Stacey Sheldon  <ssheldon@Catena.com>\n \n \t* config/arc/initfini.c (.init): Fix typo."}, {"sha": "8ffcbce368ba876db9d0bb10539a7ecd71232294", "filename": "gcc/basic-block.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -18,8 +18,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef _BASIC_BLOCK_H\n-#define _BASIC_BLOCK_H 1\n+#ifndef GCC_BASIC_BLOCK_H\n+#define GCC_BASIC_BLOCK_H \n \n #include \"bitmap.h\"\n #include \"sbitmap.h\"\n@@ -578,4 +578,4 @@ enum cdi_direction\n extern void calculate_dominance_info\tPARAMS ((int *, sbitmap *,\n \t\t\t\t\t\t enum cdi_direction));\n \n-#endif /* _BASIC_BLOCK_H */\n+#endif /* GCC_BASIC_BLOCK_H */"}, {"sha": "0eb5992707302586a604191e960e31cc185e0e50", "filename": "gcc/bitmap.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -18,8 +18,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef _BITMAP_H\n-#define _BITMAP_H 1\n+#ifndef GCC_BITMAP_H\n+#define GCC_BITMAP_H \n \n /* Number of words to use for each element in the linked list.  */\n \n@@ -336,4 +336,4 @@ do {\t\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n } while (0)\n \n-#endif /* _BITMAP_H */\n+#endif /* GCC_BITMAP_H */"}, {"sha": "8625c9138385911b14c145d3bd8c90fae02140df", "filename": "gcc/c-common.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -835,4 +835,4 @@ struct c_fileinfo\n struct c_fileinfo *get_fileinfo\t\t\tPARAMS ((const char *));\n extern void dump_time_statistics\t\tPARAMS ((void));\n \n-#endif\n+#endif /* ! GCC_C_COMMON_H */"}, {"sha": "5afdee62bbf67cb537e913e36610a65dc19addd8", "filename": "gcc/c-dump.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fc-dump.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fc-dump.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-dump.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -19,6 +19,9 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#ifndef GCC_C_DUMP_H\n+#define GCC_C_DUMP_H\n+\n /* Flags used with queue functions.  */\n #define DUMP_NONE     0\n #define DUMP_BINFO    1\n@@ -82,3 +85,5 @@ extern void queue_and_dump_index\n   PARAMS ((dump_info_p, const char *, tree, int));\n extern void queue_and_dump_type \n   PARAMS ((dump_info_p, tree));\n+\n+#endif /* ! GCC_C_DUMP_H */"}, {"sha": "e2929f426252cf599081022c4f4087f5ab7b3ce2", "filename": "gcc/c-lex.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fc-lex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fc-lex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -18,8 +18,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef _C_LEX_H\n-#define _C_LEX_H\n+#ifndef GCC_C_LEX_H\n+#define GCC_C_LEX_H\n \n extern tree make_pointer_declarator PARAMS ((tree, tree));\n extern void position_after_white_space PARAMS ((void));\n@@ -32,4 +32,4 @@ extern int indent_level;\n struct cpp_reader;\n extern struct cpp_reader* parse_in;\n \n-#endif\n+#endif /* ! GCC_C_LEX_H */"}, {"sha": "d15c3e5d35a8c83f1e90f2b084f2c0255327c9ee", "filename": "gcc/c-pragma.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fc-pragma.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fc-pragma.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pragma.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -18,8 +18,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef _C_PRAGMA_H\n-#define _C_PRAGMA_H\n+#ifndef GCC_C_PRAGMA_H\n+#define GCC_C_PRAGMA_H\n \n #ifdef HANDLE_SYSV_PRAGMA\n /* Support #pragma weak iff ASM_WEAKEN_LABEL and ASM_OUTPUT_DEF are\n@@ -70,4 +70,4 @@ extern void cpp_register_pragma PARAMS ((cpp_reader *,\n extern void cpp_register_pragma_space PARAMS ((cpp_reader *, const char *));\n #endif\n \n-#endif /* _C_PRAGMA_H */\n+#endif /* GCC_C_PRAGMA_H */"}, {"sha": "508567a91d9641cf2e29ef86f38199c1545e51ee", "filename": "gcc/c-tree.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -19,8 +19,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef _C_TREE_H\n-#define _C_TREE_H\n+#ifndef GCC_C_TREE_H\n+#define GCC_C_TREE_H\n \n #include \"c-common.h\"\n \n@@ -361,4 +361,4 @@ extern int mesg_implicit_function_declaration;\n /* In c-decl.c */\n extern void finish_incomplete_decl PARAMS ((tree));\n \n-#endif /* not _C_TREE_H */\n+#endif /* ! GCC_C_TREE_H */"}, {"sha": "30775c61f5978caff24a293f8fdc5e97dfcbff76", "filename": "gcc/ch/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fch%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fch%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FChangeLog?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -1,3 +1,7 @@\n+2001-05-25  Sam TH  <sam@uchicago.edu>\n+\n+\t* ch-tree.h tasking.h: Fix header include guards.\n+\n 2001-05-20  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* Make-lang.in (chill.dvi): Remove bogus dependencies.  Don't cd"}, {"sha": "d38445bb0f43b56e75e807ca1308dcafc0f836e6", "filename": "gcc/ch/ch-tree.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fch%2Fch-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fch%2Fch-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fch-tree.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -19,8 +19,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef _CH_TREE_H\n-#define _CH_TREE_H\n+#ifndef GCC_CH_TREE_H\n+#define GCC_CH_TREE_H\n \n /* Usage of TREE_LANG_FLAG_?:\n    1: TUPLE_NAMED_FIELD\n@@ -1154,4 +1154,4 @@ extern tree deep_fold PARAMS ((tree));\n \n extern const char * const gnuchill_version;\n \n-#endif\n+#endif /* ! GCC_CH_TREE_H */"}, {"sha": "2a899fdfedb41cc50a7ece4b271a5bdc4082d6bc", "filename": "gcc/ch/tasking.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fch%2Ftasking.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fch%2Ftasking.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Ftasking.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -18,10 +18,10 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef _CH_TASKING_H\n-#define _CH_TASKING_H\n+#ifndef GCC_TASKING_H\n+#define GCC_TASKING_H\n \n /* list of this module's process, buffer, etc. decls */\n extern tree tasking_list;\n \n-#endif\n+#endif /* ! GCC_TASKING_H */"}, {"sha": "d23ca0840a951ba7c0dee71365ab44839dbc3d54", "filename": "gcc/collect2.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fcollect2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fcollect2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -18,8 +18,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef __COLLECT2_H__\n-#define __COLLECT2_H__\n+#ifndef GCC_COLLECT2_H\n+#define GCC_COLLECT2_H\n \n extern void do_tlink PARAMS ((char **, char **));\n \n@@ -48,4 +48,4 @@ extern void fatal PARAMS ((const char *, ...))\n extern void fatal_perror PARAMS ((const char *, ...))\n   ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n \n-#endif /* ! __COLLECT2_H__ */\n+#endif /* ! GCC_COLLECT2_H */"}, {"sha": "9d0664ea069e9f7f378964ded870722a904c788c", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -211,4 +211,4 @@ extern void arm_pr_no_long_calls\tPARAMS ((cpp_reader *));\n extern void arm_pr_long_calls_off\tPARAMS ((cpp_reader *));\n #endif\n \n-#endif /* GCC_ARM_PROTOS_H */\n+#endif /* ! GCC_ARM_PROTOS_H */"}, {"sha": "073672fb4270d79dab1ac5a9306a9c487f524e23", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -23,8 +23,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef __ARM_H__\n-#define __ARM_H__\n+#ifndef GCC_ARM_H\n+#define GCC_ARM_H\n \n #define TARGET_CPU_arm2\t\t0x0000\n #define TARGET_CPU_arm250\t0x0000\n@@ -3008,4 +3008,4 @@ enum arm_builtins\n \n #define MD_EXPAND_BUILTIN(EXP, TARGET, SUBTARGET, MODE, IGNORE) \\\n     arm_expand_builtin ((EXP), (TARGET), (SUBTARGET), (MODE), (IGNORE))\n-#endif /* __ARM_H__ */\n+#endif /* ! GCC_ARM_H */"}, {"sha": "4ea5c8beb35a0111a175899ca2804ed6bb50afd1", "filename": "gcc/config/c4x/c4x-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fc4x%2Fc4x-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fc4x%2Fc4x-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x-protos.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -313,4 +313,4 @@ extern void c4x_pr_ignored\t\tPARAMS ((cpp_reader *));\n extern void c4x_init_pragma\t\tPARAMS ((int (*) (tree *)));\n #endif\n \n-#endif\n+#endif /* ! GCC_C4X_PROTOS_H */"}, {"sha": "c1490aeb713b74c27fd1a29d3768cd2cda270423", "filename": "gcc/config/dbxelf.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fdbxelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fdbxelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdbxelf.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -22,8 +22,8 @@ Boston, MA 02111-1307, USA.  */\n    support -gstabs generating stabs in sections, as produced by gas\n    and understood by gdb.  */\n \n-#ifndef __DBX_ELF_H\n-#define __DBX_ELF_H\n+#ifndef GCC_DBX_ELF_H\n+#define GCC_DBX_ELF_H\n \n /* Output DBX (stabs) debugging information if doing -gstabs.  */\n \n@@ -84,4 +84,4 @@ while (0)\n   asm_fprintf (FILE,\t\t\t\t\t\t\t\\\n \t       \"\\t.text\\n\\t.stabs \\\"\\\",%d,0,0,%LLetext\\n%LLetext:\\n\", N_SO)\n \n-#endif /* __DBX_ELF_H */\n+#endif /* ! GCC_DBX_ELF_H */"}, {"sha": "3bd8ba84dbda05c5c99c7a21b8b286baadcb9d28", "filename": "gcc/config/fp-bit.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Ffp-bit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Ffp-bit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffp-bit.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -26,8 +26,8 @@ Boston, MA 02111-1307, USA.  */\n    This exception does not however invalidate any other reasons why\n    the executable file might be covered by the GNU General Public License.  */\n \n-#ifndef __FP_BIT_H__\n-#define __FP_BIT_H__\n+#ifndef GCC_FP_BIT_H\n+#define GCC_FP_BIT_H\n \n /* Defining FINE_GRAINED_LIBRARIES allows one to select which routines\n    from this file are compiled via additional -D options.\n@@ -414,4 +414,4 @@ extern SFtype df_to_sf (DFtype);\n #endif\n #endif /* ! FLOAT */\n \n-#endif /* __FP_BIT_H__ */\n+#endif /* ! GCC_FP_BIT_H */"}, {"sha": "e33d4635fd20d4ff1c634e6294b5ae8792d0c60a", "filename": "gcc/config/h8300/h8300-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -83,4 +83,4 @@ extern void h8300_pr_interrupt PARAMS ((cpp_reader *));\n extern void h8300_pr_saveall PARAMS ((cpp_reader *));\n #endif\n \n-#endif /* GCC_H8300_PROTOS_H */\n+#endif /* ! GCC_H8300_PROTOS_H */"}, {"sha": "d633757ce5811d0ca00e24f7c8918175bcad7455", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -1485,4 +1485,4 @@ readonly_data ()\t\t\t\t\t\t\t\\\n \n #define MOVE_RATIO 3\n \n-#endif /* GCC_H8300_H */\n+#endif /* ! GCC_H8300_H */"}, {"sha": "872ad7f6374d0d680b98fe1455811de3094f77b9", "filename": "gcc/config/i370/i370-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fi370%2Fi370-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fi370%2Fi370-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370-protos.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -54,4 +54,4 @@ extern void mvs_free_label_list PARAMS ((void));\n extern void i370_pr_map PARAMS ((cpp_reader *));\n #endif\n \n-#endif\n+#endif /* ! GCC_I370_PROTOS_H */"}, {"sha": "4f65617ec36f798406ef9f4f692bdc52af088515", "filename": "gcc/config/i370/i370.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fi370%2Fi370.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fi370%2Fi370.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -22,8 +22,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef __I370_H__\n-#define __I370_H__\n+#ifndef GCC_I370_H\n+#define GCC_I370_H\n /* Run-time compilation parameters selecting different hardware subsets.  */\n \n extern int target_flags;\n@@ -2165,4 +2165,4 @@ abort(); \\\n   fprintf ((FILE), \",%u\\n\", (ROUNDED)))\n \n #endif /* TARGET_ELF_ABI */\n-#endif /* __I370_H__ */\n+#endif /* ! GCC_I370_H */"}, {"sha": "629f2c175c9e61e86720e1c0c47c250b9c4ad286", "filename": "gcc/config/i960/i960-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fi960%2Fi960-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fi960%2Fi960-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960-protos.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -111,4 +111,4 @@ extern void i960_pr_align PARAMS ((cpp_reader *));\n extern void i960_pr_noalign PARAMS ((cpp_reader *));\n #endif\n \n-#endif /* i960-protos.h */\n+#endif /* ! GCC_I960_PROTOS_H  */"}, {"sha": "94816e959386618faa0926736d334d25743b0813", "filename": "gcc/config/mcore/mcore.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fmcore%2Fmcore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fmcore%2Fmcore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -18,8 +18,8 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n-#ifndef __MCORE__H\n-#define __MCORE__H\n+#ifndef GCC_MCORE_H\n+#define GCC_MCORE_H\n \n /* RBE: need to move these elsewhere.  */\n #undef\tLIKE_PPC_ABI \n@@ -1451,4 +1451,4 @@ extern long mcore_current_compilation_timestamp;\n   { \"mcore_store_multiple_operation\",\t{ PARALLEL }},\t\t\t\\\n   { \"mcore_call_address_operand\",\t{ REG, SUBREG, CONST_INT }},\t\\\n \n-#endif /* __MCORE__H */\n+#endif /* ! GCC_MCORE_H */"}, {"sha": "2cc8166b6bfda59f0d06d6f76f22cce14f72f8c1", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -23,8 +23,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef __MIPS_PROTOS_H__\n-#define __MIPS_PROTOS_H__\n+#ifndef GCC_MIPS_PROTOS_H\n+#define GCC_MIPS_PROTOS_H\n \n extern HOST_WIDE_INT\tcompute_frame_size PARAMS ((HOST_WIDE_INT));\n extern void\t\tfunction_epilogue PARAMS ((FILE *, HOST_WIDE_INT));\n@@ -157,4 +157,4 @@ extern int\t\tm16_usym8_4 PARAMS ((rtx, enum machine_mode));\n extern int\t\tm16_usym5_4 PARAMS ((rtx, enum machine_mode));\n #endif /* RTX_CODE */\n \n-#endif /* __MIPS_PROTOS_H__ */\n+#endif /* ! GCC_MIPS_PROTOS_H */"}, {"sha": "2ccaa724fdeed77e63a5bd0994c2a83ba5cf78a6", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -131,4 +131,4 @@ extern void sh_pr_trapa PARAMS ((cpp_reader *));\n extern void sh_pr_nosave_low_regs PARAMS ((cpp_reader *));\n #endif\n \n-#endif /* sh-protos.h */\n+#endif /* ! GCC_SH_PROTOS_H */"}, {"sha": "5bda01daba800257c8dc950149a0c61b3d0c62f2", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -2464,4 +2464,4 @@ do {\t\t\t\t\t\t\t\t\t\\\n 1:\t.long\t\" USER_LABEL_PREFIX #func \" - 0b\\n\\\n 2:\")\n \n-#endif /* sh.h */\n+#endif /* ! GCC_SH_H */"}, {"sha": "1ff65e5f72a958c0554cc82f66dccacd0d82b967", "filename": "gcc/config/v850/v850-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fv850%2Fv850-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fv850%2Fv850-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850-protos.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -98,4 +98,4 @@ extern void ghs_pragma_endzda\t\t    PARAMS ((cpp_reader *));\n \n #undef  Mmode\n \n-#endif /* v850-protos.h */\n+#endif /* ! GCC_V850_PROTOS_H */"}, {"sha": "09632e7e5dae5f5423d46f3cd15a0488c50ce1dc", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -1633,4 +1633,4 @@ extern union tree_node * GHS_current_section_names [(int) COUNT_OF_GHS_SECTION_K\n { \"register_is_ok_for_epilogue\",{ REG }},\t\t\t\t\\\n { \"not_power_of_two_operand\",\t{ CONST_INT }},\n   \n-#endif /* v850.h */\n+#endif /* ! GCC_V850_H */"}, {"sha": "e8ab9483fe23e357121d2269bc2ea6b0db9ad727", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -1,4 +1,8 @@\n-2001-05-26  Mark Mitchell <mark@codesourcery.com>\n+2001-05-25  Sam TH  <sam@uchicago.edu>\n+\n+\t* cp-tree.h lex.h: Fix header include guards.\n+\n+2001-05-25  Mark Mitchell <mark@codesourcery.com>\n \n \t* decl.c (init_decl_processing): Tweak.\n "}, {"sha": "e820303243ce74f75a5312ee2f500fc43b36565f", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -25,8 +25,8 @@ Boston, MA 02111-1307, USA.  */\n #include \"splay-tree.h\"\n #include \"varray.h\"\n \n-#ifndef _CP_TREE_H\n-#define _CP_TREE_H\n+#ifndef GCC_CP_TREE_H\n+#define GCC_CP_TREE_H\n \n #include \"c-common.h\"\n \n@@ -4533,4 +4533,4 @@ extern int cp_dump_tree                         PARAMS ((dump_info_p, tree));\n \n /* -- end of C++ */\n \n-#endif /* not _CP_TREE_H */\n+#endif /* ! GCC_CP_TREE_H */"}, {"sha": "9f86833777b8980a4e58a4fcc336d47573f0f870", "filename": "gcc/cp/lex.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fcp%2Flex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fcp%2Flex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -21,8 +21,8 @@ can know your rights and responsibilities.  It should be in a\n file named COPYING.  Among other things, the copyright notice\n and this notice must be preserved on all copies.  */\n \n-#ifndef _CP_LEX_H\n-#define _CP_LEX_H\n+#ifndef GCC_CP_LEX_H\n+#define GCC_CP_LEX_H\n \n #if 0\n /* Formerly, the RID_* values used as mask bits did not fit into a\n@@ -84,4 +84,4 @@ extern int pending_lang_change;\n \n extern int yylex PARAMS ((void));\n \n-#endif /* _CP_LEX_H */\n+#endif /* ! GCC_CP_LEX_H */"}, {"sha": "8ee6a1fda5ead17c18f2246acfc2a05195f9b693", "filename": "gcc/cppdefault.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fcppdefault.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fcppdefault.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppdefault.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -19,8 +19,8 @@ You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n \n-#ifndef __GCC_CPPDEFAULT__\n-#define __GCC_CPPDEFAULT__\n+#ifndef GCC_CPPDEFAULT_H\n+#define GCC_CPPDEFAULT_H\n \n /* This header contains declarations and/or #defines for all the\n    hard-wired defaults in cpp.  Note it's used by both cpplib and\n@@ -109,4 +109,4 @@ extern const struct default_include cpp_include_defaults[];\n extern const char cpp_GCC_INCLUDE_DIR[];\n extern const size_t cpp_GCC_INCLUDE_DIR_len;\n \n-#endif /* cppdefault.h */\n+#endif /* ! GCC_CPPDEFAULT_H */"}, {"sha": "56d90681dcbbcccb2848fe1d7cc13b903db9e2cf", "filename": "gcc/cpphash.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fcpphash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fcpphash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -514,4 +514,4 @@ ufputs (s, f)\n   return fputs ((const char *)s, f);\n }\n \n-#endif /* GCC_CPPHASH_H */\n+#endif /* ! GCC_CPPHASH_H */"}, {"sha": "c05b5e2e431be5ba0ed77c8d9ffcd1d7bdd492bd", "filename": "gcc/cpplib.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -31,7 +31,7 @@ extern \"C\" {\n #endif\n \n /* For complex reasons, cpp_reader is also typedefed in c-pragma.h.  */\n-#ifndef _C_PRAGMA_H\n+#ifndef GCC_C_PRAGMA_H\n typedef struct cpp_reader cpp_reader;\n #endif\n typedef struct cpp_buffer cpp_buffer;\n@@ -631,4 +631,5 @@ extern void cpp_make_system_header PARAMS ((cpp_reader *, int, int));\n #ifdef __cplusplus\n }\n #endif\n-#endif /* GCC_CPPLIB_H */\n+\n+#endif /* ! GCC_CPPLIB_H */"}, {"sha": "2989b6674eef3f873d2024953bd417011ca4c28f", "filename": "gcc/defaults.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -351,5 +351,4 @@ do {\t\t\t\t\t\t\t\t\\\n #define MD_INIT_BUILTINS\n #endif\n \n-#endif  /* GCC_DEFAULTS_H */\n-\n+#endif  /* ! GCC_DEFAULTS_H */"}, {"sha": "9d017584aaff35d7cba83f00639fb031ce91ef5d", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -19,8 +19,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef __GCC_DIAGNOSTIC_H__\n-#define __GCC_DIAGNOSTIC_H__\n+#ifndef GCC_DIAGNOSTIC_H\n+#define GCC_DIAGNOSTIC_H\n \n #include \"obstack.h\"\n \n@@ -227,4 +227,4 @@ extern int error_function_changed\tPARAMS ((void));\n extern void record_last_error_function\tPARAMS ((void));\n extern void report_problematic_module\tPARAMS ((output_buffer *));     \n \n-#endif /* __GCC_DIAGNOSTIC_H__ */\n+#endif /* ! GCC_DIAGNOSTIC_H */"}, {"sha": "afb519a09300edd6d82491a972f05bca691a262d", "filename": "gcc/errors.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ferrors.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ferrors.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ferrors.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -22,8 +22,8 @@ Boston, MA 02111-1307, USA.  */\n    in the generator programs; eventually we would like to use them in\n    cc1 too, but that's a longer term project.  */\n \n-#ifndef __GCC_ERRORS_H__\n-#define __GCC_ERRORS_H__\n+#ifndef GCC_ERRORS_H\n+#define GCC_ERRORS_H\n \n extern void warning PARAMS ((const char *, ...)) ATTRIBUTE_PRINTF_1;\n extern void error   PARAMS ((const char *, ...)) ATTRIBUTE_PRINTF_1;\n@@ -38,4 +38,4 @@ extern void fancy_abort PARAMS ((const char *, int, const char *))\n extern int have_error;\n extern const char *progname;\n     \n-#endif\n+#endif /* ! GCC_ERRORS_H */"}, {"sha": "1671cf67b5c5d75753639819b483e7d580895d0e", "filename": "gcc/except.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -31,7 +31,7 @@ struct rtx_def;\n #define rtx struct rtx_def *\n #endif\n \n-#ifndef _VARRAY_H_\n+#ifndef GCC_VARRAY_H\n struct varray_head_tag;\n #define varray_type struct varray_head_tag *\n #endif\n@@ -169,7 +169,7 @@ extern tree (*lang_eh_runtime_type) PARAMS ((tree));\n #undef rtx\n #endif\n \n-#ifndef _VARRAY_H_\n+#ifndef GCC_VARRAY_H\n #undef varray_type\n #endif\n "}, {"sha": "95942e7070a78277fabd47532718dc213287f970", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -1,3 +1,13 @@\n+2001-05-25  Sam TH  <sam@uchicago.edu>\n+\n+\t* bad.h: Fix header include guards.\n+\t* bit.h bld.h com.h data.h equiv.h expr.h global.h\n+\timplic.h info.h intrin.h lab.h lex.h malloc.h name.h\n+\tproj.h src.h st.h sta.h stb.h stc.h std.h ste.h\n+\tstorag.h stp.h str.h sts.h stt.h stu.h stv.h stw.h\n+\tsymbol.h target.h top.h type.h version.h \n+\twhere.h: Likewise.\n+\n 2001-05-22  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n \t* g77.texi: Update last-changed date."}, {"sha": "8589943cc4604061da27679ec3ae90cead11a8a2", "filename": "gcc/f/bad.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fbad.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fbad.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbad.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_bad\n-#define _H_f_bad\n+#ifndef GCC_F_BAD_H\n+#define GCC_F_BAD_H\n \n /* Simple definitions and enumerations. */\n \n@@ -105,4 +105,4 @@ void ffebad_string (const char *string);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_BAD_H */"}, {"sha": "6b559efe668ea614ef35be324448cfa4968be4b1", "filename": "gcc/f/bit.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fbit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fbit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbit.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_bit\n-#define _H_f_bit\n+#ifndef GCC_F_BIT_H\n+#define GCC_F_BIT_H\n \n /* Simple definitions and enumerations. */\n \n@@ -81,4 +81,4 @@ void ffebit_test (ffebit b, ffebitCount offset, bool *value, ffebitCount *length\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_BIT_H */"}, {"sha": "3347b1cd92fb0a9464c175a173a699f8529146b1", "filename": "gcc/f/bld.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fbld.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fbld.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbld.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_bld\n-#define _H_f_bld\n+#ifndef GCC_F_BLD_H\n+#define GCC_F_BLD_H\n \n /* Simple definitions and enumerations. */\n \n@@ -1036,4 +1036,4 @@ ffetargetCharacterSize ffebld_size_max (ffebld b);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_BLD_H */"}, {"sha": "a0d08b1736a286bac0cf204c755a2e461463bd88", "filename": "gcc/f/com.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fcom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fcom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_com\n-#define _H_f_com\n+#ifndef GCC_F_COM_H\n+#define GCC_F_COM_H\n \n /* Simple definitions and enumerations. */\n \n@@ -347,4 +347,4 @@ tree ffecom_which_entrypoint_decl (void);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_COM_H */"}, {"sha": "a99369d0b0407b0076d9a5178a32018dfaa17294", "filename": "gcc/f/data.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fdata.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fdata.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fdata.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_data\n-#define _H_f_data\n+#ifndef GCC_F_DATA_H\n+#define GCC_F_DATA_H\n \n /* Simple definitions and enumerations. */\n \n@@ -71,4 +71,4 @@ bool ffedata_value (ffetargetIntegerDefault rpt, ffebld value,\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_DATA_H */"}, {"sha": "f3d2c858d43d90d5615a438f691bfbc08328a112", "filename": "gcc/f/equiv.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fequiv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fequiv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fequiv.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_equiv\n-#define _H_f_equiv\n+#ifndef GCC_F_EQUIV_H\n+#define GCC_F_EQUIV_H\n \n /* Simple definitions and enumerations. */\n \n@@ -100,4 +100,4 @@ void ffeequiv_update_save (ffeequiv eq);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_EQUIV_H */"}, {"sha": "b82173bbf0e7453e2c3659853e1952df02164894", "filename": "gcc/f/expr.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fexpr.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_expr\n-#define _H_f_expr\n+#ifndef GCC_F_EXPR_H\n+#define GCC_F_EXPR_H\n \n /* Simple definitions and enumerations. */\n \n@@ -191,4 +191,4 @@ void ffeexpr_type_combine (ffeinfoBasictype *nbt, ffeinfoKindtype *nkt,\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_EXPR_H */"}, {"sha": "5ab67417bb17d64a8e64ce577bb27e213fcbccd2", "filename": "gcc/f/global.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fglobal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fglobal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fglobal.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_global\n-#define _H_f_global\n+#ifndef GCC_F_GLOBAL_H\n+#define GCC_F_GLOBAL_H\n \n /* Simple definitions and enumerations. */\n \n@@ -197,4 +197,5 @@ void ffeglobal_terminate_1 (void);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_GLOBAL_H */\n+ "}, {"sha": "44fbfac4e4fa1d0bb6aea3bbe2150be4967a97dc", "filename": "gcc/f/implic.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fimplic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fimplic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fimplic.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_implic\n-#define _H_f_implic\n+#ifndef GCC_F_IMPLIC_H\n+#define GCC_F_IMPLIC_H\n \n /* Simple definitions and enumerations. */\n \n@@ -71,4 +71,4 @@ void ffeimplic_terminate_2 (void);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_IMPLIC_H */"}, {"sha": "69defd27ab633f0e61e692dc913d3ea2e4392362", "filename": "gcc/f/info.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Finfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Finfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Finfo.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -29,8 +29,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_info\n-#define _H_f_info\n+#ifndef GCC_F_INFO_H\n+#define GCC_F_INFO_H\n \n /* Simple definitions and enumerations. */\n \n@@ -183,4 +183,4 @@ ffetype ffeinfo_type (ffeinfoBasictype basictype, ffeinfoKindtype kindtype);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_INFO_H */"}, {"sha": "76b59dca3fb8fcf829a5c6aa8c6932fc745a6b9b", "filename": "gcc/f/intrin.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintrin.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -21,8 +21,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n */\n \n-#ifndef _H_f_intrin\n-#define _H_f_intrin\n+#ifndef GCC_F_INTRIN_H\n+#define GCC_F_INTRIN_H\n \n #ifndef FFEINTRIN_DOC\n #define FFEINTRIN_DOC 0\t/* 1 means intrinsic documentation only (intdoc.c). */\n@@ -134,4 +134,4 @@ ffeIntrinsicState ffeintrin_state_family (ffeintrinFamily family);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_INTRIN_H */"}, {"sha": "fba3808ec8e2361948e69225d0402c8411330005", "filename": "gcc/f/lab.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Flab.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Flab.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flab.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -29,8 +29,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_lab\n-#define _H_f_lab\n+#ifndef GCC_F_LAB_H\n+#define GCC_F_LAB_H\n \n /* Simple definitions and enumerations. */\n \n@@ -151,4 +151,4 @@ ffelab ffelab_new (ffelabValue v);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_LAB_H */"}, {"sha": "a28d0ac1691d25e211101b19681d2079a96ad14c", "filename": "gcc/f/lex.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Flex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Flex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flex.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -29,8 +29,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_lex\n-#define _H_f_lex\n+#ifndef GCC_F_LEX_H\n+#define GCC_F_LEX_H\n \n /* Simple definitions and enumerations. */\n \n@@ -198,4 +198,4 @@ ffelexToken ffelex_token_use (ffelexToken t);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_LEX_H */"}, {"sha": "1c827209f2c9101b4f1861c3a1f65637d94a5e42", "filename": "gcc/f/malloc.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fmalloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fmalloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fmalloc.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_malloc\n-#define _H_f_malloc\n+#ifndef GCC_F_MALLOC_H\n+#define GCC_F_MALLOC_H\n \n #ifndef MALLOC_DEBUG\n #define MALLOC_DEBUG 0\t/* 1 means check caller's use of this module. */\n@@ -180,4 +180,4 @@ void malloc_verify_inpool_ (mallocPool pool, mallocType_ type, void *ptr,\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_MALLOC_H */"}, {"sha": "4b18805d3d0a55e06e7d101f674c9f335478d288", "filename": "gcc/f/name.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fname.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fname.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fname.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_name\n-#define _H_f_name\n+#ifndef GCC_F_NAME_H\n+#define GCC_F_NAME_H\n \n /* Simple definitions and enumerations. */\n \n@@ -106,4 +106,4 @@ ffenameSpace ffename_space_new (mallocPool pool);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_NAME_H */"}, {"sha": "fd4a65cc59f80988af930b3c7a2988ae7ae83546", "filename": "gcc/f/proj.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fproj.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fproj.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fproj.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -21,8 +21,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n */\n \n-#ifndef _H_f_proj\n-#define _H_f_proj\n+#ifndef GCC_F_PROJ_H\n+#define GCC_F_PROJ_H\n \n #ifdef USE_HCONFIG\n #include \"hconfig.h\"\n@@ -47,4 +47,4 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define dmpout stderr\n #endif\n \n-#endif\n+#endif /* ! GCC_F_PROJ_H */"}, {"sha": "ce5843eaa0e240d23ec945ce6a6d07d089210d53", "filename": "gcc/f/src.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fsrc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fsrc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fsrc.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_src\n-#define _H_f_src\n+#ifndef GCC_F_SRC_H\n+#define GCC_F_SRC_H\n \n #include \"bad.h\"\n #include \"top.h\"\n@@ -137,4 +137,4 @@ int ffesrc_strncmp_2c (ffeCase mcase, const char *var, const char *str_uc,\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_SRC_H */"}, {"sha": "65b99f9bbfee80aa43eafe45cd7c4846ce28462c", "filename": "gcc/f/st.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fst.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fst.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fst.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_st\n-#define _H_f_st\n+#ifndef GCC_F_ST_H\n+#define GCC_F_ST_H\n \n /* Simple definitions and enumerations. */\n \n@@ -78,4 +78,4 @@ void ffest_terminate_4 (void);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_ST_H */"}, {"sha": "cf417771557879ce3fbd435a154873b0bef04416", "filename": "gcc/f/sta.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fsta.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fsta.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fsta.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_sta\n-#define _H_f_sta\n+#ifndef GCC_F_STA_H\n+#define GCC_F_STA_H\n \n /* Simple definitions and enumerations. */\n \n@@ -114,4 +114,4 @@ void ffesta_set_outpooldisp (ffestaPooldisp d);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_STA_H */"}, {"sha": "a9b3acc586c7748a469d3026342d21d3db446e3c", "filename": "gcc/f/stb.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstb.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstb.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstb.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_stb\n-#define _H_f_stb\n+#ifndef GCC_F_STB_H\n+#define GCC_F_STB_H\n \n /* Simple definitions and enumerations. */\n \n@@ -250,4 +250,4 @@ ffelexHandler ffestb_V027 (ffelexToken t);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_STB_H */"}, {"sha": "8b2f7c3aafe5c5cd1d1b7cadab4da980693ce09c", "filename": "gcc/f/stc.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstc.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_stc\n-#define _H_f_stc\n+#ifndef GCC_F_STC_H\n+#define GCC_F_STC_H\n \n /* Simple definitions and enumerations. */\n \n@@ -357,4 +357,4 @@ void ffestc_any (void);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_STC_H */"}, {"sha": "ea8292cc8dcc0f477ea7642b7f2de61fab57f1c0", "filename": "gcc/f/std.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstd.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_std\n-#define _H_f_std\n+#ifndef GCC_F_STD_H\n+#define GCC_F_STD_H\n \n /* Simple definitions and enumerations. */\n \n@@ -295,4 +295,4 @@ void ffestd_any (void);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_STD_H */"}, {"sha": "a4473578e4161467e1c9367ba9f69821aa2f1dd6", "filename": "gcc/f/ste.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fste.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fste.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fste.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_ste\n-#define _H_f_ste\n+#ifndef GCC_F_STE_H\n+#define GCC_F_STE_H\n \n /* Simple definitions and enumerations. */\n \n@@ -169,4 +169,4 @@ void ffeste_terminate_2 (void);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_STE_H */"}, {"sha": "e4aa4046db707a6ccc4da3e50a5c546a8a37730f", "filename": "gcc/f/storag.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstorag.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstorag.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstorag.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_storag\n-#define _H_f_storag\n+#ifndef GCC_F_STORAG_H\n+#define GCC_F_STORAG_H\n \n /* Simple definitions and enumerations. */\n \n@@ -164,4 +164,4 @@ void ffestorag_update_save (ffestorag s);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_STORAG_H */"}, {"sha": "eca8d0d563daf97b08fe4ab9fb08135443f626d4", "filename": "gcc/f/stp.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstp.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_stp\n-#define _H_f_stp\n+#ifndef GCC_F_STP_H\n+#define GCC_F_STP_H\n \n /* Simple definitions and enumerations. */\n \n@@ -505,4 +505,4 @@ extern union _ffestp_fileu_ ffestp_file;\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_STP_H */"}, {"sha": "543eeeb7c90e3b83ea23af1de7eeee5b38982dae", "filename": "gcc/f/str.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstr.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_str\n-#define _H_f_str\n+#ifndef GCC_F_STR_H\n+#define GCC_F_STR_H\n \n /* Simple definitions and enumerations. */\n \n@@ -82,4 +82,4 @@ ffestrSecond ffestr_second (ffelexToken t);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_STR_H */"}, {"sha": "3ca494d81de53afcb9f5270ac1c573bf764e93c5", "filename": "gcc/f/sts.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fsts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fsts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fsts.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_sts\n-#define _H_f_sts\n+#ifndef GCC_F_STS_H\n+#define GCC_F_STS_H\n \n /* Simple definitions and enumerations. */\n \n@@ -82,4 +82,4 @@ void ffests_puttext (ffests s, const char *text, ffestsLength length);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_STS_H */"}, {"sha": "e56e843fe30e013664d4b4ec53222baa5f252b69", "filename": "gcc/f/stt.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstt.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_stt\n-#define _H_f_stt\n+#ifndef GCC_F_STT_H\n+#define GCC_F_STT_H\n \n /* Simple definitions and enumerations. */\n \n@@ -227,4 +227,4 @@ void ffestt_tokenlist_kill (ffesttTokenList list);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_STT_H */"}, {"sha": "e01b741b389d8c74434d8912f94401a4cfa29c9b", "filename": "gcc/f/stu.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstu.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_stu\n-#define _H_f_stu\n+#ifndef GCC_F_STU_H\n+#define GCC_F_STU_H\n \n /* Simple definitions and enumerations. */\n \n@@ -66,4 +66,4 @@ ffesymbol ffestu_sym_exec_transition (ffesymbol s);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_STU_H */"}, {"sha": "a3f959f46086181a80627bd8544f745381acbd91", "filename": "gcc/f/stv.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstv.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_stv\n-#define _H_f_stv\n+#ifndef GCC_F_STV_H\n+#define GCC_F_STV_H\n \n /* Simple definitions and enumerations. */\n \n@@ -162,4 +162,4 @@ extern ffelabNumber ffestv_num_label_defines_;\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_STV_H */"}, {"sha": "826e941e44712f3a0304494f4f203bdd5c2b9ba9", "filename": "gcc/f/stw.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstw.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fstw.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstw.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_stw\n-#define _H_f_stw\n+#ifndef GCC_F_STW_H\n+#define GCC_F_STW_H\n \n /* Simple definitions and enumerations. */\n \n@@ -184,4 +184,4 @@ ffestw ffestw_use (ffestw block);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_STW_H */"}, {"sha": "cc8b1c0eb2ddd25a743f4e958e6cd7b93104b38a", "filename": "gcc/f/symbol.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fsymbol.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fsymbol.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fsymbol.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -19,8 +19,8 @@ along with GNU Fortran; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n 02111-1307, USA.  */\n \n-#ifndef _H_f_symbol\n-#define _H_f_symbol\n+#ifndef GCC_F_SYMBOL_H\n+#define GCC_F_SYMBOL_H\n \n /* The main symbol type.  */\n \n@@ -293,4 +293,4 @@ void ffesymbol_update_save (ffesymbol s);\n #define ffesymbol_where_line(s) (((s)->name == NULL) ? ffewhere_line_unknown() \\\n       : ffename_where_line((s)->name))\n \n-#endif\n+#endif /* ! GCC_F_SYMBOL_H */"}, {"sha": "5ce663d5a3474f6cca8971d541d667d014e6f04d", "filename": "gcc/f/target.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftarget.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_target\n-#define _H_f_target\n+#ifndef GCC_F_TARGET_H\n+#define GCC_F_TARGET_H\n \n #ifdef FFE_STANDALONE\n #define HOST_WIDE_INT long\n@@ -1892,4 +1892,4 @@ void *ffetarget_memcpy_ (void *dst, void *src, size_t len);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_TARGET_H */"}, {"sha": "eb820fe9dbf0b12ee2b5b83aa586d67ef06a5df0", "filename": "gcc/f/top.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Ftop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Ftop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftop.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_parse\n-#define _H_f_parse\n+#ifndef GCC_F_TOP_H\n+#define GCC_F_TOP_H\n \n /* Simple definitions and enumerations. */\n \n@@ -261,4 +261,4 @@ void ffe_terminate_4 (void);\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_TOP_H */"}, {"sha": "9e3bd801e19aa5a60702786eb398d95bdfa6bf23", "filename": "gcc/f/type.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Ftype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Ftype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftype.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -19,8 +19,8 @@ along with GNU Fortran; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n 02111-1307, USA.  */\n \n-#ifndef _H_f_type\n-#define _H_f_type\n+#ifndef GCC_F_TYPE_H\n+#define GCC_F_TYPE_H\n \n typedef struct _ffetype_ *ffetype;\n typedef struct _ffetype_indexes_ *ffetype_indexes_;\n@@ -61,4 +61,4 @@ void ffetype_set_star (ffetype base_type, int star, ffetype type);\n #define ffetype_terminate_3()\n #define ffetype_terminate_4()\n \n-#endif\n+#endif /* ! GCC_F_TYPE_H */"}, {"sha": "c612071ddbecc1a0db2e089b8ab6258455891c06", "filename": "gcc/f/version.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fversion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fversion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fversion.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -1,6 +1,6 @@\n-#ifndef _H_f_version\n-#define _H_f_version\n+#ifndef GCC_F_VERSION_H\n+#define GCC_F_VERSION_H\n \n extern const char *ffe_version_string;\n \n-#endif\n+#endif /* ! GCC_F_VERSION_H */"}, {"sha": "a3adb4bda6b754fd9193f5a4c5ee13a5671ec54b", "filename": "gcc/f/where.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fwhere.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ff%2Fwhere.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fwhere.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n /* Allow multiple inclusion to work. */\n \n-#ifndef _H_f_where\n-#define _H_f_where\n+#ifndef GCC_F_WHERE_H\n+#define GCC_F_WHERE_H\n \n /* Simple definitions and enumerations. */\n \n@@ -135,4 +135,4 @@ void ffewhere_track_kill (ffewhereLine wrl, ffewhereColumn wrc, ffewhereTrack wt\n \n /* End of #include file. */\n \n-#endif\n+#endif /* ! GCC_F_EHERE_H */"}, {"sha": "6bcc6e2c6668a7e50f261dc45521f98869dc07af", "filename": "gcc/fixinc/fixlib.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ffixinc%2Ffixlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ffixinc%2Ffixlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixlib.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -22,8 +22,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef FIXINCLUDES_FIXLIB_H\n-#define FIXINCLUDES_FIXLIB_H\n+#ifndef GCC_FIXLIB_H\n+#define GCC_FIXLIB_H\n \n #include \"auto-host.h\"\n #include \"ansidecl.h\"\n@@ -224,4 +224,4 @@ void   mn_get_regexps\n                    PARAMS(( regex_t** label_re, regex_t** name_re,\n                             tCC *who ));\n #endif\n-#endif /* FIXINCLUDES_FIXLIB_H */\n+#endif /* ! GCC_FIXLIB_H */"}, {"sha": "c27a51eb493fbe1309dcb88c6904f7ac6d93724a", "filename": "gcc/fixinc/server.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ffixinc%2Fserver.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ffixinc%2Fserver.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fserver.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -46,8 +46,8 @@\n  * If you do not wish that, delete this exception notice.\n  */\n \n-#ifndef FIXINC_SERVER_H\n-#define FIXINC_SERVER_H\n+#ifndef GCC_SERVER_H\n+#define GCC_SERVER_H\n \n #include <stdio.h>\n #ifdef HAVE_UNISTD_H\n@@ -78,4 +78,5 @@ pid_t proc2_open  PARAMS (( t_fd_pair * p_pair, tCC ** pp_args));\n int   chain_open  PARAMS (( int in_fd, tCC ** pp_args,\n                             pid_t * p_child));\n void close_server PARAMS (( void ));\n-#endif /* FIXINC_SERVER_H */\n+\n+#endif /* ! GCC_SERVER_H */"}, {"sha": "46168a0269fbcc169c658d575a7cc7ee03998624", "filename": "gcc/flags.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -631,4 +631,4 @@ extern int flag_detailed_statistics;\n /* Nonzero means enable synchronous exceptions for non-call instructions.  */\n extern int flag_non_call_exceptions;\n \n-#endif /* GCC_FLAGS_H */\n+#endif /* ! GCC_FLAGS_H */"}, {"sha": "62526769d8691f29873d256c9c72d4c36efb72b5", "filename": "gcc/gcc.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgcc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgcc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -18,8 +18,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef __GCC_H__\n-#define __GCC_H__\n+#ifndef GCC_GCC_H\n+#define GCC_GCC_H\n \n #include \"version.h\"\n \n@@ -51,4 +51,4 @@ extern int lang_specific_extra_outfiles;\n \n extern const char **outfiles;\n \n-#endif /* ! __GCC_H__ */\n+#endif /* ! GCC_GCC_H */"}, {"sha": "48f83aa00d1fc38774426fb45da3b135087c96b4", "filename": "gcc/gcov-io.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgcov-io.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgcov-io.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-io.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -19,8 +19,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef GCOV_IO_H\n-#define GCOV_IO_H\n+#ifndef GCC_GCOV_IO_H\n+#define GCC_GCOV_IO_H\n #include <stdio.h>\n #include <sys/types.h>\n \n@@ -139,4 +139,4 @@ __read_long (dest, file, bytes)\n     return __fetch_long (dest, c, bytes);\n }\n \n-#endif\n+#endif /* ! GCC_GCOV_IO_H */"}, {"sha": "2bbbb154d15056cd7f99a4463bb05bda82848c92", "filename": "gcc/graph.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraph.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -18,11 +18,11 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef __GRAPH_H__\n-#define __GRAPH_H__\n+#ifndef GCC_GRAPH_H\n+#define GCC_GRAPH_H\n \n extern void print_rtl_graph_with_bb PARAMS ((const char *, const char *, rtx));\n extern void clean_graph_dump_file PARAMS ((const char *, const char *));\n extern void finish_graph_dump_file PARAMS ((const char *, const char *));\n \n-#endif /* ! __GRAPH_H__ */\n+#endif /* ! GCC_GRAPH_H */"}, {"sha": "ed510c164617ed5d7236580862a7c3a3e83e8c5a", "filename": "gcc/gstab.h", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgstab.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgstab.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgstab.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -1,8 +1,5 @@\n-#ifndef __GNU_STAB__\n-\n-/* Indicate the GNU stab.h is in use.  */\n-\n-#define __GNU_STAB__\n+#ifndef GCC_GSTAB_H\n+#define GCC_GSTAB_H\n \n #define __define_stab(NAME, CODE, STRING) NAME=CODE,\n \n@@ -14,4 +11,4 @@ LAST_UNUSED_STAB_CODE\n \n #undef __define_stab\n \n-#endif /* __GNU_STAB_ */\n+#endif /* ! GCC_GSTAB_H */"}, {"sha": "57f04210b9a7548429dd416795d887da48f35b0e", "filename": "gcc/gthr-aix.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr-aix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr-aix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-aix.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -26,13 +26,13 @@ Boston, MA 02111-1307, USA.  */\n    This exception does not however invalidate any other reasons why\n    the executable file might be covered by the GNU General Public License.  */\n \n-#ifndef __gthr_aix_h\n-#define __gthr_aix_h\n+#ifndef GCC_GTHR_AIX_H\n+#define GCC_GTHR_AIX_H\n \n #ifdef _THREAD_SAFE\n #include \"gthr-posix.h\"\n #else\n #include \"gthr-single.h\"\n #endif\n \n-#endif /* __gthr_aix_h */\n+#endif /* GCC_GTHR_AIX_H */"}, {"sha": "ce77bf12915e175aba863eca692acd1357ccd250", "filename": "gcc/gthr-dce.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr-dce.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr-dce.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-dce.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -26,8 +26,8 @@ Boston, MA 02111-1307, USA.  */\n    This exception does not however invalidate any other reasons why\n    the executable file might be covered by the GNU General Public License.  */\n \n-#ifndef __gthr_dce_h\n-#define __gthr_dce_h\n+#ifndef GCC_GTHR_DCE_H\n+#define GCC_GTHR_DCE_H\n \n /* DCE threads interface.\n    DCE threads are based on POSIX threads draft 4, and many things\n@@ -486,4 +486,4 @@ __gthread_mutex_unlock (__gthread_mutex_t *mutex)\n \n #undef UNUSED\n \n-#endif /* not __gthr_dce_h */\n+#endif /* ! GCC_GTHR_DCE_H */"}, {"sha": "7ffb0a08f54ad5c704076df800d39f046905d981", "filename": "gcc/gthr-posix.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr-posix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr-posix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-posix.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -26,8 +26,8 @@ Boston, MA 02111-1307, USA.  */\n    This exception does not however invalidate any other reasons why\n    the executable file might be covered by the GNU General Public License.  */\n \n-#ifndef __gthr_posix_h\n-#define __gthr_posix_h\n+#ifndef GCC_GTHR_POSIX_H\n+#define GCC_GTHR_POSIX_H\n \n /* POSIX threads specific definitions.\n    Easy, since the interface is just one-to-one mapping. */\n@@ -500,4 +500,4 @@ __gthread_mutex_unlock (__gthread_mutex_t *mutex)\n \n #endif /* _LIBOBJC */\n \n-#endif /* not __gthr_posix_h */\n+#endif /* ! GCC_GTHR_POSIX_H */"}, {"sha": "cb2d822abc972b2ac50223569d5738e957307dd6", "filename": "gcc/gthr-rtems.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr-rtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr-rtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-rtems.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ Boston, MA 02111-1307, USA.  */\n    This exception does not however invalidate any other reasons why\n    the executable file might be covered by the GNU General Public License.  */\n \n-#ifndef __gthr_rtems_h\n-#define __gthr_rtems_h\n+#ifndef GCC_GTHR_RTEMS_H\n+#define GCC_GTHR_RTEMS_H\n \n \n #define __GTHREADS 1\n@@ -117,4 +117,4 @@ __gthread_mutex_unlock (__gthread_mutex_t *mutex)\n     return rtems_gxx_mutex_unlock( mutex );\n }\n \n-#endif /* __gthr_rtems_h */\n+#endif /* ! GCC_GTHR_RTEMS_H */"}, {"sha": "3d173b5c66e3313eb5818d72c132d4c8b1351aba", "filename": "gcc/gthr-single.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr-single.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr-single.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-single.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -26,8 +26,8 @@ Boston, MA 02111-1307, USA.  */\n    This exception does not however invalidate any other reasons why\n    the executable file might be covered by the GNU General Public License.  */\n \n-#ifndef __gthr_single_h\n-#define __gthr_single_h\n+#ifndef GCC_GTHR_SINGLE_H\n+#define GCC_GTHR_SINGLE_H\n \n /* Just provide compatibility for mutex handling. */\n \n@@ -236,4 +236,4 @@ __gthread_mutex_unlock (__gthread_mutex_t * UNUSED(mutex))\n \n #undef UNUSED\n \n-#endif /* not __gthr_single_h */\n+#endif /* ! GCC_GTHR_SINGLE_H */"}, {"sha": "14996101824bd00c8a6cce6e7d79ec4d234936ae", "filename": "gcc/gthr-solaris.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr-solaris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr-solaris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-solaris.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -26,8 +26,8 @@ Boston, MA 02111-1307, USA.  */\n    This exception does not however invalidate any other reasons why\n    the executable file might be covered by the GNU General Public License.  */\n \n-#ifndef __gthr_solaris_h\n-#define __gthr_solaris_h\n+#ifndef GCC_GTHR_SOLARIS_H\n+#define GCC_GTHR_SOLARIS_H\n \n /* Solaris threads as found in Solaris 2.[456].\n    Actually these are Unix International (UI) threads, but I don't\n@@ -477,4 +477,4 @@ __gthread_mutex_unlock (__gthread_mutex_t *mutex)\n \n #endif /* _LIBOBJC */\n \n-#endif /* not __gthr_solaris_h */\n+#endif /* ! GCC_GTHR_SOLARIS_H */"}, {"sha": "ce04552ac12f9d997d12d00c803b0dc23dd9ce2d", "filename": "gcc/gthr-vxworks.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr-vxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr-vxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-vxworks.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ Boston, MA 02111-1307, USA.  */\n    This exception does not however invalidate any other reasons why\n    the executable file might be covered by the GNU General Public License.  */\n \n-#ifndef __gthr_vxworks_h\n-#define __gthr_vxworks_h\n+#ifndef GCC_GTHR_VXWORKS_H\n+#define GCC_GTHR_VXWORKS_H\n \n #ifdef _LIBOBJC\n \n@@ -307,4 +307,4 @@ __gthread_mutex_unlock (__gthread_mutex_t *mutex)\n \n #endif /* _LIBOBJC */\n \n-#endif /* not __gthr_vxworks_h */\n+#endif /* ! GCC_GTHR_VXWORKS_H */"}, {"sha": "f1feb5708ee46ca859d5c6e9fcdbaa8eef403a3d", "filename": "gcc/gthr-win32.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr-win32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr-win32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-win32.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -27,8 +27,8 @@ Boston, MA 02111-1307, USA.  */\n    This exception does not however invalidate any other reasons why\n    the executable file might be covered by the GNU General Public License.  */\n \n-#ifndef __gthr_win32_h\n-#define __gthr_win32_h\n+#ifndef GCC_GTHR_WIN32_H\n+#define GCC_GTHR_WIN32_H\n \n /* Windows32 threads specific definitions. The windows32 threading model\n    does not map well into pthread-inspired gcc's threading model, and so \n@@ -492,5 +492,5 @@ __gthread_mutex_unlock (__gthread_mutex_t *mutex)\n \n #endif /* _LIBOBJC */\n \n-#endif /* not __gthr_win32_h */\n+#endif /* ! GCC_GTHR_WIN32_H */\n "}, {"sha": "7cfa8eda279380367e4b56b1bf3651b8f16895a7", "filename": "gcc/gthr.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fgthr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -26,8 +26,8 @@ Boston, MA 02111-1307, USA.  */\n    This exception does not however invalidate any other reasons why\n    the executable file might be covered by the GNU General Public License.  */\n \n-#ifndef __gthr_h\n-#define __gthr_h\n+#ifndef GCC_GTHR_H\n+#define GCC_GTHR_H\n \n /* If this file is compiled with threads support, it must\n        #define __GTHREADS 1\n@@ -102,4 +102,4 @@ Boston, MA 02111-1307, USA.  */\n #include \"gthr-single.h\"\n #endif\n \n-#endif /* not __gthr_h */\n+#endif /* ! GCC_GTHR_H */"}, {"sha": "10435beec34a7a4d81fc8fd91f0f7cbfc8502be9", "filename": "gcc/hard-reg-set.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fhard-reg-set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fhard-reg-set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhard-reg-set.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -18,8 +18,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef _HARD_REG_SET_H\n-#define _HARD_REG_SET_H 1\n+#ifndef GCC_HARD_REG_SET_H\n+#define GCC_HARD_REG_SET_H \n \n /* Define the type of a set of hard registers.  */\n \n@@ -475,4 +475,4 @@ extern int n_non_fixed_regs;\n \n extern const char * reg_names[FIRST_PSEUDO_REGISTER];\n \n-#endif /* _HARD_REG_SET_H */\n+#endif /* ! GCC_HARD_REG_SET_H */"}, {"sha": "b624caf944c542ad735a66cc42b31c4c5ed8210d", "filename": "gcc/hwint.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fhwint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fhwint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhwint.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -6,8 +6,8 @@\n    Provide definitions for macros which depend on HOST_BITS_PER_INT\n    and HOST_BITS_PER_LONG. */\n \n-#ifndef __HWINT_H__\n-#define __HWINT_H__\n+#ifndef GCC_HWINT_H\n+#define GCC_HWINT_H\n \n /* This describes the machine the compiler is hosted on.  */\n #define HOST_BITS_PER_CHAR  CHAR_BIT\n@@ -146,4 +146,4 @@\n # endif /* long long wider than long */\n #endif /* ! HOST_WIDEST_INT */\n \n-#endif /* __HWINT_H__ */\n+#endif /* ! GCC_HWINT_H */"}, {"sha": "2a055e7281a83ab49f862bc706ee6c56ad52a932", "filename": "gcc/insn-addr.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Finsn-addr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Finsn-addr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finsn-addr.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -18,8 +18,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef _INSN_ADDR_H\n-#define _INSN_ADDR_H 1\n+#ifndef GCC_INSN_ADDR_H\n+#define GCC_INSN_ADDR_H \n \n #include \"varray.h\"\n \n@@ -43,4 +43,4 @@ extern int insn_current_address;\n   }\t\t\t\t\t\t\t\t\t\\\n } while (0)\n \n-#endif /* _INSN_ADDR_H */\n+#endif /* ! GCC_INSN_ADDR_H */"}, {"sha": "ff098e71529738abb23deaf40d24183255693538", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -1,3 +1,8 @@\n+2001-05-25  Sam TH  <sam@uchicago.edu>\n+\n+\t* gen-table.pl javaop.h jcf.h lex.h,\n+\tparse.h: Fix header include guards.\n+\n 2001-05-23  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* jv-scan.c (version): Update copyright year."}, {"sha": "44bdc2a4cee4323a3a1875cce16d8906c89a8898", "filename": "gcc/java/gen-table.pl", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fjava%2Fgen-table.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fjava%2Fgen-table.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgen-table.pl?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -183,8 +183,8 @@ sub print_tables\n     print OUT \"/* This file is automatically generated.  DO NOT EDIT!\\n\";\n     print OUT \"   Instead, edit gen-table.pl and re-run.  */\\n\\n\";\n \n-    print OUT \"#ifndef CHARTABLES_H\\n\";\n-    print OUT \"#define CHARTABLES_H\\n\\n\";\n+    print OUT \"#ifndef GCC_CHARTABLES_H\\n\";\n+    print OUT \"#define GCC_CHARTABLES_H\\n\\n\";\n \n     print OUT \"#define LETTER_START 1\\n\";\n     print OUT \"#define LETTER_PART  2\\n\\n\";\n@@ -204,7 +204,7 @@ sub print_tables\n     }\n     print OUT \"\\n};\\n\\n\";\n \n-    print OUT \"#endif /* CHARTABLES_H */\\n\";\n+    print OUT \"#endif /* ! GCC_CHARTABLES_H */\\n\";\n \n     close (OUT);\n "}, {"sha": "cbd939bbf9985526bf1d7c93dd302b6a38bcb3d0", "filename": "gcc/java/javaop.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fjava%2Fjavaop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fjava%2Fjavaop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjavaop.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -23,8 +23,8 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n /* Written by Per Bothner <bothner@cygnus.com>, February 1996. */\n \n-#ifndef JAVAOP_H\n-#define JAVAOP_H\n+#ifndef GCC_JAVAOP_H\n+#define GCC_JAVAOP_H\n \n typedef\tunsigned char\tuint8;\n #ifndef int16\n@@ -155,4 +155,4 @@ WORDS_TO_DOUBLE(jword hi, jword lo)\n    : ((PREFIX_CHAR) & 0x10) == 0 ? 3 \\\n    : ((PREFIX_CHAR) & 0x08) == 0 ? 4 : 5)\n \n-#endif /* !JAVAOP_H */\n+#endif /* ! GCC_JAVAOP_H */"}, {"sha": "4586f06093a8df72ec8478e715dfff3c9324b70e", "filename": "gcc/java/jcf.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fjava%2Fjcf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fjava%2Fjcf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -23,8 +23,8 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n /* Written by Per Bothner <bothner@cygnus.com>, February 1996. */\n \n-#ifndef JCF_H\n-#define JCF_H\n+#ifndef GCC_JCF_H\n+#define GCC_JCF_H\n #include \"javaop.h\"\n #ifndef DEFUN\n #if defined (__STDC__)\n@@ -278,4 +278,4 @@ extern int jcf_path_is_zipfile PARAMS ((void *));\n extern int jcf_path_is_system PARAMS ((void *));\n extern int jcf_path_max_len PARAMS ((void));\n \n-#endif\n+#endif /* ! GCC_JCF_H */"}, {"sha": "e9c47ded8de23b15234403bc9c3f2a3360ea5ec0", "filename": "gcc/java/lex.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fjava%2Flex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fjava%2Flex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -23,8 +23,8 @@ Java and all Java-based marks are trademarks or registered trademarks\n of Sun Microsystems, Inc. in the United States and other countries.\n The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n-#ifndef JV_LEX_H\n-#define JV_LEX_H\n+#ifndef GCC_JAVA_LEX_H\n+#define GCC_JAVA_LEX_H\n \n #include <setjmp.h>\t\t/* set_float_handler argument uses it */\n \n@@ -288,4 +288,4 @@ extern void set_float_handler PARAMS ((jmp_buf));\n #define JAVA_CHAR_ERROR -2\n #define UEOF -1\n \n-#endif\n+#endif /* ! GCC_JAVA_LEX_H */"}, {"sha": "c11e70d9295f2efa27a547fdde59d5d485f38d3e", "filename": "gcc/java/parse.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -23,8 +23,8 @@ Java and all Java-based marks are trademarks or registered trademarks\n of Sun Microsystems, Inc. in the United States and other countries.\n The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n-#ifndef JV_LANG_H\n-#define JV_LANG_H\n+#ifndef GCC_JAVA_PARSE_H\n+#define GCC_JAVA_PARSE_H\n \n #include \"lex.h\"\n \n@@ -932,4 +932,5 @@ extern void java_expand_classes PARAMS ((void));\n \n extern struct parser_ctxt *ctxp;\n struct parser_ctxt *ctxp_for_generation;\n-#endif\n+\n+#endif /* ! GCC_JAVA_PARSE_H */"}, {"sha": "f85a6588854351761ad970dd30647b2f43f298c6", "filename": "gcc/libgcc2.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Flibgcc2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Flibgcc2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -19,8 +19,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef __LIBGCC2_H__\n-#define __LIBGCC2_H__\n+#ifndef GCC_LIBGCC2_H\n+#define GCC_LIBGCC2_H\n \n extern int __gcc_bcmp (const unsigned char *, const unsigned char *, size_t);\n extern void __clear_cache (char *, char *);\n@@ -298,4 +298,4 @@ typedef union\n \n #include \"longlong.h\"\n \n-#endif /* __LIBGCC2_H__ */\n+#endif /* ! GCC_LIBGCC2_H */"}, {"sha": "ab58cbbbdfabbf0264d7e011bf879457054eba58", "filename": "gcc/mbchar.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fmbchar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fmbchar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmbchar.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -18,8 +18,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef __GCC_MBCHAR_H__\n-#define __GCC_MBCHAR_H__\n+#ifndef GCC_MBCHAR_H\n+#define GCC_MBCHAR_H\n \n #ifdef MULTIBYTE_CHARS\n \n@@ -38,4 +38,4 @@ extern int local_mb_cur_max PARAMS ((void));\n /* The locale being used for multibyte characters in string/char literals.  */\n extern const char *literal_codeset;\n #endif /* MULTIBYTE_CHARS */\n-#endif\n+#endif /* ! GCC_MBCHAR_H */"}, {"sha": "fa79b86591b5ca0f9a133234e90809b51f332648", "filename": "gcc/mkdeps.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fmkdeps.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fmkdeps.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmkdeps.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -20,8 +20,8 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n  You are forbidden to forbid anyone else to use, share and improve\n  what you give them.   Help stamp out software-hoarding!  */\n \n-#ifndef __GCC_MKDEPS__\n-#define __GCC_MKDEPS__\n+#ifndef GCC_MKDEPS_H\n+#define GCC_MKDEPS_H\n \n /* This is the data structure used by all the functions in mkdeps.c.\n    It's quite straightforward, but should be treated as opaque.  */\n@@ -59,4 +59,4 @@ extern void deps_write\t\tPARAMS ((const struct deps *, FILE *,\n    automatic dependency schemes.  */\n extern void deps_phony_targets\tPARAMS ((const struct deps *, FILE *));\n \n-#endif\n+#endif /* ! GCC_MKDEPS_H */"}, {"sha": "7f0bacd4346634e78746683c57cbcd2f2b1c21c8", "filename": "gcc/params.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fparams.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fparams.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -32,8 +32,8 @@ Boston, MA 02111-1307, USA.\n    Since their values can be set on the command-line, these parameters\n    should not be used for non-dynamic memory allocation.  */\n \n-#ifndef PARAMS_H\n-#define PARAMS_H\n+#ifndef GCC_PARAMS_H\n+#define GCC_PARAMS_H\n \n /* No parameter shall have this value.  */\n \n@@ -93,4 +93,4 @@ typedef enum compiler_param\n #define MAX_GCSE_MEMORY \\\n   ((size_t) PARAM_VALUE (PARAM_MAX_GCSE_MEMORY))\n \n-#endif /* PARAMS_H */\n+#endif /* ! GCC_PARAMS_H */"}, {"sha": "03c0d191fc25e04691672ba550852d9cfaf6e82c", "filename": "gcc/prefix.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fprefix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fprefix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprefix.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -19,10 +19,10 @@ Software Foundation, Inc., 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n \n-#ifndef __GCC_PREFIX_H__\n-#define __GCC_PREFIX_H__\n+#ifndef GCC_PREFIX_H\n+#define GCC_PREFIX_H\n \n extern const char *update_path PARAMS ((const char *, const char *));\n extern void set_std_prefix PARAMS ((const char *, int));\n \n-#endif /* ! __GCC_PREFIX_H__ */\n+#endif /* ! GCC_PREFIX_H */"}, {"sha": "04c7485e1dcdd1e6f83cb72ff8b93892f25c8f9c", "filename": "gcc/real.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -19,8 +19,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef REAL_H_INCLUDED\n-#define REAL_H_INCLUDED\n+#ifndef GCC_REAL_H\n+#define GCC_REAL_H\n \n /* Define codes for all the float formats that we know of.  */\n #define UNKNOWN_FLOAT_FORMAT 0\n@@ -481,4 +481,4 @@ extern int target_negative\tPARAMS ((REAL_VALUE_TYPE));\n extern void debug_real\t\tPARAMS ((REAL_VALUE_TYPE));\n extern REAL_VALUE_TYPE ereal_atof PARAMS ((const char *, enum machine_mode));\n \n-#endif /* Not REAL_H_INCLUDED */\n+#endif /* ! GCC_REAL_H */"}, {"sha": "648aa13cb7025231e936f44910fef6cc6a4311ff", "filename": "gcc/rtl.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -19,8 +19,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef _RTL_H\n-#define _RTL_H\n+#ifndef GCC_RTL_H\n+#define GCC_RTL_H\n \n struct function;\n \n@@ -2022,4 +2022,4 @@ extern void regrename_optimize\t\tPARAMS ((void));\n /* In condexec.c */\n extern void if_convert\t\t\tPARAMS ((int));\n \n-#endif /* _RTL_H */\n+#endif /* ! GCC_RTL_H */"}, {"sha": "0aa57a9c967dc0a34390f815e8757ad70f527192", "filename": "gcc/sbitmap.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fsbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fsbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsbitmap.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -18,8 +18,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef _SBITMAP_H\n-#define _SBITMAP_H 1\n+#ifndef GCC_SBITMAP_H\n+#define GCC_SBITMAP_H \n \n /* It's not clear yet whether using bitmap.[ch] will be a win.\n    It should be straightforward to convert so for now we keep things simple\n@@ -136,4 +136,4 @@ extern void sbitmap_union_of_succs\t   PARAMS ((sbitmap, sbitmap *, int));\n extern void sbitmap_union_of_preds\t   PARAMS ((sbitmap, sbitmap *, int));\n \n extern void debug_sbitmap\t\t   PARAMS ((sbitmap));\n-#endif /* _SBITMAP_H */\n+#endif /* ! GCC_SBITMAP_H */"}, {"sha": "be9c81bdfdcad15e76592f3377af69c5bd4bb75a", "filename": "gcc/system.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -20,8 +20,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n \n-#ifndef __GCC_SYSTEM_H__\n-#define __GCC_SYSTEM_H__\n+#ifndef GCC_SYSTEM_H\n+#define GCC_SYSTEM_H\n \n /* This is the location of the online document giving information how\n    to report bugs. If you change this string, also check for strings\n@@ -557,4 +557,4 @@ typedef char _Bool;\n \n #endif /* GCC >= 3.0 */\n \n-#endif /* __GCC_SYSTEM_H__ */\n+#endif /* ! GCC_SYSTEM_H */"}, {"sha": "187b60e3cb8b7c702605101a3d56e09cefd98197", "filename": "gcc/timevar.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ftimevar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ftimevar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -88,4 +88,4 @@ extern void timevar_print PARAMS ((FILE *));\n extern long get_run_time PARAMS ((void));\n extern void print_time PARAMS ((const char *, long));\n \n-#endif\n+#endif /* ! GCC_TIMEVAR_H */"}, {"sha": "7d79d53a027fad12eeebfe91ed28f41d530d7494", "filename": "gcc/toplev.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -18,8 +18,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef __GCC_TOPLEV_H__\n-#define __GCC_TOPLEV_H__\n+#ifndef GCC_TOPLEV_H\n+#define GCC_TOPLEV_H\n \n #ifdef ANSI_PROTOTYPES\n union tree_node;\n@@ -188,4 +188,4 @@ extern void set_no_fast_math_flags      PARAMS ((void));\n extern int exact_log2_wide             PARAMS ((unsigned HOST_WIDE_INT));\n extern int floor_log2_wide             PARAMS ((unsigned HOST_WIDE_INT));\n \n-#endif /* __GCC_TOPLEV_H */\n+#endif /* ! GCC_TOPLEV_H */"}, {"sha": "0c16cfa0c74a29d17a36c9734b6ade285f8f9675", "filename": "gcc/tradcpp.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ftradcpp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ftradcpp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftradcpp.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -19,8 +19,8 @@ You should have received a copy of the GNU General Public License\n along with this program; if not, write to the Free Software\n Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n \n-#ifndef _TRADCPP_H_\n-#define _TRADCPP_H_\n+#ifndef GCC_TRADCPP_H\n+#define GCC_TRADCPP_H\n \n extern void error PARAMS ((const char *msgid, ...)) ATTRIBUTE_PRINTF_1;\n extern void warning PARAMS ((const char *msgid, ...)) ATTRIBUTE_PRINTF_1;\n@@ -41,4 +41,4 @@ extern int test_assertion PARAMS ((unsigned char **));\n #define is_space(x)\tISSPACE(x)\n #define is_nvspace(x)\t(IS_NVSPACE(x) && x != '\\0')\n \n-#endif /* ! _TRADCPP_H_ */\n+#endif /* ! GCC_TRADCPP_H */"}, {"sha": "6e83b431f7114ee0435b5b631db643b8a47388b6", "filename": "gcc/tsystem.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ftsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Ftsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftsystem.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -19,8 +19,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#ifndef __GCC_TSYSTEM_H__\n-#define __GCC_TSYSTEM_H__\n+#ifndef GCC_TSYSTEM_H\n+#define GCC_TSYSTEM_H\n \n /* System headers (e.g. stdio.h, stdlib.h, unistd.h) sometimes\n    indirectly include getopt.h.  Our -I flags will cause gcc's gnu\n@@ -94,4 +94,4 @@ extern int errno;\n #define NULL 0\n #endif\n \n-#endif /* __GCC_TSYSTEM_H__ */\n+#endif /* ! GCC_TSYSTEM_H */"}, {"sha": "a50eedc68036fc30c137cee852d18206e025a3d2", "filename": "gcc/varray.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fvarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fvarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarray.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -19,14 +19,14 @@\n    the Free Software Foundation, 59 Temple Place - Suite 330,\n    Boston, MA 02111-1307, USA.  */\n \n-#ifndef _VARRAY_H_\n-#define _VARRAY_H_\n+#ifndef GCC_VARRAY_H\n+#define GCC_VARRAY_H\n \n #ifndef HOST_WIDE_INT\n #include \"machmode.h\"\n #endif\n \n-#ifndef __GCC_SYSTEM_H__\n+#ifndef GCC_SYSTEM_H\n #include \"system.h\"\n #endif\n \n@@ -271,4 +271,4 @@ extern void varray_check_failed PARAMS ((varray_type, size_t,\n #define VARRAY_TOP_CONST_EQUIV(VA)\tVARRAY_TOP (VA, const_equiv)\n #define VARRAY_TOP_BB(VA)\t\tVARRAY_TOP (VA, bb)\n \n-#endif /* _VARRAY_H_ */\n+#endif /* ! GCC_VARRAY_H */"}, {"sha": "99416495a4f180adade0c3b13581c9830603c238", "filename": "gcc/version.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fversion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88657302b711baa2b317b2bb91c93d0a03e16b36/gcc%2Fversion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fversion.h?ref=88657302b711baa2b317b2bb91c93d0a03e16b36", "patch": "@@ -1,4 +1,4 @@\n-#ifndef __GCC_VERSION_H__\n-#define __GCC_VERSION_H__\n+#ifndef GCC_VERSION_H\n+#define GCC_VERSION_H\n extern const char *const version_string;\n-#endif /* __GCC_VERSION_H__ */\n+#endif /* ! GCC_VERSION_H */"}]}