{"sha": "0ed757604f4e232324ca798e46f3d8bf7e35b009", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVkNzU3NjA0ZjRlMjMyMzI0Y2E3OThlNDZmM2Q4YmY3ZTM1YjAwOQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-09-09T23:30:20Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-09-10T16:04:12Z"}, "message": "libphobos: libdruntime doesn't support shadow stack (PR95680)\n\nThe first implementation hit a front-end implementation bug where\nversion conditions are resolved ahead of static if confitions.\n\nThe logic for whether to use asm implemented fiber_switchContext or\nlibc's swapcontext has been moved from GNU_Enable_CET to version CET.\n\nlibphobos/ChangeLog:\n\n\tPR d/95680\n\tPR d/97007\n\t* Makefile.am (AM_MAKEFLAGS): Remove $(CET_FLAGS).\n\t* Makefile.in: Regenerate.\n\t* configure: Regenerate.\n\t* configure.ac (DCFG_ENABLE_CET): Remove substitution.\n\t(CET_DFLAGS): Substitute.\n\t* libdruntime/Makefile.am (AM_DFLAGS): Add $(CET_DFLAGS).\n\t(AM_CFLAGS): Add $(CET_FLAGS).\n\t(AM_CCASFLAGS): Likewise.\n\t* libdruntime/Makefile.in: Regenerate.\n\t* libdruntime/core/thread.d: Replace static if GNU_Enable_CET\n\tcondition with `version (CET)'.\n\t* libdruntime/gcc/config.d.in (GNU_Enable_CET): Remove.\n\t* src/Makefile.am (AM_DFLAGS): Add $(CET_DFLAGS).\n\t(AM_CFLAGS): Add $(CET_FLAGS).\n\t* src/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\t* testsuite/testsuite_flags.in: Add $(CET_DFLAGS) to --gdcflags.", "tree": {"sha": "a053002fe9c612b67057774bd631095f01c019c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a053002fe9c612b67057774bd631095f01c019c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ed757604f4e232324ca798e46f3d8bf7e35b009", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ed757604f4e232324ca798e46f3d8bf7e35b009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ed757604f4e232324ca798e46f3d8bf7e35b009", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ed757604f4e232324ca798e46f3d8bf7e35b009/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ead85749b0a8efb26325571b36c4c966280146bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ead85749b0a8efb26325571b36c4c966280146bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ead85749b0a8efb26325571b36c4c966280146bc"}], "stats": {"total": 121, "additions": 66, "deletions": 55}, "files": [{"sha": "874b3a25d027d17e4b778997ffb6ce6c8b14f861", "filename": "libphobos/Makefile.am", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FMakefile.am?ref=0ed757604f4e232324ca798e46f3d8bf7e35b009", "patch": "@@ -33,14 +33,14 @@ AM_MAKEFLAGS = \\\n \t\"AR_FLAGS=$(AR_FLAGS)\" \\\n \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n \t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \\\n-\t\"CCASFLAGS=$(CCASFLAGS) $(CET_FLAGS)\" \\\n-\t\"CFLAGS=$(CFLAGS) $(CET_FLAGS)\" \\\n-\t\"CXXFLAGS=$(CXXFLAGS) $(CET_FLAGS)\" \\\n+\t\"CCASFLAGS=$(CCASFLAGS)\" \\\n+\t\"CFLAGS=$(CFLAGS)\" \\\n+\t\"CXXFLAGS=$(CXXFLAGS)\" \\\n \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n-\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET) $(CET_FLAGS)\" \\\n+\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \\\n \t\"GDC_FOR_TARGET=$(GDC_FOR_TARGET)\" \\\n \t\"GDC=$(GDC)\" \\\n-\t\"GDCFLAGS=$(GDCFLAGS) $(CET_FLAGS)\" \\\n+\t\"GDCFLAGS=$(GDCFLAGS)\" \\\n \t\"INSTALL=$(INSTALL)\" \\\n \t\"INSTALL_DATA=$(INSTALL_DATA)\" \\\n \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\"}, {"sha": "f692b2f719e068d1dcc718833dbe8292042cf2b7", "filename": "libphobos/Makefile.in", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FMakefile.in?ref=0ed757604f4e232324ca798e46f3d8bf7e35b009", "patch": "@@ -207,6 +207,7 @@ CC = @CC@\n CCAS = @CCAS@\n CCASFLAGS = @CCASFLAGS@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n+CET_DFLAGS = @CET_DFLAGS@\n CET_FLAGS = @CET_FLAGS@\n CFLAGS = @CFLAGS@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n@@ -216,7 +217,6 @@ CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DCFG_ARM_EABI_UNWINDER = @DCFG_ARM_EABI_UNWINDER@\n DCFG_DLPI_TLS_MODID = @DCFG_DLPI_TLS_MODID@\n-DCFG_ENABLE_CET = @DCFG_ENABLE_CET@\n DCFG_HAVE_64BIT_ATOMICS = @DCFG_HAVE_64BIT_ATOMICS@\n DCFG_HAVE_ATOMIC_BUILTINS = @DCFG_HAVE_ATOMIC_BUILTINS@\n DCFG_HAVE_LIBATOMIC = @DCFG_HAVE_LIBATOMIC@\n@@ -355,14 +355,14 @@ AM_MAKEFLAGS = \\\n \t\"AR_FLAGS=$(AR_FLAGS)\" \\\n \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n \t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \\\n-\t\"CCASFLAGS=$(CCASFLAGS) $(CET_FLAGS)\" \\\n-\t\"CFLAGS=$(CFLAGS) $(CET_FLAGS)\" \\\n-\t\"CXXFLAGS=$(CXXFLAGS) $(CET_FLAGS)\" \\\n+\t\"CCASFLAGS=$(CCASFLAGS)\" \\\n+\t\"CFLAGS=$(CFLAGS)\" \\\n+\t\"CXXFLAGS=$(CXXFLAGS)\" \\\n \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n-\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET) $(CET_FLAGS)\" \\\n+\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \\\n \t\"GDC_FOR_TARGET=$(GDC_FOR_TARGET)\" \\\n \t\"GDC=$(GDC)\" \\\n-\t\"GDCFLAGS=$(GDCFLAGS) $(CET_FLAGS)\" \\\n+\t\"GDCFLAGS=$(GDCFLAGS)\" \\\n \t\"INSTALL=$(INSTALL)\" \\\n \t\"INSTALL_DATA=$(INSTALL_DATA)\" \\\n \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\"}, {"sha": "4c1116d6f80062efe26e1fc3bedc85b6c397cabd", "filename": "libphobos/configure", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure?ref=0ed757604f4e232324ca798e46f3d8bf7e35b009", "patch": "@@ -722,7 +722,7 @@ LIBTOOL\n CFLAGS_FOR_BUILD\n CC_FOR_BUILD\n AR\n-DCFG_ENABLE_CET\n+CET_DFLAGS\n CET_FLAGS\n RANLIB\n MAINT\n@@ -5651,12 +5651,11 @@ $as_echo \"no\" >&6; }\n fi\n \n \n-if test x$enable_cet = xyes; then :\n-  DCFG_ENABLE_CET=true\n-else\n-  DCFG_ENABLE_CET=false\n-fi\n+# To ensure that runtime code for CET is compiled in, add in D version flags.\n+if test \"$enable_cet\" = yes; then\n+  CET_DFLAGS=\"$CET_FLAGS -fversion=CET\"\n \n+fi\n \n # This should be inherited in the recursive make, but ensure it is defined.\n test \"$AR\" || AR=ar\n@@ -11745,7 +11744,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11748 \"configure\"\n+#line 11747 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11851,7 +11850,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11854 \"configure\"\n+#line 11853 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "bf21128bd509b9019f5f96e8f7b43bec9a18e509", "filename": "libphobos/configure.ac", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure.ac?ref=0ed757604f4e232324ca798e46f3d8bf7e35b009", "patch": "@@ -68,9 +68,11 @@ AC_PROG_MAKE_SET\n # Add CET specific flags if CET is enabled\n GCC_CET_FLAGS(CET_FLAGS)\n AC_SUBST(CET_FLAGS)\n-AS_IF([test x$enable_cet = xyes],\n-  [DCFG_ENABLE_CET=true], [DCFG_ENABLE_CET=false])\n-AC_SUBST(DCFG_ENABLE_CET)\n+# To ensure that runtime code for CET is compiled in, add in D version flags.\n+if test \"$enable_cet\" = yes; then\n+  CET_DFLAGS=\"$CET_FLAGS -fversion=CET\"\n+  AC_SUBST(CET_DFLAGS)\n+fi\n \n # This should be inherited in the recursive make, but ensure it is defined.\n test \"$AR\" || AR=ar"}, {"sha": "4136642beebea868c775ce943ae254846e4430fe", "filename": "libphobos/libdruntime/Makefile.am", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Flibdruntime%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Flibdruntime%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.am?ref=0ed757604f4e232324ca798e46f3d8bf7e35b009", "patch": "@@ -24,7 +24,11 @@ D_EXTRA_DFLAGS=-nostdinc -I $(srcdir) -I .\n # D flags for compilation\n AM_DFLAGS= \\\n \t$(phobos_compiler_pic_flag) \\\n-\t$(WARN_DFLAGS) $(CHECKING_DFLAGS)\n+\t$(WARN_DFLAGS) $(CHECKING_DFLAGS) $(CET_DFLAGS)\n+\n+# Flags for other kinds of sources\n+AM_CFLAGS=$(CET_FLAGS)\n+AM_CCASFLAGS=$(CET_FLAGS)\n \n # Install all D and DI files\n ALL_DRUNTIME_INSTALL_DSOURCES = $(DRUNTIME_DSOURCES) \\"}, {"sha": "d0bb3242c4f79a9216a75bd902f2e81ba0c045d1", "filename": "libphobos/libdruntime/Makefile.in", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Flibdruntime%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Flibdruntime%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.in?ref=0ed757604f4e232324ca798e46f3d8bf7e35b009", "patch": "@@ -567,6 +567,7 @@ CC = @CC@\n CCAS = @CCAS@\n CCASFLAGS = @CCASFLAGS@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n+CET_DFLAGS = @CET_DFLAGS@\n CET_FLAGS = @CET_FLAGS@\n CFLAGS = @CFLAGS@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n@@ -576,7 +577,6 @@ CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DCFG_ARM_EABI_UNWINDER = @DCFG_ARM_EABI_UNWINDER@\n DCFG_DLPI_TLS_MODID = @DCFG_DLPI_TLS_MODID@\n-DCFG_ENABLE_CET = @DCFG_ENABLE_CET@\n DCFG_HAVE_64BIT_ATOMICS = @DCFG_HAVE_64BIT_ATOMICS@\n DCFG_HAVE_ATOMIC_BUILTINS = @DCFG_HAVE_ATOMIC_BUILTINS@\n DCFG_HAVE_LIBATOMIC = @DCFG_HAVE_LIBATOMIC@\n@@ -719,9 +719,13 @@ D_EXTRA_DFLAGS = -nostdinc -I $(srcdir) -I .\n # D flags for compilation\n AM_DFLAGS = \\\n \t$(phobos_compiler_pic_flag) \\\n-\t$(WARN_DFLAGS) $(CHECKING_DFLAGS)\n+\t$(WARN_DFLAGS) $(CHECKING_DFLAGS) $(CET_DFLAGS)\n \n \n+# Flags for other kinds of sources\n+AM_CFLAGS = $(CET_FLAGS)\n+AM_CCASFLAGS = $(CET_FLAGS)\n+\n # Install all D and DI files\n ALL_DRUNTIME_INSTALL_DSOURCES = $(DRUNTIME_DSOURCES) \\\n \t$(DRUNTIME_DSOURCES_BIONIC) $(DRUNTIME_DSOURCES_DARWIN) \\"}, {"sha": "eaf088d53c119432b177b173004be4dfa8ebc5f2", "filename": "libphobos/libdruntime/core/thread.d", "status": "modified", "additions": 21, "deletions": 22, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Flibdruntime%2Fcore%2Fthread.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Flibdruntime%2Fcore%2Fthread.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fthread.d?ref=0ed757604f4e232324ca798e46f3d8bf7e35b009", "patch": "@@ -3586,45 +3586,44 @@ private\n     }\n     else version (X86)\n     {\n-        import gcc.config;\n-\n         version = AlignFiberStackTo16Byte;\n \n-        static if (!GNU_Enable_CET)\n+        version (CET)\n+        {\n+            // fiber_switchContext does not support shadow stack from\n+            // Intel CET.  So use ucontext implementation.\n+        }\n+        else\n         {\n             version = AsmExternal;\n \n             version (MinGW)\n-            {\n                 version = GNU_AsmX86_Windows;\n-            }\n             else version (Posix)\n-            {\n                 version = AsmX86_Posix;\n-            }\n         }\n     }\n     else version (X86_64)\n     {\n-        import gcc.config;\n-\n         version = AlignFiberStackTo16Byte;\n \n-        static if (!GNU_Enable_CET)\n+        version (CET)\n         {\n-            version (D_X32)\n-            {\n-                // let X32 be handled by ucontext swapcontext\n-            }\n-            else\n-            {\n-                version = AsmExternal;\n+            // fiber_switchContext does not support shadow stack from\n+            // Intel CET.  So use ucontext implementation.\n+        }\n+        else version (D_X32)\n+        {\n+            // let X32 be handled by ucontext swapcontext\n+        }\n+        else\n+        {\n+            version = AsmExternal;\n \n-                version (MinGW)\n-                    version = GNU_AsmX86_64_Windows;\n-                else version (Posix)\n-                    version = AsmX86_64_Posix;\n-            }\n+            version (MinGW)\n+                version = GNU_AsmX86_64_Windows;\n+            else version (Posix)\n+                version = AsmX86_64_Posix;\n         }\n     }\n     else version (PPC)"}, {"sha": "6301aaff069b1c4dc92796fb2e423f37a839bcd9", "filename": "libphobos/libdruntime/gcc/config.d.in", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Flibdruntime%2Fgcc%2Fconfig.d.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Flibdruntime%2Fgcc%2Fconfig.d.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fgcc%2Fconfig.d.in?ref=0ed757604f4e232324ca798e46f3d8bf7e35b009", "patch": "@@ -49,6 +49,3 @@ enum GNU_Have_LibAtomic = @DCFG_HAVE_LIBATOMIC@;\n \n // Do we have qsort_r function\n enum Have_Qsort_R = @DCFG_HAVE_QSORT_R@;\n-\n-// Whether libphobos been configured with --enable-cet.\n-enum GNU_Enable_CET = @DCFG_ENABLE_CET@;"}, {"sha": "3769d8efafca58855084e01dcd93af15704584a0", "filename": "libphobos/src/Makefile.am", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMakefile.am?ref=0ed757604f4e232324ca798e46f3d8bf7e35b009", "patch": "@@ -25,7 +25,10 @@ D_EXTRA_DFLAGS=-nostdinc -I $(srcdir) \\\n # D flags for compilation\n AM_DFLAGS= \\\n \t$(phobos_compiler_pic_flag) \\\n-\t$(WARN_DFLAGS) $(CHECKING_DFLAGS)\n+\t$(WARN_DFLAGS) $(CHECKING_DFLAGS) $(CET_DFLAGS)\n+\n+# Flags for other kinds of sources\n+AM_CFLAGS=$(CET_FLAGS)\n \n # Install all D files\n ALL_PHOBOS_INSTALL_DSOURCES = $(PHOBOS_DSOURCES)"}, {"sha": "4a0612a613bd225fad064d6a8219b25bcd2afb88", "filename": "libphobos/src/Makefile.in", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMakefile.in?ref=0ed757604f4e232324ca798e46f3d8bf7e35b009", "patch": "@@ -323,6 +323,7 @@ CC = @CC@\n CCAS = @CCAS@\n CCASFLAGS = @CCASFLAGS@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n+CET_DFLAGS = @CET_DFLAGS@\n CET_FLAGS = @CET_FLAGS@\n CFLAGS = @CFLAGS@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n@@ -332,7 +333,6 @@ CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DCFG_ARM_EABI_UNWINDER = @DCFG_ARM_EABI_UNWINDER@\n DCFG_DLPI_TLS_MODID = @DCFG_DLPI_TLS_MODID@\n-DCFG_ENABLE_CET = @DCFG_ENABLE_CET@\n DCFG_HAVE_64BIT_ATOMICS = @DCFG_HAVE_64BIT_ATOMICS@\n DCFG_HAVE_ATOMIC_BUILTINS = @DCFG_HAVE_ATOMIC_BUILTINS@\n DCFG_HAVE_LIBATOMIC = @DCFG_HAVE_LIBATOMIC@\n@@ -477,9 +477,12 @@ D_EXTRA_DFLAGS = -nostdinc -I $(srcdir) \\\n # D flags for compilation\n AM_DFLAGS = \\\n \t$(phobos_compiler_pic_flag) \\\n-\t$(WARN_DFLAGS) $(CHECKING_DFLAGS)\n+\t$(WARN_DFLAGS) $(CHECKING_DFLAGS) $(CET_DFLAGS)\n \n \n+# Flags for other kinds of sources\n+AM_CFLAGS = $(CET_FLAGS)\n+\n # Install all D files\n ALL_PHOBOS_INSTALL_DSOURCES = $(PHOBOS_DSOURCES)\n "}, {"sha": "2f6911d4d4754dfdc11e532e5ae12e29c9ded686", "filename": "libphobos/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2FMakefile.in?ref=0ed757604f4e232324ca798e46f3d8bf7e35b009", "patch": "@@ -151,6 +151,7 @@ CC = @CC@\n CCAS = @CCAS@\n CCASFLAGS = @CCASFLAGS@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n+CET_DFLAGS = @CET_DFLAGS@\n CET_FLAGS = @CET_FLAGS@\n CFLAGS = @CFLAGS@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n@@ -160,7 +161,6 @@ CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DCFG_ARM_EABI_UNWINDER = @DCFG_ARM_EABI_UNWINDER@\n DCFG_DLPI_TLS_MODID = @DCFG_DLPI_TLS_MODID@\n-DCFG_ENABLE_CET = @DCFG_ENABLE_CET@\n DCFG_HAVE_64BIT_ATOMICS = @DCFG_HAVE_64BIT_ATOMICS@\n DCFG_HAVE_ATOMIC_BUILTINS = @DCFG_HAVE_ATOMIC_BUILTINS@\n DCFG_HAVE_LIBATOMIC = @DCFG_HAVE_LIBATOMIC@"}, {"sha": "6a2d79f0cd288238939e615bbe6a024e54a24467", "filename": "libphobos/testsuite/testsuite_flags.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Ftestsuite%2Ftestsuite_flags.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed757604f4e232324ca798e46f3d8bf7e35b009/libphobos%2Ftestsuite%2Ftestsuite_flags.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2Ftestsuite_flags.in?ref=0ed757604f4e232324ca798e46f3d8bf7e35b009", "patch": "@@ -28,7 +28,7 @@ case ${query} in\n       ;;\n     --gdcflags)\n       GDCFLAGS_default=\"-fmessage-length=0 -fno-show-column\"\n-      GDCFLAGS_config=\"@WARN_DFLAGS@ @GDCFLAGS@ -fno-release -funittest\"\n+      GDCFLAGS_config=\"@WARN_DFLAGS@ @GDCFLAGS@ @CET_DFLAGS@ -fno-release -funittest\"\n       echo ${GDCFLAGS_default} ${GDCFLAGS_config}\n       ;;\n     --gdcpaths)"}]}