{"sha": "fb95bfcc8138378d4e5786c67f5eb49b84a54683", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI5NWJmY2M4MTM4Mzc4ZDRlNTc4NmM2N2Y1ZWI0OWI4NGE1NDY4Mw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-07-09T07:54:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-09T07:54:24Z"}, "message": "[Ada] Missing escape of the double quote in JSON output\n\nIn Ada, the name of operators contains a pair of double quotes, which\nneed to be properly escaped when the name appears in the JSON output of\n-gnatR.\n\nThe change also ensures that formal parameters are not listed in the\nlayout information, since this information is not back-annotated for\nthem.\n\n2019-07-09  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* repinfo.adb (List_Entities): Disregard formals altogether.\n\t(List_Name): Properly escape the double quote in the JSON\n\toutput.\n\nFrom-SVN: r273279", "tree": {"sha": "e1dcf002e74e595f3daed2460abe9c1866529992", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1dcf002e74e595f3daed2460abe9c1866529992"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb95bfcc8138378d4e5786c67f5eb49b84a54683", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb95bfcc8138378d4e5786c67f5eb49b84a54683", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb95bfcc8138378d4e5786c67f5eb49b84a54683", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb95bfcc8138378d4e5786c67f5eb49b84a54683/comments", "author": null, "committer": null, "parents": [{"sha": "5da544339b2b3b3d00d3dd5b91c06d2d09a386b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "1dd1d705c21e2c3dbcbf9c9d56c059378457ce9c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb95bfcc8138378d4e5786c67f5eb49b84a54683/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb95bfcc8138378d4e5786c67f5eb49b84a54683/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fb95bfcc8138378d4e5786c67f5eb49b84a54683", "patch": "@@ -1,3 +1,9 @@\n+2019-07-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* repinfo.adb (List_Entities): Disregard formals altogether.\n+\t(List_Name): Properly escape the double quote in the JSON\n+\toutput.\n+\n 2019-07-09  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_util.adb (Remove_Side_Effects): Preserve the"}, {"sha": "1ba7e11e67cce841c8e1b5a78d0b997250c4356f", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb95bfcc8138378d4e5786c67f5eb49b84a54683/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb95bfcc8138378d4e5786c67f5eb49b84a54683/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=fb95bfcc8138378d4e5786c67f5eb49b84a54683", "patch": "@@ -525,9 +525,6 @@ package body Repinfo is\n \n                   List_Entities (E, Bytes_Big_Endian, True);\n \n-               elsif Is_Formal (E) and then In_Subprogram then\n-                  null;\n-\n                elsif Ekind_In (E, E_Entry,\n                                   E_Entry_Family,\n                                   E_Subprogram_Type)\n@@ -560,12 +557,10 @@ package body Repinfo is\n                      List_Type_Info (E);\n                   end if;\n \n-               elsif Ekind_In (E, E_Variable, E_Constant) then\n-                  if List_Representation_Info >= 2 then\n-                     List_Object_Info (E);\n-                  end if;\n+               --  Note that formals are not annotated so we skip them here\n \n-               elsif Ekind (E) = E_Loop_Parameter or else Is_Formal (E) then\n+               elsif Ekind_In (E, E_Variable, E_Constant, E_Loop_Parameter)\n+               then\n                   if List_Representation_Info >= 2 then\n                      List_Object_Info (E);\n                   end if;\n@@ -899,6 +894,8 @@ package body Repinfo is\n    ---------------\n \n    procedure List_Name (Ent : Entity_Id) is\n+      C : Character;\n+\n    begin\n       --  List the qualified name recursively, except\n       --  at compilation unit level in default mode.\n@@ -914,7 +911,16 @@ package body Repinfo is\n \n       Get_Unqualified_Decoded_Name_String (Chars (Ent));\n       Set_Casing (Unit_Casing);\n-      Write_Str (Name_Buffer (1 .. Name_Len));\n+\n+      --  The name of operators needs to be properly escaped for JSON\n+\n+      for J in 1 .. Name_Len loop\n+         C := Name_Buffer (J);\n+         if C = '\"' and then List_Representation_Info_To_JSON then\n+            Write_Char ('\\');\n+         end if;\n+         Write_Char (C);\n+      end loop;\n    end List_Name;\n \n    ---------------------"}]}