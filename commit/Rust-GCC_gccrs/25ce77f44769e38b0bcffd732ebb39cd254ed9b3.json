{"sha": "25ce77f44769e38b0bcffd732ebb39cd254ed9b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVjZTc3ZjQ0NzY5ZTM4YjBiY2ZmZDczMmViYjM5Y2QyNTRlZDliMw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-04-18T06:36:41Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-04-18T06:36:41Z"}, "message": "pa.h (SELECT_SECTION): Define.\n\n        * pa/pa.h (SELECT_SECTION): Define.  Never place a something\n        into the read-only data section if it requires a reloc.\n\nFrom-SVN: r11847", "tree": {"sha": "a219ee34e16a7b594eb08e216fce1a03eef50ad9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a219ee34e16a7b594eb08e216fce1a03eef50ad9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25ce77f44769e38b0bcffd732ebb39cd254ed9b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25ce77f44769e38b0bcffd732ebb39cd254ed9b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25ce77f44769e38b0bcffd732ebb39cd254ed9b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25ce77f44769e38b0bcffd732ebb39cd254ed9b3/comments", "author": null, "committer": null, "parents": [{"sha": "c182a405dd7e4314fe9dd152bf586d15feaa9fa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c182a405dd7e4314fe9dd152bf586d15feaa9fa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c182a405dd7e4314fe9dd152bf586d15feaa9fa5"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "ab60c177f5f34ad3cadeaae832c97f3e28a64c34", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25ce77f44769e38b0bcffd732ebb39cd254ed9b3/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25ce77f44769e38b0bcffd732ebb39cd254ed9b3/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=25ce77f44769e38b0bcffd732ebb39cd254ed9b3", "patch": "@@ -1557,6 +1557,26 @@ while (0)\n \t\t\t     1 + (SYMBOL_NAME)[1] == '@'\\\n \t\t\t     : (SYMBOL_NAME)[0] == '@'))\n \n+/* On hpux10, the linker will give an error if we have a reference\n+   in the read-only data section to a symbol defined in a shared\n+   library.  Therefore, expressions that might require a reloc can\n+   not be placed in the read-only data section.  */\n+#define SELECT_SECTION(EXP,RELOC) \\\n+  if (TREE_CODE (EXP) == VAR_DECL \\\n+      && TREE_READONLY (EXP) \\\n+      && !TREE_THIS_VOLATILE (EXP) \\\n+      && DECL_INITIAL (EXP) \\\n+      && (DECL_INITIAL (EXP) == error_mark_node \\\n+          || TREE_CONSTANT (DECL_INITIAL (EXP))) \\\n+      && !reloc) \\\n+    readonly_data_section (); \\\n+  else if (TREE_CODE_CLASS (TREE_CODE (EXP)) == 'c' \\\n+\t   && !(TREE_CODE (EXP) == STRING_CST && flag_writable_strings) \\\n+\t   && !reloc) \\\n+    readonly_data_section (); \\\n+  else \\\n+    data_section ();\n+   \n /* Arghh.  This is used for stuff in the constant pool; this may include\n    function addresses on the PA, which during PIC code generation must\n    reside in the data space.  Unfortunately, there's no way to determine"}]}