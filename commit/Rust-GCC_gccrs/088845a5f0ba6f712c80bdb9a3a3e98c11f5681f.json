{"sha": "088845a5f0ba6f712c80bdb9a3a3e98c11f5681f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg4ODQ1YTVmMGJhNmY3MTJjODBiZGI5YTNhM2U5OGMxMWY1NjgxZg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2013-09-11T17:40:56Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2013-09-11T17:40:56Z"}, "message": "simplify-rtx.c (simplify_unary_operation_1): Use simplify_gen_binary for (not (neg ...)) and (neg (not ...)) cases.\n\ngcc/\n\t* simplify-rtx.c (simplify_unary_operation_1): Use simplify_gen_binary\n\tfor (not (neg ...)) and (neg (not ...)) cases.\n\nFrom-SVN: r202506", "tree": {"sha": "3417a5eb009f0ff6f47061a4f4bd7480639b1100", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3417a5eb009f0ff6f47061a4f4bd7480639b1100"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/088845a5f0ba6f712c80bdb9a3a3e98c11f5681f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/088845a5f0ba6f712c80bdb9a3a3e98c11f5681f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/088845a5f0ba6f712c80bdb9a3a3e98c11f5681f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/088845a5f0ba6f712c80bdb9a3a3e98c11f5681f/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c2961cf38a69f2579718f369753c7939a7e5ad1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c2961cf38a69f2579718f369753c7939a7e5ad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c2961cf38a69f2579718f369753c7939a7e5ad1"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "bbe5479e6a2bd6296aac192930ed2cd97f89d47d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088845a5f0ba6f712c80bdb9a3a3e98c11f5681f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088845a5f0ba6f712c80bdb9a3a3e98c11f5681f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=088845a5f0ba6f712c80bdb9a3a3e98c11f5681f", "patch": "@@ -1,3 +1,8 @@\n+2013-09-11  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* simplify-rtx.c (simplify_unary_operation_1): Use simplify_gen_binary\n+\tfor (not (neg ...)) and (neg (not ...)) cases.\n+\n 2013-09-11  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/58377"}, {"sha": "432842ecf0b1647b264f1fdb58021c21b613c867", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088845a5f0ba6f712c80bdb9a3a3e98c11f5681f/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088845a5f0ba6f712c80bdb9a3a3e98c11f5681f/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=088845a5f0ba6f712c80bdb9a3a3e98c11f5681f", "patch": "@@ -825,7 +825,8 @@ simplify_unary_operation_1 (enum rtx_code code, enum machine_mode mode, rtx op)\n \n       /* Similarly, (not (neg X)) is (plus X -1).  */\n       if (GET_CODE (op) == NEG)\n-\treturn plus_constant (mode, XEXP (op, 0), -1);\n+\treturn simplify_gen_binary (PLUS, mode, XEXP (op, 0),\n+\t\t\t\t    CONSTM1_RTX (mode));\n \n       /* (not (xor X C)) for C constant is (xor X D) with D = ~C.  */\n       if (GET_CODE (op) == XOR\n@@ -932,7 +933,8 @@ simplify_unary_operation_1 (enum rtx_code code, enum machine_mode mode, rtx op)\n \n       /* Similarly, (neg (not X)) is (plus X 1).  */\n       if (GET_CODE (op) == NOT)\n-\treturn plus_constant (mode, XEXP (op, 0), 1);\n+\treturn simplify_gen_binary (PLUS, mode, XEXP (op, 0),\n+\t\t\t\t    CONST1_RTX (mode));\n \n       /* (neg (minus X Y)) can become (minus Y X).  This transformation\n \t isn't safe for modes with signed zeros, since if X and Y are"}]}