{"sha": "d876f5cd0272d7d7d6842703d59a130bdaf72cca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg3NmY1Y2QwMjcyZDdkN2Q2ODQyNzAzZDU5YTEzMGJkYWY3MmNjYQ==", "commit": {"author": {"name": "Dominik Vogt", "email": "vogt@linux.vnet.ibm.com", "date": "2017-01-27T08:07:26Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2017-01-27T08:07:26Z"}, "message": "S/390: Fix matching setmem_long_and*.\n\nThe attached patch reactivates the setmem_long_and* patterns on S/390\nthat have not been generated for a while.\n\ngcc/ChangeLog:\n\n2017-01-27  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\t* config/s390/s390.md (\"*setmem_long_and\")\n\t(\"*setmem_long_and_31z\"): Use zero_extend instead of and.\n\ngcc/testsuite/ChangeLog:\n\n2017-01-27  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\t* gcc.target/s390/md/setmem_long-1.c: Remove xfail, skip with -O0.\n\nFrom-SVN: r244963", "tree": {"sha": "7de78e20c7898200c4f2d0dca60799451826e0be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7de78e20c7898200c4f2d0dca60799451826e0be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d876f5cd0272d7d7d6842703d59a130bdaf72cca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d876f5cd0272d7d7d6842703d59a130bdaf72cca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d876f5cd0272d7d7d6842703d59a130bdaf72cca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d876f5cd0272d7d7d6842703d59a130bdaf72cca/comments", "author": {"login": "vogtd", "id": 9690100, "node_id": "MDQ6VXNlcjk2OTAxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/9690100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vogtd", "html_url": "https://github.com/vogtd", "followers_url": "https://api.github.com/users/vogtd/followers", "following_url": "https://api.github.com/users/vogtd/following{/other_user}", "gists_url": "https://api.github.com/users/vogtd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vogtd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vogtd/subscriptions", "organizations_url": "https://api.github.com/users/vogtd/orgs", "repos_url": "https://api.github.com/users/vogtd/repos", "events_url": "https://api.github.com/users/vogtd/events{/privacy}", "received_events_url": "https://api.github.com/users/vogtd/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb6a6ee9db925bea82bba47b1b3cdd3555fb539b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb6a6ee9db925bea82bba47b1b3cdd3555fb539b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb6a6ee9db925bea82bba47b1b3cdd3555fb539b"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "e288fd5dae712f292c20bcd96b3cecf3f4aa77a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d876f5cd0272d7d7d6842703d59a130bdaf72cca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d876f5cd0272d7d7d6842703d59a130bdaf72cca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d876f5cd0272d7d7d6842703d59a130bdaf72cca", "patch": "@@ -1,3 +1,8 @@\n+2017-01-27  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390.md (\"*setmem_long_and\")\n+\t(\"*setmem_long_and_31z\"): Use zero_extend instead of and.\n+\n 2017-01-26  Martin Sebor  <msebor@redhat.com>\n \n \t* gimple-ssa-sprintf.c (format_floating): Simplify the computation"}, {"sha": "31351756a50039cef90ba5629d94314be562594c", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d876f5cd0272d7d7d6842703d59a130bdaf72cca/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d876f5cd0272d7d7d6842703d59a130bdaf72cca/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=d876f5cd0272d7d7d6842703d59a130bdaf72cca", "patch": "@@ -3402,15 +3402,12 @@\n (define_insn \"*setmem_long_and\"\n   [(clobber (match_operand:<DBL> 0 \"register_operand\" \"=d\"))\n    (set (mem:BLK (subreg:P (match_operand:<DBL> 3 \"register_operand\" \"0\") 0))\n-        (unspec:BLK [(and:P\n-\t\t      (match_operand:P 2 \"setmem_operand\" \"Y\")\n-\t\t      (match_operand:P 4 \"const_int_operand\"             \"n\"))\n+        (unspec:BLK [(zero_extend:P (match_operand:QI 2 \"setmem_operand\" \"Y\"))\n \t\t    (subreg:P (match_dup 3) <modesize>)]\n \t\t    UNSPEC_REPLICATE_BYTE))\n    (use (match_operand:<DBL> 1 \"register_operand\" \"d\"))\n    (clobber (reg:CC CC_REGNUM))]\n-  \"(TARGET_64BIT || !TARGET_ZARCH) &&\n-   (INTVAL (operands[4]) & 255) == 255\"\n+  \"(TARGET_64BIT || !TARGET_ZARCH)\"\n   \"mvcle\\t%0,%1,%Y2\\;jo\\t.-4\"\n   [(set_attr \"length\" \"8\")\n    (set_attr \"type\" \"vs\")])\n@@ -3433,14 +3430,11 @@\n (define_insn \"*setmem_long_and_31z\"\n   [(clobber (match_operand:TI 0 \"register_operand\" \"=d\"))\n    (set (mem:BLK (subreg:SI (match_operand:TI 3 \"register_operand\" \"0\") 4))\n-        (unspec:BLK [(and:SI\n-\t\t      (match_operand:SI 2 \"setmem_operand\" \"Y\")\n-\t\t      (match_operand:SI 4 \"const_int_operand\" \"n\"))\n+        (unspec:BLK [(zero_extend:SI (match_operand:QI 2 \"setmem_operand\" \"Y\"))\n \t\t    (subreg:SI (match_dup 3) 12)] UNSPEC_REPLICATE_BYTE))\n    (use (match_operand:TI 1 \"register_operand\" \"d\"))\n    (clobber (reg:CC CC_REGNUM))]\n-  \"(!TARGET_64BIT && TARGET_ZARCH) &&\n-   (INTVAL (operands[4]) & 255) == 255\"\n+  \"(!TARGET_64BIT && TARGET_ZARCH)\"\n   \"mvcle\\t%0,%1,%Y2\\;jo\\t.-4\"\n   [(set_attr \"length\" \"8\")\n    (set_attr \"type\" \"vs\")])"}, {"sha": "85425e47d60b8912b0d1476a8963a36b6feb5028", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d876f5cd0272d7d7d6842703d59a130bdaf72cca/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d876f5cd0272d7d7d6842703d59a130bdaf72cca/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d876f5cd0272d7d7d6842703d59a130bdaf72cca", "patch": "@@ -1,3 +1,7 @@\n+2017-01-27  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/md/setmem_long-1.c: Remove xfail, skip with -O0.\n+\n 2017-01-27  Adam Butcher  <adam@jessamine.co.uk>\n \n \tPR c++/64382"}, {"sha": "dec7197cfa9a7457491e9452578b9effec18db23", "filename": "gcc/testsuite/gcc.target/s390/md/setmem_long-1.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d876f5cd0272d7d7d6842703d59a130bdaf72cca/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fsetmem_long-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d876f5cd0272d7d7d6842703d59a130bdaf72cca/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fsetmem_long-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fsetmem_long-1.c?ref=d876f5cd0272d7d7d6842703d59a130bdaf72cca", "patch": "@@ -4,6 +4,12 @@\n /* { dg-options \"-mmvcle -dP -save-temps\" } */\n /* { dg-do run { target { s390_useable_hw } } } */\n \n+/* Skip test if -O0 is present on the command line or -O... is missing:\n+\n+    { dg-skip-if \"\" { *-*-* } { \"-march=z9*\" \"-O0\" } { \"\" } }\n+    { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-O*\" } }\n+*/\n+\n __attribute__ ((noinline))\n void test(char *p, char c, int len)\n {\n@@ -17,8 +23,8 @@ void test2(char *p, int c, int len)\n }\n \n /* Check that the right patterns are used.  */\n-/* { dg-final { scan-assembler-times {c\"?:10 .*{[*]setmem_long_?3?1?z?}} 1 } } */\n-/* { dg-final { scan-assembler-times {c\"?:16 .*{[*]setmem_long_and_?3?1?z?}} 1 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {c\"?:16 .*{[*]setmem_long_?3?1?z?}} 1 } } */\n+/* { dg-final { scan-assembler-times {c\"?:22 .*{[*]setmem_long_and_?3?1?z?}} 1 } } */\n \n #define LEN 500\n char buf[LEN + 2];"}]}