{"sha": "f2e79496bf9107eae1130e0d74c80b02a5b86cab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJlNzk0OTZiZjkxMDdlYWUxMTMwZTBkNzRjODBiMDJhNWI4NmNhYg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-10-10T12:17:34Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-10T12:17:34Z"}, "message": "LWG 2733, LWG 2759 reject bool in gcd and lcm\n\n\t* include/experimental/numeric (gcd, lcm): Make bool arguments\n\till-formed.\n\t* include/std/numeric (gcd, lcm): Likewise.\n\t* testsuite/26_numerics/gcd/gcd_neg.cc: New test.\n\t* testsuite/26_numerics/lcm/lcm_neg.cc: New test.\n\nFrom-SVN: r240919", "tree": {"sha": "fc968dde050b4f8e7c93f354fd7cd301953f699c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc968dde050b4f8e7c93f354fd7cd301953f699c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2e79496bf9107eae1130e0d74c80b02a5b86cab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e79496bf9107eae1130e0d74c80b02a5b86cab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2e79496bf9107eae1130e0d74c80b02a5b86cab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e79496bf9107eae1130e0d74c80b02a5b86cab/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fee13acdd89f77a81a63711534f1d0737b965d1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fee13acdd89f77a81a63711534f1d0737b965d1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fee13acdd89f77a81a63711534f1d0737b965d1d"}], "stats": {"total": 110, "additions": 102, "deletions": 8}, "files": [{"sha": "b6b10e65d32d6b93b50bfdb62cec2196f35149f3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e79496bf9107eae1130e0d74c80b02a5b86cab/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e79496bf9107eae1130e0d74c80b02a5b86cab/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f2e79496bf9107eae1130e0d74c80b02a5b86cab", "patch": "@@ -1,5 +1,11 @@\n 2016-10-10  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/experimental/numeric (gcd, lcm): Make bool arguments\n+\till-formed.\n+\t* include/std/numeric (gcd, lcm): Likewise.\n+\t* testsuite/26_numerics/gcd/gcd_neg.cc: New test.\n+\t* testsuite/26_numerics/lcm/lcm_neg.cc: New test.\n+\n \t* include/bits/shared_ptr.h (enable_shared_from_this::weak_from_this):\n \tAdd noexcept.\n \t* include/bits/shared_ptr_base.h"}, {"sha": "0ce4bda62ed89d6ff0bde659d62c616d3af4d9e9", "filename": "libstdc++-v3/include/experimental/numeric", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e79496bf9107eae1130e0d74c80b02a5b86cab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e79496bf9107eae1130e0d74c80b02a5b86cab/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fnumeric?ref=f2e79496bf9107eae1130e0d74c80b02a5b86cab", "patch": "@@ -57,8 +57,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     constexpr common_type_t<_Mn, _Nn>\n     gcd(_Mn __m, _Nn __n)\n     {\n-      static_assert(is_integral<_Mn>::value, \"arguments to gcd are integers\");\n-      static_assert(is_integral<_Nn>::value, \"arguments to gcd are integers\");\n+      static_assert(is_integral<_Mn>::value, \"gcd arguments are integers\");\n+      static_assert(is_integral<_Nn>::value, \"gcd arguments are integers\");\n+      static_assert(!is_same<_Mn, bool>::value, \"gcd arguments are not bools\");\n+      static_assert(!is_same<_Nn, bool>::value, \"gcd arguments are not bools\");\n       return std::__detail::__gcd(__m, __n);\n     }\n \n@@ -67,8 +69,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     constexpr common_type_t<_Mn, _Nn>\n     lcm(_Mn __m, _Nn __n)\n     {\n-      static_assert(is_integral<_Mn>::value, \"arguments to lcm are integers\");\n-      static_assert(is_integral<_Nn>::value, \"arguments to lcm are integers\");\n+      static_assert(is_integral<_Mn>::value, \"lcm arguments are integers\");\n+      static_assert(is_integral<_Nn>::value, \"lcm arguments are integers\");\n+      static_assert(!is_same<_Mn, bool>::value, \"lcm arguments are not bools\");\n+      static_assert(!is_same<_Nn, bool>::value, \"lcm arguments are not bools\");\n       return std::__detail::__lcm(__m, __n);\n     }\n "}, {"sha": "44140811de190abad48213e992f01c79459863fc", "filename": "libstdc++-v3/include/std/numeric", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e79496bf9107eae1130e0d74c80b02a5b86cab/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e79496bf9107eae1130e0d74c80b02a5b86cab/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric?ref=f2e79496bf9107eae1130e0d74c80b02a5b86cab", "patch": "@@ -96,6 +96,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     __abs_integral(_Tp __val)\n     { return __val; }\n \n+  void __abs_integral(bool) = delete;\n+\n   template<typename _Mn, typename _Nn>\n     constexpr common_type_t<_Mn, _Nn>\n     __gcd(_Mn __m, _Nn __n)\n@@ -129,8 +131,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     constexpr common_type_t<_Mn, _Nn>\n     gcd(_Mn __m, _Nn __n)\n     {\n-      static_assert(is_integral<_Mn>::value, \"arguments to gcd are integers\");\n-      static_assert(is_integral<_Nn>::value, \"arguments to gcd are integers\");\n+      static_assert(is_integral<_Mn>::value, \"gcd arguments are integers\");\n+      static_assert(is_integral<_Nn>::value, \"gcd arguments are integers\");\n+      static_assert(!is_same<_Mn, bool>::value, \"gcd arguments are not bools\");\n+      static_assert(!is_same<_Nn, bool>::value, \"gcd arguments are not bools\");\n       return __detail::__gcd(__m, __n);\n     }\n \n@@ -140,8 +144,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     constexpr common_type_t<_Mn, _Nn>\n     lcm(_Mn __m, _Nn __n)\n     {\n-      static_assert(is_integral<_Mn>::value, \"arguments to lcm are integers\");\n-      static_assert(is_integral<_Nn>::value, \"arguments to lcm are integers\");\n+      static_assert(is_integral<_Mn>::value, \"lcm arguments are integers\");\n+      static_assert(is_integral<_Nn>::value, \"lcm arguments are integers\");\n+      static_assert(!is_same<_Mn, bool>::value, \"lcm arguments are not bools\");\n+      static_assert(!is_same<_Nn, bool>::value, \"lcm arguments are not bools\");\n       return __detail::__lcm(__m, __n);\n     }\n "}, {"sha": "231ce8daec25d4e3e40eb40df247f3664b27c9b5", "filename": "libstdc++-v3/testsuite/26_numerics/gcd/gcd_neg.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e79496bf9107eae1130e0d74c80b02a5b86cab/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2Fgcd_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e79496bf9107eae1130e0d74c80b02a5b86cab/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2Fgcd_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2Fgcd_neg.cc?ref=f2e79496bf9107eae1130e0d74c80b02a5b86cab", "patch": "@@ -0,0 +1,39 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++1z\" }\n+// { dg-do compile { target c++1z } }\n+\n+#include <numeric>\n+\n+void\n+test01()\n+{\n+  std::gcd(true, 1);    // { dg-error \"from here\" }\n+  std::gcd(1, true);    // { dg-error \"from here\" }\n+  std::gcd(true, true); // { dg-error \"from here\" }\n+  std::gcd(0.1, 1);     // { dg-error \"from here\" }\n+  std::gcd(1, 0.1);     // { dg-error \"from here\" }\n+  std::gcd(0.1, 0.1);   // { dg-error \"from here\" }\n+}\n+\n+// { dg-error \"integers\" \"\" { target *-*-* } 134 }\n+// { dg-error \"integers\" \"\" { target *-*-* } 135 }\n+// { dg-error \"not bools\" \"\" { target *-*-* } 136 }\n+// { dg-error \"not bools\" \"\" { target *-*-* } 137 }\n+// { dg-prune-output \"deleted function\" }\n+// { dg-prune-output \"invalid operands\" }"}, {"sha": "085ad77a8dc877dcef4ccc47abdb41db46ae641a", "filename": "libstdc++-v3/testsuite/26_numerics/lcm/lcm_neg.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e79496bf9107eae1130e0d74c80b02a5b86cab/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2Flcm_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e79496bf9107eae1130e0d74c80b02a5b86cab/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2Flcm_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2Flcm_neg.cc?ref=f2e79496bf9107eae1130e0d74c80b02a5b86cab", "patch": "@@ -0,0 +1,39 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++1z\" }\n+// { dg-do compile { target c++1z } }\n+\n+#include <numeric>\n+\n+void\n+test01()\n+{\n+  std::lcm(true, 1);    // { dg-error \"from here\" }\n+  std::lcm(1, true);    // { dg-error \"from here\" }\n+  std::lcm(true, true); // { dg-error \"from here\" }\n+  std::lcm(0.1, 1);     // { dg-error \"from here\" }\n+  std::lcm(1, 0.1);     // { dg-error \"from here\" }\n+  std::lcm(0.1, 0.1);   // { dg-error \"from here\" }\n+}\n+\n+// { dg-error \"integers\" \"\" { target *-*-* } 147 }\n+// { dg-error \"integers\" \"\" { target *-*-* } 148 }\n+// { dg-error \"not bools\" \"\" { target *-*-* } 149 }\n+// { dg-error \"not bools\" \"\" { target *-*-* } 150 }\n+// { dg-prune-output \"deleted function\" }\n+// { dg-prune-output \"invalid operands\" }"}]}