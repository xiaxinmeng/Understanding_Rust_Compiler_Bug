{"sha": "8f9eb495d68c0467fb6a5034455bbdc990e26be4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY5ZWI0OTVkNjhjMDQ2N2ZiNmE1MDM0NDU1YmJkYzk5MGUyNmJlNA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-05-19T06:04:22Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-05-19T06:04:22Z"}, "message": "gengenrtl.c: Add prototype for excluded_rtx.\n\n\t* gengenrtl.c: Add prototype for excluded_rtx.\n\n\t* real.h: Add prototype for exact_real_truncate.\n\nFrom-SVN: r53607", "tree": {"sha": "8c47dbfc2c004c1acef4c68dd743777bd8605a06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c47dbfc2c004c1acef4c68dd743777bd8605a06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f9eb495d68c0467fb6a5034455bbdc990e26be4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f9eb495d68c0467fb6a5034455bbdc990e26be4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f9eb495d68c0467fb6a5034455bbdc990e26be4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f9eb495d68c0467fb6a5034455bbdc990e26be4/comments", "author": null, "committer": null, "parents": [{"sha": "fb49053ffdc69d527d610d2592f562abc8df63e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb49053ffdc69d527d610d2592f562abc8df63e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb49053ffdc69d527d610d2592f562abc8df63e0"}], "stats": {"total": 40, "additions": 26, "deletions": 14}, "files": [{"sha": "a8f2230f003fc9e8f20f885009ac7b5e8f71e24b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9eb495d68c0467fb6a5034455bbdc990e26be4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9eb495d68c0467fb6a5034455bbdc990e26be4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f9eb495d68c0467fb6a5034455bbdc990e26be4", "patch": "@@ -1,3 +1,9 @@\n+2002-05-19  Andreas Jaeger  <aj@suse.de>\n+\n+\t* gengenrtl.c: Add prototype for excluded_rtx.\n+\n+\t* real.h: Add prototype for exact_real_truncate.\n+\n 2002-05-18  Richard Henderson  <rth@redhat.com>\n \n \t* system.h (ENCODE_SECTION_INFO): Poison it.\n@@ -25,16 +31,16 @@\n \treferencing existing function.  Make function static.\n \n \t* config/a29k/a29k.c, config/a29k/a29k.h, config/arc/arc.c,\n-\tconfig/arc/arc.h, config/arm/arm.c, config/arm/arm.h, \n+\tconfig/arc/arc.h, config/arm/arm.c, config/arm/arm.h,\n \tconfig/h8300/h8300.c, config/h8300/h8300.h, config/i370/i370.c,\n \tconfig/i370/i370.h, config/i386/i386-interix.h, config/i386/i386.c,\n \tconfig/i386/i386.h, config/i386/interix.c, config/m88k/m88k.c,\n-\tconfig/m88k/m88k.h, config/mips/mips.c, config/mips/mips.h, \n+\tconfig/m88k/m88k.h, config/mips/mips.c, config/mips/mips.h,\n \tconfig/ns32k/ns32k.c, config/ns32k/ns32k.h, config/pa/pa.c,\n \tconfig/pa/pa.h, config/romp/romp.c, config/romp/romp.h,\n \tconfig/rs6000/linux64.h, config/rs6000/xcoff.h, config/s390/s390.c,\n \tconfig/s390/s390.h, config/sh/sh.c, config/sh/sh.h,\n-\tconfig/sparc/sparc.c, config/sparc/sparc.h, config/v850/v850.c, \n+\tconfig/sparc/sparc.c, config/sparc/sparc.h, config/v850/v850.c,\n \tconfig/v850/v850.h, config/vax/vax.c, config/vax/vms.h,\n \tconfig/xtensa/xtensa.c, config/xtensa/xtensa.h:\n \tMove ENCODE_SECTION_INFO to out-of-line function and add\n@@ -92,10 +98,10 @@\n \t* config/elfos.h, config/svr3.h, config/arm/aof.h, config/c4x/c4x.h,\n \tconfig/i386/dgux.h, config/i386/osfrose.h, config/i386/sco5.h,\n \tconfig/i386/svr3gas.h, config/i860/paragon.h, config/ia64/aix.h,\n-\tconfig/m32r/m32r.h, config/m68k/dpx2.h, config/m68k/lynx.h, \n+\tconfig/m32r/m32r.h, config/m68k/dpx2.h, config/m68k/lynx.h,\n \tconfig/m68k/m68k.h, config/m68k/tower-as.h, config/m88k/dgux.h,\n \tconfig/mcore/mcore-pe.h, config/mips/mips.h, config/mmix/mmix.h,\n-\tconfig/pa/pa-linux.h, config/pa/pa.h, config/romp/romp.h, \n+\tconfig/pa/pa-linux.h, config/pa/pa.h, config/romp/romp.h,\n \tconfig/rs6000/lynx.h, config/rs6000/sysv4.h, config/s390/linux.h,\n \tconfig/sparc/sysv4.h, config/xtensa/elf.h, config/xtensa/linux.h\n \t(SELECT_RTX_SECTION): Remove.\n@@ -115,7 +121,7 @@\n \t* config/mips/iris6.h (READONLY_DATA_SECTION_ASM_OP): Undef before\n \tredefining.\n \t* config/mips/mips.c (mips_select_rtx_section): Make static.\n-\tSupport ELF SHF_MERGE features. \n+\tSupport ELF SHF_MERGE features.\n \t* config/mips/mips-protos.h: Update.\n \t* config/rs6000/xcoff.h (SELECT_RTX_SECTION): Move ...\n \t* config/rs6000/rs6000.c (rs6000_xcoff_select_rtx_section): ... here.\n@@ -241,7 +247,7 @@ Sun May 19 00:24:23 CEST 2002  Jan Hubicka  <jh@suse.cz>\n 2002-05-18  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* c-common.c (c_common_post_options): Warn if -Wformat-zero-length\n-\tis used without -Wformat.  \n+\tis used without -Wformat.\n \t* c-common.h (warn_format_zero_length): Declare extern.\n \t* c-decl.c (warn_options): Add \"format-zero-length\".\n \t* c-format.c (warn_format_zero_length): Declare."}, {"sha": "b90c9ee29b24ec36acebea7779f660840f64b06f", "filename": "gcc/gengenrtl.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9eb495d68c0467fb6a5034455bbdc990e26be4/gcc%2Fgengenrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9eb495d68c0467fb6a5034455bbdc990e26be4/gcc%2Fgengenrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengenrtl.c?ref=8f9eb495d68c0467fb6a5034455bbdc990e26be4", "patch": "@@ -1,5 +1,5 @@\n /* Generate code to allocate RTL structures.\n-   Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1997, 1998, 1999, 2000, 2002 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -28,15 +28,15 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"real.h\"\n \n-struct rtx_definition \n+struct rtx_definition\n {\n   const char *const enumname, *const name, *const format;\n };\n \n #define DEF_RTL_EXPR(ENUM, NAME, FORMAT, CLASS) { STRINGX(ENUM), NAME, FORMAT },\n \n-static const struct rtx_definition defs[] = \n-{  \n+static const struct rtx_definition defs[] =\n+{\n #include \"rtl.def\"\t\t/* rtl expressions are documented here */\n };\n \n@@ -46,6 +46,7 @@ static const char *type_from_format\tPARAMS ((int));\n static const char *accessor_from_format\tPARAMS ((int));\n static int special_format\t\tPARAMS ((const char *));\n static int special_rtx\t\t\tPARAMS ((int));\n+static int excluded_rtx\t\t\tPARAMS ((int));\n static void find_formats\t\tPARAMS ((void));\n static void gendecl\t\t\tPARAMS ((const char *));\n static void genmacro\t\t\tPARAMS ((int));\n@@ -188,7 +189,7 @@ gendecl (format)\n {\n   const char *p;\n   int i, pos;\n-  \n+\n   printf (\"extern rtx gen_rtx_fmt_%s\\tPARAMS ((RTX_CODE, \", format);\n   printf (\"enum machine_mode mode\");\n \n@@ -213,7 +214,7 @@ gendecl (format)\n /* Generate macros to generate RTL of code IDX using the functions we\n    write.  */\n \n-static void \n+static void\n genmacro (idx)\n      int idx;\n {\n@@ -253,7 +254,7 @@ gendef (format)\n {\n   const char *p;\n   int i, j;\n-  \n+\n   /* Start by writing the definition of the function name and the types\n      of the arguments.  */\n "}, {"sha": "4b59378808ff40c98dd96300efce6ec3c6c20661", "filename": "gcc/real.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f9eb495d68c0467fb6a5034455bbdc990e26be4/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f9eb495d68c0467fb6a5034455bbdc990e26be4/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=8f9eb495d68c0467fb6a5034455bbdc990e26be4", "patch": "@@ -180,6 +180,11 @@ extern REAL_VALUE_TYPE ereal_from_double PARAMS ((HOST_WIDE_INT *));\n extern REAL_VALUE_TYPE real_value_truncate PARAMS ((enum machine_mode,\n                                                  REAL_VALUE_TYPE));\n \n+/* Expansion of REAL_VALUE_TRUNCATE.\n+   The result is in floating point, rounded to nearest or even.  */\n+extern bool exact_real_truncate PARAMS ((enum machine_mode,\n+\t\t\t\t\t REAL_VALUE_TYPE *));\n+\n /* These return HOST_WIDE_INT: */\n /* Convert a floating-point value to integer, rounding toward zero.  */\n #define REAL_VALUE_FIX(x) (efixi (x))"}]}