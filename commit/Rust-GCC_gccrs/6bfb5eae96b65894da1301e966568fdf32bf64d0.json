{"sha": "6bfb5eae96b65894da1301e966568fdf32bf64d0", "node_id": "C_kwDOANBUbNoAKDZiZmI1ZWFlOTZiNjU4OTRkYTEzMDFlOTY2NTY4ZmRmMzJiZjY0ZDA", "commit": {"author": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-03-17T14:32:22Z"}, "committer": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-03-17T14:32:22Z"}, "message": "PR modula2/109032 - message 'compiler checks to force' is too complicated\n\nCorrect typos and improve the descriptions of command line options.\nImprove comments in gm2-gcc/m2expr.cc.\n\ngcc/m2/ChangeLog:\n\n\tPR modula2/109032\n\t* gm2-gcc/m2expr.cc: Correct ? : order in comments.\n\t(m2expr_BuildDivM2): Improve comment.\n\t* lang.opt: Improve option descriptions.\n\nSigned-off-by: Gaius Mulley <gaiusmod2@gmail.com>", "tree": {"sha": "0dacc53835840ec2b54cd38d5a7ea5dc5bb9aaee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dacc53835840ec2b54cd38d5a7ea5dc5bb9aaee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bfb5eae96b65894da1301e966568fdf32bf64d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bfb5eae96b65894da1301e966568fdf32bf64d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bfb5eae96b65894da1301e966568fdf32bf64d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bfb5eae96b65894da1301e966568fdf32bf64d0/comments", "author": null, "committer": null, "parents": [{"sha": "57688950b9328cbb4a9c21eb3199f9132b5119d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57688950b9328cbb4a9c21eb3199f9132b5119d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57688950b9328cbb4a9c21eb3199f9132b5119d3"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "0470f7c7f8f8d654cc13d0bf0e9e6346a2517ce2", "filename": "gcc/m2/gm2-gcc/m2expr.cc", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bfb5eae96b65894da1301e966568fdf32bf64d0/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bfb5eae96b65894da1301e966568fdf32bf64d0/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2expr.cc?ref=6bfb5eae96b65894da1301e966568fdf32bf64d0", "patch": "@@ -3617,8 +3617,9 @@ m2expr_BuildCap (location_t location, tree t)\n   return error_mark_node;\n }\n \n-/* BuildDivM2 if iso or pim4 then build and return ((op2 < 0) : (op1\n-   divceil op2) ?  (op1 divfloor op2)) otherwise use divtrunc.  */\n+/* BuildDivM2 if iso or pim4 then all modulus results are positive\n+   and the results from the division are rounded to the floor otherwise\n+   use BuildDivTrunc.  */\n \n tree\n m2expr_BuildDivM2 (location_t location, tree op1, tree op2,\n@@ -3627,6 +3628,8 @@ m2expr_BuildDivM2 (location_t location, tree op1, tree op2,\n   op1 = m2expr_FoldAndStrip (op1);\n   op2 = m2expr_FoldAndStrip (op2);\n   ASSERT_CONDITION (TREE_TYPE (op1) == TREE_TYPE (op2));\n+  /* If iso or pim4 then build and return ((op2 < 0) ? (op1\n+     divceil op2) : (op1 divfloor op2)) otherwise use divtrunc.  */\n   if (M2Options_GetPIM4 () || M2Options_GetISO ()\n       || M2Options_GetPositiveModFloor ())\n     return fold_build3 (\n@@ -3642,7 +3645,7 @@ m2expr_BuildDivM2 (location_t location, tree op1, tree op2,\n }\n \n /* BuildDivM2Check - build and\n-   return ((op2 < 0) : (op1 divtrunc op2) ? (op1 divfloor op2))\n+   return ((op2 < 0) ? (op1 divtrunc op2) : (op1 divfloor op2))\n    when -fiso, -fpim4 or -fpositive-mod-floor-div is present else\n    return op1 div trunc op2.  Use the checking div equivalents.  */\n \n@@ -3685,8 +3688,8 @@ m2expr_BuildISOModM2Check (location_t location,\n }\n \n \n-/* BuildModM2Check if iso or pim4 then build and return ((op2 < 0) : (op1\n-   modceil op2) ?  (op1 modfloor op2)) otherwise use modtrunc.\n+/* BuildModM2Check if iso or pim4 then build and return ((op2 < 0) ? (op1\n+   modceil op2) :  (op1 modfloor op2)) otherwise use modtrunc.\n    Use the checking mod equivalents.  */\n \n tree\n@@ -3703,8 +3706,8 @@ m2expr_BuildModM2Check (location_t location, tree op1, tree op2,\n     return m2expr_BuildModTruncCheck (location, op1, op2, lowest, min, max);\n }\n \n-/* BuildModM2 if iso or pim4 then build and return ((op2 < 0) : (op1\n-   modceil op2) ?  (op1 modfloor op2)) otherwise use modtrunc.  */\n+/* BuildModM2 if iso or pim4 then build and return ((op2 < 0) ? (op1\n+   modceil op2) : (op1 modfloor op2)) otherwise use modtrunc.  */\n \n tree\n m2expr_BuildModM2 (location_t location, tree op1, tree op2,"}, {"sha": "4d54a16b3e219b2b7dcad985541bcd5b3c83bff6", "filename": "gcc/m2/lang.opt", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bfb5eae96b65894da1301e966568fdf32bf64d0/gcc%2Fm2%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bfb5eae96b65894da1301e966568fdf32bf64d0/gcc%2Fm2%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Flang.opt?ref=6bfb5eae96b65894da1301e966568fdf32bf64d0", "patch": "@@ -56,7 +56,7 @@ turns on runtime subrange, array index and indirection via NIL pointer checking\n \n fcase\n Modula-2\n-turns on runtime checking to check whether a CASE statement requires an ELSE clause when on was not specified\n+turns on runtime checking to check whether a CASE statement requires an ELSE clause when one was not specified\n \n fcpp\n Modula-2\n@@ -104,7 +104,7 @@ allows opaque types to be implemented as any type (a GNU Modula-2 extension)\n \n ffloatvalue\n Modula-2\n-turns on runtime checking to check whether a floating point number is about to exceed range\n+turns on runtime checking to check whether a floating point number will exceed range\n \n fgen-module-list=\n Modula-2 Joined\n@@ -120,7 +120,7 @@ use ISO dialect of Modula-2\n \n flibs=\n Modula-2 Joined\n-specify the library order, currently legal entries include: log, min, pim, iso or their directory name equivalent m2log, m2min, m2pim, m2iso.\n+specify the library order, the libraries maybe specified by a comma separated abbreviation: log,min,pim,iso or by directory names: m2log,m2min,m2pim,m2iso.\n \n flocation=\n Modula-2 Joined\n@@ -212,7 +212,7 @@ specify the list of runtime modules and their initialization order\n \n fscaffold-dynamic\n Modula-2\n-the modules initialization order is dynamically determined by M2RTS and application dependancies\n+the modules initialization order is dynamically determined by M2RTS and application dependencies\n \n fscaffold-c\n Modula-2\n@@ -264,7 +264,7 @@ turns on all division and modulus by zero checking for ordinal values\n \n fwholevalue\n Modula-2\n-turns on runtime checking to check whether a whole number is about to exceed range\n+turns on runtime checking to check whether a whole number will exceed range\n \n static-libgm2\n Driver"}]}