{"sha": "3a3f9d87f610660d6592fa0f808803c7e51e8d1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2EzZjlkODdmNjEwNjYwZDY1OTJmYTBmODA4ODAzYzdlNTFlOGQxZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2008-05-07T19:08:53Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-05-07T19:08:53Z"}, "message": "i386.c (struct_builtin_description): Use CODE_FOR_sse_loadhps_exp.\n\n        * config/i386/i386.c (struct_builtin_description)\n        [IX86_BUILTIN_LOADHPS]: Use CODE_FOR_sse_loadhps_exp.\n        [IX86_BUILTIN_STOREHPS]: Use CODE_FOR_sse_loadlps_exp.\n        [IX86_BUILTIN_LOADHPD]: Use CODE_FOR_sse2_loadhpd_exp.\n        [IX86_BUILTIN_LOADLPD]: Use CODE_FOR_sse2_loadlpd_exp.\n        [IX86_BUILTIN_MOVHLPS]: Use CODE_FOR_sse_movhlps_exp.\n        [IX86_BUILTIN_MOVLHPS]: Use CODE_FOR_sse_movlhps_exp.\n        [IX86_BUILTIN_UNPCKHPD]: Use FOR_sse2_unpckhpd_exp.\n        [IX86_BUILTIN_UNPCKLPD]: Use FOR_sse2_unpcklpd_exp.\n\nFrom-SVN: r135047", "tree": {"sha": "3b4611c403111f8681f57e2fe04a445a0fdbdd37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b4611c403111f8681f57e2fe04a445a0fdbdd37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a3f9d87f610660d6592fa0f808803c7e51e8d1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a3f9d87f610660d6592fa0f808803c7e51e8d1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a3f9d87f610660d6592fa0f808803c7e51e8d1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a3f9d87f610660d6592fa0f808803c7e51e8d1d/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ffbaf3373c4886037e1bb16053145f1cc716c1c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffbaf3373c4886037e1bb16053145f1cc716c1c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffbaf3373c4886037e1bb16053145f1cc716c1c1"}], "stats": {"total": 83, "additions": 42, "deletions": 41}, "files": [{"sha": "32ee2a6983c2082f853d87827819a223e17e2c05", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3f9d87f610660d6592fa0f808803c7e51e8d1d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3f9d87f610660d6592fa0f808803c7e51e8d1d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a3f9d87f610660d6592fa0f808803c7e51e8d1d", "patch": "@@ -26,28 +26,20 @@\n \tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n \n \t* config/i386/sse.md\n-\t(*sse_movhlps): Rename from sse_movhlps insn pattern.\n-\t(sse_movhlps): New expander.  Use ix86_fixup_binary_operands\n+\t(sse_movhlps_exp): New expander.  Use ix86_fixup_binary_operands\n \tto handle nonimmediate operands.\n-\t(*sse_movlhps): Rename from sse_movlhps insn pattern.\n-\t(sse_movlhps): New expander.  Use ix86_fixup_binary_operands\n+\t(sse_movlhps_exp): New expander.  Use ix86_fixup_binary_operands\n \tto handle nonimmediate operands.\n-\t(*sse_loadhps): Rename from sse_loadhps insn pattern.\n-\t(sse_loadhps): New expander.  Use ix86_fixup_binary_operands\n+\t(sse_loadhps_exp): New expander.  Use ix86_fixup_binary_operands\n \tto handle nonimmediate operands.\n-\t(*sse_loadlps): Rename from sse_loadlps insn pattern.\n-\t(sse_loadlps): New expander.  Use ix86_fixup_binary_operands\n+\t(sse_loadlps_exp): New expander.  Use ix86_fixup_binary_operands\n \tto handle nonimmediate operands.\n-\t(*sse2_unpckhpd): Rename from sse2_unpckhpd insn pattern.\n-\t(sse2_unpckhpd): New expander.  Use\n+\t(sse2_unpckhpd_exp): New expander.  Use\n \tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n-\t(*sse2_unpcklpd): Rename from sse2_unpcklpd insn pattern.\n-\t(sse2_unpcklpd): New expander.  Use\n+\t(sse2_unpcklpd_exp): New expander.  Use\n \tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n-\t(*sse_loadhpd): Rename from sse_loadhpd insn pattern.\n-\t(sse_loadhpd): New expander.  Use ix86_fixup_binary_operands\n+\t(sse_loadhpd_exp): New expander.  Use ix86_fixup_binary_operands\n \tto handle nonimmediate operands.\n-\t(*sse_loadlpd): Rename from sse_loadlpd insn pattern.\n \t(sse_loadlpd): New expander.  Use ix86_fixup_binary_operands\n \tto handle nonimmediate operands.\n \t(*sse2_<plusminus_insn><mode>3): Rename from\n@@ -92,7 +84,16 @@\n \t(ssse3_pmaddubsw128): Use register_operand for operand 1.\n \t(ssse3_pmaddubsw): Ditto.\n \n-\t* config/i386/sse.md (ix86_fixup_binary_operands): Assert that src1\n+\t* config/i386/i386.c (struct_builtin_description)\n+\t[IX86_BUILTIN_LOADHPS]: Use CODE_FOR_sse_loadhps_exp.\n+\t[IX86_BUILTIN_STOREHPS]: Use CODE_FOR_sse_loadlps_exp.\n+\t[IX86_BUILTIN_LOADHPD]: Use CODE_FOR_sse2_loadhpd_exp.\n+\t[IX86_BUILTIN_LOADLPD]: Use CODE_FOR_sse2_loadlpd_exp.\n+\t[IX86_BUILTIN_MOVHLPS]: Use CODE_FOR_sse_movhlps_exp.\n+\t[IX86_BUILTIN_MOVLHPS]: Use CODE_FOR_sse_movlhps_exp.\n+\t[IX86_BUILTIN_UNPCKHPD]: Use FOR_sse2_unpckhpd_exp.\n+\t[IX86_BUILTIN_UNPCKLPD]: Use FOR_sse2_unpcklpd_exp.\n+\t(ix86_fixup_binary_operands): Assert that src1\n \tand src2 must have the same mode when swapped.\n \t(ix86_expand_binop_builtin): Do not use ix86_fixup_binary_operands\n \tand ix86_binary_operator_ok.  Do not force operands in registers"}, {"sha": "825bf3d3994d67d982b174f737cea0a0cdbc077c", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3f9d87f610660d6592fa0f808803c7e51e8d1d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3f9d87f610660d6592fa0f808803c7e51e8d1d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=3a3f9d87f610660d6592fa0f808803c7e51e8d1d", "patch": "@@ -18158,8 +18158,8 @@ static const struct builtin_description bdesc_special_args[] =\n   { OPTION_MASK_ISA_SSE, CODE_FOR_sse_movntv4sf, \"__builtin_ia32_movntps\", IX86_BUILTIN_MOVNTPS, UNKNOWN, (int) VOID_FTYPE_PFLOAT_V4SF },\n   { OPTION_MASK_ISA_SSE, CODE_FOR_sse_movups, \"__builtin_ia32_loadups\", IX86_BUILTIN_LOADUPS, UNKNOWN, (int) V4SF_FTYPE_PCFLOAT },\n \n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_loadhps, \"__builtin_ia32_loadhps\", IX86_BUILTIN_LOADHPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_PCV2SF },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_loadlps, \"__builtin_ia32_loadlps\", IX86_BUILTIN_LOADLPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_PCV2SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_loadhps_exp, \"__builtin_ia32_loadhps\", IX86_BUILTIN_LOADHPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_PCV2SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_loadlps_exp, \"__builtin_ia32_loadlps\", IX86_BUILTIN_LOADLPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_PCV2SF },\n   { OPTION_MASK_ISA_SSE, CODE_FOR_sse_storehps, \"__builtin_ia32_storehps\", IX86_BUILTIN_STOREHPS, UNKNOWN, (int) VOID_FTYPE_PV2SF_V4SF },\n   { OPTION_MASK_ISA_SSE, CODE_FOR_sse_storelps, \"__builtin_ia32_storelps\", IX86_BUILTIN_STORELPS, UNKNOWN, (int) VOID_FTYPE_PV2SF_V4SF },\n \n@@ -18178,8 +18178,8 @@ static const struct builtin_description bdesc_special_args[] =\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_movupd, \"__builtin_ia32_loadupd\", IX86_BUILTIN_LOADUPD, UNKNOWN, (int) V2DF_FTYPE_PCDOUBLE },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_movdqu, \"__builtin_ia32_loaddqu\", IX86_BUILTIN_LOADDQU, UNKNOWN, (int) V16QI_FTYPE_PCCHAR },\n \n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_loadhpd, \"__builtin_ia32_loadhpd\", IX86_BUILTIN_LOADHPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_PCDOUBLE },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_loadlpd, \"__builtin_ia32_loadlpd\", IX86_BUILTIN_LOADLPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_PCDOUBLE },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_loadhpd_exp, \"__builtin_ia32_loadhpd\", IX86_BUILTIN_LOADHPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_PCDOUBLE },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_loadlpd_exp, \"__builtin_ia32_loadlpd\", IX86_BUILTIN_LOADLPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_PCDOUBLE },\n \n   /* SSE3 */\n   { OPTION_MASK_ISA_SSE3, CODE_FOR_sse3_lddqu, \"__builtin_ia32_lddqu\", IX86_BUILTIN_LDDQU, UNKNOWN, (int) V16QI_FTYPE_PCCHAR },\n@@ -18348,8 +18348,8 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_SSE, CODE_FOR_xorv4sf3,  \"__builtin_ia32_xorps\", IX86_BUILTIN_XORPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n \n   { OPTION_MASK_ISA_SSE, CODE_FOR_sse_movss,  \"__builtin_ia32_movss\", IX86_BUILTIN_MOVSS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_movhlps,  \"__builtin_ia32_movhlps\", IX86_BUILTIN_MOVHLPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_movlhps,  \"__builtin_ia32_movlhps\", IX86_BUILTIN_MOVLHPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_movhlps_exp,  \"__builtin_ia32_movhlps\", IX86_BUILTIN_MOVHLPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_movlhps_exp,  \"__builtin_ia32_movlhps\", IX86_BUILTIN_MOVLHPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n   { OPTION_MASK_ISA_SSE, CODE_FOR_sse_unpckhps, \"__builtin_ia32_unpckhps\", IX86_BUILTIN_UNPCKHPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n   { OPTION_MASK_ISA_SSE, CODE_FOR_sse_unpcklps, \"__builtin_ia32_unpcklps\", IX86_BUILTIN_UNPCKLPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF },\n \n@@ -18445,8 +18445,8 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_xorv2df3,  \"__builtin_ia32_xorpd\", IX86_BUILTIN_XORPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n \n   { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_movsd,  \"__builtin_ia32_movsd\", IX86_BUILTIN_MOVSD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_unpckhpd, \"__builtin_ia32_unpckhpd\", IX86_BUILTIN_UNPCKHPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_unpcklpd, \"__builtin_ia32_unpcklpd\", IX86_BUILTIN_UNPCKLPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_unpckhpd_exp, \"__builtin_ia32_unpckhpd\", IX86_BUILTIN_UNPCKHPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_unpcklpd_exp, \"__builtin_ia32_unpcklpd\", IX86_BUILTIN_UNPCKLPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF },\n \n   { OPTION_MASK_ISA_SSE2, CODE_FOR_vec_pack_sfix_v2df, \"__builtin_ia32_vec_pack_sfix\", IX86_BUILTIN_VEC_PACK_SFIX, UNKNOWN, (int) V4SI_FTYPE_V2DF_V2DF },\n "}, {"sha": "d31aceb5d1bc19c60b504707bfaec5b39a756293", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3f9d87f610660d6592fa0f808803c7e51e8d1d/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3f9d87f610660d6592fa0f808803c7e51e8d1d/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=3a3f9d87f610660d6592fa0f808803c7e51e8d1d", "patch": "@@ -1992,7 +1992,7 @@\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n-(define_expand \"sse_movhlps\"\n+(define_expand \"sse_movhlps_exp\"\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"\")\n \t(vec_select:V4SF\n \t  (vec_concat:V8SF\n@@ -2005,7 +2005,7 @@\n   \"TARGET_SSE\"\n   \"ix86_fixup_binary_operands (UNKNOWN, V4SFmode, operands);\")\n \n-(define_insn \"*sse_movhlps\"\n+(define_insn \"sse_movhlps\"\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\"     \"=x,x,m\")\n \t(vec_select:V4SF\n \t  (vec_concat:V8SF\n@@ -2023,7 +2023,7 @@\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"mode\" \"V4SF,V2SF,V2SF\")])\n \n-(define_expand \"sse_movlhps\"\n+(define_expand \"sse_movlhps_exp\"\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"\")\n \t(vec_select:V4SF\n \t  (vec_concat:V8SF\n@@ -2036,7 +2036,7 @@\n   \"TARGET_SSE\"\n   \"ix86_fixup_binary_operands (UNKNOWN, V4SFmode, operands);\")\n \n-(define_insn \"*sse_movlhps\"\n+(define_insn \"sse_movlhps\"\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\"     \"=x,x,o\")\n \t(vec_select:V4SF\n \t  (vec_concat:V8SF\n@@ -2167,7 +2167,7 @@\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])\n \n-(define_expand \"sse_loadhps\"\n+(define_expand \"sse_loadhps_exp\"\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"\")\n \t(vec_concat:V4SF\n \t  (vec_select:V2SF\n@@ -2177,7 +2177,7 @@\n   \"TARGET_SSE\"\n   \"ix86_fixup_binary_operands (UNKNOWN, V4SFmode, operands);\")\n \n-(define_insn \"*sse_loadhps\"\n+(define_insn \"sse_loadhps\"\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"=x,x,o\")\n \t(vec_concat:V4SF\n \t  (vec_select:V2SF\n@@ -2205,7 +2205,7 @@\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])\n \n-(define_expand \"sse_loadlps\"\n+(define_expand \"sse_loadlps_exp\"\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"\")\n \t(vec_concat:V4SF\n \t  (match_operand:V2SF 2 \"nonimmediate_operand\" \"\")\n@@ -2215,7 +2215,7 @@\n   \"TARGET_SSE\"\n   \"ix86_fixup_binary_operands (UNKNOWN, V4SFmode, operands);\")\n \n-(define_insn \"*sse_loadlps\"\n+(define_insn \"sse_loadlps\"\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"=x,x,m\")\n \t(vec_concat:V4SF\n \t  (match_operand:V2SF 2 \"nonimmediate_operand\" \"0,m,x\")\n@@ -2421,7 +2421,7 @@\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n-(define_expand \"sse2_unpckhpd\"\n+(define_expand \"sse2_unpckhpd_exp\"\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\" \"\")\n \t(vec_select:V2DF\n \t  (vec_concat:V4DF\n@@ -2432,7 +2432,7 @@\n   \"TARGET_SSE2\"\n   \"ix86_fixup_binary_operands (UNKNOWN, V2DFmode, operands);\")\n \n-(define_insn \"*sse2_unpckhpd\"\n+(define_insn \"sse2_unpckhpd\"\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,m\")\n \t(vec_select:V2DF\n \t  (vec_concat:V4DF\n@@ -2480,7 +2480,7 @@\n   DONE;\n })\n \n-(define_expand \"sse2_unpcklpd\"\n+(define_expand \"sse2_unpcklpd_exp\"\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\" \"\")\n \t(vec_select:V2DF\n \t  (vec_concat:V4DF\n@@ -2491,7 +2491,7 @@\n   \"TARGET_SSE2\"\n   \"ix86_fixup_binary_operands (UNKNOWN, V2DFmode, operands);\")\n \n-(define_insn \"*sse2_unpcklpd\"\n+(define_insn \"sse2_unpcklpd\"\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,o\")\n \t(vec_select:V2DF\n \t  (vec_concat:V4DF\n@@ -2595,7 +2595,7 @@\n   DONE;\n })\n \n-(define_expand \"sse2_loadhpd\"\n+(define_expand \"sse2_loadhpd_exp\"\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\" \"\")\n \t(vec_concat:V2DF\n \t  (vec_select:DF\n@@ -2605,7 +2605,7 @@\n   \"TARGET_SSE2\"\n   \"ix86_fixup_binary_operands (UNKNOWN, V2DFmode, operands);\")\n \n-(define_insn \"*sse2_loadhpd\"\n+(define_insn \"sse2_loadhpd\"\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\"     \"=x,x,x,o\")\n \t(vec_concat:V2DF\n \t  (vec_select:DF\n@@ -2632,17 +2632,17 @@\n   operands[0] = adjust_address (operands[0], DFmode, 8);\n })\n \n-(define_expand \"sse2_loadlpd\"\n+(define_expand \"sse2_loadlpd_exp\"\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\" \"\")\n \t(vec_concat:V2DF\n \t  (match_operand:DF 2 \"nonimmediate_operand\" \"\")\n \t  (vec_select:DF\n-\t    (match_operand:V2DF 1 \"vector_move_operand\" \"\")\n+\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \"\")\n \t    (parallel [(const_int 1)]))))]\n   \"TARGET_SSE2\"\n   \"ix86_fixup_binary_operands (UNKNOWN, V2DFmode, operands);\")\n \n-(define_insn \"*sse2_loadlpd\"\n+(define_insn \"sse2_loadlpd\"\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\"    \"=x,x,x,x,x,m\")\n \t(vec_concat:V2DF\n \t  (match_operand:DF 2 \"nonimmediate_operand\"    \" m,m,x,0,0,x*fr\")"}]}