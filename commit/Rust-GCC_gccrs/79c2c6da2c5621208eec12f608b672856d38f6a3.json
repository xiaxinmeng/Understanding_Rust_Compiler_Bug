{"sha": "79c2c6da2c5621208eec12f608b672856d38f6a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzljMmM2ZGEyYzU2MjEyMDhlZWMxMmY2MDhiNjcyODU2ZDM4ZjZhMw==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-08-02T03:25:13Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-08-02T03:25:13Z"}, "message": "[multiple changes]\n\n2000-08-02  Bryce McKinlay  <bryce@albatross.co.nz>\n\n        * interpret.cc (_Jv_InterpMethod::continue1): Type of `fun' changed\n\tto match C declaration in ffi.h.\n\t* Makefile.am: Add java/awt/Button.java.\n\t* Makefile.in: Rebuilt.\n\n2000-07-29  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n        * java/lang/reflect/natMethod.cc (_Jv_CallAnyMethodA): Type of the\n        cast of the second argument to `ffi_raw_call' changed to match\n        prototype.\n\n2000-07-26  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n        * jni.cc (_Jv_JNIMethod::call): Type of the cast of the second\n        argument to `ffi_raw_call' changed to match prototype.\n\nFrom-SVN: r35418", "tree": {"sha": "556ab79d201319b851c2f2d9e51c1aa93043fd03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/556ab79d201319b851c2f2d9e51c1aa93043fd03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79c2c6da2c5621208eec12f608b672856d38f6a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79c2c6da2c5621208eec12f608b672856d38f6a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79c2c6da2c5621208eec12f608b672856d38f6a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79c2c6da2c5621208eec12f608b672856d38f6a3/comments", "author": null, "committer": null, "parents": [{"sha": "cb7c7fc50e8683bf42be3beac8dbaeca3f00a76b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb7c7fc50e8683bf42be3beac8dbaeca3f00a76b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb7c7fc50e8683bf42be3beac8dbaeca3f00a76b"}], "stats": {"total": 53, "additions": 37, "deletions": 16}, "files": [{"sha": "86536ad0df4f74aae1374defe1ed2b7f3a340541", "filename": "libjava/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c2c6da2c5621208eec12f608b672856d38f6a3/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c2c6da2c5621208eec12f608b672856d38f6a3/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=79c2c6da2c5621208eec12f608b672856d38f6a3", "patch": "@@ -1,3 +1,21 @@\n+2000-08-02  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+        * interpret.cc (_Jv_InterpMethod::continue1): Type of `fun' changed\n+\tto match C declaration in ffi.h.\n+\t* Makefile.am: Add java/awt/Button.java.\n+\t* Makefile.in: Rebuilt.\n+\n+2000-07-29  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+        * java/lang/reflect/natMethod.cc (_Jv_CallAnyMethodA): Type of the\n+        cast of the second argument to `ffi_raw_call' changed to match\n+        prototype.\n+\n+2000-07-26  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+        * jni.cc (_Jv_JNIMethod::call): Type of the cast of the second\n+        argument to `ffi_raw_call' changed to match prototype.\n+\n 2000-07-31  Bryce McKinlay  <bryce@albatross.co.nz>\n \n \t* java/awt/Component.java (toString): Implemented."}, {"sha": "8e3fbfd96c0b322d01e39ec8ab628eb98b589212", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c2c6da2c5621208eec12f608b672856d38f6a3/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c2c6da2c5621208eec12f608b672856d38f6a3/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=79c2c6da2c5621208eec12f608b672856d38f6a3", "patch": "@@ -494,6 +494,7 @@ java/awt/AWTEventMulticaster.java \\\n java/awt/AWTException.java \\\n java/awt/ActiveEvent.java \\\n java/awt/Adjustable.java \\\n+java/awt/Button.java \\\n java/awt/BorderLayout.java \\\n java/awt/CheckboxGroup.java \\\n java/awt/Color.java \\"}, {"sha": "6b1ac695fed3f634370f019e8f2c068480fe3f00", "filename": "libjava/Makefile.in", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c2c6da2c5621208eec12f608b672856d38f6a3/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c2c6da2c5621208eec12f608b672856d38f6a3/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=79c2c6da2c5621208eec12f608b672856d38f6a3", "patch": "@@ -270,6 +270,7 @@ java/awt/AWTEventMulticaster.java \\\n java/awt/AWTException.java \\\n java/awt/ActiveEvent.java \\\n java/awt/Adjustable.java \\\n+java/awt/Button.java \\\n java/awt/BorderLayout.java \\\n java/awt/CheckboxGroup.java \\\n java/awt/Color.java \\\n@@ -1048,14 +1049,15 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/awt/AWTError.P .deps/java/awt/AWTEvent.P \\\n .deps/java/awt/AWTEventMulticaster.P .deps/java/awt/AWTException.P \\\n .deps/java/awt/ActiveEvent.P .deps/java/awt/Adjustable.P \\\n-.deps/java/awt/BorderLayout.P .deps/java/awt/CheckboxGroup.P \\\n-.deps/java/awt/Color.P .deps/java/awt/Component.P \\\n-.deps/java/awt/ComponentOrientation.P .deps/java/awt/Container.P \\\n-.deps/java/awt/Cursor.P .deps/java/awt/Dimension.P \\\n-.deps/java/awt/Event.P .deps/java/awt/EventDispatchThread.P \\\n-.deps/java/awt/EventQueue.P .deps/java/awt/Font.P \\\n-.deps/java/awt/FontMetrics.P .deps/java/awt/Frame.P \\\n-.deps/java/awt/Graphics.P .deps/java/awt/GraphicsConfiguration.P \\\n+.deps/java/awt/BorderLayout.P .deps/java/awt/Button.P \\\n+.deps/java/awt/CheckboxGroup.P .deps/java/awt/Color.P \\\n+.deps/java/awt/Component.P .deps/java/awt/ComponentOrientation.P \\\n+.deps/java/awt/Container.P .deps/java/awt/Cursor.P \\\n+.deps/java/awt/Dimension.P .deps/java/awt/Event.P \\\n+.deps/java/awt/EventDispatchThread.P .deps/java/awt/EventQueue.P \\\n+.deps/java/awt/Font.P .deps/java/awt/FontMetrics.P \\\n+.deps/java/awt/Frame.P .deps/java/awt/Graphics.P \\\n+.deps/java/awt/GraphicsConfiguration.P \\\n .deps/java/awt/IllegalComponentStateException.P .deps/java/awt/Image.P \\\n .deps/java/awt/Insets.P .deps/java/awt/ItemSelectable.P \\\n .deps/java/awt/Label.P .deps/java/awt/LayoutManager.P \\"}, {"sha": "d6368d55480598a886a63ecb5eede8c7ab9cb5d1", "filename": "libjava/interpret.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c2c6da2c5621208eec12f608b672856d38f6a3/libjava%2Finterpret.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c2c6da2c5621208eec12f608b672856d38f6a3/libjava%2Finterpret.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret.cc?ref=79c2c6da2c5621208eec12f608b672856d38f6a3", "patch": "@@ -406,7 +406,7 @@ void _Jv_InterpMethod::continue1 (_Jv_InterpMethodInvocation *inv)\n   _Jv_word *pool_data   = defining_class->constants.data;\n   \n   /* these two are used in the invokeXXX instructions */\n-  void (*fun)(...);\n+  void (*fun)();\n   _Jv_ResolvedMethod* rmeth;\n \n #define INSN_LABEL(op) &&insn_##op\n@@ -684,13 +684,13 @@ void _Jv_InterpMethod::continue1 (_Jv_InterpMethodInvocation *inv)\n \t  {\n \t    // final methods do not appear in the vtable,\n \t    // if it does not appear in the superclass.\n-\t    fun = (void (*) (...)) rmeth->method->ncode;\n+\t    fun = (void (*)()) rmeth->method->ncode;\n \t  }\n \telse\n \t  {\n \t    jobject rcv = sp[0].o;\n \t    _Jv_VTable *table = *(_Jv_VTable**)rcv;\n-\t    fun = (void (*) (...))table->method[rmeth->vtable_index];\n+\t    fun = (void (*)()) table->method[rmeth->vtable_index];\n \t  }\n       }\n       goto perform_invoke;\n@@ -2149,7 +2149,7 @@ void _Jv_InterpMethod::continue1 (_Jv_InterpMethodInvocation *inv)\n \n \tNULLCHECK(sp[0]);\n \n-\tfun = (void (*) (...))rmeth->method->ncode;\n+\tfun = (void (*)()) rmeth->method->ncode;\n       }\n       goto perform_invoke;\n \n@@ -2163,7 +2163,7 @@ void _Jv_InterpMethod::continue1 (_Jv_InterpMethodInvocation *inv)\n \tsp -= rmeth->stack_item_count;\n \n \t_Jv_InitClass (rmeth->klass);\n-\tfun = (void (*) (...))rmeth->method->ncode;\n+\tfun = (void (*)()) rmeth->method->ncode;\n       }\n       goto perform_invoke;\n \n@@ -2182,7 +2182,7 @@ void _Jv_InterpMethod::continue1 (_Jv_InterpMethodInvocation *inv)\n \n \tjobject rcv = sp[0].o;\n \n-\tfun = (void (*) (...))\n+\tfun = (void (*)())\n \t  _Jv_LookupInterfaceMethod (rcv->getClass (),\n \t\t\t\t     rmeth->method->name,\n \t\t\t\t     rmeth->method->signature);"}, {"sha": "b4d4e19160b8adbd7c9219aafd1b47607cff8e55", "filename": "libjava/java/lang/reflect/natMethod.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c2c6da2c5621208eec12f608b672856d38f6a3/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c2c6da2c5621208eec12f608b672856d38f6a3/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc?ref=79c2c6da2c5621208eec12f608b672856d38f6a3", "patch": "@@ -414,7 +414,7 @@ _Jv_CallAnyMethodA (jobject obj,\n \n   try\n     {\n-      ffi_call (&cif, (void (*) (...)) meth->ncode, result, values);\n+      ffi_call (&cif, (void (*)()) meth->ncode, result, values);\n     }\n   catch (Throwable *ex2)\n     {"}, {"sha": "db13cdfb1a3ff91989e9ab03608043b10e728911", "filename": "libjava/jni.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c2c6da2c5621208eec12f608b672856d38f6a3/libjava%2Fjni.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c2c6da2c5621208eec12f608b672856d38f6a3/libjava%2Fjni.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni.cc?ref=79c2c6da2c5621208eec12f608b672856d38f6a3", "patch": "@@ -1784,7 +1784,7 @@ _Jv_JNIMethod::call (ffi_cif *, void *ret, ffi_raw *args, void *__this)\n   memcpy (&real_args[offset], args, _this->args_raw_size);\n \n   // The actual call to the JNI function.\n-  ffi_raw_call (&_this->jni_cif, (void (*) (...)) _this->function,\n+  ffi_raw_call (&_this->jni_cif, (void (*)()) _this->function,\n \t\tret, real_args);\n \n   _Jv_JNI_PopSystemFrame (env);"}]}