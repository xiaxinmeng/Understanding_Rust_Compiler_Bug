{"sha": "93c63f32a2cb49679143f4b893343fcba6f59351", "node_id": "C_kwDOANBUbNoAKDkzYzYzZjMyYTJjYjQ5Njc5MTQzZjRiODkzMzQzZmNiYTZmNTkzNTE", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-09-06T17:01:04Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-25T15:07:21Z"}, "message": "[Ada] Make Declaration_Node return nondeclarations in fewer cases\n\ngcc/ada/\n\n\t* einfo-utils.adb (Declaration_Node): Avoid returning the\n\tfollowing node kinds: N_Assignment_Statement, N_Integer_Literal,\n\tN_Procedure_Call_Statement, N_Subtype_Indication, and\n\tN_Type_Conversion.  Assert that the result is in N_Is_Decl or\n\tempty.\n\t* gen_il-gen-gen_nodes.adb (N_Is_Decl): Modify to match the\n\tthings that Declaration_Node can return.", "tree": {"sha": "400595ed159056d7d9571d8844462873eb871f7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/400595ed159056d7d9571d8844462873eb871f7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93c63f32a2cb49679143f4b893343fcba6f59351", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93c63f32a2cb49679143f4b893343fcba6f59351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93c63f32a2cb49679143f4b893343fcba6f59351", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93c63f32a2cb49679143f4b893343fcba6f59351/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3a6a0a50af2dd257682289703b721ba1b7863ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3a6a0a50af2dd257682289703b721ba1b7863ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3a6a0a50af2dd257682289703b721ba1b7863ca"}], "stats": {"total": 43, "additions": 40, "deletions": 3}, "files": [{"sha": "763b646242894ee387106a76a0e0ada40a2d52ee", "filename": "gcc/ada/einfo-utils.adb", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c63f32a2cb49679143f4b893343fcba6f59351/gcc%2Fada%2Feinfo-utils.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c63f32a2cb49679143f4b893343fcba6f59351/gcc%2Fada%2Feinfo-utils.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo-utils.adb?ref=93c63f32a2cb49679143f4b893343fcba6f59351", "patch": "@@ -698,6 +698,30 @@ package body Einfo.Utils is\n          P := Empty;\n       end if;\n \n+      --  Declarations are sometimes removed by replacing them with other\n+      --  irrelevant nodes. For example, a declare expression can be turned\n+      --  into a literal by constant folding. In these cases we want to\n+      --  return Empty.\n+\n+      if Nkind (P) in\n+          N_Assignment_Statement\n+        | N_Integer_Literal\n+        | N_Procedure_Call_Statement\n+        | N_Subtype_Indication\n+        | N_Type_Conversion\n+      then\n+         P := Empty;\n+      end if;\n+\n+      --  The following Assert indicates what kinds of nodes can be returned;\n+      --  they are not all \"declarations\".\n+\n+      if Serious_Errors_Detected = 0 then\n+         pragma Assert\n+           (Nkind (P) in N_Is_Decl | N_Empty,\n+            \"Declaration_Node incorrect kind: \" & Node_Kind'Image (Nkind (P)));\n+      end if;\n+\n       return P;\n    end Declaration_Node;\n "}, {"sha": "712577325a083e1ee661a4f136000c900686f7ae", "filename": "gcc/ada/gen_il-gen-gen_nodes.adb", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c63f32a2cb49679143f4b893343fcba6f59351/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c63f32a2cb49679143f4b893343fcba6f59351/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb?ref=93c63f32a2cb49679143f4b893343fcba6f59351", "patch": "@@ -1675,16 +1675,29 @@ begin -- Gen_IL.Gen.Gen_Nodes\n \n    Union (N_Is_Decl,\n           Children =>\n-            (N_Declaration,\n+            (N_Aggregate,\n+             N_Block_Statement,\n+             N_Declaration,\n              N_Discriminant_Specification,\n+             N_Entry_Index_Specification,\n              N_Enumeration_Type_Definition,\n              N_Exception_Handler,\n+             N_Explicit_Dereference,\n+             N_Expression_With_Actions,\n+             N_Extension_Aggregate,\n+             N_Identifier,\n+             N_Iterated_Component_Association,\n              N_Later_Decl_Item,\n+             N_Loop_Statement,\n+             N_Null_Statement,\n+             N_Number_Declaration,\n              N_Package_Specification,\n              N_Parameter_Specification,\n              N_Renaming_Declaration,\n-             N_Subprogram_Specification));\n-   --  Nodes that can be returned by Declaration_Node\n+             N_Quantified_Expression));\n+   --  Nodes that can be returned by Declaration_Node; it can also return\n+   --  Empty. Not all of these are true \"declarations\", but Declaration_Node\n+   --  can return them in some cases.\n \n    Union (N_Is_Range,\n           Children =>"}]}