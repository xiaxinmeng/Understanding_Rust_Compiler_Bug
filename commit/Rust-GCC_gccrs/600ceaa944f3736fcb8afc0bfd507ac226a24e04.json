{"sha": "600ceaa944f3736fcb8afc0bfd507ac226a24e04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAwY2VhYTk0NGYzNzM2ZmNiOGFmYzBiZmQ1MDdhYzIyNmEyNGUwNA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-10T16:02:37Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-10T16:02:37Z"}, "message": "Don't include string.h.\n\n(strcat, strcpy, strcmp, strncpy, strncmp): Decls deleted.\n(dupnstr): Don't use return value of strncpy.\n(dupstr): Function deleted; callers changed to use savestring.\n\nFrom-SVN: r4411", "tree": {"sha": "3cd08751fa563bce763a3adbb50c6a1b2d3a7092", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cd08751fa563bce763a3adbb50c6a1b2d3a7092"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/600ceaa944f3736fcb8afc0bfd507ac226a24e04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/600ceaa944f3736fcb8afc0bfd507ac226a24e04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/600ceaa944f3736fcb8afc0bfd507ac226a24e04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/600ceaa944f3736fcb8afc0bfd507ac226a24e04/comments", "author": null, "committer": null, "parents": [{"sha": "b2358eb12c5bde86168813302ab889c1d5739817", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2358eb12c5bde86168813302ab889c1d5739817", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2358eb12c5bde86168813302ab889c1d5739817"}], "stats": {"total": 24, "additions": 5, "deletions": 19}, "files": [{"sha": "910a6087c149af35c032c1b53f2200d6c0a1c7c4", "filename": "gcc/protoize.c", "status": "modified", "additions": 5, "deletions": 19, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/600ceaa944f3736fcb8afc0bfd507ac226a24e04/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/600ceaa944f3736fcb8afc0bfd507ac226a24e04/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=600ceaa944f3736fcb8afc0bfd507ac226a24e04", "patch": "@@ -118,7 +118,6 @@ typedef char * const_pointer_type;\n #include <unistd.h>\n #include <signal.h>\n #include <fcntl.h>\n-#include <string.h>\n \n #else /* !defined(POSIX) */\n \n@@ -166,15 +165,10 @@ extern int setjmp ();\n extern void longjmp ();\n #endif\n \n-extern char *   strcat ();\n-extern int      strcmp ();\n-extern char *   strcpy ();\n #if 0 /* size_t from sys/types.h may fail to match GCC.\n \t If so, we would get a warning from this.  */\n extern size_t   strlen ()\n #endif\n-extern int      strncmp ();\n-extern char *   strncpy ();\n extern char *   rindex ();\n \n /* Fork is not declared because the declaration caused a conflict\n@@ -678,15 +672,6 @@ fancy_abort ()\n   exit (1);\n }\n \f\n-/* Make a duplicate of a given string in a newly allocated area.  */\n-\n-static char *\n-dupstr (s)\n-     const char *s;\n-{\n-  return strcpy ((char *) xmalloc (strlen (s) + 1), s);\n-}\n-\n /* Make a duplicate of the first N bytes of a given string in a newly\n    allocated area.  */\n \n@@ -695,8 +680,9 @@ dupnstr (s, n)\n      const char *s;\n      size_t n;\n {\n-  char *ret_val = strncpy ((char *) xmalloc (n + 1), s, n);\n+  char *ret_val = (char *) xmalloc (n + 1);\n \n+  strncpy (ret_val, s, n);\n   ret_val[n] = '\\0';\n   return ret_val;\n }\n@@ -1035,7 +1021,7 @@ add_symbol (p, s)\n      const char *s;\n {\n   p->hash_next = NULL;\n-  p->symbol = dupstr (s);\n+  p->symbol = savestring (s);\n   p->ddip = NULL;\n   p->fip = NULL;\n   return p;\n@@ -1176,7 +1162,7 @@ continue_outer: ;\n   *copy_p++ = '\\n';\n   *copy_p++ = '\\0';\n \n-  return (got_unexpanded ? dupstr (line_buf) : 0);\n+  return (got_unexpanded ? savestring (line_buf) : 0);\n }\n \f\n /* Return the absolutized filename for the given relative\n@@ -1279,7 +1265,7 @@ abspath (cwd, rel_filename)\n   /* Make a copy (in the heap) of the stuff left in the absolutization\n      buffer and return a pointer to the copy.  */\n \n-  return dupstr (abs_buffer);\n+  return savestring (abs_buffer);\n }\n \f\n /* Given a filename (and possibly a directory name from which the filename"}]}