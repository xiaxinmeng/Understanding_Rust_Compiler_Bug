{"sha": "3c3f4265021e8940d6a57234b7f70b0dbbc05b3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MzZjQyNjUwMjFlODk0MGQ2YTU3MjM0YjdmNzBiMGRiYmMwNWIzYQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2008-05-06T17:06:54Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-05-06T17:06:54Z"}, "message": "re PR fortran/36117 (Use MPFR for bessel function (optimization, rejects valid F2008))\n\n2008-05-06  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/36117\n        * intrinsic.c (add_functions): Call gfc_simplify_bessel_*.\n        * intrinsic.h: Add prototypes for gfc_simplify_bessel_*.\n        * simplify.c (gfc_simplify_bessel_j0,gfc_simplify_bessel_j1,\n        gfc_simplify_bessel_jn,gfc_simplify_bessel_y0,\n        gfc_simplify_bessel_y1,gfc_simplify_bessel_yn): New.\n\n2008-05-06  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/36117\n        * gfortran.dg/bessel_2.f90: New.\n\nFrom-SVN: r134988", "tree": {"sha": "0de6d06ee3109c2ff08c4951bcfc68a150f4cb9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0de6d06ee3109c2ff08c4951bcfc68a150f4cb9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4317a2fa5139e7c4398e15213d73ad66e0f98c32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4317a2fa5139e7c4398e15213d73ad66e0f98c32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4317a2fa5139e7c4398e15213d73ad66e0f98c32"}], "stats": {"total": 185, "additions": 173, "deletions": 12}, "files": [{"sha": "83d3bcd8acfcaac46f77627b1f3dbce7071cc16d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3c3f4265021e8940d6a57234b7f70b0dbbc05b3a", "patch": "@@ -1,3 +1,12 @@\n+2008-05-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/36117\n+\t* intrinsic.c (add_functions): Call gfc_simplify_bessel_*.\n+\t* intrinsic.h: Add prototypes for gfc_simplify_bessel_*.\n+\t* simplify.c (gfc_simplify_bessel_j0,gfc_simplify_bessel_j1,\n+\tgfc_simplify_bessel_jn,gfc_simplify_bessel_y0,\n+\tgfc_simplify_bessel_y1,gfc_simplify_bessel_yn): New.\n+\n 2008-05-03  Janus Weil  <jaydub66@gmail.com>\n \n \t* misc.c (gfc_clear_ts): Set interface to NULL."}, {"sha": "f638127599721bd765c8e935ea4677ca7d8ef007", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=3c3f4265021e8940d6a57234b7f70b0dbbc05b3a", "patch": "@@ -1095,73 +1095,73 @@ add_functions (void)\n   \n   /* Bessel and Neumann functions for G77 compatibility.  */\n   add_sym_1 (\"besj0\", GFC_ISYM_J0, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_GNU,\n-\t     gfc_check_fn_r, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_r, gfc_simplify_bessel_j0, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dr, REQUIRED);\n \n   make_alias (\"bessel_j0\", GFC_STD_F2008);\n \n   add_sym_1 (\"dbesj0\", GFC_ISYM_J0, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dd, GFC_STD_GNU,\n-\t     gfc_check_fn_d, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_d, gfc_simplify_bessel_j0, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dd, REQUIRED);\n \n   make_generic (\"bessel_j0\", GFC_ISYM_J0, GFC_STD_F2008);\n \n   add_sym_1 (\"besj1\", GFC_ISYM_J1, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_GNU,\n-\t     gfc_check_fn_r, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_r, gfc_simplify_bessel_j1, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dr, REQUIRED);\n \n   make_alias (\"bessel_j1\", GFC_STD_F2008);\n \n   add_sym_1 (\"dbesj1\", GFC_ISYM_J1, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dd, GFC_STD_GNU,\n-\t     gfc_check_fn_d, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_d, gfc_simplify_bessel_j1, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dd, REQUIRED);\n \n   make_generic (\"bessel_j1\", GFC_ISYM_J1, GFC_STD_F2008);\n \n   add_sym_2 (\"besjn\", GFC_ISYM_JN, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_GNU,\n-\t     gfc_check_besn, NULL, gfc_resolve_besn,\n+\t     gfc_check_besn, gfc_simplify_bessel_jn, gfc_resolve_besn,\n \t     n, BT_INTEGER, di, REQUIRED, x, BT_REAL, dr, REQUIRED);\n \n   make_alias (\"bessel_jn\", GFC_STD_F2008);\n \n   add_sym_2 (\"dbesjn\", GFC_ISYM_JN, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dd, GFC_STD_GNU,\n-\t     gfc_check_besn, NULL, gfc_resolve_besn,\n+\t     gfc_check_besn, gfc_simplify_bessel_jn, gfc_resolve_besn,\n \t     n, BT_INTEGER, di, REQUIRED, x, BT_REAL, dd, REQUIRED);\n \n   make_generic (\"bessel_jn\", GFC_ISYM_JN, GFC_STD_F2008);\n \n   add_sym_1 (\"besy0\", GFC_ISYM_Y0, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_GNU,\n-\t     gfc_check_fn_r, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_r, gfc_simplify_bessel_y0, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dr, REQUIRED);\n \n   make_alias (\"bessel_y0\", GFC_STD_F2008);\n \n   add_sym_1 (\"dbesy0\", GFC_ISYM_Y0, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dd, GFC_STD_GNU,\n-\t     gfc_check_fn_d, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_d, gfc_simplify_bessel_y0, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dd, REQUIRED);\n \n   make_generic (\"bessel_y0\", GFC_ISYM_Y0, GFC_STD_F2008);\n \n   add_sym_1 (\"besy1\", GFC_ISYM_Y1, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_GNU,\n-\t     gfc_check_fn_r, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_r, gfc_simplify_bessel_y1, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dr, REQUIRED);\n \n   make_alias (\"bessel_y1\", GFC_STD_F2008);\n \n   add_sym_1 (\"dbesy1\", GFC_ISYM_Y1, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dd, GFC_STD_GNU,\n-\t     gfc_check_fn_d, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_d, gfc_simplify_bessel_y1, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dd, REQUIRED);\n \n   make_generic (\"bessel_y1\", GFC_ISYM_Y1, GFC_STD_F2008);\n \n   add_sym_2 (\"besyn\", GFC_ISYM_YN, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_GNU,\n-\t     gfc_check_besn, NULL, gfc_resolve_besn,\n+\t     gfc_check_besn, gfc_simplify_bessel_yn, gfc_resolve_besn,\n \t     n, BT_INTEGER, di, REQUIRED, x, BT_REAL, dr, REQUIRED);\n \n   make_alias (\"bessel_yn\", GFC_STD_F2008);\n \n   add_sym_2 (\"dbesyn\", GFC_ISYM_YN, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dd, GFC_STD_GNU,\n-\t     gfc_check_besn, NULL, gfc_resolve_besn,\n+\t     gfc_check_besn, gfc_simplify_bessel_yn, gfc_resolve_besn,\n \t     n, BT_INTEGER, di, REQUIRED, x, BT_REAL, dd, REQUIRED);\n \n   make_generic (\"bessel_yn\", GFC_ISYM_YN, GFC_STD_F2008);"}, {"sha": "ac996b62a57b5bfccb9ebaada22a1c0fd81448c2", "filename": "gcc/fortran/intrinsic.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a/gcc%2Ffortran%2Fintrinsic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a/gcc%2Ffortran%2Fintrinsic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.h?ref=3c3f4265021e8940d6a57234b7f70b0dbbc05b3a", "patch": "@@ -208,6 +208,12 @@ gfc_expr *gfc_simplify_asinh (gfc_expr *);\n gfc_expr *gfc_simplify_atan (gfc_expr *);\n gfc_expr *gfc_simplify_atanh (gfc_expr *);\n gfc_expr *gfc_simplify_atan2 (gfc_expr *, gfc_expr *);\n+gfc_expr *gfc_simplify_bessel_j0 (gfc_expr *);\n+gfc_expr *gfc_simplify_bessel_j1 (gfc_expr *);\n+gfc_expr *gfc_simplify_bessel_jn (gfc_expr *, gfc_expr *);\n+gfc_expr *gfc_simplify_bessel_y0 (gfc_expr *);\n+gfc_expr *gfc_simplify_bessel_y1 (gfc_expr *);\n+gfc_expr *gfc_simplify_bessel_yn (gfc_expr *, gfc_expr *);\n gfc_expr *gfc_simplify_bit_size (gfc_expr *);\n gfc_expr *gfc_simplify_btest (gfc_expr *, gfc_expr *);\n gfc_expr *gfc_simplify_ceiling (gfc_expr *, gfc_expr *);"}, {"sha": "bf9e00a92821e0fc403fd656ced82af34b4c57e6", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 124, "deletions": 0, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=3c3f4265021e8940d6a57234b7f70b0dbbc05b3a", "patch": "@@ -636,6 +636,130 @@ gfc_simplify_atan2 (gfc_expr *y, gfc_expr *x)\n }\n \n \n+gfc_expr *\n+gfc_simplify_bessel_j0 (gfc_expr *x)\n+{\n+#if MPFR_VERSION >= MPFR_VERSION_NUM(2,3,0)\n+  gfc_expr *result;\n+\n+  if (x->expr_type != EXPR_CONSTANT)\n+    return NULL;\n+\n+  result = gfc_constant_result (x->ts.type, x->ts.kind, &x->where);\n+  gfc_set_model_kind (x->ts.kind);\n+  mpfr_j0 (result->value.real, x->value.real, GFC_RND_MODE);\n+\n+  return range_check (result, \"BESSEL_J0\");\n+#else\n+  return NULL;\n+#endif\n+}\n+\n+\n+gfc_expr *\n+gfc_simplify_bessel_j1 (gfc_expr *x)\n+{\n+#if MPFR_VERSION >= MPFR_VERSION_NUM(2,3,0)\n+  gfc_expr *result;\n+\n+  if (x->expr_type != EXPR_CONSTANT)\n+    return NULL;\n+\n+  result = gfc_constant_result (x->ts.type, x->ts.kind, &x->where);\n+  gfc_set_model_kind (x->ts.kind);\n+  mpfr_j1 (result->value.real, x->value.real, GFC_RND_MODE);\n+\n+  return range_check (result, \"BESSEL_J1\");\n+#else\n+  return NULL;\n+#endif\n+}\n+\n+\n+gfc_expr *\n+gfc_simplify_bessel_jn (gfc_expr *order, gfc_expr *x)\n+{\n+#if MPFR_VERSION >= MPFR_VERSION_NUM(2,3,0)\n+  gfc_expr *result;\n+  long n;\n+\n+  if (x->expr_type != EXPR_CONSTANT || order->expr_type != EXPR_CONSTANT)\n+    return NULL;\n+\n+  n = mpz_get_si (order->value.integer);\n+  result = gfc_constant_result (x->ts.type, x->ts.kind, &x->where);\n+  gfc_set_model_kind (x->ts.kind);\n+  mpfr_jn (result->value.real, n, x->value.real, GFC_RND_MODE);\n+\n+  return range_check (result, \"BESSEL_JN\");\n+#else\n+  return NULL;\n+#endif\n+}\n+\n+\n+gfc_expr *\n+gfc_simplify_bessel_y0 (gfc_expr *x)\n+{\n+#if MPFR_VERSION >= MPFR_VERSION_NUM(2,3,0)\n+  gfc_expr *result;\n+\n+  if (x->expr_type != EXPR_CONSTANT)\n+    return NULL;\n+\n+  result = gfc_constant_result (x->ts.type, x->ts.kind, &x->where);\n+  gfc_set_model_kind (x->ts.kind);\n+  mpfr_y0 (result->value.real, x->value.real, GFC_RND_MODE);\n+\n+  return range_check (result, \"BESSEL_Y0\");\n+#else\n+  return NULL;\n+#endif\n+}\n+\n+\n+gfc_expr *\n+gfc_simplify_bessel_y1 (gfc_expr *x)\n+{\n+#if MPFR_VERSION >= MPFR_VERSION_NUM(2,3,0)\n+  gfc_expr *result;\n+\n+  if (x->expr_type != EXPR_CONSTANT)\n+    return NULL;\n+\n+  result = gfc_constant_result (x->ts.type, x->ts.kind, &x->where);\n+  gfc_set_model_kind (x->ts.kind);\n+  mpfr_y1 (result->value.real, x->value.real, GFC_RND_MODE);\n+\n+  return range_check (result, \"BESSEL_Y1\");\n+#else\n+  return NULL;\n+#endif\n+}\n+\n+\n+gfc_expr *\n+gfc_simplify_bessel_yn (gfc_expr *order, gfc_expr *x)\n+{\n+#if MPFR_VERSION >= MPFR_VERSION_NUM(2,3,0)\n+  gfc_expr *result;\n+  long n;\n+\n+  if (x->expr_type != EXPR_CONSTANT || order->expr_type != EXPR_CONSTANT)\n+    return NULL;\n+\n+  n = mpz_get_si (order->value.integer);\n+  result = gfc_constant_result (x->ts.type, x->ts.kind, &x->where);\n+  gfc_set_model_kind (x->ts.kind);\n+  mpfr_yn (result->value.real, n, x->value.real, GFC_RND_MODE);\n+\n+  return range_check (result, \"BESSEL_YN\");\n+#else\n+  return NULL;\n+#endif\n+}\n+\n+\n gfc_expr *\n gfc_simplify_bit_size (gfc_expr *e)\n {"}, {"sha": "e5bf09b744e0db67af5f279b5169595fd2ed5cbd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c3f4265021e8940d6a57234b7f70b0dbbc05b3a", "patch": "@@ -1,3 +1,8 @@\n+2008-05-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/36117\n+\t* gfortran.dg/bessel_2.f90: New.\n+\n 2008-05-06  Olivier Hainque  <hainque@adacore.com>\n \n \t* gnat.dg/fatp_sra.adb: New test."}, {"sha": "3b4c2e2e4ee67e26866129f257992e6dfbc8501f", "filename": "gcc/testsuite/gfortran.dg/bessel_2.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a/gcc%2Ftestsuite%2Fgfortran.dg%2Fbessel_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c3f4265021e8940d6a57234b7f70b0dbbc05b3a/gcc%2Ftestsuite%2Fgfortran.dg%2Fbessel_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbessel_2.f90?ref=3c3f4265021e8940d6a57234b7f70b0dbbc05b3a", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+! PR fortran/36117\n+!\n+! This program will fail for MPFR < 2.3.0\n+!\n+! Based on a test by James Van Buskirk.\n+!\n+program bug3\n+   implicit none\n+   real, parameter :: Qarg1 = 1.7\n+   integer, parameter :: k2 = kind(BESJ0(Qarg1))\n+   integer, parameter :: is_int = 1-1/(2+0*BESJ0(Qarg1))*2\n+   integer, parameter :: kind_if_real = &\n+      (1-is_int)*k2+is_int*kind(1.0)\n+   complex :: z = cmplx(0,1,kind_if_real) ! FAILS\n+   if (kind_if_real /= kind(Qarg1)) call abort ()\n+end program bug3"}]}