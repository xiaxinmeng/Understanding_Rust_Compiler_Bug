{"sha": "fb246154cdeb518b8e8a584032afbda4d381a03b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIyNDYxNTRjZGViNTE4YjhlOGE1ODQwMzJhZmJkYTRkMzgxYTAzYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-01-25T18:22:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-07T09:28:55Z"}, "message": "[Ada] Raise Constraint_Error for Compose and Scaling if Machine_Overflows\n\ngcc/ada/\n\n\t* libgnat/s-fatgen.adb (Scaling): Raise Constraint_Error in the\n\toverflow case when T'Machine_Overflows is True.", "tree": {"sha": "34efcaafc88ca938eb12f6ba38381c2c8cefbfbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34efcaafc88ca938eb12f6ba38381c2c8cefbfbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb246154cdeb518b8e8a584032afbda4d381a03b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb246154cdeb518b8e8a584032afbda4d381a03b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb246154cdeb518b8e8a584032afbda4d381a03b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb246154cdeb518b8e8a584032afbda4d381a03b/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e1e07728074a7162c8173abd10bc32e814ea254", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e1e07728074a7162c8173abd10bc32e814ea254", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e1e07728074a7162c8173abd10bc32e814ea254"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "e591ccad6c4bd4f9f95a75b842acb33346aad1c0", "filename": "gcc/ada/libgnat/s-fatgen.adb", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb246154cdeb518b8e8a584032afbda4d381a03b/gcc%2Fada%2Flibgnat%2Fs-fatgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb246154cdeb518b8e8a584032afbda4d381a03b/gcc%2Fada%2Flibgnat%2Fs-fatgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-fatgen.adb?ref=fb246154cdeb518b8e8a584032afbda4d381a03b", "patch": "@@ -771,12 +771,19 @@ package body System.Fat_Gen is\n          --  Check for overflow\n \n          if Adjustment > IEEE_Emax - Exp then\n-            XX := 0.0;\n-            return (if Minus then -1.0 / XX else 1.0 / XX);\n-            pragma Annotate\n-              (CodePeer, Intentional, \"overflow check\", \"Infinity produced\");\n-            pragma Annotate\n-              (CodePeer, Intentional, \"divide by zero\", \"Infinity produced\");\n+            --  Optionally raise Constraint_Error as per RM A.5.3(29)\n+\n+            if T'Machine_Overflows then\n+               raise Constraint_Error with \"Too large exponent\";\n+\n+            else\n+               XX := 0.0;\n+               return (if Minus then -1.0 / XX else 1.0 / XX);\n+               pragma Annotate (CodePeer, Intentional, \"overflow check\",\n+                                \"Infinity produced\");\n+               pragma Annotate (CodePeer, Intentional, \"divide by zero\",\n+                                \"Infinity produced\");\n+            end if;\n \n          --  Check for underflow\n "}]}