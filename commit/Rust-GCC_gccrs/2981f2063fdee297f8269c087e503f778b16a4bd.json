{"sha": "2981f2063fdee297f8269c087e503f778b16a4bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk4MWYyMDYzZmRlZTI5N2Y4MjY5YzA4N2U1MDNmNzc4YjE2YTRiZA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain.sandoe@sandoe-acoustics.co.uk", "date": "2010-03-31T15:47:42Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2010-03-31T15:47:42Z"}, "message": "re PR objc++/23613 (obj-c++.dg/isa-field-1.mm fails with the GNU runtime)\n\n2010-03-31  Iain Sandoe  <iain.sandoe@sandoe-acoustics.co.uk>\n\n\tPR objc++/23613\n\t* gcc/testsuite/objc-obj-c++-shared/next-mapping.h (CLASSPTRFIELD):\n\tNew macro.\n\t* gcc/testsuite/obj-c++.dg/isa-field-1.mm: Use new CLASSPTRFIELD macro.\n\tRemove dg-xfail-if.\n\nFrom-SVN: r157872", "tree": {"sha": "b273c788148c6c80d8973589a9462cfc449e1c2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b273c788148c6c80d8973589a9462cfc449e1c2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2981f2063fdee297f8269c087e503f778b16a4bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2981f2063fdee297f8269c087e503f778b16a4bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2981f2063fdee297f8269c087e503f778b16a4bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2981f2063fdee297f8269c087e503f778b16a4bd/comments", "author": null, "committer": null, "parents": [{"sha": "290d8971e6e3b784a88b5c4b6b91b8d77552cb3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/290d8971e6e3b784a88b5c4b6b91b8d77552cb3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/290d8971e6e3b784a88b5c4b6b91b8d77552cb3a"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "ed8cdfc83c7e6b94d6862ed792750a6e5141194b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2981f2063fdee297f8269c087e503f778b16a4bd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2981f2063fdee297f8269c087e503f778b16a4bd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2981f2063fdee297f8269c087e503f778b16a4bd", "patch": "@@ -1,3 +1,11 @@\n+2010-03-31  Iain Sandoe  <iain.sandoe@sandoe-acoustics.co.uk>\n+\n+\tPR objc++/23613\n+\t* gcc/testsuite/objc-obj-c++-shared/next-mapping.h (CLASSPTRFIELD):\n+\tNew macro.\n+\t* gcc/testsuite/obj-c++.dg/isa-field-1.mm: Use new CLASSPTRFIELD macro.\n+\tRemove dg-xfail-if.\n+\n 2010-03-31  Martin Jambor  <mjambor@suse.cz>\n \n \t* gcc.dg/guality/inline-params.c: Disable early inlining.  Xfail run"}, {"sha": "4b93df8c485554389b89b2da680ff958a12ad03f", "filename": "gcc/testsuite/obj-c++.dg/isa-field-1.mm", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2981f2063fdee297f8269c087e503f778b16a4bd/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fisa-field-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2981f2063fdee297f8269c087e503f778b16a4bd/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fisa-field-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fisa-field-1.mm?ref=2981f2063fdee297f8269c087e503f778b16a4bd", "patch": "@@ -1,8 +1,10 @@\n-/* Ensure there are no bizarre difficulties with accessing the 'isa' field of objects.  */\n+/* Ensure there are no bizarre difficulties with accessing the 'isa' field of\n+  objects.  This field is named differently between GNU and NeXT runtimes so\n+  accessed via the CLASSPTRFIELD() macro defined in next-mapping.h */\n /* { dg-do compile } */\n-/* { dg-xfail-if \"PR23613\" { \"*-*-*\" } { \"*\" } { \"\" } } */\n \n #include \"../objc-obj-c++-shared/Object1.h\"\n+#include \"../objc-obj-c++-shared/next-mapping.h\"\n \n @interface Object (Test)\n - (Class) test1: (id)object;\n@@ -15,11 +17,11 @@ - (Class) test2: (id)object;\n @implementation Object (Test)\n \n Class test1(id object) {\n-  Class cls = object->isa;\n+  Class cls = CLASSPTRFIELD(object);\n   return cls;\n }\n - (Class) test1: (id)object {\n-  Class cls = object->isa;\n+  Class cls = CLASSPTRFIELD(object);\n   return cls;\n }\n \n@@ -28,18 +30,18 @@ - (Class) test1: (id)object {\n @implementation Derived\n \n Class test2(id object) {\n-  Class cls = object->isa;\n+  Class cls = CLASSPTRFIELD(object);\n   return cls;\n }\n - (Class) test2: (id)object {\n-  Class cls = object->isa;\n+  Class cls = CLASSPTRFIELD(object);\n   return cls;\n }\n \n @end\n \n Class test3(id object) {\n-  Class cls = object->isa;\n+  Class cls = CLASSPTRFIELD(object);\n   return cls;\n }\n #include \"../objc-obj-c++-shared/Object1-implementation.h\""}, {"sha": "b52b6a786896c8e9b75a0cc53a2d83b3b2edf0ab", "filename": "gcc/testsuite/objc-obj-c++-shared/next-mapping.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2981f2063fdee297f8269c087e503f778b16a4bd/gcc%2Ftestsuite%2Fobjc-obj-c%2B%2B-shared%2Fnext-mapping.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2981f2063fdee297f8269c087e503f778b16a4bd/gcc%2Ftestsuite%2Fobjc-obj-c%2B%2B-shared%2Fnext-mapping.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc-obj-c%2B%2B-shared%2Fnext-mapping.h?ref=2981f2063fdee297f8269c087e503f778b16a4bd", "patch": "@@ -5,7 +5,11 @@\n /*\t    David Ayers <d.ayers@inode.at>  */\n /* Darwin 64bit/OBJC2 modifications Iain Sandoe */ \n \n-#ifdef __NEXT_RUNTIME__\n+#ifndef __NEXT_RUNTIME__\n+\n+#define CLASSPTRFIELD(x) (x)->class_pointer\n+\n+#else\n /* Includes next-abi.h to set NEXT_OBJC_USE_NEW_INTERFACE etc.*/\n #ifndef _OBJC_OBJECT1_H_\n #include \"Object1.h\"\n@@ -23,6 +27,8 @@\n #define class_create_instance(C) class_createInstance(C, 0)\n #define\tclass_get_class_name(C) object_getClassName(C)\n \n+#define CLASSPTRFIELD(x) (x)->isa\n+\n #ifdef NEXT_OBJC_USE_NEW_INTERFACE\n #  define object_class_name(O) (object_getClassName(O)) \n #  define object_get_class(O) (object_getClass((id)O))"}]}