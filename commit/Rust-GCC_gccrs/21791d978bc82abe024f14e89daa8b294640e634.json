{"sha": "21791d978bc82abe024f14e89daa8b294640e634", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE3OTFkOTc4YmM4MmFiZTAyNGYxNGU4OWRhYThiMjk0NjQwZTYzNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-09T10:36:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-07-09T10:36:42Z"}, "message": "[multiple changes]\n\n2012-07-09  Vincent Celier  <celier@adacore.com>\n\n\t* lib-writ.ads: Add documentation for the Z lines (implicitly\n\twithed units) and Y lines (limited withed units).\n\n2012-07-09  Robert Dewar  <dewar@adacore.com>\n\n\t* lib.ads, exp_attr.adb, exp_ch9.adb, sem_dim.adb, sem_ch9.adb,\n\tsem_prag.adb, sem_ch12.adb, mlib-utl.adb, freeze.adb, sem_res.adb,\n\tsem_attr.adb, sem_case.adb, gnatlink.adb, exp_ch4.adb, sem_ch6.adb,\n\tsem_elim.adb, s-dimmks.ads, sem_ch13.adb: Minor code clean ups.\n\n2012-07-09  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* gnat_ugn.texi (Switches for gcc): Document -gnatn[12] only\n\tlightly in the summary and more thoroughly in inlining section.\n\t(Performance Considerations): Document -gnatn[12] in inlining\n\tsection.\n\n2012-07-09  Tristan Gingold  <gingold@adacore.com>\n\n\t* a-exexpr-gcc.adb (Unhandled_Except_Handler): New procedure.\n\t(Unhandled_Others_Value): New const.\n\t* raise-gcc.c (GNAT_UNHANDLED_OTHERS): Define.\n\t(action_descriptor): Remove ttype_entry.\n\t(get_action_description_for): Do not assign ttype_entry.\n\t(is_handled_by): Consider GNAT_UNHANDLED_OTHERS.\n\nFrom-SVN: r189367", "tree": {"sha": "d2e9bd8a5faa86e9021f0ad569650516d8108c88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2e9bd8a5faa86e9021f0ad569650516d8108c88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21791d978bc82abe024f14e89daa8b294640e634", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21791d978bc82abe024f14e89daa8b294640e634", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21791d978bc82abe024f14e89daa8b294640e634", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21791d978bc82abe024f14e89daa8b294640e634/comments", "author": null, "committer": null, "parents": [{"sha": "e714561a2fab73a2592aed0418a00b0c906c0711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e714561a2fab73a2592aed0418a00b0c906c0711", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e714561a2fab73a2592aed0418a00b0c906c0711"}], "stats": {"total": 441, "additions": 256, "deletions": 185}, "files": [{"sha": "555ac56796931cff4f343f885bcf989836960124", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -1,3 +1,31 @@\n+2012-07-09  Vincent Celier  <celier@adacore.com>\n+\n+\t* lib-writ.ads: Add documentation for the Z lines (implicitly\n+\twithed units) and Y lines (limited withed units).\n+\n+2012-07-09  Robert Dewar  <dewar@adacore.com>\n+\n+\t* lib.ads, exp_attr.adb, exp_ch9.adb, sem_dim.adb, sem_ch9.adb,\n+\tsem_prag.adb, sem_ch12.adb, mlib-utl.adb, freeze.adb, sem_res.adb,\n+\tsem_attr.adb, sem_case.adb, gnatlink.adb, exp_ch4.adb, sem_ch6.adb,\n+\tsem_elim.adb, s-dimmks.ads, sem_ch13.adb: Minor code clean ups.\n+\n+2012-07-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat_ugn.texi (Switches for gcc): Document -gnatn[12] only\n+\tlightly in the summary and more thoroughly in inlining section.\n+\t(Performance Considerations): Document -gnatn[12] in inlining\n+\tsection.\n+\n+2012-07-09  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* a-exexpr-gcc.adb (Unhandled_Except_Handler): New procedure.\n+\t(Unhandled_Others_Value): New const.\n+\t* raise-gcc.c (GNAT_UNHANDLED_OTHERS): Define.\n+\t(action_descriptor): Remove ttype_entry.\n+\t(get_action_description_for): Do not assign ttype_entry.\n+\t(is_handled_by): Consider GNAT_UNHANDLED_OTHERS.\n+\n 2012-07-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (Call_to_gnu): Robustify test for function case"}, {"sha": "014b48f84bb5b0b7829d7c8dfa4e1bc7610142d7", "filename": "gcc/ada/a-exexpr-gcc.adb", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fa-exexpr-gcc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fa-exexpr-gcc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexpr-gcc.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -205,6 +205,15 @@ package body Exception_Propagation is\n    pragma Export (C, Setup_Current_Excep, \"__gnat_setup_current_excep\");\n    --  Write Get_Current_Excep.all from GCC_Exception\n \n+   procedure Unhandled_Except_Handler\n+     (GCC_Exception : not null GCC_Exception_Access);\n+   pragma No_Return (Unhandled_Except_Handler);\n+   pragma Export (C, Unhandled_Except_Handler,\n+                  \"__gnat_unhandled_except_handler\");\n+   --  Called for handle unhandled exceptions, ie the last chance handler\n+   --  on platforms (such as SEH) that never returns after throwing an\n+   --  exception. Called directly by gigi.\n+\n    function CleanupUnwind_Handler\n      (UW_Version   : Integer;\n       UW_Phases    : Unwind_Action;\n@@ -280,6 +289,12 @@ package body Exception_Propagation is\n    All_Others_Value : constant Integer := 16#7FFF#;\n    pragma Export (C, All_Others_Value, \"__gnat_all_others_value\");\n \n+   Unhandled_Others_Value : constant Integer := 16#7FFF#;\n+   pragma Export (C, Unhandled_Others_Value, \"__gnat_unhandled_others_value\");\n+   --  Special choice (emitted by gigi) to catch and notify unhandled\n+   --  exceptions on targets which always handle exceptions (such as SEH).\n+   --  The handler will simply call Unhandled_Except_Handler.\n+\n    --------------------------------\n    -- GNAT_GCC_Exception_Cleanup --\n    --------------------------------\n@@ -319,8 +334,7 @@ package body Exception_Propagation is\n       --  Terminate when the end of the stack is reached\n \n       if UW_Phases >= UA_END_OF_STACK then\n-         Setup_Current_Excep (UW_Exception);\n-         Unhandled_Exception_Terminate;\n+         Unhandled_Except_Handler (UW_Exception);\n       end if;\n \n       --  We know there is at least one cleanup further up. Return so that it\n@@ -438,9 +452,20 @@ package body Exception_Propagation is\n       --  We get here in case of error. The debugger has been notified before\n       --  the second step above.\n \n+      Unhandled_Except_Handler (GCC_Exception);\n+   end Propagate_GCC_Exception;\n+\n+   ------------------------------\n+   -- Unhandled_Except_Handler --\n+   ------------------------------\n+\n+   procedure Unhandled_Except_Handler\n+     (GCC_Exception : not null GCC_Exception_Access)\n+   is\n+   begin\n       Setup_Current_Excep (GCC_Exception);\n       Unhandled_Exception_Terminate;\n-   end Propagate_GCC_Exception;\n+   end Unhandled_Except_Handler;\n \n    -------------------------\n    -- Propagate_Exception --"}, {"sha": "ad75f90556c8884ded79edefb1851079be3d352e", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -3072,19 +3072,9 @@ package body Exp_Attr is\n       --  Rewrite the attribute reference with the value of Uses_Lock_Free\n \n       when Attribute_Lock_Free => Lock_Free : declare\n-         Val : Entity_Id;\n-\n+         V : constant Entity_Id := Boolean_Literals (Uses_Lock_Free (Ptyp));\n       begin\n-         if Uses_Lock_Free (Ptyp) then\n-            Val := Standard_True;\n-\n-         else\n-            Val := Standard_False;\n-         end if;\n-\n-         Rewrite (N,\n-           New_Occurrence_Of (Val, Loc));\n-\n+         Rewrite (N, New_Occurrence_Of (V, Loc));\n          Analyze_And_Resolve (N, Standard_Boolean);\n       end Lock_Free;\n "}, {"sha": "76f5a971340ef53d2642d2be72654ee32e548bc8", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -11327,12 +11327,7 @@ package body Exp_Ch4 is\n \n             if AV = False then\n                if True_Result or False_Result then\n-                  if True_Result then\n-                     Result := Standard_True;\n-                  else\n-                     Result := Standard_False;\n-                  end if;\n-\n+                  Result := Boolean_Literals (True_Result);\n                   Rewrite (N,\n                     Convert_To (Typ,\n                       New_Occurrence_Of (Result, Sloc (N))));"}, {"sha": "e95db7717984fe1645f932e371c587aac5837c6a", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -13955,13 +13955,10 @@ package body Exp_Ch9 is\n       --  will allocate an array to hold the string names of task entries.\n \n       if not Restricted_Profile then\n-         if Has_Entries (Ttyp)\n-           and then Entry_Names_OK\n-         then\n-            Append_To (Args, New_Reference_To (Standard_True, Loc));\n-         else\n-            Append_To (Args, New_Reference_To (Standard_False, Loc));\n-         end if;\n+         Append_To (Args,\n+           New_Reference_To\n+             (Boolean_Literals (Has_Entries (Ttyp) and then Entry_Names_OK),\n+              Loc));\n       end if;\n \n       if Restricted_Profile then"}, {"sha": "350a1b00b5c82c5bafbad4b8f4dae98006926852", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -4697,16 +4697,17 @@ package body Freeze is\n          else\n             Id := Defining_Unit_Name (Specification (P));\n \n+            --  Following complex conditional could use comments ???\n+\n             if Nkind (Id) = N_Defining_Identifier\n-              and then (Is_Init_Proc (Id)                    or else\n-                        Is_TSS (Id, TSS_Stream_Input)        or else\n-                        Is_TSS (Id, TSS_Stream_Output)       or else\n-                        Is_TSS (Id, TSS_Stream_Read)         or else\n-                        Is_TSS (Id, TSS_Stream_Write)        or else\n-                        Nkind (Original_Node (P)) =\n-                          N_Subprogram_Renaming_Declaration  or else\n-                        Nkind (Original_Node (P)) =\n-                          N_Expression_Function)\n+              and then (Is_Init_Proc (Id)\n+                         or else Is_TSS (Id, TSS_Stream_Input)\n+                         or else Is_TSS (Id, TSS_Stream_Output)\n+                         or else Is_TSS (Id, TSS_Stream_Read)\n+                         or else Is_TSS (Id, TSS_Stream_Write)\n+                         or else Nkind_In (Original_Node (P),\n+                                           N_Subprogram_Renaming_Declaration,\n+                                           N_Expression_Function))\n             then\n                return True;\n             else\n@@ -5122,7 +5123,7 @@ package body Freeze is\n             if not Is_Compilation_Unit (Current_Scope)\n               and then (Is_Record_Type (Scope (Current_Scope))\n                          or else Nkind (Parent (Current_Scope)) =\n-                                   N_Quantified_Expression)\n+                                                     N_Quantified_Expression)\n             then\n                Pos := Pos - 1;\n             end if;"}, {"sha": "0edaed0593483c009686877f26d262f500e09f55", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 28, "deletions": 20, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -4306,10 +4306,8 @@ means that no limit applies.\n @cindex @option{-gnatn} (@command{gcc})\n Activate inlining for subprograms for which pragma @code{Inline} is\n specified. This inlining is performed by the GCC back-end. An optional\n-digit sets the inlining level: 1 for moderate inlining across modules,\n-which is a good compromise between compilation times and performances\n-at run time, and 2 for full inlining across modules, which may bring\n-about longer compilation times. If no inlining level is specified,\n+digit sets the inlining level: 1 for moderate inlining across modules\n+or 2 for full inlining across modules. If no inlining level is specified,\n the compiler will pick it based on the optimization level.\n \n @item -gnatN\n@@ -7335,21 +7333,28 @@ For the source file naming rules, @xref{File Naming Rules}.\n \n @table @option\n @c !sort!\n-@item -gnatn\n+@item -gnatn[12]\n @cindex @option{-gnatn} (@command{gcc})\n @ifclear vms\n The @code{n} here is intended to suggest the first syllable of the\n word ``inline''.\n @end ifclear\n GNAT recognizes and processes @code{Inline} pragmas. However, for the\n-inlining to actually occur, optimization must be enabled. To enable\n-inlining of subprograms specified by pragma @code{Inline},\n+inlining to actually occur, optimization must be enabled and, in order\n+to enable inlining of subprograms specified by pragma @code{Inline},\n you must also specify this switch.\n In the absence of this switch, GNAT does not attempt\n inlining and does not need to access the bodies of\n subprograms for which @code{pragma Inline} is specified if they are not\n in the current unit.\n \n+You can optionally specify the inlining level: 1 for moderate inlining across\n+modules, which is a good compromise between compilation times and performances\n+at run time, or 2 for full inlining across modules, which may bring about\n+longer compilation times. If no inlining level is specified, the compiler will\n+pick it based on the optimization level: 1 for @option{-O1}, @option{-O2} or\n+@option{-Os} and 2 for @option{-O3}.\n+\n If you specify this switch the compiler will access these bodies,\n creating an extra source dependency for the resulting object file, and\n where possible, the call will be inlined.\n@@ -10733,19 +10738,22 @@ Note: The @option{-fno-inline-functions-called-once} switch\n can be used to prevent inlining of subprograms local to the unit\n and called once from within it if @option{-O1} is used.\n \n-Note regarding the use of @option{-O3}: There is no difference in inlining\n-behavior between @option{-O2} and @option{-O3} for subprograms with an explicit\n-pragma @code{Inline} assuming the use of @option{-gnatn}\n-or @option{-gnatN} (the switches that activate inlining). If you have used\n-pragma @code{Inline} in appropriate cases, then it is usually much better\n-to use @option{-O2} and @option{-gnatn} and avoid the use of @option{-O3} which\n-in this case only has the effect of inlining subprograms you did not\n-think should be inlined. We often find that the use of @option{-O3} slows\n-down code by performing excessive inlining, leading to increased instruction\n-cache pressure from the increased code size. So the bottom line here is\n-that you should not automatically assume that @option{-O3} is better than\n-@option{-O2}, and indeed you should use @option{-O3} only if tests show that\n-it actually improves performance.\n+Note regarding the use of @option{-O3}: @option{-gnatn} is made up of two\n+sub-switches @option{-gnatn1} and @option{-gnatn2} that can be directly\n+specified in lieu of it, @option{-gnatn} being translated into one of them\n+based on the optimization level. With @option{-O2} or below, @option{-gnatn}\n+is equivalent to @option{-gnatn1} which activates pragma @code{Inline} with\n+moderate inlining across modules. With @option{-O3}, @option{-gnatn} is\n+equivalent to @option{-gnatn2} which activates pragma @code{Inline} with\n+full inlining across modules. If you have used pragma @code{Inline} in appropriate cases, then it is usually much better to use @option{-O2} and @option{-gnatn} and avoid the use of @option{-O3} which has the additional\n+effect of inlining subprograms you did not think should be inlined. We have\n+found that the use of @option{-O3} may slow down the compilation and increase\n+the code size by performing excessive inlining, leading to increased\n+instruction cache pressure from the increased code size and thus minor\n+performance improvements. So the bottom line here is that you should not\n+automatically assume that @option{-O3} is better than @option{-O2}, and\n+indeed you should use @option{-O3} only if tests show that it actually\n+improves performance for your program.\n \n @node Vectorization of loops\n @subsection Vectorization of loops"}, {"sha": "9562b3bbc8d352810e4ea8f1df7f766b2e1aeaaa", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -904,6 +904,7 @@ procedure Gnatlink is\n \n       procedure Write_RF (S : String) is\n          Success : Boolean := True;\n+\n       begin\n          --  If a GNU response file is used, space and backslash need to be\n          --  escaped because they are interpreted as a string separator and\n@@ -912,17 +913,18 @@ procedure Gnatlink is\n          --  they are interpreted as string delimiters on both sides.\n \n          if Using_GNU_response_file then\n-            for I in S'Range loop\n-               if S (I) = ' ' or else S (I) = '\\' then\n+            for J in S'Range loop\n+               if S (J) = ' ' or else S (J) = '\\' then\n                   if Write (Tname_FD, ASCII.BACK_SLASH'Address, 1) /= 1 then\n                      Success := False;\n                   end if;\n                end if;\n \n-               if Write (Tname_FD, S (I)'Address, 1) /= 1 then\n+               if Write (Tname_FD, S (J)'Address, 1) /= 1 then\n                   Success := False;\n                end if;\n             end loop;\n+\n          else\n             if Write (Tname_FD, S'Address, S'Length) /= S'Length then\n                Success := False;\n@@ -973,9 +975,9 @@ procedure Gnatlink is\n \n          Linker_Objects.Increment_Last;\n \n-         --  Mark the positions of first and last object files in case\n-         --  they need to be placed with a named file on systems having\n-         --  linker line limitations.\n+         --  Mark the positions of first and last object files in case they\n+         --  need to be placed with a named file on systems having linker\n+         --  line limitations.\n \n          if Objs_Begin = 0 then\n             Objs_Begin := Linker_Objects.Last;\n@@ -1016,9 +1018,9 @@ procedure Gnatlink is\n                    and then Link_Bytes > Link_Max)\n       then\n          --  Create a temporary file containing the Ada user object files\n-         --  needed by the link. This list is taken from the bind file\n-         --  and is output one object per line for maximal compatibility with\n-         --  linkers supporting this option.\n+         --  needed by the link. This list is taken from the bind file and is\n+         --  output one object per line for maximal compatibility with linkers\n+         --  supporting this option.\n \n          Create_Temp_File (Tname_FD, Tname);\n \n@@ -1045,9 +1047,9 @@ procedure Gnatlink is\n                        Tname (Tname'First .. Tname'Last - 1));\n \n          --  The slots containing these object file names are then removed\n-         --  from the objects table so they do not appear in the link. They\n-         --  are removed by moving up the linker options and non-Ada object\n-         --  files appearing after the Ada object list in the table.\n+         --  from the objects table so they do not appear in the link. They are\n+         --  removed by moving up the linker options and non-Ada object files\n+         --  appearing after the Ada object list in the table.\n \n          declare\n             N : Integer;\n@@ -1082,8 +1084,8 @@ procedure Gnatlink is\n             elsif Next_Line (Nfirst .. Nlast) = \"-shared\" then\n                GNAT_Shared := True;\n \n-            --  Add binder options only if not already set on the command\n-            --  line. This rule is a way to control the linker options order.\n+            --  Add binder options only if not already set on the command line.\n+            --  This rule is a way to control the linker options order.\n \n             --  The following test needs comments, why is it VMS specific.\n             --  The above comment looks out of date ???\n@@ -1095,8 +1097,8 @@ procedure Gnatlink is\n                if Nlast > Nfirst + 2 and then\n                  Next_Line (Nfirst .. Nfirst + 1) = \"-L\"\n                then\n-                  --  Construct a library search path for use later\n-                  --  to locate static gnatlib libraries.\n+                  --  Construct a library search path for use later to locate\n+                  --  static gnatlib libraries.\n \n                   if Libpath.Last > 1 then\n                      Libpath.Increment_Last;\n@@ -2208,6 +2210,7 @@ begin\n             System.OS_Lib.Spawn (Linker_Path.all, Args, Success);\n \n             if Success then\n+\n                --  Delete the temporary file used in conjunction with linking\n                --  if one was created. See Process_Bind_File for details.\n "}, {"sha": "204ba3a357255ac1bb2bfaa3aa6d4c9edbf58c5e", "filename": "gcc/ada/lib-writ.ads", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Flib-writ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Flib-writ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.ads?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -517,18 +517,25 @@ package Lib.Writ is\n    --\n    --      The attributes may appear in any order, separated by spaces.\n \n-   --  ---------------------\n-   --  -- W  Withed Units --\n-   --  ---------------------\n+   --  -----------------------------\n+   --  -- W, Y and Z Withed Units --\n+   --  -----------------------------\n \n    --  Following each U line, is a series of lines of the form\n \n    --    W unit-name [source-name lib-name] [E] [EA] [ED] [AD]\n-   --\n-   --      One of these lines is present for each unit that is mentioned in an\n-   --      explicit with clause by the current unit. The first parameter is the\n-   --      unit name in internal format. The second parameter is the file name\n-   --      of the file that must be compiled to compile this unit. It is\n+   --    or\n+   --    Y unit-name [source-name lib-name] [E] [EA] [ED] [AD]\n+   --    or\n+   --    Z unit-name [source-name lib-name] [E] [EA] [ED] [AD]\n+   --\n+   --      One W line is present for each unit that is mentioned in an explicit\n+   --      non-limited with clause by the current unit. One Y line is present\n+   --      for each unit that is mentioned in an explicit limited with clause\n+   --      by the current unit. One Z line is present for each unit that is\n+   --      only implicitly withed by the current unit. The first parameter is\n+   --      the unit name in internal format. The second parameter is the file\n+   --      name of the file that must be compiled to compile this unit. It is\n    --      usually the file for the body, except for packages which have no\n    --      body. For units that need a body, if the source file for the body\n    --      cannot be found, the file name of the spec is used instead. The\n@@ -555,8 +562,6 @@ package Lib.Writ is\n    --      generic unit compiled with earlier versions of GNAT which did not\n    --      generate object or ali files for generics.\n \n-   --  In fact W lines include implicit withs ???\n-\n    --  -----------------------\n    --  -- L  Linker_Options --\n    --  -----------------------"}, {"sha": "f2cc330fdb93cf62736787f17e39fa853447d456", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -661,7 +661,7 @@ package Lib is\n    --  one with no code, but the ALI file has the normal form, and we need\n    --  this ALI file so that the binder can work out a correct order of\n    --  elaboration.\n-\n+   --\n    --  However, ancient versions of GNAT used to not generate code or ALI\n    --  files for generic units, and this would yield complex order of\n    --  elaboration issues. These were fixed in GNAT 3.10. The support for not"}, {"sha": "edd6749d1c714b835de69334657537b43be8ed3c", "filename": "gcc/ada/mlib-utl.adb", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fmlib-utl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fmlib-utl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-utl.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -355,8 +355,10 @@ package body MLib.Utl is\n       --  The linker option which specifies the response file as a string\n \n       Using_GNU_response_file : constant Boolean :=\n-        Object_File_Option'Length > 0\n-          and then Object_File_Option (Object_File_Option'Last) = '@';\n+                                  Object_File_Option'Length > 0\n+                                    and then\n+                                      Object_File_Option\n+                                        (Object_File_Option'Last) = '@';\n       --  Whether a GNU response file is used\n \n       Tname    : String_Access;\n@@ -395,6 +397,7 @@ package body MLib.Utl is\n \n       procedure Write_RF (S : String) is\n          Success : Boolean := True;\n+\n       begin\n          --  If a GNU response file is used, space and backslash need to be\n          --  escaped because they are interpreted as a string separator and\n@@ -403,17 +406,18 @@ package body MLib.Utl is\n          --  they are interpreted as string delimiters on both sides.\n \n          if Using_GNU_response_file then\n-            for I in S'Range loop\n-               if S (I) = ' ' or else S (I) = '\\' then\n+            for J in S'Range loop\n+               if S (J) = ' ' or else S (J) = '\\' then\n                   if Write (Tname_FD, ASCII.BACK_SLASH'Address, 1) /= 1 then\n                      Success := False;\n                   end if;\n                end if;\n \n-               if Write (Tname_FD, S (I)'Address, 1) /= 1 then\n+               if Write (Tname_FD, S (J)'Address, 1) /= 1 then\n                   Success := False;\n                end if;\n             end loop;\n+\n          else\n             if Write (Tname_FD, S'Address, S'Length) /= S'Length then\n                Success := False;\n@@ -429,6 +433,8 @@ package body MLib.Utl is\n          end if;\n       end Write_RF;\n \n+   --  Start of processing for Gcc\n+\n    begin\n       if Driver_Name = No_Name then\n          if Gcc_Exec = null then\n@@ -544,6 +550,7 @@ package body MLib.Utl is\n       end loop;\n \n       if Object_List_File_Supported and then Link_Bytes > Link_Max then\n+\n          --  Create a temporary file containing the object files, one object\n          --  file per line for maximal compatibility with linkers supporting\n          --  this option."}, {"sha": "26bbd63ebf08b581ce996f6826dde767435d49ee", "filename": "gcc/ada/raise-gcc.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fraise-gcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fraise-gcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise-gcc.c?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -475,6 +475,9 @@ extern const int __gnat_others_value;\n extern const int __gnat_all_others_value;\n #define GNAT_ALL_OTHERS  ((_Unwind_Ptr) &__gnat_all_others_value)\n \n+extern const int __gnat_unhandled_others_value;\n+#define GNAT_UNHANDLED_OTHERS  ((_Unwind_Ptr) &__gnat_unhandled_others_value)\n+\n /* Describe the useful region data associated with an unwind context.  */\n \n typedef struct\n@@ -653,7 +656,6 @@ typedef struct\n   /* If we have a handler matching our exception, these are the filter to\n      trigger it and the corresponding id.  */\n   _Unwind_Sword ttype_filter;\n-  _Unwind_Ptr   ttype_entry;\n \n } action_descriptor;\n \n@@ -852,8 +854,9 @@ is_handled_by (_Unwind_Ptr choice, _GNAT_Exception * propagated_exception)\n \n       bool is_handled =\n         choice == E\n+        || (choice == GNAT_OTHERS && Is_Handled_By_Others (E))\n         || choice == GNAT_ALL_OTHERS\n-        || (choice == GNAT_OTHERS && Is_Handled_By_Others (E));\n+        || choice == GNAT_UNHANDLED_OTHERS;\n \n       /* In addition, on OpenVMS, Non_Ada_Error matches VMS exceptions, and we\n          may have different exception data pointers that should match for the\n@@ -970,7 +973,6 @@ get_action_description_for (_Unwind_Context *uw_context,\n                     {\n                       action->kind = handler;\n                       action->ttype_filter = ar_filter;\n-                      action->ttype_entry = choice;\n                       return;\n                     }\n                 }"}, {"sha": "fd0fc0060eb0fa1bc9f9c1460352e210f49ead2e", "filename": "gcc/ada/s-dimmks.ads", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fs-dimmks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fs-dimmks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-dimmks.ads?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -64,31 +64,37 @@ package System.Dim.Mks is\n       Dimension => (Symbol => 'm',\n         Meter  => 1,\n         others => 0);\n+\n    subtype Mass is Mks_Type\n      with\n       Dimension => (Symbol => \"kg\",\n         Kilogram => 1,\n         others =>   0);\n+\n    subtype Time is Mks_Type\n      with\n       Dimension => (Symbol => 's',\n         Second => 1,\n         others => 0);\n+\n    subtype Electric_Current is Mks_Type\n      with\n       Dimension => (Symbol => 'A',\n         Ampere => 1,\n         others => 0);\n+\n    subtype Thermodynamic_Temperature is Mks_Type\n      with\n       Dimension => (Symbol => 'K',\n         Kelvin => 1,\n         others => 0);\n+\n    subtype Amount_Of_Substance is Mks_Type\n      with\n       Dimension => (Symbol => \"mol\",\n         Mole =>   1,\n         others => 0);\n+\n    subtype Luminous_Intensity is Mks_Type\n      with\n       Dimension => (Symbol => \"cd\",\n@@ -122,40 +128,46 @@ package System.Dim.Mks is\n       Dimension => (Symbol => \"Hz\",\n         Second => -1,\n         others => 0);\n+\n    subtype Force is Mks_Type\n      with\n       Dimension => (Symbol => 'N',\n         Meter =>    1,\n         Kilogram => 1,\n         Second =>  -2,\n         others =>   0);\n+\n    subtype Pressure is Mks_Type\n      with\n       Dimension => (Symbol => \"Pa\",\n         Meter =>    -1,\n         Kilogram => 1,\n         Second =>   -2,\n         others =>   0);\n+\n    subtype Energy is Mks_Type\n      with\n       Dimension => (Symbol => 'J',\n         Meter =>    2,\n         Kilogram => 1,\n         Second =>   -2,\n         others =>   0);\n+\n    subtype Power is Mks_Type\n      with\n       Dimension => (Symbol => 'W',\n         Meter =>    2,\n         Kilogram => 1,\n         Second =>   -3,\n         others =>   0);\n+\n    subtype Electric_Charge is Mks_Type\n      with\n       Dimension => (Symbol => 'C',\n         Second => 1,\n         Ampere => 1,\n         others => 0);\n+\n    subtype Electric_Potential_Difference is Mks_Type\n      with\n       Dimension => (Symbol => 'V',\n@@ -164,6 +176,7 @@ package System.Dim.Mks is\n         Second =>   -3,\n         Ampere =>   -1,\n         others =>   0);\n+\n    subtype Electric_Capacitance is Mks_Type\n      with\n       Dimension => (Symbol => 'F',\n@@ -172,6 +185,7 @@ package System.Dim.Mks is\n         Second =>   4,\n         Ampere =>   2,\n         others =>   0);\n+\n    subtype Electric_Resistance is Mks_Type\n      with\n       Dimension => (Symbol => \"\u03a9\",\n@@ -180,6 +194,7 @@ package System.Dim.Mks is\n         Second =>   -3,\n         Ampere =>   -2,\n         others =>   0);\n+\n    subtype Electric_Conductance is Mks_Type\n      with\n       Dimension => (Symbol => 'S',\n@@ -188,6 +203,7 @@ package System.Dim.Mks is\n         Second =>   3,\n         Ampere =>   2,\n         others =>   0);\n+\n    subtype Magnetic_Flux is Mks_Type\n      with\n       Dimension => (Symbol => \"Wb\",\n@@ -196,13 +212,15 @@ package System.Dim.Mks is\n         Second =>   -2,\n         Ampere =>   -1,\n         others =>   0);\n+\n    subtype Magnetic_Flux_Density is Mks_Type\n      with\n       Dimension => (Symbol => 'T',\n         Kilogram => 1,\n         Second =>   -2,\n         Ampere =>   -1,\n         others =>   0);\n+\n    subtype Inductance is Mks_Type\n      with\n       Dimension => (Symbol => 'H',\n@@ -211,39 +229,46 @@ package System.Dim.Mks is\n         Second =>   -2,\n         Ampere =>   -2,\n         others =>   0);\n+\n    subtype Celsius_Temperature is Mks_Type\n      with\n       Dimension => (Symbol => \"\u00b0C\",\n         Kelvin => 1,\n         others => 0);\n+\n    subtype Luminous_Flux is Mks_Type\n      with\n       Dimension => (Symbol => \"lm\",\n         Candela => 1,\n         others =>  0);\n+\n    subtype Illuminance is Mks_Type\n      with\n       Dimension => (Symbol => \"lx\",\n         Meter =>   -2,\n         Candela => 1,\n         others =>  0);\n+\n    subtype Radioactivity is Mks_Type\n      with\n       Dimension => (Symbol => \"Bq\",\n         Second => -1,\n         others => 0);\n+\n    subtype Absorbed_Dose is Mks_Type\n      with\n       Dimension => (Symbol => \"Gy\",\n         Meter =>  2,\n         Second => -2,\n         others => 0);\n+\n    subtype Equivalent_Dose is Mks_Type\n      with\n       Dimension => (Symbol => \"Sv\",\n         Meter =>  2,\n         Second => -2,\n         others => 0);\n+\n    subtype Catalytic_Activity is Mks_Type\n      with\n       Dimension => (Symbol => \"kat\","}, {"sha": "abb0344ad7092be8ef9a59b8dc710b6402d6f770", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -3296,12 +3296,7 @@ package body Sem_Attr is\n \n       when Attribute_Fast_Math =>\n          Check_Standard_Prefix;\n-\n-         if Opt.Fast_Math then\n-            Rewrite (N, New_Occurrence_Of (Standard_True, Loc));\n-         else\n-            Rewrite (N, New_Occurrence_Of (Standard_False, Loc));\n-         end if;\n+         Rewrite (N, New_Occurrence_Of (Boolean_Literals (Fast_Math), Loc));\n \n       -----------\n       -- First --\n@@ -5879,11 +5874,7 @@ package body Sem_Attr is\n                   R := Is_Check_Suppressed (Entity (E1), C);\n                end if;\n \n-               if R then\n-                  Rewrite (N, New_Occurrence_Of (Standard_False, Loc));\n-               else\n-                  Rewrite (N, New_Occurrence_Of (Standard_True, Loc));\n-               end if;\n+               Rewrite (N, New_Occurrence_Of (Boolean_Literals (not R), Loc));\n             end;\n          end if;\n "}, {"sha": "3dd3b6178204b63f648f2672cdce4e38564a754c", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -162,9 +162,7 @@ package body Sem_Case is\n          --  AI05-0188 : within an instance the non-others choices do not\n          --  have to belong to the actual subtype.\n \n-         if Ada_Version >= Ada_2012\n-           and then In_Instance\n-         then\n+         if Ada_Version >= Ada_2012 and then In_Instance then\n             return;\n          end if;\n \n@@ -714,7 +712,8 @@ package body Sem_Case is\n             --  Do not insert non static choices in the table to be sorted\n \n             elsif not Is_Static_Expression (Lo)\n-              or else not Is_Static_Expression (Hi)\n+                    or else\n+                  not Is_Static_Expression (Hi)\n             then\n                Process_Non_Static_Choice (Choice);\n                return;\n@@ -727,12 +726,10 @@ package body Sem_Case is\n                Raises_CE := True;\n                return;\n \n-            --  AI05-0188 : within an instance the non-others choices do not\n+            --  AI05-0188 : Within an instance the non-others choices do not\n             --  have to belong to the actual subtype.\n \n-            elsif Ada_Version >= Ada_2012\n-              and then In_Instance\n-            then\n+            elsif Ada_Version >= Ada_2012 and then In_Instance then\n                return;\n \n             --  Otherwise we have an OK static choice"}, {"sha": "835e8799f260412b3ea6c2fe80d5b10891d1b6bc", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -10811,8 +10811,8 @@ package body Sem_Ch12 is\n \n                pragma Assert (Present (Ancestor));\n \n-               --  the ancestor itself may be a previous formal that\n-               --  has been instantiated.\n+               --  The ancestor itself may be a previous formal that has been\n+               --  instantiated.\n \n                Ancestor := Get_Instance_Of (Ancestor);\n "}, {"sha": "4f2c6855d3503bdd17129239472507cfca5adaa6", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -850,7 +850,6 @@ package body Sem_Ch13 is\n             Set_Is_Delayed_Aspect (Prag);\n             Set_Parent (Prag, ASN);\n          end if;\n-\n       end Make_Pragma_From_Boolean_Aspect;\n \n    --  Start of processing for Analyze_Aspects_At_Freeze_Point\n@@ -866,7 +865,6 @@ package body Sem_Ch13 is\n       --  Look for aspect specification entries for this entity\n \n       ASN := First_Rep_Item (E);\n-\n       while Present (ASN) loop\n          if Nkind (ASN) = N_Aspect_Specification\n            and then Entity (ASN) = E\n@@ -875,6 +873,7 @@ package body Sem_Ch13 is\n             A_Id := Get_Aspect_Id (Chars (Identifier (ASN)));\n \n             case A_Id is\n+\n                --  For aspects whose expression is an optional Boolean, make\n                --  the corresponding pragma at the freezing point.\n \n@@ -889,7 +888,8 @@ package body Sem_Ch13 is\n                     Aspect_Default_Component_Value =>\n                   Analyze_Aspect_Default_Value (ASN);\n \n-               when others => null;\n+               when others =>\n+                  null;\n             end case;\n \n             Ritem := Aspect_Rep_Item (ASN);"}, {"sha": "b9243f9fdc4772d12f053cf646ce23fa65b7ba03", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -1260,9 +1260,7 @@ package body Sem_Ch6 is\n       --  rewritten if the original call was in prefix notation) then error\n       --  has been emitted already, mark node and return.\n \n-      if Error_Posted (N)\n-        or else Etype (Name (N)) = Any_Type\n-      then\n+      if Error_Posted (N) or else Etype (Name (N)) = Any_Type then\n          Set_Etype (N, Any_Type);\n          return;\n       end if;\n@@ -1282,9 +1280,9 @@ package body Sem_Ch6 is\n       --  Special processing for Elab_Spec, Elab_Body and Elab_Subp_Body calls\n \n       if Nkind (P) = N_Attribute_Reference\n-        and then (Attribute_Name (P) = Name_Elab_Spec\n-                   or else Attribute_Name (P) = Name_Elab_Body\n-                   or else Attribute_Name (P) = Name_Elab_Subp_Body)\n+        and then (Attribute_Name (P) = Name_Elab_Spec or else\n+                  Attribute_Name (P) = Name_Elab_Body or else\n+                  Attribute_Name (P) = Name_Elab_Subp_Body)\n       then\n          if Present (Actuals) then\n             Error_Msg_N\n@@ -5503,12 +5501,10 @@ package body Sem_Ch6 is\n             end if;\n          end if;\n \n-         --  Ada 2012:  mode conformance also requires that formal parameters\n+         --  Ada 2012: Mode conformance also requires that formal parameters\n          --  be both aliased, or neither.\n \n-         if Ctype >= Mode_Conformant\n-           and then Ada_Version >= Ada_2012\n-         then\n+         if Ctype >= Mode_Conformant and then Ada_Version >= Ada_2012 then\n             if Is_Aliased (Old_Formal) /= Is_Aliased (New_Formal) then\n                Conformance_Error\n                  (\"\\aliased parameter mismatch!\", New_Formal);"}, {"sha": "02a1905043677ab360ca570be8cb3af1a46d1e2f", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -1455,14 +1455,17 @@ package body Sem_Ch9 is\n \n       begin\n          if Present (Ritem) then\n+\n             --  Pragma with one argument\n \n             if Nkind (Ritem) = N_Pragma\n               and then Present (Pragma_Argument_Associations (Ritem))\n             then\n                return\n-                 Is_False (Static_Boolean\n-                  (Expression (First (Pragma_Argument_Associations (Ritem)))));\n+                 Is_False\n+                   (Static_Boolean\n+                     (Expression\n+                       (First (Pragma_Argument_Associations (Ritem)))));\n \n             --  Aspect Specification with expression present\n "}, {"sha": "28e8cee52d538dd89d02fcf5907f3f0690364565", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 39, "deletions": 44, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -116,6 +116,8 @@ package body Sem_Dim is\n \n    No_Symbols : constant Symbol_Array := (others => No_String);\n \n+   --  The following record should be documented field by field\n+\n    type System_Type is record\n       Type_Decl    : Node_Id;\n       Unit_Names   : Name_Array;\n@@ -543,8 +545,7 @@ package body Sem_Dim is\n       Errors_Count : Nat;\n       --  Errors_Count is a count of errors detected by the compiler so far\n       --  just before the extraction of symbol, names and values in the\n-      --  aggregate\n-      --  (Step 2).\n+      --  aggregate (Step 2).\n       --\n       --  At the end of the analysis, there is a check to verify that this\n       --  count equals to Serious_Errors_Detected i.e. no erros have been\n@@ -614,9 +615,8 @@ package body Sem_Dim is\n             Assoc  := First (Component_Associations (Aggr));\n             Choice := First (Choices (Assoc));\n \n-            if No (Next (Choice))\n-              and then Nkind (Choice) = N_Identifier\n-            then\n+            if No (Next (Choice)) and then Nkind (Choice) = N_Identifier then\n+\n                --  Symbol component association is present\n \n                if Chars (Choice) = Name_Symbol then\n@@ -629,9 +629,9 @@ package body Sem_Dim is\n                                                 N_String_Literal)\n                   then\n                      Symbol_Expr := Empty;\n-                     Error_Msg_N (\"symbol expression must be character or \" &\n-                                  \"string\",\n-                                  Symbol_Expr);\n+                     Error_Msg_N\n+                       (\"symbol expression must be character or string\",\n+                        Symbol_Expr);\n                   end if;\n \n                --  Special error if no Symbol choice but expression is string\n@@ -656,9 +656,7 @@ package body Sem_Dim is\n \n       --  Skip the symbol expression when present\n \n-      if Present (Symbol_Expr)\n-        and then Num_Choices = 0\n-      then\n+      if Present (Symbol_Expr) and then Num_Choices = 0 then\n          Expr := Next (Expr);\n       end if;\n \n@@ -689,9 +687,9 @@ package body Sem_Dim is\n       end if;\n \n       while Present (Assoc) loop\n-         Expr   := Expression (Assoc);\n-         Choice := First (Choices (Assoc));\n+         Expr := Expression (Assoc);\n \n+         Choice := First (Choices (Assoc));\n          while Present (Choice) loop\n \n             --  Identifier case: NAME => EXPRESSION\n@@ -747,9 +745,7 @@ package body Sem_Dim is\n             --  Others case: OTHERS => EXPRESSION\n \n             elsif Nkind (Choice) = N_Others_Choice then\n-               if Present (Next (Choice))\n-                 or else Present (Prev (Choice))\n-               then\n+               if Present (Next (Choice)) or else Present (Prev (Choice)) then\n                   Error_Msg_N\n                     (\"OTHERS must appear alone in a choice list\", Choice);\n \n@@ -828,11 +824,10 @@ package body Sem_Dim is\n       --  Check that no errors have been detected during the analysis\n \n       if Errors_Count = Serious_Errors_Detected then\n-         --  useless declaration\n \n-         if Symbol = No_String\n-           and then not Exists (Dimensions)\n-         then\n+         --  Check for useless declaration\n+\n+         if Symbol = No_String and then not Exists (Dimensions) then\n             Error_Msg_N (\"useless dimension declaration\", Aggr);\n          end if;\n \n@@ -968,6 +963,7 @@ package body Sem_Dim is\n                --  Named dimension aggregate\n \n                if Present (Component_Associations (Dim_Aggr)) then\n+\n                   --  Check first argument denotes the unit name\n \n                   Assoc     := First (Component_Associations (Dim_Aggr));\n@@ -2235,11 +2231,11 @@ package body Sem_Dim is\n    -- Expand_Put_Call_With_Symbol --\n    ---------------------------------\n \n-   --  For procedure Put (resp. Put_Dim_Of) defined in\n-   --  System.Dim.Float_IO/System.Dim.Integer_IO, the default string parameter\n-   --  must be rewritten to include the unit symbols (resp. dimension symbols)\n-   --  in the output of a dimensioned object. Note that if a value is already\n-   --  supplied for parameter Symbol, this routine doesn't do anything.\n+   --  For procedure Put (resp. Put_Dim_Of) defined in System.Dim.Float_IO\n+   --  (System.Dim.Integer_IO), the default string parameter must be rewritten\n+   --  to include the unit symbols (resp. dimension symbols) in the output\n+   --  of a dimensioned object. Note that if a value is already supplied for\n+   --  parameter Symbol, this routine doesn't do anything.\n \n    --  Case 1. Item is dimensionless\n \n@@ -2330,22 +2326,20 @@ package body Sem_Dim is\n             if Nkind (Actual) = N_Parameter_Association\n               and then Chars (Selector_Name (Actual)) = Name_Symbol\n             then\n-\n-               --  return True if the actual comes from source or if the string\n-               --  of symbols doesn't have the default value (i.e \"\").\n+               --  Return True if the actual comes from source or if the string\n+               --  of symbols doesn't have the default value (i.e. it is \"\").\n \n                return Comes_From_Source (Actual)\n-                        or else String_Length\n-                                  (Strval\n-                                    (Explicit_Actual_Parameter (Actual))) /= 0;\n+                 or else\n+                   String_Length\n+                     (Strval (Explicit_Actual_Parameter (Actual))) /= 0;\n             end if;\n \n             Next (Actual);\n          end loop;\n \n-         --  At this point, the call has no parameter association\n-         --  Look to the last actual since the symbols parameter is the last\n-         --  one.\n+         --  At this point, the call has no parameter association. Look to the\n+         --  last actual since the symbols parameter is the last one.\n \n          return Nkind (Last (Actuals)) = N_String_Literal;\n       end Has_Symbols;\n@@ -2441,6 +2435,7 @@ package body Sem_Dim is\n          --  Put_Dim_Of case\n \n          if Is_Put_Dim_Of then\n+\n             --  Check that the item is not dimensionless\n \n             --  Create the new String_Literal with the new String_Id generated\n@@ -2536,11 +2531,10 @@ package body Sem_Dim is\n    -- From_Dim_To_Str_Of_Dim_Symbols --\n    ------------------------------------\n \n-   --  Given a dimension vector and the corresponding dimension system,\n-   --  create a String_Id to output the dimension symbols corresponding to the\n-   --  dimensions Dims. If In_Error_Msg is True, there is a special handling\n-   --  for character asterisk * which is an insertion character in error\n-   --  messages.\n+   --  Given a dimension vector and the corresponding dimension system, create\n+   --  a String_Id to output dimension symbols corresponding to the dimensions\n+   --  Dims. If In_Error_Msg is True, there is a special handling for character\n+   --  asterisk * which is an insertion character in error messages.\n \n    function From_Dim_To_Str_Of_Dim_Symbols\n      (Dims         : Dimension_Type;\n@@ -2551,9 +2545,9 @@ package body Sem_Dim is\n       First_Dim : Boolean := True;\n \n       procedure Store_String_Oexpon;\n-      --  Store the expon operator symbol \"**\" to the string. In error\n-      --  messages, asterisk * is a special character and must be precede by a\n-      --  quote ' to be placed literally into the message.\n+      --  Store the expon operator symbol \"**\" in the string. In error\n+      --  messages, asterisk * is a special character and must be quoted\n+      --  to be placed literally into the message.\n \n       -------------------------\n       -- Store_String_Oexpon --\n@@ -2563,7 +2557,6 @@ package body Sem_Dim is\n       begin\n          if In_Error_Msg then\n             Store_String_Chars (\"'*'*\");\n-\n          else\n             Store_String_Chars (\"**\");\n          end if;\n@@ -2639,7 +2632,6 @@ package body Sem_Dim is\n       end loop;\n \n       Store_String_Char (']');\n-\n       return End_String;\n    end From_Dim_To_Str_Of_Dim_Symbols;\n \n@@ -2669,6 +2661,7 @@ package body Sem_Dim is\n \n       for Position in Dimension_Type'Range loop\n          Dim_Power := Dims (Position);\n+\n          if Dim_Power /= Zero then\n \n             if First_Dim then\n@@ -2682,6 +2675,7 @@ package body Sem_Dim is\n             --  Positive dimension case\n \n             if Dim_Power.Numerator > 0 then\n+\n                --  Integer case\n \n                if Dim_Power.Denominator = 1 then\n@@ -2956,4 +2950,5 @@ package body Sem_Dim is\n \n       return Null_System;\n    end System_Of;\n+\n end Sem_Dim;"}, {"sha": "fdf9ba354c8cd7068571639b96680c174ce9b362", "filename": "gcc/ada/sem_elim.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_elim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_elim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elim.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -832,8 +832,8 @@ package body Sem_Elim is\n \n       function OK_Selected_Component (N : Node_Id) return Boolean;\n       --  Test if N is a selected component with all identifiers, or a selected\n-      --  component whose selector is an operator symbol. As a side effect if\n-      --  result is True, sets Num_Names to the number of names present\n+      --  component whose selector is an operator symbol. As a side effect\n+      --  if result is True, sets Num_Names to the number of names present\n       --  (identifiers, and operator if any).\n \n       ---------------------------"}, {"sha": "ecec30f83782cc79d6cfe51bba52bbaee8b49ccb", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -11146,8 +11146,7 @@ package body Sem_Prag is\n                   Arg := Get_Pragma_Arg (Arg1);\n                   Val := Is_True (Static_Boolean (Arg));\n \n-               --  Zero argument. In this case the expression is considered to\n-               --  be True.\n+               --  No arguments (expression is considered to be True)\n \n                else\n                   Val := True;\n@@ -11160,7 +11159,7 @@ package body Sem_Prag is\n                Record_Rep_Item        (Ent, N);\n                Set_Uses_Lock_Free     (Ent, Val);\n \n-            --  Anything else is incorrect\n+            --  Anything else is incorrect placement\n \n             else\n                Pragma_Misplaced;\n@@ -11178,6 +11177,7 @@ package body Sem_Prag is\n               range First_Locking_Policy_Name .. Last_Locking_Policy_Name;\n             LP_Val : LP_Range;\n             LP     : Character;\n+\n          begin\n             Check_Ada_83_Warning;\n             Check_Arg_Count (1);\n@@ -11187,9 +11187,12 @@ package body Sem_Prag is\n             LP_Val := Chars (Get_Pragma_Arg (Arg1));\n \n             case LP_Val is\n-               when Name_Ceiling_Locking            => LP := 'C';\n-               when Name_Inheritance_Locking        => LP := 'I';\n-               when Name_Concurrent_Readers_Locking => LP := 'R';\n+               when Name_Ceiling_Locking            =>\n+                  LP := 'C';\n+               when Name_Inheritance_Locking        =>\n+                  LP := 'I';\n+               when Name_Concurrent_Readers_Locking =>\n+                  LP := 'R';\n             end case;\n \n             if Locking_Policy /= ' '"}, {"sha": "eb2b509e1ab2a6c034eca312dc500b7155504381", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21791d978bc82abe024f14e89daa8b294640e634/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=21791d978bc82abe024f14e89daa8b294640e634", "patch": "@@ -5839,9 +5839,9 @@ package body Sem_Res is\n          Check_Restriction (No_Relative_Delay, N);\n       end if;\n \n-      --  Issue an error for a call to an eliminated subprogram.\n-      --  The routine will not perform the check if the call appears within\n-      --  a default expression.\n+      --  Issue an error for a call to an eliminated subprogram. This routine\n+      --  will not perform the check if the call appears within a default\n+      --  expression.\n \n       Check_For_Eliminated_Subprogram (Subp, Nam);\n "}]}