{"sha": "306ef64467b81eff37995c0620ee097c9d174463", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA2ZWY2NDQ2N2I4MWVmZjM3OTk1YzA2MjBlZTA5N2M5ZDE3NDQ2Mw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-10-28T19:25:00Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-10-28T19:25:00Z"}, "message": "ChangeLog.1, [...]: Fix spelling errors.\n\n\t* ChangeLog.1, ChangeLog.2, ChangeLog, class.c, decl2.c, search.c,\n\tsemantics.c, spew.c: Fix spelling errors.\n\nFrom-SVN: r46593", "tree": {"sha": "93b86d0f670e21cab7c2516d4d7e2ae8837b3934", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93b86d0f670e21cab7c2516d4d7e2ae8837b3934"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/306ef64467b81eff37995c0620ee097c9d174463", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/306ef64467b81eff37995c0620ee097c9d174463", "html_url": "https://github.com/Rust-GCC/gccrs/commit/306ef64467b81eff37995c0620ee097c9d174463", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/306ef64467b81eff37995c0620ee097c9d174463/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c688a7d77a2b7926487528c0f417bb32af548ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c688a7d77a2b7926487528c0f417bb32af548ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c688a7d77a2b7926487528c0f417bb32af548ed"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "86735c3fbf3716769664abf4fdb51f567be2389f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/306ef64467b81eff37995c0620ee097c9d174463/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/306ef64467b81eff37995c0620ee097c9d174463/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=306ef64467b81eff37995c0620ee097c9d174463", "patch": "@@ -1,3 +1,8 @@\n+2001-10-28  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* ChangeLog.1, ChangeLog.2, ChangeLog, class.c, decl2.c, search.c,\n+\tsemantics.c, spew.c: Fix spelling errors.\n+\n 2001-10-27  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \t* decl2.c (validate_nonmember_using_decl): Handle NAMESPACE_DECL.\n@@ -2329,7 +2334,7 @@ Thu Apr  5 16:54:29 2001  J\"orn Rennecke <amylaar@redhat.com>\n \t(inlinable_function_p): Likewise, fix typo in comment,\n \tfunction is not inlinable if it already inlined function currently\n \tbeing optimized.\n-\t(expand_call_inline): Add fn to inlined_fns if neccessary.\n+\t(expand_call_inline): Add fn to inlined_fns if necessary.\n \t(optimize_function): Initialize inlined_fns.\n \tSave inlined_fns into DECL_INLINED_FNS after expanding inlines.\n \t* decl.c (mark_inlined_fns): New function.\n@@ -6889,7 +6894,7 @@ Sat May 27 11:25:46 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t(DECL_USE_VTT_PARM): Likewise.\n \t(DECL_NEEDS_VTT_PARM_P): Likewise.\n \t(get_vtt_name): Declare.\n-\t(build_artifical_parm): Likewise.\n+\t(build_artificial_parm): Likewise.\n \t(fixup_all_virtual_upcast_offsets): Likewise.\n \t(expand_indirect_vtbls_init): Remove.\n \t* call.c (build_new_method_call): Pass the vtt to subobject\n@@ -8107,7 +8112,7 @@ Sat Apr 15 16:00:01 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2000-04-05  Benjamin Kosnik  <bkoz@cygnus.com>\n \n-\t* decl2.c: Make flag_honor_std dependant on ENABLE_STD_NAMESPACE.\n+\t* decl2.c: Make flag_honor_std dependent on ENABLE_STD_NAMESPACE.\n \n 2000-04-05  Mark Mitchell  <mark@codesourcery.com>\n \n@@ -8934,7 +8939,7 @@ Mon Mar  6 08:46:47 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t(build_over_call): Likewise. Don't warn about dubious\n \tconversions here. Adjust convert_default_arg calls.\n \t(convert_default_arg): Add context parameters for diagnostics.\n-\tPass throught to convert_like_with_context.\n+\tPass through to convert_like_with_context.\n \t* cp-tree.h (convert_default_arg): Add context parameters.\n \t(dubious_conversion_warnings): Prototype new function.\n \t* typeck.c (convert_arguments): Adjust convert_default_arg call.\n@@ -9963,8 +9968,8 @@ Wed Jan 26 22:19:14 2000  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \t(expand_attr_desc): Likewise.\n \t(expand_generic_desc): Likewise.\n \n-\t* tinfo.cc (__GXX_ABI_VERSION): Test value and existance.\n-\t* tinfo.h (__GXX_ABI_VERSION): Test value and existance.\n+\t* tinfo.cc (__GXX_ABI_VERSION): Test value and existence.\n+\t* tinfo.h (__GXX_ABI_VERSION): Test value and existence.\n \n 2000-01-23  Mark Mitchell  <mark@codesourcery.com>\n "}, {"sha": "5cc0dac7fb0d7d91b4073038822af4cf9cb9cdd4", "filename": "gcc/cp/ChangeLog.1", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/306ef64467b81eff37995c0620ee097c9d174463/gcc%2Fcp%2FChangeLog.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/306ef64467b81eff37995c0620ee097c9d174463/gcc%2Fcp%2FChangeLog.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog.1?ref=306ef64467b81eff37995c0620ee097c9d174463", "patch": "@@ -753,7 +753,7 @@ Wed Jul 19 13:23:12 1995  Gerald Baumgartner  <gb@alexander.cs.purdue.edu>\n \t(init_decl_processing): Initialize vb_off_identifier.\n \tRenamed vt_off_identifier from offset_identifier.\n \t* sig.c (build_signature_method_call): Renamed offset_identifier and\n-\tlocal variable offset to vt_off_identifer and vt_off, respecitively.\n+\tlocal variable offset to vt_off_identifier and vt_off, respectively.\n \t* sig.c (build_signature_table_constructor): Renamed offset to vt_off.\n \n \t* decl.c (init_decl_processing): Add vb_off field to"}, {"sha": "7a848eedc1834c147f4a889323f9a3c165627dd3", "filename": "gcc/cp/ChangeLog.2", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/306ef64467b81eff37995c0620ee097c9d174463/gcc%2Fcp%2FChangeLog.2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/306ef64467b81eff37995c0620ee097c9d174463/gcc%2Fcp%2FChangeLog.2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog.2?ref=306ef64467b81eff37995c0620ee097c9d174463", "patch": "@@ -3319,7 +3319,7 @@ Mon Aug 23 22:17:20 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n \t(finish_struct_1): Likewise.\n \t(init_class_processing): Likewise.\n \t* decl.c (push_using_decl): Likewise.\n-\t(init_decl_processsing): Likewise.\n+\t(init_decl_processing): Likewise.\n \t(grokvardecl): Likewise.\n \t(build_ptrmemfunc_type): Likewise.\n \t(grokdeclarator): Likewise.\n@@ -4168,7 +4168,7 @@ Thu Aug  5 02:40:42 1999  Jeffrey A Law  (law@cygnus.com)\n \t\n \t* cp-tree.h (abstract_virtuals_error): Change declaration.\n \t* typeck2.c (abstract_virtuals_error): Check to see if an error\n-\tocurred, and return a boolean value accordingly.\n+\toccurred, and return a boolean value accordingly.\n \t(build_functional_cast): Adjust accordingly.\n \t* class.c (finish_struct_1): Likewise.\n \t* cvt.c (ocp_convert): Likewise.\n@@ -6427,7 +6427,7 @@ Thu Feb 18 23:40:01 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n 1999-02-10  Jason Merrill  <jason@yorick.cygnus.com>\n \n-\t* decl.c (grokdeclarator): Catch wierd declarators.\n+\t* decl.c (grokdeclarator): Catch weird declarators.\n \t* decl2.c (finish_file): Don't abort because of namespace parsing\n \tfailure.\n \t(check_decl_namespace): Remove."}, {"sha": "fe43d8238273336da73fbcd7a3cbb9ab0ca06993", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/306ef64467b81eff37995c0620ee097c9d174463/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/306ef64467b81eff37995c0620ee097c9d174463/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=306ef64467b81eff37995c0620ee097c9d174463", "patch": "@@ -1557,7 +1557,7 @@ mark_primary_virtual_base (base_binfo, type)\n   if (BINFO_PRIMARY_P (shared_binfo))\n     {\n       /* It's already allocated in the hierarchy. BINFO won't have a\n-         primary base in this hierachy, even though the complete object\n+         primary base in this hierarchy, even though the complete object\n          BINFO is for, would do.  */\n       return NULL_TREE;\n     }"}, {"sha": "f2bbba09f2c199690826097a3b13440696eab243", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/306ef64467b81eff37995c0620ee097c9d174463/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/306ef64467b81eff37995c0620ee097c9d174463/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=306ef64467b81eff37995c0620ee097c9d174463", "patch": "@@ -93,7 +93,7 @@ static tree get_guard_bits PARAMS ((tree));\n \n /* A list of static class variables.  This is needed, because a\n    static class variable can be declared inside the class without\n-   an initializer, and then initialized, staticly, outside the class.  */\n+   an initializer, and then initialized, statically, outside the class.  */\n static varray_type pending_statics;\n #define pending_statics_used \\\n   (pending_statics ? pending_statics->elements_used : 0)"}, {"sha": "e7076f5f9ecb23ee04775ac596c4df1c37fcfac0", "filename": "gcc/cp/search.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/306ef64467b81eff37995c0620ee097c9d174463/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/306ef64467b81eff37995c0620ee097c9d174463/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=306ef64467b81eff37995c0620ee097c9d174463", "patch": "@@ -523,7 +523,7 @@ dynamic_cast_base_recurse (subtype, binfo, via_virtual, offset_ptr)\n \n /* The dynamic cast runtime needs a hint about how the static SUBTYPE type\n    started from is related to the required TARGET type, in order to optimize\n-   the inheritance graph search. This information is independant of the\n+   the inheritance graph search. This information is independent of the\n    current context, and ignores private paths, hence get_base_distance is\n    inappropriate. Return a TREE specifying the base offset, BOFF.\n    BOFF >= 0, there is only one public non-virtual SUBTYPE base at offset BOFF,"}, {"sha": "1842974263afdd6bd6659d4e9614b487c0409cb9", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/306ef64467b81eff37995c0620ee097c9d174463/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/306ef64467b81eff37995c0620ee097c9d174463/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=306ef64467b81eff37995c0620ee097c9d174463", "patch": "@@ -2048,7 +2048,7 @@ finish_member_class_template (types)\n   return NULL_TREE;\n }\n \n-/* Finish processsing a complete template declaration.  The PARMS are\n+/* Finish processing a complete template declaration.  The PARMS are\n    the template parameters.  */\n \n void"}, {"sha": "9e4f13bc91ac9a2964154e42137e8b6ca5b58b95", "filename": "gcc/cp/spew.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/306ef64467b81eff37995c0620ee097c9d174463/gcc%2Fcp%2Fspew.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/306ef64467b81eff37995c0620ee097c9d174463/gcc%2Fcp%2Fspew.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fspew.c?ref=306ef64467b81eff37995c0620ee097c9d174463", "patch": "@@ -1355,7 +1355,7 @@ do_pending_defargs ()\n         {\n           /* This function's default args depend on unprocessed default args\n              of defarg_fns. We will need to reprocess this function, and\n-             check for circular dependancies.  */\n+             check for circular dependencies.  */\n           tree a, b;\n           \n           for (a = defarg_depfns, b = TREE_PURPOSE (current); a && b; "}]}