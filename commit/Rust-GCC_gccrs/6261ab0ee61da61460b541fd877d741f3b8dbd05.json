{"sha": "6261ab0ee61da61460b541fd877d741f3b8dbd05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI2MWFiMGVlNjFkYTYxNDYwYjU0MWZkODc3ZDc0MWYzYjhkYmQwNQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2011-03-16T17:32:58Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2011-03-16T17:32:58Z"}, "message": "tree-vrp.c (identify_jump_threads): Slightly simplify type check for operands of conditional.\n\n \t* tree-vrp.c (identify_jump_threads): Slightly simplify type\n \tcheck for operands of conditional.  Allow type to be a\n \tpointer.\n \n \n \t* gcc.dg/tree-ssa/vrp55.c: New test.\n\nFrom-SVN: r171055", "tree": {"sha": "9ed551087a24fe1b4ebf541c50da971c2db7d7a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ed551087a24fe1b4ebf541c50da971c2db7d7a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6261ab0ee61da61460b541fd877d741f3b8dbd05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6261ab0ee61da61460b541fd877d741f3b8dbd05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6261ab0ee61da61460b541fd877d741f3b8dbd05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6261ab0ee61da61460b541fd877d741f3b8dbd05/comments", "author": null, "committer": null, "parents": [{"sha": "23d956f9358316e3a65455ff3dc4caffb6b67de3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23d956f9358316e3a65455ff3dc4caffb6b67de3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23d956f9358316e3a65455ff3dc4caffb6b67de3"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "faf65fc4eb98c904c281a6048e55966a7076dc59", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6261ab0ee61da61460b541fd877d741f3b8dbd05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6261ab0ee61da61460b541fd877d741f3b8dbd05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6261ab0ee61da61460b541fd877d741f3b8dbd05", "patch": "@@ -1,3 +1,9 @@\n+2011-03-16  Jeff Law  <law@redhat.com>\n+\n+\t* tree-vrp.c (identify_jump_threads): Slightly simplify type\n+\tcheck for operands of conditional.  Allow type to be a\n+\tpointer.\n+\n 2011-03-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/48149"}, {"sha": "72f30d8215a944be05ea8de1c0c717cf60c261c7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6261ab0ee61da61460b541fd877d741f3b8dbd05/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6261ab0ee61da61460b541fd877d741f3b8dbd05/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6261ab0ee61da61460b541fd877d741f3b8dbd05", "patch": "@@ -1,3 +1,7 @@\n+2011-03-16  Jeff Law <law@redhat.com>\n+\n+\t* gcc.dg/tree-ssa/vrp55.c: New test.\n+\n 2011-03-16  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/auto22.C: New."}, {"sha": "7adfe62052d4d7e0e630b42a17f354a23e2ab5aa", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp55.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6261ab0ee61da61460b541fd877d741f3b8dbd05/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp55.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6261ab0ee61da61460b541fd877d741f3b8dbd05/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp55.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp55.c?ref=6261ab0ee61da61460b541fd877d741f3b8dbd05", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-vrp1-blocks-vops-details\" } */\n+\n+fu (char *p, int x)\n+{\n+  if (x)\n+   *p = 69;\n+  if (p)\n+    arf ();\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Threaded jump\" 1 \"vrp1\" } } */\n+/* { dg-final { cleanup-tree-dump \"vrp1\" } } */\n+"}, {"sha": "d2e6551d9928d260f0a453cc58622ef934f69ebd", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6261ab0ee61da61460b541fd877d741f3b8dbd05/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6261ab0ee61da61460b541fd877d741f3b8dbd05/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=6261ab0ee61da61460b541fd877d741f3b8dbd05", "patch": "@@ -7538,12 +7538,14 @@ identify_jump_threads (void)\n \tcontinue;\n \n       /* We're basically looking for any kind of conditional with\n-\t integral type arguments.  */\n+\t integral or pointer type arguments.  Note the type of the second\n+\t argument will be the same as the first argument, so no need to\n+\t check it explicitly.  */\n       if (TREE_CODE (gimple_cond_lhs (last)) == SSA_NAME\n-\t  && INTEGRAL_TYPE_P (TREE_TYPE (gimple_cond_lhs (last)))\n+\t  && (INTEGRAL_TYPE_P (TREE_TYPE (gimple_cond_lhs (last)))\n+\t      || POINTER_TYPE_P (TREE_TYPE (gimple_cond_lhs (last))))\n \t  && (TREE_CODE (gimple_cond_rhs (last)) == SSA_NAME\n-\t      || is_gimple_min_invariant (gimple_cond_rhs (last)))\n-\t  && INTEGRAL_TYPE_P (TREE_TYPE (gimple_cond_rhs (last))))\n+\t      || is_gimple_min_invariant (gimple_cond_rhs (last))))\n \t{\n \t  edge_iterator ei;\n "}]}