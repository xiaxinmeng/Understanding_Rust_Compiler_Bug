{"sha": "d70b0f1f2212a900b8547b288a7c3d2ae89ac267", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcwYjBmMWYyMjEyYTkwMGI4NTQ3YjI4OGE3YzNkMmFlODlhYzI2Nw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2013-09-25T09:04:20Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2013-09-25T09:04:20Z"}, "message": "re PR sanitizer/58420 (internal compiler error: in ubsan_type_descriptor, at ubsan.c:280)\n\n\tPR sanitizer/58420\n\t* ubsan.c (ubsan_type_descriptor): Handle IDENTIFIER_NODEs\n\twhen determining the type name.\n\nFrom-SVN: r202887", "tree": {"sha": "38ec26258c9aa12e84aa51c4a0491891d8c94ffb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38ec26258c9aa12e84aa51c4a0491891d8c94ffb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d70b0f1f2212a900b8547b288a7c3d2ae89ac267", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d70b0f1f2212a900b8547b288a7c3d2ae89ac267", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d70b0f1f2212a900b8547b288a7c3d2ae89ac267", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d70b0f1f2212a900b8547b288a7c3d2ae89ac267/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b56e978833b09ba47ebc4ebdace007164b493266", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b56e978833b09ba47ebc4ebdace007164b493266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b56e978833b09ba47ebc4ebdace007164b493266"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "e6f2b9ea8fd77d5861cf5ba3bce2a68f4925e48d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d70b0f1f2212a900b8547b288a7c3d2ae89ac267/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d70b0f1f2212a900b8547b288a7c3d2ae89ac267/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d70b0f1f2212a900b8547b288a7c3d2ae89ac267", "patch": "@@ -1,3 +1,9 @@\n+2013-09-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/58420\n+\t* ubsan.c (ubsan_type_descriptor): Handle IDENTIFIER_NODEs\n+\twhen determining the type name.\n+\n 2013-09-24  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* config/sh/sh.md: Fix formatting."}, {"sha": "9dc19c9d29add73ab8d44e5ff5fa6539fefbddc8", "filename": "gcc/ubsan.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d70b0f1f2212a900b8547b288a7c3d2ae89ac267/gcc%2Fubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d70b0f1f2212a900b8547b288a7c3d2ae89ac267/gcc%2Fubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fubsan.c?ref=d70b0f1f2212a900b8547b288a7c3d2ae89ac267", "patch": "@@ -259,11 +259,18 @@ ubsan_type_descriptor (tree type)\n   unsigned short tkind, tinfo;\n \n   /* At least for INTEGER_TYPE/REAL_TYPE/COMPLEX_TYPE, this should work.\n-     ??? For e.g. type_unsigned_for (type), the TYPE_NAME would be NULL.  */\n+     For e.g. type_unsigned_for (type) or bit-fields, the TYPE_NAME\n+     would be NULL.  */\n   if (TYPE_NAME (type) != NULL)\n-    tname = IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (type)));\n+    {\n+      if (TREE_CODE (TYPE_NAME (type)) == IDENTIFIER_NODE)\n+\ttname = IDENTIFIER_POINTER (TYPE_NAME (type));\n+      else\n+\ttname = IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (type)));\n+    }\n   else\n     tname = \"<unknown>\";\n+\n   if (TREE_CODE (type) == INTEGER_TYPE)\n     {\n       /* For INTEGER_TYPE, this is 0x0000.  */"}]}