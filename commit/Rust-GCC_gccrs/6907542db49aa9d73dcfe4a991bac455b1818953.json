{"sha": "6907542db49aa9d73dcfe4a991bac455b1818953", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkwNzU0MmRiNDlhYTlkNzNkY2ZlNGE5OTFiYWM0NTViMTgxODk1Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T09:29:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T09:29:54Z"}, "message": "[multiple changes]\n\n2014-07-18  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Try_Container_Indexing): Refine previous patch for\n\tindexing over containers that are derived types: check whether\n\tsignature of found operation has the correct first parameter\n\tbefore retrieving directly a primitive operation.\n\n2014-07-18  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_attr.adb (Analyze_Attribute, case 'Update): Set\n\tDo_Range_Check flag on dynamic bounds of a range used in a\n\tcomponent association in the argument of Update.\n\n2014-07-18  Thomas Quinot  <quinot@adacore.com>\n\n\t* adaint.c: #define _REENTRANT and _THREAD_SAFE in order for\n\taccesses to errno(3) to be thread safe.\n\n2014-07-18  Vincent Celier  <celier@adacore.com>\n\n\t* prj-tree.adb (Imported_Or_Extended_Project_Of): For each non\n\tlimited imported project that is an extending project, return\n\ta project being extended if it has the expected name.\n\n2014-07-18  Pascal Obry  <obry@adacore.com>\n\n\t* s-os_lib.ads, s-os_lib.adb (Set_File_Last_Modify_Time_Stamp): New\n\troutine to set the last modification time stamp for the given file.\n\t* gnatchop.adb (File_Time_Stamp): Removed.\n\t(Write_Unit): Use\n\tSet_File_Last_Modify_Time_Stamp instead of ad-hoc implementation.\n\nFrom-SVN: r212787", "tree": {"sha": "f9b4e0397263795900a2a5e40576976a075bf65b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9b4e0397263795900a2a5e40576976a075bf65b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6907542db49aa9d73dcfe4a991bac455b1818953", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6907542db49aa9d73dcfe4a991bac455b1818953", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6907542db49aa9d73dcfe4a991bac455b1818953", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6907542db49aa9d73dcfe4a991bac455b1818953/comments", "author": null, "committer": null, "parents": [{"sha": "3f433bc07ebc9821a4edeea9ecfa3ea94b0b00d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f433bc07ebc9821a4edeea9ecfa3ea94b0b00d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f433bc07ebc9821a4edeea9ecfa3ea94b0b00d1"}], "stats": {"total": 123, "additions": 94, "deletions": 29}, "files": [{"sha": "7321d41992ec022d88ea7a68bcd7e39db73c4b2a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6907542db49aa9d73dcfe4a991bac455b1818953/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6907542db49aa9d73dcfe4a991bac455b1818953/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6907542db49aa9d73dcfe4a991bac455b1818953", "patch": "@@ -1,3 +1,35 @@\n+2014-07-18  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Try_Container_Indexing): Refine previous patch for\n+\tindexing over containers that are derived types: check whether\n+\tsignature of found operation has the correct first parameter\n+\tbefore retrieving directly a primitive operation.\n+\n+2014-07-18  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_attr.adb (Analyze_Attribute, case 'Update): Set\n+\tDo_Range_Check flag on dynamic bounds of a range used in a\n+\tcomponent association in the argument of Update.\n+\n+2014-07-18  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* adaint.c: #define _REENTRANT and _THREAD_SAFE in order for\n+\taccesses to errno(3) to be thread safe.\n+\n+2014-07-18  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-tree.adb (Imported_Or_Extended_Project_Of): For each non\n+\tlimited imported project that is an extending project, return\n+\ta project being extended if it has the expected name.\n+\n+2014-07-18  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-os_lib.ads, s-os_lib.adb (Set_File_Last_Modify_Time_Stamp): New\n+\troutine to set the last modification time stamp for the given file.\n+\t* gnatchop.adb (File_Time_Stamp): Removed.\n+\t(Write_Unit): Use\n+\tSet_File_Last_Modify_Time_Stamp instead of ad-hoc implementation.\n+\n 2014-07-18  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_aggr.adb (Aggregate_Constraint_Checks): Moved to sem_util."}, {"sha": "607ba8257295a06fc1f1f8ef26529d108e450563", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6907542db49aa9d73dcfe4a991bac455b1818953/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6907542db49aa9d73dcfe4a991bac455b1818953/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=6907542db49aa9d73dcfe4a991bac455b1818953", "patch": "@@ -34,6 +34,10 @@\n    package Osint.  Many of the subprograms in OS_Lib import standard\n    library calls directly. This file contains all other routines.  */\n \n+/* Ensure accesses to errno are thread safe.  */\n+#define _REENTRANT\n+#define _THREAD_SAFE\n+\n #ifdef __vxworks\n \n /* No need to redefine exit here.  */"}, {"sha": "d51e83adf5c1ee9f5d452ea921a2a18a9de590d8", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6907542db49aa9d73dcfe4a991bac455b1818953/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6907542db49aa9d73dcfe4a991bac455b1818953/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=6907542db49aa9d73dcfe4a991bac455b1818953", "patch": "@@ -209,10 +209,6 @@ procedure Gnatchop is\n    procedure Error_Msg (Message : String; Warning : Boolean := False);\n    --  Produce an error message on standard error output\n \n-   procedure File_Time_Stamp (Name : C_File_Name; Time : OS_Time);\n-   --  Given the name of a file or directory, Name, set the\n-   --  time stamp. This function must be used for an unopened file.\n-\n    function Files_Exist return Boolean;\n    --  Check Unit.Table for possible file names that already exist\n    --  in the file system. Returns true if files exist, False otherwise\n@@ -372,18 +368,6 @@ procedure Gnatchop is\n       end if;\n    end Error_Msg;\n \n-   ---------------------\n-   -- File_Time_Stamp --\n-   ---------------------\n-\n-   procedure File_Time_Stamp (Name : C_File_Name; Time : OS_Time) is\n-      procedure Set_File_Time (Name : C_File_Name; Time : OS_Time);\n-      pragma Import (C, Set_File_Time, \"__gnat_set_file_time_name\");\n-\n-   begin\n-      Set_File_Time (Name, Time);\n-   end File_Time_Stamp;\n-\n    -----------------\n    -- Files_Exist --\n    -----------------\n@@ -1708,7 +1692,6 @@ procedure Gnatchop is\n \n       declare\n          E_Name      : constant String := OS_Name (1 .. O_Length);\n-         C_Name      : aliased constant String := E_Name & ASCII.NUL;\n          OS_Encoding : constant String := Encoding (1 .. E_Length);\n          File        : Stream_IO.File_Type;\n \n@@ -1776,7 +1759,7 @@ procedure Gnatchop is\n          Stream_IO.Close (File);\n \n          if Preserve_Mode then\n-            File_Time_Stamp (C_Name'Address, TS_Time);\n+            Set_File_Last_Modify_Time_Stamp (E_Name, TS_Time);\n          end if;\n       end;\n    end Write_Unit;"}, {"sha": "e4a23602e20f7a1a1b506254b4c52e3e21456c05", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6907542db49aa9d73dcfe4a991bac455b1818953/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6907542db49aa9d73dcfe4a991bac455b1818953/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=6907542db49aa9d73dcfe4a991bac455b1818953", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1134,8 +1134,17 @@ package body Prj.Tree is\n          --  of variable or attributes.\n \n          Result := Non_Limited_Project_Node_Of (With_Clause, In_Tree);\n-         exit when Present (Result)\n-           and then Name_Of (Result, In_Tree) = With_Name;\n+\n+         while Present (Result) loop\n+            if Name_Of (Result, In_Tree) = With_Name then\n+               return Result;\n+            end if;\n+\n+            Result :=\n+              Extended_Project_Of\n+                (Project_Declaration_Of (Result, In_Tree), In_Tree);\n+         end loop;\n+\n          With_Clause := Next_With_Clause_Of (With_Clause, In_Tree);\n       end loop;\n "}, {"sha": "17ac32e3bdb9f3c6c31485eca8e87ac6b87e4240", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6907542db49aa9d73dcfe4a991bac455b1818953/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6907542db49aa9d73dcfe4a991bac455b1818953/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=6907542db49aa9d73dcfe4a991bac455b1818953", "patch": "@@ -2385,6 +2385,20 @@ package body System.OS_Lib is\n       C_Set_Executable (C_Name (C_Name'First)'Address, Mode);\n    end Set_Executable;\n \n+   -------------------------------------\n+   -- Set_File_Last_Modify_Time_Stamp --\n+   -------------------------------------\n+\n+   procedure Set_File_Last_Modify_Time_Stamp (Name : String; Time : OS_Time) is\n+      procedure C_Set_File_Time (Name : C_File_Name; Time : OS_Time);\n+      pragma Import (C, C_Set_File_Time, \"__gnat_set_file_time_name\");\n+      C_Name : aliased String (Name'First .. Name'Last + 1);\n+   begin\n+      C_Name (Name'Range)  := Name;\n+      C_Name (C_Name'Last) := ASCII.NUL;\n+      C_Set_File_Time (C_Name'Address, Time);\n+   end Set_File_Last_Modify_Time_Stamp;\n+\n    ----------------------\n    -- Set_Non_Readable --\n    ----------------------"}, {"sha": "9552d8626fd5421785557537653358cbd0ae7ee4", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6907542db49aa9d73dcfe4a991bac455b1818953/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6907542db49aa9d73dcfe4a991bac455b1818953/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=6907542db49aa9d73dcfe4a991bac455b1818953", "patch": "@@ -384,6 +384,10 @@ package System.OS_Lib is\n    --  Note: this procedure is not supported on VMS and VxWorks 5. On these\n    --  platforms, Success is always set to False.\n \n+   procedure Set_File_Last_Modify_Time_Stamp (Name : String; Time : OS_Time);\n+   --  Given the name of a file or directory, Name, set the last modification\n+   --  time stamp. This function must be used for an unopened file.\n+\n    function Read\n      (FD : File_Descriptor;\n       A  : System.Address;"}, {"sha": "e65fecd339e39df5c5380339b553b44cf529f9de", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6907542db49aa9d73dcfe4a991bac455b1818953/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6907542db49aa9d73dcfe4a991bac455b1818953/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=6907542db49aa9d73dcfe4a991bac455b1818953", "patch": "@@ -6314,6 +6314,7 @@ package body Sem_Attr is\n                   declare\n                      Index      : Node_Id;\n                      Index_Type : Entity_Id;\n+                     Lo, Hi     : Node_Id;\n \n                   begin\n                      if Nkind (First (Choices (Assoc))) /= N_Aggregate then\n@@ -6331,11 +6332,18 @@ package body Sem_Attr is\n                         Index := First (Choices (Assoc));\n                         while Present (Index) loop\n                            if Nkind (Index) = N_Range then\n-                              Analyze_And_Resolve\n-                                (Low_Bound (Index), Etype (Index_Type));\n-                              Analyze_And_Resolve\n-                                (High_Bound (Index), Etype (Index_Type));\n-                              Set_Etype (Index, Etype (Index_Type));\n+                              Lo := Low_Bound  (Index);\n+                              Hi := High_Bound (Index);\n+\n+                              Analyze_And_Resolve (Lo, Etype (Index_Type));\n+                              if not Is_OK_Static_Expression (Lo) then\n+                                 Set_Do_Range_Check (Lo);\n+                              end if;\n+\n+                              Analyze_And_Resolve (Hi, Etype (Index_Type));\n+                              if not Is_OK_Static_Expression (Hi) then\n+                                 Set_Do_Range_Check (Hi);\n+                              end if;\n \n                            else\n                               Analyze_And_Resolve (Index, Etype (Index_Type));"}, {"sha": "ab7a10de09e16423bbb9f5a355a8fdb360b2e428", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6907542db49aa9d73dcfe4a991bac455b1818953/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6907542db49aa9d73dcfe4a991bac455b1818953/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=6907542db49aa9d73dcfe4a991bac455b1818953", "patch": "@@ -7021,13 +7021,24 @@ package body Sem_Ch4 is\n             return False;\n          end if;\n \n-      --  If the container type is a derived type, the value of the inherited\n-      --  aspect is the Reference operation declared for the parent type.\n+      --  If the container type is derived from another container type, the\n+      --  value of the inherited aspect is the Reference operation declared\n+      --  for the parent type.\n+\n       --  However, Reference is also a primitive operation of the type, and\n       --  the inherited operation has a different signature. We retrieve the\n       --  right one from the list of primitive operations of the derived type.\n \n-      elsif Is_Derived_Type (Etype (Prefix)) then\n+      --  Note that predefined containers are typically all derived from one\n+      --  of the Controlled types. The code below is motivated by containers\n+      --  that are derived from other types with a Reference aspect.\n+\n+      --  Additional machinery may be needed for types that have several user-\n+      --  defined Reference operations with different signatures ???\n+\n+      elsif Is_Derived_Type (Etype (Prefix))\n+        and then Etype (First_Formal (Entity (Func_Name))) /= Etype (Prefix)\n+      then\n          Func := Find_Prim_Op (Etype (Prefix), Chars (Func_Name));\n          Func_Name := New_Occurrence_Of (Func, Loc);\n       end if;"}]}