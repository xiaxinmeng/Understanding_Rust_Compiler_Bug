{"sha": "30ca47e6eb445c98ac17f0d849c45b6389b40297", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBjYTQ3ZTZlYjQ0NWM5OGFjMTdmMGQ4NDljNDViNjM4OWI0MDI5Nw==", "commit": {"author": {"name": "Rodrigo Rivas Costa", "email": "rodrigorivascosta@gmail.com", "date": "2010-10-20T14:13:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-10-20T14:13:38Z"}, "message": "re PR c++/46056 ([C++0x] range-based for loop does not destruct iterators)\n\n\tPR c++/46056\n\t* parser.c (cp_convert_range_for): Call cp_finish_decl\n\tinstead of finish_expr_stmt.\n\nFrom-SVN: r165726", "tree": {"sha": "ff3c099151530c0df481b387b9fa4675fbb31c3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff3c099151530c0df481b387b9fa4675fbb31c3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30ca47e6eb445c98ac17f0d849c45b6389b40297", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30ca47e6eb445c98ac17f0d849c45b6389b40297", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30ca47e6eb445c98ac17f0d849c45b6389b40297", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30ca47e6eb445c98ac17f0d849c45b6389b40297/comments", "author": {"login": "rodrigorc", "id": 1128630, "node_id": "MDQ6VXNlcjExMjg2MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1128630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrigorc", "html_url": "https://github.com/rodrigorc", "followers_url": "https://api.github.com/users/rodrigorc/followers", "following_url": "https://api.github.com/users/rodrigorc/following{/other_user}", "gists_url": "https://api.github.com/users/rodrigorc/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrigorc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrigorc/subscriptions", "organizations_url": "https://api.github.com/users/rodrigorc/orgs", "repos_url": "https://api.github.com/users/rodrigorc/repos", "events_url": "https://api.github.com/users/rodrigorc/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrigorc/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b0e3802574b1bced2cc7304b2495213e8edc7d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b0e3802574b1bced2cc7304b2495213e8edc7d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b0e3802574b1bced2cc7304b2495213e8edc7d5"}], "stats": {"total": 146, "additions": 139, "deletions": 7}, "files": [{"sha": "2d6a17d36803eb2e0eca3385f7f43db1b702f6fb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ca47e6eb445c98ac17f0d849c45b6389b40297/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ca47e6eb445c98ac17f0d849c45b6389b40297/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=30ca47e6eb445c98ac17f0d849c45b6389b40297", "patch": "@@ -1,3 +1,9 @@\n+2010-10-20  Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>\n+\n+\tPR c++/46056\n+\t* parser.c (cp_convert_range_for): Call cp_finish_decl\n+\tinstead of finish_expr_stmt.\n+\n 2010-10-20  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* cp-lang.c (finish_file): Removed."}, {"sha": "8c0129ba26b5cfbf032ea3242696f6b9c1eb9604", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ca47e6eb445c98ac17f0d849c45b6389b40297/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ca47e6eb445c98ac17f0d849c45b6389b40297/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=30ca47e6eb445c98ac17f0d849c45b6389b40297", "patch": "@@ -8773,8 +8773,10 @@ cp_convert_range_for (tree statement, tree range_decl, tree range_expr)\n   TREE_USED (range_temp) = 1;\n   DECL_ARTIFICIAL (range_temp) = 1;\n   pushdecl (range_temp);\n-  finish_expr_stmt (cp_build_modify_expr (range_temp, INIT_EXPR, range_expr,\n-\t\t\t\t\t  tf_warning_or_error));\n+  cp_finish_decl (range_temp, range_expr,\n+\t\t  /*is_constant_init*/false, NULL_TREE,\n+\t\t  LOOKUP_ONLYCONVERTING);\n+\n   range_temp = convert_from_reference (range_temp);\n \n   if (TREE_CODE (TREE_TYPE (range_temp)) == ARRAY_TYPE)\n@@ -8824,16 +8826,18 @@ cp_convert_range_for (tree statement, tree range_decl, tree range_expr)\n   TREE_USED (begin) = 1;\n   DECL_ARTIFICIAL (begin) = 1;\n   pushdecl (begin);\n-  finish_expr_stmt (cp_build_modify_expr (begin, INIT_EXPR, begin_expr,\n-\t\t\t\t\t  tf_warning_or_error));\n+  cp_finish_decl (begin, begin_expr,\n+\t\t  /*is_constant_init*/false, NULL_TREE,\n+\t\t  LOOKUP_ONLYCONVERTING);\n+\n   end = build_decl (input_location, VAR_DECL,\n \t\t    get_identifier (\"__for_end\"), iter_type);\n   TREE_USED (end) = 1;\n   DECL_ARTIFICIAL (end) = 1;\n   pushdecl (end);\n-\n-  finish_expr_stmt (cp_build_modify_expr (end, INIT_EXPR, end_expr,\n-\t\t\t\t\t  tf_warning_or_error));\n+  cp_finish_decl (end, end_expr,\n+\t\t  /*is_constant_init*/false, NULL_TREE,\n+\t\t  LOOKUP_ONLYCONVERTING);\n \n   finish_for_init_stmt (statement);\n "}, {"sha": "2811af57d87c8b26dab8a023ea0d49bbdab537ca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ca47e6eb445c98ac17f0d849c45b6389b40297/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ca47e6eb445c98ac17f0d849c45b6389b40297/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=30ca47e6eb445c98ac17f0d849c45b6389b40297", "patch": "@@ -1,3 +1,8 @@\n+2010-10-20  Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>\n+\n+\tPR c++/46056\n+\t* g++.dg/cpp0x/range-for7.C: New.\n+\n 2010-10-20  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/45667"}, {"sha": "ad89dc201b62d386902f4d2f92b32f1e439cf9bb", "filename": "gcc/testsuite/g++.dg/cpp0x/range-for7.C", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30ca47e6eb445c98ac17f0d849c45b6389b40297/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30ca47e6eb445c98ac17f0d849c45b6389b40297/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for7.C?ref=30ca47e6eb445c98ac17f0d849c45b6389b40297", "patch": "@@ -0,0 +1,117 @@\n+// PR c++/46056\n+// Check that range-based for loop calls destructors \n+// when required\n+// { dg-options \"-std=c++0x\" }\n+// { dg-do run }\n+extern \"C\" void abort();\n+\n+int value_counter = 0, it_counter = 0, seq_counter = 0;\n+\n+struct Int\n+{\n+    int x;\n+    Int(int v)\n+        :x(v)\n+    {\n+        ++value_counter;\n+    }\n+    Int(const Int &o)\n+        :x(o.x)\n+    {\n+        ++value_counter;\n+    }\n+    ~Int()\n+    {\n+        --value_counter;\n+    }\n+};\n+\n+struct iterator\n+{\n+    int x;\n+    iterator(int v) \n+        :x(v) \n+    {\n+        ++it_counter;\n+    }\n+    iterator(const iterator &o)\n+        :x(o.x)\n+    {\n+        ++it_counter;\n+    }\n+    ~iterator() \n+    {\n+        --it_counter;\n+    }\n+    iterator &operator ++() { ++x; return *this; }\n+    int operator *() { return x; }\n+    bool operator != (const iterator &o) { return x != o.x; }\n+};\n+\n+struct container\n+{\n+    int min, max;\n+    container(int a, int b) :min(a), max(b)\n+    {\n+        ++seq_counter;\n+    }\n+    container(const container &) = delete;\n+    ~container()\n+    {\n+        --seq_counter;\n+    }\n+};\n+\n+iterator begin(container &c)\n+{\n+    return iterator(c.min);\n+}\n+\n+iterator end(container &c)\n+{\n+    return iterator(c.max + 1);\n+}\n+\n+int main()\n+{\n+    for (Int x : container(0, 10))\n+    {\n+        if (value_counter != 1) abort();\n+        if (it_counter != 2) abort();\n+        if (seq_counter != 1) abort();\n+    }\n+    if (value_counter != 0) abort();\n+    if (it_counter != 0) abort();\n+    if (seq_counter != 0) abort();\n+\n+    try\n+    {\n+        for (Int x : container(0, 10))\n+        {\n+            if (value_counter != 1) abort();\n+            if (it_counter != 2) abort();\n+            if (seq_counter != 1) abort();\n+        }\n+        if (value_counter != 0) abort();\n+        if (it_counter != 0) abort();\n+        if (seq_counter != 0) abort();\n+\n+        for (Int x : container(0, 10))\n+        {\n+            if (value_counter != 1) abort();\n+            if (it_counter != 2) abort();\n+            if (seq_counter != 1) abort();\n+\n+            if (x.x == 5)\n+                throw 0;\n+        }\n+    }\n+    catch (int)\n+    {\n+        if (value_counter != 0) abort();\n+        if (it_counter != 0) abort();\n+        if (seq_counter != 0) abort();\n+    }\n+\n+    return 0;\n+}"}]}