{"sha": "14379e666810cff69f620fbad5a44ce2d68486c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQzNzllNjY2ODEwY2ZmNjlmNjIwZmJhZDVhNDRjZTJkNjg0ODZjMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-01-17T14:49:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-01-17T14:49:18Z"}, "message": "re PR tree-optimization/46590 (long compile time with -O2 and many loops)\n\n2014-01-17  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/46590\n\t* opts.c (default_options_table): Add entries for\n\tOPT_fbranch_count_reg, OPT_fmove_loop_invariants and OPT_ftree_pta,\n\tall enabled at -O1 but not for -Og.\n\t* common.opt (fbranch-count-reg): Remove Init(1).\n\t(fmove-loop-invariants): Likewise.\n\t(ftree-pta): Likewise.\n\nFrom-SVN: r206714", "tree": {"sha": "b9e05de50b35d90bd6fffa9b05c48acfdfe12bf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9e05de50b35d90bd6fffa9b05c48acfdfe12bf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14379e666810cff69f620fbad5a44ce2d68486c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14379e666810cff69f620fbad5a44ce2d68486c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14379e666810cff69f620fbad5a44ce2d68486c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14379e666810cff69f620fbad5a44ce2d68486c3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88e18bd5cc520a945793b5cae2561ad3a70633f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e18bd5cc520a945793b5cae2561ad3a70633f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88e18bd5cc520a945793b5cae2561ad3a70633f6"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "870d23233fafa11fc4d76bac00745a3f7016c11c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14379e666810cff69f620fbad5a44ce2d68486c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14379e666810cff69f620fbad5a44ce2d68486c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14379e666810cff69f620fbad5a44ce2d68486c3", "patch": "@@ -1,3 +1,13 @@\n+2014-01-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46590\n+\t* opts.c (default_options_table): Add entries for\n+\tOPT_fbranch_count_reg, OPT_fmove_loop_invariants and OPT_ftree_pta,\n+\tall enabled at -O1 but not for -Og.\n+\t* common.opt (fbranch-count-reg): Remove Init(1).\n+\t(fmove-loop-invariants): Likewise.\n+\t(ftree-pta): Likewise.\n+\n 2014-01-17  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/i386.c (ix86_data_alignment): For compatibility with"}, {"sha": "d334cf2ad69ae794254e6598bac7c8c61a9a7a98", "filename": "gcc/common.opt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14379e666810cff69f620fbad5a44ce2d68486c3/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14379e666810cff69f620fbad5a44ce2d68486c3/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=14379e666810cff69f620fbad5a44ce2d68486c3", "patch": "@@ -875,7 +875,7 @@ Common Report Var(flag_bounds_check)\n Generate code to check bounds before indexing arrays\n \n fbranch-count-reg\n-Common Report Var(flag_branch_on_count_reg) Init(1) Optimization\n+Common Report Var(flag_branch_on_count_reg) Optimization\n Replace add, compare, branch with branch on count register\n \n fbranch-probabilities\n@@ -1564,7 +1564,7 @@ Common Report Var(flag_modulo_sched_allow_regmoves)\n Perform SMS based modulo scheduling with register moves allowed\n \n fmove-loop-invariants\n-Common Report Var(flag_move_loop_invariants) Init(1) Optimization\n+Common Report Var(flag_move_loop_invariants) Optimization\n Move loop invariant computations out of loops\n \n fdce\n@@ -2170,7 +2170,7 @@ Common Report Var(flag_tree_partial_pre) Optimization\n In SSA-PRE optimization on trees, enable partial-partial redundancy elimination\n \n ftree-pta\n-Common Report Var(flag_tree_pta) Init(1) Optimization\n+Common Report Var(flag_tree_pta) Optimization\n Perform function-local points-to analysis on trees.\n \n ftree-reassoc"}, {"sha": "7dee0e71b15c6bb37aae7b7dfa18066fa5a6fd3c", "filename": "gcc/opts.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14379e666810cff69f620fbad5a44ce2d68486c3/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14379e666810cff69f620fbad5a44ce2d68486c3/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=14379e666810cff69f620fbad5a44ce2d68486c3", "patch": "@@ -454,6 +454,9 @@ static const struct default_options default_options_table[] =\n     { OPT_LEVELS_1_PLUS, OPT_fcombine_stack_adjustments, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_fcompare_elim, NULL, 1 },\n     { OPT_LEVELS_1_PLUS, OPT_ftree_slsr, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fbranch_count_reg, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_fmove_loop_invariants, NULL, 1 },\n+    { OPT_LEVELS_1_PLUS_NOT_DEBUG, OPT_ftree_pta, NULL, 1 },\n \n     /* -O2 optimizations.  */\n     { OPT_LEVELS_2_PLUS, OPT_finline_small_functions, NULL, 1 },"}]}