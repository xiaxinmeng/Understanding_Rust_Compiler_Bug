{"sha": "459348d41ec18de5e6a1e7e29d761c73aed8ef67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU5MzQ4ZDQxZWMxOGRlNWU2YTFlN2UyOWQ3NjFjNzNhZWQ4ZWY2Nw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-11-16T15:16:34Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-11-16T15:16:34Z"}, "message": "* gnat.dg/boolean_bitfield.adb: New test.\n\nFrom-SVN: r141918", "tree": {"sha": "924a5abb2a456ae640d04a6a2e8c0e2387e9812f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/924a5abb2a456ae640d04a6a2e8c0e2387e9812f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/459348d41ec18de5e6a1e7e29d761c73aed8ef67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/459348d41ec18de5e6a1e7e29d761c73aed8ef67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/459348d41ec18de5e6a1e7e29d761c73aed8ef67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/459348d41ec18de5e6a1e7e29d761c73aed8ef67/comments", "author": null, "committer": null, "parents": [{"sha": "06919226fd73218490d67faf506bb61dedf63c18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06919226fd73218490d67faf506bb61dedf63c18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06919226fd73218490d67faf506bb61dedf63c18"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "2b64140cee656e6fd239e61bddd3ed8fd703dd64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459348d41ec18de5e6a1e7e29d761c73aed8ef67/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459348d41ec18de5e6a1e7e29d761c73aed8ef67/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=459348d41ec18de5e6a1e7e29d761c73aed8ef67", "patch": "@@ -1,3 +1,7 @@\n+2008-11-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/boolean_bitfield.adb: New test.\n+\n 2008-11-16  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/38095"}, {"sha": "5909f7c4a079bdf2b0b2dec487597e595acfd47c", "filename": "gcc/testsuite/gnat.dg/boolean_bitfield.adb", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459348d41ec18de5e6a1e7e29d761c73aed8ef67/gcc%2Ftestsuite%2Fgnat.dg%2Fboolean_bitfield.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459348d41ec18de5e6a1e7e29d761c73aed8ef67/gcc%2Ftestsuite%2Fgnat.dg%2Fboolean_bitfield.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fboolean_bitfield.adb?ref=459348d41ec18de5e6a1e7e29d761c73aed8ef67", "patch": "@@ -0,0 +1,44 @@\n+-- { dg-do run }\n+-- { dg-options \"-O\" }\n+\n+with System; use System;\n+\n+procedure Boolean_Bitfield is\n+\n+  Units_Per_Integer : constant :=\n+    (Integer'Size + System.Storage_Unit - 1) / System.Storage_Unit;\n+\n+  type E_type is (Red, Blue, Green);\n+\n+  type Parent_Type is record\n+    I : Integer range 0 .. 127 := 127;\n+    C : Character := 'S';\n+    B : Boolean := False;\n+    E : E_Type := Blue;\n+  end record;\n+\n+  for Parent_Type use record\n+    C at 0 * Units_Per_Integer range 0 .. Character'Size - 1;\n+    B at 1 * Units_Per_Integer range 0 .. Boolean'Size - 1;\n+    I at 2 * Units_Per_Integer range 0 .. Integer'Size/2 - 1;\n+    E at 3 * Units_Per_Integer range 0 .. Character'Size - 1;\n+  end record;\n+\n+  type Derived_Type is new Parent_Type;\n+\n+  for Derived_Type use record\n+    C at 1 * Units_Per_Integer range 1 .. Character'Size + 1;\n+    B at 3 * Units_Per_Integer range 1 .. Boolean'Size + 1;\n+    I at 5 * Units_Per_Integer range 1 .. Integer'Size/2 + 1;\n+    E at 7 * Units_Per_Integer range 1 .. Character'Size + 1;\n+  end record;\n+\n+  Rec   : Derived_Type;\n+\n+begin\n+  Rec := (12, 'T', True, Red);\n+\n+  if (Rec.I /= 12) or (Rec.C /= 'T') or (not Rec.B) or (Rec.E /= Red) then\n+    raise Program_Error;\n+  end if;\n+end;"}]}