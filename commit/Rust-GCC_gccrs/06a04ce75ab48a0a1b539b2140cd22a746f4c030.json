{"sha": "06a04ce75ab48a0a1b539b2140cd22a746f4c030", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZhMDRjZTc1YWI0OGEwYTFiNTM5YjIxNDBjZDIyYTc0NmY0YzAzMA==", "commit": {"author": {"name": "Max Ostapenko", "email": "m.ostapenko@partner.samsung.com", "date": "2014-10-10T13:41:13Z"}, "committer": {"name": "Maxim Ostapenko", "email": "chefmax@gcc.gnu.org", "date": "2014-10-10T13:41:13Z"}, "message": "asan-dg.exp (asan_link_flags): Save ld_library_path.\n\ngcc/testsuite/\n\n2014-10-10  Max Ostapenko  <m.ostapenko@partner.samsung.com>\n\n\t* lib/asan-dg.exp (asan_link_flags): Save ld_library_path.\n\t(asan_finish): Remove restore_ld_library_path_env_vars.\n\tRestore ld_library_path with saved value. Restore LD_LIBRARY_PATH\n\trelated env variables by calling set_ld_library_path_env_vars.\n\t* lib/tsan-dg.exp (tsan_link_flags): Save ld_library_path.\n\t(tsan_finish): Remove restore_ld_library_path_env_vars.\n\tRestore ld_library_path with saved value. Restore LD_LIBRARY_PATH\n\trelated env variables by calling set_ld_library_path_env_vars.\n\t* lib/ubsan-dg.exp (ubsan_link_flags): Save ld_library_path.\n\t(ubsan_finish): Remove restore_ld_library_path_env_vars.\n\tRestore ld_library_path with saved value. Restore LD_LIBRARY_PATH\n\trelated env variables by calling set_ld_library_path_env_vars.\n\nFrom-SVN: r216082", "tree": {"sha": "c29bb9a1b91340c95b913cc64a31906f7748044e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c29bb9a1b91340c95b913cc64a31906f7748044e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06a04ce75ab48a0a1b539b2140cd22a746f4c030", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06a04ce75ab48a0a1b539b2140cd22a746f4c030", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06a04ce75ab48a0a1b539b2140cd22a746f4c030", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06a04ce75ab48a0a1b539b2140cd22a746f4c030/comments", "author": null, "committer": null, "parents": [{"sha": "80363c2f0bf302e569c12d86352e4d086c2e6d4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80363c2f0bf302e569c12d86352e4d086c2e6d4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80363c2f0bf302e569c12d86352e4d086c2e6d4d"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "442338d89a8ac17ffe6c08440fee98babdfd9ab3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a04ce75ab48a0a1b539b2140cd22a746f4c030/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a04ce75ab48a0a1b539b2140cd22a746f4c030/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=06a04ce75ab48a0a1b539b2140cd22a746f4c030", "patch": "@@ -1,3 +1,18 @@\n+2014-10-10  Max Ostapenko  <m.ostapenko@partner.samsung.com>\n+\n+\t* lib/asan-dg.exp (asan_link_flags): Save ld_library_path.\n+\t(asan_finish): Remove restore_ld_library_path_env_vars.\n+\tRestore ld_library_path with saved value. Restore LD_LIBRARY_PATH\n+\trelated env variables by calling set_ld_library_path_env_vars.\n+\t* lib/tsan-dg.exp (tsan_link_flags): Save ld_library_path.\n+\t(tsan_finish): Remove restore_ld_library_path_env_vars.\n+\tRestore ld_library_path with saved value. Restore LD_LIBRARY_PATH\n+\trelated env variables by calling set_ld_library_path_env_vars.\n+\t* lib/ubsan-dg.exp (ubsan_link_flags): Save ld_library_path.\n+\t(ubsan_finish): Remove restore_ld_library_path_env_vars.\n+\tRestore ld_library_path with saved value. Restore LD_LIBRARY_PATH\n+\trelated env variables by calling set_ld_library_path_env_vars.\n+\n 2014-10-10  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/63379"}, {"sha": "4e8b4d6b636f1259f368d6dac59ae44dfaca3466", "filename": "gcc/testsuite/lib/asan-dg.exp", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a04ce75ab48a0a1b539b2140cd22a746f4c030/gcc%2Ftestsuite%2Flib%2Fasan-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a04ce75ab48a0a1b539b2140cd22a746f4c030/gcc%2Ftestsuite%2Flib%2Fasan-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fasan-dg.exp?ref=06a04ce75ab48a0a1b539b2140cd22a746f4c030", "patch": "@@ -47,11 +47,13 @@ proc asan_link_flags { paths } {\n     global srcdir\n     global ld_library_path\n     global shlib_ext\n+    global asan_saved_library_path\n \n     set gccpath ${paths}\n     set flags \"\"\n \n     set shlib_ext [get_shlib_extension]\n+    set asan_saved_library_path $ld_library_path\n \n     if { $gccpath != \"\" } {\n       if { [file exists \"${gccpath}/libsanitizer/asan/.libs/libasan.a\"]\n@@ -122,6 +124,8 @@ proc asan_finish { args } {\n     global TEST_ALWAYS_FLAGS\n     global asan_saved_TEST_ALWAYS_FLAGS\n     global asan_saved_ALWAYS_CXXFLAGS\n+    global asan_saved_library_path\n+    global ld_library_path\n \n     if [info exists asan_saved_ALWAYS_CXXFLAGS ] {\n \tset ALWAYS_CXXFLAGS $asan_saved_ALWAYS_CXXFLAGS\n@@ -132,7 +136,8 @@ proc asan_finish { args } {\n \t    unset TEST_ALWAYS_FLAGS\n \t}\n     }\n-    restore_ld_library_path_env_vars\n+    set ld_library_path $asan_saved_library_path\n+    set_ld_library_path_env_vars\n }\n \n # Symbolize lines like"}, {"sha": "77c85ff24cac78ffc96bfaaed2f4fca2eb299548", "filename": "gcc/testsuite/lib/tsan-dg.exp", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a04ce75ab48a0a1b539b2140cd22a746f4c030/gcc%2Ftestsuite%2Flib%2Ftsan-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a04ce75ab48a0a1b539b2140cd22a746f4c030/gcc%2Ftestsuite%2Flib%2Ftsan-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftsan-dg.exp?ref=06a04ce75ab48a0a1b539b2140cd22a746f4c030", "patch": "@@ -32,11 +32,13 @@ proc tsan_link_flags { paths } {\n     global srcdir\n     global ld_library_path\n     global shlib_ext\n+    global tsan_saved_library_path\n \n     set gccpath ${paths}\n     set flags \"\"\n \n     set shlib_ext [get_shlib_extension]\n+    set tsan_saved_library_path $ld_library_path\n \n     if { $gccpath != \"\" } {\n       if { [file exists \"${gccpath}/libsanitizer/tsan/.libs/libtsan.a\"]\n@@ -127,6 +129,8 @@ proc tsan_finish { args } {\n     global tsan_saved_ALWAYS_CXXFLAGS\n     global dg-do-what-default\n     global tsan_saved_dg-do-what-default\n+    global tsan_saved_library_path\n+    global ld_library_path\n \n     if [info exists tsan_saved_ALWAYS_CXXFLAGS ] {\n \tset ALWAYS_CXXFLAGS $tsan_saved_ALWAYS_CXXFLAGS\n@@ -143,5 +147,6 @@ proc tsan_finish { args } {\n     } else {\n \tunset dg-do-what-default\n     }\n-    restore_ld_library_path_env_vars\n+    set ld_library_path $tsan_saved_library_path\n+    set_ld_library_path_env_vars\n }"}, {"sha": "3bfdcc85bb0a6ac944aab51963033b7b68568b64", "filename": "gcc/testsuite/lib/ubsan-dg.exp", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a04ce75ab48a0a1b539b2140cd22a746f4c030/gcc%2Ftestsuite%2Flib%2Fubsan-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a04ce75ab48a0a1b539b2140cd22a746f4c030/gcc%2Ftestsuite%2Flib%2Fubsan-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fubsan-dg.exp?ref=06a04ce75ab48a0a1b539b2140cd22a746f4c030", "patch": "@@ -32,11 +32,13 @@ proc ubsan_link_flags { paths } {\n     global srcdir\n     global ld_library_path\n     global shlib_ext\n+    global ubsan_saved_library_path\n \n     set gccpath ${paths}\n     set flags \"\"\n \n     set shlib_ext [get_shlib_extension]\n+    set ubsan_saved_library_path $ld_library_path\n \n     if { $gccpath != \"\" } {\n       if { [file exists \"${gccpath}/libsanitizer/ubsan/.libs/libubsan.a\"]\n@@ -104,6 +106,8 @@ proc ubsan_finish { args } {\n     global TEST_ALWAYS_FLAGS\n     global ubsan_saved_TEST_ALWAYS_FLAGS\n     global ubsan_saved_ALWAYS_CXXFLAGS\n+    global ubsan_saved_library_path\n+    global ld_library_path\n \n     if [info exists ubsan_saved_ALWAYS_CXXFLAGS ] {\n \tset ALWAYS_CXXFLAGS $ubsan_saved_ALWAYS_CXXFLAGS\n@@ -114,5 +118,6 @@ proc ubsan_finish { args } {\n \t    unset TEST_ALWAYS_FLAGS\n \t}\n     }\n-    restore_ld_library_path_env_vars\n+    set ld_library_path $ubsan_saved_library_path\n+    set_ld_library_path_env_vars\n }"}]}