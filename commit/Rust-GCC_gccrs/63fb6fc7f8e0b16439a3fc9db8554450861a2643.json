{"sha": "63fb6fc7f8e0b16439a3fc9db8554450861a2643", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNmYjZmYzdmOGUwYjE2NDM5YTNmYzlkYjg1NTQ0NTA4NjFhMjY0Mw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2001-09-17T20:40:28Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-09-17T20:40:28Z"}, "message": "dostage2, [...]: Remove obsolete files.\n\n\t* dostage2, dostage3, listing, make-l2.com, makefile.vms,\n\tpatch-apollo-includes, vmsconfig.com: Remove obsolete files.\n\nFrom-SVN: r45661", "tree": {"sha": "d9682985f774c85fee8c822921cb6a9737ddeac6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9682985f774c85fee8c822921cb6a9737ddeac6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63fb6fc7f8e0b16439a3fc9db8554450861a2643", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63fb6fc7f8e0b16439a3fc9db8554450861a2643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63fb6fc7f8e0b16439a3fc9db8554450861a2643", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63fb6fc7f8e0b16439a3fc9db8554450861a2643/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1d49704bcc084245adffb45a22d43a841665515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1d49704bcc084245adffb45a22d43a841665515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1d49704bcc084245adffb45a22d43a841665515"}], "stats": {"total": 1368, "additions": 5, "deletions": 1363}, "files": [{"sha": "c66d0d93e35799c3b6c53a59c2e38d5e2aa052ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63fb6fc7f8e0b16439a3fc9db8554450861a2643/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63fb6fc7f8e0b16439a3fc9db8554450861a2643/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63fb6fc7f8e0b16439a3fc9db8554450861a2643", "patch": "@@ -1,3 +1,8 @@\n+2001-09-17  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* dostage2, dostage3, listing, make-l2.com, makefile.vms,\n+\tpatch-apollo-includes, vmsconfig.com: Remove obsolete files.\n+\n 2001-09-17  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* c-aux-info.c (affix_data_type): Use ASTRDUP in lieu of"}, {"sha": "bb33f7dc27ed58a7c7b63320ce8cea821f827e1c", "filename": "gcc/dostage2", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1d49704bcc084245adffb45a22d43a841665515/gcc%2Fdostage2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1d49704bcc084245adffb45a22d43a841665515/gcc%2Fdostage2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdostage2?ref=c1d49704bcc084245adffb45a22d43a841665515", "patch": "@@ -1,2 +0,0 @@\n-#!/bin/sh\n-make -k LANGUAGES=c $1 CC=stage1/xgcc XCFLAGS=-Bstage1/ CFLAGS=\"-g $2\" >log2 2>&1"}, {"sha": "21f17fc11c7b165a993fe13d4955698aa27f5d85", "filename": "gcc/dostage3", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1d49704bcc084245adffb45a22d43a841665515/gcc%2Fdostage3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1d49704bcc084245adffb45a22d43a841665515/gcc%2Fdostage3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdostage3?ref=c1d49704bcc084245adffb45a22d43a841665515", "patch": "@@ -1,3 +0,0 @@\n-#!/bin/sh\n-make -k LANGUAGES=c $1 CC=stage2/xgcc XCFLAGS=-Bstage2/ CFLAGS=\"-g $2\" >log3 2>&1\n-"}, {"sha": "dc989f6eaef23af25b562c92959fd96deeaa7568", "filename": "gcc/listing", "status": "removed", "additions": 0, "deletions": 227, "changes": 227, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1d49704bcc084245adffb45a22d43a841665515/gcc%2Flisting", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1d49704bcc084245adffb45a22d43a841665515/gcc%2Flisting", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flisting?ref=c1d49704bcc084245adffb45a22d43a841665515", "patch": "@@ -1,227 +0,0 @@\n-#!/bin/sh -f\n-# Generate a source code listing for C or C++ code with assembler code. The\n-# listing is always written to stdout.\n-# Author: Igor Metz <metz@iam.unibe.ch>\n-\n-# Revision 1.4  94/08/26  13:58:27  coxs <coxs@dg-rtp.dg.com>\n-# lister now guesses how to should be configured. Added elf and coff support.\n-#\n-# Revision 1.3  89/12/18  13:58:27  metz\n-# lister must now be configured before it can be used. This is done in the\n-# /bin/sh part of the code.\n-# \n-# \n-# Revision 1.2  89/08/16  17:35:02  metz\n-# Support for SPARC added.\n-# \n-# Revision 1.1  89/08/16  16:49:22  metz\n-# Initial revision\n-# \n-\n-# Requires: gawk (may be it works also with nawk)\n-\n-# usage:  lister filename [compiler-options]\n-\n-# Method:\n-# compile the source with -g option to assembler code, then merge the\n-# generated assembler code with the source code. Compiler options\n-# can be supplied on the command line (for example -O)\n-\n-# To install lister, assign one of the supported values to the variable MYSYS:\n-# mc68020  for Motorola 68020 (Sun-3, ..)\n-# mc68030  for Motorola 68030 (Sun-3, ..)\n-# sparc    for SPARC (SUN-4, ..)\n-# i386     for i386 (Sun i386, ...)\n-# i386-gnu-linux for i386 (GNU/Linux, ...)\n-\n-# Guess what kind of objects we are creating and thus what type of assembler\n-# symbols to look for\n-\n-ex /tmp/$$.c <<END >/dev/null\n-a\n-main (){}\n-.\n-w\n-q\n-END\n-WD=`pwd`\n-cd /tmp\n-gcc -c $$.c\n-case \"`file $$.o`\" in \n-*ELF*) MYSYS=elf ;;\n-*COFF*|*BCS*) MYSYS=coff ;;\n-*mc68k*|*M68000*) MYSYS=mc68030 ;;\n-*SPARC*) MYSYS=sparc ;;\n-*386*) MYSYS=i386 ;;\n-esac\n-rm $$.c $$.o\n-cd $WD\n-\n-# uncomment the line you need if the above guesses incorrectly:\n-# MYSYS=mc68020\n-# MYSYS=mc68030\n-# MYSYS=sparc\n-# MYSYS=i386\n-# MYSYS=i386-gnu-linux\n-# MYSYS=`mach`  # this will work on Suns with SunOS > 4.0.0\n-# MYSYS=elf\n-# MYSYS=coff\n-\n-WHOAMI=$0\n-if [ $# -gt 0 ] ; then\n-FILENAME=$1\n-shift\n-fi\n-\n-exec gawk -v whoami=$WHOAMI -vsys=$MYSYS -voptions=\"$*\" '\n-# commandline arguments:\n-#  ARGV[0] = \"gawk\"\n-#  ARGV[1] = processid\n-#  ARGV[2] = filename\n-BEGIN {\n-  if (ARGC != 3) {\n-    usage()\n-    exit 1\n-  }\n-\n-  # Declaration of global variables\n-  c_filename = \"\"\n-  asm_filename = \"\"\n-  cmdline = \"\"\n-  asm_code = \"\"\n-  c_code = \"\"\n-  c_lineno = 0\n-  oldlineno = 0\n-  newlineno = 0\n-  ignore_stabd = 0\n-  num_of_fields = 0\n-\n-  # check processor architecture and set sourcecode line_hint accordingly\n-  if (sys == \"sparc\" || sys == \"i386\") {\n-    line_hint = \"^[ \\t]*\\.stabn.*\"\n-    line_field = 3;\n-    line_delimiter = \",\";\n-    line_offset = 0;\n-  }\n-  else if (sys == \"mc68020\" || sys == \"mc68030\" || sys == \"i386-gnu-linux\") {\n-    line_hint = \"^[ \\t]*\\.stabd.*\"\n-    line_field = 3;\n-    line_delimiter = \",\";\n-    line_offset = 0;\n-  }\n-  else if (sys == \"elf\") {\n-    line_hint = \"section.*\\.line\"\n-    line_field = 3;\n-    line_delimiter = \"\\t\";\n-    line_offset = 0;\n-  }\n-  else if (sys == \"coff\") {\n-    line_hint = \"^[ \\t]*ln\"\n-    line_field = 3;\n-    line_delimiter = \"\\t\";\n-  }\n-  else {\n-    error(\"Processor type \" sys \" is not supported yet, sorry\")\n-  }\n-\n-  parse_cmdline()\n-\n-  printf(\"compiling %s to asm code\\n\", c_filename ) > \"/dev/stderr\"\n-\n-  if (system(cmdline) != 0 ) {\n-    error(\"Compilation of \" c_filename \" failed\")\n-  }\n-\n-  printf(\"generating listing\\n\") > \"/dev/stderr\"\n-\n-\n-  while ( getline asm_code < asm_filename > 0 ) {\n-    if ( (ignore_stabd==0) && (asm_code ~ line_hint)) {\n-      while ( sys == \"elf\" && (asm_code !~ \"word\" && asm_code !~ \"byte\") && \n-        getline asm_code < asm_filename > 0);\n-      # source line hint found. Split the line into fields separated by commas.\n-      # num_of_fields is 4 for sparc, 3 for m68k\n-      num_of_fields = split(asm_code, fields, line_delimiter)\n-      newlineno = fields[line_field] + line_offset;\n-\n-      if (newlineno > oldlineno) {\n-        while ( newlineno > c_lineno && getline c_code < c_filename > 0) {\n-\t  c_lineno++\n-\t  printf(\"%4d %s\\n\", c_lineno, c_code)\n-\t}\n-\toldlineno = newlineno\n-      }\n-    }\n-    else if ( asm_code ~ \".*Ltext[ \\t]*$\" ) {\n-      # filename hint found\n-      if ( match(asm_code, c_filename)) {\n-        ignore_stabd = 0\n-      }\n-      else {\n-        ignore_stabd = 1\n-      }\n-    }\n-    else if ( sys == \"elf\" && asm_code ~ \"section.*\\.debug\" ) {\n-      while ( asm_code !~ \"^[ \\t]*[.]*previous\" &&\n-\t      asm_code !~ \"\\.popsection\" && \n-              getline asm_code < asm_filename > 0 );\n-      if ( ! (getline asm_code < asm_filename > 0)) break;\n-    }\n-    else if ( sys == \"coff\" && asm_code ~ \"^[ \\t]*sdef\" ) {\n-      if ( asm_code ~ \"\\.bf\" ) {\n-         while ( asm_code !~ \"^[ \\t]*line\" && \n-                 getline asm_code < asm_filename > 0 ) {\n-           num_of_fields = split(asm_code, fields, \"\\t\")\n-           line_offset = fields[line_field] - 1;\n-         }\n-      }\n-      while ( asm_code !~ \"^[ \\t]*endef\" && \n-              getline asm_code < asm_filename > 0 ) {\n-      }\n-      if ( ! (getline asm_code < asm_filename > 0)) break;\n-    }\n-    printf(\"\\t\\t\\t%s\\n\", asm_code)\n-  }\n-\n-  # general cleanup\n-  system(\"/bin/rm \" asm_filename)\n-}\n-\n-function usage() {\n-    printf(\"usage: %s filename compiler-options\\n\", whoami) > \"/dev/stderr\"\n-}\n-\n-function error(s) {\n-    printf(\"error: %s\\n\", s) > \"/dev/stderr\"\n-    exit 1\n-}\n-\n-function parse_cmdline(    i) {\n-  # construct filenames to use\n-  asm_filename = \"/tmp/lister\" ARGV[1] \".s\"\n-  ARGV[1] = \"\"\n-  c_filename = ARGV[2]\n-  ARGV[2] = \"\"\n-\n-  # construct commandline to use\n-  if ( match(c_filename, \".C\") || match(c_filename, \".cc\") ) {\n-    cmdline = \"g++\"\n-  }\n-  else if (match(c_filename, \".c\") || match(c_filename, \".i\")) {\n-    cmdline = \"gcc\"\n-  }\n-  else {\n-    error(\"unknown extension for file \" c_filename)\n-  }\n-\n-  cmdline = cmdline \" -g -S -o \" asm_filename\n-\n-  # now we append the compiler options specified by the user\n-  cmdline = cmdline \" \" options\n-\n-  # last but not least: the name of the file to compile\n-  cmdline = cmdline \" \" c_filename\n-}\n-\n-' $$ $FILENAME\n-"}, {"sha": "93694c8c4e8e421c6bcd9c050e546d9b752bdbef", "filename": "gcc/make-l2.com", "status": "removed", "additions": 0, "deletions": 149, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1d49704bcc084245adffb45a22d43a841665515/gcc%2Fmake-l2.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1d49704bcc084245adffb45a22d43a841665515/gcc%2Fmake-l2.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmake-l2.com?ref=c1d49704bcc084245adffb45a22d43a841665515", "patch": "@@ -1,149 +0,0 @@\n-$! make-l2.com -- VMS build procedure for libgcc2.\n-$\n-$! Change working directory to the location of this command procedure.\n-$ flnm = f$enviroment(\"PROCEDURE\")\t!get current procedure name\n-$ set default 'f$parse(flnm,,,\"DEVICE\")''f$parse(flnm,,,\"DIRECTORY\")'\n-$!\n-$! Command file to build libgcc2.olb.  You should only run this once you\n-$! have the current compiler installed, otherwise some of the builtins will\n-$! not be recognized.  Once you have built libgcc2.olb, you can merge this\n-$! with gnu_cc:[000000]gcclib.olb\n-$!\n-$! All of the C source code is assumed to be in libgcc2.c, and a list of the\n-$! modules that we need from there is in libgcc2.list (which is generated\n-$! when vmsconfig.com is run).  The C++ source is found in the [.cp.inc]\n-$! directory and managed via libgcc2-cxx.list.\n-$!\n-$ if f$search(\"gcc-cc1.exe\").eqs.\"\"\n-$ then\n-$    gcc_cc1:=$gnu_cc:[000000]gcc-cc1\n-$    if f$extract(0,1,f$trnlnm(\"GNU_CC_VERSION\")).eqs.\"1\" then goto nocompile\n-$ else\n-$    gcc_cc1:=$sys$disk:[]gcc-cc1\n-$ endif\n-$!\n-$ if f$search(\"gcc-cpp.exe\").eqs.\"\"\n-$ then\n-$    gcc_cpp:=$gnu_cc:[000000]gcc-cpp\n-$    if f$extract(0,1,f$trnlnm(\"GNU_CC_VERSION\")).eqs.\"1\" then goto nocompile\n-$    Version:='f$trnlnm(\"GNU_CC_VERSION\")'\n-$ else\n-$    gcc_cpp:=$sys$disk:[]gcc-cpp\n-$    open ifile$ version.opt\n-$    read ifile$ line\n-$    close ifile$\n-$    Version=line - \"ident=\"\"\" - \"\"\"\n-$ endif\n-$!\n-$ if f$search(\"gcc-cc1plus.exe\").eqs.\"\"\n-$ then\tgcc_cxx = \"$gnu_cc:[000000]gcc-cc1plus\"\n-$ else\tgcc_cxx = \"$sys$disk:[]gcc-cc1plus\"\n-$ endif\n-$!\n-$gcc_as:=$gnu_cc:[000000]gcc-as\n-$cpp_file:=sys$scratch:gcc_'f$getjpi(0,\"pid\")'.cpp\n-$ s_file:=sys$scratch:gcc_'f$getjpi(0,\"pid\")'.s\n-$!\n-$set symbol/scope=(nolocal,noglobal)\n-$!\n-$lib/create libgcc2.olb\n-$on error then goto c_err\n-$on control_y then goto c_err\n-$\n-$if f$trnlnm(\"IFILE$\").nes.\"\" then  close/noLog ifile$\n-$open ifile$ libgcc2.list\n-$loop:\n-$!\n-$read ifile$ line/end=c_done\n-$i=0\n-$loop1:\n-$flnm=f$element(i,\" \",line)\n-$i=i+1\n-$if flnm.eqs.\"\" then goto loop\n-$if flnm.eqs.\" \" then goto loop\n-$!\n-$flnm = \"L\"+flnm\n-$if flnm.eqs.\"L_exit\" then goto loop1\n-$write sys$output \"$ gcc/debug/define=\"\"''flnm'\"\" LIBGCC2.C\"\n-$!\n-$objname = flnm\n-$if flnm.eqs.\"L_builtin_New\" then objname = \"L_builtin_nnew\"\n-$!\n-$! We do this by hand, since the VMS compiler driver does not have a way\n-$! of specifying an alternate location for the compiler executables.\n-$!\n-$ if arch .eqs. \"alpha\"\n-$ then\n-$   gcc_cpp \"-D__IEEE_FLOAT\" \"-I[]\" \"-I[.config]\" \"-I[.ginclude]\" \"-D''flnm'\"  libgcc2.c 'cpp_file'\n-$   gcc_cc1 'cpp_file' -dumpbase 'objname' -\n-\t-quiet -mgas \"-O1\" -mfloat-ieee -o 's_file'\n-$ else\n-$   gcc_cpp \"-I[]\" \"-I[.config]\" \"-I[.ginclude]\" \"-D''flnm'\"  libgcc2.c 'cpp_file'\n-$   gcc_cc1 'cpp_file' -dumpbase 'objname' -\n-\t-quiet -mgnu -g \"-O1\" -mvaxc-alignment   -o 's_file'\n-$ endif\n-$ delete/nolog 'cpp_file';\n-$   gcc_as 's_file'  -o 'objname'.OBJ\n-$ if arch .eqs. \"vax\"\n-$ then\n-$! Assemble again, preserving lowercase symbol names this time.\n-$   gcc_as -h3 's_file'  -o 'objname'-c.OBJ\n-$   library libgcc2.olb 'objname'.obj,'objname'-c.obj\n-$   delete/nolog 'objname'.obj;,'objname'-c.obj;\n-$ else\n-$   library libgcc2.olb 'objname'.obj\n-$   delete/nolog 'objname'.obj;\n-$ endif\n-$ delete/nolog 's_file';\n-$!\n-$!\n-$goto loop1\n-$!\n-$! In case of error or abort, go here (In order to close file).\n-$!\n-$c_err:\t!'f$verify(0)\n-$close ifile$\n-$ exit %x2c\n-$!\n-$c_done:\n-$close ifile$\n-$\n-$\n-$ EXIT\n-$\t!gcc-2.8.0: C++ libgcc2 code disabled since it's not adequately tested\n-$\n-$!\n-$ p1 = p1+\" \"+p2+\" \"+p3+\" \"+p4+\" \"+p5+\" \"+p6+\" \"+p7+\" \"+p8\n-$ p1 = \" \" + f$edit(p1,\"COMPRESS,TRIM,UPCASE\") + \" \"\n-$! (note: substring locations can only be equal when neither string is present)\n-$ if f$locate(\" CC1PLUS \",p1).eq.f$locate(\" CXX \",p1) then  goto cxx_done\n-$ if f$search(\"libgcc2-cxx.list\").eqs.\"\" then  goto cxx_done\n-$!\n-$ open/read ifile$ libgcc2-cxx.list\n-$cxx_line_loop:\n-$ read ifile$ line/end=cxx_done\n-$ i = 0\n-$cxx_file_loop:\n-$ flnm = f$element(i,\",\",line)\n-$ i = i + 1\n-$ if flnm.eqs.\"\" .or. flnm.eqs.\",\" then goto cxx_line_loop\n-$ write sys$output \"$ gcc/plus/debug ''flnm'.cc\"\n-$ objname = flnm\n-$!\n-$ gcc_cpp -+ \"-I[]\" \"-I[.ginclude]\" \"-I[.cp.inc]\" [.cp]'flnm'.cc 'cpp_file'\n-$ gcc_cxx 'cpp_file' -dumpbase 'objname' -fexceptions -\n-\t-quiet -mgnu -g \"-O1\" -mvaxc-alignment\t -o 's_file'\n-$ delete/nolog 'cpp_file';\n-$ gcc_as \"-vGNU CC  V''Version'\" 's_file'  -o 'objname'.OBJ\n-$! Assemble again, preserving lowercase symbol names this time.\n-$ gcc_as \"-vGNU CC  V''Version'\" -h3 's_file'  -o 'objname'-c.OBJ\n-$ delete/nolog 's_file';\n-$\n-$ library libgcc2.olb 'objname'.obj,'objname'-c.obj\n-$ delete/nolog 'objname'.obj;,'objname'-c.obj;\n-$!\n-$ goto cxx_file_loop\n-$!\n-$cxx_done:\n-$ close ifile$\n-$ exit"}, {"sha": "a1ee75ea7c2d37677f1f84f36e355ced4645a6c2", "filename": "gcc/makefile.vms", "status": "removed", "additions": 0, "deletions": 413, "changes": 413, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1d49704bcc084245adffb45a22d43a841665515/gcc%2Fmakefile.vms", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1d49704bcc084245adffb45a22d43a841665515/gcc%2Fmakefile.vms", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmakefile.vms?ref=c1d49704bcc084245adffb45a22d43a841665515", "patch": "@@ -1,413 +0,0 @@\n-#\n-# makefile for GCC\n-#\n-# Created by Klaus K\"ampf, kkaempf@progis.de\n-#\n-\n-# choose gcc or dec c\n-#CC = gcc\n-CC = cc\n-\n-# With or withou haifa scheduler ?\n-#HAIFA=,\"HAIFA\"\n-HAIFA=\n-\n-PWD=sys$$disk:[]\n-RM=delete/nolog\n-\n-ifeq ($(CC),gcc)\n-ifeq ($(ARCH),ALPHA)\n-CFLAGS=/define=(\"HAVE_CONFIG_H=1\",\"USE_COLLECT2\" $(HAIFA))\n-LIBS=,gnu_cc_library:libgcc.olb/lib,sys$$library:vaxcrtl.olb/lib,gnu_cc_library:crt0.obj\n-else\n-CFLAGS=/define=(\"HAVE_CONFIG_H=1\",\"USE_COLLECT2\" $(HAIFA))\n-LIBS=,gnu_cc_library:libgcc.olb/lib,sys$$library:vaxcrtl.olb/lib\n-endif\n-LFLAGS=/map/full\n-#LFLAGS=\n-else\n-ifeq ($(ARCH),ALPHA)\n-CFLAGS=/names=as_is/float=ieee/noopt/debug/define=(\"HAVE_CONFIG_H=1\",\"USE_COLLECT2\" $(HAIFA))\\\n-/warning=disable=(missingreturn,implicitfunc,ptrmismatch,undefescap,longextern,duptypespec)\n-else\n-CFLAGS=/noopt/debug/define=(\"HAVE_CONFIG_H=1\",\"USE_COLLECT2\" $(HAIFA))\n-endif\n-LFLAGS=/nomap\n-LIBS=,sys$$library:vaxcrtl.olb/lib\n-endif\n-\n-BISON = bison\n-BISON_FLAGS=  /Yacc/Define/Verbose\n-RENAME=\trename/New_Version\n-LINK  =\tlink\t\t#/noshare/nosysshr\n-EDIT  =\tedit\n-SEARCH=\tsearch\n-ABORT =\texit %x002C\n-echo  =\twrite sys$$output\n-\n-CINCL1\t=\t/Incl=([],[.config])\n-CINCL2\t=\t/Incl=([],[.ginclude],[.config])\n-CINCL_SUB =\t/Incl=([],[-],[-.ginclude],[-.config])\n-CINCL_CP=\t/Incl=([],[.config],[.cp],[.cp.inc])\n-\n-MDFILE = [.config.$(ARCH)]$(ARCH).md\n-\n-ifeq ($(HAIFA),)\n-SCHED=sched\n-else\n-SCHED=haifa-sched\n-endif\n-\n-GENOBJS=[]rtl.obj,obstack.obj\n-\n-INDEPOBJS= []toplev.obj,version.obj,tree.obj,print-tree.obj,stor-layout.obj,\\\n-fold-const.obj,function.obj,stmt.obj,except.obj,expr.obj,calls.obj,expmed.obj,\\\n-explow.obj,optabs.obj,varasm.obj,rtl.obj,print-rtl.obj,rtlanal.obj,\\\n-emit-rtl.obj,genrtl.obj,real.obj,regmove.obj,dbxout.obj,sdbout.obj,dwarfout.obj,\\\n-dwarf2out.obj,xcoffout.obj,bitmap.obj,alias.obj,\\\n-integrate.obj,jump.obj,cse.obj,loop.obj,unroll.obj,flow.obj,stupid.obj,\\\n-combine.obj,regclass.obj,local-alloc.obj,global.obj,reload.obj,\\\n-reload1.obj,caller-save.obj,insn-peep.obj,reorg.obj,$(SCHED).obj,\\\n-final.obj,recog.obj,reg-stack.obj,insn-opinit.obj,insn-recog.obj,\\\n-insn-extract.obj,insn-output.obj,insn-emit.obj,\\\n-profile.obj,insn-attrtab.obj,\\\n-aux-output.obj,getpwd.obj,convert.obj\n-\n-CC1OBJS=[]c-parse.obj,c-lang.obj,c-lex.obj,c-pragma.obj,c-decl.obj,\\\n-c-typeck.obj,c-convert.obj,c-aux-info.obj,c-common.obj,c-iterate.obj,\\\n-obstack.obj\n-\n-OBJCOBJS=\n-\n-# list copied from cc1plus-objs.opt\n-\n-CC1PLUSOBJS=[.cp]call.obj,[.cp]decl2.obj,\\\n-[.cp]except.obj,[.cp]pt.obj,\\\n-[.cp]spew.obj,[.cp]xref.obj,[.cp]class.obj,\\\n-[.cp]expr.obj,[.cp]lex.obj,\\\n-[.cp]ptree.obj,[.cp]tree.obj,[.cp]cvt.obj,\\\n-[.cp]errfn.obj,[.cp]rtti.obj,[.cp]method.obj,\\\n-[.cp]search.obj,[.cp]typeck.obj,[.cp]decl.obj,\\\n-[.cp]error.obj,[.cp]friend.obj,[.cp]init.obj,[.cp]parse.obj,\\\n-[.cp]sig.obj,[.cp]typeck2.obj,[.cp]repo.obj,\\\n-[.cp]input.obj,\\\n-[]obstack.obj,\\\n-[]c-common.obj,[]c-pragma.obj\n-\n-CCCPOBJS=[]cccp.obj,cexp.obj,version.obj,prefix.obj\n-\n-ALLOCA=,[]alloca.obj\n-\n-LIBIBERTY = [-.libiberty]libiberty.olb\n-\n-CXX_LIB2FUNCS = [.cp]tinfo.obj,[.cp]tinfo2.obj,\\\n-[.cp]new.obj,[.cp]new1.obj,[.cp]new2.obj,[.cp]exception.obj\n-\n-.c.obj:\n-\t$(CC) $(CFLAGS) $(CINCL1) $</obj=$@\n-\n-.cc.obj:\n-\t$(CC)/plus/CPP=\"-nostdinc++\" $(CFLAGS) $(CINCL_CP) $</obj=$@\n-\n-INSN_INCLUDES=insn-attr.h insn-codes.h insn-config.h insn-flags.h\n-\n-#\n-#\n-#\n-\n-all: cpp.exe cc1.exe float.h limits.h libgcc2.olb\n-\n-allplus: cc1plus.exe libgccplus.olb\n-\n-libplus: libgccplus.olb\n-\n-cc1.exe: $(CC1OBJS) $(ALLOCA) $(INDEPOBJS)\n-\t$(LINK)$(LFLAGS)/exe=$@ version.opt/opt,cc1-objs.opt/Opt,independent.opt/Opt$(ALLOCA)$(LIBS)\n-\n-cpp.exe: $(CCCPOBJS) $(ALLOCA)\n-\t$(LINK)$(LFLAGS)/exe=$@ $(CCCPOBJS),version.opt/opt$(ALLOCA)$(LIBS)\n-\n-cc1plus.exe: $(CC1PLUSOBJS) $(ALLOCA) $(INDEPOBJS)\n-\t$(LINK)$(LFLAGS)/exe=$@ version.opt/opt,cc1plus-objs.opt/Opt,independent.opt/Opt$(ALLOCA)$(LIBS)\n-\n-gcc.exe: gcc.obj version.obj choose-temp.obj pexecute.obj prefix.obj obstack.obj\n-\t$(LINK)$(LFLAGS)/exe=$@ $^$(ALLOCA)$(LIBS)\n-        \n-install: cpp.exe cc1.exe gcc.exe libgcc2.olb\n-\t$(CP) $^ GNU_CC_LIBRARY\n-\n-installplus: cc1plus.exe libgccplus.olb\n-\t$(CP) $^ GNU_CC_LIBRARY\n-\n-float.h: enquire.exe\n-\tmcr $(PWD)enquire.exe -f > $@\n-\n-limits.h: enquire.exe\n-\tmcr $(PWD)enquire.exe -l > $@\n-\n-enquire.exe: enquire.obj\n-\t$(LINK)$(LFLAGS)/exe=$@ enquire.obj$(ALLOCA)$(LIBS)\n-\n-libgcc2.olb:\n-\t$$ @make-l2\n-\n-libgccplus.olb: $(CXX_LIB2FUNCS)\n-\tlib/create libgccplus $(CXX_LIB2FUNCS)\n-\n-genattr.exe: genattr.obj,$(GENOBJS)$(ALLOCA)\n-\t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n-\n-insn-attr.h: genattr.exe $(MDFILE)\n-\tmcr $(PWD)genattr.exe $(MDFILE) > $@\n-\n-genflags.exe: genflags.obj,$(GENOBJS)$(ALLOCA)\n-\t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n-\n-insn-flags.h: genflags.exe $(MDFILE)\n-\tmcr $(PWD)genflags.exe $(MDFILE) > $@\n-\n-gencodes.exe: gencodes.obj,$(GENOBJS)$(ALLOCA)\n-\t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n-\n-insn-codes.h: gencodes.exe $(MDFILE)\n-\tmcr $(PWD)gencodes.exe $(MDFILE) > $@\n-\n-genconfig.exe: genconfig.obj,$(GENOBJS)$(ALLOCA)\n-\t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n-\n-insn-config.h: genconfig.exe $(MDFILE)\n-\tmcr $(PWD)genconfig.exe $(MDFILE) > $@\n-\n-genpeep.exe: genpeep.obj,$(GENOBJS)$(ALLOCA)\n-\t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n-\n-insn-peep.c: genpeep.exe $(MDFILE)\n-\tmcr $(PWD)genpeep.exe $(MDFILE) > $@\n-\n-genopinit.exe: genopinit.obj,$(GENOBJS)$(ALLOCA)\n-\t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n-\n-insn-opinit.c: genopinit.exe $(MDFILE)\n-\tmcr $(PWD)genopinit.exe $(MDFILE) > $@\n-\n-genrecog.exe: genrecog.obj,$(GENOBJS)$(ALLOCA)\n-\t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n-\n-insn-recog.c: genrecog.exe $(MDFILE)\n-\tmcr $(PWD)genrecog.exe $(MDFILE) > $@\n-\n-genextract.exe: genextract.obj,$(GENOBJS)$(ALLOCA)\n-\t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n-\n-insn-extract.c: genextract.exe $(MDFILE)\n-\tmcr $(PWD)genextract.exe $(MDFILE) > $@\n-\n-genoutput.exe: genoutput.obj,$(GENOBJS)$(ALLOCA)\n-\t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n-\n-insn-output.c: genoutput.exe $(MDFILE)\n-\tmcr $(PWD)genoutput.exe $(MDFILE) > $@\n-\n-genemit.exe: genemit.obj,$(GENOBJS)$(ALLOCA)\n-\t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n-\n-insn-emit.c: genemit.exe $(MDFILE)\n-\tmcr $(PWD)genemit.exe $(MDFILE) > $@\n-\n-genattrtab.exe: genattrtab.obj,rtlanal.obj,$(GENOBJS)$(ALLOCA)\n-\t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n-\n-insn-attrtab.c: genattrtab.exe $(MDFILE)\n-\tmcr $(PWD)genattrtab.exe $(MDFILE) > $@\n-\n-gengenrtl.exe: gengenrtl.obj,obstack.obj,$(ALLOCA)\n-\t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n-\n-genrtl.h genrtl.c: gengenrtl.exe\n-\tmcr $(PWD)gengenrtl.exe\tgenrtl.h genrtl.c\n-\n-cccp.obj: cccp.c config.h\n-aux-output.obj: aux-output.c insn-attr.h insn-flags.h insn-config.h\n-caller-save.obj: caller-save.c insn-config.h\n-calls.obj: calls.c insn-flags.h\n-combine.obj: combine.c insn-attr.h insn-flags.h insn-codes.h insn-config.h\n-cse.obj: cse.c insn-config.h\n-c-decl.obj: c-decl.c expr.h integrate.h insn-codes.h insn-config.h\n-c-lex.obj: c-lex.c genrtl.h\n-c-typeck.obj: c-typeck.c\n-dbxout.obj: dbxout.c insn-config.h\n-dwarfout.obj: dwarfout.c insn-config.h\n-dwarf2out.obj: dwarf2out.c insn-config.h\n-emit-rtl.obj: emit-rtl.c insn-config.h\n-except.obj: except.c insn-flags.h insn-codes.h insn-config.h\n-explow.obj: explow.c insn-flags.h insn-codes.h insn-config.h\n-expmed.obj: expmed.c insn-flags.h insn-codes.h insn-config.h\n-expr.obj: expr.c insn-flags.h insn-config.h\n-final.obj: final.c tm.h insn-attr.h insn-flags.h insn-codes.h insn-config.h\n-flow.obj: flow.c insn-config.h\n-function.obj: function.c insn-flags.h insn-codes.h insn-config.h insn-codes.h insn-config.h\n-genattrtab.obj: genattrtab.c insn-config.h\n-genextract.obj: genextract.c insn-config.h\n-global.obj: global.c insn-config.h\n-integrate.obj: integrate.c integrate.h insn-flags.h insn-config.h\n-jump.obj: jump.c insn-flags.h insn-config.h\n-local-alloc.obj: local-alloc.c insn-config.h\n-loop.obj: loop.c insn-flags.h insn-config.h\n-optabs.obj: optabs.c insn-flags.h insn-codes.h insn-config.h\n-print-rtl.obj: print-rtl.c\n-profile.obj: profile.c insn-flags.h insn-config.h\n-recog.obj: recog.c insn-attr.h insn-flags.h insn-codes.h insn-config.h\n-regclass.obj: regclass.c insn-config.h\n-reg-stack.obj: reg-stack.c insn-config.h\n-reload.obj: reload.c insn-codes.h insn-config.h\n-reload1.obj: reload1.c insn-flags.h insn-codes.h insn-config.h\n-reorg.obj: reorg.c insn-attr.h insn-flags.h insn-config.h\n-sched.obj: sched.c insn-attr.h insn-config.h\n-haifa-sched.obj: haifa-sched.c insn-attr.h insn-config.h\n-stmt.obj: stmt.c insn-flags.h insn-codes.h insn-config.h\n-stor-layout.obj: stor-layout.c\n-stupid.obj: stupid.c\n-toplev.obj: toplev.c insn-attr.h insn-config.h\n-unroll.obj: unroll.c insn-config.h\n-\n-insn-attrtab.obj: insn-attrtab.c insn-attr.h insn-config.h\n-insn-output.obj: insn-output.c insn-attr.h insn-flags.h insn-codes.h\n-insn-emit.obj: insn-emit.c insn-flags.h insn-codes.h insn-config.h\n-insn-opinit.obj: insn-opinit.c insn-flags.h insn-codes.h insn-config.h\n-insn-output.obj: insn-config.h\n-insn-recog.obj: insn-config.h\n-\n-varasm.obj: varasm.c tm.h\n-toplev.obj: toplev.c tm.h\n-\n-cexp.c: cexp.y\n-\t$(BISON) $(BISON_FLAGS)/output=$@ $<\n-c-parse.c: c-parse.y\n-\t$(BISON) $(BISON_FLAGS)/output=$@ $<\n-[.cp]parse.c: [.cp]parse.y\n-\t$(BISON) $(BISON_FLAGS)/output=$@ $<\n-[.cp]parse.h: [.cp]parse.c\n-\t@$(ECHO) \"Must copy YYEMPTY from [.cp]parse.c to [.cp]parse.h\"\n-\t$$ stop\n-aux-output.c: [.config.$(ARCH)]$(ARCH).c\n-\tcopy $< $@\n-\n-expr.h: insn-codes.h\n-reload.h: insn-config.h\n-integrate.h: insn-config.h\n-\n-config.h:\n-\t$$ @vmsconfig\n-\n-cleancccp:\n-\t$$ purge\n-\t$(RM) cccp.obj;,cexp.obj;\n-\t$(RM) cpp.exe;\n-\n-cleanlib:\n-\t$$ purge\n-\t$(RM) libgcc2.olb;\n-\n-cleanlibplus:\n-\t$$ purge\n-\t$(RM) [.cp]tinfo.obj;\n-\t$(RM) [.cp]tinfo2.obj;\n-\t$(RM) [.cp]new.obj;\n-\t$(RM) [.cp]new1.obj;\n-\t$(RM) [.cp]new2.obj;\n-\t$(RM) [.cp]exception.obj;\n-\t$(RM) libgccplus.olb;\n-\n-clean:\n-\t$$ purge\n-\t$$ purge [.cp]\n-\t$(RM) *.obj;*\n-\t$(RM) [.cp]*.obj;*\n-\t$(RM) [.cp]parse.output;*\n-\t$(RM) *.cpp;*\n-\t$(RM) *.s;*\n-\t$(RM) *.rtl;*\n-\t$(RM) a.out;\n-\t$(RM) *.combine;\n-\t$(RM) *.cpp;\n-\t$(RM) *.cse;\n-\t$(RM) *.cse2;\n-\t$(RM) *.dbr;\n-\t$(RM) *.flow;\n-\t$(RM) *.greg;\n-\t$(RM) *.jump;\n-\t$(RM) *.jump2;\n-\t$(RM) *.loop;\n-\t$(RM) *.lreg;\n-\t$(RM) *.rtl;\n-\t$(RM) *.sched;\n-\t$(RM) *.sched2;\n-\t$(RM) *.map;\n-\t$(RM) genattr.exe;,insn-attr.h;\n-\t$(RM) genflags.exe;,insn-flags.h;\n-\t$(RM) gencodes.exe;,insn-codes.h;\n-\t$(RM) genconfig.exe;,insn-config.h;\n-\t$(RM) genpeep.exe;,insn-peep.c;\n-\t$(RM) genopinit.exe;,insn-opinit.c;\n-\t$(RM) genrecog.exe;,insn-recog.c;\n-\t$(RM) genextract.exe;,insn-extract.c;\n-\t$(RM) genoutput.exe;,insn-output.c;\n-\t$(RM) genemit.exe;,insn-emit.c;\n-\t$(RM) genattrtab.exe;,insn-attrtab.c;\n-\t$(RM) gengenrtl.exe;,genrtl.c;,genrtl.h;\n-\t$(RM) cc1.exe;\n-\t$(RM) cpp.exe;\n-\t$(RM) cc1plus.exe;\n-\t$(RM) libgcc2.olb;\n-\t$(RM) libgccplus.olb;\n-\t$(RM) enquire.exe;,float.h;,limits.h;\n-#\n-# clean everything axpconfig.com creates\n-#\n-distclean: clean cleancccp\n-\tpurge [...]\n-\t$(RM) config.h;\n-\t$(RM) tconfig.h;\n-\t$(RM) hconfig.h;\n-\t$(RM) tm.h;\n-\t$(RM) options.h;\n-\t$(RM) specs.h;\n-\t$(RM) aux-output.c;\n-\n-[.cp]call.obj: [.cp]call.c\n-[.cp]decl2.obj: [.cp]decl2.c\n-[.cp]except.obj: [.cp]except.c insn-codes.h insn-flags.h\n-[.cp]pt.obj: [.cp]pt.c\n-[.cp]spew.obj: [.cp]spew.c\n-[.cp]xref.obj: [.cp]xref.c\n-[.cp]class.obj: [.cp]class.c\n-[.cp]expr.obj: [.cp]expr.c insn-codes.h\n-[.cp]lex.obj: [.cp]lex.c [.cp]parse.h\n-[.cp]ptree.obj: [.cp]ptree.c\n-[.cp]tree.obj: [.cp]tree.c\n-[.cp]cvt.obj: [.cp]cvt.c\n-[.cp]errfn.obj: [.cp]errfn.c\n-[.cp]rtti.obj: [.cp]rtti.c\n-[.cp]method.obj: [.cp]method.c insn-codes.h\n-[.cp]search.obj: [.cp]search.c\n-[.cp]typeck.obj: [.cp]typeck.c\n-[.cp]decl.obj: [.cp]decl.c\n-[.cp]error.obj: [.cp]error.c\n-[.cp]friend.obj: [.cp]friend.c\n-[.cp]init.obj: [.cp]init.c\n-[.cp]parse.obj: [.cp]parse.c\n-\t$(CC) $(CFLAGS) $(CINCL_CP) $^/obj=$@\n-[.cp]sig.obj: [.cp]sig.c\n-[.cp]typeck2.obj: [.cp]typeck2.c\n-[.cp]repo.obj: [.cp]repo.c\n-[.cp]input.obj: [.cp]input.c\n-\t$(TOUCH) $@\n-# g++ library\n-[.cp]tinfo.obj: [.cp]tinfo.cc\n-[.cp]tinfo2.obj: [.cp]tinfo2.cc\n-[.cp]new.obj: [.cp]new.cc\n-[.cp]new1.obj: [.cp]new1.cc\n-[.cp]new2.obj: [.cp]new2.cc\n-[.cp]exception.obj: [.cp]exception.cc\n-\n-#EOF"}, {"sha": "8daf88cb54e8ee0f27435eefee5ee32c905d0bb7", "filename": "gcc/patch-apollo-includes", "status": "removed", "additions": 0, "deletions": 69, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1d49704bcc084245adffb45a22d43a841665515/gcc%2Fpatch-apollo-includes", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1d49704bcc084245adffb45a22d43a841665515/gcc%2Fpatch-apollo-includes", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpatch-apollo-includes?ref=c1d49704bcc084245adffb45a22d43a841665515", "patch": "@@ -1,69 +0,0 @@\n-#!/bin/sh\n-# patch-apollo-includes -- fix some (but not all!) Apollo brain damage.\n-\n-FILES_TO_PATCH='sys/types.h setjmp.h'\n-\n-mkdir sys\n-\n-for i in $FILES_TO_PATCH;\n-do\n-  cp /bsd4.3/usr/include/$i ./$i\n-done\n-\n-patch -b -apollo <<'EOP'\n-*** /bsd4.3/usr/include/sys/types.h\tFri Apr  8 20:29:06 1988\n---- sys/types.h\tWed Feb 26 21:17:57 1992\n-***************\n-*** 38,44 ****\n---- 38,47 ----\n-  typedef\tchar *\tcaddr_t;\n-  typedef\tu_long\tino_t;\n-  typedef\tlong\tswblk_t;\n-+ #ifndef _SIZE_T\n-+ #define _SIZE_T\n-  typedef\tlong\tsize_t;\n-+ #endif\n-  typedef\tlong\ttime_t;\n-  typedef\tlong\tdev_t;\n-  typedef\tlong\toff_t;\n-*** /bsd4.3/usr/include/setjmp.h\tFri Feb  3 21:40:21 1989\n---- setjmp.h\tSun Feb 23 19:06:55 1992\n-***************\n-*** 24,30 ****\n---- 24,39 ----\n-  #endif\n-  \n-  \n-+ #ifdef __GNUC__\n-  #ifdef _PROTOTYPES\n-+ extern int sigsetjmp (sigjmp_buf env, int savemask);\n-+ extern void siglongjmp (sigjmp_buf env, int val);\n-+ #else\n-+ extern int sigsetjmp();\n-+ extern void siglongjmp();\n-+ #endif /* _PROTOTYPES */\n-+ #else /* not __GNUC__ */\n-+ #ifdef _PROTOTYPES\n-  extern int sigsetjmp(\n-          sigjmp_buf env,\n-          int savemask\n-***************\n-*** 37,43 ****\n-  extern int sigsetjmp() #options(abnormal);\n-  extern void siglongjmp() #options(noreturn);\n-  #endif /* _PROTOTYPES */\n-! \n-  #undef _PROTOTYPES\n-  \n-  #ifdef __cplusplus\n---- 46,52 ----\n-  extern int sigsetjmp() #options(abnormal);\n-  extern void siglongjmp() #options(noreturn);\n-  #endif /* _PROTOTYPES */\n-! #endif /* not __GNUC__ */\n-  #undef _PROTOTYPES\n-  \n-  #ifdef __cplusplus\n-EOP\n-\n-exit 0"}, {"sha": "d98bb109220310f6b5e5de19fdb1428fa9da9ac5", "filename": "gcc/vmsconfig.com", "status": "removed", "additions": 0, "deletions": 500, "changes": 500, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1d49704bcc084245adffb45a22d43a841665515/gcc%2Fvmsconfig.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1d49704bcc084245adffb45a22d43a841665515/gcc%2Fvmsconfig.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvmsconfig.com?ref=c1d49704bcc084245adffb45a22d43a841665515", "patch": "@@ -1,500 +0,0 @@\n-$ !\n-$ !\tSet up to compile GCC on VMS.\n-$ !\n-$ ! Set the def dir to proper place for use in batch. Works for interactive too.\n-$flnm = f$enviroment(\"PROCEDURE\")     ! get current procedure name\n-$set default 'f$parse(flnm,,,\"DEVICE\")''f$parse(flnm,,,\"DIRECTORY\")'\n-$ !\n-$set symbol/scope=(nolocal,noglobal)\n-$if f$trnlnm(\"IFILE$\").nes.\"\" then close/noLog ifile$\n-$ !\n-$ echo = \"write sys$output\"\n-$ !\n-$ arch_indx = 1 + ((f$getsyi(\"CPU\").ge.128).and.1)\t! vax==1, alpha==2\n-$ arch = f$element(arch_indx,\"|\",\"|vax|alpha|\")\n-$ !\n-$ if f$search(\"config.h\") .nes. \"\" then delete config.h.*\n-$ if arch .eqs. \"vax\"\n-$ then\n-$   copy [.config.'arch']xm-vms.h []config.h\n-$   echo \"Linked `config.h' to `[.config.''arch']xm-vms.h'.\"\n-$else\n-$   open/write cfile []config.h\n-$   write cfile \"#include \"+\"\"\"config/\"+arch+\"/xm-\"+arch+\".h\"+\"\"\"\n-$   write cfile \"#include \"+\"\"\"config/\"+arch+\"/xm-vms.h\"+\"\"\"\n-$   close cfile\n-$   echo \"Created `config.h'.\"\n-$ endif\n-$ !\n-$ if f$search(\"tconfig.h\") .nes. \"\" then delete tconfig.h.*\n-$ create []tconfig.h\n-$DECK\n-/* tconfig.h == config.h :: target and host configurations are the same */\n-#include \"config.h\"\n-$EOD\n-$ echo \"Created `tconfig.h'.\n-$ !\n-$ if f$search(\"hconfig.h\") .nes. \"\" then delete hconfig.h.*\n-$ create []hconfig.h\n-$DECK\n-/* hconfig.h == config.h :: host and target configurations are the same */\n-#include \"config.h\"\n-$EOD\n-$ echo \"Created `hconfig.h'.\n-$ !\n-$ if f$search(\"tm.h\") .nes. \"\" then delete tm.h.*\n-$ !\n-$ edit/tpu/nojournal/nosection/nodisplay/command=sys$input -\n-        [.config.'arch']vms.h /output=[]tm.h\n-$DECK\n-!\n-!  Copy file, changing lines of the form\n-!\t#include \"vax/*\"\n-!  or\n-!\t#include \"alpha/*\"\n-!  into\n-!\t#include \"config-*\"\n-!\n-   file := CREATE_BUFFER(\"file\", GET_INFO(COMMAND_LINE, \"file_name\"));\n-   targ := LINE_BEGIN & '#include' & SPAN(ASCII(32)+ASCII(9))\n-\t   & '\"' & ('vax' | 'alpha') & '/';\n-   rang := CREATE_RANGE(BEGINNING_OF(file), END_OF(file));\n-   LOOP\n-      incl := SEARCH_QUIETLY(targ, FORWARD, EXACT, rang);\n-      EXITIF incl = 0;\n-      POSITION(BEGINNING_OF(incl));\n-      ERASE(incl);\n-      COPY_TEXT('#include \"config-');\n-      rang := CREATE_RANGE(END_OF(incl), END_OF(file));\n-   ENDLOOP;\n-   WRITE_FILE(file, GET_INFO(COMMAND_LINE, \"output_file\"));\n-   QUIT\n-$  EOD\n-$ echo \"Generated `tm.h' from `[.config.''arch']vms.h'.\"\n-$ !\n-$\t!crude hack to allow compiling from [.cp] subdirectory\n-$ if f$search(\"config-''arch'.h\") .nes. \"\" then delete config-'arch'.h;*\n-$ copy [.config.'arch']'arch'.h []config-'arch'.h\n-$ echo \"Linked `config-''arch'.h' to `[.config.''arch']''arch'.h' for `tm.h'.\"\n-$ !\n-$ call make_lang_incl \"options.h\"\n-$ !\n-$ call make_lang_incl \"specs.h\"\n-$ !\n-$ if arch .eqs. \"vax\"\n-$ then\n-$   if f$search(\"''arch'.md\") .nes. \"\" then delete 'arch'.md;*\n-$   copy [.config.'arch']'arch'.md []'arch'.md\n-$   echo \"Copied `''arch'.md' from `[.config.''arch']''arch'.md'.\"\n-$ endif\n-$ !\n-$ if f$search(\"aux-output.c\") .nes. \"\" then delete aux-output.c.*\n-$ copy [.config.'arch']'arch'.c []aux-output.c\n-$ echo \"Linked `aux-output.c' to `[.config.''arch']''arch'.c'.\n-$ !\n-$ !\n-$ !\n-$ ! Create the file version.opt, which helps identify the executable.\n-$ !\n-$search version.c version_string,\"=\"/match=and/output=t.tmp\n-$open ifile$ t.tmp\n-$read ifile$ line\n-$close ifile$\n-$delete t.tmp;\n-$line=f$element(1,\"\"\"\",line)\t!extract the portion between 1st & 2nd quotes\n-$! Format of 'line' is \"name-nn.nn.nn[.nn] [date text]\" (without the quotes).\n-$! We want \"name-nn.nn.nn[.nn][-date]\"; \"-date\" suffix is optional.\n-$id = f$element(1,\"-\",line)\t\t!strip \"name-\" prefix\n-$if id.eqs.\"-\" then  id = line\t\t!no prefix found?\n-$id = f$element(0,\" \",id) + \"-\" + f$element(1,\" \",id)\t!first two tokens\n-$id = id - \"- \"\t\t!in case 2nd token was empty\n-$if f$length(id).gt.15 then  id = f$extract(0,15,id)\t!length limitation\n-$!\n-$open/write ifile$ version.opt\n-$write ifile$ \"ident=\"+\"\"\"\"+id+\"\"\"\"\n-$close ifile$\n-$purge version.opt\n-$!\n-$!\n-$! create linker options files that lists all of the components for all\n-$! possible compilers.  We do this by editing the file Makefile.in, and \n-$! generating the relevant files from it.\n-$!\n-$!\n-$! Make a copy of the makefile if the sources are on a disk that is NFS \n-$!    mounted on a unix machine.\n-$if f$search(\"Makefile.in\").eqs.\"\" .and. f$search(\"$M$akefile.in\").nes.\"\" -\n-\tthen copy $M$akefile.in Makefile.in\n-$! This should be automated across all front-end subdirectories.\n-$!    For now, it's hardcoded.\n-$if f$search(\"[.cp]Makefile.in\").eqs.\"\" .and. f$search(\"[.cp]$M$akefile.in\").nes.\"\" -\n-\tthen copy [.cp]$M$akefile.in [.cp]Makefile.in\n-$!\n-$!\n-$echo \"Now processing Makefile.in to generate linker option files.\"\n-$edit/TPU/noJournal/noSection/noDisplay/Command=sys$input: Makefile.in -\n-\t/Start_Position=('arch_indx')\t\t! 1 for vax, 2 for alpha\n-!!\n-VARIABLE makefile_buf, opt_file_buf, complist_buf, extra_compilers; ! Globals.\n-VARIABLE arch;\t\t! String 'vax' or 'alpha', set in configure_makefile().\n-\n-!!\n-PROCEDURE process_makefile( )\n-  !\n-  ! Interpret Makefile.in and subsidiary Make-lang.in templates.\n-  !\n-  LOCAL range1, cmark, makefilename;\n-\n-  makefilename\t  := GET_INFO (COMMAND_LINE, 'FILE_NAME'); ! \"Makefile.in\"\n-  makefile_buf\t  := CREATE_BUFFER (\"makefile\", makefilename);\n-  opt_file_buf\t  := CREATE_BUFFER (\"opt_file\");\n-  complist_buf\t  := CREATE_BUFFER (\"complist\");\n-  extra_compilers := CREATE_ARRAY;\n-  !\n-  SET (NO_WRITE, makefile_buf, ON);\t! Used as workspace; don't save it.\n-  SET (OUTPUT_FILE, complist_buf, \"compilers.list\");\n-  !\n-  ! Make some textual substitutions.\n-  !\n-  configure_makefile ();\n-  !\n-  ! Collect a list of supported compilers (``COMPILERS=xxx'' macro).\n-  !\n-  identify_compilers ();\n-  !\n-  ! Plus other known compilers described by Make-lang.in makefile fragments.\n-  ! Add new entries as needed; args are (target name, subdirectory name).\n-  !\n-  additional_compiler (\"cc1plus\", \"cp\");\n-  !\n-  WRITE_FILE (complist_buf);\t\t! Now save \"compilers.list\".\n-  !\n-  ! Add to this list, as required.  The file \"Makefile.in\" is searched for\n-  ! a tag that looks like \"LINE_BEGIN + 'tag + (optional space) + \"=\"\".\n-  ! The contents are assumed to be a list of object files, and from this\n-  ! list a VMS linker options file is generated.\n-  !\n-  generate_option_file (\"OBJS\",\t\t \"=\", \"independent.opt\");\n-  generate_option_file (\"LIB2FUNCS\",\t \"=\", \"libgcc2.list\");\n-  generate_option_file (\"CXX_LIB2FUNCS\", \"=\", \"libgcc2-cxx.list\");\n-  !\n-  ! Now change OBJS in the Makefile, so each language specific options file\n-  ! does not pick up all of the language independent files.\n-  !\n-  POSITION (BEGINNING_OF (makefile_buf));\n-  COPY_TEXT (\"OBJS=\");\t! New copy with empty value, seen before real OBJS.\n-  SPLIT_LINE;\n-  !\n-  ! Lastly, process each compiler-specific object dependency list.\n-  !\n-  POSITION (BEGINNING_OF (complist_buf));\n-  LOOP\n-    cmark := MARK (NONE);\n-    EXITIF (cmark = END_OF (complist_buf));\n-    ! The current line contains the name of a compiler target, such as \"cc1\".\n-    MESSAGE (CURRENT_LINE);\t! Give some interactive feedback.\n-    generate_option_file (CURRENT_LINE, \":\", CURRENT_LINE + \"-objs.opt\");\n-    POSITION (cmark);\n-    MOVE_VERTICAL (1);\t\t! Go to the next line.\n-  ENDLOOP;\n-ENDPROCEDURE; !process_makefile\n-!!\n-\n-PROCEDURE process_objc_lib( )\n-  !\n-  ! Interpret objc/Makefile, after finishing the top makefile.\n-  !\n-  ON_ERROR\n-    [TPU$_OPENIN]:\n-      MESSAGE (\"Cannot load objc/Makefile for \"\"ObjClib\"\"; skipping it.\");\n-      RETURN;\n-  ENDON_ERROR;\n-\n-  ERASE (makefile_buf);\t\t\t!discard top Makefile\n-  POSITION (END_OF (makefile_buf));\n-  READ_FILE (\"[.objc]Make-lang.in\");\t!load objc one\n-  MESSAGE (\"objclib\");\n-  pat_replace (ASCII(9), \" \");\t\t!change any <tab> to <space>\n-  generate_option_file (\"OBJC_O\", \"=\", \"objc-objs.opt\");\n-  POSITION (BEGINNING_OF (makefile_buf));\n-  ! Join any continuation lines; we want the header list to be one line.\n-  pat_replace (\"\\\" & LINE_END, );\n-  generate_option_file (\"OBJC_H\", \"=\", \"objc-hdrs.list\");\n-ENDPROCEDURE; !process_objc_lib\n-!!\n-\n-PROCEDURE configure_makefile( )\n-  !\n-  ! Plug in some values normally handled by `configure'.  Rather than\n-  ! replacing the dummy entries, insert the real entries before them.\n-  !\n-  IF (GET_INFO (COMMAND_LINE, 'START_RECORD') <> 2) THEN\n-    arch := 'vax';\n-  ELSE\n-    arch := 'alpha';\n-  ENDIF;\n-  POSITION (BEGINNING_OF (makefile_buf));\n-  COPY_TEXT (\"target=\" + arch + \"-vms\");\tSPLIT_LINE;\n-  COPY_TEXT (\"out_file=aux-output.c\");\t\tSPLIT_LINE;\t! 'arch'/'arch'.c\n-  COPY_TEXT (\"out_object_file=aux-output.o\");\tSPLIT_LINE;\t! aux-output.obj\n-  COPY_TEXT (\"md_file=\" + arch + \".md\");\tSPLIT_LINE;\t! 'arch'/'arch'.md\n-  COPY_TEXT (\"tm_file=tm.h\");\t\t\tSPLIT_LINE;\t! 'arch'/tm-vms.h\n-  pat_replace (\"@\" &\n-    SPAN(\"abcdefghijklmnopqrstuvwxyz_ABCDEFGHIJKLMNOPQRSTUVWXYZ#~0123456789\")\n-\t\t   & \"@\", );\t\t! strip `configure' dummy values\n-ENDPROCEDURE; !configure_makefile\n-!!\n-\n-PROCEDURE identify_compilers( )\n-  !\n-  ! Retrieve the list of supported compilers from Makefile.in, and put them\n-  ! into file \"compilers.list\", one per line, for subsequent access from DCL.\n-  !\n-  LOCAL range1;\n-\n-  ! Strip most comments from the makefile, to speed up subsequent processing.\n-  POSITION (BEGINNING_OF (makefile_buf));\n-  pat_replace (LINE_BEGIN & \"#\" & REMAIN & LINE_END, );\n-  pat_replace (\"$(exeext)\", );\n-  pat_replace (\"@all_compilers@\", );\n-!#  ! Convert directory references to VMS syntax (actually, just strip it).\n-!#  pat_replace (\" $(srcdir)/\", \" \");\n-  ! Look up the ``COMPILERS=cc1 xyzzy'' Makefile macro and put\n-  ! its ``cc1 xyzzy'' value into the compilers buffer.\n-  POSITION (BEGINNING_OF (complist_buf));\n-!#--at some point we may want to add this--\n-!#  recursive_fetch_tag (\"CCCP\", \"=\");\t  ! Include the preprocessor.\n-!#  POSITION (END_OF (complist_buf));\n-  recursive_fetch_tag (\"COMPILERS\", \"=\");\n-  ! Convert all spaces into newlines, then remove any blank lines.\n-  pat_replace (SPAN(\" \"), LINE_END);\n-  pat_replace (LINE_BEGIN & LINE_END, );\n-ENDPROCEDURE; !identify_compilers\n-!!\n-\n-PROCEDURE additional_compiler( cname, subdir )\n-  !\n-  ! Load Make-lang.in for compiler CNAME from SUBDIR and append it to the\n-  ! end of Makefile.in's buffer.  Add CNAME to the \"compilers.list\" buffer.\n-  !\n-  ON_ERROR\n-    ! Don't abort if user removes the supporting subdirectory for a\n-    ! language she's not interested in.\n-    [TPU$_OPENIN]:\n-      MESSAGE (\"Cannot load \" + subdir + \"/Make-lang.in for \"\n-\t       + '\"' + cname + '\"' + \"; skipping it.\");\n-      RETURN;\n-  ENDON_ERROR;\n-\n-  POSITION (END_OF (makefile_buf));\n-  SPLIT_LINE;\t! Separate with a blank line.\n-  READ_FILE (\"[.\" + subdir + \"]Make-lang.in\");\t! Load Makefile fragment.\n-  ! Make sure that $(xxx_OTH_SRCS) expands to empty string by renaming $(it)\n-  pat_replace (\"_OTH_SRCS)\", \"_OTH_SRCS_dummy_)\");\n-  ! Convert subdirectory references into VMS syntax.\n-  pat_replace (\"$(srcdir)/\" + subdir + \"/\", \"[.\" + subdir + \"]\");\n-\n-    ! Temporary? hack for cp/Make-lang.in's mishandling of \"input.c\".\n-    IF (subdir = 'cp') THEN\n-      pat_replace (\"[.cp]input.c\", );\t! Discard this text.\n-    ENDIF;\n-\n-  ! Add this name to compilers.list.\n-  POSITION (END_OF (complist_buf));\n-  COPY_TEXT (cname);\n-  ! Make array entry indexed by compiler's file name; its value is arbitrary.\n-  extra_compilers{cname} := subdir;\n-ENDPROCEDURE; !additional_compiler\n-!!\n-\n-PROCEDURE generate_option_file( tag_name, punct, outfile_name )\n-  !\n-  ! Produce a file listing the names of particular object files, for use\n-  ! as input to the linker and also for use in finding source names by\n-  ! make-cc1.com.  Generally, any name suffix will be suppressed.\n-  !\n-  LOCAL range1, range2;\n-\n-  POSITION (BEGINNING_OF (opt_file_buf));\n-  recursive_fetch_tag (tag_name, punct);\n-  ! First fix up for subdirectory/Make-lang.in.\n-  IF (pat_replace (\"stamp-objlist\" & (SPAN(\" \")|LINE_END), \" \") > 0) THEN\n-    recursive_fetch_tag (\"stamp-objlist\", \":\");\n-  ENDIF;\n-  ! Now fix up a few things in the output buffer.\n-  pat_replace (\"Makefile\" & (SPAN(\" \")|LINE_END), \" \");\n-!#  FILL (CURRENT_BUFFER, \" \", 1, 80, 0);\t! Condense things a bit.\n-  pat_replace (\".\" & (\"o\"|\"c\"|\"y\") & ((SPAN(\" \")&LINE_END)|LINE_END), LINE_END);\n-  pat_replace (\".\" & (\"o\"|\"c\"|\"y\") & SPAN(\" \"), \",\");\n-  pat_replace (\".h\" & (SPAN(\" \")|LINE_END), \".h,\");\n-  ! Remove trailing commas, if present.\n-  pat_replace (\",\" & ((SPAN(\" \")&LINE_END)|LINE_END), LINE_END);\n-  ! Get rid of spaces and blank lines.\n-  pat_replace (SPAN(\" \"), LINE_END);\n-  pat_replace (LINE_BEGIN & LINE_END, );\n-  ! Second fix up for subdirectory/Make-lang.in;\n-  ! avoid \"sticky defaults\" when linker processes the resulting options file.\n-  IF (extra_compilers{outfile_name - \"-objs.opt\"} <> TPU$K_UNSPECIFIED) THEN\n-    POSITION (BEGINNING_OF (opt_file_buf));\n-    range1 := CREATE_RANGE (MARK (NONE), END_OF (CURRENT_BUFFER), NONE);\n-    LOOP\n-      range2 := SEARCH_QUIETLY (LINE_BEGIN | \",\", FORWARD, EXACT, range1);\n-      EXITIF (range2 = 0);\n-      POSITION (BEGINNING_OF (range2));\n-      IF (CURRENT_CHARACTER = \",\") THEN  MOVE_HORIZONTAL (1); ENDIF;\n-      ! If it's not already \"[.subdir]name\", explicitly make it \"[]name\".\n-      IF (CURRENT_CHARACTER <> \"[\") THEN  COPY_TEXT (\"[]\"); ENDIF;\n-      MOVE_HORIZONTAL (1);\n-      MODIFY_RANGE (range1, MARK (NONE), END_OF (range1));\n-    ENDLOOP;\n-  ENDIF;\n-  ! Now write the output file.\n-  SET (OUTPUT_FILE, opt_file_buf, outfile_name);\n-  WRITE_FILE (opt_file_buf);\n-  ERASE (opt_file_buf);\t\t! Clear buffer out for next opt_file pass.\n-ENDPROCEDURE; !generate_option_file\n-!!\n-\n-PROCEDURE recursive_fetch_tag( tag_n, punct )\n-  !\n-  ! Look up TAG_N, copy it to OPT_FILE_BUF, and then translate any $(...)\n-  ! definitions that appear.  The translation is put at the current point.\n-  !\n-  LOCAL mark1, mark2, range1, tag_range, tag_string;\n-\n-  fetch_tag (tag_n, punct);\n-  ! Substitute any makefile symbols $(...).\n-  POSITION (BEGINNING_OF (CURRENT_BUFFER));\n-  LOOP\n-    range1 := SEARCH_QUIETLY (\"$(\" &\n-      SPAN(\"abcdefghijklmnopqrstuvwxyz_ABCDEFGHIJKLMNOPQRSTUVWXYZ#~0123456789\")\n-\t\t\t\t   & \")\", FORWARD, EXACT);\n-    EXITIF (range1 = 0);\n-    POSITION (BEGINNING_OF (range1));\n-    MOVE_HORIZONTAL (2);\t! Past opening \"$(\".\n-    mark1 := MARK (NONE);\n-    POSITION (END_OF (range1));\n-    MOVE_HORIZONTAL (-1);\t! In front of closing \")\".\n-    mark2 := MARK (NONE);\n-    tag_range := CREATE_RANGE (mark1, mark2, NONE);\n-    POSITION (END_OF (range1));\n-    tag_string := STR (tag_range);\n-    ERASE (range1);\n-    fetch_tag (tag_string, \"=\");\n-    POSITION (BEGINNING_OF (CURRENT_BUFFER));\n-  ENDLOOP;\n-ENDPROCEDURE; !recursive_fetch_tag\n-!!\n-\n-PROCEDURE fetch_tag( tag_n, punct )\n-  !\n-  ! Looks up the translation of a tag, and inserts it at the current location\n-  ! in the buffer.\n-  !\n-  LOCAL mark0, mark1, mark2, range2;\n-\n-  mark0 := MARK (NONE);     ! Remember where we started; restore before return.\n-  POSITION (BEGINNING_OF (makefile_buf));\n-  ! The tag definition always starts in the first column, and might have\n-  ! optional space(es) before \"=\" or \":\" punctuation.\n-  range2 := SEARCH_QUIETLY (LINE_BEGIN & tag_n & ((SPAN(\" \") & punct) | punct),\n-\t\t\t    FORWARD, EXACT);\n-  IF (range2 = 0) THEN\n-    POSITION (mark0);\n-    RETURN;\n-  ENDIF;\n-  POSITION (END_OF (range2));\n-  MOVE_HORIZONTAL (1);\t\t! Move beyond \"TAG=\".\n-  mark1 := MARK (NONE);\n-  POSITION (BEGINNING_OF (range2));\n-  LOOP\n-    MOVE_VERTICAL (1);\n-    MOVE_HORIZONTAL (-2);\n-    EXITIF (CURRENT_CHARACTER <> \"\\\");\n-    ERASE_CHARACTER (1);\n-    MOVE_HORIZONTAL (1);\n-  ENDLOOP;\n-  MOVE_HORIZONTAL (1);\n-  mark2 := MARK (NONE);\n-  range2 := CREATE_RANGE (mark1, mark2, NONE);\n-  POSITION (mark0);\n-  IF (LENGTH (range2) <> 0) THEN\n-    COPY_TEXT (range2);\n-  ENDIF;\n-ENDPROCEDURE; !fetch_tag\n-!!\n-\n-PROCEDURE pat_replace( oldstring, newstring )\n-  !\n-  ! Replace all occurrences of a pattern.\n-  !\n-  LOCAL range1, range2, kill_it, count;\n-\n-  count := 0;\n-  kill_it := (GET_INFO (newstring, 'TYPE') = UNSPECIFIED);\t! Omitted arg.\n-  range1 := CREATE_RANGE (BEGINNING_OF (CURRENT_BUFFER),\n-\t\t\t  END_OF (CURRENT_BUFFER), NONE);\n-  LOOP\n-    range2 := SEARCH_QUIETLY (oldstring, FORWARD, EXACT, range1);\n-    EXITIF (range2 = 0);\n-    count := count + 1;\n-    POSITION (BEGINNING_OF (range2));\n-    ERASE (range2);\n-    IF (newstring = LINE_END) THEN\n-      SPLIT_LINE;\n-    ELSE IF (NOT kill_it) THEN\n-      COPY_TEXT (newstring);\n-    ENDIF; ENDIF;\n-    MODIFY_RANGE (range1, MARK (NONE), END_OF (range1));\n-  ENDLOOP;\n-  RETURN count;\n-ENDPROCEDURE; !pat_replace\n-!!\n-\n-!\n-! This is the main routine.\n-!\n-process_makefile ();\n-process_objc_lib ();\t!this uses a different makefile\n-QUIT;\t! All done; don't write any modified buffers.\n-!!\n-$ echo \"\"\n-$!\n-$! Remove excessive versions of the option files...\n-$!\n-$ purge *.opt,*.list\n-$!\n-$!\n-$!\n-$ if f$search(\"config.status\") .nes. \"\" then delete config.status.*\n-$ create config.status\n-$ open/append ifile$ config.status\n-$ write ifile$ \"Links are now set up for use with a ''arch' running VMS.\"\n-$ close ifile$\n-$ type config.status\n-$ echo \"\"\n-$!\n-$ exit\n-$\n-$!\n-$! Construct a header file based on subdirectory contents\n-$!\n-$make_lang_incl: subroutine\n-$  if f$search(p1).nes.\"\" then delete 'p1';*\n-$  create 'p1'\t!empty file with ordinary text-file attributes\n-$  open/Append ifile$ 'p1'\n-$  write ifile$ \"/* ''p1' */\"\n-$  hfile = f$search(\"[]''p1'\")\n-$  topdir = f$parse(hfile,,,\"DIRECTORY\") - \"]\"\n-$lang_incl_loop:\n-$  hfile = f$search(\"[.*]lang-''p1'\")\n-$  if hfile.eqs.\"\" then goto lang_incl_done\n-$  dir = f$parse(hfile,,,\"DIRECTORY\") - \"]\"\n-$! convert absolute path to relative one, yielding \"[.subdir]\"\n-$  dir = \"[\" + f$edit(dir - topdir,\"LOWERCASE\") + \"]\"\n-$  write ifile$ \"#include \"\"''dir'lang-''p1'\"\"\"\n-$  goto lang_incl_loop\n-$lang_incl_done:\n-$  close ifile$\n-$  echo \"Created `''p1''.\"\n-$ endsubroutine !make_lang_incl"}]}