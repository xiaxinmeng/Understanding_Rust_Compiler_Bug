{"sha": "897da3034cc2b1e3675d891e833c6b2a02fd4fe5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk3ZGEzMDM0Y2MyYjFlMzY3NWQ4OTFlODMzYzZiMmEwMmZkNGZlNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-09-15T09:19:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-09-15T09:19:36Z"}, "message": "re PR tree-optimization/82217 (ICE on valid code at -O1 and above: in visit_phi, at tree-ssa-sccvn.c:3908)\n\n2017-09-15  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/82217\n\t* tree-ssa-sccvn.c (visit_phi): Properly handle all VN_TOP\n\tbut not undefined case.\n\n\t* gcc.dg/torture/pr82217.c: New testcase.\n\nFrom-SVN: r252796", "tree": {"sha": "d30a6dd766b27849dc68b70824bcd0b2d0b7534f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d30a6dd766b27849dc68b70824bcd0b2d0b7534f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/897da3034cc2b1e3675d891e833c6b2a02fd4fe5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/897da3034cc2b1e3675d891e833c6b2a02fd4fe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/897da3034cc2b1e3675d891e833c6b2a02fd4fe5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/897da3034cc2b1e3675d891e833c6b2a02fd4fe5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "854dde43ae85c54a12430a656d01a0db9637b139", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/854dde43ae85c54a12430a656d01a0db9637b139", "html_url": "https://github.com/Rust-GCC/gccrs/commit/854dde43ae85c54a12430a656d01a0db9637b139"}], "stats": {"total": 52, "additions": 46, "deletions": 6}, "files": [{"sha": "65bfc163f5a5ce896315989e6561f72a0d3d68d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/897da3034cc2b1e3675d891e833c6b2a02fd4fe5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/897da3034cc2b1e3675d891e833c6b2a02fd4fe5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=897da3034cc2b1e3675d891e833c6b2a02fd4fe5", "patch": "@@ -1,3 +1,9 @@\n+2017-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82217\n+\t* tree-ssa-sccvn.c (visit_phi): Properly handle all VN_TOP\n+\tbut not undefined case.\n+\n 2017-09-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/82145"}, {"sha": "cd3f7a96c0dfa47b07a710c5f7af6561329beb94", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/897da3034cc2b1e3675d891e833c6b2a02fd4fe5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/897da3034cc2b1e3675d891e833c6b2a02fd4fe5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=897da3034cc2b1e3675d891e833c6b2a02fd4fe5", "patch": "@@ -1,3 +1,8 @@\n+2017-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82217\n+\t* gcc.dg/torture/pr82217.c: New testcase.\n+\n 2017-09-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/82145"}, {"sha": "471f474aab3f8a90da55b8ed81ec4de23a4295d5", "filename": "gcc/testsuite/gcc.dg/torture/pr82217.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/897da3034cc2b1e3675d891e833c6b2a02fd4fe5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82217.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/897da3034cc2b1e3675d891e833c6b2a02fd4fe5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82217.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82217.c?ref=897da3034cc2b1e3675d891e833c6b2a02fd4fe5", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do compile } */\n+\n+int a, b, c;\n+\n+void fn1 ()\n+{ \n+  while (1)\n+    { \n+      if (c)\n+\tgoto L2;\n+      break;\n+    }\n+  if (c)\n+    {\n+L1:\n+\t{\n+\t  int g[1];\n+\t  if (b)\n+\t    goto L1;\n+\t  goto L1;\n+L2:\n+\t  for (a = 0; a;)\n+\t    goto L1;\n+\t}\n+    }\n+}\n+\n+int main ()\n+{ \n+  fn1 ();\n+  return 0;\n+}"}, {"sha": "0b0c5106d3022c362344617a2bb7735535ecad06", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/897da3034cc2b1e3675d891e833c6b2a02fd4fe5/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/897da3034cc2b1e3675d891e833c6b2a02fd4fe5/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=897da3034cc2b1e3675d891e833c6b2a02fd4fe5", "patch": "@@ -3901,13 +3901,10 @@ visit_phi (gimple *phi)\n      if only a single edge is exectuable use its value.  */\n   if (n_executable <= 1)\n     result = seen_undef ? seen_undef : sameval;\n-  /* If we saw only undefined values create a new undef SSA name to\n-     avoid false equivalences.  */\n+  /* If we saw only undefined values and VN_TOP use one of the\n+     undefined values.  */\n   else if (sameval == VN_TOP)\n-    {\n-      gcc_assert (seen_undef);\n-      result = seen_undef;\n-    }\n+    result = seen_undef ? seen_undef : sameval;\n   /* First see if it is equivalent to a phi node in this block.  We prefer\n      this as it allows IV elimination - see PRs 66502 and 67167.  */\n   else if ((result = vn_phi_lookup (phi)))"}]}