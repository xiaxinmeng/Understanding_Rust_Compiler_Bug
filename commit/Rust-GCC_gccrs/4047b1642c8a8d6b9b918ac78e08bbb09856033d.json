{"sha": "4047b1642c8a8d6b9b918ac78e08bbb09856033d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA0N2IxNjQyYzhhOGQ2YjliOTE4YWM3OGUwOGJiYjA5ODU2MDMzZA==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2003-09-20T15:59:38Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2003-09-20T15:59:38Z"}, "message": "re PR c++/157 (Duplicate error message for invalid elaborated type specifier)\n\n\tPR c++/157\n\t* parser.c (cp_parser_direct_declarator): Clear\n\tparser->num_template_parameter_lists when parsing function\n\tparameters.\n\t(cp_parser_constructor_declarator_p): Likewise.\n\n\t* g++.dg/parse/crash12.C: New test.\n\nFrom-SVN: r71605", "tree": {"sha": "4d8afe9a8f86b2c97d6a01dff49885940003206c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d8afe9a8f86b2c97d6a01dff49885940003206c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4047b1642c8a8d6b9b918ac78e08bbb09856033d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4047b1642c8a8d6b9b918ac78e08bbb09856033d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4047b1642c8a8d6b9b918ac78e08bbb09856033d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4047b1642c8a8d6b9b918ac78e08bbb09856033d/comments", "author": null, "committer": null, "parents": [{"sha": "2f54a73fc1a1466dbe576bfe0aab80cea9d4ff93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f54a73fc1a1466dbe576bfe0aab80cea9d4ff93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f54a73fc1a1466dbe576bfe0aab80cea9d4ff93"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "b7d65feb4d9fddd9325317307412dc63c8f03b10", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4047b1642c8a8d6b9b918ac78e08bbb09856033d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4047b1642c8a8d6b9b918ac78e08bbb09856033d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4047b1642c8a8d6b9b918ac78e08bbb09856033d", "patch": "@@ -1,3 +1,11 @@\n+2003-09-20  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/157\n+\t* parser.c (cp_parser_direct_declarator): Clear\n+\tparser->num_template_parameter_lists when parsing function\n+\tparameters.\n+\t(cp_parser_constructor_declarator_p): Likewise.\n+\n 2003-09-19  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/495"}, {"sha": "4114aeaa24d354f6faef1540d01d5499ffd73285", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4047b1642c8a8d6b9b918ac78e08bbb09856033d/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4047b1642c8a8d6b9b918ac78e08bbb09856033d/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=4047b1642c8a8d6b9b918ac78e08bbb09856033d", "patch": "@@ -9720,6 +9720,7 @@ cp_parser_direct_declarator (cp_parser* parser,\n \t  if (!first || dcl_kind != CP_PARSER_DECLARATOR_NAMED)\n \t    {\n \t      tree params;\n+\t      unsigned saved_num_template_parameter_lists;\n \t      \n \t      cp_parser_parse_tentatively (parser);\n \n@@ -9733,9 +9734,18 @@ cp_parser_direct_declarator (cp_parser* parser,\n \t\t  parser->in_declarator_p = true;\n \t\t}\n \t  \n+\t      /* Inside the function parameter list, surrounding\n+\t\t template-parameter-lists do not apply.  */\n+\t      saved_num_template_parameter_lists\n+\t\t= parser->num_template_parameter_lists;\n+\t      parser->num_template_parameter_lists = 0;\n+\n \t      /* Parse the parameter-declaration-clause.  */\n \t      params = cp_parser_parameter_declaration_clause (parser);\n \n+\t      parser->num_template_parameter_lists\n+\t\t= saved_num_template_parameter_lists;\n+\n \t      /* If all went well, parse the cv-qualifier-seq and the\n \t     \t exception-specification.  */\n \t      if (cp_parser_parse_definitely (parser))\n@@ -13436,6 +13446,7 @@ cp_parser_constructor_declarator_p (cp_parser *parser, bool friend_p)\n \t  && !cp_parser_storage_class_specifier_opt (parser))\n \t{\n \t  tree type;\n+\t  unsigned saved_num_template_parameter_lists;\n \n \t  /* Names appearing in the type-specifier should be looked up\n \t     in the scope of the class.  */\n@@ -13456,13 +13467,24 @@ cp_parser_constructor_declarator_p (cp_parser *parser, bool friend_p)\n \t\t}\n \t      push_scope (type);\n \t    }\n+\n+\t  /* Inside the constructor parameter list, surrounding\n+\t     template-parameter-lists do not apply.  */\n+\t  saved_num_template_parameter_lists\n+\t    = parser->num_template_parameter_lists;\n+\t  parser->num_template_parameter_lists = 0;\n+\n \t  /* Look for the type-specifier.  */\n \t  cp_parser_type_specifier (parser,\n \t\t\t\t    CP_PARSER_FLAGS_NONE,\n \t\t\t\t    /*is_friend=*/false,\n \t\t\t\t    /*is_declarator=*/true,\n \t\t\t\t    /*declares_class_or_enum=*/NULL,\n \t\t\t\t    /*is_cv_qualifier=*/NULL);\n+\n+\t  parser->num_template_parameter_lists\n+\t    = saved_num_template_parameter_lists;\n+\n \t  /* Leave the scope of the class.  */\n \t  if (type)\n \t    pop_scope (type);"}, {"sha": "9e3728911c357b7f11f569a5f1979d1c7bb8604a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4047b1642c8a8d6b9b918ac78e08bbb09856033d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4047b1642c8a8d6b9b918ac78e08bbb09856033d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4047b1642c8a8d6b9b918ac78e08bbb09856033d", "patch": "@@ -1,3 +1,8 @@\n+2003-09-20  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/157\n+\t* g++.dg/parse/crash12.C: New test.\n+\n 2003-09-19  Janis Johnson  <janis187@us.ibm.com>\n \n \t* gcc.dg/compat/mixed-struct-check.h: New."}, {"sha": "cf947b27787453d38089134b1fc0c5434d589f93", "filename": "gcc/testsuite/g++.dg/parse/crash12.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4047b1642c8a8d6b9b918ac78e08bbb09856033d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4047b1642c8a8d6b9b918ac78e08bbb09856033d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash12.C?ref=4047b1642c8a8d6b9b918ac78e08bbb09856033d", "patch": "@@ -0,0 +1,24 @@\n+// { dg-do compile }\n+\n+// Origin: Martin von Loewis <martin@v.loewis.de>\n+\n+// PR c++/157: Incorrect type/template decision in function parameter.\n+\n+template <class _Tp> class auto_ptr {};\n+template <class _Tp>\n+class counted_ptr\n+{\n+public:\n+  counted_ptr(auto_ptr<_Tp>& __a);\t\t// { dg-error \"candidate\" }\n+  auto_ptr<_Tp> auto_ptr();\n+};\n+\n+template <class _Tp>\n+inline counted_ptr<_Tp>::counted_ptr(class auto_ptr& __a) // { dg-error \"required\" }\n+{\t\t\t\t\t\t// { dg-error \"no type|not match|template\" }\n+}\n+\n+template <class _Tp>\n+inline class auto_ptr<_Tp> counted_ptr<_Tp>::auto_ptr() \n+{\n+}"}]}