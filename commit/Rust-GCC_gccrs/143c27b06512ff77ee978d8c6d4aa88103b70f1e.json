{"sha": "143c27b06512ff77ee978d8c6d4aa88103b70f1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQzYzI3YjA2NTEyZmY3N2VlOTc4ZDhjNmQ0YWE4ODEwM2I3MGYxZQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2006-12-05T23:24:07Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2006-12-05T23:24:07Z"}, "message": "localefwd.h: Consistent @file placement...\n\n2006-12-05  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/localefwd.h: Consistent @file placement, use\n        include/ as part of the path for files that have shadows instead of no\n        name.\n\t* include/bits/valarray_after.h: Same.\n\t* include/bits/gslice_array.h: Same.\n\t* include/bits/gslice.h: Same.\n\t* include/bits/locale_classes.h: Same.\n\t* include/bits/locale_facets.h: Same.\n\t* include/bits/indirect_array.h: Same.\n\t* include/bits/basic_string.h: Same.\n\t* include/bits/ios_base.h: Same.\n\t* include/bits/postypes.h: Same.\n\t* include/bits/codecvt.h: Same.\n\t* include/bits/mask_array.h: Same.\n\t* include/bits/slice_array.h: Same.\n\t* include/bits/boost_concept_check.h: Same.\n\t* include/bits/char_traits.h: Same.\n\t* include/bits/stringfwd.h: Same.\n\t* include/bits/c++config: Same.\n\t* include/bits/valarray_array.h: Same.\n\t* include/bits/valarray_before.h: Same.\n\t* include/bits/cpp_type_traits.h: Same.\n\t* include/c/std_cerrno.h: Same.\n\t* include/precompiled/extc++.h: Same.\n\t* include/precompiled/stdtr1c++.h: Same.\n\t* include/precompiled/stdc++.h: Same.\n\t* include/tr1/cinttypes: Same.\n\t* include/tr1/fenv.h: Same.\n\t* include/tr1/mu_iterate.h: Same.\n\t* include/tr1/cstdio: Same.\n\t* include/tr1/limits.h: Same.\n\t* include/tr1/ctgmath: Same.\n\t* include/tr1/cstdarg: Same.\n\t* include/tr1/tuple: Same.\n\t* include/tr1/float.h: Same.\n\t* include/tr1/stdint.h: Same.\n\t* include/tr1/tuple_iterate.h: Same.\n\t* include/tr1/type_traits_fwd.h: Same.\n\t* include/tr1/hashtable_policy.h: Same.\n\t* include/tr1/cfenv: Same.\n\t* include/tr1/wctype.h: Same.\n\t* include/tr1/ref_fwd.h: Same.\n\t* include/tr1/bind_repeat.h: Same.\n\t* include/tr1/utility: Same.\n\t* include/tr1/climits: Same.\n\t* include/tr1/type_traits: Same.\n\t* include/tr1/stdlib.h: Same.\n\t* include/tr1/cwchar: Same.\n\t* include/tr1/stdio.h: Same.\n\t* include/tr1/ref_wrap_iterate.h: Same.\n\t* include/tr1/cstdint: Same.\n\t* include/tr1/memory: Same.\n\t* include/tr1/cstdbool: Same.\n\t* include/tr1/cwctype: Same.\n\t* include/tr1/bind_iterate.h: Same.\n\t* include/tr1/math.h: Same.\n\t* include/tr1/random: Same.\n\t* include/tr1/tuple_defs.h: Same.\n\t* include/tr1/cstdlib: Same.\n\t* include/tr1/unordered_map: Same.\n\t* include/tr1/boost_shared_ptr.h: Same.\n\t* include/tr1/cctype: Same.\n\t* include/tr1/random.tcc: Same.\n\t* include/tr1/wchar.h: Same.\n\t* include/tr1/hashtable: Same.\n\t* include/tr1/cmath: Same.\n\t* include/tr1/stdbool.h: Same.\n\t* include/tr1/ctime: Same.\n\t* include/tr1/functional: Same.\n\t* include/tr1/unordered_set: Same.\n\t* include/tr1/inttypes.h: Same.\n\t* include/tr1/functional_iterate.h: Same.\n\t* include/tr1/repeat.h: Same.\n\t* include/tr1/complex: Same.\n\t* include/tr1/cfloat: Same.\n\t* include/tr1/ctype.h: Same.\n\t* include/tr1/stdarg.h: Same.\n\t* include/tr1/tgmath.h: Same.\n\t* include/tr1/array: Same.\n\t* include/tr1/common.h: Same.\n\t* include/std/std_valarray.h: Same.\n\t* include/std/std_iostream.h: Same.\n\t* include/std/std_queue.h: Same.\n\t* include/std/std_algorithm.h: Same.\n\t* include/std/std_streambuf.h: Same.\n\t* include/std/std_iterator.h: Same.\n\t* include/std/std_ios.h: Same.\n\t* include/std/std_bitset.h: Same.\n\t* include/std/std_iosfwd.h: Same.\n\t* include/std/std_set.h: Same.\n\t* include/std/std_iomanip.h: Same.\n\t* include/std/std_fstream.h: Same.\n\t* include/std/std_functional.h: Same.\n\t* include/std/std_numeric.h: Same.\n\t* include/std/std_vector.h: Same.\n\t* include/std/std_deque.h: Same.\n\t* include/std/std_stdexcept.h: Same.\n\t* include/std/std_utility.h: Same.\n\t* include/std/std_stack.h: Same.\n\t* include/std/std_string.h: Same.\n\t* include/std/std_complex.h: Same.\n\t* include/std/std_memory.h: Same.\n\t* include/std/std_ostream.h: Same.\n\t* include/std/std_list.h: Same.\n\t* include/std/std_map.h: Same.\n\t* include/std/std_sstream.h: Same.\n\t* include/c_std/std_csignal.h: Same.\n\t* include/c_std/std_cstdlib.h: Same.\n\t* include/c_std/std_cstdio.h: Same.\n\t* include/c_std/std_cstdarg.h: Same.\n\t* include/c_std/std_cctype.h: Same.\n\t* include/c_std/std_cerrno.h: Same.\n\t* include/c_std/std_cmath.h: Same.\n\t* include/c_std/std_ctime.h: Same.\n\t* include/c_std/std_clocale.h: Same.\n\t* include/c_std/std_climits.h: Same.\n\t* include/c_std/std_cassert.h: Same.\n\t* include/c_std/cmath.tcc\n\t* include/c_std/std_csetjmp.h: Same.\n\t* include/c_std/std_cwchar.h: Same.\n\t* include/c_std/std_cfloat.h: Same.\n\t* include/c_std/std_cstring.h: Same.\n\t* include/c_std/std_cstddef.h: Same.\n\t* include/c_std/std_cwctype.h: Same.\n\n\t* config/locale/gnu/c_locale.h: Namespace scope in all files.\n\t* config/locale/gnu/messages_members.h: Same.\n\t* config/locale/gnu/c++locale_internal.h: Same.\n\t* config/locale/gnu/time_members.h: Same.\n\t* config/locale/ieee_1003.1-2001/c_locale.h: Same.\n\t* config/locale/ieee_1003.1-2001/messages_members.h: Same.\n\t* config/locale/generic/c_locale.h: Same.\n\t* config/locale/generic/messages_members.h: Same.\n\t* config/locale/generic/time_members.h: Same.\n\t* config/allocator/mt_allocator_base.h: Same.\n\t* config/allocator/malloc_allocator_base.h: Same.\n\t* config/allocator/new_allocator_base.h: Same.\n\t* config/allocator/pool_allocator_base.h: Same.\n\t* config/allocator/bitmap_allocator_base.h: Same.\n\t* config/os/windiss/ctype_noninline.h: Same.\n\t* config/os/windiss/os_defines.h: Same.\n\t* config/os/windiss/ctype_inline.h: Same.\n\t* config/os/newlib/ctype_noninline.h: Same.\n\t* config/os/newlib/os_defines.h: Same.\n\t* config/os/newlib/ctype_inline.h: Same.\n\t* config/os/aix/ctype_noninline.h: Same.\n\t* config/os/aix/os_defines.h: Same.\n\t* config/os/aix/ctype_inline.h: Same.\n\t* config/os/vxworks/ctype_noninline.h: Same.\n\t* config/os/vxworks/os_defines.h: Same.\n\t* config/os/vxworks/ctype_inline.h: Same.\n\t* config/os/hpux/ctype_noninline.h: Same.\n\t* config/os/hpux/os_defines.h: Same.\n\t* config/os/hpux/ctype_inline.h: Same.\n\t* config/os/mingw32/ctype_noninline.h: Same.\n\t* config/os/mingw32/os_defines.h: Same.\n\t* config/os/mingw32/ctype_inline.h: Same.\n\t* config/os/gnu-linux/ctype_noninline.h: Same.\n\t* config/os/gnu-linux/os_defines.h: Same.\n\t* config/os/gnu-linux/ctype_inline.h: Same.\n\t* config/os/tpf/ctype_noninline.h: Same.\n\t* config/os/tpf/os_defines.h: Same.\n\t* config/os/tpf/ctype_inline.h: Same.\n\t* config/os/uclibc/ctype_noninline.h: Same.\n\t* config/os/uclibc/os_defines.h: Same.\n\t* config/os/uclibc/ctype_inline.h: Same.\n\t* config/os/djgpp/ctype_noninline.h: Same.\n\t* config/os/djgpp/os_defines.h: Same.\n\t* config/os/djgpp/ctype_inline.h: Same.\n\t* config/os/qnx/qnx6.1/ctype_noninline.h: Same.\n\t* config/os/qnx/qnx6.1/ctype_inline.h: Same.\n\t* config/os/bsd/netbsd/ctype_noninline.h: Same.\n\t* config/os/bsd/netbsd/ctype_inline.h: Same.\n\t* config/os/bsd/darwin/ctype_noninline.h: Same.\n\t* config/os/bsd/darwin/ctype_inline.h: Same.\n\t* config/os/bsd/freebsd/ctype_noninline.h: Same.\n\t* config/os/bsd/freebsd/ctype_inline.h: Same.\n\t* config/os/irix/irix5.2/ctype_noninline.h: Same.\n\t* config/os/irix/irix5.2/ctype_inline.h: Same.\n\t* config/os/irix/irix6.5/ctype_noninline.h: Same.\n\t* config/os/irix/irix6.5/ctype_inline.h: Same.\n\t* config/os/solaris/solaris2.5/ctype_noninline.h: Same.\n\t* config/os/solaris/solaris2.5/ctype_inline.h: Same.\n\t* config/os/solaris/solaris2.6/ctype_noninline.h: Same.\n\t* config/os/solaris/solaris2.6/ctype_inline.h: Same.\n\t* config/os/solaris/solaris2.7/ctype_noninline.h: Same.\n\t* config/os/solaris/solaris2.7/ctype_inline.h: Same.\n\t* config/os/generic/ctype_noninline.h: Same.\n\t* config/os/generic/os_defines.h: Same.\n\t* config/os/generic/ctype_inline.h: Same.\n\t* config/cpu/arm/cxxabi_tweaks.h: Same.\n\t* config/cpu/powerpc/cpu_defines.h: Same.\n\t* config/cpu/generic/cxxabi_tweaks.h: Same.\n\t* config/cpu/generic/cpu_defines.h: Same.\n\t* config/cpu/generic/atomic_word.h: Same.\n\t* config/io/c_io_stdio.h: Same.\n\t* config/abi/compatibility.h: Same.\n\n\t* docs/doxygen/user.cfg.in: Adjust file list.\n\nFrom-SVN: r119561", "tree": {"sha": "899d49994413fe8306ed2e5a275f2f04a7e597ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/899d49994413fe8306ed2e5a275f2f04a7e597ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/143c27b06512ff77ee978d8c6d4aa88103b70f1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/143c27b06512ff77ee978d8c6d4aa88103b70f1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/143c27b06512ff77ee978d8c6d4aa88103b70f1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/143c27b06512ff77ee978d8c6d4aa88103b70f1e/comments", "author": null, "committer": null, "parents": [{"sha": "29c08d7c90b5caf5baea45642fa12f065f868355", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c08d7c90b5caf5baea45642fa12f065f868355", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29c08d7c90b5caf5baea45642fa12f065f868355"}], "stats": {"total": 1247, "additions": 966, "deletions": 281}, "files": [{"sha": "e6de196160e2ff70bfda34f0e22586baaf18f91d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 202, "deletions": 0, "changes": 202, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -1,3 +1,205 @@\n+2006-12-05  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/localefwd.h: Consistent @file placement, use\n+        include/ as part of the path for files that have shadows instead of no\n+        name.\n+\t* include/bits/valarray_after.h: Same.\n+\t* include/bits/gslice_array.h: Same.\n+\t* include/bits/gslice.h: Same.\n+\t* include/bits/locale_classes.h: Same.\n+\t* include/bits/locale_facets.h: Same.\n+\t* include/bits/indirect_array.h: Same.\n+\t* include/bits/basic_string.h: Same.\n+\t* include/bits/ios_base.h: Same.\n+\t* include/bits/postypes.h: Same.\n+\t* include/bits/codecvt.h: Same.\n+\t* include/bits/mask_array.h: Same.\n+\t* include/bits/slice_array.h: Same.\n+\t* include/bits/boost_concept_check.h: Same.\n+\t* include/bits/char_traits.h: Same.\n+\t* include/bits/stringfwd.h: Same.\n+\t* include/bits/c++config: Same.\n+\t* include/bits/valarray_array.h: Same.\n+\t* include/bits/valarray_before.h: Same.\n+\t* include/bits/cpp_type_traits.h: Same.\n+\t* include/c/std_cerrno.h: Same.\n+\t* include/precompiled/extc++.h: Same.\n+\t* include/precompiled/stdtr1c++.h: Same.\n+\t* include/precompiled/stdc++.h: Same.\n+\t* include/tr1/cinttypes: Same.\n+\t* include/tr1/fenv.h: Same.\n+\t* include/tr1/mu_iterate.h: Same.\n+\t* include/tr1/cstdio: Same.\n+\t* include/tr1/limits.h: Same.\n+\t* include/tr1/ctgmath: Same.\n+\t* include/tr1/cstdarg: Same.\n+\t* include/tr1/tuple: Same.\n+\t* include/tr1/float.h: Same.\n+\t* include/tr1/stdint.h: Same.\n+\t* include/tr1/tuple_iterate.h: Same.\n+\t* include/tr1/type_traits_fwd.h: Same.\n+\t* include/tr1/hashtable_policy.h: Same.\n+\t* include/tr1/cfenv: Same.\n+\t* include/tr1/wctype.h: Same.\n+\t* include/tr1/ref_fwd.h: Same.\n+\t* include/tr1/bind_repeat.h: Same.\n+\t* include/tr1/utility: Same.\n+\t* include/tr1/climits: Same.\n+\t* include/tr1/type_traits: Same.\n+\t* include/tr1/stdlib.h: Same.\n+\t* include/tr1/cwchar: Same.\n+\t* include/tr1/stdio.h: Same.\n+\t* include/tr1/ref_wrap_iterate.h: Same.\n+\t* include/tr1/cstdint: Same.\n+\t* include/tr1/memory: Same.\n+\t* include/tr1/cstdbool: Same.\n+\t* include/tr1/cwctype: Same.\n+\t* include/tr1/bind_iterate.h: Same.\n+\t* include/tr1/math.h: Same.\n+\t* include/tr1/random: Same.\n+\t* include/tr1/tuple_defs.h: Same.\n+\t* include/tr1/cstdlib: Same.\n+\t* include/tr1/unordered_map: Same.\n+\t* include/tr1/boost_shared_ptr.h: Same.\n+\t* include/tr1/cctype: Same.\n+\t* include/tr1/random.tcc: Same.\n+\t* include/tr1/wchar.h: Same.\n+\t* include/tr1/hashtable: Same.\n+\t* include/tr1/cmath: Same.\n+\t* include/tr1/stdbool.h: Same.\n+\t* include/tr1/ctime: Same.\n+\t* include/tr1/functional: Same.\n+\t* include/tr1/unordered_set: Same.\n+\t* include/tr1/inttypes.h: Same.\n+\t* include/tr1/functional_iterate.h: Same.\n+\t* include/tr1/repeat.h: Same.\n+\t* include/tr1/complex: Same.\n+\t* include/tr1/cfloat: Same.\n+\t* include/tr1/ctype.h: Same.\n+\t* include/tr1/stdarg.h: Same.\n+\t* include/tr1/tgmath.h: Same.\n+\t* include/tr1/array: Same.\n+\t* include/tr1/common.h: Same.\n+\t* include/std/std_valarray.h: Same.\n+\t* include/std/std_iostream.h: Same.\n+\t* include/std/std_queue.h: Same.\n+\t* include/std/std_algorithm.h: Same.\n+\t* include/std/std_streambuf.h: Same.\n+\t* include/std/std_iterator.h: Same.\n+\t* include/std/std_ios.h: Same.\n+\t* include/std/std_bitset.h: Same.\n+\t* include/std/std_iosfwd.h: Same.\n+\t* include/std/std_set.h: Same.\n+\t* include/std/std_iomanip.h: Same.\n+\t* include/std/std_fstream.h: Same.\n+\t* include/std/std_functional.h: Same.\n+\t* include/std/std_numeric.h: Same.\n+\t* include/std/std_vector.h: Same.\n+\t* include/std/std_deque.h: Same.\n+\t* include/std/std_stdexcept.h: Same.\n+\t* include/std/std_utility.h: Same.\n+\t* include/std/std_stack.h: Same.\n+\t* include/std/std_string.h: Same.\n+\t* include/std/std_complex.h: Same.\n+\t* include/std/std_memory.h: Same.\n+\t* include/std/std_ostream.h: Same.\n+\t* include/std/std_list.h: Same.\n+\t* include/std/std_map.h: Same.\n+\t* include/std/std_sstream.h: Same.\n+\t* include/c_std/std_csignal.h: Same.\n+\t* include/c_std/std_cstdlib.h: Same.\n+\t* include/c_std/std_cstdio.h: Same.\n+\t* include/c_std/std_cstdarg.h: Same.\n+\t* include/c_std/std_cctype.h: Same.\n+\t* include/c_std/std_cerrno.h: Same.\n+\t* include/c_std/std_cmath.h: Same.\n+\t* include/c_std/std_ctime.h: Same.\n+\t* include/c_std/std_clocale.h: Same.\n+\t* include/c_std/std_climits.h: Same.\n+\t* include/c_std/std_cassert.h: Same.\n+\t* include/c_std/cmath.tcc\n+\t* include/c_std/std_csetjmp.h: Same.\n+\t* include/c_std/std_cwchar.h: Same.\n+\t* include/c_std/std_cfloat.h: Same.\n+\t* include/c_std/std_cstring.h: Same.\n+\t* include/c_std/std_cstddef.h: Same.\n+\t* include/c_std/std_cwctype.h: Same.\n+\n+\t* config/locale/gnu/c_locale.h: Namespace scope in all files.\n+\t* config/locale/gnu/messages_members.h: Same.\n+\t* config/locale/gnu/c++locale_internal.h: Same.\n+\t* config/locale/gnu/time_members.h: Same.\n+\t* config/locale/ieee_1003.1-2001/c_locale.h: Same.\n+\t* config/locale/ieee_1003.1-2001/messages_members.h: Same.\n+\t* config/locale/generic/c_locale.h: Same.\n+\t* config/locale/generic/messages_members.h: Same.\n+\t* config/locale/generic/time_members.h: Same.\n+\t* config/allocator/mt_allocator_base.h: Same.\n+\t* config/allocator/malloc_allocator_base.h: Same.\n+\t* config/allocator/new_allocator_base.h: Same.\n+\t* config/allocator/pool_allocator_base.h: Same.\n+\t* config/allocator/bitmap_allocator_base.h: Same.\n+\t* config/os/windiss/ctype_noninline.h: Same.\n+\t* config/os/windiss/os_defines.h: Same.\n+\t* config/os/windiss/ctype_inline.h: Same.\n+\t* config/os/newlib/ctype_noninline.h: Same.\n+\t* config/os/newlib/os_defines.h: Same.\n+\t* config/os/newlib/ctype_inline.h: Same.\n+\t* config/os/aix/ctype_noninline.h: Same.\n+\t* config/os/aix/os_defines.h: Same.\n+\t* config/os/aix/ctype_inline.h: Same.\n+\t* config/os/vxworks/ctype_noninline.h: Same.\n+\t* config/os/vxworks/os_defines.h: Same.\n+\t* config/os/vxworks/ctype_inline.h: Same.\n+\t* config/os/hpux/ctype_noninline.h: Same.\n+\t* config/os/hpux/os_defines.h: Same.\n+\t* config/os/hpux/ctype_inline.h: Same.\n+\t* config/os/mingw32/ctype_noninline.h: Same.\n+\t* config/os/mingw32/os_defines.h: Same.\n+\t* config/os/mingw32/ctype_inline.h: Same.\n+\t* config/os/gnu-linux/ctype_noninline.h: Same.\n+\t* config/os/gnu-linux/os_defines.h: Same.\n+\t* config/os/gnu-linux/ctype_inline.h: Same.\n+\t* config/os/tpf/ctype_noninline.h: Same.\n+\t* config/os/tpf/os_defines.h: Same.\n+\t* config/os/tpf/ctype_inline.h: Same.\n+\t* config/os/uclibc/ctype_noninline.h: Same.\n+\t* config/os/uclibc/os_defines.h: Same.\n+\t* config/os/uclibc/ctype_inline.h: Same.\n+\t* config/os/djgpp/ctype_noninline.h: Same.\n+\t* config/os/djgpp/os_defines.h: Same.\n+\t* config/os/djgpp/ctype_inline.h: Same.\n+\t* config/os/qnx/qnx6.1/ctype_noninline.h: Same.\n+\t* config/os/qnx/qnx6.1/ctype_inline.h: Same.\n+\t* config/os/bsd/netbsd/ctype_noninline.h: Same.\n+\t* config/os/bsd/netbsd/ctype_inline.h: Same.\n+\t* config/os/bsd/darwin/ctype_noninline.h: Same.\n+\t* config/os/bsd/darwin/ctype_inline.h: Same.\n+\t* config/os/bsd/freebsd/ctype_noninline.h: Same.\n+\t* config/os/bsd/freebsd/ctype_inline.h: Same.\n+\t* config/os/irix/irix5.2/ctype_noninline.h: Same.\n+\t* config/os/irix/irix5.2/ctype_inline.h: Same.\n+\t* config/os/irix/irix6.5/ctype_noninline.h: Same.\n+\t* config/os/irix/irix6.5/ctype_inline.h: Same.\n+\t* config/os/solaris/solaris2.5/ctype_noninline.h: Same.\n+\t* config/os/solaris/solaris2.5/ctype_inline.h: Same.\n+\t* config/os/solaris/solaris2.6/ctype_noninline.h: Same.\n+\t* config/os/solaris/solaris2.6/ctype_inline.h: Same.\n+\t* config/os/solaris/solaris2.7/ctype_noninline.h: Same.\n+\t* config/os/solaris/solaris2.7/ctype_inline.h: Same.\n+\t* config/os/generic/ctype_noninline.h: Same.\n+\t* config/os/generic/os_defines.h: Same.\n+\t* config/os/generic/ctype_inline.h: Same.\n+\t* config/cpu/arm/cxxabi_tweaks.h: Same.\n+\t* config/cpu/powerpc/cpu_defines.h: Same.\n+\t* config/cpu/generic/cxxabi_tweaks.h: Same.\n+\t* config/cpu/generic/cpu_defines.h: Same.\n+\t* config/cpu/generic/atomic_word.h: Same.\n+\t* config/io/c_io_stdio.h: Same.\n+\t* config/abi/compatibility.h: Same.\n+\n+\t* docs/doxygen/user.cfg.in: Adjust file list.\n+\t\n 2006-12-05  Paolo Carlini  <pcarlini@suse.de>\n \n \tDR 543, [Ready]."}, {"sha": "7b52850f579899e8f2d5e8b74947336340933d5a", "filename": "libstdc++-v3/config/abi/compatibility.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fcompatibility.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fcompatibility.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fcompatibility.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file compatibility.h\n+ *  This is an internal header file, included by other library sources.\n+ *  You should not attempt to use it directly.\n+ */\n+\n // Switch for symbol version macro.\n #ifndef _GLIBCXX_APPLY_SYMVER \n #error must define _GLIBCXX_APPLY_SYMVER before including __FILE__"}, {"sha": "36727a9582a46c84363e6ac3bbe9fbb303c721b9", "filename": "libstdc++-v3/config/allocator/bitmap_allocator_base.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fbitmap_allocator_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fbitmap_allocator_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fbitmap_allocator_base.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file c++allocator.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _CXX_ALLOCATOR_H\n #define _CXX_ALLOCATOR_H 1\n "}, {"sha": "f7ae65c8bd364070b8c6f72a5214629eb7461898", "filename": "libstdc++-v3/config/allocator/malloc_allocator_base.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fmalloc_allocator_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fmalloc_allocator_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fmalloc_allocator_base.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file c++allocator.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _CXX_ALLOCATOR_H\n #define _CXX_ALLOCATOR_H 1\n "}, {"sha": "8af5d4bf03a07a716d6e10dadfc9bbdaf08dfe05", "filename": "libstdc++-v3/config/allocator/mt_allocator_base.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fmt_allocator_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fmt_allocator_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fmt_allocator_base.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file c++allocator.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _CXX_ALLOCATOR_H\n #define _CXX_ALLOCATOR_H 1\n "}, {"sha": "571fdc309422b8108fd749042d65244aa5baaef9", "filename": "libstdc++-v3/config/allocator/new_allocator_base.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fnew_allocator_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fnew_allocator_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fnew_allocator_base.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file c++allocator.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _CXX_ALLOCATOR_H\n #define _CXX_ALLOCATOR_H 1\n "}, {"sha": "354bb85e3ba6dabbb72a8ea8bedcfbb70983bbb6", "filename": "libstdc++-v3/config/allocator/pool_allocator_base.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fpool_allocator_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fpool_allocator_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fallocator%2Fpool_allocator_base.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file c++allocator.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _CXX_ALLOCATOR_H\n #define _CXX_ALLOCATOR_H 1\n "}, {"sha": "e56c20067cada22b0b8cda34c52a182a6928c967", "filename": "libstdc++-v3/config/cpu/arm/cxxabi_tweaks.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Farm%2Fcxxabi_tweaks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Farm%2Fcxxabi_tweaks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Farm%2Fcxxabi_tweaks.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file cxxabi_tweaks.h\n+ *  The header provides an CPU-variable interface to the C++ ABI.\n+ */\n+\n #ifndef _CXXABI_TWEAKS_H\n #define _CXXABI_TWEAKS_H 1\n "}, {"sha": "33657332307ca8d16dbfb8760f69f75afaa25479", "filename": "libstdc++-v3/config/cpu/generic/atomic_word.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fatomic_word.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fatomic_word.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fatomic_word.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file ext/atomic_word.h\n+/** @file atomic_word.h\n  *  This file is a GNU extension to the Standard C++ Library.\n  */\n "}, {"sha": "cf53469dca7b4063107d4b3adf57c0448c80bc76", "filename": "libstdc++-v3/config/cpu/generic/cpu_defines.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fcpu_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fcpu_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fcpu_defines.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file cpu_defines.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _GLIBCXX_CPU_DEFINES\n #define _GLIBCXX_CPU_DEFINES 1\n "}, {"sha": "95fd3066c04e9a761b8044dfbc567ecca0d33438", "filename": "libstdc++-v3/config/cpu/generic/cxxabi_tweaks.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fcxxabi_tweaks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fcxxabi_tweaks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fcxxabi_tweaks.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file cxxabi_tweaks.h\n+ *  The header provides an CPU-variable interface to the C++ ABI.\n+ */\n+\n #ifndef _CXXABI_TWEAKS_H\n #define _CXXABI_TWEAKS_H 1\n "}, {"sha": "4b6769a614ddd5299b85c728145fd1ae857d4ca8", "filename": "libstdc++-v3/config/cpu/powerpc/cpu_defines.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fcpu_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fcpu_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fcpu_defines.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file cpu_defines.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _GLIBCXX_CPU_DEFINES\n #define _GLIBCXX_CPU_DEFINES 1\n "}, {"sha": "69b82052ddad3568f22f19a344e7b58d0f14c461", "filename": "libstdc++-v3/config/io/c_io_stdio.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fc_io_stdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fc_io_stdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fc_io_stdio.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file c++io.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n // c_io_stdio.h - Defines for using \"C\" stdio.h\n \n #ifndef _C_IO_STDIO_H"}, {"sha": "d180c205f1f5cf3d5f73043dc7a44c91788af398", "filename": "libstdc++-v3/config/locale/generic/c_locale.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file c++locale.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.8  Standard locale categories.\n //"}, {"sha": "40986886e8bb827c38d1699c1535377dfc867c93", "filename": "libstdc++-v3/config/locale/generic/messages_members.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fmessages_members.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fmessages_members.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fmessages_members.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,12 +27,19 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file messages_members.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.2.7.1.2  messages virtual functions\n //\n \n // Written by Benjamin Kosnik <bkoz@redhat.com>\n \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   // Non-virtual member functions.\n   template<typename _CharT>\n      messages<_CharT>::messages(size_t __refs)\n@@ -82,3 +89,5 @@\n \t    this->_S_create_c_locale(this->_M_c_locale_messages, __s); \n \t  }\n      }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "8c868c01495619963ba9914eeb8b7222060cdaaf", "filename": "libstdc++-v3/config/locale/generic/time_members.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Ftime_members.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Ftime_members.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Ftime_members.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,13 +27,20 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file time_members.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.2.5.1.2 - time_get functions\n // ISO C++ 14882: 22.2.5.3.2 - time_put functions\n //\n \n // Written by Benjamin Kosnik <bkoz@redhat.com>\n \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   template<typename _CharT>\n     __timepunct<_CharT>::__timepunct(size_t __refs) \n     : facet(__refs), _M_data(NULL)\n@@ -77,3 +84,5 @@\n       delete _M_data;\n       _S_destroy_c_locale(_M_c_locale_timepunct); \n     }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "0d6e9c2d4456f8f469ad3f3c36d69e70c8597d14", "filename": "libstdc++-v3/config/locale/gnu/c++locale_internal.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc%2B%2Blocale_internal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc%2B%2Blocale_internal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc%2B%2Blocale_internal.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file c++locale_internal.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n // Written by Jakub Jelinek <jakub@redhat.com>\n \n #include <bits/c++config.h>"}, {"sha": "f0b2b7dcaa2fac6ab82cb89d4b46a6217ff604f2", "filename": "libstdc++-v3/config/locale/gnu/c_locale.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file c++locale.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.8  Standard locale categories.\n //"}, {"sha": "31504e58bdc73d6e952825ca22948c03b66e3bad", "filename": "libstdc++-v3/config/locale/gnu/messages_members.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmessages_members.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmessages_members.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmessages_members.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,12 +27,19 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file messages_members.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.2.7.1.2  messages functions\n //\n \n // Written by Benjamin Kosnik <bkoz@redhat.com>\n \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   // Non-virtual member functions.\n   template<typename _CharT>\n      messages<_CharT>::messages(size_t __refs)\n@@ -105,3 +112,5 @@\n \t   this->_S_create_c_locale(this->_M_c_locale_messages, __s); \n \t }\n      }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "b03aa57561d390da5c0a384393cf67df8a19a3cb", "filename": "libstdc++-v3/config/locale/gnu/time_members.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Ftime_members.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Ftime_members.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Ftime_members.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,13 +27,20 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file time_members.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.2.5.1.2 - time_get functions\n // ISO C++ 14882: 22.2.5.3.2 - time_put functions\n //\n \n // Written by Benjamin Kosnik <bkoz@redhat.com>\n \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   template<typename _CharT>\n     __timepunct<_CharT>::__timepunct(size_t __refs) \n     : facet(__refs), _M_data(NULL), _M_c_locale_timepunct(NULL), \n@@ -74,3 +81,5 @@\n       delete _M_data; \n       _S_destroy_c_locale(_M_c_locale_timepunct); \n     }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "a10ad3eddeedef94973d4c192e21107efa960faa", "filename": "libstdc++-v3/config/locale/ieee_1003.1-2001/c_locale.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fieee_1003.1-2001%2Fc_locale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fieee_1003.1-2001%2Fc_locale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fieee_1003.1-2001%2Fc_locale.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file c++locale.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.8  Standard locale categories.\n //"}, {"sha": "be764f734d71d5ab9a443bd50110a4683e790e06", "filename": "libstdc++-v3/config/locale/ieee_1003.1-2001/messages_members.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fieee_1003.1-2001%2Fmessages_members.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fieee_1003.1-2001%2Fmessages_members.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fieee_1003.1-2001%2Fmessages_members.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,12 +27,19 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file messages_members.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.2.7.1.2  messages virtual functions\n //\n \n // Written by Benjamin Kosnik <bkoz@redhat.com>\n \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   // Non-virtual member functions.\n   template<typename _CharT>\n     typename messages<_CharT>::catalog \n@@ -67,4 +74,4 @@\n     messages<_CharT>::do_close(catalog __c) const \n     { catclose(reinterpret_cast<nl_catd>(__c)); }\n \n-\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "de00a9edfdcb1b790b30abb8761324643c3e5d52", "filename": "libstdc++-v3/config/os/aix/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -26,14 +26,21 @@\n // the GNU General Public License.  This exception does not however\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n+  \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n \n //\n // ISO C++ 14882: 22.1  Locales\n //\n-  \n+\n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n   \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const \n@@ -66,11 +73,4 @@\n     return __low;\n   }\n \n-\n-\n-\n-\n-\n-\n-\n-\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "1c789bcc186c12733de5c0876986dde7fd31c6b7", "filename": "libstdc++-v3/config/os/aix/ctype_noninline.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,10 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n-  \n+\n // Information as gleaned from /usr/include/ctype.h\n \n   const ctype_base::mask*"}, {"sha": "8f1f8138ab6508ab48f778c845ca3f0727a40609", "filename": "libstdc++-v3/config/os/aix/os_defines.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fos_defines.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file os_defines.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _GLIBCXX_OS_DEFINES\n #define _GLIBCXX_OS_DEFINES\n "}, {"sha": "1fcb3ab32b077758ee151ee6973bc0395d38e034", "filename": "libstdc++-v3/config/os/bsd/darwin/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdarwin%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdarwin%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdarwin%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,13 +27,20 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n   \n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n   \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -141,3 +148,5 @@\n     return __lo;\n   }\n #endif\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "f7dd5334e6114bcfd4393a269c034154e78c3fd4", "filename": "libstdc++-v3/config/os/bsd/darwin/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdarwin%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdarwin%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fdarwin%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "bbd53a82f397814ab783156df863615673bf973d", "filename": "libstdc++-v3/config/os/bsd/freebsd/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,13 +27,20 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n   \n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n   \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -141,3 +148,5 @@\n     return __lo;\n   }\n #endif\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "f7dd5334e6114bcfd4393a269c034154e78c3fd4", "filename": "libstdc++-v3/config/os/bsd/freebsd/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "a00104c3c04cf6d9cacab8063be9c75eb9056578", "filename": "libstdc++-v3/config/os/bsd/netbsd/ctype_inline.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,13 +27,20 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n   \n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n   \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -66,7 +73,7 @@\n     return __low;\n   }\n \n-\n+_GLIBCXX_END_NAMESPACE\n \n \n "}, {"sha": "5a6031c0c47915118e53fc7fb1b6e9023c734afa", "filename": "libstdc++-v3/config/os/bsd/netbsd/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "d46656e2756d2895491121e7e9efe236def30ded", "filename": "libstdc++-v3/config/os/djgpp/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,13 +27,20 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n   \n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n   \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const \n@@ -67,3 +74,5 @@\n       ++__low;\n     return __low;\n   }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "d2b9aabb0c6039c866ea04fb485d3a8428accf79", "filename": "libstdc++-v3/config/os/djgpp/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "417d8b63a18aacfb15c76344f5ea4055899e7e48", "filename": "libstdc++-v3/config/os/djgpp/os_defines.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fdjgpp%2Fos_defines.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file os_defines.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n \n #ifndef _GLIBCXX_OS_DEFINES\n #define _GLIBCXX_OS_DEFINES 1"}, {"sha": "511bf9d4079196155203c53cac08bb047ed23d37", "filename": "libstdc++-v3/config/os/generic/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n@@ -41,6 +46,8 @@\n \n // Constructing a synthetic \"C\" table should be seriously considered...\n \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -159,3 +166,5 @@\n \t++__low;\n     return __low;\n   }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "f3e169f79770c4d37857bd6fd0f082faad7d7956", "filename": "libstdc++-v3/config/os/generic/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "bcc533c1014218470426c1914dde609196dde556", "filename": "libstdc++-v3/config/os/generic/os_defines.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Fos_defines.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file os_defines.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n \n #ifndef _GLIBCXX_OS_DEFINES\n #define _GLIBCXX_OS_DEFINES 1"}, {"sha": "6aeaa7a984c9900c9c4495ee6dc2781e807ca96f", "filename": "libstdc++-v3/config/os/gnu-linux/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,13 +27,20 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n   \n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n   \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -67,3 +74,5 @@\n       ++__low;\n     return __low;\n   }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "0b895e2956ed7975d9eb3471e0d2eaf000b66dd3", "filename": "libstdc++-v3/config/os/gnu-linux/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "188b8a8320877c1ed673a6c13343090a09a41a87", "filename": "libstdc++-v3/config/os/gnu-linux/os_defines.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fos_defines.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file os_defines.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _GLIBCXX_OS_DEFINES\n #define _GLIBCXX_OS_DEFINES 1\n "}, {"sha": "455e5a982e60dea5b16e142640bc01ddc7c69161", "filename": "libstdc++-v3/config/os/hpux/ctype_inline.h", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -26,14 +26,21 @@\n // the GNU General Public License.  This exception does not however\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n+  \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n \n //\n // ISO C++ 14882: 22.1  Locales\n //\n-  \n+\n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n   \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -67,3 +74,5 @@\n       ++__low;\n     return __low;\n   }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "6e47061dfcfd22e6d5d9e645ecf143ba4c74c533", "filename": "libstdc++-v3/config/os/hpux/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "c7ff485d2ddad0e6ddd2188bb90c097424345675", "filename": "libstdc++-v3/config/os/hpux/os_defines.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fos_defines.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file os_defines.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _GLIBCXX_OS_DEFINES\n #define _GLIBCXX_OS_DEFINES 1\n "}, {"sha": "8b9b2d1c3d93a043dc620ea78483e6ed3a2e4c29", "filename": "libstdc++-v3/config/os/irix/irix5.2/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,13 +27,20 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n   \n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n   \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -65,3 +72,5 @@\n       ++__low;\n     return __low;\n   }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "de9348ce7d625221064d6c060b9aef51dd2e8c3a", "filename": "libstdc++-v3/config/os/irix/irix5.2/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "4d81d3ecce10fd2cb37dfd111b59473d770eb87e", "filename": "libstdc++-v3/config/os/irix/irix6.5/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,13 +27,20 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n   \n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n   \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -65,3 +72,5 @@\n       ++__low;\n     return __low;\n   }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "f80fe95cc5c397625284a3ad56117e46f7f0fb30", "filename": "libstdc++-v3/config/os/irix/irix6.5/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "7b1233658a404aef3a59e88ab04f15a37eb27a65", "filename": "libstdc++-v3/config/os/mingw32/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,20 +27,24 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n   \n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n \n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n-  {\n-\treturn (_M_table[static_cast<unsigned char>(__c) ] & __m); \n-  }\n+  { return (_M_table[static_cast<unsigned char>(__c) ] & __m); }\n    \n  \n   const char*\n@@ -69,3 +73,5 @@\n       ++__low;\n     return __low;\n   }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "42ac703ac1331691fb42702594be18590cc2e564", "filename": "libstdc++-v3/config/os/mingw32/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "6f041b3582191dd093e2a16fb534a70e518b9224", "filename": "libstdc++-v3/config/os/mingw32/os_defines.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fos_defines.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file os_defines.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n \n #ifndef _GLIBCXX_OS_DEFINES\n #  define _GLIBCXX_OS_DEFINES"}, {"sha": "69b549deadb98528c3b51a646ca46fb5e4df6407", "filename": "libstdc++-v3/config/os/newlib/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,13 +27,20 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n   \n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n   \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -65,3 +72,5 @@\n       ++__low;\n     return __low;\n   }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "71a5d3c2c0c0ef40f82df26d353f8f61a98eba4c", "filename": "libstdc++-v3/config/os/newlib/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "492af4e6b5232a4d8ee1a20df593b98c0170f098", "filename": "libstdc++-v3/config/os/newlib/os_defines.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fos_defines.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file os_defines.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _GLIBCXX_OS_DEFINES\n #define _GLIBCXX_OS_DEFINES 1\n "}, {"sha": "f6f3d68b2aea33b0949f78368accee241ec28b17", "filename": "libstdc++-v3/config/os/qnx/qnx6.1/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,13 +27,20 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n   \n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n   \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -65,3 +72,5 @@\n       ++__low;\n     return __low;\n   }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "7bf505719b55f0e172d1bf80cf1ed7a483b0bee8", "filename": "libstdc++-v3/config/os/qnx/qnx6.1/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fqnx%2Fqnx6.1%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "4e000c71f12cc3cf914d79ddb512af99c4775c96", "filename": "libstdc++-v3/config/os/solaris/solaris2.5/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,13 +27,20 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n   \n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n   \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -67,3 +74,5 @@\n       ++__low;\n     return __low;\n   }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "2b28a25fd08b212551c6944f9fb7e4b84995d8d6", "filename": "libstdc++-v3/config/os/solaris/solaris2.5/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.5%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "511b84ffaa3aa5e3986ce7c109e8d92296b62e64", "filename": "libstdc++-v3/config/os/solaris/solaris2.6/ctype_inline.h", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,13 +27,20 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n-//\n-  \n+//  \n+\n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n   \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -74,3 +81,5 @@\n       ++__low;\n     return __low;\n   }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "f0341c0bfcbd7bd2fea1b639e5b12589be350549", "filename": "libstdc++-v3/config/os/solaris/solaris2.6/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.6%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "455e5a982e60dea5b16e142640bc01ddc7c69161", "filename": "libstdc++-v3/config/os/solaris/solaris2.7/ctype_inline.h", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -26,14 +26,21 @@\n // the GNU General Public License.  This exception does not however\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n+  \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n \n //\n // ISO C++ 14882: 22.1  Locales\n //\n-  \n+\n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n   \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -67,3 +74,5 @@\n       ++__low;\n     return __low;\n   }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "29eb513fa2439d52189abd8e17920662b9928668", "filename": "libstdc++-v3/config/os/solaris/solaris2.7/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "59f863b9d41e4d0c6ee3e3c19e8927b1fec3bc66", "filename": "libstdc++-v3/config/os/tpf/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ftpf%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ftpf%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ftpf%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,13 +27,20 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n   \n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n   \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -67,3 +74,5 @@\n       ++__low;\n     return __low;\n   }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "3a42ba085c67ce34e27bb5a630f52efe0c8f0ba1", "filename": "libstdc++-v3/config/os/tpf/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ftpf%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ftpf%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ftpf%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "6e223b98b8302d5a579134230a906056ef2b18e2", "filename": "libstdc++-v3/config/os/tpf/os_defines.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ftpf%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ftpf%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ftpf%2Fos_defines.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file os_defines.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _GLIBCXX_OS_DEFINES\n #define _GLIBCXX_OS_DEFINES 1\n "}, {"sha": "329fb3d0f77b44b629c3a2a9309a1794a3f4cc52", "filename": "libstdc++-v3/config/os/uclibc/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fuclibc%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fuclibc%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fuclibc%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,13 +27,20 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n   \n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n   \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -67,3 +74,5 @@\n       ++__low;\n     return __low;\n   }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "6bf1faba55ad854e9b6752115b053be761830228", "filename": "libstdc++-v3/config/os/uclibc/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fuclibc%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fuclibc%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fuclibc%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "d3d9b380a3f696cea103457532dce867a9e479ed", "filename": "libstdc++-v3/config/os/uclibc/os_defines.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fuclibc%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fuclibc%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fuclibc%2Fos_defines.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file os_defines.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _GLIBCXX_OS_DEFINES\n #define _GLIBCXX_OS_DEFINES 1\n "}, {"sha": "5ff4f2e719656f1023b0d0c0b1ddce5686d2f4b7", "filename": "libstdc++-v3/config/os/vxworks/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fvxworks%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fvxworks%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fvxworks%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n@@ -36,6 +41,8 @@\n // ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n // functions go in ctype.cc\n \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -69,3 +76,5 @@\n       ++__low;\n     return __low;\n   }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "6cb92708e5d3d910f4347aec60512829eaa1e6f2", "filename": "libstdc++-v3/config/os/vxworks/ctype_noninline.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fvxworks%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fvxworks%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fvxworks%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,9 +28,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n+\n // Information as gleaned from target/h/ctype.h\n \n   const ctype_base::mask*"}, {"sha": "89cb859288b9f2d0d828f287d7c5a378cd2c78b6", "filename": "libstdc++-v3/config/os/vxworks/os_defines.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fvxworks%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fvxworks%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fvxworks%2Fos_defines.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file os_defines.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n \n #ifndef _GLIBCPP_OS_DEFINES\n #define _GLIBCPP_OS_DEFINES 1"}, {"sha": "8ffd158cdd6773b924567ad06f53bb46b289dd98", "filename": "libstdc++-v3/config/os/windiss/ctype_inline.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fwindiss%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fwindiss%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fwindiss%2Fctype_inline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_inline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //\n@@ -39,6 +44,8 @@\n // functionality should be added for the native os in question: see\n // the config/os/bits/ctype_*.h files.\n \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n@@ -123,3 +130,5 @@\n       ++__low;\n     return __low;\n   }\n+\n+_GLIBCXX_END_NAMESPACE"}, {"sha": "9e56867027daa7610db0ae28a7ef9bf716c0cfc9", "filename": "libstdc++-v3/config/os/windiss/ctype_noninline.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fwindiss%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fwindiss%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fwindiss%2Fctype_noninline.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctype_noninline.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.1  Locales\n //"}, {"sha": "a0b618073d81807f7f2214bf4110045f75e8ed87", "filename": "libstdc++-v3/config/os/windiss/os_defines.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fwindiss%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fwindiss%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fwindiss%2Fos_defines.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file os_defines.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n \n #ifndef _GLIBCXX_OS_DEFINES\n #define _GLIBCXX_OS_DEFINES 1"}, {"sha": "c5d58a02f476d668897724bd7007dd3c6f3f7460", "filename": "libstdc++-v3/docs/doxygen/user.cfg.in", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -468,7 +468,10 @@ WARN_LOGFILE           =\n # files or directories with spaces.\n \n INPUT                  = @srcdir@/docs/doxygen/doxygroups.cc \\\n-                         @srcdir@/libsupc++ \\\n+                   \t @srcdir@/include/precompiled/stdc++.h \\\n+                   \t @srcdir@/include/precompiled/stdtr1c++.h \\\n+                   \t @srcdir@/include/precompiled/extc++.h \\\n+                   \t @srcdir@/libsupc++/cxxabi.h \\\n                          @srcdir@/libsupc++/exception \\\n                          @srcdir@/libsupc++/new \\\n                          @srcdir@/libsupc++/typeinfo \\\n@@ -479,6 +482,24 @@ INPUT                  = @srcdir@/docs/doxygen/doxygroups.cc \\\n                          include/tr1 \\\n                          include/algorithm \\\n                          include/bitset \\\n+                         include/cassert \\\n+                         include/cctype \\\n+                         include/cerrno \\\n+                         include/cfloat \\\n+                         include/ciso646 \\\n+                         include/climits \\\n+                         include/clocale \\\n+                         include/cmath \\\n+                         include/csetjmp \\\n+                         include/csignal \\\n+                         include/cstdarg \\\n+                         include/cstddef \\\n+                         include/cstdio \\\n+                         include/cstdlib \\\n+                         include/cstring \\\n+                         include/ctime \\\n+                         include/cwchar \\\n+                         include/cwctype \\\n                          include/deque \\\n                          include/fstream \\\n                          include/functional \\\n@@ -575,7 +596,7 @@ RECURSIVE              = NO\n # exclude a subdirectory from a directory tree whose root is specified\n # with the INPUT tag.\n \n-EXCLUDE                = Makefile\n+EXCLUDE                = Makefile \n \n # The EXCLUDE_SYMLINKS tag can be used select whether or not files or \n # directories that are symbolic links (a Unix filesystem feature) are excluded \n@@ -590,8 +611,9 @@ EXCLUDE_SYMLINKS       = NO\n # for example use the pattern */test/*\n \n EXCLUDE_PATTERNS       = stamp-* \\\n-                         Makefile \\\n-                         *gch* \\\n+                         *stdc++.h* \\\n+                         *stdtr1c++.h* \\\n+                         *extc++.h* \\\n                          */.svn/*\n \n # The EXAMPLE_PATH tag can be used to specify one or more files or "}, {"sha": "3c41107ed4e55a2fd4126d81753cc86154037e97", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,15 +28,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 21 Strings library\n-//\n-\n /** @file basic_string.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+//\n+// ISO C++ 14882: 21 Strings library\n+//\n+\n #ifndef _BASIC_STRING_H\n #define _BASIC_STRING_H 1\n "}, {"sha": "3d8fe753987b69d7ed0d677e65baa38de0d53ca7", "filename": "libstdc++-v3/include/bits/boost_concept_check.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fboost_concept_check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fboost_concept_check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fboost_concept_check.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -34,13 +34,13 @@\n // to its suitability for any purpose.\n //\n \n-// GCC Note:  based on version 1.12.0 of the Boost library.\n-\n /** @file boost_concept_check.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+// GCC Note:  based on version 1.12.0 of the Boost library.\n+\n #ifndef _BOOST_CONCEPT_CHECK_H\n #define _BOOST_CONCEPT_CHECK_H 1\n "}, {"sha": "f6ecf315241012fe31c5ee1ab207e51f5f50e3e6", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,6 +28,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file c++config.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n #ifndef _CXXCONFIG\n #define _CXXCONFIG 1\n "}, {"sha": "58cddf6ec5b5a58227db1f081394c2d56a7dccef", "filename": "libstdc++-v3/include/bits/char_traits.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,15 +28,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 21  Strings library\n-//\n-\n /** @file char_traits.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+//\n+// ISO C++ 14882: 21  Strings library\n+//\n+\n #ifndef _CHAR_TRAITS_H\n #define _CHAR_TRAITS_H 1\n "}, {"sha": "d417a6ffcc4f5d4a63914f31184c43d32bed68d9", "filename": "libstdc++-v3/include/bits/codecvt.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,17 +28,17 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file bits/codecvt.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n //\n // ISO C++ 14882: 22.2.1.5 Template class codecvt\n //\n \n // Written by Benjamin Kosnik <bkoz@redhat.com>\n \n-/** @file bits/codecvt.h\n- *  This is an internal header file, included by other library headers.\n- *  You should not attempt to use it directly.\n- */\n-\n #ifndef _CODECVT_H\n #define _CODECVT_H 1\n "}, {"sha": "ed9a48a704a61e8c828f4b8ede8c1a66ea3f6479", "filename": "libstdc++-v3/include/bits/cpp_type_traits.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcpp_type_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcpp_type_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcpp_type_traits.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,13 +28,13 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-// Written by Gabriel Dos Reis <dosreis@cmla.ens-cachan.fr>\n-\n /** @file cpp_type_traits.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+// Written by Gabriel Dos Reis <dosreis@cmla.ens-cachan.fr>\n+\n #ifndef _CPP_TYPE_TRAITS_H\n #define _CPP_TYPE_TRAITS_H 1\n "}, {"sha": "b8dc04dda282a4206b055ff648e34f3428711d6a", "filename": "libstdc++-v3/include/bits/gslice.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgslice.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgslice.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgslice.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,13 +28,13 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n-\n /** @file gslice.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n+\n #ifndef _GSLICE_H\n #define _GSLICE_H 1\n "}, {"sha": "55ddc3b17cefa277cec0e9a58bb37f15cd136beb", "filename": "libstdc++-v3/include/bits/gslice_array.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgslice_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgslice_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgslice_array.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,13 +28,13 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n-\n /** @file gslice_array.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n+\n #ifndef _GSLICE_ARRAY_H\n #define _GSLICE_ARRAY_H 1\n "}, {"sha": "d43d801c8109d1c87f1f3c58048023b548804080", "filename": "libstdc++-v3/include/bits/indirect_array.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Findirect_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Findirect_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Findirect_array.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,13 +28,13 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n-\n /** @file indirect_array.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n+\n #ifndef _INDIRECT_ARRAY_H\n #define _INDIRECT_ARRAY_H 1\n "}, {"sha": "33dc256a4cf3ffbd151e8f389f2cb859001f4157", "filename": "libstdc++-v3/include/bits/ios_base.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,15 +28,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 27.4  Iostreams base classes\n-//\n-\n /** @file ios_base.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+//\n+// ISO C++ 14882: 27.4  Iostreams base classes\n+//\n+\n #ifndef _IOS_BASE_H\n #define _IOS_BASE_H 1\n "}, {"sha": "547e21d9b434b5a9e5dae0e14be20aa5b1899884", "filename": "libstdc++-v3/include/bits/locale_classes.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,15 +28,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-\n /** @file locale_classes.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+\n #ifndef _LOCALE_CLASSES_H\n #define _LOCALE_CLASSES_H 1\n "}, {"sha": "e31ae1751cc53a1f8b4139b2f1ce735d6b392528", "filename": "libstdc++-v3/include/bits/locale_facets.h", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,15 +28,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-\n /** @file locale_facets.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+\n #ifndef _LOCALE_FACETS_H\n #define _LOCALE_FACETS_H 1\n \n@@ -1505,9 +1505,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     use_facet<ctype<wchar_t> >(const locale& __loc);\n #endif //_GLIBCXX_USE_WCHAR_T\n \n-  // Include host and configuration specific ctype inlines.\n-  #include <bits/ctype_inline.h>\n-\n   /// @brief  class ctype_byname [22.2.1.2].\n   template<typename _CharT>\n     class ctype_byname : public ctype<_CharT>\n@@ -1532,6 +1529,9 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n _GLIBCXX_END_NAMESPACE\n \n+// Include host and configuration specific ctype inlines.\n+#include <bits/ctype_inline.h>\n+\n // 22.2.1.5  Template class codecvt\n #include <bits/codecvt.h>\n \n@@ -3034,9 +3034,13 @@ _GLIBCXX_END_LDBL_NAMESPACE\n \t\t\t\t const tm*) const;\n #endif\n \n+_GLIBCXX_END_NAMESPACE\n+\n   // Include host and configuration specific timepunct functions.\n   #include <bits/time_members.h>\n \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n   /**\n    *  @brief  Facet for parsing dates and times.\n    *\n@@ -4589,9 +4593,12 @@ _GLIBCXX_END_LDBL_NAMESPACE\n       { }\n     };\n \n+_GLIBCXX_END_NAMESPACE\n+\n   // Include host and configuration specific messages functions.\n   #include <bits/messages_members.h>\n \n+_GLIBCXX_BEGIN_NAMESPACE(std)\n \n   // Subclause convenience interfaces, inlines.\n   // NB: These are inline because, when used in a loop, some compilers"}, {"sha": "b858668d47fa2316ae1d5b3cd07669e8248d1f4a", "filename": "libstdc++-v3/include/bits/localefwd.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,15 +28,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-\n /** @file localefwd.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+\n #ifndef _LOCALE_FWD_H\n #define _LOCALE_FWD_H 1\n "}, {"sha": "98c8bfb36e3c603eee48464bfc7b4122f07f582a", "filename": "libstdc++-v3/include/bits/mask_array.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmask_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmask_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmask_array.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,13 +28,13 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n-\n /** @file mask_array.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n+\n #ifndef _MASK_ARRAY_H\n #define _MASK_ARRAY_H 1\n "}, {"sha": "40570d988e7283a24ac52317e5da83504dd114ea", "filename": "libstdc++-v3/include/bits/postypes.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,16 +28,16 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 27.4.1 - Types\n-// ISO C++ 14882: 27.4.3 - Template class fpos\n-//\n-\n /** @file postypes.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+//\n+// ISO C++ 14882: 27.4.1 - Types\n+// ISO C++ 14882: 27.4.3 - Template class fpos\n+//\n+\n #ifndef _GLIBCXX_POSTYPES_H\n #define _GLIBCXX_POSTYPES_H 1\n "}, {"sha": "d95faa8cecf4d88a97249233b537bdc3f21adeb5", "filename": "libstdc++-v3/include/bits/slice_array.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fslice_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fslice_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fslice_array.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,13 +28,13 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n-\n /** @file slice_array.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n+\n #ifndef _SLICE_ARRAY_H\n #define _SLICE_ARRAY_H 1\n "}, {"sha": "d27ef14be4b54963f937b9fa558896f8db88dedb", "filename": "libstdc++-v3/include/bits/stringfwd.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstringfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstringfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstringfwd.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,15 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 21 Strings library\n-//\n-\n /** @file stringfwd.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+//\n+// ISO C++ 14882: 21 Strings library\n+//\n+\n #ifndef _STRINGFWD_H\n #define _STRINGFWD_H 1\n "}, {"sha": "723df613fb191b425d8fdd8c01ec952127ce03a7", "filename": "libstdc++-v3/include/bits/valarray_after.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_after.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_after.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_after.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,13 +28,13 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@cmla.ens-cachan.fr>\n-\n /** @file valarray_after.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@cmla.ens-cachan.fr>\n+\n #ifndef _VALARRAY_AFTER_H\n #define _VALARRAY_AFTER_H 1\n "}, {"sha": "a40c880ba8d61c8e900c37e0a64b3b094c88af32", "filename": "libstdc++-v3/include/bits/valarray_array.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_array.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,13 +28,13 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n-\n /** @file valarray_array.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n+\n #ifndef _VALARRAY_ARRAY_H\n #define _VALARRAY_ARRAY_H 1\n "}, {"sha": "4e3b937a264df84721fd39b6fbe88048f7934a14", "filename": "libstdc++-v3/include/bits/valarray_before.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_before.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_before.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_before.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,13 +28,13 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@cmla.ens-cachan.fr>\n-\n /** @file valarray_before.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */\n \n+// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@cmla.ens-cachan.fr>\n+\n #ifndef _VALARRAY_BEFORE_H\n #define _VALARRAY_BEFORE_H 1\n "}, {"sha": "e27c3619dfdb008fc37bd5d70cc7bd6944a50c83", "filename": "libstdc++-v3/include/c/std_cerrno.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc%2Fstd_cerrno.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc%2Fstd_cerrno.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc%2Fstd_cerrno.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,10 +27,6 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 19.3  Error numbers\n-//\n-\n /** @file cerrno\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n@@ -40,6 +36,10 @@\n  *  contained in the namespace @c std.\n  */\n \n+//\n+// ISO C++ 14882: 19.3  Error numbers\n+//\n+\n #ifndef _GLIBCXX_CERRNO\n #define _GLIBCXX_CERRNO 1\n "}, {"sha": "472324af03ed7911d9cbb21348e5166ecaea2cdc", "filename": "libstdc++-v3/include/c_std/cmath.tcc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcmath.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcmath.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fcmath.tcc?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -29,6 +29,10 @@\n \n // This file was written by Gabriel Dos Reis <gdr@codesourcery.com>\n \n+/** @file cmath.tcc\n+ *  This is a Standard C++ Library file.\n+ */\n+\n #ifndef _GLIBCXX_CMATH_TCC\n #define _GLIBCXX_CMATH_TCC 1\n "}, {"sha": "0e5c77a082dfaee6e431da4a2b044ab752a22be3", "filename": "libstdc++-v3/include/c_std/std_cassert.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cassert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cassert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cassert.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,10 +28,6 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 19.2  Assertions\n-//\n-\n /** @file cassert\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: 19.2  Assertions\n+//\n+\n // No include guards on this header...\n \n #pragma GCC system_header"}, {"sha": "61a55cb73a4ebb9a4b440afe83fec269c398cc7a", "filename": "libstdc++-v3/include/c_std/std_cctype.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cctype.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,11 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: <ccytpe>\n-//\n-\n-/** @file cctype\n+/** @file include/cctype\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n  *\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: <ccytpe>\n+//\n+\n #ifndef _GLIBCXX_CCTYPE\n #define _GLIBCXX_CCTYPE 1\n "}, {"sha": "e597b8fbd73747abf13f5aba136ec2345a8649fe", "filename": "libstdc++-v3/include/c_std/std_cerrno.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cerrno.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cerrno.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cerrno.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,10 +28,6 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 19.3  Error numbers\n-//\n-\n /** @file cerrno\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: 19.3  Error numbers\n+//\n+\n #ifndef _GLIBCXX_CERRNO\n #define _GLIBCXX_CERRNO 1\n "}, {"sha": "2b514491cf87b954611759c4896f31c63d6cd1fe", "filename": "libstdc++-v3/include/c_std/std_cfloat.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cfloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cfloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cfloat.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,11 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 18.2.2  Implementation properties: C library\n-//\n-\n-/** @file cfloat\n+/** @file include/cfloat\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n  *\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: 18.2.2  Implementation properties: C library\n+//\n+\n #ifndef _GLIBCXX_CFLOAT\n #define _GLIBCXX_CFLOAT 1\n "}, {"sha": "e85869f0679ed245e340bb818617c156617aae03", "filename": "libstdc++-v3/include/c_std/std_climits.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_climits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_climits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_climits.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,11 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 18.2.2  Implementation properties: C library\n-//\n-\n-/** @file climits\n+/** @file include/climits\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n  *\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: 18.2.2  Implementation properties: C library\n+//\n+\n #ifndef _GLIBCXX_CLIMITS\n #define _GLIBCXX_CLIMITS 1\n "}, {"sha": "51e6440bfeead3a3b8445efdc31dea36b5dadc45", "filename": "libstdc++-v3/include/c_std/std_clocale.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_clocale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_clocale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_clocale.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,10 +28,6 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 18.2.2  Implementation properties: C library\n-//\n-\n /** @file clocale\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: 18.2.2  Implementation properties: C library\n+//\n+\n #ifndef _GLIBCXX_CLOCALE\n #define _GLIBCXX_CLOCALE 1\n "}, {"sha": "897290ac089f13edf9ec0d9f3b241b8eba949662", "filename": "libstdc++-v3/include/c_std/std_cmath.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cmath.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,11 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 26.5  C library\n-//\n-\n-/** @file cmath\n+/** @file include/cmath\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n  *\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: 26.5  C library\n+//\n+\n #ifndef _GLIBCXX_CMATH\n #define _GLIBCXX_CMATH 1\n "}, {"sha": "946e7e3c032c2e59304238d99abce76a1ab79f6c", "filename": "libstdc++-v3/include/c_std/std_csetjmp.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_csetjmp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_csetjmp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_csetjmp.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,10 +28,6 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 20.4.6  C library\n-//\n-\n /** @file csetjmp\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: 20.4.6  C library\n+//\n+\n #ifndef _GLIBCXX_CSETJMP\n #define _GLIBCXX_CSETJMP 1\n "}, {"sha": "0ce5e2f77db6800ab2704fc8a81466f660aac311", "filename": "libstdc++-v3/include/c_std/std_csignal.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_csignal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_csignal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_csignal.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,10 +28,6 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 20.4.6  C library\n-//\n-\n /** @file csignal\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: 20.4.6  C library\n+//\n+\n #ifndef _GLIBCXX_CSIGNAL\n #define _GLIBCXX_CSIGNAL 1\n "}, {"sha": "53c29c843a2771f6fe6cefadcc9224e14da70f0b", "filename": "libstdc++-v3/include/c_std/std_cstdarg.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdarg.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,11 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 20.4.6  C library\n-//\n-\n-/** @file cstdarg\n+/** @file include/cstdarg\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n  *\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: 20.4.6  C library\n+//\n+\n #ifndef _GLIBCXX_CSTDARG\n #define _GLIBCXX_CSTDARG 1\n "}, {"sha": "bfa8388d5630a6d8c13846e25a8e740c7a92529e", "filename": "libstdc++-v3/include/c_std/std_cstddef.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstddef.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstddef.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstddef.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,10 +28,6 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 18.1  Types\n-//\n-\n /** @file cstddef\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: 18.1  Types\n+//\n+\n #ifndef _GLIBCXX_CSTDDEF\n #define _GLIBCXX_CSTDDEF 1\n "}, {"sha": "3935ef4f17e01c217ed2c185027b708e9c49a69a", "filename": "libstdc++-v3/include/c_std/std_cstdio.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdio.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,11 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 27.8.2  C Library files\n-//\n-\n-/** @file cstdio\n+/** @file include/cstdio\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n  *\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: 27.8.2  C Library files\n+//\n+\n #ifndef _GLIBCXX_CSTDIO\n #define _GLIBCXX_CSTDIO 1\n "}, {"sha": "5c3d586c0e673b78a9c91d0f48f9e0a71669d342", "filename": "libstdc++-v3/include/c_std/std_cstdlib.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdlib.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,11 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 20.4.6  C library\n-//\n-\n-/** @file cstdlib\n+/** @file include/cstdlib\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n  *\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: 20.4.6  C library\n+//\n+\n #ifndef _GLIBCXX_CSTDLIB\n #define _GLIBCXX_CSTDLIB 1\n "}, {"sha": "5fef6b0086e65d45249d413ee1a752cc1df83878", "filename": "libstdc++-v3/include/c_std/std_cstring.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstring.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,10 +28,6 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 20.4.6  C library\n-//\n-\n /** @file cstring\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: 20.4.6  C library\n+//\n+\n #ifndef _GLIBCXX_CSTRING\n #define _GLIBCXX_CSTRING 1\n "}, {"sha": "9f7f15c7979f3e6649dc9a1ebcf0e73a9bc9e6f7", "filename": "libstdc++-v3/include/c_std/std_ctime.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_ctime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_ctime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_ctime.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,11 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 20.5  Date and time\n-//\n-\n-/** @file ctime\n+/** @file include/ctime\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n  *\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: 20.5  Date and time\n+//\n+\n #ifndef _GLIBCXX_CTIME\n #define _GLIBCXX_CTIME 1\n "}, {"sha": "20cb8041e790272b53cdf8a89f83c15d1ac5cc25", "filename": "libstdc++-v3/include/c_std/std_cwchar.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cwchar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cwchar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cwchar.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,11 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 21.4\n-//\n-\n-/** @file cwchar\n+/** @file include/cwchar\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n  *\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: 21.4\n+//\n+\n #ifndef _GLIBCXX_CWCHAR\n #define _GLIBCXX_CWCHAR 1\n "}, {"sha": "dd0032f3dd6eb3e9a580ab4f0e95b7ce4d9b9a84", "filename": "libstdc++-v3/include/c_std/std_cwctype.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cwctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cwctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cwctype.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,11 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: <cwctype>\n-//\n-\n-/** @file cwctype\n+/** @file include/cwctype\n  *  This is a Standard C++ Library file.  You should @c #include this file\n  *  in your programs, rather than any of the \"*.h\" implementation files.\n  *\n@@ -42,6 +38,10 @@\n  *  as macros in C).\n  */\n \n+//\n+// ISO C++ 14882: <cwctype>\n+//\n+\n #ifndef _GLIBCXX_CWCTYPE\n #define _GLIBCXX_CWCTYPE 1\n "}, {"sha": "f01f39dc8b4fb1191b8b377ac20bc3c9d3e9e4d6", "filename": "libstdc++-v3/include/precompiled/extc++.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fextc%2B%2B.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fextc%2B%2B.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fextc%2B%2B.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file extc++.h\n+ *  This is an implementation file for a precompiled header.\n+ */\n+\n #include <bits/stdtr1c++.h>\n \n #include <ext/algorithm>"}, {"sha": "df9c2177d88c7e4ed53c54df1a60bbdb95077097", "filename": "libstdc++-v3/include/precompiled/stdc++.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fstdc%2B%2B.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fstdc%2B%2B.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fstdc%2B%2B.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file stdc++.h\n+ *  This is an implementation file for a precompiled header.\n+ */\n+\n // 17.4.1.2 Headers\n \n // C"}, {"sha": "2d65cf95b1c986419e3d6cc59c46ea01da73fa5e", "filename": "libstdc++-v3/include/precompiled/stdtr1c++.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fstdtr1c%2B%2B.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fstdtr1c%2B%2B.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fstdtr1c%2B%2B.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,6 +27,10 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file stdtr1c++.h\n+ *  This is an implementation file for a precompiled header.\n+ */\n+\n #include <bits/stdc++.h>\n \n #include <tr1/array>"}, {"sha": "7ffbf97369ea665972ae6bdca317a61e2f46ca91", "filename": "libstdc++-v3/include/std/std_algorithm.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_algorithm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_algorithm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_algorithm.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -53,7 +53,7 @@\n  * purpose.  It is provided \"as is\" without express or implied warranty.\n  */\n \n-/** @file\n+/** @file include/algorithm\n  *  This is a Standard C++ Library header.\n  */\n "}, {"sha": "860e775cc6b42bbf3794ae9523e98ee7e79e2983", "filename": "libstdc++-v3/include/std/std_bitset.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -41,7 +41,7 @@\n  * purpose.  It is provided \"as is\" without express or implied warranty.\n  */\n \n-/** @file \n+/** @file include/bitset\n  *  This is a Standard C++ Library header.\n  */\n "}, {"sha": "26f31f6150f2489140eadb83554a8eb265b984f6", "filename": "libstdc++-v3/include/std/std_complex.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_complex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_complex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_complex.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,17 +28,17 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file complex\n+ *  This is a Standard C++ Library header.\n+ */\n+\n //\n // ISO C++ 14882: 26.2  Complex Numbers\n // Note: this is not a conforming implementation.\n // Initially implemented by Ulrich Drepper <drepper@cygnus.com>\n // Improved by Gabriel Dos Reis <dosreis@cmla.ens-cachan.fr>\n //\n \n-/** @file complex\n- *  This is a Standard C++ Library header.\n- */\n-\n #ifndef _GLIBCXX_COMPLEX\n #define _GLIBCXX_COMPLEX 1\n "}, {"sha": "57c6e4347adde30f7f83562ec52b430f42f3d299", "filename": "libstdc++-v3/include/std/std_deque.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_deque.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -53,7 +53,7 @@\n  * purpose.  It is provided \"as is\" without express or implied warranty.\n  */\n \n-/** @file\n+/** @file include/deque\n  *  This is a Standard C++ Library header.\n  */\n "}, {"sha": "f664f2de9f4e6c5ce9b412781b4df16c8f3e0f7c", "filename": "libstdc++-v3/include/std/std_fstream.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,14 +28,14 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 27.8  File-based streams\n-//\n-\n /** @file fstream\n  *  This is a Standard C++ Library header.\n  */\n \n+//\n+// ISO C++ 14882: 27.8  File-based streams\n+//\n+\n #ifndef _GLIBCXX_FSTREAM\n #define _GLIBCXX_FSTREAM 1\n "}, {"sha": "feadaa2252ad97bf54dbf46bb605081ea74439ce", "filename": "libstdc++-v3/include/std/std_functional.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_functional.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_functional.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_functional.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -41,7 +41,7 @@\n  *\n  */\n \n-/** @file\n+/** @file include/functional\n  *  This is a Standard C++ Library header.\n  */\n "}, {"sha": "13b21d579bd9bac7bb19db7719a62cbed3157df1", "filename": "libstdc++-v3/include/std/std_iomanip.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iomanip.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iomanip.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iomanip.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,14 +28,14 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 27.6.3  Standard manipulators\n-//\n-\n /** @file iomanip\n  *  This is a Standard C++ Library header.\n  */\n \n+//\n+// ISO C++ 14882: 27.6.3  Standard manipulators\n+//\n+\n #ifndef _GLIBCXX_IOMANIP\n #define _GLIBCXX_IOMANIP 1\n "}, {"sha": "f081115e9b77cc7adad1ec529a5c9c029a837e9b", "filename": "libstdc++-v3/include/std/std_ios.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ios.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ios.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ios.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,14 +27,14 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 27.4  Iostreams base classes\n-//\n-\n /** @file ios\n  *  This is a Standard C++ Library header.\n  */\n \n+//\n+// ISO C++ 14882: 27.4  Iostreams base classes\n+//\n+\n #ifndef _GLIBCXX_IOS\n #define _GLIBCXX_IOS 1\n "}, {"sha": "a4d0c3fdf19991dc7fe9baf1af266064e474763e", "filename": "libstdc++-v3/include/std/std_iosfwd.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iosfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iosfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iosfwd.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,14 +28,14 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 27.2  Forward declarations\n-//\n-\n /** @file iosfwd\n  *  This is a Standard C++ Library header.\n  */\n \n+//\n+// ISO C++ 14882: 27.2  Forward declarations\n+//\n+\n #ifndef _GLIBCXX_IOSFWD\n #define _GLIBCXX_IOSFWD 1\n "}, {"sha": "0ff0da2177f2099685dccc43c96cafa3168c9fce", "filename": "libstdc++-v3/include/std/std_iostream.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iostream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iostream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iostream.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,14 +28,14 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 27.3  Standard iostream objects\n-//\n-\n /** @file iostream\n  *  This is a Standard C++ Library header. \n  */\n \n+//\n+// ISO C++ 14882: 27.3  Standard iostream objects\n+//\n+\n #ifndef _GLIBCXX_IOSTREAM\n #define _GLIBCXX_IOSTREAM 1\n "}, {"sha": "f0317b44a7c76521ac4dac91cc71b456a5c178e1", "filename": "libstdc++-v3/include/std/std_iterator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_iterator.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -53,7 +53,7 @@\n  * purpose.  It is provided \"as is\" without express or implied warranty.\n  */\n \n-/** @file \n+/** @file include/iterator\n  *  This is a Standard C++ Library header.\n  */\n "}, {"sha": "b46f65417ec618da01ed4cb247ad45b6abcf6754", "filename": "libstdc++-v3/include/std/std_list.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_list.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -53,7 +53,7 @@\n  * purpose.  It is provided \"as is\" without express or implied warranty.\n  */\n \n-/** @file\n+/** @file include/list\n  *  This is a Standard C++ Library header.\n  */\n "}, {"sha": "a7e8f9c21079a8d630d38d5b7f93cd4fda06b552", "filename": "libstdc++-v3/include/std/std_map.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_map.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -53,7 +53,7 @@\n  * purpose.  It is provided \"as is\" without express or implied warranty.\n  */\n \n-/** @file\n+/** @file include/map\n  *  This is a Standard C++ Library header.\n  */\n "}, {"sha": "b57a94f4bbd57cd91859df7baa9c0a32dea7aecf", "filename": "libstdc++-v3/include/std/std_memory.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_memory.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_memory.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_memory.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -41,7 +41,7 @@\n  *\n  */\n \n-/** @file\n+/** @file include/memory\n  *  This is a Standard C++ Library header.\n  */\n "}, {"sha": "03f82dd6ab0c10304d8b68eaeeafb89b7023f049", "filename": "libstdc++-v3/include/std/std_numeric.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_numeric.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_numeric.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_numeric.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -53,7 +53,7 @@\n  * purpose.  It is provided \"as is\" without express or implied warranty.\n  */\n \n-/** @file\n+/** @file include/numeric\n  *  This is a Standard C++ Library header.\n  */\n "}, {"sha": "e97b7a4b410fc4b784baf68ff6eda35cbf17a553", "filename": "libstdc++-v3/include/std/std_ostream.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ostream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ostream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_ostream.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,14 +28,14 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 27.6.2  Output streams\n-//\n-\n /** @file ostream\n  *  This is a Standard C++ Library header.\n  */\n \n+//\n+// ISO C++ 14882: 27.6.2  Output streams\n+//\n+\n #ifndef _GLIBCXX_OSTREAM\n #define _GLIBCXX_OSTREAM 1\n "}, {"sha": "1242a06160bc9de447a3fe86ca934d6e9c6c9e5d", "filename": "libstdc++-v3/include/std/std_queue.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_queue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_queue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_queue.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -53,7 +53,7 @@\n  * purpose.  It is provided \"as is\" without express or implied warranty.\n  */\n \n-/** @file\n+/** @file include/queue\n  *  This is a Standard C++ Library header.\n  */\n "}, {"sha": "65ebe8a10cc667a4ae0df3682520873d190fabbb", "filename": "libstdc++-v3/include/std/std_set.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_set.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -53,7 +53,7 @@\n  * purpose.  It is provided \"as is\" without express or implied warranty.\n  */\n \n-/** @file\n+/** @file include/set\n  *  This is a Standard C++ Library header.\n  */\n "}, {"sha": "a09815c1945e8fea32e4ad3d798f016709588ea4", "filename": "libstdc++-v3/include/std/std_sstream.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,14 +28,14 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 27.7  String-based streams\n-//\n-\n /** @file sstream\n  *  This is a Standard C++ Library header.\n  */\n \n+//\n+// ISO C++ 14882: 27.7  String-based streams\n+//\n+\n #ifndef _GLIBCXX_SSTREAM\n #define _GLIBCXX_SSTREAM 1\n "}, {"sha": "396f62e6100c7a849088c520ec8fbf06b7553f89", "filename": "libstdc++-v3/include/std/std_stack.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_stack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_stack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_stack.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -53,7 +53,7 @@\n  * purpose.  It is provided \"as is\" without express or implied warranty.\n  */\n \n-/** @file \n+/** @file include/stack\n  *  This is a Standard C++ Library header.\n  */\n "}, {"sha": "2d56b3817d41664293a16f7f03dca68f3a84dd11", "filename": "libstdc++-v3/include/std/std_stdexcept.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_stdexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_stdexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_stdexcept.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,14 +27,14 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 19.1  Exception classes\n-//\n-\n /** @file stdexcept\n  *  This is a Standard C++ Library header.\n  */\n \n+//\n+// ISO C++ 19.1  Exception classes\n+//\n+\n #ifndef _GLIBCXX_STDEXCEPT\n #define _GLIBCXX_STDEXCEPT 1\n "}, {"sha": "9de7907120f1a422ff2d01460e2d9bef4b376327", "filename": "libstdc++-v3/include/std/std_streambuf.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,14 +28,14 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-//\n-// ISO C++ 14882: 27.5  Stream buffers\n-//\n-\n /** @file streambuf\n  *  This is a Standard C++ Library header.\n  */\n \n+//\n+// ISO C++ 14882: 27.5  Stream buffers\n+//\n+\n #ifndef _GLIBXX_STREAMBUF\n #define _GLIBXX_STREAMBUF 1\n "}, {"sha": "c38d52575153d3d8befb642400cb040aaac31a03", "filename": "libstdc++-v3/include/std/std_string.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_string.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,14 +28,14 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file include/string\n+ *  This is a Standard C++ Library header.\n+ */\n+\n //\n // ISO C++ 14882: 21  Strings library\n //\n \n-/** @file\n- *  This is a Standard C++ Library header.\n- */\n-\n #ifndef _GLIBCXX_STRING\n #define _GLIBCXX_STRING\t1\n "}, {"sha": "84c9131d82b201f7a0d42adcf7bf153d21c8d489", "filename": "libstdc++-v3/include/std/std_utility.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_utility.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_utility.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_utility.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -53,7 +53,7 @@\n  * purpose.  It is provided \"as is\" without express or implied warranty.\n  */\n \n-/** @file \n+/** @file include/utility\n  *  This is a Standard C++ Library header. \n  */\n "}, {"sha": "91b1637c71263a5c5595a3aabca8c4b542c00757", "filename": "libstdc++-v3/include/std/std_valarray.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_valarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_valarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_valarray.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,12 +28,12 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n-\n /** @file valarray\n  *  This is a Standard C++ Library header. \n  */\n \n+// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n+\n #ifndef _GLIBCXX_VALARRAY\n #define _GLIBCXX_VALARRAY 1\n "}, {"sha": "a4a527eea035cc69d75c96118040a47224543635", "filename": "libstdc++-v3/include/std/std_vector.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_vector.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -53,7 +53,7 @@\n  * purpose.  It is provided \"as is\" without express or implied warranty.\n  */\n \n-/** @file\n+/** @file include/vector\n  *  This is a Standard C++ Library header.\n  */\n "}, {"sha": "153f334a575b8eabb39e72b6b8af7290493b2239", "filename": "libstdc++-v3/include/tr1/array", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Farray?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/array\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "3de49a77b6c0e7d2db4dabbd4a2d80c6b67e1db2", "filename": "libstdc++-v3/include/tr1/bind_iterate.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbind_iterate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbind_iterate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbind_iterate.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,7 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file bind_iterate.h\n+/** @file tr1/bind_iterate.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */"}, {"sha": "8ec29a2283f5dd0b83d5946b62fb0aa76fc697a2", "filename": "libstdc++-v3/include/tr1/bind_repeat.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbind_repeat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbind_repeat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbind_repeat.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,7 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file bind_repeat.h\n+/** @file tr1/bind_repeat.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */"}, {"sha": "fc79cfc70c2358e5e35659dbb9f0b570bc014f5b", "filename": "libstdc++-v3/include/tr1/boost_shared_ptr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fboost_shared_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fboost_shared_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fboost_shared_ptr.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -46,7 +46,7 @@\n \n // GCC Note:  based on version 1.32.0 of the Boost library.\n \n-/** @file boost_shared_ptr.h\n+/** @file tr1/boost_shared_ptr.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */"}, {"sha": "8ddfa89002e0f08d816c9fa3cc3631c33022c2d5", "filename": "libstdc++-v3/include/tr1/cctype", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcctype", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcctype", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcctype?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/cctype\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "ddcce74c591af3742399cd82812416e79b4a5e90", "filename": "libstdc++-v3/include/tr1/cfenv", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcfenv", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcfenv", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcfenv?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/cfenv\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "1514ff76066caeaa8fa74b81887f095a0d9a825b", "filename": "libstdc++-v3/include/tr1/cfloat", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcfloat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcfloat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcfloat?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/cfloat\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "03bdd30c61570dcc995a88ddeabd1758bf75b878", "filename": "libstdc++-v3/include/tr1/cinttypes", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcinttypes", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcinttypes", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcinttypes?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/cinttypes\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "dc047299d77a2256da75fc2646a87a763213786a", "filename": "libstdc++-v3/include/tr1/climits", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fclimits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fclimits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fclimits?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/climits\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "f08e86f73de052c564205e56c83d9779109b8193", "filename": "libstdc++-v3/include/tr1/cmath", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/cmath\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "7d098f863dd9676e499f55815c961ac14c1c50f0", "filename": "libstdc++-v3/include/tr1/common.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcommon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcommon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcommon.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/common.h\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "0817ef761e3387d63f62240a0eacd48c0c51f795", "filename": "libstdc++-v3/include/tr1/complex", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcomplex?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/complex\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "e70130e45f9d37d85a7b2724218459ba11cf00d8", "filename": "libstdc++-v3/include/tr1/cstdarg", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdarg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdarg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdarg?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/cstdarg\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "2406f9e28f069484b1ca84067d4f1a35fb4266c4", "filename": "libstdc++-v3/include/tr1/cstdbool", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdbool", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdbool", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdbool?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/cstdbool\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "af5a90f288c49f036ed1887644ce93b1e0cafe95", "filename": "libstdc++-v3/include/tr1/cstdint", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdint", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdint", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdint?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/cstdint\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "1cf41b5018aecedb06fb54bcd68c3d3f6082e83b", "filename": "libstdc++-v3/include/tr1/cstdio", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdio", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdio", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdio?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/cstdio\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "f7f8d7d9c448727ce71deec57c9394dbd0bf918f", "filename": "libstdc++-v3/include/tr1/cstdlib", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdlib?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/cstdlib\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "eb91185779609b96f8e4779ffd8720d5ee0c4ccf", "filename": "libstdc++-v3/include/tr1/ctgmath", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fctgmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fctgmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fctgmath?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/ctgmath\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "45e083976bf339c6e5367487e8315dbceed15e93", "filename": "libstdc++-v3/include/tr1/ctime", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fctime", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fctime", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fctime?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/ctime\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "945b13b126275b4380fdaa1114406c48b05276c1", "filename": "libstdc++-v3/include/tr1/ctype.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fctype.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/ctype.h\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "b918b37dd9fc2656c6156f296e19dbda6de467ca", "filename": "libstdc++-v3/include/tr1/cwchar", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcwchar", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcwchar", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcwchar?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/cwchar\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "7cc7a36c68bc6621686756afd3a40fa004b1c27d", "filename": "libstdc++-v3/include/tr1/cwctype", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcwctype", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcwctype", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcwctype?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/cwctype\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "91fa40fea5ea6372ce19d9e2eb619f49ace50f47", "filename": "libstdc++-v3/include/tr1/fenv.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffenv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffenv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffenv.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/fenv.h\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "5e99fe5bfcd6dede2aa8c8a51dff66b92abcbe3c", "filename": "libstdc++-v3/include/tr1/float.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffloat.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/float.h\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "7ef93a4f2c8cbee399144dd7c595bd8486e5686d", "filename": "libstdc++-v3/include/tr1/functional", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file\n+/** @file tr1/functional\n  *  This is a TR1 C++ Library header.\n  */\n "}, {"sha": "c9c1e83346145521758150b1cfc2b67c20726a04", "filename": "libstdc++-v3/include/tr1/functional_iterate.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional_iterate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional_iterate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional_iterate.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,7 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file functional_iterate.h\n+/** @file tr1/functional_iterate.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */"}, {"sha": "0d760eed1d57d0219b63bdb8eef8b3d0415f8b71", "filename": "libstdc++-v3/include/tr1/hashtable", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhashtable", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhashtable", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhashtable?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/hashtable\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "2d3830d544c874756e3a5746c49be52e837a5e27", "filename": "libstdc++-v3/include/tr1/hashtable_policy.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhashtable_policy.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhashtable_policy.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fhashtable_policy.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/hashtable_policy.h\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "720089c2459ea5ed313068f0055848a1be905c38", "filename": "libstdc++-v3/include/tr1/inttypes.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Finttypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Finttypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Finttypes.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/inttypes.h\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "437d1512ede8dd11a0924b431c4a9ad66876d45b", "filename": "libstdc++-v3/include/tr1/limits.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Flimits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Flimits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Flimits.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/limits.h\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "36fb2fdae506acb387dba353fc7c17d5dfa15116", "filename": "libstdc++-v3/include/tr1/math.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmath.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/math.h\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "9de80dadfa942c7141fbc8473795dfba4a45b317", "filename": "libstdc++-v3/include/tr1/memory", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmemory", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmemory", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmemory?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,7 +28,7 @@\n // the GNU General Public License.\n \n /**\n- * @file \n+ * @file tr1/memory\n  * This is a TR1 C++ Library header. \n  */\n "}, {"sha": "abdc724a7d47a8b1fd3547334c5b0c35fdc57718", "filename": "libstdc++-v3/include/tr1/mu_iterate.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmu_iterate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmu_iterate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fmu_iterate.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,7 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file mu_iterate.h\n+/** @file tr1/mu_iterate.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */"}, {"sha": "d1963940253be679649330132fc01870022709a0", "filename": "libstdc++-v3/include/tr1/random", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,7 +28,7 @@\n // the GNU General Public License.\n \n /**\n- * @file \n+ * @file tr1/random\n  * This is a TR1 C++ Library header. \n  */\n "}, {"sha": "c66a4d8f17b6b7b9eefa71a264a130646823cfa4", "filename": "libstdc++-v3/include/tr1/random.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom.tcc?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/random.tcc\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "6c0efbc60e182f2f369e2e7e562a6d7f79a9f411", "filename": "libstdc++-v3/include/tr1/ref_fwd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fref_fwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fref_fwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fref_fwd.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -29,7 +29,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file ref_fwd.h\n+/** @file tr1/ref_fwd.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */"}, {"sha": "7c63d2cf18aa22e912dd9dcc20384a9b08eee967", "filename": "libstdc++-v3/include/tr1/ref_wrap_iterate.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fref_wrap_iterate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fref_wrap_iterate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fref_wrap_iterate.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,7 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file ref_wrap_iterate.h\n+/** @file tr1/ref_wrap_iterate.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */"}, {"sha": "3f09dd56207b19db7fb968460ef14956fd67f6f6", "filename": "libstdc++-v3/include/tr1/repeat.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frepeat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frepeat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frepeat.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -28,7 +28,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file repeat.h\n+/** @file tr1/repeat.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */"}, {"sha": "87c4cf3064e0125c7ac916d4a18d7f03bbff56c8", "filename": "libstdc++-v3/include/tr1/stdarg.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fstdarg.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/stdarg.h\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "5865e02305cf4ccf3a5e79489c48d3cbad481da8", "filename": "libstdc++-v3/include/tr1/stdbool.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fstdbool.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fstdbool.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fstdbool.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/stdbool.h\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "f9e48707d177df3ad35570e48316581890cc2411", "filename": "libstdc++-v3/include/tr1/stdint.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fstdint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fstdint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fstdint.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/stdint.h\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "763f03e1bfcbd41f8b38f33a07d803bf70c7446d", "filename": "libstdc++-v3/include/tr1/stdio.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fstdio.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/stdio.h\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "92bc4687c6f4785f07be73d667e378ba2be162bd", "filename": "libstdc++-v3/include/tr1/stdlib.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fstdlib.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/stdlib.h\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "90c8a63deaac1359bc9dae46d55a4675b3f750e7", "filename": "libstdc++-v3/include/tr1/tgmath.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftgmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftgmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftgmath.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/tgmath.h\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "379631d42f25daf1306781939c55c265f906ab50", "filename": "libstdc++-v3/include/tr1/tuple", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file\n+/** @file tr1/tuple\n *  This is a TR1 C++ Library header.\n */\n "}, {"sha": "dba6ccc4357810a6f5d019a861d1cb226a1eecd3", "filename": "libstdc++-v3/include/tr1/tuple_defs.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_defs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_defs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_defs.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file tuple_defs.h\n+/** @file tr1/tuple_defs.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */"}, {"sha": "42ddf54b78aa9520674a4d9441e51a1954ba85d4", "filename": "libstdc++-v3/include/tr1/tuple_iterate.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_iterate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_iterate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftuple_iterate.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file\n+/** @file tr1/tuple_iterate.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */"}, {"sha": "048180150dfead691646d88cdd86865d0eab2545", "filename": "libstdc++-v3/include/tr1/type_traits", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/type_traits\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "819bb914817e026f430167496960c1376e232291", "filename": "libstdc++-v3/include/tr1/type_traits_fwd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits_fwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits_fwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits_fwd.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file type_traits_fwd.h\n+/** @file tr1/type_traits_fwd.h\n  *  This is an internal header file, included by other library headers.\n  *  You should not attempt to use it directly.\n  */"}, {"sha": "88f39cee51ad3f1bd5324cedfb3aa44e5fc9785a", "filename": "libstdc++-v3/include/tr1/unordered_map", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Funordered_map?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/unordered_map\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "49829a6020ed8a85518dd020ea205cad1973a2de", "filename": "libstdc++-v3/include/tr1/unordered_set", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Funordered_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Funordered_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Funordered_set?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/unordered_set\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "a719faa45e7b2859c56e7b60f634ff058636fd5a", "filename": "libstdc++-v3/include/tr1/utility", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Futility", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Futility", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Futility?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/utility\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "00fb8a0ce8e1f57814bd3ce7a9fac953195afa32", "filename": "libstdc++-v3/include/tr1/wchar.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fwchar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fwchar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fwchar.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/wchar.h\n  *  This is a TR1 C++ Library header. \n  */\n "}, {"sha": "9ef23cd636279eb0f093324666f00e560a493003", "filename": "libstdc++-v3/include/tr1/wctype.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fwctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143c27b06512ff77ee978d8c6d4aa88103b70f1e/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fwctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fwctype.h?ref=143c27b06512ff77ee978d8c6d4aa88103b70f1e", "patch": "@@ -27,7 +27,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-/** @file \n+/** @file tr1/wctype.h\n  *  This is a TR1 C++ Library header. \n  */\n "}]}