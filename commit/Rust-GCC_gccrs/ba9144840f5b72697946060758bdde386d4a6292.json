{"sha": "ba9144840f5b72697946060758bdde386d4a6292", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE5MTQ0ODQwZjViNzI2OTc5NDYwNjA3NThiZGRlMzg2ZDRhNjI5Mg==", "commit": {"author": {"name": "Vincent Pucci", "email": "pucci@adacore.com", "date": "2012-10-01T13:23:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-01T13:23:22Z"}, "message": "sem_aggr.adb (New_Copy_Tree_And_Copy_Dimensions): New routine.\n\n2012-10-01  Vincent Pucci  <pucci@adacore.com>\n\n\t* sem_aggr.adb (New_Copy_Tree_And_Copy_Dimensions): New routine.\n\t(Resolve_Record_Aggregate): New_Copy_Tree calls replaced by\n\tNew_Copy_Tree_And_Copy_Dimensions calls. Move_Dimensions call\n\treplaced by Copy_Dimensions call.\n\t* sem_dim.adb (Analyze_Dimension_Component_Declaration): Don't\n\tremove the dimensions of expression in component declaration anymore.\n\t(Copy_Dimensions): New routine.\n\t(Move_Dimensions): Add call to Copy_Dimensions.\n\t* sem_dim.ads (Copy_Dimensions): New routine.\n\t(Move_Dimensions): Spec moved to body of Sem_Dim.\n\nFrom-SVN: r191922", "tree": {"sha": "b81300a66fd5db2e8413835a87c72c2a03cabbcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b81300a66fd5db2e8413835a87c72c2a03cabbcc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba9144840f5b72697946060758bdde386d4a6292", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9144840f5b72697946060758bdde386d4a6292", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba9144840f5b72697946060758bdde386d4a6292", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9144840f5b72697946060758bdde386d4a6292/comments", "author": null, "committer": null, "parents": [{"sha": "804fc056d55a4098d7a4a1fc895579aaf1bb3080", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/804fc056d55a4098d7a4a1fc895579aaf1bb3080", "html_url": "https://github.com/Rust-GCC/gccrs/commit/804fc056d55a4098d7a4a1fc895579aaf1bb3080"}], "stats": {"total": 100, "additions": 79, "deletions": 21}, "files": [{"sha": "145db865c3e2c776252e582844e04b42356a1b2d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9144840f5b72697946060758bdde386d4a6292/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9144840f5b72697946060758bdde386d4a6292/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ba9144840f5b72697946060758bdde386d4a6292", "patch": "@@ -1,3 +1,16 @@\n+2012-10-01  Vincent Pucci  <pucci@adacore.com>\n+\n+\t* sem_aggr.adb (New_Copy_Tree_And_Copy_Dimensions): New routine.\n+\t(Resolve_Record_Aggregate): New_Copy_Tree calls replaced by\n+\tNew_Copy_Tree_And_Copy_Dimensions calls. Move_Dimensions call\n+\treplaced by Copy_Dimensions call.\n+\t* sem_dim.adb (Analyze_Dimension_Component_Declaration): Don't\n+\tremove the dimensions of expression in component declaration anymore.\n+\t(Copy_Dimensions): New routine.\n+\t(Move_Dimensions): Add call to Copy_Dimensions.\n+\t* sem_dim.ads (Copy_Dimensions): New routine.\n+\t(Move_Dimensions): Spec moved to body of Sem_Dim.\n+\n 2012-10-01  Ed Schonberg  <schonberg@adacore.com>\n \n \t* checks.adb (Apply_Predicate_Check): If the predicate is a"}, {"sha": "dc03b66002daaa6b577677c95f7b6fa326001c25", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 39, "deletions": 8, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9144840f5b72697946060758bdde386d4a6292/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9144840f5b72697946060758bdde386d4a6292/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=ba9144840f5b72697946060758bdde386d4a6292", "patch": "@@ -2933,6 +2933,14 @@ package body Sem_Aggr is\n       --  An error message is emitted if the components taking their value from\n       --  the others choice do not have same type.\n \n+      function New_Copy_Tree_And_Copy_Dimensions\n+        (Source    : Node_Id;\n+         Map       : Elist_Id   := No_Elist;\n+         New_Sloc  : Source_Ptr := No_Location;\n+         New_Scope : Entity_Id  := Empty) return Node_Id;\n+      --  Same as New_Copy_Tree (defined in Sem_Util), except that this routine\n+      --  also copies the dimensions of Source to the returned node.\n+\n       procedure Resolve_Aggr_Expr (Expr : Node_Id; Component : Node_Id);\n       --  Analyzes and resolves expression Expr against the Etype of the\n       --  Component. This routine also applies all appropriate checks to Expr.\n@@ -3134,7 +3142,7 @@ package body Sem_Aggr is\n \n                         if Expander_Active then\n                            return\n-                             New_Copy_Tree\n+                             New_Copy_Tree_And_Copy_Dimensions\n                                (Expression (Parent (Compon)),\n                                 New_Sloc => Sloc (Assoc));\n                         else\n@@ -3153,7 +3161,9 @@ package body Sem_Aggr is\n                         Others_Etype := Etype (Compon);\n \n                         if Expander_Active then\n-                           return New_Copy_Tree (Expression (Assoc));\n+                           return\n+                             New_Copy_Tree_And_Copy_Dimensions\n+                               (Expression (Assoc));\n                         else\n                            return Expression (Assoc);\n                         end if;\n@@ -3189,18 +3199,20 @@ package body Sem_Aggr is\n                         --  order to create a proper association for the\n                         --  expanded aggregate.\n \n-                        Expr := New_Copy_Tree (Expression (Parent (Compon)));\n-\n                         --  Component may have no default, in which case the\n                         --  expression is empty and the component is default-\n                         --  initialized, but an association for the component\n                         --  exists, and it is not covered by an others clause.\n \n-                        return Expr;\n+                        return\n+                          New_Copy_Tree_And_Copy_Dimensions\n+                            (Expression (Parent (Compon)));\n \n                      else\n                         if Present (Next (Selector_Name)) then\n-                           Expr := New_Copy_Tree (Expression (Assoc));\n+                           Expr :=\n+                             New_Copy_Tree_And_Copy_Dimensions\n+                               (Expression (Assoc));\n                         else\n                            Expr := Expression (Assoc);\n                         end if;\n@@ -3225,6 +3237,25 @@ package body Sem_Aggr is\n          return Expr;\n       end Get_Value;\n \n+      ---------------------------------------\n+      -- New_Copy_Tree_And_Copy_Dimensions --\n+      ---------------------------------------\n+\n+      function New_Copy_Tree_And_Copy_Dimensions\n+        (Source    : Node_Id;\n+         Map       : Elist_Id   := No_Elist;\n+         New_Sloc  : Source_Ptr := No_Location;\n+         New_Scope : Entity_Id  := Empty) return Node_Id\n+      is\n+         New_Copy : constant Node_Id :=\n+                      New_Copy_Tree (Source, Map, New_Sloc, New_Scope);\n+      begin\n+         --  Move the dimensions of Source to New_Copy\n+\n+         Copy_Dimensions (Source, New_Copy);\n+         return New_Copy;\n+      end New_Copy_Tree_And_Copy_Dimensions;\n+\n       -----------------------\n       -- Resolve_Aggr_Expr --\n       -----------------------\n@@ -3391,7 +3422,7 @@ package body Sem_Aggr is\n             --  Since New_Expr is not gonna be analyzed later on, we need to\n             --  propagate here the dimensions form Expr to New_Expr.\n \n-            Move_Dimensions (Expr, New_Expr);\n+            Copy_Dimensions (Expr, New_Expr);\n \n          else\n             New_Expr := Expr;\n@@ -3986,7 +4017,7 @@ package body Sem_Aggr is\n                  and then Present (Expression (Parent (Component)))\n                then\n                   Expr :=\n-                    New_Copy_Tree\n+                    New_Copy_Tree_And_Copy_Dimensions\n                       (Expression (Parent (Component)),\n                        New_Scope => Current_Scope,\n                        New_Sloc  => Sloc (N));"}, {"sha": "e25c158988145d33552621fcba5b5059a1fd57cb", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9144840f5b72697946060758bdde386d4a6292/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9144840f5b72697946060758bdde386d4a6292/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=ba9144840f5b72697946060758bdde386d4a6292", "patch": "@@ -336,6 +336,9 @@ package body Sem_Dim is\n    function Is_Invalid (Position : Dimension_Position) return Boolean;\n    --  Return True if Pos denotes the invalid position\n \n+   procedure Move_Dimensions (From : Node_Id; To : Node_Id);\n+   --  Copy dimension vector of From to To and delete dimension vector of From\n+\n    procedure Remove_Dimensions (N : Node_Id);\n    --  Remove the dimension vector of node N\n \n@@ -1718,10 +1721,6 @@ package body Sem_Dim is\n                Error_Dim_Msg_For_Component_Declaration (N, Etyp, Expr);\n             end if;\n          end if;\n-\n-         --  Removal of dimensions in expression\n-\n-         Remove_Dimensions (Expr);\n       end if;\n    end Analyze_Dimension_Component_Declaration;\n \n@@ -2199,6 +2198,25 @@ package body Sem_Dim is\n       end case;\n    end Analyze_Dimension_Unary_Op;\n \n+   ---------------------\n+   -- Copy_Dimensions --\n+   ---------------------\n+\n+   procedure Copy_Dimensions (From, To : Node_Id) is\n+      Dims_Of_From : constant Dimension_Type := Dimensions_Of (From);\n+\n+   begin\n+      if Ada_Version < Ada_2012 then\n+         return;\n+      end if;\n+\n+      --  Copy the dimension of 'From to 'To'\n+\n+      if Exists (Dims_Of_From) then\n+         Set_Dimensions (To, Dims_Of_From);\n+      end if;\n+   end Copy_Dimensions;\n+\n    --------------------------\n    -- Create_Rational_From --\n    --------------------------\n@@ -3221,19 +3239,15 @@ package body Sem_Dim is\n    ---------------------\n \n    procedure Move_Dimensions (From, To : Node_Id) is\n-      Dims_Of_From : constant Dimension_Type := Dimensions_Of (From);\n-\n    begin\n       if Ada_Version < Ada_2012 then\n          return;\n       end if;\n \n       --  Copy the dimension of 'From to 'To' and remove dimension of 'From'\n \n-      if Exists (Dims_Of_From) then\n-         Set_Dimensions (To, Dims_Of_From);\n-         Remove_Dimensions (From);\n-      end if;\n+      Copy_Dimensions   (From, To);\n+      Remove_Dimensions (From);\n    end Move_Dimensions;\n \n    ------------"}, {"sha": "e7dc3ae29176ad891a41ef7610660baf592d04ae", "filename": "gcc/ada/sem_dim.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9144840f5b72697946060758bdde386d4a6292/gcc%2Fada%2Fsem_dim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9144840f5b72697946060758bdde386d4a6292/gcc%2Fada%2Fsem_dim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.ads?ref=ba9144840f5b72697946060758bdde386d4a6292", "patch": "@@ -162,6 +162,9 @@ package Sem_Dim is\n    --  For sub spec N, issue a warning for each dimensioned formal with a\n    --  literal default value in the list of formals Formals.\n \n+   procedure Copy_Dimensions (From, To : Node_Id);\n+   --  Copy dimension vector of From to To.\n+\n    procedure Eval_Op_Expon_For_Dimensioned_Type\n      (N    : Node_Id;\n       Btyp : Entity_Id);\n@@ -183,9 +186,6 @@ package Sem_Dim is\n    --  Return True if N is a package instantiation of System.Dim.Integer_IO or\n    --  of System.Dim.Float_IO.\n \n-   procedure Move_Dimensions (From : Node_Id; To : Node_Id);\n-   --  Copy dimension vector of From to To, delete dimension vector of From\n-\n    procedure Remove_Dimension_In_Statement (Stmt : Node_Id);\n    --  Remove the dimensions associated with Stmt\n "}]}