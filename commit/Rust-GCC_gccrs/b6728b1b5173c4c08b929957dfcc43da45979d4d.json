{"sha": "b6728b1b5173c4c08b929957dfcc43da45979d4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY3MjhiMWI1MTczYzRjMDhiOTI5OTU3ZGZjYzQzZGE0NTk3OWQ0ZA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2003-07-01T20:29:16Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-07-01T20:29:16Z"}, "message": "* filenames.h: New file imported from binutils.\n\nFrom-SVN: r68791", "tree": {"sha": "b53cb2f06ffd53ddaefd78a5dffa71785d04fc08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b53cb2f06ffd53ddaefd78a5dffa71785d04fc08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6728b1b5173c4c08b929957dfcc43da45979d4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6728b1b5173c4c08b929957dfcc43da45979d4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6728b1b5173c4c08b929957dfcc43da45979d4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6728b1b5173c4c08b929957dfcc43da45979d4d/comments", "author": null, "committer": null, "parents": [{"sha": "ce47ca44ccee81db8d6b3da293523ef776408dce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce47ca44ccee81db8d6b3da293523ef776408dce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce47ca44ccee81db8d6b3da293523ef776408dce"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "7812e6db794b84d6fc31611530f49fab03cb336a", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6728b1b5173c4c08b929957dfcc43da45979d4d/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6728b1b5173c4c08b929957dfcc43da45979d4d/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=b6728b1b5173c4c08b929957dfcc43da45979d4d", "patch": "@@ -1,3 +1,7 @@\n+2003-07-01  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* filenames.h: New file imported from binutils.\n+\n 2003-06-30  Bob Wilson  <bob.wilson@acm.org>\n \n \t* xtensa-config.h: New file imported from binutils."}, {"sha": "ca9e2732a3266fba66b53fe61f3370c3eef580dd", "filename": "include/filenames.h", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6728b1b5173c4c08b929957dfcc43da45979d4d/include%2Ffilenames.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6728b1b5173c4c08b929957dfcc43da45979d4d/include%2Ffilenames.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Ffilenames.h?ref=b6728b1b5173c4c08b929957dfcc43da45979d4d", "patch": "@@ -0,0 +1,51 @@\n+/* Macros for taking apart, interpreting and processing file names.\n+\n+   These are here because some non-Posix (a.k.a. DOSish) systems have\n+   drive letter brain-damage at the beginning of an absolute file name,\n+   use forward- and back-slash in path names interchangeably, and\n+   some of them have case-insensitive file names.\n+\n+   Copyright 2000, 2001 Free Software Foundation, Inc.\n+\n+This file is part of BFD, the Binary File Descriptor library.\n+\n+This program is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2 of the License, or\n+(at your option) any later version.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifndef FILENAMES_H\n+#define FILENAMES_H\n+\n+#if defined(__MSDOS__) || defined(_WIN32) || defined(__OS2__) || defined (__CYGWIN__)\n+\n+#ifndef HAVE_DOS_BASED_FILE_SYSTEM\n+#define HAVE_DOS_BASED_FILE_SYSTEM 1\n+#endif\n+\n+#define IS_DIR_SEPARATOR(c)\t((c) == '/' || (c) == '\\\\')\n+/* Note that IS_ABSOLUTE_PATH accepts d:foo as well, although it is\n+   only semi-absolute.  This is because the users of IS_ABSOLUTE_PATH\n+   want to know whether to prepend the current working directory to\n+   a file name, which should not be done with a name like d:foo.  */\n+#define IS_ABSOLUTE_PATH(f)\t(IS_DIR_SEPARATOR((f)[0]) || (((f)[0]) && ((f)[1] == ':')))\n+#define FILENAME_CMP(s1, s2)\tstrcasecmp(s1, s2)\n+\n+#else  /* not DOSish */\n+\n+#define IS_DIR_SEPARATOR(c)\t((c) == '/')\n+#define IS_ABSOLUTE_PATH(f)\t(IS_DIR_SEPARATOR((f)[0]))\n+#define FILENAME_CMP(s1, s2)\tstrcmp(s1, s2)\n+\n+#endif /* not DOSish */\n+\n+#endif /* FILENAMES_H */"}]}