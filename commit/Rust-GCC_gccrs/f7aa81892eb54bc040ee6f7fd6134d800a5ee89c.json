{"sha": "f7aa81892eb54bc040ee6f7fd6134d800a5ee89c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdhYTgxODkyZWI1NGJjMDQwZWU2ZjdmZDYxMzRkODAwYTVlZTg5Yw==", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-08-04T10:15:43Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-08-05T01:11:31Z"}, "message": "Support cond_{smax,smin} for vector float/double modes under AVX512.\n\ngcc/ChangeLog:\n\n\t* config/i386/sse.md (cond_<code><mode>): New expander.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/cond_op_maxmin_double-1.c: New test.\n\t* gcc.target/i386/cond_op_maxmin_double-2.c: New test.\n\t* gcc.target/i386/cond_op_maxmin_float-1.c: New test.\n\t* gcc.target/i386/cond_op_maxmin_float-2.c: New test.", "tree": {"sha": "8e00956edf8d5b95a4df3d9f3fe8fa8f823ea849", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e00956edf8d5b95a4df3d9f3fe8fa8f823ea849"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7aa81892eb54bc040ee6f7fd6134d800a5ee89c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7aa81892eb54bc040ee6f7fd6134d800a5ee89c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7aa81892eb54bc040ee6f7fd6134d800a5ee89c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7aa81892eb54bc040ee6f7fd6134d800a5ee89c/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a8c3fc2b2cc6d73b2e3006625fca2b588ebc1b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a8c3fc2b2cc6d73b2e3006625fca2b588ebc1b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a8c3fc2b2cc6d73b2e3006625fca2b588ebc1b0"}], "stats": {"total": 137, "additions": 137, "deletions": 0}, "files": [{"sha": "51733a3849de486bd31fb2a938be61b274fb7cf2", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa81892eb54bc040ee6f7fd6134d800a5ee89c/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa81892eb54bc040ee6f7fd6134d800a5ee89c/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=f7aa81892eb54bc040ee6f7fd6134d800a5ee89c", "patch": "@@ -2376,6 +2376,24 @@\n    (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"SF\")])\n \n+(define_expand \"cond_<code><mode>\"\n+  [(set (match_operand:VF 0 \"register_operand\")\n+\t(vec_merge:VF\n+\t  (smaxmin:VF\n+\t    (match_operand:VF 2 \"vector_operand\")\n+\t    (match_operand:VF 3 \"vector_operand\"))\n+\t  (match_operand:VF 4 \"nonimm_or_0_operand\")\n+\t  (match_operand:<avx512fmaskmode> 1 \"register_operand\")))]\n+  \"<MODE_SIZE> == 64 || TARGET_AVX512VL\"\n+{\n+  emit_insn (gen_<code><mode>3_mask (operands[0],\n+\t\t\t\t     operands[2],\n+\t\t\t\t     operands[3],\n+\t\t\t\t     operands[4],\n+\t\t\t\t     operands[1]));\n+  DONE;\n+})\n+\n (define_expand \"<code><mode>3<mask_name><round_saeonly_name>\"\n   [(set (match_operand:VF 0 \"register_operand\")\n \t(smaxmin:VF"}, {"sha": "eda8e1974b9d450bf588bdc46fccaee2040e1112", "filename": "gcc/testsuite/gcc.target/i386/cond_op_maxmin_double-1.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa81892eb54bc040ee6f7fd6134d800a5ee89c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcond_op_maxmin_double-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa81892eb54bc040ee6f7fd6134d800a5ee89c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcond_op_maxmin_double-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcond_op_maxmin_double-1.c?ref=f7aa81892eb54bc040ee6f7fd6134d800a5ee89c", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=skylake-avx512 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump \".COND_MAX\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \".COND_MIN\" \"optimized\" } } */\n+/* { dg-final { scan-assembler-times \"vmaxpd\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vminpd\"  1 } } */\n+\n+#include<math.h>\n+#ifndef NUM\n+#define NUM 800\n+#endif\n+#ifndef TYPE\n+#define TYPE double\n+#endif\n+#ifndef FN_MAX\n+#define FN_MAX fmax\n+#endif\n+#ifndef FN_MIN\n+#define FN_MIN fmin\n+#endif\n+\n+TYPE a[NUM], b[NUM], c[NUM], d[NUM], e[NUM], j[NUM];\n+#define MAX FN_MAX\n+#define MIN FN_MIN\n+\n+#define BIN(OPNAME, OP)\t\t\t\t\\\n+  void\t\t\t\t\t\t\\\n+  __attribute__ ((noipa,optimize (\"Ofast\")))\t\\\n+  foo_##OPNAME ()\t\t\t\t\\\n+  {\t\t\t\t\t\t\\\n+    for (int i = 0; i != NUM; i++)\t\t\\\n+      if (b[i] < c[i])\t\t\t\t\\\n+\ta[i] = (OP (d[i], e[i]));\t\t\\\n+      else\t\t\t\t\t\\\n+\ta[i] = d[i] - e[i];\t\t\t\\\n+  }\n+\n+BIN (max, MAX);\n+BIN (min, MIN);"}, {"sha": "c50a831000ae3d1223f1a151c06ffae67288c273", "filename": "gcc/testsuite/gcc.target/i386/cond_op_maxmin_double-2.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa81892eb54bc040ee6f7fd6134d800a5ee89c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcond_op_maxmin_double-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa81892eb54bc040ee6f7fd6134d800a5ee89c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcond_op_maxmin_double-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcond_op_maxmin_double-2.c?ref=f7aa81892eb54bc040ee6f7fd6134d800a5ee89c", "patch": "@@ -0,0 +1,67 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512vl -mprefer-vector-width=256 -ffast-math\" } */\n+/* { dg-require-effective-target avx512vl } */\n+\n+#define AVX512VL\n+#ifndef CHECK\n+#define CHECK \"avx512f-helper.h\"\n+#endif\n+\n+#include CHECK\n+\n+#include \"cond_op_maxmin_double-1.c\"\n+#define BINO2(OPNAME, OP)\t\t\t\\\n+  void\t\t\t\t\t\t\\\n+  __attribute__ ((noipa))\t\t\t\\\n+  foo_o2_##OPNAME ()\t\t\t\t\\\n+  {\t\t\t\t\t\t\\\n+    for (int i = 0; i != NUM; i++)\t\t\\\n+      if (b[i] < c[i])\t\t\t\t\\\n+\tj[i] = OP(d[i], e[i]);\t\t\t\\\n+      else\t\t\t\t\t\\\n+\tj[i] = d[i] - e[i];\t\t\t\\\n+  }\n+\n+BINO2 (max, MAX);\n+BINO2 (min, MIN);\n+\n+static void\n+test_256 (void)\n+{\n+  int sign = -1;\n+  for (int i = 0; i != NUM; i++)\n+    {\n+      a[i] = 0;\n+      d[i] = i * 2;\n+      e[i] = i * i * 3 - i * 9 + 153;\n+      b[i] = i * 83;\n+      c[i] = b[i] + sign;\n+      sign *= -1;\n+      j[i] = 1;\n+    }\n+  foo_max ();\n+  foo_o2_max ();\n+  for (int i = 0; i != NUM; i++)\n+    {\n+      if (a[i] != j[i])\n+\tabort ();\n+      a[i] = 0;\n+      b[i] = 1;\n+    }\n+\n+  foo_min ();\n+  foo_o2_min ();\n+  for (int i = 0; i != NUM; i++)\n+    {\n+      if (a[i] != j[i])\n+  \tabort ();\n+      a[i] = 0;\n+      j[i] = 1;\n+    }\n+}\n+\n+static void\n+test_128 ()\n+{\n+  \n+}"}, {"sha": "2d2157d87a504464283f783cea6e56b0c158e1e1", "filename": "gcc/testsuite/gcc.target/i386/cond_op_maxmin_float-1.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa81892eb54bc040ee6f7fd6134d800a5ee89c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcond_op_maxmin_float-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa81892eb54bc040ee6f7fd6134d800a5ee89c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcond_op_maxmin_float-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcond_op_maxmin_float-1.c?ref=f7aa81892eb54bc040ee6f7fd6134d800a5ee89c", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=skylake-avx512 -DTYPE=float -fdump-tree-optimized -DFN_MAX=fmaxf -DFN_MIN=fminf\" } */\n+/* { dg-final { scan-tree-dump \".COND_MAX\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \".COND_MIN\" \"optimized\" } } */\n+/* { dg-final { scan-assembler-times \"vmaxps\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vminps\"  1 } } */\n+\n+#include \"cond_op_maxmin_double-1.c\""}, {"sha": "fec784e5dedb5f58a22bc1de3626088f15e7cc14", "filename": "gcc/testsuite/gcc.target/i386/cond_op_maxmin_float-2.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa81892eb54bc040ee6f7fd6134d800a5ee89c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcond_op_maxmin_float-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa81892eb54bc040ee6f7fd6134d800a5ee89c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcond_op_maxmin_float-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcond_op_maxmin_float-2.c?ref=f7aa81892eb54bc040ee6f7fd6134d800a5ee89c", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512vl -mprefer-vector-width=256 -DTYPE=float -DFN_MAX=fmaxf -DFN_MIN=fminf\" } */\n+/* { dg-require-effective-target avx512vl } */\n+\n+#include \"cond_op_maxmin_double-2.c\""}]}