{"sha": "3592ea0d900fb5fc609caf0764dec29c9efe3253", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU5MmVhMGQ5MDBmYjVmYzYwOWNhZjA3NjRkZWMyOWM5ZWZlMzI1Mw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-04-10T22:37:08Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-04-10T22:37:08Z"}, "message": "sparc.c (sparc_override_options): 90c701 renamed to tsc701.\n\n\t* sparc/sparc.c (sparc_override_options): 90c701 renamed to tsc701.\n\t(eligible_for_epilogue_delay_slot): Don't allow anything if\n\t-mbroken-saverestore.\n\t(output_function_prologue): Only use trivial save's if\n\t-mbroken-saverestore.\n\nFrom-SVN: r11691", "tree": {"sha": "c3aa74e532daf83686a8bf78dde1d84f3f25d0fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3aa74e532daf83686a8bf78dde1d84f3f25d0fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3592ea0d900fb5fc609caf0764dec29c9efe3253", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3592ea0d900fb5fc609caf0764dec29c9efe3253", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3592ea0d900fb5fc609caf0764dec29c9efe3253", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3592ea0d900fb5fc609caf0764dec29c9efe3253/comments", "author": null, "committer": null, "parents": [{"sha": "44ae13fb02be00689e0aaf62a6f5d77071b7cc17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44ae13fb02be00689e0aaf62a6f5d77071b7cc17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44ae13fb02be00689e0aaf62a6f5d77071b7cc17"}], "stats": {"total": 47, "additions": 30, "deletions": 17}, "files": [{"sha": "3ccbbe6880b9bbb89d06d6e06d0f70f042a49eaa", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 30, "deletions": 17, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3592ea0d900fb5fc609caf0764dec29c9efe3253/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3592ea0d900fb5fc609caf0764dec29c9efe3253/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=3592ea0d900fb5fc609caf0764dec29c9efe3253", "patch": "@@ -140,7 +140,7 @@ sparc_override_options ()\n     char *name;\n   } cpu_default[] = {\n     { TARGET_CPU_sparc, \"cypress\" },\n-    { TARGET_CPU_sparclet, \"90c701\" },\n+    { TARGET_CPU_sparclet, \"tsc701\" },\n     { TARGET_CPU_sparclite, \"f930\" },\n     { TARGET_CPU_sparc64, \"ultrasparc\" },\n     { 0 }\n@@ -165,7 +165,7 @@ sparc_override_options ()\n     { \"f934\",       PROCESSOR_F934, MASK_ISA, MASK_SPARCLITE|MASK_FPU },\n     { \"sparclet\",   PROCESSOR_SPARCLET, MASK_ISA, MASK_SPARCLET },\n     /* TEMIC sparclet */\n-    { \"90c701\",     PROCESSOR_90C701, MASK_ISA, MASK_SPARCLET },\n+    { \"tsc701\",     PROCESSOR_TSC701, MASK_ISA, MASK_SPARCLET },\n     /* \"v9\" is used to specify a true 64 bit architecture.\n        \"v8plus\" is what Sun calls Solaris2 running on UltraSPARC's.  */\n     { \"v8plus\",     PROCESSOR_V8PLUS, MASK_ISA, MASK_V9 },\n@@ -1108,6 +1108,10 @@ eligible_for_epilogue_delay (trial, slot)\n \treturn (get_attr_in_uncond_branch_delay (trial) == IN_BRANCH_DELAY_TRUE);\n       return 0;\n     }\n+  /* If only trivial `restore' insns work, nothing can go in the\n+     delay slot.  */\n+  else if (TARGET_BROKEN_SAVERESTORE)\n+    return 0;\n \n   pat = PATTERN (trial);\n \n@@ -3076,34 +3080,43 @@ output_function_prologue (file, size, leaf_function)\n \n   if (actual_fsize == 0)\n     /* do nothing.  */ ;\n-  else if (actual_fsize <= 4096)\n+  else if (! leaf_function && ! TARGET_BROKEN_SAVERESTORE)\n     {\n-      if (! leaf_function)\n+      if (actual_fsize <= 4096)\n \tfprintf (file, \"\\tsave %%sp,-%d,%%sp\\n\", actual_fsize);\n-      else\n-\tfprintf (file, \"\\tadd %%sp,-%d,%%sp\\n\", actual_fsize);\n-    }\n-  else if (actual_fsize <= 8192)\n-    {\n-      /* For frames in the range 4097..8192, we can use just two insns.  */\n-      if (! leaf_function)\n+      else if (actual_fsize <= 8192)\n \t{\n \t  fprintf (file, \"\\tsave %%sp,-4096,%%sp\\n\");\n \t  fprintf (file, \"\\tadd %%sp,-%d,%%sp\\n\", actual_fsize - 4096);\n \t}\n       else\n \t{\n-\t  fprintf (file, \"\\tadd %%sp,-4096,%%sp\\n\");\n-\t  fprintf (file, \"\\tadd %%sp,-%d,%%sp\\n\", actual_fsize - 4096);\n+\t  build_big_number (file, -actual_fsize, \"%g1\");\n+\t  fprintf (file, \"\\tsave %%sp,%%g1,%%sp\\n\");\n \t}\n     }\n   else\n     {\n-      build_big_number (file, -actual_fsize, \"%g1\");\n-      if (! leaf_function)\n-\tfprintf (file, \"\\tsave %%sp,%%g1,%%sp\\n\");\n+      /* If the target has a broken save insn (only handles save %g0,%g0,%g0),\n+\t do the save and then handle like a leaf function.\n+\t We assume the environment will properly handle or otherwise avoid\n+\t trouble associated with an interrupt occuring after the `save' or\n+\t trap occuring during it.  */\n+      if (TARGET_BROKEN_SAVERESTORE)\n+\tfprintf (file, \"\\tsave\\n\");\n+\n+      if (actual_fsize <= 4096)\n+\tfprintf (file, \"\\tadd %%sp,-%d,%%sp\\n\", actual_fsize);\n+      else if (actual_fsize <= 8192)\n+\t{\n+\t  fprintf (file, \"\\tadd %%sp,-4096,%%sp\\n\");\n+\t  fprintf (file, \"\\tadd %%sp,-%d,%%sp\\n\", actual_fsize - 4096);\n+\t}\n       else\n-\tfprintf (file, \"\\tadd %%sp,%%g1,%%sp\\n\");\n+\t{\n+\t  build_big_number (file, -actual_fsize, \"%g1\");\n+\t  fprintf (file, \"\\tadd %%sp,%%g1,%%sp\\n\");\n+\t}\n     }\n \n   /* If doing anything with PIC, do it now.  */"}]}