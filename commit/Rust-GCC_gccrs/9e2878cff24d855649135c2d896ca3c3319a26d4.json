{"sha": "9e2878cff24d855649135c2d896ca3c3319a26d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUyODc4Y2ZmMjRkODU1NjQ5MTM1YzJkODk2Y2EzYzMzMTlhMjZkNA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2004-08-02T12:48:49Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2004-08-02T12:48:49Z"}, "message": "gengtype.h (options::info): Change type to const char *.\n\n        * gengtype.h (options::info): Change type to const char *.\n        (enum gc_used_enum): Move out of struct type scope.\n        * gengtype.c (create_option): Convert initializer for\n        option::info to\n        appropiate type.\n        (adjust_field_type, walk_type, write_func_for_structure,\n        write_root, write_roots): Remove pointless cast.\n\nFrom-SVN: r85436", "tree": {"sha": "4fe2ee38a31632834142a64e429a8a1f334f3152", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fe2ee38a31632834142a64e429a8a1f334f3152"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e2878cff24d855649135c2d896ca3c3319a26d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e2878cff24d855649135c2d896ca3c3319a26d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e2878cff24d855649135c2d896ca3c3319a26d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e2878cff24d855649135c2d896ca3c3319a26d4/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6041dc3ce38e71dc7e04bc58dd3c12942d57d277", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6041dc3ce38e71dc7e04bc58dd3c12942d57d277", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6041dc3ce38e71dc7e04bc58dd3c12942d57d277"}], "stats": {"total": 54, "additions": 33, "deletions": 21}, "files": [{"sha": "9393406db64f1d4b1c2700d4344ba3b98fb23786", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e2878cff24d855649135c2d896ca3c3319a26d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e2878cff24d855649135c2d896ca3c3319a26d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e2878cff24d855649135c2d896ca3c3319a26d4", "patch": "@@ -1,3 +1,12 @@\n+2004-08-02  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* gengtype.h (options::info): Change type to const char *.\n+\t(enum gc_used_enum): Move out of struct type scope.\n+\t* gengtype.c (create_option): Convert initializer for option::info to\n+\tappropiate type.\n+\t(adjust_field_type, walk_type, write_func_for_structure,\n+\twrite_root, write_roots): Remove pointless cast. \n+\n 2004-08-02  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* genopinit.c (gen_insn): Check for MODE_COMPLEX_FLOAT patterns for $F."}, {"sha": "45a6f91923864bee1a9869c96e8ef4d4e70db315", "filename": "gcc/gengtype.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e2878cff24d855649135c2d896ca3c3319a26d4/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e2878cff24d855649135c2d896ca3c3319a26d4/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=9e2878cff24d855649135c2d896ca3c3319a26d4", "patch": "@@ -314,7 +314,7 @@ create_option (const char *name, void *info)\n {\n   options_p o = XNEW (struct options);\n   o->name = name;\n-  o->info = info;\n+  o->info = (const char*) info;\n   return o;\n }\n \n@@ -730,7 +730,7 @@ adjust_field_type (type_p t, options_p opt)\n       }\n     else if (strcmp (opt->name, \"special\") == 0)\n       {\n-\tconst char *special_name = (const char *)opt->info;\n+\tconst char *special_name = opt->info;\n \tif (strcmp (special_name, \"tree_exp\") == 0)\n \t  t = adjust_field_tree_exp (t, opt);\n \telse if (strcmp (special_name, \"rtx_def\") == 0)\n@@ -1476,7 +1476,7 @@ walk_type (type_p t, struct walk_type_data *d)\n   d->needs_cast_p = false;\n   for (oo = d->opt; oo; oo = oo->next)\n     if (strcmp (oo->name, \"length\") == 0)\n-      length = (const char *)oo->info;\n+      length = oo->info;\n     else if (strcmp (oo->name, \"maybe_undef\") == 0)\n       maybe_undef_p = 1;\n     else if (strncmp (oo->name, \"use_param\", 9) == 0\n@@ -1485,7 +1485,7 @@ walk_type (type_p t, struct walk_type_data *d)\n     else if (strcmp (oo->name, \"use_params\") == 0)\n       use_params_p = 1;\n     else if (strcmp (oo->name, \"desc\") == 0)\n-      desc = (const char *)oo->info;\n+      desc = oo->info;\n     else if (strcmp (oo->name, \"nested_ptr\") == 0)\n       nested_ptr_d = (const struct nested_ptr_data *) oo->info;\n     else if (strcmp (oo->name, \"dot\") == 0)\n@@ -1728,7 +1728,7 @@ walk_type (type_p t, struct walk_type_data *d)\n \t/* Some things may also be defined in the structure's options.  */\n \tfor (o = t->u.s.opt; o; o = o->next)\n \t  if (! desc && strcmp (o->name, \"desc\") == 0)\n-\t    desc = (const char *)o->info;\n+\t    desc = o->info;\n \n \td->prev_val[2] = oldval;\n \td->prev_val[1] = oldprevval2;\n@@ -1759,15 +1759,15 @@ walk_type (type_p t, struct walk_type_data *d)\n \t    d->reorder_fn = NULL;\n \t    for (oo = f->opt; oo; oo = oo->next)\n \t      if (strcmp (oo->name, \"dot\") == 0)\n-\t\tdot = (const char *)oo->info;\n+\t\tdot = oo->info;\n \t      else if (strcmp (oo->name, \"tag\") == 0)\n-\t\ttagid = (const char *)oo->info;\n+\t\ttagid = oo->info;\n \t      else if (strcmp (oo->name, \"skip\") == 0)\n \t\tskip_p = 1;\n \t      else if (strcmp (oo->name, \"default\") == 0)\n \t\tdefault_p = 1;\n \t      else if (strcmp (oo->name, \"reorder\") == 0)\n-\t\td->reorder_fn = (const char *)oo->info;\n+\t\td->reorder_fn = oo->info;\n \t      else if (strncmp (oo->name, \"use_param\", 9) == 0\n \t\t       && (oo->name[9] == '\\0' || ISDIGIT (oo->name[9])))\n \t\tuse_param_p = 1;\n@@ -1956,9 +1956,9 @@ write_func_for_structure (type_p orig_s, type_p s, type_p *param,\n \n   for (opt = s->u.s.opt; opt; opt = opt->next)\n     if (strcmp (opt->name, \"chain_next\") == 0)\n-      chain_next = (const char *) opt->info;\n+      chain_next = opt->info;\n     else if (strcmp (opt->name, \"chain_prev\") == 0)\n-      chain_prev = (const char *) opt->info;\n+      chain_prev = opt->info;\n \n   if (chain_prev != NULL && chain_next == NULL)\n     error_at_line (&s->u.s.line, \"chain_prev without chain_next\");\n@@ -2489,7 +2489,7 @@ write_root (outf_p f, pair_p v, type_p type, const char *name, int has_length,\n \t      if (strcmp (o->name, \"skip\") == 0)\n \t\tskip_p = 1;\n \t      else if (strcmp (o->name, \"desc\") == 0)\n-\t\tdesc = (const char *)o->info;\n+\t\tdesc = o->info;\n \t      else\n \t\terror_at_line (line,\n \t\t       \"field `%s' of global `%s' has unknown option `%s'\",\n@@ -2509,7 +2509,7 @@ write_root (outf_p f, pair_p v, type_p type, const char *name, int has_length,\n \n \t\t    for (oo = ufld->opt; oo; oo = oo->next)\n \t\t      if (strcmp (oo->name, \"tag\") == 0)\n-\t\t\ttag = (const char *)oo->info;\n+\t\t\ttag = oo->info;\n \t\t    if (tag == NULL || strcmp (tag, desc) != 0)\n \t\t      continue;\n \t\t    if (validf != NULL)\n@@ -2695,7 +2695,7 @@ write_roots (pair_p variables)\n \n       for (o = v->opt; o; o = o->next)\n \tif (strcmp (o->name, \"length\") == 0)\n-\t  length = (const char *)o->info;\n+\t  length = o->info;\n \telse if (strcmp (o->name, \"deletable\") == 0)\n \t  deletable_p = 1;\n \telse if (strcmp (o->name, \"param_is\") == 0)\n@@ -2820,7 +2820,7 @@ write_roots (pair_p variables)\n \tif (strcmp (o->name, \"length\") == 0)\n \t  length_p = 1;\n \telse if (strcmp (o->name, \"if_marked\") == 0)\n-\t  if_marked = (const char *) o->info;\n+\t  if_marked = o->info;\n \n       if (if_marked == NULL)\n \tcontinue;"}, {"sha": "ad48566e5e584a2ccfc0ac270ad63d4816151a0e", "filename": "gcc/gengtype.h", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e2878cff24d855649135c2d896ca3c3319a26d4/gcc%2Fgengtype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e2878cff24d855649135c2d896ca3c3319a26d4/gcc%2Fgengtype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.h?ref=9e2878cff24d855649135c2d896ca3c3319a26d4", "patch": "@@ -52,7 +52,7 @@ struct nested_ptr_data {\n typedef struct options {\n   struct options *next;\n   const char *name;\n-  const void *info;\n+  const char *info;\n } *options_p;\n \n /* A name and a type.  */\n@@ -67,16 +67,19 @@ struct pair {\n #define NUM_PARAM 10\n \n /* A description of a type.  */\n-struct type {\n-  enum typekind kind;\n-  type_p next;\n-  type_p pointer_to;\n-  enum gc_used_enum {\n+enum gc_used_enum\n+  {\n     GC_UNUSED = 0,\n     GC_USED,\n     GC_MAYBE_POINTED_TO,\n     GC_POINTED_TO\n-  } gc_used;\n+  };\n+\n+struct type {\n+  enum typekind kind;\n+  type_p next;\n+  type_p pointer_to;\n+  enum gc_used_enum gc_used;\n   union {\n     type_p p;\n     struct {"}]}