{"sha": "82a344f206725ba002af4fed318f37dfb7e566a0", "node_id": "C_kwDOANBUbNoAKDgyYTM0NGYyMDY3MjViYTAwMmFmNGZlZDMxOGYzN2RmYjdlNTY2YTA", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-01-12T09:42:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-05-02T06:06:04Z"}, "message": "Use CASE_CONVERT in a few more cases\n\nThis uses CASE_CONVERT more which eases eventual removal of NOP_EXPR.\n\n2022-04-29  Richard Biener  <rguenther@suse.de>\n\ngcc/cp/\n\t* constexpr.cc (fold_simple_1): Use CASE_CONVERT.\n\t* cp-gimplify.cc (cp_fold): Likewise.\n\t* pt.cc (tsubst_copy): Likewise.\n\ngcc/\n\t* dojump.cc (do_jump): Use CASE_CONVERT.\n\t* tree-ssa-dom.cc (edge_info::derive_equivalences): Likewise.", "tree": {"sha": "41559765639811791e9b73de64af69dd9c4430ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41559765639811791e9b73de64af69dd9c4430ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82a344f206725ba002af4fed318f37dfb7e566a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82a344f206725ba002af4fed318f37dfb7e566a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82a344f206725ba002af4fed318f37dfb7e566a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82a344f206725ba002af4fed318f37dfb7e566a0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a0e89b10f6bdc1e285e0b9e6a435a0062f8936c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a0e89b10f6bdc1e285e0b9e6a435a0062f8936c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a0e89b10f6bdc1e285e0b9e6a435a0062f8936c"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "c40efa6cc4ebf767310e527d64d968403ecc42f0", "filename": "gcc/cp/constexpr.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a344f206725ba002af4fed318f37dfb7e566a0/gcc%2Fcp%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a344f206725ba002af4fed318f37dfb7e566a0/gcc%2Fcp%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.cc?ref=82a344f206725ba002af4fed318f37dfb7e566a0", "patch": "@@ -8016,9 +8016,8 @@ fold_simple_1 (tree t)\n     case NEGATE_EXPR:\n     case BIT_NOT_EXPR:\n     case TRUTH_NOT_EXPR:\n-    case NOP_EXPR:\n     case VIEW_CONVERT_EXPR:\n-    case CONVERT_EXPR:\n+    CASE_CONVERT:\n     case FLOAT_EXPR:\n     case FIX_TRUNC_EXPR:\n     case FIXED_CONVERT_EXPR:"}, {"sha": "b52d9cb575472b184dac9d07f49ee9a9bb6f32b9", "filename": "gcc/cp/cp-gimplify.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a344f206725ba002af4fed318f37dfb7e566a0/gcc%2Fcp%2Fcp-gimplify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a344f206725ba002af4fed318f37dfb7e566a0/gcc%2Fcp%2Fcp-gimplify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.cc?ref=82a344f206725ba002af4fed318f37dfb7e566a0", "patch": "@@ -2451,9 +2451,8 @@ cp_fold (tree x)\n     case VIEW_CONVERT_EXPR:\n       rval_ops = false;\n       /* FALLTHRU */\n-    case CONVERT_EXPR:\n-    case NOP_EXPR:\n     case NON_LVALUE_EXPR:\n+    CASE_CONVERT:\n \n       if (VOID_TYPE_P (TREE_TYPE (x)))\n \t{"}, {"sha": "e6006540e7aad353c0b5e673b297bf4a9524d5fc", "filename": "gcc/cp/pt.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a344f206725ba002af4fed318f37dfb7e566a0/gcc%2Fcp%2Fpt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a344f206725ba002af4fed318f37dfb7e566a0/gcc%2Fcp%2Fpt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.cc?ref=82a344f206725ba002af4fed318f37dfb7e566a0", "patch": "@@ -17152,8 +17152,7 @@ tsubst_copy (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n     case STATIC_CAST_EXPR:\n     case DYNAMIC_CAST_EXPR:\n     case IMPLICIT_CONV_EXPR:\n-    case CONVERT_EXPR:\n-    case NOP_EXPR:\n+    CASE_CONVERT:\n       {\n \ttsubst_flags_t tcomplain = complain;\n \tif (code == CAST_EXPR)"}, {"sha": "17a73da744895208bd17ca536c3a445c357e5dfb", "filename": "gcc/dojump.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a344f206725ba002af4fed318f37dfb7e566a0/gcc%2Fdojump.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a344f206725ba002af4fed318f37dfb7e566a0/gcc%2Fdojump.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdojump.cc?ref=82a344f206725ba002af4fed318f37dfb7e566a0", "patch": "@@ -421,14 +421,12 @@ do_jump (tree exp, rtx_code_label *if_false_label,\n       break;\n #endif\n \n-    case NOP_EXPR:\n+    CASE_CONVERT:\n       if (TREE_CODE (TREE_OPERAND (exp, 0)) == COMPONENT_REF\n           || TREE_CODE (TREE_OPERAND (exp, 0)) == BIT_FIELD_REF\n           || TREE_CODE (TREE_OPERAND (exp, 0)) == ARRAY_REF\n           || TREE_CODE (TREE_OPERAND (exp, 0)) == ARRAY_RANGE_REF)\n         goto normal;\n-      /* FALLTHRU */\n-    case CONVERT_EXPR:\n       /* If we are narrowing the operand, we have to do the compare in the\n          narrower mode.  */\n       if ((TYPE_PRECISION (TREE_TYPE (exp))"}, {"sha": "89b05171d57c6a15647dee4aade44c8c80b9a705", "filename": "gcc/tree-ssa-dom.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82a344f206725ba002af4fed318f37dfb7e566a0/gcc%2Ftree-ssa-dom.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82a344f206725ba002af4fed318f37dfb7e566a0/gcc%2Ftree-ssa-dom.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.cc?ref=82a344f206725ba002af4fed318f37dfb7e566a0", "patch": "@@ -220,8 +220,7 @@ edge_info::derive_equivalences (tree name, tree value, int recursion_limit)\n \t/* If LHS is an SSA_NAME and RHS is a constant integer and LHS was\n \t   set via a widening type conversion, then we may be able to record\n \t   additional equivalences.  */\n-\tcase NOP_EXPR:\n-\tcase CONVERT_EXPR:\n+\tCASE_CONVERT:\n \t  {\n \t    tree rhs = gimple_assign_rhs1 (def_stmt);\n \t    tree rhs_type = TREE_TYPE (rhs);"}]}