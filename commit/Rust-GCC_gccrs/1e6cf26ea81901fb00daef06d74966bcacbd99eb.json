{"sha": "1e6cf26ea81901fb00daef06d74966bcacbd99eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU2Y2YyNmVhODE5MDFmYjAwZGFlZjA2ZDc0OTY2YmNhY2JkOTllYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-05-15T18:24:31Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-05-15T18:24:31Z"}, "message": "name-lookup.c (pushdecl_maybe_friend_1): Replace pairs of warning_at and permerror with warning_at/inform and permerror/...\n\n/cp\n2013-05-15  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* name-lookup.c (pushdecl_maybe_friend_1): Replace pairs of\n\twarning_at and permerror with warning_at/inform and permerror/\n\tinform, respectively.\n\n/testsuite\n2013-05-15  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/cpp0x/lambda/lambda-shadow1.C: Replace dg-warnings with\n\tdg-messages.\n\t* g++.dg/warn/Wshadow-1.C: Likewise.\n\t* g++.dg/warn/Wshadow-6.C: Likewise.\n\t* g++.dg/warn/Wshadow-7.C: Likewise.\n\nFrom-SVN: r198943", "tree": {"sha": "78e0db04f507a690e13498e747a92dc48ea8231b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78e0db04f507a690e13498e747a92dc48ea8231b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e6cf26ea81901fb00daef06d74966bcacbd99eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6cf26ea81901fb00daef06d74966bcacbd99eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e6cf26ea81901fb00daef06d74966bcacbd99eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6cf26ea81901fb00daef06d74966bcacbd99eb/comments", "author": null, "committer": null, "parents": [{"sha": "e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242"}], "stats": {"total": 73, "additions": 47, "deletions": 26}, "files": [{"sha": "a602af3addbcb9417f46b251763f6b6f914e1fc4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6cf26ea81901fb00daef06d74966bcacbd99eb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6cf26ea81901fb00daef06d74966bcacbd99eb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1e6cf26ea81901fb00daef06d74966bcacbd99eb", "patch": "@@ -1,3 +1,9 @@\n+2013-05-15  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* name-lookup.c (pushdecl_maybe_friend_1): Replace pairs of\n+\twarning_at and permerror with warning_at/inform and permerror/\n+\tinform, respectively.\n+\n 2013-05-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/31952"}, {"sha": "17d5ca2651650f4c6db00e3257fb90fff88b2dee", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6cf26ea81901fb00daef06d74966bcacbd99eb/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6cf26ea81901fb00daef06d74966bcacbd99eb/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=1e6cf26ea81901fb00daef06d74966bcacbd99eb", "patch": "@@ -943,8 +943,10 @@ pushdecl_maybe_friend_1 (tree x, bool is_friend)\n \t      && TREE_CODE (decl) == TREE_CODE (x)\n \t      && !same_type_p (TREE_TYPE (x), TREE_TYPE (decl)))\n \t    {\n-\t      permerror (input_location, \"type mismatch with previous external decl of %q#D\", x);\n-\t      permerror (input_location, \"previous external decl of %q+#D\", decl);\n+\t      if (permerror (input_location, \"type mismatch with previous \"\n+\t\t\t     \"external decl of %q#D\", x))\n+\t\tinform (input_location, \"previous external decl of %q+#D\",\n+\t\t\tdecl);\n \t    }\n \t}\n \n@@ -1161,19 +1163,23 @@ pushdecl_maybe_friend_1 (tree x, bool is_friend)\n \n \t      if (warn_shadow && !nowarn)\n \t\t{\n+\t\t  bool warned;\n+\n \t\t  if (TREE_CODE (oldlocal) == PARM_DECL)\n-\t\t    warning_at (input_location, OPT_Wshadow,\n+\t\t    warned = warning_at (input_location, OPT_Wshadow,\n \t\t\t\t\"declaration of %q#D shadows a parameter\", x);\n \t\t  else if (is_capture_proxy (oldlocal))\n-\t\t    warning_at (input_location, OPT_Wshadow,\n+\t\t    warned = warning_at (input_location, OPT_Wshadow,\n \t\t\t\t\"declaration of %qD shadows a lambda capture\",\n \t\t\t\tx);\n \t\t  else\n-\t\t    warning_at (input_location, OPT_Wshadow,\n+\t\t    warned = warning_at (input_location, OPT_Wshadow,\n \t\t\t\t\"declaration of %qD shadows a previous local\",\n \t\t\t\tx);\n-\t\t   warning_at (DECL_SOURCE_LOCATION (oldlocal), OPT_Wshadow,\n-\t\t\t       \"shadowed declaration is here\");\n+\n+\t\t  if (warned)\n+\t\t    inform (DECL_SOURCE_LOCATION (oldlocal),\n+\t\t\t    \"shadowed declaration is here\");\n \t\t}\n \t    }\n \n@@ -1213,10 +1219,11 @@ pushdecl_maybe_friend_1 (tree x, bool is_friend)\n                                    || TREE_CODE (x) == TYPE_DECL))))\n \t\t/* XXX shadow warnings in outer-more namespaces */\n \t\t{\n-\t\t  warning_at (input_location, OPT_Wshadow,\n-\t\t\t      \"declaration of %qD shadows a global declaration\", x);\n-\t\t  warning_at (DECL_SOURCE_LOCATION (oldglobal), OPT_Wshadow,\n-\t\t\t      \"shadowed declaration is here\");\n+\t\t  if (warning_at (input_location, OPT_Wshadow,\n+\t\t\t\t  \"declaration of %qD shadows a \"\n+\t\t\t\t  \"global declaration\", x))\n+\t\t    inform (DECL_SOURCE_LOCATION (oldglobal),\n+\t\t\t    \"shadowed declaration is here\");\n \t\t}\n \t    }\n \t}"}, {"sha": "be7ccece6a40aa4be433a74970abb66d5df5ad21", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6cf26ea81901fb00daef06d74966bcacbd99eb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6cf26ea81901fb00daef06d74966bcacbd99eb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e6cf26ea81901fb00daef06d74966bcacbd99eb", "patch": "@@ -1,3 +1,11 @@\n+2013-05-15  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.dg/cpp0x/lambda/lambda-shadow1.C: Replace dg-warnings with\n+\tdg-messages.\n+\t* g++.dg/warn/Wshadow-1.C: Likewise.\n+\t* g++.dg/warn/Wshadow-6.C: Likewise.\n+\t* g++.dg/warn/Wshadow-7.C: Likewise.\n+\n 2013-05-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/31952"}, {"sha": "f4433faec92804d48277d9c2aa725302b0d37ec7", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-shadow1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6cf26ea81901fb00daef06d74966bcacbd99eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-shadow1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6cf26ea81901fb00daef06d74966bcacbd99eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-shadow1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-shadow1.C?ref=1e6cf26ea81901fb00daef06d74966bcacbd99eb", "patch": "@@ -2,7 +2,7 @@\n // { dg-options \"-std=c++11 -Wshadow\" }\n \n int main() {\n-  int x = 1;\t\t\t  // { dg-warning \"shadowed\" }\n+  int x = 1;\t\t\t  // { dg-message \"shadowed\" }\n   auto const lambda = [](int x) { // { dg-warning \"shadows\" }\n     return x;\n   };"}, {"sha": "aec6bca54184fd6be1285d5c4f22e7b4d2264829", "filename": "gcc/testsuite/g++.dg/warn/Wshadow-1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6cf26ea81901fb00daef06d74966bcacbd99eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6cf26ea81901fb00daef06d74966bcacbd99eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-1.C?ref=1e6cf26ea81901fb00daef06d74966bcacbd99eb", "patch": "@@ -18,8 +18,8 @@ struct status\t\t\t// { dg-bogus \"shadowed declaration\" }\n   }\n };\n \n-int decl1;\t\t\t// { dg-warning \"shadowed declaration\" }\n-int decl2;\t\t\t// { dg-warning \"shadowed declaration\" }\n+int decl1;\t\t\t// { dg-message \"shadowed declaration\" }\n+int decl2;\t\t\t// { dg-message \"shadowed declaration\" }\n void foo (struct status &status,// { dg-bogus \"shadows a global decl\" }\n \t  double decl1)\t\t// { dg-warning \"shadows a global decl\" }\n {\n@@ -34,7 +34,7 @@ void status::foo2 ()\n {\n   int member;\t\t\t// { dg-warning \"shadows a member\" }\n   int decl2;\t\t\t// { dg-warning \"shadows a global decl\" }\n-  int local;\t\t\t// { dg-warning \"shadowed declaration\" }\n+  int local;\t\t\t// { dg-message \"shadowed declaration\" }\n   {\n     int local;\t\t\t// { dg-warning \"shadows a previous local\" }\n   }"}, {"sha": "78275743115649f22a8492bc7b13f5cd2f936020", "filename": "gcc/testsuite/g++.dg/warn/Wshadow-6.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6cf26ea81901fb00daef06d74966bcacbd99eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6cf26ea81901fb00daef06d74966bcacbd99eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-6.C?ref=1e6cf26ea81901fb00daef06d74966bcacbd99eb", "patch": "@@ -4,10 +4,10 @@\n // { dg-options \"-std=c++0x -Wshadow\" }\n \n struct S {};\n-int f1(int x)   // { dg-warning \"shadowed declaration\" }\n+int f1(int x)   // { dg-message \"shadowed declaration\" }\n {\n  int t = 0;\n- int m = 0;     // { dg-warning \"shadowed declaration\" }\n+ int m = 0;     // { dg-message \"shadowed declaration\" }\n  [&t] (int x) { // { dg-warning \"shadows a parameter\" }\n    int m = 1;   // { dg-warning \"shadows a previous local\" }\n    t = t + x + m;\n@@ -18,9 +18,9 @@ int f1(int x)   // { dg-warning \"shadowed declaration\" }\n void f2(struct S i, int j) {\n   struct A {\n     struct S x;\n-    void g(struct S i) { // { dg-warning \"shadowed declaration\" }\n+    void g(struct S i) { // { dg-message \"shadowed declaration\" }\n \t  struct S x;    // { dg-warning \"shadows a member of\" }\n-\t  struct S y;    // { dg-warning \"shadowed declaration\" }\n+\t  struct S y;    // { dg-message \"shadowed declaration\" }\n \t  int t;\n \t   [&t](struct S i){   // { dg-warning \"shadows a parameter\" }\n \t\t int j = 1;    // { dg-bogus \"shadows\" }\n@@ -33,7 +33,7 @@ void f2(struct S i, int j) {\n \n void f3(int i) {\n  [=]{\n-   int j = i;\t\t\t// { dg-warning \"shadowed declaration\" }\n+   int j = i;\t\t\t// { dg-message \"shadowed declaration\" }\n    int i;\t\t\t// { dg-warning \"shadows a lambda capture\" }\n    i = 1;\n  };\n@@ -42,7 +42,7 @@ void f3(int i) {\n template <class T>\n void f4(int i) {\n  [=]{\n-   int j = i;\t\t\t// { dg-warning \"shadowed declaration\" }\n+   int j = i;\t\t\t// { dg-message \"shadowed declaration\" }\n    int i;\t\t\t// { dg-warning \"shadows a lambda capture\" }\n    i = 1;\n  };"}, {"sha": "d354d0499f4002ef9ddf949c4e947dd12d81789b", "filename": "gcc/testsuite/g++.dg/warn/Wshadow-7.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6cf26ea81901fb00daef06d74966bcacbd99eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6cf26ea81901fb00daef06d74966bcacbd99eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-7.C?ref=1e6cf26ea81901fb00daef06d74966bcacbd99eb", "patch": "@@ -1,18 +1,18 @@\n // PR c++/44128\n // { dg-options \"-Wshadow\" }\n \n-typedef long My_ssize_t;  // { dg-warning \"shadowed declaration\" }\n-typedef int Foo;          // { dg-warning \"shadowed declaration\" }\n+typedef long My_ssize_t;  // { dg-message \"shadowed declaration\" }\n+typedef int Foo;          // { dg-message \"shadowed declaration\" }\n struct Bar1 {             // { dg-bogus \"shadowed declaration\" }\n   int a;\n };\n-struct Bar2 {             // { dg-warning \"shadowed declaration\" }\n+struct Bar2 {             // { dg-message \"shadowed declaration\" }\n   int a;\n };\n \n void func() {\n   typedef int My_ssize_t; // { dg-warning \"shadows a global\" }\n-  typedef char My_Num;    // { dg-warning \"shadowed declaration\" }\n+  typedef char My_Num;    // { dg-message \"shadowed declaration\" }\n   {\n     typedef short My_Num; // { dg-warning \"shadows a previous local\" }\n   }\n@@ -21,7 +21,7 @@ void func() {\n   struct Bar2 {           // { dg-warning \"shadows a global\" }\n     int a;\n   };\n-  struct Bar3 {           // { dg-warning \"shadowed declaration\" }\n+  struct Bar3 {           // { dg-message \"shadowed declaration\" }\n     int a;\n   };\n   struct Bar4 {           // { dg-bogus \"shadowed declaration\" }"}]}