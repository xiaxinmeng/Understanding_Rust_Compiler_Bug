{"sha": "33006d53fd3adf2baae85b625e3ec99908b7a31c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMwMDZkNTNmZDNhZGYyYmFhZTg1YjYyNWUzZWM5OTkwOGI3YTMxYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-02-16T09:04:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-02-16T09:04:00Z"}, "message": "re PR rtl-optimization/83723 (ICE: in gen_rtx_SUBREG, at emit-rtl.c:1010)\n\n\tPR rtl-optimization/83723\n\t* lra-int.h (lra_substitute_pseudo): Add DEBUG_P argument.\n\t* lra.c (lra_substitute_pseudo): Likewise.  If true, use\n\tgen_rtx_raw_SUBREG instead of gen_rtx_SUBREG.  Pass DEBUG_P to\n\trecursive calls.\n\t(lra_substitute_pseudo_within_insn): Adjust lra_substitute_pseudo\n\tcallers.\n\t* lra-constraints.c (inherit_reload_reg, split_reg): Likewise.\n\n\t* gcc.dg/pr83723.c: New test.\n\nFrom-SVN: r257725", "tree": {"sha": "d5f0990f699df7b85a6e9cdea483db0c2c48652a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5f0990f699df7b85a6e9cdea483db0c2c48652a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33006d53fd3adf2baae85b625e3ec99908b7a31c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33006d53fd3adf2baae85b625e3ec99908b7a31c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33006d53fd3adf2baae85b625e3ec99908b7a31c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33006d53fd3adf2baae85b625e3ec99908b7a31c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c9b34e397c61aa6aec556189bfeac329dee052a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9b34e397c61aa6aec556189bfeac329dee052a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9b34e397c61aa6aec556189bfeac329dee052a6"}], "stats": {"total": 68, "additions": 56, "deletions": 12}, "files": [{"sha": "76eee8a4b56326c647836d406d74e565ededa7f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33006d53fd3adf2baae85b625e3ec99908b7a31c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33006d53fd3adf2baae85b625e3ec99908b7a31c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33006d53fd3adf2baae85b625e3ec99908b7a31c", "patch": "@@ -1,3 +1,14 @@\n+2018-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/83723\n+\t* lra-int.h (lra_substitute_pseudo): Add DEBUG_P argument.\n+\t* lra.c (lra_substitute_pseudo): Likewise.  If true, use\n+\tgen_rtx_raw_SUBREG instead of gen_rtx_SUBREG.  Pass DEBUG_P to\n+\trecursive calls.\n+\t(lra_substitute_pseudo_within_insn): Adjust lra_substitute_pseudo\n+\tcallers.\n+\t* lra-constraints.c (inherit_reload_reg, split_reg): Likewise.\n+\n 2018-02-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/81443"}, {"sha": "9d22da232f456d36aef7b6bace56cffdf44bc63a", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33006d53fd3adf2baae85b625e3ec99908b7a31c/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33006d53fd3adf2baae85b625e3ec99908b7a31c/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=33006d53fd3adf2baae85b625e3ec99908b7a31c", "patch": "@@ -5287,7 +5287,8 @@ inherit_reload_reg (bool def_p, int original_regno,\n \t  lra_assert (DEBUG_INSN_P (usage_insn));\n \t  next_usage_insns = XEXP (next_usage_insns, 1);\n \t}\n-      lra_substitute_pseudo (&usage_insn, original_regno, new_reg, false);\n+      lra_substitute_pseudo (&usage_insn, original_regno, new_reg, false,\n+\t\t\t     DEBUG_INSN_P (usage_insn));\n       lra_update_insn_regno_info (as_a <rtx_insn *> (usage_insn));\n       if (lra_dump_file != NULL)\n \t{\n@@ -5608,7 +5609,8 @@ split_reg (bool before_p, int original_regno, rtx_insn *insn,\n       usage_insn = XEXP (next_usage_insns, 0);\n       lra_assert (DEBUG_INSN_P (usage_insn));\n       next_usage_insns = XEXP (next_usage_insns, 1);\n-      lra_substitute_pseudo (&usage_insn, original_regno, new_reg, false);\n+      lra_substitute_pseudo (&usage_insn, original_regno, new_reg, false,\n+\t\t\t     true);\n       lra_update_insn_regno_info (as_a <rtx_insn *> (usage_insn));\n       if (lra_dump_file != NULL)\n \t{"}, {"sha": "662bc4c14ed61ee368050dc10222c78cccc28f00", "filename": "gcc/lra-int.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33006d53fd3adf2baae85b625e3ec99908b7a31c/gcc%2Flra-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33006d53fd3adf2baae85b625e3ec99908b7a31c/gcc%2Flra-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-int.h?ref=33006d53fd3adf2baae85b625e3ec99908b7a31c", "patch": "@@ -309,7 +309,7 @@ extern void lra_update_dups (lra_insn_recog_data_t, signed char *);\n extern void lra_process_new_insns (rtx_insn *, rtx_insn *, rtx_insn *,\n \t\t\t\t   const char *);\n \n-extern bool lra_substitute_pseudo (rtx *, int, rtx, bool);\n+extern bool lra_substitute_pseudo (rtx *, int, rtx, bool, bool);\n extern bool lra_substitute_pseudo_within_insn (rtx_insn *, int, rtx, bool);\n \n extern lra_insn_recog_data_t lra_set_insn_recog_data (rtx_insn *);"}, {"sha": "c6feb2630bb38e1c26b1a5de2c75e165d2f2a020", "filename": "gcc/lra.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33006d53fd3adf2baae85b625e3ec99908b7a31c/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33006d53fd3adf2baae85b625e3ec99908b7a31c/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=33006d53fd3adf2baae85b625e3ec99908b7a31c", "patch": "@@ -1893,9 +1893,11 @@ lra_process_new_insns (rtx_insn *insn, rtx_insn *before, rtx_insn *after,\n \n /* Replace all references to register OLD_REGNO in *LOC with pseudo\n    register NEW_REG.  Try to simplify subreg of constant if SUBREG_P.\n-   Return true if any change was made.  */\n+   DEBUG_P is if LOC is within a DEBUG_INSN.  Return true if any\n+   change was made.  */\n bool\n-lra_substitute_pseudo (rtx *loc, int old_regno, rtx new_reg, bool subreg_p)\n+lra_substitute_pseudo (rtx *loc, int old_regno, rtx new_reg, bool subreg_p,\n+\t\t       bool debug_p)\n {\n   rtx x = *loc;\n   bool result = false;\n@@ -1931,11 +1933,14 @@ lra_substitute_pseudo (rtx *loc, int old_regno, rtx new_reg, bool subreg_p)\n       if (mode != inner_mode\n \t  && ! (CONST_INT_P (new_reg) && SCALAR_INT_MODE_P (mode)))\n \t{\n-\t  if (!partial_subreg_p (mode, inner_mode)\n-\t      || ! SCALAR_INT_MODE_P (inner_mode))\n-\t    new_reg = gen_rtx_SUBREG (mode, new_reg, 0);\n+\t  poly_uint64 offset = 0;\n+\t  if (partial_subreg_p (mode, inner_mode)\n+\t      && SCALAR_INT_MODE_P (inner_mode))\n+\t    offset = subreg_lowpart_offset (mode, inner_mode);\n+\t  if (debug_p)\n+\t    new_reg = gen_rtx_raw_SUBREG (mode, new_reg, offset);\n \t  else\n-\t    new_reg = gen_lowpart_SUBREG (mode, new_reg);\n+\t    new_reg = gen_rtx_SUBREG (mode, new_reg, offset);\n \t}\n       *loc = new_reg;\n       return true;\n@@ -1948,14 +1953,14 @@ lra_substitute_pseudo (rtx *loc, int old_regno, rtx new_reg, bool subreg_p)\n       if (fmt[i] == 'e')\n \t{\n \t  if (lra_substitute_pseudo (&XEXP (x, i), old_regno,\n-\t\t\t\t     new_reg, subreg_p))\n+\t\t\t\t     new_reg, subreg_p, debug_p))\n \t    result = true;\n \t}\n       else if (fmt[i] == 'E')\n \t{\n \t  for (j = XVECLEN (x, i) - 1; j >= 0; j--)\n \t    if (lra_substitute_pseudo (&XVECEXP (x, i, j), old_regno,\n-\t\t\t\t       new_reg, subreg_p))\n+\t\t\t\t       new_reg, subreg_p, debug_p))\n \t      result = true;\n \t}\n     }\n@@ -1970,7 +1975,8 @@ lra_substitute_pseudo_within_insn (rtx_insn *insn, int old_regno,\n \t\t\t\t   rtx new_reg, bool subreg_p)\n {\n   rtx loc = insn;\n-  return lra_substitute_pseudo (&loc, old_regno, new_reg, subreg_p);\n+  return lra_substitute_pseudo (&loc, old_regno, new_reg, subreg_p,\n+\t\t\t\tDEBUG_INSN_P (insn));\n }\n \n \f"}, {"sha": "64d0308ff01fc95f3381d2b25539baff7a355c30", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33006d53fd3adf2baae85b625e3ec99908b7a31c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33006d53fd3adf2baae85b625e3ec99908b7a31c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=33006d53fd3adf2baae85b625e3ec99908b7a31c", "patch": "@@ -1,3 +1,8 @@\n+2018-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/83723\n+\t* gcc.dg/pr83723.c: New test.\n+\n 2018-02-16  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/84399"}, {"sha": "a64fe9b56b9edb6e0b5fe92dc3496825cbfb41a8", "filename": "gcc/testsuite/gcc.dg/pr83723.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33006d53fd3adf2baae85b625e3ec99908b7a31c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83723.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33006d53fd3adf2baae85b625e3ec99908b7a31c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83723.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83723.c?ref=33006d53fd3adf2baae85b625e3ec99908b7a31c", "patch": "@@ -0,0 +1,20 @@\n+/* PR rtl-optimization/83723 */\n+/* { dg-do compile } */\n+/* { dg-options \"-g -O2\" } */\n+/* { dg-additional-options \"-mfpmath=sse -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-additional-options \"-fpie\" { target pie } } */\n+\n+int foo (void);\n+float bar (float);\n+int *v;\n+\n+void\n+baz (void)\n+{\n+  float a = bar (0.0);\n+  bar (a);\n+  if (v)\n+    bar (1.0);\n+  if (a < 1.0)\n+    a = foo () / a;\n+}"}]}