{"sha": "d4deddd7e92a3b559af36a8f832460ff00cc19fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRkZWRkZDdlOTJhM2I1NTlhZjM2YThmODMyNDYwZmYwMGNjMTlmYw==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2005-11-15T14:04:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-11-15T14:04:56Z"}, "message": "switch.adb (Bad_Switch): New procedure\n\n2005-11-14  Vincent Celier  <celier@adacore.com>\n\n\t* switch.adb (Bad_Switch): New procedure\n\t(Scan_Nat, Scan_Pos): Directly call Osint.Fail with the appropriate\n\tmessage when in error.\n\n\t* switch.ads (Bad_Switch, Bad_Switch_Value, Missing_Switch_Value,\n\tToo_Many_Output_Files): Remove declarations, no longer used.\n\t(Scan_Nat): New parameter Switch\n\t(Scan_Pos): Ditto\n\t(Bad_Switch): New procedure\n\n\t* switch-b.adb (Scan_Binder_Switches): Replace \"raise Bad_Switch;\"\n\twith call to new procedure Bad_Switch. Call Scan_Pos and Scan_Natwith\n\tnew parameter Switch. Replace \"raise Too_Many_Output_Files;\" with call\n\tto Osint.Fail. Do not handle any exception.\n\nFrom-SVN: r107011", "tree": {"sha": "91a514cf2a4b28fae991ff1a1824a9d2f353fdc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91a514cf2a4b28fae991ff1a1824a9d2f353fdc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4deddd7e92a3b559af36a8f832460ff00cc19fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4deddd7e92a3b559af36a8f832460ff00cc19fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4deddd7e92a3b559af36a8f832460ff00cc19fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4deddd7e92a3b559af36a8f832460ff00cc19fc/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "49c041e306a21fdf9d38d8d2b432d3573450693c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49c041e306a21fdf9d38d8d2b432d3573450693c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49c041e306a21fdf9d38d8d2b432d3573450693c"}], "stats": {"total": 112, "additions": 54, "deletions": 58}, "files": [{"sha": "f5beb05c4703e38e1bd4276022d7c67288ac7ee4", "filename": "gcc/ada/switch-b.adb", "status": "modified", "additions": 15, "deletions": 27, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4deddd7e92a3b559af36a8f832460ff00cc19fc/gcc%2Fada%2Fswitch-b.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4deddd7e92a3b559af36a8f832460ff00cc19fc/gcc%2Fada%2Fswitch-b.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-b.adb?ref=d4deddd7e92a3b559af36a8f832460ff00cc19fc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2001-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,7 +45,7 @@ package body Switch.B is\n       --  Skip past the initial character (must be the switch character)\n \n       if Ptr = Max then\n-         raise Bad_Switch;\n+         Bad_Switch (C);\n       else\n          Ptr := Ptr + 1;\n       end if;\n@@ -122,7 +122,7 @@ package body Switch.B is\n                then\n                   Set_Debug_Flag (C);\n                else\n-                  raise Bad_Switch;\n+                  Bad_Switch (C);\n                end if;\n             end loop;\n \n@@ -132,7 +132,8 @@ package body Switch.B is\n \n          when 'D' =>\n             Ptr := Ptr + 1;\n-            Scan_Pos (Switch_Chars, Max, Ptr, Default_Sec_Stack_Size);\n+            Scan_Pos\n+              (Switch_Chars, Max, Ptr, Default_Sec_Stack_Size, C);\n \n          --  Processing for e switch\n \n@@ -181,7 +182,7 @@ package body Switch.B is\n \n          when 'i' =>\n             if Ptr = Max then\n-               raise Bad_Switch;\n+               Bad_Switch (C);\n             end if;\n \n             Ptr := Ptr + 1;\n@@ -197,7 +198,7 @@ package body Switch.B is\n                Identifier_Character_Set := C;\n                Ptr := Ptr + 1;\n             else\n-               raise Bad_Switch;\n+               Bad_Switch (C);\n             end if;\n \n          --  Processing for K switch\n@@ -216,7 +217,7 @@ package body Switch.B is\n \n          when 'm' =>\n             Ptr := Ptr + 1;\n-            Scan_Pos (Switch_Chars, Max, Ptr, Maximum_Errors);\n+            Scan_Pos (Switch_Chars, Max, Ptr, Maximum_Errors, C);\n \n          --  Processing for n switch\n \n@@ -234,7 +235,7 @@ package body Switch.B is\n             Ptr := Ptr + 1;\n \n             if Output_File_Name_Present then\n-               raise Too_Many_Output_Files;\n+               Osint.Fail (\"duplicate -o switch\");\n \n             else\n                Output_File_Name_Present := True;\n@@ -282,7 +283,7 @@ package body Switch.B is\n          when 'T' =>\n             Ptr := Ptr + 1;\n             Time_Slice_Set := True;\n-            Scan_Nat (Switch_Chars, Max, Ptr, Time_Slice_Value);\n+            Scan_Nat (Switch_Chars, Max, Ptr, Time_Slice_Value, C);\n             Time_Slice_Value := Time_Slice_Value * 1_000;\n \n          --  Processing for v switch\n@@ -308,7 +309,7 @@ package body Switch.B is\n                   Warning_Mode  := Suppress;\n \n                when others =>\n-                  raise Bad_Switch;\n+                  Bad_Switch (C);\n             end case;\n \n             Ptr := Ptr + 1;\n@@ -324,7 +325,7 @@ package body Switch.B is\n                   exit;\n \n                elsif J = WC_Encoding_Method'Last then\n-                  raise Bad_Switch;\n+                  Bad_Switch (C);\n                end if;\n             end loop;\n \n@@ -345,7 +346,7 @@ package body Switch.B is\n \n          when 'X' =>\n             Ptr := Ptr + 1;\n-            Scan_Pos (Switch_Chars, Max, Ptr, Default_Exit_Status);\n+            Scan_Pos (Switch_Chars, Max, Ptr, Default_Exit_Status, C);\n \n          --  Processing for z switch\n \n@@ -402,7 +403,7 @@ package body Switch.B is\n                         RTS_Src_Path_Name := Src_Path_Name;\n                         RTS_Lib_Path_Name := Lib_Path_Name;\n \n-                        --  We can exit as there can not be another switch\n+                        --  We can exit as there cannot be another switch\n                         --  after --RTS\n \n                         exit;\n@@ -429,22 +430,9 @@ package body Switch.B is\n          --  Anything else is an error (illegal switch character)\n \n          when others =>\n-            raise Bad_Switch;\n+            Bad_Switch (C);\n          end case;\n       end loop;\n-\n-   exception\n-      when Bad_Switch =>\n-         Osint.Fail (\"invalid switch: \", (1 => C));\n-\n-      when Bad_Switch_Value =>\n-         Osint.Fail (\"numeric value out of range for switch: \", (1 => C));\n-\n-      when Missing_Switch_Value =>\n-         Osint.Fail (\"missing numeric value for switch: \", (1 => C));\n-\n-      when Too_Many_Output_Files =>\n-         Osint.Fail (\"duplicate -o switch\");\n    end Scan_Binder_Switches;\n \n end Switch.B;"}, {"sha": "048678bd19fbcc672e73d3001faa443e02b2c0fe", "filename": "gcc/ada/switch.adb", "status": "modified", "additions": 31, "deletions": 16, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4deddd7e92a3b559af36a8f832460ff00cc19fc/gcc%2Fada%2Fswitch.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4deddd7e92a3b559af36a8f832460ff00cc19fc/gcc%2Fada%2Fswitch.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch.adb?ref=d4deddd7e92a3b559af36a8f832460ff00cc19fc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,8 +24,19 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Osint;\n+\n package body Switch is\n \n+   ----------------\n+   -- Bad_Switch --\n+   ----------------\n+\n+   procedure Bad_Switch (Switch : Character) is\n+   begin\n+      Osint.Fail (\"invalid switch: \", (1 => Switch));\n+   end Bad_Switch;\n+\n    -------------------------\n    -- Is_Front_End_Switch --\n    -------------------------\n@@ -61,24 +72,27 @@ package body Switch is\n      (Switch_Chars : String;\n       Max          : Integer;\n       Ptr          : in out Integer;\n-      Result       : out Nat)\n+      Result       : out Nat;\n+      Switch       : Character)\n    is\n    begin\n       Result := 0;\n \n       if Ptr > Max or else Switch_Chars (Ptr) not in '0' .. '9' then\n-         raise Missing_Switch_Value;\n+         Osint.Fail (\"missing numeric value for switch: \", (1 => Switch));\n+\n+      else\n+         while Ptr <= Max and then Switch_Chars (Ptr) in '0' .. '9' loop\n+            Result := Result * 10 +\n+              Character'Pos (Switch_Chars (Ptr)) - Character'Pos ('0');\n+            Ptr := Ptr + 1;\n+\n+            if Result > Switch_Max_Value then\n+               Osint.Fail\n+                 (\"numeric value out of range for switch: \", (1 => Switch));\n+            end if;\n+         end loop;\n       end if;\n-\n-      while Ptr <= Max and then Switch_Chars (Ptr) in '0' .. '9' loop\n-         Result := Result * 10 +\n-           Character'Pos (Switch_Chars (Ptr)) - Character'Pos ('0');\n-         Ptr := Ptr + 1;\n-\n-         if Result > Switch_Max_Value then\n-            raise Bad_Switch_Value;\n-         end if;\n-      end loop;\n    end Scan_Nat;\n \n    --------------\n@@ -89,15 +103,16 @@ package body Switch is\n      (Switch_Chars : String;\n       Max          : Integer;\n       Ptr          : in out Integer;\n-      Result       : out Pos)\n+      Result       : out Pos;\n+      Switch       : Character)\n    is\n       Temp : Nat;\n \n    begin\n-      Scan_Nat (Switch_Chars, Max, Ptr, Temp);\n+      Scan_Nat (Switch_Chars, Max, Ptr, Temp, Switch);\n \n       if Temp = 0 then\n-         raise Bad_Switch_Value;\n+         Osint.Fail (\"numeric value out of range for switch: \", (1 => Switch));\n       end if;\n \n       Result := Temp;"}, {"sha": "15c273f829c5811d7668351fef7b3f7ddc35b4a3", "filename": "gcc/ada/switch.ads", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4deddd7e92a3b559af36a8f832460ff00cc19fc/gcc%2Fada%2Fswitch.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4deddd7e92a3b559af36a8f832460ff00cc19fc/gcc%2Fada%2Fswitch.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch.ads?ref=d4deddd7e92a3b559af36a8f832460ff00cc19fc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,26 +62,15 @@ private\n    --  child packages (there is one such child package for each tool that\n    --  uses Switches to scan switches - Compiler/gnatbind/gnatmake/.\n \n-   Bad_Switch : exception;\n-   --  Exception raised if bad switch encountered\n-\n-   Bad_Switch_Value : exception;\n-   --  Exception raised if bad switch value encountered\n-\n-   Missing_Switch_Value : exception;\n-   --  Exception raised if no switch value encountered\n-\n-   Too_Many_Output_Files : exception;\n-   --  Exception raised if the -o switch is encountered more than once\n-\n    Switch_Max_Value : constant := 999_999;\n    --  Maximum value permitted in switches that take a value\n \n    procedure Scan_Nat\n      (Switch_Chars : String;\n       Max          : Integer;\n       Ptr          : in out Integer;\n-      Result       : out Nat);\n+      Result       : out Nat;\n+      Switch       : Character);\n    --  Scan natural integer parameter for switch. On entry, Ptr points\n    --  just past the switch character, on exit it points past the last\n    --  digit of the integer value.\n@@ -90,9 +79,13 @@ private\n      (Switch_Chars : String;\n       Max          : Integer;\n       Ptr          : in out Integer;\n-      Result       : out Pos);\n+      Result       : out Pos;\n+      Switch       : Character);\n    --  Scan positive integer parameter for switch. On entry, Ptr points\n    --  just past the switch character, on exit it points past the last\n    --  digit of the integer value.\n \n+   procedure Bad_Switch (Switch : Character);\n+   --  Fail with an appropriate message when a switch is not recognized\n+\n end Switch;"}]}