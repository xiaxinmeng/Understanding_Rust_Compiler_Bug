{"sha": "7f9d9ea1ff544fd1ea3a510dbafddb2d0c95472c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y5ZDllYTFmZjU0NGZkMWVhM2E1MTBkYmFmZGRiMmQwYzk1NDcyYw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-05-16T06:21:04Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-05-16T06:21:04Z"}, "message": "ifcvt.c (cond_exec_process_insns): Drop USE and CLOBBER insns that get in the way after reload.\n\n        * ifcvt.c (cond_exec_process_insns): Drop USE and CLOBBER insns\n        that get in the way after reload.\n        (cond_exec_process_if_block): Skip a label heading THEN block.\n\nFrom-SVN: r33923", "tree": {"sha": "1b55b6444bd17bd7241a921e165045e73a41c3fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b55b6444bd17bd7241a921e165045e73a41c3fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f9d9ea1ff544fd1ea3a510dbafddb2d0c95472c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f9d9ea1ff544fd1ea3a510dbafddb2d0c95472c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f9d9ea1ff544fd1ea3a510dbafddb2d0c95472c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f9d9ea1ff544fd1ea3a510dbafddb2d0c95472c/comments", "author": null, "committer": null, "parents": [{"sha": "085ce8c6aceb12dbb1fb9ba9bec6c014d65f0445", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/085ce8c6aceb12dbb1fb9ba9bec6c014d65f0445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/085ce8c6aceb12dbb1fb9ba9bec6c014d65f0445"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "d867b3e731c17054f4a2f24384ba4b0665a47156", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f9d9ea1ff544fd1ea3a510dbafddb2d0c95472c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f9d9ea1ff544fd1ea3a510dbafddb2d0c95472c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f9d9ea1ff544fd1ea3a510dbafddb2d0c95472c", "patch": "@@ -1,3 +1,9 @@\n+2000-05-15  Richard Henderson  <rth@cygnus.com>\n+\n+\t* ifcvt.c (cond_exec_process_insns): Drop USE and CLOBBER insns\n+\tthat get in the way after reload.\n+\t(cond_exec_process_if_block): Skip a label heading THEN block.\n+\n 2000-05-15  Richard Henderson  <rth@cygnus.com>\n \n \t* varasm.c (output_constant_pool): Abort instead of converting"}, {"sha": "24036513b655b0a8f6471146e48fa23b16c21319", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f9d9ea1ff544fd1ea3a510dbafddb2d0c95472c/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f9d9ea1ff544fd1ea3a510dbafddb2d0c95472c/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=7f9d9ea1ff544fd1ea3a510dbafddb2d0c95472c", "patch": "@@ -197,6 +197,19 @@ cond_exec_process_insns (start, end, test, prob_val, mod_ok)\n       if (GET_CODE (insn) != INSN && GET_CODE (insn) != CALL_INSN)\n \tabort ();\n \n+      /* Remove USE and CLOBBER insns that get in the way.  */\n+      if (reload_completed\n+\t  && (GET_CODE (PATTERN (insn)) == USE\n+\t      || GET_CODE (PATTERN (insn)) == CLOBBER))\n+\t{\n+\t  /* ??? Ug.  Actually unlinking the thing is problematic, \n+\t     given what we'd have to coordinate with our callers.  */\n+\t  PUT_CODE (insn, NOTE);\n+\t  NOTE_LINE_NUMBER (insn) = NOTE_INSN_DELETED;\n+\t  NOTE_SOURCE_FILE (insn) = 0;\n+\t  goto insn_done;\n+\t}\n+\n       /* Last insn wasn't last?  */\n       if (must_be_last)\n \treturn FALSE;\n@@ -288,6 +301,10 @@ cond_exec_process_if_block (test_bb, then_bb, else_bb, join_bb)\n   then_start = then_bb->head;\n   then_end = then_bb->end;\n \n+  /* Skip a label heading THEN block.  */\n+  if (GET_CODE (then_start) == CODE_LABEL)\n+    then_start = NEXT_INSN (then_start);\n+\n   /* Skip a (use (const_int 0)) or branch as the final insn.  */\n   if (GET_CODE (then_end) == INSN\n       && GET_CODE (PATTERN (then_end)) == USE"}]}