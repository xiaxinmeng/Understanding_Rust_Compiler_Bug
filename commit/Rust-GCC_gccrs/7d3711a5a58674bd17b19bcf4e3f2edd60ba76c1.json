{"sha": "7d3711a5a58674bd17b19bcf4e3f2edd60ba76c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QzNzExYTVhNTg2NzRiZDE3YjE5YmNmNGUzZjJlZGQ2MGJhNzZjMQ==", "commit": {"author": {"name": "Mike Frysinger", "email": "vapier@gentoo.org", "date": "2021-05-12T04:26:17Z"}, "committer": {"name": "Mike Frysinger", "email": "vapier@gentoo.org", "date": "2021-05-18T15:07:27Z"}, "message": "config: delete unused sim macros\n\nNothing in gcc or binutils or gdb or anything anywhere uses these.\n\nconfig/\n\n\t* acinclude.m4 (CYG_AC_PATH_SIM, CYG_AC_PATH_DEVO): Delete.", "tree": {"sha": "af629d58bbb6e0fe1b53133788255d124073a024", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af629d58bbb6e0fe1b53133788255d124073a024"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d3711a5a58674bd17b19bcf4e3f2edd60ba76c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d3711a5a58674bd17b19bcf4e3f2edd60ba76c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d3711a5a58674bd17b19bcf4e3f2edd60ba76c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d3711a5a58674bd17b19bcf4e3f2edd60ba76c1/comments", "author": {"login": "vapier", "id": 176950, "node_id": "MDQ6VXNlcjE3Njk1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vapier", "html_url": "https://github.com/vapier", "followers_url": "https://api.github.com/users/vapier/followers", "following_url": "https://api.github.com/users/vapier/following{/other_user}", "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vapier/subscriptions", "organizations_url": "https://api.github.com/users/vapier/orgs", "repos_url": "https://api.github.com/users/vapier/repos", "events_url": "https://api.github.com/users/vapier/events{/privacy}", "received_events_url": "https://api.github.com/users/vapier/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vapier", "id": 176950, "node_id": "MDQ6VXNlcjE3Njk1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vapier", "html_url": "https://github.com/vapier", "followers_url": "https://api.github.com/users/vapier/followers", "following_url": "https://api.github.com/users/vapier/following{/other_user}", "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vapier/subscriptions", "organizations_url": "https://api.github.com/users/vapier/orgs", "repos_url": "https://api.github.com/users/vapier/repos", "events_url": "https://api.github.com/users/vapier/events{/privacy}", "received_events_url": "https://api.github.com/users/vapier/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc193ac840d58ee0ffb57b14b542706cde3db0e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc193ac840d58ee0ffb57b14b542706cde3db0e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc193ac840d58ee0ffb57b14b542706cde3db0e7"}], "stats": {"total": 102, "additions": 0, "deletions": 102}, "files": [{"sha": "0abccafa03539500b0fb3b1d3ec2c771343283b3", "filename": "config/acinclude.m4", "status": "modified", "additions": 0, "deletions": 102, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d3711a5a58674bd17b19bcf4e3f2edd60ba76c1/config%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d3711a5a58674bd17b19bcf4e3f2edd60ba76c1/config%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Facinclude.m4?ref=7d3711a5a58674bd17b19bcf4e3f2edd60ba76c1", "patch": "@@ -373,88 +373,6 @@ fi\n AC_SUBST(INTLLIB)\n ])\n \n-dnl ====================================================================\n-dnl Find the simulator library.\n-AC_DEFUN([CYG_AC_PATH_SIM], [\n-dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../.. ../../../../../../../../../..\"\n-case \"$target_cpu\" in\n-    powerpc)\ttarget_dir=ppc ;;\n-    sparc*)\ttarget_dir=erc32 ;;\n-    mips*)\ttarget_dir=mips ;;\n-    *)\t\ttarget_dir=$target_cpu ;;\n-esac\n-dnl First look for the header file\n-AC_MSG_CHECKING(for the simulator header file)\n-AC_CACHE_VAL(ac_cv_c_simh,[\n-for i in $dirlist; do\n-    if test -f \"${srcdir}/$i/include/remote-sim.h\" ; then\n-\tac_cv_c_simh=`(cd ${srcdir}/$i/include; ${PWDCMD-pwd})`\n-\tbreak\n-    fi\n-done\n-])\n-if test x\"${ac_cv_c_simh}\" != x; then\n-    SIMHDIR=\"-I${ac_cv_c_simh}\"\n-    AC_MSG_RESULT(${ac_cv_c_simh})\n-else\n-    AC_MSG_RESULT(none)\n-fi\n-AC_SUBST(SIMHDIR)\n-\n-dnl See whether it's a devo or Foundry branch simulator\n-AC_MSG_CHECKING(Whether this is a devo simulator )\n-AC_CACHE_VAL(ac_cv_c_simdevo,[\n-    CPPFLAGS=\"$CPPFLAGS $SIMHDIR\"\n-    AC_EGREP_HEADER([SIM_DESC sim_open.*struct _bfd], remote-sim.h,\n-        ac_cv_c_simdevo=yes,\n-        ac_cv_c_simdevo=no)\n-])\n-if test x\"$ac_cv_c_simdevo\" = x\"yes\" ; then\n-    AC_DEFINE(HAVE_DEVO_SIM)\n-fi\n-AC_MSG_RESULT(${ac_cv_c_simdevo})\n-AC_SUBST(HAVE_DEVO_SIM)\n-\n-dnl Next look for the library\n-AC_MSG_CHECKING(for the simulator library)\n-AC_CACHE_VAL(ac_cv_c_simlib,[\n-for i in $dirlist; do\n-    if test -f \"$i/sim/$target_dir/Makefile\" ; then\n-\tac_cv_c_simlib=`(cd $i/sim/$target_dir; ${PWDCMD-pwd})`\n-    fi\n-done\n-])\n-if test x\"${ac_cv_c_simlib}\" != x; then\n-    SIMLIB=\"-L${ac_cv_c_simlib}\"\n-else\n-    AC_MSG_RESULT(none)\n-    dnl FIXME: this is kinda bogus, cause umtimately the TM will build\n-    dnl all the libraries for several architectures. But for now, this\n-    dnl will work till then.\n-dnl     AC_MSG_CHECKING(for the simulator installed with the compiler libraries)\n-    dnl Transform the name of the compiler to it's cross variant, unless\n-    dnl CXX is set. This is also what CXX gets set to in the generated\n-    dnl Makefile.\n-    CROSS_GCC=`echo gcc | sed -e \"s/^/$target/\"`\n-\n-    dnl Get G++'s full path to libgcc.a\n-changequote(,)\n-    gccpath=`${CROSS_GCC} --print-libgcc | sed -e 's:[a-z0-9A-Z\\.\\-]*/libgcc.a::' -e 's:lib/gcc-lib/::'`lib\n-changequote([,])\n-    if test -f $gccpath/libsim.a -o -f $gccpath/libsim.so ; then\n-        ac_cv_c_simlib=\"$gccpath/\"\n-        SIMLIB=\"-L${ac_cv_c_simlib}\"\n-\tAC_MSG_RESULT(${ac_cv_c_simlib})\n-    else\n-        AM_CONDITIONAL(PSIM, test x$psim = xno)\n-\tSIMLIB=\"\"\n-\tAC_MSG_RESULT(none)\n-dnl         ac_cv_c_simlib=none\n-    fi\n-fi\n-AC_SUBST(SIMLIB)\n-])\n-\n dnl ====================================================================\n dnl Find the libiberty library.\n AC_DEFUN([CYG_AC_PATH_LIBIBERTY], [\n@@ -476,26 +394,6 @@ fi\n AC_SUBST(LIBIBERTY)\n ])\n \n-dnl ====================================================================\n-AC_DEFUN([CYG_AC_PATH_DEVO], [\n-AC_MSG_CHECKING(for devo headers in the source tree)\n-dirlist=\".. ../../ ../../../ ../../../../ ../../../../../ ../../../../../../ ../../../../../../.. ../../../../../../../.. ../../../../../../../../.. ../../../../../../../../../..\"\n-AC_CACHE_VAL(ac_cv_c_devoh,[\n-for i in $dirlist; do\n-    if test -f \"${srcdir}/$i/include/remote-sim.h\" ; then\n-\tac_cv_c_devoh=`(cd ${srcdir}/$i/include; ${PWDCMD-pwd})`\n-    fi\n-done\n-])\n-if test x\"${ac_cv_c_devoh}\" != x; then\n-    DEVOHDIR=\"-I${ac_cv_c_devoh}\"\n-    AC_MSG_RESULT(${ac_cv_c_devoh})\n-else\n-    AC_MSG_RESULT(none)\n-fi\n-AC_SUBST(DEVOHDIR)\n-])\n-\n dnl ====================================================================\n dnl Find all the ILU headers and libraries\n AC_DEFUN([CYG_AC_PATH_ILU], ["}]}