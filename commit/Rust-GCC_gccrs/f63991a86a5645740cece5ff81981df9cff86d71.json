{"sha": "f63991a86a5645740cece5ff81981df9cff86d71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYzOTkxYTg2YTU2NDU3NDBjZWNlNWZmODE5ODFkZjljZmY4NmQ3MQ==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1999-11-01T09:45:18Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1999-11-01T09:45:18Z"}, "message": "re GNATS gcj/48 (Compiler fails to catch constructor problem)\n\nMon Nov  1 01:32:48 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n\t* parse.y (resolve_qualified_expression_name): Prevent `this'\n \tfrom being before the superclass constructor has been called.\n\n(This fixes the net PR #48:\n http://sourceware.cygnus.com/ml/java-prs/1999-q3/msg00106.html)\n\nFrom-SVN: r30317", "tree": {"sha": "1ce1bf40843d04ca1d2d20346b636dfcc66fe602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ce1bf40843d04ca1d2d20346b636dfcc66fe602"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f63991a86a5645740cece5ff81981df9cff86d71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63991a86a5645740cece5ff81981df9cff86d71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f63991a86a5645740cece5ff81981df9cff86d71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63991a86a5645740cece5ff81981df9cff86d71/comments", "author": null, "committer": null, "parents": [{"sha": "e5de8c72837aa699f506820ab4020e2b7bf39437", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5de8c72837aa699f506820ab4020e2b7bf39437", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5de8c72837aa699f506820ab4020e2b7bf39437"}], "stats": {"total": 35, "additions": 27, "deletions": 8}, "files": [{"sha": "142975f90a649986fb2aca48ad91bd7e6b10706b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63991a86a5645740cece5ff81981df9cff86d71/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63991a86a5645740cece5ff81981df9cff86d71/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=f63991a86a5645740cece5ff81981df9cff86d71", "patch": "@@ -1,3 +1,8 @@\n+Mon Nov  1 01:32:48 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (resolve_qualified_expression_name): Prevent `this'\n+ \tfrom being before the superclass constructor has been called.\n+\n Sat Oct 30 21:35:13 1999  Todd T. Fries <todd@lighthouse.fries.net>\n \n \t* check-init.c: Fix typo in comment."}, {"sha": "d97838244785d92709b13515fd779104a4092dcf", "filename": "gcc/java/parse.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63991a86a5645740cece5ff81981df9cff86d71/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63991a86a5645740cece5ff81981df9cff86d71/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=f63991a86a5645740cece5ff81981df9cff86d71", "patch": "@@ -2238,7 +2238,7 @@ static const short yycheck[] = {     3,\n #define YYPURE 1\n \n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/cygnus/gnupro-98r1/share/bison.simple\"\n+#line 3 \"/usr/share/misc/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -2255,7 +2255,7 @@ static const short yycheck[] = {     3,\n \n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n-   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n \n /* As a special exception, when this file is copied by Bison into a\n    Bison output file, you may use that output file without restriction.\n@@ -2389,8 +2389,10 @@ int yydebug;\t\t\t/*  nonzero means print parse trace\t*/\n \n /* Prevent warning if -Wstrict-prototypes.  */\n #ifdef __GNUC__\n+#ifndef YYPARSE_PARAM\n int yyparse (void);\n #endif\n+#endif\n \f\n #if __GNUC__ > 1\t\t/* GNU C and GNU C++ define this.  */\n #define __yy_memcpy(TO,FROM,COUNT)\t__builtin_memcpy(TO,FROM,COUNT)\n@@ -2431,7 +2433,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/cygnus/gnupro-98r1/share/bison.simple\"\n+#line 196 \"/usr/share/misc/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -4718,7 +4720,7 @@ case 495:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/cygnus/gnupro-98r1/share/bison.simple\"\n+#line 498 \"/usr/share/misc/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -9310,6 +9312,12 @@ resolve_qualified_expression_name (wfl, found_decl, where_found, type_found)\n \t\t(wfl, \"Keyword `this' used outside allowed context\");\n \t      return 1;\n \t    }\n+\t  if (ctxp->explicit_constructor_p)\n+\t    {\n+\t      parse_error_context (wfl, \"Can't reference `this' before the \"\n+\t\t\t\t   \"superclass constructor has been called\");\n+\t      return 1;\n+\t    }\n \t  /* We have to generate code for intermediate acess */\n \t  *where_found = decl = current_this;\n \t  *type_found = type = QUAL_DECL_TYPE (decl);\n@@ -11317,7 +11325,7 @@ complete_function_arguments (node)\n   int flag = 0;\n   tree cn;\n \n-  ctxp->explicit_constructor_p += (CALL_THIS_CONSTRUCTOR_P (node) ? 1 : 0);\n+  ctxp->explicit_constructor_p += (CALL_EXPLICIT_CONSTRUCTOR_P (node) ? 1 : 0);\n   for (cn = TREE_OPERAND (node, 1); cn; cn = TREE_CHAIN (cn))\n     {\n       tree wfl = TREE_VALUE (cn), parm, temp;\n@@ -11337,7 +11345,7 @@ complete_function_arguments (node)\n \n       TREE_VALUE (cn) = parm;\n     }\n-  ctxp->explicit_constructor_p -= (CALL_THIS_CONSTRUCTOR_P (node) ? 1 : 0);\n+  ctxp->explicit_constructor_p -= (CALL_EXPLICIT_CONSTRUCTOR_P (node) ? 1 : 0);\n   return flag;\n }\n "}, {"sha": "aa53706971780cc9ad0f027b0359c0ffc08f5fda", "filename": "gcc/java/parse.y", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63991a86a5645740cece5ff81981df9cff86d71/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63991a86a5645740cece5ff81981df9cff86d71/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=f63991a86a5645740cece5ff81981df9cff86d71", "patch": "@@ -6725,6 +6725,12 @@ resolve_qualified_expression_name (wfl, found_decl, where_found, type_found)\n \t\t(wfl, \"Keyword `this' used outside allowed context\");\n \t      return 1;\n \t    }\n+\t  if (ctxp->explicit_constructor_p)\n+\t    {\n+\t      parse_error_context (wfl, \"Can't reference `this' before the \"\n+\t\t\t\t   \"superclass constructor has been called\");\n+\t      return 1;\n+\t    }\n \t  /* We have to generate code for intermediate acess */\n \t  *where_found = decl = current_this;\n \t  *type_found = type = QUAL_DECL_TYPE (decl);\n@@ -8732,7 +8738,7 @@ complete_function_arguments (node)\n   int flag = 0;\n   tree cn;\n \n-  ctxp->explicit_constructor_p += (CALL_THIS_CONSTRUCTOR_P (node) ? 1 : 0);\n+  ctxp->explicit_constructor_p += (CALL_EXPLICIT_CONSTRUCTOR_P (node) ? 1 : 0);\n   for (cn = TREE_OPERAND (node, 1); cn; cn = TREE_CHAIN (cn))\n     {\n       tree wfl = TREE_VALUE (cn), parm, temp;\n@@ -8752,7 +8758,7 @@ complete_function_arguments (node)\n \n       TREE_VALUE (cn) = parm;\n     }\n-  ctxp->explicit_constructor_p -= (CALL_THIS_CONSTRUCTOR_P (node) ? 1 : 0);\n+  ctxp->explicit_constructor_p -= (CALL_EXPLICIT_CONSTRUCTOR_P (node) ? 1 : 0);\n   return flag;\n }\n "}]}