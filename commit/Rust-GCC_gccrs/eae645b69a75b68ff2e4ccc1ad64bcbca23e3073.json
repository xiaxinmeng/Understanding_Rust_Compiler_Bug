{"sha": "eae645b69a75b68ff2e4ccc1ad64bcbca23e3073", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFlNjQ1YjY5YTc1YjY4ZmYyZTRjY2MxYWQ2NGJjYmNhMjNlMzA3Mw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-11-28T19:46:03Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-11-28T19:46:03Z"}, "message": "re PR target/32406 (MIPS: FAIL in nestfunc-6.c at -O3)\n\ngcc/\n\tPR target/32406\n\t* builtins.c (expand_builtin_nonlocal_goto): Also emit a use\n\tof GP register, if valid and fixed.\n\n\tRevert:\n\t2007-06-21  David Daney  <ddaney@avtrex.com>\n\n\tPR target/32406\n\t* config/mips/mips.md (define_constants): Rename UNSPEC_EH_RECEIVER\n\tto UNSPEC_NONLOCAL_GOTO_RECEIVER globally.\n\t(exception_receiver): Renamed to ...\n\t(nonlocal_goto_receiver): ... this.\n\nFrom-SVN: r130493", "tree": {"sha": "f4679ac3745b7ba7f25adf0b8a7f54cdf903cad4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4679ac3745b7ba7f25adf0b8a7f54cdf903cad4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eae645b69a75b68ff2e4ccc1ad64bcbca23e3073", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eae645b69a75b68ff2e4ccc1ad64bcbca23e3073", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eae645b69a75b68ff2e4ccc1ad64bcbca23e3073", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eae645b69a75b68ff2e4ccc1ad64bcbca23e3073/comments", "author": null, "committer": null, "parents": [{"sha": "36cefd39222098287e7bfbcfca5b2450673432fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36cefd39222098287e7bfbcfca5b2450673432fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36cefd39222098287e7bfbcfca5b2450673432fa"}], "stats": {"total": 35, "additions": 32, "deletions": 3}, "files": [{"sha": "34f345377c5841ff4c1d895759696cf48e95831e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae645b69a75b68ff2e4ccc1ad64bcbca23e3073/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae645b69a75b68ff2e4ccc1ad64bcbca23e3073/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eae645b69a75b68ff2e4ccc1ad64bcbca23e3073", "patch": "@@ -1,3 +1,18 @@\n+2007-11-28  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\tPR target/32406\n+\t* builtins.c (expand_builtin_nonlocal_goto): Also emit a use\n+\tof GP register, if valid and fixed.\n+\n+\tRevert:\n+\t2007-06-21  David Daney  <ddaney@avtrex.com>\n+\n+\tPR target/32406\n+\t* config/mips/mips.md (define_constants): Rename UNSPEC_EH_RECEIVER\n+\tto UNSPEC_NONLOCAL_GOTO_RECEIVER globally.\n+\t(exception_receiver): Renamed to ...\n+\t(nonlocal_goto_receiver): ... this.\n+\n 2007-11-27  H.J. Lu  <hongjiu.lu@intel.com>\n \t    Joey Ye <joey.ye@intel.com>\n "}, {"sha": "630cd2506ecb6f6a3ad8e27ce0c030f7d1b6b29a", "filename": "gcc/builtins.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae645b69a75b68ff2e4ccc1ad64bcbca23e3073/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae645b69a75b68ff2e4ccc1ad64bcbca23e3073/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=eae645b69a75b68ff2e4ccc1ad64bcbca23e3073", "patch": "@@ -909,6 +909,20 @@ expand_builtin_nonlocal_goto (tree exp)\n \t not clear if really needed.  */\n       emit_insn (gen_rtx_USE (VOIDmode, hard_frame_pointer_rtx));\n       emit_insn (gen_rtx_USE (VOIDmode, stack_pointer_rtx));\n+\n+      /* If the architecture is using a GP register, we must\n+\t conservatively assume that the target function makes use of it.\n+\t The prologue of functions with nonlocal gotos must therefore\n+\t initialize the GP register to the appropriate value, and we\n+\t must then make sure that this value is live at the point\n+\t of the jump.  (Note that this doesn't necessarily apply\n+\t to targets with a nonlocal_goto pattern; they are free\n+\t to implement it in their own way.  Note also that this is\n+\t a no-op if the GP register is a global invariant.)  */\n+      if ((unsigned) PIC_OFFSET_TABLE_REGNUM != INVALID_REGNUM\n+\t  && fixed_regs[PIC_OFFSET_TABLE_REGNUM])\n+\temit_insn (gen_rtx_USE (VOIDmode, pic_offset_table_rtx));\n+\n       emit_indirect_jump (r_label);\n     }\n "}, {"sha": "f1225f61386c4d306905cadfc6096ef493bbeee3", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae645b69a75b68ff2e4ccc1ad64bcbca23e3073/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae645b69a75b68ff2e4ccc1ad64bcbca23e3073/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=eae645b69a75b68ff2e4ccc1ad64bcbca23e3073", "patch": "@@ -30,7 +30,7 @@\n    (UNSPEC_GET_FNADDR\t\t 3)\n    (UNSPEC_BLOCKAGE\t\t 4)\n    (UNSPEC_CPRESTORE\t\t 5)\n-   (UNSPEC_NONLOCAL_GOTO_RECEIVER 6)\n+   (UNSPEC_EH_RECEIVER\t\t 6)\n    (UNSPEC_EH_RETURN\t\t 7)\n    (UNSPEC_CONSTTABLE_INT\t 8)\n    (UNSPEC_CONSTTABLE_FLOAT\t 9)\n@@ -5598,9 +5598,9 @@\n   DONE;\n })\n \n-(define_insn_and_split \"nonlocal_goto_receiver\"\n+(define_insn_and_split \"exception_receiver\"\n   [(set (reg:SI 28)\n-\t(unspec_volatile:SI [(const_int 0)] UNSPEC_NONLOCAL_GOTO_RECEIVER))]\n+\t(unspec_volatile:SI [(const_int 0)] UNSPEC_EH_RECEIVER))]\n   \"TARGET_CALL_CLOBBERED_GP\"\n   \"#\"\n   \"&& reload_completed\""}]}