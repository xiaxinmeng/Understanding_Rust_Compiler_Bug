{"sha": "32115be843e3d7bd344b1e899deee27aef9a3b65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIxMTViZTg0M2UzZDdiZDM0NGIxZTg5OWRlZWUyN2FlZjlhM2I2NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-02-05T17:02:03Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-05T12:17:51Z"}, "message": "[Ada] Make the Has_Dynamic_Range_Check flag obsolete\n\n2020-06-05  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* atree.adb (New_Copy): Clear Has_Dynamic_Range_Check on\n\tsubexpression nodes.\n\t* checks.adb (Append_Range_Checks): Assert that the node\n\tdoesn't have the Has_Dynamic_Range_Check flag set.\n\t(Insert_Range_Checks): Likewise.\n\t* exp_ch3.adb (Expand_N_Subtype_Indication): Do not apply\n\trange checks for a full type or object declaration.\n\t* sem_ch3.ads: Move with and use clauses for Nlists to...\n\t(Process_Range_Expr_In_Decl): Change default to No_List for\n\tthe Check_List parameter.\n\t* sem_ch3.adb: ...here.\n\t(Process_Range_Expr_In_Decl): Likewise.  When the insertion\n\tnode is a declaration, only insert on the list if is present\n\twhen the declaration involves discriminants, and only insert\n\ton the node when there is no list otherwise.", "tree": {"sha": "c1e21353c59aaa1abbf792e0e289ebba6579525b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1e21353c59aaa1abbf792e0e289ebba6579525b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32115be843e3d7bd344b1e899deee27aef9a3b65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32115be843e3d7bd344b1e899deee27aef9a3b65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32115be843e3d7bd344b1e899deee27aef9a3b65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32115be843e3d7bd344b1e899deee27aef9a3b65/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ad46f04488199557f2b407f8d10839ef5c6e604", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ad46f04488199557f2b407f8d10839ef5c6e604", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ad46f04488199557f2b407f8d10839ef5c6e604"}], "stats": {"total": 67, "additions": 45, "deletions": 22}, "files": [{"sha": "d7686fa5868e1a40fd1c5de495ea9aba28753bfe", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32115be843e3d7bd344b1e899deee27aef9a3b65/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32115be843e3d7bd344b1e899deee27aef9a3b65/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=32115be843e3d7bd344b1e899deee27aef9a3b65", "patch": "@@ -1659,6 +1659,12 @@ package body Atree is\n          Nodes.Table (New_Id).Rewrite_Ins := False;\n          pragma Debug (New_Node_Debugging_Output (New_Id));\n \n+         --  Clear Has_Dynamic_Range_Check since it doesn't apply anymore\n+\n+         if Nkind (Source) in N_Subexpr then\n+            Set_Has_Dynamic_Range_Check (New_Id, False);\n+         end if;\n+\n          --  Clear Is_Overloaded since we cannot have semantic interpretations\n          --  of this new node.\n "}, {"sha": "744c8a41e338e1e25e0d17b0c4786a36ce050ea7", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32115be843e3d7bd344b1e899deee27aef9a3b65/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32115be843e3d7bd344b1e899deee27aef9a3b65/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=32115be843e3d7bd344b1e899deee27aef9a3b65", "patch": "@@ -514,7 +514,11 @@ package body Checks is\n          if Nkind (Checks (J)) = N_Raise_Constraint_Error\n            and then Present (Condition (Checks (J)))\n          then\n-            if not Has_Dynamic_Range_Check (Internal_Flag_Node) then\n+            if Has_Dynamic_Range_Check (Internal_Flag_Node) then\n+               pragma Assert (False);\n+               null;\n+\n+            else\n                Append_To (Stmts, Checks (J));\n                Set_Has_Dynamic_Range_Check (Internal_Flag_Node);\n             end if;\n@@ -7470,7 +7474,11 @@ package body Checks is\n          if Nkind (Checks (J)) = N_Raise_Constraint_Error\n            and then Present (Condition (Checks (J)))\n          then\n-            if not Has_Dynamic_Range_Check (Internal_Flag_Node) then\n+            if Has_Dynamic_Range_Check (Internal_Flag_Node) then\n+               pragma Assert (False);\n+               null;\n+\n+            else\n                Check_Node := Checks (J);\n                Mark_Rewrite_Insertion (Check_Node);\n "}, {"sha": "a977e4f8e7b052150d477999aa78fb7b86acb3a7", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32115be843e3d7bd344b1e899deee27aef9a3b65/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32115be843e3d7bd344b1e899deee27aef9a3b65/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=32115be843e3d7bd344b1e899deee27aef9a3b65", "patch": "@@ -7294,10 +7294,7 @@ package body Exp_Ch3 is\n    -- Expand_N_Subtype_Indication --\n    ---------------------------------\n \n-   --  Add a check on the range of the subtype. The static case is partially\n-   --  duplicated by Process_Range_Expr_In_Decl in Sem_Ch3, but we still need\n-   --  to check here for the static case in order to avoid generating\n-   --  extraneous expanded code. Also deal with validity checking.\n+   --  Add a check on the range of the subtype and deal with validity checking\n \n    procedure Expand_N_Subtype_Indication (N : Node_Id) is\n       Ran : constant Node_Id   := Range_Expression (Constraint (N));\n@@ -7308,7 +7305,12 @@ package body Exp_Ch3 is\n          Validity_Check_Range (Range_Expression (Constraint (N)));\n       end if;\n \n-      if Nkind_In (Parent (N), N_Constrained_Array_Definition, N_Slice) then\n+      --  Do not duplicate the work of Process_Range_Expr_In_Decl in Sem_Ch3\n+\n+      if Nkind_In (Parent (N), N_Constrained_Array_Definition, N_Slice)\n+        and then Nkind (Parent (Parent (N))) /= N_Full_Type_Declaration\n+        and then Nkind (Parent (Parent (N))) /= N_Object_Declaration\n+      then\n          Apply_Range_Check (Ran, Typ);\n       end if;\n    end Expand_N_Subtype_Indication;"}, {"sha": "3c65a340ff1ba4774eafdabb64b128a21a027856", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 21, "deletions": 13, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32115be843e3d7bd344b1e899deee27aef9a3b65/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32115be843e3d7bd344b1e899deee27aef9a3b65/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=32115be843e3d7bd344b1e899deee27aef9a3b65", "patch": "@@ -45,6 +45,7 @@ with Layout;    use Layout;\n with Lib;       use Lib;\n with Lib.Xref;  use Lib.Xref;\n with Namet;     use Namet;\n+with Nlists;    use Nlists;\n with Nmake;     use Nmake;\n with Opt;       use Opt;\n with Restrict;  use Restrict;\n@@ -21214,7 +21215,7 @@ package body Sem_Ch3 is\n      (R            : Node_Id;\n       T            : Entity_Id;\n       Subtyp       : Entity_Id := Empty;\n-      Check_List   : List_Id   := Empty_List;\n+      Check_List   : List_Id   := No_List;\n       R_Check_Off  : Boolean   := False;\n       In_Iter_Schm : Boolean   := False)\n    is\n@@ -21435,9 +21436,13 @@ package body Sem_Ch3 is\n                         end if;\n                      end;\n \n-                  --  Insertion before a declaration. If the declaration\n-                  --  includes discriminants, the list of applicable checks\n-                  --  is given by the caller.\n+                  --  Case of declarations. If the declaration is for a type\n+                  --  and involves discriminants, the checks are premature at\n+                  --  the declaration point and need to wait for the expansion\n+                  --  of the initialization procedure, which will pass in the\n+                  --  list to put them on; otherwise, the checks are done at\n+                  --  the declaration point and there is no need to do them\n+                  --  again in the initialization procedure.\n \n                   elsif Nkind (Insert_Node) in N_Declaration then\n                      Def_Id := Defining_Identifier (Insert_Node);\n@@ -21448,19 +21453,22 @@ package body Sem_Ch3 is\n                         (Ekind (Def_Id) = E_Protected_Type\n                           and then Has_Discriminants (Def_Id))\n                      then\n-                        Append_Range_Checks\n-                          (R_Checks,\n-                            Check_List, Def_Id, Sloc (Insert_Node), R);\n+                        if Present (Check_List) then\n+                           Append_Range_Checks\n+                             (R_Checks,\n+                               Check_List, Def_Id, Sloc (Insert_Node), R);\n+                        end if;\n \n                      else\n-                        Insert_Range_Checks\n-                          (R_Checks,\n-                            Insert_Node, Def_Id, Sloc (Insert_Node), R);\n-\n+                        if No (Check_List) then\n+                           Insert_Range_Checks\n+                             (R_Checks,\n+                               Insert_Node, Def_Id, Sloc (Insert_Node), R);\n+                        end if;\n                      end if;\n \n-                  --  Insertion before a statement. Range appears in the\n-                  --  context of a quantified expression. Insertion will\n+                  --  Case of statements. Drop the checks, as the range appears\n+                  --  in the context of a quantified expression. Insertion will\n                   --  take place when expression is expanded.\n \n                   else"}, {"sha": "1d1d983b6e2a4dadc7cb35fec77955a22e021322", "filename": "gcc/ada/sem_ch3.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32115be843e3d7bd344b1e899deee27aef9a3b65/gcc%2Fada%2Fsem_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32115be843e3d7bd344b1e899deee27aef9a3b65/gcc%2Fada%2Fsem_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.ads?ref=32115be843e3d7bd344b1e899deee27aef9a3b65", "patch": "@@ -23,7 +23,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Nlists; use Nlists;\n with Types;  use Types;\n \n package Sem_Ch3 is\n@@ -265,7 +264,7 @@ package Sem_Ch3 is\n      (R            : Node_Id;\n       T            : Entity_Id;\n       Subtyp       : Entity_Id := Empty;\n-      Check_List   : List_Id   := Empty_List;\n+      Check_List   : List_Id   := No_List;\n       R_Check_Off  : Boolean   := False;\n       In_Iter_Schm : Boolean   := False);\n    --  Process a range expression that appears in a declaration context. The"}]}