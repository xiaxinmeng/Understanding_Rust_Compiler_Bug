{"sha": "361e618f2534e872d7ec4c35435b18423daadc8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYxZTYxOGYyNTM0ZTg3MmQ3ZWM0YzM1NDM1YjE4NDIzZGFhZGM4Yg==", "commit": {"author": {"name": "Manfred Hollstein", "email": "manfred@s-direktnet.de", "date": "1997-10-26T18:45:07Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-10-26T18:45:07Z"}, "message": "Makefile.in (bootstrap-lean): Combined with `normal' bootstrap targets using \"$@\" to provide support for...\n\n        * Makefile.in (bootstrap-lean): Combined with `normal' bootstrap\n        targets using \"$@\" to provide support for similar but not identical\n        targets without having to duplicate code.\n        (bootstrap4): New goal.\n\nFrom-SVN: r16187", "tree": {"sha": "80b8b2b0de60479208b9af4a4e6695ee32302a79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80b8b2b0de60479208b9af4a4e6695ee32302a79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/361e618f2534e872d7ec4c35435b18423daadc8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/361e618f2534e872d7ec4c35435b18423daadc8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/361e618f2534e872d7ec4c35435b18423daadc8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/361e618f2534e872d7ec4c35435b18423daadc8b/comments", "author": null, "committer": null, "parents": [{"sha": "cc71c0ca1f2109a22435c8c691941abb2d82f4fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc71c0ca1f2109a22435c8c691941abb2d82f4fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc71c0ca1f2109a22435c8c691941abb2d82f4fa"}], "stats": {"total": 27, "additions": 10, "deletions": 17}, "files": [{"sha": "5533987acd9a183fc80d5fd67c93e551e400d985", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/361e618f2534e872d7ec4c35435b18423daadc8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/361e618f2534e872d7ec4c35435b18423daadc8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=361e618f2534e872d7ec4c35435b18423daadc8b", "patch": "@@ -1,5 +1,10 @@\n Sun Oct 26 11:32:16 1997  Manfred Hollstein  <manfred@s-direktnet.de>\n \n+\t* Makefile.in (bootstrap-lean): Combined with `normal' bootstrap\n+\ttargets using \"$@\" to provide support for similar but not identical\n+\ttargets without having to duplicate code.\n+\t(bootstrap4): New goal.\n+\n \t* Makefile.in (compare, compare-lean, compare3): Combined to one\n \truleset determining actions to be performed via $@.\n \t(compare4, compare4-lean): New targets."}, {"sha": "1188c2d4676ae9de05814c96bd8ca049ce40f898", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/361e618f2534e872d7ec4c35435b18423daadc8b/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/361e618f2534e872d7ec4c35435b18423daadc8b/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=361e618f2534e872d7ec4c35435b18423daadc8b", "patch": "@@ -2574,7 +2574,7 @@ diff:\n \t  $(LANG_DIFF_EXCLUDES) \\\n \t  gcc-$(oldversion) gcc-$(version) > diffs\n \n-bootstrap: force\n+bootstrap bootstrap-lean: force\n # Only build the C compiler for stage1, because that is the only one that\n # we can guarantee will build with the native compiler, and also it is the\n # only thing useful for building stage2.\n@@ -2587,22 +2587,7 @@ bootstrap: force\n # alloca.o.  Then cc1 is newer, so it won't have to be relinked.\n \t$(MAKE) CC=\"stage1/xgcc -Bstage1/\" CFLAGS=\"$(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage1/ LANGUAGES=\"$(LANGUAGES)\"\n \t$(MAKE) stage2\n-\t$(MAKE) CC=\"stage2/xgcc -Bstage2/\" CFLAGS=\"$(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage2/ LANGUAGES=\"$(LANGUAGES)\"\n-\n-bootstrap-lean: force\n-# Only build the C compiler for stage1, because that is the only one that\n-# we can guarantee will build with the native compiler, and also it is the\n-# only thing useful for building stage2.\n-\t$(MAKE) CC=\"$(CC)\" libdir=$(libdir) LANGUAGES=\"$(BOOT_LANGUAGES)\"\n-\t$(MAKE) stage1\n-# This used to define ALLOCA as empty, but that would lead to bad results\n-# for a subsequent `make install' since that would not have ALLOCA empty.\n-# To prevent `make install' from compiling alloca.o and then relinking cc1\n-# because alloca.o is newer, we permit these recursive makes to compile\n-# alloca.o.  Then cc1 is newer, so it won't have to be relinked.\n-\t$(MAKE) CC=\"stage1/xgcc -Bstage1/\" CFLAGS=\"$(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage1/ LANGUAGES=\"$(LANGUAGES)\"\n-\t$(MAKE) stage2\n-\trm -rf stage1\n+\t-if test $@ = bootstrap-lean; then rm -rf stage1; else true; fi\n \t$(MAKE) CC=\"stage2/xgcc -Bstage2/\" CFLAGS=\"$(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage2/ LANGUAGES=\"$(LANGUAGES)\"\n \n bootstrap2: force\n@@ -2613,6 +2598,9 @@ bootstrap2: force\n bootstrap3: force\n \t$(MAKE) CC=\"stage2/xgcc -Bstage2/\" CFLAGS=\"$(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage2/ LANGUAGES=\"$(LANGUAGES)\"\n \n+bootstrap4: force\n+\t$(MAKE) CC=\"stage3/xgcc -Bstage3/\" CFLAGS=\"$(BOOT_CFLAGS)\" LDFLAGS=\"$(BOOT_LDFLAGS)\" libdir=$(libdir) STAGE_PREFIX=stage3/ LANGUAGES=\"$(LANGUAGES)\"\n+\n # Compare the object files in the current directory with those in the\n # stage2 directory.\n "}]}