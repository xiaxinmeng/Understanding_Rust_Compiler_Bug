{"sha": "caca3c8a0325fb2b5fc674777ad658bc5058b6c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FjYTNjOGEwMzI1ZmIyYjVmYzY3NDc3N2FkNjU4YmM1MDU4YjZjMA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-12-09T23:11:50Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-12-09T23:11:50Z"}, "message": "(subsi3): Rename to subsi3_internal.\n\n(subsi3): Rename to subsi3_internal.  Add new define_expand\nto handle subtracting a register from a constant.\n\nFrom-SVN: r10693", "tree": {"sha": "63fdc5001622d681be5da5baf9ed0536ee473aa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63fdc5001622d681be5da5baf9ed0536ee473aa5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/caca3c8a0325fb2b5fc674777ad658bc5058b6c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caca3c8a0325fb2b5fc674777ad658bc5058b6c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caca3c8a0325fb2b5fc674777ad658bc5058b6c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caca3c8a0325fb2b5fc674777ad658bc5058b6c0/comments", "author": null, "committer": null, "parents": [{"sha": "06ada9d1c1b11112e676aff4c41a683c67028fbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ada9d1c1b11112e676aff4c41a683c67028fbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06ada9d1c1b11112e676aff4c41a683c67028fbc"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "898b5088922bce676c43457a4fc798c76244b305", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caca3c8a0325fb2b5fc674777ad658bc5058b6c0/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caca3c8a0325fb2b5fc674777ad658bc5058b6c0/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=caca3c8a0325fb2b5fc674777ad658bc5058b6c0", "patch": "@@ -321,13 +321,33 @@\n   \"clrt\\;subc\t%R2,%R0\\;subc\t%S2,%S0\"\n   [(set_attr \"length\" \"6\")])\n \n-(define_insn \"subsi3\"\n+(define_insn \"*subsi3_internal\"\n   [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n \t(minus:SI (match_operand:SI 1 \"arith_reg_operand\" \"0\")\n \t\t  (match_operand:SI 2 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"sub\t%2,%0\"\n   [(set_attr \"type\" \"arith\")])\n+\n+;; Convert `constant - reg' to `neg rX; add rX, #const' since this\n+;; will sometimes save one instruction.  Otherwise we might get\n+;; `mov #const, rY; sub rY,rX; mov rX, rY' if the source and dest regs\n+;; are the same.\n+\n+(define_expand \"subsi3\"\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n+\t(minus:SI (match_operand:SI 1 \"arith_operand\" \"\")\n+\t\t  (match_operand:SI 2 \"arith_reg_operand\" \"\")))]\n+  \"\"\n+  \"\n+{\n+  if (GET_CODE (operands[1]) == CONST_INT)\n+    {\n+      emit_insn (gen_negsi2 (operands[0], operands[2]));\n+      emit_insn (gen_addsi3 (operands[0], operands[0], operands[1]));\n+      DONE;\n+    }\n+}\")\n \f\n ;; -------------------------------------------------------------------------\n ;; Division instructions"}]}