{"sha": "5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVmYjg5ZDBlMWE4YWExOWZhZmQ2NGU3YzdiZWJkZTQ2Y2NjZGQxNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-06T12:05:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-06T12:05:48Z"}, "message": "[multiple changes]\n\n2017-09-06  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_ch7.adb (Entity_Table_Size): Change to nearest prime number.\n\n2017-09-06  Yannick Moy  <moy@adacore.com>\n\n\t* sem_warn.adb: Minor refactoring.\n\n2017-09-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* einfo.ads, einfo.adb (Get_Classwwide_Pragma): New utility,\n\tto retrieve the inherited classwide precondition/postcondition\n\tof a subprogram.\n\t* freeze.adb (Freeze_Entity): Use Get_Classwide_Pragma when\n\tfreezing a subprogram, to complete the generation of the\n\tcorresponding checking code.\n\n2017-09-06  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* inline.adb (Analyze_Inlined_Bodies): Remove restriction on\n\tloading of parent body with a with clause for the main unit.\n\t* gcc-interface/decl.c (defer_limited_with_list): Document\n\tnew usage.\n\t(gnat_to_gnu_entity) <E_Access_Type>: Handle\n\tcompleted Taft Amendment types declared in external units like\n\ttypes from limited with clauses.  Adjust final processing of\n\tdefer_limited_with_list accordingly.\n\n2017-09-06  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_util.adb (Is_Controlled_Indexing): New routine.\n\t(Is_Displace_Call): Use routine Strip to remove indirections.\n\t(Is_Displacement_Of_Object_Or_Function_Result): Code clean up. Add a\n\tmissing case of controlled generalized indexing.\n\t(Is_Source_Object): Use routine Strip to remove indirections.\n\t(Strip): New routine.\n\n2017-09-06  Bob Duff  <duff@adacore.com>\n\n\t* sysdep.c (__gnat_has_cap_sys_nice): If HAVE_CAPABILITY is defined,\n\twe include the proper header. Otherwise, we just declare the necessary\n\tthings from the capabilities library. This is so we can build on\n\tmachines without that library, while still enabling that library.\n\tAt run time, we're using weak symbols, so __gnat_has_cap_sys_nice will\n\tsimply return 0 if the library is not present, or not included\n\tin the link.\n\n2017-09-06  Pierre-Marie de Rodat  <derodat@adacore.com>\n\n\t* exp_dbug.adb (Debug_Renaming_Declaration): Do not create an encoding\n\tfor renamings that involve function calls in prefix form.\n\n2017-09-06  Bob Duff  <duff@adacore.com>\n\n\t* sem_ch3.adb (Analyze_Subtype_Declaration):\n\tSet Has_Delayed_Freeze on a subtype of an incomplete type.\n\n2017-09-06  Pierre-Marie de Rodat  <derodat@adacore.com>\n\n\t* par_sco.adb (Extend_Statement_Sequence): When the accept statement\n\thas no parameter specification and no entry index, use the entry name\n\tas the end of the generated SCO statement.\n\nFrom-SVN: r251785", "tree": {"sha": "437a61d0a532525592027bb4c430541e36e044a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/437a61d0a532525592027bb4c430541e36e044a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/comments", "author": null, "committer": null, "parents": [{"sha": "643827e99051c3ce6077d8bb332290741dc90571", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/643827e99051c3ce6077d8bb332290741dc90571", "html_url": "https://github.com/Rust-GCC/gccrs/commit/643827e99051c3ce6077d8bb332290741dc90571"}], "stats": {"total": 360, "additions": 271, "deletions": 89}, "files": [{"sha": "98562ab7b8475a494ba6715083d9b2d21f38e989", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14", "patch": "@@ -1,3 +1,66 @@\n+2017-09-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch7.adb (Entity_Table_Size): Change to nearest prime number.\n+\n+2017-09-06  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_warn.adb: Minor refactoring.\n+\n+2017-09-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* einfo.ads, einfo.adb (Get_Classwwide_Pragma): New utility,\n+\tto retrieve the inherited classwide precondition/postcondition\n+\tof a subprogram.\n+\t* freeze.adb (Freeze_Entity): Use Get_Classwide_Pragma when\n+\tfreezing a subprogram, to complete the generation of the\n+\tcorresponding checking code.\n+\n+2017-09-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* inline.adb (Analyze_Inlined_Bodies): Remove restriction on\n+\tloading of parent body with a with clause for the main unit.\n+\t* gcc-interface/decl.c (defer_limited_with_list): Document\n+\tnew usage.\n+\t(gnat_to_gnu_entity) <E_Access_Type>: Handle\n+\tcompleted Taft Amendment types declared in external units like\n+\ttypes from limited with clauses.  Adjust final processing of\n+\tdefer_limited_with_list accordingly.\n+\n+2017-09-06  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_util.adb (Is_Controlled_Indexing): New routine.\n+\t(Is_Displace_Call): Use routine Strip to remove indirections.\n+\t(Is_Displacement_Of_Object_Or_Function_Result): Code clean up. Add a\n+\tmissing case of controlled generalized indexing.\n+\t(Is_Source_Object): Use routine Strip to remove indirections.\n+\t(Strip): New routine.\n+\n+2017-09-06  Bob Duff  <duff@adacore.com>\n+\n+\t* sysdep.c (__gnat_has_cap_sys_nice): If HAVE_CAPABILITY is defined,\n+\twe include the proper header. Otherwise, we just declare the necessary\n+\tthings from the capabilities library. This is so we can build on\n+\tmachines without that library, while still enabling that library.\n+\tAt run time, we're using weak symbols, so __gnat_has_cap_sys_nice will\n+\tsimply return 0 if the library is not present, or not included\n+\tin the link.\n+\n+2017-09-06  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* exp_dbug.adb (Debug_Renaming_Declaration): Do not create an encoding\n+\tfor renamings that involve function calls in prefix form.\n+\n+2017-09-06  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_ch3.adb (Analyze_Subtype_Declaration):\n+\tSet Has_Delayed_Freeze on a subtype of an incomplete type.\n+\n+2017-09-06  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* par_sco.adb (Extend_Statement_Sequence): When the accept statement\n+\thas no parameter specification and no entry index, use the entry name\n+\tas the end of the generated SCO statement.\n+\n 2017-09-06  Steve Baird  <baird@adacore.com>\n \n \t* exp_util.adb (Side_Effect_Free): For CodePeer (only) treat"}, {"sha": "b7782a9ab9a3dfdae4f0751fa062434403bd7f56", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14", "patch": "@@ -7481,6 +7481,39 @@ package body Einfo is\n       return Empty;\n    end Get_Pragma;\n \n+   --------------------------\n+   -- Get_Classwide_Pragma --\n+   --------------------------\n+\n+   function Get_Classwide_Pragma\n+     (E  : Entity_Id;\n+      Id : Pragma_Id) return Node_Id\n+    is\n+      Item  : Node_Id;\n+      Items : Node_Id;\n+\n+   begin\n+      Items := Contract (E);\n+      if No (Items) then\n+         return Empty;\n+      end if;\n+\n+      Item := Pre_Post_Conditions (Items);\n+\n+      while Present (Item) loop\n+         if Nkind (Item) = N_Pragma\n+           and then Get_Pragma_Id (Pragma_Name_Unmapped (Item)) = Id\n+           and then Class_Present (Item)\n+         then\n+            return Item;\n+         else\n+            Item := Next_Pragma (Item);\n+         end if;\n+      end loop;\n+\n+      return Empty;\n+   end Get_Classwide_Pragma;\n+\n    --------------------------------------\n    -- Get_Record_Representation_Clause --\n    --------------------------------------"}, {"sha": "f14b22f826b55fddf88d1d873087fb92e86ec665", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14", "patch": "@@ -8295,6 +8295,12 @@ package Einfo is\n    --    Test_Case\n    --    Volatile_Function\n \n+   function Get_Classwide_Pragma\n+     (E  : Entity_Id;\n+      Id : Pragma_Id) return Node_Id;\n+   --  Examine Rep_Item chain to locate a classwide pre- or postcondition\n+   --  of a primitive operation. Returns Empty if not present.\n+\n    function Get_Record_Representation_Clause (E : Entity_Id) return Node_Id;\n    --  Searches the Rep_Item chain for a given entity E, for a record\n    --  representation clause, and if found, returns it. Returns Empty"}, {"sha": "1b51d538e3f2d809910d79c7eb1d3edd102a6035", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14", "patch": "@@ -426,11 +426,20 @@ package body Exp_Dbug is\n \n             when N_Selected_Component =>\n                declare\n-                  First_Bit : constant Uint :=\n-                                Normalized_First_Bit\n-                                  (Entity (Selector_Name (Ren)));\n+                  Sel_Id    : constant Entity_Id :=\n+                                Entity (Selector_Name (Ren));\n+                  First_Bit : Uint;\n \n                begin\n+                  --  If the renaming involves a call to a primitive function,\n+                  --  we are out of the scope of renaming encodings. We will\n+                  --  very likely create a variable to hold the renamed value\n+                  --  anyway, so the renaming entity will be available in\n+                  --  debuggers.\n+\n+                  exit when not Ekind_In (Sel_Id, E_Component, E_Discriminant);\n+\n+                  First_Bit := Normalized_First_Bit (Sel_Id);\n                   Enable :=\n                     Enable\n                       or else Is_Packed"}, {"sha": "c0b6b425ae11b8dac936abdc70886483ad07307f", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 84, "deletions": 52, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14", "patch": "@@ -7590,22 +7590,28 @@ package body Exp_Util is\n      (Obj_Id : Entity_Id) return Boolean\n    is\n       function Is_Controlled_Function_Call (N : Node_Id) return Boolean;\n-      --  Determine if particular node denotes a controlled function call. The\n-      --  call may have been heavily expanded.\n+      --  Determine whether node N denotes a controlled function call\n+\n+      function Is_Controlled_Indexing (N : Node_Id) return Boolean;\n+      --  Determine whether node N denotes a generalized indexing form which\n+      --  involves a controlled result.\n \n       function Is_Displace_Call (N : Node_Id) return Boolean;\n-      --  Determine whether a particular node is a call to Ada.Tags.Displace.\n-      --  The call might be nested within other actions such as conversions.\n+      --  Determine whether node N denotes a call to Ada.Tags.Displace\n \n       function Is_Source_Object (N : Node_Id) return Boolean;\n       --  Determine whether a particular node denotes a source object\n \n+      function Strip (N : Node_Id) return Node_Id;\n+      --  Examine arbitrary node N by stripping various indirections and return\n+      --  the \"real\" node.\n+\n       ---------------------------------\n       -- Is_Controlled_Function_Call --\n       ---------------------------------\n \n       function Is_Controlled_Function_Call (N : Node_Id) return Boolean is\n-         Expr : Node_Id := Original_Node (N);\n+         Expr : Node_Id;\n \n       begin\n          --  When a function call appears in Object.Operation format, the\n@@ -7617,6 +7623,7 @@ package body Exp_Util is\n          --    Obj.Func (Formal => Actual) N_Function_Call, whose Name is an\n          --                                N_Selected_Component\n \n+         Expr := Original_Node (N);\n          loop\n             if Nkind (Expr) = N_Function_Call then\n                Expr := Name (Expr);\n@@ -7643,31 +7650,28 @@ package body Exp_Util is\n              and then Needs_Finalization (Etype (Entity (Expr)));\n       end Is_Controlled_Function_Call;\n \n+      ----------------------------\n+      -- Is_Controlled_Indexing --\n+      ----------------------------\n+\n+      function Is_Controlled_Indexing (N : Node_Id) return Boolean is\n+         Expr : constant Node_Id := Original_Node (N);\n+\n+      begin\n+         return\n+           Nkind (Expr) = N_Indexed_Component\n+             and then Present (Generalized_Indexing (Expr))\n+             and then Needs_Finalization (Etype (Expr));\n+      end Is_Controlled_Indexing;\n+\n       ----------------------\n       -- Is_Displace_Call --\n       ----------------------\n \n       function Is_Displace_Call (N : Node_Id) return Boolean is\n-         Call : Node_Id;\n+         Call : constant Node_Id := Strip (N);\n \n       begin\n-         --  Strip various actions which may precede a call to Displace\n-\n-         Call := N;\n-         loop\n-            if Nkind (Call) = N_Explicit_Dereference then\n-               Call := Prefix (Call);\n-\n-            elsif Nkind_In (Call, N_Type_Conversion,\n-                                  N_Unchecked_Type_Conversion)\n-            then\n-               Call := Expression (Call);\n-\n-            else\n-               exit;\n-            end if;\n-         end loop;\n-\n          return\n            Present (Call)\n              and then Nkind (Call) = N_Function_Call\n@@ -7679,38 +7683,48 @@ package body Exp_Util is\n       ----------------------\n \n       function Is_Source_Object (N : Node_Id) return Boolean is\n-         Obj : Node_Id;\n+         Obj : constant Node_Id := Strip (N);\n \n       begin\n-         --  Strip various actions which may be associated with the object\n+         return\n+           Present (Obj)\n+             and then Comes_From_Source (Obj)\n+             and then Nkind (Obj) in N_Has_Entity\n+             and then Is_Object (Entity (Obj));\n+      end Is_Source_Object;\n+\n+      -----------\n+      -- Strip --\n+      -----------\n+\n+      function Strip (N : Node_Id) return Node_Id is\n+         Result : Node_Id;\n \n-         Obj := N;\n+      begin\n+         Result := N;\n          loop\n-            if Nkind (Obj) = N_Explicit_Dereference then\n-               Obj := Prefix (Obj);\n+            if Nkind (Result) = N_Explicit_Dereference then\n+               Result := Prefix (Result);\n \n-            elsif Nkind_In (Obj, N_Type_Conversion,\n-                                 N_Unchecked_Type_Conversion)\n+            elsif Nkind_In (Result, N_Type_Conversion,\n+                                    N_Unchecked_Type_Conversion)\n             then\n-               Obj := Expression (Obj);\n+               Result := Expression (Result);\n \n             else\n                exit;\n             end if;\n          end loop;\n \n-         return\n-           Present (Obj)\n-             and then Nkind (Obj) in N_Has_Entity\n-             and then Is_Object (Entity (Obj))\n-             and then Comes_From_Source (Obj);\n-      end Is_Source_Object;\n+         return Result;\n+      end Strip;\n \n       --  Local variables\n \n-      Decl      : constant Node_Id   := Parent (Obj_Id);\n+      Obj_Decl  : constant Node_Id   := Declaration_Node (Obj_Id);\n       Obj_Typ   : constant Entity_Id := Base_Type (Etype (Obj_Id));\n-      Orig_Decl : constant Node_Id   := Original_Node (Decl);\n+      Orig_Decl : constant Node_Id   := Original_Node (Obj_Decl);\n+      Orig_Expr : Node_Id;\n \n    --  Start of processing for Is_Displacement_Of_Object_Or_Function_Result\n \n@@ -7719,34 +7733,52 @@ package body Exp_Util is\n \n       --     Obj : CW_Type := Function_Call (...);\n \n-      --  rewritten into:\n+      --  is rewritten into:\n \n-      --     Tmp : ... := Function_Call (...)'reference;\n-      --     Obj : CW_Type renames (... Ada.Tags.Displace (Tmp));\n+      --     Temp : ... := Function_Call (...)'reference;\n+      --     Obj  : CW_Type renames (... Ada.Tags.Displace (Temp));\n \n       --  where the return type of the function and the class-wide type require\n       --  dispatch table pointer displacement.\n \n       --  Case 2:\n \n+      --     Obj : CW_Type := Container (...);\n+\n+      --  is rewritten into:\n+\n+      --     Temp : ... := Function_Call (Container, ...)'reference;\n+      --     Obj  : CW_Type renames (... Ada.Tags.Displace (Temp));\n+\n+      --  where the container element type and the class-wide type require\n+      --  dispatch table pointer dispacement.\n+\n+      --  Case 3:\n+\n       --     Obj : CW_Type := Src_Obj;\n \n-      --  rewritten into:\n+      --  is rewritten into:\n \n       --     Obj : CW_Type renames (... Ada.Tags.Displace (Src_Obj));\n \n       --  where the type of the source object and the class-wide type require\n       --  dispatch table pointer displacement.\n \n-      return\n-        Nkind (Decl) = N_Object_Renaming_Declaration\n-          and then Nkind (Orig_Decl) = N_Object_Declaration\n-          and then Comes_From_Source (Orig_Decl)\n-          and then Is_Class_Wide_Type (Obj_Typ)\n-          and then Is_Displace_Call (Renamed_Object (Obj_Id))\n-          and then\n-            (Is_Controlled_Function_Call (Expression (Orig_Decl))\n-              or else Is_Source_Object (Expression (Orig_Decl)));\n+      if Nkind (Obj_Decl) = N_Object_Renaming_Declaration\n+        and then Is_Class_Wide_Type (Obj_Typ)\n+        and then Is_Displace_Call (Renamed_Object (Obj_Id))\n+        and then Nkind (Orig_Decl) = N_Object_Declaration\n+        and then Comes_From_Source (Orig_Decl)\n+      then\n+         Orig_Expr := Expression (Orig_Decl);\n+\n+         return\n+           Is_Controlled_Function_Call (Orig_Expr)\n+             or else Is_Controlled_Indexing (Orig_Expr)\n+             or else Is_Source_Object (Orig_Expr);\n+      end if;\n+\n+      return False;\n    end Is_Displacement_Of_Object_Or_Function_Result;\n \n    ------------------------------"}, {"sha": "bf76970c0d9403f28f97e83e97109a37d77f872b", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14", "patch": "@@ -1418,8 +1418,8 @@ package body Freeze is\n          New_Prag : Node_Id;\n \n       begin\n-         A_Pre := Get_Pragma (Par_Prim, Pragma_Precondition);\n-         if Present (A_Pre) and then Class_Present (A_Pre) then\n+         A_Pre := Get_Classwide_Pragma (Par_Prim, Pragma_Precondition);\n+         if Present (A_Pre) then\n             New_Prag := New_Copy_Tree (A_Pre);\n             Build_Class_Wide_Expression\n               (Prag          => New_Prag,\n@@ -1436,9 +1436,9 @@ package body Freeze is\n             end if;\n          end if;\n \n-         A_Post := Get_Pragma (Par_Prim, Pragma_Postcondition);\n+         A_Post := Get_Classwide_Pragma (Par_Prim, Pragma_Postcondition);\n \n-         if Present (A_Post) and then Class_Present (A_Post) then\n+         if Present (A_Post) then\n             New_Prag := New_Copy_Tree (A_Post);\n             Build_Class_Wide_Expression\n               (Prag           => New_Prag,"}, {"sha": "69be2e6196bbc73b19ce7b9bc9d71a0be5f05894", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14", "patch": "@@ -1483,6 +1483,8 @@ package body Par_SCO is\n                   To_Node := Last (Parameter_Specifications (N));\n                elsif Present (Entry_Index (N)) then\n                   To_Node := Entry_Index (N);\n+               else\n+                  To_Node := Entry_Direct_Name (N);\n                end if;\n \n             when N_Case_Statement =>"}, {"sha": "0ec2e84638694cbf59233d4e72caa05b917e960a", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14", "patch": "@@ -5707,6 +5707,27 @@ package body Sem_Ch3 is\n          Conditional_Delay (Id, T);\n       end if;\n \n+      --  If we have a subtype of an incomplete type whose full type is a\n+      --  derived numeric type, we need to have a freeze node for the subtype.\n+      --  Otherwise gigi will complain while computing the (static) bounds of\n+      --  the subtype.\n+\n+      if Is_Itype (T)\n+        and then Is_Elementary_Type (Id)\n+        and then Etype (Id) /= Id\n+      then\n+         declare\n+            Partial : constant Entity_Id :=\n+              Incomplete_Or_Partial_View (First_Subtype (Id));\n+         begin\n+            if Present (Partial)\n+              and then Ekind (Partial) = E_Incomplete_Type\n+            then\n+               Set_Has_Delayed_Freeze (Id);\n+            end if;\n+         end;\n+      end if;\n+\n       --  Check that Constraint_Error is raised for a scalar subtype indication\n       --  when the lower or upper bound of a non-null range lies outside the\n       --  range of the type mark."}, {"sha": "f4cd375bcad6082202ca2d0daf8324db844adbe8", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14", "patch": "@@ -193,7 +193,7 @@ package body Sem_Ch7 is\n    -- Analyze_Package_Body_Helper Data and Subprograms --\n    ------------------------------------------------------\n \n-   Entity_Table_Size : constant := 4096;\n+   Entity_Table_Size : constant := 4093;\n    --  Number of headers in hash table\n \n    subtype Entity_Header_Num is Integer range 0 .. Entity_Table_Size - 1;"}, {"sha": "c8136b0d7fc6b07dd032fb03d69569bf4f4e28d5", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14", "patch": "@@ -1388,15 +1388,18 @@ package body Sem_Warn is\n                   --  an expression with actions.\n \n                   UR := Original_Node (UR);\n-                  while Nkind_In (UR, N_Attribute_Reference,\n-                                      N_Expression_With_Actions,\n+                  loop\n+                     if Nkind_In (UR, N_Expression_With_Actions,\n                                       N_Qualified_Expression,\n                                       N_Type_Conversion)\n-                  loop\n-                     if Nkind (UR) = N_Attribute_Reference then\n+                     then\n+                        UR := Expression (UR);\n+\n+                     elsif Nkind (UR) = N_Attribute_Reference then\n                         UR := Prefix (UR);\n+\n                      else\n-                        UR := Expression (UR);\n+                        exit;\n                      end if;\n                   end loop;\n "}, {"sha": "455a78a56453c5f34251de6cd56e0e35b66551ff", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 37, "deletions": 24, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=5efb89d0e1a8aa19fafd64e7c7bebde46cccdd14", "patch": "@@ -921,16 +921,40 @@ __gnat_is_file_not_found_error (int errno_val) {\n \n #if defined (__linux__)\n \n-/* HAVE_CAPABILITY is defined if sys/capability.h exists on the system where\n-   this is being compiled.\n+/* Note well: If this code is modified, it should be tested by hand,\n+   because automated testing doesn't exercise it.\n+*/\n+\n+/* HAVE_CAPABILITY is supposed to be defined if sys/capability.h exists on the\n+   system where this is being compiled. If this macro is defined, we #include\n+   the header. Otherwise we have the relevant declarations textually here.\n */\n \n #if defined (HAVE_CAPABILITY)\n #include <sys/capability.h>\n+#else\n \n-/* Note well: If this code is modified, it should be tested by hand,\n-   because automated testing doesn't exercise it.\n-*/\n+/* HAVE_CAPABILITY is not defined, so sys/capability.h does might not exist. */\n+\n+typedef struct _cap_struct *cap_t;\n+typedef enum {\n+    CAP_CLEAR=0,\n+    CAP_SET=1\n+} cap_flag_value_t;\n+#define CAP_SYS_NICE         23\n+typedef enum {\n+    CAP_EFFECTIVE=0,                        /* Specifies the effective flag */\n+    CAP_PERMITTED=1,                        /* Specifies the permitted flag */\n+    CAP_INHERITABLE=2                     /* Specifies the inheritable flag */\n+} cap_flag_t;\n+\n+typedef int cap_value_t;\n+\n+extern cap_t   cap_get_proc(void);\n+extern int     cap_get_flag(cap_t, cap_value_t, cap_flag_t, cap_flag_value_t *);\n+extern int     cap_free(void *);\n+\n+#endif\n \n /* __gnat_has_cap_sys_nice returns 1 if the current process has the\n    CAP_SYS_NICE capability. This capability is necessary to use the\n@@ -945,9 +969,12 @@ __gnat_is_file_not_found_error (int errno_val) {\n    symbols will be 0, and __gnat_has_cap_sys_nice will return 0.\n */\n \n-static cap_t cap_get_proc_weak() __attribute__ ((weakref (\"cap_get_proc\")));\n-static int cap_get_flag_weak() __attribute__ ((weakref (\"cap_get_flag\")));\n-static int cap_free_weak() __attribute__ ((weakref (\"cap_free\")));\n+static cap_t cap_get_proc_weak(void)\n+  __attribute__ ((weakref (\"cap_get_proc\")));\n+static int cap_get_flag_weak(cap_t, cap_value_t, cap_flag_t, cap_flag_value_t *)\n+  __attribute__ ((weakref (\"cap_get_flag\")));\n+static int cap_free_weak(void *)\n+  __attribute__ ((weakref (\"cap_free\")));\n \n int\n __gnat_has_cap_sys_nice () {\n@@ -957,11 +984,11 @@ __gnat_has_cap_sys_nice () {\n     return 0;\n \n   cap_t caps = cap_get_proc_weak();\n-  cap_flag_value_t value;\n-\n   if (caps == NULL)\n     return 0;\n \n+  cap_flag_value_t value;\n+\n   if (cap_get_flag_weak(caps, CAP_SYS_NICE, CAP_EFFECTIVE, &value) == -1)\n     return 0;\n \n@@ -973,20 +1000,6 @@ __gnat_has_cap_sys_nice () {\n \n   return 0;\n }\n-\n-#else\n-\n-/* HAVE_CAPABILITY is not defined, so sys/capability.h does not exist, so\n-   simply indicate that the current process does not have the CAP_SYS_NICE\n-   capability.\n-*/\n-\n-int\n-__gnat_has_cap_sys_nice () {\n-  return 0;\n-}\n-\n-#endif\n #endif\n \n #ifdef __ANDROID__"}]}