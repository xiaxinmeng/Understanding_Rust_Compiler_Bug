{"sha": "d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNhZmQ5YWFjYWE2NmZjMjJkZmJkNDk0M2RmOGIwNWRjYzNlNmJlZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-04-12T09:50:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-04-12T09:50:28Z"}, "message": "tree-pass.h (TODO_do_not_ggc_collect): New.\n\n2013-04-12  Richard Biener  <rguenther@suse.de>\n\n\t* tree-pass.h (TODO_do_not_ggc_collect): New.\n\t* passes.c (execute_one_ipa_transform_pass): Honor\n\tTODO_do_not_ggc_collect.\n\t(execute_one_pass): Likewise.\n\n\tRevert\n\t2013-04-10  Richard Biener  <rguenther@suse.de>\n\n\t* passes.c (init_optimization_passes): Remove reload pass.\n\t* ira.c (do_reload): Merge into ...\n\t(ira): ... this.\n\t(rest_of_handle_reload): Remove.\n\t(pass_reload): Likewise.\n\t* config/i386/i386.c (ix86_option_override): Refer to ira instead\n\tof reload for vzeroupper pass placement.\n\n\t* g++.dg/pr55604.C: Use -fdump-rtl-ira.\n\nFrom-SVN: r197865", "tree": {"sha": "2766f41a08f71d117d9d6574f06cf40113aebde0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2766f41a08f71d117d9d6574f06cf40113aebde0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e1e3b9d3359ea668c7581f6673bdeeb59b085d24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1e3b9d3359ea668c7581f6673bdeeb59b085d24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1e3b9d3359ea668c7581f6673bdeeb59b085d24"}], "stats": {"total": 82, "additions": 74, "deletions": 8}, "files": [{"sha": "cf92ee9f2988714685e5dc2382b82571c58aa828", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee", "patch": "@@ -1,3 +1,21 @@\n+2013-04-12  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-pass.h (TODO_do_not_ggc_collect): New.\n+\t* passes.c (execute_one_ipa_transform_pass): Honor\n+\tTODO_do_not_ggc_collect.\n+\t(execute_one_pass): Likewise.\n+\n+\tRevert\n+\t2013-04-10  Richard Biener  <rguenther@suse.de>\n+\n+\t* passes.c (init_optimization_passes): Remove reload pass.\n+\t* ira.c (do_reload): Merge into ...\n+\t(ira): ... this.\n+\t(rest_of_handle_reload): Remove.\n+\t(pass_reload): Likewise.\n+\t* config/i386/i386.c (ix86_option_override): Refer to ira instead\n+\tof reload for vzeroupper pass placement.\n+\n 2013-04-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/56918"}, {"sha": "9f5a24f6c006901f8fbafa082164994ad0349967", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee", "patch": "@@ -3930,7 +3930,7 @@ static void\n ix86_option_override (void)\n {\n   static struct register_pass_info insert_vzeroupper_info\n-    = { &pass_insert_vzeroupper.pass, \"ira\",\n+    = { &pass_insert_vzeroupper.pass, \"reload\",\n \t1, PASS_POS_INSERT_AFTER\n       };\n "}, {"sha": "cfa287f5492e0f51ba1226ed6792a49a07dc86a9", "filename": "gcc/ira.c", "status": "modified", "additions": 39, "deletions": 3, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee", "patch": "@@ -4359,8 +4359,6 @@ ira (FILE *f)\n   int rebuild_p;\n   bool saved_flag_caller_saves = flag_caller_saves;\n   enum ira_region saved_flag_ira_region = flag_ira_region;\n-  basic_block bb;\n-  bool need_dce;\n \n   ira_conflicts_p = optimize > 0;\n \n@@ -4590,6 +4588,13 @@ ira (FILE *f)\n       flag_caller_saves = saved_flag_caller_saves;\n       flag_ira_region = saved_flag_ira_region;\n     }\n+}\n+\n+static void\n+do_reload (void)\n+{\n+  basic_block bb;\n+  bool need_dce;\n \n   if (flag_ira_verbose < 10)\n     ira_dump_file = dump_file;\n@@ -4629,6 +4634,8 @@ ira (FILE *f)\n \n   timevar_pop (TV_RELOAD);\n \n+  timevar_push (TV_IRA);\n+\n   if (ira_conflicts_p && ! ira_use_lra_p)\n     {\n       ira_free (ira_spilled_reg_stack_slots);\n@@ -4686,6 +4693,8 @@ ira (FILE *f)\n \n   if (need_dce && optimize)\n     run_fast_dce ();\n+\n+  timevar_pop (TV_IRA);\n }\n \f\n /* Run the integrated register allocator.  */\n@@ -4712,6 +4721,33 @@ struct rtl_opt_pass pass_ira =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n-  0                                     /* todo_flags_finish */\n+  TODO_do_not_ggc_collect               /* todo_flags_finish */\n+ }\n+};\n+\n+static unsigned int\n+rest_of_handle_reload (void)\n+{\n+  do_reload ();\n+  return 0;\n+}\n+\n+struct rtl_opt_pass pass_reload =\n+{\n+ {\n+  RTL_PASS,\n+  \"reload\",                             /* name */\n+  OPTGROUP_NONE,                        /* optinfo_flags */\n+  NULL,                                 /* gate */\n+  rest_of_handle_reload,\t        /* execute */\n+  NULL,                                 /* sub */\n+  NULL,                                 /* next */\n+  0,                                    /* static_pass_number */\n+  TV_RELOAD,\t                        /* tv_id */\n+  0,                                    /* properties_required */\n+  0,                                    /* properties_provided */\n+  0,                                    /* properties_destroyed */\n+  0,                                    /* todo_flags_start */\n+  0\t\t\t\t\t/* todo_flags_finish */\n  }\n };"}, {"sha": "47dca568c3a58136b1b895f9705026b5a7a9970e", "filename": "gcc/passes.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee", "patch": "@@ -1620,6 +1620,7 @@ init_optimization_passes (void)\n       NEXT_PASS (pass_sms);\n       NEXT_PASS (pass_sched);\n       NEXT_PASS (pass_ira);\n+      NEXT_PASS (pass_reload);\n       NEXT_PASS (pass_postreload);\n \t{\n \t  struct opt_pass **p = &pass_postreload.pass.sub;\n@@ -2186,7 +2187,8 @@ execute_one_ipa_transform_pass (struct cgraph_node *node,\n   current_pass = NULL;\n \n   /* Signal this is a suitable GC collection point.  */\n-  ggc_collect ();\n+  if (!(todo_after & TODO_do_not_ggc_collect))\n+    ggc_collect ();\n }\n \n /* For the current function, execute all ipa transforms. */\n@@ -2365,7 +2367,8 @@ execute_one_pass (struct opt_pass *pass)\n   current_pass = NULL;\n \n   /* Signal this is a suitable GC collection point.  */\n-  ggc_collect ();\n+  if (!((todo_after | pass->todo_flags_finish) & TODO_do_not_ggc_collect))\n+    ggc_collect ();\n \n   return true;\n }"}, {"sha": "57b3c5b77a3de5f5c5e3805dcb7d5c8495e6a691", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee", "patch": "@@ -1,3 +1,10 @@\n+2013-04-12  Richard Biener  <rguenther@suse.de>\n+\n+\tRevert\n+\t2013-04-10  Richard Biener  <rguenther@suse.de>\n+\n+\t* g++.dg/pr55604.C: Use -fdump-rtl-ira.\n+\n 2013-04-12  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/56845"}, {"sha": "135ae4d5e557ab0d305d91395eb5df1238dc251c", "filename": "gcc/testsuite/g++.dg/pr55604.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr55604.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr55604.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr55604.C?ref=d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-rtl-ira\" } */\n+/* { dg-options \"-O -fdump-rtl-reload\" } */\n \n main ()\n {\n@@ -8,4 +8,4 @@ main ()\n   __builtin_printf (\"%d %s\\n\", t, s);\n }\n \n-/* { dg-final { cleanup-rtl-dump \"ira\" } } */\n+/* { dg-final { cleanup-rtl-dump \"reload\" } } */"}, {"sha": "b8c59a742c290cc23d778a773fb2dd08a19148e3", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=d3afd9aacaa66fc22dfbd4943df8b05dcc3e6bee", "patch": "@@ -154,6 +154,7 @@ struct simple_ipa_opt_pass\n   (PROP_gimple_any | PROP_gimple_lcf | PROP_gimple_leh | PROP_gimple_lomp)\n \n /* To-do flags.  */\n+#define TODO_do_not_ggc_collect\t\t(1 << 1)\n #define TODO_verify_ssa\t\t\t(1 << 2)\n #define TODO_verify_flow\t\t(1 << 3)\n #define TODO_verify_stmts\t\t(1 << 4)\n@@ -445,6 +446,7 @@ extern struct rtl_opt_pass pass_mode_switching;\n extern struct rtl_opt_pass pass_sms;\n extern struct rtl_opt_pass pass_sched;\n extern struct rtl_opt_pass pass_ira;\n+extern struct rtl_opt_pass pass_reload;\n extern struct rtl_opt_pass pass_clean_state;\n extern struct rtl_opt_pass pass_branch_prob;\n extern struct rtl_opt_pass pass_value_profile_transformations;"}]}