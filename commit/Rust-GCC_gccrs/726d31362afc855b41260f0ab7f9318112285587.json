{"sha": "726d31362afc855b41260f0ab7f9318112285587", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI2ZDMxMzYyYWZjODU1YjQxMjYwZjBhYjdmOTMxODExMjI4NTU4Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-09-22T14:54:35Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-09-22T14:54:35Z"}, "message": "mutex (try_lock): Do not swallow exceptions.\n\n\t* include/std/mutex (try_lock): Do not swallow exceptions.\n\t* testsuite/30_threads/try_lock/4.cc: Fix test.\n\nFrom-SVN: r215467", "tree": {"sha": "d3edeb60abfd92d2115a04f0ab0ad08bc32100e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3edeb60abfd92d2115a04f0ab0ad08bc32100e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/726d31362afc855b41260f0ab7f9318112285587", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/726d31362afc855b41260f0ab7f9318112285587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/726d31362afc855b41260f0ab7f9318112285587", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/726d31362afc855b41260f0ab7f9318112285587/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed26fe9e4aa22ad8beac1b338f4ede8af69e1af3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed26fe9e4aa22ad8beac1b338f4ede8af69e1af3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed26fe9e4aa22ad8beac1b338f4ede8af69e1af3"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "aeb8afcc5823fc7dcebbbb3b774d5ea3c4c7f687", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/726d31362afc855b41260f0ab7f9318112285587/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/726d31362afc855b41260f0ab7f9318112285587/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=726d31362afc855b41260f0ab7f9318112285587", "patch": "@@ -1,3 +1,8 @@\n+2014-09-22  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/mutex (try_lock): Do not swallow exceptions.\n+\t* testsuite/30_threads/try_lock/4.cc: Fix test.\n+\n 2014-09-22  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/54316"}, {"sha": "d80fa5a4ecd89b341448aaa6f038f1c5e561bb3a", "filename": "libstdc++-v3/include/std/mutex", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/726d31362afc855b41260f0ab7f9318112285587/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/726d31362afc855b41260f0ab7f9318112285587/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex?ref=726d31362afc855b41260f0ab7f9318112285587", "patch": "@@ -630,12 +630,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n       int __idx;\n       auto __locks = std::tie(__l1, __l2, __l3...);\n-      __try\n-      { __try_lock_impl<0>::__do_try_lock(__locks, __idx); }\n-      __catch(const __cxxabiv1::__forced_unwind&)\n-      { __throw_exception_again; }\n-      __catch(...)\n-      { }\n+      __try_lock_impl<0>::__do_try_lock(__locks, __idx);\n       return __idx;\n     }\n "}, {"sha": "1212b6596e9e3034841108c8c42e65769b2f7b54", "filename": "libstdc++-v3/testsuite/30_threads/try_lock/4.cc", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/726d31362afc855b41260f0ab7f9318112285587/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftry_lock%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/726d31362afc855b41260f0ab7f9318112285587/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftry_lock%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftry_lock%2F4.cc?ref=726d31362afc855b41260f0ab7f9318112285587", "patch": "@@ -133,8 +133,15 @@ void test03()\n       while (unreliable_lock::throw_on < 3)\n       {\n         unreliable_lock::count = 0;\n-        int failed = std::try_lock(l1, l2, l3);\n-        VERIFY( failed == unreliable_lock::throw_on );\n+        try\n+          {\n+            std::try_lock(l1, l2, l3);\n+            VERIFY( false );\n+          }\n+        catch (int e)\n+          {\n+            VERIFY( e == unreliable_lock::throw_on );\n+          }\n         ++unreliable_lock::throw_on;\n       }\n     }"}]}