{"sha": "94ab808c5d7f7510f8a173a2ce8f36b6026197f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRhYjgwOGM1ZDdmNzUxMGY4YTE3M2EyY2U4ZjM2YjYwMjYxOTdmOQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2009-07-04T21:31:17Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2009-07-04T21:31:17Z"}, "message": "inclhack.def (darwin_stdint_5, [...]): New fixes.\n\n\t* inclhack.def (darwin_stdint_5, darwin_stdint_6,\n\tdarwin_stdint_7): New fixes.\n\t* fixincl.x: Regenerate.\n\t* tests/base/stdint.h: Adjust test for new fixes.\n\nFrom-SVN: r149242", "tree": {"sha": "3232d451dc2d3f4d42af5a16ddfa46fc2232a519", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3232d451dc2d3f4d42af5a16ddfa46fc2232a519"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94ab808c5d7f7510f8a173a2ce8f36b6026197f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94ab808c5d7f7510f8a173a2ce8f36b6026197f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94ab808c5d7f7510f8a173a2ce8f36b6026197f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94ab808c5d7f7510f8a173a2ce8f36b6026197f9/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "277780589296f8799cd4b048b46d12d0b2310f9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/277780589296f8799cd4b048b46d12d0b2310f9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/277780589296f8799cd4b048b46d12d0b2310f9c"}], "stats": {"total": 295, "additions": 290, "deletions": 5}, "files": [{"sha": "35260caca66ad730426142258330feae3c7a6b4b", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94ab808c5d7f7510f8a173a2ce8f36b6026197f9/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94ab808c5d7f7510f8a173a2ce8f36b6026197f9/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=94ab808c5d7f7510f8a173a2ce8f36b6026197f9", "patch": "@@ -1,3 +1,10 @@\n+2009-07-04  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* inclhack.def (darwin_stdint_5, darwin_stdint_6,\n+\tdarwin_stdint_7): New fixes.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/stdint.h: Adjust test for new fixes.\n+\n 2009-07-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* inclhack.def (solaris_int_types): New fix."}, {"sha": "90eb9370aef0e7238792f8d9307f496ceb6c6668", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 163, "deletions": 5, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94ab808c5d7f7510f8a173a2ce8f36b6026197f9/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94ab808c5d7f7510f8a173a2ce8f36b6026197f9/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=94ab808c5d7f7510f8a173a2ce8f36b6026197f9", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Friday July  3, 2009 at 10:27:01 PM CEST\n+ * It has been AutoGen-ed  Saturday July  4, 2009 at 10:06:21 AM CEST\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Fri Jul  3 22:27:01 CEST 2009\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Sat Jul  4 10:06:21 CEST 2009\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 196 fixup descriptions.\n+ * This file contains 199 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -1963,6 +1963,146 @@ static const char* apzDarwin_Stdint_4Patch[] = {\n #endif\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Darwin_Stdint_5 fix\n+ */\n+tSCC zDarwin_Stdint_5Name[] =\n+     \"darwin_stdint_5\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zDarwin_Stdint_5List[] =\n+  \"stdint.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzDarwin_Stdint_5Machs[] = {\n+        \"*-*-darwin*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zDarwin_Stdint_5Select0[] =\n+       \"#define INTMAX_MIN[ \\t]+INT64_MIN\\n\\\n+#define INTMAX_MAX[ \\t]+INT64_MAX\\n\\n\\\n+#define UINTMAX_MAX[ \\t]+UINT64_MAX\";\n+\n+#define    DARWIN_STDINT_5_TEST_CT  1\n+static tTestDesc aDarwin_Stdint_5Tests[] = {\n+  { TT_EGREP,    zDarwin_Stdint_5Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Darwin_Stdint_5\n+ */\n+static const char* apzDarwin_Stdint_5Patch[] = {\n+    \"format\",\n+    \"#if __WORDSIZE == 64\\n\\\n+#define INTMAX_MIN   (-9223372036854775807L - 1)\\n\\\n+#define INTMAX_MAX   9223372036854775807L\\n\\\n+#define UINTMAX_MAX  18446744073709551615UL\\n\\\n+#else\\n\\\n+#define INTMAX_MIN   (-9223372036854775807LL - 1)\\n\\\n+#define INTMAX_MAX   9223372036854775807LL\\n\\\n+#define UINTMAX_MAX  18446744073709551615ULL\\n\\\n+#endif\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Darwin_Stdint_6 fix\n+ */\n+tSCC zDarwin_Stdint_6Name[] =\n+     \"darwin_stdint_6\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zDarwin_Stdint_6List[] =\n+  \"stdint.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzDarwin_Stdint_6Machs[] = {\n+        \"*-*-darwin*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zDarwin_Stdint_6Select0[] =\n+       \"#if __WORDSIZE == 64\\n\\\n+#define PTRDIFF_MIN[ \\t]+INT64_MIN\\n\\\n+#define PTRDIFF_MAX[ \\t]+INT64_MAX\\n\\\n+#else\\n\\\n+#define PTRDIFF_MIN[ \\t]+INT32_MIN\\n\\\n+#define PTRDIFF_MAX[ \\t]+INT32_MAX\\n\\\n+#endif\";\n+\n+#define    DARWIN_STDINT_6_TEST_CT  1\n+static tTestDesc aDarwin_Stdint_6Tests[] = {\n+  { TT_EGREP,    zDarwin_Stdint_6Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Darwin_Stdint_6\n+ */\n+static const char* apzDarwin_Stdint_6Patch[] = {\n+    \"format\",\n+    \"#if __WORDSIZE == 64\\n\\\n+#define PTRDIFF_MIN (-9223372036854775807L - 1)\\n\\\n+#define PTRDIFF_MAX 9223372036854775807L\\n\\\n+#else\\n\\\n+#define PTRDIFF_MIN (-2147483647 - 1)\\n\\\n+#define PTRDIFF_MAX 2147483647\\n\\\n+#endif\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Darwin_Stdint_7 fix\n+ */\n+tSCC zDarwin_Stdint_7Name[] =\n+     \"darwin_stdint_7\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zDarwin_Stdint_7List[] =\n+  \"stdint.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzDarwin_Stdint_7Machs[] = {\n+        \"*-*-darwin*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zDarwin_Stdint_7Select0[] =\n+       \"#define INTMAX_C\\\\(v\\\\)[ \\t]+\\\\(v ## LL\\\\)\\n\\\n+#define UINTMAX_C\\\\(v\\\\)[ \\t]+\\\\(v ## ULL\\\\)\";\n+\n+#define    DARWIN_STDINT_7_TEST_CT  1\n+static tTestDesc aDarwin_Stdint_7Tests[] = {\n+  { TT_EGREP,    zDarwin_Stdint_7Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Darwin_Stdint_7\n+ */\n+static const char* apzDarwin_Stdint_7Patch[] = {\n+    \"format\",\n+    \"#if __WORDSIZE == 64\\n\\\n+#define INTMAX_C(v)  (v ## L)\\n\\\n+#define UINTMAX_C(v) (v ## UL)\\n\\\n+#else\\n\\\n+#define INTMAX_C(v)  (v ## LL)\\n\\\n+#define UINTMAX_C(v) (v ## ULL)\\n\\\n+#endif\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Dec_Intern_Asm fix\n@@ -7953,9 +8093,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          239\n+#define REGEX_COUNT          242\n #define MACH_LIST_SIZE_LIMIT 181\n-#define FIX_COUNT            196\n+#define FIX_COUNT            199\n \n /*\n  *  Enumerate the fixes\n@@ -8007,6 +8147,9 @@ typedef enum {\n     DARWIN_STDINT_2_FIXIDX,\n     DARWIN_STDINT_3_FIXIDX,\n     DARWIN_STDINT_4_FIXIDX,\n+    DARWIN_STDINT_5_FIXIDX,\n+    DARWIN_STDINT_6_FIXIDX,\n+    DARWIN_STDINT_7_FIXIDX,\n     DEC_INTERN_ASM_FIXIDX,\n     DJGPP_WCHAR_H_FIXIDX,\n     ECD_CURSOR_FIXIDX,\n@@ -8390,6 +8533,21 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      DARWIN_STDINT_4_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aDarwin_Stdint_4Tests,   apzDarwin_Stdint_4Patch, 0 },\n \n+  {  zDarwin_Stdint_5Name,    zDarwin_Stdint_5List,\n+     apzDarwin_Stdint_5Machs,\n+     DARWIN_STDINT_5_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aDarwin_Stdint_5Tests,   apzDarwin_Stdint_5Patch, 0 },\n+\n+  {  zDarwin_Stdint_6Name,    zDarwin_Stdint_6List,\n+     apzDarwin_Stdint_6Machs,\n+     DARWIN_STDINT_6_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aDarwin_Stdint_6Tests,   apzDarwin_Stdint_6Patch, 0 },\n+\n+  {  zDarwin_Stdint_7Name,    zDarwin_Stdint_7List,\n+     apzDarwin_Stdint_7Machs,\n+     DARWIN_STDINT_7_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aDarwin_Stdint_7Tests,   apzDarwin_Stdint_7Patch, 0 },\n+\n   {  zDec_Intern_AsmName,    zDec_Intern_AsmList,\n      apzDec_Intern_AsmMachs,\n      DEC_INTERN_ASM_TEST_CT, FD_MACH_ONLY,"}, {"sha": "8cb6b7ed61dd91734c1a840cd491ee5ce5e45423", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94ab808c5d7f7510f8a173a2ce8f36b6026197f9/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94ab808c5d7f7510f8a173a2ce8f36b6026197f9/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=94ab808c5d7f7510f8a173a2ce8f36b6026197f9", "patch": "@@ -1124,6 +1124,91 @@ fix = {\n };\n \n \n+/*\n+ * Darwin headers have a stdint.h that defines {U,}INTMAX_{MIN,MAX}\n+ * with a wrong type.\n+ */\n+fix = {\n+    hackname  = darwin_stdint_5;\n+    mach      = \"*-*-darwin*\";\n+    files     = stdint.h;\n+    c_fix     = format;\n+    c_fix_arg = \"#if __WORDSIZE == 64\\n\"\n+\t\t\"#define INTMAX_MIN   (-9223372036854775807L - 1)\\n\"\n+\t\t\"#define INTMAX_MAX   9223372036854775807L\\n\"\n+\t\t\"#define UINTMAX_MAX  18446744073709551615UL\\n\"\n+\t\t\"#else\\n\"\n+\t\t\"#define INTMAX_MIN   (-9223372036854775807LL - 1)\\n\"\n+\t\t\"#define INTMAX_MAX   9223372036854775807LL\\n\"\n+\t\t\"#define UINTMAX_MAX  18446744073709551615ULL\\n\"\n+\t\t\"#endif\";\n+    select    = \"#define INTMAX_MIN[ \\t]+INT64_MIN\\n\"\n+\t\t\"#define INTMAX_MAX[ \\t]+INT64_MAX\\n\"\n+\t\t\"\\n\"\n+\t\t\"#define UINTMAX_MAX[ \\t]+UINT64_MAX\";\n+    test_text = \"#define INTMAX_MIN        INT64_MIN\\n\"\n+\t\t\"#define INTMAX_MAX        INT64_MAX\\n\"\n+\t\t\"\\n\"\n+\t\t\"#define UINTMAX_MAX       UINT64_MAX\";\n+};\n+\n+\n+/*\n+ * Darwin headers have a stdint.h that defines {U,}INTMAX_C\n+ * with a wrong type.\n+ */\n+fix = {\n+    hackname  = darwin_stdint_6;\n+    mach      = \"*-*-darwin*\";\n+    files     = stdint.h;\n+    c_fix     = format;\n+    c_fix_arg = \"#if __WORDSIZE == 64\\n\"\n+\t\t\"#define PTRDIFF_MIN (-9223372036854775807L - 1)\\n\"\n+\t\t\"#define PTRDIFF_MAX 9223372036854775807L\\n\"\n+\t\t\"#else\\n\"\n+\t\t\"#define PTRDIFF_MIN (-2147483647 - 1)\\n\"\n+\t\t\"#define PTRDIFF_MAX 2147483647\\n\"\n+\t\t\"#endif\";\n+    select    = \"#if __WORDSIZE == 64\\n\"\n+\t\t\"#define PTRDIFF_MIN[ \\t]+INT64_MIN\\n\"\n+\t\t\"#define PTRDIFF_MAX[ \\t]+INT64_MAX\\n\"\n+\t\t\"#else\\n\"\n+\t\t\"#define PTRDIFF_MIN[ \\t]+INT32_MIN\\n\"\n+\t\t\"#define PTRDIFF_MAX[ \\t]+INT32_MAX\\n\"\n+\t\t\"#endif\";\n+    test_text = \"#if __WORDSIZE == 64\\n\"\n+\t\t\"#define PTRDIFF_MIN       INT64_MIN\\n\"\n+\t\t\"#define PTRDIFF_MAX       INT64_MAX\\n\"\n+\t\t\"#else\\n\"\n+\t\t\"#define PTRDIFF_MIN       INT32_MIN\\n\"\n+\t\t\"#define PTRDIFF_MAX       INT32_MAX\\n\"\n+\t\t\"#endif\";\n+};\n+\n+\n+/*\n+ * Darwin headers have a stdint.h that defines {U,}INTMAX_C\n+ * with a wrong type.\n+ */\n+fix = {\n+    hackname  = darwin_stdint_7;\n+    mach      = \"*-*-darwin*\";\n+    files     = stdint.h;\n+    c_fix     = format;\n+    c_fix_arg = \"#if __WORDSIZE == 64\\n\"\n+\t\t\"#define INTMAX_C(v)  (v ## L)\\n\"\n+\t\t\"#define UINTMAX_C(v) (v ## UL)\\n\"\n+\t\t\"#else\\n\"\n+\t\t\"#define INTMAX_C(v)  (v ## LL)\\n\"\n+\t\t\"#define UINTMAX_C(v) (v ## ULL)\\n\"\n+\t\t\"#endif\";\n+    select    = \"#define INTMAX_C\\\\(v\\\\)[ \\t]+\\\\(v ## LL\\\\)\\n\"\n+\t\t\"#define UINTMAX_C\\\\(v\\\\)[ \\t]+\\\\(v ## ULL\\\\)\";\n+    test_text = \"#define INTMAX_C(v)  (v ## LL)\\n\"\n+\t\t\"#define UINTMAX_C(v) (v ## ULL)\";\n+};\n+\n+\n /*\n  *  Fix <c_asm.h> on Digital UNIX V4.0:\n  *  It contains a prototype for a DEC C internal asm() function,"}, {"sha": "77e77fae079ec482d937f95049fdc702e5f39f3d", "filename": "fixincludes/tests/base/stdint.h", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94ab808c5d7f7510f8a173a2ce8f36b6026197f9/fixincludes%2Ftests%2Fbase%2Fstdint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94ab808c5d7f7510f8a173a2ce8f36b6026197f9/fixincludes%2Ftests%2Fbase%2Fstdint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fstdint.h?ref=94ab808c5d7f7510f8a173a2ce8f36b6026197f9", "patch": "@@ -44,6 +44,41 @@\n #endif  /* DARWIN_STDINT_4_CHECK */\n \n \n+#if defined( DARWIN_STDINT_5_CHECK )\n+#if __WORDSIZE == 64\n+#define INTMAX_MIN   (-9223372036854775807L - 1)\n+#define INTMAX_MAX   9223372036854775807L\n+#define UINTMAX_MAX  18446744073709551615UL\n+#else\n+#define INTMAX_MIN   (-9223372036854775807LL - 1)\n+#define INTMAX_MAX   9223372036854775807LL\n+#define UINTMAX_MAX  18446744073709551615ULL\n+#endif\n+#endif  /* DARWIN_STDINT_5_CHECK */\n+\n+\n+#if defined( DARWIN_STDINT_6_CHECK )\n+#if __WORDSIZE == 64\n+#define PTRDIFF_MIN (-PTRDIFF_MAX - 1)\n+#define PTRDIFF_MAX __PTRDIFF_MAX__\n+#else\n+#define PTRDIFF_MIN (-PTRDIFF_MAX - 1)\n+#define PTRDIFF_MAX __PTRDIFF_MAX__\n+#endif\n+#endif  /* DARWIN_STDINT_6_CHECK */\n+\n+\n+#if defined( DARWIN_STDINT_7_CHECK )\n+#if __WORDSIZE == 64\n+#define INTMAX_C(v)  (v ## L)\n+#define UINTMAX_C(v) (v ## UL)\n+#else\n+#define INTMAX_C(v)  (v ## LL)\n+#define UINTMAX_C(v) (v ## ULL)\n+#endif\n+#endif  /* DARWIN_STDINT_7_CHECK */\n+\n+\n #if defined( GLIBC_STDINT_CHECK )\n /* This file is part of the GNU C Library.  */\n # define UINT8_C(c)\tc"}]}