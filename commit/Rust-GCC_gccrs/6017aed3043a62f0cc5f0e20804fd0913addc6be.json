{"sha": "6017aed3043a62f0cc5f0e20804fd0913addc6be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAxN2FlZDMwNDNhNjJmMGNjNWYwZTIwODA0ZmQwOTEzYWRkYzZiZQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2012-02-15T19:17:42Z"}, "committer": {"name": "Patrick Marlier", "email": "pmarlier@gcc.gnu.org", "date": "2012-02-15T19:17:42Z"}, "message": "re PR libitm/52042 (libitm.c/clone-1.c (all darwin) and libitm.c/stackundo.c (darwin 11) execution tests fail with -fpie)\n\n2012-02-15  Iain Sandoe  <iains@gcc.gnu.org>\n\t    Patrick Marlier  <patrick.marlier@gmail.com>\n\n\tPR libitm/52042\n\t* config/darwin-crt-tm.c (getTMCloneTable): New function.\n\t(__doTMRegistrations): Call it.\n\t(__doTMdeRegistrations): Likewise. \n\n\nCo-Authored-By: Patrick Marlier <patrick.marlier@gmail.com>\n\nFrom-SVN: r184281", "tree": {"sha": "9cc925d21e5739bfffefd15e239b695ae26b78ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cc925d21e5739bfffefd15e239b695ae26b78ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6017aed3043a62f0cc5f0e20804fd0913addc6be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6017aed3043a62f0cc5f0e20804fd0913addc6be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6017aed3043a62f0cc5f0e20804fd0913addc6be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6017aed3043a62f0cc5f0e20804fd0913addc6be/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c87288384e54557bdef73f99a895a09e5a38897", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c87288384e54557bdef73f99a895a09e5a38897", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c87288384e54557bdef73f99a895a09e5a38897"}], "stats": {"total": 86, "additions": 61, "deletions": 25}, "files": [{"sha": "ff5101a713678fe3b1a91282434b0a0741602491", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6017aed3043a62f0cc5f0e20804fd0913addc6be/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6017aed3043a62f0cc5f0e20804fd0913addc6be/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=6017aed3043a62f0cc5f0e20804fd0913addc6be", "patch": "@@ -1,3 +1,11 @@\n+2012-02-15  Iain Sandoe  <iains@gcc.gnu.org>\n+\t    Patrick Marlier  <patrick.marlier@gmail.com>\n+\n+\tPR libitm/52042\n+\t* config/darwin-crt-tm.c (getTMCloneTable): New function.\n+\t(__doTMRegistrations): Call it.\n+\t(__doTMdeRegistrations): Likewise. \n+\n 2012-01-15  Georg-Johann Lay  <avr@gjlay.de>\n \t    Anatoly Sokolov <aesok@post.ru>\n \t    Eric Weddington <eric.weddington@atmel.com>"}, {"sha": "78053f659a8247205a118b3208f01b95b9ea80f5", "filename": "libgcc/config/darwin-crt-tm.c", "status": "modified", "additions": 53, "deletions": 25, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6017aed3043a62f0cc5f0e20804fd0913addc6be/libgcc%2Fconfig%2Fdarwin-crt-tm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6017aed3043a62f0cc5f0e20804fd0913addc6be/libgcc%2Fconfig%2Fdarwin-crt-tm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fdarwin-crt-tm.c?ref=6017aed3043a62f0cc5f0e20804fd0913addc6be", "patch": "@@ -23,33 +23,67 @@ a copy of the GCC Runtime Library Exception along with this program;\n see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n+#include \"tsystem.h\"\n+#include <stddef.h>\n+#include <dlfcn.h>\n #include <mach-o/dyld.h>\n-\n-/* not listed in mach-o/dyld.h for some reason.  */\n-extern char * getsectdata (const char*,const char*,unsigned long*); \n+#include <mach-o/getsect.h>\n+\n+#ifdef __LP64__\n+#define GET_DATA_TMCT(mh,size) \\\n+  getsectdatafromheader_64 ((struct mach_header_64*) mh, \\\n+\t\t\t    \"__DATA\", \"__tm_clone_table\", (uint64_t *)size)\n+#else\n+#define GET_DATA_TMCT(mh,size) \\\n+  getsectdatafromheader (mh, \"__DATA\", \"__tm_clone_table\", (uint32_t *)size)\n+#endif\n \n #define WEAK __attribute__((weak))\n \n extern void _ITM_registerTMCloneTable (void *, size_t) WEAK;\n extern void _ITM_deregisterTMCloneTable (void *) WEAK;\n \n+#if defined(START) || defined(END)\n+static inline void *getTMCloneTable (const void *f, size_t *tmct_siz)\n+{\n+  char *tmct_fixed, *tmct = NULL;\n+  unsigned int i, img_count; \n+  struct mach_header *mh;\n+  Dl_info info;\n+  \n+  if (! dladdr (f, &info) || info.dli_fbase == NULL)\n+    abort ();\n+  \n+  mh = (struct mach_header *) info.dli_fbase;\n+  tmct_fixed = GET_DATA_TMCT (mh, tmct_siz);\n+  *tmct_siz /= (sizeof (size_t) * 2);\n+  /* No tm_clone_table or no clones. */\n+  if (tmct_fixed == NULL || *tmct_siz == 0)\n+    return NULL; \n+\n+  img_count = _dyld_image_count();\n+  for (i = 0; i < img_count && tmct == NULL; i++)\n+    {\n+      if (mh == _dyld_get_image_header(i))\n+\ttmct = tmct_fixed + (unsigned long)_dyld_get_image_vmaddr_slide(i); \n+    }\n+\n+  return tmct;\n+}\n+#endif\n+\n #ifdef START\n \n void __doTMRegistrations (void) __attribute__ ((constructor));\n \n void __doTMRegistrations (void)\n {\n-  char * tm_clone_table_sect_data;\n-  unsigned long tmct_siz;\n-  \n-  tm_clone_table_sect_data = getsectdata (\"__DATA\",\n-\t\t\t\t\t  \"__tm_clone_table\",\n-\t\t\t\t\t  &tmct_siz);\n-  tmct_siz /= (sizeof (size_t) * 2);\n-  if (_ITM_registerTMCloneTable != NULL\n-      && tm_clone_table_sect_data != NULL\n-      && tmct_siz > 0)\n-    _ITM_registerTMCloneTable (tm_clone_table_sect_data, (size_t)tmct_siz);\n+  size_t tmct_siz;\n+  void *tmct;\n+\n+  tmct = getTMCloneTable ((const void *)&__doTMRegistrations, &tmct_siz);\n+  if (_ITM_registerTMCloneTable != NULL && tmct != NULL)\n+    _ITM_registerTMCloneTable (tmct, (size_t)tmct_siz);\n }\n \n #endif\n@@ -60,18 +94,12 @@ void __doTMdeRegistrations (void) __attribute__ ((destructor));\n \n void __doTMdeRegistrations (void)\n {\n-  char * tm_clone_table_sect_data;\n-  unsigned long tmct_siz;\n-  \n-  tm_clone_table_sect_data = getsectdata (\"__DATA\",\n-\t\t\t\t\t  \"__tm_clone_table\",\n-\t\t\t\t\t  &tmct_siz);\n-  \n-  if (_ITM_deregisterTMCloneTable != NULL\n-      && tm_clone_table_sect_data != NULL\n-      && tmct_siz > 0)\n-    _ITM_deregisterTMCloneTable (tm_clone_table_sect_data);\n+  size_t tmct_siz;\n+  void *tmct;\n \n+  tmct = getTMCloneTable ((const void *)&__doTMdeRegistrations, &tmct_siz);\n+  if (_ITM_deregisterTMCloneTable != NULL && tmct != NULL)\n+    _ITM_deregisterTMCloneTable (tmct);\n }\n \n #endif"}]}