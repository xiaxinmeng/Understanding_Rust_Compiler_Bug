{"sha": "dc5554292fd779dbbb13e37bab33c469704b9ad6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM1NTU0MjkyZmQ3NzlkYmJiMTNlMzdiYWIzM2M0Njk3MDRiOWFkNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2008-01-29T05:50:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2008-01-29T05:50:24Z"}, "message": "re PR c++/35007 (Firefox fails to build with affentry.cpp:94: error: ISO C++ forbids subscripting non-lvalue array)\n\n        PR c++/35007\n        * class.c (build_base_path): Fix !want_pointer case.\n\nFrom-SVN: r131931", "tree": {"sha": "5203b9723847b896fdb343e8e9486290e0467fb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5203b9723847b896fdb343e8e9486290e0467fb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc5554292fd779dbbb13e37bab33c469704b9ad6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5554292fd779dbbb13e37bab33c469704b9ad6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc5554292fd779dbbb13e37bab33c469704b9ad6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5554292fd779dbbb13e37bab33c469704b9ad6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43fe0f76a75564af7cefbce910485b6ea7568bf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43fe0f76a75564af7cefbce910485b6ea7568bf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43fe0f76a75564af7cefbce910485b6ea7568bf0"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "7b5da5349cd44e29c1473054343154fb5a255798", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5554292fd779dbbb13e37bab33c469704b9ad6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5554292fd779dbbb13e37bab33c469704b9ad6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=dc5554292fd779dbbb13e37bab33c469704b9ad6", "patch": "@@ -1,3 +1,8 @@\n+2008-01-28  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/35007\n+\t* class.c (build_base_path): Fix !want_pointer case.\n+\n 2008-01-27  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/27177"}, {"sha": "9f7d986676cc212229f3580448b42e791b0864c9", "filename": "gcc/cp/class.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5554292fd779dbbb13e37bab33c469704b9ad6/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5554292fd779dbbb13e37bab33c469704b9ad6/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=dc5554292fd779dbbb13e37bab33c469704b9ad6", "patch": "@@ -296,7 +296,12 @@ build_base_path (enum tree_code code,\n   /* Don't bother with the calculations inside sizeof; they'll ICE if the\n      source type is incomplete and the pointer value doesn't matter.  */\n   if (skip_evaluation)\n-    return build_nop (build_pointer_type (target_type), expr);\n+    {\n+      expr = build_nop (build_pointer_type (target_type), expr);\n+      if (!want_pointer)\n+\texpr = build_indirect_ref (expr, NULL);\n+      return expr;\n+    }\n \n   /* Do we need to check for a null pointer?  */\n   if (want_pointer && !nonnull)"}, {"sha": "06d5c9993d9866e627cd7c3fb92ef6041a4a9370", "filename": "gcc/testsuite/g++.dg/inherit/sizeof1.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5554292fd779dbbb13e37bab33c469704b9ad6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fsizeof1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5554292fd779dbbb13e37bab33c469704b9ad6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fsizeof1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fsizeof1.C?ref=dc5554292fd779dbbb13e37bab33c469704b9ad6", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/35007\n+\n+struct AffEntry\n+{\n+  union {\n+    char base[256];\n+  } conds;\n+};\n+\n+struct PfxEntry\n+: public AffEntry\n+{\n+  PfxEntry()\n+  {\n+    sizeof(conds.base[0]);\n+  }\n+};"}]}