{"sha": "7904f95fd92498d89c280e3fde8b1e1a17e2736b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkwNGY5NWZkOTI0OThkODljMjgwZTNmZGU4YjFlMWExN2UyNzM2Yg==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2005-08-03T23:35:06Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2005-08-03T23:35:06Z"}, "message": "gcc.c (LINK_SSP_SPEC): Add fstack-protector-all.\n\n2005-08-03  Eric Christopher  <echristo@apple.com>\n\n        * gcc.c (LINK_SSP_SPEC): Add fstack-protector-all.\n        * config/darwin.h (LINK_COMMAND_SPEC): Add link_ssp\n        spec.\n\nFrom-SVN: r102719", "tree": {"sha": "a930ab68ec5d39d2120c67456f1485b261695331", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a930ab68ec5d39d2120c67456f1485b261695331"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7904f95fd92498d89c280e3fde8b1e1a17e2736b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7904f95fd92498d89c280e3fde8b1e1a17e2736b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7904f95fd92498d89c280e3fde8b1e1a17e2736b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7904f95fd92498d89c280e3fde8b1e1a17e2736b/comments", "author": null, "committer": null, "parents": [{"sha": "0646b0597b3e675c23938fae830dba69aefc6b33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0646b0597b3e675c23938fae830dba69aefc6b33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0646b0597b3e675c23938fae830dba69aefc6b33"}], "stats": {"total": 186, "additions": 96, "deletions": 90}, "files": [{"sha": "afeda5c2c6dd9636dca36df0fa1331236b61f0f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 64, "deletions": 58, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7904f95fd92498d89c280e3fde8b1e1a17e2736b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7904f95fd92498d89c280e3fde8b1e1a17e2736b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7904f95fd92498d89c280e3fde8b1e1a17e2736b", "patch": "@@ -1,3 +1,9 @@\n+2005-08-03  Eric Christopher  <echristo@apple.com>\n+\n+\t* gcc.c (LINK_SSP_SPEC): Add fstack-protector-all.\n+\t* config/darwin.h (LINK_COMMAND_SPEC): Add link_ssp\n+\tspec.\n+\n 2005-08-04  Jan Hubicka  <jh@suse.cz>\n \n \t* profile.c (branch_prob): Split edges with goto locus on them\n@@ -73,7 +79,7 @@\n 2005-08-02  Richard Henderson  <rth@redhat.com>\n \n \tPR 23196\n-\t* explow.c (memory_address): Remove special-case for \n+\t* explow.c (memory_address): Remove special-case for\n \tvirtual_stack_vars_rtx and virtual_incoming_args_rtx.\n \n 2005-08-02  Diego Novillo  <dnovillo@redhat.com>\n@@ -393,7 +399,7 @@\n \n \tPR bootstrap/23131\n \t* configure.ac (SYSTEM_HEADER_DIR): Avoid setting to empty\n-\tstring. \n+\tstring.\n \t* configure: Regenerated.\n \n 2005-07-29  Paul Brook  <paul@codesourcery.com>\n@@ -409,7 +415,7 @@\n \t(includes): Includes 5k.md.\n \t* config/mips/5k.md: New DFA pipeline for the 5kc/5kf.\n \t* doc/invoke.texi (MIPS Options): Updated cpu name supported with\n-\t-march flag.\t\n+\t-march flag.\n \n 2005-07-29  Diego Novillo  <dnovillo@redhat.com>\n \n@@ -725,7 +731,7 @@\n 2005-07-27  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \t* params.def: Fixed comment.\n-\t\n+\n 2005-07-27  Bjoern Haase  <bjoern.m.haase@web.de>\n \n \tPR target/19885\n@@ -774,7 +780,7 @@\n 2005-07-27  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimization/23073\n-\t* tree-vect-analyze.c (vect_analyze_data_refs_alignment): Call \n+\t* tree-vect-analyze.c (vect_analyze_data_refs_alignment): Call\n \tvect_print_dump_info before fprintf.\n \n 2005-07-27  Zdenek Dvorak  <dvorakz@suse.cz>\n@@ -973,7 +979,7 @@\n \tinhibit_libc.\n \t* configure.ac (inhibit_libc): Set it to true/false.\n \t(--with-build-sysroot): New option.  Use it to set\n-\tSYSTEM_HEADER_DIR. \n+\tSYSTEM_HEADER_DIR.\n \t* configure: Regenerated.\n \n 2005-07-25  Manfred Hollstein  <mh@suse.com>\n@@ -1013,8 +1019,8 @@\n \t(dump_data_reference): Use a correct field name.\n \t(analyze_array): Make static. Initialize new data-ref fields.\n \t(analyze_indirect_ref): New function.\n-\t(init_data_ref): Initialize new data-ref fields.   \n-\t(strip_conversion): Moved from tree-vect-analyze.c. \n+\t(init_data_ref): Initialize new data-ref fields.\n+\t(strip_conversion): Moved from tree-vect-analyze.c.\n \t(analyze_offset_expr, get_ptr_offset, address_analysis,\n \tobject_analysis): Likewise.\n \t(analyze_offset): New function.\n@@ -1025,7 +1031,7 @@\n \t(access_functions_are_affine_or_constant_p): Call macro to get the\n \taddress of access functions.\n \t(compute_all_dependences): Add new parameter\n-\tcompute_self_and_read_read_dependences. Compute self and read-read  \n+\tcompute_self_and_read_read_dependences. Compute self and read-read\n \tdependences if it is true.\n \t(find_data_references_in_loop): Call create_data_ref. Initialize new\n \tdata-ref fields.\n@@ -1040,7 +1046,7 @@\n \t* tree-data-ref.h (struct first_location_in_loop): New structure. Move\n \tfields from stmt_vinfo.\n \t(struct base_object_info): New structure.\n-\t(struct data_reference): Move fields to base_object_info. Add fields   \n+\t(struct data_reference): Move fields to base_object_info. Add fields\n \tfirst_location and object_info for above structures. Move fields from\n \tstmt_info: memtag, ptr_info, subvars, misalignment. Add new field\n \taligned_to.  Add macros to access the new fields.\n@@ -1081,7 +1087,7 @@\n \t(vect_strip_conversion): Remove.\n \t* tree-vectorizer.h (enum verbosity_levels): Add new verbosity level.\n \t(struct _loop_vec_info): Unify data_ref_writes and data_ref_reads into\n-\tdatarefs. Add new field ddrs. \n+\tdatarefs. Add new field ddrs.\n \tAdd macros for the new fields access.\n \t(struct _stmt_vec_info): Remove: base_address, initial_offset, step,\n \tbase_aligned_p, misalignment, memtag, ptr_info and subvars.\n@@ -1125,7 +1131,7 @@\n \n \t* Makefile.in (STRICT2_WARN): Add -Wmissing-format-attribute.\n \t* configure.ac: Check for -Wmissing-format-attribute.\n-\t\n+\n \t* configure: Regenerate.\n \n 2005-07-23  Richard Henderson  <rth@redhat.com>\n@@ -1295,7 +1301,7 @@\n \t* config/crx/crx.md: New file.\n \t* config/crx/crx.opt: New file.\n \t* config/crx/t-crx: New file.\n-\t\n+\n 2005-07-22  Manfred Hollstein  <mh@suse.com>\n \n \t* tree-ssa-structalias.c (merge_graph_nodes): Fix uninitialised\n@@ -1308,9 +1314,9 @@\n \t    Laurent GUERBY  <laurent@guerby.net>\n \n \tPR tree-optimization/22336\n-\t* function.c (record_block_change): Check for \n+\t* function.c (record_block_change): Check for\n \tcfun->ib_boundaries_block.\n-\t\n+\n 2005-07-21  James A. Morrison  <phython@gcc.gnu.org>\n \n \t* fold-const.c (fold_unary): Don't strip signed nops from ABS_EXPRs.\n@@ -1342,7 +1348,7 @@\n \tand complex_ssa_name_components here.\n \n 2005-07-20  Daniel Berlin  <dberlin@dberlin.org>\n-\t\n+\n \t* alias.c (nonoverlapping_component_refs_p): Use TYPE_MAIN_VARIANT,\n \trevert to returning false.\n \n@@ -1365,7 +1371,7 @@\n \n \tPR middle-end/21180\n \t* fold-const.c (fold_build1): Add checksum for the operands.\n-\t(fold_build2): Likewise.\t\n+\t(fold_build2): Likewise.\n \t(fold_build3): Likewise.\n \n 2005-07-21  Andrew Pinski  <pinskia@physics.uc.edu>\n@@ -1661,7 +1667,7 @@\n 2005-07-19  Devang Patel  <dpatel@apple.com>\n \n \t* dbxout.c (dbxout_type): Check Objective-C++ lang.\n-\t\n+\n 2005-07-19  Richard Henderson  <rth@redhat.com>\n \n \tPR tree-opt/22278\n@@ -1677,7 +1683,7 @@\n \n \t* c.opt (Wpragmas): New.\n \t* doc/invoke.texi: Document it.\n-\t\n+\n \t* function.c (do_warn_unused_parameter): Add warning control to\n \twarning call.\n \t* c-decl.c (warn_if_shadowing): Likewise.\n@@ -1692,7 +1698,7 @@\n \t(handle_pragma_extern_prefix): Likewise.\n \t(maybe_apply_renaming_pragma): Likewise.\n \t(handle_pragma_visibility): Likewise.\n-\t\n+\n \t* config/c4x/c4x-c.c (BAD): Likewise.\n \t(c4x_parse_pragma): Likewise.\n \t* config/ia64/ia64-c.c (ia64_hpux_handle_builtin_pragma): Likewise.\n@@ -1716,7 +1722,7 @@\n \t* tree-promote-statics.c: Removed.\n \t* common.opt: Removed flag-promote-statics.\n \t* opts.c: Ditto.\n-\t* passes.c: Removed tree-promote-statics pass. \n+\t* passes.c: Removed tree-promote-statics pass.\n \t* tree-pass.h: Ditto.\n \t* timevar.def: Removed TV_PROMOTE_STATICS.\n \n@@ -1726,7 +1732,7 @@\n \t* config.gcc: Add support for *-*-freebsd7, *-*-freebsd8,\n \tand *-*-freebsd9.\n \t* config/freebsd-spec.h (FBSD_TARGET_OS_CPP_BUILTINS): Ditto.\n-\t\n+\n 2005-07-19  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \tPR c/22476\n@@ -1781,7 +1787,7 @@\n 2005-07-18  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/22483\n-\t\n+\n \t* tree-complex.c (create_components): Use\n \tsafe_referenced_var_iterator and FOR_EACH_REFERENCED_VAR_SAFE.\n \t* tree-flow-inline.h (fill_referenced_var_vec): New function.\n@@ -1830,7 +1836,7 @@\n \tin 64-bit mode the same as DImode in 32-bit mode.\n \t(ix86_expand_ashl_const, ix86_split_ashl, ix86_split_ashr,\n \tix86_split_lshr): Likewise. Rename to no longer refer to a specific\n-\tmode. Add new mode parameter. \n+\tmode. Add new mode parameter.\n \t* config/i386/i386.h (CONST_OK_FOR_LETTER_P): Describe and handle 'O'.\n \t* config/i386/i386.md (cmpti, addti3, subti3, negti2, ashlti3, ashrti3,\n \tx86_64_shift_adj): New expanders.\n@@ -1869,8 +1875,8 @@\n \t* tree-ssa-pre.c (is_copy_stmt): New function.\n \t(follow_copies_till_vuse): Ditto.\n \t(do_eustores): Ditto.\n-\t(gate_eustores): Ditto.\t\n-\t\n+\t(gate_eustores): Ditto.\n+\n 2005-07-16  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.c (MFWRAP_SPEC): Don't wrap pthread_join or pthread_exit.\n@@ -1882,29 +1888,29 @@\n \tipa-reference.h, ipa-utils.c, ipa-utils.h, ipa-type-escape.c,\n \tipa-type-escape.h, tree-promote-statics.c\n \t* ipa-pure-const.c, ipa-reference.c, ipa-reference.h, ipa-utils.c,\n-\tipa-utils.h, ipa-type-escape.c, ipa-type-escape.h, \n+\tipa-utils.h, ipa-type-escape.c, ipa-type-escape.h,\n \ttree-promote-statics.c: new files.\n \t* alias.c: (nonlocal_mentioned_p_1, nonlocal_mentioned_p,\n \tnonlocal_referenced_p_1, nonlocal_referenced_p, nonlocal_set_p_1,\n \tint nonlocal_set_p, mark_constant_function): Deleted.\n-\t(rest_of_handle_cfg): Removed call to mark_constant_function. \n+\t(rest_of_handle_cfg): Removed call to mark_constant_function.\n \t(nonoverlapping_component_refs_p): Added calls to support\n-\ttype based aliasing.    \n+\ttype based aliasing.\n \t* tree-ssa-alias.c (may_alias_p,\n \tcompute_flow_insensitive_aliasing): Ditto.\n \t* calls.c (flags_from_decl_or_type): Removed reference to\n-\tcgraph_rtl_info. \n+\tcgraph_rtl_info.\n \t* c-typeck.c (convert_arguments): Make builtins tolerant of having\n \ttoo many arguments.  This is necessary for Spec 2000.\n \t* cgraph.h (const_function, pure_function): Removed.\n-\t* common.opt: Added \"fipa-pure-const\", \"fipa-reference\",  \n+\t* common.opt: Added \"fipa-pure-const\", \"fipa-reference\",\n \t\"fipa-type-escape\", and \"ftree-promote-static\".\n \t* opts.c: Ditto.\n-\t* passes.c: Added ipa and tree-promote-statics passes. \n+\t* passes.c: Added ipa and tree-promote-statics passes.\n \t* timevar.def: Added TV_IPA_PURE_CONST, TV_IPA_REFERENCE,\n \tTV_IPA_TYPE_ESCAPE, and TV_PROMOTE_STATICS.\n \t* tree-dfa.c (referenced_var_lookup_if_exists): New function.\n-\t* tree-flow.h: Added exposed sra calls and addition of \n+\t* tree-flow.h: Added exposed sra calls and addition of\n \treference_vars_info field for FUNCTION_DECLS.\n \t* tree-pass.h: Added passes.\n \t* tree-sra.c: (sra_init_cache): New function.\n@@ -1966,7 +1972,7 @@\n \tspecial var here.\n \t(need_to_solve): New function.\n \t(compute_points_to_sets): Use it.\n-\t\n+\n 2005-07-15  Jan Hubicka  <jh@suse.cz>\n \n \t* cfg.c (update_bb_profile_for_threading): More diagnostic.\n@@ -2225,8 +2231,8 @@\n \tif *rhs_p is not a SSA_NAME.\n \n 2005-07-12  Daniel Berlin  <dberlin@dberlin.org>\n-\t\n-\tFix PR tree-optimization/22422 \n+\n+\tFix PR tree-optimization/22422\n \t* tree-ssa-structalias.c (struct variable_info): Add flag for\n \tspecial vars.\n \t(get_varinfo): Now a static function.\n@@ -2239,7 +2245,7 @@\n \t(do_sd_constraint): Ditto.\n \t(do_structure_copy): Check for special variable.\n \t(find_func_aliases): Ditto.\n-\t(init_base_vars): Set special vars properly.\t\n+\t(init_base_vars): Set special vars properly.\n \n 2005-07-13  Jan Hubicka  <jh@suse.cz>\n \n@@ -2372,12 +2378,12 @@\n \t(GIMPLE Exception Handling): Clarify TRY_CATCH_EXPR cases.\n \n 2005-07-11  Daniel Berlin  <dberlin@dberlin.org>\n-\t\n+\n \t* print-tree.c (print_node): Use DECL_ARGUMENT_FLD.\n \t* tree.h (DECL_ARGUMENT_FLD): New macro.\n \n 2005-07-11  Daniel Berlin  <dberlin@dberlin.org>\n-\t\n+\n \tFix PR tree-optimization/22404\n \n \t* tree-ssa-structalias.c (create_variable_info_for): Use\n@@ -2469,7 +2475,7 @@\n \n \t* tree-ssa-structalias.c (update_alias_info): Change counting of\n \treferences to not include vdefs.\n-\t\n+\n 2005-07-10  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-ssa-alias.c (free_used_part_map): Add missing free.\n@@ -2687,13 +2693,13 @@\n \tvisibility on regular DECL's.\n \t(merge_decls): Fix the copying of decl nodes of various types for\n \tthe new structures.  Don't update RTL, section name, weak status,\n-\tetc, on DECL's without RTL.\t\n+\tetc, on DECL's without RTL.\n \t(grokdeclarator): DECL_ARG_TYPE_AS_WRITTEN is gone.\n \tDon't check volatile on non-variable types.\n \t(store_parm_decls_oldstyle): Use pointer_set instead of DECL_WEAK\n \tto check whether we have seen arguments.\n \t* c-objc-common.c (c_tree_printer): Reverse order of tests so that\n-\tflag is checked before field (flag is common, field is not).\t\n+\tflag is checked before field (flag is common, field is not).\n \t* dwarf2out.c (decl_ultimate_origin):  Only DECL's with\n \tTS_DECL_COMMON could have an origin.\n \t(add_location_or_const_value_attribute): Don't check section name\n@@ -2774,7 +2780,7 @@\n \t(struct tree_result_decl): Ditto.\n \t(union tree_node): Add new structures.\n \t* var-tracking.c (track_expr_p): Reverse order of tests.\n-\t\n+\n \t* doc/c-tree.texi: Add documentation on DECL node internal structure.\n \n 2005-07-08  Kazu Hirata  <kazu@codesourcery.com>\n@@ -2949,7 +2955,7 @@\n \n \t* config/s390/s390-protos.h (s390_expand_clrmem): Delete.\n \t(s390_expand_setmem): New.\n-\t* config/s390/s390.c: Likewise. \n+\t* config/s390/s390.c: Likewise.\n \t(print_shift_count_operand): Truncate to 12 bits instead of 6.\n \tAdapt comments.\n \t* config/s390/s390.md: (\"setmem<mode>\"): Accept character as\n@@ -2958,7 +2964,7 @@\n \t(\"setmem_long\", \"*setmem_long\"): ... this.\n \n 2005-07-07  Adrian Straetling  <straetling@de.ibm.com>\n-\t\n+\n \t* config/s390/s390.c: (optimization_options): Enable\n \tTARGET_MVCLE at -Os.\n \t* doc/invoke.texi: Document changes in default behaviour.\n@@ -3015,7 +3021,7 @@\n 2005-07-06  Fariborz Jahanian <fjahanian@apple.com>\n \n \t* doc/invoke.texi: Update -fforce-mem documentation.\n-\t* dojump.c (compare_from_rtx,do_compare_rtx_and_jump): Remove \n+\t* dojump.c (compare_from_rtx,do_compare_rtx_and_jump): Remove\n \tcode for -fforce-mem.\n \t* expmed.c: (store_bit_field,store_fixed_bit_field,\n \textract_bit_field): Ditto.\n@@ -3046,7 +3052,7 @@\n \tvariable sized types.\n \tUse correct type for intermediate structure on *a = *b structure\n \tcopies.\n-\t\t\n+\n 2005-07-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/rs6000/rs6000.h (RS6000_VARARGS_AREA, RS6000_VARARGS_SIZE):\n@@ -3116,7 +3122,7 @@\n \t(vect_print_dump_info): Use vect_loop_location.\n \t(new_loop_vec_info): Do not set LOOP_VINFO_LOC.\n \t(vectorize_loops): Set vect_loop_location.\n-\t* tree-vect-analyze.c (vect_analyze_offset_expr, \n+\t* tree-vect-analyze.c (vect_analyze_offset_expr,\n \tvect_determin_vectorization_factor, vect_analyze_operations,\n \tvect_analyze_scalar_cycles, vect_analyze_data_ref_dependence,\n \tvect_analyze_data_ref_dependences, vect_compute_data_ref_alignment,\n@@ -3128,8 +3134,8 @@\n \tvect_analyze_loop): Adjust vect_print_dump_info API.\n \t* tree-vect-transform.c (vect_create_addr_base_for_vector_ref,\n \tvect_create_data_ref_ptr, vect_init_vector, vect_get_vec_def_for_operand,\n-\tvect_finish_stmt_generation, vectorizable_assignment, \n-\tvectorizable_operation, vectorizable_store, vectorizable_load, \n+\tvect_finish_stmt_generation, vectorizable_assignment,\n+\tvectorizable_operation, vectorizable_store, vectorizable_load,\n \tvectorizable_live_operation, vectorizable_condition, vect_transform_stmt,\n \tvect_update_ivs_after_vectorizer, vect_do_peeling_for_loop_bound,\n \tvect_gen_ninters_for_prolog_loop, vect_do_peeling_for_alignment,\n@@ -3151,14 +3157,14 @@\n \t(pa_tls_symbol_ref_1, pa_tls_referenced_p): New.\n \t(TARGET_CANNOT_FORCE_CONST_MEM): Define.\n \t(emit_move_sequence): Handle TLS addresses.\n-\t(pa_encode_section_info): Call default handler to handle common \n+\t(pa_encode_section_info): Call default handler to handle common\n \tsections.\n \t* config/pa/pa.h (PA_SYMBOL_REF_TLS_P): New.\n \t(CONSTANT_ADDRESS_P): Reject TLS operands.\n \t(TARGET_HAVE_TLS) [HAVE_AS_TLS]: Define.\n \t* config/pa/pa.md (UNSPEC_TP, UNSPEC_TLSGD, UNSPEC_TLSLDM)\n \t(UNSPEC_TLSLDO, UNSPEC_TLSLDBASE, UNSPEC_TLSIE)\n-\t(UNSPEC_TLSLE): Define new constants. \n+\t(UNSPEC_TLSLE): Define new constants.\n \t(tgd_load, tld_load, tld_offset_load, tp_load, tie_load, tle_load): New.\n \t* config/pa/predicates.md (symbolic_operand): Reject TLS operands.\n \t(tls_symbolic_operand, tgd_symbolic_operand, tld_symbolic_operand)\n@@ -3269,7 +3275,7 @@\n \tpass_postreload_cse): New.\n \t* profile.c (gate_handle_profiling, pass_profiling,\n \trest_of_handle_branch_prob, pass_branch_prob): New.\n-\t* recog.c (pass pass_split_for_shorten_branches, gate_do_final_split, \n+\t* recog.c (pass pass_split_for_shorten_branches, gate_do_final_split,\n \tpass_split_before_regstack, gate_handle_split_before_regstack,\n \tgate_handle_peephole2, rest_of_handle_peephole2, pass_peephole2,\n \trest_of_handle_split_all_insns, pass_split_all_insns): New.\n@@ -3343,7 +3349,7 @@\n \tdump_enabled_p, dump_initialized_p, dump_begin, dump_end, dump_node,\n \tdump_switch_p, dump_flag_name): Moved to tree-pass.h.\n \t(dump_info_p, dump_flag): Moved to tree-dump.h.\n-\t\n+\n \t* Makefile.in: Adjust dependencies for tree-pretty-print.c,\n \tcgraph.c, opts.c.\n \t* passes.c (finish_optimization_passes): Use dump_begin\n@@ -3362,7 +3368,7 @@\n \tpass_init_datastructures, pass_fixup_cfg): Make non-static.\n \t* tree-pretty-print.c: Include tree-pass.h.\n \t* cgraph.c: Include tree-dump.h.\n-\t\n+\n 2005-07-04  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-ssa-structalias.c (get_constraint_exp_from_ssa_var):\n@@ -3420,10 +3426,10 @@\n 2005-07-04  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/22279\n-\t\n+\n \t* tree-ssa-structalias.c (offset_overlaps_with_access): Use\n \tcorrect operator.\n-\t\n+\n 2005-07-04  J\"orn Rennecke <joern.rennecke@st.com>\n \n \t* sh.c (output_ieee_ccmpeq): Replace \"\\\\;\" with \"\\n\\t\".\n@@ -3498,7 +3504,7 @@\n \t<GOTO_EXPR>, <SWITCH_EXPR>: Add.\n \t(dump_enabled_p): Return TRUE if PHASE is TDI_all and any dump\n \tis enabled.\n-\t\n+\n 2005-07-03  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* c-common.h (GCC_DIAG_STYLE): Define."}, {"sha": "c611cb8b1da7af4cc5b9da2cb8a4177ca9be82a7", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7904f95fd92498d89c280e3fde8b1e1a17e2736b/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7904f95fd92498d89c280e3fde8b1e1a17e2736b/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=7904f95fd92498d89c280e3fde8b1e1a17e2736b", "patch": "@@ -96,12 +96,12 @@ Boston, MA 02110-1301, USA.  */\n    name, that also takes an argument, needs to be modified so the\n    prefix is different, otherwise a '*' after the shorter option will\n    match with the longer one.\n-   \n+\n    The SUBTARGET_OPTION_TRANSLATE_TABLE macro, which _must_ be defined\n    in gcc/config/{i386,rs6000}/darwin.h, should contain any additional\n    command-line option translations specific to the particular target\n    architecture.  */\n-   \n+\n #define TARGET_OPTION_TRANSLATE_TABLE \\\n   { \"-all_load\", \"-Zall_load\" },  \\\n   { \"-allowable_client\", \"-Zallowable_client\" },  \\\n@@ -207,7 +207,7 @@ Boston, MA 02110-1301, USA.  */\n     %{@:-o %f%u.out}%{!@:%{o*}%{!o:-o a.out}} \\\n     %{!Zdynamiclib:%{!A:%{!nostdlib:%{!nostartfiles:%S}}}} \\\n     %{L*} %(link_libgcc) %o %{fprofile-arcs|fprofile-generate|coverage:-lgcov} \\\n-    %{!nostdlib:%{!nodefaultlibs:%G %L}} \\\n+    %{!nostdlib:%{!nodefaultlibs:%(link_ssp) %G %L}} \\\n     %{!A:%{!nostdlib:%{!nostartfiles:%E}}} %{T*} %{F*} }}}}}}}}\"\n \n /* Please keep the random linker options in alphabetical order (modulo\n@@ -393,9 +393,9 @@ Boston, MA 02110-1301, USA.  */\n    links to, so there's no need for weak-ness for that.  */\n #define GTHREAD_USE_WEAK 0\n \n-/* The Darwin linker imposes two limitations on common symbols: they \n+/* The Darwin linker imposes two limitations on common symbols: they\n    can't have hidden visibility, and they can't appear in dylibs.  As\n-   a consequence, we should never use common symbols to represent \n+   a consequence, we should never use common symbols to represent\n    vague linkage. */\n #undef USE_COMMON_FOR_ONE_ONLY\n #define USE_COMMON_FOR_ONE_ONLY 0\n@@ -414,7 +414,7 @@ Boston, MA 02110-1301, USA.  */\n #undef FRAME_BEGIN_LABEL\n #define FRAME_BEGIN_LABEL \"EH_frame\"\n \n-/* Emit a label for the FDE corresponding to DECL.  EMPTY means \n+/* Emit a label for the FDE corresponding to DECL.  EMPTY means\n    emit a label for an empty FDE. */\n #define TARGET_ASM_EMIT_UNWIND_LABEL darwin_emit_unwind_label\n \n@@ -567,7 +567,7 @@ Boston, MA 02110-1301, USA.  */\n \n /* Ensure correct alignment of bss data.  */\n \n-#undef\tASM_OUTPUT_ALIGNED_DECL_LOCAL\t\t\t\t\t\n+#undef\tASM_OUTPUT_ALIGNED_DECL_LOCAL\n #define ASM_OUTPUT_ALIGNED_DECL_LOCAL(FILE, DECL, NAME, SIZE, ALIGN)\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     unsigned HOST_WIDE_INT _new_size = SIZE;\t\t\t\t\\"}, {"sha": "7263b5f5309ea3a6aed6c74a3ef207fc6b066808", "filename": "gcc/gcc.c", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7904f95fd92498d89c280e3fde8b1e1a17e2736b/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7904f95fd92498d89c280e3fde8b1e1a17e2736b/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=7904f95fd92498d89c280e3fde8b1e1a17e2736b", "patch": "@@ -602,7 +602,7 @@ proper position among the other output files.  */\n }} %{fmudflap|fmudflapth: --wrap=main}\"\n #endif\n #ifndef MFLIB_SPEC\n-#define MFLIB_SPEC \"%{fmudflap|fmudflapth: -export-dynamic}\" \n+#define MFLIB_SPEC \"%{fmudflap|fmudflapth: -export-dynamic}\"\n #endif\n \n /* config.h can define LIBGCC_SPEC to override how and when libgcc.a is\n@@ -674,7 +674,7 @@ proper position among the other output files.  */\n #ifdef TARGET_LIBC_PROVIDES_SSP\n #define LINK_SSP_SPEC \"%{fstack-protector:}\"\n #else\n-#define LINK_SSP_SPEC \"%{fstack-protector:-lssp_nonshared -lssp }\"\n+#define LINK_SSP_SPEC \"%{fstack-protector|fstack-protector-all:-lssp_nonshared -lssp }\"\n #endif\n #endif\n \n@@ -920,16 +920,16 @@ static const struct compiler default_compilers[] =\n   {\".m\",  \"#Objective-C\", 0, 0, 0}, {\".mi\",  \"#Objective-C\", 0, 0, 0},\n   {\".mm\", \"#Objective-C++\", 0, 0, 0}, {\".M\", \"#Objective-C++\", 0, 0, 0},\n   {\".mii\", \"#Objective-C++\", 0, 0, 0},\n-  {\".cc\", \"#C++\", 0, 0, 0}, {\".cxx\", \"#C++\", 0, 0, 0}, \n-  {\".cpp\", \"#C++\", 0, 0, 0}, {\".cp\", \"#C++\", 0, 0, 0}, \n+  {\".cc\", \"#C++\", 0, 0, 0}, {\".cxx\", \"#C++\", 0, 0, 0},\n+  {\".cpp\", \"#C++\", 0, 0, 0}, {\".cp\", \"#C++\", 0, 0, 0},\n   {\".c++\", \"#C++\", 0, 0, 0}, {\".C\", \"#C++\", 0, 0, 0},\n   {\".CPP\", \"#C++\", 0, 0, 0}, {\".ii\", \"#C++\", 0, 0, 0},\n   {\".ads\", \"#Ada\", 0, 0, 0}, {\".adb\", \"#Ada\", 0, 0, 0},\n-  {\".f\", \"#Fortran\", 0, 0, 0}, {\".for\", \"#Fortran\", 0, 0, 0}, \n+  {\".f\", \"#Fortran\", 0, 0, 0}, {\".for\", \"#Fortran\", 0, 0, 0},\n   {\".F\", \"#Fortran\", 0, 0, 0}, {\".FOR\", \"#Fortran\", 0, 0, 0},\n   {\".FPP\", \"#Fortran\", 0, 0, 0},\n   {\".f90\", \"#Fortran 95\", 0, 0, 0}, {\".f95\", \"#Fortran 95\", 0, 0, 0},\n-  {\".fpp\", \"#Fortran\", 0, 0, 0}, {\".F\", \"#Fortran\", 0, 0, 0}, \n+  {\".fpp\", \"#Fortran\", 0, 0, 0}, {\".F\", \"#Fortran\", 0, 0, 0},\n   {\".FOR\", \"#Fortran\", 0, 0, 0}, {\".FPP\", \"#Fortran\", 0, 0, 0},\n   {\".r\", \"#Ratfor\", 0, 0, 0},\n   {\".p\", \"#Pascal\", 0, 0, 0}, {\".pas\", \"#Pascal\", 0, 0, 0},\n@@ -1120,7 +1120,7 @@ static const struct option_map option_map[] =\n    {\"--static\", \"-static\", 0},\n    {\"--std\", \"-std=\", \"aj\"},\n    {\"--symbolic\", \"-symbolic\", 0},\n-   {\"--sysroot\", \"--sysroot=\", \"aj\"}, \n+   {\"--sysroot\", \"--sysroot=\", \"aj\"},\n    {\"--time\", \"-time\", 0},\n    {\"--trace-includes\", \"-H\", 0},\n    {\"--traditional\", \"-traditional\", 0},\n@@ -1441,7 +1441,7 @@ static const char *gcc_libexec_prefix;\n #ifndef STANDARD_STARTFILE_PREFIX_2\n #define STANDARD_STARTFILE_PREFIX_2 \"/usr/lib/\"\n #endif\n- \n+\n #ifdef CROSS_COMPILE  /* Don't use these prefixes for a cross compiler.  */\n #undef MD_EXEC_PREFIX\n #undef MD_STARTFILE_PREFIX\n@@ -3239,7 +3239,7 @@ process_command (int argc, const char **argv)\n     {\n       gcc_exec_prefix = make_relative_prefix (argv[0], standard_bindir_prefix,\n \t\t\t\t\t      standard_exec_prefix);\n-      gcc_libexec_prefix = make_relative_prefix (argv[0], \n+      gcc_libexec_prefix = make_relative_prefix (argv[0],\n \t\t\t\t\t\t standard_bindir_prefix,\n \t\t\t\t\t\t standard_libexec_prefix);\n       if (gcc_exec_prefix)\n@@ -4797,7 +4797,7 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t\t\tbool files_differ = strcmp (input_realname, temp_realname);\n \t\t\tfree (input_realname);\n \t\t\tfree (temp_realname);\n-\t\t\tif (files_differ) \t\n+\t\t\tif (files_differ)\n #endif\n \t\t\t  {\n \t\t\t    temp_filename = save_string (temp_filename,\n@@ -5656,10 +5656,10 @@ handle_braces (const char *p)\n   while (*p++ != '}');\n \n   return p;\n-  \n+\n  invalid:\n   fatal (\"braced spec '%s' is invalid at '%c'\", orig, *p);\n-  \n+\n #undef SKIP_WHITE\n }\n \n@@ -6425,13 +6425,13 @@ main (int argc, const char **argv)\n   for (i = 0; (int) i < n_infiles; i++)\n     {\n       const char *name = infiles[i].name;\n-      struct compiler *compiler = lookup_compiler (name, \n-\t\t\t\t\t\t   strlen (name), \n+      struct compiler *compiler = lookup_compiler (name,\n+\t\t\t\t\t\t   strlen (name),\n \t\t\t\t\t\t   infiles[i].language);\n-      \n+\n       if (compiler && !(compiler->combinable))\n \tcombine_inputs = false;\n-      \n+\n       if (lang_n_infiles > 0 && compiler != input_file_compiler\n \t  && infiles[i].language && infiles[i].language[0] != '*')\n \tinfiles[i].incompiler = compiler;\n@@ -6451,7 +6451,7 @@ main (int argc, const char **argv)\n       infiles[i].compiled = false;\n       infiles[i].preprocessed = false;\n     }\n-  \n+\n   if (combine_flag && save_temps_flag)\n     {\n       bool save_combine_inputs = combine_inputs;\n@@ -6462,7 +6462,7 @@ main (int argc, const char **argv)\n       for (i = 0; (int) i < n_infiles; i++)\n \t{\n \t  int this_file_error = 0;\n-\t  \n+\n \t  input_file_number = i;\n \t  set_input (infiles[i].name);\n \t  if (infiles[i].incompiler\n@@ -6571,7 +6571,7 @@ main (int argc, const char **argv)\n \n   /* Reset the input file name to the first compile/object file name, for use\n      with %b in LINK_SPEC. We use the first input file that we can find\n-     a compiler to compile it instead of using infiles.language since for \n+     a compiler to compile it instead of using infiles.language since for\n      languages other than C we use aliases that we then lookup later.  */\n   if (n_infiles > 0)\n     {\n@@ -7342,7 +7342,7 @@ print_multilib_info (void)\n \t    invalid_select:\n \t      fatal (\"multilib select '%s' is invalid\", multilib_select);\n \t    }\n-\t  \n+\n \t  ++p;\n \t}\n \n@@ -7613,7 +7613,7 @@ replace_outfile_spec_function (int argc, const char **argv)\n   /* Must have exactly two arguments.  */\n   if (argc != 2)\n     abort ();\n-  \n+\n   for (i = 0; i < n_infiles; i++)\n     {\n       if (outfiles[i] && !strcmp (outfiles[i], argv[0]))\n@@ -7622,7 +7622,7 @@ replace_outfile_spec_function (int argc, const char **argv)\n   return NULL;\n }\n \n-/* Given two version numbers, compares the two numbers.  \n+/* Given two version numbers, compares the two numbers.\n    A version number must match the regular expression\n    ([1-9][0-9]*|0)(\\.([1-9][0-9]*|0))*\n */\n@@ -7631,7 +7631,7 @@ compare_version_strings (const char *v1, const char *v2)\n {\n   int rresult;\n   regex_t r;\n-  \n+\n   if (regcomp (&r, \"^([1-9][0-9]*|0)(\\\\.([1-9][0-9]*|0))*$\",\n \t       REG_EXTENDED | REG_NOSUB) != 0)\n     abort ();\n@@ -7660,7 +7660,7 @@ compare_version_strings (const char *v1, const char *v2)\n    and nothing if it doesn't.\n \n    The supported <comparison-op> values are:\n-   \n+\n    >=  true if switch is a later (or same) version than arg1\n    !>  opposite of >=\n    <   true if switch is an earlier version than arg1\n@@ -7730,7 +7730,7 @@ version_compare_spec_function (int argc, const char **argv)\n     case '<' << 8 | '>':\n       result = comp1 < 0 || comp2 >= 0;\n       break;\n-      \n+\n     default:\n       abort ();\n     }"}]}