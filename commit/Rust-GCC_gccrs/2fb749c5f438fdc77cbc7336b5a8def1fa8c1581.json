{"sha": "2fb749c5f438fdc77cbc7336b5a8def1fa8c1581", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZiNzQ5YzVmNDM4ZmRjNzdjYmM3MzM2YjVhOGRlZjFmYThjMTU4MQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tom@tromey.com", "date": "2021-06-22T03:55:57Z"}, "committer": {"name": "Tom Tromey", "email": "tom@tromey.com", "date": "2021-06-22T19:43:08Z"}, "message": "Fix RAIIFile buglet\n\nRAIIFile's implementation of operator= can leak a file, because it\ndoesn't handle the case where the assignee holds an open file handle.", "tree": {"sha": "eeb22db8d02f7aad5448d39986f3c81c251a6c21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eeb22db8d02f7aad5448d39986f3c81c251a6c21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fb749c5f438fdc77cbc7336b5a8def1fa8c1581", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb749c5f438fdc77cbc7336b5a8def1fa8c1581", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fb749c5f438fdc77cbc7336b5a8def1fa8c1581", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb749c5f438fdc77cbc7336b5a8def1fa8c1581/comments", "author": {"login": "tromey", "id": 1557670, "node_id": "MDQ6VXNlcjE1NTc2NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tromey", "html_url": "https://github.com/tromey", "followers_url": "https://api.github.com/users/tromey/followers", "following_url": "https://api.github.com/users/tromey/following{/other_user}", "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}", "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tromey/subscriptions", "organizations_url": "https://api.github.com/users/tromey/orgs", "repos_url": "https://api.github.com/users/tromey/repos", "events_url": "https://api.github.com/users/tromey/events{/privacy}", "received_events_url": "https://api.github.com/users/tromey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tromey", "id": 1557670, "node_id": "MDQ6VXNlcjE1NTc2NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tromey", "html_url": "https://github.com/tromey", "followers_url": "https://api.github.com/users/tromey/followers", "following_url": "https://api.github.com/users/tromey/following{/other_user}", "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}", "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tromey/subscriptions", "organizations_url": "https://api.github.com/users/tromey/orgs", "repos_url": "https://api.github.com/users/tromey/repos", "events_url": "https://api.github.com/users/tromey/events{/privacy}", "received_events_url": "https://api.github.com/users/tromey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2d9faf3862a75247adbd6c233c889010902a34b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d9faf3862a75247adbd6c233c889010902a34b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2d9faf3862a75247adbd6c233c889010902a34b"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "ba37c63416defa91332332cf1da036dc30c42e17", "filename": "gcc/rust/lex/rust-lex.h", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb749c5f438fdc77cbc7336b5a8def1fa8c1581/gcc%2Frust%2Flex%2Frust-lex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb749c5f438fdc77cbc7336b5a8def1fa8c1581/gcc%2Frust%2Flex%2Frust-lex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flex%2Frust-lex.h?ref=2fb749c5f438fdc77cbc7336b5a8def1fa8c1581", "patch": "@@ -15,6 +15,12 @@ struct RAIIFile\n private:\n   FILE *file;\n \n+  void close ()\n+  {\n+    if (file != nullptr && file != stdin)\n+      fclose (file);\n+  }\n+\n public:\n   RAIIFile (const char *filename)\n   {\n@@ -31,17 +37,14 @@ struct RAIIFile\n   RAIIFile (RAIIFile &&other) : file (other.file) { other.file = nullptr; }\n   RAIIFile &operator= (RAIIFile &&other)\n   {\n+    close ();\n     file = other.file;\n     other.file = nullptr;\n \n     return *this;\n   }\n \n-  ~RAIIFile ()\n-  {\n-    if (file != nullptr && file != stdin)\n-      fclose (file);\n-  }\n+  ~RAIIFile () { close (); }\n \n   FILE *get_raw () { return file; }\n };"}]}