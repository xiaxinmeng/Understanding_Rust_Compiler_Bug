{"sha": "63798f67dcc848dcd110ce222b97304565c9ea29", "node_id": "C_kwDOANBUbNoAKDYzNzk4ZjY3ZGNjODQ4ZGNkMTEwY2UyMjJiOTczMDQ1NjVjOWVhMjk", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-05-23T11:54:53Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-05-23T11:54:53Z"}, "message": "tilepro: fix missing ARRAY_SIZE macro\n\ngcc/ChangeLog:\n\n\t* config/tilepro/gen-mul-tables.cc (ARRAY_SIZE): Add new macro.", "tree": {"sha": "d1a34fda7219a7f6c4bec5295f8d15a0df5d0c2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1a34fda7219a7f6c4bec5295f8d15a0df5d0c2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63798f67dcc848dcd110ce222b97304565c9ea29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63798f67dcc848dcd110ce222b97304565c9ea29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63798f67dcc848dcd110ce222b97304565c9ea29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63798f67dcc848dcd110ce222b97304565c9ea29/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0236ea984c0d08f282ad03b1c36acad014e5ba4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0236ea984c0d08f282ad03b1c36acad014e5ba4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0236ea984c0d08f282ad03b1c36acad014e5ba4d"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "52183982f65b9830039fc378c9ab97653a5be065", "filename": "gcc/config/tilepro/gen-mul-tables.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63798f67dcc848dcd110ce222b97304565c9ea29/gcc%2Fconfig%2Ftilepro%2Fgen-mul-tables.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63798f67dcc848dcd110ce222b97304565c9ea29/gcc%2Fconfig%2Ftilepro%2Fgen-mul-tables.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilepro%2Fgen-mul-tables.cc?ref=63798f67dcc848dcd110ce222b97304565c9ea29", "patch": "@@ -90,6 +90,8 @@ typedef long long MUL_TYPE;\n #define MIN(x, y)  ((x) <= (y) ? (x) : (y))\n #define MAX(x, y)  ((x) >= (y) ? (x) : (y))\n \n+#define ARRAY_SIZE(a) (sizeof (a) / sizeof ((a)[0]))\n+\n /* For this program a unary op is one which has only one nonconstant\n    operand.  So shift left by 5 is considered unary.  */\n typedef MUL_TYPE (*unary_op_func) (MUL_TYPE);"}]}