{"sha": "d5afd1d10bc39a4c56e0591554ab39063fa54341", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVhZmQxZDEwYmMzOWE0YzU2ZTA1OTE1NTRhYjM5MDYzZmE1NDM0MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-17T20:44:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-17T20:44:06Z"}, "message": "[#if VMS] (O_RDONLY, O_WRONLY): Delete (redundant).\n\n(BSTRING): Delete (obsolete; usage occurs prior to definition).\n(do_include): Handle old VAX C style includes better.\n\nFrom-SVN: r13721", "tree": {"sha": "8630f2b36e3179f9ce63cc9182736b9430346bda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8630f2b36e3179f9ce63cc9182736b9430346bda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5afd1d10bc39a4c56e0591554ab39063fa54341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5afd1d10bc39a4c56e0591554ab39063fa54341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5afd1d10bc39a4c56e0591554ab39063fa54341", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5afd1d10bc39a4c56e0591554ab39063fa54341/comments", "author": null, "committer": null, "parents": [{"sha": "ae9cb2081c750a64b97c14fea8f49b642ead1343", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae9cb2081c750a64b97c14fea8f49b642ead1343", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae9cb2081c750a64b97c14fea8f49b642ead1343"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "b8426f2cb8bc41d97b52e907779f82b284ea7f75", "filename": "gcc/cccp.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5afd1d10bc39a4c56e0591554ab39063fa54341/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5afd1d10bc39a4c56e0591554ab39063fa54341/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=d5afd1d10bc39a4c56e0591554ab39063fa54341", "patch": "@@ -219,8 +219,6 @@ my_bzero (b, length)\n /* VMS-specific definitions */\n #ifdef VMS\n #include <descrip.h>\n-#define O_RDONLY\t0\t/* Open arg for Read/Only  */\n-#define O_WRONLY\t1\t/* Open arg for Write/Only */\n #define read(fd,buf,size)\tVMS_read (fd,buf,size)\n #define write(fd,buf,size)\tVMS_write (fd,buf,size)\n #define open(fname,mode,prot)\tVMS_open (fname,mode,prot)\n@@ -237,9 +235,6 @@ static void hack_vms_include_specification ();\n #define INO_T_EQ(a, b) (!bcmp((char *) &(a), (char *) &(b), sizeof (a)))\n #define INO_T_HASH(a) 0\n #define INCLUDE_LEN_FUDGE 12\t/* leave room for VMS syntax conversion */\n-#ifdef __GNUC__\n-#define BSTRING\t\t\t/* VMS/GCC supplies the bstring routines */\n-#endif /* __GNUC__ */\n #endif /* VMS */\n \n #ifndef O_RDONLY\n@@ -4204,6 +4199,9 @@ do_include (buf, limit, op, keyword)\n   int retried = 0;\t\t/* Have already tried macro\n \t\t\t\t   expanding the include line*/\n   int angle_brackets = 0;\t/* 0 for \"...\", 1 for <...> */\n+#ifdef VMS\n+  int vaxc_include = 0;\t\t/* 1 for token without punctuation */\n+#endif\n   int pcf = -1;\n   char *pcfbuf;\n   char *pcfbuflimit;\n@@ -4315,6 +4313,7 @@ do_include (buf, limit, op, keyword)\n       while (fin != limit && (!isspace(*fin)))\n \t*fend++ = *fin++;\n       warning (\"VAX-C-style include specification found, use '#include <filename.h>' !\");\n+      vaxc_include = 1;\n       if (fin == limit) {\n \tangle_brackets = 1;\n \t/* If -I-, start with the first -I dir after the -I-.  */\n@@ -4432,12 +4431,12 @@ do_include (buf, limit, op, keyword)\n          full VMS file specification */\n       if (searchptr->fname[0]) {\n \t/* Fix up the filename */\n-\thack_vms_include_specification (fname);\n+\thack_vms_include_specification (fname, vaxc_include);\n       } else {\n-      \t/* This is a normal VMS filespec, so use it unchanged.  */\n+\t/* This is a normal VMS filespec, so use it unchanged.  */\n \tstrcpy (fname, fbeg);\n \t/* if it's '#include filename', add the missing .h */\n-\tif (index(fname,'.')==NULL) {\n+\tif (vaxc_include && index(fname,'.')==NULL) {\n \t  strcat (fname, \".h\");\n \t}\n       }\n@@ -10009,8 +10008,9 @@ savestring (input)\n    VMS file specification.  */\n \n static void\n-hack_vms_include_specification (fname)\n+hack_vms_include_specification (fname, vaxc_include)\n      char *fname;\n+     int vaxc_include;\n {\n   register char *cp, *cp1, *cp2;\n   int f, check_filename_before_returning;\n@@ -10024,7 +10024,7 @@ hack_vms_include_specification (fname)\n    * Check if we have a vax-c style '#include filename'\n    * and add the missing .h\n    */\n-  if (!index (cp,'.'))\n+  if (vaxc_include && !index (cp,'.'))\n     strcat (cp, \".h\");\n \n   cp2 = Local;\t\t\t/* initialize */"}]}