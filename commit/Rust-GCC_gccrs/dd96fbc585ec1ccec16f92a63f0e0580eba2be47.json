{"sha": "dd96fbc585ec1ccec16f92a63f0e0580eba2be47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ5NmZiYzU4NWVjMWNjZWMxNmY5MmE2M2YwZTA1ODBlYmEyYmU0Nw==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gnu.org", "date": "2001-07-23T21:20:35Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2001-07-23T21:20:35Z"}, "message": "extend.texi: Update __builtin_return_address and __builtin_frame_address.\n\n2001-07-23  H.J. Lu  (hjl@gnu.org)\n\n\t* doc/extend.texi: Update __builtin_return_address and\n\t__builtin_frame_address.\n\nFrom-SVN: r44281", "tree": {"sha": "d41a81baa437c4e1c570daa22ef2507b41492629", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d41a81baa437c4e1c570daa22ef2507b41492629"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd96fbc585ec1ccec16f92a63f0e0580eba2be47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd96fbc585ec1ccec16f92a63f0e0580eba2be47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd96fbc585ec1ccec16f92a63f0e0580eba2be47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd96fbc585ec1ccec16f92a63f0e0580eba2be47/comments", "author": null, "committer": null, "parents": [{"sha": "c50e5bc0abd1531bdc12772fe236b1053001a22a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c50e5bc0abd1531bdc12772fe236b1053001a22a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c50e5bc0abd1531bdc12772fe236b1053001a22a"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "c7c0c760dc69aa26a313c8e9121cf27469819eec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd96fbc585ec1ccec16f92a63f0e0580eba2be47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd96fbc585ec1ccec16f92a63f0e0580eba2be47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd96fbc585ec1ccec16f92a63f0e0580eba2be47", "patch": "@@ -1,3 +1,8 @@\n+2001-07-23  H.J. Lu  (hjl@gnu.org)\n+\n+\t* doc/extend.texi: Update __builtin_return_address and\n+\t__builtin_frame_address.\n+\n 2001-07-23  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.c (ix86_expand_setcc): Don't use method 0"}, {"sha": "787b722aa0e708b2295afec590e6a0a2be2f9269", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd96fbc585ec1ccec16f92a63f0e0580eba2be47/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd96fbc585ec1ccec16f92a63f0e0580eba2be47/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=dd96fbc585ec1ccec16f92a63f0e0580eba2be47", "patch": "@@ -3703,7 +3703,9 @@ The @var{level} argument must be a constant integer.\n \n On some machines it may be impossible to determine the return address of\n any function other than the current one; in such cases, or when the top\n-of the stack has been reached, this function will return @code{0}.\n+of the stack has been reached, this function will return @code{0} or a\n+random value. In addition, @code{__builtin_frame_address} may be used\n+to determine if the top of the stack has been reached.\n \n This function should only be used with a non-zero argument for debugging\n purposes.\n@@ -3725,8 +3727,13 @@ has a dedicated frame pointer register, and the function has a frame,\n then @code{__builtin_frame_address} will return the value of the frame\n pointer register.\n \n-The caveats that apply to @code{__builtin_return_address} apply to this\n-function as well.\n+On some machines it may be impossible to determine the frame address of\n+any function other than the current one; in such cases, or when the top\n+of the stack has been reached, this function will return @code{0} if\n+the first frame pointer is properly initialized by the startup code.\n+\n+This function should only be used with a non-zero argument for debugging\n+purposes.\n @end deftypefn\n \n @node Other Builtins"}]}