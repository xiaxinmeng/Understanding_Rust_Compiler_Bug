{"sha": "21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEzNzVmMGRlZDJkYmM0MjQwYmQ5ZTNiZmNiOGY0ODQ1MWNlMDJiNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-10-04T07:43:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-10-04T07:43:54Z"}, "message": "id-17.f: For ilp32 allow graphite codegen errors and scan for one.\n\n2017-10-04  Richard Biener  <rguenther@suse.de>\n\n\t* gfortran.dg/graphite/id-17.f: For ilp32 allow graphite codegen\n\terrors and scan for one.\n\t* gfortran.dg/graphite/id-19.f: Likewise.\n\t* gfortran.dg/graphite/pr29832.f90: Likewise.\n\t* gfortran.dg/graphite/pr42326-1.f90: Likewise.\n\t* gfortran.dg/graphite/pr42326.f90: Likewise.\n\t* gfortran.dg/graphite/pr68550-2.f90: Likewise.\n\t* gfortran.dg/graphite/run-id-2.f90: Likewise.\n\t* gfortran.dg/graphite/run-id-3.f90: Likewise.\n\t* gfortran.dg/graphite/pr42393-1.f90: Dump graphite.\n\nFrom-SVN: r253394", "tree": {"sha": "a0e68843360fe8684164d88f28126d31c19dd597", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0e68843360fe8684164d88f28126d31c19dd597"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "86a865a0a1fd3be1f4cc24531d80bf34be0a9379", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86a865a0a1fd3be1f4cc24531d80bf34be0a9379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86a865a0a1fd3be1f4cc24531d80bf34be0a9379"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "9205fbe6846edf16c353f53c283122c170cbc454", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4", "patch": "@@ -1,3 +1,16 @@\n+2017-10-04  Richard Biener  <rguenther@suse.de>\n+\n+\t* gfortran.dg/graphite/id-17.f: For ilp32 allow graphite codegen\n+\terrors and scan for one.\n+\t* gfortran.dg/graphite/id-19.f: Likewise.\n+\t* gfortran.dg/graphite/pr29832.f90: Likewise.\n+\t* gfortran.dg/graphite/pr42326-1.f90: Likewise.\n+\t* gfortran.dg/graphite/pr42326.f90: Likewise.\n+\t* gfortran.dg/graphite/pr68550-2.f90: Likewise.\n+\t* gfortran.dg/graphite/run-id-2.f90: Likewise.\n+\t* gfortran.dg/graphite/run-id-3.f90: Likewise.\n+\t* gfortran.dg/graphite/pr42393-1.f90: Dump graphite.\n+\n 2017-10-03  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/float128-odd.c: New test."}, {"sha": "043ef988e5039af723f7e4490928e4777c143ba1", "filename": "gcc/testsuite/gfortran.dg/graphite/id-17.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-17.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-17.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-17.f?ref=21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4", "patch": "@@ -1,3 +1,4 @@\n+! { dg-additional-options \"-fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" { target ilp32 } }\n       SUBROUTINE SPECTOP(Dr,N)\n       DIMENSION d1(0:32,0:32) , Dr(0:32,0:32) , x(0:32)\n       DO k = 0 , N\n@@ -14,3 +15,4 @@ SUBROUTINE SPECTOP(Dr,N)\n          ENDDO\n       ENDDO\n       END\n+! { dg-final { scan-tree-dump-times \"code generation error\" 1 \" graphite\" { target ilp32 } } }"}, {"sha": "824397c2ae26857c1c708058cfd41a2da5dcdd47", "filename": "gcc/testsuite/gfortran.dg/graphite/id-19.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-19.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-19.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fid-19.f?ref=21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4", "patch": "@@ -1,3 +1,4 @@\n+! { dg-additional-options \"-fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" { target ilp32 } }\n       SUBROUTINE ECCODR(FPQR)\n       DIMENSION FPQR(25,25,25)\n       INTEGER P,Q,R\n@@ -13,3 +14,4 @@ SUBROUTINE ECCODR(FPQR)\n   140    QM2= QM2+TWO\n   150 PM2= PM2+TWO\n       END\n+! { dg-final { scan-tree-dump-times \"code generation error\" 1 \" graphite\" { target ilp32 } } }"}, {"sha": "5ded45ed886332e89a3a23831aeb6530a1d7e647", "filename": "gcc/testsuite/gfortran.dg/graphite/pr29832.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr29832.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr29832.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr29832.f90?ref=21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4", "patch": "@@ -1,5 +1,6 @@\n ! { dg-do run }\n ! { dg-options \"-O2 -ftree-loop-linear\" }\n+! { dg-additional-options \"-fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" { target ilp32 } }\n \n ! Program to test the scalarizer\n program testarray\n@@ -24,3 +25,4 @@ program testarray\n    end do\n end program\n \n+! { dg-final { scan-tree-dump-times \"code generation error\" 1 \" graphite\" { target ilp32 } } }"}, {"sha": "512b71650a008b3c3c6a2dc373307dd3e6925c05", "filename": "gcc/testsuite/gfortran.dg/graphite/pr42326-1.f90", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42326-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42326-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42326-1.f90?ref=21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4", "patch": "@@ -1,7 +1,7 @@\n ! { dg-do compile { target i?86-*-* x86_64-*-* } }\n ! { dg-require-effective-target ilp32 }\n ! { dg-require-effective-target sse2 }\n-! { dg-options \"-O2 -floop-parallelize-all -fprefetch-loop-arrays -msse2\" }\n+! { dg-options \"-O2 -floop-parallelize-all -fprefetch-loop-arrays -msse2 -fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" }\n \n subroutine phasad(t,i,ium)\n   implicit none\n@@ -17,3 +17,4 @@ subroutine phasad(t,i,ium)\n   return\n end subroutine phasad\n \n+! { dg-final { scan-tree-dump-times \"code generation error\" 1 \" graphite\" } }"}, {"sha": "9544ee7c9f77056a7266e51fef2046ea36a58f43", "filename": "gcc/testsuite/gfortran.dg/graphite/pr42326.f90", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42326.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42326.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42326.f90?ref=21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4", "patch": "@@ -1,7 +1,7 @@\n ! { dg-do compile { target i?86-*-* x86_64-*-* } }\n ! { dg-require-effective-target ilp32 }\n ! { dg-require-effective-target sse2 }\n-! { dg-options \"-O2 -floop-strip-mine -fprefetch-loop-arrays -msse2\" }\n+! { dg-options \"-O2 -floop-strip-mine -fprefetch-loop-arrays -msse2 -fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" }\n \n subroutine blts ( ldmx, ldmy, v, tmp1, i, j, k)\n   implicit none\n@@ -34,3 +34,4 @@ subroutine phasad(t,i,ium)\n   return\n end subroutine phasad\n \n+! { dg-final { scan-tree-dump-times \"code generation error\" 1 \" graphite\" } }"}, {"sha": "21aa7d126ee7cc9c9ef70c19c3436b3c224f7dcc", "filename": "gcc/testsuite/gfortran.dg/graphite/pr42393-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42393-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42393-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42393-1.f90?ref=21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4", "patch": "@@ -1,4 +1,4 @@\n-! { dg-options \"-O2 -fgraphite-identity -fno-loop-block -fno-loop-interchange -fno-loop-strip-mine --param graphite-allow-codegen-errors=1\" }\n+! { dg-options \"-O2 -fgraphite-identity -fno-loop-block -fno-loop-interchange -fno-loop-strip-mine -fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" }\n \n MODULE beta_gamma_psi\n   INTEGER, PARAMETER :: dp=KIND(0.0D0)"}, {"sha": "afdc47fa6545bc0c55f596e194f3d4494b3b1ae5", "filename": "gcc/testsuite/gfortran.dg/graphite/pr68550-2.f90", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr68550-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr68550-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr68550-2.f90?ref=21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4", "patch": "@@ -1,5 +1,6 @@\n ! { dg-do compile }\n ! { dg-options \"-floop-nest-optimize -fcheck=bounds -O1\" }\n+! { dg-additional-options \"-fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" { target ilp32 } }\n \n SUBROUTINE PD2VAL(RES,NDERIV,TG1,TG2,C0)\n     INTEGER, PARAMETER :: dp=8\n@@ -12,3 +13,5 @@ SUBROUTINE PD2VAL(RES,NDERIV,TG1,TG2,C0)\n   RES(K)=RES(K)+DOT_PRODUCT(T1(0:3),C0(96:99,K))*T2(10)\n  ENDDO\n END SUBROUTINE PD2VAL\n+\n+! { dg-final { scan-tree-dump-times \"code generation error\" 1 \" graphite\" { target ilp32 } } }"}, {"sha": "c6d2f947838dbfb53f3bb24e215faa39a8c9f1fb", "filename": "gcc/testsuite/gfortran.dg/graphite/run-id-2.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Frun-id-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Frun-id-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Frun-id-2.f90?ref=21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4", "patch": "@@ -1,3 +1,4 @@\n+! { dg-additional-options \"-fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" { target ilp32 } }\n   IMPLICIT NONE\n   INTEGER, PARAMETER :: dp=KIND(0.0D0)\n   REAL(KIND=dp)      :: res\n@@ -64,3 +65,4 @@ FUNCTION exp_radius_very_extended(la_min,la_max,lb_min,lb_max,ra,rb,rp,&\n   END FUNCTION exp_radius_very_extended\n \n END\n+! { dg-final { scan-tree-dump-times \"code generation error\" 1 \" graphite\" { target ilp32 } } }"}, {"sha": "03b62103e6774618d681d16f120f43d54022571d", "filename": "gcc/testsuite/gfortran.dg/graphite/run-id-3.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Frun-id-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Frun-id-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Frun-id-3.f90?ref=21375f0ded2dbc4240bd9e3bfcb8f48451ce02b4", "patch": "@@ -1,5 +1,6 @@\n ! { dg-do run }\n ! { dg-options \"-ffrontend-optimize -floop-nest-optimize\" }\n+! { dg-additional-options \"-fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" { target ilp32 } }\n ! PR 56872 - wrong front-end optimization with a single constructor.\n ! Original bug report by Rich Townsend.\n   integer :: k\n@@ -10,3 +11,4 @@\n   res = SUM([(s**(REAL(k-1)/REAL(m-1)),k=1,m)])\n   if (abs(res - 5.84732246) > 1e-6) call abort\n   end\n+! { dg-final { scan-tree-dump-times \"code generation error\" 1 \" graphite\" { target ilp32 } } }"}]}