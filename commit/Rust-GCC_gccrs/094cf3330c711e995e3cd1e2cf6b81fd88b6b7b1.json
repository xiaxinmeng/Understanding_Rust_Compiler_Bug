{"sha": "094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk0Y2YzMzMwYzcxMWU5OTVlM2NkMWUyY2Y2YjgxZmQ4OGI2YjdiMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T15:12:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T15:12:14Z"}, "message": "[multiple changes]\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb (ip, rv): Prevent from being optimized away.\n\t* gnatls.adb (gnatls): Set E_Fatal exit status if ali file not found.\n\t* s-imgllb.adb, s-imgllw.adb, s-imgwiu.adb, s-imgbiu.adb: Minor\n\treformatting.\n\n2014-07-29  Vincent Celier  <celier@adacore.com>\n\n\t* prj-pp.adb: Minor comment update.\n\t* frontend.adb: If a target dependency info file has been read\n\tthrough switch -gnateT= add it to the dependencies of the source\n\tbeing compiled.\n\nFrom-SVN: r213211", "tree": {"sha": "0680b62a28012eab69f36bdffeb5b8e66d9b4973", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0680b62a28012eab69f36bdffeb5b8e66d9b4973"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/comments", "author": null, "committer": null, "parents": [{"sha": "38564f81946e0a79b7a3da3459eb4e40442d0ee6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38564f81946e0a79b7a3da3459eb4e40442d0ee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38564f81946e0a79b7a3da3459eb4e40442d0ee6"}], "stats": {"total": 103, "additions": 77, "deletions": 26}, "files": [{"sha": "6a550999775c3f927db01a71cac0afe79f6318f2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1", "patch": "@@ -1,3 +1,17 @@\n+2014-07-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb (ip, rv): Prevent from being optimized away.\n+\t* gnatls.adb (gnatls): Set E_Fatal exit status if ali file not found.\n+\t* s-imgllb.adb, s-imgllw.adb, s-imgwiu.adb, s-imgbiu.adb: Minor\n+\treformatting.\n+\n+2014-07-29  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-pp.adb: Minor comment update.\n+\t* frontend.adb: If a target dependency info file has been read\n+\tthrough switch -gnateT= add it to the dependencies of the source\n+\tbeing compiled.\n+\n 2014-07-29  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch3.adb, prj.adb: Minor reformatting."}, {"sha": "dd58c86c3c80cf555d0f6b97d54cce0b7a6409bf", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1", "patch": "@@ -314,6 +314,20 @@ begin\n       Opt.Suppress_Options := Scope_Suppress;\n    end;\n \n+   --  If a target dependency info file has been read through switch -gnateT=,\n+   --  add it to the dependencies.\n+\n+   if Target_Dependent_Info_Read_Name /= null then\n+      declare\n+         Index : Source_File_Index;\n+      begin\n+         Name_Len := 0;\n+         Add_Str_To_Name_Buffer (Target_Dependent_Info_Read_Name.all);\n+         Index := Load_Config_File (Name_Enter);\n+         Prepcomp.Add_Dependency (Index);\n+      end;\n+   end if;\n+\n    --  This is where we can capture the value of the compilation unit specific\n    --  restrictions that have been set by the config pragma files (or from\n    --  Targparm), for later restoration when processing e.g. subunits."}, {"sha": "576b41a17e4157a16ba191c46a7097a5f752a42c", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1", "patch": "@@ -129,6 +129,9 @@ procedure Gnatls is\n    RTS_Specified : String_Access := null;\n    --  Used to detect multiple use of --RTS= switch\n \n+   Exit_Status : Exit_Code_Type := E_Success;\n+   --  Reset to E_Fatal if bad error found\n+\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -1764,7 +1767,7 @@ begin\n    Initialize_ALI;\n    Initialize_ALI_Source;\n \n-   --  Print out all library for which no ALI files can be located\n+   --  Print out all libraries for which no ALI files can be located\n \n    while More_Lib_Files loop\n       Main_File := Next_Main_Lib_File;\n@@ -1782,6 +1785,7 @@ begin\n             Write_Str (Name_Buffer (1 .. Name_Len));\n             Write_Char ('\"'); -- \"\n             Write_Eol;\n+            Exit_Status := E_Fatal;\n          end if;\n \n       else\n@@ -1906,5 +1910,5 @@ begin\n    --  All done. Set proper exit status\n \n    Namet.Finalize;\n-   Exit_Program (E_Success);\n+   Exit_Program (Exit_Status);\n end Gnatls;"}, {"sha": "30402eae41b0c641be57e17a542e116aedae62d0", "filename": "gcc/ada/prj-pp.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2Fprj-pp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2Fprj-pp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pp.adb?ref=094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1", "patch": "@@ -85,8 +85,7 @@ package body Prj.PP is\n       --  Outputs the indentation at the beginning of the line\n \n       procedure Output_Project_File (S : Name_Id);\n-      --  Output a string for a project file name. No concatenation even if the\n-      --  line is too long. What does that mean???\n+      --  Output a project file name in one single string literal\n \n       procedure Output_String (S : Name_Id; Indent : Natural);\n       --  Outputs a string using the default output procedures"}, {"sha": "66c76f5d7e67516e198e704153e393cc4c8aa851", "filename": "gcc/ada/s-imgbiu.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2Fs-imgbiu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2Fs-imgbiu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgbiu.adb?ref=094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -99,6 +99,10 @@ package body System.Img_BIU is\n       procedure Set_Digits (T : Unsigned);\n       --  Set digits of absolute value of T\n \n+      ----------------\n+      -- Set_Digits --\n+      ----------------\n+\n       procedure Set_Digits (T : Unsigned) is\n       begin\n          if T >= BU then"}, {"sha": "3f0da252883be9a623ce8a6f242391cec30ce576", "filename": "gcc/ada/s-imgllb.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2Fs-imgllb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2Fs-imgllb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgllb.adb?ref=094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -102,6 +102,10 @@ package body System.Img_LLB is\n       procedure Set_Digits (T : Long_Long_Unsigned);\n       --  Set digits of absolute value of T\n \n+      ----------------\n+      -- Set_Digits --\n+      ----------------\n+\n       procedure Set_Digits (T : Long_Long_Unsigned) is\n       begin\n          if T >= BU then"}, {"sha": "78d86747a81565edf5e624313859e81fef1addb3", "filename": "gcc/ada/s-imgllw.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2Fs-imgllw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2Fs-imgllw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgllw.adb?ref=094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -96,6 +96,10 @@ package body System.Img_LLW is\n       procedure Set_Digits (T : Long_Long_Unsigned);\n       --  Set digits of absolute value of T\n \n+      ----------------\n+      -- Set_Digits --\n+      ----------------\n+\n       procedure Set_Digits (T : Long_Long_Unsigned) is\n       begin\n          if T >= 10 then"}, {"sha": "022f75ccf3f2d4341bad81dec43055525547012d", "filename": "gcc/ada/s-imgwiu.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2Fs-imgwiu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2Fs-imgwiu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgwiu.adb?ref=094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -94,6 +94,10 @@ package body System.Img_WIU is\n       procedure Set_Digits (T : Unsigned);\n       --  Set digits of absolute value of T\n \n+      ----------------\n+      -- Set_Digits --\n+      ----------------\n+\n       procedure Set_Digits (T : Unsigned) is\n       begin\n          if T >= 10 then"}, {"sha": "3571073617dbe6d17d60c590971e31a60cc6ece3", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 22, "deletions": 18, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=094cf3330c711e995e3cd1e2cf6b81fd88b6b7b1", "patch": "@@ -315,7 +315,19 @@ package body Sem_Prag is\n    --  pragma. Entity name for unit and its parents is taken from item in\n    --  previous with_clause that mentions the unit.\n \n+   Dummy : Integer := 0;\n+   pragma Volatile (Dummy);\n+   --  Dummy volatile integer used in bodies of ip/rv to prevent optimization\n+\n+   procedure ip;\n+   pragma No_Inline (ip);\n+   --  A dummy procedure called when pragma Inspection_Point is analyzed. This\n+   --  is just to help debugging the front end. If a pragma Inspection_Point\n+   --  is added to a source program, then breaking on ip will get you to that\n+   --  point in the program.\n+\n    procedure rv;\n+   pragma No_Inline (rv);\n    --  This is a dummy function called by the processing for pragma Reviewable.\n    --  It is there for assisting front end debugging. By placing a Reviewable\n    --  pragma in the source program, a breakpoint on rv catches this place in\n@@ -15416,23 +15428,6 @@ package body Sem_Prag is\n             Arg : Node_Id;\n             Exp : Node_Id;\n \n-            procedure ip;\n-            --  A dummy procedure called when pragma Inspection_Point is\n-            --  analyzed. This is just to help debugging the front end. If\n-            --  a pragma Inspection_Point is added to a source program, then\n-            --  breaking on ip will get you to that point in the program.\n-\n-            --------\n-            -- ip --\n-            --------\n-\n-            procedure ip is\n-            begin\n-               null;\n-            end ip;\n-\n-         --  Start of processing for Inspection_Point\n-\n          begin\n             ip;\n \n@@ -25185,6 +25180,15 @@ package body Sem_Prag is\n       Externals.Init;\n    end Initialize;\n \n+   --------\n+   -- ip --\n+   --------\n+\n+   procedure ip is\n+   begin\n+      Dummy := Dummy + 1;\n+   end ip;\n+\n    -----------------------------\n    -- Is_Config_Static_String --\n    -----------------------------\n@@ -26119,7 +26123,7 @@ package body Sem_Prag is\n \n    procedure rv is\n    begin\n-      null;\n+      Dummy := Dummy + 1;\n    end rv;\n \n    --------------------------------"}]}