{"sha": "27eb8ab1456ca2f458afad757bcdc3993b2b3157", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdlYjhhYjE0NTZjYTJmNDU4YWZhZDc1N2JjZGMzOTkzYjJiMzE1Nw==", "commit": {"author": {"name": "Josef Zlomek", "email": "zlomekj@suse.cz", "date": "2003-10-30T20:18:13Z"}, "committer": {"name": "Josef Zlomek", "email": "zlomek@gcc.gnu.org", "date": "2003-10-30T20:18:13Z"}, "message": "Jan Hubicka <jh@suse.cz>\n\n\tJan Hubicka <jh@suse.cz>\n\t* vasprintf.c (int_vasprintf): Pass va_list by value.\n\tUse va_copy for copying va_list.\n\t(vasprintf): Pass va_list by value.\n\nFrom-SVN: r73098", "tree": {"sha": "c0e3fcffa496717d25f87e9789d1e8118222b5cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0e3fcffa496717d25f87e9789d1e8118222b5cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27eb8ab1456ca2f458afad757bcdc3993b2b3157", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27eb8ab1456ca2f458afad757bcdc3993b2b3157", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27eb8ab1456ca2f458afad757bcdc3993b2b3157", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27eb8ab1456ca2f458afad757bcdc3993b2b3157/comments", "author": null, "committer": null, "parents": [{"sha": "00d4a6d40ea150ae845485b371e6458bdc350646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00d4a6d40ea150ae845485b371e6458bdc350646", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00d4a6d40ea150ae845485b371e6458bdc350646"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "0cfc57dd28a12c93ab5c35a59a42a4fd97ab05d1", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27eb8ab1456ca2f458afad757bcdc3993b2b3157/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27eb8ab1456ca2f458afad757bcdc3993b2b3157/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=27eb8ab1456ca2f458afad757bcdc3993b2b3157", "patch": "@@ -1,3 +1,10 @@\n+2003-10-30  Josef Zlomek  <zlomekj@suse.cz>\n+\n+\tJan Hubicka <jh@suse.cz>\n+\t* vasprintf.c (int_vasprintf): Pass va_list by value.\n+\tUse va_copy for copying va_list.\n+\t(vasprintf): Pass va_list by value.\n+\n 2003-10-30  Josef Zlomek  <zlomekj@suse.cz>\n \n \t* hashtab.c (htab_find_slot_with_hash): Decrease n_deleted"}, {"sha": "d3d4f3a1553bebc2b14bbdc6c92861a6917d74b0", "filename": "libiberty/vasprintf.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27eb8ab1456ca2f458afad757bcdc3993b2b3157/libiberty%2Fvasprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27eb8ab1456ca2f458afad757bcdc3993b2b3157/libiberty%2Fvasprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fvasprintf.c?ref=27eb8ab1456ca2f458afad757bcdc3993b2b3157", "patch": "@@ -59,21 +59,25 @@ not be allocated, minus one is returned and @code{NULL} is stored in\n \n */\n \n-static int int_vasprintf PARAMS ((char **, const char *, va_list *));\n+static int int_vasprintf PARAMS ((char **, const char *, va_list));\n \n static int\n int_vasprintf (result, format, args)\n      char **result;\n      const char *format;\n-     va_list *args;\n+     va_list args;\n {\n   const char *p = format;\n   /* Add one to make sure that it is never zero, which might cause malloc\n      to return NULL.  */\n   int total_width = strlen (format) + 1;\n   va_list ap;\n \n-  memcpy ((PTR) &ap, (PTR) args, sizeof (va_list));\n+#ifdef va_copy\n+  va_copy (ap, args);\n+#else\n+  memcpy ((PTR) &ap, (PTR) &args, sizeof (va_list));\n+#endif\n \n   while (*p != '\\0')\n     {\n@@ -135,12 +139,15 @@ int_vasprintf (result, format, args)\n \t  p++;\n \t}\n     }\n+#ifdef va_copy\n+  va_end (ap);\n+#endif\n #ifdef TEST\n   global_total_width = total_width;\n #endif\n   *result = (char *) malloc (total_width);\n   if (*result != NULL)\n-    return vsprintf (*result, format, *args);\n+    return vsprintf (*result, format, args);\n   else\n     return -1;\n }\n@@ -155,7 +162,7 @@ vasprintf (result, format, args)\n      va_list args;\n #endif\n {\n-  return int_vasprintf (result, format, &args);\n+  return int_vasprintf (result, format, args);\n }\n \n #ifdef TEST"}]}