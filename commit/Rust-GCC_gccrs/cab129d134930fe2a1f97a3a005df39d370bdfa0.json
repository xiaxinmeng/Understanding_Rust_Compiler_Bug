{"sha": "cab129d134930fe2a1f97a3a005df39d370bdfa0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FiMTI5ZDEzNDkzMGZlMmExZjk3YTNhMDA1ZGYzOWQzNzBiZGZhMA==", "commit": {"author": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2009-05-16T16:11:11Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2009-05-16T16:11:11Z"}, "message": "re PR fortran/36031 (ARM -fshort-enums attribute not emitted for Fortran)\n\n\tPR fortran/36031\n\n\t* decl.c (set_enum_kind): Use global short-enums flag.\n\t* gfortran.h (gfc_option_t): Remove short_enums flag.\n\t* lang.opt (-fshort-enums): Refer to C documentation.\n\t* options.c (gfc_init_options, gfc_handle_option): Use global\n\tshort-enums flag.\n\nFrom-SVN: r147615", "tree": {"sha": "0aae8d8c20e5648928c65ad4486f31d06536d940", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0aae8d8c20e5648928c65ad4486f31d06536d940"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cab129d134930fe2a1f97a3a005df39d370bdfa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab129d134930fe2a1f97a3a005df39d370bdfa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cab129d134930fe2a1f97a3a005df39d370bdfa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab129d134930fe2a1f97a3a005df39d370bdfa0/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70544f4432779bad70c93beaf404a34479f6fdd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70544f4432779bad70c93beaf404a34479f6fdd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70544f4432779bad70c93beaf404a34479f6fdd8"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "7ecb921e0d3d84ad9843deadac3bf9685077619c", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cab129d134930fe2a1f97a3a005df39d370bdfa0/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cab129d134930fe2a1f97a3a005df39d370bdfa0/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=cab129d134930fe2a1f97a3a005df39d370bdfa0", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gfortran.h\"\n #include \"match.h\"\n #include \"parse.h\"\n+#include \"flags.h\"\n \n \n /* Macros to access allocate memory for gfc_data_variable,\n@@ -5295,7 +5296,7 @@ set_enum_kind(void)\n   if (max_enum == NULL || enum_history == NULL)\n     return;\n \n-  if (!gfc_option.fshort_enums)\n+  if (!flag_short_enums)\n     return;\n \n   i = 0;"}, {"sha": "b38af18f5fba59a0a7663b7089bfacd82f927e9c", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cab129d134930fe2a1f97a3a005df39d370bdfa0/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cab129d134930fe2a1f97a3a005df39d370bdfa0/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=cab129d134930fe2a1f97a3a005df39d370bdfa0", "patch": "@@ -2060,7 +2060,6 @@ typedef struct\n \n   int warn_std;\n   int allow_std;\n-  int fshort_enums;\n   int convert;\n   int record_marker;\n   int max_subrecord_length;"}, {"sha": "d29dddee8e18654c0814f9626ee71f699d5087d8", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cab129d134930fe2a1f97a3a005df39d370bdfa0/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cab129d134930fe2a1f97a3a005df39d370bdfa0/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=cab129d134930fe2a1f97a3a005df39d370bdfa0", "patch": "@@ -350,7 +350,7 @@ Append a second underscore if the name already contains an underscore\n \n fshort-enums\n Fortran\n-Use the narrowest integer type possible for enumeration types\n+; Documented in C\n \n fsign-zero\n Fortran"}, {"sha": "2d899f546abdb43b58bd94aad9c03f840839523c", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cab129d134930fe2a1f97a3a005df39d370bdfa0/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cab129d134930fe2a1f97a3a005df39d370bdfa0/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=cab129d134930fe2a1f97a3a005df39d370bdfa0", "patch": "@@ -137,7 +137,7 @@ gfc_init_options (unsigned int argc, const char **argv)\n   set_default_std_flags ();\n \n   /* -fshort-enums can be default on some targets.  */\n-  gfc_option.fshort_enums = targetm.default_short_enums ();\n+  flag_short_enums = targetm.default_short_enums ();\n \n   /* Initialize cpp-related options.  */\n   gfc_cpp_init_options(argc, argv);\n@@ -858,7 +858,7 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       break;\n \n     case OPT_fshort_enums:\n-      gfc_option.fshort_enums = 1;\n+      flag_short_enums = 1;\n       break;\n \n     case OPT_fconvert_little_endian:"}]}