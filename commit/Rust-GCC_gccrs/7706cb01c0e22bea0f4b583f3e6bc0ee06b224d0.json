{"sha": "7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzcwNmNiMDFjMGUyMmJlYTBmNGI1ODNmM2U2YmMwZWUwNmIyMjRkMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-11-23T08:36:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-11-23T08:36:59Z"}, "message": "re PR tree-optimization/68445 (ICE: internal compiler error: in operator[], at vec.h)\n\n2015-11-23  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/68445\n\t* tree-vect-slp.c (vect_create_mask_and_perm): Properly use\n\ttwo different strides.\n\n\t* gcc.dg/vect/pr68445.c: New testcase.\n\nFrom-SVN: r230737", "tree": {"sha": "2e6d615738da0b38e2308b298b66ca5b7b89dd5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e6d615738da0b38e2308b298b66ca5b7b89dd5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e63d44c2a9d2a95c7f23de189966be0a3dcc5923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e63d44c2a9d2a95c7f23de189966be0a3dcc5923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e63d44c2a9d2a95c7f23de189966be0a3dcc5923"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "f2c7f5af8fd18c4bbfb231a122dcd1f72631f458", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0", "patch": "@@ -1,3 +1,9 @@\n+2015-11-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68445\n+\t* tree-vect-slp.c (vect_create_mask_and_perm): Properly use\n+\ttwo different strides.\n+\n 2015-11-23  Robin Dapp  <rdapp@linux.vnet.ibm.com>\n \n         * config/s390/s390.h: Add new symref flags, _NOTALIGN2 etc."}, {"sha": "fd35568d410869ed2ebcedb296076ff56753476b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0", "patch": "@@ -1,3 +1,8 @@\n+2015-11-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68445\n+\t* gcc.dg/vect/pr68445.c: New testcase.\n+\n 2015-11-23  Robin Dapp  <rdapp@linux.vnet.ibm.com>\n \n         * gcc.target/s390/load-relative-check.c: New test to check"}, {"sha": "e2b0c01c2afd98fd99a43c6518225b07c7643314", "filename": "gcc/testsuite/gcc.dg/vect/pr68445.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr68445.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr68445.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr68445.c?ref=7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+\n+void IMB_double_fast_x (int *destf, int *dest, int y, int *p1f)\n+{\n+  int i;\n+  for (i = y; i > 0; i--)\n+    {\n+      *dest++ = 0;\n+      destf[0] = destf[4] = p1f[0];\n+      destf[1] = destf[5] = p1f[1];\n+      destf[2] = destf[6] = p1f[2];\n+      destf[3] = destf[7] = p1f[3];\n+      destf += 8;\n+      p1f += 4;\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump \"vectorizing stmts using SLP\" \"vect\" } } */"}, {"sha": "446ef984064216dd4b74ca27ea02856eeb187685", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=7706cb01c0e22bea0f4b583f3e6bc0ee06b224d0", "patch": "@@ -3177,10 +3177,11 @@ vect_create_mask_and_perm (gimple *stmt,\n {\n   tree perm_dest;\n   gimple *perm_stmt = NULL;\n-  int i, stride;\n+  int i, stride_in, stride_out;\n   tree first_vec, second_vec, data_ref;\n \n-  stride = SLP_TREE_NUMBER_OF_VEC_STMTS (node) / ncopies;\n+  stride_out = SLP_TREE_NUMBER_OF_VEC_STMTS (node) / ncopies;\n+  stride_in = dr_chain.length () / ncopies;\n \n   /* Initialize the vect stmts of NODE to properly insert the generated\n      stmts later.  */\n@@ -3202,10 +3203,11 @@ vect_create_mask_and_perm (gimple *stmt,\n       vect_finish_stmt_generation (stmt, perm_stmt, gsi);\n \n       /* Store the vector statement in NODE.  */\n-      SLP_TREE_VEC_STMTS (node)[stride * i + vect_stmts_counter] = perm_stmt;\n+      SLP_TREE_VEC_STMTS (node)[stride_out * i + vect_stmts_counter]\n+\t= perm_stmt;\n \n-      first_vec_indx += stride;\n-      second_vec_indx += stride;\n+      first_vec_indx += stride_in;\n+      second_vec_indx += stride_in;\n     }\n }\n "}]}