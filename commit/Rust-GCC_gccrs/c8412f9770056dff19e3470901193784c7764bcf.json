{"sha": "c8412f9770056dff19e3470901193784c7764bcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg0MTJmOTc3MDA1NmRmZjE5ZTM0NzA5MDExOTM3ODRjNzc2NGJjZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-06-30T21:01:06Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-06-30T21:01:06Z"}, "message": "dwarf2out: Handle pc_rtx as return column in REG_CFA_OFFSET too.\n\n        * dwarf2out.c (dwarf2out_frame_debug_cfa_offset): Allow PC_RTX\n        as a source, and interpret that as DWARF_FRAME_RETURN_COLUMN.\n\nFrom-SVN: r175728", "tree": {"sha": "e2d816caf52f423e1a89df03668b0ba0125a7f82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2d816caf52f423e1a89df03668b0ba0125a7f82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8412f9770056dff19e3470901193784c7764bcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8412f9770056dff19e3470901193784c7764bcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8412f9770056dff19e3470901193784c7764bcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8412f9770056dff19e3470901193784c7764bcf/comments", "author": null, "committer": null, "parents": [{"sha": "e3f903d88a6edd374d375575fa9c305868f61071", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f903d88a6edd374d375575fa9c305868f61071", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3f903d88a6edd374d375575fa9c305868f61071"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "2358289f64f0c03fc237ac97a5b571ede3db1cb0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8412f9770056dff19e3470901193784c7764bcf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8412f9770056dff19e3470901193784c7764bcf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8412f9770056dff19e3470901193784c7764bcf", "patch": "@@ -1,3 +1,8 @@\n+2011-06-30  Richard Henderson  <rth@redhat.com>\n+\n+\t* dwarf2out.c (dwarf2out_frame_debug_cfa_offset): Allow PC_RTX\n+\tas a source, and interpret that as DWARF_FRAME_RETURN_COLUMN.\n+\n 2011-06-30  Richard Henderson  <rth@redhat.com>\n \n \t* dwarf2out.c (struct reg_saved_in_data): Provide a typedef."}, {"sha": "8e543919ffe5df756e76d1eb7f9c6f28a4f17333", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8412f9770056dff19e3470901193784c7764bcf/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8412f9770056dff19e3470901193784c7764bcf/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=c8412f9770056dff19e3470901193784c7764bcf", "patch": "@@ -1982,6 +1982,7 @@ dwarf2out_frame_debug_cfa_offset (rtx set, const char *label)\n {\n   HOST_WIDE_INT offset;\n   rtx src, addr, span;\n+  unsigned int sregno;\n \n   src = XEXP (set, 1);\n   addr = XEXP (set, 0);\n@@ -2003,12 +2004,21 @@ dwarf2out_frame_debug_cfa_offset (rtx set, const char *label)\n       gcc_unreachable ();\n     }\n \n-  span = targetm.dwarf_register_span (src);\n+  if (src == pc_rtx)\n+    {\n+      span = NULL;\n+      sregno = DWARF_FRAME_RETURN_COLUMN;\n+    }\n+  else \n+    {\n+      span = targetm.dwarf_register_span (src);\n+      sregno = DWARF_FRAME_REGNUM (REGNO (src));\n+    }\n \n   /* ??? We'd like to use queue_reg_save, but we need to come up with\n      a different flushing heuristic for epilogues.  */\n   if (!span)\n-    reg_save (label, DWARF_FRAME_REGNUM (REGNO (src)), INVALID_REGNUM, offset);\n+    reg_save (label, sregno, INVALID_REGNUM, offset);\n   else\n     {\n       /* We have a PARALLEL describing where the contents of SRC live.\n@@ -2024,8 +2034,8 @@ dwarf2out_frame_debug_cfa_offset (rtx set, const char *label)\n \t{\n \t  rtx elem = XVECEXP (span, 0, par_index);\n \n-\t  reg_save (label, DWARF_FRAME_REGNUM (REGNO (elem)),\n-\t\t    INVALID_REGNUM, span_offset);\n+\t  sregno = DWARF_FRAME_REGNUM (REGNO (src));\n+\t  reg_save (label, sregno, INVALID_REGNUM, span_offset);\n \t  span_offset += GET_MODE_SIZE (GET_MODE (elem));\n \t}\n     }"}]}