{"sha": "2973090c4c62105cbb61bfc6f83be903e3c46c71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk3MzA5MGM0YzYyMTA1Y2JiNjFiZmM2ZjgzYmU5MDNlM2M0NmM3MQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-06-11T13:37:33Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-06-11T22:06:01Z"}, "message": "For 'OMP_CLAUSE' in 'dump_generic_node', dump the whole OMP clause chain\n\n... instead of just the first clause.\n\n\tgcc/\n\t* tree-pretty-print.h (dump_omp_clauses): Add 'bool = true'\n\tdefault argument.\n\t* tree-pretty-print.c (dump_omp_clauses): Update.\n\t(dump_generic_node) <OMP_CLAUSE>: Use it.\n\tgcc/testsuite/\n\t* gcc.dg/gomp/simd-clones-2.c: Enhance.", "tree": {"sha": "497117a016b456c3b565ac6ab1fc2b256b6be322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/497117a016b456c3b565ac6ab1fc2b256b6be322"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2973090c4c62105cbb61bfc6f83be903e3c46c71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2973090c4c62105cbb61bfc6f83be903e3c46c71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2973090c4c62105cbb61bfc6f83be903e3c46c71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2973090c4c62105cbb61bfc6f83be903e3c46c71/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0d73a66ae3962fa83309527d85613d72a6aa43d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0d73a66ae3962fa83309527d85613d72a6aa43d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0d73a66ae3962fa83309527d85613d72a6aa43d"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "9f7c84dc70ba4770c5f63f8af863e5577608d9a8", "filename": "gcc/testsuite/gcc.dg/gomp/simd-clones-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2973090c4c62105cbb61bfc6f83be903e3c46c71/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-clones-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2973090c4c62105cbb61bfc6f83be903e3c46c71/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-clones-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-clones-2.c?ref=2973090c4c62105cbb61bfc6f83be903e3c46c71", "patch": "@@ -7,13 +7,15 @@ int addit(int a, int b, int *c)\n   return a + b;\n }\n /* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-4 } */\n+/* { dg-final { scan-tree-dump {(?n)^__attribute__\\(\\(omp declare simd \\(notinbranch aligned\\(2:32\\)\\), omp declare simd \\(inbranch uniform\\(2\\) linear\\(1:66\\)\\)\\)\\)$} \"optimized\" } } */\n \n #pragma omp declare simd uniform(a) aligned(a:32) linear(k:1) notinbranch\n float setArray(float *a, float x, int k)\n {\n   a[k] = a[k] + x;\n   return a[k];\n }\n+/* { dg-final { scan-tree-dump {(?n)^__attribute__\\(\\(omp declare simd \\(notinbranch uniform\\(0\\) aligned\\(0:32\\) linear\\(2:1\\)\\)\\)\\)$} \"optimized\" } } */\n \n /* { dg-final { scan-tree-dump \"_ZGVbN4ua32vl_setArray\" \"optimized\" { target i?86-*-* x86_64-*-* } } } */\n /* { dg-final { scan-tree-dump \"_ZGVbN4vvva32_addit\" \"optimized\" { target i?86-*-* x86_64-*-* } } } */"}, {"sha": "bcbe669653c16620a71c76153710c644c3c36c4f", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2973090c4c62105cbb61bfc6f83be903e3c46c71/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2973090c4c62105cbb61bfc6f83be903e3c46c71/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=2973090c4c62105cbb61bfc6f83be903e3c46c71", "patch": "@@ -442,8 +442,9 @@ dump_omp_iterators (pretty_printer *pp, tree iter, int spc, dump_flags_t flags)\n }\n \n \n-/* Dump OpenMP clause CLAUSE.  PP, CLAUSE, SPC and FLAGS are as in\n-   dump_generic_node.  */\n+/* Dump OMP clause CLAUSE, without following OMP_CLAUSE_CHAIN.\n+\n+   PP, CLAUSE, SPC and FLAGS are as in dump_generic_node.  */\n \n static void\n dump_omp_clause (pretty_printer *pp, tree clause, int spc, dump_flags_t flags)\n@@ -1315,23 +1316,22 @@ dump_omp_clause (pretty_printer *pp, tree clause, int spc, dump_flags_t flags)\n }\n \n \n-/* Dump the list of OpenMP clauses.  PP, SPC and FLAGS are as in\n-   dump_generic_node.  */\n+/* Dump chain of OMP clauses.\n+\n+   PP, SPC and FLAGS are as in dump_generic_node.  */\n \n void\n-dump_omp_clauses (pretty_printer *pp, tree clause, int spc, dump_flags_t flags)\n+dump_omp_clauses (pretty_printer *pp, tree clause, int spc, dump_flags_t flags,\n+\t\t  bool leading_space)\n {\n-  if (clause == NULL)\n-    return;\n-\n-  pp_space (pp);\n-  while (1)\n+  while (clause)\n     {\n+      if (leading_space)\n+\tpp_space (pp);\n       dump_omp_clause (pp, clause, spc, flags);\n+      leading_space = true;\n+\n       clause = OMP_CLAUSE_CHAIN (clause);\n-      if (clause == NULL)\n-\treturn;\n-      pp_space (pp);\n     }\n }\n \n@@ -3641,7 +3641,10 @@ dump_generic_node (pretty_printer *pp, tree node, int spc, dump_flags_t flags,\n       goto dump_omp_body;\n \n     case OMP_CLAUSE:\n-      dump_omp_clause (pp, node, spc, flags);\n+      /* If we come here, we're dumping something that's not an OMP construct,\n+\t for example, OMP clauses attached to a function's '__attribute__'.\n+\t Dump the whole OMP clause chain.  */\n+      dump_omp_clauses (pp, node, spc, flags, false);\n       is_expr = false;\n       break;\n "}, {"sha": "cafe9aa95989c1761265c285f322b3388090c3de", "filename": "gcc/tree-pretty-print.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2973090c4c62105cbb61bfc6f83be903e3c46c71/gcc%2Ftree-pretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2973090c4c62105cbb61bfc6f83be903e3c46c71/gcc%2Ftree-pretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.h?ref=2973090c4c62105cbb61bfc6f83be903e3c46c71", "patch": "@@ -39,7 +39,8 @@ extern void print_generic_stmt (FILE *, tree, dump_flags_t = TDF_NONE);\n extern void print_generic_stmt_indented (FILE *, tree, dump_flags_t, int);\n extern void print_generic_expr (FILE *, tree, dump_flags_t = TDF_NONE);\n extern char *print_generic_expr_to_str (tree);\n-extern void dump_omp_clauses (pretty_printer *, tree, int, dump_flags_t);\n+extern void dump_omp_clauses (pretty_printer *, tree, int, dump_flags_t,\n+\t\t\t      bool = true);\n extern void dump_omp_atomic_memory_order (pretty_printer *,\n \t\t\t\t\t  enum omp_memory_order);\n extern void dump_omp_loop_non_rect_expr (pretty_printer *, tree, int,"}]}