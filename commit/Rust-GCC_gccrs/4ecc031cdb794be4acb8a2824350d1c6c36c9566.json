{"sha": "4ecc031cdb794be4acb8a2824350d1c6c36c9566", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVjYzAzMWNkYjc5NGJlNGFjYjhhMjgyNDM1MGQxYzZjMzZjOTU2Ng==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2006-10-31T17:52:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-10-31T17:52:20Z"}, "message": "errout.ads, errout.adb (Finalize): Implement switch -gnatd.m Avoid abbreviation Creat\n\n2006-10-31  Robert Dewar  <dewar@adacore.com>\n\n\t* errout.ads, errout.adb (Finalize): Implement switch -gnatd.m\n\tAvoid abbreviation Creat\n\t(Finalize): List all sources in extended mail source if -gnatl\n\tswitch is active.\n\tSuppress copyright notice to file in -gnatl=f mode if -gnatd7 set\n\t(Finalize): Implement new -gnatl=xxx switch to output listing to file\n\t(Set_Specific_Warning_On): New procedure\n\t(Set_Specific_Warning_Off): New procedure\n\tAdd implementation of new insertion \\\\\n\t(Error_Msg_Internal): Add handling for Error_Msg_Line_Length\n\t(Unwind_Internal_Type): Improve report on anonymous access_to_subprogram\n\ttypes.\n\t(Error_Msg_Internal): Make sure that we set Last_Killed to\n\tTrue when a message from another package is suppressed.\n\tImplement insertion character ~ (insert string)\n\t(First_Node): Minor adjustments to get better placement.\n\n\t* frontend.adb: \n\tImplement new -gnatl=xxx switch to output listing to file\n\n\t* gnat1drv.adb: \n\tImplement new -gnatl=xxx switch to output listing to file\n\n        * opt.ads: (Warn_On_Questionable_Missing_Paren): New switch\n\t(Commands_To_Stdout): New flag\n\tImplement new -gnatl=xxx switch to output listing to file\n\tNew switch Dump_Source_Text\n\t(Warn_On_Deleted_Code): New warning flag for -gnatwt\n\tDefine Error_Msg_Line_Length\n\t(Warn_On_Assumed_Low_Bound): New switch\n\n\t* osint.ads, osint.adb\n\t(Normalize_Directory_Name): Fix bug.\n\tImplement new -gnatl=xxx switch to output listing to file\n\t(Concat): Removed, replaced by real concatenation\n\tMake use of concatenation now allowed in compiler\n\t(Executable_Prefix.Get_Install_Dir): First get the full path, so that\n\twe find the 'lib' or 'bin' directory even when the tool has been\n\tinvoked with a relative path.\n\t(Executable_Name): New function taking string parameters.\n\n\t* osint-c.ads, osint-c.adb: \n\tImplement new -gnatl=xxx switch to output listing to file\n\n\t* sinput-d.adb: Change name Creat_Debug_File to Create_Debug_File\n\n\t* switch-c.adb: \n\tImplement new -gnatl=xxx switch to output listing to file\n\tRecognize new -gnatL switch\n\t(no longer keep in old warning about old style usage)\n\tUse concatenation to simplify code\n\tRecognize -gnatjnn switch\n\t(Scan_Front_End_Switches): Clean up handling of -gnatW\n\t(Scan_Front_End_Switches): Include Warn_On_Assumed_Low_Bound for -gnatg\n\nFrom-SVN: r118251", "tree": {"sha": "586f0245e6ae4921b36d6b6710dad5c2709422d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/586f0245e6ae4921b36d6b6710dad5c2709422d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ecc031cdb794be4acb8a2824350d1c6c36c9566", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ecc031cdb794be4acb8a2824350d1c6c36c9566", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ecc031cdb794be4acb8a2824350d1c6c36c9566", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ecc031cdb794be4acb8a2824350d1c6c36c9566/comments", "author": null, "committer": null, "parents": [{"sha": "6e443c90131e82b5140c8e3c565fbf9e1da77110", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e443c90131e82b5140c8e3c565fbf9e1da77110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e443c90131e82b5140c8e3c565fbf9e1da77110"}], "stats": {"total": 1162, "additions": 835, "deletions": 327}, "files": [{"sha": "c2dd5da6ebe50823c82dd1b2bc82afb27a963bbb", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 423, "deletions": 132, "changes": 555, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=4ecc031cdb794be4acb8a2824350d1c6c36c9566", "patch": "@@ -37,6 +37,7 @@ with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Erroutc;  use Erroutc;\n with Fname;    use Fname;\n+with Gnatvsn;  use Gnatvsn;\n with Hostparm; use Hostparm;\n with Lib;      use Lib;\n with Namet;    use Namet;\n@@ -264,7 +265,7 @@ package body Errout is\n          return;\n       end if;\n \n-      --  Start procesing of new message\n+      --  Start processing of new message\n \n       Sindex := Get_Source_File_Index (Flag_Location);\n       Test_Style_Warning_Serious_Msg (Msg);\n@@ -676,6 +677,7 @@ package body Errout is\n       end if;\n \n       Continuation := Msg_Cont;\n+      Continuation_New_Line := False;\n       Suppress_Message := False;\n       Kill_Message := False;\n       Set_Msg_Text (Msg, Sptr);\n@@ -735,8 +737,9 @@ package body Errout is\n          if In_Extended_Main_Source_Unit (Sptr) then\n             null;\n \n-         --  If the flag location is not in the main extended source\n-         --  unit then we want to eliminate the warning.\n+         --  If the flag location is not in the main extended source unit,\n+         --  then we want to eliminate the warning, unless it is in the\n+         --  extended main code unit and we want warnings on the instance.\n \n          elsif In_Extended_Main_Code_Unit (Sptr)\n            and then Warn_On_Instance\n@@ -752,6 +755,11 @@ package body Errout is\n \n          else\n             Cur_Msg := No_Error_Msg;\n+\n+            if not Continuation then\n+               Last_Killed := True;\n+            end if;\n+\n             return;\n          end if;\n       end if;\n@@ -767,6 +775,74 @@ package body Errout is\n          return;\n       end if;\n \n+      --  If error message line length set, and this is a continuation message\n+      --  then all we do is to append the text to the text of the last message\n+      --  with a comma space separator.\n+\n+      if Error_Msg_Line_Length /= 0\n+        and then Continuation\n+      then\n+         Cur_Msg := Errors.Last;\n+\n+         declare\n+            Oldm : String_Ptr := Errors.Table (Cur_Msg).Text;\n+            Newm : String (1 .. Oldm'Last + 2 + Msglen);\n+            Newl : Natural;\n+\n+         begin\n+            --  First copy old message to new one and free it\n+\n+            Newm (Oldm'Range) := Oldm.all;\n+            Newl := Oldm'Length;\n+            Free (Oldm);\n+\n+            --  Now deal with separation between messages. Normally this\n+            --  is simply comma space, but there are some special cases.\n+\n+            --  If continuation new line, then put actual NL character in msg\n+\n+            if Continuation_New_Line then\n+               Newl := Newl + 1;\n+               Newm (Newl) := ASCII.LF;\n+\n+            --  If continuation message is enclosed in parentheses, then\n+            --  special treatment (don't need a comma, and we want to combine\n+            --  successive parenthetical remarks into a single one with\n+            --  separating commas).\n+\n+            elsif Msg_Buffer (1) = '(' and then Msg_Buffer (Msglen) = ')' then\n+\n+               --  Case where existing message ends in right paren, remove\n+               --  and separate parenthetical remarks with a comma.\n+\n+               if Newm (Newl) = ')' then\n+                  Newm (Newl) := ',';\n+                  Msg_Buffer (1) := ' ';\n+\n+                  --  Case where we are adding new parenthetical comment\n+\n+               else\n+                  Newl := Newl + 1;\n+                  Newm (Newl) := ' ';\n+               end if;\n+\n+            --  Case where continuation not in parens and no new line\n+\n+            else\n+               Newm (Newl + 1 .. Newl + 2) := \", \";\n+               Newl := Newl + 2;\n+            end if;\n+\n+            --  Append new message\n+\n+            Newm (Newl + 1 .. Newl + Msglen) := Msg_Buffer (1 .. Msglen);\n+            Newl := Newl + Msglen;\n+            Errors.Table (Cur_Msg).Text := new String'(Newm (1 .. Newl));\n+         end;\n+\n+         return;\n+      end if;\n+\n       --  Otherwise build error message object for new message\n \n       Errors.Increment_Last;\n@@ -781,8 +857,8 @@ package body Errout is\n       Errors.Table (Cur_Msg).Warn     := Is_Warning_Msg;\n       Errors.Table (Cur_Msg).Style    := Is_Style_Msg;\n       Errors.Table (Cur_Msg).Serious  := Is_Serious_Error;\n-      Errors.Table (Cur_Msg).Uncond\n-        := Is_Unconditional_Msg or Is_Warning_Msg;\n+      Errors.Table (Cur_Msg).Uncond   := Is_Unconditional_Msg\n+                                           or Is_Warning_Msg;\n       Errors.Table (Cur_Msg).Msg_Cont := Continuation;\n       Errors.Table (Cur_Msg).Deleted  := False;\n \n@@ -792,8 +868,8 @@ package body Errout is\n \n       if Debug_Flag_OO or else Debug_Flag_1 then\n          Write_Eol;\n-         Output_Source_Line (Errors.Table (Cur_Msg).Line,\n-           Errors.Table (Cur_Msg).Sfile, True);\n+         Output_Source_Line\n+           (Errors.Table (Cur_Msg).Line, Errors.Table (Cur_Msg).Sfile, True);\n          Temp_Msg := Cur_Msg;\n          Output_Error_Msgs (Temp_Msg);\n \n@@ -803,9 +879,9 @@ package body Errout is\n       --  location (earlier flag location first in the chain).\n \n       else\n-         --  First a quick check, does this belong at the very end of the\n-         --  chain of error messages. This saves a lot of time in the\n-         --  normal case if there are lots of messages.\n+         --  First a quick check, does this belong at the very end of the chain\n+         --  of error messages. This saves a lot of time in the normal case if\n+         --  there are lots of messages.\n \n          if Last_Error_Msg /= No_Error_Msg\n            and then Errors.Table (Cur_Msg).Sfile =\n@@ -868,12 +944,12 @@ package body Errout is\n             if not Errors.Table (Cur_Msg).Uncond\n               and then not Continuation\n             then\n-               --  Don't delete if prev msg is warning and new msg is\n-               --  an error. This is because we don't want a real error\n-               --  masked by a warning. In all other cases (that is parse\n-               --  errors for the same line that are not unconditional)\n-               --  we do delete the message. This helps to avoid\n-               --  junk extra messages from cascaded parsing errors\n+               --  Don't delete if prev msg is warning and new msg is an error.\n+               --  This is because we don't want a real error masked by a\n+               --  warning. In all other cases (that is parse errors for the\n+               --  same line that are not unconditional) we do delete the\n+               --  message. This helps to avoid junk extra messages from\n+               --  cascaded parsing errors\n \n                if not (Errors.Table (Prev_Msg).Warn\n                          or\n@@ -883,8 +959,8 @@ package body Errout is\n                          or\n                         Errors.Table (Cur_Msg).Style)\n                then\n-                  --  All tests passed, delete the message by simply\n-                  --  returning without any further processing.\n+                  --  All tests passed, delete the message by simply returning\n+                  --  without any further processing.\n \n                   if not Continuation then\n                      Last_Killed := True;\n@@ -934,7 +1010,6 @@ package body Errout is\n       if Total_Errors_Detected + Warnings_Detected = Maximum_Errors then\n          raise Unrecoverable_Error;\n       end if;\n-\n    end Error_Msg_Internal;\n \n    -----------------\n@@ -1093,6 +1168,137 @@ package body Errout is\n       E, F     : Error_Msg_Id;\n       Err_Flag : Boolean;\n \n+      procedure Write_Error_Summary;\n+      --  Write error summary\n+\n+      procedure Write_Header (Sfile : Source_File_Index);\n+      --  Write header line (compiling or checking given file)\n+\n+      procedure Write_Max_Errors;\n+      --  Write message if max errors reached\n+\n+      -------------------------\n+      -- Write_Error_Summary --\n+      -------------------------\n+\n+      procedure Write_Error_Summary is\n+      begin\n+         --  Extra blank line if error messages or source listing were output\n+\n+         if Total_Errors_Detected + Warnings_Detected > 0\n+           or else Full_List\n+         then\n+            Write_Eol;\n+         end if;\n+\n+         --  Message giving number of lines read and number of errors detected.\n+         --  This normally goes to Standard_Output. The exception is when brief\n+         --  mode is not set, verbose mode (or full list mode) is set, and\n+         --  there are errors. In this case we send the message to standard\n+         --  error to make sure that *something* appears on standard error in\n+         --  an error situation.\n+\n+         --  Formerly, only the \"# errors\" suffix was sent to stderr, whereas\n+         --  \"# lines:\" appeared on stdout. This caused problems on VMS when\n+         --  the stdout buffer was flushed, giving an extra line feed after\n+         --  the prefix.\n+\n+         if Total_Errors_Detected + Warnings_Detected /= 0\n+           and then not Brief_Output\n+           and then (Verbose_Mode or Full_List)\n+         then\n+            Set_Standard_Error;\n+         end if;\n+\n+         --  Message giving total number of lines\n+\n+         Write_Str (\" \");\n+         Write_Int (Num_Source_Lines (Main_Source_File));\n+\n+         if Num_Source_Lines (Main_Source_File) = 1 then\n+            Write_Str (\" line: \");\n+         else\n+            Write_Str (\" lines: \");\n+         end if;\n+\n+         if Total_Errors_Detected = 0 then\n+            Write_Str (\"No errors\");\n+\n+         elsif Total_Errors_Detected = 1 then\n+            Write_Str (\"1 error\");\n+\n+         else\n+            Write_Int (Total_Errors_Detected);\n+            Write_Str (\" errors\");\n+         end if;\n+\n+         if Warnings_Detected /= 0 then\n+            Write_Str (\", \");\n+            Write_Int (Warnings_Detected);\n+            Write_Str (\" warning\");\n+\n+            if Warnings_Detected /= 1 then\n+               Write_Char ('s');\n+            end if;\n+\n+            if Warning_Mode = Treat_As_Error then\n+               Write_Str (\" (treated as error\");\n+\n+               if Warnings_Detected /= 1 then\n+                  Write_Char ('s');\n+               end if;\n+\n+               Write_Char (')');\n+            end if;\n+         end if;\n+\n+         Write_Eol;\n+         Set_Standard_Output;\n+      end Write_Error_Summary;\n+\n+      ------------------\n+      -- Write_Header --\n+      ------------------\n+\n+      procedure Write_Header (Sfile : Source_File_Index) is\n+      begin\n+         if Verbose_Mode or Full_List then\n+            if Original_Operating_Mode = Generate_Code then\n+               Write_Str (\"Compiling: \");\n+            else\n+               Write_Str (\"Checking: \");\n+            end if;\n+\n+            Write_Name (Full_File_Name (Sfile));\n+\n+            if not Debug_Flag_7 then\n+               Write_Str (\" (source file time stamp: \");\n+               Write_Time_Stamp (Sfile);\n+               Write_Char (')');\n+            end if;\n+\n+            Write_Eol;\n+         end if;\n+      end Write_Header;\n+\n+      ----------------------\n+      -- Write_Max_Errors --\n+      ----------------------\n+\n+      procedure Write_Max_Errors is\n+      begin\n+         if Maximum_Errors /= 0\n+           and then Total_Errors_Detected + Warnings_Detected = Maximum_Errors\n+         then\n+            Set_Standard_Error;\n+            Write_Str (\"fatal error: maximum errors reached\");\n+            Write_Eol;\n+            Set_Standard_Output;\n+         end if;\n+      end Write_Max_Errors;\n+\n+   --  Start of processing for Finalize\n+\n    begin\n       --  Reset current error source file if the main unit has a pragma\n       --  Source_Reference. This ensures outputting the proper name of\n@@ -1122,6 +1328,25 @@ package body Errout is\n          Cur := Nxt;\n       end loop;\n \n+      --  Mark any messages suppressed by specific warnings as Deleted\n+\n+      Cur := First_Error_Msg;\n+      while Cur /= No_Error_Msg loop\n+         if Warning_Specifically_Suppressed\n+             (Errors.Table (Cur).Sptr,\n+              Errors.Table (Cur).Text)\n+         then\n+            Errors.Table (Cur).Deleted := True;\n+            Warnings_Detected := Warnings_Detected - 1;\n+         end if;\n+\n+         Cur := Errors.Table (Cur).Next;\n+      end loop;\n+\n+      --  Check consistency of specific warnings (may add warnings)\n+\n+      Validate_Specific_Warnings (Error_Msg'Access);\n+\n       --  Brief Error mode\n \n       if Brief_Output or (not Full_List and not Verbose_Mode) then\n@@ -1164,140 +1389,156 @@ package body Errout is\n          List_Pragmas_Index := 1;\n          List_Pragmas_Mode := True;\n          E := First_Error_Msg;\n-         Write_Eol;\n-\n-         --  First list initial main source file with its error messages\n-\n-         for N in 1 .. Last_Source_Line (Main_Source_File) loop\n-            Err_Flag :=\n-              E /= No_Error_Msg\n-                and then Errors.Table (E).Line = N\n-                and then Errors.Table (E).Sfile = Main_Source_File;\n \n-            Output_Source_Line (N, Main_Source_File, Err_Flag);\n-\n-            if Err_Flag then\n-               Output_Error_Msgs (E);\n+         --  Normal case, to stdout (copyright notice already output)\n \n-               if not Debug_Flag_2 then\n-                  Write_Eol;\n-               end if;\n+         if Full_List_File_Name = null then\n+            if not Debug_Flag_7 then\n+               Write_Eol;\n             end if;\n \n-         end loop;\n-\n-         --  Then output errors, if any, for subsidiary units\n+         --  Output to file\n \n-         while E /= No_Error_Msg\n-           and then Errors.Table (E).Sfile /= Main_Source_File\n-         loop\n-            Write_Eol;\n-            Output_Source_Line\n-              (Errors.Table (E).Line, Errors.Table (E).Sfile, True);\n-            Output_Error_Msgs (E);\n-         end loop;\n-      end if;\n+         else\n+            Create_List_File_Access.all (Full_List_File_Name.all);\n+            Set_Special_Output (Write_List_Info_Access.all'Access);\n \n-      --  Verbose mode (error lines only with error flags)\n+            --  Write copyright notice to file\n \n-      if Verbose_Mode and not Full_List then\n-         E := First_Error_Msg;\n+            if not Debug_Flag_7 then\n+               Write_Str (\"GNAT \");\n+               Write_Str (Gnat_Version_String);\n+               Write_Eol;\n+               Write_Str (\"Copyright 1992-\" &\n+                          Current_Year &\n+                          \", Free Software Foundation, Inc.\");\n+               Write_Eol;\n+            end if;\n+         end if;\n \n-         --  Loop through error lines\n+         --  First list extended main source file units with errors\n \n-         while E /= No_Error_Msg loop\n-            Write_Eol;\n-            Output_Source_Line\n-              (Errors.Table (E).Line, Errors.Table (E).Sfile, True);\n-            Output_Error_Msgs (E);\n-         end loop;\n-      end if;\n+         --  Note: if debug flag d.m is set, only the main source is listed\n \n-      --  Output error summary if verbose or full list mode\n+         for U in Main_Unit .. Last_Unit loop\n+            if In_Extended_Main_Source_Unit (Cunit_Entity (U))\n+              and then (U = Main_Unit or else not Debug_Flag_Dot_M)\n+            then\n+               declare\n+                  Sfile : constant Source_File_Index := Source_Index (U);\n \n-      if Verbose_Mode or else Full_List then\n+               begin\n+                  Write_Eol;\n+                  Write_Header (Sfile);\n+                  Write_Eol;\n \n-         --  Extra blank line if error messages or source listing were output\n+                  --  Normally, we don't want an \"error messages from file\"\n+                  --  message when listing the entire file, so we set the\n+                  --  current source file as the current error source file.\n+                  --  However, the old style of doing things was to list this\n+                  --  message if pragma Source_Reference is present, even for\n+                  --  the main unit. Since the purpose of the -gnatd.m switch\n+                  --  is to duplicate the old behavior, we skip the reset if\n+                  --  this debug flag is set.\n+\n+                  if not Debug_Flag_Dot_M then\n+                     Current_Error_Source_File := Sfile;\n+                  end if;\n \n-         if Total_Errors_Detected + Warnings_Detected > 0\n-           or else Full_List\n-         then\n-            Write_Eol;\n-         end if;\n+                  for N in 1 .. Last_Source_Line (Sfile) loop\n+                     while E /= No_Error_Msg\n+                       and then Errors.Table (E).Deleted\n+                     loop\n+                        E := Errors.Table (E).Next;\n+                     end loop;\n+\n+                     Err_Flag :=\n+                       E /= No_Error_Msg\n+                         and then Errors.Table (E).Line = N\n+                         and then Errors.Table (E).Sfile = Sfile;\n+\n+                     Output_Source_Line (N, Sfile, Err_Flag);\n+\n+                     if Err_Flag then\n+                        Output_Error_Msgs (E);\n+\n+                        if not Debug_Flag_2 then\n+                           Write_Eol;\n+                        end if;\n+                     end if;\n+                  end loop;\n+               end;\n+            end if;\n+         end loop;\n \n-         --  Message giving number of lines read and number of errors detected.\n-         --  This normally goes to Standard_Output. The exception is when brief\n-         --  mode is not set, verbose mode (or full list mode) is set, and\n-         --  there are errors. In this case we send the message to standard\n-         --  error to make sure that *something* appears on standard error in\n-         --  an error situation.\n+         --  Then output errors, if any, for subsidiary units not in the\n+         --  main extended unit.\n \n-         --  Formerly, only the \"# errors\" suffix was sent to stderr, whereas\n-         --  \"# lines:\" appeared on stdout. This caused problems on VMS when\n-         --  the stdout buffer was flushed, giving an extra line feed after\n-         --  the prefix.\n+         --  Note: if debug flag d.m set, include errors for any units other\n+         --  than the main unit in the extended source unit (e.g. spec and\n+         --  subunits for a body).\n \n-         if Total_Errors_Detected + Warnings_Detected /= 0\n-           and then not Brief_Output\n-           and then (Verbose_Mode or Full_List)\n-         then\n-            Set_Standard_Error;\n-         end if;\n+         while E /= No_Error_Msg\n+           and then (not In_Extended_Main_Source_Unit (Errors.Table (E).Sptr)\n+                       or else\n+                        (Debug_Flag_Dot_M\n+                          and then Get_Source_Unit\n+                                     (Errors.Table (E).Sptr) /= Main_Unit))\n+         loop\n+            if Errors.Table (E).Deleted then\n+               E := Errors.Table (E).Next;\n \n-         --  Message giving total number of lines\n+            else\n+               Write_Eol;\n+               Output_Source_Line\n+                 (Errors.Table (E).Line, Errors.Table (E).Sfile, True);\n+               Output_Error_Msgs (E);\n+            end if;\n+         end loop;\n \n-         Write_Str (\" \");\n-         Write_Int (Num_Source_Lines (Main_Source_File));\n+         --  If output to file, write extra copy of error summary to the\n+         --  output file, and then close it.\n \n-         if Num_Source_Lines (Main_Source_File) = 1 then\n-            Write_Str (\" line: \");\n-         else\n-            Write_Str (\" lines: \");\n+         if Full_List_File_Name /= null then\n+            Write_Error_Summary;\n+            Write_Max_Errors;\n+            Close_List_File_Access.all;\n+            Cancel_Special_Output;\n          end if;\n+      end if;\n \n-         if Total_Errors_Detected = 0 then\n-            Write_Str (\"No errors\");\n-\n-         elsif Total_Errors_Detected = 1 then\n-            Write_Str (\"1 error\");\n+      --  Verbose mode (error lines only with error flags). Normally this is\n+      --  ignored in full list mode, unless we are listing to a file, in which\n+      --  case we still generate -gnatv output to standard output.\n \n-         else\n-            Write_Int (Total_Errors_Detected);\n-            Write_Str (\" errors\");\n-         end if;\n+      if Verbose_Mode\n+        and then (not Full_List or else Full_List_File_Name /= null)\n+      then\n+         Write_Eol;\n+         Write_Header (Main_Source_File);\n+         E := First_Error_Msg;\n \n-         if Warnings_Detected /= 0 then\n-            Write_Str (\", \");\n-            Write_Int (Warnings_Detected);\n-            Write_Str (\" warning\");\n+         --  Loop through error lines\n \n-            if Warnings_Detected /= 1 then\n-               Write_Char ('s');\n+         while E /= No_Error_Msg loop\n+            if Errors.Table (E).Deleted then\n+               E := Errors.Table (E).Next;\n+            else\n+               Write_Eol;\n+               Output_Source_Line\n+                 (Errors.Table (E).Line, Errors.Table (E).Sfile, True);\n+               Output_Error_Msgs (E);\n             end if;\n+         end loop;\n+      end if;\n \n-            if Warning_Mode = Treat_As_Error then\n-               Write_Str (\" (treated as error\");\n-\n-               if Warnings_Detected /= 1 then\n-                  Write_Char ('s');\n-               end if;\n-\n-               Write_Char (')');\n-            end if;\n-         end if;\n+      --  Output error summary if verbose or full list mode\n \n-         Write_Eol;\n-         Set_Standard_Output;\n+      if Verbose_Mode or else Full_List then\n+         Write_Error_Summary;\n       end if;\n \n-      if Maximum_Errors /= 0\n-        and then Total_Errors_Detected + Warnings_Detected = Maximum_Errors\n-      then\n-         Set_Standard_Error;\n-         Write_Str (\"fatal error: maximum errors reached\");\n-         Write_Eol;\n-         Set_Standard_Output;\n-      end if;\n+      Write_Max_Errors;\n \n       if Warning_Mode = Treat_As_Error then\n          Total_Errors_Detected := Total_Errors_Detected + Warnings_Detected;\n@@ -1310,7 +1551,7 @@ package body Errout is\n    ----------------\n \n    function First_Node (C : Node_Id) return Node_Id is\n-      L        : constant Source_Ptr        := Sloc (C);\n+      L        : constant Source_Ptr        := Sloc (Original_Node (C));\n       Sfile    : constant Source_File_Index := Get_Source_File_Index (L);\n       Earliest : Node_Id;\n       Eloc     : Source_Ptr;\n@@ -1329,7 +1570,7 @@ package body Errout is\n       ------------------\n \n       function Test_Earlier (N : Node_Id) return Traverse_Result is\n-         Loc : constant Source_Ptr := Sloc (N);\n+         Loc : constant Source_Ptr := Sloc (Original_Node (N));\n \n       begin\n          --  Check for earlier. The tests for being in the same file ensures\n@@ -1340,7 +1581,7 @@ package body Errout is\n          if Loc < Eloc\n            and then Get_Source_File_Index (Loc) = Sfile\n          then\n-            Earliest := N;\n+            Earliest := Original_Node (N);\n             Eloc     := Loc;\n          end if;\n \n@@ -1428,6 +1669,7 @@ package body Errout is\n       --  an initial dummy entry covering all possible source locations.\n \n       Warnings.Init;\n+      Specific_Warnings.Init;\n \n       if Warning_Mode = Suppress then\n          Warnings.Increment_Last;\n@@ -1988,7 +2230,15 @@ package body Errout is\n          Set_Qualification (Error_Msg_Qual_Level, Ent);\n          Set_Msg_Node (Ent);\n          Add_Class;\n-         Set_Msg_Quote;\n+\n+         --  If Ent is an anonymous subprogram type, there is no name\n+         --  to print, so remove enclosing quotes.\n+\n+         if Buffer_Ends_With (\"\"\"\") then\n+            Buffer_Remove (\"\"\"\");\n+         else\n+            Set_Msg_Quote;\n+         end if;\n       end if;\n \n       --  If the original type did not come from a predefined\n@@ -2106,8 +2356,15 @@ package body Errout is\n             Ent := Node;\n          end if;\n \n-         Unwind_Internal_Type (Ent);\n-         Nam := Chars (Ent);\n+         --  If the type is the designated type of an access_to_subprogram,\n+         --  there is no name to provide in the call.\n+\n+         if Ekind (Ent) = E_Subprogram_Type then\n+            return;\n+         else\n+            Unwind_Internal_Type (Ent);\n+            Nam := Chars (Ent);\n+         end if;\n \n       else\n          Nam := Chars (Node);\n@@ -2241,6 +2498,11 @@ package body Errout is\n             when '\\' =>\n                Continuation := True;\n \n+               if Text (P) = '\\' then\n+                  Continuation_New_Line := True;\n+                  P := P + 1;\n+               end if;\n+\n             when '@' =>\n                Set_Msg_Insertion_Column;\n \n@@ -2270,6 +2532,9 @@ package body Errout is\n                Set_Msg_Char (Text (P));\n                P := P + 1;\n \n+            when '~' =>\n+               Set_Msg_Str (Error_Msg_String (1 .. Error_Msg_Strlen));\n+\n             --  Upper case letter\n \n             when 'A' .. 'Z' =>\n@@ -2435,10 +2700,36 @@ package body Errout is\n          Old_Ent := Ent;\n \n          --  Implicit access type, use directly designated type\n+         --  In Ada 2005, the designated type may be an anonymous access to\n+         --  subprogram, in which case we can only point to its definition.\n \n          if Is_Access_Type (Ent) then\n-            Set_Msg_Str (\"access to \");\n-            Ent := Directly_Designated_Type (Ent);\n+            if Ekind (Ent) = E_Access_Subprogram_Type\n+              or else Ekind (Ent) = E_Anonymous_Access_Subprogram_Type\n+              or else Ekind (Ent) = E_Access_Protected_Subprogram_Type\n+            then\n+               Ent := Directly_Designated_Type (Ent);\n+\n+               if not Comes_From_Source (Ent) then\n+                  if Buffer_Ends_With (\"type \") then\n+                     Buffer_Remove (\"type \");\n+                  end if;\n+\n+                  Set_Msg_Str (\"access to subprogram with profile \");\n+\n+               elsif Ekind (Ent) = E_Function then\n+                  Set_Msg_Str (\"access to function \");\n+               else\n+                  Set_Msg_Str (\"access to procedure \");\n+               end if;\n+               exit;\n+\n+            --  Type is access to object, named or anonymous\n+\n+            else\n+               Set_Msg_Str (\"access to \");\n+               Ent := Directly_Designated_Type (Ent);\n+            end if;\n \n          --  Classwide type\n "}, {"sha": "f4644c2cc6fc964bf3f17cfa39de88c340921124", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 54, "deletions": 3, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=4ecc031cdb794be4acb8a2824350d1c6c36c9566", "patch": "@@ -235,9 +235,18 @@ package Errout is\n    --      of the cases in which messages are normally suppressed. Note that\n    --      warnings are never suppressed, so the use of the ! character in a\n    --      warning message is never useful.\n+   --\n+   --      Note: the presence of ! is ignored in continuation messages (i.e.\n+   --      messages starting with the \\ insertion character). The effect of the\n+   --      use of ! in a parent message automatically applies to all of its\n+   --      continuation messages (since we clearly don't want any case in which\n+   --      continuations are separated from the parent message. It is allowable\n+   --      to put ! in continuation messages, and the usual style is to include\n+   --      it, since it makes it clear that the continuation is part of an\n+   --      unconditional message.\n \n    --    Insertion character ? (Question: warning message)\n-   --      The character ? appearing anywhere in a message makes the message a\n+   --      The character ? appearing anywhere in a message makes the message\n    --      warning instead of a normal error message, and the text of the\n    --      message will be preceded by \"Warning:\" instead of \"Error:\" in the\n    --      normal case. The handling of warnings if further controlled by the\n@@ -247,6 +256,13 @@ package Errout is\n    --      the parser), but currently all relevant warnings are posted by the\n    --      semantic phase anyway. Messages starting with (style) are also\n    --      treated as warning messages.\n+   --\n+   --      Note: the presence of ? is ignored in continuation messages (i.e.\n+   --      messages starting with the \\ insertion character). The warning\n+   --      status of continuations is determined only by the parent message\n+   --      which is being continued. It is allowable to put ? in continuation\n+   --      messages, and the usual style is to include it, since it makes it\n+   --      clear that the continuation is part of a warning message.\n \n    --    Insertion character < (Less Than: conditional warning message)\n    --      The character < appearing anywhere in a message is used for a\n@@ -262,7 +278,7 @@ package Errout is\n \n    --    Insertion character ` (Backquote: set manual quotation mode)\n    --      The backquote character always appears in pairs. Each backquote of\n-   --      the pair is replaced by a double quote character. In addition, Any\n+   --      the pair is replaced by a double quote character. In addition, any\n    --      reserved keywords, or name insertions between these backquotes are\n    --      not surrounded by the usual automatic double quotes. See the\n    --      section below on manual quotation mode for further details.\n@@ -280,14 +296,24 @@ package Errout is\n    --      messages are treated as a unit. The \\ character must be the first\n    --      character of the message text.\n \n-   --    Insertion character | (vertical bar, non-serious error)\n+   --    Insertion character \\\\ (Two backslashes, continuation with new line)\n+   --      This differs from \\ only in -gnatjnn mode (Error_Message_Line_Length\n+   --      set non-zero). This sequence forces a new line to start even when\n+   --      continuations are being gathered into a single message.\n+\n+   --    Insertion character | (Vertical bar: non-serious error)\n    --      By default, error messages (other than warning messages) are\n    --      considered to be fatal error messages which prevent expansion or\n    --      generation of code in the presence of the -gnatQ switch. If the\n    --      insertion character | appears, the message is considered to be\n    --      non-serious, and does not cause Serious_Errors_Detected to be\n    --      incremented (so expansion is not prevented by such a msg).\n \n+   --    Insertion character ~ (Tilde: insert string)\n+   --      Indicates that Error_Msg_String (1 .. Error_Msg_Strlen) is to be\n+   --      inserted to replace the ~ character. The string is inserted in the\n+   --      literal form it appears, without any action on special characters.\n+\n    ----------------------------------------\n    -- Specialization of Messages for VMS --\n    ----------------------------------------\n@@ -376,6 +402,11 @@ package Errout is\n    --  Used if current message contains a < insertion character to indicate\n    --  if the current message is a warning message.\n \n+   Error_Msg_String : String  renames Err_Vars.Error_Msg_String;\n+   Error_Msg_Strlen : Natural renames Err_Vars.Error_Msg_Strlen;\n+   --  Used if current message contains a ~ insertion character to indicate\n+   --  insertion of the string Error_Msg_String (1 .. Error_Msg_Strlen).\n+\n    -----------------------------------------------------\n    -- Format of Messages and Manual Quotation Control --\n    -----------------------------------------------------\n@@ -636,6 +667,26 @@ package Errout is\n    --  Called in response to a pragma Warnings (On) to record the source\n    --  location from which warnings are to be turned back on.\n \n+   procedure Set_Specific_Warning_Off (Loc : Source_Ptr; Msg : String)\n+     renames Erroutc.Set_Specific_Warning_Off;\n+   --  This is called in response to the two argument form of pragma Warnings\n+   --  where the first argument is OFF, and the second argument is the prefix\n+   --  of a specific warning to be suppressed. The first argument is the start\n+   --  of the suppression range, and the second argument is the string from\n+   --  the pragma.\n+\n+   procedure Set_Specific_Warning_On\n+     (Loc : Source_Ptr;\n+      Msg : String;\n+      Err : out Boolean)\n+     renames Erroutc.Set_Specific_Warning_On;\n+   --  This is called in response to the two argument form of pragma Warnings\n+   --  where the first argument is ON, and the second argument is the prefix\n+   --  of a specific warning to be suppressed. The first argument is the end\n+   --  of the suppression range, and the second argument is the string from\n+   --  the pragma. Err is set to True on return to report the error of no\n+   --  matching Warnings Off pragma preceding this one.\n+\n    function Compilation_Errors return Boolean\n      renames Erroutc.Compilation_Errors;\n    --  Returns true if errors have been detected, or warnings in -gnatwe"}, {"sha": "361f45a9eaab6a96f8b5fbca09d7514e61c7f1f6", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 1, "deletions": 24, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=4ecc031cdb794be4acb8a2824350d1c6c36c9566", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,7 +43,6 @@ with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Opt;      use Opt;\n with Osint;\n-with Output;   use Output;\n with Par;\n with Prepcomp;\n with Rtsfind;\n@@ -215,28 +214,6 @@ begin\n \n    Initialize_Scanner (Main_Unit, Source_Index (Main_Unit));\n \n-   --  Output header if in verbose mode or full list mode\n-\n-   if Verbose_Mode or Full_List then\n-      Write_Eol;\n-\n-      if Operating_Mode = Generate_Code then\n-         Write_Str (\"Compiling: \");\n-      else\n-         Write_Str (\"Checking: \");\n-      end if;\n-\n-      Write_Name (Full_File_Name (Current_Source_File));\n-\n-      if not Debug_Flag_7 then\n-         Write_Str (\" (source file time stamp: \");\n-         Write_Time_Stamp (Current_Source_File);\n-         Write_Char (')');\n-      end if;\n-\n-      Write_Eol;\n-   end if;\n-\n    --  Here we call the parser to parse the compilation unit (or units in\n    --  the check syntax mode, but in that case we won't go on to the\n    --  semantics in any case)."}, {"sha": "e1e53daa2f9ac510e259bd6e67762733346b15f3", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=4ecc031cdb794be4acb8a2824350d1c6c36c9566", "patch": "@@ -170,10 +170,11 @@ begin\n          List_Representation_Info_Mechanisms := True;\n       end if;\n \n-      --  Output copyright notice if full list mode\n+      --  Output copyright notice if full list mode unless we have a list\n+      --  file, in which case we defer this so that it is output in the file\n \n-      if (Verbose_Mode or Full_List)\n-        and then (not Debug_Flag_7)\n+      if (Verbose_Mode or else (Full_List and Full_List_File_Name = null))\n+        and then not Debug_Flag_7\n       then\n          Write_Eol;\n          Write_Str (\"GNAT \");"}, {"sha": "6eff9952c17a936872e056eb5f23f6cdecb91825", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 68, "deletions": 10, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=4ecc031cdb794be4acb8a2824350d1c6c36c9566", "patch": "@@ -127,7 +127,7 @@ package Opt is\n    --  GNAT\n    --  Flag set to force display of multiple errors on a single line and\n    --  also repeated error messages for references to undefined identifiers\n-   --  and certain other repeated error messages.\n+   --  and certain other repeated error messages. Set by use of -gnatf.\n \n    All_Sources : Boolean := False;\n    --  GNATBIND\n@@ -239,6 +239,10 @@ package Opt is\n    --  Set to True to enable checking for unused withs, and also the case\n    --  of withing a package and using none of the entities in the package.\n \n+   Commands_To_Stdout : Boolean := False;\n+   --  GNATMAKE\n+   --  True if echoed commands to be written to stdout instead of stderr\n+\n    Comment_Deleted_Lines : Boolean := False;\n    --  GNATPREP\n    --  True if source lines removed by the preprocessor should be commented\n@@ -344,6 +348,11 @@ package Opt is\n    --  GNATMAKE\n    --  Set to True if no actual compilations should be undertaken.\n \n+   Dump_Source_Text : Boolean := False;\n+   --  GNAT\n+   --  Set to True (by -gnatL) to dump source text intermingled with generated\n+   --  code. Effective only if either of Debug/Print_Generated_Code is true.\n+\n    Dynamic_Elaboration_Checks : Boolean := False;\n    --  GNAT\n    --  Set True for dynamic elaboration checking mode, as set by the -gnatE\n@@ -377,6 +386,15 @@ package Opt is\n    --  Set to True if -gnato (enable overflow checks) switch is set,\n    --  but not -gnatp.\n \n+   Error_Msg_Line_Length : Nat := 0;\n+   --  GNAT\n+   --  Records the error message line length limit. If this is set to zero,\n+   --  then we get the old style behavior, in which each call to the error\n+   --  message routines generates one line of output as a separate message.\n+   --  If it is set to a non-zero value, then continuation lines are folded\n+   --  to make a single long message, and then this message is split up into\n+   --  multiple lines not exceeding the specified length. Set by -gnatLnnn.\n+\n    Exception_Locations_Suppressed : Boolean := False;\n    --  GNAT\n    --  This flag is set True if a Suppress_Exception_Locations configuration\n@@ -485,6 +503,12 @@ package Opt is\n    --  GNAT\n    --  Set True to generate full source listing with embedded errors\n \n+   Full_List_File_Name : String_Ptr := null;\n+   --  GNAT\n+   --  Set to file name to generate full source listing to named file (or if\n+   --  the name is of the form .xxx, then to name.xxx where name is the source\n+   --  file name with extension stripped.\n+\n    function get_gcc_version return Int;\n    pragma Import (C, get_gcc_version, \"get_gcc_version\");\n \n@@ -643,22 +667,38 @@ package Opt is\n    --  before preprocessing occurs. Set to True by switch -s of gnatprep\n    --  or -s in preprocessing data file for the compiler.\n \n-   type Creat_Repinfo_File_Proc is access procedure (Src : File_Name_Type);\n-   type Write_Repinfo_Line_Proc is access procedure (Info : String);\n-   type Close_Repinfo_File_Proc is access procedure;\n+   type Create_Repinfo_File_Proc is access procedure (Src : File_Name_Type);\n+   type Write_Repinfo_Line_Proc  is access procedure (Info : String);\n+   type Close_Repinfo_File_Proc  is access procedure;\n    --  Types used for procedure addresses below\n \n-   Creat_Repinfo_File_Access : Creat_Repinfo_File_Proc := null;\n-   Write_Repinfo_Line_Access : Write_Repinfo_Line_Proc := null;\n-   Close_Repinfo_File_Access : Close_Repinfo_File_Proc := null;\n+   Create_Repinfo_File_Access : Create_Repinfo_File_Proc := null;\n+   Write_Repinfo_Line_Access  : Write_Repinfo_Line_Proc  := null;\n+   Close_Repinfo_File_Access  : Close_Repinfo_File_Proc  := null;\n    --  GNAT\n    --  These three locations are left null when operating in non-compiler\n    --  (e.g. ASIS mode), but when operating in compiler mode, they are\n-   --  set to point to the three corresponding procedures in Osint. The\n+   --  set to point to the three corresponding procedures in Osint-C. The\n    --  reason for this slightly strange interface is to prevent Repinfo\n    --  from dragging in Osint in ASIS mode, which would include a lot of\n    --  unwanted units in the ASIS build.\n \n+   type Create_List_File_Proc is access procedure (S : String);\n+   type Write_List_Info_Proc  is access procedure (S : String);\n+   type Close_List_File_Proc  is access procedure;\n+   --  Types used for procedure addresses below\n+\n+   Create_List_File_Access : Create_List_File_Proc := null;\n+   Write_List_Info_Access  : Write_List_Info_Proc  := null;\n+   Close_List_File_Access  : Close_List_File_Proc  := null;\n+   --  GNAT\n+   --  These three locations are left null when operating in non-compiler\n+   --  (e.g. from the binder), but when operating in compiler mode, they are\n+   --  set to point to the three corresponding procedures in Osint-C. The\n+   --  reason for this slightly strange interface is to prevent Repinfo\n+   --  from dragging in Osint-C in the binder, which would include unwanted\n+   --  units in the  binder.\n+\n    Locking_Policy : Character := ' ';\n    --  GNAT, GNATBIND\n    --  Set to ' ' for the default case (no locking policy specified).\n@@ -1070,10 +1110,16 @@ package Opt is\n \n    Warn_On_Ada_2005_Compatibility : Boolean := True;\n    --  GNAT\n-   --  Set to True to active all warnings on Ada 2005 compatibility issues,\n+   --  Set to True to generate all warnings on Ada 2005 compatibility issues,\n    --  including warnings on Ada 2005 obsolescent features used in Ada 2005\n    --  mode. Set False by -gnatwY.\n \n+   Warn_On_Assumed_Low_Bound : Boolean := True;\n+   --  GNAT\n+   --  Set to True to activate warnings for string parameters that are indexed\n+   --  with literals or S'Length, presumably assuming a lower bound of one. Set\n+   --  False by -gnatwW.\n+\n    Warn_On_Bad_Fixed_Value : Boolean := False;\n    --  GNAT\n    --  Set to True to generate warnings for static fixed-point expression\n@@ -1084,6 +1130,12 @@ package Opt is\n    --  Set to True to generate warnings for variables that could be declared\n    --  as constants. Modified by use of -gnatwk/K.\n \n+   Warn_On_Deleted_Code : Boolean := False;\n+   --  GNAT\n+   --  Set to True to generate warnings for code deleted by the front end\n+   --  for conditional statements whose outcome is known at compile time.\n+   --  Modified by use of -gnatwt/T.\n+\n    Warn_On_Dereference : Boolean := False;\n    --  GNAT\n    --  Set to True to generate warnings for implicit dereferences for array\n@@ -1102,7 +1154,8 @@ package Opt is\n    Warn_On_Modified_Unread : Boolean := False;\n    --  GNAT\n    --  Set to True to generate warnings if a variable is assigned but is never\n-   --  read. The default is that this warning is suppressed.\n+   --  read. The default is that this warning is suppressed. Also controls\n+   --  warnings about assignments whose value is never read.\n \n    Warn_On_No_Value_Assigned : Boolean := True;\n    --  GNAT\n@@ -1115,6 +1168,11 @@ package Opt is\n    --  Set to True to generate warnings on use of any feature in Annex or if a\n    --  subprogram is called for which a pragma Obsolescent applies.\n \n+   Warn_On_Questionable_Missing_Parens : Boolean := False;\n+   --  GNAT\n+   --  Set to True to generate warnings for cases where parenthese are missing\n+   --  and the usage is questionable, because the intent is unclear.\n+\n    Warn_On_Redundant_Constructs : Boolean := False;\n    --  GNAT\n    --  Set to True to generate warnings for redundant constructs (e.g. useless"}, {"sha": "276d54f64121542b5e6bb5ee5ce7a98a33eb7ab5", "filename": "gcc/ada/osint-c.adb", "status": "modified", "additions": 63, "deletions": 18, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Fosint-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Fosint-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-c.adb?ref=4ecc031cdb794be4acb8a2824350d1c6c36c9566", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---         Copyright (C) 2001-2005 Free Software Foundation, Inc.           --\n+--          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,9 +43,10 @@ package body Osint.C is\n    function Create_Auxiliary_File\n      (Src    : File_Name_Type;\n       Suffix : String) return File_Name_Type;\n-   --  Common processing for Creat_Repinfo_File and Create_Debug_File.\n-   --  Src is the file name used to create the required output file and\n-   --  Suffix is the desired suffic (dg/rep for debug/repinfo file).\n+   --  Common processing for Create_List_File, Create_Repinfo_File and\n+   --  Create_Debug_File. Src is the file name used to create the required\n+   --  output file and Suffix is the desired suffic (dg/rep/xxx for debug/\n+   --  repinfo/list file where xxx is specified extension.\n \n    procedure Set_Library_Info_Name;\n    --  Sets a default ali file name from the main compiler source name.\n@@ -70,6 +71,23 @@ package body Osint.C is\n       end if;\n    end Close_Debug_File;\n \n+   ---------------------\n+   -- Close_List_File --\n+   ---------------------\n+\n+   procedure Close_List_File is\n+      Status : Boolean;\n+\n+   begin\n+      Close (Output_FD, Status);\n+\n+      if not Status then\n+         Fail\n+           (\"error while closing list file \",\n+            Get_Name_String (Output_File_Name));\n+      end if;\n+   end Close_List_File;\n+\n    -------------------------------\n    -- Close_Output_Library_Info --\n    -------------------------------\n@@ -110,7 +128,7 @@ package body Osint.C is\n \n    function Create_Auxiliary_File\n      (Src    : File_Name_Type;\n-      Suffix : String) return   File_Name_Type\n+      Suffix : String) return File_Name_Type\n    is\n       Result : File_Name_Type;\n \n@@ -128,13 +146,10 @@ package body Osint.C is\n       Name_Len := Name_Len + Suffix'Length;\n \n       if Output_Object_File_Name /= null then\n-\n          for Index in reverse Output_Object_File_Name'Range loop\n-\n             if Output_Object_File_Name (Index) = Directory_Separator then\n                declare\n                   File_Name : constant String := Name_Buffer (1 .. Name_Len);\n-\n                begin\n                   Name_Len := Index - Output_Object_File_Name'First + 1;\n                   Name_Buffer (1 .. Name_Len) :=\n@@ -165,6 +180,24 @@ package body Osint.C is\n       return Create_Auxiliary_File (Src, \"dg\");\n    end Create_Debug_File;\n \n+   ----------------------\n+   -- Create_List_File --\n+   ----------------------\n+\n+   procedure Create_List_File (S : String) is\n+      F : File_Name_Type;\n+      pragma Warnings (Off, F);\n+   begin\n+      if S (S'First) = '.' then\n+         F := Create_Auxiliary_File (Current_Main, S (S'First + 1 .. S'Last));\n+      else\n+         Name_Buffer (1 .. S'Length) := S;\n+         Name_Len := S'Length + 1;\n+         Name_Buffer (Name_Len) := ASCII.NUL;\n+         Create_File_And_Check (Output_FD, Text);\n+      end if;\n+   end Create_List_File;\n+\n    --------------------------------\n    -- Create_Output_Library_Info --\n    --------------------------------\n@@ -175,17 +208,16 @@ package body Osint.C is\n       Create_File_And_Check (Output_FD, Text);\n    end Create_Output_Library_Info;\n \n-   --------------------------\n-   -- Creat_Repinfo_File --\n-   --------------------------\n+   -------------------------\n+   -- Create_Repinfo_File --\n+   -------------------------\n \n-   procedure Creat_Repinfo_File (Src : File_Name_Type) is\n+   procedure Create_Repinfo_File (Src : File_Name_Type) is\n       S : constant File_Name_Type := Create_Auxiliary_File (Src, \"rep\");\n       pragma Warnings (Off, S);\n-\n    begin\n       return;\n-   end Creat_Repinfo_File;\n+   end Create_Repinfo_File;\n \n    ---------------------------\n    -- Debug_File_Eol_Length --\n@@ -412,18 +444,31 @@ package body Osint.C is\n \n    procedure Write_Library_Info (Info : String) renames Write_Info;\n \n+   ---------------------\n+   -- Write_List_Info --\n+   ---------------------\n+\n+   procedure Write_List_Info (S : String) is\n+   begin\n+      Write_With_Check (S'Address, S'Length);\n+   end Write_List_Info;\n+\n    ------------------------\n    -- Write_Repinfo_Line --\n    ------------------------\n \n    procedure Write_Repinfo_Line (Info : String) renames Write_Info;\n \n begin\n-\n    Adjust_OS_Resource_Limits;\n-   Opt.Creat_Repinfo_File_Access := Creat_Repinfo_File'Access;\n-   Opt.Write_Repinfo_Line_Access := Write_Repinfo_Line'Access;\n-   Opt.Close_Repinfo_File_Access := Close_Repinfo_File'Access;\n+\n+   Opt.Create_Repinfo_File_Access := Create_Repinfo_File'Access;\n+   Opt.Write_Repinfo_Line_Access  := Write_Repinfo_Line'Access;\n+   Opt.Close_Repinfo_File_Access  := Close_Repinfo_File'Access;\n+\n+   Opt.Create_List_File_Access := Create_List_File'Access;\n+   Opt.Write_List_Info_Access  := Write_List_Info'Access;\n+   Opt.Close_List_File_Access  := Close_List_File'Access;\n \n    Set_Program (Compiler);\n "}, {"sha": "81f51aca82fa044d0256ecd5e1c1b02570550c93", "filename": "gcc/ada/osint-c.ads", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Fosint-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Fosint-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-c.ads?ref=4ecc031cdb794be4acb8a2824350d1c6c36c9566", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001 Free Software Foundation, Inc.               --\n+--          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -91,7 +91,7 @@ package Osint.C is\n    --  procedures in appropriate variables in Repinfo, so that they can\n    --  be called indirectly without creating a dependence.\n \n-   procedure Creat_Repinfo_File (Src : File_Name_Type);\n+   procedure Create_Repinfo_File (Src : File_Name_Type);\n    --  Given the simple name of a source file, this routine creates the\n    --  corresponding file to hold representation information\n \n@@ -139,6 +139,22 @@ package Osint.C is\n    --  text is returned in Text. If the file does not exist, then Text is\n    --  set to null.\n \n+   ----------------------\n+   -- List File Output --\n+   ----------------------\n+\n+   procedure Create_List_File (S : String);\n+   --  Creates the file whose name is given by S. If the name starts with a\n+   --  period, then the name is xxx & S, where xxx is the name of the main\n+   --  source file without the extension stripped. Information is written to\n+   --  this file using Write_List_File.\n+\n+   procedure Write_List_Info (S : String);\n+   --  Writes given string to the list file created by Create_List_File\n+\n+   procedure Close_List_File;\n+   --  Close file previously opened by Create_List_File\n+\n    --------------------------------\n    -- Semantic Tree Input-Output --\n    --------------------------------"}, {"sha": "8d1a5d40373293b351f97adda46ce77295394036", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 108, "deletions": 65, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=4ecc031cdb794be4acb8a2824350d1c6c36c9566", "patch": "@@ -82,9 +82,6 @@ package body Osint is\n    function OS_Time_To_GNAT_Time (T : OS_Time) return Time_Stamp_Type;\n    --  Convert OS format time to GNAT format time stamp\n \n-   function Concat (String_One : String; String_Two : String) return String;\n-   --  Concatenates 2 strings and returns the result of the concatenation\n-\n    function Executable_Prefix return String_Ptr;\n    --  Returns the name of the root directory where the executable is stored.\n    --  The executable must be located in a directory called \"bin\", or\n@@ -97,13 +94,6 @@ package body Osint is\n    --  Update the specified path to replace the prefix with the location\n    --  where GNAT is installed. See the file prefix.c in GCC for details.\n \n-   procedure Write_With_Check (A : Address; N  : Integer);\n-   --  Writes N bytes from buffer starting at address A to file whose FD is\n-   --  stored in Output_FD, and whose file name is stored as a File_Name_Type\n-   --  in Output_File_Name. A check is made for disk full, and if this is\n-   --  detected, the file being written is deleted, and a fatal error is\n-   --  signalled.\n-\n    function Locate_File\n      (N    : File_Name_Type;\n       T    : File_Type;\n@@ -264,6 +254,7 @@ package body Osint is\n       function Get_Libraries_From_Registry return String_Ptr;\n       --  On Windows systems, get the list of installed standard libraries\n       --  from the registry key:\n+      --\n       --  HKEY_LOCAL_MACHINE\\SOFTWARE\\Ada Core Technologies\\\n       --                             GNAT\\Standard Libraries\n       --  Return an empty string on other systems\n@@ -302,7 +293,7 @@ package body Osint is\n \n       procedure Get_Dirs_From_File (Additional_Source_Dir : Boolean) is\n          File_FD    : File_Descriptor;\n-         Buffer     : String (1 .. Path_File_Name'Length + 1);\n+         Buffer     : constant String := Path_File_Name.all & ASCII.NUL;\n          Len        : Natural;\n          Actual_Len : Natural;\n          S          : String_Access;\n@@ -314,11 +305,6 @@ package body Osint is\n          --  For the call to Close\n \n       begin\n-         --  Construct a C compatible character string buffer\n-\n-         Buffer (1 .. Buffer'Last - 1) := Path_File_Name.all;\n-         Buffer (Buffer'Last) := ASCII.NUL;\n-\n          File_FD := Open_Read (Buffer'Address, Binary);\n \n          --  If we cannot open the file, we ignore it, we don't fail\n@@ -384,13 +370,16 @@ package body Osint is\n          function C_Get_Libraries_From_Registry return Address;\n          pragma Import (C, C_Get_Libraries_From_Registry,\n                         \"__gnat_get_libraries_from_registry\");\n+\n          function Strlen (Str : Address) return Integer;\n          pragma Import (C, Strlen, \"strlen\");\n+\n          procedure Strncpy (X : Address; Y : Address; Length : Integer);\n          pragma Import (C, Strncpy, \"strncpy\");\n-         Result_Ptr : Address;\n+\n+         Result_Ptr    : Address;\n          Result_Length : Integer;\n-         Out_String : String_Ptr;\n+         Out_String    : String_Ptr;\n \n       begin\n          Result_Ptr := C_Get_Libraries_From_Registry;\n@@ -428,18 +417,20 @@ package body Osint is\n       --  will handle the expansion as part of the file processing.\n \n       for Additional_Source_Dir in False .. True loop\n-\n          if Additional_Source_Dir then\n             Search_Path := Getenv (Ada_Include_Path);\n+\n             if Search_Path'Length > 0 then\n                if Hostparm.OpenVMS then\n                   Search_Path := To_Canonical_Path_Spec (\"ADA_INCLUDE_PATH:\");\n                else\n                   Search_Path := To_Canonical_Path_Spec (Search_Path.all);\n                end if;\n             end if;\n+\n          else\n             Search_Path := Getenv (Ada_Objects_Path);\n+\n             if Search_Path'Length > 0 then\n                if Hostparm.OpenVMS then\n                   Search_Path := To_Canonical_Path_Spec (\"ADA_OBJECTS_PATH:\");\n@@ -644,18 +635,6 @@ package body Osint is\n       end if;\n    end Canonical_Case_File_Name;\n \n-   ------------\n-   -- Concat --\n-   ------------\n-\n-   function Concat (String_One : String; String_Two : String) return String is\n-      Buffer : String (1 .. String_One'Length + String_Two'Length);\n-   begin\n-      Buffer (1 .. String_One'Length) := String_One;\n-      Buffer (String_One'Length + 1 .. Buffer'Last) := String_Two;\n-      return Buffer;\n-   end Concat;\n-\n    ---------------------------\n    -- Create_File_And_Check --\n    ---------------------------\n@@ -743,23 +722,87 @@ package body Osint is\n \n    function Executable_Name (Name : File_Name_Type) return File_Name_Type is\n       Exec_Suffix : String_Access;\n-\n    begin\n       if Name = No_File then\n          return No_File;\n       end if;\n \n+      if Executable_Extension_On_Target = No_Name then\n+         Exec_Suffix := Get_Target_Executable_Suffix;\n+      else\n+         Get_Name_String (Executable_Extension_On_Target);\n+         Exec_Suffix := new String'(Name_Buffer (1 .. Name_Len));\n+      end if;\n+\n       Get_Name_String (Name);\n-      Exec_Suffix := Get_Executable_Suffix;\n \n-      for J in Exec_Suffix'Range loop\n-         Name_Len := Name_Len + 1;\n-         Name_Buffer (Name_Len) := Exec_Suffix (J);\n-      end loop;\n+      if Exec_Suffix'Length /= 0 then\n+         declare\n+            Buffer : String := Name_Buffer (1 .. Name_Len);\n+\n+         begin\n+            --  Get the file name in canonical case to accept as is\n+            --  names ending with \".EXE\" on VMS and Windows.\n+\n+            Canonical_Case_File_Name (Buffer);\n+\n+            --  If the Executable does not end with the executable\n+            --  suffix, add it.\n+\n+            if Buffer'Length <= Exec_Suffix'Length\n+              or else\n+                Buffer (Buffer'Last - Exec_Suffix'Length + 1 .. Buffer'Last)\n+                  /= Exec_Suffix.all\n+            then\n+               Name_Buffer (Name_Len + 1 .. Name_Len + Exec_Suffix'Length) :=\n+                 Exec_Suffix.all;\n+               Name_Len := Name_Len + Exec_Suffix'Length;\n+               Free (Exec_Suffix);\n+               return Name_Find;\n+            end if;\n+         end;\n+      end if;\n \n       Free (Exec_Suffix);\n+      return Name;\n+   end Executable_Name;\n \n-      return Name_Enter;\n+   function Executable_Name (Name : String) return String is\n+      Exec_Suffix    : String_Access;\n+      Canonical_Name : String := Name;\n+\n+   begin\n+      if Executable_Extension_On_Target = No_Name then\n+         Exec_Suffix := Get_Target_Executable_Suffix;\n+      else\n+         Get_Name_String (Executable_Extension_On_Target);\n+         Exec_Suffix := new String'(Name_Buffer (1 .. Name_Len));\n+      end if;\n+\n+      declare\n+         Suffix : constant String := Exec_Suffix.all;\n+\n+      begin\n+         Free (Exec_Suffix);\n+         Canonical_Case_File_Name (Canonical_Name);\n+\n+         if Suffix'Length /= 0\n+           and then\n+             (Canonical_Name'Length <= Suffix'Length\n+               or else Canonical_Name (Canonical_Name'Last - Suffix'Length + 1\n+                                         .. Canonical_Name'Last) /= Suffix)\n+         then\n+            declare\n+               Result : String (1 .. Name'Length + Suffix'Length);\n+            begin\n+               Result (1 .. Name'Length) := Name;\n+               Result (Name'Length + 1 .. Result'Last) := Suffix;\n+               return Result;\n+            end;\n+         else\n+            return Name;\n+         end if;\n+      end;\n    end Executable_Name;\n \n    -----------------------\n@@ -776,19 +819,24 @@ package body Osint is\n       ---------------------\n \n       function Get_Install_Dir (Exec : String) return String_Ptr is\n+         Full_Path : constant String := Normalize_Pathname (Exec);\n+         --  Use the full path, so that we find \"lib\" or \"bin\", even when\n+         --  the tool has been invoked with a relative path, as in\n+         --  \"./gnatls -v\" invoked in the GNAT bin directory.\n+\n       begin\n-         for J in reverse Exec'Range loop\n-            if Is_Directory_Separator (Exec (J)) then\n-               if J < Exec'Last - 5 then\n-                  if (To_Lower (Exec (J + 1)) = 'l'\n-                      and then To_Lower (Exec (J + 2)) = 'i'\n-                      and then To_Lower (Exec (J + 3)) = 'b')\n+         for J in reverse Full_Path'Range loop\n+            if Is_Directory_Separator (Full_Path (J)) then\n+               if J < Full_Path'Last - 5 then\n+                  if (To_Lower (Full_Path (J + 1)) = 'l'\n+                      and then To_Lower (Full_Path (J + 2)) = 'i'\n+                      and then To_Lower (Full_Path (J + 3)) = 'b')\n                     or else\n-                      (To_Lower (Exec (J + 1)) = 'b'\n-                       and then To_Lower (Exec (J + 2)) = 'i'\n-                       and then To_Lower (Exec (J + 3)) = 'n')\n+                      (To_Lower (Full_Path (J + 1)) = 'b'\n+                       and then To_Lower (Full_Path (J + 2)) = 'i'\n+                       and then To_Lower (Full_Path (J + 3)) = 'n')\n                   then\n-                     return new String'(Exec (Exec'First .. J));\n+                     return new String'(Full_Path (Full_Path'First .. J));\n                   end if;\n                end if;\n             end if;\n@@ -1207,8 +1255,8 @@ package body Osint is\n       --  so that we can directly append a file to the directory\n \n       if Search_Dir (Search_Dir'Last) /= Directory_Separator then\n-         Local_Search_Dir := new String'\n-           (Concat (Search_Dir, String'(1 => Directory_Separator)));\n+         Local_Search_Dir :=\n+           new String'(Search_Dir & String'(1 => Directory_Separator));\n       else\n          Local_Search_Dir := new String'(Search_Dir);\n       end if;\n@@ -1232,8 +1280,8 @@ package body Osint is\n            := Read_Default_Search_Dirs (Norm_Search_Dir,\n                                         Search_File,\n                                         null);\n-         Default_Search_Dir := new String'\n-           (Concat (Norm_Search_Dir.all, Default_Suffix_Dir.all));\n+         Default_Search_Dir :=\n+           new String'(Norm_Search_Dir.all & Default_Suffix_Dir.all);\n          Free (Norm_Search_Dir);\n \n          if Result_Search_Dir /= null then\n@@ -1265,14 +1313,13 @@ package body Osint is\n          end;\n \n          Norm_Search_Dir :=\n-           new String'(Concat (Current_Dir.all, Local_Search_Dir.all));\n+           new String'(Current_Dir.all & Local_Search_Dir.all);\n \n          Result_Search_Dir :=\n            Read_Default_Search_Dirs (Norm_Search_Dir, Search_File, null);\n \n          Default_Search_Dir :=\n-           new String'\n-             (Concat (Norm_Search_Dir.all, Default_Suffix_Dir.all));\n+           new String'(Norm_Search_Dir.all & Default_Suffix_Dir.all);\n \n          Free (Norm_Search_Dir);\n \n@@ -1287,15 +1334,13 @@ package body Osint is\n \n             Norm_Search_Dir :=\n               new String'\n-              (Concat (Update_Path (Search_Dir_Prefix).all,\n-                       Local_Search_Dir.all));\n+               (Update_Path (Search_Dir_Prefix).all & Local_Search_Dir.all);\n \n             Result_Search_Dir :=\n               Read_Default_Search_Dirs (Norm_Search_Dir, Search_File, null);\n \n             Default_Search_Dir :=\n-              new String'\n-                (Concat (Norm_Search_Dir.all, Default_Suffix_Dir.all));\n+              new String'(Norm_Search_Dir.all & Default_Suffix_Dir.all);\n \n             Free (Norm_Search_Dir);\n \n@@ -1309,18 +1354,16 @@ package body Osint is\n                --  We finally search in Search_Dir_Prefix/rts-Search_Dir\n \n                Temp_String :=\n-                 new String'\n-                 (Concat (Update_Path (Search_Dir_Prefix).all, \"rts-\"));\n+                 new String'(Update_Path (Search_Dir_Prefix).all & \"rts-\");\n \n                Norm_Search_Dir :=\n-                 new String'(Concat (Temp_String.all, Local_Search_Dir.all));\n+                 new String'(Temp_String.all & Local_Search_Dir.all);\n \n                Result_Search_Dir :=\n                  Read_Default_Search_Dirs (Norm_Search_Dir, Search_File, null);\n \n                Default_Search_Dir :=\n-                 new String'\n-                   (Concat (Norm_Search_Dir.all, Default_Suffix_Dir.all));\n+                 new String'(Norm_Search_Dir.all & Default_Suffix_Dir.all);\n                Free (Norm_Search_Dir);\n \n                if Result_Search_Dir /= null then\n@@ -1720,7 +1763,7 @@ package body Osint is\n          --  spawn routines. This ensure that quotes will be added when needed.\n \n          Result := new String (1 .. Directory'Length - 1);\n-         Result (1 .. Directory'Length - 1) :=\n+         Result (1 .. Directory'Length - 2) :=\n            Directory (Directory'First + 1 .. Directory'Last - 1);\n          Result (Result'Last) := Directory_Separator;\n "}, {"sha": "cda8e828573c79010a5dbaf891b70027cd1b57d2", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 59, "deletions": 50, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=4ecc031cdb794be4acb8a2824350d1c6c36c9566", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,9 +24,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package contains the low level, operating system routines used in\n---  the GNAT compiler and binder for command line processing and file input\n---  output.\n+--  This package contains the low level, operating system routines used in the\n+--  compiler and binder for command line processing and file input output.\n \n with GNAT.OS_Lib; use GNAT.OS_Lib;\n with System;      use System;\n@@ -37,9 +36,9 @@ pragma Elaborate (GNAT.OS_Lib);\n package Osint is\n \n    Multi_Unit_Index_Character : Character := '~';\n-   --  The character before the index of the unit in a multi-unit source,\n-   --  in ALI and object file names. This is not a constant, because it is\n-   --  changed to '$' on VMS.\n+   --  The character before the index of the unit in a multi-unit source, in\n+   --  ALI and object file names. This is not a constant, because it is changed\n+   --  to '$' on VMS.\n \n    Ada_Include_Path          : constant String := \"ADA_INCLUDE_PATH\";\n    Ada_Objects_Path          : constant String := \"ADA_OBJECTS_PATH\";\n@@ -59,18 +58,17 @@ package Osint is\n    function Find_File\n      (N : File_Name_Type;\n       T : File_Type) return File_Name_Type;\n-   --  Finds a source, library or config file depending on the value\n-   --  of T following the directory search order rules unless N is the\n-   --  name of the file just read with Next_Main_File and already\n-   --  contains directiory information, in which case just look in the\n-   --  Primary_Directory.  Returns File_Name_Type of the full file name\n-   --  if found, No_File if file not found. Note that for the special\n-   --  case of gnat.adc, only the compilation environment directory is\n-   --  searched, i.e. the directory where the ali and object files are\n-   --  written. Another special case is when Debug_Generated_Code is\n-   --  set and the file name ends on \".dg\", in which case we look for\n-   --  the generated file only in the current directory, since that is\n-   --  where it is always built.\n+   --  Finds a source, library or config file depending on the value of T\n+   --  following the directory search order rules unless N is the name of the\n+   --  file just read with Next_Main_File and already contains directiory\n+   --  information, in which case just look in the Primary_Directory. Returns\n+   --  File_Name_Type of the full file name if found, No_File if file not\n+   --  found. Note that for the special case of gnat.adc, only the compilation\n+   --  environment directory is searched, i.e. the directory where the ali and\n+   --  object files are written. Another special case is Debug_Generated_Code\n+   --  set and the file name ends on \".dg\", in which case we look for the\n+   --  generated file only in the current directory, since that is where it is\n+   --  always built.\n \n    function Get_File_Names_Case_Sensitive return Int;\n    pragma Import (C, Get_File_Names_Case_Sensitive,\n@@ -147,6 +145,9 @@ package Osint is\n    --  instance under DOS it adds the \".exe\" suffix, whereas under UNIX no\n    --  suffix is added.\n \n+   function Executable_Name (Name : String) return String;\n+   --  Same as above, with String parameters\n+\n    function File_Stamp (Name : File_Name_Type) return Time_Stamp_Type;\n    --  Returns the time stamp of file Name. Name should include relative\n    --  path information in order to locate it. If the source file cannot be\n@@ -374,24 +375,24 @@ package Osint is\n \n    function Full_Source_Name (N : File_Name_Type) return File_Name_Type;\n    function Source_File_Stamp (N : File_Name_Type) return Time_Stamp_Type;\n-   --  Returns the full name/time stamp of the source file whose simple name\n-   --  is N which should not include path information. Note that if the file\n-   --  cannot be located No_File is returned for the first routine and an\n-   --  all blank time stamp is returned for the second (this is not an error\n-   --  situation). The full name includes the appropriate directory\n-   --  information. The source file directory lookup penalty is incurred\n-   --  every single time the routines are called unless you have previously\n-   --  called Source_File_Data (Cache => True). See below.\n+   --  Returns the full name/time stamp of the source file whose simple name is\n+   --  N which should not include path information. Note that if the file\n+   --  cannot be located No_File is returned for the first routine and an all\n+   --  blank time stamp is returned for the second (this is not an error\n+   --  situation). The full name includes appropriate directory information.\n+   --  The source file directory lookup penalty is incurred every single time\n+   --  the routines are called unless you have previously called\n+   --  Source_File_Data (Cache => True). See below.\n \n    function Current_File_Index return Int;\n    --  Return the index in its source file of the current main unit\n \n    function Matching_Full_Source_Name\n      (N : File_Name_Type;\n       T : Time_Stamp_Type) return File_Name_Type;\n-   --  Same semantics than Full_Source_Name but will search on the source\n-   --  path until a source file with time stamp matching T is found. If\n-   --  none is found returns No_File.\n+   --  Same semantics than Full_Source_Name but will search on the source path\n+   --  until a source file with time stamp matching T is found. If none is\n+   --  found returns No_File.\n \n    procedure Source_File_Data (Cache : Boolean);\n    --  By default source file data (full source file name and time stamp)\n@@ -433,7 +434,9 @@ package Osint is\n \n    --  Which of these three methods is chosen depends on the constraints of the\n    --  host operating system. The interface described here is independent of\n-   --  which of these approaches is used.\n+   --  which of these approaches is used. Currently all versions of GNAT use\n+   --  the third approach with a file name of xxx.ali where xxx is the source\n+   --  file name.\n \n    -------------------------------\n    -- Library Information Input --\n@@ -523,9 +526,9 @@ package Osint is\n \n    procedure Exit_Program (Exit_Code : Exit_Code_Type);\n    pragma No_Return (Exit_Program);\n-   --  A call to Exit_Program terminates execution with the given status.\n-   --  A status of zero indicates normal completion, a non-zero status\n-   --  indicates abnormal termination.\n+   --  A call to Exit_Program terminates execution with the given status. A\n+   --  status of zero indicates normal completion, a non-zero status indicates\n+   --  abnormal termination.\n \n    -------------------------\n    -- Command Line Access --\n@@ -562,7 +565,7 @@ private\n    --  The suffix used for the target object files\n \n    Output_FD : File_Descriptor;\n-   --  The file descriptor for the current library info, tree or binder output\n+   --  File descriptor for current library info, list, tree, or binder output\n \n    Output_File_Name : File_Name_Type;\n    --  File_Name_Type for name of open file whose FD is in Output_FD, the name\n@@ -575,10 +578,10 @@ private\n    type File_Name_Array_Ptr is access File_Name_Array;\n    File_Names : File_Name_Array_Ptr :=\n                   new File_Name_Array (1 .. Int (Argument_Count) + 2);\n-   --  As arguments are scanned, file names are stored in this array\n-   --  The strings do not have terminating NUL files. The array is\n-   --  extensible, because when using project files, there may be\n-   --  more files than arguments on the command line.\n+   --  As arguments are scanned, file names are stored in this array The\n+   --  strings do not have terminating NUL files. The array is extensible,\n+   --  because when using project files, there may be more files than\n+   --  arguments on the command line.\n \n    type File_Index_Array is array (Int range <>) of Int;\n    type File_Index_Array_Ptr is access File_Index_Array;\n@@ -594,17 +597,17 @@ private\n      (Fdesc : out File_Descriptor;\n       Fmode : Mode);\n    --  Create file whose name (NUL terminated) is in Name_Buffer (with the\n-   --  length in Name_Len), and place the resulting descriptor in Fdesc.\n-   --  Issue message and exit with fatal error if file cannot be created.\n-   --  The Fmode parameter is set to either Text or Binary (see description\n+   --  length in Name_Len), and place the resulting descriptor in Fdesc. Issue\n+   --  message and exit with fatal error if file cannot be created. The Fmode\n+   --  parameter is set to either Text or Binary (for details see description\n    --  of GNAT.OS_Lib.Create_File).\n \n    type Program_Type is (Compiler, Binder, Make, Gnatls, Unspecified);\n    --  Program currently running\n    procedure Set_Program (P : Program_Type);\n-   --  Indicates to the body of Osint the program currently running.\n-   --  This procedure is called by the child packages of Osint.\n-   --  A check is made that this procedure is not called several times.\n+   --  Indicates to the body of Osint the program currently running. This\n+   --  procedure is called by the child packages of Osint. A check is made\n+   --  that this procedure is not called more than once.\n \n    function More_Files return Boolean;\n    --  Implements More_Source_Files and More_Lib_Files\n@@ -613,14 +616,20 @@ private\n    --  Implements Next_Main_Source and Next_Main_Lib_File\n \n    function Object_File_Name (N : File_Name_Type) return File_Name_Type;\n-   --  Constructs the name of the object file corresponding to library\n-   --  file N. If N is a full file name than the returned file name will\n-   --  also be a full file name. Note that no lookup in the library file\n-   --  directories is done for this file. This routine merely constructs\n-   --  the name.\n+   --  Constructs the name of the object file corresponding to library file N.\n+   --  If N is a full file name than the returned file name will also be a full\n+   --  file name. Note that no lookup in the library file directories is done\n+   --  for this file. This routine merely constructs the name.\n \n    procedure Write_Info (Info : String);\n    --  Implementation of Write_Binder_Info, Write_Debug_Info and\n    --  Write_Library_Info (identical)\n \n+   procedure Write_With_Check (A : Address; N  : Integer);\n+   --  Writes N bytes from buffer starting at address A to file whose FD is\n+   --  stored in Output_FD, and whose file name is stored as a File_Name_Type\n+   --  in Output_File_Name. A check is made for disk full, and if this is\n+   --  detected, the file being written is deleted, and a fatal error is\n+   --  signalled.\n+\n end Osint;"}, {"sha": "bd30fb9b14ddc06174fdef044a5b725098762fb9", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 37, "deletions": 20, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecc031cdb794be4acb8a2824350d1c6c36c9566/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=4ecc031cdb794be4acb8a2824350d1c6c36c9566", "patch": "@@ -498,6 +498,7 @@ package body Switch.C is\n                Constant_Condition_Warnings  := True;\n                Implementation_Unit_Warnings := True;\n                Ineffective_Inline_Warnings  := True;\n+               Warn_On_Assumed_Low_Bound    := True;\n                Warn_On_Bad_Fixed_Value      := True;\n                Warn_On_Constant             := True;\n                Warn_On_Export_Import        := True;\n@@ -553,6 +554,19 @@ package body Switch.C is\n                   Bad_Switch (C);\n                end if;\n \n+            --  Processing for j switch\n+\n+            when 'j' =>\n+               Ptr := Ptr + 1;\n+\n+               --  There may be an equal sign between -gnatj and the value\n+\n+               if Ptr <= Max and then Switch_Chars (Ptr) = '=' then\n+                  Ptr := Ptr + 1;\n+               end if;\n+\n+               Scan_Nat (Switch_Chars, Max, Ptr, Error_Msg_Line_Length, C);\n+\n             --  Processing for k switch\n \n             when 'k' =>\n@@ -566,12 +580,23 @@ package body Switch.C is\n                Ptr := Ptr + 1;\n                Full_List := True;\n \n+               --  There may be an equal sign between -gnatl and a file name\n+\n+               if Ptr <= Max and then Switch_Chars (Ptr) = '=' then\n+                  if Ptr = Max then\n+                     Osint.Fail (\"file name for -gnatl= is null\");\n+                  else\n+                     Opt.Full_List_File_Name :=\n+                       new String'(Switch_Chars (Ptr + 1 .. Max));\n+                     Ptr := Max + 1;\n+                  end if;\n+               end if;\n+\n             --  Processing for L switch\n \n             when 'L' =>\n                Ptr := Ptr + 1;\n-               Osint.Fail\n-                 (\"-gnatL is no longer supported: consider using --RTS=sjlj\");\n+               Dump_Source_Text := True;\n \n             --  Processing for m switch\n \n@@ -584,7 +609,7 @@ package body Switch.C is\n                   Ptr := Ptr + 1;\n                end if;\n \n-               Scan_Pos (Switch_Chars, Max, Ptr, Maximum_Errors, C);\n+               Scan_Nat (Switch_Chars, Max, Ptr, Maximum_Errors, C);\n \n             --  Processing for n switch\n \n@@ -805,15 +830,13 @@ package body Switch.C is\n                   Bad_Switch (C);\n                end if;\n \n-               for J in WC_Encoding_Method loop\n-                  if Switch_Chars (Ptr) = WC_Encoding_Letters (J) then\n-                     Wide_Character_Encoding_Method := J;\n-                     exit;\n-\n-                  elsif J = WC_Encoding_Method'Last then\n+               begin\n+                  Wide_Character_Encoding_Method :=\n+                    Get_WC_Encoding_Method (Switch_Chars (Ptr));\n+               exception\n+                  when Constraint_Error =>\n                      Bad_Switch (C);\n-                  end if;\n-               end loop;\n+               end;\n \n                Upper_Half_Encoding :=\n                  Wide_Character_Encoding_Method in\n@@ -856,15 +879,9 @@ package body Switch.C is\n                        (Switch_Chars (Ptr .. Max), OK, Ptr);\n \n                      if not OK then\n-                        declare\n-                           R : String (1 .. Style_Msg_Len + 20);\n-                        begin\n-                           R (1 .. 19) := \"bad -gnaty switch (\";\n-                           R (20 .. R'Last - 1) :=\n-                             Style_Msg_Buf (1 .. Style_Msg_Len);\n-                           R (R'Last) := ')';\n-                           Osint.Fail (R);\n-                        end;\n+                        Osint.Fail\n+                          (\"bad -gnaty switch (\" &\n+                           Style_Msg_Buf (1 .. Style_Msg_Len) & ')');\n                      end if;\n \n                      Ptr := First_Char + 1;"}]}