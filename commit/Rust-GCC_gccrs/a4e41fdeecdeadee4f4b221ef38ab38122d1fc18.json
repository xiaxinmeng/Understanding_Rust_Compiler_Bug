{"sha": "a4e41fdeecdeadee4f4b221ef38ab38122d1fc18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRlNDFmZGVlY2RlYWRlZTRmNGIyMjFlZjM4YWIzODEyMmQxZmMxOA==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2004-08-02T01:05:47Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2004-08-02T01:05:47Z"}, "message": "Patch for PR target/16155.\n\n2004-08-02  Ben Elliston  <bje@au.ibm.com>\n\n\tPR target/16155\n\t* config/rs6000/altivec.h: Replace typeof with __typeof__.\n\n[testsuite]\n2004-08-02  Ben Elliston  <bje@au.ibm.com>\n\n\t* gcc.dg/pr16155.c: New test.\n\nFrom-SVN: r85418", "tree": {"sha": "1ba093c88f82048925248629aabec927aad8d59e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ba093c88f82048925248629aabec927aad8d59e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4e41fdeecdeadee4f4b221ef38ab38122d1fc18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4e41fdeecdeadee4f4b221ef38ab38122d1fc18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4e41fdeecdeadee4f4b221ef38ab38122d1fc18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4e41fdeecdeadee4f4b221ef38ab38122d1fc18/comments", "author": null, "committer": null, "parents": [{"sha": "6a3bc5b1d0c8cb150c41aae2ebfdbfb2401542d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a3bc5b1d0c8cb150c41aae2ebfdbfb2401542d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a3bc5b1d0c8cb150c41aae2ebfdbfb2401542d2"}], "stats": {"total": 63, "additions": 45, "deletions": 18}, "files": [{"sha": "52e58e4789fed04c1bf57ce7661bbc4c8bb4d576", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4e41fdeecdeadee4f4b221ef38ab38122d1fc18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4e41fdeecdeadee4f4b221ef38ab38122d1fc18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4e41fdeecdeadee4f4b221ef38ab38122d1fc18", "patch": "@@ -1,3 +1,8 @@\n+2004-08-02  Ben Elliston  <bje@au.ibm.com>\n+\n+\tPR target/16155\n+\t* config/rs6000/altivec.h: Replace typeof with __typeof__.\n+\n 2004-08-01  Richard Henderson  <rth@redhat.com>\n \n \t* expr.c (expand_expr_real_1) <normal_inner_ref>: Fix crash with"}, {"sha": "a103f105568c5591bf5f85ab468655f55a47d921", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4e41fdeecdeadee4f4b221ef38ab38122d1fc18/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4e41fdeecdeadee4f4b221ef38ab38122d1fc18/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=a4e41fdeecdeadee4f4b221ef38ab38122d1fc18", "patch": "@@ -311,7 +311,7 @@ struct __vec_step_help<vector float>\n   static const int _S_elem = 4;\n };\n \n-#define vec_step(t)  __vec_step_help<typeof(t)>::_S_elem\n+#define vec_step(t)  __vec_step_help<__typeof__(t)>::_S_elem\n \n /* vec_abs */\n \n@@ -8313,31 +8313,31 @@ vec_any_out (vector float a1, vector float a2)\n /* Helper macros.  */\n \n #define __un_args_eq(xtype, x)\t\t\t\t\t\t\\\n-\t__builtin_types_compatible_p (xtype, typeof (x))\n+\t__builtin_types_compatible_p (xtype, __typeof__ (x))\n \n #define __bin_args_eq(xtype, x, ytype, y)\t\t\t\t\\\n-\t(__builtin_types_compatible_p (xtype, typeof (x))\t\t\\\n-\t && __builtin_types_compatible_p (ytype, typeof (y)))\n+\t(__builtin_types_compatible_p (xtype, __typeof__ (x))\t\t\\\n+\t && __builtin_types_compatible_p (ytype, __typeof__ (y)))\n \n #define __tern_args_eq(xtype, x, ytype, y, ztype, z)                    \\\n-        (__builtin_types_compatible_p (xtype, typeof (x))               \\\n-         && __builtin_types_compatible_p (ytype, typeof (y))\t\t\\\n-\t && __builtin_types_compatible_p (ztype, typeof (z)))\n+        (__builtin_types_compatible_p (xtype, __typeof__ (x))               \\\n+         && __builtin_types_compatible_p (ytype, __typeof__ (y))\t\t\\\n+\t && __builtin_types_compatible_p (ztype, __typeof__ (z)))\n \n #define __ch(x, y, z)\t__builtin_choose_expr (x, y, z)\n \n #define vec_step(t) \\\n-  __ch (__builtin_types_compatible_p (typeof (t), vector signed int), 4,      \\\n-  __ch (__builtin_types_compatible_p (typeof (t), vector unsigned int), 4,    \\\n-  __ch (__builtin_types_compatible_p (typeof (t), vector bool int), 4,        \\\n-  __ch (__builtin_types_compatible_p (typeof (t), vector signed short), 8,    \\\n-  __ch (__builtin_types_compatible_p (typeof (t), vector unsigned short), 8,  \\\n-  __ch (__builtin_types_compatible_p (typeof (t), vector bool short), 8,      \\\n-  __ch (__builtin_types_compatible_p (typeof (t), vector pixel), 8,           \\\n-  __ch (__builtin_types_compatible_p (typeof (t), vector signed char), 16,    \\\n-  __ch (__builtin_types_compatible_p (typeof (t), vector unsigned char), 16,  \\\n-  __ch (__builtin_types_compatible_p (typeof (t), vector bool char), 16,      \\\n-  __ch (__builtin_types_compatible_p (typeof (t), vector float), 4,           \\\n+  __ch (__builtin_types_compatible_p (__typeof__ (t), vector signed int), 4,      \\\n+  __ch (__builtin_types_compatible_p (__typeof__ (t), vector unsigned int), 4,    \\\n+  __ch (__builtin_types_compatible_p (__typeof__ (t), vector bool int), 4,        \\\n+  __ch (__builtin_types_compatible_p (__typeof__ (t), vector signed short), 8,    \\\n+  __ch (__builtin_types_compatible_p (__typeof__ (t), vector unsigned short), 8,  \\\n+  __ch (__builtin_types_compatible_p (__typeof__ (t), vector bool short), 8,      \\\n+  __ch (__builtin_types_compatible_p (__typeof__ (t), vector pixel), 8,           \\\n+  __ch (__builtin_types_compatible_p (__typeof__ (t), vector signed char), 16,    \\\n+  __ch (__builtin_types_compatible_p (__typeof__ (t), vector unsigned char), 16,  \\\n+  __ch (__builtin_types_compatible_p (__typeof__ (t), vector bool char), 16,      \\\n+  __ch (__builtin_types_compatible_p (__typeof__ (t), vector float), 4,           \\\n   __builtin_altivec_compiletime_error (\"vec_step\"))))))))))))\n \n #define vec_abs(a) \\"}, {"sha": "69ef9dc680e8c1a2c5074d907dc1b20f4b466144", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4e41fdeecdeadee4f4b221ef38ab38122d1fc18/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4e41fdeecdeadee4f4b221ef38ab38122d1fc18/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a4e41fdeecdeadee4f4b221ef38ab38122d1fc18", "patch": "@@ -1,3 +1,8 @@\n+2004-08-02  Ben Elliston  <bje@au.ibm.com>\n+\n+\tPR target/16155\n+\t* gcc.dg/pr16155.c: New test.\n+\n 2004-07-31  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* gcc.dg/redecl-2.c: New test."}, {"sha": "64df264d0b61814dadbcccc5667f01f60e2be57a", "filename": "gcc/testsuite/gcc.dg/pr16155.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4e41fdeecdeadee4f4b221ef38ab38122d1fc18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr16155.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4e41fdeecdeadee4f4b221ef38ab38122d1fc18/gcc%2Ftestsuite%2Fgcc.dg%2Fpr16155.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr16155.c?ref=a4e41fdeecdeadee4f4b221ef38ab38122d1fc18", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-options \"-maltivec -ansi\" } */\n+\n+/* PR 16155\n+ * Compilation of a simple altivec test program fails if the -ansi flag is\n+ * given to gcc, when compiling with -maltivec.\n+ */\n+\n+#include <altivec.h>\n+\n+void foo(void)\n+{\n+  vector unsigned short a, b;\n+  a = vec_splat(b, 0);\n+}\n+\n+/* { dg-bogus \"parse error before \\\"typeof\\\"\" \"-maltivec -mansi\" { target powerpc*-*-* } 0 } */"}]}