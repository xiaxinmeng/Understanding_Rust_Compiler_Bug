{"sha": "23b293843e50bb93065d802c2812f94776a36e84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNiMjkzODQzZTUwYmI5MzA2NWQ4MDJjMjgxMmY5NDc3NmEzNmU4NA==", "commit": {"author": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2002-02-09T21:39:08Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2002-02-09T21:39:08Z"}, "message": "data.c (ffedata_eval_offset_): Convert non-default integer constants to default integer kind if necessary.\n\n2002-02-09  Toon Moene  <toon@moene.indiv.nluug.nl>\n\n\t* data.c (ffedata_eval_offset_): Convert non-default integer\n\tconstants to default integer kind if necessary.\n\nFrom-SVN: r49646", "tree": {"sha": "c4a39c714426a54a4bda532f60d83a5392bc7ecb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4a39c714426a54a4bda532f60d83a5392bc7ecb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23b293843e50bb93065d802c2812f94776a36e84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23b293843e50bb93065d802c2812f94776a36e84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23b293843e50bb93065d802c2812f94776a36e84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23b293843e50bb93065d802c2812f94776a36e84/comments", "author": null, "committer": null, "parents": [{"sha": "749e7b80f6062f7b314310224f85191b54c32819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/749e7b80f6062f7b314310224f85191b54c32819", "html_url": "https://github.com/Rust-GCC/gccrs/commit/749e7b80f6062f7b314310224f85191b54c32819"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "c48a661af417642f46459c3f7be8632e98668f2c", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23b293843e50bb93065d802c2812f94776a36e84/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23b293843e50bb93065d802c2812f94776a36e84/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=23b293843e50bb93065d802c2812f94776a36e84", "patch": "@@ -1,5 +1,10 @@\n 2002-02-09  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n+\t* data.c (ffedata_eval_offset_): Convert non-default integer\n+\tconstants to default integer kind if necessary.\n+\n+2002-02-09  Toon Moene  <toon@moene.indiv.nlug.nl>\n+\n \t* invoke.texi: Add a short debugging session\n \tas an example to the documentation of -g.\n "}, {"sha": "08ffa74b5fd1e8ed70b06d2e451f43d2796f92d7", "filename": "gcc/f/data.c", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23b293843e50bb93065d802c2812f94776a36e84/gcc%2Ff%2Fdata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23b293843e50bb93065d802c2812f94776a36e84/gcc%2Ff%2Fdata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fdata.c?ref=23b293843e50bb93065d802c2812f94776a36e84", "patch": "@@ -1,5 +1,5 @@\n /* data.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 2002 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -977,14 +977,24 @@ ffedata_eval_offset_ (ffebld subscripts, ffebld dims)\n \n   while (subscripts != NULL)\n     {\n+      ffeinfoKindtype sub_kind, low_kind, hi_kind;\n+\n       ++rank;\n       assert (dims != NULL);\n \n       subscript = ffebld_head (subscripts);\n       dim = ffebld_head (dims);\n \n       assert (ffeinfo_basictype (ffebld_info (subscript)) == FFEINFO_basictypeINTEGER);\n-      assert (ffeinfo_kindtype (ffebld_info (subscript)) == FFEINFO_kindtypeINTEGER1);\n+      /* Force to default - it's a constant expression !  */\n+      sub_kind = ffeinfo_kindtype (ffebld_info (subscript));\n+      if (sub_kind == FFEINFO_kindtypeINTEGER2)\n+\tsubscript->u.conter.expr->u.integer1 = (ffetargetIntegerDefault) subscript->u.conter.expr->u.integer2;\n+      else if (sub_kind == FFEINFO_kindtypeINTEGER3)\n+\tsubscript->u.conter.expr->u.integer1 = (ffetargetIntegerDefault) subscript->u.conter.expr->u.integer3;\n+      else if (sub_kind == FFEINFO_kindtypeINTEGER4)\n+\tsubscript->u.conter.expr->u.integer1 = (ffetargetIntegerDefault) subscript->u.conter.expr->u.integer4;\n+      ffeinfo_kindtype (ffebld_info (subscript)) = FFEINFO_kindtypeINTEGERDEFAULT;\n       value = ffedata_eval_integer1_ (subscript);\n \n       assert (ffebld_op (dim) == FFEBLD_opBOUNDS);\n@@ -996,12 +1006,28 @@ ffedata_eval_offset_ (ffebld subscripts, ffebld dims)\n       else\n \t{\n \t  assert (ffeinfo_basictype (ffebld_info (low)) == FFEINFO_basictypeINTEGER);\n-\t  assert (ffeinfo_kindtype (ffebld_info (low)) == FFEINFO_kindtypeINTEGERDEFAULT);\n+\t  /* Force to default - it's a constant expression !  */\n+\t  low_kind = ffeinfo_kindtype (ffebld_info (low));\n+\t  if (low_kind == FFEINFO_kindtypeINTEGER2)\n+\t    low->u.conter.expr->u.integer1 = (ffetargetIntegerDefault) low->u.conter.expr->u.integer2;\n+\t  else if (low_kind == FFEINFO_kindtypeINTEGER3)\n+\t    low->u.conter.expr->u.integer1 = (ffetargetIntegerDefault) low->u.conter.expr->u.integer3;\n+\t  else if (low_kind == FFEINFO_kindtypeINTEGER4)\n+\t    low->u.conter.expr->u.integer1 = (ffetargetIntegerDefault) low->u.conter.expr->u.integer4;\n+\t  ffeinfo_kindtype (ffebld_info (low)) = FFEINFO_kindtypeINTEGERDEFAULT;\n \t  lowbound = ffedata_eval_integer1_ (low);\n \t}\n \n       assert (ffeinfo_basictype (ffebld_info (high)) == FFEINFO_basictypeINTEGER);\n-      assert (ffeinfo_kindtype (ffebld_info (high)) == FFEINFO_kindtypeINTEGERDEFAULT);\n+      /* Force to default - it's a constant expression !  */\n+      hi_kind = ffeinfo_kindtype (ffebld_info (high));\n+      if (hi_kind == FFEINFO_kindtypeINTEGER2)\n+\thigh->u.conter.expr->u.integer1 = (ffetargetIntegerDefault) high->u.conter.expr->u.integer2;\n+      else if (hi_kind == FFEINFO_kindtypeINTEGER3)\n+\thigh->u.conter.expr->u.integer1 = (ffetargetIntegerDefault) high->u.conter.expr->u.integer3;\n+      else if (hi_kind == FFEINFO_kindtypeINTEGER4)\n+\thigh->u.conter.expr->u.integer1 = (ffetargetIntegerDefault) high->u.conter.expr->u.integer4;\n+      ffeinfo_kindtype (ffebld_info (high)) = FFEINFO_kindtypeINTEGERDEFAULT;\n       highbound = ffedata_eval_integer1_ (high);\n \n       if ((value < lowbound) || (value > highbound))"}]}