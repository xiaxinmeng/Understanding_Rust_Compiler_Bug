{"sha": "897145e3e11c868abb2b5ec23ef5f65a87914270", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk3MTQ1ZTNlMTFjODY4YWJiMmI1ZWMyM2VmNWY2NWE4NzkxNDI3MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-11-05T19:02:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-11-05T19:02:46Z"}, "message": "re PR c++/46160 (ICE with volatile structure and enum)\n\n\tPR c++/46160\n\t* cp-gimplify.c (cp_gimplify_expr): Drop volatile MEM_REFs\n\ton the RHS to avoid infinite recursion with gimplify_expr.\n\n\t* g++.dg/opt/empty2.C: New test.\n\nFrom-SVN: r166372", "tree": {"sha": "8df473c5a1f98acadecb2f68d4e7a78d4014022c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8df473c5a1f98acadecb2f68d4e7a78d4014022c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/897145e3e11c868abb2b5ec23ef5f65a87914270", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/897145e3e11c868abb2b5ec23ef5f65a87914270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/897145e3e11c868abb2b5ec23ef5f65a87914270", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/897145e3e11c868abb2b5ec23ef5f65a87914270/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee01a467d1b18dfe0f3b8eedb7fa3507310294ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee01a467d1b18dfe0f3b8eedb7fa3507310294ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee01a467d1b18dfe0f3b8eedb7fa3507310294ed"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "939b05af362b00297cbb3bbfeeb36f01066bf72f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/897145e3e11c868abb2b5ec23ef5f65a87914270/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/897145e3e11c868abb2b5ec23ef5f65a87914270/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=897145e3e11c868abb2b5ec23ef5f65a87914270", "patch": "@@ -1,3 +1,9 @@\n+2010-11-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/46160\n+\t* cp-gimplify.c (cp_gimplify_expr): Drop volatile MEM_REFs\n+\ton the RHS to avoid infinite recursion with gimplify_expr.\n+\n 2010-11-05  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/46304"}, {"sha": "705979d6c5534195fa65ad9011370ae01eafd9e7", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/897145e3e11c868abb2b5ec23ef5f65a87914270/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/897145e3e11c868abb2b5ec23ef5f65a87914270/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=897145e3e11c868abb2b5ec23ef5f65a87914270", "patch": "@@ -595,6 +595,16 @@ cp_gimplify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p)\n \t    if (!TREE_SIDE_EFFECTS (op1)\n \t\t|| (DECL_P (op1) && TREE_THIS_VOLATILE (op1)))\n \t      *expr_p = op0;\n+\t    else if (TREE_CODE (op1) == MEM_REF\n+\t\t     && TREE_THIS_VOLATILE (op1))\n+\t      {\n+\t\t/* Similarly for volatile MEM_REFs on the RHS.  */\n+\t\tif (!TREE_SIDE_EFFECTS (TREE_OPERAND (op1, 0)))\n+\t\t  *expr_p = op0;\n+\t\telse\n+\t\t  *expr_p = build2 (COMPOUND_EXPR, TREE_TYPE (*expr_p),\n+\t\t\t\t    TREE_OPERAND (op1, 0), op0);\n+\t      }\n \t    else\n \t      *expr_p = build2 (COMPOUND_EXPR, TREE_TYPE (*expr_p),\n \t\t\t\top0, op1);"}, {"sha": "203f3e0a11925bf98e6253fdea0d5c847f074c52", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/897145e3e11c868abb2b5ec23ef5f65a87914270/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/897145e3e11c868abb2b5ec23ef5f65a87914270/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=897145e3e11c868abb2b5ec23ef5f65a87914270", "patch": "@@ -1,5 +1,8 @@\n 2010-11-05  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/46160\n+\t* g++.dg/opt/empty2.C: New test.\n+\n \tPR target/45670\n \t* gcc.target/i386/pr45670.c: New test.\n "}, {"sha": "86caa5ccb0f182a6f0ab8dd0c2832487dd3ed7a3", "filename": "gcc/testsuite/g++.dg/opt/empty2.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/897145e3e11c868abb2b5ec23ef5f65a87914270/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fempty2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/897145e3e11c868abb2b5ec23ef5f65a87914270/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fempty2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fempty2.C?ref=897145e3e11c868abb2b5ec23ef5f65a87914270", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/46160\n+// { dg-do compile }\n+\n+struct S\n+{\n+  enum E { A };\n+} s;\n+volatile S t;\n+\n+void f (S::E);\n+\n+void\n+g ()\n+{\n+  volatile S *p = &s;\n+  f (p->A);\n+  f (t.A);\n+}"}]}