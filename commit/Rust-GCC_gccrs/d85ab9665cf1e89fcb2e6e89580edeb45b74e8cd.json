{"sha": "d85ab9665cf1e89fcb2e6e89580edeb45b74e8cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg1YWI5NjY1Y2YxZTg5ZmNiMmU2ZTg5NTgwZWRlYjQ1Yjc0ZThjZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-07-03T16:55:40Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-07-03T16:55:40Z"}, "message": "pa.c (fmpyaddoperands): Tighten checks.\n\n        * pa.c (fmpyaddoperands): Tighten checks.  Allow SFmode.\n        (fmpysuboperands): Similarly.\n\nFrom-SVN: r12383", "tree": {"sha": "8a3970b8e0a28f2c0799ed64aa0d0d519585542c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a3970b8e0a28f2c0799ed64aa0d0d519585542c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d85ab9665cf1e89fcb2e6e89580edeb45b74e8cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d85ab9665cf1e89fcb2e6e89580edeb45b74e8cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d85ab9665cf1e89fcb2e6e89580edeb45b74e8cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d85ab9665cf1e89fcb2e6e89580edeb45b74e8cd/comments", "author": null, "committer": null, "parents": [{"sha": "b1092901380ec5872a5122837ea72da9d2f6169b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1092901380ec5872a5122837ea72da9d2f6169b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1092901380ec5872a5122837ea72da9d2f6169b"}], "stats": {"total": 46, "additions": 40, "deletions": 6}, "files": [{"sha": "42134d58a9ab60806b68c9b1d1ebaecf6b7207a1", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 40, "deletions": 6, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85ab9665cf1e89fcb2e6e89580edeb45b74e8cd/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85ab9665cf1e89fcb2e6e89580edeb45b74e8cd/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=d85ab9665cf1e89fcb2e6e89580edeb45b74e8cd", "patch": "@@ -4894,6 +4894,10 @@ fmpyaddoperands (operands)\n {\n   enum machine_mode mode = GET_MODE (operands[0]);\n \n+  /* Must be a floating point mode.  */\n+  if (mode != SFmode && mode != DFmode)\n+    return 0;\n+\n   /* All modes must be the same.  */\n   if (! (mode == GET_MODE (operands[1])\n \t && mode == GET_MODE (operands[2])\n@@ -4902,9 +4906,12 @@ fmpyaddoperands (operands)\n \t && mode == GET_MODE (operands[5])))\n     return 0;\n \n-  /* Both DFmode and SFmode should work.  But using SFmode makes the\n-     assembler complain.  Just turn it off for now.  */\n-  if (mode != DFmode)\n+  /* All operands must be registers.  */\n+  if (! (GET_CODE (operands[1]) == REG\n+\t && GET_CODE (operands[2]) == REG\n+\t && GET_CODE (operands[3]) == REG\n+\t && GET_CODE (operands[4]) == REG\n+\t && GET_CODE (operands[5]) == REG))\n     return 0;\n \n   /* Only 2 real operands to the addition.  One of the input operands must\n@@ -4924,6 +4931,16 @@ fmpyaddoperands (operands)\n       || rtx_equal_p (operands[5], operands[0]))\n     return 0;\n \n+  /* SFmode limits the registers to the upper 32 of the 32bit FP regs.  */\n+  if (mode == SFmode\n+      && (REGNO (operands[0]) < 57\n+\t  || REGNO (operands[1]) < 57\n+\t  || REGNO (operands[2]) < 57\n+\t  || REGNO (operands[3]) < 57\n+\t  || REGNO (operands[4]) < 57\n+\t  || REGNO (operands[5]) < 57))\n+    return 0;\n+\n   /* Passed.  Operands are suitable for fmpyadd.  */\n   return 1;\n }\n@@ -4936,6 +4953,10 @@ fmpysuboperands (operands)\n {\n   enum machine_mode mode = GET_MODE (operands[0]);\n \n+  /* Must be a floating point mode.  */\n+  if (mode != SFmode && mode != DFmode)\n+    return 0;\n+\n   /* All modes must be the same.  */\n   if (! (mode == GET_MODE (operands[1])\n \t && mode == GET_MODE (operands[2])\n@@ -4944,9 +4965,12 @@ fmpysuboperands (operands)\n \t && mode == GET_MODE (operands[5])))\n     return 0;\n \n-  /* Both DFmode and SFmode should work.  But using SFmode makes the\n-     assembler complain.  Just turn it off for now.  */\n-  if (mode != DFmode)\n+  /* All operands must be registers.  */\n+  if (! (GET_CODE (operands[1]) == REG\n+\t && GET_CODE (operands[2]) == REG\n+\t && GET_CODE (operands[3]) == REG\n+\t && GET_CODE (operands[4]) == REG\n+\t && GET_CODE (operands[5]) == REG))\n     return 0;\n \n   /* Only 2 real operands to the subtraction.  Subtraction is not a commutative\n@@ -4964,6 +4988,16 @@ fmpysuboperands (operands)\n      || rtx_equal_p (operands[3], operands[2]))\n     return 0;\n \n+  /* SFmode limits the registers to the upper 32 of the 32bit FP regs.  */\n+  if (mode == SFmode\n+      && (REGNO (operands[0]) < 57\n+\t  || REGNO (operands[1]) < 57\n+\t  || REGNO (operands[2]) < 57\n+\t  || REGNO (operands[3]) < 57\n+\t  || REGNO (operands[4]) < 57\n+\t  || REGNO (operands[5]) < 57))\n+    return 0;\n+\n   /* Passed.  Operands are suitable for fmpysub.  */\n   return 1;\n }"}]}