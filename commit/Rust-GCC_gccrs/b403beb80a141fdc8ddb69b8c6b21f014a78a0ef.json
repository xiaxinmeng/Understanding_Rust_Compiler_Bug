{"sha": "b403beb80a141fdc8ddb69b8c6b21f014a78a0ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQwM2JlYjgwYTE0MWZkYzhkZGI2OWI4YzZiMjFmMDE0YTc4YTBlZg==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2017-05-11T22:10:10Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2017-05-11T22:10:10Z"}, "message": "rs6000-c: Add support for built-in functions vector unsigned char vec_popcnt (vector...\n\ngcc/ChangeLog:\n\n2017-05-11  Carl Love  <cel@us.ibm.com>\n\n\t* config/rs6000/rs6000-c: Add support for built-in functions\n\tvector unsigned char vec_popcnt (vector signed char)\n\tvector unsigned char vec_popcnt (vector unsigned char)\n\tvector unsigned short vec_popcnt (vector signed short)\n\tvector unsigned short vec_popcnt (vector unsigned short)\n\tvector unsigned int vec_popcnt (vector signed int)\n\tvector unsigned int vec_popcnt (vector unsigned int)\n\tvector unsigned long long vec_popcnt (vector signed long long)\n\tvector unsigned long long vec_popcnt (vector unsigned long long)\n\tvector signed long long vec_slo (vector signed long long,\n                                         vector signed char)\n\tvector signed long long vec_slo (vector signed long long,\n                                         vector unsigned char)\n\tvector unsigned long long vec_slo (vector unsigned long long,\n                                           vector signed char)\n\tvector unsigned long long vec_slo (vector unsigned long long,\n                                           vector unsigned char)\n\t* config/rs6000/rs6000-builtin.def: Add definitions for VPOPCNTUB,\n\tVPOPCNTUH, VPOPCNTUW, and VPOPCNTUD overloads.\n\t* config/rs6000/altivec.h: Add define for vec_popcnt, vec_popcntb,\n\tvec_popcnth, vec_popcntw and vec_popcntd built-in functions.\n\t* doc/extend.texi: Update the built-in documentation file for the\n\tnew built-in functions.\n\n\ngcc/testsuite/ChangeLog:\n\n2017-05-11  Carl Love  <cel@us.ibm.com>\n\n\t* gcc.target/powerpc/builtins-3-p8.c: Add tests for the new built-ins\n\tto the test suite file.\n\t* gcc.target/powerpc/builtins-3.c: Add tests for the new built-ins\n\tto the test suite file.\n\nFrom-SVN: r247933", "tree": {"sha": "7f7135135f10e5a2c85cc4d1a83f8439fc15f41e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f7135135f10e5a2c85cc4d1a83f8439fc15f41e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b062c1ac195e221ff72e03b37d630a4fa1f6dbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b062c1ac195e221ff72e03b37d630a4fa1f6dbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b062c1ac195e221ff72e03b37d630a4fa1f6dbe"}], "stats": {"total": 197, "additions": 190, "deletions": 7}, "files": [{"sha": "e1f8cf5e05aa0199e947fd1bc2766f4322a328c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b403beb80a141fdc8ddb69b8c6b21f014a78a0ef", "patch": "@@ -1,3 +1,29 @@\n+2017-05-11  Carl Love  <cel@us.ibm.com>\n+\n+\t* config/rs6000/rs6000-c: Add support for built-in functions\n+\tvector unsigned char vec_popcnt (vector signed char)\n+\tvector unsigned char vec_popcnt (vector unsigned char)\n+\tvector unsigned short vec_popcnt (vector signed short)\n+\tvector unsigned short vec_popcnt (vector unsigned short)\n+\tvector unsigned int vec_popcnt (vector signed int)\n+\tvector unsigned int vec_popcnt (vector unsigned int)\n+\tvector unsigned long long vec_popcnt (vector signed long long)\n+\tvector unsigned long long vec_popcnt (vector unsigned long long)\n+\tvector signed long long vec_slo (vector signed long long,\n+                                         vector signed char)\n+\tvector signed long long vec_slo (vector signed long long,\n+                                         vector unsigned char)\n+\tvector unsigned long long vec_slo (vector unsigned long long,\n+                                           vector signed char)\n+\tvector unsigned long long vec_slo (vector unsigned long long,\n+                                           vector unsigned char)\n+\t* config/rs6000/rs6000-builtin.def: Add definitions for VPOPCNTUB,\n+\tVPOPCNTUH, VPOPCNTUW, and VPOPCNTUD overloads.\n+\t* config/rs6000/altivec.h: Add define for vec_popcnt, vec_popcntb,\n+\tvec_popcnth, vec_popcntw and vec_popcntd built-in functions.\n+\t* doc/extend.texi: Update the built-in documentation file for the\n+\tnew built-in functions.\n+\n 2017-05-11  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* attribs.h (sorted_attr_string): Move machine independent"}, {"sha": "c334d9f4523a024ff924dd3e08c166aeb36aa513", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=b403beb80a141fdc8ddb69b8c6b21f014a78a0ef", "patch": "@@ -380,6 +380,11 @@\n #define vec_vpopcntd __builtin_vec_vpopcntd\n #define vec_vpopcnth __builtin_vec_vpopcnth\n #define vec_vpopcntw __builtin_vec_vpopcntw\n+#define vec_popcnt __builtin_vec_vpopcntu\n+#define vec_popcntb __builtin_vec_vpopcntub\n+#define vec_popcnth __builtin_vec_vpopcntuh\n+#define vec_popcntw __builtin_vec_vpopcntuw\n+#define vec_popcntd __builtin_vec_vpopcntud\n #define vec_vrld __builtin_vec_vrld\n #define vec_vsld __builtin_vec_vsld\n #define vec_vsrad __builtin_vec_vsrad"}, {"sha": "41186b1f664a49353ac61074c6810c79548110cf", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=b403beb80a141fdc8ddb69b8c6b21f014a78a0ef", "patch": "@@ -1835,6 +1835,10 @@ BU_P8V_AV_1 (VPOPCNTB,\t      \"vpopcntb\",\tCONST,  popcountv16qi2)\n BU_P8V_AV_1 (VPOPCNTH,\t      \"vpopcnth\",\tCONST,  popcountv8hi2)\n BU_P8V_AV_1 (VPOPCNTW,\t      \"vpopcntw\",\tCONST,  popcountv4si2)\n BU_P8V_AV_1 (VPOPCNTD,\t      \"vpopcntd\",\tCONST,  popcountv2di2)\n+BU_P8V_AV_1 (VPOPCNTUB,       \"vpopcntub\",\tCONST,  popcountv16qi2)\n+BU_P8V_AV_1 (VPOPCNTUH,       \"vpopcntuh\",\tCONST,  popcountv8hi2)\n+BU_P8V_AV_1 (VPOPCNTUW,       \"vpopcntuw\",\tCONST,  popcountv4si2)\n+BU_P8V_AV_1 (VPOPCNTUD,       \"vpopcntud\",\tCONST,  popcountv2di2)\n BU_P8V_AV_1 (VGBBD,\t      \"vgbbd\",\t\tCONST,  p8v_vgbbd)\n \n /* 2 argument altivec instructions added in ISA 2.07.  */\n@@ -1921,6 +1925,11 @@ BU_P8V_OVERLOAD_1 (VPOPCNTB,\t\"vpopcntb\")\n BU_P8V_OVERLOAD_1 (VPOPCNTH,\t\"vpopcnth\")\n BU_P8V_OVERLOAD_1 (VPOPCNTW,\t\"vpopcntw\")\n BU_P8V_OVERLOAD_1 (VPOPCNTD,\t\"vpopcntd\")\n+BU_P8V_OVERLOAD_1 (VPOPCNTU,\t\"vpopcntu\")\n+BU_P8V_OVERLOAD_1 (VPOPCNTUB,\t\"vpopcntub\")\n+BU_P8V_OVERLOAD_1 (VPOPCNTUH,\t\"vpopcntuh\")\n+BU_P8V_OVERLOAD_1 (VPOPCNTUW,\t\"vpopcntuw\")\n+BU_P8V_OVERLOAD_1 (VPOPCNTUD,\t\"vpopcntud\")\n BU_P8V_OVERLOAD_1 (VGBBD,\t\"vgbbd\")\n \n /* ISA 2.07 vector overloaded 2 argument functions.  */"}, {"sha": "a0536d679b48dcada6c84e448991314a7d08187e", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=b403beb80a141fdc8ddb69b8c6b21f014a78a0ef", "patch": "@@ -2578,6 +2578,14 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_unsigned_V16QI, RS6000_BTI_unsigned_V16QI, RS6000_BTI_V16QI, 0 },\n   { ALTIVEC_BUILTIN_VEC_SLO, ALTIVEC_BUILTIN_VSLO,\n     RS6000_BTI_unsigned_V16QI, RS6000_BTI_unsigned_V16QI, RS6000_BTI_unsigned_V16QI, 0 },\n+  { ALTIVEC_BUILTIN_VEC_SLO, ALTIVEC_BUILTIN_VSLO,\n+    RS6000_BTI_V2DI, RS6000_BTI_V2DI, RS6000_BTI_V16QI, 0 },\n+  { ALTIVEC_BUILTIN_VEC_SLO, ALTIVEC_BUILTIN_VSLO,\n+    RS6000_BTI_V2DI, RS6000_BTI_V2DI, RS6000_BTI_unsigned_V16QI, 0 },\n+  { ALTIVEC_BUILTIN_VEC_SLO, ALTIVEC_BUILTIN_VSLO,\n+    RS6000_BTI_unsigned_V2DI, RS6000_BTI_unsigned_V2DI, RS6000_BTI_V16QI, 0 },\n+  { ALTIVEC_BUILTIN_VEC_SLO, ALTIVEC_BUILTIN_VSLO,\n+    RS6000_BTI_unsigned_V2DI, RS6000_BTI_unsigned_V2DI, RS6000_BTI_unsigned_V16QI, 0 },\n   { ALTIVEC_BUILTIN_VEC_SPLAT, ALTIVEC_BUILTIN_VSPLTB,\n     RS6000_BTI_V16QI, RS6000_BTI_V16QI, RS6000_BTI_INTSI, 0 },\n   { ALTIVEC_BUILTIN_VEC_SPLAT, ALTIVEC_BUILTIN_VSPLTB,\n@@ -5243,6 +5251,26 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n   { P8V_BUILTIN_VEC_VPOPCNTB, P8V_BUILTIN_VPOPCNTB,\n     RS6000_BTI_unsigned_V16QI, RS6000_BTI_unsigned_V16QI, 0, 0 },\n \n+  { P8V_BUILTIN_VEC_VPOPCNTU, P8V_BUILTIN_VPOPCNTUB,\n+    RS6000_BTI_unsigned_V16QI, RS6000_BTI_V16QI, 0, 0 },\n+  { P8V_BUILTIN_VEC_VPOPCNTU, P8V_BUILTIN_VPOPCNTUB,\n+    RS6000_BTI_unsigned_V16QI, RS6000_BTI_unsigned_V16QI, 0, 0 },\n+\n+  { P8V_BUILTIN_VEC_VPOPCNTU, P8V_BUILTIN_VPOPCNTUH,\n+    RS6000_BTI_unsigned_V8HI, RS6000_BTI_V8HI, 0, 0 },\n+  { P8V_BUILTIN_VEC_VPOPCNTU, P8V_BUILTIN_VPOPCNTUH,\n+    RS6000_BTI_unsigned_V8HI, RS6000_BTI_unsigned_V8HI, 0, 0 },\n+\n+  { P8V_BUILTIN_VEC_VPOPCNTU, P8V_BUILTIN_VPOPCNTUW,\n+    RS6000_BTI_unsigned_V4SI, RS6000_BTI_V4SI, 0, 0 },\n+  { P8V_BUILTIN_VEC_VPOPCNTU, P8V_BUILTIN_VPOPCNTUW,\n+    RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V4SI, 0, 0 },\n+\n+  { P8V_BUILTIN_VEC_VPOPCNTU, P8V_BUILTIN_VPOPCNTUD,\n+    RS6000_BTI_unsigned_V2DI, RS6000_BTI_V2DI, 0, 0 },\n+  { P8V_BUILTIN_VEC_VPOPCNTU, P8V_BUILTIN_VPOPCNTUD,\n+    RS6000_BTI_unsigned_V2DI, RS6000_BTI_unsigned_V2DI, 0, 0 },\n+\n   { P8V_BUILTIN_VEC_VPOPCNTH, P8V_BUILTIN_VPOPCNTH,\n     RS6000_BTI_V8HI, RS6000_BTI_V8HI, 0, 0 },\n   { P8V_BUILTIN_VEC_VPOPCNTH, P8V_BUILTIN_VPOPCNTH,"}, {"sha": "c737634eaf599db0da320dd479052a5021eca073", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=b403beb80a141fdc8ddb69b8c6b21f014a78a0ef", "patch": "@@ -16709,6 +16709,10 @@ vector signed char vec_slo (vector signed char, vector unsigned char);\n vector unsigned char vec_slo (vector unsigned char, vector signed char);\n vector unsigned char vec_slo (vector unsigned char,\n                               vector unsigned char);\n+vector signed long long vec_slo (vector signed long long, vector signed char);\n+vector signed long long vec_slo (vector signed long long, vector unsigned char);\n+vector unsigned long long vec_slo (vector unsigned long long, vector signed char);\n+vector unsigned long long vec_slo (vector unsigned long long, vector unsigned char);\n \n vector signed char vec_splat (vector signed char, const int);\n vector unsigned char vec_splat (vector unsigned char, const int);\n@@ -17855,6 +17859,15 @@ vector unsigned int vec_packsu (vector long long, vector long long);\n vector unsigned int vec_packsu (vector unsigned long long,\n                                 vector unsigned long long);\n \n+vector unsigned char vec_popcnt (vector signed char);\n+vector unsigned char vec_popcnt (vector unsigned char);\n+vector unsigned short vec_popcnt (vector signed short);\n+vector unsigned short vec_popcnt (vector unsigned short);\n+vector unsigned int vec_popcnt (vector signed int);\n+vector unsigned int vec_popcnt (vector unsigned int);\n+vector unsigned long long vec_popcnt (vector signed long long);\n+vector unsigned long long vec_popcnt (vector unsigned long long);\n+\n vector long long vec_rl (vector long long,\n                          vector unsigned long long);\n vector long long vec_rl (vector unsigned long long,"}, {"sha": "a8ab978f0389e5650d970fea10463cda472bf8f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b403beb80a141fdc8ddb69b8c6b21f014a78a0ef", "patch": "@@ -1,3 +1,12 @@\n+gcc/testsuite/ChangeLog:\n+\n+2017-05-11  Carl Love  <cel@us.ibm.com>\n+\n+\t* gcc.target/powerpc/builtins-3-p8.c: Add tests for the new built-ins\n+\tto the test suite file.\n+\t* gcc.target/powerpc/builtins-3.c: Add tests for the new built-ins\n+\tto the test suite file.\n+\n 2017-05-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/78659"}, {"sha": "b0f6929b479fa8a50071b323f42a6b2d67033cb0", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3-p8.c", "status": "modified", "additions": 70, "deletions": 6, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c?ref=b403beb80a141fdc8ddb69b8c6b21f014a78a0ef", "patch": "@@ -42,14 +42,74 @@ test_neg_long_long (vector long long x)\n \treturn vec_neg (x);\n }\n \n+vector unsigned char\n+test_unsigned_char_popcnt_signed_char (vector signed char x)\n+{\n+\treturn vec_popcnt (x);\n+}\n+\n+vector unsigned char\n+test_unsigned_char_popcnt_unsigned_char (vector unsigned char x)\n+{\n+\treturn vec_popcnt (x);\n+}\n+\n+vector unsigned short\n+test_unsigned_short_popcnt_signed_short (vector short x)\n+{\n+\treturn vec_popcnt (x);\n+}\n+\n+vector unsigned short\n+test_unsigned_short_popcnt_unsigned_short (vector unsigned short x)\n+{\n+\treturn vec_popcnt (x);\n+}\n+\n+vector unsigned int\n+test_unsigned_int_popcnt_signed_int (vector int x)\n+{\n+\treturn vec_popcnt (x);\n+}\n+\n+vector unsigned int\n+test_unsigned_int_popcnt_unsigned_int (vector unsigned x)\n+{\n+   return vec_popcnt (x);\n+}\n+\n+vector unsigned long long\n+test_unsigned_long_lont_popcnt_signed_long (vector long long x)\n+{\n+\treturn vec_popcnt (x);\n+}\n+\n+vector unsigned long long\n+test_unsigned_long_long_popcnt_unsigned_long (vector unsigned long long x)\n+{\n+\treturn vec_popcnt (x);\n+}\n+\n /* Expected test results:\n \n-     test_eq_long_long          1 vcmpequd inst\n-     test_pack_float            1 vpkudum inst\n-     test_nabs_long_long        1 vspltisw, 1 vsubudm, 1 vminsd\n-     test_vsi_packs_vsll_vsll   1 vpksdss\n-     test_vui_packs_vull_vull   1 vpkudus\n-     test_neg_long_long         1 vspltisw, 1 vsubudm */\n+     test_eq_long_long                         1 vcmpequd inst\n+     test_pack_float                           1 vpkudum inst\n+     test_nabs_long_long                       1 vspltisw, 1 vsubudm, 1 vminsd\n+     test_vsi_packs_vsll_vsll                  1 vpksdss\n+     test_vui_packs_vull_vull                  1 vpkudus\n+     test_neg_long_long                        1 vspltisw, 1 vsubudm \n+     test_eq_long_long                         1 vcmpequd inst\n+     test_pack_float                           1 vpkudum inst\n+     test_nabs_long_long                       1 vspltisw, 1 vsubudm, 1 vminsd\n+     test_neg_long_long                        1 vspltisw, 1 vsubudm\n+     test_unsigned_char_popcnt_signed_char     1 vpopcntb\n+     test_unsigned_char_popcnt_unsigned_char   1 vpopcntb\n+     test_unsigned_short_popcnt_signed_short   1 vpopcnth\n+     test_unsigned_short_popcnt_unsigned_short 1 vpopcnth\n+     test_unsigned_signed_popcnt_signed_int    1 vpopcntw\n+     test_unsigned_signed_popcnt_unsigned_int  1 vpopcntw\n+     test_unsigned_signed_popcnt_signed_long   1 vpopcntd\n+     test_unsigned_signed_popcnt_unsigned_long 1 vpopcntd */\n \n /* { dg-final { scan-assembler-times \"vcmpequd\" 1 } } */\n /* { dg-final { scan-assembler-times \"vpkudum\"  1 } } */\n@@ -58,3 +118,7 @@ test_neg_long_long (vector long long x)\n /* { dg-final { scan-assembler-times \"vminsd\"   1 } } */\n /* { dg-final { scan-assembler-times \"vpksdss\"  1 } } */\n /* { dg-final { scan-assembler-times \"vpkudus\"  1 } } */  \n+/* { dg-final { scan-assembler-times \"vpopcntb\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vpopcnth\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vpopcntw\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vpopcntd\" 2 } } */"}, {"sha": "1549329f9bac23e54828b8aa9d83ddd95dc80ba0", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3.c", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b403beb80a141fdc8ddb69b8c6b21f014a78a0ef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c?ref=b403beb80a141fdc8ddb69b8c6b21f014a78a0ef", "patch": "@@ -88,6 +88,30 @@ test_neg_double (vector double x)\n \treturn vec_neg (x);\n }\n \n+vector signed long long\n+test_vsll_slo_vsll_vsc (vector signed long long x, vector signed char y)\n+{\n+\treturn vec_slo (x, y);\n+}\n+\n+vector signed long long\n+test_vsll_slo_vsll_vuc (vector signed long long x, vector unsigned char y)\n+{\n+\treturn vec_slo (x, y);\n+}\n+\n+vector unsigned long long\n+test_vull_slo_vull_vsc (vector unsigned long long x, vector signed char y)\n+{\n+\treturn vec_slo (x, y);\n+}\n+\n+vector unsigned long long\n+test_vull_slo_vull_vuc (vector unsigned long long x, vector unsigned char y)\n+{\n+\treturn vec_slo (x, y);\n+}\n+\n /* Expected test results:\n \n      test_eq_char              1 vcmpequb inst\n@@ -103,7 +127,11 @@ test_neg_double (vector double x)\n      test_neg_short            1 vspltisw, 1 vsubuhm\n      test_neg_int              1 vspltisw, 1 vsubuwm\n      test_neg_float            1 xvnegsp\n-     test_neg_float            1 xvnegdp */\n+     test_neg_float            1 xvnegdp\n+     test_vsll_slo_vsll_vsc    1 vslo\n+     test_vsll_slo_vsll_vuc    1 vslo\n+     test_vull_slo_vsll_vsc    1 vslo\n+     test_vull_slo_vsll_vuc    1 vslo */\n \n /* { dg-final { scan-assembler-times \"vcmpequb\" 1 } } */\n /* { dg-final { scan-assembler-times \"vcmpequh\" 1 } } */\n@@ -120,4 +148,5 @@ test_neg_double (vector double x)\n /* { dg-final { scan-assembler-times \"xvnabsdp\" 1 } } */\n /* { dg-final { scan-assembler-times \"xvnegsp\"  1 } } */\n /* { dg-final { scan-assembler-times \"xvnegdp\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vslo\"     4 } } */\n "}]}