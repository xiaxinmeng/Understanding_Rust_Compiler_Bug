{"sha": "1027314a211e7b0e2b05b6bd8f179c12f784517e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAyNzMxNGEyMTFlN2IwZTJiMDViNmJkOGYxNzljMTJmNzg0NTE3ZQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2004-05-31T16:10:54Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2004-05-31T16:10:54Z"}, "message": "pa.md: Disable the peephole2 patterns that generate indexed floating-point stores when...\n\n\t* pa.md: Disable the peephole2 patterns that generate indexed\n\tfloating-point stores when indexing is disabled.\n\nFrom-SVN: r82489", "tree": {"sha": "83fc3fc9690b6b85863349ffaffb0191fda5c0be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83fc3fc9690b6b85863349ffaffb0191fda5c0be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1027314a211e7b0e2b05b6bd8f179c12f784517e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1027314a211e7b0e2b05b6bd8f179c12f784517e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1027314a211e7b0e2b05b6bd8f179c12f784517e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1027314a211e7b0e2b05b6bd8f179c12f784517e/comments", "author": null, "committer": null, "parents": [{"sha": "41fd3bac90eeedbfcc63255a1139d16b733db5f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41fd3bac90eeedbfcc63255a1139d16b733db5f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41fd3bac90eeedbfcc63255a1139d16b733db5f2"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "c639b56d06695235820266a3e250afc7a52ec0ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1027314a211e7b0e2b05b6bd8f179c12f784517e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1027314a211e7b0e2b05b6bd8f179c12f784517e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1027314a211e7b0e2b05b6bd8f179c12f784517e", "patch": "@@ -1,3 +1,8 @@\n+2004-05-31  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa.md: Disable the peephole2 patterns that generate indexed\n+\tfloating-point stores when indexing is disabled.\n+\n 2004-05-31  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* c-pretty-print.c (pp_c_left_bracket): Make a function."}, {"sha": "646583cb3cb0f49cef38df32058fb5374dca3457", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1027314a211e7b0e2b05b6bd8f179c12f784517e/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1027314a211e7b0e2b05b6bd8f179c12f784517e/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=1027314a211e7b0e2b05b6bd8f179c12f784517e", "patch": "@@ -2308,6 +2308,7 @@\n    (set (mem:SI (match_dup 0))\n         (match_operand:SI 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:SI (plus:SI (mult:SI (match_dup 1) (const_int 4)) (match_dup 2)))\n@@ -2324,6 +2325,7 @@\n    (set (mem:SI (match_dup 0))\n         (match_operand:SI 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:SI (plus:SI (mult:SI (match_dup 1) (const_int 4)) (match_dup 2)))\n@@ -2340,6 +2342,7 @@\n    (set (mem:SI (match_dup 0))\n         (match_operand:SI 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n    && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n@@ -2357,6 +2360,7 @@\n    (set (mem:SI (match_dup 0))\n         (match_operand:SI 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n    && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n@@ -2373,6 +2377,7 @@\n    (set (mem:SI (match_dup 0))\n         (match_operand:SI 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && REG_OK_FOR_BASE_P (operands[1])\n    && (TARGET_NO_SPACE_REGS\n        || (!REG_POINTER (operands[1]) && REG_POINTER (operands[2])))\n@@ -2389,6 +2394,7 @@\n    (set (mem:SI (match_dup 0))\n         (match_operand:SI 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && REG_OK_FOR_BASE_P (operands[2])\n    && (TARGET_NO_SPACE_REGS\n        || (REG_POINTER (operands[1]) && !REG_POINTER (operands[2])))\n@@ -2405,6 +2411,7 @@\n    (set (mem:SI (match_dup 0))\n         (match_operand:SI 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n    && REG_OK_FOR_BASE_P (operands[1])\n    && (TARGET_NO_SPACE_REGS\n@@ -2422,6 +2429,7 @@\n    (set (mem:SI (match_dup 0))\n         (match_operand:SI 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n    && REG_OK_FOR_BASE_P (operands[2])\n    && (TARGET_NO_SPACE_REGS\n@@ -3818,6 +3826,7 @@\n    (set (mem:DF (match_dup 0))\n         (match_operand:DF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:DF (plus:SI (mult:SI (match_dup 1) (const_int 8)) (match_dup 2)))\n@@ -3834,6 +3843,7 @@\n    (set (mem:DF (match_dup 0))\n         (match_operand:DF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:DF (plus:SI (mult:SI (match_dup 1) (const_int 8)) (match_dup 2)))\n@@ -3850,6 +3860,7 @@\n    (set (mem:DF (match_dup 0))\n         (match_operand:DF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n    && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n@@ -3867,6 +3878,7 @@\n    (set (mem:DF (match_dup 0))\n         (match_operand:DF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n    && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n@@ -3883,6 +3895,7 @@\n    (set (mem:DF (match_dup 0))\n         (match_operand:DF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && REG_OK_FOR_BASE_P (operands[1])\n    && (TARGET_NO_SPACE_REGS\n        || (!REG_POINTER (operands[1]) && REG_POINTER (operands[2])))\n@@ -3899,6 +3912,7 @@\n    (set (mem:DF (match_dup 0))\n         (match_operand:DF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && REG_OK_FOR_BASE_P (operands[2])\n    && (TARGET_NO_SPACE_REGS\n        || (REG_POINTER (operands[1]) && !REG_POINTER (operands[2])))\n@@ -3915,6 +3929,7 @@\n    (set (mem:DF (match_dup 0))\n         (match_operand:DF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n    && REG_OK_FOR_BASE_P (operands[1])\n    && (TARGET_NO_SPACE_REGS\n@@ -3932,6 +3947,7 @@\n    (set (mem:DF (match_dup 0))\n         (match_operand:DF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n    && REG_OK_FOR_BASE_P (operands[2])\n    && (TARGET_NO_SPACE_REGS\n@@ -4126,6 +4142,7 @@\n    (set (mem:DI (match_dup 0))\n         (match_operand:DI 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n    && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n@@ -4143,6 +4160,7 @@\n    (set (mem:DI (match_dup 0))\n         (match_operand:DI 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n    && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n@@ -4159,6 +4177,7 @@\n    (set (mem:DI (match_dup 0))\n         (match_operand:DI 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n    && REG_OK_FOR_BASE_P (operands[1])\n    && (TARGET_NO_SPACE_REGS\n@@ -4176,6 +4195,7 @@\n    (set (mem:DI (match_dup 0))\n         (match_operand:DI 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n    && REG_OK_FOR_BASE_P (operands[2])\n    && (TARGET_NO_SPACE_REGS\n@@ -4321,6 +4341,7 @@\n    (set (mem:SF (match_dup 0))\n         (match_operand:SF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:SF (plus:SI (mult:SI (match_dup 1) (const_int 4)) (match_dup 2)))\n@@ -4337,6 +4358,7 @@\n    (set (mem:SF (match_dup 0))\n         (match_operand:SF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n   [(set (mem:SF (plus:SI (mult:SI (match_dup 1) (const_int 4)) (match_dup 2)))\n@@ -4353,6 +4375,7 @@\n    (set (mem:SF (match_dup 0))\n         (match_operand:SF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n    && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n@@ -4370,6 +4393,7 @@\n    (set (mem:SF (match_dup 0))\n         (match_operand:SF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n    && REG_OK_FOR_BASE_P (operands[2])\n    && FP_REGNO_P (REGNO (operands[3]))\"\n@@ -4386,6 +4410,7 @@\n    (set (mem:SF (match_dup 0))\n         (match_operand:SF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && REG_OK_FOR_BASE_P (operands[1])\n    && (TARGET_NO_SPACE_REGS\n        || (!REG_POINTER (operands[1]) && REG_POINTER (operands[2])))\n@@ -4402,6 +4427,7 @@\n    (set (mem:SF (match_dup 0))\n         (match_operand:SF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && REG_OK_FOR_BASE_P (operands[2])\n    && (TARGET_NO_SPACE_REGS\n        || (REG_POINTER (operands[1]) && !REG_POINTER (operands[2])))\n@@ -4418,6 +4444,7 @@\n    (set (mem:SF (match_dup 0))\n         (match_operand:SF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n    && REG_OK_FOR_BASE_P (operands[1])\n    && (TARGET_NO_SPACE_REGS\n@@ -4435,6 +4462,7 @@\n    (set (mem:SF (match_dup 0))\n         (match_operand:SF 3 \"register_operand\" \"\"))]\n   \"!TARGET_SOFT_FLOAT\n+   && !TARGET_DISABLE_INDEXING\n    && TARGET_64BIT\n    && REG_OK_FOR_BASE_P (operands[2])\n    && (TARGET_NO_SPACE_REGS"}]}