{"sha": "2598165f09a96f60aa53abebf931718a769b7cf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU5ODE2NWYwOWE5NmY2MGFhNTNhYmViZjkzMTcxOGE3NjliN2NmMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-10-13T21:23:47Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-10-13T21:23:47Z"}, "message": "re PR c++/50614 ([C++0x] ICE: tree check: expected field_decl, have identifier_node in component_ref_field_offset, at expr.c:6697 with -fcompare-debug and a non-static initializer)\n\n\tPR c++/50614\n\t* cp-tree.h (VAR_TEMPL_TYPE_FIELD_OR_FUNCTION_DECL_CHECK): New.\n\t(DECL_TEMPLATE_INFO): Use it.\n\t* pt.c (tsubst_decl) [FIELD_DECL]: Set DECL_TEMPLATE_INFO\n\tif the decl has an NSDMI.\n\t* init.c (perform_member_init): Use it.\n\nFrom-SVN: r179945", "tree": {"sha": "6bfe09b345ceaed634c1718cf2d97aba8fa3b824", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bfe09b345ceaed634c1718cf2d97aba8fa3b824"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2598165f09a96f60aa53abebf931718a769b7cf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2598165f09a96f60aa53abebf931718a769b7cf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2598165f09a96f60aa53abebf931718a769b7cf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2598165f09a96f60aa53abebf931718a769b7cf2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e81aa85294d479dea3fb9b5a71e6f7242770af6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e81aa85294d479dea3fb9b5a71e6f7242770af6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e81aa85294d479dea3fb9b5a71e6f7242770af6"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "9a214b57bd9a940a3f9a60aedf9ffc4967a8a8df", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2598165f09a96f60aa53abebf931718a769b7cf2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2598165f09a96f60aa53abebf931718a769b7cf2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2598165f09a96f60aa53abebf931718a769b7cf2", "patch": "@@ -1,5 +1,12 @@\n 2011-10-13  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/50614\n+\t* cp-tree.h (VAR_TEMPL_TYPE_FIELD_OR_FUNCTION_DECL_CHECK): New.\n+\t(DECL_TEMPLATE_INFO): Use it.\n+\t* pt.c (tsubst_decl) [FIELD_DECL]: Set DECL_TEMPLATE_INFO\n+\tif the decl has an NSDMI.\n+\t* init.c (perform_member_init): Use it.\n+\n \tPR c++/50437\n \t* cp-tree.h (struct tree_lambda_expr): Add closure field.\n \t(LAMBDA_EXPR_CLOSURE): New."}, {"sha": "88f7fbd1a0cff8b457edf4ca368bd874ea60ffbf", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2598165f09a96f60aa53abebf931718a769b7cf2/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2598165f09a96f60aa53abebf931718a769b7cf2/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=2598165f09a96f60aa53abebf931718a769b7cf2", "patch": "@@ -201,6 +201,9 @@ c-common.h, not after.\n #define VAR_TEMPL_TYPE_OR_FUNCTION_DECL_CHECK(NODE) \\\n   TREE_CHECK4(NODE,VAR_DECL,FUNCTION_DECL,TYPE_DECL,TEMPLATE_DECL)\n \n+#define VAR_TEMPL_TYPE_FIELD_OR_FUNCTION_DECL_CHECK(NODE) \\\n+  TREE_CHECK5(NODE,VAR_DECL,FIELD_DECL,FUNCTION_DECL,TYPE_DECL,TEMPLATE_DECL)\n+\n #define BOUND_TEMPLATE_TEMPLATE_PARM_TYPE_CHECK(NODE) \\\n   TREE_CHECK(NODE,BOUND_TEMPLATE_TEMPLATE_PARM)\n \n@@ -2556,7 +2559,7 @@ extern void decl_shadowed_for_var_insert (tree, tree);\n    global function f.  In this case, DECL_TEMPLATE_INFO for S<int>::f\n    will be non-NULL, but DECL_USE_TEMPLATE will be zero.  */\n #define DECL_TEMPLATE_INFO(NODE) \\\n-  (DECL_LANG_SPECIFIC (VAR_TEMPL_TYPE_OR_FUNCTION_DECL_CHECK (NODE)) \\\n+  (DECL_LANG_SPECIFIC (VAR_TEMPL_TYPE_FIELD_OR_FUNCTION_DECL_CHECK (NODE)) \\\n    ->u.min.template_info)\n \n /* For a VAR_DECL, indicates that the variable is actually a\n@@ -2701,7 +2704,10 @@ extern void decl_shadowed_for_var_insert (tree, tree);\n      template <class T> struct S { friend void f<int>(int, double); }\n \n    the DECL_TI_TEMPLATE will be an IDENTIFIER_NODE for `f' and the\n-   DECL_TI_ARGS will be {int}.  */\n+   DECL_TI_ARGS will be {int}.\n+\n+   For a FIELD_DECL with a non-static data member initializer, this value\n+   is the FIELD_DECL it was instantiated from.  */\n #define DECL_TI_TEMPLATE(NODE)      TI_TEMPLATE (DECL_TEMPLATE_INFO (NODE))\n \n /* The template arguments used to obtain this decl from the most"}, {"sha": "4561979f72a7c810cd1c3f3ed0d9d951aff158d5", "filename": "gcc/cp/init.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2598165f09a96f60aa53abebf931718a769b7cf2/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2598165f09a96f60aa53abebf931718a769b7cf2/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=2598165f09a96f60aa53abebf931718a769b7cf2", "patch": "@@ -497,11 +497,11 @@ perform_member_init (tree member, tree init)\n      mem-initializer for this field.  */\n   if (init == NULL_TREE)\n     {\n-      if (CLASSTYPE_TEMPLATE_INSTANTIATION (DECL_CONTEXT (member)))\n+      if (DECL_LANG_SPECIFIC (member) && DECL_TEMPLATE_INFO (member))\n \t/* Do deferred instantiation of the NSDMI.  */\n \tinit = (tsubst_copy_and_build\n-\t\t(DECL_INITIAL (member),\n-\t\t CLASSTYPE_TI_ARGS (DECL_CONTEXT (member)),\n+\t\t(DECL_INITIAL (DECL_TI_TEMPLATE (member)),\n+\t\t DECL_TI_ARGS (member),\n \t\t tf_warning_or_error, member, /*function_p=*/false,\n \t\t /*integral_constant_expression_p=*/false));\n       else"}, {"sha": "1632c01ebce34edea9db74b20ce1e25216f3fbaa", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2598165f09a96f60aa53abebf931718a769b7cf2/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2598165f09a96f60aa53abebf931718a769b7cf2/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=2598165f09a96f60aa53abebf931718a769b7cf2", "patch": "@@ -10269,6 +10269,16 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n \t    = tsubst_expr (DECL_INITIAL (t), args,\n \t\t\t   complain, in_decl,\n \t\t\t   /*integral_constant_expression_p=*/true);\n+\telse if (DECL_INITIAL (t))\n+\t  {\n+\t    /* Set up DECL_TEMPLATE_INFO so that we can get at the\n+\t       NSDMI in perform_member_init.  Still set DECL_INITIAL\n+\t       to error_mark_node so that we know there is one.  */\n+\t    DECL_INITIAL (r) = error_mark_node;\n+\t    gcc_assert (DECL_LANG_SPECIFIC (r) == NULL);\n+\t    retrofit_lang_decl (r);\n+\t    DECL_TEMPLATE_INFO (r) = build_template_info (t, args);\n+\t  }\n \t/* We don't have to set DECL_CONTEXT here; it is set by\n \t   finish_member_declaration.  */\n \tDECL_CHAIN (r) = NULL_TREE;"}, {"sha": "9c29b70e1fbc043dd9087f215e54672c84eea44a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2598165f09a96f60aa53abebf931718a769b7cf2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2598165f09a96f60aa53abebf931718a769b7cf2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2598165f09a96f60aa53abebf931718a769b7cf2", "patch": "@@ -1,5 +1,8 @@\n 2011-10-13  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/50614\n+\t* g++.dg/cpp0x/nsdmi-template2.C: New.\n+\n \tPR c++/50437\n \t* g++.dg/cpp0x/lambda/lambda-auto1.C: New.\n "}, {"sha": "27b0aa5f9dadb70c45879dc31885428efb4f1cd5", "filename": "gcc/testsuite/g++.dg/cpp0x/nsdmi-template2.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2598165f09a96f60aa53abebf931718a769b7cf2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2598165f09a96f60aa53abebf931718a769b7cf2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template2.C?ref=2598165f09a96f60aa53abebf931718a769b7cf2", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/50614\n+// { dg-options \"-std=c++0x -fcompare-debug\" }\n+\n+struct A\n+{\n+  int f ();\n+};\n+\n+template <int> struct B : A\n+{\n+  int i = this->f ();\n+};\n+\n+B<0> b;"}]}