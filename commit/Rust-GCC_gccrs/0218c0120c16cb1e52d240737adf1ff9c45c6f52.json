{"sha": "0218c0120c16cb1e52d240737adf1ff9c45c6f52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIxOGMwMTIwYzE2Y2IxZTUyZDI0MDczN2FkZjFmZjljNDVjNmY1Mg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-04-10T11:41:01Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-04-10T11:41:01Z"}, "message": "i386.md (fix_trunc<mode>di_sse): Remove \"x\" from \"xm\" alternative.\n\n\t* config/i386/i386.md (fix_trunc<mode>di_sse): Remove \"x\" from \"xm\"\n\talternative.\n\t(fix_trunc<mode>si_sse): Ditto.\n\t(*floatsisf2_mixed, *floatsisf2_sse): Ditto.\n\t(*floatsidf2_mixed, *floatsidf2_sse): Ditto.\n\t(*floatdisf2_mixed, *floatdisf2_sse): Ditto.\n\t(*floatdidf2_mixed, *floatdidf2_sse): Ditto.\n\t(floathi<mode>2): Rename from floathisf2 and floathidf2. Macroize\n\texpander using SSEMODEF mode macro.\n\t(floatsi<mode>2): Rename from floatsisf2 and floashidf2. Macroize\n\texpander using SSEMODEF mode macro.\n\t(*floathi<mode>2_i387): Rename from *floathisf2_i387 and\n\t*floathidf2_i387. Macroize insn using X87MODEF12 mode macro.\n\t(*floatsi<mode>2_i387): Rename from *floatsisf2_i387 and\n\t*floatsidf2_i387. Macroize insn using X87MODEF12 mode macro.\n\t(*floatdi<mode>2_i387): Rename from *floatdisf2_i387 and\n\t*floatdidf2_i387. Macroize insn using X87MODEF12 mode macro.\n\t(float<mode>xf2): Rename from floathixf2, floatsixf2 and floatdixf2.\n\tMacroize insn using X87MODEF mode macro.\n\nFrom-SVN: r123693", "tree": {"sha": "e796b7284c20bda96fb6f932693137acd063fb9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e796b7284c20bda96fb6f932693137acd063fb9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0218c0120c16cb1e52d240737adf1ff9c45c6f52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0218c0120c16cb1e52d240737adf1ff9c45c6f52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0218c0120c16cb1e52d240737adf1ff9c45c6f52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0218c0120c16cb1e52d240737adf1ff9c45c6f52/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "11202768fe292f31b5c1b35e7a7369e6377bf5ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11202768fe292f31b5c1b35e7a7369e6377bf5ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11202768fe292f31b5c1b35e7a7369e6377bf5ff"}], "stats": {"total": 232, "additions": 89, "deletions": 143}, "files": [{"sha": "9d679409892c8d572d529c43304c031a4113e955", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0218c0120c16cb1e52d240737adf1ff9c45c6f52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0218c0120c16cb1e52d240737adf1ff9c45c6f52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0218c0120c16cb1e52d240737adf1ff9c45c6f52", "patch": "@@ -1,3 +1,25 @@\n+2007-04-10  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (fix_trunc<mode>di_sse): Remove \"x\" from \"xm\"\n+\talternative.\n+\t(fix_trunc<mode>si_sse): Ditto.\n+\t(*floatsisf2_mixed, *floatsisf2_sse): Ditto.\n+\t(*floatsidf2_mixed, *floatsidf2_sse): Ditto.\n+\t(*floatdisf2_mixed, *floatdisf2_sse): Ditto.\n+\t(*floatdidf2_mixed, *floatdidf2_sse): Ditto.\n+\t(floathi<mode>2): Rename from floathisf2 and floathidf2. Macroize\n+\texpander using SSEMODEF mode macro.\n+\t(floatsi<mode>2): Rename from floatsisf2 and floashidf2. Macroize\n+\texpander using SSEMODEF mode macro.\n+\t(*floathi<mode>2_i387): Rename from *floathisf2_i387 and\n+\t*floathidf2_i387. Macroize insn using X87MODEF12 mode macro.\n+\t(*floatsi<mode>2_i387): Rename from *floatsisf2_i387 and\n+\t*floatsidf2_i387. Macroize insn using X87MODEF12 mode macro.\n+\t(*floatdi<mode>2_i387): Rename from *floatdisf2_i387 and\n+\t*floatdidf2_i387. Macroize insn using X87MODEF12 mode macro.\n+\t(float<mode>xf2): Rename from floathixf2, floatsixf2 and floatdixf2.\n+\tMacroize insn using X87MODEF mode macro.\n+\n 2007-04-09  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/sse.md (sse2_pinsrw): Removed."}, {"sha": "5a932cf449304ab4bba6e0eb3eae19db461ea7a5", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 67, "deletions": 143, "changes": 210, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0218c0120c16cb1e52d240737adf1ff9c45c6f52/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0218c0120c16cb1e52d240737adf1ff9c45c6f52/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=0218c0120c16cb1e52d240737adf1ff9c45c6f52", "patch": "@@ -4184,7 +4184,7 @@\n ;; When SSE is available, it is always faster to use it!\n (define_insn \"fix_trunc<mode>di_sse\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n-\t(fix:DI (match_operand:SSEMODEF 1 \"nonimmediate_operand\" \"x,xm\")))]\n+\t(fix:DI (match_operand:SSEMODEF 1 \"nonimmediate_operand\" \"x,m\")))]\n   \"TARGET_64BIT && SSE_FLOAT_MODE_P (<MODE>mode)\n    && (!TARGET_FISTTP || TARGET_SSE_MATH)\"\n   \"cvtts<ssemodefsuffix>2si{q}\\t{%1, %0|%0, %1}\"\n@@ -4195,7 +4195,7 @@\n \n (define_insn \"fix_trunc<mode>si_sse\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n-\t(fix:SI (match_operand:SSEMODEF 1 \"nonimmediate_operand\" \"x,xm\")))]\n+\t(fix:SI (match_operand:SSEMODEF 1 \"nonimmediate_operand\" \"x,m\")))]\n   \"SSE_FLOAT_MODE_P (<MODE>mode)\n    && (!TARGET_FISTTP || TARGET_SSE_MATH)\"\n   \"cvtts<ssemodefsuffix>2si\\t{%1, %0|%0, %1}\"\n@@ -4482,40 +4482,44 @@\n ;; Even though we only accept memory inputs, the backend _really_\n ;; wants to be able to do this between registers.\n \n-(define_expand \"floathisf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float:SF (match_operand:HI 1 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_80387 || TARGET_SSE_MATH\"\n+(define_expand \"floathi<mode>2\"\n+  [(set (match_operand:SSEMODEF 0 \"register_operand\" \"\")\n+\t(float:SSEMODEF (match_operand:HI 1 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_80387 || (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\"\n {\n-  if (TARGET_SSE_MATH)\n+  if (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n     {\n-      emit_insn (gen_floatsisf2 (operands[0],\n-\t\t\t\t convert_to_mode (SImode, operands[1], 0)));\n+      emit_insn\n+\t(gen_floatsi<mode>2 (operands[0],\n+\t\t\t     convert_to_mode (SImode, operands[1], 0)));\n       DONE;\n     }\n })\n \n-(define_insn \"*floathisf2_i387\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-\t(float:SF (match_operand:HI 1 \"nonimmediate_operand\" \"m,?r\")))]\n-  \"TARGET_80387 && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\"\n+(define_insn \"*floathi<mode>2_i387\"\n+  [(set (match_operand:X87MODEF12 0 \"register_operand\" \"=f,f\")\n+\t(float:X87MODEF12\n+\t  (match_operand:HI 1 \"nonimmediate_operand\" \"m,?r\")))]\n+  \"TARGET_80387\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\"\n   \"@\n    fild%z1\\t%1\n    #\"\n   [(set_attr \"type\" \"fmov,multi\")\n-   (set_attr \"mode\" \"SF\")\n+   (set_attr \"mode\" \"<MODE>\")\n    (set_attr \"unit\" \"*,i387\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n-(define_expand \"floatsisf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_80387 || TARGET_SSE_MATH\"\n+(define_expand \"floatsi<mode>2\"\n+  [(set (match_operand:SSEMODEF 0 \"register_operand\" \"\")\n+\t(float:SSEMODEF (match_operand:SI 1 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_80387 || (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\"\n   \"\")\n \n (define_insn \"*floatsisf2_mixed\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,?f,x,x\")\n-\t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r,r,mr\")))]\n+\t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r,r,m\")))]\n   \"TARGET_MIX_SSE_I387\"\n   \"@\n    fild%z1\\t%1\n@@ -4531,7 +4535,7 @@\n \n (define_insn \"*floatsisf2_sse\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=x,x\")\n-\t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"r,mr\")))]\n+\t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"r,m\")))]\n   \"TARGET_SSE_MATH\"\n   \"cvtsi2ss\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n@@ -4540,15 +4544,43 @@\n    (set_attr \"amdfam10_decode\" \"vector,double\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n-(define_insn \"*floatsisf2_i387\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-\t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"m,?r\")))]\n+(define_insn \"*floatsidf2_mixed\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,?f,x,x\")\n+\t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r,r,m\")))]\n+  \"TARGET_SSE2 && TARGET_MIX_SSE_I387\"\n+  \"@\n+   fild%z1\\t%1\n+   #\n+   cvtsi2sd\\t{%1, %0|%0, %1}\n+   cvtsi2sd\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"fmov,multi,sseicvt,sseicvt\")\n+   (set_attr \"mode\" \"DF\")\n+   (set_attr \"unit\" \"*,i387,*,*\")\n+   (set_attr \"athlon_decode\" \"*,*,double,direct\")\n+   (set_attr \"amdfam10_decode\" \"*,*,vector,double\")\n+   (set_attr \"fp_int_src\" \"true\")])\n+\n+(define_insn \"*floatsidf2_sse\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=x,x\")\n+\t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"r,m\")))]\n+  \"TARGET_SSE2 && TARGET_SSE_MATH\"\n+  \"cvtsi2sd\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"sseicvt\")\n+   (set_attr \"mode\" \"DF\")\n+   (set_attr \"athlon_decode\" \"double,direct\")\n+   (set_attr \"amdfam10_decode\" \"vector,double\")\n+   (set_attr \"fp_int_src\" \"true\")])\n+\n+(define_insn \"*floatsi<mode>2_i387\"\n+  [(set (match_operand:X87MODEF12 0 \"register_operand\" \"=f,f\")\n+\t(float:X87MODEF12\n+\t  (match_operand:SI 1 \"nonimmediate_operand\" \"m,?r\")))]\n   \"TARGET_80387\"\n   \"@\n    fild%z1\\t%1\n    #\"\n   [(set_attr \"type\" \"fmov,multi\")\n-   (set_attr \"mode\" \"SF\")\n+   (set_attr \"mode\" \"<MODE>\")\n    (set_attr \"unit\" \"*,i387\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n@@ -4560,7 +4592,7 @@\n \n (define_insn \"*floatdisf2_mixed\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,?f,x,x\")\n-\t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"m,r,r,mr\")))]\n+\t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"m,r,r,m\")))]\n   \"TARGET_64BIT && TARGET_MIX_SSE_I387\"\n   \"@\n    fild%z1\\t%1\n@@ -4576,7 +4608,7 @@\n \n (define_insn \"*floatdisf2_sse\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=x,x\")\n-\t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"r,mr\")))]\n+\t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"r,m\")))]\n   \"TARGET_64BIT && TARGET_SSE_MATH\"\n   \"cvtsi2ss{q}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n@@ -4585,88 +4617,6 @@\n    (set_attr \"amdfam10_decode\" \"vector,double\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n-(define_insn \"*floatdisf2_i387\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-\t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"m,?r\")))]\n-  \"TARGET_80387\"\n-  \"@\n-   fild%z1\\t%1\n-   #\"\n-  [(set_attr \"type\" \"fmov,multi\")\n-   (set_attr \"mode\" \"SF\")\n-   (set_attr \"unit\" \"*,i387\")\n-   (set_attr \"fp_int_src\" \"true\")])\n-\n-(define_expand \"floathidf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(float:DF (match_operand:HI 1 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_80387 || (TARGET_SSE2 && TARGET_SSE_MATH)\"\n-{\n-  if (TARGET_SSE2 && TARGET_SSE_MATH)\n-    {\n-      emit_insn (gen_floatsidf2 (operands[0],\n-\t\t\t\t convert_to_mode (SImode, operands[1], 0)));\n-      DONE;\n-    }\n-})\n-\n-(define_insn \"*floathidf2_i387\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-\t(float:DF (match_operand:HI 1 \"nonimmediate_operand\" \"m,?r\")))]\n-  \"TARGET_80387 && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\"\n-  \"@\n-   fild%z1\\t%1\n-   #\"\n-  [(set_attr \"type\" \"fmov,multi\")\n-   (set_attr \"mode\" \"DF\")\n-   (set_attr \"unit\" \"*,i387\")\n-   (set_attr \"fp_int_src\" \"true\")])\n-\n-(define_expand \"floatsidf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_80387 || (TARGET_SSE2 && TARGET_SSE_MATH)\"\n-  \"\")\n-\n-(define_insn \"*floatsidf2_mixed\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,?f,x,x\")\n-\t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r,r,mr\")))]\n-  \"TARGET_SSE2 && TARGET_MIX_SSE_I387\"\n-  \"@\n-   fild%z1\\t%1\n-   #\n-   cvtsi2sd\\t{%1, %0|%0, %1}\n-   cvtsi2sd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"fmov,multi,sseicvt,sseicvt\")\n-   (set_attr \"mode\" \"DF\")\n-   (set_attr \"unit\" \"*,i387,*,*\")\n-   (set_attr \"athlon_decode\" \"*,*,double,direct\")\n-   (set_attr \"amdfam10_decode\" \"*,*,vector,double\")\n-   (set_attr \"fp_int_src\" \"true\")])\n-\n-(define_insn \"*floatsidf2_sse\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=x,x\")\n-\t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"r,mr\")))]\n-  \"TARGET_SSE2 && TARGET_SSE_MATH\"\n-  \"cvtsi2sd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sseicvt\")\n-   (set_attr \"mode\" \"DF\")\n-   (set_attr \"athlon_decode\" \"double,direct\")\n-   (set_attr \"amdfam10_decode\" \"vector,double\")\n-   (set_attr \"fp_int_src\" \"true\")])\n-\n-(define_insn \"*floatsidf2_i387\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-\t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"m,?r\")))]\n-  \"TARGET_80387\"\n-  \"@\n-   fild%z1\\t%1\n-   #\"\n-  [(set_attr \"type\" \"fmov,multi\")\n-   (set_attr \"mode\" \"DF\")\n-   (set_attr \"unit\" \"*,i387\")\n-   (set_attr \"fp_int_src\" \"true\")])\n-\n (define_expand \"floatdidf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n \t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"\")))]\n@@ -4681,7 +4631,7 @@\n \n (define_insn \"*floatdidf2_mixed\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,?f,x,x\")\n-\t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"m,r,r,mr\")))]\n+\t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"m,r,r,m\")))]\n   \"TARGET_64BIT && TARGET_SSE2 && TARGET_MIX_SSE_I387\"\n   \"@\n    fild%z1\\t%1\n@@ -4697,7 +4647,7 @@\n \n (define_insn \"*floatdidf2_sse\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=x,x\")\n-\t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"r,mr\")))]\n+\t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"r,m\")))]\n   \"TARGET_64BIT && TARGET_SSE2 && TARGET_SSE_MATH\"\n   \"cvtsi2sd{q}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n@@ -4706,45 +4656,22 @@\n    (set_attr \"amdfam10_decode\" \"vector,double\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n-(define_insn \"*floatdidf2_i387\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-\t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"m,?r\")))]\n+(define_insn \"*floatdi<mode>2_i387\"\n+  [(set (match_operand:X87MODEF12 0 \"register_operand\" \"=f,f\")\n+\t(float:X87MODEF12\n+\t  (match_operand:DI 1 \"nonimmediate_operand\" \"m,?r\")))]\n   \"TARGET_80387\"\n   \"@\n    fild%z1\\t%1\n    #\"\n   [(set_attr \"type\" \"fmov,multi\")\n-   (set_attr \"mode\" \"DF\")\n-   (set_attr \"unit\" \"*,i387\")\n-   (set_attr \"fp_int_src\" \"true\")])\n-\n-(define_insn \"floathixf2\"\n-  [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n-\t(float:XF (match_operand:HI 1 \"nonimmediate_operand\" \"m,?r\")))]\n-  \"TARGET_80387\"\n-  \"@\n-   fild%z1\\t%1\n-   #\"\n-  [(set_attr \"type\" \"fmov,multi\")\n-   (set_attr \"mode\" \"XF\")\n-   (set_attr \"unit\" \"*,i387\")\n-   (set_attr \"fp_int_src\" \"true\")])\n-\n-(define_insn \"floatsixf2\"\n-  [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n-\t(float:XF (match_operand:SI 1 \"nonimmediate_operand\" \"m,?r\")))]\n-  \"TARGET_80387\"\n-  \"@\n-   fild%z1\\t%1\n-   #\"\n-  [(set_attr \"type\" \"fmov,multi\")\n-   (set_attr \"mode\" \"XF\")\n+   (set_attr \"mode\" \"<MODE>\")\n    (set_attr \"unit\" \"*,i387\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n-(define_insn \"floatdixf2\"\n+(define_insn \"float<mode>xf2\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n-\t(float:XF (match_operand:DI 1 \"nonimmediate_operand\" \"m,?r\")))]\n+\t(float:XF (match_operand:X87MODEI 1 \"nonimmediate_operand\" \"m,?r\")))]\n   \"TARGET_80387\"\n   \"@\n    fild%z1\\t%1\n@@ -4806,9 +4733,6 @@\n     ix86_expand_convert_uns_didf_sse (operands[0], operands[1]);\n   DONE;\n })\n-\f\n-;; SSE extract/set expanders\n-\n \f\n ;; Add instructions\n "}]}