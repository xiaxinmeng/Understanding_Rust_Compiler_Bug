{"sha": "c52938ec21193c37f7c1e76d0517dfe22620be94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUyOTM4ZWMyMTE5M2MzN2Y3YzFlNzZkMDUxN2RmZTIyNjIwYmU5NA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2008-03-16T19:14:17Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2008-03-16T19:14:17Z"}, "message": "re PR fortran/35470 (Valid pointer assigment code gives compilation errors)\n\n2008-03-16  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/35470\n\t* resolve.c (check_assumed_size_reference):  Only visit the\n\tfirst reference and look directly at the highest dimension.\n\n2008-03-16  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/35470\n\t* gfortran.dg/subref_array_pointer_3.f90 : New test.\n\nFrom-SVN: r133279", "tree": {"sha": "633db8190966c3533cf3b0b7a952b68a444f85c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/633db8190966c3533cf3b0b7a952b68a444f85c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c52938ec21193c37f7c1e76d0517dfe22620be94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c52938ec21193c37f7c1e76d0517dfe22620be94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c52938ec21193c37f7c1e76d0517dfe22620be94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c52938ec21193c37f7c1e76d0517dfe22620be94/comments", "author": null, "committer": null, "parents": [{"sha": "41ff0d66b3825f5efbc5bb0135c0348b5ff01244", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41ff0d66b3825f5efbc5bb0135c0348b5ff01244", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41ff0d66b3825f5efbc5bb0135c0348b5ff01244"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "08f1a8c2c260657b4a6fe6e4d0c78c42db52f293", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c52938ec21193c37f7c1e76d0517dfe22620be94/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c52938ec21193c37f7c1e76d0517dfe22620be94/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c52938ec21193c37f7c1e76d0517dfe22620be94", "patch": "@@ -1,3 +1,9 @@\n+2008-03-16  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/35470\n+\t* resolve.c (check_assumed_size_reference):  Only visit the\n+\tfirst reference and look directly at the highest dimension.\n+\n 2008-03-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/35184"}, {"sha": "3d8fd3c6f3457cfe97bc43e35b38e9994c16e10c", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c52938ec21193c37f7c1e76d0517dfe22620be94/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c52938ec21193c37f7c1e76d0517dfe22620be94/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=c52938ec21193c37f7c1e76d0517dfe22620be94", "patch": "@@ -954,20 +954,12 @@ static int need_full_assumed_size = 0;\n static bool\n check_assumed_size_reference (gfc_symbol *sym, gfc_expr *e)\n {\n-  gfc_ref *ref;\n-  int dim;\n-  int last = 1;\n-\n   if (need_full_assumed_size || !(sym->as && sym->as->type == AS_ASSUMED_SIZE))\n       return false;\n \n-  for (ref = e->ref; ref; ref = ref->next)\n-    if (ref->type == REF_ARRAY)\n-      for (dim = 0; dim < ref->u.ar.as->rank; dim++)\n-\tlast = (ref->u.ar.end[dim] == NULL)\n-\t       && (ref->u.ar.type == DIMEN_ELEMENT);\n-\n-  if (last)\n+  if ((e->ref->u.ar.end[e->ref->u.ar.as->rank - 1] == NULL)\n+\t  && (e->ref->u.ar.as->type == AS_ASSUMED_SIZE)\n+\t       && (e->ref->u.ar.type == DIMEN_ELEMENT))\n     {\n       gfc_error (\"The upper bound in the last dimension must \"\n \t\t \"appear in the reference to the assumed size \""}, {"sha": "10ead70ab0134a4157921aefb16b4451553b9901", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c52938ec21193c37f7c1e76d0517dfe22620be94/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c52938ec21193c37f7c1e76d0517dfe22620be94/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c52938ec21193c37f7c1e76d0517dfe22620be94", "patch": "@@ -1,3 +1,8 @@\n+2008-03-16  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/35470\n+\t* gfortran.dg/subref_array_pointer_3.f90 : New test.\n+\n 2008-03-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/35607"}, {"sha": "b345c9d6bfe212552f6f8abd3c8c963d99c079d8", "filename": "gcc/testsuite/gfortran.dg/subref_array_pointer_3.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c52938ec21193c37f7c1e76d0517dfe22620be94/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubref_array_pointer_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c52938ec21193c37f7c1e76d0517dfe22620be94/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubref_array_pointer_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubref_array_pointer_3.f90?ref=c52938ec21193c37f7c1e76d0517dfe22620be94", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+! Tests the fix for PR35470, in which the pointer assignment would fail\n+! because the assumed size 'arr' would get mixed up with the component\n+! 'p' in the check for the upper bound of an assumed size array.\n+!\n+! Contributed by Antony Lewis <antony@cosmologist.info>\n+!\n+subroutine sub(arr)\n+  type real_pointer\n+    real, pointer :: p(:)\n+  end type real_pointer\n+  type(real_pointer), dimension(*) :: arr\n+  real, pointer :: p(:)\n+  p => arr(1)%p\n+end subroutine"}]}