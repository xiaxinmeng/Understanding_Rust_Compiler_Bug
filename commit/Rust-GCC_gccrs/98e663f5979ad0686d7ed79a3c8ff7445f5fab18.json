{"sha": "98e663f5979ad0686d7ed79a3c8ff7445f5fab18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThlNjYzZjU5NzlhZDA2ODZkN2VkNzlhM2M4ZmY3NDQ1ZjVmYWIxOA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-05-29T18:57:53Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-15T13:42:41Z"}, "message": "[Ada] Cleanup condition for an effectively volatile array type\n\ngcc/ada/\n\n\t* sem_prag.adb (Atomic_Components): Simplify with Ekind_In.\n\t(Complex_Representation): Fix type of E_Id, which just like when\n\tfor pragma Atomic_Components will hold an N_Identifier node, not\n\tan entity.\n\t* sem_util.adb (Is_Effectively_Volatile): Refactor to avoid\n\tunnecessary computation.", "tree": {"sha": "9190a63f00efc8ee457bd65bebde2ee8d3cb2e75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9190a63f00efc8ee457bd65bebde2ee8d3cb2e75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98e663f5979ad0686d7ed79a3c8ff7445f5fab18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98e663f5979ad0686d7ed79a3c8ff7445f5fab18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98e663f5979ad0686d7ed79a3c8ff7445f5fab18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98e663f5979ad0686d7ed79a3c8ff7445f5fab18/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cd5951d68b98425beec4a632abcdc3c559074a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cd5951d68b98425beec4a632abcdc3c559074a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cd5951d68b98425beec4a632abcdc3c559074a4"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "2895a9cbba53cc88d05fe663322ccf74cd06c460", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e663f5979ad0686d7ed79a3c8ff7445f5fab18/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e663f5979ad0686d7ed79a3c8ff7445f5fab18/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=98e663f5979ad0686d7ed79a3c8ff7445f5fab18", "patch": "@@ -13626,9 +13626,7 @@ package body Sem_Prag is\n             if (Nkind (D) = N_Full_Type_Declaration and then Is_Array_Type (E))\n               or else\n                 (Nkind (D) = N_Object_Declaration\n-                   and then (Ekind (E) = E_Constant\n-                              or else\n-                             Ekind (E) = E_Variable)\n+                   and then Ekind_In (E, E_Constant, E_Variable)\n                    and then Nkind (Object_Definition (D)) =\n                                        N_Constrained_Array_Definition)\n               or else\n@@ -14258,7 +14256,7 @@ package body Sem_Prag is\n          --  pragma Complex_Representation ([Entity =>] LOCAL_NAME);\n \n          when Pragma_Complex_Representation => Complex_Representation : declare\n-            E_Id : Entity_Id;\n+            E_Id : Node_Id;\n             E    : Entity_Id;\n             Ent  : Entity_Id;\n "}, {"sha": "ddd4d275ea13216318e55cabfde0f66b6ed1029f", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e663f5979ad0686d7ed79a3c8ff7445f5fab18/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e663f5979ad0686d7ed79a3c8ff7445f5fab18/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=98e663f5979ad0686d7ed79a3c8ff7445f5fab18", "patch": "@@ -15615,22 +15615,24 @@ package body Sem_Util is\n          --  effectively volatile.\n \n          elsif Is_Array_Type (Id) then\n-            declare\n-               Anc : Entity_Id := Base_Type (Id);\n-            begin\n-               if Is_Private_Type (Anc) then\n-                  Anc := Full_View (Anc);\n-               end if;\n+            if Has_Volatile_Components (Id) then\n+               return True;\n+            else\n+               declare\n+                  Anc : Entity_Id := Base_Type (Id);\n+               begin\n+                  if Is_Private_Type (Anc) then\n+                     Anc := Full_View (Anc);\n+                  end if;\n \n-               --  Test for presence of ancestor, as the full view of a private\n-               --  type may be missing in case of error.\n+                  --  Test for presence of ancestor, as the full view of a\n+                  --  private type may be missing in case of error.\n \n-               return\n-                 Has_Volatile_Components (Id)\n-                   or else\n-                 (Present (Anc)\n-                   and then Is_Effectively_Volatile (Component_Type (Anc)));\n-            end;\n+                  return\n+                    Present (Anc)\n+                      and then Is_Effectively_Volatile (Component_Type (Anc));\n+               end;\n+            end if;\n \n          --  A protected type is always volatile\n "}]}