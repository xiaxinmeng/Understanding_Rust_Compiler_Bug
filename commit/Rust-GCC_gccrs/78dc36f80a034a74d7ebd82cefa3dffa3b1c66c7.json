{"sha": "78dc36f80a034a74d7ebd82cefa3dffa3b1c66c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhkYzM2ZjgwYTAzNGE3NGQ3ZWJkODJjZWZhM2RmZmEzYjFjNjZjNw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-09-15T15:03:23Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-09-15T15:03:23Z"}, "message": "[ARM] Fix arm bootstrap failure due to -Werror=shift-negative-value\n\n\t* config/arm/arm.c (arm_gen_constant): Use HOST_WIDE_INT_M1U instead\n\tof -1 when shifting.  Change type of val to unsigned HOST_WIDE_INT.\n\tUpdate prototype.\n\nFrom-SVN: r227798", "tree": {"sha": "5ef6f2b6daa52a0692612c68110c7bee274172ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ef6f2b6daa52a0692612c68110c7bee274172ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78dc36f80a034a74d7ebd82cefa3dffa3b1c66c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78dc36f80a034a74d7ebd82cefa3dffa3b1c66c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78dc36f80a034a74d7ebd82cefa3dffa3b1c66c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78dc36f80a034a74d7ebd82cefa3dffa3b1c66c7/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f912f91a095e78dc69ff875de4aeb41188c0655", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f912f91a095e78dc69ff875de4aeb41188c0655", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f912f91a095e78dc69ff875de4aeb41188c0655"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "6f60273a86d8b37f73dfd0e6b6a898ca27368f5d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78dc36f80a034a74d7ebd82cefa3dffa3b1c66c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78dc36f80a034a74d7ebd82cefa3dffa3b1c66c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78dc36f80a034a74d7ebd82cefa3dffa3b1c66c7", "patch": "@@ -1,3 +1,9 @@\n+2015-09-15  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.c (arm_gen_constant): Use HOST_WIDE_INT_M1U instead\n+\tof -1 when shifting.  Change type of val to unsigned HOST_WIDE_INT.\n+\tUpdate prototype.\n+\n 2015-09-15  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/67470"}, {"sha": "62a63abc68f550b3e91172fe55fdc668b14c83bb", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78dc36f80a034a74d7ebd82cefa3dffa3b1c66c7/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78dc36f80a034a74d7ebd82cefa3dffa3b1c66c7/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=78dc36f80a034a74d7ebd82cefa3dffa3b1c66c7", "patch": "@@ -95,7 +95,7 @@ static int arm_compute_static_chain_stack_bytes (void);\n static arm_stack_offsets *arm_get_frame_offsets (void);\n static void arm_add_gc_roots (void);\n static int arm_gen_constant (enum rtx_code, machine_mode, rtx,\n-\t\t\t     HOST_WIDE_INT, rtx, rtx, int, int);\n+\t\t\t     unsigned HOST_WIDE_INT, rtx, rtx, int, int);\n static unsigned bit_count (unsigned long);\n static unsigned feature_count (const arm_feature_set*);\n static int arm_address_register_rtx_p (rtx, int);\n@@ -4229,8 +4229,8 @@ emit_constant_insn (rtx cond, rtx pattern)\n \n static int\n arm_gen_constant (enum rtx_code code, machine_mode mode, rtx cond,\n-\t\t  HOST_WIDE_INT val, rtx target, rtx source, int subtargets,\n-\t\t  int generate)\n+\t\t  unsigned HOST_WIDE_INT val, rtx target, rtx source,\n+\t\t  int subtargets, int generate)\n {\n   int can_invert = 0;\n   int can_negate = 0;\n@@ -4600,7 +4600,7 @@ arm_gen_constant (enum rtx_code code, machine_mode mode, rtx cond,\n \t  mvn\tr0, r0, asl #12\n \t  mvn\tr0, r0, lsr #12  */\n       if (set_sign_bit_copies > 8\n-\t  && (val & (-1 << (32 - set_sign_bit_copies))) == val)\n+\t  && (val & (HOST_WIDE_INT_M1U << (32 - set_sign_bit_copies))) == val)\n \t{\n \t  if (generate)\n \t    {"}]}