{"sha": "e294f495894cd2d9e217565e340284b2edda4671", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI5NGY0OTU4OTRjZDJkOWUyMTc1NjVlMzQwMjg0YjJlZGRhNDY3MQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-07-25T13:22:31Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-07-25T13:22:31Z"}, "message": "re PR tree-optimization/81529 (ICE in vectorizable_induction, at tree-vect-loop.c:6613)\n\n2017-07-25  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/81529\n\t* tree-vect-stmts.c (process_use): Disregard live induction PHIs\n\twhen optimizing backedge uses.\n\n\t* gfortran.dg/pr81529.f90: New testcase.\n\nFrom-SVN: r250517", "tree": {"sha": "e2ee51663547264a9c5c74d4a99448f396e1d9e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2ee51663547264a9c5c74d4a99448f396e1d9e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e294f495894cd2d9e217565e340284b2edda4671", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e294f495894cd2d9e217565e340284b2edda4671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e294f495894cd2d9e217565e340284b2edda4671", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e294f495894cd2d9e217565e340284b2edda4671/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e78cfda8219a0e7d95232e15fe49cb4de620134", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e78cfda8219a0e7d95232e15fe49cb4de620134", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e78cfda8219a0e7d95232e15fe49cb4de620134"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "cc4bcddda52b10a877d1dcd3d63e1889570fba29", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e294f495894cd2d9e217565e340284b2edda4671/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e294f495894cd2d9e217565e340284b2edda4671/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e294f495894cd2d9e217565e340284b2edda4671", "patch": "@@ -1,3 +1,9 @@\n+2017-07-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/81529\n+\t* tree-vect-stmts.c (process_use): Disregard live induction PHIs\n+\twhen optimizing backedge uses.\n+\n 2017-07-25  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* dwarf2asm.c (dw2_asm_output_nstring): Encode double quote"}, {"sha": "e28a732f2efd093fc973aa6ae43eac0d13e04dbe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e294f495894cd2d9e217565e340284b2edda4671/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e294f495894cd2d9e217565e340284b2edda4671/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e294f495894cd2d9e217565e340284b2edda4671", "patch": "@@ -1,3 +1,8 @@\n+2017-07-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/81529\n+\t* gfortran.dg/pr81529.f90: New testcase.\n+\n 2017-07-25  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* testsuite/gcc.target/aarch64/pr79041-2.c: Improve test."}, {"sha": "92e3d48e72769d0d050abb95cde35d75f5659829", "filename": "gcc/testsuite/gfortran.dg/pr81529.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e294f495894cd2d9e217565e340284b2edda4671/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr81529.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e294f495894cd2d9e217565e340284b2edda4671/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr81529.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr81529.f90?ref=e294f495894cd2d9e217565e340284b2edda4671", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile }\n+! { dg-options \"-std=gnu -fno-tree-scev-cprop -Ofast\" }\n+\n+subroutine CalcCgr(C,rmax,ordgr_max)\n+  integer, intent(in) :: rmax,ordgr_max\n+  double complex :: Zadj(2,2), Zadj2(2,2)\n+  double complex, intent(out) :: C(0:rmax,0:rmax,0:rmax)\n+  double complex, allocatable :: Cexpgr(:,:,:,:)\n+  double complex :: Caux\n+  integer :: rmaxB,rmaxExp,r,n0,n1,n2,k,l,i,j,m,n,nn\n+\n+  rmaxB = 2*rmax\n+  rmaxExp = rmaxB\n+  allocate(Cexpgr(0:rmaxExp/2,0:rmaxExp,0:rmaxExp,0:ordgr_max))\n+   \n+  rloop: do r=0,rmaxExp/2\n+    do n0=r,1,-1\n+      do nn=r-n0,0,-1\n+        do i=1,2\n+          Caux = Caux - Zadj(i,l)\n+        end do\n+        Cexpgr(n0,0,0,0) = Caux/(2*(nn+1))\n+      end do\n+    end do\n+    do n1=0,r\n+      n2 = r-n1\n+      if (r.le.rmax) then\n+        C(0,n1,n2) = Cexpgr(0,n1,n2,0)\n+      end if\n+    end do\n+  end do rloop\n+end subroutine CalcCgr"}, {"sha": "8a631046cc8e82797fd7e052216e9fcd028088e6", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e294f495894cd2d9e217565e340284b2edda4671/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e294f495894cd2d9e217565e340284b2edda4671/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=e294f495894cd2d9e217565e340284b2edda4671", "patch": "@@ -581,9 +581,11 @@ process_use (gimple *stmt, tree use, loop_vec_info loop_vinfo,\n     }\n   /* We are also not interested in uses on loop PHI backedges that are\n      inductions.  Otherwise we'll needlessly vectorize the IV increment\n-     and cause hybrid SLP for SLP inductions.  */\n+     and cause hybrid SLP for SLP inductions.  Unless the PHI is live\n+     of course.  */\n   else if (gimple_code (stmt) == GIMPLE_PHI\n \t   && STMT_VINFO_DEF_TYPE (stmt_vinfo) == vect_induction_def\n+\t   && ! STMT_VINFO_LIVE_P (stmt_vinfo)\n \t   && (PHI_ARG_DEF_FROM_EDGE (stmt, loop_latch_edge (bb->loop_father))\n \t       == use))\n     {"}]}