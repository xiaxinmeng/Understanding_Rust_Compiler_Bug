{"sha": "7cf2b955893a333c6f6e4c60427832e97dd2bff7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NmMmI5NTU4OTNhMzMzYzZmNmU0YzYwNDI3ODMyZTk3ZGQyYmZmNw==", "commit": {"author": {"name": "Jim Wilson", "email": "jimw@sifive.com", "date": "2018-07-06T17:28:28Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2018-07-06T17:28:28Z"}, "message": "RISC-V: Initial riscv linux Ada port.\n\n\t* Makefile.rtl: Add riscv*-linux* support.\n\t* libgnarl/s-linux__riscv.ads: New.\n\t* libgnat/system-linux-riscv.ads: New.\n\nFrom-SVN: r262482", "tree": {"sha": "bacf31e1bce81ba17dc36a32576354eb33db27b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bacf31e1bce81ba17dc36a32576354eb33db27b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cf2b955893a333c6f6e4c60427832e97dd2bff7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cf2b955893a333c6f6e4c60427832e97dd2bff7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cf2b955893a333c6f6e4c60427832e97dd2bff7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cf2b955893a333c6f6e4c60427832e97dd2bff7/comments", "author": null, "committer": null, "parents": [{"sha": "6cd6119c421211c989f53f6d4e457d7523bdacf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cd6119c421211c989f53f6d4e457d7523bdacf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cd6119c421211c989f53f6d4e457d7523bdacf5"}], "stats": {"total": 312, "additions": 312, "deletions": 0}, "files": [{"sha": "3ae83a70198ccb90461fb5b3e0576760707204e3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cf2b955893a333c6f6e4c60427832e97dd2bff7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cf2b955893a333c6f6e4c60427832e97dd2bff7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7cf2b955893a333c6f6e4c60427832e97dd2bff7", "patch": "@@ -1,5 +1,9 @@\n 2018-07-06  Jim Wilson  <jimw@sifive.com>\n \n+\t* Makefile.rtl: Add riscv*-linux* support.\n+\t* libgnarl/s-linux__riscv.ads: New.\n+\t* libgnat/system-linux-riscv.ads: New.\n+\n \t* Make-generated.in (treeprs.ads): Use $(GNATMAKE) instead of gnatmake.\n \t(einfo.h, sinfo.h, stamp-snames, stamp-nmake): Likewise.\n \t* gcc-interface/Makefile.in (xoscons): Likewise."}, {"sha": "374c60b576ec767a1531ef666dc6ef88a4696883", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cf2b955893a333c6f6e4c60427832e97dd2bff7/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cf2b955893a333c6f6e4c60427832e97dd2bff7/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=7cf2b955893a333c6f6e4c60427832e97dd2bff7", "patch": "@@ -2468,6 +2468,34 @@ ifeq ($(strip $(filter-out %x32 linux%,$(target_cpu) $(target_os))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# RISC-V Linux\n+ifeq ($(strip $(filter-out riscv% linux%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<libgnarl/a-intnam__linux.ads \\\n+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n+  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-linux.ads<libgnarl/s-linux__riscv.ads \\\n+  s-osinte.adb<libgnarl/s-osinte__posix.adb \\\n+  s-osinte.ads<libgnarl/s-osinte__linux.ads \\\n+  s-osprim.adb<libgnat/s-osprim__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__linux.adb \\\n+  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \\\n+  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \\\n+  s-taspri.ads<libgnarl/s-taspri__posix-noaltstack.ads \\\n+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \\\n+  g-sercom.adb<libgnat/g-sercom__linux.adb \\\n+  system.ads<libgnat/system-linux-riscv.ads\n+\n+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n # Darwin (Mac OS X)\n ifeq ($(strip $(filter-out darwin%,$(target_os))),)\n   SO_OPTS = -shared-libgcc"}, {"sha": "74420f39f1b84c62921e0763d901da57d05d4c0e", "filename": "gcc/ada/libgnarl/s-linux__riscv.ads", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cf2b955893a333c6f6e4c60427832e97dd2bff7/gcc%2Fada%2Flibgnarl%2Fs-linux__riscv.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cf2b955893a333c6f6e4c60427832e97dd2bff7/gcc%2Fada%2Flibgnarl%2Fs-linux__riscv.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-linux__riscv.ads?ref=7cf2b955893a333c6f6e4c60427832e97dd2bff7", "patch": "@@ -0,0 +1,133 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS               --\n+--                                                                          --\n+--                          S Y S T E M .  L I N U X                        --\n+--                                                                          --\n+--                                  S p e c                                 --\n+--                                                                          --\n+--             Copyright (C) 2009-2018, Free Software Foundation, Inc.      --\n+--                                                                          --\n+-- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is the RISC-V version of this package\n+\n+--  This package encapsulates cpu specific differences between implementations\n+--  of GNU/Linux, in order to share s-osinte-linux.ads.\n+\n+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n+--  Preelaborate. This package is designed to be a bottom-level (leaf) package\n+\n+with Interfaces.C;\n+\n+package System.Linux is\n+   pragma Preelaborate;\n+\n+   ----------\n+   -- Time --\n+   ----------\n+\n+   subtype int         is Interfaces.C.int;\n+   subtype long        is Interfaces.C.long;\n+   subtype suseconds_t is Interfaces.C.long;\n+   subtype time_t      is Interfaces.C.long;\n+   subtype clockid_t   is Interfaces.C.int;\n+\n+   type timespec is record\n+      tv_sec  : time_t;\n+      tv_nsec : long;\n+   end record;\n+   pragma Convention (C, timespec);\n+\n+   type timeval is record\n+      tv_sec  : time_t;\n+      tv_usec : suseconds_t;\n+   end record;\n+   pragma Convention (C, timeval);\n+\n+   -----------\n+   -- Errno --\n+   -----------\n+\n+   EAGAIN    : constant := 11;\n+   EINTR     : constant := 4;\n+   EINVAL    : constant := 22;\n+   ENOMEM    : constant := 12;\n+   EPERM     : constant := 1;\n+   ETIMEDOUT : constant := 110;\n+\n+   -------------\n+   -- Signals --\n+   -------------\n+\n+   SIGHUP     : constant := 1; --  hangup\n+   SIGINT     : constant := 2; --  interrupt (rubout)\n+   SIGQUIT    : constant := 3; --  quit (ASCD FS)\n+   SIGILL     : constant := 4; --  illegal instruction (not reset)\n+   SIGTRAP    : constant := 5; --  trace trap (not reset)\n+   SIGIOT     : constant := 6; --  IOT instruction\n+   SIGABRT    : constant := 6; --  used by abort, replace SIGIOT in the  future\n+   SIGBUS     : constant := 7; --  bus error\n+   SIGFPE     : constant := 8; --  floating point exception\n+   SIGKILL    : constant := 9; --  kill (cannot be caught or ignored)\n+   SIGUSR1    : constant := 10; --  user defined signal 1\n+   SIGSEGV    : constant := 11; --  segmentation violation\n+   SIGUSR2    : constant := 12; --  user defined signal 2\n+   SIGPIPE    : constant := 13; --  write on a pipe with no one to read it\n+   SIGALRM    : constant := 14; --  alarm clock\n+   SIGTERM    : constant := 15; --  software termination signal from kill\n+   SIGSTKFLT  : constant := 16; --  coprocessor stack fault (Linux)\n+   SIGCLD     : constant := 17; --  alias for SIGCHLD\n+   SIGCHLD    : constant := 17; --  child status change\n+   SIGCONT    : constant := 18; --  stopped process has been continued\n+   SIGSTOP    : constant := 19; --  stop (cannot be caught or ignored)\n+   SIGTSTP    : constant := 20; --  user stop requested from tty\n+   SIGTTIN    : constant := 21; --  background tty read attempted\n+   SIGTTOU    : constant := 22; --  background tty write attempted\n+   SIGURG     : constant := 23; --  urgent condition on IO channel\n+   SIGXCPU    : constant := 24; --  CPU time limit exceeded\n+   SIGXFSZ    : constant := 25; --  filesize limit exceeded\n+   SIGVTALRM  : constant := 26; --  virtual timer expired\n+   SIGPROF    : constant := 28; --  profiling timer expired\n+   SIGWINCH   : constant := 28; --  window size change\n+   SIGPOLL    : constant := 29; --  pollable event occurred\n+   SIGIO      : constant := 29; --  I/O now possible (4.2 BSD)\n+   SIGPWR     : constant := 30; --  power-fail restart\n+   SIGSYS     : constant := 31; --  bad system call\n+\n+   SIGLTHRRES : constant := 0; --  GNU/LinuxThreads restart signal\n+   SIGLTHRCAN : constant := 0; --  GNU/LinuxThreads cancel signal\n+   SIGLTHRDBG : constant := 0; --  GNU/LinuxThreads debugger signal\n+\n+   --  These don't exist for Linux/RISC-V.  The constants are present\n+   --  so that we can continue to use a-intnam-linux.ads.\n+   SIGLOST    : constant := 0; --  File lock lost\n+   SIGUNUSED  : constant := 0; --  unused signal (GNU/Linux)\n+   SIGEMT     : constant := 0; --  EMT\n+\n+   --  struct_sigaction offsets\n+\n+   sa_handler_pos : constant := 0;\n+   sa_mask_pos    : constant := long'Size / 8;\n+   sa_flags_pos   : constant := long'Size / 8 + 128;\n+\n+   SA_SIGINFO  : constant := 16#04#;\n+   SA_ONSTACK  : constant := 16#08000000#;\n+\n+end System.Linux;"}, {"sha": "8e43b401450639c71999ddaa7636aa16474bb048", "filename": "gcc/ada/libgnat/system-linux-riscv.ads", "status": "added", "additions": 147, "deletions": 0, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cf2b955893a333c6f6e4c60427832e97dd2bff7/gcc%2Fada%2Flibgnat%2Fsystem-linux-riscv.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cf2b955893a333c6f6e4c60427832e97dd2bff7/gcc%2Fada%2Flibgnat%2Fsystem-linux-riscv.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-riscv.ads?ref=7cf2b955893a333c6f6e4c60427832e97dd2bff7", "patch": "@@ -0,0 +1,147 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                          (GNU-Linux/RISC-V Version)                      --\n+--                                                                          --\n+--          Copyright (C) 1992-2018, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n+\n+   pragma No_Elaboration_Code_All;\n+   --  Allow the use of that restriction in units that WITH this unit\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.000_001;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   pragma Preelaborable_Initialization (Address);\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n+   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   Max_Priority           : constant Positive := 30;\n+   Max_Interrupt_Priority : constant Positive := 31;\n+\n+   subtype Any_Priority       is Integer      range  0 .. 31;\n+   subtype Priority           is Any_Priority range  0 .. 30;\n+   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n+\n+   Default_Priority : constant Priority := 15;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n+   Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   Preallocated_Stacks       : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := True;\n+   Stack_Check_Limits        : constant Boolean := False;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Always_Compatible_Rep     : constant Boolean := False;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   Frontend_Exceptions       : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := True;\n+\n+end System;"}]}