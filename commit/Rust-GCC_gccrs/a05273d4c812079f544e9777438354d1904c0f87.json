{"sha": "a05273d4c812079f544e9777438354d1904c0f87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA1MjczZDRjODEyMDc5ZjU0NGU5Nzc3NDM4MzU0ZDE5MDRjMGY4Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-10-28T11:46:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-10-28T11:46:03Z"}, "message": "revert: pt.c (convert_nontype_argument): Tell instantiate_type to complain.\n\nRevert\n\t* pt.c (convert_nontype_argument): Tell instantiate_type to complain.\n\tDo complain about overload resolution producing a non-public fn.\nFixes g++.pt/explicit75.C\n\nFrom-SVN: r23402", "tree": {"sha": "05ad69f4250f8474945ee853b7860e651576b85a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05ad69f4250f8474945ee853b7860e651576b85a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a05273d4c812079f544e9777438354d1904c0f87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a05273d4c812079f544e9777438354d1904c0f87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a05273d4c812079f544e9777438354d1904c0f87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a05273d4c812079f544e9777438354d1904c0f87/comments", "author": null, "committer": null, "parents": [{"sha": "41cdcc108702a4e89e807271204c8fbe8b92cddb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41cdcc108702a4e89e807271204c8fbe8b92cddb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41cdcc108702a4e89e807271204c8fbe8b92cddb"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "275ddcf30a44dc448f96f27df644f5222fa86aa1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05273d4c812079f544e9777438354d1904c0f87/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05273d4c812079f544e9777438354d1904c0f87/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a05273d4c812079f544e9777438354d1904c0f87", "patch": "@@ -55,8 +55,6 @@\n \t(build_ptrmemfunc): Use type_unknown_p.\n \t(convert_for_assignment): Also do default_conversion on overloaded\n \tfunctions.  Hand them off to ocp_convert.\n-\t* pt.c (convert_nontype_argument): Tell instantiate_type to complain.\n-\tDo complain about overload resolution producing a non-public fn.\n \n 1998-10-26  Mark Mitchell  <mark@markmitchell.com>\n "}, {"sha": "64d7ec574de0a85e079096809e34748dbb467437", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05273d4c812079f544e9777438354d1904c0f87/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05273d4c812079f544e9777438354d1904c0f87/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a05273d4c812079f544e9777438354d1904c0f87", "patch": "@@ -2546,7 +2546,7 @@ convert_nontype_argument (type, expr)\n \t    else\n \t      fns = expr;\n \n-\t    fn = instantiate_type (type_pointed_to, fns, 1);\n+\t    fn = instantiate_type (type_pointed_to, fns, 0);\n \n \t    if (fn == error_mark_node)\n \t      return error_mark_node;\n@@ -2603,21 +2603,19 @@ convert_nontype_argument (type, expr)\n \t    tree fns = expr;\n \t    tree fn;\n \n-\t    fn = instantiate_type (type_referred_to, fns, 1);\n+\t    fn = instantiate_type (type_referred_to, fns, 0);\n \n \t    if (fn == error_mark_node)\n \t      return error_mark_node;\n \n \t    if (!TREE_PUBLIC (fn))\n \t      {\n-#if 0\n \t\tif (really_overloaded_fn (fns))\n \t\t  /* Don't issue an error here; we might get a different\n \t\t     function if the overloading had worked out\n \t\t     differently.  */\n \t\t  return error_mark_node;\n \t\telse\n-#endif\n \t\t  goto bad_argument;\n \t      }\n \n@@ -2684,7 +2682,7 @@ convert_nontype_argument (type, expr)\n \tfns = TREE_OPERAND (expr, 0);\n \t\n \tfn = instantiate_type (TREE_TYPE (TREE_TYPE (type)), \n-\t\t\t       fns, 1);\n+\t\t\t       fns, 0);\n \t\n \tif (fn == error_mark_node)\n \t  return error_mark_node;"}]}