{"sha": "5cc8cb04de4285bfa85c16073e99185b41c38f85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNjOGNiMDRkZTQyODViZmE4NWMxNjA3M2U5OTE4NWI0MWMzOGY4NQ==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@riscy-ip.com", "date": "2019-07-01T21:48:55Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2019-07-01T21:48:55Z"}, "message": "re PR tree-optimization/66726 (missed optimization, factor conversion out of COND_EXPR)\n\n        PR middle-end/66726\n        * tree-ssa-phiopt.c (factor_out_conditional_conversion):\n        Tune heuristic from PR71016 to allow MIN / MAX.\n        * testsuite/gcc.dg/tree-ssa/pr66726-4.c: New testcase.\n\nFrom-SVN: r272911", "tree": {"sha": "351370b02de7ff80f730e5838e84ab8722d05fca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/351370b02de7ff80f730e5838e84ab8722d05fca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cc8cb04de4285bfa85c16073e99185b41c38f85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc8cb04de4285bfa85c16073e99185b41c38f85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cc8cb04de4285bfa85c16073e99185b41c38f85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc8cb04de4285bfa85c16073e99185b41c38f85/comments", "author": null, "committer": null, "parents": [{"sha": "63c94f4cb0cffa6f3b316d4631092afee734506f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63c94f4cb0cffa6f3b316d4631092afee734506f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63c94f4cb0cffa6f3b316d4631092afee734506f"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "dad3442b9497429947716d1089263e4ded2f20da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc8cb04de4285bfa85c16073e99185b41c38f85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc8cb04de4285bfa85c16073e99185b41c38f85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5cc8cb04de4285bfa85c16073e99185b41c38f85", "patch": "@@ -1,3 +1,10 @@\n+2019-07-01  Joern Rennecke  <joern.rennecke@riscy-ip.com>\n+\n+\tPR middle-end/66726\n+\t* tree-ssa-phiopt.c (factor_out_conditional_conversion):\n+\tTune heuristic from PR71016 to allow MIN / MAX.\n+\t* testsuite/gcc.dg/tree-ssa/pr66726-4.c: New testcase.\n+\n 2019-07-01  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (ieee_128bit_vsx_abs<mode>2): Make this a"}, {"sha": "4e43522f3a3e3e695844cd8a058279ef38b6231d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr66726-4.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc8cb04de4285bfa85c16073e99185b41c38f85/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr66726-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc8cb04de4285bfa85c16073e99185b41c38f85/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr66726-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr66726-4.c?ref=5cc8cb04de4285bfa85c16073e99185b41c38f85", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-phiopt1-details\" } */\n+\n+#define SAT(x) (x < 0 ? 0 : (x > 255 ? 255 : x))\n+\n+void\n+foo (unsigned char *p, int i)\n+{\n+  *p = SAT (i);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"COND_EXPR .*and PHI .*converted to straightline code\" 1 \"phiopt1\" } } */"}, {"sha": "7088ff9199882c34d8e0db1dbdab1850c9e460d0", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc8cb04de4285bfa85c16073e99185b41c38f85/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc8cb04de4285bfa85c16073e99185b41c38f85/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=5cc8cb04de4285bfa85c16073e99185b41c38f85", "patch": "@@ -504,7 +504,24 @@ factor_out_conditional_conversion (edge e0, edge e1, gphi *phi,\n \t\t  gsi = gsi_for_stmt (arg0_def_stmt);\n \t\t  gsi_prev_nondebug (&gsi);\n \t\t  if (!gsi_end_p (gsi))\n-\t\t    return NULL;\n+\t\t    {\n+\t\t      if (gassign *assign\n+\t\t\t    = dyn_cast <gassign *> (gsi_stmt (gsi)))\n+\t\t\t{\n+\t\t\t  tree lhs = gimple_assign_lhs (assign);\n+\t\t\t  enum tree_code ass_code\n+\t\t\t    = gimple_assign_rhs_code (assign);\n+\t\t\t  if (ass_code != MAX_EXPR && ass_code != MIN_EXPR)\n+\t\t\t    return NULL;\n+\t\t\t  if (lhs != gimple_assign_rhs1 (arg0_def_stmt))\n+\t\t\t    return NULL;\n+\t\t\t  gsi_prev_nondebug (&gsi);\n+\t\t\t  if (!gsi_end_p (gsi))\n+\t\t\t    return NULL;\n+\t\t\t}\n+\t\t      else\n+\t\t\treturn NULL;\n+\t\t    }\n \t\t  gsi = gsi_for_stmt (arg0_def_stmt);\n \t\t  gsi_next_nondebug (&gsi);\n \t\t  if (!gsi_end_p (gsi))"}]}