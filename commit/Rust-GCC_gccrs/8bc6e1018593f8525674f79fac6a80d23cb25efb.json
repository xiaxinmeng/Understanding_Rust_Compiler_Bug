{"sha": "8bc6e1018593f8525674f79fac6a80d23cb25efb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJjNmUxMDE4NTkzZjg1MjU2NzRmNzlmYWM2YTgwZDIzY2IyNWVmYg==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2002-06-13T19:23:28Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2002-06-13T19:23:28Z"}, "message": "Individual processor configurations for sh-elf / sh-linux:\n\ngcc:\n\t* config.gcc: Add support for sh[234]*-*-elf*, sh[2346lbe]*-*-linux*.\n\t* config/sh/linux.h (TARGET_DEFAULT): Use TARGET_CPU_DEFAULT.\n\t* sh.h (SELECT_SH1, SELECT_SH2, SELECT_SH3, SELECT_SH3E): New macros.\n\t(SELECT_SH4_NOFPU, SELECT_SH4_SINGLE_ONLY, SELECT_SH4): Likewise.\n\t(SELECT_SH4_SINGLE, SELECT_SH5_64, SELECT_SH5_64_NOFPU): Likewise.\n\t(SELECT_SH5_32, SELECT_SH5_32_NOFPU, SELECT_SH5_COMPACT): Likewise.\n\t(SELECT_SH5_COMPACT_NOFPU): Likewise.\n\t(TARGET_SWITCHES): Use them.\n\t(TARGET_CPU_DEFAULT): Define if not already defined.\n\t(TARGET_DEFAULT): Use it.\n\t(LINK_DEFAULT_CPU_EMUL): Value now depends on TARGET_CPU_DEFAULT.\n\t* config/sh/t-linux (MULTILIB_OPTIONS): Use MULTILIB_ENDIAN.\n\t* config/sh/t-monolib: New file.\n\nbfd:\n\tconfig.bfd: Add support for sh[1234]l*-*-elf* | sh3el*-*-elf*,\n\tsh[1234]*-elf*.\n\nld:\n\t* configure.tgt: Add support for sh[1234]*le*-*-elf, sh[1234]*-*-elf.\n\nStill outstanding:\n\tconfig.sub:\n\t\t* config.sub: Add support for sh[12], sh3e, sh[1234]le, sh3ele,\n\t\tshle, sh[1234]le, sh3ele, sh64le.\n\nFrom-SVN: r54598", "tree": {"sha": "ac852537679adff99161af6ecade740d86547372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac852537679adff99161af6ecade740d86547372"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bc6e1018593f8525674f79fac6a80d23cb25efb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bc6e1018593f8525674f79fac6a80d23cb25efb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bc6e1018593f8525674f79fac6a80d23cb25efb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bc6e1018593f8525674f79fac6a80d23cb25efb/comments", "author": null, "committer": null, "parents": [{"sha": "93f7aeea7ac79573748c5f2632059aa6b50d74e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93f7aeea7ac79573748c5f2632059aa6b50d74e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93f7aeea7ac79573748c5f2632059aa6b50d74e2"}], "stats": {"total": 124, "additions": 103, "deletions": 21}, "files": [{"sha": "7c08d424ea8f3dcc45f297223f67049c703cee1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc6e1018593f8525674f79fac6a80d23cb25efb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc6e1018593f8525674f79fac6a80d23cb25efb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8bc6e1018593f8525674f79fac6a80d23cb25efb", "patch": "@@ -1,3 +1,19 @@\n+Thu Jun 13 20:18:38 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* config.gcc: Add support for sh[234]*-*-elf*, sh[2346lbe]*-*-linux*.\n+\t* config/sh/linux.h (TARGET_DEFAULT): Use TARGET_CPU_DEFAULT.\n+\t* sh.h (SELECT_SH1, SELECT_SH2, SELECT_SH3, SELECT_SH3E): New macros.\n+\t(SELECT_SH4_NOFPU, SELECT_SH4_SINGLE_ONLY, SELECT_SH4): Likewise.\n+\t(SELECT_SH4_SINGLE, SELECT_SH5_64, SELECT_SH5_64_NOFPU): Likewise.\n+\t(SELECT_SH5_32, SELECT_SH5_32_NOFPU, SELECT_SH5_COMPACT): Likewise.\n+\t(SELECT_SH5_COMPACT_NOFPU): Likewise.\n+\t(TARGET_SWITCHES): Use them.\n+\t(TARGET_CPU_DEFAULT): Define if not already defined.\n+\t(TARGET_DEFAULT): Use it.\n+\t(LINK_DEFAULT_CPU_EMUL): Value now depends on TARGET_CPU_DEFAULT.\n+\t* config/sh/t-linux (MULTILIB_OPTIONS): Use MULTILIB_ENDIAN.\n+\t* config/sh/t-monolib: New file.\n+\n 2002-06-13  Roger Sayle  <roger@eyesopen.com>\n \n \t* toplev.c (rest_of_compilation): Simplify (and correct) the"}, {"sha": "38b7adc3be3ad2ea3b19bd7310f2c98086bb8525", "filename": "gcc/config.gcc", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc6e1018593f8525674f79fac6a80d23cb25efb/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc6e1018593f8525674f79fac6a80d23cb25efb/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=8bc6e1018593f8525674f79fac6a80d23cb25efb", "patch": "@@ -2184,7 +2184,7 @@ s390x-*-linux*)\n \t\tthread_file='posix'\n \tfi\n \t;;\n-sh-*-elf* | shl*-*-elf* | sh64*-*-elf*)\n+sh-*-elf* | sh[2346l]*-*-elf*)\n \ttmake_file=\"sh/t-sh sh/t-elf\"\n \tcase $machine in\n \tshl* | sh64l*)\n@@ -2204,6 +2204,14 @@ sh-*-elf* | shl*-*-elf* | sh64*-*-elf*)\n \t\t\ttarget_requires_64bit_host_wide_int=yes\n \t\tfi\n \t\t;;\n+\tsh4_single*)  target_cpu_default=\"SELECT_SH4_SINGLE\" ;;\n+\tsh4*)  target_cpu_default=\"SELECT_SH4\" ;;\n+\tsh3e*) target_cpu_default=\"SELECT_SH3E\" ;;\n+\tsh3*)  target_cpu_default=\"SELECT_SH3\" ;;\n+\tsh2*)  target_cpu_default=\"SELECT_SH2\" ;;\n+\tesac\n+\tcase $machine in\n+\tsh[234]*) tmake_file=\"${tmake_file} sh/t-monolib\" ;;\n \tesac\n \t;;\n sh-*-rtemself*)\n@@ -2224,14 +2232,42 @@ sh-*-rtems*)\n \t  thread_file='rtems'\n \tfi\n \t;;\n-sh-*-linux*)\n-\ttm_file=\"sh/little.h ${tm_file} dbxelf.h elfos.h svr4.h sh/elf.h sh/linux.h\"\n-\ttmake_file=\"sh/t-sh sh/t-elf sh/t-le sh/t-linux\"\n+sh-*-linux* | sh[2346lbe]*-*-linux*)\n+\ttmake_file=\"sh/t-sh sh/t-elf sh/t-linux\"\n+\tcase $machine in\n+\tsh*be-*-* | sh*eb-*-*) ;;\n+\t*)\n+\t\ttm_file=\"sh/little.h ${tm_file}\"\n+\t\ttmake_file=\"${tmake_file} sh/t-le\"\n+\t\t;;\n+\tesac\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sh/elf.h sh/linux.h\"\n \tgas=yes gnu_ld=yes\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='posix'\n \tfi\n \tfloat_format=sh\n+\tcase $machine in\n+\tsh64*)\n+\t\ttmake_file=\"${tmake_file} sh/t-sh64\"\n+\t\ttm_file=\"${tm_file} sh/sh64.h\"\n+\t\textra_headers=\"shmedia.h ushmedia.h sshmedia.h\"\n+\t\t# Not strictly necessary to check this, but a good idea anyway.\n+\t\tif test $machine = $target; then\n+\t\t\ttarget_requires_64bit_host_wide_int=yes\n+\t\tfi\n+\t\t;;\n+\tsh4_single*) target_cpu_default=\"SELECT_SH4_SINGLE\" ;;\n+\tsh4*) target_cpu_default=\"SELECT_SH4\" ;;\n+\tsh3e[lb]e*) target_cpu_default=\"SELECT_SH3E\" ;;\n+\tsh3e[lb]*) target_cpu_default=\"SELECT_SH3\" ;;\n+\tsh3e*) target_cpu_default=\"SELECT_SH3E\" ;;\n+\tsh3*) target_cpu_default=\"SELECT_SH3\" ;;\n+\tsh2*) target_cpu_default=\"SELECT_SH2\" ;;\n+\tesac\n+\tcase $machine in\n+\tsh[234]*) tmake_file=\"${tmake_file} sh/t-monolib\" ;;\n+\tesac\n \t;;\n sh-*-netbsdelf* | shl*-*-netbsdelf* | sh5-*-netbsd* | sh5l*-*-netbsd* | \\\n   sh64-*-netbsd* | sh64l*-*-netbsd*)"}, {"sha": "1a3948386fcad00671471180ac987c8f0a2fdf61", "filename": "gcc/config/sh/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc6e1018593f8525674f79fac6a80d23cb25efb/gcc%2Fconfig%2Fsh%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc6e1018593f8525674f79fac6a80d23cb25efb/gcc%2Fconfig%2Fsh%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flinux.h?ref=8bc6e1018593f8525674f79fac6a80d23cb25efb", "patch": "@@ -39,7 +39,7 @@ do { \\\n \n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT \\\n-  (SH3_BIT|SH2_BIT|SH1_BIT | USERMODE_BIT | TARGET_ENDIAN_DEFAULT)\n+  (TARGET_CPU_DEFAULT | USERMODE_BIT | TARGET_ENDIAN_DEFAULT)\n \n #undef SUBTARGET_LINK_EMUL_SUFFIX\n #define SUBTARGET_LINK_EMUL_SUFFIX \"_linux\""}, {"sha": "fef996a8f1253d5429d3c15c3f463f72263001ee", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 44, "deletions": 15, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc6e1018593f8525674f79fac6a80d23cb25efb/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc6e1018593f8525674f79fac6a80d23cb25efb/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=8bc6e1018593f8525674f79fac6a80d23cb25efb", "patch": "@@ -249,39 +249,54 @@ extern int target_flags;\n /* Nonzero if we should prefer @GOT calls when generating PIC.  */\n #define TARGET_PREFERGOT\t(target_flags & PREFERGOT_BIT)\n \n+#define SELECT_SH1 (SH1_BIT)\n+#define SELECT_SH2 (SH2_BIT | SELECT_SH1)\n+#define SELECT_SH3 (SH3_BIT | SELECT_SH2)\n+#define SELECT_SH3E (SH3E_BIT | FPU_SINGLE_BIT | SELECT_SH3)\n+#define SELECT_SH4_NOFPU (HARD_SH4_BIT | SELECT_SH3)\n+#define SELECT_SH4_SINGLE_ONLY (HARD_SH4_BIT | SELECT_SH3E)\n+#define SELECT_SH4 (SH4_BIT|SH3E_BIT|HARD_SH4_BIT | SELECT_SH3)\n+#define SELECT_SH4_SINGLE (FPU_SINGLE_BIT | SELECT_SH4)\n+#define SELECT_SH5_64 (SH5_BIT | SH4_BIT)\n+#define SELECT_SH5_64_NOFPU (SH5_BIT)\n+#define SELECT_SH5_32 (SH5_BIT | SH4_BIT | SH3E_BIT)\n+#define SELECT_SH5_32_NOFPU (SH5_BIT | SH3E_BIT)\n+#define SELECT_SH5_COMPACT (SH5_BIT | SH4_BIT | SELECT_SH3E)\n+#define SELECT_SH5_COMPACT_NOFPU (SH5_BIT | SELECT_SH3)\n+\n /* Reset all target-selection flags.  */\n #define TARGET_NONE -(SH1_BIT | SH2_BIT | SH3_BIT | SH3E_BIT | SH4_BIT \\\n \t\t      | HARD_SH4_BIT | FPU_SINGLE_BIT | SH5_BIT)\n \n #define TARGET_SWITCHES  \t\t\t\\\n { {\"1\",\t        TARGET_NONE, \"\" },\t\t\\\n-  {\"1\",\t        SH1_BIT, \"\" },\t\t\t\\\n+  {\"1\",\t        SELECT_SH1, \"\" },\t\t\t\\\n   {\"2\",\t        TARGET_NONE, \"\" },\t\t\\\n-  {\"2\",\t        SH2_BIT|SH1_BIT, \"\" },\t\t\\\n+  {\"2\",\t        SELECT_SH2, \"\" },\t\t\\\n   {\"3\",\t        TARGET_NONE, \"\" },\t\t\\\n-  {\"3\",\t        SH3_BIT|SH2_BIT|SH1_BIT, \"\" },\t\\\n+  {\"3\",\t        SELECT_SH3, \"\" },\t\\\n   {\"3e\",\tTARGET_NONE, \"\" },\t\t\\\n-  {\"3e\",\tSH3E_BIT|SH3_BIT|SH2_BIT|SH1_BIT|FPU_SINGLE_BIT, \"\" },\t\\\n+  {\"3e\",\tSELECT_SH3E, \"\" },\t\\\n   {\"4-single-only\",\tTARGET_NONE, \"\" },\t\\\n-  {\"4-single-only\",\tSH3E_BIT|SH3_BIT|SH2_BIT|SH1_BIT|HARD_SH4_BIT|FPU_SINGLE_BIT, \"\" },\t\\\n+  {\"4-single-only\",\tSELECT_SH4_SINGLE_ONLY, \"\" },\t\\\n   {\"4-single\",\tTARGET_NONE, \"\" },\t\t\\\n-  {\"4-single\",\tSH4_BIT|SH3E_BIT|SH3_BIT|SH2_BIT|SH1_BIT|HARD_SH4_BIT|FPU_SINGLE_BIT, \"\" },\\\n+  {\"4-single\",\tSELECT_SH4_SINGLE, \"\" },\\\n   {\"4-nofpu\",\tTARGET_NONE, \"\" },\t\t\\\n-  {\"4-nofpu\",\tSH3_BIT|SH2_BIT|SH1_BIT|HARD_SH4_BIT, \"\" },\\\n+  {\"4-nofpu\",\tSELECT_SH4_NOFPU, \"\" },\\\n   {\"4\",\t        TARGET_NONE, \"\" },\t\t\\\n-  {\"4\",\t        SH4_BIT|SH3E_BIT|SH3_BIT|SH2_BIT|SH1_BIT|HARD_SH4_BIT, \"\" }, \\\n+  {\"4\",\t        SELECT_SH4, \"\" }, \\\n   {\"5-64media\",\tTARGET_NONE, \"\" },\t\t\\\n-  {\"5-64media\", SH5_BIT|SH4_BIT, \"Generate 64-bit SHmedia code\" }, \\\n+  {\"5-64media\", SELECT_SH5_64, \"Generate 64-bit SHmedia code\" }, \\\n   {\"5-64media-nofpu\", TARGET_NONE, \"\" },\t\\\n-  {\"5-64media-nofpu\", SH5_BIT, \"Generate 64-bit FPU-less SHmedia code\" }, \\\n+  {\"5-64media-nofpu\", SELECT_SH5_64_NOFPU, \"Generate 64-bit FPU-less SHmedia code\" }, \\\n   {\"5-32media\",\tTARGET_NONE, \"\" },\t\t\\\n-  {\"5-32media\", SH5_BIT|SH4_BIT|SH3E_BIT, \"Generate 32-bit SHmedia code\" }, \\\n+  {\"5-32media\", SELECT_SH5_32, \"Generate 32-bit SHmedia code\" }, \\\n   {\"5-32media-nofpu\", TARGET_NONE, \"\" },\t\\\n-  {\"5-32media-nofpu\", SH5_BIT|SH3E_BIT, \"Generate 32-bit FPU-less SHmedia code\" }, \\\n+  {\"5-32media-nofpu\", SELECT_SH5_32_NOFPU, \"Generate 32-bit FPU-less SHmedia code\" }, \\\n   {\"5-compact\",\tTARGET_NONE, \"\" },\t\t\\\n-  {\"5-compact\",\tSH5_BIT|SH4_BIT|SH3E_BIT|SH3_BIT|SH2_BIT|SH1_BIT|FPU_SINGLE_BIT, \"Generate SHcompact code\" }, \\\n+  {\"5-compact\",\tSELECT_SH5_COMPACT, \"Generate SHcompact code\" }, \\\n   {\"5-compact-nofpu\", TARGET_NONE, \"\" },\t\\\n-  {\"5-compact-nofpu\", SH5_BIT|SH3_BIT|SH2_BIT|SH1_BIT, \"Generate FPU-less SHcompact code\" }, \\\n+  {\"5-compact-nofpu\", SELECT_SH5_COMPACT_NOFPU, \"Generate FPU-less SHcompact code\" }, \\\n   {\"b\",\t\t-LITTLE_ENDIAN_BIT, \"\" },  \t\\\n   {\"bigtable\", \tBIGTABLE_BIT, \"\" },\t\t\\\n   {\"dalign\",  \tDALIGN_BIT, \"\" },\t\t\\\n@@ -309,7 +324,11 @@ extern int target_flags;\n #define TARGET_ENDIAN_DEFAULT 0\n #endif\n \n-#define TARGET_DEFAULT  (SH1_BIT|TARGET_ENDIAN_DEFAULT)\n+#ifndef TARGET_CPU_DEFAULT\n+#define TARGET_CPU_DEFAULT SELECT_SH1\n+#endif\n+\n+#define TARGET_DEFAULT  (TARGET_CPU_DEFAULT|TARGET_ENDIAN_DEFAULT)\n \n #define CPP_SPEC \" %(subtarget_cpp_spec) \"\n \n@@ -341,7 +360,17 @@ extern int target_flags;\n #endif\n \n #define LINK_EMUL_PREFIX \"sh%{ml:l}\"\n+\n+#if TARGET_CPU_DEFAULT & SH5_BIT\n+#if TARGET_CPU_DEFAULT & SH3E_BIT\n+#define LINK_DEFAULT_CPU_EMUL \"32\"\n+#else\n+#define LINK_DEFAULT_CPU_EMUL \"64\"\n+#endif /* SH3E_BIT */\n+#else\n #define LINK_DEFAULT_CPU_EMUL \"\"\n+#endif /* SH5_BIT */\n+\n #define SUBTARGET_LINK_EMUL_SUFFIX \"\"\n #define SUBTARGET_LINK_SPEC \"\"\n "}, {"sha": "40469befc4787d433a9bcadc0afd0324f5fbd573", "filename": "gcc/config/sh/t-linux", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc6e1018593f8525674f79fac6a80d23cb25efb/gcc%2Fconfig%2Fsh%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc6e1018593f8525674f79fac6a80d23cb25efb/gcc%2Fconfig%2Fsh%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-linux?ref=8bc6e1018593f8525674f79fac6a80d23cb25efb", "patch": "@@ -3,7 +3,7 @@ LIB1ASMFUNCS_CACHE = _ic_invalidate\n \n LIB2FUNCS_EXTRA=\n \n-MULTILIB_OPTIONS += m3e/m4\n+MULTILIB_OPTIONS= $(MULTILIB_ENDIAN) m3e/m4\n MULTILIB_DIRNAMES= \n MULTILIB_MATCHES = \n "}, {"sha": "6150d59e09877da61a73117edcb6b8844a5d2651", "filename": "gcc/config/sh/t-monolib", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bc6e1018593f8525674f79fac6a80d23cb25efb/gcc%2Fconfig%2Fsh%2Ft-monolib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bc6e1018593f8525674f79fac6a80d23cb25efb/gcc%2Fconfig%2Fsh%2Ft-monolib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-monolib?ref=8bc6e1018593f8525674f79fac6a80d23cb25efb", "patch": "@@ -0,0 +1 @@\n+MULTILIB_OPTIONS="}]}