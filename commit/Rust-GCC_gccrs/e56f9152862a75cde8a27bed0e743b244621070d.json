{"sha": "e56f9152862a75cde8a27bed0e743b244621070d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU2ZjkxNTI4NjJhNzVjZGU4YTI3YmVkMGU3NDNiMjQ0NjIxMDcwZA==", "commit": {"author": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2007-10-24T12:54:24Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2007-10-24T12:54:24Z"}, "message": "re PR debug/33868 (Gross memory usage of var-tracking)\n\n        PR debug/33868\n        * var-tracking.c (variable_union): Don't break after one loop\n        * iteration\n        but only when a difference is found.\n        (dump_variable): Also print DECL_UID.\n\nFrom-SVN: r129602", "tree": {"sha": "62936a60e52be73085ced39c491fef157eadc54f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62936a60e52be73085ced39c491fef157eadc54f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e56f9152862a75cde8a27bed0e743b244621070d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56f9152862a75cde8a27bed0e743b244621070d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e56f9152862a75cde8a27bed0e743b244621070d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56f9152862a75cde8a27bed0e743b244621070d/comments", "author": null, "committer": null, "parents": [{"sha": "32154c8905a704e01c328542f2d4cef627c21b81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32154c8905a704e01c328542f2d4cef627c21b81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32154c8905a704e01c328542f2d4cef627c21b81"}], "stats": {"total": 48, "additions": 31, "deletions": 17}, "files": [{"sha": "397bbb7f307118dbd448dd12b0971d23cb094f49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56f9152862a75cde8a27bed0e743b244621070d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56f9152862a75cde8a27bed0e743b244621070d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e56f9152862a75cde8a27bed0e743b244621070d", "patch": "@@ -1,21 +1,28 @@\n+2007-10-24  Michael Matz  <matz@suse.de>\n+\n+\tPR debug/33868\n+\t* var-tracking.c (variable_union): Don't break after one loop iteration\n+\tbut only when a difference is found.\n+\t(dump_variable): Also print DECL_UID.\n+\n 2007-10-24  Olga Golovanevsky  <olga@il.ibm.com>\n \n-      * ipa-type-escape.h: Expose function\n-      is_array_access_through_pointer_and_index.\n-      * ipa-type-escape.c\n-      (is_array_access_through_pointer_and_index):\n-      Add three new parameters. Add support of\n-      POINTER_PLUS_EXPR tree code.\n+\t* ipa-type-escape.h: Expose function\n+\tis_array_access_through_pointer_and_index.\n+\t* ipa-type-escape.c\n+\t(is_array_access_through_pointer_and_index):\n+\tAdd three new parameters. Add support of\n+\tPOINTER_PLUS_EXPR tree code.\n \n 2007-10-24  Olga Golovanevsky  <olga@il.ibm.com>\n \n-      * ipa-struct-reorg.c, ipa-struct-reorg.h: New files.\n-      * tree-pass.h: Add pass_ipa_struct_reorg.\n-      * common.opt: Add ipa-struct-reorg flag.\n-      * Makefile.in: Add ipa-strcut-reorg.o compilation.\n-      * passes.c: Add pass pass_ipa_struct_reorg.\n-      * params.h:  Add STRUCT_REORG_COLD_STRUCT_RATIO.\n-      * params.def: Add PARAM_STRUCT_REORG_COLD_STRUCT_RATIO.\n+\t* ipa-struct-reorg.c, ipa-struct-reorg.h: New files.\n+\t* tree-pass.h: Add pass_ipa_struct_reorg.\n+\t* common.opt: Add ipa-struct-reorg flag.\n+\t* Makefile.in: Add ipa-strcut-reorg.o compilation.\n+\t* passes.c: Add pass pass_ipa_struct_reorg.\n+\t* params.h:  Add STRUCT_REORG_COLD_STRUCT_RATIO.\n+\t* params.def: Add PARAM_STRUCT_REORG_COLD_STRUCT_RATIO.\n \n 2007-10-24  Ira Rosen  <irar@il.ibm.com>\n "}, {"sha": "9599b5aac7b768f4296a09caba6873926c14d629", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56f9152862a75cde8a27bed0e743b244621070d/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56f9152862a75cde8a27bed0e743b244621070d/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=e56f9152862a75cde8a27bed0e743b244621070d", "patch": "@@ -1221,9 +1221,11 @@ variable_union (void **slot, void *data)\n \t\t\t && REG_P (node->loc)\n \t\t\t && REGNO (node2->loc) == REGNO (node->loc))\n \t\t\t|| rtx_equal_p (node2->loc, node->loc)))\n-\t\t    if (node2->init < node->init)\n-\t\t      node2->init = node->init;\n-\t\t    break;\n+\t\t    {\n+\t\t      if (node2->init < node->init)\n+\t\t        node2->init = node->init;\n+\t\t      break;\n+\t\t    }\n \t\t}\n \t      if (node || node2)\n \t\tdst = unshare_variable (set, dst, VAR_INIT_STATUS_UNKNOWN);\n@@ -2209,8 +2211,13 @@ dump_variable (void **slot, void *data ATTRIBUTE_UNUSED)\n   int i;\n   location_chain node;\n \n-  fprintf (dump_file, \"  name: %s\\n\",\n+  fprintf (dump_file, \"  name: %s\",\n \t   IDENTIFIER_POINTER (DECL_NAME (var->decl)));\n+  if (dump_flags & TDF_UID)\n+    fprintf (dump_file, \" D.%u\\n\", DECL_UID (var->decl));\n+  else\n+    fprintf (dump_file, \"\\n\");\n+\n   for (i = 0; i < var->n_var_parts; i++)\n     {\n       fprintf (dump_file, \"    offset %ld\\n\","}]}