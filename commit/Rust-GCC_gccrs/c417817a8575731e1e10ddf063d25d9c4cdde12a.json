{"sha": "c417817a8575731e1e10ddf063d25d9c4cdde12a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQxNzgxN2E4NTc1NzMxZTFlMTBkZGYwNjNkMjVkOWM0Y2RkZTEyYQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2007-09-14T17:46:56Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2007-09-14T17:46:56Z"}, "message": "all_pedantic_errors.cc: New.\n\n2007-09-14  Benjamin Kosnik  <bkoz@redhat.com>\n\n        * testsuite/17_intro/headers/all_pedantic_errors.cc: New.\n        * include/tr1_impl/cinttypes: Add pragma GCC system_header.\n        * include/tr1_impl/cfenv: Same.\n        * include/tr1_impl/cstdint: Same.\n        * include/tr1/cstdbool: Same.\n        * include/ext/pb_ds/detail/resize_policy/\n        hash_prime_size_policy_imp.hpp: Same.\n        * include/parallel/partial_sum.h: Avoid VLA error with\n        __builtin_alloca.\n\nFrom-SVN: r128500", "tree": {"sha": "3034f05765a3ea09ca2ed16721c17c087ddae113", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3034f05765a3ea09ca2ed16721c17c087ddae113"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c417817a8575731e1e10ddf063d25d9c4cdde12a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c417817a8575731e1e10ddf063d25d9c4cdde12a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c417817a8575731e1e10ddf063d25d9c4cdde12a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c417817a8575731e1e10ddf063d25d9c4cdde12a/comments", "author": null, "committer": null, "parents": [{"sha": "5baa7f6f709fb3a7da9497a65edbe33bbc7498a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5baa7f6f709fb3a7da9497a65edbe33bbc7498a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5baa7f6f709fb3a7da9497a65edbe33bbc7498a0"}], "stats": {"total": 171, "additions": 169, "deletions": 2}, "files": [{"sha": "3dcfc2115e66890bbfae89dc2786f46e2e5a153e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c417817a8575731e1e10ddf063d25d9c4cdde12a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c417817a8575731e1e10ddf063d25d9c4cdde12a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c417817a8575731e1e10ddf063d25d9c4cdde12a", "patch": "@@ -1,3 +1,15 @@\n+2007-09-14  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/17_intro/headers/all_pedantic_errors.cc: New.\n+\t* include/tr1_impl/cinttypes: Add pragma GCC system_header.\n+\t* include/tr1_impl/cfenv: Same.\n+\t* include/tr1_impl/cstdint: Same.\n+\t* include/tr1/cstdbool: Same.\n+\t* include/ext/pb_ds/detail/resize_policy/\n+\thash_prime_size_policy_imp.hpp: Same.\n+\t* include/parallel/partial_sum.h: Avoid VLA error with\n+\t__builtin_alloca.\n+\n 2007-09-14  Thiemo Seufer  <ths@mips.com>\n \n \t* crossconfig.m4 (mips*-sde-elf*): New stanza."}, {"sha": "97052cef03cfd5f2b5a85436283cf4d4bed61a72", "filename": "libstdc++-v3/include/ext/pb_ds/detail/resize_policy/hash_prime_size_policy_imp.hpp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c417817a8575731e1e10ddf063d25d9c4cdde12a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fhash_prime_size_policy_imp.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c417817a8575731e1e10ddf063d25d9c4cdde12a/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fhash_prime_size_policy_imp.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fresize_policy%2Fhash_prime_size_policy_imp.hpp?ref=c417817a8575731e1e10ddf063d25d9c4cdde12a", "patch": "@@ -44,6 +44,8 @@\n  * Contains a resize size policy implementation.\n  */\n \n+#pragma GCC system_header\n+\n namespace detail\n {\n   enum"}, {"sha": "422f2537e86be990a3ea52175a5b44d46776f7fe", "filename": "libstdc++-v3/include/parallel/partial_sum.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c417817a8575731e1e10ddf063d25d9c4cdde12a/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartial_sum.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c417817a8575731e1e10ddf063d25d9c4cdde12a/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartial_sum.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartial_sum.h?ref=c417817a8575731e1e10ddf063d25d9c4cdde12a", "patch": "@@ -39,7 +39,6 @@\n #ifndef _GLIBCXX_PARALLEL_PARTIAL_SUM_H\n #define _GLIBCXX_PARALLEL_PARTIAL_SUM_H 1\n \n-\n #include <omp.h>\n #include <bits/stl_algobase.h>\n #include <parallel/parallel.h>\n@@ -104,7 +103,7 @@ namespace __gnu_parallel\n \treturn parallel_partial_sum_basecase(begin + 1, end, result + 1, bin_op, *begin);\n       }\n \n-    difference_type borders[num_threads + 2];\n+    difference_type* borders = __builtin_alloca(sizeof(difference_type) * (num_threads + 2));\n \n     if (Settings::partial_sum_dilatation == 1.0f)\n       equally_split(n, num_threads + 1, borders);"}, {"sha": "5f6e80eae9edfaab4003ae809d9aeafb903b1a9e", "filename": "libstdc++-v3/include/tr1/cstdbool", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c417817a8575731e1e10ddf063d25d9c4cdde12a/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdbool", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c417817a8575731e1e10ddf063d25d9c4cdde12a/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdbool", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcstdbool?ref=c417817a8575731e1e10ddf063d25d9c4cdde12a", "patch": "@@ -34,6 +34,8 @@\n #ifndef _GLIBCXX_TR1_CSTDBOOL\n #define _GLIBCXX_TR1_CSTDBOOL 1\n \n+#pragma GCC system_header\n+\n #include <bits/c++config.h>\n \n #if _GLIBCXX_HAVE_STDBOOL_H"}, {"sha": "4a1eca99d4afc9cf2f30f5dfadc20340019caa6f", "filename": "libstdc++-v3/include/tr1_impl/cfenv", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c417817a8575731e1e10ddf063d25d9c4cdde12a/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcfenv", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c417817a8575731e1e10ddf063d25d9c4cdde12a/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcfenv", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcfenv?ref=c417817a8575731e1e10ddf063d25d9c4cdde12a", "patch": "@@ -32,6 +32,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n+#pragma GCC system_header\n+\n #if _GLIBCXX_USE_C99_FENV_TR1\n \n #include_next <fenv.h>"}, {"sha": "17625931100e5ac0c8f3c33d5ee217e159a0ad3d", "filename": "libstdc++-v3/include/tr1_impl/cinttypes", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c417817a8575731e1e10ddf063d25d9c4cdde12a/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcinttypes", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c417817a8575731e1e10ddf063d25d9c4cdde12a/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcinttypes", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcinttypes?ref=c417817a8575731e1e10ddf063d25d9c4cdde12a", "patch": "@@ -32,6 +32,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n+#pragma GCC system_header\n+\n #if _GLIBCXX_USE_C99_INTTYPES_TR1\n \n // For 8.11.1/1 (see C99, Note 184) "}, {"sha": "6df74c761cb74480d2efd3ddf0b66a6e07eceb14", "filename": "libstdc++-v3/include/tr1_impl/cstdint", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c417817a8575731e1e10ddf063d25d9c4cdde12a/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcstdint", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c417817a8575731e1e10ddf063d25d9c4cdde12a/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcstdint", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fcstdint?ref=c417817a8575731e1e10ddf063d25d9c4cdde12a", "patch": "@@ -32,6 +32,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n+#pragma GCC system_header\n+\n #if _GLIBCXX_USE_C99_STDINT_TR1\n \n // For 8.22.1/1 (see C99, Notes 219, 220, 222) "}, {"sha": "1325cc9d3665f5227bea0bd2fc8b3a2275920f59", "filename": "libstdc++-v3/testsuite/17_intro/headers/all_pedantic_errors.cc", "status": "added", "additions": 146, "deletions": 0, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c417817a8575731e1e10ddf063d25d9c4cdde12a/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fall_pedantic_errors.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c417817a8575731e1e10ddf063d25d9c4cdde12a/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fall_pedantic_errors.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fall_pedantic_errors.cc?ref=c417817a8575731e1e10ddf063d25d9c4cdde12a", "patch": "@@ -0,0 +1,146 @@\n+// { dg-do compile }\n+// { dg-options \"-pedantic-errors\" }\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// Make sure all the includes can be compiled with -Wc++0x-compat\n+// libstdc++/30571\n+\n+// C\n+#include <cassert>\n+#include <cctype>\n+#include <cerrno>\n+#include <cfloat>\n+#include <ciso646>\n+#include <climits>\n+#include <clocale>\n+#include <cmath>\n+#include <csetjmp>\n+#include <csignal>\n+#include <cstdarg>\n+#include <cstddef>\n+#include <cstdio>\n+#include <cstdlib>\n+#include <cstring>\n+#include <ctime>\n+\n+// C++\n+#include <algorithm>\n+#include <bitset>\n+#include <complex>\n+#include <deque>\n+#include <exception>\n+#include <fstream>\n+#include <functional>\n+#include <iomanip>\n+#include <ios>\n+#include <iosfwd>\n+#include <iostream>\n+#include <istream>\n+#include <iterator>\n+#include <limits>\n+#include <list>\n+#include <locale>\n+#include <map>\n+#include <memory>\n+#include <new>\n+#include <numeric>\n+#include <ostream>\n+#include <queue>\n+#include <set>\n+#include <sstream>\n+#include <stack>\n+#include <stdexcept>\n+#include <streambuf>\n+#include <string>\n+#include <typeinfo>\n+#include <utility>\n+#include <valarray>\n+#include <vector>\n+\n+// TR1\n+#include <tr1/array>\n+#include <tr1/cctype>\n+#include <tr1/cfenv>\n+#include <tr1/cfloat>\n+#include <tr1/cinttypes>\n+#include <tr1/climits>\n+#include <tr1/cmath>\n+#include <tr1/complex>\n+#include <tr1/cstdarg>\n+#include <tr1/cstdbool>\n+#include <tr1/cstdint>\n+#include <tr1/cstdio>\n+#include <tr1/cstdlib>\n+#include <tr1/ctgmath>\n+#include <tr1/ctime>\n+#include <tr1/cwchar>\n+#include <tr1/cwctype>\n+#include <tr1/functional>\n+#include <tr1/random>\n+#include <tr1/tuple>\n+#include <tr1/unordered_map>\n+#include <tr1/unordered_set>\n+#include <tr1/utility>\n+\n+// Extensions\n+#include <ext/algorithm>\n+#include <ext/array_allocator.h>\n+#include <ext/atomicity.h>\n+#include <ext/bitmap_allocator.h>\n+#include <ext/codecvt_specializations.h>\n+#include <ext/concurrence.h>\n+#include <ext/debug_allocator.h>\n+#include <ext/enc_filebuf.h>\n+#include <ext/functional>\n+#include <ext/hash_map>\n+#include <ext/hash_set>\n+#include <ext/iterator>\n+#include <ext/malloc_allocator.h>\n+#include <ext/memory>\n+#include <ext/mt_allocator.h>\n+#include <ext/new_allocator.h>\n+#include <ext/numeric>\n+#include <ext/pod_char_traits.h>\n+#include <ext/pool_allocator.h>\n+#include <ext/rb_tree>\n+#include <ext/rope>\n+#include <ext/slist>\n+#include <ext/stdio_filebuf.h>\n+#include <ext/stdio_sync_filebuf.h>\n+#include <ext/throw_allocator.h>\n+#include <ext/typelist.h>\n+#include <ext/type_traits.h>\n+#include <ext/vstring.h>\n+#include <ext/pb_ds/assoc_container.hpp>\n+#include <ext/pb_ds/priority_queue.hpp>\n+#include <ext/pb_ds/exception.hpp>\n+#include <ext/pb_ds/hash_policy.hpp>\n+#include <ext/pb_ds/list_update_policy.hpp>\n+#include <ext/pb_ds/tree_policy.hpp>\n+#include <ext/pb_ds/trie_policy.hpp>"}]}