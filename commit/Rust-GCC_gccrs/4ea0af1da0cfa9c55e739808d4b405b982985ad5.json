{"sha": "4ea0af1da0cfa9c55e739808d4b405b982985ad5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVhMGFmMWRhMGNmYTljNTVlNzM5ODA4ZDRiNDA1Yjk4Mjk4NWFkNQ==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-06-09T15:39:29Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-06-09T15:39:29Z"}, "message": "re PR fortran/78278 (ICE in gfc_wide_memset, at fortran/scanner.c:153)\n\n2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/78278\n\t* data.c (gfc_assign_data_value): Re-arrange code to allow for\n\tan error for double initialization of CHARACTER entities.\n\n2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/78278\n\t* gfortran.dg/data_bounds_1.f90: Add -std=gnu option.\n\t* gfortran.dg/data_char_1.f90: Ditto.\n\t* gfortran.dg/pr78571.f90: Ditto.\n\t* gfortran.dg/pr78278.f90: New test.\n\nFrom-SVN: r261361", "tree": {"sha": "2da10bd03ed520cc2fdf26e97e9d585882077a1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2da10bd03ed520cc2fdf26e97e9d585882077a1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ea0af1da0cfa9c55e739808d4b405b982985ad5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ea0af1da0cfa9c55e739808d4b405b982985ad5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ea0af1da0cfa9c55e739808d4b405b982985ad5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ea0af1da0cfa9c55e739808d4b405b982985ad5/comments", "author": null, "committer": null, "parents": [{"sha": "598dc594fa743db13fae4a884e33079a06de07e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/598dc594fa743db13fae4a884e33079a06de07e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/598dc594fa743db13fae4a884e33079a06de07e2"}], "stats": {"total": 62, "additions": 46, "deletions": 16}, "files": [{"sha": "52fdc46a887e85d3176fd8bea8d4f3fb86b605a5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea0af1da0cfa9c55e739808d4b405b982985ad5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea0af1da0cfa9c55e739808d4b405b982985ad5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4ea0af1da0cfa9c55e739808d4b405b982985ad5", "patch": "@@ -1,3 +1,9 @@\n+2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/78278\n+\t* data.c (gfc_assign_data_value): Re-arrange code to allow for\n+\tan error for double initialization of CHARACTER entities.\n+\n 2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/63514"}, {"sha": "0d1f83040e937db76877c622b43d80a2e3e7bdbd", "filename": "gcc/fortran/data.c", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea0af1da0cfa9c55e739808d4b405b982985ad5/gcc%2Ffortran%2Fdata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea0af1da0cfa9c55e739808d4b405b982985ad5/gcc%2Ffortran%2Fdata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdata.c?ref=4ea0af1da0cfa9c55e739808d4b405b982985ad5", "patch": "@@ -483,6 +483,21 @@ gfc_assign_data_value (gfc_expr *lvalue, gfc_expr *rvalue, mpz_t index,\n   mpz_clear (offset);\n   gcc_assert (repeat == NULL);\n \n+  /* Overwriting an existing initializer is non-standard but usually only\n+     provokes a warning from other compilers.  */\n+  if (init != NULL && init->where.lb && rvalue->where.lb)\n+    {\n+      /* Order in which the expressions arrive here depends on whether\n+\t they are from data statements or F95 style declarations.\n+\t Therefore, check which is the most recent.  */\n+      expr = (LOCATION_LINE (init->where.lb->location)\n+\t      > LOCATION_LINE (rvalue->where.lb->location))\n+\t   ? init : rvalue;\n+      if (gfc_notify_std (GFC_STD_GNU, \"re-initialization of %qs at %L\",\n+\t\t\t  symbol->name, &expr->where) == false)\n+\treturn false;\n+    }\n+\n   if (ref || last_ts->type == BT_CHARACTER)\n     {\n       /* An initializer has to be constant.  */\n@@ -503,22 +518,6 @@ gfc_assign_data_value (gfc_expr *lvalue, gfc_expr *rvalue, mpz_t index,\n \t  return false;\n \t}\n \n-      /* Overwriting an existing initializer is non-standard but usually only\n-\t provokes a warning from other compilers.  */\n-      if (init != NULL)\n-\t{\n-\t  /* Order in which the expressions arrive here depends on whether\n-\t     they are from data statements or F95 style declarations.\n-\t     Therefore, check which is the most recent.  */\n-\t  expr = (LOCATION_LINE (init->where.lb->location)\n-\t\t  > LOCATION_LINE (rvalue->where.lb->location))\n-\t       ? init : rvalue;\n-\t  if (gfc_notify_std (GFC_STD_GNU,\n-\t\t\t      \"re-initialization of %qs at %L\",\n-\t\t\t      symbol->name, &expr->where) == false)\n-\t    return false;\n-\t}\n-\n       expr = gfc_copy_expr (rvalue);\n       if (!gfc_compare_types (&lvalue->ts, &expr->ts))\n \tgfc_convert_type (expr, &lvalue->ts, 0);"}, {"sha": "8e90b1f472315b38c051c8335643ff76a41f021e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea0af1da0cfa9c55e739808d4b405b982985ad5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea0af1da0cfa9c55e739808d4b405b982985ad5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4ea0af1da0cfa9c55e739808d4b405b982985ad5", "patch": "@@ -1,3 +1,11 @@\n+2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/78278\n+\t* gfortran.dg/data_bounds_1.f90: Add -std=gnu option.\n+\t* gfortran.dg/data_char_1.f90: Ditto.\n+\t* gfortran.dg/pr78571.f90: Ditto.\n+\t* gfortran.dg/pr78278.f90: New test.\n+\n 2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/63514"}, {"sha": "24cdc7c98156d1beed73b425bf55fd4f6b510106", "filename": "gcc/testsuite/gfortran.dg/data_bounds_1.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea0af1da0cfa9c55e739808d4b405b982985ad5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_bounds_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea0af1da0cfa9c55e739808d4b405b982985ad5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_bounds_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_bounds_1.f90?ref=4ea0af1da0cfa9c55e739808d4b405b982985ad5", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do compile }\n+! { dg-options \"-std=gnu\" }\n ! Checks the fix for PR32315, in which the bounds checks below were not being done.\n !\n ! Contributed by Tobias Burnus <burnus@gcc.gnu.org>"}, {"sha": "0611e6375912a01197700819608ddb08c3959826", "filename": "gcc/testsuite/gfortran.dg/data_char_1.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea0af1da0cfa9c55e739808d4b405b982985ad5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_char_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea0af1da0cfa9c55e739808d4b405b982985ad5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_char_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_char_1.f90?ref=4ea0af1da0cfa9c55e739808d4b405b982985ad5", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do run }\n+! { dg-options \"-std=gnu\" }\n ! Test character variables in data statements\n ! Also substrings of character variables.\n ! PR14976 PR16228 "}, {"sha": "fd50e3e1c186d8605e16f80c3e2d750f602bf363", "filename": "gcc/testsuite/gfortran.dg/pr78278.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea0af1da0cfa9c55e739808d4b405b982985ad5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78278.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea0af1da0cfa9c55e739808d4b405b982985ad5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78278.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78278.f90?ref=4ea0af1da0cfa9c55e739808d4b405b982985ad5", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f95\" }\n+! PR fortran/78278\n+program p\n+   character, pointer :: x => null()\n+   data x /null()/         ! { dg-error \"GNU Extension: re-initialization\" }\n+   print *, associated(x)\n+end\n+\n+subroutine foo\n+   real :: x = 42\n+   data x /0/              ! { dg-error \"GNU Extension: re-initialization\" }\n+   print *, x\n+end subroutine foo"}, {"sha": "8e377567eec822c592e53bf6f1e90462d8a77ec7", "filename": "gcc/testsuite/gfortran.dg/pr78571.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea0af1da0cfa9c55e739808d4b405b982985ad5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78571.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea0af1da0cfa9c55e739808d4b405b982985ad5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78571.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78571.f90?ref=4ea0af1da0cfa9c55e739808d4b405b982985ad5", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do compile }\n+! { dg-options \"-std=gnu\" }\n ! PR fortran/78571\n program p\n    type t"}]}