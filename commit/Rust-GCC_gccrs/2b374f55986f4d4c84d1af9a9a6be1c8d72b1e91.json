{"sha": "2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIzNzRmNTU5ODZmNGQ0Yzg0ZDFhZjlhOWE2YmUxYzhkNzJiMWU5MQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2009-08-09T08:35:36Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2009-08-09T08:35:36Z"}, "message": "re PR fortran/40955 (STDCALL attributes are not saved in the .MOD files)\n\n2009-08-05  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/40955\n        * gfortran.h (ext_attr_id_t): Add typedef for this enum.\n        (gfc_add_ext_attribute): Use it.\n        * decl.c (gfc_match_gcc_attributes): Ditto.\n        * expr.c (gfc_check_pointer_assign): Ditto.\n        * symbol.c (gfc_add_ext_attribute): Ditto.\n        (gfc_copy_attr): Copy also ext_attr.\n        * resolve.c (resolve_fl_derived,resolve_symbol): Ditto.\n        * module.c (mio_symbol_attribute): Save ext_attr in the mod\n        * file.\n\n2009-08-05  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/40955\n        * gfortran.dg/module_md5_1.f90: Update MD5 check sum.\n\nFrom-SVN: r150589", "tree": {"sha": "062189decd4fd69dc34c13ea034acb58e8725c39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/062189decd4fd69dc34c13ea034acb58e8725c39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/comments", "author": null, "committer": null, "parents": [{"sha": "2c08497af02c674b5f87b988b55f8a79d2e77195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c08497af02c674b5f87b988b55f8a79d2e77195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c08497af02c674b5f87b988b55f8a79d2e77195"}], "stats": {"total": 66, "additions": 46, "deletions": 20}, "files": [{"sha": "a064c8a831bbd67feabb51d99a4c115a38447cf4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91", "patch": "@@ -1,3 +1,15 @@\n+2009-08-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/40955\n+\t* gfortran.h (ext_attr_id_t): Add typedef for this enum.\n+\t(gfc_add_ext_attribute): Use it.\n+\t* decl.c (gfc_match_gcc_attributes): Ditto.\n+\t* expr.c (gfc_check_pointer_assign): Ditto.\n+\t* symbol.c (gfc_add_ext_attribute): Ditto.\n+\t(gfc_copy_attr): Copy also ext_attr.\n+\t* resolve.c (resolve_fl_derived,resolve_symbol): Ditto.\n+\t* module.c (mio_symbol_attribute): Save ext_attr in the mod file.\n+\n 2009-08-05  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/40969"}, {"sha": "67ccfdaf3fd4650c3a57df742ef8268fea80aea9", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91", "patch": "@@ -7678,7 +7678,7 @@ gfc_match_gcc_attributes (void)\n \t  return MATCH_ERROR;\n \t}\n \n-      if (gfc_add_ext_attribute (&attr, id, &gfc_current_locus)\n+      if (gfc_add_ext_attribute (&attr, (ext_attr_id_t) id, &gfc_current_locus)\n \t  == FAILURE)\n \treturn MATCH_ERROR;\n "}, {"sha": "b0e58b3d6c4f7b0ec16586f4b839f624a78d7343", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91", "patch": "@@ -3195,9 +3195,9 @@ gfc_check_pointer_assign (gfc_expr *lvalue, gfc_expr *rvalue)\n \t  symbol_attribute cdecl, stdcall, fastcall;\n \t  unsigned calls;\n \n-\t  gfc_add_ext_attribute (&cdecl, (unsigned) EXT_ATTR_CDECL, NULL);\n-\t  gfc_add_ext_attribute (&stdcall, (unsigned) EXT_ATTR_STDCALL, NULL);\n-\t  gfc_add_ext_attribute (&fastcall, (unsigned) EXT_ATTR_FASTCALL, NULL);\n+\t  gfc_add_ext_attribute (&cdecl, EXT_ATTR_CDECL, NULL);\n+\t  gfc_add_ext_attribute (&stdcall, EXT_ATTR_STDCALL, NULL);\n+\t  gfc_add_ext_attribute (&fastcall, EXT_ATTR_FASTCALL, NULL);\n \t  calls = cdecl.ext_attr | stdcall.ext_attr | fastcall.ext_attr;\n \n \t  if ((calls & lvalue->symtree->n.sym->attr.ext_attr)"}, {"sha": "cefe3ec1c8f6f56c7604581951d20e2ee2f3ca9a", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91", "patch": "@@ -621,15 +621,16 @@ extern CInteropKind_t c_interop_kinds_table[];\n \n \n /* Structure and list of supported extension attributes.  */\n-enum\n+typedef enum\n {\n   EXT_ATTR_DLLIMPORT = 0,\n   EXT_ATTR_DLLEXPORT,\n   EXT_ATTR_STDCALL,\n   EXT_ATTR_CDECL,\n   EXT_ATTR_FASTCALL,\n   EXT_ATTR_LAST, EXT_ATTR_NUM = EXT_ATTR_LAST\n-};\n+}\n+ext_attr_id_t;\n \n typedef struct\n {\n@@ -2334,7 +2335,7 @@ gfc_try gfc_set_default_type (gfc_symbol *, int, gfc_namespace *);\n void gfc_set_sym_referenced (gfc_symbol *);\n \n gfc_try gfc_add_attribute (symbol_attribute *, locus *);\n-gfc_try gfc_add_ext_attribute (symbol_attribute *, unsigned, locus *);\n+gfc_try gfc_add_ext_attribute (symbol_attribute *, ext_attr_id_t, locus *);\n gfc_try gfc_add_allocatable (symbol_attribute *, locus *);\n gfc_try gfc_add_dimension (symbol_attribute *, const char *, locus *);\n gfc_try gfc_add_external (symbol_attribute *, locus *);"}, {"sha": "5d64fd1e9809cf9e87ac2b855e5145765c7537ac", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91", "patch": "@@ -1752,6 +1752,7 @@ static void\n mio_symbol_attribute (symbol_attribute *attr)\n {\n   atom_type t;\n+  unsigned ext_attr;\n \n   mio_lparen ();\n \n@@ -1760,6 +1761,9 @@ mio_symbol_attribute (symbol_attribute *attr)\n   attr->proc = MIO_NAME (procedure_type) (attr->proc, procedures);\n   attr->if_source = MIO_NAME (ifsrc) (attr->if_source, ifsrc_types);\n   attr->save = MIO_NAME (save_state) (attr->save, save_status);\n+  ext_attr = attr->ext_attr;\n+  mio_integer ((int *) &ext_attr);\n+  attr->ext_attr = ext_attr;\n \n   if (iomode == IO_OUTPUT)\n     {"}, {"sha": "39f3cdca056088a3e9400264f247791483161edc", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91", "patch": "@@ -9217,6 +9217,7 @@ resolve_fl_derived (gfc_symbol *sym)\n \t      c->attr.elemental = ifc->attr.elemental;\n \t      c->attr.recursive = ifc->attr.recursive;\n \t      c->attr.always_explicit = ifc->attr.always_explicit;\n+\t      c->attr.ext_attr |= ifc->attr.ext_attr;\n \t      /* Replace symbols in array spec.  */\n \t      if (c->as)\n \t\t{\n@@ -9712,6 +9713,7 @@ resolve_symbol (gfc_symbol *sym)\n \t  sym->attr.dimension = ifc->attr.dimension;\n \t  sym->attr.recursive = ifc->attr.recursive;\n \t  sym->attr.always_explicit = ifc->attr.always_explicit;\n+          sym->attr.ext_attr |= ifc->attr.ext_attr;\n \t  /* Copy array spec.  */\n \t  sym->as = gfc_copy_array_spec (ifc->as);\n \t  if (sym->as)"}, {"sha": "b86afc07358bdd94d1aaea029023af55e2c015d4", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91", "patch": "@@ -810,7 +810,7 @@ duplicate_attr (const char *attr, locus *where)\n \n \n gfc_try\n-gfc_add_ext_attribute (symbol_attribute *attr, unsigned ext_attr,\n+gfc_add_ext_attribute (symbol_attribute *attr, ext_attr_id_t ext_attr,\n \t\t       locus *where ATTRIBUTE_UNUSED)\n {\n   attr->ext_attr |= 1 << ext_attr;\n@@ -1641,6 +1641,8 @@ gfc_copy_attr (symbol_attribute *dest, symbol_attribute *src, locus *where)\n {\n   int is_proc_lang_bind_spec;\n   \n+  dest->ext_attr = src->ext_attr;\n+\n   if (src->allocatable && gfc_add_allocatable (dest, where) == FAILURE)\n     goto fail;\n "}, {"sha": "c45d289f3da6fbb81114d519230996357991ec75", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91", "patch": "@@ -1,3 +1,8 @@\n+2009-08-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/40955\n+\t* gfortran.dg/module_md5_1.f90: Update MD5 check sum.\n+\n 2009-08-09  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* gcc.target/bfin/loop-autoinc.c: New file.\n@@ -9,17 +14,17 @@\n \n 2009-08-08  Laurent GUERBY  <laurent@guerby.net>\n \n-        * ada/acats/support/impdef.a: Tweak timing constants. Add\n-        Long_Minimum_Task_Switch and Long_Switch_To_New_Task.\n-        * ada/acats/tests/c9/c940005.a: Use new timing constants.\n-        * ada/acats/tests/c9/c940007.a: Likewise.\n-        * ada/acats/tests/c9/c94001c.ada: Likewise.\n-        * ada/acats/tests/c9/c94006a.ada: Likewise.\n-        * ada/acats/tests/c9/c94008c.ada: Likewise.\n-        * ada/acats/tests/c9/c951002.a: Likewise.\n-        * ada/acats/tests/c9/c954a01.a: Likewise.\n-        * ada/acats/tests/c9/c96001a.ada: Likewise.\n-        * ada/acats/tests/c9/c97307a.ada: Likewise.\n+\t* ada/acats/support/impdef.a: Tweak timing constants. Add\n+\tLong_Minimum_Task_Switch and Long_Switch_To_New_Task.\n+\t* ada/acats/tests/c9/c940005.a: Use new timing constants.\n+\t* ada/acats/tests/c9/c940007.a: Likewise.\n+\t* ada/acats/tests/c9/c94001c.ada: Likewise.\n+\t* ada/acats/tests/c9/c94006a.ada: Likewise.\n+\t* ada/acats/tests/c9/c94008c.ada: Likewise.\n+\t* ada/acats/tests/c9/c951002.a: Likewise.\n+\t* ada/acats/tests/c9/c954a01.a: Likewise.\n+\t* ada/acats/tests/c9/c96001a.ada: Likewise.\n+\t* ada/acats/tests/c9/c97307a.ada: Likewise.\n \n 2009-08-07  Richard Guenther  <rguenther@suse.de>\n "}, {"sha": "7aeeb800f102d471f995fd72ebddda9552a35994", "filename": "gcc/testsuite/gfortran.dg/module_md5_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_md5_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_md5_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_md5_1.f90?ref=2b374f55986f4d4c84d1af9a9a6be1c8d72b1e91", "patch": "@@ -10,5 +10,5 @@ program test\n   use foo\n   print *, pi\n end program test\n-! { dg-final { scan-module \"foo\" \"MD5:596df8f39d3ddc0b847771cadcb26274\" } }\n+! { dg-final { scan-module \"foo\" \"MD5:dc2fd1358dcaddc25e3c89dae859ef32\" } }\n ! { dg-final { cleanup-modules \"foo\" } }"}]}