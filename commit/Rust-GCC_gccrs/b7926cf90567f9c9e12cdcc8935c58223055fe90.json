{"sha": "b7926cf90567f9c9e12cdcc8935c58223055fe90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc5MjZjZjkwNTY3ZjljOWUxMmNkY2M4OTM1YzU4MjIzMDU1ZmU5MA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-08-08T16:33:06Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-08-08T16:33:06Z"}, "message": "Add a testcase for PR target/49781.\n\n2011-08-08  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/49781\n\t* gcc.target/i386/pr49781-1.c: New.\n\nFrom-SVN: r177569", "tree": {"sha": "62fdc2291c7f5f196d9028b59ed92c3a14383cdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62fdc2291c7f5f196d9028b59ed92c3a14383cdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7926cf90567f9c9e12cdcc8935c58223055fe90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7926cf90567f9c9e12cdcc8935c58223055fe90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7926cf90567f9c9e12cdcc8935c58223055fe90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7926cf90567f9c9e12cdcc8935c58223055fe90/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ddaad3c8b1dcd40163af03d1cd5c302966257b21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddaad3c8b1dcd40163af03d1cd5c302966257b21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddaad3c8b1dcd40163af03d1cd5c302966257b21"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "4ce23b79764aa63fdddf2bda478a8085668a1655", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7926cf90567f9c9e12cdcc8935c58223055fe90/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7926cf90567f9c9e12cdcc8935c58223055fe90/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b7926cf90567f9c9e12cdcc8935c58223055fe90", "patch": "@@ -1,3 +1,8 @@\n+2011-08-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/49781\n+\t* gcc.target/i386/pr49781-1.c: New.\n+\n 2011-08-08  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/range-for20.C: Adjust to test 50020 as well."}, {"sha": "80db03416e560d0c0364dcbe1254af2349002619", "filename": "gcc/testsuite/gcc.target/i386/pr49781-1.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7926cf90567f9c9e12cdcc8935c58223055fe90/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49781-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7926cf90567f9c9e12cdcc8935c58223055fe90/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49781-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49781-1.c?ref=b7926cf90567f9c9e12cdcc8935c58223055fe90", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fpic\" } */\n+/* { dg-require-effective-target fpic } */\n+\n+static int heap[2*(256 +1+29)+1];\n+static int heap_len;\n+static int heap_max;\n+void \n+foo (int elems)\n+{\n+  int n, m;\n+  int max_code = -1;\n+  int node = elems;\n+  heap_len = 0, heap_max = (2*(256 +1+29)+1);\n+  for (n = 0; n < elems; n++)\n+    heap[++heap_len] = max_code = n;\n+  do {\n+    n = heap[1];\n+    heap[1] = heap[heap_len--];\n+    m = heap[1];\n+    heap[--heap_max] = n;\n+    heap[--heap_max] = m;\n+  } while (heap_len >= 2);\n+}\n+\n+/* { dg-final { scan-assembler-not \"lea\\[lq\\]?\\[ \\t\\]\\\\((%|)r\\[a-z0-9\\]*\" } } */"}]}