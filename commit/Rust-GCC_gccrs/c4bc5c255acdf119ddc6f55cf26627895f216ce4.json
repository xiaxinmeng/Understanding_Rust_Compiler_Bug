{"sha": "c4bc5c255acdf119ddc6f55cf26627895f216ce4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRiYzVjMjU1YWNkZjExOWRkYzZmNTVjZjI2NjI3ODk1ZjIxNmNlNA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2012-03-12T15:48:55Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2012-03-12T15:48:55Z"}, "message": "Remove obsolete OpenBSD/MIPS support\n\n\tlibgcc:\n\t* config.host (mips*-*-openbsd*): Remove.\n\n\tgcc:\n\t* config.gcc (mips*-*-openbsd*): Remove.\n\t* config/mips/openbsd.h: Remove.\n\t* config/mips/sdb.h: Remove.\n\n\t* config/mips/mips.h (SDB_OUTPUT_SOURCE_LINE): Remove.\n\t* config/mips/mips.c (sdb_label_count): Remove.\n\t(mips_debugger_offset): Remove #if 0 code.\n\t(mips_output_function_prologue) [SDB_DEBUGGING_INFO]: Remove.\n\t* config/mips/sde.h (SDB_DEBUGGING_INFO): Don't undef.\n\n\tcontrib:\n\t* config-list.mk (LIST): Remove mips-openbsd.\n\nFrom-SVN: r185245", "tree": {"sha": "1cf50dcc2b45f96d10be0dbaff2b2f4055b8f635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cf50dcc2b45f96d10be0dbaff2b2f4055b8f635"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4bc5c255acdf119ddc6f55cf26627895f216ce4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4bc5c255acdf119ddc6f55cf26627895f216ce4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4bc5c255acdf119ddc6f55cf26627895f216ce4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4bc5c255acdf119ddc6f55cf26627895f216ce4/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "344f61ae5da6af37fdddff717045785fbb92a010", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/344f61ae5da6af37fdddff717045785fbb92a010", "html_url": "https://github.com/Rust-GCC/gccrs/commit/344f61ae5da6af37fdddff717045785fbb92a010"}], "stats": {"total": 248, "additions": 22, "deletions": 226}, "files": [{"sha": "25d781491b5de22a27152fade57ef4365fcb3989", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4bc5c255acdf119ddc6f55cf26627895f216ce4/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4bc5c255acdf119ddc6f55cf26627895f216ce4/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=c4bc5c255acdf119ddc6f55cf26627895f216ce4", "patch": "@@ -1,3 +1,7 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config-list.mk (LIST): Remove mips-openbsd.\n+\n 2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config-list.mk (LIST): Remove alpha-dec-osf5.1."}, {"sha": "7e6debde935eecadc2fb39a06236218c8a1246c9", "filename": "contrib/config-list.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4bc5c255acdf119ddc6f55cf26627895f216ce4/contrib%2Fconfig-list.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4bc5c255acdf119ddc6f55cf26627895f216ce4/contrib%2Fconfig-list.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fconfig-list.mk?ref=c4bc5c255acdf119ddc6f55cf26627895f216ce4", "patch": "@@ -39,7 +39,7 @@ LIST = alpha-linux-gnu alpha-freebsd6 alpha-netbsd alpha-openbsd \\\n   mips-sgi-irix6.5OPT-with-stabsOPT-enable-threads=posixOPT-enable-obsolete \\\n   mips-netbsd \\\n   mips64el-st-linux-gnu mips64octeon-linux mipsisa64r2-linux \\\n-  mipsisa32r2-linux-gnu mips-openbsd mipsisa64r2-sde-elf mipsisa32-elfoabi \\\n+  mipsisa32r2-linux-gnu mipsisa64r2-sde-elf mipsisa32-elfoabi \\\n   mipsisa64-elfoabi mipsisa64r2el-elf mipsisa64sr71k-elf mipsisa64sb1-elf \\\n   mipsel-elf mips64-elf mips64vr-elf mips64orion-elf mips-rtems \\\n   mips-wrs-vxworks mipstx39-elf mmix-knuth-mmixware mn10300-elf moxie-elf \\"}, {"sha": "425f07a80e277fa8f177f5103904bdc61d420dd0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4bc5c255acdf119ddc6f55cf26627895f216ce4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4bc5c255acdf119ddc6f55cf26627895f216ce4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c4bc5c255acdf119ddc6f55cf26627895f216ce4", "patch": "@@ -1,3 +1,15 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config.gcc (mips*-*-openbsd*): Remove.\n+\t* config/mips/openbsd.h: Remove.\n+\t* config/mips/sdb.h: Remove.\n+\n+\t* config/mips/mips.h (SDB_OUTPUT_SOURCE_LINE): Remove.\n+\t* config/mips/mips.c (sdb_label_count): Remove.\n+\t(mips_debugger_offset): Remove #if 0 code.\n+\t(mips_output_function_prologue) [SDB_DEBUGGING_INFO]: Remove.\n+\t* config/mips/sde.h (SDB_DEBUGGING_INFO): Don't undef.\n+\n 2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* doc/install.texi (Specific, i?86-*-solaris2.[89]): Update"}, {"sha": "edf96bfa32d7d7e7d6e18ac1642dda1d253fb5d5", "filename": "gcc/config.gcc", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4bc5c255acdf119ddc6f55cf26627895f216ce4/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4bc5c255acdf119ddc6f55cf26627895f216ce4/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=c4bc5c255acdf119ddc6f55cf26627895f216ce4", "patch": "@@ -254,7 +254,6 @@ case ${target} in\n  | arm*-*-uclinux*\t\t\t\\\n  | arm*-wince-pe*\t\t\t\\\n  | mips-sgi-irix6.5\t\t\t\\\n- | mips*-*-openbsd*\t\t\t\\\n  | score-*\t\t\t\t\\\n  | *-*-solaris2.8*\t\t\t\\\n  )\n@@ -1747,17 +1746,6 @@ mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n         esac\n \ttest x$with_llsc != x || with_llsc=yes\n \t;;\n-mips*-*-openbsd*)\n-\ttm_defines=\"${tm_defines} OBSD_HAS_DECLARE_FUNCTION_NAME OBSD_HAS_DECLARE_OBJECT OBSD_HAS_CORRECT_SPECS\"\n-\ttarget_cpu_default=\"MASK_ABICALLS\"\n-\ttm_file=\"mips/mips.h openbsd.h openbsd-stdint.h openbsd-libpthread.h mips/openbsd.h mips/sdb.h\"\n-\textra_options=\"${extra_options} openbsd.opt\"\n-\tcase ${target} in\n-\tmips*el-*-openbsd*)\n-\t    tm_defines=\"${tm_defines} TARGET_ENDIAN_DEFAULT=0\";;\n-\t*)  tm_defines=\"${tm_defines} TARGET_ENDIAN_DEFAULT=MASK_BIG_ENDIAN\";;\n-        esac\n-\t;;\n mips*-sde-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elf.h mips/sde.h\"\n \ttmake_file=\"mips/t-sde\""}, {"sha": "58f942a5304617767ccaf51d6bb5555f97ff2274", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4bc5c255acdf119ddc6f55cf26627895f216ce4/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4bc5c255acdf119ddc6f55cf26627895f216ce4/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=c4bc5c255acdf119ddc6f55cf26627895f216ce4", "patch": "@@ -494,9 +494,6 @@ int num_source_filenames;\n    written anything yet.  */\n const char *current_function_file = \"\";\n \n-/* A label counter used by PUT_SDB_BLOCK_START and PUT_SDB_BLOCK_END.  */\n-int sdb_label_count;\n-\n /* Arrays that map GCC register numbers to debugger register numbers.  */\n int mips_dbx_regno[FIRST_PSEUDO_REGISTER];\n int mips_dwarf_regno[FIRST_PSEUDO_REGISTER];\n@@ -8114,13 +8111,6 @@ mips_debugger_offset (rtx addr, HOST_WIDE_INT offset)\n \toffset += cfun->machine->frame.hard_frame_pointer_offset;\n     }\n \n-  /* sdbout_parms does not want this to crash for unrecognized cases.  */\n-#if 0\n-  else if (reg != arg_pointer_rtx)\n-    fatal_insn (\"mips_debugger_offset called with non stack/frame/arg pointer\",\n-\t\taddr);\n-#endif\n-\n   return offset;\n }\n \f\n@@ -10129,11 +10119,6 @@ mips_output_function_prologue (FILE *file, HOST_WIDE_INT size ATTRIBUTE_UNUSED)\n {\n   const char *fnname;\n \n-#ifdef SDB_DEBUGGING_INFO\n-  if (debug_info_level != DINFO_LEVEL_TERSE && write_symbols == SDB_DEBUG)\n-    SDB_OUTPUT_SOURCE_LINE (file, DECL_SOURCE_LINE (current_function_decl));\n-#endif\n-\n   /* In MIPS16 mode, we may need to generate a non-MIPS16 stub to handle\n      floating-point arguments.  */\n   if (TARGET_MIPS16"}, {"sha": "5d7f02261ae11488373c7aa6aefcda0cc1c3647a", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4bc5c255acdf119ddc6f55cf26627895f216ce4/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4bc5c255acdf119ddc6f55cf26627895f216ce4/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=c4bc5c255acdf119ddc6f55cf26627895f216ce4", "patch": "@@ -2551,10 +2551,6 @@ do\t\t\t\t\t\t\t\t\t\\\n   }\t\t\t\t\t\t\t\t\t\\\n while (0)\n \n-/* Use .loc directives for SDB line numbers.  */\n-#define SDB_OUTPUT_SOURCE_LINE(STREAM, LINE)\t\t\t\\\n-  fprintf (STREAM, \"\\t.loc\\t%d %d\\n\", num_source_filenames, LINE)\n-\n /* The MIPS implementation uses some labels for its own purpose.  The\n    following lists what labels are created, and are all formed by the\n    pattern $L[a-z].*.  The machine independent portion of GCC creates"}, {"sha": "a392ca4701d3af04d54ff2d9dc1c108c074bc42e", "filename": "gcc/config/mips/openbsd.h", "status": "removed", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344f61ae5da6af37fdddff717045785fbb92a010/gcc%2Fconfig%2Fmips%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344f61ae5da6af37fdddff717045785fbb92a010/gcc%2Fconfig%2Fmips%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fopenbsd.h?ref=344f61ae5da6af37fdddff717045785fbb92a010", "patch": "@@ -1,101 +0,0 @@\n-/* Configuration for  a MIPS ABI32 OpenBSD target.\n-   Copyright (C) 1999, 2003, 2004, 2007, 2008, 2009, 2010, 2011\n-   Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-/* Definitions needed for OpenBSD, to avoid picking mips 'defaults'.  */\n-\n-/* GAS must know this.  */\n-#undef SUBTARGET_ASM_SPEC\n-#define SUBTARGET_ASM_SPEC \"%{fPIC|fPIE:-KPIC}\"\n-\n-/* CPP specific OpenBSD specs.  */\n-#undef SUBTARGET_CPP_SPEC\n-#define SUBTARGET_CPP_SPEC OBSD_CPP_SPEC\n-\n-/* Needed for ELF (inspired by netbsd-elf).  */\n-#undef LOCAL_LABEL_PREFIX\n-#define LOCAL_LABEL_PREFIX\t\".\"\n-\n-/* The profiling lib spec here is not really correct but we leave\n-   it as it is until we have some kind of profiling working.  */\n-#define LIB_SPEC OBSD_LIB_SPEC\n-\n-/* mips assembler uses .set for arcane purposes.  __attribute__((alias))\n-   and friends won't work until we get recent binutils with .weakext\n-\tsupport.  */\n-#undef SET_ASM_OP\n-\n-#define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n-    do {\t\t\t\t\t\t\\\n-\tbuiltin_define (\"__unix__\");\t\t\t\\\n-\tbuiltin_define (\"__SYSTYPE_BSD__\");\t\t\\\n-\tbuiltin_define (\"__NO_LEADING_UNDERSCORES__\");\t\\\n-\tbuiltin_define (\"__GP_SUPPORT__\");\t\t\\\n-\tbuiltin_define (\"__OpenBSD__\");\t\t\t\\\n-\tbuiltin_assert (\"system=unix\");\t\t\t\\\n-\tbuiltin_assert (\"system=OpenBSD\");\t\t\\\n-} while (0)\n-\n-/* Layout of source language data types.  */\n-\n-/* This must agree with <machine/ansi.h>.  */\n-#undef SIZE_TYPE\n-#define SIZE_TYPE \"long unsigned int\"\n-\n-#undef PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"long int\"\n-\n-#undef WCHAR_TYPE\n-#define WCHAR_TYPE \"int\"\n-\n-#undef WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE 32\n-\n-#undef WINT_TYPE\n-#define WINT_TYPE \"int\"\n-\n-/* Controlling the compilation driver.  */\n-\n-/* LINK_SPEC appropriate for OpenBSD:  support for GCC options\n-   -static, -assert, and -nostdlib. Dynamic loader control.  */\n-#undef LINK_SPEC\n-#define LINK_SPEC \\\n-  \"%{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} \\\n-   %{shared} \\\n-   %{!shared: -non_shared} \\\n-   -dynamic-linker /usr/libexec/ld.so \\\n-   %{!nostdlib:%{!r:%{!e*:-e __start}}} -dc -dp \\\n-   %{static:-Bstatic} %{!static:-Bdynamic} %{assert*}\"\n-\n-/* -G is incompatible with -KPIC which is the default, so only allow objects\n-   in the small data section if the user explicitly asks for it.  */\n-#undef MIPS_DEFAULT_GVALUE\n-#define MIPS_DEFAULT_GVALUE 0\n-\n-\n-/* Since gas and gld are standard on OpenBSD, we don't need these.  */\n-#undef ASM_FINAL_SPEC\n-#undef STARTFILE_SPEC\n-\n-/* Switch into a generic section.  */\n-#undef TARGET_ASM_NAMED_SECTION\n-#define TARGET_ASM_NAMED_SECTION  default_elf_asm_named_section\n-\n-/* MIPS specific debugging info */\n-#define MIPS_DEBUGGING_INFO 1"}, {"sha": "27a42df7ab2d690d3c2f9f0202069b32747b2250", "filename": "gcc/config/mips/sdb.h", "status": "removed", "additions": 0, "deletions": 87, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344f61ae5da6af37fdddff717045785fbb92a010/gcc%2Fconfig%2Fmips%2Fsdb.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344f61ae5da6af37fdddff717045785fbb92a010/gcc%2Fconfig%2Fmips%2Fsdb.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsdb.h?ref=344f61ae5da6af37fdddff717045785fbb92a010", "patch": "@@ -1,87 +0,0 @@\n-/* Generate SDB debugging info.\n-   Copyright (C) 2003, 2004, 2007 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-/* Note that no configuration uses sdb as its preferred format.  */\n-\n-#define SDB_DEBUGGING_INFO 1\n-\n-/* Forward references to tags are allowed.  */\n-#define SDB_ALLOW_FORWARD_REFERENCES\n-\n-/* Unknown tags are also allowed.  */\n-#define SDB_ALLOW_UNKNOWN_REFERENCES\n-\n-/* Block start/end next label #.  */\n-extern int sdb_label_count;\n-\n-/* Starting line of current function.  */\n-extern int sdb_begin_function_line;\n-\n-/* For block start and end, we create labels, so that\n-   later we can figure out where the correct offset is.\n-   The normal .ent/.end serve well enough for functions,\n-   so those are just commented out.  */\n-\n-#define PUT_SDB_BLOCK_START(LINE)\t\t\t\\\n-do {\t\t\t\t\t\t\t\\\n-  fprintf (asm_out_file,\t\t\t\t\\\n-\t   \"%sLb%d:\\n\\t.begin\\t%sLb%d\\t%d\\n\",\t\t\\\n-\t   LOCAL_LABEL_PREFIX,\t\t\t\t\\\n-\t   sdb_label_count,\t\t\t\t\\\n-\t   LOCAL_LABEL_PREFIX,\t\t\t\t\\\n-\t   sdb_label_count,\t\t\t\t\\\n-\t   (LINE));\t\t\t\t\t\\\n-  sdb_label_count++;\t\t\t\t\t\\\n-} while (0)\n-\n-#define PUT_SDB_BLOCK_END(LINE)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\\\n-  fprintf (asm_out_file,\t\t\t\t\\\n-\t   \"%sLe%d:\\n\\t.bend\\t%sLe%d\\t%d\\n\",\t\t\\\n-\t   LOCAL_LABEL_PREFIX,\t\t\t\t\\\n-\t   sdb_label_count,\t\t\t\t\\\n-\t   LOCAL_LABEL_PREFIX,\t\t\t\t\\\n-\t   sdb_label_count,\t\t\t\t\\\n-\t   (LINE));\t\t\t\t\t\\\n-  sdb_label_count++;\t\t\t\t\t\\\n-} while (0)\n-\n-#define PUT_SDB_FUNCTION_START(LINE)\n-\n-#define PUT_SDB_FUNCTION_END(LINE)\t\t\t\\\n-do {\t\t\t\t\t\t\t\\\n-  SDB_OUTPUT_SOURCE_LINE (asm_out_file, LINE + sdb_begin_function_line); \\\n-} while (0)\n-\n-#define PUT_SDB_EPILOGUE_END(NAME)\n-\n-/* We need to use .esize and .etype instead of .size and .type to\n-   avoid conflicting with ELF directives.  */\n-#undef PUT_SDB_SIZE\n-#define PUT_SDB_SIZE(a)\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\\\n-  fprintf (asm_out_file, \"\\t.esize\\t\" HOST_WIDE_INT_PRINT_DEC \";\", \\\n- \t   (HOST_WIDE_INT) (a));\t\t\t\\\n-} while (0)\n-\n-#undef PUT_SDB_TYPE\n-#define PUT_SDB_TYPE(a)\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\\\n-  fprintf (asm_out_file, \"\\t.etype\\t0x%x;\", (a));\t\\\n-} while (0)"}, {"sha": "cc420eb5c53b24efada77ef837a5dcca3ff1a240", "filename": "gcc/config/mips/sde.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4bc5c255acdf119ddc6f55cf26627895f216ce4/gcc%2Fconfig%2Fmips%2Fsde.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4bc5c255acdf119ddc6f55cf26627895f216ce4/gcc%2Fconfig%2Fmips%2Fsde.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsde.h?ref=c4bc5c255acdf119ddc6f55cf26627895f216ce4", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    MIPS SDE version.\n-   Copyright (C) 2003, 2004, 2007, 2008, 2009, 2010, 2011\n+   Copyright (C) 2003, 2004, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -67,9 +67,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef DEFAULT_SIGNED_CHAR\n #define DEFAULT_SIGNED_CHAR 0\n \n-/* SDE-MIPS won't ever support SDB debugging info.  */\n-#undef SDB_DEBUGGING_INFO\n-\n /* Describe how we implement __builtin_eh_return.  */\n \n /* At the moment, nothing appears to use more than 2 EH data registers."}, {"sha": "9e4446279c813ff2eccf24711073b6a58d2c7833", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4bc5c255acdf119ddc6f55cf26627895f216ce4/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4bc5c255acdf119ddc6f55cf26627895f216ce4/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=c4bc5c255acdf119ddc6f55cf26627895f216ce4", "patch": "@@ -1,3 +1,7 @@\n+2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config.host (mips*-*-openbsd*): Remove.\n+\n 2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config.host: Remove alpha*-dec-osf5.1* handling."}, {"sha": "585572f5d086e8d9a72f02c532084f483995bd0e", "filename": "libgcc/config.host", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4bc5c255acdf119ddc6f55cf26627895f216ce4/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4bc5c255acdf119ddc6f55cf26627895f216ce4/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=c4bc5c255acdf119ddc6f55cf26627895f216ce4", "patch": "@@ -743,8 +743,6 @@ mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n \ttmake_file=\"${tmake_file} t-crtfm mips/t-mips16\"\n \tmd_unwind_header=mips/linux-unwind.h\n \t;;\n-mips*-*-openbsd*)\n-\t;;\n mips*-sde-elf*)\n \ttmake_file=\"$tmake_file mips/t-crtstuff mips/t-mips16\"\n \tcase \"${with_newlib}\" in"}]}