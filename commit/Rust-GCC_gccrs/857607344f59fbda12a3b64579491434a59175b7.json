{"sha": "857607344f59fbda12a3b64579491434a59175b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU3NjA3MzQ0ZjU5ZmJkYTEyYTNiNjQ1Nzk0OTE0MzRhNTkxNzViNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-10-09T07:43:01Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-10-09T07:43:01Z"}, "message": "i386.md (any_div): New code iterator.\n\n\t* config/i386/i386.md (any_div): New code iterator.\n\t(u): Handle div and udiv.\n\t(sgnprefix): Ditto.\n\t(<u>divqi3): Macroize insn from divqi3 and udivqi using and_div\n\tcode iterator.\n\t(lfloor<MODEF:mode><SWI48:mode>2): Macroize insn from\n\tlfloor<mode>{si,di}2 patterns using SWI48 mode iterator.\n\t(lceil<MODEF:mode><SWI48:mode>2): Macroize insn from\n\tlceil<mode>{si,di}2 patterns using SWI48 mode iterator.\n\nFrom-SVN: r152584", "tree": {"sha": "8fc49f4e5be0b5a8500ebb6d06befd076303b2d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fc49f4e5be0b5a8500ebb6d06befd076303b2d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/857607344f59fbda12a3b64579491434a59175b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/857607344f59fbda12a3b64579491434a59175b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/857607344f59fbda12a3b64579491434a59175b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/857607344f59fbda12a3b64579491434a59175b7/comments", "author": null, "committer": null, "parents": [{"sha": "bfcd7d74a7399424fb0ac5916688458d39426fa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfcd7d74a7399424fb0ac5916688458d39426fa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfcd7d74a7399424fb0ac5916688458d39426fa3"}], "stats": {"total": 211, "additions": 85, "deletions": 126}, "files": [{"sha": "b369f0b7d4ad06a1a10449686a78814d079536c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 64, "deletions": 79, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/857607344f59fbda12a3b64579491434a59175b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/857607344f59fbda12a3b64579491434a59175b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=857607344f59fbda12a3b64579491434a59175b7", "patch": "@@ -1,3 +1,15 @@\n+2009-10-09  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (any_div): New code iterator.\n+\t(u): Handle div and udiv.\n+\t(sgnprefix): Ditto.\n+\t(<u>divqi3): Macroize insn from divqi3 and udivqi using and_div\n+\tcode iterator.\n+\t(lfloor<MODEF:mode><SWI48:mode>2): Macroize insn from\n+\tlfloor<mode>{si,di}2 patterns using SWI48 mode iterator.\n+\t(lceil<MODEF:mode><SWI48:mode>2): Macroize insn from\n+\tlceil<mode>{si,di}2 patterns using SWI48 mode iterator.\n+\n 2009-10-08  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.c (main): Remove trailing \".\" from diagnostics.\n@@ -226,8 +238,8 @@\n \n 2009-10-07  Jan Hubicka  <jh@suse.cz>\n \n-\t* lto-symtab.c (lto_cgraph_replace_node): Assert that inline clones has\n-\tno address taken.\n+\t* lto-symtab.c (lto_cgraph_replace_node): Assert that inline clones\n+\thas no address taken.\n \t* cgraph.c (cgraph_mark_needed_node): Assert that inline clones are\n \tnever needed.\n \t(cgraph_clone_node): Clear externally_visible flag for clones.\n@@ -393,8 +405,7 @@\n \n 2009-10-06  Jerry Quinn  <jlquinn@optonline.net>\n \n-\t* gimple.c (gimple_type_hash): Use CONST_CAST_TREE to fix\n-\tcompilation.\n+\t* gimple.c (gimple_type_hash): Use CONST_CAST_TREE to fix compilation.\n \n 2009-10-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n@@ -634,34 +645,29 @@\n \t    Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* Makefile.in (enable_lto): New.\n-\t(site.exp): If @enable_lto@ is set to 'yes' define\n-\tENABLE_LTO.\n+\t(site.exp): If @enable_lto@ is set to 'yes' define ENABLE_LTO.\n \t(LINKER_PLUGIN_API_H): Define.\n \t(LTO_SYMTAB_H): Define.\n \t(LTO_STREAMER_H): Define.\n \t(TREE_VECTORIZER_H): Define.\n \t(INCLUDES): Add LIBELFINC.\n \t(OBJS-common): Add lto-cgraph.o, lto-streamer-in.o,\n-\tlto-streamer-out.o, lto-section-in.o, lto-section-out.o,\n-\tlto-symtab.o, lto-opts.o, lto-streamer.o, lto-wpa-fixup.o,\n-\tlto-compress.o.\n+\tlto-streamer-out.o, lto-section-in.o, lto-section-out.o, lto-symtab.o,\n+\tlto-opts.o, lto-streamer.o, lto-wpa-fixup.o, lto-compress.o.\n \t(MOSTLYCLEANFILES): Add lto-wrapper$(exeext)\n \t(native): Add lto-wrapper$(exeext)\n \t(lto-compress.o, lto-cgraph.o, lto-streamer-in.o,\n \tlto-streamer-out.o, lto-section-in.o, lto-section-out.o,\n-\tlto-symtab.o, lto-opts.o, lto-streamer.o,\n-\tlto-wpa-fixup.o): New rules.\n-\t(gimple.o): Add dependency on LTO_HEADER_H and\n-\tLTO_SECTION_OUT_H.\n+\tlto-symtab.o, lto-opts.o, lto-streamer.o, lto-wpa-fixup.o): New rules.\n+\t(gimple.o): Add dependency on LTO_HEADER_H and LTO_SECTION_OUT_H.\n \t(varasm.o): Add dependency on tree-iterator.h.\n \t(cgraph.o): Add dependency on cif-code.def.\n \t(ipa-reference.o): Add dependency on LTO_STREAMER_H.\n \t(ipa-pure-const.o): Likewise.\n \t(GTFILES): Add lto-symtab.c.\n \t(install-lto-wrapper): New.\n-\t* configure.ac: If 'lto' is in enable_languages, define\n-\tENABLE_LTO and enable_lto.\n-\tIf LIBELFLIBS is set, define HAVE_libelf.\n+\t* configure.ac: If 'lto' is in enable_languages, define ENABLE_LTO\n+\tand enable_lto.  If LIBELFLIBS is set, define HAVE_libelf.\n \t* config.in: Regenerate.\n \n 2009-10-03  Rafael Espindola  <espindola@google.com>\n@@ -782,8 +788,7 @@\n \tof pass_all_early_optimizations.  Document reason.\n \t(pass_ipa_lto_gimple_out, pass_ipa_lto_wpa_fixup,\n \tpass_ipa_lto_finish_out): New pass.\n-\t(pass_ipa_summary_passes): Start and stop timers if the pass\n-\thas them.\n+\t(pass_ipa_summary_passes): Start and stop timers if the pass has them.\n \t(execute_all_ipa_transforms): New.\n \t(execute_one_pass): Don't call execute_one_ipa_transform_pass.\n \t(dump_properties, debug_properties): New.\n@@ -807,8 +812,7 @@\n 2009-10-03  Doug Kwan  <dougkwan@google.com>\n \t    Ollie Wild  <aaw@google.com>\n \n-\t* ipa-prop.c (ipa_propagate_indirect_call_infos): Do\n-\tnothing in WPA.\n+\t* ipa-prop.c (ipa_propagate_indirect_call_infos): Do nothing in WPA.\n \n \t* collect2.c (LTO_MODE_NONE, LTO_MODE_LTO, LTO_MODE_WPA): New enums.\n \t(lto_mode): New variable.\n@@ -826,7 +830,7 @@\n \t* opts.c: Include lto-opts.h.\n \t(handle_option): Call lto_register_user_option for each\n \tvalid option handled.\n-\t* (decode_options): Clear registered options before the options\n+\t(decode_options): Clear registered options before the options\n \thandling loop.\n \n 2009-10-03  Cary Coutant  <ccoutant@google.com>\n@@ -839,8 +843,7 @@\n \t* gcc.c (LINK_COMMAND_SPEC): Use the -pass-through option to pass\n \tlibgcc to the linker.\n \n-\t* ipa-cp.c (cgraph_gate_cp): Return false if LTRANS is\n-\trunning.\n+\t* ipa-cp.c (cgraph_gate_cp): Return false if LTRANS is running.\n \n \t* collect2.c (maybe_run_lto_and_relink): Execute lto-wrapper.\n \t(collect_execute): Add flags argument. Pass flags to pex_run. Update\n@@ -874,8 +877,7 @@\n \t(lookup_type_pair): Increase initial hashtable size.\n \t(gimple_force_type_merge): Rely on type-pair symmetry.\n \t(visit): Remove excessive checking code.\n-\t(iterative_hash_type_name): Do not hash TYPE_NAME of\n-\tanonymous unions.\n+\t(iterative_hash_type_name): Do not hash TYPE_NAME of anonymous unions.\n \t(gimple_register_type): Remove getenv calls, shrink initial\n \thashtable size.\n \n@@ -892,15 +894,12 @@\n \tedge->call_stmt_cannot_inline_p instead of calling\n \tgimple_call_cannot_inline_p.\n \t(cgraph_decide_inlining): Do nothing in WPA and LTRANS.\n-\t(cgraph_gate_ipa_early_inlining): Return false if\n-\tin_lto_p is set.\n+\t(cgraph_gate_ipa_early_inlining): Return false if in_lto_p is set.\n \t(inline_generate_summary): Do nothing in LTRANS.\n-\t* cgraph.c (initialize_inline_failed): Make sure\n-\te->call_stmt exists before calling\n-\tgimple_call_cannot_inline_p.\n+\t* cgraph.c (initialize_inline_failed): Make sure e->call_stmt\n+\texists before calling gimple_call_cannot_inline_p.\n \t(cgraph_create_edge): Set edge->call_stmt_cannot_inline_p.\n-\t(cgraph_clone_edge): Add argument STMT_UID.  Modify all\n-\tcallers.\n+\t(cgraph_clone_edge): Add argument STMT_UID.  Modify all callers.\n \tUpdate new_edge->lto_stmt_uid.\n \t* cgraphbuild.c (reset_inline_failed): New.\n \n@@ -921,9 +920,8 @@\n \t(static_specs): Add cc1_non_lto_options, lto1_options and\n \tlink_lto_options.\n \t(static_spec_function): Replace lto-single with lto-option.\n-\t(process_command): Handle -flto, -fwpa and -fltran\n-\tby setting current_lto_option and not passing it to subprocess\n-\tunconditionally.\n+\t(process_command): Handle -flto, -fwpa and -fltran by setting\n+\tcurrent_lto_option and not passing it to subprocess unconditionally.\n \n 2009-10-03  Bill Maddox  <maddox@google.com>\n \n@@ -948,13 +946,10 @@\n \n \t* c.opt: Add LTO to warn_abi and warn_psabi.\n \n-\t* tree.c (fld_worklist_push): Rename from PUSH.\n-\tConvert to static inline function.\n-\tIgnore language-specific nodes.\n-\tUpdate all users.\n+\t* tree.c (fld_worklist_push): Rename from PUSH.  Convert to static\n+\tinline function.  Ignore language-specific nodes.  Update all users.\n \t(find_decls_types_r): Do not traverse the subtrees of\n-\tlanguage-specific nodes.\n-\tDo not traverse DECL_INITIAL for TYPE_DECLs.\n+\tlanguage-specific nodes.  Do not traverse DECL_INITIAL for TYPE_DECLs.\n \t* tree.h (is_lang_specific): New.\n \t* langhooks.h (struct lang_hooks_for_decls): Remove\n \tmay_need_assembler_name_p.  Update all users.\n@@ -967,8 +962,7 @@\n \tlookup_type_for_runtime if TYPE is not a runtime type.\n \n \t* passes.c (register_pass): Call position_pass on\n-\tall_small_ipa_passes, all_regular_ipa_passes and\n-\tall_lto_gen_passes.\n+\tall_small_ipa_passes, all_regular_ipa_passes and all_lto_gen_passes.\n \t* timevar.def (TV_IPA_LTO_GIMPLE_IO): Define.\n \t(TV_IPA_LTO_DECL_IO): Define.\n \t(TV_IPA_LTO_CGRAPH_IO): Define.\n@@ -985,24 +979,18 @@\n \t* tree.c (free_lang_data_in_binf): Factor out of ...\n \t(free_lang_data_in_type): ... here.\n \tCall RECORD_OR_UNION_TYPE_P.\n-\t(need_assembler_name_p): Ignore DECL if it does not have\n-\tTREE_PUBLIC set.\n-\tCall lang_hooks.decls.may_need_assembler_name_p if set.\n-\t(free_lang_data_in_decl): Do not clear DECL_CONTEXT for\n-\tCONST_DECLs.\n-\t(free_lang_data): Set debug_info_level to\n-\tDINFO_LEVEL_NONE.\n-\tSet write_symbols to NO_DEBUG.\n-\tSet debug_hooks to do_nothing_debug_hooks.\n-\t(gate_free_lang_data): Return true if flag_generate_lto\n-\tis set.\n+\t(need_assembler_name_p): Ignore DECL if it does not have TREE_PUBLIC\n+\tset.  Call lang_hooks.decls.may_need_assembler_name_p if set.\n+\t(free_lang_data_in_decl): Do not clear DECL_CONTEXT for CONST_DECLs.\n+\t(free_lang_data): Set debug_info_level to DINFO_LEVEL_NONE.  Set\n+\twrite_symbols to NO_DEBUG.  Set debug_hooks to do_nothing_debug_hooks.\n+\t(gate_free_lang_data): Return true if flag_generate_lto is set.\n \t(walk_tree_1): Call RECORD_OR_UNION_TYPE_P.\n \t* c-common.h (set_builtin_user_assembler_name): Move ...\n \t* tree.h (set_builtin_user_assembler_name): ... here.\n \n \t* common.opt (flto-report): New flag.\n-\t* opts.c (complain_wrong_lang): Do not complain if\n-\trunning lto1.\n+\t* opts.c (complain_wrong_lang): Do not complain if running lto1.\n \t* collect2.c (scan_prog_file): Send the error output of\n \t'nm' to HOST_BIT_BUCKET.\n \n@@ -1041,17 +1029,16 @@\n \t    Ollie Wild  <aaw@google.com>\n \n \t* doc/install.texi: Add documentation for libelf and --enable-lto.\n-\t* doc/invoke.texi: Document -fwpa, -flto, -fwhopr,\n-\t-fltrans, -flto-report, -flto-compression-level and\n-\t-use-linker-plugin.\n-\t* doc/sourcebuild.texi: Document use of zlib.\n-\tDocument lto-plugin.\n+\t* doc/invoke.texi: Document -fwpa, -flto, -fwhopr, -fltrans,\n+\t-flto-report, -flto-compression-level and -use-linker-plugin.\n+\t* doc/sourcebuild.texi: Document use of zlib.  Document lto-plugin.\n \tAdd section for LTO Testing.\n \n 2009-10-02  Cary Coutant  <ccoutant@google.com>\n \n-\tAdd support for comdat type sections for DWARF v4.  Merge from dwarf4\n-\tbranch.\n+\tAdd support for comdat type sections for DWARF v4.\n+\tMerge from dwarf4 branch.\n+\n \t* dwarf2out.c (DWARF_TYPE_SIGNATURE_SIZE): New constant.\n \t(dw_die_ref): Define vector type.\n \t(enum dw_val_class): Add dw_val_class_data8.\n@@ -1071,8 +1058,7 @@\n \t(print_signature): New function.\n \t(print_die): Print signature information; add dw_val_class_data8.\n \t(attr_checksum): Support dw_val_class_data8.\n-\t(CHECKSUM_STRING): Redefine for DWARF-4 to include\n-\ttrailing NULL byte.\n+\t(CHECKSUM_STRING): Redefine for DWARF-4 to include trailing NULL byte.\n \t(CHECKSUM_SLEB128, CHECKSUM_ULEB128): New macros.\n \t(checksum_sleb128, checksum_uleb128): New functions.\n \t(checksum_die_context): New function.\n@@ -1104,7 +1090,7 @@\n \t(copy_decls_for_unworthy_types): New function.\n \t(build_abbrev_table): Don't assert on missing die_symbol when doing\n \tcomdat type sections.\n-\t(size_of_die): Use DW_FORM_sig8 for external references; Add\n+\t(size_of_die): Use DW_FORM_sig8 for external references.  Add\n \tdw_val_class_data8.\n \t(unmark_dies): Don't assert for unmarked dies when doing comdat\n \ttype sections.\n@@ -1135,7 +1121,7 @@\n \n 2009-10-02  Neil Vachharajani  <nvachhar@google.com>\n \n-\t* gcov-io.c (gcov_open): Open files read-only when MODE < 0\n+\t* gcov-io.c (gcov_open): Open files read-only when MODE < 0.\n \n 2009-10-02  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -1178,8 +1164,8 @@\n \tPR debug/41404\n \tPR debug/41353\n \t* cfgexpand.c (expand_debug_expr) <case STRING_CST>: Don't create\n-\tCONST_STRING if STRING_CST contains embedded '\\0's or doesn't end with\n-\t'\\0'.\n+\tCONST_STRING if STRING_CST contains embedded '\\0's or doesn't end\n+\twith '\\0'.\n \t(expand_debug_expr) <case VAR_DECL>: For TREE_STATIC !DECL_EXTERNAL\n \tvars use DECL_RTL with resetting it back to NULL afterwards.\n \t* dwarf2out.c (same_dw_val_p): For dw_val_class_addr compare with\n@@ -1599,8 +1585,7 @@\n \n 2009-09-28  Nick Clifton  <nickc@redhat.com>\n \n-\t* config/m32r/m32r.c (m32r_is_insn): Return false for debugging\n-\tinsns.\n+\t* config/m32r/m32r.c (m32r_is_insn): Return false for debugging insns.\n \n 2009-09-28  Duncan Sands  <baldrick@free.fr>\n \n@@ -1669,7 +1654,7 @@\n \n 2009-09-27  Peter O'Gorman  <pogma@thewrittenword.com>\n \n-\tcollect2.c (main): Look for -brtl before adding libraries.\n+\t* collect2.c (main): Look for -brtl before adding libraries.\n \n 2009-09-27  Jonathan Gray  <jsg@openbsd.org>\n \n@@ -1749,9 +1734,10 @@\n \n \t* dwarf2out.c (dwarf_tag_name, gen_generic_params_dies,\n \tgeneric_parameter_die, template_parameter_pack_die,\n-\tgen_formal_parameter_die, gen_subprogram_die): Adjust after renaming\n-\tDW_TAG_formal_parameter_pack and DW_TAG_template_parameter_pack into\n-\tDW_TAG_GNU_formal_parameter_pack and DW_TAG_GNU_template_parameter_pack.\n+\tgen_formal_parameter_die, gen_subprogram_die): Adjust after\n+\trenaming DW_TAG_formal_parameter_pack and\n+\tDW_TAG_template_parameter_pack into DW_TAG_GNU_formal_parameter_pack\n+\tand DW_TAG_GNU_template_parameter_pack.\n \n 2009-09-25  Anatoly Sokolov  <aesok@post.ru>\n \n@@ -1799,9 +1785,7 @@\n \t(reg_class): Likewise.\n \t(REG_CLASS_NAMES): Likewise.\n \t* config/m32c/m32c.c (m32c_reg_class_from_constraint): Likewise.\n-\n-\t* config/m32c/m32c.c (m32c_override_options): Disable -fivopts for\n-\tM32C.\n+\t(m32c_override_options): Disable -fivopts for M32C.\n \n 2009-09-24  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n@@ -1922,7 +1906,8 @@\n \n \t* config/xtensa/xtensa.c (TARGET_STATIC_CHAIN): New.\n \t(xtensa_static_chain): New.\n-\t* config/xtensa/xtensa.h (STATIC_CHAIN, STATIC_CHAIN_INCOMING): Remove.\n+\t* config/xtensa/xtensa.h (STATIC_CHAIN): Remove.\n+\t(STATIC_CHAIN_INCOMING): Remove.\n \n 2009-09-23  Anatoly Sokolov  <aesok@post.ru>\n "}, {"sha": "61bf058f13c5b68f1308cd21bb100ac1f0348c93", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 21, "deletions": 47, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/857607344f59fbda12a3b64579491434a59175b7/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/857607344f59fbda12a3b64579491434a59175b7/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=857607344f59fbda12a3b64579491434a59175b7", "patch": "@@ -705,12 +705,17 @@\n ;; Used in signed and unsigned widening multiplications.\n (define_code_iterator any_extend [sign_extend zero_extend])\n \n-;; Various insn prefixes for widening operations.\n-(define_code_attr u [(sign_extend \"\") (zero_extend \"u\")])\n+;; Used in signed and unsigned divisions.\n+(define_code_iterator any_div [div udiv])\n+\n+;; Various insn prefixes for signed and unsigned operations.\n+(define_code_attr u [(sign_extend \"\") (zero_extend \"u\")\n+\t\t     (div \"\") (udiv \"u\")])\n (define_code_attr s [(sign_extend \"s\") (zero_extend \"u\")])\n \n-;; Instruction prefix for widening operations.\n-(define_code_attr sgnprefix [(sign_extend \"i\") (zero_extend \"\")])\n+;; Instruction prefix for signed and unsigned operations.\n+(define_code_attr sgnprefix [(sign_extend \"i\") (zero_extend \"\")\n+\t\t\t     (div \"i\") (udiv \"\")])\n \n ;; All single word integer modes.\n (define_mode_iterator SWI [QI HI SI (DI \"TARGET_64BIT\")])\n@@ -8127,23 +8132,14 @@\n \f\n ;; Divide instructions\n \n-(define_insn \"divqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"=a\")\n-\t(div:QI (match_operand:HI 1 \"register_operand\" \"0\")\n-\t\t(match_operand:QI 2 \"nonimmediate_operand\" \"qm\")))\n-   (clobber (reg:CC FLAGS_REG))]\n-  \"TARGET_QIMODE_MATH\"\n-  \"idiv{b}\\t%2\"\n-  [(set_attr \"type\" \"idiv\")\n-   (set_attr \"mode\" \"QI\")])\n-\n-(define_insn \"udivqi3\"\n+(define_insn \"<u>divqi3\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=a\")\n-\t(udiv:QI (match_operand:HI 1 \"register_operand\" \"0\")\n-\t\t (match_operand:QI 2 \"nonimmediate_operand\" \"qm\")))\n+\t(any_div:QI\n+\t  (match_operand:HI 1 \"register_operand\" \"0\")\n+\t  (match_operand:QI 2 \"nonimmediate_operand\" \"qm\")))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_QIMODE_MATH\"\n-  \"div{b}\\t%2\"\n+  \"<sgnprefix>div{b}\\t%2\"\n   [(set_attr \"type\" \"idiv\")\n    (set_attr \"mode\" \"QI\")])\n \n@@ -17999,25 +17995,13 @@\n    && flag_unsafe_math_optimizations\"\n   \"\")\n \n-(define_expand \"lfloor<mode>di2\"\n-  [(match_operand:DI 0 \"nonimmediate_operand\" \"\")\n-   (match_operand:MODEF 1 \"register_operand\" \"\")]\n-  \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH && TARGET_64BIT\n-   && !flag_trapping_math\"\n-{\n-  if (optimize_insn_for_size_p ())\n-    FAIL;\n-  ix86_expand_lfloorceil (operand0, operand1, true);\n-  DONE;\n-})\n-\n-(define_expand \"lfloor<mode>si2\"\n-  [(match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+(define_expand \"lfloor<MODEF:mode><SWI48:mode>2\"\n+  [(match_operand:SWI48 0 \"nonimmediate_operand\" \"\")\n    (match_operand:MODEF 1 \"register_operand\" \"\")]\n-  \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n+  \"SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n    && !flag_trapping_math\"\n {\n-  if (optimize_insn_for_size_p () && TARGET_64BIT)\n+  if (TARGET_64BIT && optimize_insn_for_size_p ())\n     FAIL;\n   ix86_expand_lfloorceil (operand0, operand1, true);\n   DONE;\n@@ -18273,20 +18257,10 @@\n    && flag_unsafe_math_optimizations\"\n   \"\")\n \n-(define_expand \"lceil<mode>di2\"\n-  [(match_operand:DI 0 \"nonimmediate_operand\" \"\")\n-   (match_operand:MODEF 1 \"register_operand\" \"\")]\n-  \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH && TARGET_64BIT\n-   && !flag_trapping_math\"\n-{\n-  ix86_expand_lfloorceil (operand0, operand1, false);\n-  DONE;\n-})\n-\n-(define_expand \"lceil<mode>si2\"\n-  [(match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+(define_expand \"lceil<MODEF:mode><SWI48:mode>2\"\n+  [(match_operand:SWI48 0 \"nonimmediate_operand\" \"\")\n    (match_operand:MODEF 1 \"register_operand\" \"\")]\n-  \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n+  \"SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n    && !flag_trapping_math\"\n {\n   ix86_expand_lfloorceil (operand0, operand1, false);"}]}