{"sha": "320cfc3c20d06572ffd935a2199d58b17996fe7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIwY2ZjM2MyMGQwNjU3MmZmZDkzNWEyMTk5ZDU4YjE3OTk2ZmU3Yw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-01-14T06:22:17Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-01-14T06:22:17Z"}, "message": "(incoming_reg): Keep regstack aligned to even boundary.\n\nFrom-SVN: r8759", "tree": {"sha": "0c7200b1ccd65571267dbfca134f699cc1e2f93e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c7200b1ccd65571267dbfca134f699cc1e2f93e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/320cfc3c20d06572ffd935a2199d58b17996fe7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320cfc3c20d06572ffd935a2199d58b17996fe7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/320cfc3c20d06572ffd935a2199d58b17996fe7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320cfc3c20d06572ffd935a2199d58b17996fe7c/comments", "author": null, "committer": null, "parents": [{"sha": "eb7d5627e12970b3d3f2260d5f4ba90ef3ba42f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb7d5627e12970b3d3f2260d5f4ba90ef3ba42f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb7d5627e12970b3d3f2260d5f4ba90ef3ba42f9"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "90cdeec6b72b3b6592595edeb4483d211cb25601", "filename": "gcc/config/a29k/a29k.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320cfc3c20d06572ffd935a2199d58b17996fe7c/gcc%2Fconfig%2Fa29k%2Fa29k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320cfc3c20d06572ffd935a2199d58b17996fe7c/gcc%2Fconfig%2Fa29k%2Fa29k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fa29k.c?ref=320cfc3c20d06572ffd935a2199d58b17996fe7c", "patch": "@@ -806,8 +806,13 @@ incoming_reg (start, count)\n \tCLEAR_HARD_REG_BIT (call_fixed_reg_set, i);\n       }\n \n-  /* Shorten the maximum size of the frame.  */\n-  for (i = R_AR (0) - start - count; i < R_AR (0) - start; i++)\n+  /* Shorten the maximum size of the frame.\n+     Remember that R_AR(-1,-2) are place holders for the caller's lr0,lr1.\n+     Make sure to keep the frame rounded to an even boundary.  Rounding up\n+     to an 8 byte boundary will use a slot.  Otherwise a frame with 121 local\n+     regs and 5 arguments will overrun the stack (121+1 + 5 + 2 > 128).  */\n+  /* ??? An alternative would be to never allocate one reg.  */\n+  for (i = (R_AR (0) - 2 - start - count) & ~1; i < R_AR (0) - 2 - start; i++)\n     {\n       fixed_regs[i] = call_used_regs[i] = call_fixed_regs[i] = 1;\n       SET_HARD_REG_BIT (fixed_reg_set, i);"}]}