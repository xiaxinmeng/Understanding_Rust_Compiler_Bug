{"sha": "5add3202082f40197d4fa3a8e82909193a876858", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFkZDMyMDIwODJmNDAxOTdkNGZhM2E4ZTgyOTA5MTkzYTg3Njg1OA==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2002-09-10T12:39:20Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-09-10T12:39:20Z"}, "message": "rs6000.c (rs6000_assemble_visibility): Protect declaration inside macro.\n\n        * rs6000.c (rs6000_assemble_visibility): Protect declaration\n        inside macro.  Correct function definition typo.\n        (rs6000_xcoff_section_type_flags): New function.\n        (TARGET_SECTION_TYPE_FLAGS): Remove definition.\n        (rs6000_elf_section_type_flags): Call default_section_type_flags_1\n        with appropriate PIC test.\n        (rs6000_xcoff_select_section): Use decl_readonly_section_1 to\n        determine readonly.\n        (rs6000_binds_local_p): Combine PIC flags.\n        * sysv4.h (TARGET_SECTION_TYPE_FLAGS): Define.\n        * xcoff.h (TARGET_SECTION_TYPE_FLAGS): Define.\n\nFrom-SVN: r57005", "tree": {"sha": "e9887fdd9c2b8170440e94b7745aff536c151ec0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9887fdd9c2b8170440e94b7745aff536c151ec0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5add3202082f40197d4fa3a8e82909193a876858", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5add3202082f40197d4fa3a8e82909193a876858", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5add3202082f40197d4fa3a8e82909193a876858", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5add3202082f40197d4fa3a8e82909193a876858/comments", "author": null, "committer": null, "parents": [{"sha": "65a8189ea77a75afeb8847970fc9373969ebd247", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65a8189ea77a75afeb8847970fc9373969ebd247", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65a8189ea77a75afeb8847970fc9373969ebd247"}], "stats": {"total": 79, "additions": 40, "deletions": 39}, "files": [{"sha": "dedab93d1100b56c7044897e8db19d2189b8b695", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5add3202082f40197d4fa3a8e82909193a876858/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5add3202082f40197d4fa3a8e82909193a876858/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5add3202082f40197d4fa3a8e82909193a876858", "patch": "@@ -1,3 +1,17 @@\n+2002-09-10  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* rs6000.c (rs6000_assemble_visibility): Protect declaration\n+\tinside macro.  Correct function definition typo.\n+\t(rs6000_xcoff_section_type_flags): New function.\n+\t(TARGET_SECTION_TYPE_FLAGS): Remove definition.\n+\t(rs6000_elf_section_type_flags): Call default_section_type_flags_1\n+\twith appropriate PIC test.\n+\t(rs6000_xcoff_select_section): Use decl_readonly_section_1 to\n+\tdetermine readonly.\n+\t(rs6000_binds_local_p): Combine PIC flags.\n+\t* sysv4.h (TARGET_SECTION_TYPE_FLAGS): Define.\n+\t* xcoff.h (TARGET_SECTION_TYPE_FLAGS): Define.\n+\n 2002-09-09  Per Bothner  <per@bothner.com>\n \n \t* print-tree.c (print_node):  In a STRING_CST, escape non-ascii"}, {"sha": "c6cf09522d6eeafb480fc90b726e65dcdb30287a", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 20, "deletions": 30, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5add3202082f40197d4fa3a8e82909193a876858/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5add3202082f40197d4fa3a8e82909193a876858/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=5add3202082f40197d4fa3a8e82909193a876858", "patch": "@@ -186,7 +186,9 @@ static void toc_hash_mark_table PARAMS ((void *));\n static int constant_pool_expr_1 PARAMS ((rtx, int *, int *));\n static struct machine_function * rs6000_init_machine_status PARAMS ((void));\n static bool rs6000_assemble_integer PARAMS ((rtx, unsigned int, int));\n+#ifdef HAVE_GAS_HIDDEN\n static void rs6000_assemble_visibility PARAMS ((tree, const char *));\n+#endif\n static int rs6000_ra_ever_killed PARAMS ((void));\n static tree rs6000_handle_longcall_attribute PARAMS ((tree *, tree, tree, int, bool *));\n const struct attribute_spec rs6000_attribute_table[];\n@@ -219,6 +221,7 @@ static void rs6000_xcoff_unique_section PARAMS ((tree, int));\n static void rs6000_xcoff_select_rtx_section PARAMS ((enum machine_mode, rtx,\n \t\t\t\t\t\t     unsigned HOST_WIDE_INT));\n static const char * rs6000_xcoff_strip_name_encoding PARAMS ((const char *));\n+static unsigned int rs6000_xcoff_section_type_flags PARAMS ((tree, const char *, int));\n #endif\n static void rs6000_xcoff_encode_section_info PARAMS ((tree, int))\n      ATTRIBUTE_UNUSED;\n@@ -355,11 +358,6 @@ static const char alt_reg_names[][8] =\n #undef TARGET_ASM_FUNCTION_EPILOGUE\n #define TARGET_ASM_FUNCTION_EPILOGUE rs6000_output_function_epilogue\n \n-#if TARGET_ELF\n-#undef TARGET_SECTION_TYPE_FLAGS\n-#define TARGET_SECTION_TYPE_FLAGS  rs6000_elf_section_type_flags\n-#endif\n-\n #undef TARGET_SCHED_ISSUE_RATE\n #define TARGET_SCHED_ISSUE_RATE rs6000_issue_rate\n #undef TARGET_SCHED_ADJUST_COST\n@@ -8163,7 +8161,7 @@ rs6000_assemble_integer (x, size, aligned_p)\n /* Emit an assembler directive to set symbol visibility for DECL to\n    VISIBILITY_TYPE.  */\n \n-void\n+static void\n rs6000_assemble_visibility (decl, visibility_type)\n      tree decl;\n      const char *visibility_type;\n@@ -12992,7 +12990,9 @@ rs6000_elf_section_type_flags (decl, name, reloc)\n      const char *name;\n      int reloc;\n {\n-  unsigned int flags = default_section_type_flags (decl, name, reloc);\n+  unsigned int flags\n+    = default_section_type_flags_1 (decl, name, reloc,\n+\t\t\t\t    flag_pic || DEFAULT_ABI == ABI_AIX);\n \n   if (TARGET_RELOCATABLE)\n     flags |= SECTION_WRITE;\n@@ -13107,25 +13107,7 @@ rs6000_xcoff_select_section (decl, reloc, align)\n      int reloc;\n      unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED;\n {\n-  bool readonly = false;\n-\n-  if (TREE_CODE (decl) == STRING_CST)\n-    readonly = !flag_writable_strings;\n-  else if (TREE_CODE (decl) == VAR_DECL)\n-    readonly = (!reloc\n-\t\t&& TREE_READONLY (decl)\n-\t\t&& !TREE_SIDE_EFFECTS (decl)\n-\t\t&& DECL_INITIAL (decl)\n-\t\t&& DECL_INITIAL (decl) != error_mark_node\n-\t\t&& TREE_CONSTANT (DECL_INITIAL (decl)));\n-  else if (TREE_CODE (decl) == CONSTRUCTOR)\n-    readonly = (!reloc\n-\t\t&& !TREE_SIDE_EFFECTS (decl)\n-\t\t&& TREE_CONSTANT (decl));\n-  else\n-    readonly = !reloc;\n-\n-  if (readonly)\n+  if (decl_readonly_section_1 (decl, reloc, 1))\n     {\n       if (TREE_PUBLIC (decl))\n         read_only_data_section ();\n@@ -13195,6 +13177,17 @@ rs6000_xcoff_strip_name_encoding (name)\n     return name;\n }\n \n+/* Section attributes.  AIX is always PIC.  */\n+\n+static unsigned int\n+rs6000_xcoff_section_type_flags (decl, name, reloc)\n+     tree decl;\n+     const char *name;\n+     int reloc;\n+{\n+  return default_section_type_flags_1 (decl, name, reloc, 1);\n+}\n+\n #endif /* TARGET_XCOFF */\n \n /* Note that this is also used for PPC64 Linux.  */\n@@ -13217,9 +13210,6 @@ static bool\n rs6000_binds_local_p (decl)\n      tree decl;\n {\n-  if (DEFAULT_ABI == ABI_AIX)\n-    return default_binds_local_p_1 (decl, rs6000_flag_pic);\n-  else\n-    return default_binds_local_p_1 (decl, flag_pic);\n+  return default_binds_local_p_1 (decl, flag_pic || rs6000_flag_pic);\n }\n "}, {"sha": "89b12a5f20ae401fdbf1fd3782f722586c0d0f81", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5add3202082f40197d4fa3a8e82909193a876858/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5add3202082f40197d4fa3a8e82909193a876858/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=5add3202082f40197d4fa3a8e82909193a876858", "patch": "@@ -789,6 +789,7 @@ extern int fixuplabelno;\n #define TARGET_ENCODE_SECTION_INFO  rs6000_elf_encode_section_info\n #define TARGET_STRIP_NAME_ENCODING  rs6000_elf_strip_name_encoding\n #define TARGET_IN_SMALL_DATA_P  rs6000_elf_in_small_data_p\n+#define TARGET_SECTION_TYPE_FLAGS  rs6000_elf_section_type_flags\n \n /* The ELF version doesn't encode [DS] or whatever at the end of symbols.  */\n "}, {"sha": "dbe18ead29db98e79b17598f9bda38e2e4f80e62", "filename": "gcc/config/rs6000/xcoff.h", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5add3202082f40197d4fa3a8e82909193a876858/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5add3202082f40197d4fa3a8e82909193a876858/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxcoff.h?ref=5add3202082f40197d4fa3a8e82909193a876858", "patch": "@@ -161,9 +161,14 @@ toc_section ()\t\t\t\t\t\t\\\n \t       || (GET_MODE_CLASS (GET_MODE (X)) == MODE_FLOAT\t\t\\\n \t\t   && ! TARGET_NO_FP_IN_TOC)))))\n \n+#define TARGET_ASM_GLOBALIZE_LABEL  rs6000_xcoff_asm_globalize_label\n+#define TARGET_ASM_NAMED_SECTION  rs6000_xcoff_asm_named_section\n+#define TARGET_ASM_SELECT_SECTION  rs6000_xcoff_select_section\n #define TARGET_ASM_SELECT_RTX_SECTION  rs6000_xcoff_select_rtx_section\n+#define TARGET_ASM_UNIQUE_SECTION  rs6000_xcoff_unique_section\n #define TARGET_ENCODE_SECTION_INFO rs6000_xcoff_encode_section_info\n #define TARGET_STRIP_NAME_ENCODING rs6000_xcoff_strip_name_encoding\n+#define TARGET_SECTION_TYPE_FLAGS  rs6000_xcoff_section_type_flags\n \n /* FP save and restore routines.  */\n #define\tSAVE_FP_PREFIX \"._savef\"\n@@ -411,15 +416,6 @@ toc_section ()\t\t\t\t\t\t\\\n    Align entire section to BIGGEST_ALIGNMENT.  */\n #define DATA_SECTION_ASM_OP \"\\t.csect .data[RW],3\"\n \n-/* Define unique section name -- functions only.  */\n-#define TARGET_ASM_UNIQUE_SECTION  rs6000_xcoff_unique_section\n-\n-/* Switch into a generic section.  */\n-#define TARGET_ASM_NAMED_SECTION  rs6000_xcoff_asm_named_section\n-\n-/* Globalize a label.  */\n-#define TARGET_ASM_GLOBALIZE_LABEL  rs6000_xcoff_asm_globalize_label\n-\n /* Define the name of the section to use for the EH language specific\n    data areas (.gcc_except_table on most other systems).  */\n #define TARGET_ASM_EXCEPTION_SECTION data_section"}]}