{"sha": "5feeae18a70af92e0df10b09f6c8ffb3c345053c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZlZWFlMThhNzBhZjkyZTBkZjEwYjA5ZjZjOGZmYjNjMzQ1MDUzYw==", "commit": {"author": {"name": "Andy Hutchinson", "email": "hutchinsonandy@aim.com", "date": "2008-07-02T22:31:11Z"}, "committer": {"name": "Andy Hutchinson", "email": "hutchinsonandy@gcc.gnu.org", "date": "2008-07-02T22:31:11Z"}, "message": "re PR testsuite/36285 (gcc.dg/compat/struct-by-value-xxx improper test for AVR target)\n\nPR testsuite/36285\n* gcc.dg/compat/struct-by-value-16_x.c: Move some tests to new file to reduce code size.\n* gcc.dg/compat/struct-by-value-16_y.c: Ditto.\n* gcc.dg/compat/struct-by-value-16a_main.c: New file.\n* gcc.dg/compat/struct-by-value-16a_x.c: Ditto.\n* gcc.dg/compat/struct-by-value-16a_y.c: Ditto.\n* gcc.dg/compat/struct-by-value-17_x.c: Move some tests to new file to reduce code size.\n* gcc.dg/compat/struct-by-value-17_y.c: Ditto.\n* gcc.dg/compat/struct-by-value-17a_main.c: New file.\n* gcc.dg/compat/struct-by-value-17a_x.c: Ditto.\n* gcc.dg/compat/struct-by-value-17a_y.c: Ditto.\n* gcc.dg/compat/struct-by-value-18_x.c: Move some tests to new file to reduce code size.\n* gcc.dg/compat/struct-by-value-18_y.c: Ditto.\n* gcc.dg/compat/struct-by-value-18a_main.c: New file.\n* gcc.dg/compat/struct-by-value-18a_x.c: Ditto.\n* gcc.dg/compat/struct-by-value-18a_y.c: Ditto.\n\nFrom-SVN: r137396", "tree": {"sha": "018cdc7e85653b2c7bbedcdd7923168981862dcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/018cdc7e85653b2c7bbedcdd7923168981862dcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5feeae18a70af92e0df10b09f6c8ffb3c345053c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5feeae18a70af92e0df10b09f6c8ffb3c345053c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5feeae18a70af92e0df10b09f6c8ffb3c345053c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5feeae18a70af92e0df10b09f6c8ffb3c345053c/comments", "author": null, "committer": null, "parents": [{"sha": "d47a9a8e14391207442d93584394cd7d9fcd030e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d47a9a8e14391207442d93584394cd7d9fcd030e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d47a9a8e14391207442d93584394cd7d9fcd030e"}], "stats": {"total": 360, "additions": 324, "deletions": 36}, "files": [{"sha": "03fc86daef21cbe8397645bd0bc47ae7cb8e9947", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5feeae18a70af92e0df10b09f6c8ffb3c345053c", "patch": "@@ -1,3 +1,26 @@\n+2008-07-02  Andy Hutchinson  <hutchinsonandy@aim.com>\n+\n+\tPR testsuite/36285\n+\t* gcc.dg/compat/struct-by-value-16_x.c: Move some tests to new file \n+\tto reduce code size.\n+\t* gcc.dg/compat/struct-by-value-16_y.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-16a_main.c: New file.\n+\t* gcc.dg/compat/struct-by-value-16a_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-16a_y.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-17_x.c: Move some tests to new file \n+\tto reduce code size.\n+\t* gcc.dg/compat/struct-by-value-17_y.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-17a_main.c: New file.\n+\t* gcc.dg/compat/struct-by-value-17a_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-17a_y.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-18_x.c: Move some tests to new file \n+\tto reduce code size.\n+\t* gcc.dg/compat/struct-by-value-18_y.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-18a_main.c: New file.\n+\t* gcc.dg/compat/struct-by-value-18a_x.c: Ditto.\n+\t* gcc.dg/compat/struct-by-value-18a_y.c: Ditto.\n+\n+\n 2008-07-02  Andy Hutchinson  <hutchinsonandy@aim.com>\n \n \t* gcc.dg/pr36227.c: Correct test for targets where long is"}, {"sha": "eb9959214679bba712324bf1de19188a0bbc46bf", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-16_x.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16_x.c?ref=5feeae18a70af92e0df10b09f6c8ffb3c345053c", "patch": "@@ -19,10 +19,7 @@ TEST(Scf9, _Complex float)\n TEST(Scf10, _Complex float)\n TEST(Scf11, _Complex float)\n TEST(Scf12, _Complex float)\n-TEST(Scf13, _Complex float)\n-TEST(Scf14, _Complex float)\n-TEST(Scf15, _Complex float)\n-TEST(Scf16, _Complex float)\n+\n \n #undef T\n \n@@ -45,10 +42,7 @@ T(Scf9, _Complex float)\n T(Scf10, _Complex float)\n T(Scf11, _Complex float)\n T(Scf12, _Complex float)\n-T(Scf13, _Complex float)\n-T(Scf14, _Complex float)\n-T(Scf15, _Complex float)\n-T(Scf16, _Complex float)\n+\n \n DEBUG_FINI\n "}, {"sha": "9450815e74cf607e67095ba2eff06addfd8e3d85", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-16_y.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16_y.c?ref=5feeae18a70af92e0df10b09f6c8ffb3c345053c", "patch": "@@ -27,7 +27,4 @@ TEST(Scf9, _Complex float)\n TEST(Scf10, _Complex float)\n TEST(Scf11, _Complex float)\n TEST(Scf12, _Complex float)\n-TEST(Scf13, _Complex float)\n-TEST(Scf14, _Complex float)\n-TEST(Scf15, _Complex float)\n-TEST(Scf16, _Complex float)\n+"}, {"sha": "6a71d15b8ec71a156b081458fe2e401054453708", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-16a_main.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16a_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16a_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16a_main.c?ref=5feeae18a70af92e0df10b09f6c8ffb3c345053c", "patch": "@@ -0,0 +1,14 @@\n+/* Test structures passed by value, including to a function with a\r\n+   variable-length argument lists.  All struct members are of type\r\n+   _Complex float.  */\r\n+\r\n+extern void struct_by_value_16_x (void);\r\n+extern void exit (int);\r\n+int fails;\r\n+\r\n+int\r\n+main ()\r\n+{\r\n+  struct_by_value_16a_x ();\r\n+  exit (0);\r\n+}\r"}, {"sha": "0aa45249590fa2eb61558c38203fd089257fd1c3", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-16a_x.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16a_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16a_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16a_x.c?ref=5feeae18a70af92e0df10b09f6c8ffb3c345053c", "patch": "@@ -0,0 +1,37 @@\n+#include \"compat-common.h\"\r\n+\r\n+#include \"fp-struct-defs.h\"\r\n+#include \"fp-struct-check.h\"\r\n+#include \"fp-struct-test-by-value-x.h\"\r\n+\r\n+DEFS(cf, _Complex float)\r\n+CHECKS(cf, _Complex float)\r\n+\r\n+\r\n+TEST(Scf13, _Complex float)\r\n+TEST(Scf14, _Complex float)\r\n+TEST(Scf15, _Complex float)\r\n+TEST(Scf16, _Complex float)\r\n+\r\n+#undef T\r\n+\r\n+void\r\n+struct_by_value_16a_x ()\r\n+{\r\n+DEBUG_INIT\r\n+\r\n+#define T(TYPE, MTYPE) testit##TYPE ();\r\n+\r\n+\r\n+T(Scf13, _Complex float)\r\n+T(Scf14, _Complex float)\r\n+T(Scf15, _Complex float)\r\n+T(Scf16, _Complex float)\r\n+\r\n+DEBUG_FINI\r\n+\r\n+if (fails != 0)\r\n+  abort ();\r\n+\r\n+#undef T\r\n+}\r"}, {"sha": "2fd561ef0449485c5712b4581714f2ef0d7c2f8b", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-16a_y.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16a_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16a_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-16a_y.c?ref=5feeae18a70af92e0df10b09f6c8ffb3c345053c", "patch": "@@ -0,0 +1,22 @@\n+#include <stdarg.h>\r\n+\r\n+#include \"compat-common.h\"\r\n+\r\n+#ifdef SKIP_VA\r\n+const int test_va = 0;\r\n+#else\r\n+const int test_va = 1;\r\n+#endif\r\n+\r\n+#include \"fp-struct-defs.h\"\r\n+#include \"fp-struct-init.h\"\r\n+#include \"fp-struct-test-by-value-y.h\"\r\n+\r\n+DEFS(cf,_Complex float)\r\n+INITS(cf, _Complex float)\r\n+\r\n+\r\n+TEST(Scf13, _Complex float)\r\n+TEST(Scf14, _Complex float)\r\n+TEST(Scf15, _Complex float)\r\n+TEST(Scf16, _Complex float)\r"}, {"sha": "93fd788ea4544983a3c18b4701ea98c64305e764", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-17_x.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17_x.c?ref=5feeae18a70af92e0df10b09f6c8ffb3c345053c", "patch": "@@ -19,10 +19,7 @@ TEST(Scd9, _Complex double)\n TEST(Scd10, _Complex double)\n TEST(Scd11, _Complex double)\n TEST(Scd12, _Complex double)\n-TEST(Scd13, _Complex double)\n-TEST(Scd14, _Complex double)\n-TEST(Scd15, _Complex double)\n-TEST(Scd16, _Complex double)\n+\n \n #undef T\n \n@@ -45,10 +42,7 @@ T(Scd9, _Complex double)\n T(Scd10, _Complex double)\n T(Scd11, _Complex double)\n T(Scd12, _Complex double)\n-T(Scd13, _Complex double)\n-T(Scd14, _Complex double)\n-T(Scd15, _Complex double)\n-T(Scd16, _Complex double)\n+\n \n DEBUG_FINI\n "}, {"sha": "f8ac0a7c15e36c31157a9efe8ae2385a539691c9", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-17_y.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17_y.c?ref=5feeae18a70af92e0df10b09f6c8ffb3c345053c", "patch": "@@ -27,7 +27,4 @@ TEST(Scd9, _Complex double)\n TEST(Scd10, _Complex double)\n TEST(Scd11, _Complex double)\n TEST(Scd12, _Complex double)\n-TEST(Scd13, _Complex double)\n-TEST(Scd14, _Complex double)\n-TEST(Scd15, _Complex double)\n-TEST(Scd16, _Complex double)\n+"}, {"sha": "09746a9d67b8edb1fafe36b93dbf6ee23b5a57d8", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-17a_main.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17a_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17a_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17a_main.c?ref=5feeae18a70af92e0df10b09f6c8ffb3c345053c", "patch": "@@ -0,0 +1,28 @@\n+/* Test structures passed by value, including to a function with a\n+   variable-length argument lists.  All struct members are of type\n+   _Complex double.  */\n+\n+extern void struct_by_value_17_x (void);\n+extern void exit (int);\n+int fails;\n+\n+int\n+main ()\n+{\n+  struct_by_value_17a_x ();\n+  exit (0);\n+}\n+/* Test structures passed by value, including to a function with a\n+   variable-length argument lists.  All struct members are of type\n+   _Complex double.  */\n+\n+extern void struct_by_value_17_x (void);\n+extern void exit (int);\n+int fails;\n+\n+int\n+main ()\n+{\n+  struct_by_value_17a_x ();\n+  exit (0);\n+}"}, {"sha": "0a2b1b0ee1485520b624ba48de9b07e0a377b597", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-17a_x.c", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17a_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17a_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17a_x.c?ref=5feeae18a70af92e0df10b09f6c8ffb3c345053c", "patch": "@@ -0,0 +1,74 @@\n+#include \"compat-common.h\"\n+\n+#include \"fp-struct-defs.h\"\n+#include \"fp-struct-check.h\"\n+#include \"fp-struct-test-by-value-x.h\"\n+\n+DEFS(cd, _Complex double)\n+CHECKS(cd, _Complex double)\n+\n+\n+TEST(Scd13, _Complex double)\n+TEST(Scd14, _Complex double)\n+TEST(Scd15, _Complex double)\n+TEST(Scd16, _Complex double)\n+\n+#undef T\n+\n+void\n+struct_by_value_17a_x ()\n+{\n+DEBUG_INIT\n+\n+#define T(TYPE, MTYPE) testit##TYPE ();\n+\n+\n+T(Scd13, _Complex double)\n+T(Scd14, _Complex double)\n+T(Scd15, _Complex double)\n+T(Scd16, _Complex double)\n+\n+DEBUG_FINI\n+\n+if (fails != 0)\n+  abort ();\n+\n+#undef T\n+}\n+#include \"compat-common.h\"\n+\n+#include \"fp-struct-defs.h\"\n+#include \"fp-struct-check.h\"\n+#include \"fp-struct-test-by-value-x.h\"\n+\n+DEFS(cd, _Complex double)\n+CHECKS(cd, _Complex double)\n+\n+\n+TEST(Scd13, _Complex double)\n+TEST(Scd14, _Complex double)\n+TEST(Scd15, _Complex double)\n+TEST(Scd16, _Complex double)\n+\n+#undef T\n+\n+void\n+struct_by_value_17a_x ()\n+{\n+DEBUG_INIT\n+\n+#define T(TYPE, MTYPE) testit##TYPE ();\n+\n+\n+T(Scd13, _Complex double)\n+T(Scd14, _Complex double)\n+T(Scd15, _Complex double)\n+T(Scd16, _Complex double)\n+\n+DEBUG_FINI\n+\n+if (fails != 0)\n+  abort ();\n+\n+#undef T\n+}"}, {"sha": "d435d09ab84c93b34222c454720a84dafdf2f9e1", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-17a_y.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17a_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17a_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-17a_y.c?ref=5feeae18a70af92e0df10b09f6c8ffb3c345053c", "patch": "@@ -0,0 +1,44 @@\n+#include <stdarg.h>\n+\n+#include \"compat-common.h\"\n+\n+#ifdef SKIP_VA\n+const int test_va = 0;\n+#else\n+const int test_va = 1;\n+#endif\n+\n+#include \"fp-struct-defs.h\"\n+#include \"fp-struct-init.h\"\n+#include \"fp-struct-test-by-value-y.h\"\n+\n+DEFS(cd,_Complex double)\n+INITS(cd, _Complex double)\n+\n+\n+TEST(Scd13, _Complex double)\n+TEST(Scd14, _Complex double)\n+TEST(Scd15, _Complex double)\n+TEST(Scd16, _Complex double)\n+#include <stdarg.h>\n+\n+#include \"compat-common.h\"\n+\n+#ifdef SKIP_VA\n+const int test_va = 0;\n+#else\n+const int test_va = 1;\n+#endif\n+\n+#include \"fp-struct-defs.h\"\n+#include \"fp-struct-init.h\"\n+#include \"fp-struct-test-by-value-y.h\"\n+\n+DEFS(cd,_Complex double)\n+INITS(cd, _Complex double)\n+\n+\n+TEST(Scd13, _Complex double)\n+TEST(Scd14, _Complex double)\n+TEST(Scd15, _Complex double)\n+TEST(Scd16, _Complex double)"}, {"sha": "f9dd6aa0b72bc3ef65e2a2a31d9f2642a741abf8", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-18_x.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18_x.c?ref=5feeae18a70af92e0df10b09f6c8ffb3c345053c", "patch": "@@ -19,10 +19,7 @@ TEST(Scld9, _Complex long double)\n TEST(Scld10, _Complex long double)\n TEST(Scld11, _Complex long double)\n TEST(Scld12, _Complex long double)\n-TEST(Scld13, _Complex long double)\n-TEST(Scld14, _Complex long double)\n-TEST(Scld15, _Complex long double)\n-TEST(Scld16, _Complex long double)\n+\n \n #undef T\n \n@@ -45,10 +42,7 @@ T(Scld9, _Complex long double)\n T(Scld10, _Complex long double)\n T(Scld11, _Complex long double)\n T(Scld12, _Complex long double)\n-T(Scld13, _Complex long double)\n-T(Scld14, _Complex long double)\n-T(Scld15, _Complex long double)\n-T(Scld16, _Complex long double)\n+\n \n DEBUG_FINI\n "}, {"sha": "8c732d58273d3754f43f1af86dc9a00fcf0f00ed", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-18_y.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18_y.c?ref=5feeae18a70af92e0df10b09f6c8ffb3c345053c", "patch": "@@ -27,7 +27,4 @@ TEST(Scld9, _Complex long double)\n TEST(Scld10, _Complex long double)\n TEST(Scld11, _Complex long double)\n TEST(Scld12, _Complex long double)\n-TEST(Scld13, _Complex long double)\n-TEST(Scld14, _Complex long double)\n-TEST(Scld15, _Complex long double)\n-TEST(Scld16, _Complex long double)\n+"}, {"sha": "5b9dfd983b4e97018bcf5f7c2eeaa2f1e72a667a", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-18a_main.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18a_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18a_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18a_main.c?ref=5feeae18a70af92e0df10b09f6c8ffb3c345053c", "patch": "@@ -0,0 +1,14 @@\n+/* Test structures passed by value, including to a function with a\r\n+   variable-length argument lists.  All struct members are of type\r\n+   _Complex long double.  */\r\n+\r\n+extern void struct_by_value_18_x (void);\r\n+extern void exit (int);\r\n+int fails;\r\n+\r\n+int\r\n+main ()\r\n+{\r\n+  struct_by_value_18a_x ();\r\n+  exit (0);\r\n+}\r"}, {"sha": "72f5bbf5d44d6653265c1db3e342cbf37169faad", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-18a_x.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18a_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18a_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18a_x.c?ref=5feeae18a70af92e0df10b09f6c8ffb3c345053c", "patch": "@@ -0,0 +1,37 @@\n+#include \"compat-common.h\"\r\n+\r\n+#include \"fp-struct-defs.h\"\r\n+#include \"fp-struct-check.h\"\r\n+#include \"fp-struct-test-by-value-x.h\"\r\n+\r\n+DEFS(cld, _Complex long double)\r\n+CHECKS(cld, _Complex long double)\r\n+\r\n+\r\n+TEST(Scld13, _Complex long double)\r\n+TEST(Scld14, _Complex long double)\r\n+TEST(Scld15, _Complex long double)\r\n+TEST(Scld16, _Complex long double)\r\n+\r\n+#undef T\r\n+\r\n+void\r\n+struct_by_value_18a_x ()\r\n+{\r\n+DEBUG_INIT\r\n+\r\n+#define T(TYPE, MTYPE) testit##TYPE ();\r\n+\r\n+\r\n+T(Scld13, _Complex long double)\r\n+T(Scld14, _Complex long double)\r\n+T(Scld15, _Complex long double)\r\n+T(Scld16, _Complex long double)\r\n+\r\n+DEBUG_FINI\r\n+\r\n+if (fails != 0)\r\n+  abort ();\r\n+\r\n+#undef T\r\n+}\r"}, {"sha": "545dcf8970f4cfd236e295a4375b93ff00312c13", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-18a_y.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18a_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feeae18a70af92e0df10b09f6c8ffb3c345053c/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18a_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-18a_y.c?ref=5feeae18a70af92e0df10b09f6c8ffb3c345053c", "patch": "@@ -0,0 +1,22 @@\n+#include <stdarg.h>\r\n+\r\n+#include \"compat-common.h\"\r\n+\r\n+#ifdef SKIP_VA\r\n+const int test_va = 0;\r\n+#else\r\n+const int test_va = 1;\r\n+#endif\r\n+\r\n+#include \"fp-struct-defs.h\"\r\n+#include \"fp-struct-init.h\"\r\n+#include \"fp-struct-test-by-value-y.h\"\r\n+\r\n+DEFS(cld,_Complex long double)\r\n+INITS(cld, _Complex long double)\r\n+\r\n+\r\n+TEST(Scld13, _Complex long double)\r\n+TEST(Scld14, _Complex long double)\r\n+TEST(Scld15, _Complex long double)\r\n+TEST(Scld16, _Complex long double)\r"}]}