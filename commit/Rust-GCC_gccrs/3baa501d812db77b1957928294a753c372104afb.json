{"sha": "3baa501d812db77b1957928294a753c372104afb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JhYTUwMWQ4MTJkYjc3YjE5NTc5MjgyOTRhNzUzYzM3MjEwNGFmYg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-10-29T09:35:38Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-10-29T09:35:38Z"}, "message": "cp-tree.h (make_typename_type): Change prototype.\n\n\t* cp-tree.h (make_typename_type): Change prototype.\n\t* decl.c (make_typename_type): Only complain if so requested.\n\t* parse.y (nested_name_specifier): Adjust calls.\n\t(typename_sub0): Likewise.\n\t(typename_sub1): Likewise.\n\t* parse.c: Regenerated.\n\t* pt.c (convert_template_argument): Pass complain to\n\tmake_typename_type.\n\t(tsubst): Likewise.\n\nFrom-SVN: r30254", "tree": {"sha": "b5d1030d39c296581c1c09b6b6cf948aa5c89f56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5d1030d39c296581c1c09b6b6cf948aa5c89f56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3baa501d812db77b1957928294a753c372104afb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3baa501d812db77b1957928294a753c372104afb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3baa501d812db77b1957928294a753c372104afb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3baa501d812db77b1957928294a753c372104afb/comments", "author": null, "committer": null, "parents": [{"sha": "aeaa597325e62554abf8861d2e317f3f725f8e95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeaa597325e62554abf8861d2e317f3f725f8e95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeaa597325e62554abf8861d2e317f3f725f8e95"}], "stats": {"total": 548, "additions": 301, "deletions": 247}, "files": [{"sha": "cee60ef10bd7c9fa092a1ae3be6f752f2d5ee081", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3baa501d812db77b1957928294a753c372104afb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3baa501d812db77b1957928294a753c372104afb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3baa501d812db77b1957928294a753c372104afb", "patch": "@@ -1,3 +1,15 @@\n+1999-10-29  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* cp-tree.h (make_typename_type): Change prototype.\n+\t* decl.c (make_typename_type): Only complain if so requested.\n+\t* parse.y (nested_name_specifier): Adjust calls.\n+\t(typename_sub0): Likewise.\n+\t(typename_sub1): Likewise.\n+\t* parse.c: Regenerated.\n+\t* pt.c (convert_template_argument): Pass complain to\n+\tmake_typename_type.\n+\t(tsubst): Likewise.\n+\t\n 1999-10-28  Mark Mitchell  <mark@codesourcery.com>\n \n \t* semantics.c (finish_handler): End the scope of the handler"}, {"sha": "529fce46a20e8201af9a7336ea64ef42c291448f", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3baa501d812db77b1957928294a753c372104afb/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3baa501d812db77b1957928294a753c372104afb/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=3baa501d812db77b1957928294a753c372104afb", "patch": "@@ -3403,7 +3403,7 @@ extern tree namespace_binding                   PROTO((tree, tree));\n extern void set_namespace_binding               PROTO((tree, tree, tree));\n extern tree lookup_namespace_name\t\tPROTO((tree, tree));\n extern tree build_typename_type                 PROTO((tree, tree, tree, tree));\n-extern tree make_typename_type\t\t\tPROTO((tree, tree));\n+extern tree make_typename_type\t\t\tPROTO((tree, tree, int));\n extern tree lookup_name_nonclass\t\tPROTO((tree));\n extern tree lookup_function_nonclass            PROTO((tree, tree));\n extern tree lookup_name\t\t\t\tPROTO((tree, int));"}, {"sha": "00b52e44903d06304470248931111f9beeb3293a", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3baa501d812db77b1957928294a753c372104afb/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3baa501d812db77b1957928294a753c372104afb/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=3baa501d812db77b1957928294a753c372104afb", "patch": "@@ -5277,9 +5277,14 @@ build_typename_type (context, name, fullname, base_type)\n   return t;\n }\n \n+/* Resolve `typename CONTEXT::NAME'.  Returns an appropriate type,\n+   unless an error occurs, in which case error_mark_node is returned.\n+   If COMPLAIN zero, don't complain about any errors that occur.  */\n+\n tree\n-make_typename_type (context, name)\n+make_typename_type (context, name, complain)\n      tree context, name;\n+     int complain;\n {\n   tree fullname;\n \n@@ -5313,8 +5318,9 @@ make_typename_type (context, name)\n     {\n       /* We can get here from typename_sub0 in the explicit_template_type\n \t expansion.  Just fail.  */\n-      cp_error (\"no class template named `%#T' in `%#T'\",\n-\t\tname, context);\n+      if (complain)\n+\tcp_error (\"no class template named `%#T' in `%#T'\",\n+\t\t  name, context);\n       return error_mark_node;\n     }\n \n@@ -5328,8 +5334,9 @@ make_typename_type (context, name)\n \t    tmpl = lookup_field (context, name, 0, 0);\n \t  if (!tmpl || !DECL_CLASS_TEMPLATE_P (tmpl))\n \t    {\n-\t      cp_error (\"no class template named `%#T' in `%#T'\",\n-\t\t\tname, context);\n+\t      if (complain)\n+\t\tcp_error (\"no class template named `%#T' in `%#T'\",\n+\t\t\t  name, context);\n \t      return error_mark_node;\n \t    }\n \n@@ -5344,7 +5351,8 @@ make_typename_type (context, name)\n           \n \t  if (!IS_AGGR_TYPE (context))\n \t    {\n-\t      cp_error (\"no type named `%#T' in `%#T'\", name, context);\n+\t      if (complain)\n+\t\tcp_error (\"no type named `%#T' in `%#T'\", name, context);\n \t      return error_mark_node;\n \t    }\n \n@@ -5358,7 +5366,8 @@ make_typename_type (context, name)\n      there now or its never going to be.  */\n   if (!uses_template_parms (context))\n     {\n-      cp_error (\"no type named `%#T' in `%#T'\", name, context);\n+      if (complain)\n+\tcp_error (\"no type named `%#T' in `%#T'\", name, context);\n       return error_mark_node;\n     }\n     "}, {"sha": "4ceeea6e538524256929595b36fc22bfa6b16102", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 233, "deletions": 230, "changes": 463, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3baa501d812db77b1957928294a753c372104afb/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3baa501d812db77b1957928294a753c372104afb/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=3baa501d812db77b1957928294a753c372104afb", "patch": "@@ -721,30 +721,30 @@ static const short yyrline[] = { 0,\n   2800,  2802,  2804,  2806,  2810,  2813,  2816,  2818,  2820,  2822,\n   2826,  2829,  2832,  2834,  2836,  2838,  2840,  2847,  2851,  2856,\n   2860,  2865,  2867,  2871,  2874,  2876,  2879,  2881,  2882,  2885,\n-  2887,  2889,  2895,  2906,  2912,  2918,  2932,  2934,  2938,  2952,\n-  2954,  2956,  2960,  2966,  2979,  2981,  2985,  2998,  3004,  3006,\n-  3007,  3008,  3016,  3021,  3030,  3031,  3035,  3038,  3044,  3050,\n-  3053,  3055,  3057,  3059,  3063,  3067,  3071,  3074,  3078,  3080,\n-  3089,  3092,  3094,  3096,  3098,  3100,  3102,  3104,  3106,  3110,\n-  3114,  3118,  3122,  3124,  3126,  3128,  3130,  3132,  3134,  3136,\n-  3138,  3146,  3148,  3149,  3150,  3153,  3159,  3161,  3166,  3168,\n-  3171,  3184,  3187,  3190,  3194,  3197,  3204,  3206,  3209,  3211,\n-  3213,  3216,  3219,  3222,  3225,  3227,  3230,  3234,  3236,  3242,\n-  3244,  3245,  3247,  3252,  3254,  3256,  3258,  3260,  3263,  3264,\n-  3266,  3269,  3270,  3273,  3273,  3276,  3276,  3279,  3279,  3281,\n-  3283,  3285,  3287,  3293,  3299,  3302,  3305,  3311,  3313,  3314,\n-  3317,  3319,  3320,  3321,  3323,  3326,  3329,  3332,  3338,  3342,\n-  3344,  3347,  3349,  3352,  3356,  3358,  3361,  3363,  3366,  3383,\n-  3391,  3394,  3396,  3398,  3402,  3405,  3406,  3414,  3418,  3422,\n-  3425,  3426,  3432,  3435,  3438,  3440,  3444,  3449,  3452,  3462,\n-  3467,  3468,  3475,  3478,  3481,  3483,  3486,  3488,  3498,  3512,\n-  3516,  3519,  3521,  3525,  3529,  3532,  3535,  3537,  3541,  3543,\n-  3550,  3557,  3560,  3564,  3568,  3572,  3578,  3582,  3587,  3589,\n-  3592,  3597,  3603,  3614,  3617,  3619,  3623,  3631,  3634,  3638,\n-  3641,  3643,  3645,  3651,  3656,  3659,  3661,  3663,  3665,  3667,\n-  3669,  3671,  3673,  3675,  3677,  3679,  3681,  3683,  3685,  3687,\n-  3689,  3691,  3693,  3695,  3697,  3699,  3701,  3703,  3705,  3707,\n-  3709,  3711,  3713,  3715,  3717,  3719,  3721,  3724,  3726\n+  2887,  2889,  2896,  2907,  2913,  2919,  2933,  2935,  2939,  2953,\n+  2955,  2957,  2961,  2967,  2980,  2983,  2988,  3001,  3007,  3009,\n+  3010,  3011,  3019,  3024,  3033,  3034,  3038,  3041,  3047,  3053,\n+  3056,  3058,  3060,  3062,  3066,  3070,  3074,  3077,  3081,  3083,\n+  3092,  3095,  3097,  3099,  3101,  3103,  3105,  3107,  3109,  3113,\n+  3117,  3121,  3125,  3127,  3129,  3131,  3133,  3135,  3137,  3139,\n+  3141,  3149,  3151,  3152,  3153,  3156,  3162,  3164,  3169,  3171,\n+  3174,  3187,  3190,  3193,  3197,  3200,  3207,  3209,  3212,  3214,\n+  3216,  3219,  3222,  3225,  3228,  3230,  3233,  3237,  3239,  3245,\n+  3247,  3248,  3250,  3255,  3257,  3259,  3261,  3263,  3266,  3267,\n+  3269,  3272,  3273,  3276,  3276,  3279,  3279,  3282,  3282,  3284,\n+  3286,  3288,  3290,  3296,  3302,  3305,  3308,  3314,  3316,  3317,\n+  3320,  3322,  3323,  3324,  3326,  3329,  3332,  3335,  3341,  3345,\n+  3347,  3350,  3352,  3355,  3359,  3361,  3364,  3366,  3369,  3386,\n+  3394,  3397,  3399,  3401,  3405,  3408,  3409,  3417,  3421,  3425,\n+  3428,  3429,  3435,  3438,  3441,  3443,  3447,  3452,  3455,  3465,\n+  3470,  3471,  3478,  3481,  3484,  3486,  3489,  3491,  3501,  3515,\n+  3519,  3522,  3524,  3528,  3532,  3535,  3538,  3540,  3544,  3546,\n+  3553,  3560,  3563,  3567,  3571,  3575,  3581,  3585,  3590,  3592,\n+  3595,  3600,  3606,  3617,  3620,  3622,  3626,  3634,  3637,  3641,\n+  3644,  3646,  3648,  3654,  3659,  3662,  3664,  3666,  3668,  3670,\n+  3672,  3674,  3676,  3678,  3680,  3682,  3684,  3686,  3688,  3690,\n+  3692,  3694,  3696,  3698,  3700,  3702,  3704,  3706,  3708,  3710,\n+  3712,  3714,  3716,  3718,  3720,  3722,  3724,  3727,  3729\n };\n #endif\n \n@@ -7182,10 +7182,11 @@ case 641:\n     break;}\n case 642:\n #line 2890 \"parse.y\"\n-{ got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n+{ got_scope = yyval.ttype \n+\t\t    = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype, /*complain=*/1); ;\n     break;}\n case 643:\n-#line 2897 \"parse.y\"\n+#line 2898 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -7197,34 +7198,34 @@ case 643:\n \t\t;\n     break;}\n case 644:\n-#line 2907 \"parse.y\"\n+#line 2908 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = TREE_TYPE (yyval.ttype);\n \t\t;\n     break;}\n case 645:\n-#line 2913 \"parse.y\"\n+#line 2914 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 646:\n-#line 2919 \"parse.y\"\n+#line 2920 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyvsp[-1].ttype)); ;\n     break;}\n case 648:\n-#line 2935 \"parse.y\"\n+#line 2936 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 649:\n-#line 2940 \"parse.y\"\n+#line 2941 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n-\t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n+\t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype, /*complain=*/1);\n \t\t  else if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    cp_error (\"`%T' is not a class or namespace\", yyvsp[0].ttype);\n \t\t  else\n@@ -7236,29 +7237,29 @@ case 649:\n \t\t;\n     break;}\n case 650:\n-#line 2953 \"parse.y\"\n+#line 2954 \"parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[0].ttype); ;\n     break;}\n case 651:\n-#line 2955 \"parse.y\"\n-{ yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n+#line 2956 \"parse.y\"\n+{ yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype, /*complain=*/1); ;\n     break;}\n case 652:\n-#line 2957 \"parse.y\"\n-{ yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n+#line 2958 \"parse.y\"\n+{ yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[0].ttype, /*complain=*/1); ;\n     break;}\n case 653:\n-#line 2962 \"parse.y\"\n+#line 2963 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    cp_error (\"`%T' is not a class or namespace\", yyvsp[0].ttype);\n \t\t;\n     break;}\n case 654:\n-#line 2967 \"parse.y\"\n+#line 2968 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n-\t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n+\t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype, /*complain=*/1);\n \t\t  else if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    cp_error (\"`%T' is not a class or namespace\", yyvsp[0].ttype);\n \t\t  else\n@@ -7270,15 +7271,17 @@ case 654:\n \t\t;\n     break;}\n case 655:\n-#line 2980 \"parse.y\"\n-{ got_scope = yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n+#line 2981 \"parse.y\"\n+{ got_scope = yyval.ttype \n+\t\t    = make_typename_type (yyvsp[-2].ttype, yyvsp[-1].ttype, /*complain=*/1); ;\n     break;}\n case 656:\n-#line 2982 \"parse.y\"\n-{ got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n+#line 2984 \"parse.y\"\n+{ got_scope = yyval.ttype \n+\t\t    = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype, /*complain=*/1); ;\n     break;}\n case 657:\n-#line 2987 \"parse.y\"\n+#line 2990 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyvsp[-1].ttype = lastiddecl;\n@@ -7292,31 +7295,31 @@ case 657:\n \t\t;\n     break;}\n case 658:\n-#line 2999 \"parse.y\"\n+#line 3002 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype));\n \t\t;\n     break;}\n case 659:\n-#line 3005 \"parse.y\"\n+#line 3008 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype)); ;\n     break;}\n case 662:\n-#line 3009 \"parse.y\"\n+#line 3012 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 663:\n-#line 3018 \"parse.y\"\n+#line 3021 \"parse.y\"\n { yyval.ttype = build_min_nt (TEMPLATE_ID_EXPR, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 664:\n-#line 3023 \"parse.y\"\n+#line 3026 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -7326,156 +7329,156 @@ case 664:\n \t\t;\n     break;}\n case 666:\n-#line 3032 \"parse.y\"\n+#line 3035 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 667:\n-#line 3037 \"parse.y\"\n+#line 3040 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 668:\n-#line 3039 \"parse.y\"\n+#line 3042 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; got_scope = NULL_TREE; ;\n     break;}\n case 669:\n-#line 3046 \"parse.y\"\n+#line 3049 \"parse.y\"\n { got_scope = void_type_node; ;\n     break;}\n case 670:\n-#line 3052 \"parse.y\"\n+#line 3055 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 671:\n-#line 3054 \"parse.y\"\n+#line 3057 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 672:\n-#line 3056 \"parse.y\"\n+#line 3059 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 673:\n-#line 3058 \"parse.y\"\n+#line 3061 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 674:\n-#line 3060 \"parse.y\"\n+#line 3063 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 675:\n-#line 3064 \"parse.y\"\n+#line 3067 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 677:\n-#line 3073 \"parse.y\"\n+#line 3076 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 678:\n-#line 3075 \"parse.y\"\n+#line 3078 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 680:\n-#line 3081 \"parse.y\"\n+#line 3084 \"parse.y\"\n {\n \t\t  /* Provide support for '(' attributes '*' declarator ')'\n \t\t     etc */\n \t\t  yyval.ttype = decl_tree_cons (yyvsp[-1].ttype, yyvsp[0].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 681:\n-#line 3091 \"parse.y\"\n+#line 3094 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 682:\n-#line 3093 \"parse.y\"\n+#line 3096 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 683:\n-#line 3095 \"parse.y\"\n+#line 3098 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 684:\n-#line 3097 \"parse.y\"\n+#line 3100 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 685:\n-#line 3099 \"parse.y\"\n+#line 3102 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 686:\n-#line 3101 \"parse.y\"\n+#line 3104 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 687:\n-#line 3103 \"parse.y\"\n+#line 3106 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 688:\n-#line 3105 \"parse.y\"\n+#line 3108 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 689:\n-#line 3107 \"parse.y\"\n+#line 3110 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 690:\n-#line 3111 \"parse.y\"\n+#line 3114 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 692:\n-#line 3120 \"parse.y\"\n+#line 3123 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 693:\n-#line 3123 \"parse.y\"\n+#line 3126 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 694:\n-#line 3125 \"parse.y\"\n+#line 3128 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, empty_parms (), yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 695:\n-#line 3127 \"parse.y\"\n+#line 3130 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 696:\n-#line 3129 \"parse.y\"\n+#line 3132 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 697:\n-#line 3131 \"parse.y\"\n+#line 3134 \"parse.y\"\n { yyval.ttype = make_call_declarator (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 698:\n-#line 3133 \"parse.y\"\n+#line 3136 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 699:\n-#line 3135 \"parse.y\"\n+#line 3138 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 700:\n-#line 3137 \"parse.y\"\n+#line 3140 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 701:\n-#line 3139 \"parse.y\"\n+#line 3142 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 708:\n-#line 3162 \"parse.y\"\n+#line 3165 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids label declarations\"); ;\n     break;}\n case 711:\n-#line 3173 \"parse.y\"\n+#line 3176 \"parse.y\"\n { \n \t\t  while (yyvsp[-1].ttype)\n \t\t    {\n@@ -7485,352 +7488,352 @@ case 711:\n \t\t;\n     break;}\n case 712:\n-#line 3186 \"parse.y\"\n+#line 3189 \"parse.y\"\n {;\n     break;}\n case 714:\n-#line 3192 \"parse.y\"\n+#line 3195 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 715:\n-#line 3194 \"parse.y\"\n+#line 3197 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 716:\n-#line 3199 \"parse.y\"\n+#line 3202 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_if_stmt ();\n \t\t  cond_stmt_keyword = \"if\";\n \t\t;\n     break;}\n case 717:\n-#line 3204 \"parse.y\"\n+#line 3207 \"parse.y\"\n { finish_if_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 718:\n-#line 3206 \"parse.y\"\n+#line 3209 \"parse.y\"\n { yyval.ttype = finish_then_clause (yyvsp[-3].ttype); ;\n     break;}\n case 720:\n-#line 3211 \"parse.y\"\n+#line 3214 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 721:\n-#line 3213 \"parse.y\"\n+#line 3216 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 722:\n-#line 3218 \"parse.y\"\n+#line 3221 \"parse.y\"\n {;\n     break;}\n case 724:\n-#line 3224 \"parse.y\"\n+#line 3227 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 725:\n-#line 3226 \"parse.y\"\n+#line 3229 \"parse.y\"\n { finish_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 726:\n-#line 3228 \"parse.y\"\n+#line 3231 \"parse.y\"\n { begin_else_clause (); ;\n     break;}\n case 727:\n-#line 3230 \"parse.y\"\n+#line 3233 \"parse.y\"\n { \n \t\t  finish_else_clause (yyvsp[-3].ttype); \n \t\t  finish_if_stmt ();\n \t\t;\n     break;}\n case 728:\n-#line 3235 \"parse.y\"\n+#line 3238 \"parse.y\"\n { finish_if_stmt (); ;\n     break;}\n case 729:\n-#line 3237 \"parse.y\"\n+#line 3240 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_while_stmt ();\n \t\t  cond_stmt_keyword = \"while\";\n \t\t;\n     break;}\n case 730:\n-#line 3242 \"parse.y\"\n+#line 3245 \"parse.y\"\n { finish_while_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 731:\n-#line 3244 \"parse.y\"\n+#line 3247 \"parse.y\"\n { finish_while_stmt (yyvsp[-3].ttype); ;\n     break;}\n case 732:\n-#line 3246 \"parse.y\"\n+#line 3249 \"parse.y\"\n { yyval.ttype = begin_do_stmt (); ;\n     break;}\n case 733:\n-#line 3248 \"parse.y\"\n+#line 3251 \"parse.y\"\n {\n \t\t  finish_do_body (yyvsp[-2].ttype);\n \t\t  cond_stmt_keyword = \"do\";\n \t\t;\n     break;}\n case 734:\n-#line 3253 \"parse.y\"\n+#line 3256 \"parse.y\"\n { finish_do_stmt (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 735:\n-#line 3255 \"parse.y\"\n+#line 3258 \"parse.y\"\n { yyval.ttype = begin_for_stmt (); ;\n     break;}\n case 736:\n-#line 3257 \"parse.y\"\n+#line 3260 \"parse.y\"\n { finish_for_init_stmt (yyvsp[-2].ttype); ;\n     break;}\n case 737:\n-#line 3259 \"parse.y\"\n+#line 3262 \"parse.y\"\n { finish_for_cond (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 738:\n-#line 3261 \"parse.y\"\n+#line 3264 \"parse.y\"\n { finish_for_expr (yyvsp[-1].ttype, yyvsp[-8].ttype); ;\n     break;}\n case 739:\n-#line 3263 \"parse.y\"\n+#line 3266 \"parse.y\"\n { finish_for_stmt (yyvsp[-3].ttype, yyvsp[-10].ttype); ;\n     break;}\n case 740:\n-#line 3265 \"parse.y\"\n+#line 3268 \"parse.y\"\n { yyval.ttype = begin_switch_stmt (); ;\n     break;}\n case 741:\n-#line 3267 \"parse.y\"\n+#line 3270 \"parse.y\"\n { finish_switch_cond (yyvsp[-1].ttype, yyvsp[-3].ttype); ;\n     break;}\n case 742:\n-#line 3269 \"parse.y\"\n+#line 3272 \"parse.y\"\n { finish_switch_stmt (yyvsp[-3].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 743:\n-#line 3271 \"parse.y\"\n+#line 3274 \"parse.y\"\n { finish_case_label (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 745:\n-#line 3274 \"parse.y\"\n+#line 3277 \"parse.y\"\n { finish_case_label (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 747:\n-#line 3277 \"parse.y\"\n+#line 3280 \"parse.y\"\n { finish_case_label (NULL_TREE, NULL_TREE); ;\n     break;}\n case 749:\n-#line 3280 \"parse.y\"\n+#line 3283 \"parse.y\"\n { finish_break_stmt (); ;\n     break;}\n case 750:\n-#line 3282 \"parse.y\"\n+#line 3285 \"parse.y\"\n { finish_continue_stmt (); ;\n     break;}\n case 751:\n-#line 3284 \"parse.y\"\n+#line 3287 \"parse.y\"\n { finish_return_stmt (NULL_TREE); ;\n     break;}\n case 752:\n-#line 3286 \"parse.y\"\n+#line 3289 \"parse.y\"\n { finish_return_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 753:\n-#line 3288 \"parse.y\"\n+#line 3291 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 754:\n-#line 3294 \"parse.y\"\n+#line 3297 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 755:\n-#line 3300 \"parse.y\"\n+#line 3303 \"parse.y\"\n { finish_asm_stmt (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 756:\n-#line 3304 \"parse.y\"\n+#line 3307 \"parse.y\"\n { finish_asm_stmt (yyvsp[-10].ttype, yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 757:\n-#line 3306 \"parse.y\"\n+#line 3309 \"parse.y\"\n { \n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids computed gotos\");\n \t\t  finish_goto_stmt (yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 758:\n-#line 3312 \"parse.y\"\n+#line 3315 \"parse.y\"\n { finish_goto_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 760:\n-#line 3315 \"parse.y\"\n+#line 3318 \"parse.y\"\n { error (\"label must be followed by statement\");\n \t\t  yyungetc ('}', 0); ;\n     break;}\n case 761:\n-#line 3318 \"parse.y\"\n+#line 3321 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 764:\n-#line 3322 \"parse.y\"\n+#line 3325 \"parse.y\"\n { do_local_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 766:\n-#line 3328 \"parse.y\"\n+#line 3331 \"parse.y\"\n { yyval.ttype = begin_function_try_block (); ;\n     break;}\n case 767:\n-#line 3330 \"parse.y\"\n+#line 3333 \"parse.y\"\n { finish_function_try_block (yyvsp[-2].ttype); ;\n     break;}\n case 768:\n-#line 3332 \"parse.y\"\n+#line 3335 \"parse.y\"\n {\n \t\t  finish_function_handler_sequence (yyvsp[-4].ttype);\n \t\t  yyval.itype = yyvsp[-3].itype;\n \t\t;\n     break;}\n case 769:\n-#line 3340 \"parse.y\"\n+#line 3343 \"parse.y\"\n { yyval.ttype = begin_try_block (); ;\n     break;}\n case 770:\n-#line 3342 \"parse.y\"\n+#line 3345 \"parse.y\"\n { finish_try_block (yyvsp[-1].ttype); ;\n     break;}\n case 771:\n-#line 3344 \"parse.y\"\n+#line 3347 \"parse.y\"\n { finish_handler_sequence (yyvsp[-3].ttype); ;\n     break;}\n case 774:\n-#line 3354 \"parse.y\"\n+#line 3357 \"parse.y\"\n { yyval.ttype = begin_handler(); ;\n     break;}\n case 775:\n-#line 3356 \"parse.y\"\n+#line 3359 \"parse.y\"\n { yyval.ttype = finish_handler_parms (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 776:\n-#line 3358 \"parse.y\"\n+#line 3361 \"parse.y\"\n { finish_handler (yyvsp[-1].ttype, yyvsp[-3].ttype); ;\n     break;}\n case 779:\n-#line 3368 \"parse.y\"\n+#line 3371 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 780:\n-#line 3384 \"parse.y\"\n+#line 3387 \"parse.y\"\n { \n \t\t  check_for_new_type (\"inside exception declarations\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = start_handler_parms (TREE_PURPOSE (yyvsp[-1].ftype.t),\n \t\t\t\t\t    TREE_VALUE (yyvsp[-1].ftype.t));\n \t\t;\n     break;}\n case 781:\n-#line 3393 \"parse.y\"\n+#line 3396 \"parse.y\"\n { finish_label_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 782:\n-#line 3395 \"parse.y\"\n+#line 3398 \"parse.y\"\n { finish_label_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 783:\n-#line 3397 \"parse.y\"\n+#line 3400 \"parse.y\"\n { finish_label_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 784:\n-#line 3399 \"parse.y\"\n+#line 3402 \"parse.y\"\n { finish_label_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 785:\n-#line 3404 \"parse.y\"\n+#line 3407 \"parse.y\"\n { finish_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 787:\n-#line 3407 \"parse.y\"\n+#line 3410 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids compound statements inside for initializations\");\n \t\t;\n     break;}\n case 788:\n-#line 3416 \"parse.y\"\n+#line 3419 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 789:\n-#line 3419 \"parse.y\"\n+#line 3422 \"parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 790:\n-#line 3424 \"parse.y\"\n+#line 3427 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 792:\n-#line 3427 \"parse.y\"\n+#line 3430 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 793:\n-#line 3434 \"parse.y\"\n+#line 3437 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 796:\n-#line 3441 \"parse.y\"\n+#line 3444 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 797:\n-#line 3446 \"parse.y\"\n+#line 3449 \"parse.y\"\n { yyval.ttype = build_tree_list (yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 798:\n-#line 3451 \"parse.y\"\n+#line 3454 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyval.ttype, NULL_TREE); ;\n     break;}\n case 799:\n-#line 3453 \"parse.y\"\n+#line 3456 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 800:\n-#line 3464 \"parse.y\"\n+#line 3467 \"parse.y\"\n {\n \t\t  yyval.ttype = empty_parms();\n \t\t;\n     break;}\n case 802:\n-#line 3469 \"parse.y\"\n+#line 3472 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE, yyvsp[0].ftype.t), 0);\n \t\t  check_for_new_type (\"inside parameter list\", yyvsp[0].ftype); ;\n     break;}\n case 803:\n-#line 3477 \"parse.y\"\n+#line 3480 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyval.ttype, 0); ;\n     break;}\n case 804:\n-#line 3479 \"parse.y\"\n+#line 3482 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 805:\n-#line 3482 \"parse.y\"\n+#line 3485 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 806:\n-#line 3484 \"parse.y\"\n+#line 3487 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE,\n \t\t\t\t\t\t\t yyvsp[-1].ftype.t), 1); ;\n     break;}\n case 807:\n-#line 3487 \"parse.y\"\n+#line 3490 \"parse.y\"\n { yyval.ttype = finish_parmlist (NULL_TREE, 1); ;\n     break;}\n case 808:\n-#line 3489 \"parse.y\"\n+#line 3492 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7842,7 +7845,7 @@ case 808:\n \t\t;\n     break;}\n case 809:\n-#line 3499 \"parse.y\"\n+#line 3502 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7855,99 +7858,99 @@ case 809:\n \t\t;\n     break;}\n case 810:\n-#line 3514 \"parse.y\"\n+#line 3517 \"parse.y\"\n { maybe_snarf_defarg (); ;\n     break;}\n case 811:\n-#line 3516 \"parse.y\"\n+#line 3519 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 814:\n-#line 3527 \"parse.y\"\n+#line 3530 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ftype.t); ;\n     break;}\n case 815:\n-#line 3530 \"parse.y\"\n+#line 3533 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 816:\n-#line 3533 \"parse.y\"\n+#line 3536 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = chainon (yyval.ttype, yyvsp[0].ftype.t); ;\n     break;}\n case 817:\n-#line 3536 \"parse.y\"\n+#line 3539 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 818:\n-#line 3538 \"parse.y\"\n+#line 3541 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (yyvsp[0].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 820:\n-#line 3544 \"parse.y\"\n+#line 3547 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); ;\n     break;}\n case 821:\n-#line 3554 \"parse.y\"\n+#line 3557 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); ;\n     break;}\n case 822:\n-#line 3558 \"parse.y\"\n+#line 3561 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 823:\n-#line 3561 \"parse.y\"\n+#line 3564 \"parse.y\"\n { yyval.ftype.t = build_tree_list (build_decl_list (NULL_TREE, yyvsp[-1].ftype.t),\n \t\t\t\t\t  yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 824:\n-#line 3565 \"parse.y\"\n+#line 3568 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 825:\n-#line 3569 \"parse.y\"\n+#line 3572 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[0].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 826:\n-#line 3573 \"parse.y\"\n+#line 3576 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ttype);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 827:\n-#line 3580 \"parse.y\"\n+#line 3583 \"parse.y\"\n { yyval.ftype.t = build_tree_list (NULL_TREE, yyvsp[0].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag;  ;\n     break;}\n case 828:\n-#line 3583 \"parse.y\"\n+#line 3586 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;  ;\n     break;}\n case 831:\n-#line 3594 \"parse.y\"\n+#line 3597 \"parse.y\"\n { see_typename (); ;\n     break;}\n case 832:\n-#line 3599 \"parse.y\"\n+#line 3602 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  yyval.ttype = build_tree_list (integer_type_node, NULL_TREE);\n \t\t;\n     break;}\n case 833:\n-#line 3604 \"parse.y\"\n+#line 3607 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  if (TREE_CODE (yyval.ttype) == SCOPE_REF\n@@ -7958,192 +7961,192 @@ case 833:\n \t\t;\n     break;}\n case 834:\n-#line 3616 \"parse.y\"\n+#line 3619 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 835:\n-#line 3618 \"parse.y\"\n+#line 3621 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 836:\n-#line 3620 \"parse.y\"\n+#line 3623 \"parse.y\"\n { yyval.ttype = empty_except_spec; ;\n     break;}\n case 837:\n-#line 3625 \"parse.y\"\n+#line 3628 \"parse.y\"\n {\n \t\t  check_for_new_type (\"exception specifier\", yyvsp[0].ftype);\n \t\t  yyval.ttype = groktypename (yyvsp[0].ftype.t);\n \t\t;\n     break;}\n case 838:\n-#line 3633 \"parse.y\"\n+#line 3636 \"parse.y\"\n { yyval.ttype = add_exception_specifier (NULL_TREE, yyvsp[0].ttype, 1); ;\n     break;}\n case 839:\n-#line 3635 \"parse.y\"\n+#line 3638 \"parse.y\"\n { yyval.ttype = add_exception_specifier (yyvsp[-2].ttype, yyvsp[0].ttype, 1); ;\n     break;}\n case 840:\n-#line 3640 \"parse.y\"\n+#line 3643 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 841:\n-#line 3642 \"parse.y\"\n+#line 3645 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 842:\n-#line 3644 \"parse.y\"\n+#line 3647 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 843:\n-#line 3646 \"parse.y\"\n+#line 3649 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 844:\n-#line 3653 \"parse.y\"\n+#line 3656 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 845:\n-#line 3658 \"parse.y\"\n+#line 3661 \"parse.y\"\n { yyval.ttype = ansi_opname[MULT_EXPR]; ;\n     break;}\n case 846:\n-#line 3660 \"parse.y\"\n+#line 3663 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_DIV_EXPR]; ;\n     break;}\n case 847:\n-#line 3662 \"parse.y\"\n+#line 3665 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_MOD_EXPR]; ;\n     break;}\n case 848:\n-#line 3664 \"parse.y\"\n+#line 3667 \"parse.y\"\n { yyval.ttype = ansi_opname[PLUS_EXPR]; ;\n     break;}\n case 849:\n-#line 3666 \"parse.y\"\n+#line 3669 \"parse.y\"\n { yyval.ttype = ansi_opname[MINUS_EXPR]; ;\n     break;}\n case 850:\n-#line 3668 \"parse.y\"\n+#line 3671 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_AND_EXPR]; ;\n     break;}\n case 851:\n-#line 3670 \"parse.y\"\n+#line 3673 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_IOR_EXPR]; ;\n     break;}\n case 852:\n-#line 3672 \"parse.y\"\n+#line 3675 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_XOR_EXPR]; ;\n     break;}\n case 853:\n-#line 3674 \"parse.y\"\n+#line 3677 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_NOT_EXPR]; ;\n     break;}\n case 854:\n-#line 3676 \"parse.y\"\n+#line 3679 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPOUND_EXPR]; ;\n     break;}\n case 855:\n-#line 3678 \"parse.y\"\n+#line 3681 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 856:\n-#line 3680 \"parse.y\"\n+#line 3683 \"parse.y\"\n { yyval.ttype = ansi_opname[LT_EXPR]; ;\n     break;}\n case 857:\n-#line 3682 \"parse.y\"\n+#line 3685 \"parse.y\"\n { yyval.ttype = ansi_opname[GT_EXPR]; ;\n     break;}\n case 858:\n-#line 3684 \"parse.y\"\n+#line 3687 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 859:\n-#line 3686 \"parse.y\"\n+#line 3689 \"parse.y\"\n { yyval.ttype = ansi_assopname[yyvsp[0].code]; ;\n     break;}\n case 860:\n-#line 3688 \"parse.y\"\n+#line 3691 \"parse.y\"\n { yyval.ttype = ansi_opname [MODIFY_EXPR]; ;\n     break;}\n case 861:\n-#line 3690 \"parse.y\"\n+#line 3693 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 862:\n-#line 3692 \"parse.y\"\n+#line 3695 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 863:\n-#line 3694 \"parse.y\"\n+#line 3697 \"parse.y\"\n { yyval.ttype = ansi_opname[POSTINCREMENT_EXPR]; ;\n     break;}\n case 864:\n-#line 3696 \"parse.y\"\n+#line 3699 \"parse.y\"\n { yyval.ttype = ansi_opname[PREDECREMENT_EXPR]; ;\n     break;}\n case 865:\n-#line 3698 \"parse.y\"\n+#line 3701 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ANDIF_EXPR]; ;\n     break;}\n case 866:\n-#line 3700 \"parse.y\"\n+#line 3703 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ORIF_EXPR]; ;\n     break;}\n case 867:\n-#line 3702 \"parse.y\"\n+#line 3705 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_NOT_EXPR]; ;\n     break;}\n case 868:\n-#line 3704 \"parse.y\"\n+#line 3707 \"parse.y\"\n { yyval.ttype = ansi_opname[COND_EXPR]; ;\n     break;}\n case 869:\n-#line 3706 \"parse.y\"\n+#line 3709 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 870:\n-#line 3708 \"parse.y\"\n+#line 3711 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPONENT_REF]; ;\n     break;}\n case 871:\n-#line 3710 \"parse.y\"\n+#line 3713 \"parse.y\"\n { yyval.ttype = ansi_opname[MEMBER_REF]; ;\n     break;}\n case 872:\n-#line 3712 \"parse.y\"\n+#line 3715 \"parse.y\"\n { yyval.ttype = ansi_opname[CALL_EXPR]; ;\n     break;}\n case 873:\n-#line 3714 \"parse.y\"\n+#line 3717 \"parse.y\"\n { yyval.ttype = ansi_opname[ARRAY_REF]; ;\n     break;}\n case 874:\n-#line 3716 \"parse.y\"\n+#line 3719 \"parse.y\"\n { yyval.ttype = ansi_opname[NEW_EXPR]; ;\n     break;}\n case 875:\n-#line 3718 \"parse.y\"\n+#line 3721 \"parse.y\"\n { yyval.ttype = ansi_opname[DELETE_EXPR]; ;\n     break;}\n case 876:\n-#line 3720 \"parse.y\"\n+#line 3723 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_NEW_EXPR]; ;\n     break;}\n case 877:\n-#line 3722 \"parse.y\"\n+#line 3725 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_DELETE_EXPR]; ;\n     break;}\n case 878:\n-#line 3725 \"parse.y\"\n+#line 3728 \"parse.y\"\n { yyval.ttype = grokoptypename (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 879:\n-#line 3727 \"parse.y\"\n+#line 3730 \"parse.y\"\n { yyval.ttype = ansi_opname[ERROR_MARK]; ;\n     break;}\n }\n@@ -8368,7 +8371,7 @@ case 879:\n     }\n   return 1;\n }\n-#line 3730 \"parse.y\"\n+#line 3733 \"parse.y\"\n \n \n #ifdef SPEW_DEBUG"}, {"sha": "cb6f5f149b9d2db5a93f07eccba2ee0e9dbd9600", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3baa501d812db77b1957928294a753c372104afb/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3baa501d812db77b1957928294a753c372104afb/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=3baa501d812db77b1957928294a753c372104afb", "patch": "@@ -2887,7 +2887,8 @@ nested_name_specifier:\n \t| nested_name_specifier nested_name_specifier_1\n \t\t{ $$ = $2; }\n \t| nested_name_specifier TEMPLATE explicit_template_type SCOPE\n-\t\t{ got_scope = $$ = make_typename_type ($1, $3); }\n+                { got_scope = $$ \n+\t\t    = make_typename_type ($1, $3, /*complain=*/1); }\n \t;\n \n /* Why the @#$%^& do type_name and notype_identifier need to be expanded\n@@ -2939,7 +2940,7 @@ typename_sub0:\n \t  typename_sub1 identifier %prec EMPTY\n \t\t{\n \t\t  if (TREE_CODE_CLASS (TREE_CODE ($1)) == 't')\n-\t\t    $$ = make_typename_type ($1, $2);\n+\t\t    $$ = make_typename_type ($1, $2, /*complain=*/1);\n \t\t  else if (TREE_CODE ($2) == IDENTIFIER_NODE)\n \t\t    cp_error (\"`%T' is not a class or namespace\", $2);\n \t\t  else\n@@ -2952,9 +2953,9 @@ typename_sub0:\n \t| typename_sub1 template_type %prec EMPTY\n \t\t{ $$ = TREE_TYPE ($2); }\n \t| typename_sub1 explicit_template_type %prec EMPTY\n-\t\t{ $$ = make_typename_type ($1, $2); }\n+                { $$ = make_typename_type ($1, $2, /*complain=*/1); }\n \t| typename_sub1 TEMPLATE explicit_template_type %prec EMPTY\n-\t\t{ $$ = make_typename_type ($1, $3); }\n+                { $$ = make_typename_type ($1, $3, /*complain=*/1); }\n \t;\n \n typename_sub1:\n@@ -2966,7 +2967,7 @@ typename_sub1:\n \t| typename_sub1 typename_sub2\n \t\t{\n \t\t  if (TREE_CODE_CLASS (TREE_CODE ($1)) == 't')\n-\t\t    $$ = make_typename_type ($1, $2);\n+\t\t    $$ = make_typename_type ($1, $2, /*complain=*/1);\n \t\t  else if (TREE_CODE ($2) == IDENTIFIER_NODE)\n \t\t    cp_error (\"`%T' is not a class or namespace\", $2);\n \t\t  else\n@@ -2977,9 +2978,11 @@ typename_sub1:\n \t\t    }\n \t\t}\n \t| typename_sub1 explicit_template_type SCOPE\n-\t\t{ got_scope = $$ = make_typename_type ($1, $2); }\n+                { got_scope = $$ \n+\t\t    = make_typename_type ($1, $2, /*complain=*/1); }\n \t| typename_sub1 TEMPLATE explicit_template_type SCOPE\n-\t\t{ got_scope = $$ = make_typename_type ($1, $3); }\n+                { got_scope = $$ \n+\t\t    = make_typename_type ($1, $3, /*complain=*/1); }\n \t;\n \n typename_sub2:"}, {"sha": "4a0d7d12bf73d214b169ad98eb2747eb289143d6", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3baa501d812db77b1957928294a753c372104afb/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3baa501d812db77b1957928294a753c372104afb/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=3baa501d812db77b1957928294a753c372104afb", "patch": "@@ -3156,7 +3156,8 @@ convert_template_argument (parm, arg, args, complain, i, in_decl)\n       cp_pedwarn (\"  use `typename %E'\", arg);\n       \n       arg = make_typename_type (TREE_OPERAND (arg, 0),\n-\t\t\t\tTREE_OPERAND (arg, 1));\n+\t\t\t\tTREE_OPERAND (arg, 1),\n+\t\t\t\tcomplain);\n       is_type = 1;\n     }\n   if (is_type != requires_type)\n@@ -6685,7 +6686,7 @@ tsubst (t, args, complain, in_decl)\n \t      }\n \t  }\n \n-\tf = make_typename_type (ctx, f);\n+\tf = make_typename_type (ctx, f, complain);\n \tif (f == error_mark_node)\n \t  return f;\n \treturn cp_build_qualified_type_real (f, "}, {"sha": "127c52663368442c482dc22f739a6cf9cc6728f4", "filename": "gcc/testsuite/g++.old-deja/g++.pt/typename24.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3baa501d812db77b1957928294a753c372104afb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3baa501d812db77b1957928294a753c372104afb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename24.C?ref=3baa501d812db77b1957928294a753c372104afb", "patch": "@@ -0,0 +1,26 @@\n+// Build don't link:\n+// Origin: Mark Mitchell <mark@codesourcery.com>\n+\n+class ostream;\n+\n+extern ostream& cout;\n+\n+class Foo { };\n+\n+ostream &operator<<(ostream &os, const Foo &)\n+{\n+  return os;\n+}\n+\n+template<class T>\n+const typename T::fooz &operator<<(const Foo &, const T &t)\n+{\n+  return t;\n+}\n+\n+void main()\n+{\n+  Foo foo;\n+\n+  cout << foo;\n+}"}]}