{"sha": "2f8f843440b5d89e6087e41b37bda69f44e8a758", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY4Zjg0MzQ0MGI1ZDg5ZTYwODdlNDFiMzdiZGE2OWY0NGU4YTc1OA==", "commit": {"author": {"name": "Adrian Straetling", "email": "straetling@de.ibm.com", "date": "2005-05-09T17:32:20Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-05-09T17:32:20Z"}, "message": "s390.md: (\"gf\") New mode attribute.\n\n2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n\n\t* config/s390/s390.md: (\"gf\") New mode attribute.\n\t(\"fixuns_truncdfdi2\", \"fixuns_truncdfsi2\", \"fixuns_truncsfdi2\",\n\t\"fixuns_truncsfsi2\"): Merge.\n\t(\"fix_truncdfdi2\", \"fix_truncsfdi2\"): Merge.\n\t(\"fix_truncdfdi2_ieee\", \"fix_truncdfsi2_ieee\", \"fix_truncsfdi2_ieee\",\n\t\"fix_truncsfsi2_ieee\"): Merge.\n\nFrom-SVN: r99458", "tree": {"sha": "ef46d5a3a5c4ef90e929daec2149f3e65cfe9d5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef46d5a3a5c4ef90e929daec2149f3e65cfe9d5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f8f843440b5d89e6087e41b37bda69f44e8a758", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f8f843440b5d89e6087e41b37bda69f44e8a758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f8f843440b5d89e6087e41b37bda69f44e8a758", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f8f843440b5d89e6087e41b37bda69f44e8a758/comments", "author": null, "committer": null, "parents": [{"sha": "f5905b37b0a660e44ea360d3451a6dfb91704fce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5905b37b0a660e44ea360d3451a6dfb91704fce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5905b37b0a660e44ea360d3451a6dfb91704fce"}], "stats": {"total": 197, "additions": 46, "deletions": 151}, "files": [{"sha": "f0a8c6b4e3b6ad2af7a366bc7694bec0432d1603", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8f843440b5d89e6087e41b37bda69f44e8a758/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8f843440b5d89e6087e41b37bda69f44e8a758/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f8f843440b5d89e6087e41b37bda69f44e8a758", "patch": "@@ -1,3 +1,12 @@\n+2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n+\n+\t* config/s390/s390.md: (\"gf\") New mode attribute.\n+\t(\"fixuns_truncdfdi2\", \"fixuns_truncdfsi2\", \"fixuns_truncsfdi2\",\n+\t\"fixuns_truncsfsi2\"): Merge.\n+\t(\"fix_truncdfdi2\", \"fix_truncsfdi2\"): Merge.\n+\t(\"fix_truncdfdi2_ieee\", \"fix_truncdfsi2_ieee\", \"fix_truncsfdi2_ieee\",\n+\t\"fix_truncsfsi2_ieee\"): Merge.\n+\n 2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n \n \t* config/s390/s390.md: (\"FPR\") New mode macro."}, {"sha": "0d87642100317c59624fe61bb163c5632e68d4bc", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 37, "deletions": 151, "changes": 188, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8f843440b5d89e6087e41b37bda69f44e8a758/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8f843440b5d89e6087e41b37bda69f44e8a758/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=2f8f843440b5d89e6087e41b37bda69f44e8a758", "patch": "@@ -292,6 +292,10 @@\n ;; and \"lcr\" in SImode.\n (define_mode_attr g [(DI \"g\") (SI \"\")])\n \n+;; In GPR templates, a string like \"c<gf>dbr\" will expand to \"cgdbr\" in DImode\n+;; and \"cfdbr\" in SImode.\n+(define_mode_attr gf [(DI \"g\") (SI \"f\")])\n+\n ;; ICM mask required to load MODE value into the highest subreg\n ;; of a SImode register.\n (define_mode_attr icm_hi [(HI \"12\") (QI \"8\")])\n@@ -2667,85 +2671,64 @@\n \n \n ;\n-; fixuns_truncdfdi2 and fix_truncdfsi2 instruction pattern(s).\n+; fixuns_trunc(sf|df)(si|di)2 and fix_trunc(sf|df)(si|di)2 instruction pattern(s).\n ;\n \n-(define_expand \"fixuns_truncdfdi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"\")\n-        (unsigned_fix:DI (match_operand:DF 1 \"register_operand\" \"\")))]\n-  \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n+(define_expand \"fixuns_trunc<FPR:mode><GPR:mode>2\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"\")\n+        (unsigned_fix:GPR (match_operand:FPR 1 \"register_operand\" \"\")))]\n+  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n {\n   rtx label1 = gen_label_rtx ();\n   rtx label2 = gen_label_rtx ();\n-  rtx temp = gen_reg_rtx (DFmode);\n-  operands[1] = force_reg (DFmode, operands[1]);\n-\n-  emit_insn (gen_cmpdf (operands[1],\n-\tCONST_DOUBLE_FROM_REAL_VALUE (\n-          REAL_VALUE_ATOF (\"9223372036854775808.0\", DFmode), DFmode)));\n+  rtx temp = gen_reg_rtx (<FPR:MODE>mode);\n+  REAL_VALUE_TYPE cmp, sub;\n+  \n+  operands[1] = force_reg (<FPR:MODE>mode, operands[1]);\n+  real_2expN (&cmp, GET_MODE_BITSIZE(<GPR:MODE>mode) - 1);\n+  real_2expN (&sub, GET_MODE_BITSIZE(<GPR:MODE>mode));\n+  \n+  emit_insn (gen_cmp<FPR:mode> (operands[1],\n+\tCONST_DOUBLE_FROM_REAL_VALUE (cmp, <FPR:MODE>mode)));\n   emit_jump_insn (gen_blt (label1));\n-  emit_insn (gen_subdf3 (temp, operands[1],\n-\tCONST_DOUBLE_FROM_REAL_VALUE (\n-          REAL_VALUE_ATOF (\"18446744073709551616.0\", DFmode), DFmode)));\n-  emit_insn (gen_fix_truncdfdi2_ieee (operands[0], temp, GEN_INT(7)));\n+  emit_insn (gen_sub<FPR:mode>3 (temp, operands[1],\n+\tCONST_DOUBLE_FROM_REAL_VALUE (sub, <FPR:MODE>mode)));\n+  emit_insn (gen_fix_trunc<FPR:mode><GPR:mode>2_ieee (operands[0], temp,\n+\tGEN_INT(7)));\n   emit_jump (label2);\n \n   emit_label (label1);\n-  emit_insn (gen_fix_truncdfdi2_ieee (operands[0], operands[1], GEN_INT(5)));\n+  emit_insn (gen_fix_trunc<FPR:mode><GPR:mode>2_ieee (operands[0],\n+\toperands[1], GEN_INT(5)));\n   emit_label (label2);\n   DONE;\n })\n \n-(define_expand \"fix_truncdfdi2\"\n+(define_expand \"fix_trunc<FPR:mode>di2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n-        (fix:DI (match_operand:DF 1 \"nonimmediate_operand\" \"\")))]\n+        (fix:DI (match_operand:FPR 1 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n {\n-  operands[1] = force_reg (DFmode, operands[1]);\n-  emit_insn (gen_fix_truncdfdi2_ieee (operands[0], operands[1], GEN_INT(5)));\n+  operands[1] = force_reg (<FPR:MODE>mode, operands[1]);\n+  emit_insn (gen_fix_trunc<FPR:mode>di2_ieee (operands[0], operands[1],\n+      GEN_INT(5)));\n   DONE;\n })\n \n-(define_insn \"fix_truncdfdi2_ieee\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n-        (fix:DI (match_operand:DF 1 \"register_operand\" \"f\")))\n-   (unspec:DI [(match_operand:DI 2 \"immediate_operand\" \"K\")] UNSPEC_ROUND)\n+(define_insn \"fix_trunc<FPR:mode><GPR:mode>2_ieee\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n+        (fix:GPR (match_operand:FPR 1 \"register_operand\" \"f\")))\n+   (unspec:GPR [(match_operand:GPR 2 \"immediate_operand\" \"K\")] UNSPEC_ROUND)\n    (clobber (reg:CC 33))]\n-  \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"cgdbr\\t%0,%h2,%1\"\n+  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n+  \"c<GPR:gf><FPR:de>br\\t%0,%h2,%1\"\n   [(set_attr \"op_type\" \"RRE\")\n    (set_attr \"type\"    \"ftoi\")])\n \n ;\n-; fixuns_truncdfsi2 and fix_truncdfsi2 instruction pattern(s).\n+; fix_truncdfsi2 instruction pattern(s).\n ;\n \n-(define_expand \"fixuns_truncdfsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-        (unsigned_fix:SI (match_operand:DF 1 \"register_operand\" \"\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-{\n-  rtx label1 = gen_label_rtx ();\n-  rtx label2 = gen_label_rtx ();\n-  rtx temp = gen_reg_rtx (DFmode);\n-\n-  operands[1] = force_reg (DFmode,operands[1]);\n-  emit_insn (gen_cmpdf (operands[1],\n-\tCONST_DOUBLE_FROM_REAL_VALUE (\n-          REAL_VALUE_ATOF (\"2147483648.0\", DFmode), DFmode)));\n-  emit_jump_insn (gen_blt (label1));\n-  emit_insn (gen_subdf3 (temp, operands[1],\n-\tCONST_DOUBLE_FROM_REAL_VALUE (\n-          REAL_VALUE_ATOF (\"4294967296.0\", DFmode), DFmode)));\n-  emit_insn (gen_fix_truncdfsi2_ieee (operands[0], temp, GEN_INT (7)));\n-  emit_jump (label2);\n-\n-  emit_label (label1);\n-  emit_insn (gen_fix_truncdfsi2_ieee (operands[0], operands[1], GEN_INT (5)));\n-  emit_label (label2);\n-  DONE;\n-})\n-\n (define_expand \"fix_truncdfsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n         (fix:SI (match_operand:DF 1 \"nonimmediate_operand\" \"\")))]\n@@ -2772,16 +2755,6 @@\n   DONE;\n })\n \n-(define_insn \"fix_truncdfsi2_ieee\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-        (fix:SI (match_operand:DF 1 \"register_operand\" \"f\")))\n-    (unspec:SI [(match_operand:SI 2 \"immediate_operand\" \"K\")] UNSPEC_ROUND)\n-    (clobber (reg:CC 33))]\n-  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"cfdbr\\t%0,%h2,%1\"\n-   [(set_attr \"op_type\" \"RRE\")\n-    (set_attr \"type\"    \"ftoi\")])\n-\n (define_insn \"fix_truncdfsi2_ibm\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n         (fix:SI (match_operand:DF 1 \"nonimmediate_operand\" \"+f\")))\n@@ -2800,86 +2773,9 @@\n   [(set_attr \"length\" \"20\")])\n \n ;\n-; fixuns_truncsfdi2 and fix_truncsfdi2 instruction pattern(s).\n+; fix_truncsfsi2 instruction pattern(s).\n ;\n \n-(define_expand \"fixuns_truncsfdi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"\")\n-        (unsigned_fix:DI (match_operand:SF 1 \"register_operand\" \"\")))]\n-  \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-{\n-  rtx label1 = gen_label_rtx ();\n-  rtx label2 = gen_label_rtx ();\n-  rtx temp = gen_reg_rtx (SFmode);\n-\n-  operands[1] = force_reg (SFmode, operands[1]);\n-  emit_insn (gen_cmpsf (operands[1],\n-\tCONST_DOUBLE_FROM_REAL_VALUE (\n-          REAL_VALUE_ATOF (\"9223372036854775808.0\", SFmode), SFmode)));\n-  emit_jump_insn (gen_blt (label1));\n-\n-  emit_insn (gen_subsf3 (temp, operands[1],\n-\tCONST_DOUBLE_FROM_REAL_VALUE (\n-          REAL_VALUE_ATOF (\"18446744073709551616.0\", SFmode), SFmode)));\n-  emit_insn (gen_fix_truncsfdi2_ieee (operands[0], temp, GEN_INT(7)));\n-  emit_jump (label2);\n-\n-  emit_label (label1);\n-  emit_insn (gen_fix_truncsfdi2_ieee (operands[0], operands[1], GEN_INT(5)));\n-  emit_label (label2);\n-  DONE;\n-})\n-\n-(define_expand \"fix_truncsfdi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"\")\n-        (fix:DI (match_operand:SF 1 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-{\n-  operands[1] = force_reg (SFmode, operands[1]);\n-  emit_insn (gen_fix_truncsfdi2_ieee (operands[0], operands[1], GEN_INT(5)));\n-  DONE;\n-})\n-\n-(define_insn \"fix_truncsfdi2_ieee\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n-        (fix:DI (match_operand:SF 1 \"register_operand\"  \"f\")))\n-   (unspec:DI [(match_operand:DI 2 \"immediate_operand\" \"K\")] UNSPEC_ROUND)\n-   (clobber (reg:CC 33))]\n-  \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"cgebr\\t%0,%h2,%1\"\n-  [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"type\"    \"ftoi\")])\n-\n-;\n-; fixuns_truncsfsi2 and fix_truncsfsi2 instruction pattern(s).\n-;\n-\n-(define_expand \"fixuns_truncsfsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-        (unsigned_fix:SI (match_operand:SF 1 \"register_operand\" \"\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-{\n-  rtx label1 = gen_label_rtx ();\n-  rtx label2 = gen_label_rtx ();\n-  rtx temp = gen_reg_rtx (SFmode);\n-\n-  operands[1] = force_reg (SFmode, operands[1]);\n-  emit_insn (gen_cmpsf (operands[1],\n-\tCONST_DOUBLE_FROM_REAL_VALUE (\n-          REAL_VALUE_ATOF (\"2147483648.0\", SFmode), SFmode)));\n-  emit_jump_insn (gen_blt (label1));\n-  emit_insn (gen_subsf3 (temp, operands[1],\n-\tCONST_DOUBLE_FROM_REAL_VALUE (\n-          REAL_VALUE_ATOF (\"4294967296.0\", SFmode), SFmode)));\n-  emit_insn (gen_fix_truncsfsi2_ieee (operands[0], temp, GEN_INT (7)));\n-  emit_jump (label2);\n-\n-  emit_label (label1);\n-  emit_insn (gen_fix_truncsfsi2_ieee (operands[0], operands[1], GEN_INT (5)));\n-  emit_label (label2);\n-  DONE;\n-})\n-\n (define_expand \"fix_truncsfsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n         (fix:SI (match_operand:SF 1 \"nonimmediate_operand\" \"\")))]\n@@ -2901,16 +2797,6 @@\n   DONE;\n })\n \n-(define_insn \"fix_truncsfsi2_ieee\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n-        (fix:SI (match_operand:SF 1 \"register_operand\" \"f\")))\n-    (unspec:SI [(match_operand:SI 2 \"immediate_operand\" \"K\")] UNSPEC_ROUND)\n-    (clobber (reg:CC 33))]\n-  \"TARGET_HARD_FLOAT && TARGET_IEEE_FLOAT\"\n-  \"cfebr\\t%0,%h2,%1\"\n-  [(set_attr \"op_type\" \"RRE\")\n-   (set_attr \"type\"    \"ftoi\")])\n-\n ;\n ; floatdi(df|sf)2 instruction pattern(s).\n ;"}]}