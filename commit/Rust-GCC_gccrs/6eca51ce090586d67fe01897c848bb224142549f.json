{"sha": "6eca51ce090586d67fe01897c848bb224142549f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVjYTUxY2UwOTA1ODZkNjdmZTAxODk3Yzg0OGJiMjI0MTQyNTQ5Zg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2017-01-06T11:03:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-06T11:03:36Z"}, "message": "exp_ch5.adb (Get_Default_Iterator): For a derived type...\n\n2017-01-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch5.adb (Get_Default_Iterator): For a derived type, the\n\talias of the inherited op is the parent iterator, no need to\n\texamine dispatch table positions which might not be established\n\tyet if type is not frozen.\n\t* sem_disp.adb (Check_Controlling_Formals): The formal of a\n\tpredicate function may be a subtype of a tagged type.\n\t* sem_ch3.adb (Complete_Private_Subtype): Adjust inheritance\n\tof representation items for the completion of a type extension\n\twhere a predicate applies to the partial view.\n\t* checks.ads, checks.adb (Apply_Predicate_Check): Add optional\n\tparameter that designates function whose actual receives a\n\tpredicate check, to improve warning message when the check will\n\tlead to infinite recursion.\n\t* sem_res.adb (Resolve_Actuals): Pass additional parameter to\n\tApply_Predicate_Check.\n\nFrom-SVN: r244132", "tree": {"sha": "b340effce88373fff5af0e2b3edde9115f90af08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b340effce88373fff5af0e2b3edde9115f90af08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6eca51ce090586d67fe01897c848bb224142549f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eca51ce090586d67fe01897c848bb224142549f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6eca51ce090586d67fe01897c848bb224142549f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eca51ce090586d67fe01897c848bb224142549f/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6413509bd47c3d3c2c9160d5d13a5d4f40903456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6413509bd47c3d3c2c9160d5d13a5d4f40903456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6413509bd47c3d3c2c9160d5d13a5d4f40903456"}], "stats": {"total": 91, "additions": 74, "deletions": 17}, "files": [{"sha": "e5f4d17b70b6b4ce39d337c50ba872aa7a1c44c3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eca51ce090586d67fe01897c848bb224142549f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eca51ce090586d67fe01897c848bb224142549f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6eca51ce090586d67fe01897c848bb224142549f", "patch": "@@ -1,3 +1,21 @@\n+2017-01-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch5.adb (Get_Default_Iterator): For a derived type, the\n+\talias of the inherited op is the parent iterator, no need to\n+\texamine dispatch table positions which might not be established\n+\tyet if type is not frozen.\n+\t* sem_disp.adb (Check_Controlling_Formals): The formal of a\n+\tpredicate function may be a subtype of a tagged type.\n+\t* sem_ch3.adb (Complete_Private_Subtype): Adjust inheritance\n+\tof representation items for the completion of a type extension\n+\twhere a predicate applies to the partial view.\n+\t* checks.ads, checks.adb (Apply_Predicate_Check): Add optional\n+\tparameter that designates function whose actual receives a\n+\tpredicate check, to improve warning message when the check will\n+\tlead to infinite recursion.\n+\t* sem_res.adb (Resolve_Actuals): Pass additional parameter to\n+\tApply_Predicate_Check.\n+\n 2017-01-06  Tristan Gingold  <gingold@adacore.com>\n \n \t* s-rident.ads (Profile_Info): Remove No_Entry_Queue from"}, {"sha": "83703b6cb9a40e37c4d3eee4f8bba49e90744dfe", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eca51ce090586d67fe01897c848bb224142549f/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eca51ce090586d67fe01897c848bb224142549f/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=6eca51ce090586d67fe01897c848bb224142549f", "patch": "@@ -2605,7 +2605,11 @@ package body Checks is\n    -- Apply_Predicate_Check --\n    ---------------------------\n \n-   procedure Apply_Predicate_Check (N : Node_Id; Typ : Entity_Id) is\n+   procedure Apply_Predicate_Check\n+     (N   : Node_Id;\n+      Typ : Entity_Id;\n+      Fun : Entity_Id := Empty)\n+   is\n       S : Entity_Id;\n \n    begin\n@@ -2633,11 +2637,18 @@ package body Checks is\n          --  is likely to be a common error, and thus deserves a warning.\n \n          elsif Present (S) and then S = Predicate_Function (Typ) then\n-            Error_Msg_N\n-              (\"predicate check includes a function call that \"\n-               & \"requires a predicate check??\", Parent (N));\n+            Error_Msg_NE\n+              (\"predicate check includes a call to& that \"\n+               & \"requires a predicate check??\", Parent (N), Fun);\n             Error_Msg_N\n               (\"\\this will result in infinite recursion??\", Parent (N));\n+\n+            if Is_First_Subtype (Typ) then\n+               Error_Msg_NE\n+               (\"\\use an explicit subtype of& to carry the predicate\",\n+                  Parent (N), Typ);\n+            end if;\n+\n             Insert_Action (N,\n               Make_Raise_Storage_Error (Sloc (N),\n                 Reason => SE_Infinite_Recursion));"}, {"sha": "ff513e667b45106fdfb9f7380415caa79b4651f4", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eca51ce090586d67fe01897c848bb224142549f/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eca51ce090586d67fe01897c848bb224142549f/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=6eca51ce090586d67fe01897c848bb224142549f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -255,9 +255,14 @@ package Checks is\n    --  verify the proper initialization of scalars in parameters and function\n    --  results.\n \n-   procedure Apply_Predicate_Check (N : Node_Id; Typ : Entity_Id);\n-   --  N is an expression to which a predicate check may need to be applied\n-   --  for Typ, if Typ has a predicate function.\n+   procedure Apply_Predicate_Check\n+     (N   : Node_Id;\n+      Typ : Entity_Id;\n+      Fun : Entity_Id := Empty);\n+   --  N is an expression to which a predicate check may need to be applied for\n+   --  Typ, if Typ has a predicate function. When N is an actual in a call, Fun\n+   --  is the function being called, which is used to generate a better warning\n+   --  if the call leads to an infinite recursion.\n \n    procedure Apply_Type_Conversion_Checks (N : Node_Id);\n    --  N is an N_Type_Conversion node. A type conversion actually involves"}, {"sha": "ac7699d98aec1fe009573515f327abd4ee3efc96", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eca51ce090586d67fe01897c848bb224142549f/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eca51ce090586d67fe01897c848bb224142549f/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=6eca51ce090586d67fe01897c848bb224142549f", "patch": "@@ -3769,14 +3769,17 @@ package body Exp_Ch5 is\n                elsif Is_Derived_Type (T) then\n \n                   --  The default iterator must be a primitive operation of the\n-                  --  type, at the same dispatch slot position.\n+                  --  type, at the same dispatch slot position. The DT position\n+                  --  may not be established if type is not frozen yet.\n \n                   Prim := First_Elmt (Primitive_Operations (T));\n                   while Present (Prim) loop\n                      Op := Node (Prim);\n \n-                     if Chars (Op) = Chars (Iter)\n-                       and then DT_Position (Op) = DT_Position (Iter)\n+                     if Alias (Op) = Iter\n+                       or else (Chars (Op) = Chars (Iter)\n+                         and then Present (DTC_Entity (Op))\n+                         and then DT_Position (Op) = DT_Position (Iter))\n                      then\n                         return Op;\n                      end if;"}, {"sha": "d00a31c406a1a8d93734f88fa4670cba5e220fc6", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eca51ce090586d67fe01897c848bb224142549f/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eca51ce090586d67fe01897c848bb224142549f/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=6eca51ce090586d67fe01897c848bb224142549f", "patch": "@@ -11947,9 +11947,11 @@ package body Sem_Ch3 is\n          Append    : Boolean;\n          Item      : Node_Id;\n          Next_Item : Node_Id;\n+         Priv_Item : Node_Id;\n \n       begin\n          Item := First_Rep_Item (Full);\n+         Priv_Item := First_Rep_Item (Priv);\n \n          --  If no existing rep items on full type, we can just link directly\n          --  to the list of items on the private type, if any exist.. Same if\n@@ -11960,14 +11962,24 @@ package body Sem_Ch3 is\n               or else Entity (Item) = Full_Base)\n              and then Present (First_Rep_Item (Priv))\n          then\n-            Set_First_Rep_Item (Full, First_Rep_Item (Priv));\n+            Set_First_Rep_Item (Full, Priv_Item);\n \n          --  Otherwise, search to the end of items currently linked to the full\n          --  subtype and append the private items to the end. However, if Priv\n          --  and Full already have the same list of rep items, then the append\n          --  is not done, as that would create a circularity.\n+         --\n+         --  The partial view may have a predicate and the rep item lists of\n+         --  both views agree when inherited from the same ancestor. In that\n+         --  case, simply propagate the list from one view to the other.\n+         --  A more complex analysis needed here ???\n+\n+         elsif Present (Priv_Item)\n+           and then Item = Next_Rep_Item (Priv_Item)\n+         then\n+            Set_First_Rep_Item (Full, Priv_Item);\n \n-         elsif Item /= First_Rep_Item (Priv) then\n+         elsif Item /= Priv_Item then\n             Append := True;\n             loop\n                Next_Item := Next_Rep_Item (Item);"}, {"sha": "f621fa5e1896481b271684ca53ef296efd848238", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eca51ce090586d67fe01897c848bb224142549f/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eca51ce090586d67fe01897c848bb224142549f/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=6eca51ce090586d67fe01897c848bb224142549f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -234,7 +234,13 @@ package body Sem_Disp is\n                         Formal);\n                   end if;\n \n-               elsif not Subtypes_Statically_Match (Typ, Etype (Formal)) then\n+               --  Within a predicate function, the formal may be a subtype\n+               --  of a tagged type, given that the predicate is expressed\n+               --  in terms of the subtype.\n+\n+               elsif not Subtypes_Statically_Match (Typ, Etype (Formal))\n+                 and then not Is_Predicate_Function (Subp)\n+               then\n                   Error_Msg_N\n                     (\"parameter subtype does not match controlling type\",\n                      Formal);"}, {"sha": "f174ad9497ee8fbdf6d1bcf8022798aecef08638", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eca51ce090586d67fe01897c848bb224142549f/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eca51ce090586d67fe01897c848bb224142549f/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=6eca51ce090586d67fe01897c848bb224142549f", "patch": "@@ -4265,10 +4265,12 @@ package body Sem_Res is\n                --  Apply predicate tests except in certain special cases. Note\n                --  that it might be more consistent to apply these only when\n                --  expansion is active (in Exp_Ch6.Expand_Actuals), as we do\n-               --  for the outbound predicate tests ???\n+               --  for the outbound predicate tests ??? In any case indicate\n+               --  the function being called, for better warnings if the call\n+               --  leads to an infinite recursion.\n \n                if Predicate_Tests_On_Arguments (Nam) then\n-                  Apply_Predicate_Check (A, F_Typ);\n+                  Apply_Predicate_Check (A, F_Typ, Nam);\n                end if;\n \n                --  Apply required constraint checks"}]}