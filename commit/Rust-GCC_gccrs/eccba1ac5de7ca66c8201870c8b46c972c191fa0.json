{"sha": "eccba1ac5de7ca66c8201870c8b46c972c191fa0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNjYmExYWM1ZGU3Y2E2NmM4MjAxODcwYzhiNDZjOTcyYzE5MWZhMA==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-07-09T10:37:15Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-07-09T10:37:15Z"}, "message": "[testsuite] Use relative line numbers in gcc.dg/guality\n\nUse relative line number where obvious: either the relative line number is\n'.', '.-1' or '.+1', or adjacent to another obvious case.\n\n2018-07-09  Tom de Vries  <tdevries@suse.de>\n\n\t* gcc.dg/guality/asm-1.c: Use relative line numbers where obvious.\n\t* gcc.dg/guality/bswaptest.c: Same.\n\t* gcc.dg/guality/clztest.c: Same.\n\t* gcc.dg/guality/csttest.c: Same.\n\t* gcc.dg/guality/ctztest.c: Same.\n\t* gcc.dg/guality/drap.c: Same.\n\t* gcc.dg/guality/nrv-1.c: Same.\n\t* gcc.dg/guality/pr41353-1.c: Same.\n\t* gcc.dg/guality/pr41353-2.c: Same.\n\t* gcc.dg/guality/pr41404-1.c: Same.\n\t* gcc.dg/guality/pr43051-1.c: Same.\n\t* gcc.dg/guality/pr43077-1.c: Same.\n\t* gcc.dg/guality/pr43177.c: Same.\n\t* gcc.dg/guality/pr43329-1.c: Same.\n\t* gcc.dg/guality/pr43479.c: Same.\n\t* gcc.dg/guality/pr43593.c: Same.\n\t* gcc.dg/guality/pr45003-1.c: Same.\n\t* gcc.dg/guality/pr45003-2.c: Same.\n\t* gcc.dg/guality/pr45003-3.c: Same.\n\t* gcc.dg/guality/pr48437.c: Same.\n\t* gcc.dg/guality/pr48466.c: Same.\n\t* gcc.dg/guality/pr49888.c: Same.\n\t* gcc.dg/guality/pr54200.c: Same.\n\t* gcc.dg/guality/pr54519-1.c: Same.\n\t* gcc.dg/guality/pr54519-2.c: Same.\n\t* gcc.dg/guality/pr54519-3.c: Same.\n\t* gcc.dg/guality/pr54519-4.c: Same.\n\t* gcc.dg/guality/pr54519-5.c: Same.\n\t* gcc.dg/guality/pr54519-6.c: Same.\n\t* gcc.dg/guality/pr54551.c: Same.\n\t* gcc.dg/guality/pr54693-2.c: Same.\n\t* gcc.dg/guality/pr54693.c: Same.\n\t* gcc.dg/guality/pr54796.c: Same.\n\t* gcc.dg/guality/pr54970.c: Same.\n\t* gcc.dg/guality/pr67192.c: Same.\n\t* gcc.dg/guality/pr69947.c: Same.\n\t* gcc.dg/guality/pr78726.c: Same.\n\t* gcc.dg/guality/rotatetest.c: Same.\n\t* gcc.dg/guality/sra-1.c: Same.\n\t* gcc.dg/guality/vla-2.c: Same.\n\nFrom-SVN: r262516", "tree": {"sha": "54855590895c12e0abdfe1ba49298e9ad55eb95e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54855590895c12e0abdfe1ba49298e9ad55eb95e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eccba1ac5de7ca66c8201870c8b46c972c191fa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eccba1ac5de7ca66c8201870c8b46c972c191fa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eccba1ac5de7ca66c8201870c8b46c972c191fa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eccba1ac5de7ca66c8201870c8b46c972c191fa0/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8956e24714a4e09fb09aa3e0c9033318060c0524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8956e24714a4e09fb09aa3e0c9033318060c0524", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8956e24714a4e09fb09aa3e0c9033318060c0524"}], "stats": {"total": 441, "additions": 242, "deletions": 199}, "files": [{"sha": "43b8182feaefa6687e3ee9b77c2468d4c80fdb98", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -1,3 +1,46 @@\n+2018-07-09  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gcc.dg/guality/asm-1.c: Use relative line numbers where obvious.\n+\t* gcc.dg/guality/bswaptest.c: Same.\n+\t* gcc.dg/guality/clztest.c: Same.\n+\t* gcc.dg/guality/csttest.c: Same.\n+\t* gcc.dg/guality/ctztest.c: Same.\n+\t* gcc.dg/guality/drap.c: Same.\n+\t* gcc.dg/guality/nrv-1.c: Same.\n+\t* gcc.dg/guality/pr41353-1.c: Same.\n+\t* gcc.dg/guality/pr41353-2.c: Same.\n+\t* gcc.dg/guality/pr41404-1.c: Same.\n+\t* gcc.dg/guality/pr43051-1.c: Same.\n+\t* gcc.dg/guality/pr43077-1.c: Same.\n+\t* gcc.dg/guality/pr43177.c: Same.\n+\t* gcc.dg/guality/pr43329-1.c: Same.\n+\t* gcc.dg/guality/pr43479.c: Same.\n+\t* gcc.dg/guality/pr43593.c: Same.\n+\t* gcc.dg/guality/pr45003-1.c: Same.\n+\t* gcc.dg/guality/pr45003-2.c: Same.\n+\t* gcc.dg/guality/pr45003-3.c: Same.\n+\t* gcc.dg/guality/pr48437.c: Same.\n+\t* gcc.dg/guality/pr48466.c: Same.\n+\t* gcc.dg/guality/pr49888.c: Same.\n+\t* gcc.dg/guality/pr54200.c: Same.\n+\t* gcc.dg/guality/pr54519-1.c: Same.\n+\t* gcc.dg/guality/pr54519-2.c: Same.\n+\t* gcc.dg/guality/pr54519-3.c: Same.\n+\t* gcc.dg/guality/pr54519-4.c: Same.\n+\t* gcc.dg/guality/pr54519-5.c: Same.\n+\t* gcc.dg/guality/pr54519-6.c: Same.\n+\t* gcc.dg/guality/pr54551.c: Same.\n+\t* gcc.dg/guality/pr54693-2.c: Same.\n+\t* gcc.dg/guality/pr54693.c: Same.\n+\t* gcc.dg/guality/pr54796.c: Same.\n+\t* gcc.dg/guality/pr54970.c: Same.\n+\t* gcc.dg/guality/pr67192.c: Same.\n+\t* gcc.dg/guality/pr69947.c: Same.\n+\t* gcc.dg/guality/pr78726.c: Same.\n+\t* gcc.dg/guality/rotatetest.c: Same.\n+\t* gcc.dg/guality/sra-1.c: Same.\n+\t* gcc.dg/guality/vla-2.c: Same.\n+\n 2018-07-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/diagnostic/long-short.C: New."}, {"sha": "089badf812af2ae5e63fdc5d7138beeb78a71ba0", "filename": "gcc/testsuite/gcc.dg/guality/asm-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fasm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fasm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fasm-1.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -10,7 +10,7 @@ foo (struct A *p, char *q)\n {\n   int f = &p->z[p->y] - q;\n   asm volatile (NOP);\n-  asm volatile (NOP : : \"g\" (f));\t\t/* { dg-final { gdb-test 14 \"f\" \"14\" } } */\n+  asm volatile (NOP : : \"g\" (f));\t\t/* { dg-final { gdb-test .+1 \"f\" \"14\" } } */\n   asm volatile (\"\" : : \"g\" (p), \"g\" (q));\n }\n "}, {"sha": "8d70cb3c5c8c8dabbfdc783d606f812c35c929ea", "filename": "gcc/testsuite/gcc.dg/guality/bswaptest.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fbswaptest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fbswaptest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fbswaptest.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -9,7 +9,7 @@ foo (long x)\n   long f = __builtin_bswap64 (x);\n   long g = f;\n   asm volatile (\"\" : \"+r\" (f));\n-  vv++;\t\t/* { dg-final { gdb-test 12 \"g\" \"f\" } } */\n+  vv++;\t\t/* { dg-final { gdb-test . \"g\" \"f\" } } */\n   return f;\n }\n \n@@ -19,7 +19,7 @@ bar (int x)\n   int f = __builtin_bswap32 (x);\n   int g = f;\n   asm volatile (\"\" : \"+r\" (f));\n-  vv++;\t\t/* { dg-final { gdb-test 22 \"g\" \"f\" } } */\n+  vv++;\t\t/* { dg-final { gdb-test . \"g\" \"f\" } } */\n   return f;\n }\n "}, {"sha": "f89c1c31a155210bfc7dd91d5302c2cf82bf511f", "filename": "gcc/testsuite/gcc.dg/guality/clztest.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fclztest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fclztest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fclztest.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -9,7 +9,7 @@ foo (long x)\n   long f = __builtin_clzl (x);\n   long g = f;\n   asm volatile (\"\" : \"+r\" (f));\n-  vv++;\t\t/* { dg-final { gdb-test 12 \"g\" \"f\" } } */\n+  vv++;\t\t/* { dg-final { gdb-test . \"g\" \"f\" } } */\n   return f;\n }\n \n@@ -19,7 +19,7 @@ bar (long x)\n   long f = __builtin_clzl (x);\n   long g = f;\n   asm volatile (\"\" : \"+r\" (f));\n-  vv++;\t\t/* { dg-final { gdb-test 22 \"g\" \"f\" } } */\n+  vv++;\t\t/* { dg-final { gdb-test . \"g\" \"f\" } } */\n   return f;\n }\n "}, {"sha": "e2b6f02520b714b6746f403a7a419462dad1ed9a", "filename": "gcc/testsuite/gcc.dg/guality/csttest.c", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fcsttest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fcsttest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fcsttest.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -8,24 +8,24 @@ __attribute__((noinline, noclone))\n unsigned long long\n foo (unsigned long long x)\n {\n-  unsigned long long a = x * (0x17ULL << 31);\t/* { dg-final { gdb-test 29 \"a\" \"(0x17ULL << 31)\" } } */\n-  unsigned long long b = x * (0x7ULL << 33);\t/* { dg-final { gdb-test 29 \"b\" \"(0x7ULL << 33)\" } } */\n-  unsigned long long c = x * (0x1ULL << 35);\t/* { dg-final { gdb-test 29 \"c\" \"(0x1ULL << 35)\" } } */\n-  unsigned long long d = x * (0x17ULL << 15);\t/* { dg-final { gdb-test 29 \"d\" \"(0x17ULL << 15)\" } } */\n-  unsigned long long e = x * (0x17ULL << 50);\t/* { dg-final { gdb-test 29 \"e\" \"(0x17ULL << 50)\" } } */\n-  unsigned long long f = x * (0x37ULL << 31);\t/* { dg-final { gdb-test 29 \"f\" \"(0x37ULL << 31)\" } } */\n-  unsigned long long g = x * (0x37ULL << 50);\t/* { dg-final { gdb-test 29 \"g\" \"(0x37ULL << 50)\" } } */\n-  unsigned long long h = x * (0x1efULL << 33);\t/* { dg-final { gdb-test 29 \"h\" \"(0x1efULL << 33)\" } } */\n-  unsigned long long i = x * (0x1efULL << 50);\t/* { dg-final { gdb-test 29 \"i\" \"(0x1efULL << 50)\" } } */\n-  unsigned long long j = x * -(0x17ULL << 31);\t/* { dg-final { gdb-test 29 \"j\" \"-(0x17ULL << 31)\" } } */\n-  unsigned long long k = x * -(0x7ULL << 33);\t/* { dg-final { gdb-test 29 \"k\" \"-(0x7ULL << 33)\" } } */\n-  unsigned long long l = x * -(0x1ULL << 35);\t/* { dg-final { gdb-test 29 \"l\" \"-(0x1ULL << 35)\" } } */\n-  unsigned long long m = x * -(0x17ULL << 15);\t/* { dg-final { gdb-test 29 \"m\" \"-(0x17ULL << 15)\" } } */\n-  unsigned long long n = x * -(0x17ULL << 50);\t/* { dg-final { gdb-test 29 \"n\" \"-(0x17ULL << 50)\" } } */\n-  unsigned long long o = x * -(0x37ULL << 31);\t/* { dg-final { gdb-test 29 \"o\" \"-(0x37ULL << 31)\" } } */\n-  unsigned long long p = x * -(0x37ULL << 50);\t/* { dg-final { gdb-test 29 \"p\" \"-(0x37ULL << 50)\" } } */\n-  unsigned long long q = x * -(0x1efULL << 33);\t/* { dg-final { gdb-test 29 \"q\" \"-(0x1efULL << 33)\" } } */\n-  unsigned long long r = x * -(0x1efULL << 50);\t/* { dg-final { gdb-test 29 \"r\" \"-(0x1efULL << 50)\" } } */\n+  unsigned long long a = x * (0x17ULL << 31);\t/* { dg-final { gdb-test .+18 \"a\" \"(0x17ULL << 31)\" } } */\n+  unsigned long long b = x * (0x7ULL << 33);\t/* { dg-final { gdb-test .+17 \"b\" \"(0x7ULL << 33)\" } } */\n+  unsigned long long c = x * (0x1ULL << 35);\t/* { dg-final { gdb-test .+16 \"c\" \"(0x1ULL << 35)\" } } */\n+  unsigned long long d = x * (0x17ULL << 15);\t/* { dg-final { gdb-test .+15 \"d\" \"(0x17ULL << 15)\" } } */\n+  unsigned long long e = x * (0x17ULL << 50);\t/* { dg-final { gdb-test .+14 \"e\" \"(0x17ULL << 50)\" } } */\n+  unsigned long long f = x * (0x37ULL << 31);\t/* { dg-final { gdb-test .+13 \"f\" \"(0x37ULL << 31)\" } } */\n+  unsigned long long g = x * (0x37ULL << 50);\t/* { dg-final { gdb-test .+12 \"g\" \"(0x37ULL << 50)\" } } */\n+  unsigned long long h = x * (0x1efULL << 33);\t/* { dg-final { gdb-test .+11 \"h\" \"(0x1efULL << 33)\" } } */\n+  unsigned long long i = x * (0x1efULL << 50);\t/* { dg-final { gdb-test .+10 \"i\" \"(0x1efULL << 50)\" } } */\n+  unsigned long long j = x * -(0x17ULL << 31);\t/* { dg-final { gdb-test .+9 \"j\" \"-(0x17ULL << 31)\" } } */\n+  unsigned long long k = x * -(0x7ULL << 33);\t/* { dg-final { gdb-test .+8 \"k\" \"-(0x7ULL << 33)\" } } */\n+  unsigned long long l = x * -(0x1ULL << 35);\t/* { dg-final { gdb-test .+7 \"l\" \"-(0x1ULL << 35)\" } } */\n+  unsigned long long m = x * -(0x17ULL << 15);\t/* { dg-final { gdb-test .+6 \"m\" \"-(0x17ULL << 15)\" } } */\n+  unsigned long long n = x * -(0x17ULL << 50);\t/* { dg-final { gdb-test .+5 \"n\" \"-(0x17ULL << 50)\" } } */\n+  unsigned long long o = x * -(0x37ULL << 31);\t/* { dg-final { gdb-test .+4 \"o\" \"-(0x37ULL << 31)\" } } */\n+  unsigned long long p = x * -(0x37ULL << 50);\t/* { dg-final { gdb-test .+3 \"p\" \"-(0x37ULL << 50)\" } } */\n+  unsigned long long q = x * -(0x1efULL << 33);\t/* { dg-final { gdb-test .+2 \"q\" \"-(0x1efULL << 33)\" } } */\n+  unsigned long long r = x * -(0x1efULL << 50);\t/* { dg-final { gdb-test .+1 \"r\" \"-(0x1efULL << 50)\" } } */\n   v++;\n   return x;\n }\n@@ -34,24 +34,24 @@ __attribute__((noinline, noclone))\n unsigned long long\n bar (unsigned long long x)\n {\n-  unsigned long long a = (x & 255) + (0x17ULL << 31);\t/* { dg-final { gdb-test 55 \"a\" \"(0x17ULL << 31)\" } } */\n-  unsigned long long b = (x & 255) + (0x7ULL << 33);\t/* { dg-final { gdb-test 55 \"b\" \"(0x7ULL << 33)\" } } */\n-  unsigned long long c = (x & 255) + (0x1ULL << 35);\t/* { dg-final { gdb-test 55 \"c\" \"(0x1ULL << 35)\" } } */\n-  unsigned long long d = (x & 255) + (0x17ULL << 15);\t/* { dg-final { gdb-test 55 \"d\" \"(0x17ULL << 15)\" } } */\n-  unsigned long long e = (x & 255) + (0x17ULL << 50);\t/* { dg-final { gdb-test 55 \"e\" \"(0x17ULL << 50)\" } } */\n-  unsigned long long f = (x & 255) + (0x37ULL << 31);\t/* { dg-final { gdb-test 55 \"f\" \"(0x37ULL << 31)\" } } */\n-  unsigned long long g = (x & 255) + (0x37ULL << 50);\t/* { dg-final { gdb-test 55 \"g\" \"(0x37ULL << 50)\" } } */\n-  unsigned long long h = (x & 255) + (0x1efULL << 33);\t/* { dg-final { gdb-test 55 \"h\" \"(0x1efULL << 33)\" } } */\n-  unsigned long long i = (x & 255) + (0x1efULL << 50);\t/* { dg-final { gdb-test 55 \"i\" \"(0x1efULL << 50)\" } } */\n-  unsigned long long j = (x & 255) + -(0x17ULL << 31);\t/* { dg-final { gdb-test 55 \"j\" \"-(0x17ULL << 31)\" } } */\n-  unsigned long long k = (x & 255) + -(0x7ULL << 33);\t/* { dg-final { gdb-test 55 \"k\" \"-(0x7ULL << 33)\" } } */\n-  unsigned long long l = (x & 255) + -(0x1ULL << 35);\t/* { dg-final { gdb-test 55 \"l\" \"-(0x1ULL << 35)\" } } */\n-  unsigned long long m = (x & 255) + -(0x17ULL << 15);\t/* { dg-final { gdb-test 55 \"m\" \"-(0x17ULL << 15)\" } } */\n-  unsigned long long n = (x & 255) + -(0x17ULL << 50);\t/* { dg-final { gdb-test 55 \"n\" \"-(0x17ULL << 50)\" } } */\n-  unsigned long long o = (x & 255) + -(0x37ULL << 31);\t/* { dg-final { gdb-test 55 \"o\" \"-(0x37ULL << 31)\" } } */\n-  unsigned long long p = (x & 255) + -(0x37ULL << 50);\t/* { dg-final { gdb-test 55 \"p\" \"-(0x37ULL << 50)\" } } */\n-  unsigned long long q = (x & 255) + -(0x1efULL << 33);\t/* { dg-final { gdb-test 55 \"q\" \"-(0x1efULL << 33)\" } } */\n-  unsigned long long r = (x & 255) + -(0x1efULL << 50);\t/* { dg-final { gdb-test 55 \"r\" \"-(0x1efULL << 50)\" } } */\n+  unsigned long long a = (x & 255) + (0x17ULL << 31);\t/* { dg-final { gdb-test .+18 \"a\" \"(0x17ULL << 31)\" } } */\n+  unsigned long long b = (x & 255) + (0x7ULL << 33);\t/* { dg-final { gdb-test .+17 \"b\" \"(0x7ULL << 33)\" } } */\n+  unsigned long long c = (x & 255) + (0x1ULL << 35);\t/* { dg-final { gdb-test .+16 \"c\" \"(0x1ULL << 35)\" } } */\n+  unsigned long long d = (x & 255) + (0x17ULL << 15);\t/* { dg-final { gdb-test .+15 \"d\" \"(0x17ULL << 15)\" } } */\n+  unsigned long long e = (x & 255) + (0x17ULL << 50);\t/* { dg-final { gdb-test .+14 \"e\" \"(0x17ULL << 50)\" } } */\n+  unsigned long long f = (x & 255) + (0x37ULL << 31);\t/* { dg-final { gdb-test .+13 \"f\" \"(0x37ULL << 31)\" } } */\n+  unsigned long long g = (x & 255) + (0x37ULL << 50);\t/* { dg-final { gdb-test .+12 \"g\" \"(0x37ULL << 50)\" } } */\n+  unsigned long long h = (x & 255) + (0x1efULL << 33);\t/* { dg-final { gdb-test .+11 \"h\" \"(0x1efULL << 33)\" } } */\n+  unsigned long long i = (x & 255) + (0x1efULL << 50);\t/* { dg-final { gdb-test .+10 \"i\" \"(0x1efULL << 50)\" } } */\n+  unsigned long long j = (x & 255) + -(0x17ULL << 31);\t/* { dg-final { gdb-test .+9 \"j\" \"-(0x17ULL << 31)\" } } */\n+  unsigned long long k = (x & 255) + -(0x7ULL << 33);\t/* { dg-final { gdb-test .+8 \"k\" \"-(0x7ULL << 33)\" } } */\n+  unsigned long long l = (x & 255) + -(0x1ULL << 35);\t/* { dg-final { gdb-test .+7 \"l\" \"-(0x1ULL << 35)\" } } */\n+  unsigned long long m = (x & 255) + -(0x17ULL << 15);\t/* { dg-final { gdb-test .+6 \"m\" \"-(0x17ULL << 15)\" } } */\n+  unsigned long long n = (x & 255) + -(0x17ULL << 50);\t/* { dg-final { gdb-test .+5 \"n\" \"-(0x17ULL << 50)\" } } */\n+  unsigned long long o = (x & 255) + -(0x37ULL << 31);\t/* { dg-final { gdb-test .+4 \"o\" \"-(0x37ULL << 31)\" } } */\n+  unsigned long long p = (x & 255) + -(0x37ULL << 50);\t/* { dg-final { gdb-test .+3 \"p\" \"-(0x37ULL << 50)\" } } */\n+  unsigned long long q = (x & 255) + -(0x1efULL << 33);\t/* { dg-final { gdb-test .+2 \"q\" \"-(0x1efULL << 33)\" } } */\n+  unsigned long long r = (x & 255) + -(0x1efULL << 50);\t/* { dg-final { gdb-test .+1 \"r\" \"-(0x1efULL << 50)\" } } */\n   v++;\n   return x;\n }"}, {"sha": "5ce6c674be3a0ab2824091f53b44d67921cdae98", "filename": "gcc/testsuite/gcc.dg/guality/ctztest.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fctztest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fctztest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fctztest.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -9,7 +9,7 @@ foo (long x)\n   long f = __builtin_ctzl (x);\n   long g = f;\n   asm volatile (\"\" : \"+r\" (f));\n-  vv++;\t\t/* { dg-final { gdb-test 12 \"g\" \"f\" } } */\n+  vv++;\t\t/* { dg-final { gdb-test . \"g\" \"f\" } } */\n   return f;\n }\n \n@@ -19,7 +19,7 @@ bar (long x)\n   long f = __builtin_ctzl (x);\n   long g = f;\n   asm volatile (\"\" : \"+r\" (f));\n-  vv++;\t\t/* { dg-final { gdb-test 22 \"g\" \"f\" } } */\n+  vv++;\t\t/* { dg-final { gdb-test . \"g\" \"f\" } } */\n   return f;\n }\n "}, {"sha": "f3df96fdb9564c5a7ac8608969474e26178f1806", "filename": "gcc/testsuite/gcc.dg/guality/drap.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fdrap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fdrap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fdrap.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -18,8 +18,8 @@ __attribute__((noinline, noclone)) int\n foo (int v0, int v1, int v2, int v3, int v4, int v5, int a, int b)\n {\n   __attribute__((aligned (32))) int c = bar (a, b);\n-  v++;               /* { dg-final { gdb-test 21 \"a\" \"5\" } } */\n-  return a + b + c;  /* { dg-final { gdb-test 22 \"b\" \"6\" } } */\n+  v++;               /* { dg-final { gdb-test . \"a\" \"5\" } } */\n+  return a + b + c;  /* { dg-final { gdb-test . \"b\" \"6\" } } */\n }\n \n int"}, {"sha": "ce9003c21c5142be62d6a451ce19a7b634a8b437", "filename": "gcc/testsuite/gcc.dg/guality/nrv-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fnrv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fnrv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fnrv-1.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -17,7 +17,7 @@ f ()\n   a2.i[0] = 42;\n   if (a3.i[0] != 0)\n     abort ();\n-  a2.i[4] = 7;\t/* { dg-final { gdb-test 20 \"a2.i\\[0\\]\" \"42\" } } */\n+  a2.i[4] = 7;\t/* { dg-final { gdb-test . \"a2.i\\[0\\]\" \"42\" } } */\n   return a2;\n }\n "}, {"sha": "cd306328fda48422e4c5aad388d8c26ce016305d", "filename": "gcc/testsuite/gcc.dg/guality/pr41353-1.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41353-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41353-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41353-1.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -7,35 +7,35 @@ int vari __attribute__((used)) = 17, varj;\n __attribute__((noinline)) int\n f1 (void)\n {\n-  /* { dg-final { gdb-test 17 \"vari\" \"17\" } } */\n-  int vari1 = 2 * vari; /* { dg-final { gdb-test 17 \"vari1\" \"2 * 17\" } } */\n-  int vari2 = 3 * vari; /* { dg-final { gdb-test 17 \"vari2\" \"3 * 17\" } } */\n-  int vari3 = 2 * vari; /* { dg-final { gdb-test 17 \"vari3\" \"2 * 17\" } } */\n-  int vari4 = 3 * vari; /* { dg-final { gdb-test 17 \"vari4\" \"3 * 17\" } } */\n-  int vari5 = 4 * vari; /* { dg-final { gdb-test 17 \"vari5\" \"4 * 17\" } } */\n-  int vari6 = 5 * vari; /* { dg-final { gdb-test 17 \"vari6\" \"5 * 17\" } } */\n+  /* { dg-final { gdb-test .+7 \"vari\" \"17\" } } */\n+  int vari1 = 2 * vari; /* { dg-final { gdb-test .+6 \"vari1\" \"2 * 17\" } } */\n+  int vari2 = 3 * vari; /* { dg-final { gdb-test .+5 \"vari2\" \"3 * 17\" } } */\n+  int vari3 = 2 * vari; /* { dg-final { gdb-test .+4 \"vari3\" \"2 * 17\" } } */\n+  int vari4 = 3 * vari; /* { dg-final { gdb-test .+3 \"vari4\" \"3 * 17\" } } */\n+  int vari5 = 4 * vari; /* { dg-final { gdb-test .+2 \"vari5\" \"4 * 17\" } } */\n+  int vari6 = 5 * vari; /* { dg-final { gdb-test .+1 \"vari6\" \"5 * 17\" } } */\n   return varj;\n }\n \n __attribute__((noinline)) int\n f2 (int i, int j)\n {\n   j += i;\n-  /* { dg-final { gdb-test 28 \"i\" \"37\" } } */\n-  /* { dg-final { gdb-test 28 \"j\" \"28 + 37\" { xfail *-*-* } } } */\n-  int i1 = 2 * i; /* { dg-final { gdb-test 28 \"i1\" \"2 * 37\" } } */\n-  int i2 = 3 * i; /* { dg-final { gdb-test 28 \"i2\" \"3 * 37\" } } */\n+  /* { dg-final { gdb-test .+4 \"i\" \"37\" } } */\n+  /* { dg-final { gdb-test .+3 \"j\" \"28 + 37\" { xfail *-*-* } } } */\n+  int i1 = 2 * i; /* { dg-final { gdb-test .+2 \"i1\" \"2 * 37\" } } */\n+  int i2 = 3 * i; /* { dg-final { gdb-test .+1 \"i2\" \"3 * 37\" } } */\n   return j;\n }\n \n __attribute__((noinline)) int\n f3 (int i)\n {\n   asm volatile (\"\" : \"+r\" (i));\n-  /* { dg-final { gdb-test 39 \"i\" \"12\" } } */\n-  int i1 = 2 * i; /* { dg-final { gdb-test 39 \"i1\" \"2 * 12\" } } */\n-  int i2 = 2 * i; /* { dg-final { gdb-test 39 \"i2\" \"2 * 12\" } } */\n-  int i3 = 3 * i; /* { dg-final { gdb-test 39 \"i3\" \"3 * 12\" } } */\n+  /* { dg-final { gdb-test .+4 \"i\" \"12\" } } */\n+  int i1 = 2 * i; /* { dg-final { gdb-test .+3 \"i1\" \"2 * 12\" } } */\n+  int i2 = 2 * i; /* { dg-final { gdb-test .+2 \"i2\" \"2 * 12\" } } */\n+  int i3 = 3 * i; /* { dg-final { gdb-test .+1 \"i3\" \"3 * 12\" } } */\n   return i;\n }\n "}, {"sha": "e3bfe1d93bfadbfd05e5986166ae7abbf9578785", "filename": "gcc/testsuite/gcc.dg/guality/pr41353-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41353-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41353-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41353-2.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -8,8 +8,8 @@ int vari __attribute__((used)) = 17, varj;\n __attribute__((noinline)) int\n f1 (void)\n {\n-  int vari1 = 2 * vari; /* { dg-final { gdb-test 13 \"vari1\" \"2 * 17\" } } */\n-  int vari2 = 3 * vari; /* { dg-final { gdb-test 13 \"vari2\" \"3 * 17\" } } */\n+  int vari1 = 2 * vari; /* { dg-final { gdb-test .+2 \"vari1\" \"2 * 17\" } } */\n+  int vari2 = 3 * vari; /* { dg-final { gdb-test .+1 \"vari2\" \"3 * 17\" } } */\n   return varj;\n }\n "}, {"sha": "97ed1e33d4bcecb1f07ee45bc5e0aea86a775187", "filename": "gcc/testsuite/gcc.dg/guality/pr41404-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41404-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41404-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41404-1.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -7,11 +7,11 @@ int bar1 (int i)\n {\n   const char *foo = \"foo\";\n   asm volatile (\"\" : \"+r\" (i) : : \"memory\");\n-  i++;\t/* { dg-final { gdb-test 10 \"*foo\" \"'f'\" } } */\n+  i++;\t/* { dg-final { gdb-test . \"*foo\" \"'f'\" } } */\n   asm volatile (\"\" : \"+r\" (i) : : \"memory\");\n   foo = \"bar\";\n   asm volatile (\"\" : \"+r\" (i) : : \"memory\");\n-  i++;\t/* { dg-final { gdb-test 14 \"*foo\" \"'b'\" } } */\n+  i++;\t/* { dg-final { gdb-test . \"*foo\" \"'b'\" } } */\n   asm volatile (\"\" : \"+r\" (i) : : \"memory\");\n   return i;\n }\n@@ -21,7 +21,7 @@ int bar2 (int i)\n {\n   const char *foo = \"foo\";\n   asm volatile (\"\" : \"+r\" (i) : : \"memory\");\n-  i++;\t/* { dg-final { gdb-test 24 \"*foo\" \"'f'\" } } */\n+  i++;\t/* { dg-final { gdb-test . \"*foo\" \"'f'\" } } */\n   asm volatile (\"\" : \"+r\" (i) : : \"memory\");\n   return i;\n }"}, {"sha": "43003045c8135b4811d4ae4f04ac3431dc90688a", "filename": "gcc/testsuite/gcc.dg/guality/pr43051-1.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43051-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43051-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43051-1.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -31,14 +31,14 @@ bar (struct S *c, int v, struct S *e)\n #endif\n   while (c < e)\n     {\n-      foo (\"c\", (__UINTPTR_TYPE__) c, 0);\t/* { dg-final { gdb-test 34 \"c\" \"\\&a\\[0\\]\" } } */\n-      foo (\"v\", v, 1);\t\t\t\t/* { dg-final { gdb-test 35 \"v\" \"1\" } } */\n-      foo (\"e\", (__UINTPTR_TYPE__) e, 2);\t/* { dg-final { gdb-test 36 \"e\" \"\\&a\\[1\\]\" } } */\n+      foo (\"c\", (__UINTPTR_TYPE__) c, 0);\t/* { dg-final { gdb-test . \"c\" \"\\&a\\[0\\]\" } } */\n+      foo (\"v\", v, 1);\t\t\t\t/* { dg-final { gdb-test . \"v\" \"1\" } } */\n+      foo (\"e\", (__UINTPTR_TYPE__) e, 2);\t/* { dg-final { gdb-test . \"e\" \"\\&a\\[1\\]\" } } */\n       if (c->v == v)\n \treturn c;\n-      foo (\"c\", (__UINTPTR_TYPE__) c, 3);\t/* { dg-final { gdb-test 39 \"c\" \"\\&a\\[0\\]\" } } */\n-      foo (\"v\", v, 4);\t\t\t\t/* { dg-final { gdb-test 40 \"v\" \"1\" } } */\n-      foo (\"e\", (__UINTPTR_TYPE__) e, 5);\t/* { dg-final { gdb-test 41 \"e\" \"\\&a\\[1\\]\" } } */\n+      foo (\"c\", (__UINTPTR_TYPE__) c, 3);\t/* { dg-final { gdb-test . \"c\" \"\\&a\\[0\\]\" } } */\n+      foo (\"v\", v, 4);\t\t\t\t/* { dg-final { gdb-test . \"v\" \"1\" } } */\n+      foo (\"e\", (__UINTPTR_TYPE__) e, 5);\t/* { dg-final { gdb-test . \"e\" \"\\&a\\[1\\]\" } } */\n       c++;\n     }\n #ifdef __i386__"}, {"sha": "39bd26aae0175f7e35a963fdf5237e979ed4aad4", "filename": "gcc/testsuite/gcc.dg/guality/pr43077-1.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43077-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43077-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43077-1.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -7,16 +7,16 @@ int varb;\n int __attribute__((noinline))\n fn1 (void)\n {\n-  int vara = (varb == 3);\t\t/* { dg-final { gdb-test 11 \"vara\" \"0\" } } */\n-  asm volatile (\"\" : : \"g\" (vara));\t/* { dg-final { gdb-test 11 \"varb\" \"2\" } } */\n+  int vara = (varb == 3);\t\t/* { dg-final { gdb-test .+1 \"vara\" \"0\" } } */\n+  asm volatile (\"\" : : \"g\" (vara));\t/* { dg-final { gdb-test . \"varb\" \"2\" } } */\n   return 0;\n }\n \n int __attribute__((noinline))\n fn2 (void)\n {\n-  int vara = (varb == 3);\t\t/* { dg-final { gdb-test 19 \"vara\" \"1\" } } */\n-  asm volatile (\"\" : : \"g\" (vara));\t/* { dg-final { gdb-test 19 \"varb\" \"3\" } } */\n+  int vara = (varb == 3);\t\t/* { dg-final { gdb-test .+1 \"vara\" \"1\" } } */\n+  asm volatile (\"\" : : \"g\" (vara));\t/* { dg-final { gdb-test . \"varb\" \"3\" } } */\n   return 0;\n }\n \n@@ -33,12 +33,12 @@ fn3 (void)\n {\n   unsigned long a = 0, b = 0, c = 0;\n   a = foo (&b, &c);\n-\t\t\t\t\t/* { dg-final { gdb-test 42 \"a\" \"1\" } } */\n-\t\t\t\t\t/* { dg-final { gdb-test 42 \"b\" \"2\" } } */\n-\t\t\t\t\t/* { dg-final { gdb-test 42 \"c\" \"3\" } } */\n-  unsigned long vara = a;\t\t/* { dg-final { gdb-test 42 \"vara\" \"1\" } } */\n-  unsigned long varb = b;\t\t/* { dg-final { gdb-test 42 \"varb\" \"2\" } } */\n-  unsigned long varc = c;\t\t/* { dg-final { gdb-test 42 \"varc\" \"3\" } } */\n+\t\t\t\t\t/* { dg-final { gdb-test .+6 \"a\" \"1\" } } */\n+\t\t\t\t\t/* { dg-final { gdb-test .+5 \"b\" \"2\" } } */\n+\t\t\t\t\t/* { dg-final { gdb-test .+4 \"c\" \"3\" } } */\n+  unsigned long vara = a;\t\t/* { dg-final { gdb-test .+3 \"vara\" \"1\" } } */\n+  unsigned long varb = b;\t\t/* { dg-final { gdb-test .+2 \"varb\" \"2\" } } */\n+  unsigned long varc = c;\t\t/* { dg-final { gdb-test .+1 \"varc\" \"3\" } } */\n   asm volatile (\"\" : : \"g\" (vara), \"g\" (varb), \"g\" (varc));\n   return a;\n }"}, {"sha": "cd0ae03b3d96665e2d15fb938cb8d3cd105ee581", "filename": "gcc/testsuite/gcc.dg/guality/pr43177.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43177.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43177.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43177.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -11,17 +11,17 @@ long __attribute__((noinline))\n foo (long x)\n {\n   long l = x + 3;\n-  bar (l);/* { dg-final { gdb-test 15 \"l\" \"10\" } } */\n-  bar (l);/* { dg-final { gdb-test 15 \"x\" \"7\" } } */\n+  bar (l);/* { dg-final { gdb-test .+1 \"l\" \"10\" } } */\n+  bar (l);/* { dg-final { gdb-test . \"x\" \"7\" } } */\n   return l;\n }\n \n long __attribute__((noinline))\n baz (int x)\n {\n   long l = x + 3;\n-  bar (l);/* { dg-final { gdb-test 24 \"l\" \"10\" } } */\n-  bar (l);/* { dg-final { gdb-test 24 \"x\" \"7\" } } */\n+  bar (l);/* { dg-final { gdb-test .+1 \"l\" \"10\" } } */\n+  bar (l);/* { dg-final { gdb-test . \"x\" \"7\" } } */\n   return l;\n }\n "}, {"sha": "62eea07ff3aa560cf490f3296a079fe5e62cc744", "filename": "gcc/testsuite/gcc.dg/guality/pr43329-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43329-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43329-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43329-1.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -8,8 +8,8 @@ static inline void\n foo (int argx)\n {\n   int varx = argx;\n-  __asm__ volatile (NOP);\t\t\t/* { dg-final { gdb-test 12 \"argx\" \"25\" } } */\n-  __asm__ volatile (NOP : : \"g\" (varx));\t/* { dg-final { gdb-test 12 \"varx\" \"25\" } } */\n+  __asm__ volatile (NOP);\t\t\t/* { dg-final { gdb-test .+1 \"argx\" \"25\" } } */\n+  __asm__ volatile (NOP : : \"g\" (varx));\t/* { dg-final { gdb-test . \"varx\" \"25\" } } */\n }\n \n int i;"}, {"sha": "82555bcabafb402f8b8f8d5069ef2cdab72d7a7a", "filename": "gcc/testsuite/gcc.dg/guality/pr43479.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43479.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43479.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43479.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -10,13 +10,13 @@ foo (int k, int l, int m, int n)\n     int h = n;\n     {\n       int i = k;\n-      k++;\t/* { dg-final { gdb-test 13 \"i\" \"6\" } } */\n-    }\t\t/* { dg-final { gdb-test 13 \"h\" \"9\" } } */\n-\t\t/* { dg-final { gdb-test 13 \"n\" \"9\" } } */\n+      k++;\t/* { dg-final { gdb-test . \"i\" \"6\" } } */\n+    }\t\t/* { dg-final { gdb-test .-1 \"h\" \"9\" } } */\n+\t\t/* { dg-final { gdb-test .-2 \"n\" \"9\" } } */\n     {\n       int j = m;\n-      m++;\t/* { dg-final { gdb-test 18 \"j\" \"8\" } } */\n-    }\t\t/* { dg-final { gdb-test 18 \"h\" \"9\" } } */\n+      m++;\t/* { dg-final { gdb-test . \"j\" \"8\" } } */\n+    }\t\t/* { dg-final { gdb-test .-1 \"h\" \"9\" } } */\n \t\t/* { dg-final { gdb-test 12 \"n\" \"9\" } } */\n   }\n   asm volatile (\"\" : : \"r\" (k), \"r\" (l));"}, {"sha": "131e608d3fe9ae0bac37325dcfc7c02e7a4ebff7", "filename": "gcc/testsuite/gcc.dg/guality/pr43593.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43593.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43593.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43593.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -13,7 +13,7 @@ foo (void)\n {\n   int i, *j = &i;\n   bar (j);\n-  return 6 + i;\t/* { dg-final { gdb-test 16 \"j\" \"&i\" } } */\n+  return 6 + i;\t/* { dg-final { gdb-test . \"j\" \"&i\" } } */\n }\n \n int"}, {"sha": "5823ce76842fc6cc84587f971602b492452ef919", "filename": "gcc/testsuite/gcc.dg/guality/pr45003-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-1.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -7,7 +7,7 @@ foo (unsigned short *p)\n {\n   int a = *p;\n   asm volatile (\"nop\");\n-  asm volatile (\"nop\" : : \"D\" (a));\t/* { dg-final { gdb-test 10 \"a\" \"0x8078\" } } */\n+  asm volatile (\"nop\" : : \"D\" (a));\t/* { dg-final { gdb-test . \"a\" \"0x8078\" } } */\n   return 0;\n }\n \n@@ -16,7 +16,7 @@ bar (short *p)\n {\n   unsigned int a = *p;\n   asm volatile (\"nop\");\n-  asm volatile (\"nop\" : : \"D\" (a));\t/* { dg-final { gdb-test 19 \"a\" \"0xffff8078\" } } */\n+  asm volatile (\"nop\" : : \"D\" (a));\t/* { dg-final { gdb-test . \"a\" \"0xffff8078\" } } */\n   return 0;\n }\n "}, {"sha": "76cf7615e432bb2ae95431e5f49a104d78689241", "filename": "gcc/testsuite/gcc.dg/guality/pr45003-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-2.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -7,7 +7,7 @@ foo (unsigned short *p)\n {\n   int a = *p;\n   asm volatile (\"nop\" : : \"D\" ((int) *p));\n-  asm volatile (\"nop\" : : \"D\" ((int) *p));\t/* { dg-final { gdb-test 10 \"a\" \"0x8078\" } } */\n+  asm volatile (\"nop\" : : \"D\" ((int) *p));\t/* { dg-final { gdb-test . \"a\" \"0x8078\" } } */\n   return 0;\n }\n \n@@ -16,7 +16,7 @@ bar (short *p)\n {\n   unsigned int a = *p;\n   asm volatile (\"nop\" : : \"D\" ((unsigned int) *p));\n-  asm volatile (\"nop\" : : \"D\" ((unsigned int) *p));\t/* { dg-final { gdb-test 19 \"a\" \"0xffff8078\" } } */\n+  asm volatile (\"nop\" : : \"D\" ((unsigned int) *p));\t/* { dg-final { gdb-test . \"a\" \"0xffff8078\" } } */\n   return 0;\n }\n "}, {"sha": "e9a8c865b3560f7e366161fd12bd79df7e82e2c0", "filename": "gcc/testsuite/gcc.dg/guality/pr45003-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45003-3.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -7,7 +7,7 @@ foo (unsigned short *p)\n {\n   int a = (short) *p;\n   asm volatile (\"nop\" : : \"D\" ((int) *p));\n-  asm volatile (\"nop\" : : \"D\" ((int) *p));\t/* { dg-final { gdb-test 10 \"a\" \"-32648\" } } */\n+  asm volatile (\"nop\" : : \"D\" ((int) *p));\t/* { dg-final { gdb-test . \"a\" \"-32648\" } } */\n   return 0;\n }\n \n@@ -16,7 +16,7 @@ bar (short *p)\n {\n   unsigned int a = (unsigned short) *p;\n   asm volatile (\"nop\" : : \"D\" ((unsigned int) *p));\n-  asm volatile (\"nop\" : : \"D\" ((unsigned int) *p));\t/* { dg-final { gdb-test 19 \"a\" \"0x8078\" } } */\n+  asm volatile (\"nop\" : : \"D\" ((unsigned int) *p));\t/* { dg-final { gdb-test . \"a\" \"0x8078\" } } */\n   return 0;\n }\n "}, {"sha": "f7516b8e9790c4ce5fcd08e7a86f6a50ec138cb2", "filename": "gcc/testsuite/gcc.dg/guality/pr48437.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr48437.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr48437.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr48437.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -11,7 +11,7 @@ int main()\n   for (i = 3; i < 7; ++i)\n     {\n       extern int i;\n-      asm volatile (NOP : : : \"memory\"); /* { dg-final { gdb-test 14 \"i\" \"0\" } } */\n+      asm volatile (NOP : : : \"memory\"); /* { dg-final { gdb-test . \"i\" \"0\" } } */\n     }\n   return 0;\n }"}, {"sha": "baef86fa3dd7d0828945e68dfab8e218b115d3b5", "filename": "gcc/testsuite/gcc.dg/guality/pr48466.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr48466.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr48466.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr48466.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -32,10 +32,10 @@ main ()\n   struct T t;\n   struct U x = foo (\"this is x\");\n   struct S y, z;\n-  y.b = n;\t\t/* { dg-final { gdb-test 38 \"t.a.a\" \"17\" } } */\n-  y.a = 0;\t\t/* { dg-final { gdb-test 38 \"*t.a.b\" \"17\" } } */\n-  bar (&t, 17, 21);\t/* { dg-final { gdb-test 38 \"t.b.a\" \"21\" } } */\n-  v++;\t\t\t/* { dg-final { gdb-test 38 \"*t.b.b\" \"21\" } } */\n+  y.b = n;\t\t/* { dg-final { gdb-test .+3 \"t.a.a\" \"17\" } } */\n+  y.a = 0;\t\t/* { dg-final { gdb-test .+2 \"*t.a.b\" \"17\" } } */\n+  bar (&t, 17, 21);\t/* { dg-final { gdb-test .+1 \"t.b.a\" \"21\" } } */\n+  v++;\t\t\t/* { dg-final { gdb-test . \"*t.b.b\" \"21\" } } */\n   z = y;\n   return 0;\n }"}, {"sha": "4f3a2501eb7c80b2955b6e4fad3a08fa36eb6915", "filename": "gcc/testsuite/gcc.dg/guality/pr49888.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr49888.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr49888.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr49888.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -9,13 +9,13 @@ f (int *p)\n {\n   int c = *p;\n   v = c;\n-  *p = 1; /* { dg-final { gdb-test 12 \"!!c\" \"0\" } } */\n+  *p = 1; /* { dg-final { gdb-test . \"!!c\" \"0\" } } */\n   /* c may very well be optimized out at this point, so we test !c,\n      which will evaluate to the expected value.  We just want to make\n      sure it doesn't remain bound to *p as it did before, in which\n      case !c would evaluate to 0.  *p may also be regarded as aliasing\n      register saves, thus the !!c above.  */\n-  v = 0; /* { dg-final { gdb-test 18 \"!c\" \"1\" } } */\n+  v = 0; /* { dg-final { gdb-test . \"!c\" \"1\" } } */\n }\n int\n main ()"}, {"sha": "e873d1b7b9179ef49ab643826b62a21446b44860", "filename": "gcc/testsuite/gcc.dg/guality/pr54200.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54200.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54200.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54200.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -17,7 +17,7 @@ foo (int z, int x, int b)\n   else\n     {\n       int a = (x + z) + b;\n-      return a; /* { dg-final { gdb-test 20 \"z\" \"3\" } } */\n+      return a; /* { dg-final { gdb-test . \"z\" \"3\" } } */\n     }\n }\n "}, {"sha": "a4105abf99bb67105f4c9fe8ac317d079b056d7d", "filename": "gcc/testsuite/gcc.dg/guality/pr54519-1.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-1.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -15,12 +15,12 @@ fn2 (int x, int y, int z)\n   if (x != z)\n     {\n       fn1 (x);\n-      fn1 (x);\t\t/* { dg-final { gdb-test 20 \"x\" \"36\" } } */\n-      if (x == 36)\t/* { dg-final { gdb-test 20 \"y\" \"25\" } } */\n-\tfn1 (x);\t/* { dg-final { gdb-test 20 \"z\" \"6\" } } */\n-      fn1 (x);\t\t/* { dg-final { gdb-test 23 \"x\" \"98\" } } */\n-      if (x == 98)\t/* { dg-final { gdb-test 23 \"y\" \"117\" } } */\n-\tfn1 (x);\t/* { dg-final { gdb-test 23 \"z\" \"8\" } } */\n+      fn1 (x);\t\t/* { dg-final { gdb-test .+2 \"x\" \"36\" } } */\n+      if (x == 36)\t/* { dg-final { gdb-test .+1 \"y\" \"25\" } } */\n+\tfn1 (x);\t/* { dg-final { gdb-test . \"z\" \"6\" } } */\n+      fn1 (x);\t\t/* { dg-final { gdb-test .+2 \"x\" \"98\" } } */\n+      if (x == 98)\t/* { dg-final { gdb-test .+1 \"y\" \"117\" } } */\n+\tfn1 (x);\t/* { dg-final { gdb-test . \"z\" \"8\" } } */\n       fn1 (x);\n       fn1 (x + a);\n     }"}, {"sha": "6bc16830e209c1553374bb388795f61ea6d63233", "filename": "gcc/testsuite/gcc.dg/guality/pr54519-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-2.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -13,13 +13,13 @@ fn2 (int x, int y)\n {\n   if (y)\n     {\n-      fn1 (x);\t\t/* { dg-final { gdb-test 17 \"x\" \"6\" } } */\n-      fn1 (x);\t\t/* { dg-final { gdb-test 17 \"y\" \"25\" } } */\n+      fn1 (x);\t\t/* { dg-final { gdb-test .+1 \"x\" \"6\" } } */\n+      fn1 (x);\t\t/* { dg-final { gdb-test . \"y\" \"25\" } } */\n       fn1 (x);\n       fn1 (x);\n       y = -2 + x;\n       y = y * y * y + y;\n-      fn1 (x + y);\t/* { dg-final { gdb-test 22 \"y\" \"68\" } } */\n+      fn1 (x + y);\t/* { dg-final { gdb-test . \"y\" \"68\" } } */\n     }\n   return x;\n }"}, {"sha": "da18247b47b32f2673b677fdee509d6b2911fe29", "filename": "gcc/testsuite/gcc.dg/guality/pr54519-3.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-3.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -15,12 +15,12 @@ fn2 (int x, int y, int z)\n   if (x != z)\n     {\n       fn1 (x);\n-      fn1 (x);\t\t/* { dg-final { gdb-test 20 \"x\" \"36\" } } */\n-      if (x == 36)\t/* { dg-final { gdb-test 20 \"y\" \"25\" } } */\n-\tfn1 (x);\t/* { dg-final { gdb-test 20 \"z\" \"6\" } } */\n-      fn1 (x);\t\t/* { dg-final { gdb-test 23 \"x\" \"98\" } } */\n-      if (x == 98)\t/* { dg-final { gdb-test 23 \"y\" \"117\" } } */\n-\tfn1 (x);\t/* { dg-final { gdb-test 23 \"z\" \"8\" } } */\n+      fn1 (x);\t\t/* { dg-final { gdb-test .+2 \"x\" \"36\" } } */\n+      if (x == 36)\t/* { dg-final { gdb-test .+1 \"y\" \"25\" } } */\n+\tfn1 (x);\t/* { dg-final { gdb-test . \"z\" \"6\" } } */\n+      fn1 (x);\t\t/* { dg-final { gdb-test .+2 \"x\" \"98\" } } */\n+      if (x == 98)\t/* { dg-final { gdb-test .+1 \"y\" \"117\" } } */\n+\tfn1 (x);\t/* { dg-final { gdb-test . \"z\" \"8\" } } */\n       fn1 (x);\n       fn1 (x + a);\n     }"}, {"sha": "c82de580bf983c66c6ec23a95788410ab4f1290d", "filename": "gcc/testsuite/gcc.dg/guality/pr54519-4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-4.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -13,13 +13,13 @@ fn2 (int x, int y)\n {\n   if (y)\n     {\n-      fn1 (x);\t\t/* { dg-final { gdb-test 17 \"x\" \"6\" } } */\n-      fn1 (x);\t\t/* { dg-final { gdb-test 17 \"y\" \"25\" } } */\n+      fn1 (x);\t\t/* { dg-final { gdb-test .+1 \"x\" \"6\" } } */\n+      fn1 (x);\t\t/* { dg-final { gdb-test . \"y\" \"25\" } } */\n       fn1 (x);\n       fn1 (x);\n       y = -2 + x;\n       y = y * y * y + y;\n-      fn1 (x + y);\t/* { dg-final { gdb-test 22 \"y\" \"68\" } } */\n+      fn1 (x + y);\t/* { dg-final { gdb-test . \"y\" \"68\" } } */\n     }\n   return x;\n }"}, {"sha": "0903fbf89466cd255d354ce053d10cb4b6469ea0", "filename": "gcc/testsuite/gcc.dg/guality/pr54519-5.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-5.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -13,13 +13,13 @@ fn2 (int x, int y)\n {\n   if (y)\n     {\n-      fn1 (x);\t\t/* { dg-final { gdb-test 17 \"x\" \"6\" } } */\n-      fn1 (x);\t\t/* { dg-final { gdb-test 17 \"y\" \"25\" } } */\n+      fn1 (x);\t\t/* { dg-final { gdb-test .+1 \"x\" \"6\" } } */\n+      fn1 (x);\t\t/* { dg-final { gdb-test . \"y\" \"25\" } } */\n       fn1 (x);\n       fn1 (x);\n       y = -2 + x;\n       y = y * y * y + y;\n-      fn1 (x + y);\t/* { dg-final { gdb-test 22 \"y\" \"68\" } } */\n+      fn1 (x + y);\t/* { dg-final { gdb-test . \"y\" \"68\" } } */\n     }\n   return x;\n }"}, {"sha": "bb3fb5f995ee5241691594036ce095405b02fe65", "filename": "gcc/testsuite/gcc.dg/guality/pr54519-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-6.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -7,8 +7,8 @@\n static inline void\n f1 (int x, int y)\n {\n-  asm volatile (NOP);\t/* { dg-final { gdb-test 11 \"x\" \"2\" } } */\n-  asm volatile (NOP);\t/* { dg-final { gdb-test 11 \"y\" \"0\" } } */\n+  asm volatile (NOP);\t/* { dg-final { gdb-test .+1 \"x\" \"2\" } } */\n+  asm volatile (NOP);\t/* { dg-final { gdb-test . \"y\" \"0\" } } */\n }\n \n static inline void"}, {"sha": "75f9c2a7e1d6b03c37a39316930c7bedc79330d0", "filename": "gcc/testsuite/gcc.dg/guality/pr54551.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54551.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54551.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54551.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -14,8 +14,8 @@ foo (int x, int y, int z)\n   if (x != z)\n     {\n       int a = z + 1;\n-      bar (); /* { dg-final { gdb-test 18 \"a\" \"4\" } } */\n-      bar (); /* { dg-final { gdb-test 18 \"z\" \"3\" } } */\n+      bar (); /* { dg-final { gdb-test .+1 \"a\" \"4\" } } */\n+      bar (); /* { dg-final { gdb-test . \"z\" \"3\" } } */\n     }\n   return y;\n }"}, {"sha": "1741a383f592728f361275d4d74d58dad45a4bc9", "filename": "gcc/testsuite/gcc.dg/guality/pr54693-2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54693-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54693-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54693-2.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -16,10 +16,10 @@ foo (int x, int y, int z)\n {\n   int i = 0;\n   while (x > 3 && y > 3 && z > 3)\n-    {\t\t/* { dg-final { gdb-test 21 \"i\" \"v + 1\" } } */\n-\t\t/* { dg-final { gdb-test 21 \"x\" \"10 - i\" } } */\n-      bar (i);\t/* { dg-final { gdb-test 21 \"y\" \"20 - 2 * i\" } } */\n-\t\t/* { dg-final { gdb-test 21 \"z\" \"30 - 3 * i\" } } */\n+    {\t\t/* { dg-final { gdb-test .+2 \"i\" \"v + 1\" } } */\n+\t\t/* { dg-final { gdb-test .+1 \"x\" \"10 - i\" } } */\n+      bar (i);\t/* { dg-final { gdb-test . \"y\" \"20 - 2 * i\" } } */\n+\t\t/* { dg-final { gdb-test .-1 \"z\" \"30 - 3 * i\" } } */\n       i++, x--, y -= 2, z -= 3;\n     }\n }"}, {"sha": "a7f7a66f79de732a212d0fc8adc0f0d87be8eca8", "filename": "gcc/testsuite/gcc.dg/guality/pr54693.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54693.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54693.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54693.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -19,7 +19,7 @@ main ()\n   for (i = 0; i < 10; i++)\n     {\n       c = 0x30 + i;\n-      foo (&arr[i], c); /* { dg-final { gdb-test 22 \"i\" \"c - 48\" } } */\n+      foo (&arr[i], c); /* { dg-final { gdb-test . \"i\" \"c - 48\" } } */\n     }\n   arr[10] = 0;\n "}, {"sha": "527a1de183be2b57e8731372105dc098743f6738", "filename": "gcc/testsuite/gcc.dg/guality/pr54796.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54796.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54796.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54796.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -12,9 +12,9 @@ __attribute__((noinline, noclone)) void\n foo (int a, int b)\n {\n   int c = a;\n-  char d[b];\t/* { dg-final { gdb-test 17 \"a\" \"5\" } } */\n-  bar (d, 2);\t/* { dg-final { gdb-test 17 \"b\" \"6\" } } */\n-  bar (d, 4);\t/* { dg-final { gdb-test 17 \"c\" \"5\" } } */\n+  char d[b];\t/* { dg-final { gdb-test .+2 \"a\" \"5\" } } */\n+  bar (d, 2);\t/* { dg-final { gdb-test .+1 \"b\" \"6\" } } */\n+  bar (d, 4);\t/* { dg-final { gdb-test . \"c\" \"5\" } } */\n }\n \n int"}, {"sha": "5d32af07c32d6e7ca195d303622eac6d023a781a", "filename": "gcc/testsuite/gcc.dg/guality/pr54970.c", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54970.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54970.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54970.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -8,40 +8,40 @@\n int\n main ()\n {\n-  int a[] = { 1, 2, 3 };\t/* { dg-final { gdb-test 15 \"a\\[0\\]\" \"1\" } } */\n-  int *p = a + 2;\t\t/* { dg-final { gdb-test 15 \"a\\[1\\]\" \"2\" } } */\n-  int *q = a + 1;\t\t/* { dg-final { gdb-test 15 \"a\\[2\\]\" \"3\" } } */\n-\t\t\t\t/* { dg-final { gdb-test 15 \"*p\" \"3\" } } */\n-  asm volatile (NOP);\t\t/* { dg-final { gdb-test 15 \"*q\" \"2\" } } */\n-  *p += 10;\t\t\t/* { dg-final { gdb-test 20 \"a\\[0\\]\" \"1\" } } */\n-\t\t\t\t/* { dg-final { gdb-test 20 \"a\\[1\\]\" \"2\" } } */\n-\t\t\t\t/* { dg-final { gdb-test 20 \"a\\[2\\]\" \"13\" } } */\n-\t\t\t\t/* { dg-final { gdb-test 20 \"*p\" \"13\" } } */\n-  asm volatile (NOP);\t\t/* { dg-final { gdb-test 20 \"*q\" \"2\" } } */\n-  *q += 10;\t\t\t/* { dg-final { gdb-test 25 \"a\\[0\\]\" \"1\" } } */\n-\t\t\t\t/* { dg-final { gdb-test 25 \"a\\[1\\]\" \"12\" } } */\n-\t\t\t\t/* { dg-final { gdb-test 25 \"a\\[2\\]\" \"13\" } } */\n-\t\t\t\t/* { dg-final { gdb-test 25 \"*p\" \"13\" } } */\n-  asm volatile (NOP);\t\t/* { dg-final { gdb-test 25 \"*q\" \"12\" } } */\n+  int a[] = { 1, 2, 3 };\t/* { dg-final { gdb-test .+4 \"a\\[0\\]\" \"1\" } } */\n+  int *p = a + 2;\t\t/* { dg-final { gdb-test .+3 \"a\\[1\\]\" \"2\" } } */\n+  int *q = a + 1;\t\t/* { dg-final { gdb-test .+2 \"a\\[2\\]\" \"3\" } } */\n+\t\t\t\t/* { dg-final { gdb-test .+1 \"*p\" \"3\" } } */\n+  asm volatile (NOP);\t\t/* { dg-final { gdb-test . \"*q\" \"2\" } } */\n+  *p += 10;\t\t\t/* { dg-final { gdb-test .+4 \"a\\[0\\]\" \"1\" } } */\n+\t\t\t\t/* { dg-final { gdb-test .+3 \"a\\[1\\]\" \"2\" } } */\n+\t\t\t\t/* { dg-final { gdb-test .+2 \"a\\[2\\]\" \"13\" } } */\n+\t\t\t\t/* { dg-final { gdb-test .+1 \"*p\" \"13\" } } */\n+  asm volatile (NOP);\t\t/* { dg-final { gdb-test . \"*q\" \"2\" } } */\n+  *q += 10;\t\t\t/* { dg-final { gdb-test .+4 \"a\\[0\\]\" \"1\" } } */\n+\t\t\t\t/* { dg-final { gdb-test .+3 \"a\\[1\\]\" \"12\" } } */\n+\t\t\t\t/* { dg-final { gdb-test .+2 \"a\\[2\\]\" \"13\" } } */\n+\t\t\t\t/* { dg-final { gdb-test .+1 \"*p\" \"13\" } } */\n+  asm volatile (NOP);\t\t/* { dg-final { gdb-test . \"*q\" \"12\" } } */\n   __builtin_memcpy (&a, (int [3]) { 4, 5, 6 }, sizeof (a));\n-\t\t\t\t/* { dg-final { gdb-test 31 \"a\\[0\\]\" \"4\" { xfail { *-*-* } } } } */\n-\t\t\t\t/* { dg-final { gdb-test 31 \"a\\[1\\]\" \"5\" } } */\n-\t\t\t\t/* { dg-final { gdb-test 31 \"a\\[2\\]\" \"6\" } } */\n-\t\t\t\t/* { dg-final { gdb-test 31 \"*p\" \"6\" } } */\n-  asm volatile (NOP);\t\t/* { dg-final { gdb-test 31 \"*q\" \"5\" } } */\n-  *p += 20;\t\t\t/* { dg-final { gdb-test 36 \"a\\[0\\]\" \"4\" { xfail { *-*-* } } } } */\n-\t\t\t\t/* { dg-final { gdb-test 36 \"a\\[1\\]\" \"5\" } } */\n-\t\t\t\t/* { dg-final { gdb-test 36 \"a\\[2\\]\" \"26\" } } */\n-\t\t\t\t/* { dg-final { gdb-test 36 \"*p\" \"26\" } } */\n-  asm volatile (NOP);\t\t/* { dg-final { gdb-test 36 \"*q\" \"5\" } } */\n-  *q += 20;\t\t\t/* { dg-final { gdb-test 45 \"a\\[0\\]\" \"4\" { xfail { *-*-* } } } } */\n-\t\t\t\t/* { dg-final { gdb-test 45 \"a\\[1\\]\" \"25\" } } */\n-\t\t\t\t/* { dg-final { gdb-test 45 \"a\\[2\\]\" \"26\" } } */\n-\t\t\t\t/* { dg-final { gdb-test 45 \"*p\" \"26\" } } */\n-\t\t\t\t/* { dg-final { gdb-test 45 \"p\\[-1\\]\" \"25\" } } */\n-\t\t\t\t/* { dg-final { gdb-test 45 \"p\\[-2\\]\" \"4\" { xfail { *-*-* } } } } */\n-\t\t\t\t/* { dg-final { gdb-test 45 \"q\\[-1\\]\" \"4\" { xfail { *-*-* } } } } */\n-\t\t\t\t/* { dg-final { gdb-test 45 \"q\\[1\\]\" \"26\" } } */\n-  asm volatile (NOP);\t\t/* { dg-final { gdb-test 45 \"*q\" \"25\" } } */\n+\t\t\t\t/* { dg-final { gdb-test .+4 \"a\\[0\\]\" \"4\" { xfail { *-*-* } } } } */\n+\t\t\t\t/* { dg-final { gdb-test .+3 \"a\\[1\\]\" \"5\" } } */\n+\t\t\t\t/* { dg-final { gdb-test .+2 \"a\\[2\\]\" \"6\" } } */\n+\t\t\t\t/* { dg-final { gdb-test .+1 \"*p\" \"6\" } } */\n+  asm volatile (NOP);\t\t/* { dg-final { gdb-test . \"*q\" \"5\" } } */\n+  *p += 20;\t\t\t/* { dg-final { gdb-test .+4 \"a\\[0\\]\" \"4\" { xfail { *-*-* } } } } */\n+\t\t\t\t/* { dg-final { gdb-test .+3 \"a\\[1\\]\" \"5\" } } */\n+\t\t\t\t/* { dg-final { gdb-test .+2 \"a\\[2\\]\" \"26\" } } */\n+\t\t\t\t/* { dg-final { gdb-test .+1 \"*p\" \"26\" } } */\n+  asm volatile (NOP);\t\t/* { dg-final { gdb-test . \"*q\" \"5\" } } */\n+  *q += 20;\t\t\t/* { dg-final { gdb-test .+8 \"a\\[0\\]\" \"4\" { xfail { *-*-* } } } } */\n+\t\t\t\t/* { dg-final { gdb-test .+7 \"a\\[1\\]\" \"25\" } } */\n+\t\t\t\t/* { dg-final { gdb-test .+6 \"a\\[2\\]\" \"26\" } } */\n+\t\t\t\t/* { dg-final { gdb-test .+5 \"*p\" \"26\" } } */\n+\t\t\t\t/* { dg-final { gdb-test .+4 \"p\\[-1\\]\" \"25\" } } */\n+\t\t\t\t/* { dg-final { gdb-test .+3 \"p\\[-2\\]\" \"4\" { xfail { *-*-* } } } } */\n+\t\t\t\t/* { dg-final { gdb-test .+2 \"q\\[-1\\]\" \"4\" { xfail { *-*-* } } } } */\n+\t\t\t\t/* { dg-final { gdb-test .+1 \"q\\[1\\]\" \"26\" } } */\n+  asm volatile (NOP);\t\t/* { dg-final { gdb-test . \"*q\" \"25\" } } */\n   return 0;\n }"}, {"sha": "6ed0b7e0cee2b72a2cab9a0784e8b9c3328ba94c", "filename": "gcc/testsuite/gcc.dg/guality/pr67192.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr67192.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr67192.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr67192.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -24,7 +24,7 @@ f1 (void)\n       if (last ())\n \tbreak;\n     }\n-  do_it (); /* { dg-final { gdb-test 27 \"cnt\" \"5\" } } */\n+  do_it (); /* { dg-final { gdb-test . \"cnt\" \"5\" } } */\n }\n \n __attribute__((noinline, noclone)) static void\n@@ -36,7 +36,7 @@ f2 (void)\n \tbreak;\n       do_it ();\n     }\n-  do_it (); /* { dg-final { gdb-test 39 \"cnt\" \"10\" } } */\n+  do_it (); /* { dg-final { gdb-test . \"cnt\" \"10\" } } */\n }\n \n __attribute__((noinline, noclone)) static void\n@@ -45,18 +45,18 @@ f3 (void)\n   for (;; do_it())\n     if (last ())\n       break;\n-  do_it (); /* { dg-final { gdb-test 48 \"cnt\" \"15\" } } */\n+  do_it (); /* { dg-final { gdb-test . \"cnt\" \"15\" } } */\n }\n \n __attribute__((noinline, noclone)) static void\n f4 (void)\n {\n-  while (1) /* { dg-final { gdb-test 54 \"cnt\" \"15\" } } */\n+  while (1) /* { dg-final { gdb-test . \"cnt\" \"15\" } } */\n     if (last ())\n       break;\n     else\n       do_it ();\n-  do_it (); /* { dg-final { gdb-test 59 \"cnt\" \"20\" } } */\n+  do_it (); /* { dg-final { gdb-test . \"cnt\" \"20\" } } */\n }\n \n void (*volatile fnp1) (void) = f1;"}, {"sha": "163214972f526b3ce73e109bb61e1cd70001060f", "filename": "gcc/testsuite/gcc.dg/guality/pr69947.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr69947.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr69947.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr69947.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -10,8 +10,8 @@ __attribute__((noinline, noclone)) void\n foo (void)\n {\n   static const char a[] = \"abcdefg\";\n-  const char *b = a;\t\t/* { dg-final { gdb-test 14 \"c\\[2\\]\" \"'o'\" } } */\n-  asm (NOP : : : \"memory\");\t/* { dg-final { gdb-test 14 \"b\\[4\\]\" \"'e'\" } } */\n+  const char *b = a;\t\t/* { dg-final { gdb-test .+1 \"c\\[2\\]\" \"'o'\" } } */\n+  asm (NOP : : : \"memory\");\t/* { dg-final { gdb-test . \"b\\[4\\]\" \"'e'\" } } */\n }\n \n int"}, {"sha": "428b4122fe9b0933271c9b0c0a0b2c75500bc286", "filename": "gcc/testsuite/gcc.dg/guality/pr78726.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr78726.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr78726.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr78726.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -15,9 +15,9 @@ foo (void)\n   unsigned d2 = d1 * c;\t\t/* { dg-final { gdb-test 21 \"d2\" \"~36U * 173 * 173\" } } */\n   unsigned d3 = 1023094746 * a;\t/* { dg-final { gdb-test 21 \"d3\" \"~36U * 1023094746\" } } */\n   d = d2 + d3;\n-  unsigned d4 = d1 * 2;     \t/* { dg-final { gdb-test 21 \"d4\" \"~36U * 173 * 2\" } } */\n-  unsigned d5 = d2 * 2;\t\t/* { dg-final { gdb-test 21 \"d5\" \"~36U * 173 * 173 * 2\" } } */\n-  unsigned d6 = d3 * 2;\t\t/* { dg-final { gdb-test 21 \"d6\" \"~36U * 1023094746 * 2\" } } */\n+  unsigned d4 = d1 * 2;     \t/* { dg-final { gdb-test .+3 \"d4\" \"~36U * 173 * 2\" } } */\n+  unsigned d5 = d2 * 2;\t\t/* { dg-final { gdb-test .+2 \"d5\" \"~36U * 173 * 173 * 2\" } } */\n+  unsigned d6 = d3 * 2;\t\t/* { dg-final { gdb-test .+1 \"d6\" \"~36U * 1023094746 * 2\" } } */\n   asm (NOP : : : \"memory\");\n }\n "}, {"sha": "d2b4acbdb751bb3ce8f894f53013b5d7d2bfcdfe", "filename": "gcc/testsuite/gcc.dg/guality/rotatetest.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Frotatetest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Frotatetest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Frotatetest.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -9,7 +9,7 @@ f1 (unsigned long x)\n   long f = (x << 12) | (x >> (64 - 12));\n   long g = f;\n   asm volatile (\"\" : \"+r\" (f));\n-  vv++;\t\t/* { dg-final { gdb-test 12 \"g\" \"f\" } } */\n+  vv++;\t\t/* { dg-final { gdb-test . \"g\" \"f\" } } */\n   return f;\n }\n \n@@ -19,7 +19,7 @@ f2 (unsigned long x, int y)\n   long f = (x << y) | (x >> (64 - y));\n   long g = f;\n   asm volatile (\"\" : \"+r\" (f));\n-  vv++;\t\t/* { dg-final { gdb-test 22 \"g\" \"f\" } } */\n+  vv++;\t\t/* { dg-final { gdb-test . \"g\" \"f\" } } */\n   return f;\n }\n \n@@ -29,7 +29,7 @@ f3 (unsigned long x, int y)\n   long f = (x >> y) | (x << (64 - y));\n   long g = f;\n   asm volatile (\"\" : \"+r\" (f));\n-  vv++;\t\t/* { dg-final { gdb-test 32 \"g\" \"f\" } } */\n+  vv++;\t\t/* { dg-final { gdb-test . \"g\" \"f\" } } */\n   return f;\n }\n \n@@ -39,7 +39,7 @@ f4 (unsigned int x)\n   unsigned int f = (x << 12) | (x >> (32 - 12));\n   unsigned int g = f;\n   asm volatile (\"\" : \"+r\" (f));\n-  vv++;\t\t/* { dg-final { gdb-test 42 \"g\" \"f\" } } */\n+  vv++;\t\t/* { dg-final { gdb-test . \"g\" \"f\" } } */\n   return f;\n }\n \n@@ -49,7 +49,7 @@ f5 (unsigned int x, int y)\n   unsigned int f = (x << y) | (x >> (32 - y));\n   unsigned int g = f;\n   asm volatile (\"\" : \"+r\" (f));\n-  vv++;\t\t/* { dg-final { gdb-test 52 \"g\" \"f\" } } */\n+  vv++;\t\t/* { dg-final { gdb-test . \"g\" \"f\" } } */\n   return f;\n }\n \n@@ -59,7 +59,7 @@ f6 (unsigned int x, int y)\n   unsigned int f = (x >> y) | (x << (32 - y));\n   unsigned int g = f;\n   asm volatile (\"\" : \"+r\" (f));\n-  vv++;\t\t/* { dg-final { gdb-test 62 \"g\" \"f\" } } */\n+  vv++;\t\t/* { dg-final { gdb-test . \"g\" \"f\" } } */\n   return f;\n }\n "}, {"sha": "a747bc302aa7c2e46d2a6a71e57314da8d9ffdee", "filename": "gcc/testsuite/gcc.dg/guality/sra-1.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fsra-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fsra-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fsra-1.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -17,8 +17,8 @@ f1 (int k)\n   struct A a = { 4, k + 6 };\n   asm (\"\" : \"+r\" (a.i));\n   a.j++;\n-  bar (a.i);\t\t/* { dg-final { gdb-test 21 \"a.i\" \"4\" } } */\n-  bar (a.j);\t\t/* { dg-final { gdb-test 21 \"a.j\" \"14\" } } */\n+  bar (a.i);\t\t/* { dg-final { gdb-test .+1 \"a.i\" \"4\" } } */\n+  bar (a.j);\t\t/* { dg-final { gdb-test . \"a.j\" \"14\" } } */\n   return a.i + a.j;\n }\n \n@@ -28,8 +28,8 @@ f2 (int k)\n   int a[2] = { 4, k + 6 };\n   asm (\"\" : \"+r\" (a[0]));\n   a[1]++;\n-  bar (a[0]);\t\t/* { dg-final { gdb-test 32 \"a\\[0\\]\" \"4\" } } */\n-  bar (a[1]);\t\t/* { dg-final { gdb-test 32 \"a\\[1\\]\" \"14\" } } */\n+  bar (a[0]);\t\t/* { dg-final { gdb-test .+1 \"a\\[0\\]\" \"4\" } } */\n+  bar (a[1]);\t\t/* { dg-final { gdb-test . \"a\\[1\\]\" \"14\" } } */\n   return a[0] + a[1];\n }\n \n@@ -39,8 +39,8 @@ f3 (int k)\n   struct B a = { 4, k + 6 };\n   asm (\"\" : \"+r\" (a.i));\n   a.j++;\n-  bar (a.i);\t\t/* { dg-final { gdb-test 43 \"a.i\" \"4\" } } */\n-  bar (a.j);\t\t/* { dg-final { gdb-test 43 \"a.j\" \"14\" } } */\n+  bar (a.i);\t\t/* { dg-final { gdb-test .+1 \"a.i\" \"4\" } } */\n+  bar (a.j);\t\t/* { dg-final { gdb-test . \"a.j\" \"14\" } } */\n   return a.i + a.j;\n }\n "}, {"sha": "ab30e0ac9db0ebe607653bad32ab32921c4fe464", "filename": "gcc/testsuite/gcc.dg/guality/vla-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fvla-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eccba1ac5de7ca66c8201870c8b46c972c191fa0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fvla-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fvla-2.c?ref=eccba1ac5de7ca66c8201870c8b46c972c191fa0", "patch": "@@ -13,7 +13,7 @@ fn2 (int i)\n {\n   int a[i];\n   fn1 (a, i);\n-  fn1 (a, i);\t\t/* { dg-final { gdb-test 16 \"sizeof (a)\" \"5 * sizeof (int)\" } } */\n+  fn1 (a, i);\t\t/* { dg-final { gdb-test . \"sizeof (a)\" \"5 * sizeof (int)\" } } */\n   return i;\n }\n \n@@ -22,7 +22,7 @@ fn3 (int i)\n {\n   int a[i];\n   fn1 (a, i);\n-  fn1 (a, i);\t\t/* { dg-final { gdb-test 25 \"sizeof (a)\" \"6 * sizeof (int)\" } } */\n+  fn1 (a, i);\t\t/* { dg-final { gdb-test . \"sizeof (a)\" \"6 * sizeof (int)\" } } */\n   return i;\n }\n "}]}