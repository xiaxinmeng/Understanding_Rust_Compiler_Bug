{"sha": "a1ddb3556bed9b54de6129dea79bcace431fb389", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFkZGIzNTU2YmVkOWI1NGRlNjEyOWRlYTc5YmNhY2U0MzFmYjM4OQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-01-30T22:01:11Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-01-30T22:01:11Z"}, "message": "configure.in: Use pkg-config to check for GTK 2.2 and libart 2.1.\n\n2004-01-30  Michael Koch  <konqueror@gmx.de>\n\n\t* configure.in: Use pkg-config to check for GTK 2.2 and libart 2.1.\n\t* configure: Regenerated.\n\t* glib-2.0.m4: Removed.\n\t* gtk-2.0.m4: Removed.\n\t* libart.m4: Removed.\n\t* pkg.m4: New file.\n\nFrom-SVN: r76993", "tree": {"sha": "c9bd395a1775b42134e39ed62af38b29ae54acd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9bd395a1775b42134e39ed62af38b29ae54acd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1ddb3556bed9b54de6129dea79bcace431fb389", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ddb3556bed9b54de6129dea79bcace431fb389", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1ddb3556bed9b54de6129dea79bcace431fb389", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ddb3556bed9b54de6129dea79bcace431fb389/comments", "author": null, "committer": null, "parents": [{"sha": "630d42a0aef7a99b330446bc2e54ba049db9289b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/630d42a0aef7a99b330446bc2e54ba049db9289b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/630d42a0aef7a99b330446bc2e54ba049db9289b"}], "stats": {"total": 2133, "additions": 494, "deletions": 1639}, "files": [{"sha": "b104689eb9ae4909798a2597820d5b09402fe333", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ddb3556bed9b54de6129dea79bcace431fb389/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ddb3556bed9b54de6129dea79bcace431fb389/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a1ddb3556bed9b54de6129dea79bcace431fb389", "patch": "@@ -1,3 +1,12 @@\n+2004-01-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* configure.in: Use pkg-config to check for GTK 2.2 and libart 2.1.\n+\t* configure: Regenerated.\n+\t* glib-2.0.m4: Removed.\n+\t* gtk-2.0.m4: Removed.\n+\t* libart.m4: Removed.\n+\t* pkg.m4: New file.\n+\n 2004-01-30  Mohan Embar  <gnustuff@thisiscool.com>\n \n \t* gnu/java/net/PlainSocketImpl.java "}, {"sha": "f95a23a88cccc7cfae78e5befa25ce5a1e75647e", "filename": "libjava/configure", "status": "modified", "additions": 421, "deletions": 1058, "changes": 1479, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ddb3556bed9b54de6129dea79bcace431fb389/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ddb3556bed9b54de6129dea79bcace431fb389/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=a1ddb3556bed9b54de6129dea79bcace431fb389"}, {"sha": "f3cee23c5a7933883ee89ca11db4fb5ee9104189", "filename": "libjava/configure.in", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ddb3556bed9b54de6129dea79bcace431fb389/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ddb3556bed9b54de6129dea79bcace431fb389/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=a1ddb3556bed9b54de6129dea79bcace431fb389", "patch": "@@ -876,11 +876,13 @@ else\n \n    # Test for Gtk stuff, if asked for.\n    if test \"$use_gtk_awt\" = yes; then\n-      AM_PATH_GTK_2_0(2.2.0,,exit 1)\n-      AM_PATH_GLIB_2_0(2.2.0,,exit 1,gthread)\n-      dnl XXX Fix me when libart.m4 has the compile test fixed!\n-      enable_libarttest=no\n-      AM_PATH_LIBART(2.1.0,,exit 1)\n+      PKG_CHECK_MODULES(GTK, gtk+-2.0 >= 2.2)\n+      AC_SUBST(GTK_CFLAGS)\n+      AC_SUBST(GTK_LIBS)\n+\n+      PKG_CHECK_MODULES(LIBART, libart-2.0 >= 2.1)\n+      AC_SUBST(LIBART_CFLAGS)\n+      AC_SUBST(LIBART_LIBS)\n    fi\n \n    # On Solaris, and maybe other architectures, the Boehm collector"}, {"sha": "28ccef4a5f6a6f576169d10da3818117ef68040a", "filename": "libjava/glib-2.0.m4", "status": "removed", "additions": 0, "deletions": 212, "changes": 212, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630d42a0aef7a99b330446bc2e54ba049db9289b/libjava%2Fglib-2.0.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630d42a0aef7a99b330446bc2e54ba049db9289b/libjava%2Fglib-2.0.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fglib-2.0.m4?ref=630d42a0aef7a99b330446bc2e54ba049db9289b", "patch": "@@ -1,212 +0,0 @@\n-# Configure paths for GLIB\n-# Owen Taylor     1997-2001\n-\n-dnl AM_PATH_GLIB_2_0([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, MODULES]]]])\n-dnl Test for GLIB, and define GLIB_CFLAGS and GLIB_LIBS, if gmodule, gobject or \n-dnl gthread is specified in MODULES, pass to pkg-config\n-dnl\n-AC_DEFUN(AM_PATH_GLIB_2_0,\n-[dnl \n-dnl Get the cflags and libraries from pkg-config\n-dnl\n-AC_ARG_ENABLE(glibtest, [  --disable-glibtest      do not try to compile and run a test GLIB program],\n-\t\t    , enable_glibtest=yes)\n-\n-  pkg_config_args=glib-2.0\n-  for module in . $4\n-  do\n-      case \"$module\" in\n-         gmodule) \n-             pkg_config_args=\"$pkg_config_args gmodule-2.0\"\n-         ;;\n-         gobject) \n-             pkg_config_args=\"$pkg_config_args gobject-2.0\"\n-         ;;\n-         gthread) \n-             pkg_config_args=\"$pkg_config_args gthread-2.0\"\n-         ;;\n-      esac\n-  done\n-\n-  AC_PATH_PROG(PKG_CONFIG, pkg-config, no)\n-\n-  no_glib=\"\"\n-\n-  if test x$PKG_CONFIG != xno ; then\n-    if $PKG_CONFIG --atleast-pkgconfig-version 0.7 ; then\n-      :\n-    else\n-      echo *** pkg-config too old; version 0.7 or better required.\n-      no_glib=yes\n-      PKG_CONFIG=no\n-    fi\n-  else\n-    no_glib=yes\n-  fi\n-\n-  min_glib_version=ifelse([$1], ,2.0.0,$1)\n-  AC_MSG_CHECKING(for GLIB - version >= $min_glib_version)\n-\n-  if test x$PKG_CONFIG != xno ; then\n-    ## don't try to run the test against uninstalled libtool libs\n-    if $PKG_CONFIG --uninstalled $pkg_config_args; then\n-\t  echo \"Will use uninstalled version of GLib found in PKG_CONFIG_PATH\"\n-\t  enable_glibtest=no\n-    fi\n-\n-    if $PKG_CONFIG --atleast-version $min_glib_version $pkg_config_args; then\n-\t  :\n-    else\n-\t  no_glib=yes\n-    fi\n-  fi\n-\n-  if test x\"$no_glib\" = x ; then\n-    GLIB_GENMARSHAL=`$PKG_CONFIG --variable=glib_genmarshal glib-2.0`\n-    GOBJECT_QUERY=`$PKG_CONFIG --variable=gobject_query glib-2.0`\n-    GLIB_MKENUMS=`$PKG_CONFIG --variable=glib_mkenums glib-2.0`\n-\n-    GLIB_CFLAGS=`$PKG_CONFIG --cflags $pkg_config_args`\n-    GLIB_LIBS=`$PKG_CONFIG --libs $pkg_config_args`\n-    glib_config_major_version=`$PKG_CONFIG --modversion glib-2.0 | \\\n-           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\1/'`\n-    glib_config_minor_version=`$PKG_CONFIG --modversion glib-2.0 | \\\n-           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n-    glib_config_micro_version=`$PKG_CONFIG --modversion glib-2.0 | \\\n-           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\3/'`\n-    if test \"x$enable_glibtest\" = \"xyes\" ; then\n-      ac_save_CFLAGS=\"$CFLAGS\"\n-      ac_save_LIBS=\"$LIBS\"\n-      CFLAGS=\"$CFLAGS $GLIB_CFLAGS\"\n-      LIBS=\"$GLIB_LIBS $LIBS\"\n-dnl\n-dnl Now check if the installed GLIB is sufficiently new. (Also sanity\n-dnl checks the results of pkg-config to some extent)\n-dnl\n-      rm -f conf.glibtest\n-      AC_TRY_RUN([\n-#include <glib.h>\n-#include <stdio.h>\n-#include <stdlib.h>\n-\n-int \n-main ()\n-{\n-  int major, minor, micro;\n-  char *tmp_version;\n-\n-  system (\"touch conf.glibtest\");\n-\n-  /* HP/UX 9 (%@#!) writes to sscanf strings */\n-  tmp_version = g_strdup(\"$min_glib_version\");\n-  if (sscanf(tmp_version, \"%d.%d.%d\", &major, &minor, &micro) != 3) {\n-     printf(\"%s, bad version string\\n\", \"$min_glib_version\");\n-     exit(1);\n-   }\n-\n-  if ((glib_major_version != $glib_config_major_version) ||\n-      (glib_minor_version != $glib_config_minor_version) ||\n-      (glib_micro_version != $glib_config_micro_version))\n-    {\n-      printf(\"\\n*** 'pkg-config --modversion glib-2.0' returned %d.%d.%d, but GLIB (%d.%d.%d)\\n\", \n-             $glib_config_major_version, $glib_config_minor_version, $glib_config_micro_version,\n-             glib_major_version, glib_minor_version, glib_micro_version);\n-      printf (\"*** was found! If pkg-config was correct, then it is best\\n\");\n-      printf (\"*** to remove the old version of GLib. You may also be able to fix the error\\n\");\n-      printf(\"*** by modifying your LD_LIBRARY_PATH enviroment variable, or by editing\\n\");\n-      printf(\"*** /etc/ld.so.conf. Make sure you have run ldconfig if that is\\n\");\n-      printf(\"*** required on your system.\\n\");\n-      printf(\"*** If pkg-config was wrong, set the environment variable PKG_CONFIG_PATH\\n\");\n-      printf(\"*** to point to the correct configuration files\\n\");\n-    } \n-  else if ((glib_major_version != GLIB_MAJOR_VERSION) ||\n-\t   (glib_minor_version != GLIB_MINOR_VERSION) ||\n-           (glib_micro_version != GLIB_MICRO_VERSION))\n-    {\n-      printf(\"*** GLIB header files (version %d.%d.%d) do not match\\n\",\n-\t     GLIB_MAJOR_VERSION, GLIB_MINOR_VERSION, GLIB_MICRO_VERSION);\n-      printf(\"*** library (version %d.%d.%d)\\n\",\n-\t     glib_major_version, glib_minor_version, glib_micro_version);\n-    }\n-  else\n-    {\n-      if ((glib_major_version > major) ||\n-        ((glib_major_version == major) && (glib_minor_version > minor)) ||\n-        ((glib_major_version == major) && (glib_minor_version == minor) && (glib_micro_version >= micro)))\n-      {\n-        return 0;\n-       }\n-     else\n-      {\n-        printf(\"\\n*** An old version of GLIB (%d.%d.%d) was found.\\n\",\n-               glib_major_version, glib_minor_version, glib_micro_version);\n-        printf(\"*** You need a version of GLIB newer than %d.%d.%d. The latest version of\\n\",\n-\t       major, minor, micro);\n-        printf(\"*** GLIB is always available from ftp://ftp.gtk.org.\\n\");\n-        printf(\"***\\n\");\n-        printf(\"*** If you have already installed a sufficiently new version, this error\\n\");\n-        printf(\"*** probably means that the wrong copy of the pkg-config shell script is\\n\");\n-        printf(\"*** being found. The easiest way to fix this is to remove the old version\\n\");\n-        printf(\"*** of GLIB, but you can also set the PKG_CONFIG environment to point to the\\n\");\n-        printf(\"*** correct copy of pkg-config. (In this case, you will have to\\n\");\n-        printf(\"*** modify your LD_LIBRARY_PATH enviroment variable, or edit /etc/ld.so.conf\\n\");\n-        printf(\"*** so that the correct libraries are found at run-time))\\n\");\n-      }\n-    }\n-  return 1;\n-}\n-],, no_glib=yes,[echo $ac_n \"cross compiling; assumed OK... $ac_c\"])\n-       CFLAGS=\"$ac_save_CFLAGS\"\n-       LIBS=\"$ac_save_LIBS\"\n-     fi\n-  fi\n-  if test \"x$no_glib\" = x ; then\n-     AC_MSG_RESULT(yes (version $glib_config_major_version.$glib_config_minor_version.$glib_config_micro_version))\n-     ifelse([$2], , :, [$2])     \n-  else\n-     AC_MSG_RESULT(no)\n-     if test \"$PKG_CONFIG\" = \"no\" ; then\n-       echo \"*** A new enough version of pkg-config was not found.\"\n-       echo \"*** See http://www.freedesktop.org/software/pkgconfig/\"\n-     else\n-       if test -f conf.glibtest ; then\n-        :\n-       else\n-          echo \"*** Could not run GLIB test program, checking why...\"\n-          ac_save_CFLAGS=\"$CFLAGS\"\n-          ac_save_LIBS=\"$LIBS\"\n-          CFLAGS=\"$CFLAGS $GLIB_CFLAGS\"\n-          LIBS=\"$LIBS $GLIB_LIBS\"\n-          AC_TRY_LINK([\n-#include <glib.h>\n-#include <stdio.h>\n-],      [ return ((glib_major_version) || (glib_minor_version) || (glib_micro_version)); ],\n-        [ echo \"*** The test program compiled, but did not run. This usually means\"\n-          echo \"*** that the run-time linker is not finding GLIB or finding the wrong\"\n-          echo \"*** version of GLIB. If it is not finding GLIB, you'll need to set your\"\n-          echo \"*** LD_LIBRARY_PATH environment variable, or edit /etc/ld.so.conf to point\"\n-          echo \"*** to the installed location  Also, make sure you have run ldconfig if that\"\n-          echo \"*** is required on your system\"\n-\t  echo \"***\"\n-          echo \"*** If you have an old version installed, it is best to remove it, although\"\n-          echo \"*** you may also be able to get things to work by modifying LD_LIBRARY_PATH\" ],\n-        [ echo \"*** The test program failed to compile or link. See the file config.log for the\"\n-          echo \"*** exact error that occured. This usually means GLIB is incorrectly installed.\"])\n-          CFLAGS=\"$ac_save_CFLAGS\"\n-          LIBS=\"$ac_save_LIBS\"\n-       fi\n-     fi\n-     GLIB_CFLAGS=\"\"\n-     GLIB_LIBS=\"\"\n-     GLIB_GENMARSHAL=\"\"\n-     GOBJECT_QUERY=\"\"\n-     GLIB_MKENUMS=\"\"\n-     ifelse([$3], , :, [$3])\n-  fi\n-  AC_SUBST(GLIB_CFLAGS)\n-  AC_SUBST(GLIB_LIBS)\n-  AC_SUBST(GLIB_GENMARSHAL)\n-  AC_SUBST(GOBJECT_QUERY)\n-  AC_SUBST(GLIB_MKENUMS)\n-  rm -f conf.glibtest\n-])"}, {"sha": "a0c53ac11ff140c003d32c23b789b1719fa0f128", "filename": "libjava/gtk-2.0.m4", "status": "removed", "additions": 0, "deletions": 196, "changes": 196, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630d42a0aef7a99b330446bc2e54ba049db9289b/libjava%2Fgtk-2.0.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630d42a0aef7a99b330446bc2e54ba049db9289b/libjava%2Fgtk-2.0.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgtk-2.0.m4?ref=630d42a0aef7a99b330446bc2e54ba049db9289b", "patch": "@@ -1,196 +0,0 @@\n-# Configure paths for GTK+\n-# Owen Taylor     1997-2001\n-\n-dnl AM_PATH_GTK_2_0([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, MODULES]]]])\n-dnl Test for GTK+, and define GTK_CFLAGS and GTK_LIBS, if gthread is specified in MODULES, \n-dnl pass to pkg-config\n-dnl\n-AC_DEFUN(AM_PATH_GTK_2_0,\n-[dnl \n-dnl Get the cflags and libraries from pkg-config\n-dnl\n-AC_ARG_ENABLE(gtktest, [  --disable-gtktest       do not try to compile and run a test GTK+ program],\n-\t\t    , enable_gtktest=yes)\n-\n-  pkg_config_args=gtk+-2.0\n-  for module in . $4\n-  do\n-      case \"$module\" in\n-         gthread) \n-             pkg_config_args=\"$pkg_config_args gthread-2.0\"\n-         ;;\n-      esac\n-  done\n-\n-  no_gtk=\"\"\n-\n-  AC_PATH_PROG(PKG_CONFIG, pkg-config, no)\n-\n-  if test x$PKG_CONFIG != xno ; then\n-    if pkg-config --atleast-pkgconfig-version 0.7 ; then\n-      :\n-    else\n-      echo *** pkg-config too old; version 0.7 or better required.\n-      no_gtk=yes\n-      PKG_CONFIG=no\n-    fi\n-  else\n-    no_gtk=yes\n-  fi\n-\n-  min_gtk_version=ifelse([$1], ,2.0.0,$1)\n-  AC_MSG_CHECKING(for GTK+ - version >= $min_gtk_version)\n-\n-  if test x$PKG_CONFIG != xno ; then\n-    ## don't try to run the test against uninstalled libtool libs\n-    if $PKG_CONFIG --uninstalled $pkg_config_args; then\n-\t  echo \"Will use uninstalled version of GTK+ found in PKG_CONFIG_PATH\"\n-\t  enable_gtktest=no\n-    fi\n-\n-    if $PKG_CONFIG --atleast-version $min_gtk_version $pkg_config_args; then\n-\t  :\n-    else\n-\t  no_gtk=yes\n-    fi\n-  fi\n-\n-  if test x\"$no_gtk\" = x ; then\n-    GTK_CFLAGS=`$PKG_CONFIG $pkg_config_args --cflags`\n-    GTK_LIBS=`$PKG_CONFIG $pkg_config_args --libs`\n-    gtk_config_major_version=`$PKG_CONFIG --modversion gtk+-2.0 | \\\n-           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\1/'`\n-    gtk_config_minor_version=`$PKG_CONFIG --modversion gtk+-2.0 | \\\n-           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n-    gtk_config_micro_version=`$PKG_CONFIG --modversion gtk+-2.0 | \\\n-           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\3/'`\n-    if test \"x$enable_gtktest\" = \"xyes\" ; then\n-      ac_save_CFLAGS=\"$CFLAGS\"\n-      ac_save_LIBS=\"$LIBS\"\n-      CFLAGS=\"$CFLAGS $GTK_CFLAGS\"\n-      LIBS=\"$GTK_LIBS $LIBS\"\n-dnl\n-dnl Now check if the installed GTK+ is sufficiently new. (Also sanity\n-dnl checks the results of pkg-config to some extent)\n-dnl\n-      rm -f conf.gtktest\n-      AC_TRY_RUN([\n-#include <gtk/gtk.h>\n-#include <stdio.h>\n-#include <stdlib.h>\n-\n-int \n-main ()\n-{\n-  int major, minor, micro;\n-  char *tmp_version;\n-\n-  system (\"touch conf.gtktest\");\n-\n-  /* HP/UX 9 (%@#!) writes to sscanf strings */\n-  tmp_version = g_strdup(\"$min_gtk_version\");\n-  if (sscanf(tmp_version, \"%d.%d.%d\", &major, &minor, &micro) != 3) {\n-     printf(\"%s, bad version string\\n\", \"$min_gtk_version\");\n-     exit(1);\n-   }\n-\n-  if ((gtk_major_version != $gtk_config_major_version) ||\n-      (gtk_minor_version != $gtk_config_minor_version) ||\n-      (gtk_micro_version != $gtk_config_micro_version))\n-    {\n-      printf(\"\\n*** 'pkg-config --modversion gtk+-2.0' returned %d.%d.%d, but GTK+ (%d.%d.%d)\\n\", \n-             $gtk_config_major_version, $gtk_config_minor_version, $gtk_config_micro_version,\n-             gtk_major_version, gtk_minor_version, gtk_micro_version);\n-      printf (\"*** was found! If pkg-config was correct, then it is best\\n\");\n-      printf (\"*** to remove the old version of GTK+. You may also be able to fix the error\\n\");\n-      printf(\"*** by modifying your LD_LIBRARY_PATH enviroment variable, or by editing\\n\");\n-      printf(\"*** /etc/ld.so.conf. Make sure you have run ldconfig if that is\\n\");\n-      printf(\"*** required on your system.\\n\");\n-      printf(\"*** If pkg-config was wrong, set the environment variable PKG_CONFIG_PATH\\n\");\n-      printf(\"*** to point to the correct configuration files\\n\");\n-    } \n-  else if ((gtk_major_version != GTK_MAJOR_VERSION) ||\n-\t   (gtk_minor_version != GTK_MINOR_VERSION) ||\n-           (gtk_micro_version != GTK_MICRO_VERSION))\n-    {\n-      printf(\"*** GTK+ header files (version %d.%d.%d) do not match\\n\",\n-\t     GTK_MAJOR_VERSION, GTK_MINOR_VERSION, GTK_MICRO_VERSION);\n-      printf(\"*** library (version %d.%d.%d)\\n\",\n-\t     gtk_major_version, gtk_minor_version, gtk_micro_version);\n-    }\n-  else\n-    {\n-      if ((gtk_major_version > major) ||\n-        ((gtk_major_version == major) && (gtk_minor_version > minor)) ||\n-        ((gtk_major_version == major) && (gtk_minor_version == minor) && (gtk_micro_version >= micro)))\n-      {\n-        return 0;\n-       }\n-     else\n-      {\n-        printf(\"\\n*** An old version of GTK+ (%d.%d.%d) was found.\\n\",\n-               gtk_major_version, gtk_minor_version, gtk_micro_version);\n-        printf(\"*** You need a version of GTK+ newer than %d.%d.%d. The latest version of\\n\",\n-\t       major, minor, micro);\n-        printf(\"*** GTK+ is always available from ftp://ftp.gtk.org.\\n\");\n-        printf(\"***\\n\");\n-        printf(\"*** If you have already installed a sufficiently new version, this error\\n\");\n-        printf(\"*** probably means that the wrong copy of the pkg-config shell script is\\n\");\n-        printf(\"*** being found. The easiest way to fix this is to remove the old version\\n\");\n-        printf(\"*** of GTK+, but you can also set the PKG_CONFIG environment to point to the\\n\");\n-        printf(\"*** correct copy of pkg-config. (In this case, you will have to\\n\");\n-        printf(\"*** modify your LD_LIBRARY_PATH enviroment variable, or edit /etc/ld.so.conf\\n\");\n-        printf(\"*** so that the correct libraries are found at run-time))\\n\");\n-      }\n-    }\n-  return 1;\n-}\n-],, no_gtk=yes,[echo $ac_n \"cross compiling; assumed OK... $ac_c\"])\n-       CFLAGS=\"$ac_save_CFLAGS\"\n-       LIBS=\"$ac_save_LIBS\"\n-     fi\n-  fi\n-  if test \"x$no_gtk\" = x ; then\n-     AC_MSG_RESULT(yes (version $gtk_config_major_version.$gtk_config_minor_version.$gtk_config_micro_version))\n-     ifelse([$2], , :, [$2])     \n-  else\n-     AC_MSG_RESULT(no)\n-     if test \"$PKG_CONFIG\" = \"no\" ; then\n-       echo \"*** A new enough version of pkg-config was not found.\"\n-       echo \"*** See http://pkgconfig.sourceforge.net\"\n-     else\n-       if test -f conf.gtktest ; then\n-        :\n-       else\n-          echo \"*** Could not run GTK+ test program, checking why...\"\n-\t  ac_save_CFLAGS=\"$CFLAGS\"\n-\t  ac_save_LIBS=\"$LIBS\"\n-          CFLAGS=\"$CFLAGS $GTK_CFLAGS\"\n-          LIBS=\"$LIBS $GTK_LIBS\"\n-          AC_TRY_LINK([\n-#include <gtk/gtk.h>\n-#include <stdio.h>\n-],      [ return ((gtk_major_version) || (gtk_minor_version) || (gtk_micro_version)); ],\n-        [ echo \"*** The test program compiled, but did not run. This usually means\"\n-          echo \"*** that the run-time linker is not finding GTK+ or finding the wrong\"\n-          echo \"*** version of GTK+. If it is not finding GTK+, you'll need to set your\"\n-          echo \"*** LD_LIBRARY_PATH environment variable, or edit /etc/ld.so.conf to point\"\n-          echo \"*** to the installed location  Also, make sure you have run ldconfig if that\"\n-          echo \"*** is required on your system\"\n-\t  echo \"***\"\n-          echo \"*** If you have an old version installed, it is best to remove it, although\"\n-          echo \"*** you may also be able to get things to work by modifying LD_LIBRARY_PATH\" ],\n-        [ echo \"*** The test program failed to compile or link. See the file config.log for the\"\n-          echo \"*** exact error that occured. This usually means GTK+ is incorrectly installed.\"])\n-          CFLAGS=\"$ac_save_CFLAGS\"\n-          LIBS=\"$ac_save_LIBS\"\n-       fi\n-     fi\n-     GTK_CFLAGS=\"\"\n-     GTK_LIBS=\"\"\n-     ifelse([$3], , :, [$3])\n-  fi\n-  AC_SUBST(GTK_CFLAGS)\n-  AC_SUBST(GTK_LIBS)\n-  rm -f conf.gtktest\n-])"}, {"sha": "48d86651636f1b3febb8c6a1a3de541721a1faed", "filename": "libjava/libart.m4", "status": "removed", "additions": 0, "deletions": 168, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630d42a0aef7a99b330446bc2e54ba049db9289b/libjava%2Flibart.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630d42a0aef7a99b330446bc2e54ba049db9289b/libjava%2Flibart.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Flibart.m4?ref=630d42a0aef7a99b330446bc2e54ba049db9289b", "patch": "@@ -1,168 +0,0 @@\n-# Configure paths for LIBART\n-# Raph Levien 98-11-18\n-# stolen from Manish Singh    98-9-30\n-# stolen back from Frank Belew\n-# stolen from Manish Singh\n-# Shamelessly stolen from Owen Taylor\n-\n-dnl AM_PATH_LIBART([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]]])\n-dnl Test for LIBART, and define LIBART_CFLAGS and LIBART_LIBS\n-dnl\n-AC_DEFUN(AM_PATH_LIBART,\n-[dnl \n-dnl Get the cflags and libraries from the libart-config script\n-dnl\n-AC_ARG_WITH(libart-prefix,[  --with-libart-prefix=PFX   Prefix where LIBART is installed (optional)],\n-            libart_prefix=\"$withval\", libart_prefix=\"\")\n-AC_ARG_WITH(libart-exec-prefix,[  --with-libart-exec-prefix=PFX Exec prefix where LIBART is installed (optional)],\n-            libart_exec_prefix=\"$withval\", libart_exec_prefix=\"\")\n-AC_ARG_ENABLE(libarttest, [  --disable-libarttest       Do not try to compile and run a test LIBART program],\n-\t\t    , enable_libarttest=yes)\n-\n-  if test x$libart_exec_prefix != x ; then\n-     libart_args=\"$libart_args --exec-prefix=$libart_exec_prefix\"\n-     if test x${LIBART_CONFIG+set} != xset ; then\n-        LIBART_CONFIG=$libart_exec_prefix/bin/libart-config\n-     fi\n-  fi\n-  if test x$libart_prefix != x ; then\n-     libart_args=\"$libart_args --prefix=$libart_prefix\"\n-     if test x${LIBART_CONFIG+set} != xset ; then\n-        LIBART_CONFIG=$libart_prefix/bin/libart-config\n-     fi\n-  fi\n-\n-  AC_PATH_PROG(LIBART_CONFIG, libart2-config, no)\n-  if test \"$LIBART_CONFIG\" = \"no\" ; then\n-    AC_PATH_PROG(LIBART_CONFIG, libart-config, no)\n-  fi\n-  min_libart_version=ifelse([$1], ,0.2.5,$1)\n-  AC_MSG_CHECKING(for LIBART - version >= $min_libart_version)\n-  no_libart=\"\"\n-  if test \"$LIBART_CONFIG\" = \"no\" ; then\n-    no_libart=yes\n-  else\n-    LIBART_CFLAGS=`$LIBART_CONFIG $libartconf_args --cflags`\n-    LIBART_LIBS=`$LIBART_CONFIG $libartconf_args --libs`\n-\n-    libart_major_version=`$LIBART_CONFIG $libart_args --version | \\\n-           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\1/'`\n-    libart_minor_version=`$LIBART_CONFIG $libart_args --version | \\\n-           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n-    libart_micro_version=`$LIBART_CONFIG $libart_config_args --version | \\\n-           sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\3/'`\n-    if test \"x$enable_libarttest\" = \"xyes\" ; then\n-      ac_save_CFLAGS=\"$CFLAGS\"\n-      ac_save_LIBS=\"$LIBS\"\n-      CFLAGS=\"$CFLAGS $LIBART_CFLAGS\"\n-      LIBS=\"$LIBS $LIBART_LIBS\"\n-dnl\n-dnl Now check if the installed LIBART is sufficiently new. (Also sanity\n-dnl checks the results of libart-config to some extent\n-dnl\n-      rm -f conf.libarttest\n-      AC_TRY_RUN([\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <string.h>\n-#include <libart_lgpl/libart.h>\n-\n-char*\n-my_strdup (char *str)\n-{\n-  char *new_str;\n-  \n-  if (str)\n-    {\n-      new_str = malloc ((strlen (str) + 1) * sizeof(char));\n-      strcpy (new_str, str);\n-    }\n-  else\n-    new_str = NULL;\n-  \n-  return new_str;\n-}\n-\n-int main ()\n-{\n-  int major, minor, micro;\n-  char *tmp_version;\n-\n-  system (\"touch conf.libarttest\");\n-\n-  /* HP/UX 9 (%@#!) writes to sscanf strings */\n-  tmp_version = my_strdup(\"$min_libart_version\");\n-  if (sscanf(tmp_version, \"%d.%d.%d\", &major, &minor, &micro) != 3) {\n-     printf(\"%s, bad version string\\n\", \"$min_libart_version\");\n-     exit(1);\n-   }\n-\n-   if (($libart_major_version > major) ||\n-      (($libart_major_version == major) && ($libart_minor_version > minor)) ||\n-      (($libart_major_version == major) && ($libart_minor_version == minor) && ($libart_micro_version >= micro)))\n-    {\n-      return 0;\n-    }\n-  else\n-    {\n-      printf(\"\\n*** 'libart-config --version' returned %d.%d.%d, but the minimum version\\n\", $libart_major_version, $libart_minor_version, $libart_micro_version);\n-      printf(\"*** of LIBART required is %d.%d.%d. If libart-config is correct, then it is\\n\", major, minor, micro);\n-      printf(\"*** best to upgrade to the required version.\\n\");\n-      printf(\"*** If libart-config was wrong, set the environment variable LIBART_CONFIG\\n\");\n-      printf(\"*** to point to the correct copy of libart-config, and remove the file\\n\");\n-      printf(\"*** config.cache before re-running configure\\n\");\n-      return 1;\n-    }\n-}\n-\n-],, no_libart=yes,[echo $ac_n \"cross compiling; assumed OK... $ac_c\"])\n-       CFLAGS=\"$ac_save_CFLAGS\"\n-       LIBS=\"$ac_save_LIBS\"\n-     fi\n-  fi\n-  if test \"x$no_libart\" = x ; then\n-     AC_MSG_RESULT(yes)\n-     ifelse([$2], , :, [$2])     \n-  else\n-     AC_MSG_RESULT(no)\n-     if test \"$LIBART_CONFIG\" = \"no\" ; then\n-       echo \"*** The libart-config script installed by LIBART could not be found\"\n-       echo \"*** If LIBART was installed in PREFIX, make sure PREFIX/bin is in\"\n-       echo \"*** your path, or set the LIBART_CONFIG environment variable to the\"\n-       echo \"*** full path to libart-config.\"\n-     else\n-       if test -f conf.libarttest ; then\n-        :\n-       else\n-          echo \"*** Could not run LIBART test program, checking why...\"\n-          CFLAGS=\"$CFLAGS $LIBART_CFLAGS\"\n-          LIBS=\"$LIBS $LIBART_LIBS\"\n-          AC_TRY_LINK([\n-#include <stdio.h>\n-#include <libart_lgpl/libart.h>\n-],      [ return 0; ],\n-        [ echo \"*** The test program compiled, but did not run. This usually means\"\n-          echo \"*** that the run-time linker is not finding LIBART or finding the wrong\"\n-          echo \"*** version of LIBART. If it is not finding LIBART, you'll need to set your\"\n-          echo \"*** LD_LIBRARY_PATH environment variable, or edit /etc/ld.so.conf to point\"\n-          echo \"*** to the installed location  Also, make sure you have run ldconfig if that\"\n-          echo \"*** is required on your system\"\n-\t  echo \"***\"\n-          echo \"*** If you have an old version installed, it is best to remove it, although\"\n-          echo \"*** you may also be able to get things to work by modifying LD_LIBRARY_PATH\"],\n-        [ echo \"*** The test program failed to compile or link. See the file config.log for the\"\n-          echo \"*** exact error that occured. This usually means LIBART was incorrectly installed\"\n-          echo \"*** or that you have moved LIBART since it was installed. In the latter case, you\"\n-          echo \"*** may want to edit the libart-config script: $LIBART_CONFIG\" ])\n-          CFLAGS=\"$ac_save_CFLAGS\"\n-          LIBS=\"$ac_save_LIBS\"\n-       fi\n-     fi\n-     LIBART_CFLAGS=\"\"\n-     LIBART_LIBS=\"\"\n-     ifelse([$3], , :, [$3])\n-  fi\n-  AC_SUBST(LIBART_CFLAGS)\n-  AC_SUBST(LIBART_LIBS)\n-  rm -f conf.libarttest\n-])"}, {"sha": "f2bfc2d49f9bf073fc71d81d77ce4ef4c623adb5", "filename": "libjava/pkg.m4", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ddb3556bed9b54de6129dea79bcace431fb389/libjava%2Fpkg.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ddb3556bed9b54de6129dea79bcace431fb389/libjava%2Fpkg.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fpkg.m4?ref=a1ddb3556bed9b54de6129dea79bcace431fb389", "patch": "@@ -0,0 +1,57 @@\n+\n+dnl PKG_CHECK_MODULES(GSTUFF, gtk+-2.0 >= 1.3 glib = 1.3.4, action-if, action-not)\n+dnl defines GSTUFF_LIBS, GSTUFF_CFLAGS, see pkg-config man page\n+dnl also defines GSTUFF_PKG_ERRORS on error\n+AC_DEFUN([PKG_CHECK_MODULES], [\n+  succeeded=no\n+\n+  if test -z \"$PKG_CONFIG\"; then\n+    AC_PATH_PROG(PKG_CONFIG, pkg-config, no)\n+  fi\n+\n+  if test \"$PKG_CONFIG\" = \"no\" ; then\n+     echo \"*** The pkg-config script could not be found. Make sure it is\"\n+     echo \"*** in your path, or set the PKG_CONFIG environment variable\"\n+     echo \"*** to the full path to pkg-config.\"\n+     echo \"*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config.\"\n+  else\n+     PKG_CONFIG_MIN_VERSION=0.9.0\n+     if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then\n+        AC_MSG_CHECKING(for $2)\n+\n+        if $PKG_CONFIG --exists \"$2\" ; then\n+            AC_MSG_RESULT(yes)\n+            succeeded=yes\n+\n+            AC_MSG_CHECKING($1_CFLAGS)\n+            $1_CFLAGS=`$PKG_CONFIG --cflags \"$2\"`\n+            AC_MSG_RESULT($$1_CFLAGS)\n+\n+            AC_MSG_CHECKING($1_LIBS)\n+            $1_LIBS=`$PKG_CONFIG --libs \"$2\"`\n+            AC_MSG_RESULT($$1_LIBS)\n+        else\n+            $1_CFLAGS=\"\"\n+            $1_LIBS=\"\"\n+            ## If we have a custom action on failure, don't print errors, but \n+            ## do set a variable so people can do so.\n+            $1_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors \"$2\"`\n+            ifelse([$4], ,echo $$1_PKG_ERRORS,)\n+        fi\n+\n+        AC_SUBST($1_CFLAGS)\n+        AC_SUBST($1_LIBS)\n+     else\n+        echo \"*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer.\"\n+        echo \"*** See http://www.freedesktop.org/software/pkgconfig\"\n+     fi\n+  fi\n+\n+  if test $succeeded = yes; then\n+     ifelse([$3], , :, [$3])\n+  else\n+     ifelse([$4], , AC_MSG_ERROR([Library requirements ($2) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them.]), [$4])\n+  fi\n+])\n+\n+"}]}