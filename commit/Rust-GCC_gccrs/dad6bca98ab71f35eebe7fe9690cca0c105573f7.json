{"sha": "dad6bca98ab71f35eebe7fe9690cca0c105573f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFkNmJjYTk4YWI3MWYzNWVlYmU3ZmU5NjkwY2NhMGMxMDU1NzNmNw==", "commit": {"author": {"name": "Paul Koning", "email": "ni1d@arrl.net", "date": "2010-12-30T02:09:04Z"}, "committer": {"name": "Paul Koning", "email": "pkoning@gcc.gnu.org", "date": "2010-12-30T02:09:04Z"}, "message": "pdp11-protos.h (pdp11_asm_output_var): Declare.\n\n* config/pdp11/pdp11-protos.h (pdp11_asm_output_var): Declare.\n* config/pdp11/pdp11.c (pdp11_asm_output_var): New function.\n* config/pdp11/pdp11.h (ASM_OUTPUT_ALIGNED_COMMON,\nASM_OUTPUT_ALIGNED_LOCAL): New macros.\n(ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL): Delete.\n\nFrom-SVN: r168333", "tree": {"sha": "a8a93dd91df56e29e12bb314f7897be16866c01a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8a93dd91df56e29e12bb314f7897be16866c01a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dad6bca98ab71f35eebe7fe9690cca0c105573f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dad6bca98ab71f35eebe7fe9690cca0c105573f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dad6bca98ab71f35eebe7fe9690cca0c105573f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dad6bca98ab71f35eebe7fe9690cca0c105573f7/comments", "author": null, "committer": null, "parents": [{"sha": "712959e93e3b099e35a2540952ee8aa2632682fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/712959e93e3b099e35a2540952ee8aa2632682fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/712959e93e3b099e35a2540952ee8aa2632682fd"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "4f29072a00da05d04e2cf670e401cb3e9a42f111", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dad6bca98ab71f35eebe7fe9690cca0c105573f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dad6bca98ab71f35eebe7fe9690cca0c105573f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dad6bca98ab71f35eebe7fe9690cca0c105573f7", "patch": "@@ -1,3 +1,11 @@\n+2010-12-29  Paul Koning  <ni1d@arrl.net>\n+\n+\t* config/pdp11/pdp11-protos.h (pdp11_asm_output_var): Declare.\n+\t* config/pdp11/pdp11.c (pdp11_asm_output_var): New function.\n+\t* config/pdp11/pdp11.h (ASM_OUTPUT_ALIGNED_COMMON,\n+\tASM_OUTPUT_ALIGNED_LOCAL): New macros.\n+\t(ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL): Delete.\n+\n 2010-12-30  Joern Rennecke  <amylaar@spamcop.net>\n \n \tPR target/47129"}, {"sha": "56ad909e10ea151b057a25e56d881f54c9da04ae", "filename": "gcc/config/pdp11/pdp11-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dad6bca98ab71f35eebe7fe9690cca0c105573f7/gcc%2Fconfig%2Fpdp11%2Fpdp11-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dad6bca98ab71f35eebe7fe9690cca0c105573f7/gcc%2Fconfig%2Fpdp11%2Fpdp11-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11-protos.h?ref=dad6bca98ab71f35eebe7fe9690cca0c105573f7", "patch": "@@ -44,3 +44,4 @@ extern enum reg_class pdp11_regno_reg_class (int);\n #endif /* RTX_CODE */\n \n extern void output_ascii (FILE *, const char *, int);\n+extern void pdp11_asm_output_var (FILE *, const char *, int, int, bool);"}, {"sha": "9c7b47630cd080e143b4b84a69d7c32a876a707d", "filename": "gcc/config/pdp11/pdp11.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dad6bca98ab71f35eebe7fe9690cca0c105573f7/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dad6bca98ab71f35eebe7fe9690cca0c105573f7/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.c?ref=dad6bca98ab71f35eebe7fe9690cca0c105573f7", "patch": "@@ -715,6 +715,19 @@ output_ascii (FILE *file, const char *p, int size)\n }\n \n \n+void\n+pdp11_asm_output_var (FILE *file, const char *name, int size,\n+\t\t      int align, bool global)\n+{\n+  if (align > 8)\n+    fprintf (file, \"\\n\\t.even\\n\");\n+  fprintf (file, \".globl \");\n+  assemble_name (file, name);\n+  fprintf (file, \"\\n\");\n+  assemble_name (file, name);\n+  fprintf (file, \": .=.+ %#ho\\n\", (unsigned short)size);\n+}\n+\n void\n print_operand_address (FILE *file, register rtx addr)\n {"}, {"sha": "37e03483c120d8a55db5399faabaa2f6c0805c55", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dad6bca98ab71f35eebe7fe9690cca0c105573f7/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dad6bca98ab71f35eebe7fe9690cca0c105573f7/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=dad6bca98ab71f35eebe7fe9690cca0c105573f7", "patch": "@@ -648,20 +648,15 @@ extern struct rtx_def *cc0_reg_rtx;\n /* This says how to output an assembler line\n    to define a global common symbol.  */\n \n-#define ASM_OUTPUT_COMMON(FILE, NAME, SIZE, ROUNDED)  \\\n-( fprintf ((FILE), \".globl \"),\t\t\t\\\n-  assemble_name ((FILE), (NAME)),\t\t\\\n-  fprintf ((FILE), \"\\n\"),\t\t\t\\\n-  assemble_name ((FILE), (NAME)),\t\t\\\n-  fprintf ((FILE), \": .=.+ %#ho\\n\", (unsigned short)(ROUNDED))\t\t\\\n-)\n+#define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGN)  \\\n+    pdp11_asm_output_var (FILE, NAME, SIZE, ALIGN, true)\n+\n \n /* This says how to output an assembler line\n    to define a local common symbol.  */\n \n-#define ASM_OUTPUT_LOCAL(FILE, NAME, SIZE, ROUNDED)  \\\n-( assemble_name ((FILE), (NAME)),\t\t\t\t\\\n-  fprintf ((FILE), \":\\t.=.+ %#ho\\n\", (unsigned short)(ROUNDED)))\n+#define ASM_OUTPUT_ALIGNED_LOCAL(FILE, NAME, SIZE, ALIGN) \\\n+    pdp11_asm_output_var (FILE, NAME, SIZE, ALIGN, false)\n \n /* Print operand X (an rtx) in assembler syntax to file FILE.\n    CODE is a letter or dot (`z' in `%z0') or 0 if no letter was specified."}]}