{"sha": "3138f2246b22bc25d3204a7b942abadc2a15ad9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEzOGYyMjQ2YjIyYmMyNWQzMjA0YTdiOTQyYWJhZGMyYTE1YWQ5ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-01-08T08:38:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-08T08:38:50Z"}, "message": "re PR tree-optimization/55890 (calling a builtin func through a cast triggers an ICE)\n\n\tPR middle-end/55890\n\t* tree-ssa-ccp.c (evaluate_stmt): Use gimple_call_builtin_p.\n\n\t* gcc.dg/torture/pr55890-3.c: New test.\n\nFrom-SVN: r195008", "tree": {"sha": "48ad8a156759328e7f7fee5c86e53d54f81d4cfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48ad8a156759328e7f7fee5c86e53d54f81d4cfa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3138f2246b22bc25d3204a7b942abadc2a15ad9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3138f2246b22bc25d3204a7b942abadc2a15ad9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3138f2246b22bc25d3204a7b942abadc2a15ad9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3138f2246b22bc25d3204a7b942abadc2a15ad9e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5f4e6de31f84daa0bcaf1c8e388b6eee9bf359b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f4e6de31f84daa0bcaf1c8e388b6eee9bf359b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f4e6de31f84daa0bcaf1c8e388b6eee9bf359b1"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "7d9f569ebb27fba6847792805b4b2c2726fa8362", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3138f2246b22bc25d3204a7b942abadc2a15ad9e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3138f2246b22bc25d3204a7b942abadc2a15ad9e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3138f2246b22bc25d3204a7b942abadc2a15ad9e", "patch": "@@ -1,5 +1,8 @@\n 2013-01-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/55890\n+\t* tree-ssa-ccp.c (evaluate_stmt): Use gimple_call_builtin_p.\n+\n \tPR tree-optimization/54120\n \t* tree-vrp.c (range_fits_type_p): Don't allow\n \tsrc_precision < precision from signed vr to unsigned_p"}, {"sha": "ffef63a345f53b1de533223bf5eb153d782f292e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3138f2246b22bc25d3204a7b942abadc2a15ad9e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3138f2246b22bc25d3204a7b942abadc2a15ad9e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3138f2246b22bc25d3204a7b942abadc2a15ad9e", "patch": "@@ -1,5 +1,8 @@\n 2013-01-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/55890\n+\t* gcc.dg/torture/pr55890-3.c: New test.\n+\n \tPR middle-end/55851\n \t* gcc.c-torture/compile/pr55851.c: New test.\n "}, {"sha": "c7f77be689daa80e11d1767197537d959cae6801", "filename": "gcc/testsuite/gcc.dg/torture/pr55890-3.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3138f2246b22bc25d3204a7b942abadc2a15ad9e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55890-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3138f2246b22bc25d3204a7b942abadc2a15ad9e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55890-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr55890-3.c?ref=3138f2246b22bc25d3204a7b942abadc2a15ad9e", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+\n+void *memmove ();\n+\n+void *\n+bar ()\n+{\n+  return memmove ();\n+}"}, {"sha": "29f169d3d4b8eb09ac527be3a3c457d3ef5982a2", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3138f2246b22bc25d3204a7b942abadc2a15ad9e/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3138f2246b22bc25d3204a7b942abadc2a15ad9e/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=3138f2246b22bc25d3204a7b942abadc2a15ad9e", "patch": "@@ -1,6 +1,6 @@\n /* Conditional constant propagation pass for the GNU compiler.\n    Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,\n-   2010, 2011, 2012 Free Software Foundation, Inc.\n+   2010, 2011, 2012, 2013 Free Software Foundation, Inc.\n    Adapted from original RTL SSA-CCP by Daniel Berlin <dberlin@dberlin.org>\n    Adapted to GIMPLE trees by Diego Novillo <dnovillo@redhat.com>\n \n@@ -1546,7 +1546,6 @@ evaluate_stmt (gimple stmt)\n       && !is_constant)\n     {\n       enum gimple_code code = gimple_code (stmt);\n-      tree fndecl;\n       val.lattice_val = VARYING;\n       val.value = NULL_TREE;\n       val.mask = double_int_minus_one;\n@@ -1593,10 +1592,9 @@ evaluate_stmt (gimple stmt)\n \t      || POINTER_TYPE_P (TREE_TYPE (rhs1)))\n \t    val = bit_value_binop (code, TREE_TYPE (rhs1), rhs1, rhs2);\n \t}\n-      else if (code == GIMPLE_CALL\n-\t       && (fndecl = gimple_call_fndecl (stmt))\n-\t       && DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_NORMAL)\n+      else if (gimple_call_builtin_p (stmt, BUILT_IN_NORMAL))\n \t{\n+\t  tree fndecl = gimple_call_fndecl (stmt);\n \t  switch (DECL_FUNCTION_CODE (fndecl))\n \t    {\n \t    case BUILT_IN_MALLOC:"}]}