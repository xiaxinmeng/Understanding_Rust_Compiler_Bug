{"sha": "bef7d288df865ca1b76d20b56f2883b1338ea285", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVmN2QyODhkZjg2NWNhMWI3NmQyMGI1NmYyODgzYjEzMzhlYTI4NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-03-03T10:29:22Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-03-03T10:29:22Z"}, "message": "lto-elf.c (is_compatible_architecture): New static function.\n\n\t* lto-elf.c (is_compatible_architecture): New static function.\n\t(DEFINE_VALIDATE_EHDR): Use it to validate the architecture.\n\nFrom-SVN: r157192", "tree": {"sha": "6805e654c85670ebc42d596cd83da2367d72cbfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6805e654c85670ebc42d596cd83da2367d72cbfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bef7d288df865ca1b76d20b56f2883b1338ea285", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bef7d288df865ca1b76d20b56f2883b1338ea285", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bef7d288df865ca1b76d20b56f2883b1338ea285", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bef7d288df865ca1b76d20b56f2883b1338ea285/comments", "author": null, "committer": null, "parents": [{"sha": "7ece48b1187e63a238d97028937afa311943e436", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ece48b1187e63a238d97028937afa311943e436", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ece48b1187e63a238d97028937afa311943e436"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "560539d4ee21366151887e560ff71da6668e70eb", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bef7d288df865ca1b76d20b56f2883b1338ea285/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bef7d288df865ca1b76d20b56f2883b1338ea285/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=bef7d288df865ca1b76d20b56f2883b1338ea285", "patch": "@@ -1,3 +1,8 @@\n+2010-03-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* lto-elf.c (is_compatible_architecture): New static function.\n+\t(DEFINE_VALIDATE_EHDR): Use it to validate the architecture.\n+\n 2010-02-11  Richard Guenther  <rguenther@suse.de>\n \n \tPR driver/43021"}, {"sha": "013528486eae6fa22aa4898a2fa705bf57088fee", "filename": "gcc/lto/lto-elf.c", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bef7d288df865ca1b76d20b56f2883b1338ea285/gcc%2Flto%2Flto-elf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bef7d288df865ca1b76d20b56f2883b1338ea285/gcc%2Flto%2Flto-elf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-elf.c?ref=bef7d288df865ca1b76d20b56f2883b1338ea285", "patch": "@@ -374,6 +374,38 @@ lto_elf_end_section (void)\n }\n \n \n+/* Return true if ELF_MACHINE is compatible with the cached value of the\n+   architecture and possibly update the latter.  Return false otherwise.  */\n+\n+static bool\n+is_compatible_architecture (Elf64_Half elf_machine)\n+{\n+  if (cached_file_attrs.elf_machine == elf_machine)\n+    return true;\n+\n+  switch (cached_file_attrs.elf_machine)\n+    {\n+    case EM_SPARC:\n+      if (elf_machine == EM_SPARC32PLUS)\n+\t{\n+\t  cached_file_attrs.elf_machine = elf_machine;\n+\t  return true;\n+\t}\n+      break;\n+\n+    case EM_SPARC32PLUS:\n+      if (elf_machine == EM_SPARC)\n+\treturn true;\n+      break;\n+\n+    default:\n+      break;\n+    }\n+\n+  return false;\n+}\n+\n+\n /* Validate's ELF_FILE's executable header and, if cached_file_attrs is\n    uninitialized, caches the architecture.  */\n \n@@ -398,8 +430,7 @@ validate_ehdr##BITS (lto_elf_file *elf_file)\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n   if (!cached_file_attrs.initialized)\t\t\t\t\\\n     cached_file_attrs.elf_machine = elf_header->e_machine;\t\\\n-\t\t\t\t\t\t\t\t\\\n-  if (cached_file_attrs.elf_machine != elf_header->e_machine)\t\\\n+  else if (!is_compatible_architecture (elf_header->e_machine))\t\\\n     {\t\t\t\t\t\t\t\t\\\n       error (\"inconsistent file architecture detected\");\t\\\n       return false;\t\t\t\t\t\t\\"}]}