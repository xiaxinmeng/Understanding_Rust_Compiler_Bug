{"sha": "220bd61874cf114667b44f9ded76ed0639eb278b", "node_id": "C_kwDOANBUbNoAKDIyMGJkNjE4NzRjZjExNDY2N2I0NGY5ZGVkNzZlZDA2MzllYjI3OGI", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-11-15T10:37:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-11-15T12:07:57Z"}, "message": "tree-optimization/103237 - avoid vectorizing unhandled double reductions\n\nDouble reductions which have multiple LC PHIs in the inner loop\nare not handled correctly during transformation since those PHIs\nare not properly classified as reduction.  The following disables\nvectorizing them.\n\n2021-11-15  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/103237\n\t* tree-vect-loop.c (vect_is_simple_reduction): Fail for\n\tdouble reductions with multiple inner loop LC PHI nodes.\n\n\t* gcc.dg/torture/pr103237.c: New testcase.", "tree": {"sha": "e7fdc16ddcbe8866feed8fd504911e09024b0ddc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7fdc16ddcbe8866feed8fd504911e09024b0ddc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/220bd61874cf114667b44f9ded76ed0639eb278b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220bd61874cf114667b44f9ded76ed0639eb278b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/220bd61874cf114667b44f9ded76ed0639eb278b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220bd61874cf114667b44f9ded76ed0639eb278b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d281ff7ddd8f6365943c0a622107f92315bb8a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d281ff7ddd8f6365943c0a622107f92315bb8a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d281ff7ddd8f6365943c0a622107f92315bb8a6"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "f2399f9586e7a33827815c3453225c8b2fd1fa23", "filename": "gcc/testsuite/gcc.dg/torture/pr103237.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220bd61874cf114667b44f9ded76ed0639eb278b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr103237.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220bd61874cf114667b44f9ded76ed0639eb278b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr103237.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr103237.c?ref=220bd61874cf114667b44f9ded76ed0639eb278b", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-vectorize\" } */\n+\n+int g1;\n+unsigned int g2 = -1U;\n+static void __attribute__((noipa))\n+func_1()\n+{\n+  int *l_1 = &g1;\n+  for (int g3a = 0; g3a != 4; g3a++)\n+    for (int l_2 = 0; l_2 <= 3; l_2++)\n+      {\n+        unsigned int *l_3 = &g2;\n+        *l_1 = *l_3 ^= 1;\n+      }\n+}\n+int\n+main()\n+{\n+  func_1();\n+  if (g1 != -1)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "73efdb96badf151e7ace9826e49dd4cee97ba40e", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220bd61874cf114667b44f9ded76ed0639eb278b/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220bd61874cf114667b44f9ded76ed0639eb278b/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=220bd61874cf114667b44f9ded76ed0639eb278b", "patch": "@@ -3567,6 +3567,17 @@ vect_is_simple_reduction (loop_vec_info loop_info, stmt_vec_info phi_info,\n       return def_stmt_info;\n     }\n \n+  /* When the inner loop of a double reduction ends up with more than\n+     one loop-closed PHI we have failed to classify alternate such\n+     PHIs as double reduction, leading to wrong code.  See PR103237.  */\n+  if (inner_loop_of_double_reduc && lcphis.length () != 1)\n+    {\n+      if (dump_enabled_p ())\n+\tdump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+\t\t\t \"unhandle double reduction\\n\");\n+      return NULL;\n+    }\n+\n   /* If this isn't a nested cycle or if the nested cycle reduction value\n      is used ouside of the inner loop we cannot handle uses of the reduction\n      value.  */"}]}