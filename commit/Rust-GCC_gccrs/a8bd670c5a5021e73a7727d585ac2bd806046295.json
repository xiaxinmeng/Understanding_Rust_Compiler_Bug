{"sha": "a8bd670c5a5021e73a7727d585ac2bd806046295", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThiZDY3MGM1YTUwMjFlNzNhNzcyN2Q1ODVhYzJiZDgwNjA0NjI5NQ==", "commit": {"author": {"name": "Razya Ladelsky", "email": "razya@il.ibm.com", "date": "2005-11-13T09:08:42Z"}, "committer": {"name": "Razya Ladelsky", "email": "razya@gcc.gnu.org", "date": "2005-11-13T09:08:42Z"}, "message": "ipa-prop.c (ipa_callsite_compute_param ): Removed obsolete type checking.\n\n2005-11-13  Razya Ladelsky <razya@il.ibm.com>\n\n        * ipa-prop.c (ipa_callsite_compute_param ): Removed obsolete type\n        checking.\n\nFrom-SVN: r106858", "tree": {"sha": "0c4ce54b172dca2af0179b2bd584285653c2378d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c4ce54b172dca2af0179b2bd584285653c2378d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8bd670c5a5021e73a7727d585ac2bd806046295", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8bd670c5a5021e73a7727d585ac2bd806046295", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8bd670c5a5021e73a7727d585ac2bd806046295", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8bd670c5a5021e73a7727d585ac2bd806046295/comments", "author": null, "committer": null, "parents": [{"sha": "42068fd90a57d8924cee466830d5e883794b58d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42068fd90a57d8924cee466830d5e883794b58d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42068fd90a57d8924cee466830d5e883794b58d0"}], "stats": {"total": 56, "additions": 15, "deletions": 41}, "files": [{"sha": "85753792d852b168ff4f5de834c334ef66688c35", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8bd670c5a5021e73a7727d585ac2bd806046295/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8bd670c5a5021e73a7727d585ac2bd806046295/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8bd670c5a5021e73a7727d585ac2bd806046295", "patch": "@@ -1,3 +1,8 @@\n+2005-11-13  Razya Ladelsky <razya@il.ibm.com>\n+\n+        * ipa-prop.c (ipa_callsite_compute_param ): Removed obsolete type \n+\tchecking.\n+\n 2005-11-13  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/22489"}, {"sha": "84a3a424a1835d705c30409b7ddfd144fca7cfd8", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 10, "deletions": 41, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8bd670c5a5021e73a7727d585ac2bd806046295/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8bd670c5a5021e73a7727d585ac2bd806046295/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=a8bd670c5a5021e73a7727d585ac2bd806046295", "patch": "@@ -431,7 +431,7 @@ void\n ipa_callsite_compute_param (struct cgraph_edge *cs)\n {\n   tree call_tree;\n-  tree arg, cst_decl, arg_type, formal_type;\n+  tree arg, cst_decl;\n   int arg_num;\n   int i;\n   struct cgraph_node *mt;\n@@ -457,18 +457,8 @@ ipa_callsite_compute_param (struct cgraph_edge *cs)\n \t    ipa_callsite_param_set_type (cs, arg_num, UNKNOWN_IPATYPE);\n \t  else\n \t    {\n-\t\targ_type = TREE_TYPE (TREE_VALUE (arg));\n-\t  \tformal_type = TREE_TYPE (ipa_method_get_tree (cs->callee, arg_num));\n-\t  \tif (TYPE_NAME (arg_type) == TYPE_NAME (formal_type)\n-\t\t    && TYPE_CONTEXT (arg_type) == TYPE_CONTEXT (formal_type)\n-\t\t    && attribute_list_equal (TYPE_ATTRIBUTES (arg_type),\n-\t\t\t\t\t     TYPE_ATTRIBUTES (formal_type)))\n-\t\t  {\n-\t\t    ipa_callsite_param_set_type (cs, arg_num, FORMAL_IPATYPE);\n-\t\t    ipa_callsite_param_set_info_type_formal (cs, arg_num, i);\n-\t\t  }\n-\t \telse\n-\t\t  ipa_callsite_param_set_type (cs, arg_num, UNKNOWN_IPATYPE);\n+\t      ipa_callsite_param_set_type (cs, arg_num, FORMAL_IPATYPE);\n+\t      ipa_callsite_param_set_info_type_formal (cs, arg_num, i);\n \t    }\n \t}\n       /* If a constant value was passed as argument, \n@@ -477,18 +467,9 @@ ipa_callsite_compute_param (struct cgraph_edge *cs)\n       else if (TREE_CODE (TREE_VALUE (arg)) == INTEGER_CST\n \t       || TREE_CODE (TREE_VALUE (arg)) == REAL_CST)\n \t{\n-\t  arg_type = TREE_TYPE (TREE_VALUE (arg));\n-\t  formal_type = TREE_TYPE (ipa_method_get_tree (cs->callee, arg_num));\n-\t  if (TYPE_NAME (arg_type) == TYPE_NAME (formal_type)\n-\t      && TYPE_CONTEXT (arg_type) == TYPE_CONTEXT (formal_type)\n-\t      && attribute_list_equal (TYPE_ATTRIBUTES (arg_type),\n-\t\t\t\t       TYPE_ATTRIBUTES (formal_type)))\n-\t    {\n-\t      ipa_callsite_param_set_type (cs, arg_num, CONST_IPATYPE);\n-\t      ipa_callsite_param_set_info_type (cs, arg_num, TREE_VALUE (arg));\n-\t    }\n-\t  else\n-\t    ipa_callsite_param_set_type (cs, arg_num, UNKNOWN_IPATYPE);\n+\t  ipa_callsite_param_set_type (cs, arg_num, CONST_IPATYPE);\n+\t  ipa_callsite_param_set_info_type (cs, arg_num,\n+\t\t\t\t\t    TREE_VALUE (arg));\n \t}\n       /* This is for the case of Fortran. If the address of a const_decl \n          was passed as argument then we store \n@@ -499,25 +480,13 @@ ipa_callsite_compute_param (struct cgraph_edge *cs)\n \t       CONST_DECL)\n \t{\n \t  cst_decl = TREE_OPERAND (TREE_VALUE (arg), 0);\n-\t  arg_type = TREE_TYPE (DECL_INITIAL (cst_decl));\n-\t  formal_type =\n-\t    TREE_TYPE (TREE_TYPE (ipa_method_get_tree (cs->callee, arg_num)));\n \t  if (TREE_CODE (DECL_INITIAL (cst_decl)) == INTEGER_CST\n \t      || TREE_CODE (DECL_INITIAL (cst_decl)) == REAL_CST)\n \t    {\n-\t      if (TYPE_NAME (arg_type) == TYPE_NAME (formal_type)\n-\t\t  && TYPE_CONTEXT (arg_type) == TYPE_CONTEXT (formal_type)\n-\t\t  && attribute_list_equal (TYPE_ATTRIBUTES (arg_type),\n-\t\t\t\t\t   TYPE_ATTRIBUTES (formal_type)))\n-\n-\t\t{\n-\t\t  ipa_callsite_param_set_type (cs, arg_num,\n-\t\t\t\t\t       CONST_IPATYPE_REF);\n-\t\t  ipa_callsite_param_set_info_type (cs, arg_num, DECL_INITIAL (cst_decl));\n-\n-\t\t}\n-\t      else\n-\t\tipa_callsite_param_set_type (cs, arg_num, UNKNOWN_IPATYPE);\n+\t      ipa_callsite_param_set_type (cs, arg_num,\n+\t\t\t\t\t   CONST_IPATYPE_REF);\n+\t      ipa_callsite_param_set_info_type (cs, arg_num,\n+\t\t\t\t\t\tDECL_INITIAL (cst_decl));\n \t    }\n \t}\n       else"}]}