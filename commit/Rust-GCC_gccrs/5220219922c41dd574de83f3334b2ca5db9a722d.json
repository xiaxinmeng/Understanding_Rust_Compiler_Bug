{"sha": "5220219922c41dd574de83f3334b2ca5db9a722d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIyMDIxOTkyMmM0MWRkNTc0ZGU4M2YzMzM0YjJjYTVkYjlhNzIyZA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-08-04T04:58:26Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-08-04T05:23:42Z"}, "message": "Adjust op_with_boolean_value_range_p for irange API.\n\ngcc/ChangeLog:\n\n\t* vr-values.c (simplify_using_ranges::op_with_boolean_value_range_p): Adjust\n\tfor irange API.", "tree": {"sha": "13d79eeab8110838ab84583fa5c5714a5f5585e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13d79eeab8110838ab84583fa5c5714a5f5585e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5220219922c41dd574de83f3334b2ca5db9a722d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5220219922c41dd574de83f3334b2ca5db9a722d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5220219922c41dd574de83f3334b2ca5db9a722d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5220219922c41dd574de83f3334b2ca5db9a722d/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "967c966f212a3a05ae88715231cd8dba1e452e2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/967c966f212a3a05ae88715231cd8dba1e452e2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/967c966f212a3a05ae88715231cd8dba1e452e2e"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "1190fa9645316d5649115d36ae89ee771c16d738", "filename": "gcc/vr-values.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5220219922c41dd574de83f3334b2ca5db9a722d/gcc%2Fvr-values.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5220219922c41dd574de83f3334b2ca5db9a722d/gcc%2Fvr-values.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvr-values.c?ref=5220219922c41dd574de83f3334b2ca5db9a722d", "patch": "@@ -448,10 +448,11 @@ simplify_using_ranges::op_with_boolean_value_range_p (tree op)\n   if (TREE_CODE (op) != SSA_NAME)\n     return false;\n \n+  /* ?? Errr, this should probably check for [0,0] and [1,1] as well\n+     as [0,1].  */\n   const value_range *vr = get_value_range (op);\n-  return (vr->kind () == VR_RANGE\n-\t  && integer_zerop (vr->min ())\n-\t  && integer_onep (vr->max ()));\n+  return *vr == value_range (build_zero_cst (TREE_TYPE (op)),\n+\t\t\t     build_one_cst (TREE_TYPE (op)));\n }\n \n /* Extract value range information for VAR when (OP COND_CODE LIMIT) is"}]}