{"sha": "636a9a890073af7540e9dc1e96ec180dcb42e50e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM2YTlhODkwMDczYWY3NTQwZTlkYzFlOTZlYzE4MGRjYjQyZTUwZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2016-11-19T17:52:04Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-11-19T17:52:04Z"}, "message": "re PR target/25111 ([m68k] bset is not used for A = 1 << (B & 31) on ColdFire)\n\n\tPR target/25111\n\t* config/m68k/m68k.md (bsetdreg): New pattern.\n\t(bchgdreg, bclrdreg): Likewise.\n\n\tPR target/25111\n\t* gcc.target/m68k/pr25111.c: New test.\n\nFrom-SVN: r242623", "tree": {"sha": "6bb4b9009d9f2d285b77183175577ae4cde50a76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bb4b9009d9f2d285b77183175577ae4cde50a76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/636a9a890073af7540e9dc1e96ec180dcb42e50e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/636a9a890073af7540e9dc1e96ec180dcb42e50e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/636a9a890073af7540e9dc1e96ec180dcb42e50e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/636a9a890073af7540e9dc1e96ec180dcb42e50e/comments", "author": null, "committer": null, "parents": [{"sha": "e8fe0e46170419bfe47bbaf381e38e7ddc525ef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8fe0e46170419bfe47bbaf381e38e7ddc525ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8fe0e46170419bfe47bbaf381e38e7ddc525ef6"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "1d560f5c68eef726a209f081b3c6c33afdc8d56f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636a9a890073af7540e9dc1e96ec180dcb42e50e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636a9a890073af7540e9dc1e96ec180dcb42e50e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=636a9a890073af7540e9dc1e96ec180dcb42e50e", "patch": "@@ -1,3 +1,9 @@\n+2016-11-19  Jeff Law  <law@redhat.com>\n+\n+\tPR target/25111\n+\t* config/m68k/m68k.md (bsetdreg): New pattern.\n+\t(bchgdreg, bclrdreg): Likewise.\n+\n 2016-11-19  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \tPR target/78426"}, {"sha": "208561996e774fa365cea5f1d019236efd63d17a", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636a9a890073af7540e9dc1e96ec180dcb42e50e/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636a9a890073af7540e9dc1e96ec180dcb42e50e/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=636a9a890073af7540e9dc1e96ec180dcb42e50e", "patch": "@@ -5336,6 +5336,45 @@\n }\n   [(set_attr \"type\" \"bitrw\")])\n \n+(define_insn \"*bsetdreg\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"+d\")\n+\t(ior:SI (ashift:SI (const_int 1)\n+\t\t\t   (and:SI (match_operand:SI 1 \"register_operand\" \"d\")\n+\t\t\t\t   (const_int 31)))\n+\t\t(match_operand:SI 2 \"register_operand\" \"0\")))]\n+  \"\"\n+{\n+  CC_STATUS_INIT;\n+  return \"bset %1,%0\";\n+}\n+  [(set_attr \"type\" \"bitrw\")])\n+\n+(define_insn \"*bchgdreg\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"+d\")\n+\t(xor:SI (ashift:SI (const_int 1)\n+\t\t\t   (and:SI (match_operand:SI 1 \"register_operand\" \"d\")\n+\t\t\t\t   (const_int 31)))\n+\t\t(match_operand:SI 2 \"register_operand\" \"0\")))]\n+  \"\"\n+{\n+  CC_STATUS_INIT;\n+  return \"bchg %1,%0\";\n+}\n+  [(set_attr \"type\" \"bitrw\")])\n+\n+(define_insn \"*bclrdreg\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"+d\")\n+\t(and:SI (rotate:SI (const_int -2)\n+\t\t\t   (and:SI (match_operand:SI 1 \"register_operand\" \"d\")\n+\t\t\t\t   (const_int 31)))\n+\t\t(match_operand:SI 2 \"register_operand\" \"0\")))]\n+  \"\"\n+{\n+  CC_STATUS_INIT;\n+  return \"bclr %1,%0\";\n+}\n+  [(set_attr \"type\" \"bitrw\")])\n+\n ;; clear bit, bit number is int\n (define_insn \"bclrmemqi\"\n   [(set (zero_extract:SI (match_operand:QI 0 \"memory_operand\" \"+m\")"}, {"sha": "41133d8228081089653ad588fa58a9c84008297b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636a9a890073af7540e9dc1e96ec180dcb42e50e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636a9a890073af7540e9dc1e96ec180dcb42e50e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=636a9a890073af7540e9dc1e96ec180dcb42e50e", "patch": "@@ -1,3 +1,8 @@\n+2016-11-18  Jeff Law  <law@redhat.com>\n+\n+\tPR target/25111\n+\t* gcc.target/m68k/pr25111.c: New test.\n+\n 2016-11-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/68180"}, {"sha": "950eedaff3d4c771cebad213031a59f62be7609c", "filename": "gcc/testsuite/gcc.target/m68k/pr25111.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636a9a890073af7540e9dc1e96ec180dcb42e50e/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fpr25111.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636a9a890073af7540e9dc1e96ec180dcb42e50e/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fpr25111.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fpr25111.c?ref=636a9a890073af7540e9dc1e96ec180dcb42e50e", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+/* { dg-final { scan-assembler-times \"bset\" 1 } } */\n+/* { dg-final { scan-assembler-times \"bchg\" 1 } } */\n+/* { dg-final { scan-assembler-times \"bclr\" 1 } } */\n+\n+int bar (void);\n+\n+int\n+foo1 (int b)\n+{\n+  int a = bar ();\n+  return ( a | (1 << (b & 31)));\n+}\n+\n+int\n+foo2 (int b)\n+{\n+  int a = bar ();\n+  return ( a ^ (1 << (b & 31)));\n+}\n+\n+\n+int\n+foo3 (int b)\n+{\n+  int a = bar ();\n+  return ( a & ~(1 << (b & 31)));\n+}\n+\n+"}]}