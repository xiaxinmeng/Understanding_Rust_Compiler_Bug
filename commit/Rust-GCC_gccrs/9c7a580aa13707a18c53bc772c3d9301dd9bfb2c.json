{"sha": "9c7a580aa13707a18c53bc772c3d9301dd9bfb2c", "node_id": "C_kwDOANBUbNoAKDljN2E1ODBhYTEzNzA3YTE4YzUzYmM3NzJjM2Q5MzAxZGQ5YmZiMmM", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-07-17T19:45:42Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-07-17T19:45:42Z"}, "message": "Fix ICE on duplicate compilation of ExternBlock items\n\nWhen we declare an extern block after where it is used the query\ncompilation system in the backend code-gen pass will resolve this and\ncompile as required. But when the iteration of the crate as part of the\npipeline we end up compiling this function again. The check we used to stop\nthis was copy paste from the other function items but in this case the\ncheck for function_completed is not valid as this is a prototype for an\nextern item so we dont add this to the translation unit as an fndecl which\nmeant we hit the ICE where we compile and add it again.\n\nFixes #1323", "tree": {"sha": "0fb6789a85aa49e4044679b8a6b10d26e953dc25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fb6789a85aa49e4044679b8a6b10d26e953dc25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c7a580aa13707a18c53bc772c3d9301dd9bfb2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c7a580aa13707a18c53bc772c3d9301dd9bfb2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c7a580aa13707a18c53bc772c3d9301dd9bfb2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c7a580aa13707a18c53bc772c3d9301dd9bfb2c/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd2bd659e44e5b7fea92bc34a4864f057f387490", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd2bd659e44e5b7fea92bc34a4864f057f387490", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd2bd659e44e5b7fea92bc34a4864f057f387490"}], "stats": {"total": 54, "additions": 46, "deletions": 8}, "files": [{"sha": "4355e4ad522fb03c9de6e437a54a70e003f2096a", "filename": "gcc/rust/backend/rust-compile-extern.h", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c7a580aa13707a18c53bc772c3d9301dd9bfb2c/gcc%2Frust%2Fbackend%2Frust-compile-extern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c7a580aa13707a18c53bc772c3d9301dd9bfb2c/gcc%2Frust%2Fbackend%2Frust-compile-extern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-extern.h?ref=9c7a580aa13707a18c53bc772c3d9301dd9bfb2c", "patch": "@@ -46,6 +46,14 @@ class CompileExternItem : public HIRCompileBase,\n \n   void visit (HIR::ExternalStaticItem &item) override\n   {\n+    // check if its already been compiled\n+    Bvariable *lookup = ctx->get_backend ()->error_variable ();\n+    if (ctx->lookup_var_decl (item.get_mappings ().get_hirid (), &lookup))\n+      {\n+\treference = ctx->get_backend ()->var_expression (lookup, ref_locus);\n+\treturn;\n+      }\n+\n     TyTy::BaseType *resolved_type = nullptr;\n     bool ok = ctx->get_tyctx ()->lookup_type (item.get_mappings ().get_hirid (),\n \t\t\t\t\t      &resolved_type);\n@@ -102,15 +110,11 @@ class CompileExternItem : public HIRCompileBase,\n     if (ctx->lookup_function_decl (fntype->get_ty_ref (), &lookup,\n \t\t\t\t   fntype->get_id (), fntype))\n       {\n-\t// has this been added to the list then it must be finished\n-\tif (ctx->function_completed (lookup))\n-\t  {\n-\t    tree dummy = NULL_TREE;\n-\t    if (!ctx->lookup_function_decl (fntype->get_ty_ref (), &dummy))\n-\t      ctx->insert_function_decl (fntype, lookup);\n+\treference\n+\t  = address_expression (lookup, build_pointer_type (TREE_TYPE (lookup)),\n+\t\t\t\tref_locus);\n \n-\t    return;\n-\t  }\n+\treturn;\n       }\n \n     if (fntype->has_subsititions_defined ())"}, {"sha": "a6174253a21357435ed9b3ade4aa8d33ea6e8f25", "filename": "gcc/testsuite/rust/compile/issue-1323-1.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c7a580aa13707a18c53bc772c3d9301dd9bfb2c/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1323-1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c7a580aa13707a18c53bc772c3d9301dd9bfb2c/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1323-1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1323-1.rs?ref=9c7a580aa13707a18c53bc772c3d9301dd9bfb2c", "patch": "@@ -0,0 +1,18 @@\n+fn main() {\n+    let mut x = [1, 2, 3];\n+    let y: i32 = x[0];\n+    print_int(y);\n+}\n+\n+extern \"C\" {\n+    fn printf(s: *const i8, ...);\n+}\n+\n+fn print_int(value: i32) {\n+    let s = \"%d\\n\\0\";\n+    let s_p = s as *const str;\n+    let c_p = s_p as *const i8;\n+    unsafe {\n+        printf(c_p, value as isize);\n+    }\n+}"}, {"sha": "45168b22fa729f56c0fe737e3ffba2b6c25ffd24", "filename": "gcc/testsuite/rust/compile/issue-1323-2.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c7a580aa13707a18c53bc772c3d9301dd9bfb2c/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1323-2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c7a580aa13707a18c53bc772c3d9301dd9bfb2c/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1323-2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1323-2.rs?ref=9c7a580aa13707a18c53bc772c3d9301dd9bfb2c", "patch": "@@ -0,0 +1,16 @@\n+fn print_int(value: i32) {\n+    let s = \"%d\\n\\0\";\n+    let s_p = s as *const str;\n+    let c_p = s_p as *const i8;\n+    unsafe {\n+        printf(c_p, value as isize);\n+    }\n+}\n+\n+fn main() {\n+    print_int(5);\n+}\n+\n+extern \"C\" {\n+    fn printf(s: *const i8, ...);\n+}"}]}