{"sha": "24abcc441ab1c0e8705e43189efff80daa36acfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRhYmNjNDQxYWIxYzBlODcwNWU0MzE4OWVmZmY4MGRhYTM2YWNmYg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2018-02-12T17:11:58Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2018-02-12T17:11:58Z"}, "message": "re PR fortran/84273 ([F03] Reject allocatable passed-object dummy argument (proc_ptr_47.f90))\n\n2018-02-12  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/84273\n\t* resolve.c (resolve_component): Fix checks of passed argument in\n\tprocedure-pointer components.\n\n\n2018-02-12  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/84273\n\t* gfortran.dg/proc_ptr_47.f90: Fix invalid test case.\n\t* gfortran.dg/proc_ptr_comp_pass_4.f90: Fix and extend test case.\n\nFrom-SVN: r257590", "tree": {"sha": "79894e2f612f76d538f033dec77acd9629148019", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79894e2f612f76d538f033dec77acd9629148019"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24abcc441ab1c0e8705e43189efff80daa36acfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24abcc441ab1c0e8705e43189efff80daa36acfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24abcc441ab1c0e8705e43189efff80daa36acfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24abcc441ab1c0e8705e43189efff80daa36acfb/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78604de064490c8c12d2d4efadbd453f7c8c7685", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78604de064490c8c12d2d4efadbd453f7c8c7685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78604de064490c8c12d2d4efadbd453f7c8c7685"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "6f416b31e4ffea50ed5e6d6ef2f60d6b955498ba", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24abcc441ab1c0e8705e43189efff80daa36acfb/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24abcc441ab1c0e8705e43189efff80daa36acfb/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=24abcc441ab1c0e8705e43189efff80daa36acfb", "patch": "@@ -1,3 +1,9 @@\n+2018-02-12  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/84273\n+\t* resolve.c (resolve_component): Fix checks of passed argument in\n+\tprocedure-pointer components.\n+\n 2018-02-11  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/35299"}, {"sha": "01e2c38952c6f2b633b0d7c6d95ae784af8c3b69", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24abcc441ab1c0e8705e43189efff80daa36acfb/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24abcc441ab1c0e8705e43189efff80daa36acfb/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=24abcc441ab1c0e8705e43189efff80daa36acfb", "patch": "@@ -13706,8 +13706,8 @@ resolve_component (gfc_component *c, gfc_symbol *sym)\n           return false;\n         }\n \n-      /* Check for C453.  */\n-      if (me_arg->attr.dimension)\n+      /* Check for F03:C453.  */\n+      if (CLASS_DATA (me_arg)->attr.dimension)\n         {\n           gfc_error (\"Argument %qs of %qs with PASS(%s) at %L \"\n                      \"must be scalar\", me_arg->name, c->name, me_arg->name,\n@@ -13716,7 +13716,7 @@ resolve_component (gfc_component *c, gfc_symbol *sym)\n           return false;\n         }\n \n-      if (me_arg->attr.pointer)\n+      if (CLASS_DATA (me_arg)->attr.class_pointer)\n         {\n           gfc_error (\"Argument %qs of %qs with PASS(%s) at %L \"\n                      \"may not have the POINTER attribute\", me_arg->name,\n@@ -13725,7 +13725,7 @@ resolve_component (gfc_component *c, gfc_symbol *sym)\n           return false;\n         }\n \n-      if (me_arg->attr.allocatable)\n+      if (CLASS_DATA (me_arg)->attr.allocatable)\n         {\n           gfc_error (\"Argument %qs of %qs with PASS(%s) at %L \"\n                      \"may not be ALLOCATABLE\", me_arg->name, c->name,"}, {"sha": "c4ae3e34ab6ae0ae7a6fb8c058c9c6302f7b3eb5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24abcc441ab1c0e8705e43189efff80daa36acfb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24abcc441ab1c0e8705e43189efff80daa36acfb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=24abcc441ab1c0e8705e43189efff80daa36acfb", "patch": "@@ -1,3 +1,9 @@\n+2018-02-12  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/84273\n+\t* gfortran.dg/proc_ptr_47.f90: Fix invalid test case.\n+\t* gfortran.dg/proc_ptr_comp_pass_4.f90: Fix and extend test case.\n+\n 2018-02-12  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR target/82641"}, {"sha": "80a78f3852d18816702197876e5215b9a04b6a6b", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_47.f90", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24abcc441ab1c0e8705e43189efff80daa36acfb/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_47.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24abcc441ab1c0e8705e43189efff80daa36acfb/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_47.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_47.f90?ref=24abcc441ab1c0e8705e43189efff80daa36acfb", "patch": "@@ -21,13 +21,9 @@\n \n contains\n   function foo(A)\n-    class(AA), allocatable :: A\n+    class(AA) :: A\n     type(AA) foo\n \n-    if (.not.allocated (A)) then\n-      allocate (A, source = AA (2, foo))\n-    endif\n-\n     select type (A)\n       type is (AA)\n         foo = AA (3, foo)"}, {"sha": "1632e2748218557740c2af03529838def4e84334", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_pass_4.f90", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24abcc441ab1c0e8705e43189efff80daa36acfb/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_pass_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24abcc441ab1c0e8705e43189efff80daa36acfb/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_pass_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_pass_4.f90?ref=24abcc441ab1c0e8705e43189efff80daa36acfb", "patch": "@@ -37,22 +37,23 @@ module m\n \n  type :: t8\n    procedure(foo8), pass, pointer :: f8  ! { dg-error \"must be of the derived type\" }\n+   procedure(foo9), pass, pointer :: f9  ! { dg-error \"Non-polymorphic passed-object dummy argument\" }\n  end type\n \n contains\n \n  subroutine foo1 (x1,y1)\n-  type(t1) :: x1(:)\n+  class(t1) :: x1(:)\n   type(t1) :: y1\n  end subroutine\n \n  subroutine foo2 (x2,y2)\n-  type(t2),pointer :: x2\n+  class(t2),pointer :: x2\n   type(t2) :: y2\n  end subroutine\n \n  subroutine foo3 (x3,y3)\n-  type(t3),allocatable :: x3\n+  class(t3),allocatable :: x3\n   type(t3) :: y3\n  end subroutine\n \n@@ -69,4 +70,8 @@ character function foo8 (i)\n    integer :: i\n  end function\n \n+ subroutine foo9(x)\n+   type(t8) :: x\n+ end subroutine\n+\n end module m"}]}