{"sha": "5eed512d4d7c88dde24295ea65d1a617461bb64f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVlZDUxMmQ0ZDdjODhkZGUyNDI5NWVhNjVkMWE2MTc0NjFiYjY0Zg==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2009-04-24T10:13:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-24T10:13:43Z"}, "message": "2009-04-24  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-proc.adb, prj.adb, prj.ads, prj-nmsc.adb, prj-env.adb\n\t(Source_Iterator): new type.\n        This removes the need for having the sources on three different\n        lists at the project tree, project and language level. They are now\n        on a single list.\n\nFrom-SVN: r146689", "tree": {"sha": "c8c5b16b16326d1a5ee465198da9d3a35dafabb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8c5b16b16326d1a5ee465198da9d3a35dafabb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5eed512d4d7c88dde24295ea65d1a617461bb64f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eed512d4d7c88dde24295ea65d1a617461bb64f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eed512d4d7c88dde24295ea65d1a617461bb64f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eed512d4d7c88dde24295ea65d1a617461bb64f/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5876578bdcbc80a231b4c42c2ebf242912eb631f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5876578bdcbc80a231b4c42c2ebf242912eb631f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5876578bdcbc80a231b4c42c2ebf242912eb631f"}], "stats": {"total": 541, "additions": 306, "deletions": 235}, "files": [{"sha": "ad7279e5e91ed3e1dea1a37e72074970b25bb3c8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eed512d4d7c88dde24295ea65d1a617461bb64f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eed512d4d7c88dde24295ea65d1a617461bb64f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5eed512d4d7c88dde24295ea65d1a617461bb64f", "patch": "@@ -1,3 +1,11 @@\n+2009-04-24  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-proc.adb, prj.adb, prj.ads, prj-nmsc.adb, prj-env.adb\n+\t(Source_Iterator): new type.\n+        This removes the need for having the sources on three different\n+        lists at the project tree, project and language level. They are now\n+        on a single list.\n+\n 2009-04-24  Emmanuel Briot  <briot@adacore.com>\n \n \t* gnatcmd.adb, prj.adb, prj.ads: Remove unused entities"}, {"sha": "f37ecd422143731d7dc032642a66cfb1cd18e320", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eed512d4d7c88dde24295ea65d1a617461bb64f/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eed512d4d7c88dde24295ea65d1a617461bb64f/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=5eed512d4d7c88dde24295ea65d1a617461bb64f", "patch": "@@ -1054,6 +1054,7 @@ package body Prj.Env is\n       Suffix        : File_Name_Type;\n       The_Unit_Data : Unit_Data;\n       Data          : File_Name_Data;\n+      Iter          : Source_Iterator;\n \n       procedure Put_Name_Buffer;\n       --  Put the line contained in the Name_Buffer in the mapping file\n@@ -1200,8 +1201,12 @@ package body Prj.Env is\n \n          for Proj in Present'Range loop\n             if Present (Proj) then\n-               Source := In_Tree.Projects.Table (Proj).First_Source;\n-               while Source /= No_Source loop\n+\n+               Iter := For_Each_Source (In_Tree, Proj);\n+               loop\n+                  Source := Prj.Element (Iter);\n+                  exit when Source = No_Source;\n+\n                   Src_Data := In_Tree.Sources.Table (Source);\n \n                   if In_Tree.Sources.Table (Source).Language.Name = Language\n@@ -1234,7 +1239,7 @@ package body Prj.Env is\n                      Put_Name_Buffer;\n                   end if;\n \n-                  Source := Src_Data.Next_In_Project;\n+                  Next (Iter);\n                end loop;\n             end if;\n          end loop;"}, {"sha": "f6546eadee3332141603faaabea774a3db5f17d9", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 148, "deletions": 207, "changes": 355, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eed512d4d7c88dde24295ea65d1a617461bb64f/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eed512d4d7c88dde24295ea65d1a617461bb64f/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=5eed512d4d7c88dde24295ea65d1a617461bb64f", "patch": "@@ -218,18 +218,15 @@ package body Prj.Nmsc is\n \n    procedure Load_Naming_Exceptions\n      (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref;\n-      Data    : in out Project_Data);\n+      In_Tree : Project_Tree_Ref);\n    --  All source files in Data.First_Source are considered as naming\n    --  exceptions, and copied into the Source_Names and Unit_Exceptions tables\n    --  as appropriate.\n \n    procedure Add_Source\n      (Id                  : out Source_Id;\n-      Data                : in out Project_Data;\n       In_Tree             : Project_Tree_Ref;\n       Project             : Project_Id;\n-      Lang                : Name_Id;\n       Lang_Id             : Language_Ptr;\n       Kind                : Source_Kind;\n       File_Name           : File_Name_Type;\n@@ -582,8 +579,6 @@ package body Prj.Nmsc is\n    procedure Remove_Source\n      (Id          : Source_Id;\n       Replaced_By : Source_Id;\n-      Project     : Project_Id;\n-      Data        : in out Project_Data;\n       In_Tree     : Project_Tree_Ref);\n    --  ??? needs comment\n \n@@ -687,10 +682,8 @@ package body Prj.Nmsc is\n \n    procedure Add_Source\n      (Id                  : out Source_Id;\n-      Data                : in out Project_Data;\n       In_Tree             : Project_Tree_Ref;\n       Project             : Project_Id;\n-      Lang                : Name_Id;\n       Lang_Id             : Language_Ptr;\n       Kind                : Source_Kind;\n       File_Name           : File_Name_Type;\n@@ -705,7 +698,6 @@ package body Prj.Nmsc is\n       Index               : Int       := 0;\n       Source_To_Replace   : Source_Id := No_Source)\n    is\n-      Source   : constant Source_Id := Data.Last_Source;\n       Src_Data : Source_Data := No_Source_Data;\n       Config   : constant Language_Config := Lang_Id.Config;\n \n@@ -722,8 +714,14 @@ package body Prj.Nmsc is\n          Write_Str (Get_Name_String (File_Name));\n \n          if Lang_Kind = Unit_Based then\n-            Write_Str (\", Unit : \");\n-            Write_Str (Get_Name_String (Unit));\n+            Write_Str (\" Unit: \");\n+            --  ??? in gprclean, it seems we sometimes pass an empty Unit name\n+            --  (see test extended_projects)\n+            if Unit /= No_Name then\n+               Write_Str (Get_Name_String (Unit));\n+            end if;\n+            Write_Str (\" Kind: \");\n+            Write_Str (Source_Kind'Image (Kind));\n          end if;\n \n          Write_Eol;\n@@ -772,21 +770,6 @@ package body Prj.Nmsc is\n          Unit_Sources_Htable.Set (In_Tree.Unit_Sources_HT, Unit, Id);\n       end if;\n \n-      --  Add the source to the global list\n-\n-      Src_Data.Next_In_Sources := In_Tree.First_Source;\n-      In_Tree.First_Source := Id;\n-\n-      --  Add the source to the project list\n-\n-      if Source = No_Source then\n-         Data.First_Source := Id;\n-      else\n-         In_Tree.Sources.Table (Source).Next_In_Project := Id;\n-      end if;\n-\n-      Data.Last_Source := Id;\n-\n       --  Add the source to the language list\n \n       Src_Data.Next_In_Lang := Lang_Id.First_Source;\n@@ -795,7 +778,7 @@ package body Prj.Nmsc is\n       In_Tree.Sources.Table (Id) := Src_Data;\n \n       if Source_To_Replace /= No_Source then\n-         Remove_Source (Source_To_Replace, Id, Project, Data, In_Tree);\n+         Remove_Source (Source_To_Replace, Id, In_Tree);\n       end if;\n    end Add_Source;\n \n@@ -846,7 +829,7 @@ package body Prj.Nmsc is\n       When_No_Sources : Error_Warning;\n       Current_Dir     : String)\n    is\n-      Data      : Project_Data := In_Tree.Projects.Table (Project);\n+      Data      : Project_Data renames In_Tree.Projects.Table (Project);\n       Extending : Boolean := False;\n \n    begin\n@@ -929,42 +912,53 @@ package body Prj.Nmsc is\n                Alt_Lang      : Alternate_Language_Id;\n                Alt_Lang_Data : Alternate_Language_Data;\n                Continuation  : Boolean := False;\n+               Iter          : Source_Iterator;\n \n             begin\n                Language := Data.Languages;\n                while Language /= No_Language_Index loop\n-                  Source := Data.First_Source;\n-                  Source_Loop : while Source /= No_Source loop\n-                     declare\n-                        Src_Data : Source_Data renames\n-                                     In_Tree.Sources.Table (Source);\n+                  --  If there are no sources for this language, check whether\n+                  --  there are sources for which this is an alternate\n+                  --  language\n \n-                     begin\n-                        exit Source_Loop when Src_Data.Language = Language;\n+                  if Language.First_Source = No_Source then\n+                     Iter := For_Each_Source (In_Tree => In_Tree,\n+                                              Project => Project);\n+                     Source_Loop : loop\n+                        Source := Element (Iter);\n+                        exit Source_Loop when Source = No_Source;\n \n-                        Alt_Lang := Src_Data.Alternate_Languages;\n+                        declare\n+                           Src_Data : Source_Data renames\n+                             In_Tree.Sources.Table (Source);\n \n-                        Alternate_Loop :\n-                        while Alt_Lang /= No_Alternate_Language loop\n-                           Alt_Lang_Data :=\n-                             In_Tree.Alt_Langs.Table (Alt_Lang);\n-                           exit Source_Loop\n-                           when Alt_Lang_Data.Language = Language;\n-                           Alt_Lang := Alt_Lang_Data.Next;\n-                        end loop Alternate_Loop;\n+                        begin\n+                           exit Source_Loop when Src_Data.Language = Language;\n+\n+                           Alt_Lang := Src_Data.Alternate_Languages;\n+\n+                           Alternate_Loop :\n+                           while Alt_Lang /= No_Alternate_Language loop\n+                              Alt_Lang_Data :=\n+                                In_Tree.Alt_Langs.Table (Alt_Lang);\n+                              exit Source_Loop\n+                                 when Alt_Lang_Data.Language = Language;\n+                              Alt_Lang := Alt_Lang_Data.Next;\n+                           end loop Alternate_Loop;\n+                        end;\n \n-                        Source := Src_Data.Next_In_Project;\n-                     end;\n-                  end loop Source_Loop;\n+                        Next (Iter);\n+                     end loop Source_Loop;\n \n-                  if Source = No_Source then\n-                     Report_No_Sources\n-                       (Project,\n-                        Get_Name_String (Language.Display_Name),\n-                        In_Tree,\n-                        Data.Location,\n-                        Continuation);\n-                     Continuation := True;\n+                     if Source = No_Source then\n+                        Report_No_Sources\n+                          (Project,\n+                           Get_Name_String (Language.Display_Name),\n+                           In_Tree,\n+                           Data.Location,\n+                           Continuation);\n+                        Continuation := True;\n+                     end if;\n                   end if;\n \n                   Language := Language.Next;\n@@ -2543,11 +2537,9 @@ package body Prj.Nmsc is\n       List    : String_List_Id;\n       Element : String_Element;\n       Name    : File_Name_Type;\n-\n+      Iter    : Source_Iterator;\n       Source   : Source_Id;\n-\n       Project_2 : Project_Id;\n-      Data_2     : Project_Data;\n \n    begin\n       if not Interfaces.Default then\n@@ -2556,24 +2548,17 @@ package body Prj.Nmsc is\n          --  later for the sources in the Interfaces list.\n \n          Project_2 := Project;\n-         Data_2    := Data;\n-         loop\n-            Source := Data_2.First_Source;\n-            while Source /= No_Source loop\n-               declare\n-                  Src_Data : Source_Data renames\n-                               In_Tree.Sources.Table (Source);\n-               begin\n-                  Src_Data.In_Interfaces := False;\n-                  Source := Src_Data.Next_In_Project;\n-               end;\n-            end loop;\n-\n-            Project_2 := Data_2.Extends;\n+         while Project_2 /= No_Project loop\n+            Iter := For_Each_Source (In_Tree, Project_2);\n \n-            exit when Project_2 = No_Project;\n+            loop\n+               Source := Prj.Element (Iter);\n+               exit when Source = No_Source;\n+               In_Tree.Sources.Table (Source).In_Interfaces := False;\n+               Next (Iter);\n+            end loop;\n \n-            Data_2 := In_Tree.Projects.Table (Project_2);\n+            Project_2 := In_Tree.Projects.Table (Project_2).Extends;\n          end loop;\n \n          List := Interfaces.Values;\n@@ -2582,11 +2567,14 @@ package body Prj.Nmsc is\n             Name := Canonical_Case_File_Name (Element.Value);\n \n             Project_2 := Project;\n-            Data_2 := Data;\n             Big_Loop :\n-            loop\n-               Source := Data_2.First_Source;\n-               while Source /= No_Source loop\n+            while Project_2 /= No_Project loop\n+               Iter := For_Each_Source (In_Tree, Project_2);\n+\n+               loop\n+                  Source := Prj.Element (Iter);\n+                  exit when Source = No_Source;\n+\n                   declare\n                      Src_Data : Source_Data renames\n                                   In_Tree.Sources.Table (Source);\n@@ -2615,15 +2603,11 @@ package body Prj.Nmsc is\n                         exit Big_Loop;\n                      end if;\n \n-                     Source := Src_Data.Next_In_Project;\n+                     Next (Iter);\n                   end;\n                end loop;\n \n-               Project_2 := Data_2.Extends;\n-\n-               exit Big_Loop when Project_2 = No_Project;\n-\n-               Data_2 := In_Tree.Projects.Table (Project_2);\n+               Project_2 := In_Tree.Projects.Table (Project_2).Extends;\n             end loop Big_Loop;\n \n             if Source = No_Source then\n@@ -2648,8 +2632,11 @@ package body Prj.Nmsc is\n            In_Tree.Projects.Table (Data.Extends).Interfaces_Defined;\n \n          if Data.Interfaces_Defined then\n-            Source := Data.First_Source;\n-            while Source /= No_Source loop\n+            Iter := For_Each_Source (In_Tree, Project);\n+            loop\n+               Source := Prj.Element (Iter);\n+               exit when Source = No_Source;\n+\n                declare\n                   Src_Data : Source_Data renames\n                                In_Tree.Sources.Table (Source);\n@@ -2658,9 +2645,9 @@ package body Prj.Nmsc is\n                   if not Src_Data.Declared_In_Interfaces then\n                      Src_Data.In_Interfaces := False;\n                   end if;\n-\n-                  Source := Src_Data.Next_In_Project;\n                end;\n+\n+               Next (Iter);\n             end loop;\n          end if;\n       end if;\n@@ -2913,6 +2900,7 @@ package body Prj.Nmsc is\n          Element        : String_Element;\n          File_Name      : File_Name_Type;\n          Source         : Source_Id;\n+         Iter           : Source_Iterator;\n \n       begin\n          case Kind is\n@@ -2942,20 +2930,19 @@ package body Prj.Nmsc is\n                Element   := In_Tree.String_Elements.Table (Element_Id);\n                File_Name := Canonical_Case_File_Name (Element.Value);\n \n-               Source := Data.First_Source;\n-               while Source /= No_Source\n-                 and then In_Tree.Sources.Table (Source).File /= File_Name\n+               Iter := For_Each_Source (In_Tree, Project);\n                loop\n-                  Source := In_Tree.Sources.Table (Source).Next_In_Project;\n+                  Source := Prj.Element (Iter);\n+                  exit when Source = No_Source\n+                    or else In_Tree.Sources.Table (Source).File = File_Name;\n+                  Next (Iter);\n                end loop;\n \n                if Source = No_Source then\n                   Add_Source\n                     (Id               => Source,\n-                     Data             => Data,\n                      In_Tree          => In_Tree,\n                      Project          => Project,\n-                     Lang             => Lang,\n                      Lang_Id          => Lang_Id,\n                      Kind             => Kind,\n                      File_Name        => File_Name,\n@@ -3011,6 +2998,7 @@ package body Prj.Nmsc is\n          Source_To_Replace : Source_Id := No_Source;\n          Other_Project     : Project_Id;\n          Other_Part        : Source_Id := No_Source;\n+         Iter              : Source_Iterator;\n \n       begin\n          case Kind is\n@@ -3071,23 +3059,25 @@ package body Prj.Nmsc is\n \n                --  Check if the source already exists\n \n-               Source := In_Tree.First_Source;\n                Source_To_Replace := No_Source;\n+               Iter := For_Each_Source (In_Tree);\n \n-               while Source /= No_Source and then\n-                 (In_Tree.Sources.Table (Source).Unit /= Unit or else\n-                  In_Tree.Sources.Table (Source).Index /= Index)\n                loop\n-                  Source := In_Tree.Sources.Table (Source).Next_In_Sources;\n+                  Source := Prj.Element (Iter);\n+                  exit when Source = No_Source\n+                    or else\n+                      (In_Tree.Sources.Table (Source).Unit = Unit and then\n+                       In_Tree.Sources.Table (Source).Index = Index);\n+                  Next (Iter);\n                end loop;\n \n                if Source /= No_Source then\n                   if In_Tree.Sources.Table (Source).Kind /= Kind then\n                      Other_Part := Source;\n \n                      loop\n-                        Source :=\n-                          In_Tree.Sources.Table (Source).Next_In_Sources;\n+                        Next (Iter);\n+                        Source := Prj.Element (Iter);\n \n                         exit when Source = No_Source or else\n                           (In_Tree.Sources.Table (Source).Unit = Unit\n@@ -3124,10 +3114,8 @@ package body Prj.Nmsc is\n                if Source = No_Source then\n                   Add_Source\n                     (Id           => Source,\n-                     Data         => Data,\n                      In_Tree      => In_Tree,\n                      Project      => Project,\n-                     Lang         => Lang,\n                      Lang_Id      => Lang_Id,\n                      Kind         => Kind,\n                      File_Name    => File_Name,\n@@ -3478,6 +3466,7 @@ package body Prj.Nmsc is\n       procedure Check_Library (Proj : Project_Id; Extends : Boolean) is\n          Proj_Data : Project_Data;\n          Src_Id    : Source_Id;\n+         Iter      : Source_Iterator;\n \n       begin\n          if Proj /= No_Project then\n@@ -3489,15 +3478,18 @@ package body Prj.Nmsc is\n                --  have no sources. However, header files from non-Ada\n                --  languages are OK, as there is nothing to compile.\n \n-               Src_Id := Proj_Data.First_Source;\n-               while Src_Id /= No_Source loop\n+               Iter := For_Each_Source (In_Tree, Proj);\n+               loop\n+                  Src_Id := Prj.Element (Iter);\n+                  exit when Src_Id = No_Source;\n+\n                   declare\n                      Src : Source_Data renames In_Tree.Sources.Table (Src_Id);\n                   begin\n                      exit when Src.Lang_Kind /= File_Based\n                        or else Src.Kind /= Spec;\n-                     Src_Id := Src.Next_In_Project;\n                   end;\n+                  Next (Iter);\n                end loop;\n \n                if Src_Id /= No_Source then\n@@ -4622,6 +4614,7 @@ package body Prj.Nmsc is\n       OK                  : Boolean := True;\n       Source              : Source_Id;\n       Next_Proj           : Project_Id;\n+      Iter                : Source_Iterator;\n \n    begin\n       if Get_Mode = Multi_Language then\n@@ -4815,21 +4808,22 @@ package body Prj.Nmsc is\n                      --  Multi_Language mode\n \n                      Next_Proj := Data.Extends;\n-                     Source := Data.First_Source;\n+\n+                     Iter := For_Each_Source (In_Tree, Project);\n \n                      loop\n-                        while Source /= No_Source and then\n-                              In_Tree.Sources.Table (Source).Unit /= Unit\n+                        while Prj.Element (Iter) /= No_Source and then\n+                           In_Tree.Sources.Table (Prj.Element (Iter)).Unit /=\n+                              Unit\n                         loop\n-                           Source :=\n-                             In_Tree.Sources.Table (Source).Next_In_Project;\n+                           Next (Iter);\n                         end loop;\n \n+                        Source := Prj.Element (Iter);\n                         exit when Source /= No_Source or else\n                                   Next_Proj = No_Project;\n \n-                        Source :=\n-                          In_Tree.Projects.Table (Next_Proj).First_Source;\n+                        Iter := For_Each_Source (In_Tree, Next_Proj);\n                         Next_Proj :=\n                           In_Tree.Projects.Table (Next_Proj).Extends;\n                      end loop;\n@@ -7289,10 +7283,14 @@ package body Prj.Nmsc is\n \n          declare\n             Source : Source_Id;\n+            Iter   : Source_Iterator;\n \n          begin\n-            Source := Data.First_Source;\n-            while Source /= No_Source loop\n+            Iter := For_Each_Source (In_Tree, Project);\n+            loop\n+               Source := Prj.Element (Iter);\n+               exit when Source = No_Source;\n+\n                declare\n                   Src_Data : Source_Data renames\n                                In_Tree.Sources.Table (Source);\n@@ -7310,11 +7308,11 @@ package body Prj.Nmsc is\n                            No_Location);\n                      end if;\n \n-                     Remove_Source (Source, No_Source, Project, Data, In_Tree);\n+                     Remove_Source (Source, No_Source, In_Tree);\n                   end if;\n-\n-                  Source := Src_Data.Next_In_Project;\n                end;\n+\n+               Next (Iter);\n             end loop;\n          end;\n \n@@ -7666,6 +7664,7 @@ package body Prj.Nmsc is\n       Display_Language_Name : Name_Id;\n       Lang_Kind             : Language_Kind;\n       Kind                  : Source_Kind := Spec;\n+      Iter                  : Source_Iterator;\n \n    begin\n       Name_Len := Display_Path'Length;\n@@ -7761,9 +7760,12 @@ package body Prj.Nmsc is\n          else\n             --  Check if the same file name or unit is used in the prj tree\n \n-            Source := In_Tree.First_Source;\n+            Iter := For_Each_Source (In_Tree);\n             Add_Src := True;\n-            while Source /= No_Source loop\n+            loop\n+               Source := Prj.Element (Iter);\n+               exit when Source = No_Source;\n+\n                declare\n                   Src_Data : Source_Data renames\n                                In_Tree.Sources.Table (Source);\n@@ -7850,17 +7852,15 @@ package body Prj.Nmsc is\n                      end if;\n                   end if;\n \n-                  Source := Src_Data.Next_In_Sources;\n                end;\n+               Next (Iter);\n             end loop;\n \n             if Add_Src then\n                Add_Source\n                  (Id                  => Source,\n-                  Data                => Data,\n                   In_Tree             => In_Tree,\n                   Project             => Project,\n-                  Lang                => Language_Name,\n                   Lang_Id             => Language,\n                   Lang_Kind           => Lang_Kind,\n                   Kind                => Kind,\n@@ -8013,18 +8013,21 @@ package body Prj.Nmsc is\n \n    procedure Load_Naming_Exceptions\n      (Project : Project_Id;\n-      In_Tree : Project_Tree_Ref;\n-      Data    : in out Project_Data)\n+      In_Tree : Project_Tree_Ref)\n    is\n       Source : Source_Id;\n       File   : File_Name_Type;\n       Unit   : Name_Id;\n+      Iter   : Source_Iterator;\n \n    begin\n       Unit_Exceptions.Reset;\n \n-      Source := Data.First_Source;\n-      while Source /= No_Source loop\n+      Iter := For_Each_Source (In_Tree, Project);\n+      loop\n+         Source := Prj.Element (Iter);\n+         exit when Source = No_Source;\n+\n          File := In_Tree.Sources.Table (Source).File;\n          Unit := In_Tree.Sources.Table (Source).Unit;\n \n@@ -8074,7 +8077,7 @@ package body Prj.Nmsc is\n             end;\n          end if;\n \n-         Source := In_Tree.Sources.Table (Source).Next_In_Project;\n+         Next (Iter);\n       end loop;\n    end Load_Naming_Exceptions;\n \n@@ -8088,6 +8091,8 @@ package body Prj.Nmsc is\n       Data        : in out Project_Data;\n       Current_Dir : String)\n    is\n+      Iter : Source_Iterator;\n+\n       procedure Process_Sources_In_Multi_Language_Mode;\n       --  Find all source files when in multi language mode\n \n@@ -8183,16 +8188,19 @@ package body Prj.Nmsc is\n                end loop For_Each_Unit;\n \n             when Multi_Language =>\n-               Source := In_Tree.First_Source;\n-               while Source /= No_Source loop\n+               Iter := For_Each_Source (In_Tree);\n+               loop\n+                  Source := Prj.Element (Iter);\n+                  exit when Source = No_Source;\n+\n                   if In_Tree.Sources.Table (Source).File = Excluded.File then\n                      Exclude\n                        (In_Tree.Sources.Table (Source).Project,\n                         No_Unit_Index, Specification);\n                      exit;\n                   end if;\n \n-                  Source := In_Tree.Sources.Table (Source).Next_In_Sources;\n+                  Next (Iter);\n                end loop;\n \n                OK := OK or Excluded.Found;\n@@ -8213,6 +8221,7 @@ package body Prj.Nmsc is\n       --------------------------------------------\n \n       procedure Process_Sources_In_Multi_Language_Mode is\n+         Iter : Source_Iterator;\n       begin\n          --  Check that two sources of this project do not have the same object\n          --  file name.\n@@ -8252,8 +8261,11 @@ package body Prj.Nmsc is\n \n          begin\n             Object_File_Names.Reset;\n-            Src_Id := In_Tree.First_Source;\n-            while Src_Id /= No_Source loop\n+            Iter := For_Each_Source (In_Tree);\n+            loop\n+               Src_Id := Prj.Element (Iter);\n+               exit when Src_Id = No_Source;\n+\n                declare\n                   Src_Data : Source_Data renames\n                                In_Tree.Sources.Table (Src_Id);\n@@ -8303,9 +8315,9 @@ package body Prj.Nmsc is\n                         end case;\n                      end if;\n                   end if;\n-\n-                  Src_Id := Src_Data.Next_In_Sources;\n                end;\n+\n+               Next (Iter);\n             end loop;\n          end Check_Object_File_Names;\n       end Process_Sources_In_Multi_Language_Mode;\n@@ -8321,7 +8333,7 @@ package body Prj.Nmsc is\n                   and then Data.Languages /= No_Language_Index)\n       then\n          if Get_Mode = Multi_Language then\n-            Load_Naming_Exceptions (Project, In_Tree, Data);\n+            Load_Naming_Exceptions (Project, In_Tree);\n          end if;\n \n          Find_Explicit_Sources (Current_Dir, Project, In_Tree, Data);\n@@ -8705,8 +8717,6 @@ package body Prj.Nmsc is\n    procedure Remove_Source\n      (Id          : Source_Id;\n       Replaced_By : Source_Id;\n-      Project     : Project_Id;\n-      Data        : in out Project_Data;\n       In_Tree     : Project_Tree_Ref)\n    is\n       Src_Data : constant Source_Data := In_Tree.Sources.Table (Id);\n@@ -8724,75 +8734,6 @@ package body Prj.Nmsc is\n            In_Tree.Sources.Table (Id).Declared_In_Interfaces;\n       end if;\n \n-      --  Remove the source from the global source list\n-\n-      Source := In_Tree.First_Source;\n-\n-      if Source = Id then\n-         In_Tree.First_Source := Src_Data.Next_In_Sources;\n-\n-      else\n-         while In_Tree.Sources.Table (Source).Next_In_Sources /= Id loop\n-            Source := In_Tree.Sources.Table (Source).Next_In_Sources;\n-         end loop;\n-\n-         In_Tree.Sources.Table (Source).Next_In_Sources :=\n-           Src_Data.Next_In_Sources;\n-      end if;\n-\n-      --  Remove the source from the project list\n-\n-      if Src_Data.Project = Project then\n-         Source := Data.First_Source;\n-\n-         if Source = Id then\n-            Data.First_Source := Src_Data.Next_In_Project;\n-\n-            if Src_Data.Next_In_Project = No_Source then\n-               Data.Last_Source := No_Source;\n-            end if;\n-\n-         else\n-            while In_Tree.Sources.Table (Source).Next_In_Project /= Id loop\n-               Source := In_Tree.Sources.Table (Source).Next_In_Project;\n-            end loop;\n-\n-            In_Tree.Sources.Table (Source).Next_In_Project :=\n-              Src_Data.Next_In_Project;\n-\n-            if Src_Data.Next_In_Project = No_Source then\n-               In_Tree.Projects.Table (Src_Data.Project).Last_Source := Source;\n-            end if;\n-         end if;\n-\n-      else\n-         Source := In_Tree.Projects.Table (Src_Data.Project).First_Source;\n-\n-         if Source = Id then\n-            In_Tree.Projects.Table (Src_Data.Project).First_Source :=\n-              Src_Data.Next_In_Project;\n-\n-            if Src_Data.Next_In_Project = No_Source then\n-               In_Tree.Projects.Table (Src_Data.Project).Last_Source :=\n-                 No_Source;\n-            end if;\n-\n-         else\n-            while In_Tree.Sources.Table (Source).Next_In_Project /= Id loop\n-               Source := In_Tree.Sources.Table (Source).Next_In_Project;\n-            end loop;\n-\n-            In_Tree.Sources.Table (Source).Next_In_Project :=\n-              Src_Data.Next_In_Project;\n-\n-            if Src_Data.Next_In_Project = No_Source then\n-               In_Tree.Projects.Table (Src_Data.Project).Last_Source := Source;\n-            end if;\n-         end if;\n-      end if;\n-\n-      --  Remove source from the language list\n-\n       Source := Src_Data.Language.First_Source;\n \n       if Source = Id then"}, {"sha": "4b26a61f418704de9aaee310d65a64c7030a34d7", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eed512d4d7c88dde24295ea65d1a617461bb64f/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eed512d4d7c88dde24295ea65d1a617461bb64f/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=5eed512d4d7c88dde24295ea65d1a617461bb64f", "patch": "@@ -291,12 +291,16 @@ package body Prj.Proc is\n          Source1 : Source_Id;\n          Name    : Name_Id;\n          Source2 : Source_Id;\n+         Iter    : Source_Iterator;\n \n       begin\n          Unit_Htable.Reset;\n \n-         Source1 := In_Tree.First_Source;\n-         while Source1 /= No_Source loop\n+         Iter := For_Each_Source (In_Tree);\n+         loop\n+            Source1 := Prj.Element (Iter);\n+            exit when Source1 = No_Source;\n+\n             Name := In_Tree.Sources.Table (Source1).Unit;\n \n             if Name /= No_Name then\n@@ -312,7 +316,7 @@ package body Prj.Proc is\n                end if;\n             end if;\n \n-            Source1 := In_Tree.Sources.Table (Source1).Next_In_Sources;\n+            Next (Iter);\n          end loop;\n       end;\n    end Check;"}, {"sha": "8f2491e071a908da3437964c8cdbde6290e4effd", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 101, "deletions": 2, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eed512d4d7c88dde24295ea65d1a617461bb64f/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eed512d4d7c88dde24295ea65d1a617461bb64f/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=5eed512d4d7c88dde24295ea65d1a617461bb64f", "patch": "@@ -108,8 +108,6 @@ package body Prj is\n                       Ada_Sources_Present            => True,\n                       Other_Sources_Present          => True,\n                       Ada_Sources                    => Nil_String,\n-                      First_Source                   => No_Source,\n-                      Last_Source                    => No_Source,\n                       Interfaces_Defined             => False,\n                       Imported_Directories_Switches  => null,\n                       Include_Path                   => null,\n@@ -157,6 +155,10 @@ package body Prj is\n    procedure Free_List (Languages : in out Language_Ptr);\n    --  Free memory allocated for the list of languages\n \n+   procedure Language_Changed (Iter : in out Source_Iterator);\n+   procedure Project_Changed (Iter : in out Source_Iterator);\n+   --  Called when a new project or language was selected for this iterator.\n+\n    -------------------\n    -- Add_To_Buffer --\n    -------------------\n@@ -388,6 +390,103 @@ package body Prj is\n \n    end Extend_Name;\n \n+   ---------------------\n+   -- Project_Changed --\n+   ---------------------\n+\n+   procedure Project_Changed (Iter : in out Source_Iterator) is\n+   begin\n+      Iter.Language := Iter.In_Tree.Projects.Table (Iter.Project).Languages;\n+      Language_Changed (Iter);\n+   end Project_Changed;\n+\n+   ----------------------\n+   -- Language_Changed --\n+   ----------------------\n+\n+   procedure Language_Changed (Iter : in out Source_Iterator) is\n+   begin\n+      Iter.Current  := No_Source;\n+      if Iter.Language_Name /= No_Name then\n+         while Iter.Language /= null\n+           and then Iter.Language.Name /= Iter.Language_Name\n+         loop\n+            Iter.Language := Iter.Language.Next;\n+         end loop;\n+      end if;\n+\n+      --  If there is no matching language in this project, move to next\n+\n+      if Iter.Language = No_Language_Index then\n+         if Iter.All_Projects then\n+            Iter.Project := Iter.Project + 1;\n+            if Iter.Project > Project_Table.Last (Iter.In_Tree.Projects) then\n+               Iter.Project := No_Project;\n+            else\n+               Project_Changed (Iter);\n+            end if;\n+         else\n+            Iter.Project := No_Project;\n+         end if;\n+      else\n+         Iter.Current := Iter.Language.First_Source;\n+         if Iter.Current = No_Source then\n+            Iter.Language := Iter.Language.Next;\n+            Language_Changed (Iter);\n+         end if;\n+      end if;\n+   end Language_Changed;\n+\n+   ---------------------\n+   -- For_Each_Source --\n+   ---------------------\n+\n+   function For_Each_Source\n+     (In_Tree  : Project_Tree_Ref;\n+      Project  : Project_Id := No_Project;\n+      Language : Name_Id := No_Name) return Source_Iterator\n+   is\n+      Iter : Source_Iterator;\n+   begin\n+      Iter := Source_Iterator'\n+        (In_Tree       => In_Tree,\n+         Project       => Project,\n+         All_Projects  => Project = No_Project,\n+         Language_Name => Language,\n+         Language      => No_Language_Index,\n+         Current       => No_Source);\n+\n+      if Iter.Project = No_Project then\n+         Iter.Project  := Project_Table.First;\n+      end if;\n+\n+      Project_Changed (Iter);\n+\n+      return Iter;\n+   end For_Each_Source;\n+\n+   -------------\n+   -- Element --\n+   -------------\n+\n+   function Element (Iter : Source_Iterator) return Source_Id is\n+   begin\n+      return Iter.Current;\n+   end Element;\n+\n+   ----------\n+   -- Next --\n+   ----------\n+\n+   procedure Next (Iter : in out Source_Iterator) is\n+   begin\n+      Iter.Current := Iter.In_Tree.Sources.Table (Iter.Current).Next_In_Lang;\n+      if Iter.Current = No_Source then\n+         Iter.Language := Iter.Language.Next;\n+         Language_Changed (Iter);\n+      end if;\n+   end Next;\n+\n    --------------------------------\n    -- For_Every_Project_Imported --\n    --------------------------------"}, {"sha": "4884b9bd1d6aa2acfb778a031ce44ba80fc184e0", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 34, "deletions": 20, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eed512d4d7c88dde24295ea65d1a617461bb64f/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eed512d4d7c88dde24295ea65d1a617461bb64f/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=5eed512d4d7c88dde24295ea65d1a617461bb64f", "patch": "@@ -734,14 +734,8 @@ package Prj is\n       Naming_Exception    : Boolean               := False;\n       --  True if the source has an exceptional name\n \n-      Next_In_Sources     : Source_Id             := No_Source;\n-      --  Link to another source in the project tree\n-\n-      Next_In_Project     : Source_Id             := No_Source;\n-      --  Link to another source in the project\n-\n       Next_In_Lang        : Source_Id             := No_Source;\n-      --  Link to another source of the same language\n+      --  Link to another source of the same language in the same project\n    end record;\n \n    No_Source_Data : constant Source_Data :=\n@@ -779,8 +773,6 @@ package Prj is\n                        Switches_Path          => No_Path,\n                        Switches_TS            => Empty_Time_Stamp,\n                        Naming_Exception       => False,\n-                       Next_In_Sources        => No_Source,\n-                       Next_In_Project        => No_Source,\n                        Next_In_Lang           => No_Source);\n \n    package Source_Data_Table is new GNAT.Dynamic_Tables\n@@ -1251,6 +1243,8 @@ package Prj is\n       -------------\n       -- Sources --\n       -------------\n+      --  In multi-language mode, the sources for all languages including Ada\n+      --  are accessible through the Source_Iterator type\n \n       Ada_Sources_Present : Boolean := True;\n       --  True if there are Ada sources in the project\n@@ -1259,11 +1253,7 @@ package Prj is\n       --  True if there are non-Ada sources in the project\n \n       Ada_Sources : String_List_Id := Nil_String;\n-      --  The list of all the Ada source file names (gnatmake only)\n-\n-      First_Source : Source_Id := No_Source;\n-      Last_Source  : Source_Id := No_Source;\n-      --  Head and tail of the list of sources\n+      --  The list of all the Ada source file names (gnatmake only).\n \n       Interfaces_Defined      : Boolean := False;\n       --  True if attribute Interfaces is declared for the project or any\n@@ -1437,15 +1427,23 @@ package Prj is\n    type Private_Project_Tree_Data is private;\n    --  Data for a project tree that is used only by the Project Manager\n \n-   type Project_Tree_Data is\n-      record\n-         --  sources of the project\n+   type Source_Iterator is private;\n+\n+   function For_Each_Source\n+     (In_Tree  : Project_Tree_Ref;\n+      Project  : Project_Id := No_Project;\n+      Language : Name_Id := No_Name) return Source_Iterator;\n+   --  Returns an iterator for all the sources of a project tree, or a specific\n+   --  project, or a specific language.\n \n-         First_Source : Source_Id := No_Source;\n-         --\n+   function Element (Iter : Source_Iterator) return Source_Id;\n+   --  Return the current source (or No_Source if there are no more sources)\n \n-         --  Tables\n+   procedure Next (Iter : in out Source_Iterator);\n+   --  Move on to the next source\n \n+   type Project_Tree_Data is\n+      record\n          Name_Lists        : Name_List_Table.Instance;\n          String_Elements   : String_Element_Table.Instance;\n          Variable_Elements : Variable_Element_Table.Instance;\n@@ -1572,6 +1570,22 @@ private\n    --  Empty File_Name_Type (no characters). Initialized in procedure\n    --  Initialize.\n \n+   type Source_Iterator is record\n+      In_Tree       : Project_Tree_Ref;\n+\n+      Project       : Project_Id;\n+      All_Projects  : Boolean;\n+      --  Current project and whether we should move on to the next\n+\n+      Language      : Language_Ptr;\n+      --  Current language processed\n+\n+      Language_Name : Name_Id;\n+      --  Only sources of this language will be returned (or all if No_Name)\n+\n+      Current       : Source_Id;\n+   end record;\n+\n    procedure Add_To_Buffer\n      (S    : String;\n       To   : in out String_Access;"}]}