{"sha": "42ded877b0b8ed0213bce5e01a70ecc443c8a5d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJkZWQ4NzdiMGI4ZWQwMjEzYmNlNWUwMWE3MGVjYzQ0M2M4YTVkMg==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-01-02T06:55:11Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-01-02T06:55:11Z"}, "message": "New tests for noreturn.\n\nFrom-SVN: r38611", "tree": {"sha": "4516ed8feafccf63ab839a6e50c08d5b6aee8aff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4516ed8feafccf63ab839a6e50c08d5b6aee8aff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42ded877b0b8ed0213bce5e01a70ecc443c8a5d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42ded877b0b8ed0213bce5e01a70ecc443c8a5d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42ded877b0b8ed0213bce5e01a70ecc443c8a5d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42ded877b0b8ed0213bce5e01a70ecc443c8a5d2/comments", "author": null, "committer": null, "parents": [{"sha": "5c25e11dca2662765e675cc94da7f7929518fb8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c25e11dca2662765e675cc94da7f7929518fb8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c25e11dca2662765e675cc94da7f7929518fb8a"}], "stats": {"total": 140, "additions": 83, "deletions": 57}, "files": [{"sha": "b339afaff891239e417762f824f95d8bb7a70af7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 63, "deletions": 57, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42ded877b0b8ed0213bce5e01a70ecc443c8a5d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42ded877b0b8ed0213bce5e01a70ecc443c8a5d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42ded877b0b8ed0213bce5e01a70ecc443c8a5d2", "patch": "@@ -1,3 +1,9 @@\n+2001-01-02  Andreas Jaeger  <aj@suse.de>\n+\n+\t* gcc.dg/noreturn-3.c: New test.\n+\n+\t* gcc.dg/noreturn-4.c: New test.\n+\n 2001-01-01  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.c-torture/execute/stdio-opt-1.c: Also test\n@@ -30,7 +36,7 @@\n \t* gcc.dg/noncompile/20001228-1.c: New test.\n \n \t* gcc.dg/20001228-1.c: New test.\n-\t\n+\n \t* gcc.c-torture/execute/20001228-1.c: New test.\n \n 2000-12-28  Joseph S. Myers  <jsm28@cam.ac.uk>\n@@ -169,8 +175,8 @@ Thu Dec 21 22:43:03 2000  J\"orn Rennecke <amylaar@redhat.com>\n \n         * gcc.dg/cpp/lineflags.c: New tests.\n         * gcc.dg/cpp/poison.c: Update.\n-        * gcc.dg/cpp/redef2.c: Update.   \n-        * gcc.dg/cpp/skipping.c: New test. \n+        * gcc.dg/cpp/redef2.c: Update.\n+        * gcc.dg/cpp/skipping.c: New test.\n \n 2000-12-07  Geoffrey Keating  <geoffk@redhat.com>\n \n@@ -844,7 +850,7 @@ Fri Nov  3 13:32:14 2000  Mark P Mitchell  <mark@codesourcery.com>\n 2000-10-28  Neil Booth  <neilb@earthling.net>\n \n \tNew tests and test updates for new macro expander.\n-\t\n+\n \t* gcc.dg/cpp/19960224-2.c, 20000625-2.c, cxxcom2.c, directiv.c,\n \tendif.c, if-4.c, if-5.c, if-mop.c, macsyntx.c, paste2.c, paste6.c,\n \tpaste8.c, redef2.c, strify2.c, strp1.c, tr-warn1.c, tr-warn3.c,\n@@ -895,7 +901,7 @@ Fri Nov  3 13:32:14 2000  Mark P Mitchell  <mark@codesourcery.com>\n 2000-10-26  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* g++.old-deja/g++.pt/memtemp77.C (main): Adjust comparaison\n-\toperands. \n+\toperands.\n \n 2000-10-25  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n@@ -1076,7 +1082,7 @@ Mon Oct  9 23:32:06 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n 2000-09-29  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* g++.old-deja/g++.ext/pretty3.C: Fix comparison with\n-\t__PRETTY_FUNCTION__.\t \n+\t__PRETTY_FUNCTION__.\n \t* g++.old-deja/g++.ext/pretty2.C: Likewise.\n \n 2000-09-28  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n@@ -1170,7 +1176,7 @@ Thu Sep 14 16:48:49 2000  Jeffrey A Law  (law@cygnus.com)\n 2000-09-12  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* g++.other/inline13.C: New test.\n- \n+\n 2000-09-12  Andreas Jaeger  <aj@suse.de>\n \n \t* gcc.c-torture/execute/widechar-2.c: New test for wchar_t\n@@ -1194,7 +1200,7 @@ Tue Sep 12 18:32:07 2000  J\"orn Rennecke <amylaar@redhat.co.uk>\n \t* gcc.c-torture/execute/20000910-2.c: Likewise.\n \n 2000-09-11  Robert Lipe  <robertl@sco.com>\n-\t\n+\n \t* gcc.dg/pragma-align.c: New test.\n \n 2000-09-11  Nathan Sidwell  <nathan@codesourcery.com>\n@@ -4194,7 +4200,7 @@ Sat Nov 21 21:41:05 1998  Jeffrey A Law  (law@cygnus.com)\n 1998-11-16  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n \t* g++.old-deja/g++.eh/throw2.C: New test.  CV-qualifiers are not\n- \tproperly discarded.\n+\tproperly discarded.\n \n Sun Oct 11 05:04:28 1998  Ken Raeburn  <raeburn@cygnus.com>\n \n@@ -4254,7 +4260,7 @@ Mon Oct 19 14:03:07 1998  Jeffrey A Law  (law@cygnus.com)\n Wed Oct 14 21:11:19 1998  Robert Lipe <robertl@dgii.com>\n \n \t* lib/objc-torture.exp (objc-torture-execute): Add -I so we can\n- \tfind objc headers.\n+\tfind objc headers.\n \n 1998-10-14  Andreas Schwab  <schwab@issan.cs.uni-dortmund.de>\n \n@@ -4268,16 +4274,16 @@ Wed Oct 14 21:11:19 1998  Robert Lipe <robertl@dgii.com>\n 1998-10-12  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n \t* g++.old-deja/g++.pt/explicit74.C: New test.  Explicit\n- \tinstantiation of template produces incorrect code for delete\n- \texpression.\n+\tinstantiation of template produces incorrect code for delete\n+\texpression.\n \n \t* g++.old-deja/g++.pt/instantiate5.C: New test.  `global\n \tconstructors' name is not unique.\n \t* g++.old-deja/g++.pt/instantiate5.cc: Ditto.\n \t* g++.old-deja/g++.pt/instantiate5-main.cc: Ditto.\n \n \t* g++.old-deja/g++.other/init8.C: New test.  Uninitialized\n- \tautomatic array of const is ill-formed.\n+\tautomatic array of const is ill-formed.\n \n \t* g++.old-deja/g++.pt/ttp53.C: New test.  Incorrect substitution\n \tof template parameter?\n@@ -4294,7 +4300,7 @@ Wed Oct 14 21:11:19 1998  Robert Lipe <robertl@dgii.com>\n 1998-10-11  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n \t* g++.old-deja/g++.ns/main1.C: New test.  main() should only be\n- \treserved in the global namespace.\n+\treserved in the global namespace.\n \n \t* g++.old-deja/g++.pt/instantiate4.C: New test: -frepo does not\n \tgenerate needed virtual table.\n@@ -4313,11 +4319,11 @@ Wed Oct 14 21:11:19 1998  Robert Lipe <robertl@dgii.com>\n \t* g++.old-deja/g++.brendan/parse6.C: XFAILs, not ERRORs.\n \n \t* g++.old-deja/g++.other/using5.C: New test; using decl from base\n- \tclass should be usable as argument of member function.\n+\tclass should be usable as argument of member function.\n \t* g++.old-deja/g++.other/using6.C: New test; using decl from base\n- \tclass should be usable as return type of member function.\n+\tclass should be usable as return type of member function.\n \t* g++.old-deja/g++.other/using7.C: New test; using decl from base\n- \tclass should be usable as type of data member.\n+\tclass should be usable as type of data member.\n \n \t* g++.old-deja/g++.ns/extern1.C: Fix XFAIL mark.\n \n@@ -4336,14 +4342,14 @@ Thu Oct  8 19:14:05 1998  Nick Clifton  <nickc@cygnus.com>\n \tmatching of template brackets.\n \n \t* g++.old-deja/g++.other/using4.C: New test.  Test using\n- \tdeclarations of methods from base classes.\n+\tdeclarations of methods from base classes.\n \n \t* g++.old-deja/g++.ns/extern1.C: New test.  Extern declarations\n- \twithin functions should introduce names into the innermost\n- \tenclosing namespace.\n+\twithin functions should introduce names into the innermost\n+\tenclosing namespace.\n \n \t* g++.old-deja/g++.other/init7.C: New test.  Retry initialization\n- \tof static locals if first initialization throws.\n+\tof static locals if first initialization throws.\n \n Wed Oct  7 12:00:20 1998  Jim Wilson  <wilson@cygnus.com>\n \n@@ -4358,8 +4364,8 @@ Wed Oct  7 12:00:20 1998  Jim Wilson  <wilson@cygnus.com>\n 1998-10-06  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n \t* g++.old-deja/g++.pt/friend35.C: New test.  A template function\n- \tmust be declared before its specializations can be named in friend\n- \tdeclarations.\n+\tmust be declared before its specializations can be named in friend\n+\tdeclarations.\n \n 1998-10-05  Dave Love  <d.love@dl.ac.uk>\n \n@@ -4370,8 +4376,8 @@ Wed Oct  7 12:00:20 1998  Jim Wilson  <wilson@cygnus.com>\n 1998-10-04  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n \t* g++.old-deja/g++.pt/overload5.C: New test; initialize variable\n- \twith pointer to template function, for which no argument deduction\n- \tis possible.\n+\twith pointer to template function, for which no argument deduction\n+\tis possible.\n \n \t* g++.old-deja/g++.pt/overload4.C: New test; passing pointer to\n \tspecialization of template function as argument to template\n@@ -4387,7 +4393,7 @@ Wed Oct  7 12:00:20 1998  Jim Wilson  <wilson@cygnus.com>\n \tnested class of the same name.\n \n \t* g++.old-deja/g++.other/badopt1.C: New test; post-increment\n- \tis ignored.\n+\tis ignored.\n \n \t* g++.old-deja/g++.other/decl1.C: New test; incorrect parsing of\n \tobject with direct initializer as function declaration.\n@@ -4396,10 +4402,10 @@ Wed Oct  7 12:00:20 1998  Jim Wilson  <wilson@cygnus.com>\n \tinitializers.\n \n \t* g++.old-deja/g++.other/null2.C: New test; conditional operator\n- \tinvolving const pointer and NULL produces incorrect result.\n+\tinvolving const pointer and NULL produces incorrect result.\n \n \t* g++.old-deja/g++.other/typename1.C: New test; template-dependent\n- \ttype name without `typename' should be rejected with -pedantic.\n+\ttype name without `typename' should be rejected with -pedantic.\n \n Fri Oct  2 21:55:58 1998  Richard Henderson  <rth@cygnus.com>\n \n@@ -4441,8 +4447,8 @@ Thu Oct  1 19:05:20 1998  Jeffrey A Law  (law@cygnus.com)\n 1998-09-18  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n \t* g++.old-deja/g++.other/nested2.C: Different virtual base classes\n- \tthat happen to have the same base name, but in different scopes,\n- \tare incorrectly rejected.\n+\tthat happen to have the same base name, but in different scopes,\n+\tare incorrectly rejected.\n \n 1998-09-16  Richard Henderson  <rth@cygnus.com>\n \n@@ -4452,27 +4458,27 @@ Thu Oct  1 19:05:20 1998  Jeffrey A Law  (law@cygnus.com)\n 1998-09-15  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n \t* g++.old-deja/g++.other/static2.C: Invocation of static data\n- \tmember of type pointer-to-function denoted as non-static member.\n+\tmember of type pointer-to-function denoted as non-static member.\n \n \t* g++.old-deja/g++.other/typedef5.C: Add some more tests involving\n \tchecks involving function types and aliases.\n \n 1998-09-12  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n \t* g++.old-deja/g++.other/typedef5.C: Check whether typedefs can be\n- \tredefined to the same non-trivial type.\n+\tredefined to the same non-trivial type.\n \n \t* g++.old-deja/g++.pt/explicit73.C: Test for proper\n- \tnamespace-qualification of template specializations declared in\n- \tother namespaces.\n+\tnamespace-qualification of template specializations declared in\n+\tother namespaces.\n \n \t* g++.old-deja/g++.other/friend4.C: Check whether it is possible\n \tto declare a subset of the specializations of a template function\n \tas friends of specializations of a template class.\n \n \t* g++.old-deja/g++.pt/explicit71.C: Make sure specializations of\n- \tmember templates that do not fully specialize the enclosing\n- \ttemplate class are rejected.\n+\tmember templates that do not fully specialize the enclosing\n+\ttemplate class are rejected.\n \n 1998-09-11  Dave Love  <d.love@dl.ac.uk>\n \n@@ -5011,8 +5017,8 @@ Fri Sep 26 10:50:53 1997  Bob Manson  <manson@charmed.cygnus.com>\n Fri Sep 19 17:19:53 1997  Bob Manson  <manson@charmed.cygnus.com>\n \n \t* lib/c-torture.exp (TORTURE_OPTIONS): Removed unnecessary\n- \tchanges.  Only test one -g option, and move it to the end of the\n- \tlist of options to test.\n+\tchanges.  Only test one -g option, and move it to the end of the\n+\tlist of options to test.\n \n Fri Sep 19 17:58:00 1997  Michael Meissner  <meissner@cygnus.com>\n \n@@ -5061,10 +5067,10 @@ Wed Sep  3 17:29:35 1997  Bob Manson  <manson@charmed.cygnus.com>\n Wed Sep  3 17:15:00 1997  Bob Manson  <manson@charmed.cygnus.com>\n \n \t* lib/c-torture.exp(c-torture-execute): If the previous and the\n- \tcurrent executables being tested are identical, we don't need to\n- \trun the executable again. Try to make the executable names\n- \tunique. Add an optional argument for passing additional compiler\n- \tflags.\n+\tcurrent executables being tested are identical, we don't need to\n+\trun the executable again. Try to make the executable names\n+\tunique. Add an optional argument for passing additional compiler\n+\tflags.\n \n Tue Sep  2 16:34:31 1997  Doug Evans  <dje@canuck.cygnus.com>\n \n@@ -5163,7 +5169,7 @@ Thu May  1 14:49:19 1997  Bob Manson  <manson@charmed.cygnus.com>\n Thu Apr 10 14:50:26 1997  Bob Manson  <manson@charmed.cygnus.com>\n \n \t* lib/g++.exp(g++init): Don't try to be smart, always run g++_init\n- \tto completion when it's called.\n+\tto completion when it's called.\n \n Fri Mar 21 16:34:52 1997  Michael Meissner  <meissner@cygnus.com>\n \n@@ -5212,7 +5218,7 @@ Wed Mar 12 10:01:33 1997  Jeffrey A Law  (law@cygnus.com)\n Sun Feb 23 18:12:04 1997  Bob Manson  <manson@charmed.cygnus.com>\n \n \t* lib/gcc.exp(gcc_init): Add args parameter (which will contain\n- \tthe name of the expect testcase file).\n+\tthe name of the expect testcase file).\n \n \t* lib/g++.exp(g++_init): Ditto.\n \n@@ -5270,7 +5276,7 @@ Sat Feb  8 14:45:55 1997  Bob Manson  <manson@charmed.cygnus.com>\n Fri Feb  7 12:55:45 1997  Bob Manson  <manson@charmed.cygnus.com>\n \n \t* lib/old-dejagnu.exp: Use prune_warnings instead of\n- \tprune_system_crud.\n+\tprune_system_crud.\n \t* lib/mike-g++.exp: Ditto.\n \t* lib/gcc.exp: Ditto.\n \t* lib/g++.exp: Ditto.\n@@ -5306,7 +5312,7 @@ Sun Feb  2 14:42:34 1997  Bob Manson  <manson@charmed.cygnus.com>\n \tcall to glob.\n \n \t* gcc.c-torture/special/special.exp: Change call to\n- \tgcc_target_compile to include the object file.\n+\tgcc_target_compile to include the object file.\n \n Sun Feb  2 17:11:50 1997  Ian Lance Taylor  <ian@cygnus.com>\n \n@@ -5316,7 +5322,7 @@ Sun Feb  2 17:11:50 1997  Ian Lance Taylor  <ian@cygnus.com>\n Sat Feb  1 12:34:23 1997  Bob Manson  <manson@charmed.cygnus.com>\n \n \t* lib/plumhall.exp(ph_summary): Log the entire output of the\n- \texecutable. Return -1 if there were any failures, 0 otherwise.\n+\texecutable. Return -1 if there were any failures, 0 otherwise.\n \t(ph_execute): Return -1 if there were any failures, 0 otherwise.\n \t(ph_make): Clean up objects and executables that were built\n \tif the tests succeeded.\n@@ -5424,18 +5430,18 @@ Sun Jun 30 14:37:50 1996  Doug Evans  <dje@canuck.cygnus.com>\n Wed Jun 26 14:15:55 1996  Bob Manson  <manson@charmed.cygnus.com>\n \n \t* lib/old-dejagnu.exp (old-dejagnu): Add $tmpdir to specify a\n- \ttemporary directory for compiler files, and set it to a default\n- \tvalue of /tmp. Set $output as the name of the output file from\n- \tcompiling the testcase. Add a -o option to $cflags_var so the\n- \tcompiler writes the final output file as $output. Set $executable\n- \tto $output.\n+\ttemporary directory for compiler files, and set it to a default\n+\tvalue of /tmp. Set $output as the name of the output file from\n+\tcompiling the testcase. Add a -o option to $cflags_var so the\n+\tcompiler writes the final output file as $output. Set $executable\n+\tto $output.\n \n \t* lib/mike-g++.exp (postbase): Add $tmpdir to specify a temporary\n- \tdirectory for compiler files, and set it to /tmp if it doesn't\n- \talready have a value. Set $output_file to the name of the output\n- \tfile from compiling the testcase. Add a -o option to CXXFLAGS so\n- \tthe compiler writes the final output file as $output. Use $output\n- \tas the executable to be tested.\n+\tdirectory for compiler files, and set it to /tmp if it doesn't\n+\talready have a value. Set $output_file to the name of the output\n+\tfile from compiling the testcase. Add a -o option to CXXFLAGS so\n+\tthe compiler writes the final output file as $output. Use $output\n+\tas the executable to be tested.\n \n Mon Jun 24 17:12:16 1996  Brendan Kehoe  <brendan@lisa.cygnus.com>\n "}, {"sha": "3e727d25f4a41ef39f3b067d26e1a7ce118e62f9", "filename": "gcc/testsuite/gcc.dg/noreturn-3.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42ded877b0b8ed0213bce5e01a70ecc443c8a5d2/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42ded877b0b8ed0213bce5e01a70ecc443c8a5d2/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-3.c?ref=42ded877b0b8ed0213bce5e01a70ecc443c8a5d2", "patch": "@@ -0,0 +1,10 @@\n+/* Check for no \"noreturn\" warning in main. */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wmissing-noreturn -fhosted\" } */\n+extern void exit (int) __attribute__ ((__noreturn__));\n+\n+int\n+main (void)\n+{\n+  exit (0);\n+}"}, {"sha": "4a2de5f42008ae635c6dd34b368e77e5a8dd84cc", "filename": "gcc/testsuite/gcc.dg/noreturn-4.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42ded877b0b8ed0213bce5e01a70ecc443c8a5d2/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42ded877b0b8ed0213bce5e01a70ecc443c8a5d2/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-4.c?ref=42ded877b0b8ed0213bce5e01a70ecc443c8a5d2", "patch": "@@ -0,0 +1,10 @@\n+/* Check for \"noreturn\" warning in main. */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wmissing-noreturn -ffreestanding\" } */\n+extern void exit (int) __attribute__ ((__noreturn__));\n+\n+int\n+main (void)\n+{\n+  exit (0);\n+} /* { dg-warning \"warning: function might be possible candidate for attribute `noreturn'\" \"warn for main\" } */"}]}