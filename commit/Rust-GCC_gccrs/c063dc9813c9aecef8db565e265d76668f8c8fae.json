{"sha": "c063dc9813c9aecef8db565e265d76668f8c8fae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA2M2RjOTgxM2M5YWVjZWY4ZGI1NjVlMjY1ZDc2NjY4ZjhjOGZhZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1999-09-15T21:41:16Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-09-15T21:41:16Z"}, "message": "gbl-ctors.h: Lose HAVE_ATEXIT.\n\n\t* gbl-ctors.h: Lose HAVE_ATEXIT.  Don't define ON_EXIT.\n\t* libgcc2.c: Lose obsolete defn of WEAK_ALIAS.\n\t(__bb_init_func, __bb_init_prg): Use atexit instead of ON_EXIT.\n\t(__do_global_dtors): Likewise.  Don't mess with _exit_dummy_decl.\n\t(atexit, exit): Simplify.\n\t* tm.texi: Document NEED_ATEXIT and ON_EXIT.  Remove HAVE_ATEXIT.\n\t* config/lots: Remove defns of HAVE_ATEXIT.\n\nFrom-SVN: r29439", "tree": {"sha": "43a34e737f568cf4befde4eaa3fc41de57b903c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43a34e737f568cf4befde4eaa3fc41de57b903c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c063dc9813c9aecef8db565e265d76668f8c8fae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c063dc9813c9aecef8db565e265d76668f8c8fae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c063dc9813c9aecef8db565e265d76668f8c8fae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c063dc9813c9aecef8db565e265d76668f8c8fae/comments", "author": null, "committer": null, "parents": [{"sha": "19832c7774e145cd1e545d1fb322d9397ffa17bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19832c7774e145cd1e545d1fb322d9397ffa17bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19832c7774e145cd1e545d1fb322d9397ffa17bc"}], "stats": {"total": 477, "additions": 122, "deletions": 355}, "files": [{"sha": "b92675be7063288d16628a261df6a19a963035fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,3 +1,13 @@\n+Wed Sep 15 14:39:35 1999  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* gbl-ctors.h: Lose HAVE_ATEXIT.  Don't define ON_EXIT.\n+\t* libgcc2.c: Lose obsolete defn of WEAK_ALIAS.\n+\t(__bb_init_func, __bb_init_prg): Use atexit instead of ON_EXIT.\n+\t(__do_global_dtors): Likewise.  Don't mess with _exit_dummy_decl.\n+\t(atexit, exit): Simplify.\n+\t* tm.texi: Document NEED_ATEXIT and ON_EXIT.  Remove HAVE_ATEXIT.\n+\t* config/lots: Remove defns of HAVE_ATEXIT.\n+\n Wed Sep 15 10:25:12 1999  Mark Mitchell  <mark@codesourcery.com>\n \n \t* calls.c (precompute_arguments): Fix typo in comment."}, {"sha": "98eb40e3c5ae6c37c5f75091c43c3ec6869c9960", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1752,10 +1752,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n    few bits. */\n #define SHIFT_COUNT_TRUNCATED 1\n \n-/* Use atexit for static constructors/destructors, instead of defining\n-   our own exit function.  */\n-#define HAVE_ATEXIT\n-\n /* The EV4 is dual issue; EV5/EV6 are quad issue.  */\n #define ISSUE_RATE  (alpha_cpu == PROCESSOR_EV4 ? 2 : 4)\n "}, {"sha": "afdaa15f59b2a8c89f34d618243ab40373f18f19", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1609,12 +1609,6 @@ extern void arc_set_default_type_attributes ();\n #define SET_DEFAULT_TYPE_ATTRIBUTES(TYPE) \\\n arc_set_default_type_attributes (TYPE)\n \n-/* Define this if the target system supports the function\n-   atexit from the ANSI C standard.  If this is not defined,\n-   and INIT_SECTION_ASM_OP is not defined, a default\n-   exit function will be provided to support C++.  */\n-#define HAVE_ATEXIT\n-\n /* alloca should avoid clobbering the old register save area.  */\n /* ??? Not defined in tm.texi.  */\n #define SETJMP_VIA_SAVE_AREA"}, {"sha": "8d8f5605b65540b43e2d50905391602f1d03da6a", "filename": "gcc/config/arm/coff.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcoff.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for ARM with COFF obj format.\n-   Copyright (C) 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997, 1998, 1999 Free Software Foundation, Inc.\n    Contributed by Doug Evans (dje@cygnus.com).\n    \n This file is part of GNU CC.\n@@ -208,14 +208,6 @@ dtors_section ()\t\t\t\t\t\t\t\\\n #undef DO_GLOBAL_CTORS_BODY\n #undef DO_GLOBAL_DTORS_BODY\n \n-/* If you don't define HAVE_ATEXIT, and the object file format/OS/whatever \n-   does not support constructors/destructors, then gcc implements destructors\n-   by defining its own exit function, which calls the destructors.  This gcc\n-   exit function overrides the C library's exit function, and this can cause\n-   all kinds of havoc if the C library has a non-trivial exit function.  You\n-   really don't want to use the exit function in libgcc2.c.  */\n-#define HAVE_ATEXIT\n-\n /* The ARM development system defines __main.  */\n #define NAME__MAIN  \"__gccmain\"\n #define SYMBOL__MAIN __gccmain"}, {"sha": "39054902ba34c5fe0bf61702e351f294cda9800a", "filename": "gcc/config/arm/linux-elf.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Flinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Flinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-elf.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -25,9 +25,6 @@ Boston, MA 02111-1307, USA.  */\n /* Do not assume anything about header files.  */\n #define NO_IMPLICIT_EXTERN_C\n \n-/* We have libgcc2.  */\n-#define HAVE_ATEXIT\n-\n #ifndef SUBTARGET_DEFAULT_APCS26\n /* Default is to use APCS-32 mode.  */\n # define TARGET_DEFAULT (ARM_FLAG_APCS_32 | ARM_FLAG_SHORT_BYTE)"}, {"sha": "8be385295c321c6b22c08cf8c4786d657973b519", "filename": "gcc/config/arm/linux-telf.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Flinux-telf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Flinux-telf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-telf.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -19,9 +19,6 @@ along with this program; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* We have libgcc2.  */\n-#define HAVE_ATEXIT\n-\n #define SUBTARGET_EXTRA_ASM_SPEC\t\\\n \t\" %{fPIC:-k} %{fpic:-k}\"\n "}, {"sha": "37bd1fe313cc1a851aee058dbc847999b75ce8d5", "filename": "gcc/config/arm/riscix.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Friscix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Friscix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Friscix.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  ARM RISCiX version.\n-   Copyright (C) 1993, 1994, 1995, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 1995, 1997, 1999 Free Software Foundation, Inc.\n    Contributed by Richard Earnshaw (rwe11@cl.cam.ac.uk), based on original\n \t      work by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n    \t      and Martin Simmons (@harleqn.co.uk).\n@@ -95,12 +95,6 @@ Boston, MA 02111-1307, USA.  */\n /* Unsigned chars produces much better code than signed.  */\n #define DEFAULT_SIGNED_CHAR  0\n \n-/* Define this if the target system supports the function atexit from the\n-   ANSI C standard.  If this is not defined, and INIT_SECTION_ASM_OP is not\n-   defined, a default exit function will be provided to support C++.  \n-   The man page only describes on_exit, but atexit is also there.  */\n-#define HAVE_ATEXIT 1\n-\n /* Some systems use __main in a way incompatible with its use in gcc, in these\n    cases use the macros NAME__MAIN to give a quoted symbol and SYMBOL__MAIN to\n    give the same symbol without quotes for an alternative entry point.  You"}, {"sha": "568df54e828eb4018ddec4af072ac4728d3abe39", "filename": "gcc/config/arm/riscix1-1.h", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Friscix1-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Friscix1-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Friscix1-1.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  ARM RISCiX 1.1x version.\n-   Copyright (C) 1993, 1995, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1997, 1999 Free Software Foundation, Inc.\n    Contributed by Richard Earnshaw (rwe11@cl.cam.ac.uk), based on original\n \t      work by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n    \t      and Martin Simmons (@harleqn.co.uk).\n@@ -62,12 +62,15 @@ Boston, MA 02111-1307, USA.  */\n #define DEFAULT_SIGNED_CHAR  1\n #endif\n \n-/* Define this if the target system supports the function atexit form the\n-   ANSI C standard.  If this is not defined, and INIT_SECTION_ASM_OP is not\n+/* Define this if the target system lacks the function atexit from the\n+   ANSI C standard.  If this is defined, and ON_EXIT is not\n    defined, a default exit function will be provided to support C++.  \n    The man page only describes on_exit, but atexit is also there.  \n-   This seems to be missing in early versions. */\n-/*#define HAVE_ATEXIT 1 */\n+   This seems to be missing in early versions.\n+\n+   FIXME Should we define ON_EXIT here?  */\n+#define NEED_ATEXIT\n+\n /* Some systems use __main in a way incompatible with its use in gcc, in these\n    cases use the macros NAME__MAIN to give a quoted symbol and SYMBOL__MAIN to\n    give the same symbol without quotes for an alternative entry point.  You"}, {"sha": "5f14c1e32830b8a9ec83b1a6a6ae7182d57102f5", "filename": "gcc/config/arm/tcoff.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Ftcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Ftcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ftcoff.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for Thumb with COFF obj format.\n-   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1999 Free Software Foundation, Inc.\n    Derived from arm/coff.h originally by Doug Evans (dje@cygnus.com).\n    \n This file is part of GNU CC.\n@@ -183,10 +183,6 @@ do {\t\t\t\t\t\t\\\n #undef DO_GLOBAL_CTORS_BODY\n #undef DO_GLOBAL_DTORS_BODY\n \n-/* The ARM development system has atexit and doesn't have _exit,\n-   so define this for now.  */\n-#define HAVE_ATEXIT\n-\n /* The ARM development system defines __main.  */\n #define NAME__MAIN \"__gccmain\"\n #define SYMBOL__MAIN __gccmain"}, {"sha": "1f7bbb7c3b68909eed265b2305878377fa52f20d", "filename": "gcc/config/arm/telf.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Ftelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Ftelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ftelf.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -299,10 +299,6 @@ dtors_section ()\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\\\n   while (0)\n \n-/* The ARM development system has atexit and doesn't have _exit,\n-   so define this for now.  */\n-#define HAVE_ATEXIT\n-\n /* The ARM development system defines __main.  */\n #define NAME__MAIN \"__gccmain\"\n #define SYMBOL__MAIN __gccmain"}, {"sha": "9c30a30d639e1540205eab49a98d05fd7145d783", "filename": "gcc/config/arm/thumb.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Fthumb.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Fthumb.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for ARM/Thumb.\n-   Copyright (C) 1996, 1997, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999 Free Software Foundation, Inc.\n    The basis of this contribution was generated by\n    \t\tRichard Earnshaw, Advanced RISC Machines Ltd\n \n@@ -1277,8 +1277,6 @@ extern int making_const_table;\n \n #define NO_DOLLAR_IN_LABEL 1\n \n-#define HAVE_ATEXIT\n-\n /* The literal pool needs to reside in the text area due to the\n    limited PC addressing range: */\n #define MACHINE_DEPENDENT_REORG(INSN) thumb_reorg ((INSN))"}, {"sha": "4432105568b50c807c59fb312e9cd409ec687cc6", "filename": "gcc/config/arm/tpe.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Ftpe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Ftpe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ftpe.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -214,10 +214,6 @@ do {\t\t\t\t\t\t\\\n #undef DO_GLOBAL_CTORS_BODY\n #undef DO_GLOBAL_DTORS_BODY\n \n-/* The ARM development system has atexit and doesn't have _exit,\n-   so define this for now.  */\n-#define HAVE_ATEXIT\n-\n /* The ARM development system defines __main.  */\n #define NAME__MAIN \"__gccmain\"\n #define SYMBOL__MAIN __gccmain"}, {"sha": "9e3389050a94fc3ef31209b7c9f8fc121c932f0d", "filename": "gcc/config/arm/unknown-elf.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Funknown-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Farm%2Funknown-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funknown-elf.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for non-Linux based ARM systems using ELF\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n    Contributed by Catherine Moore <clm@cygnus.com>\n \n This file is part of GNU CC.\n@@ -24,14 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #define TARGET_VERSION\tfputs (\" (ARM/ELF non-Linux)\", stderr);\n #endif\n \n-/* If you don't define HAVE_ATEXIT, and the object file format/OS/whatever \n-   does not support constructors/destructors, then gcc implements destructors\n-   by defining its own exit function, which calls the destructors.  This gcc\n-   exit function overrides the C library's exit function, and this can cause\n-   all kinds of havoc if the C library has a non-trivial exit function.  You\n-   really don't want to use the exit function in libgcc2.c.  */\n-#define HAVE_ATEXIT\n-\n /* Default to using APCS-32 and software floating point.  */\n #ifndef TARGET_DEFAULT\n #define TARGET_DEFAULT\t(ARM_FLAG_SOFT_FLOAT | ARM_FLAG_APCS_32)"}, {"sha": "81a5f1d99ffdbfda4330b3eb9df06914ebf5837e", "filename": "gcc/config/c4x/c4x.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fc4x%2Fc4x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fc4x%2Fc4x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -8,7 +8,7 @@\n \n    GNU CC is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 1, or (at your option)\n+   the Free Software Foundation; either version 2, or (at your option)\n    any later version.\n \n    GNU CC is distributed in the hope that it will be useful,\n@@ -1894,9 +1894,6 @@ do {\t\t\t\t\t\t\t\t\\\n     (*--p) ();\t\t\t\t\t\t\t\\\n } while (0)\n \n-/* The TI tooling uses atexit.  */\n-#define\tHAVE_ATEXIT\n-\n #undef EXTRA_SECTIONS\n #define EXTRA_SECTIONS in_const, in_init, in_fini, in_ctors, in_dtors\n "}, {"sha": "43aeadb7e2189e5552eb7c8dc8f34d3ca6897b57", "filename": "gcc/config/clipper/clix.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fclipper%2Fclix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fclipper%2Fclix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fclipper%2Fclix.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Clipper/Clix version.\n-   Copyright (C) 1988, 1993, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1993, 1996, 1997, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -33,9 +33,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define TARGET_MEM_FUNCTIONS\n \n-#undef HAVE_ATEXIT\n-#define HAVE_ATEXIT\n-\n #define ASM_OUTPUT_ASCII(FILE,PTR,LEN)\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n   unsigned char *s;\t\t\t\t\t\\"}, {"sha": "a23805e8a848674afacec39717c09b4bc554ce0c", "filename": "gcc/config/elfos.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Felfos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Felfos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felfos.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -20,9 +20,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* For the sake of libgcc2.c, indicate target supports atexit.  */\n-#define HAVE_ATEXIT\n-\n #undef  ENDFILE_SPEC\n #define ENDFILE_SPEC \"crtend.o%s\"\n "}, {"sha": "1f4b93ac0367cadd222eaf890b2a27db56dd7c5a", "filename": "gcc/config/gnu.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgnu.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -12,10 +12,6 @@\n #undef STANDARD_INCLUDE_DIR\n #define STANDARD_INCLUDE_DIR \"/include\"\n \n-\n-/* We have atexit.  */\n-#define HAVE_ATEXIT\n-\n /* Implicit library calls should use memcpy, not bcopy, etc.  */\n #define TARGET_MEM_FUNCTIONS\n "}, {"sha": "c4e350da37ac0057c1b10e8269a8b05858565831", "filename": "gcc/config/i386/386bsd.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2F386bsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2F386bsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2F386bsd.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -28,10 +28,6 @@\n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 16\n \n-/* 386BSD does have atexit.  */\n-\n-#define HAVE_ATEXIT\n-\n /* Redefine this to use %eax instead of %edx.  */\n #undef FUNCTION_PROFILER\n #define FUNCTION_PROFILER(FILE, LABELNO)  \\"}, {"sha": "20dc576524d140e632a4a7d0c8dc606b6932bbb0", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -127,8 +127,6 @@ Boston, MA 02111-1307, USA. */\n #define WCHAR_TYPE_SIZE 16\n #define WCHAR_TYPE \"short unsigned int\"\n \n-#define HAVE_ATEXIT 1\n-\n \f\n /* Enable parsing of #pragma pack(push,<n>) and #pragma pack(pop).  */\n #define HANDLE_PRAGMA_PACK_PUSH_POP 1"}, {"sha": "38d8e22d5bf474bc765e43b135275276024d789a", "filename": "gcc/config/i386/djgpp.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdjgpp.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -167,10 +167,6 @@ dtor_section ()\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n   asm_output_aligned_bss ((FILE), (DECL), (NAME), (SIZE), (ALIGN))\n \n-/* djgpp has atexit ().  */\n-#undef HAVE_ATEXIT\n-#define HAVE_ATEXIT\n-\n /* djgpp automatically calls its own version of __main, so don't define one\n    in libgcc, nor call one in main().  */\n #define HAS_INIT_SECTION"}, {"sha": "40ca25e0f94d88dcc992a57aae4a238b27366031", "filename": "gcc/config/i386/freebsd.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -57,8 +57,6 @@ Boston, MA 02111-1307, USA.  */\n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE BITS_PER_WORD\n \n-#define HAVE_ATEXIT\n-\n /* Override the default comment-starter of \"/\".  */\n \n #undef ASM_COMMENT_START"}, {"sha": "30017be1a503213abdc525486c551138d2affac3", "filename": "gcc/config/i386/i386-interix.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-interix.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -57,9 +57,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define ASM_LOAD_ADDR(loc, reg)   \"     leal \" #loc \",\" #reg \"\\n\"\n \n-/* For the sake of libgcc2.c, indicate target supports atexit.  */\n-#define HAVE_ATEXIT\n-\n /* cpp handles __STDC__ */\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \" \\"}, {"sha": "d208d297f966eb053bb2f1338f3c49658f22dee1", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Intel 386 running Linux-based GNU systems with ELF format.\n-   Copyright (C) 1994, 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999 Free Software Foundation, Inc.\n    Contributed by Eric Youngdale.\n    Modified for stabs-in-ELF by H.J. Lu.\n "}, {"sha": "fbe8d31007fd8ddcc5b51f1b8a77cd800b9d18af", "filename": "gcc/config/i386/osfrose.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosfrose.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -850,10 +850,6 @@ while (0)\n #define REAL_NM_FILE_NAME\t\"/usr/ccs/gcc/bfd-nm\"\n #define REAL_STRIP_FILE_NAME\t\"/usr/ccs/bin/strip\"\n \n-/* Use atexit for static constructors/destructors, instead of defining\n-   our own exit function.  */\n-#define HAVE_ATEXIT\n-\n /* Define this macro meaning that gcc should find the library 'libgcc.a'\n    by hand, rather than passing the argument '-lgcc' to tell the linker\n    to do the search */"}, {"sha": "dae2de365448000cf7b858ae627cc577ec77dcc8", "filename": "gcc/config/i386/sco.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fsco.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fsco.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -71,10 +71,6 @@ Boston, MA 02111-1307, USA.  */\n  \"%{!fsigned-char:-D__CHAR_UNSIGNED__ -D_CHAR_UNSIGNED}\"\n #endif\n \n-/* Use atexit for static destructors, instead of defining\n-   our own exit function.  */\n-#define HAVE_ATEXIT\n-\n /* Specify the size_t type.  */\n #define SIZE_TYPE \"unsigned int\"\n "}, {"sha": "9bd348e797e507e363df4d2295da2f4787e5ef36", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -940,7 +940,6 @@ compiler at the end of the day. Onward we go ...\n \n #if defined(CRT_BEGIN) || defined(CRT_END) || defined(IN_LIBGCC2)\n # undef OBJECT_FORMAT_ELF\n-# undef HAVE_ATEXIT\n # undef INIT_SECTION_ASM_OP\n # undef FINI_SECTION_ASM_OP\n # undef CTORS_SECTION_ASM_OP\n@@ -952,7 +951,6 @@ compiler at the end of the day. Onward we go ...\n \n # if defined (_SCO_ELF)\n #  define OBJECT_FORMAT_ELF\n-#  define HAVE_ATEXIT 1\n #  define INIT_SECTION_ASM_OP INIT_SECTION_ASM_OP_ELF\n #  define FINI_SECTION_ASM_OP FINI_SECTION_ASM_OP_ELF\n #  define DTORS_SECTION_ASM_OP DTORS_SECTION_ASM_OP_ELF"}, {"sha": "e8fed08f303f20de542339a85b4a5bdd1a64800e", "filename": "gcc/config/i386/scodbx.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fscodbx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fscodbx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fscodbx.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -66,10 +66,6 @@ Boston, MA 02111-1307, USA.  */\n  \"%{!fsigned-char:-D__CHAR_UNSIGNED__ -D_CHAR_UNSIGNED}\"\n #endif\n \n-/* Use atexit for static destructors, instead of defining\n-   our own exit function.  */\n-#define HAVE_ATEXIT\n-\n /* caller has to pop the extra argument passed to functions that return\n    structures. */\n "}, {"sha": "4b07db029e7e2af208ce6cd1b7e60d6a5183a84a", "filename": "gcc/config/i386/seq-sysv3.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fseq-sysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fseq-sysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fseq-sysv3.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -40,3 +40,6 @@\n /* Assembler pseudo-op for uninitialized shared local variables (.shbss). */\n #undef  SHARED_BSS_SECTION_ASM_OP\n #define SHARED_BSS_SECTION_ASM_OP \".section .shbss, \\\"bs\\\"\"\n+\n+/* seq2-sysv3.h used to define HAVE_ATEXIT, so I assume ptx1 needs this...  */\n+#define NEED_ATEXIT"}, {"sha": "dd43af707a042adb8ce3451ed396d7b7653a99f2", "filename": "gcc/config/i386/seq2-sysv3.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fseq2-sysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fseq2-sysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fseq2-sysv3.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -4,5 +4,4 @@\n \n /* Use atexit for static destructors, instead of defining\n    our own exit function.  */\n-#define HAVE_ATEXIT\n-\n+#undef NEED_ATEXIT"}, {"sha": "a2d2359464bf614b6ed220ec9d5c71436a447b1b", "filename": "gcc/config/i386/win-nt.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fwin-nt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fwin-nt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwin-nt.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -41,7 +41,6 @@ Boston, MA 02111-1307, USA. */\n #define WCHAR_TYPE \"short unsigned int\"\n #undef LONG_DOUBLE_TYPE_SIZE\n #define LONG_DOUBLE_TYPE_SIZE 64\n-#define HAVE_ATEXIT 1\n \n #undef EXTRA_SECTIONS\n #define EXTRA_SECTIONS in_ctor, in_dtor"}, {"sha": "68ad31fee72f19a17f20cd25a9e470cfcca062ad", "filename": "gcc/config/i386/win32.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi386%2Fwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwin32.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -2,7 +2,7 @@\n    hosting on Windows NT 3.x, using a Unix style C library and tools,\n    as distinct from winnt.h, which is used to build GCC for use with a\n    windows style library and tool set and uses the Microsoft tools.\n-   Copyright (C) 1995-1998 Free Software Foundation, Inc.\n+   Copyright (C) 1995-1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -97,7 +97,6 @@ Boston, MA 02111-1307, USA. */\n    so take that from libgcc2.c */\n \n #define NEED_ATEXIT 1\n-#define HAVE_ATEXIT 1     \n \n #undef EXTRA_SECTIONS\n #define EXTRA_SECTIONS in_ctor, in_dtor"}, {"sha": "0510f6227eec8a2ab8c48e52777cd9a9212f28cc", "filename": "gcc/config/i860/fx2800.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi860%2Ffx2800.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi860%2Ffx2800.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Ffx2800.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -38,7 +38,7 @@ Boston, MA 02111-1307, USA.  */\n /* atexit is not present prior to Concentrix 2.2. Uncomment the following\n    if you're on 2.1 or older. */\n  \n-/* #undef HAVE_ATEXIT */\n+/* #define NEED_ATEXIT */\n \n #define I860_STRICT_ABI_PROLOGUES\n "}, {"sha": "d44505c348deb090eaf3396380929088c66a3357", "filename": "gcc/config/i860/paragon.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi860%2Fparagon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fi860%2Fparagon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fparagon.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for Intel 80860 running OSF/1AD\n-   Copyright (C) 1991, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1996, 1999 Free Software Foundation, Inc.\n    Based upon original work of Ron Guilmette (rfg@monkeys.com).\n    Contributed by Andy Pfiffer (andyp@ssd.intel.com).\n    Partially inspired by\n@@ -23,9 +23,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* For the sake of libgcc2.c, indicate target supports atexit.  */\n-#define HAVE_ATEXIT\n-\n #undef TARGET_SWITCHES\n #define TARGET_SWITCHES  \\\n   { {\"xp\", 1, \"Generate code which uses the FPU\"},              \\"}, {"sha": "054ce7d948746661a945dbe1dda6735a52e50a95", "filename": "gcc/config/interix.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Finterix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Finterix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Finterix.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -102,6 +102,3 @@ for windows/multi thread */\n #define WCHAR_UNSIGNED 1\n #define WCHAR_TYPE \"short unsigned int\"\n #define WCHAR_TYPE_SIZE 16\n-\n-/* For the sake of libgcc2.c, indicate target supports atexit.  */\n-#define HAVE_ATEXIT"}, {"sha": "199ea5429865bfb9c2e22c4eab499f12539105a5", "filename": "gcc/config/linux-aout.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Flinux-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Flinux-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux-aout.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Linux-based GNU systems.\n-   Copyright (C) 1995, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1997, 1999 Free Software Foundation, Inc.\n    Contributed by H.J. Lu (hjl@nynexst.com)\n \n This file is part of GNU CC.\n@@ -22,9 +22,6 @@ Boston, MA 02111-1307, USA.  */\n /* Don't assume anything about the header files. */\n #define NO_IMPLICIT_EXTERN_C\n \n-#undef HAVE_ATEXIT\n-#define HAVE_ATEXIT\n-\n /* GNU/Linux uses ctype from glibc.a. I am not sure how complete it is.\n    For now, we play safe. It may change later. */\n "}, {"sha": "286f0925098d4fbbd0b8549a582645fe761ad0d2", "filename": "gcc/config/linux.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -23,9 +23,6 @@ Boston, MA 02111-1307, USA.  */\n /* Don't assume anything about the header files. */\n #define NO_IMPLICIT_EXTERN_C\n \n-#undef HAVE_ATEXIT\n-#define HAVE_ATEXIT\n-\n /* GNU/Linux uses ctype from glibc.a. I am not sure how complete it is.\n    For now, we play safe. It may change later. */\n "}, {"sha": "3ae07e1d6014adfb3793d16055d1ede165c929d3", "filename": "gcc/config/lynx-ng.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Flynx-ng.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Flynx-ng.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flynx-ng.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Target independent definitions for LynxOS, using Lynx's old as and ld.\n-   Copyright (C) 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -98,10 +98,6 @@ Boston, MA 02111-1307, USA.  */\n   if (TARGET_SYSTEM_V && TARGET_THREADS)\t\t\t\\\n     warning (\"-msystem-v and -mthreads are incompatible\"); }\n \n-/* Define this so that C++ destructors will use atexit.  */\n-\n-#define HAVE_ATEXIT\n-\n /* This is defined only so that we can find the assembler.  Everything else\n    is in /bin.  */\n "}, {"sha": "beac4491919808bc40ec7b541f86e191719df1fd", "filename": "gcc/config/lynx.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flynx.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Target independent definitions for LynxOS.\n-   Copyright (C) 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 1995, 1996, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -122,11 +122,6 @@ do {\t\t\t\t\t\t\t\t\\\n     warning (\"-msystem-v and -mthreads are incompatible\");\t\\\n } while (0)\n \n-/* Define this so that C++ destructors will use atexit, since LynxOS\n-   calls exit after main returns.  */\n-\n-#define HAVE_ATEXIT\n-\n /* Since init.o et al put all sorts of stuff into the init section,\n    we can't use the standard init section support in crtbegin.o. */\n "}, {"sha": "e93b748d4b147055013668ac5e612952327f7b18", "filename": "gcc/config/m68k/3b1.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fm68k%2F3b1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fm68k%2F3b1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2F3b1.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    AT&T UNIX PC version (pc7300, 3b1)\n-   Copyright (C) 1987, 1993, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1993, 1996, 1999 Free Software Foundation, Inc.\n    Contributed by Alex Crain (alex@umbc3.umd.edu).\n \n This file is part of GNU CC.\n@@ -99,7 +99,7 @@ output_file_directive ((FILE), main_input_filename)\n \n /* The 3b1 does not have `atexit'.  */\n \n-#undef HAVE_ATEXIT\n+#define NEED_ATEXIT\n \n /* Override parts of m68k.h to fit the SGS-3b1 assembler.  */\n "}, {"sha": "b0770fc53930190cdf8745496f10f2ef9f735abf", "filename": "gcc/config/m68k/a-ux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fm68k%2Fa-ux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fm68k%2Fa-ux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fa-ux.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -67,7 +67,7 @@ crt2.o%s \"\n #define NO_SYS_SIGLIST\n \n /* We provide atexit(), A/UX does not have it */\n-#define HAVE_ATEXIT\n+#define NEED_ATEXIT\n \n /* Generate calls to memcpy, memcmp and memset, as opposed to bcopy, bcmp,\n    and bzero */"}, {"sha": "1f75fb3bfe55b396834bf3801827baef64da07ec", "filename": "gcc/config/m68k/apollo68.h", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fm68k%2Fapollo68.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fm68k%2Fapollo68.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fapollo68.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Apollo 680X0 version.\n-   Copyright (C) 1989, 1992, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1992, 1996, 1997, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -116,12 +116,9 @@ Boston, MA 02111-1307, USA.  */\n #undef DBX_DEBUGGING_INFO\n #undef SDB_DEBUGGING_INFO\n \n-/* We have atexit(2).  So C++ can use it for global destructors.  */\n-\n-#if 0 /* troy@cbme.unsw.edu.au says people are still using sr10.2\n-\t and it does not support atexit.  */\n-#define HAVE_ATEXIT\n-#endif\n+/* troy@cbme.unsw.edu.au says people are still using sr10.2\n+   and it does not support atexit.  */\n+#define NEED_ATEXIT\n \n /* Every structure or union's size must be a multiple of 2 bytes.  */\n "}, {"sha": "5068e9777158cbb29d285da79f823bd9544c77e0", "filename": "gcc/config/m68k/dpx2.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fm68k%2Fdpx2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fm68k%2Fdpx2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fdpx2.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.  \n    Bull DPX/2 200 and 300 systems (m68k, SysVr3).\n-   Copyright (C) 1987, 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1993, 1994, 1995, 1996, 1999 Free Software Foundation, Inc.\n    Contributed by Frederic Pierresteguy (F.Pierresteguy@frcl.bull.fr).\n \n This file is part of GNU CC.\n@@ -66,7 +66,6 @@ Boston, MA 02111-1307, USA.  */\n # define __HAVE_68881__ 1\n # define CPP_SPEC \"%{!msoft-float:-D__HAVE_68881__ }\"\n \n-#define HAVE_ATEXIT\n #undef DO_GLOBAL_CTORS_BODY\t\t/* don't use svr3.h version */\n #undef DO_GLOBAL_DTORS_BODY\n "}, {"sha": "87c9e8cc056dc80ccf245384d3517eea5975aff1", "filename": "gcc/config/m68k/hp320.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fm68k%2Fhp320.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fm68k%2Fhp320.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp320.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  HP-UX 68000/68020 version.\n-   Copyright (C) 1987, 88, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 93, 94, 95, 96, 1997, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -56,10 +56,6 @@ Boston, MA 02111-1307, USA.  */\n /* Be compatible with system stddef.h.  */\n #define SIZE_TYPE \"unsigned int\"\n \n-/* Use atexit for static constructors/destructors, instead of defining\n-   our own exit function.  */\n-#define HAVE_ATEXIT\n-\n #include \"m68k/m68k.h\"\n \n /* See m68k.h.  7 means 68020 with 68881.  */"}, {"sha": "6c14d4fe01dff75ac414d23115a3ebe5da5b4d43", "filename": "gcc/config/m68k/mot3300.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fmot3300.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -800,7 +800,6 @@ do {(CUM).offset = 0;\\\n    so take that from libgcc2.c */\n \n #define NEED_ATEXIT 1\n-#define HAVE_ATEXIT 1\n \n #define EXIT_BODY\t\\\n   do\t\t\t\t\t\t\t\t\\"}, {"sha": "88f1793019004e84597a673b14b42a17c347b105", "filename": "gcc/config/m88k/sysv3.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fm88k%2Fsysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fm88k%2Fsysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fsysv3.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -70,10 +70,6 @@ Boston, MA 02111-1307, USA.  */\n /* Although the .init section is used, it is not automatically invoked.  */\n #define INVOKE__main\n \n-/* State that atexit exists so __do_global_ctors will register\n-   __do_global_dtors.  */\n-#define HAVE_ATEXIT\n-\n #define CTOR_LIST_BEGIN\t    \t\t\\\n   asm (INIT_SECTION_ASM_OP);\t\t\\\n   asm (\"\\tsubu\\t r31,r31,16\");\t/* (STACK_BOUNDARY / BITS_PER_UNIT) == 16 */ \\"}, {"sha": "604abc003a4377ba25a372330b3462ad2aebafed", "filename": "gcc/config/mips/iris4.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fmips%2Firis4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fmips%2Firis4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis4.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Iris version 4.\n-   Copyright (C) 1991, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1993, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -18,10 +18,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* Use atexit for static constructors/destructors, instead of defining\n-   our own exit function.  */\n-#define HAVE_ATEXIT\n-\n /* Profiling is supported via libprof1.a not -lc_p as in Irix 3.  */\n #undef STARTFILE_SPEC\n #define STARTFILE_SPEC \\"}, {"sha": "a497231fcaf3100c65152cca4ed784b3f888a2d7", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for MIPS running Linux-based GNU systems with ELF format.\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -21,8 +21,6 @@ Boston, MA 02111-1307, USA.  */\n /* Required to keep collect2.c happy */\n #undef OBJECT_FORMAT_COFF \n \n-#define HAVE_ATEXIT\n-\n /* If we don't set MASK_ABICALLS, we can't default to PIC. */\n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_ABICALLS|MASK_GAS)"}, {"sha": "3c90dcaf94e0d462740aeaef2f198441ba65f4d3", "filename": "gcc/config/mips/netbsd.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fnetbsd.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for DECstation running BSD as target machine for GNU compiler.\n-   Copyright (C) 1993, 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1996, 1997, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -52,10 +52,6 @@ Boston, MA 02111-1307, USA.  */\n   \"%{G*} %{EB} %{EL} %{mips1} %{mips2} %{mips3} \\\n    %{!nostartfiles:%{!r*:%{!e*:-e __start}}} -dc -dp %{static:-Bstatic} %{assert*}\"\n \n-/* We have atexit(3).  */\n-\n-#define HAVE_ATEXIT\n-\n /* Implicit library calls should use memcpy, not bcopy, etc.  */\n \n #define TARGET_MEM_FUNCTIONS"}, {"sha": "8ae9cb7bad88aa1742c097d9213c7010b9a28baa", "filename": "gcc/config/mips/osfrose.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fmips%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fmips%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fosfrose.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    DECstation (OSF/1 reference port with OSF/rose) version.\n-   Copyright (C) 1991, 1992, 1995, 1996, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1992, 1995, 1996, 1998, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -113,10 +113,6 @@ Boston, MA 02111-1307, USA.  */\n /* Default to -G 0 unless doing ecoff work.  */\n #define MIPS_DEFAULT_GVALUE ((TARGET_MIPS_AS) ? 8 : 0)\n \n-/* Use atexit for static constructors/destructors, instead of defining\n-   our own exit function.  */\n-#define HAVE_ATEXIT\n-\n /* Generate calls to memcpy, etc., not bcopy, etc.  */\n #define TARGET_MEM_FUNCTIONS\n "}, {"sha": "c93eff4476c938ade0ce9e9b0c455e4c449d9c8f", "filename": "gcc/config/mips/sni-svr4.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fmips%2Fsni-svr4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fmips%2Fsni-svr4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsni-svr4.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  SNI SINIX version.\n-   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1999 Free Software Foundation, Inc.\n    Contributed by Marco Walther (Marco.Walther@mch.sni.de).\n \n This file is part of GNU CC.\n@@ -54,10 +54,6 @@ Boston, MA 02111-1307, USA.  */\n #define getpagesize()\tsysconf(_SC_PAGE_SIZE)\n #endif /*  L_trampoline */\n \n-/* Use atexit for static constructors/destructors, instead of defining\n-   our own exit function.  */\n-#define HAVE_ATEXIT\n-\n /* Generate calls to memcpy, etc., not bcopy, etc.  */\n #define TARGET_MEM_FUNCTIONS\n "}, {"sha": "69cf97dc7a2372a698d848ba48500aa0430215be", "filename": "gcc/config/mips/svr4-4.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fmips%2Fsvr4-4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fmips%2Fsvr4-4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsvr4-4.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    MIPS RISC-OS System V.4 version.\n-   Copyright (C) 1992, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1998, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -53,9 +53,5 @@ Boston, MA 02111-1307, USA.  */\n #define getpagesize()\tsysconf(_SC_PAGE_SIZE)\n #endif /*  L_trampoline */\n \n-/* Use atexit for static constructors/destructors, instead of defining\n-   our own exit function.  */\n-#define HAVE_ATEXIT\n-\n /* Generate calls to memcpy, etc., not bcopy, etc.  */\n #define TARGET_MEM_FUNCTIONS"}, {"sha": "c214c7d8b289cd58861bd194dbe2cb8eefc7652e", "filename": "gcc/config/mips/svr4-5.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fmips%2Fsvr4-5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fmips%2Fsvr4-5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsvr4-5.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    MIPS RISC-OS 5.0 System V.4 version.\n-   Copyright (C) 1992 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -66,10 +66,6 @@ Boston, MA 02111-1307, USA.  */\n #define getpagesize()\tsysconf(_SC_PAGE_SIZE)\n #endif /*  L_trampoline */\n \n-/* Use atexit for static constructors/destructors, instead of defining\n-   our own exit function.  */\n-#define HAVE_ATEXIT\n-\n /* Generate calls to memcpy, etc., not bcopy, etc.  */\n #define TARGET_MEM_FUNCTIONS\n "}, {"sha": "e618a3cb9fb162e2ae051fcbc9f43a01def775a6", "filename": "gcc/config/mips/ultrix.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fmips%2Fultrix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fmips%2Fultrix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fultrix.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler; DECstation (Ultrix) version.\n-   Copyright (C) 1991, 1997, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1997, 1998, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -45,10 +45,6 @@ Boston, MA 02111-1307, USA.  */\n #define MACHINE_TYPE \"DECstation running ultrix\"\n #endif\n \n-/* Use atexit for static constructors/destructors, instead of defining\n-   our own exit function.  Ultrix 4.x has this, 3.x probably does not.  */\n-#define HAVE_ATEXIT\n-\n /* Generate calls to memcpy, etc., not bcopy, etc.  */\n #define TARGET_MEM_FUNCTIONS\n "}, {"sha": "7ba135bd24ecd9cf7bb9e2c8ea53f1f2e7e2e6b8", "filename": "gcc/config/netbsd.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnetbsd.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -66,10 +66,6 @@\n   (DEFAULT_SWITCH_TAKES_ARG(CHAR) \\\n    || (CHAR) == 'R')\n \n-/* We have atexit(3).  */\n-\n-#define HAVE_ATEXIT\n-\n /* Implicit library calls should use memcpy, not bcopy, etc.  */\n \n #define TARGET_MEM_FUNCTIONS"}, {"sha": "ea56709d9c92e1ccffe6ac64246bb963b2ef9095", "filename": "gcc/config/nextstep.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fnextstep.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fnextstep.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnextstep.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,6 +1,6 @@\n /* Operating system specific defines to be used when targeting GCC\n    for NeXTSTEP.\n-   Copyright (C) 1989, 90-93, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 90-93, 1996, 1997, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -81,10 +81,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define NEXT_OBJC_RUNTIME\n \n-/* We have atexit.  */\n-\n-#define HAVE_ATEXIT\n-\n /* Enable recent gcc to compile under the old gcc in Next release 1.0.  */\n \n #define __inline inline"}, {"sha": "d5f4ad1db06f1df7dbaf0035958f2586d849ebbc", "filename": "gcc/config/ns32k/pc532-min.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fns32k%2Fpc532-min.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fns32k%2Fpc532-min.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fpc532-min.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,7 +1,7 @@\n /* Definitions of target machine for GNU compiler.\n    PC532 with National 32532, running Minix.\n    Works with pc532 Minix 1.5hybrid.\n-   Copyright (C) 1990 Free Software Foundation, Inc.\n+   Copyright (C) 1990, 1999 Free Software Foundation, Inc.\n \n    Derived from SEQUENT NS32000, written originally\n    by Bruce Culbertson <culberts@hplabs.hp.com>,\n@@ -35,7 +35,3 @@ Boston, MA 02111-1307, USA.  */\n    call-saved-regs in a function calling setjmp */\n \n #define NON_SAVING_SETJMP (current_function_calls_setjmp)\n-\n-/* at least with estdio there's no _cleanup() but we have atexit() */\n-\n-#define HAVE_ATEXIT"}, {"sha": "60ebfab540b507ee413fdc3b14aac46d3fd5c307", "filename": "gcc/config/openbsd.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fopenbsd.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -139,9 +139,6 @@ Boston, MA 02111-1307, USA.  */\n \n /* Miscellaneous parameters.  */\n \n-/* Tell libgcc2.c that OpenBSD targets support atexit.  */\n-#define HAVE_ATEXIT\n-\n /* Controlling debugging info: dbx options.  */\n \n /* Don't use the `xsTAG;' construct in DBX output; OpenBSD systems that"}, {"sha": "21f67280920cb47c34113cbe338de83775111316", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -8,7 +8,7 @@ This file is part of GNU CC.\n \n GNU CC is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 1, or (at your option)\n+the Free Software Foundation; either version 2, or (at your option)\n any later version.\n \n GNU CC is distributed in the hope that it will be useful,\n@@ -1736,10 +1736,6 @@ while (0)\n    few bits. */\n #define SHIFT_COUNT_TRUNCATED 1\n \n-/* Use atexit for static constructors/destructors, instead of defining\n-   our own exit function.  */\n-#define HAVE_ATEXIT\n-\n /* Compute the cost of computing a constant rtl expression RTX\n    whose rtx-code is CODE.  The body of this macro is a portion\n    of a switch statement.  If the code is computed here,"}, {"sha": "23a41e1d1324c7edb9a081119ac8668505d06702", "filename": "gcc/config/psos.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fpsos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fpsos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpsos.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,7 +1,7 @@\n /* Operating system specific defines to be used when targeting GCC for some\n    embedded system running pSOS. We assume GNU tools with ELF, but\n    try to maintain compatibility with the MRI tools. Based on svr4.h.\n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -175,9 +175,3 @@ dtors_section ()\t\t\t\t\t\t\t\\\n /* For pSOS we use DBX debugging info.  */\n \n #define DBX_DEBUGGING_INFO\n-\n-\n-/* Prevent generation of an exit function.  */\n-\n-#define HAVE_ATEXIT\n-"}, {"sha": "3a6a572b3247f0d0c94f8880341284c1fd5302cf", "filename": "gcc/config/ptx4.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fptx4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fptx4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fptx4.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -27,9 +27,6 @@ Boston, MA 02111-1307, USA.\n /* Define a symbol indicating that we are using svr4.h.  */\n #define USING_SVR4_H\n \n-/* For the sake of libgcc2.c, indicate target supports atexit.  */\n-#define HAVE_ATEXIT\n-\n /* Cpp, assembler, linker, library, and startfile spec's.  */\n \n /* This defines which switch letters take arguments.  On svr4, most of"}, {"sha": "65dc53d4bb0a01eee50ac9212fdc483e61253faf", "filename": "gcc/config/rs6000/mach.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Frs6000%2Fmach.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Frs6000%2Fmach.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fmach.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler,\n    for IBM RS/6000 running MACH.\n-   Copyright (C) 1992 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1999 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@nyu.edu)\n \n This file is part of GNU CC.\n@@ -35,7 +35,7 @@ Boston, MA 02111-1307, USA.  */\n   -bnoso -berrmsg -btextro -bhalt:4 -bnodelcsect\"\n \n /* MACH doesn't have atexit.  */\n-#undef HAVE_ATEXIT\n+#define NEED_ATEXIT\n \n /* Don't default to pcc-struct-return, because gcc is the only compiler, and\n    we want to retain compatibility with older gcc versions.  */"}, {"sha": "97468f3522205a9937f591fdb760d91054b95c6f", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -2269,10 +2269,6 @@ do {                                                                    \\\n \n #define SHIFT_COUNT_TRUNCATED (TARGET_POWER ? 1 : 0)\n \n-/* Use atexit for static constructors/destructors, instead of defining\n-   our own exit function.  */\n-#define HAVE_ATEXIT\n-\n /* Compute the cost of computing a constant rtl expression RTX\n    whose rtx-code is CODE.  The body of this macro is a portion\n    of a switch statement.  If the code is computed here,"}, {"sha": "25c50182bcf710c41b8536e92a49916d838faae1", "filename": "gcc/config/rs6000/xm-beos.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Frs6000%2Fxm-beos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Frs6000%2Fxm-beos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxm-beos.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GNU C-compiler for BeOS host.\n-   Copyright (C) 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1997, 1999 Free Software Foundation, Inc.\n    Contributed by Fred Fish (fnf@cygnus.com), based on xm-rs6000.h\n    by Richard Kenner (kenner@vlsi1.ultra.nyu.edu).\n \n@@ -78,9 +78,6 @@ extern void *alloca ();\n #ifndef HAVE_PUTENV\n #define HAVE_PUTENV\n #endif\n-#ifndef HAVE_ATEXIT\n-#define HAVE_ATEXIT\n-#endif\n #ifndef HAVE_RENAME\n #define HAVE_RENAME\n #endif"}, {"sha": "ab5ec8328a8ac05e0ad51c5b9ff347cdecb87a56", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -2251,8 +2251,5 @@ do {\t\t\t\t\t\t\t\t\t\\\n     cost = 20;\t\t\t\t\t\t\t\t\\\n } while (0)\t\t\t\t\t\t\t\t\\\n \n-/* For the sake of libgcc2.c, indicate target supports atexit.  */\n-#define HAVE_ATEXIT\n-\n #define SH_DYNAMIC_SHIFT_COST \\\n   (TARGET_HARD_SH4 ? 1 : TARGET_SH3 ? (TARGET_SMALLCODE ? 1 : 2) : 20)"}, {"sha": "28469454bc4872c6a6c67bbaff2c158b4c5b742c", "filename": "gcc/config/sparc/linux-aout.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fsparc%2Flinux-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fsparc%2Flinux-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux-aout.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for SPARC running Linux-based GNU systems with a.out.\n-   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1999 Free Software Foundation, Inc.\n    Contributed by Eddie C. Dost (ecd@skynet.be)\n \n This file is part of GNU CC.\n@@ -25,9 +25,6 @@ Boston, MA 02111-1307, USA.  */\n /* Don't assume anything about the header files. */\n #define NO_IMPLICIT_EXTERN_C\n \n-#undef HAVE_ATEXIT\n-#define HAVE_ATEXIT\n-\n /* GNU/Linux uses ctype from glibc.a. I am not sure how complete it is.\n    For now, we play safe. It may change later. */\n "}, {"sha": "96b97974be8e5d92ec61e0149917a158cb62536e", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for SPARC running Linux-based GNU systems with ELF.\n-   Copyright (C) 1996, 1997, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999 Free Software Foundation, Inc.\n    Contributed by Eddie C. Dost (ecd@skynet.be)\n \n This file is part of GNU CC.\n@@ -24,9 +24,6 @@ Boston, MA 02111-1307, USA.  */\n /* Don't assume anything about the header files. */\n #define NO_IMPLICIT_EXTERN_C\n \n-#undef HAVE_ATEXIT\n-#define HAVE_ATEXIT\n-\n /* GNU/Linux uses ctype from glibc.a. I am not sure how complete it is.\n    For now, we play safe. It may change later. */\n "}, {"sha": "cab08755f1c239e76426444486882ba39b93be31", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -26,9 +26,6 @@ Boston, MA 02111-1307, USA.  */\n /* Don't assume anything about the header files. */\n #define NO_IMPLICIT_EXTERN_C\n \n-#undef HAVE_ATEXIT\n-#define HAVE_ATEXIT\n-\n #include <sparc/sysv4.h>\n \n #undef MD_EXEC_PREFIX"}, {"sha": "0459c66207c3645619398614d2dc09584f1a8109", "filename": "gcc/config/sparc/sunos4.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fsparc%2Fsunos4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fsparc%2Fsunos4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsunos4.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for SunOS 4.x\n-   Copyright (C) 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -47,3 +47,8 @@ Boston, MA 02111-1307, USA.  */\n \t       \"ta\t0x21\\n\\t\"\t\t\t\\\n \t       : /* no outputs */\t\t\t\\\n \t       : \"r\" (ms_flags), \"r\" (ms_saveret));\n+\n+/* SunOS has on_exit instead of atexit.  */\n+extern int on_exit (void *, void *);\t/* The man page says it returns int. */\n+#define ON_EXIT(FUNC) on_exit ((FUNC), 0)\n+#define NEED_ATEXIT"}, {"sha": "5b584104494a699d7282089dae07ebd119ac9426", "filename": "gcc/config/svr4.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fsvr4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fsvr4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr4.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -42,9 +42,6 @@ Boston, MA 02111-1307, USA.\n /* Define a symbol indicating that we are using svr4.h.  */\n #define USING_SVR4_H\n \n-/* For the sake of libgcc2.c, indicate target supports atexit.  */\n-#define HAVE_ATEXIT\n-\n /* Cpp, assembler, linker, library, and startfile spec's.  */\n \n /* This defines which switch letters take arguments.  On svr4, most of"}, {"sha": "9f2d00da0ba4c28133d3a670b2b54053fcf10dd4", "filename": "gcc/config/vax/ultrix.h", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fvax%2Fultrix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fvax%2Fultrix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fultrix.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,3 +1,23 @@\n+/* Output variables, constants and external declarations, for GNU compiler.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \" -Dvax -Dunix -Dultrix -Dbsd4_2 -D__vax -D__unix -D__ultrix -D__bsd4_2 -Asystem(unix) -Asystem(bsd) -Acpu(vax) -Amachine(vax)\"\n \n@@ -7,6 +27,3 @@\n #define PTRDIFF_TYPE \"int\"\n #define WCHAR_TYPE \"unsigned int\"\n #define WCHAR_TYPE_SIZE 32\n-\n-/* True for Ultrix 4.3 and later and possibly earlier.  */\n-#define HAVE_ATEXIT"}, {"sha": "d9f4f7f5a631f44fa29fcb88a4b9a3ef77cdde84", "filename": "gcc/config/vax/vms.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fvax%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fvax%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvms.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Output variables, constants and external declarations, for GNU compiler.\n-   Copyright (C) 1988, 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1994, 1995, 1996, 1997, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -298,9 +298,6 @@ const_section ()\t\t\t\t\t\\\n   fputc ('\\n', (FILE));\t\t\t\t\t\t\t\\\n }\n \n-/* True for VMS V4.6 and later.  */\n-#define HAVE_ATEXIT\n-\n /* The following definitions are used in libgcc2.c with the __main\n    function.  The _SHR symbol is used when the sharable image library\n    for the C++ library is used - this is picked up automatically by the linker"}, {"sha": "fc0848b5604da9c27baafb3ef3979bf4da165622", "filename": "gcc/config/xm-linux.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fxm-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fconfig%2Fxm-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxm-linux.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -1,5 +1,5 @@\n /* Configuration for GCC for Intel i386 running Linux-based GNU systems.\n-   Copyright (C) 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997, 1999 Free Software Foundation, Inc.\n    Contributed by H.J. Lu (hjl@nynexst.com)\n \n This file is part of GNU CC.\n@@ -19,9 +19,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#undef  HAVE_ATEXIT\n-#define HAVE_ATEXIT\n-\n #undef  POSIX\n #define POSIX\n "}, {"sha": "23fa7361b45a03fada349712848f4cf30c8243bd", "filename": "gcc/gbl-ctors.h", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fgbl-ctors.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Fgbl-ctors.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgbl-ctors.h?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -2,7 +2,7 @@\n    for getting g++ file-scope static objects constructed.  This file\n    will get included either by libgcc2.c (for systems that don't support\n    a .init section) or by crtstuff.c (for those that do).\n-   Copyright (C) 1991, 1995, 1996, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1995, 1996, 1998, 1999 Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@segfault.us.com)\n \n This file is part of GNU CC.\n@@ -31,22 +31,8 @@ Boston, MA 02111-1307, USA.  */\n */\n \n #ifdef NEED_ATEXIT\n-#ifndef HAVE_ATEXIT\n-#define HAVE_ATEXIT\t1\t/* Take it from libgcc2.c */\n-#endif\n-#endif\n-\n-#ifdef HAVE_ATEXIT\n-#if defined (WINNT) || defined (NEED_ATEXIT)\n extern int atexit (void (*) (void));\n #endif\n-#define ON_EXIT(FUNC,ARG) atexit ((FUNC))\n-#else\n-#ifdef sun\n-extern int on_exit (void *, void *);\t/* The man page says it returns int. */\n-#define ON_EXIT(FUNC,ARG) on_exit ((FUNC), (ARG))\n-#endif\n-#endif\n \n /*  Declare a pointer to void function type.  */\n "}, {"sha": "96ce2143be925d440ed931713ff128f02b31570c", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 16, "deletions": 65, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -53,10 +53,6 @@ Boston, MA 02111-1307, USA.  */\n #undef abort\n #endif\n \n-#if (SUPPORTS_WEAK == 1) && (defined (ASM_OUTPUT_DEF) || defined (ASM_OUTPUT_WEAK_ALIAS))\n-#define WEAK_ALIAS\n-#endif\n-\n /* In a cross-compilation situation, default to inhibiting compilation\n    of routines that use libc.  */\n \n@@ -1709,11 +1705,9 @@ __bb_init_func (struct bb *blocks)\n   if (blocks->zero_word)\n     return;\n \n-#ifdef ON_EXIT\n   /* Initialize destructor.  */\n   if (!bb_head)\n-    ON_EXIT (__bb_exit_func, 0);\n-#endif\n+    atexit (__bb_exit_func);\n \n   /* Set up linked list.  */\n   blocks->zero_word = 1;\n@@ -2084,10 +2078,8 @@ __bb_init_prg ()\n   enum bb_func_mode m;\n   int i;\n \n-#ifdef ON_EXIT\n   /* Initialize destructor.  */\n-  ON_EXIT (__bb_exit_func, 0);\n-#endif\n+  atexit (__bb_exit_func);\n \n   if (!(file = fopen (\"bb.in\", \"r\")))\n     return;\n@@ -2176,11 +2168,8 @@ __bb_init_prg ()\n       bb_stack = (unsigned long *) malloc (bb_stacksize * sizeof (*bb_stack));\n     }\n \n-#ifdef ON_EXIT\n-      /* Initialize destructor.  */\n-      ON_EXIT (__bb_exit_trace_func, 0);\n-#endif\n-\n+  /* Initialize destructor.  */\n+  atexit (__bb_exit_trace_func);\n }\n \n /* Called upon entering a basic block.  */\n@@ -2869,17 +2858,6 @@ __do_global_dtors ()\n #ifndef HAS_INIT_SECTION\n /* Run all the global constructors on entry to the program.  */\n \n-#ifndef ON_EXIT\n-#define ON_EXIT(a, b)\n-#else\n-/* Make sure the exit routine is pulled in to define the globals as\n-   bss symbols, just in case the linker does not automatically pull\n-   bss definitions from the library.  */\n-\n-extern int _exit_dummy_decl;\n-int *_exit_dummy_ref = &_exit_dummy_decl;\n-#endif /* ON_EXIT */\n-\n void\n __do_global_ctors ()\n {\n@@ -2890,7 +2868,7 @@ __do_global_ctors ()\n   }\n #endif\n   DO_GLOBAL_CTORS_BODY;\n-  ON_EXIT (__do_global_dtors, 0);\n+  atexit (__do_global_dtors, 0);\n }\n #endif /* no HAS_INIT_SECTION */\n \n@@ -2952,22 +2930,17 @@ func_ptr __DTOR_LIST__[2];\n #include \"gbl-ctors.h\"\n \n #ifdef NEED_ATEXIT\n-# ifdef ON_EXIT\n-#  undef ON_EXIT\n-# endif\n-int _exit_dummy_decl = 0;\t/* prevent compiler & linker warnings */\n-#endif\n \n-#ifndef ON_EXIT\n+#ifndef HAVE_ON_EXIT\n \n-#ifdef NEED_ATEXIT\n # include <errno.h>\n \n static func_ptr *atexit_chain = 0;\n static long atexit_chain_length = 0;\n static volatile long last_atexit_chain_slot = -1;\n \n-int atexit (func_ptr func)\n+int\n+atexit (func_ptr func)\n {\n   if (++last_atexit_chain_slot == atexit_chain_length)\n     {\n@@ -2989,22 +2962,13 @@ int atexit (func_ptr func)\n   atexit_chain[last_atexit_chain_slot] = func;\n   return (0);\n }\n-#endif /* NEED_ATEXIT */\n \n-/* If we have no known way of registering our own __do_global_dtors\n-   routine so that it will be invoked at program exit time, then we\n-   have to define our own exit routine which will get this to happen.  */\n-\n-extern void __do_global_dtors ();\n-extern void __bb_exit_func ();\n extern void _cleanup ();\n extern void _exit () __attribute__ ((noreturn));\n \n void \n exit (int status)\n {\n-#if !defined (INIT_SECTION_ASM_OP) || !defined (OBJECT_FORMAT_ELF)\n-#ifdef NEED_ATEXIT\n   if (atexit_chain)\n     {\n       for ( ; last_atexit_chain_slot-- >= 0; )\n@@ -3015,19 +2979,6 @@ exit (int status)\n       free (atexit_chain);\n       atexit_chain = 0;\n     }\n-#else /* No NEED_ATEXIT */\n-  __do_global_dtors ();\n-#endif /* No NEED_ATEXIT */\n-#endif /* !defined (INIT_SECTION_ASM_OP) || !defined (OBJECT_FORMAT_ELF) */\n-/* In gbl-ctors.h, ON_EXIT is defined if HAVE_ATEXIT is defined.  In\n-   __bb_init_func and _bb_init_prg, __bb_exit_func is registered with\n-   ON_EXIT if ON_EXIT is defined.  Thus we must not call __bb_exit_func here\n-   if HAVE_ATEXIT is defined. */\n-#ifndef HAVE_ATEXIT\n-#ifndef inhibit_libc\n-  __bb_exit_func ();\n-#endif\n-#endif /* !HAVE_ATEXIT */\n #ifdef EXIT_BODY\n   EXIT_BODY;\n #else\n@@ -3036,17 +2987,17 @@ exit (int status)\n   _exit (status);\n }\n \n-#else /* ON_EXIT defined */\n-int _exit_dummy_decl = 0;\t/* prevent compiler & linker warnings */\n+#else /* HAVE_ON_EXIT */\n \n-# ifndef HAVE_ATEXIT\n-/* Provide a fake for atexit() using ON_EXIT.  */\n-int atexit (func_ptr func)\n+/* Simple; we just need a wrapper for ON_EXIT.  */\n+int\n+atexit (func_ptr func)\n {\n-  return ON_EXIT (func, NULL);\n+  return ON_EXIT (func);\n }\n-# endif /* HAVE_ATEXIT */\n-#endif /* ON_EXIT defined */\n+\n+#endif /* HAVE_ON_EXIT */\n+#endif /* NEED_ATEXIT */\n \n #endif /* L_exit */\n \f"}, {"sha": "ce26e283567d62de721f2a9da0f8b1a5e9b5276d", "filename": "gcc/tm.texi", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c063dc9813c9aecef8db565e265d76668f8c8fae/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=c063dc9813c9aecef8db565e265d76668f8c8fae", "patch": "@@ -7660,12 +7660,21 @@ The definition should be a C statement (sans semicolon) to generate the\n appropriate rtl instructions.  It is used only when compiling the end of\n @code{main}.\n \n-@item HAVE_ATEXIT\n-@findex HAVE_ATEXIT\n-Define this if the target system supports the function\n-@code{atexit} from the ANSI C standard.  If this is not defined,\n-and @code{INIT_SECTION_ASM_OP} is not defined, a default\n-@code{exit} function will be provided to support C++.\n+@item NEED_ATEXIT\n+@findex NEED_ATEXIT\n+Define this if the target system lacks the function @code{atexit}\n+from the ANSI C standard.  If this macro is defined, a default definition\n+will be provided to support C++.  If @code{ON_EXIT} is not defined,\n+a default @code{exit} function will also be provided.\n+\n+@item ON_EXIT\n+@findex ON_EXIT\n+Define this macro if the target has another way to implement atexit\n+functionality without replacing @code{exit}.  For instance, SunOS 4 has\n+a similar @code{on_exit} library function.\n+\n+The definition should be a functional macro which can be used just like\n+the @code{atexit} function.\n \n @item EXIT_BODY\n @findex EXIT_BODY"}]}