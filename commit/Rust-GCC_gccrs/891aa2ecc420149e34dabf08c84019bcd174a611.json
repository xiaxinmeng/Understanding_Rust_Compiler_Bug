{"sha": "891aa2ecc420149e34dabf08c84019bcd174a611", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkxYWEyZWNjNDIwMTQ5ZTM0ZGFiZjA4Yzg0MDE5YmNkMTc0YTYxMQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2010-08-20T08:03:41Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2010-08-20T08:03:41Z"}, "message": "sparc.c (sparc_asm_function_epilogue): Don't output an extra nop past a sibling call at the very end.\n\n        * config/sparc/sparc.c (sparc_asm_function_epilogue): Don't output\n        an extra nop past a sibling call at the very end.\n\n        testsuite/\n        * gcc.target/sparc/sibcall-dslot.c: New testcase.\n\nFrom-SVN: r163395", "tree": {"sha": "74c67ec579c8652993e4cc89d1e5665ad68ed6c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74c67ec579c8652993e4cc89d1e5665ad68ed6c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/891aa2ecc420149e34dabf08c84019bcd174a611", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/891aa2ecc420149e34dabf08c84019bcd174a611", "html_url": "https://github.com/Rust-GCC/gccrs/commit/891aa2ecc420149e34dabf08c84019bcd174a611", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/891aa2ecc420149e34dabf08c84019bcd174a611/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07d5b92585ad8f3c1757335ae9d5320786f3f448", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07d5b92585ad8f3c1757335ae9d5320786f3f448", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07d5b92585ad8f3c1757335ae9d5320786f3f448"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "31762851e516ca976cb8ae05ea06acc6951998cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/891aa2ecc420149e34dabf08c84019bcd174a611/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/891aa2ecc420149e34dabf08c84019bcd174a611/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=891aa2ecc420149e34dabf08c84019bcd174a611", "patch": "@@ -1,3 +1,8 @@\n+2010-08-20  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* config/sparc/sparc.c (sparc_asm_function_epilogue): Don't output\n+\tan extra nop past a sibling call at the very end.\n+\n 2010-08-19  Bernd Schmidt  <bernds@codesourcery.com>\n \n \tPR bootstrap/45350"}, {"sha": "50b981e749fa5630583de1924372e2dd71fe9a39", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/891aa2ecc420149e34dabf08c84019bcd174a611/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/891aa2ecc420149e34dabf08c84019bcd174a611/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=891aa2ecc420149e34dabf08c84019bcd174a611", "patch": "@@ -4527,11 +4527,11 @@ sparc_can_use_return_insn_p (void)\n static void\n sparc_asm_function_epilogue (FILE *file, HOST_WIDE_INT size ATTRIBUTE_UNUSED)\n {\n-  /* If code does not drop into the epilogue, we have to still output\n-     a dummy nop for the sake of sane backtraces.  Otherwise, if the\n-     last two instructions of a function were \"call foo; dslot;\" this\n-     can make the return PC of foo (i.e. address of call instruction\n-     plus 8) point to the first instruction in the next function.  */\n+  /* If the last two instructions of a function are \"call foo; dslot;\"\n+     the return address might point to the first instruction in the next\n+     function and we have to output a dummy nop for the sake of sane\n+     backtraces in such cases.  This is pointless for sibling calls since\n+     the return address is explicitly adjusted.  */\n \n   rtx insn, last_real_insn;\n \n@@ -4543,7 +4543,9 @@ sparc_asm_function_epilogue (FILE *file, HOST_WIDE_INT size ATTRIBUTE_UNUSED)\n       && GET_CODE (PATTERN (last_real_insn)) == SEQUENCE)\n     last_real_insn = XVECEXP (PATTERN (last_real_insn), 0, 0);\n \n-  if (last_real_insn && GET_CODE (last_real_insn) == CALL_INSN)\n+  if (last_real_insn\n+      && CALL_P (last_real_insn)\n+      && !SIBLING_CALL_P (last_real_insn))\n     fputs(\"\\tnop\\n\", file);\n \n   sparc_output_deferred_case_vectors ();"}, {"sha": "e46fd3f22dfab7a071225b27580c3b6064a97271", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/891aa2ecc420149e34dabf08c84019bcd174a611/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/891aa2ecc420149e34dabf08c84019bcd174a611/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=891aa2ecc420149e34dabf08c84019bcd174a611", "patch": "@@ -1,3 +1,7 @@\n+2010-10-19  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* gcc.target/sparc/sibcall-dslot.c: New testcase.\n+\n 2010-08-19  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/init/synth3.C: New."}, {"sha": "db3401648e86959ebf654e2dc20aeac96f5d768c", "filename": "gcc/testsuite/gcc.target/sparc/sibcall-dslot.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/891aa2ecc420149e34dabf08c84019bcd174a611/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fsibcall-dslot.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/891aa2ecc420149e34dabf08c84019bcd174a611/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fsibcall-dslot.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fsibcall-dslot.c?ref=891aa2ecc420149e34dabf08c84019bcd174a611", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+extern int one ();\n+\n+int some_n ()\n+{\n+    return one ();\n+}\n+\n+/* { dg-final { scan-assembler-not \"nop\" } } */"}]}