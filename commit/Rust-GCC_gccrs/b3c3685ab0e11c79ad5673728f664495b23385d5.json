{"sha": "b3c3685ab0e11c79ad5673728f664495b23385d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNjMzY4NWFiMGUxMWM3OWFkNTY3MzcyOGY2NjQ0OTViMjMzODVkNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-10-27T19:04:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-10-27T19:04:43Z"}, "message": "tree-ssa-strlen.c: Include expr.h.\n\n\t* tree-ssa-strlen.c: Include expr.h.\n\t(get_stridx): Don't use c_strlen, instead use string_constant\n\tand compute string length from it.\n\t* Makefile.in (tree-ssa-strlen.o): Depend on $(EXPR_H).\n\nFrom-SVN: r180574", "tree": {"sha": "56195b1d9984506fd5e4184d26654edacf22069c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56195b1d9984506fd5e4184d26654edacf22069c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3c3685ab0e11c79ad5673728f664495b23385d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3c3685ab0e11c79ad5673728f664495b23385d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3c3685ab0e11c79ad5673728f664495b23385d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3c3685ab0e11c79ad5673728f664495b23385d5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2286a26f57ccfc760cc1582effeda293aae4ec00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2286a26f57ccfc760cc1582effeda293aae4ec00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2286a26f57ccfc760cc1582effeda293aae4ec00"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "cc6dec0e2fb4be4ab1a0b89d872d19dfdbbdd6c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c3685ab0e11c79ad5673728f664495b23385d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c3685ab0e11c79ad5673728f664495b23385d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3c3685ab0e11c79ad5673728f664495b23385d5", "patch": "@@ -1,3 +1,10 @@\n+2011-10-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree-ssa-strlen.c: Include expr.h.\n+\t(get_stridx): Don't use c_strlen, instead use string_constant\n+\tand compute string length from it.\n+\t* Makefile.in (tree-ssa-strlen.o): Depend on $(EXPR_H).\n+\n 2011-10-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/46603"}, {"sha": "600fc2793921ed7d0a0ae224c0c4d0ee7307a8b7", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c3685ab0e11c79ad5673728f664495b23385d5/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c3685ab0e11c79ad5673728f664495b23385d5/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b3c3685ab0e11c79ad5673728f664495b23385d5", "patch": "@@ -3173,7 +3173,7 @@ tree-ssa-ccp.o : tree-ssa-ccp.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(DBGCNT_H) tree-pretty-print.h gimple-pretty-print.h gimple-fold.h\n tree-ssa-strlen.o : tree-ssa-strlen.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_FLOW_H) $(TREE_PASS_H) domwalk.h alloc-pool.h tree-ssa-propagate.h \\\n-   gimple-pretty-print.h $(PARAMS_H)\n+   gimple-pretty-print.h $(PARAMS_H) $(EXPR_H)\n tree-sra.o : tree-sra.c $(CONFIG_H) $(SYSTEM_H) coretypes.h alloc-pool.h \\\n    $(TM_H) $(TREE_H) $(GIMPLE_H) $(CGRAPH_H) $(TREE_FLOW_H) \\\n    $(IPA_PROP_H) $(DIAGNOSTIC_H) statistics.h $(TREE_DUMP_H) $(TIMEVAR_H) \\"}, {"sha": "a37633a920f227406df372484eabdfd312253065", "filename": "gcc/tree-ssa-strlen.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c3685ab0e11c79ad5673728f664495b23385d5/gcc%2Ftree-ssa-strlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c3685ab0e11c79ad5673728f664495b23385d5/gcc%2Ftree-ssa-strlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.c?ref=b3c3685ab0e11c79ad5673728f664495b23385d5", "patch": "@@ -28,6 +28,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-propagate.h\"\n #include \"gimple-pretty-print.h\"\n #include \"params.h\"\n+#include \"expr.h\"\n \n /* A vector indexed by SSA_NAME_VERSION.  0 means unknown, positive value\n    is an index into strinfo vector, negative value stands for\n@@ -176,7 +177,7 @@ get_addr_stridx (tree exp)\n static int\n get_stridx (tree exp)\n {\n-  tree l;\n+  tree s, o;\n \n   if (TREE_CODE (exp) == SSA_NAME)\n     return VEC_index (int, ssa_ver_to_stridx, SSA_NAME_VERSION (exp));\n@@ -188,14 +189,17 @@ get_stridx (tree exp)\n \treturn idx;\n     }\n \n-  l = c_strlen (exp, 0);\n-  if (l != NULL_TREE\n-      && host_integerp (l, 1))\n+  s = string_constant (exp, &o);\n+  if (s != NULL_TREE\n+      && (o == NULL_TREE || host_integerp (o, 0))\n+      && TREE_STRING_LENGTH (s) > 0)\n     {\n-      unsigned HOST_WIDE_INT len = tree_low_cst (l, 1);\n-      if (len == (unsigned int) len\n-\t  && (int) len >= 0)\n-\treturn ~(int) len;\n+      HOST_WIDE_INT offset = o ? tree_low_cst (o, 0) : 0;\n+      const char *p = TREE_STRING_POINTER (s);\n+      int max = TREE_STRING_LENGTH (s) - 1;\n+\n+      if (p[max] == '\\0' && offset >= 0 && offset <= max)\n+\treturn ~(int) strlen (p + offset);\n     }\n   return 0;\n }"}]}