{"sha": "17049f0bbb41269470981caefa6d05fd3c26b47b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcwNDlmMGJiYjQxMjY5NDcwOTgxY2FlZmE2ZDA1ZmQzYzI2YjQ3Yg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-03-10T00:57:10Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-03-10T00:57:10Z"}, "message": "libiberty.h (gettimeofday): Declare.\n\n\t* libiberty.h (gettimeofday): Declare.\n\n\t* configure.ac (funcs): Add gettimeofday.\n\t* configure: Regenerated.\n\t* gettimeofday.c: New file.\n\t* Makefile.in (CFILES): Add gettimeofday.\n\t(CONFIGURED_OFILES): Add gettimeofday.o.\n\t(./gettimeofday.o): New rule.\n\nFrom-SVN: r96230", "tree": {"sha": "e1432758346a3d218242923db100c5546a76889e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1432758346a3d218242923db100c5546a76889e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17049f0bbb41269470981caefa6d05fd3c26b47b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17049f0bbb41269470981caefa6d05fd3c26b47b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17049f0bbb41269470981caefa6d05fd3c26b47b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17049f0bbb41269470981caefa6d05fd3c26b47b/comments", "author": null, "committer": null, "parents": [{"sha": "15692245885b30db38255a5449c4e980c208560b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15692245885b30db38255a5449c4e980c208560b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15692245885b30db38255a5449c4e980c208560b"}], "stats": {"total": 78, "additions": 71, "deletions": 7}, "files": [{"sha": "758b923a300b59cf184d085ba2bb7047762ce608", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17049f0bbb41269470981caefa6d05fd3c26b47b/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17049f0bbb41269470981caefa6d05fd3c26b47b/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=17049f0bbb41269470981caefa6d05fd3c26b47b", "patch": "@@ -1,3 +1,7 @@\n+2005-03-09  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* libiberty.h (gettimeofday): Declare.\n+\n 2005-03-01  Jan Beulich  <jbeulich@novell.com>\n \n \t* libiberty.h: Declare unlink_if_ordinary."}, {"sha": "0814695a04a84fc71330ed6d0a65ea6f96255cf4", "filename": "include/libiberty.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17049f0bbb41269470981caefa6d05fd3c26b47b/include%2Flibiberty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17049f0bbb41269470981caefa6d05fd3c26b47b/include%2Flibiberty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Flibiberty.h?ref=17049f0bbb41269470981caefa6d05fd3c26b47b", "patch": "@@ -145,6 +145,15 @@ extern int fdmatch PARAMS ((int fd1, int fd2));\n \n extern char * getpwd PARAMS ((void));\n \n+/* Get the current time.  */\n+/* Prototypes vary from system to system, so we only provide a\n+   prototype on systems where we know that we need it.  */\n+#ifdef __MINGW32__\n+/* Forward declaration to avoid #include <sys/time.h>.   */\n+struct timeval;\n+extern int gettimeofday PARAMS ((struct timeval *, void *)); \n+#endif\n+\n /* Get the amount of time the process has run, in microseconds.  */\n \n extern long get_run_time PARAMS ((void));"}, {"sha": "0ab2ec9abf957681bd7761da01ddd9d5acc912cc", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17049f0bbb41269470981caefa6d05fd3c26b47b/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17049f0bbb41269470981caefa6d05fd3c26b47b/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=17049f0bbb41269470981caefa6d05fd3c26b47b", "patch": "@@ -1,3 +1,12 @@\n+2005-03-09  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* configure.ac (funcs): Add gettimeofday.\n+\t* configure: Regenerated.\n+\t* gettimeofday.c: New file.\n+\t* Makefile.in (CFILES): Add gettimeofday.\n+\t(CONFIGURED_OFILES): Add gettimeofday.o.\n+\t(./gettimeofday.o): New rule.\n+\n 2005-03-09  Ian Lance Taylor  <ian@airs.com>\n \n \t* pex-os2.c: Remove."}, {"sha": "3cbde17bcd1322d9d404c4ab20a26d69a4a156ed", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17049f0bbb41269470981caefa6d05fd3c26b47b/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17049f0bbb41269470981caefa6d05fd3c26b47b/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=17049f0bbb41269470981caefa6d05fd3c26b47b", "patch": "@@ -133,6 +133,7 @@ CFILES = alloca.c argv.c asprintf.c atexit.c\t\t\t\t\\\n \tdyn-string.c\t\t\t\t\t\t\t\\\n \tfdmatch.c ffs.c fibheap.c floatformat.c fnmatch.c\t\t\\\n \tgetcwd.c getopt.c getopt1.c getpagesize.c getpwd.c getruntime.c\t\\\n+         gettimeofday.c                                                 \\\n \thashtab.c hex.c\t\t\t\t\t\t\t\\\n \tindex.c insque.c\t\t\t\t\t\t\\\n \tlbasename.c\t\t\t\t\t\t\t\\\n@@ -184,7 +185,7 @@ CONFIGURED_OFILES = ./asprintf.o ./atexit.o\t\t\t\t\\\n \t./calloc.o ./clock.o ./copysign.o\t\t\t\t\\\n \t./_doprnt.o\t\t\t\t\t\t\t\\\n \t./ffs.o\t\t\t\t\t\t\t\t\\\n-\t./getcwd.o ./getpagesize.o\t\t\t\t\t\\\n+\t./getcwd.o ./getpagesize.o ./gettimeofday.o\t\t\t\\\n \t./index.o ./insque.o\t\t\t\t\t\t\\\n \t./memchr.o ./memcmp.o ./memcpy.o ./memmove.o ./mempcpy.o\t\\\n \t ./memset.o ./mkstemps.o\t\t\t\t\t\\\n@@ -415,6 +416,10 @@ maintainer-clean-subdir: config.h\n $(REQUIRED_OFILES) $(EXTRA_OFILES) $(LIBOBJS): stamp-picdir\n $(CONFIGURED_OFILES): stamp-picdir\n \n+# Don't export variables to the environment, in order to not confuse\n+# configure.\n+.NOEXPORT:\n+\n # The dependencies in the remainder of this file are automatically\n # generated by \"make maint-deps\".  Manual edits will be lost.\n \n@@ -615,6 +620,13 @@ $(CONFIGURED_OFILES): stamp-picdir\n \telse true; fi\n \t$(COMPILE.c) $(srcdir)/getruntime.c $(OUTPUT_OPTION)\n \n+./gettimeofday.o: $(srcdir)/gettimeofday.c config.h $(INCDIR)/ansidecl.h \\\n+\t$(INCDIR)/libiberty.h\n+\tif [ x\"$(PICFLAG)\" != x ]; then \\\n+\t  $(COMPILE.c) $(PICFLAG) $(srcdir)/gettimeofday.c -o pic/$@; \\\n+\telse true; fi\n+\t$(COMPILE.c) $(srcdir)/gettimeofday.c $(OUTPUT_OPTION)\n+\n ./hashtab.o: $(srcdir)/hashtab.c config.h $(INCDIR)/ansidecl.h \\\n \t$(INCDIR)/hashtab.h $(INCDIR)/libiberty.h\n \tif [ x\"$(PICFLAG)\" != x ]; then \\\n@@ -955,8 +967,8 @@ $(CONFIGURED_OFILES): stamp-picdir\n \telse true; fi\n \t$(COMPILE.c) $(srcdir)/tmpnam.c $(OUTPUT_OPTION)\n \n-./unlink-if-ordinary.o: $(srcdir)/unlink-if-ordinary.c config.h $(INCDIR)/ansidecl.h \\\n-\t$(INCDIR)/libiberty.h\n+./unlink-if-ordinary.o: $(srcdir)/unlink-if-ordinary.c config.h \\\n+\t$(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h\n \tif [ x\"$(PICFLAG)\" != x ]; then \\\n \t  $(COMPILE.c) $(PICFLAG) $(srcdir)/unlink-if-ordinary.c -o pic/$@; \\\n \telse true; fi\n@@ -1046,6 +1058,3 @@ $(CONFIGURED_OFILES): stamp-picdir\n \telse true; fi\n \t$(COMPILE.c) $(srcdir)/xstrerror.c $(OUTPUT_OPTION)\n \n-# Don't export variables to the environment, in order to not confuse\n-# configure.\n-.NOEXPORT:"}, {"sha": "4d5361b89b6d204606ee9efb917c24ff682cef1f", "filename": "libiberty/configure.ac", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17049f0bbb41269470981caefa6d05fd3c26b47b/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17049f0bbb41269470981caefa6d05fd3c26b47b/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=17049f0bbb41269470981caefa6d05fd3c26b47b", "patch": "@@ -225,6 +225,7 @@ funcs=\"$funcs clock\"\n funcs=\"$funcs ffs\"\n funcs=\"$funcs getcwd\"\n funcs=\"$funcs getpagesize\"\n+funcs=\"$funcs gettimeofday\"\n funcs=\"$funcs index\"\n funcs=\"$funcs insque\"\n funcs=\"$funcs memchr\"\n@@ -272,7 +273,7 @@ checkfuncs=\"$checkfuncs getsysinfo table sysctl\"\n # autoheader happy without adding a bunch of text to acconfig.h.\n if test \"x\" = \"y\"; then\n   AC_CHECK_FUNCS(asprintf atexit basename bcmp bcopy bsearch bzero calloc clock \\\n-  getcwd getpagesize index insque mkstemps memchr memcmp memcpy \\\n+  getcwd getpagesize gettimeofday index insque mkstemps memchr memcmp memcpy \\\n   memmove mempcpy memset putenv random rename rindex sigsetmask \\\n   strcasecmp setenv stpcpy stpncpy strchr strdup strncasecmp strrchr strstr \\\n   strtod strtol strtoul tmpnam vasprintf vfprintf vprintf \\"}, {"sha": "f7e6c5dd377a5eae152a769615f8ce99dfd29d21", "filename": "libiberty/gettimeofday.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17049f0bbb41269470981caefa6d05fd3c26b47b/libiberty%2Fgettimeofday.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17049f0bbb41269470981caefa6d05fd3c26b47b/libiberty%2Fgettimeofday.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fgettimeofday.c?ref=17049f0bbb41269470981caefa6d05fd3c26b47b", "patch": "@@ -0,0 +1,32 @@\n+#include \"config.h\"\n+#include \"libiberty.h\"\n+#ifdef HAVE_TIME_H\n+#include <time.h>\n+#endif\n+#ifdef HAVE_SYS_TIME_H\n+#include <sys/time.h>\n+#endif\n+\n+/* \n+\n+@deftypefn int gettimeofday (struct timeval *@var{tp}, void *@var{tz})\n+\n+Writes the current time to @var{tp}.  This implementation requires\n+that @var{tz} be NULL.  Returns 0 on success, -1 on failure.\n+\n+@end deftypefn\n+\n+*/ \n+\n+int\n+gettimeofday (tp, tz)\n+     struct timeval *tp;\n+     void *tz;\n+{\n+  if (tz)\n+    abort ();\n+  tp->tv_usec = 0;\n+  if (time (&tp->tv_sec) == (time_t) -1)\n+    return -1;\n+  return 0;\n+}"}]}