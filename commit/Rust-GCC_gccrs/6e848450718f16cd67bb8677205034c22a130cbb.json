{"sha": "6e848450718f16cd67bb8677205034c22a130cbb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU4NDg0NTA3MThmMTZjZDY3YmI4Njc3MjA1MDM0YzIyYTEzMGNiYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-05-18T12:50:22Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-05-18T12:50:22Z"}, "message": "(reload_cse_regno_equal_p): Check for value using more than one\nregister on a big endian machine.\n\nFrom-SVN: r14088", "tree": {"sha": "4778dd3432e8f407da1304c0d95df8cbf584e459", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4778dd3432e8f407da1304c0d95df8cbf584e459"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e848450718f16cd67bb8677205034c22a130cbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e848450718f16cd67bb8677205034c22a130cbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e848450718f16cd67bb8677205034c22a130cbb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e848450718f16cd67bb8677205034c22a130cbb/comments", "author": null, "committer": null, "parents": [{"sha": "2ae3dcac7b4c2901bda0ff9b4fc6768309c35f42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae3dcac7b4c2901bda0ff9b4fc6768309c35f42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ae3dcac7b4c2901bda0ff9b4fc6768309c35f42"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "62ac6d71d1faf2eed21412f713f3f2f695b713e2", "filename": "gcc/reload1.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e848450718f16cd67bb8677205034c22a130cbb/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e848450718f16cd67bb8677205034c22a130cbb/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=6e848450718f16cd67bb8677205034c22a130cbb", "patch": "@@ -7980,6 +7980,14 @@ reload_cse_regno_equal_p (regno, val, mode)\n \t&& (GET_CODE (val) != CONST_INT\n \t    || mode == GET_MODE (x)\n \t    || (GET_MODE_SIZE (mode) < GET_MODE_SIZE (GET_MODE (x))\n+\t\t/* On a big endian machine if the value spans more than\n+\t\t   one register then this register holds the high part of\n+\t\t   it and we can't use it.\n+\n+\t\t   ??? We should also compare with the high part of the\n+\t\t   value.  */\n+\t\t&& !(WORDS_BIG_ENDIAN\n+\t\t     && HARD_REGNO_NREGS (regno, GET_MODE (x)) > 1)\n \t\t&& TRULY_NOOP_TRUNCATION (GET_MODE_BITSIZE (mode),\n \t\t\t\t\t  GET_MODE_BITSIZE (GET_MODE (x))))))\n       return 1;"}]}