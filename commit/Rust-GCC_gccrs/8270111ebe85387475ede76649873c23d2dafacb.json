{"sha": "8270111ebe85387475ede76649873c23d2dafacb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI3MDExMWViZTg1Mzg3NDc1ZWRlNzY2NDk4NzNjMjNkMmRhZmFjYg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-07T04:28:00Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-07T04:28:00Z"}, "message": "(partial_ccmode_register_operand, even_relop)\n\n(partial_ccmode_register_operand, even_relop)\n(odd_relop): New functions, for support of CCEVENmode.\n(print_operand, new case '!'): Revert following condition.\n\nFrom-SVN: r6030", "tree": {"sha": "6481858343810b753b70e78efb8c1981961e1eb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6481858343810b753b70e78efb8c1981961e1eb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8270111ebe85387475ede76649873c23d2dafacb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8270111ebe85387475ede76649873c23d2dafacb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8270111ebe85387475ede76649873c23d2dafacb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8270111ebe85387475ede76649873c23d2dafacb/comments", "author": null, "committer": null, "parents": [{"sha": "803c85ca50455f998fa2fdbfa8829f159ed4fef5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/803c85ca50455f998fa2fdbfa8829f159ed4fef5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/803c85ca50455f998fa2fdbfa8829f159ed4fef5"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "695d655ba9d3038e3be9e00ee252ef34786eeb13", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8270111ebe85387475ede76649873c23d2dafacb/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8270111ebe85387475ede76649873c23d2dafacb/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=8270111ebe85387475ede76649873c23d2dafacb", "patch": "@@ -1341,6 +1341,16 @@ real_or_0_operand (op, mode)\n \t      && op == CONST0_RTX (mode)));\n }\n \n+/* Return true if OP is valid to use in the context of logic aritmethic\n+   on condition codes. */\n+\n+int partial_ccmode_register_operand(op,mode)\n+     rtx op;\n+     enum machine_mode mode;\n+{\n+  return (register_operand(op,CCmode) || register_operand(op,CCEVENmode));\n+}\n+\n /* Return true if OP is a relational operator.  */\n \n int\n@@ -1366,6 +1376,40 @@ relop (op, mode)\n     }\n }\n \n+int even_relop(op,mode)\n+     rtx op;\n+     enum machine_mode mode;\n+{\n+  switch (GET_CODE(op))\n+    {\n+    case EQ:\n+    case LT:\n+    case GT:\n+    case LTU:\n+    case GTU:\n+      return 1;\n+    default:\n+      return 0;\n+    }\n+}\n+\n+int odd_relop(op,mode)\n+     rtx op;\n+     enum machine_mode mode;\n+{\n+  switch (GET_CODE(op))\n+    {\n+    case NE:\n+    case LE:\n+    case GE:\n+    case LEU:\n+    case GEU:\n+      return 1;\n+    default:\n+      return 0;\n+    }\n+}\n+\n /* Return true if OP is a relational operator, and is not an unsigned\n    relational operator.  */\n \n@@ -2803,6 +2847,10 @@ print_operand (file, x, code)\n \t     ? \".n\\t\" : \"\\t\", file);\n       return;\n \n+    case '!': /* Reverse the following condition. */\n+      sequencep++;\n+      reversep=1;\n+      return; \n     case 'R': /* reverse the condition of the next print_operand\n \t\t if operand is a label_ref.  */\n       sequencep++;"}]}