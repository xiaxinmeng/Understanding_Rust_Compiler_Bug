{"sha": "9e9f8522652b0c63b552197bc6719fa27b106f74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU5Zjg1MjI2NTJiMGM2M2I1NTIxOTdiYzY3MTlmYTI3YjEwNmY3NA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2007-08-19T23:07:15Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2007-08-19T23:07:15Z"}, "message": "dwarf2out.c (text_section_used, [...]): New.\n\n\t* dwarf2out.c (text_section_used, cold_text_section_used,\n\tcold_text_section, dwarf2out_note_section_used): New.\n\t(dwarf2out_init): Initialize cold_text_section.\n\t(dwarf2out_switch_text_section, dwarf2out_begin_function): Call\n\tdwarf2out_note_section_used.\n\t(size_of_aranges): Only count entry for text section if it was\n\tused.  Count entry for cold text section if it was used.\n\t(output_aranges): Only output entries for text section and cold\n\ttext section if they were used.\n\ntestsuite:\n\t* gcc.dg/debug/dwarf2/aranges-fnsec-1.c: New test.\n\nFrom-SVN: r127627", "tree": {"sha": "245aeeb475ad0d8a9a6b234bd130067c1e1a38ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/245aeeb475ad0d8a9a6b234bd130067c1e1a38ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e9f8522652b0c63b552197bc6719fa27b106f74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e9f8522652b0c63b552197bc6719fa27b106f74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e9f8522652b0c63b552197bc6719fa27b106f74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e9f8522652b0c63b552197bc6719fa27b106f74/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9c06563626f034b29c8ccb35b01632a3fede753", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9c06563626f034b29c8ccb35b01632a3fede753", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9c06563626f034b29c8ccb35b01632a3fede753"}], "stats": {"total": 77, "additions": 71, "deletions": 6}, "files": [{"sha": "ecfbbaa2a079bc1647ca49058400164ac94cdf3f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9f8522652b0c63b552197bc6719fa27b106f74/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9f8522652b0c63b552197bc6719fa27b106f74/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e9f8522652b0c63b552197bc6719fa27b106f74", "patch": "@@ -1,3 +1,15 @@\n+2007-08-19  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* dwarf2out.c (text_section_used, cold_text_section_used,\n+\tcold_text_section, dwarf2out_note_section_used): New.\n+\t(dwarf2out_init): Initialize cold_text_section.\n+\t(dwarf2out_switch_text_section, dwarf2out_begin_function): Call\n+\tdwarf2out_note_section_used.\n+\t(size_of_aranges): Only count entry for text section if it was\n+\tused.  Count entry for cold text section if it was used.\n+\t(output_aranges): Only output entries for text section and cold\n+\ttext section if they were used.\n+\n 2007-08-19  Andrew Pinski  <pinskia@gmail.com>\n \n \t* tree-pretty-print.c (debug_generic_expr): Add a comment about"}, {"sha": "01707371beb6c4db08c14b0ce6fba809e52ad91f", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 43, "deletions": 6, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9f8522652b0c63b552197bc6719fa27b106f74/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9f8522652b0c63b552197bc6719fa27b106f74/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=9e9f8522652b0c63b552197bc6719fa27b106f74", "patch": "@@ -4412,6 +4412,15 @@ static char ranges_section_label[2 * MAX_ARTIFICIAL_LABEL_BYTES];\n #ifndef SEPARATE_LINE_CODE_LABEL\n #define SEPARATE_LINE_CODE_LABEL\t\"LSM\"\n #endif\n+\n+/* Whether the default text and cold text sections have been used at\n+   all.  */\n+\n+static GTY(()) bool text_section_used = false;\n+static GTY(()) bool cold_text_section_used = false;\n+\n+/* The default cold text section.  */\n+static GTY(()) section *cold_text_section;\n \f\n /* We allow a language front-end to designate a function that is to be\n    called to \"demangle\" any name before it is put into a DIE.  */\n@@ -6852,7 +6861,10 @@ size_of_aranges (void)\n   size = DWARF_ARANGES_HEADER_SIZE;\n \n   /* Count the address/length pair for this compilation unit.  */\n-  size += 2 * DWARF2_ADDR_SIZE;\n+  if (text_section_used)\n+    size += 2 * DWARF2_ADDR_SIZE;\n+  if (cold_text_section_used)\n+    size += 2 * DWARF2_ADDR_SIZE;\n   size += 2 * DWARF2_ADDR_SIZE * arange_table_in_use;\n \n   /* Count the two zero words used to terminated the address range table.  */\n@@ -7050,6 +7062,18 @@ add_loc_descr_to_loc_list (dw_loc_list_ref *list_head, dw_loc_descr_ref descr,\n   *d = new_loc_list (descr, begin, end, section, 0);\n }\n \n+/* Note that the current function section is being used for code.  */\n+\n+static void\n+dwarf2out_note_section_used (void)\n+{\n+  section *sec = current_function_section ();\n+  if (sec == text_section)\n+    text_section_used = true;\n+  else if (sec == cold_text_section)\n+    cold_text_section_used = true;\n+}\n+\n static void\n dwarf2out_switch_text_section (void)\n {\n@@ -7068,6 +7092,8 @@ dwarf2out_switch_text_section (void)\n   /* Reset the current label on switching text sections, so that we\n      don't attempt to advance_loc4 between labels in different sections.  */\n   fde->dw_fde_current_label = NULL;\n+\n+  dwarf2out_note_section_used ();\n }\n \n /* Output the location list given to us.  */\n@@ -7553,10 +7579,18 @@ output_aranges (void)\n \tdw2_asm_output_data (2, 0, NULL);\n     }\n \n-  dw2_asm_output_addr (DWARF2_ADDR_SIZE, text_section_label, \"Address\");\n-  dw2_asm_output_delta (DWARF2_ADDR_SIZE, text_end_label,\n-\t\t\ttext_section_label, \"Length\");\n-  if (flag_reorder_blocks_and_partition)\n+  /* It is necessary not to output these entries if the sections were\n+     not used; if the sections were not used, the length will be 0 and\n+     the address may end up as 0 if the section is discarded by ld\n+     --gc-sections, leaving an invalid (0, 0) entry that can be\n+     confused with the terminator.  */\n+  if (text_section_used)\n+    {\n+      dw2_asm_output_addr (DWARF2_ADDR_SIZE, text_section_label, \"Address\");\n+      dw2_asm_output_delta (DWARF2_ADDR_SIZE, text_end_label,\n+\t\t\t    text_section_label, \"Length\");\n+    }\n+  if (cold_text_section_used)\n     {\n       dw2_asm_output_addr (DWARF2_ADDR_SIZE, cold_text_section_label,\n \t\t\t   \"Address\");\n@@ -14071,6 +14105,8 @@ dwarf2out_begin_function (tree fun)\n \n   if (function_section (fun) != text_section)\n     have_multiple_function_sections = true;\n+\n+  dwarf2out_note_section_used ();\n }\n \n /* Output a label to mark the beginning of a source code line entry\n@@ -14343,7 +14379,8 @@ dwarf2out_init (const char *filename ATTRIBUTE_UNUSED)\n   ASM_OUTPUT_LABEL (asm_out_file, text_section_label);\n   if (flag_reorder_blocks_and_partition)\n     {\n-      switch_to_section (unlikely_text_section ());\n+      cold_text_section = unlikely_text_section ();\n+      switch_to_section (cold_text_section);\n       ASM_OUTPUT_LABEL (asm_out_file, cold_text_section_label);\n     }\n }"}, {"sha": "34a5659e2ed0f0c5cf45d28ba9332aa315507abc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9f8522652b0c63b552197bc6719fa27b106f74/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9f8522652b0c63b552197bc6719fa27b106f74/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e9f8522652b0c63b552197bc6719fa27b106f74", "patch": "@@ -1,3 +1,7 @@\n+2007-08-19  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/debug/dwarf2/aranges-fnsec-1.c: New test.\n+\n 2007-08-19  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/interface_abstract_2.f90: New."}, {"sha": "c6aada4611c8186df94ba6366e5984d8ff2739da", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/aranges-fnsec-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e9f8522652b0c63b552197bc6719fa27b106f74/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Faranges-fnsec-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e9f8522652b0c63b552197bc6719fa27b106f74/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Faranges-fnsec-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Faranges-fnsec-1.c?ref=9e9f8522652b0c63b552197bc6719fa27b106f74", "patch": "@@ -0,0 +1,12 @@\n+/* Test that .debug_aranges does not have an entry for the text\n+   section if nothing went in there.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-gdwarf-2 -ffunction-sections\" } */\n+/* { dg-final { scan-assembler-not \"\\\\.Letext0-\\\\.Ltext0\" } } */\n+\n+int\n+f (void)\n+{\n+  return 1;\n+}"}]}