{"sha": "d0d513b5eae70f26c664fa81c2f56e907b66aeff", "node_id": "C_kwDOANBUbNoAKGQwZDUxM2I1ZWFlNzBmMjZjNjY0ZmE4MWMyZjU2ZTkwN2I2NmFlZmY", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-05-12T00:16:36Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-05-12T00:16:36Z"}, "message": "Daily bump.", "tree": {"sha": "089a9bd2ff6d9f285a5f263cd011e27b252f970d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/089a9bd2ff6d9f285a5f263cd011e27b252f970d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0d513b5eae70f26c664fa81c2f56e907b66aeff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0d513b5eae70f26c664fa81c2f56e907b66aeff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0d513b5eae70f26c664fa81c2f56e907b66aeff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0d513b5eae70f26c664fa81c2f56e907b66aeff/comments", "author": null, "committer": null, "parents": [{"sha": "99988b0e8b57b360719ce334fb6d278cb6722bec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99988b0e8b57b360719ce334fb6d278cb6722bec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99988b0e8b57b360719ce334fb6d278cb6722bec"}], "stats": {"total": 533, "additions": 532, "deletions": 1}, "files": [{"sha": "67bb7866852a14cb678184fa493cbf36d0356990", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d513b5eae70f26c664fa81c2f56e907b66aeff/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d513b5eae70f26c664fa81c2f56e907b66aeff/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=d0d513b5eae70f26c664fa81c2f56e907b66aeff", "patch": "@@ -1,3 +1,7 @@\n+2022-05-11  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* MAINTAINERS: Remove myself from DCO section.\n+\n 2022-05-09  Xi Ruoyao  <xry111@xry111.site>\n \n \t* MAINTAINERS: Update my email address."}, {"sha": "7a8a24bd2549e8765e2f4e789de5dae148681775", "filename": "gcc/ChangeLog", "status": "modified", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0d513b5eae70f26c664fa81c2f56e907b66aeff", "patch": "@@ -1,3 +1,108 @@\n+2022-05-11  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* tree.h (TREE_VEC_BEGIN): Define.\n+\t(TREE_VEC_END): Correct 'length' member access.\n+\t(class tree_vec_range): Define.\n+\n+2022-05-11  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md: Use wa instead of <Fv>.\n+\n+2022-05-11  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md: Use d instead of <Ff>.\n+\n+2022-05-11  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/constraints.md (register_constraint \"f\"): Use\n+\tRS6000_CONSTRAINT_d.\n+\t* config/rs6000/rs6000.cc (rs6000_debug_reg_global): Do not handle\n+\tRS6000_CONSTRAINT_f.\n+\t(rs6000_init_hard_regno_mode_ok): Ditto.  Reorder and simplify a bit.\n+\t* config/rs6000/rs6000.h (r6000_reg_class_enum): Delete\n+\tRS6000_CONSTRAINT_d.\n+\n+2022-05-11  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-fold.h (gimple_build): Use variadic template\n+\tfunctions for the gimple_build API forwarders without\n+\tlocation_t argument.\n+\n+2022-05-11  Siddhesh Poyarekar  <siddhesh@gotplt.org>\n+\n+\tPR middle-end/70090\n+\t* asan.cc (initialize_sanitizer_builtins): Register\n+\t__builtin_dynamic_object_size if necessary.\n+\n+2022-05-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/105559\n+\t* cfgrtl.cc (delete_insn_and_edges): Only perform search to BB_END\n+\tfor non-debug insns.\n+\n+2022-05-11  Richard Biener  <rguenther@suse.de>\n+\n+\t* generic-match-head.cc: Include tree-eh.h.\n+\t* match.pd ((cond ...) cmp X): New simplification inspired\n+\tby fold_binary_op_with_conditional_arg.\n+\t(eq/ne (cmp ...) true/false): Likewise.\n+\n+2022-05-11  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* doc/install.texi: Don't document '--with-hsa-runtime',\n+\t'--with-hsa-runtime-include', '--with-hsa-runtime-lib'.\n+\n+2022-05-11  Martin Liska  <mliska@suse.cz>\n+\n+\tPR other/105527\n+\t* doc/install.texi: Document the configure option --with-zstd.\n+\n+2022-05-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* common/config/i386/cpuinfo.h (has_cpu_feature): Directly\n+\tcompute index in cpu_features2.\n+\t(set_cpu_feature): Likewise.\n+\t* config/i386/i386-builtins.cc (fold_builtin_cpu): Also remove\n+\tloop for cpu_features2 and use NOP_EXPRs.\n+\n+2022-05-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR bootstrap/105551\n+\t* opts.cc (finish_options): Also disable var-tracking if\n+\t!DWARF2_DEBUGGING_INFO.\n+\n+2022-05-11  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/104915\n+\t* config/i386/sse.md (*vec_set<mode>_0_zero_extendhi): New\n+\tpre_reload define_insn_and_split.\n+\t(*vec_setv2di_0_zero_extendhi_1): Ditto.\n+\t(*vec_set<mode>_0_zero_extendsi): Ditto.\n+\t(*vec_setv2di_0_zero_extendsi_1): Ditto.\n+\t(ssewvecmode): New mode attr.\n+\t(ssewvecmodelower): Ditto.\n+\t(ssepackmodelower): Ditto.\n+\n+2022-05-11  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* config/rs6000/constraints.md (register constraint v): Use\n+\trs6000_constraints[RS6000_CONSTRAINT_v] instead of ALTIVEC_REGS.\n+\n+2022-05-11  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/105355\n+\t* config/riscv/riscv.opt: Remove Separate from\n+\t-msmall-data-limit=.\n+\t* optc-gen.awk: Report error for the described situation.\n+\t* gcc.cc: Use Separate syntax.\n+\t* opts.cc (gen_command_line_string): Change option name.\n+\n+2022-05-11  Haochen Gui  <guihaoc@gcc.gnu.org>\n+\n+\tPR target/105414\n+\t* match.pd (minmax): Skip constant folding for fmin/fmax when both\n+\targuments are sNaN or one is sNaN and another is NaN.\n+\n 2022-05-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/105528"}, {"sha": "2a18b6434838d49b241a8be9d54138e715a85a09", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=d0d513b5eae70f26c664fa81c2f56e907b66aeff", "patch": "@@ -1 +1 @@\n-20220511\n+20220512"}, {"sha": "99fd9226bb4704659ed65b634fe44f7185d41c1e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 262, "deletions": 0, "changes": 262, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d0d513b5eae70f26c664fa81c2f56e907b66aeff", "patch": "@@ -1,3 +1,265 @@\n+2022-05-11  Yannick Moy  <moy@adacore.com>\n+\n+\t* libgnat/s-imaged.ads: Remove Pure.\n+\t* libgnat/s-imagef.ads: Remove Pure.\n+\t* libgnat/s-imager.ads: Remove Pure.\n+\t* libgnat/s-imageu.adb: Add ghost code.\n+\t* libgnat/s-imageu.ads: Add contracts.\n+\t* libgnat/s-imde128.ads: Remove Pure.\n+\t* libgnat/s-imde32.ads: Remove Pure.\n+\t* libgnat/s-imde64.ads: Remove Pure.\n+\t* libgnat/s-imfi128.ads: Remove Pure.\n+\t* libgnat/s-imfi32.ads: Remove Pure.\n+\t* libgnat/s-imfi64.ads: Remove Pure.\n+\t* libgnat/s-imgflt.ads: Remove Pure.\n+\t* libgnat/s-imglfl.ads: Remove Pure.\n+\t* libgnat/s-imgllf.ads: Remove Pure.\n+\t* libgnat/s-imglllu.ads: Instantiate with ghost subprograms.\n+\t* libgnat/s-imgllu.ads: Instantiate with ghost subprograms.\n+\t* libgnat/s-imgrea.ads: Remove Pure.\n+\t* libgnat/s-imguns.ads: Instantiate with ghost subprograms.\n+\t* libgnat/s-imguti.ads: Remove Pure.\n+\t* libgnat/s-valueu.adb (Prove_Iter_Scan_Based_Number_Ghost,\n+\tProve_Scan_Only_Decimal_Ghost): New lemmas.\n+\t* libgnat/s-valueu.ads (Uns_Option): Do not make type ghost to\n+\tbe able to use it as formal in instantiations.\n+\t(Only_Decimal_Ghost): New ghost query.\n+\t(Prove_Iter_Scan_Based_Number_Ghost,\n+\tProve_Scan_Only_Decimal_Ghost): New lemmas.\n+\t* libgnat/s-widlllu.ads: Adapt to changes in Width_U.\n+\t* libgnat/s-widllu.ads: Adapt to changes in Width_U.\n+\t* libgnat/s-widthu.adb: Change generic function in generic\n+\tpackage in order to complete the postcondition. Tighten the\n+\tupper bound on the result by 1.\n+\t* libgnat/s-widthu.ads: Same.\n+\t* libgnat/s-widuns.ads: Adapt to changes in Width_U.\n+\t* gcc-interface/Make-lang.in: Add dependencies on a-nubinu,\n+\ta-numeri.ads and a-widuns.ads.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* snames.ads-tmpl (Detect_Blocking): Move after\n+\tDefault_Storage_Pool.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma): Remove custom check for\n+\tCompile_Time_Error and Compile_Time_Warning pragmas.\n+\t* snames.ads-tmpl (Compile_Time_Error, Compile_Time_Warning):\n+\tMove beyond Last_Configuration_Pragma_Name.\n+\n+2022-05-11  Marc Poulhi\u00e8s  <poulhies@adacore.com>\n+\n+\t* libgnat/a-direct.adb (Start_Search_Internal): Use parentheses\n+\tfor record aggregate.\n+\t* libgnat/a-stbubo.adb (Get_UTF_8): Likewise.\n+\t* libgnat/a-stbuun.adb (Get_UTF_8): Likewise.\n+\t* libgnat/a-stzbou.ads (Null_Bounded_Wide_Wide_String):\n+\tLikewise.\n+\t* libgnat/a-swmwco.ads (Lower_Case_Mapping, Basic_Mapping):\n+\tLikewise.\n+\t* libgnat/a-szmzco.ads (Lower_Case_Mapping, Basic_Mapping):\n+\tLikewise.\n+\t* libgnat/s-statxd.adb (Fields): Likewise.\n+\t* libgnat/s-stausa.adb (Initialize): Likewise.\n+\t* sem_aggr.adb (Resolve_Record_Aggregate): Reject aggregates\n+\tusing brackets.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* doc/gnat_rm/implementation_defined_pragmas.rst,\n+\tdoc/gnat_rm/implementation_of_specific_ada_features.rst,\n+\tdoc/gnat_rm/representation_clauses_and_pragmas.rst,\n+\tdoc/gnat_rm/the_gnat_library.rst,\n+\tdoc/gnat_rm/the_implementation_of_standard_i_o.rst,\n+\tdoc/gnat_ugn/building_executable_programs_with_gnat.rst,\n+\tdoc/gnat_ugn/gnat_and_program_execution.rst,\n+\tdoc/gnat_ugn/platform_specific_information.rst: Fix unbalanced\n+\tparentheses and brackets.\n+\t* sem_prag.adb (pragma Obsolescent): Likewise.\n+\t* gnat_rm.texi, gnat_ugn.texi: Regenerate.\n+\n+2022-05-11  Marc Poulhi\u00e8s  <poulhies@adacore.com>\n+\n+\t* libgnat/s-rident.ads (Restriction_Id): Add\n+\tNo_Local_Tagged_Types, update comment for adding new GNAT\n+\tspecific restriction.\n+\t* restrict.ads (Implementation_Restriction): Add\n+\tNo_Local_Tagged_Types.\n+\t* sem_ch3.adb (Analyze_Full_Type_Declaration): Add check for\n+\ttagged type at library level.\n+\t* doc/gnat_rm/standard_and_implementation_defined_restrictions.rst:\n+\tAdd No_Local_Tagged_Types description.\n+\t* gnat_rm.texi: Regenerate.\n+\n+2022-05-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_User_Defined_Binary_Op): Use the base type\n+\tin the interpretation of the operator.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_case.adb (Free_Value_Sets): Fix style in body header box.\n+\t* sem_ch12.adb (Build_Subprogram_Wrappers): Likewise.\n+\t* sem_util.adb (Statically_Denotes_Entity): Likewise.\n+\n+2022-05-11  Etienne Servais  <servais@adacore.com>\n+\n+\t* sem_ch3.adb (Constrain_Access): Call Desig_Subtype in each if\n+\tbranch to avoid calling it twice.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_warn.adb (Find_Var): Detect all operators; replace\n+\t\"condition\" to \"expression\" in comments, because when this\n+\troutine is called recursively it no longer examines the\n+\tcondition.\n+\t(Is_Suspicious_Function_Name): Reduce scope of a local variable\n+\tto avoid shadowing with a parameter of a nested\n+\tSubstring_Present function.\n+\n+2022-05-11  Yannick Moy  <moy@adacore.com>\n+\n+\t* libgnat/s-aridou.adb (Double_Divide, Scaled_Divide): Add\n+\tintermediate assertions.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* libgnat/s-rident.ads (Implementation_Restriction): Remove\n+\tNo_Dynamic_Attachment, No_Implementation_Attributes,\n+\tNo_Implementation_Pragmas, No_Local_Protected_Objects,\n+\tNo_Protected_Type_Allocators, No_Relative_Delay,\n+\tNo_Requeue_Statements, No_Select_Statements,\n+\tNo_Task_Termination, Pure_Barriers and Simple_Barriers; add\n+\tNo_Dynamic_Sized_Objects,\n+\tNo_Implicit_Protected_Object_Allocations,\n+\tNo_Implicit_Task_Allocations, No_Task_At_Interrupt_Priority and\n+\tStatic_Dispatch_Tables; sort alphabetically.\n+\t* restrict.ads (Restriction_Id): Change Pure_Barriers and\n+\tNo_Task_Termination from GNAT to Ada restrictions.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* exp_atag.adb, lib-util.ads, libgnat/g-decstr.adb,\n+\tlibgnat/g-exptty.adb, libgnat/g-socpol.adb,\n+\tlibgnat/s-strhas.adb: Fix headers.\n+\n+2022-05-11  Joao Azevedo  <azevedo@adacore.com>\n+\n+\t* doc/gnat_ugn/platform_specific_information.rst: Add\n+\tglibc-locale-base-32bit as a dependency in SUSE distributions.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* doc/gnat_ugn/gnat_and_program_execution.rst,\n+\tdoc/gnat_ugn/gnat_utility_programs.rst,\n+\tdoc/gnat_ugn/inline_assembler.rst: Fix typos and formatting\n+\tglitches.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* doc/gnat_ugn/elaboration_order_handling_in_gnat.rst: Change\n+\tblocks from plain code to Ada.\n+\n+2022-05-11  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_Assign_With_Target_Names): Bypass the temp\n+\tobject approach in the case where the type of the LHS is\n+\tcontrolled or has controlled subcomponents (Needs_Finalization\n+\tis True), and use the procedure approach instead.\n+\n+2022-05-11  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_ch3.adb (Get_Discr_Value): Copy the result. Otherwise, the\n+\t\"tree\" can be malformed (a DAG, not a tree) because\n+\tGet_Discr_Value could be returning some subtree already attached\n+\tto the tree.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Statements): Only clear Reachable flag on\n+\tproper label entities.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* doc/gnat_rm/implementation_defined_characteristics.rst: Add\n+\ttabularcolums directive, as explained in documentation of Sphinx\n+\tand tabular LaTeX package.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* doc/gnat_rm/implementation_defined_aspects.rst,\n+\tdoc/gnat_rm/implementation_defined_pragmas.rst: Remove extra\n+\twhitespace.\n+\t* gnat_rm.texi: Regenerate.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* doc/gnat_rm/implementation_defined_characteristics.rst: Remove\n+\textra indent in continuation lines; indent both descriptions of\n+\tMax_Picture_Length.\n+\t* gnat_rm.texi: Regenerate.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* doc/gnat_rm/implementation_defined_pragmas.rst (Pragma\n+\tEliminate): Fix markup.\n+\t* gnat_rm.texi: Regenerate.\n+\n+2022-05-11  Johannes Kliemann  <kliemann@adacore.com>\n+\n+\t* libgnat/g-sthcso.adb: Suppress warning about unneeded use type\n+\tclause.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Statements): Only clear Reachable flag on\n+\tproper label entities.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* doc/gnat_rm/implementation_defined_pragmas.rst (Pragma\n+\tAda_2022): Copy description from pragma Ada 2012 and adapt.\n+\t* doc/gnat_ugn/the_gnat_compilation_model.rst (Configuration\n+\tPragmas): List pragma Ada 2022.\n+\t* gnat_rm.texi, gnat_ugn.texi: Regenerate.\n+\n+2022-05-11  Steve Baird  <baird@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause): Replace\n+\tthe existing check for an address specification for an object of\n+\ta class-wide type with a more general check which rejects either\n+\tthe class-wide case or the case where the FE would (if the\n+\taddress specification were accepted) build a malformed\n+\ttree (specifically, an object renaming declaration with a\n+\tspecified address). In the case where the check fails, reject\n+\tthe construct at compile time instead of generating an\n+\tunconditional raise of Program_Error.\n+\t* doc/gnat_rm/representation_clauses_and_pragmas.rst: Update\n+\tdocumentation to reflect these changes.\n+\t* gnat_rm.texi: Regenerate.\n+\n+2022-05-11  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* gen_il-gen-gen_entities.adb (Reachable): Move from\n+\tRoot_Entity_Type to E_Label.\n+\n+2022-05-11  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* exp_ch3.adb (Expand_N_Object_Declaration): Guard\n+\tSet_Is_Known_Valid with Safe_To_Capture_Value.\n+\n+2022-05-11  Bob Duff  <duff@adacore.com>\n+\n+\t* repinfo.adb (List_Object_Info): Do not try to print values\n+\tthat have not been computed (and so are No_Uint).\n+\t(Rep_Not_Constant): Reverse sense and change name to\n+\tCompile_Time_Known_Rep. This makes the code at call sites a\n+\tlittle more readable. Simplify code to a single return\n+\tstatement.\n+\n 2022-05-10  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-interface/decl.cc (compare_field_bitpos): Use void *"}, {"sha": "9f8c381d8c1b69da16bd704edffd7d6c1f004c1a", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=d0d513b5eae70f26c664fa81c2f56e907b66aeff", "patch": "@@ -1,3 +1,21 @@\n+2022-05-11  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* checker-path.cc (state_change_event::get_desc): Call maybe_free\n+\ton label_text temporaries.\n+\t* diagnostic-manager.cc\n+\t(diagnostic_manager::prune_for_sm_diagnostic): Likewise.\n+\t* engine.cc (exploded_graph::~exploded_graph): Fix leak of\n+\tm_per_point_data and m_per_call_string_data values.  Simplify\n+\tcleanup of m_per_function_stats and m_per_point_data values.\n+\t(feasibility_state::maybe_update_for_edge): Fix leak of result of\n+\tsuperedge::get_description.\n+\t* region-model-manager.cc\n+\t(region_model_manager::~region_model_manager): Move cleanup of\n+\tm_setjmp_values to match the ordering of the fields within\n+\tregion_model_manager.  Fix leak of values within\n+\tm_repeated_values_map, m_bits_within_values_map,\n+\tm_asm_output_values_map, and m_const_fn_result_values_map.\n+\n 2022-04-28  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/105285"}, {"sha": "88c92d0742ce3ca4afd80a9d00006169ffbda1a9", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=d0d513b5eae70f26c664fa81c2f56e907b66aeff", "patch": "@@ -1,3 +1,9 @@\n+2022-05-11  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/105355\n+\t* c-opts.cc (c_common_handle_option): Change option name.\n+\t* c.opt: Remove Joined and use Separate option.\n+\n 2022-05-09  Alex Coplan  <alex.coplan@arm.com>\n \n \t* c-common.h (get_dump_info): Delete."}, {"sha": "5c1ee2f928a89d7c30013f9efaf1a604c33ecb81", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d0d513b5eae70f26c664fa81c2f56e907b66aeff", "patch": "@@ -1,3 +1,59 @@\n+2022-05-11  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* constraint.cc (tsubst_parameter_mapping): Convert loop over\n+\tTREE_VEC into a range-based for loop using tree_vec_range.\n+\t* pt.cc (iterative_hash_template_arg): Likewise.\n+\t(template_parms_level_to_args): Likewise.\n+\t(deducible_template_args): Likewise.\n+\t(check_undeduced_parms): Likewise.\n+\t(dependent_type_p_r): Likewise.\n+\t(value_dependent_expression_p) <case NONTYPE_ARGUMENT_PACK>:\n+\tLikewise.\n+\t(dependent_template_arg_p): Likewise.\n+\t* tree.cc (cp_walk_subtrees) <case NONTYPE_ARGUMENT_PACK>:\n+\tLikewise.\n+\n+2022-05-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105541\n+\t* cp-tree.h (TMPL_ARGS_DEPTH): 0 for null args.\n+\t* parser.cc (cp_parser_enclosed_template_argument_list):\n+\tUse 0-length TREE_VEC for <>.\n+\n+2022-05-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR bootstrap/105567\n+\t* typeck.cc (check_return_expr): Don't mess with ctor return value\n+\twhile parsing a template.\n+\n+2022-05-11  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* cp-tree.h (DECL_MODULE_ATTACH_P): New.\n+\t(struct lang_decl_base): Add module_attach_p flag.\n+\t* decl.cc (duplicate_decls): Rework module redeclaration\n+\tchecking.\n+\t* module.cc (trees_out::lang_decl_bools): Write attach flag.\n+\t(trees_in::lang_decl_bools): ... and read it back.\n+\t(trees_out::decl_value): Rework module attachment handling.\n+\t(trees_in::decl_value): Rename local var to reflect meaning.\n+\t(trees_in::key_mergeable): Likewise.\n+\t(get_originating_module): Use DECL_MODULE_ATTACH_P.  No need\n+\tto special-case mangling.\n+\t(module_may_redeclare): Reimplement.\n+\t(set_originating_module): Deal with attachment.\n+\t* name-lookup.cc (maybe_record_mergeable_decl): Deal with\n+\tattachment.\n+\t(mergeable_namespace_slots): Likewise.\n+\t(do_nonmember_using_decl): Likewise.\n+\t* name-lookup.h (mergeable_namespace_slots): Adjust parm\n+\tmeaning.\n+\t* ptree.cc (cxx_print_decl): Adjust purview & attach printing.\n+\n+2022-05-11  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/105355\n+\t* lang-specs.h: Use Separate syntax.\n+\n 2022-05-10  Patrick Palka  <ppalka@redhat.com>\n \n \t* coroutines.cc (instantiate_coro_traits): Adjust accordingly."}, {"sha": "395fad9c758e3399ea3899f11a2353c86d17f0e4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d0d513b5eae70f26c664fa81c2f56e907b66aeff", "patch": "@@ -1,3 +1,10 @@\n+2022-05-11  Harald Anlauf  <anlauf@gmx.de>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/105230\n+\t* expr.cc (find_array_section): Correct logic to avoid NULL\n+\tpointer dereference on invalid array section.\n+\n 2022-05-10  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/105526"}, {"sha": "ba92c4ec7c5677220658da59cb0f3eb55f0d9bf3", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=d0d513b5eae70f26c664fa81c2f56e907b66aeff", "patch": "@@ -1,3 +1,8 @@\n+2022-05-11  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/105355\n+\t* lang-specs.h: Use Separate syntax.\n+\n 2022-05-03  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* objc-next-runtime-abi-02.cc (next_runtime_abi_02_protocol_decl): Do"}, {"sha": "d50c3d82a0ce9cc87dd2bbe5fa73fd631620b286", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=d0d513b5eae70f26c664fa81c2f56e907b66aeff", "patch": "@@ -1,3 +1,8 @@\n+2022-05-11  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/105355\n+\t* lang-specs.h: Use Separate syntax.\n+\n 2022-01-17  Martin Liska  <mliska@suse.cz>\n \n \t* Make-lang.in: Rename .c names to .cc."}, {"sha": "e33db7baf2d2607bca562c13212c8e19bd649792", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d513b5eae70f26c664fa81c2f56e907b66aeff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d0d513b5eae70f26c664fa81c2f56e907b66aeff", "patch": "@@ -1,3 +1,34 @@\n+2022-05-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105541\n+\t* g++.dg/cpp2a/lambda-requires1.C: New test.\n+\n+2022-05-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR bootstrap/105567\n+\t* g++.dg/template/ctor10.C: New test.\n+\n+2022-05-11  Harald Anlauf  <anlauf@gmx.de>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/105230\n+\t* gfortran.dg/pr105230.f90: New test.\n+\n+2022-05-11  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/pr61839_1.c: Adjust.\n+\t* gcc.dg/tree-ssa/vrp24.c: Likewise.\n+\n+2022-05-11  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr104915-vmovd.c: New test.\n+\t* gcc.target/i386/pr104915-vmovw.c: New test.\n+\n+2022-05-11  Haochen Gui  <guihaoc@gcc.gnu.org>\n+\n+\tPR target/105414\n+\t* gcc.dg/pr105414.c: New.\n+\n 2022-05-10  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/105526"}, {"sha": "1e9cbf70bd1c72f2ec98b80d8d1479c7e0b7a996", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0d513b5eae70f26c664fa81c2f56e907b66aeff/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0d513b5eae70f26c664fa81c2f56e907b66aeff/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=d0d513b5eae70f26c664fa81c2f56e907b66aeff", "patch": "@@ -1,3 +1,35 @@\n+2022-05-11  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* plugin/configfrag.ac: Remove '--with-hsa-runtime',\n+\t'--with-hsa-runtime-include', '--with-hsa-runtime-lib' processing.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Likewise.\n+\t* testsuite/Makefile.in: Likewise.\n+\n+2022-05-11  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* plugin/Makefrag.am (libgomp_plugin_gcn_la_CPPFLAGS): Don't\n+\tconsider 'PLUGIN_GCN_CPPFLAGS'.\n+\t(libgomp_plugin_gcn_la_LDFLAGS): Don't consider\n+\t'PLUGIN_GCN_LDFLAGS'.\n+\t* plugin/configfrag.ac (PLUGIN_GCN_CPPFLAGS, PLUGIN_GCN_LDFLAGS):\n+\tRemove.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Likewise.\n+\t* testsuite/Makefile.in: Likewise.\n+\n+2022-05-11  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* plugin/configfrag.ac (HSA_RUNTIME_CPPFLAGS)\n+\t(HSA_RUNTIME_LDFLAGS): Remove.\n+\t* configure: Regenerate.\n+\n+2022-05-11  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/lib/libgomp.exp (libgomp_init): Don't\n+\t'append always_ld_library_path \":$hsa_runtime_lib\"'.\n+\t* testsuite/libgomp-test-support.exp.in (hsa_runtime_lib): Don't set.\n+\n 2022-05-10  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* testsuite/libgomp.fortran/use_device_addr-5.f90: Fix up"}]}