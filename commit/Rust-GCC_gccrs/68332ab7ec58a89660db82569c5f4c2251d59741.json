{"sha": "68332ab7ec58a89660db82569c5f4c2251d59741", "node_id": "C_kwDOANBUbNoAKDY4MzMyYWI3ZWM1OGE4OTY2MGRiODI1NjljNWY0YzIyNTFkNTk3NDE", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-11-28T02:16:50Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-11-29T00:42:45Z"}, "message": "Fix PR 19089: Environment variable TMP may yield gcc: abort\n\nEven though I cannot reproduce the ICE any more, this is still\na bug. We check already to see if we can access the directory\nbut never check to see if the path is actually a directory.\n\nThis adds the check and now we reject the file as not usable\nas a tmp directory.\n\nOK? Bootstrapped and tested on x86_64-linux-gnu with no regressions.\n\nlibiberty/ChangeLog:\n\n\t* make-temp-file.c (try_dir): Check to see if the dir\n\tis actually a directory.", "tree": {"sha": "285de25611e1138bab8aa0838887da4d9654b2d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/285de25611e1138bab8aa0838887da4d9654b2d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68332ab7ec58a89660db82569c5f4c2251d59741", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68332ab7ec58a89660db82569c5f4c2251d59741", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68332ab7ec58a89660db82569c5f4c2251d59741", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68332ab7ec58a89660db82569c5f4c2251d59741/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f0dd172bc63555457cda42c31e9b19f280dd40a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f0dd172bc63555457cda42c31e9b19f280dd40a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f0dd172bc63555457cda42c31e9b19f280dd40a"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "948f10ae0587d396b4c6419cac94e5e6640bec7e", "filename": "libiberty/make-temp-file.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68332ab7ec58a89660db82569c5f4c2251d59741/libiberty%2Fmake-temp-file.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68332ab7ec58a89660db82569c5f4c2251d59741/libiberty%2Fmake-temp-file.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fmake-temp-file.c?ref=68332ab7ec58a89660db82569c5f4c2251d59741", "patch": "@@ -39,6 +39,10 @@ Boston, MA 02110-1301, USA.  */\n #if defined(_WIN32) && !defined(__CYGWIN__)\n #include <windows.h>\n #endif\n+#if HAVE_SYS_STAT_H\n+#include <sys/stat.h>\n+#endif\n+\n \n #ifndef R_OK\n #define R_OK 4\n@@ -76,7 +80,17 @@ try_dir (const char *dir, const char *base)\n     return base;\n   if (dir != 0\n       && access (dir, R_OK | W_OK | X_OK) == 0)\n-    return dir;\n+    {\n+      /* Check to make sure dir is actually a directory. */\n+#ifdef S_ISDIR\n+      struct stat s;\n+      if (stat (dir, &s))\n+\treturn NULL;\n+      if (!S_ISDIR (s.st_mode))\n+\treturn NULL;\n+#endif\n+      return dir;\n+    }\n   return 0;\n }\n "}]}