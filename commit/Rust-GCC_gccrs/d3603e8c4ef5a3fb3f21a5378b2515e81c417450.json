{"sha": "d3603e8c4ef5a3fb3f21a5378b2515e81c417450", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM2MDNlOGM0ZWY1YTNmYjNmMjFhNTM3OGIyNTE1ZTgxYzQxNzQ1MA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2006-03-31T00:27:51Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2006-03-31T00:27:51Z"}, "message": "rs6000.c (rs6000_explicit_options): Add ieee.\n\n\t* config/rs6000/rs6000.c (rs6000_explicit_options): Add ieee.\n\t(rs6000_override_options): Use it.\n\t(rs6000_handle_option): Set it.  Set rs6000_explicit_options.abi\n\tonly for -mabi=spe/no-spe and -mabi=altivec.\n\nFrom-SVN: r112555", "tree": {"sha": "19b2814f91d5e30db2f858c3e704a3bfe76851d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19b2814f91d5e30db2f858c3e704a3bfe76851d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3603e8c4ef5a3fb3f21a5378b2515e81c417450", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3603e8c4ef5a3fb3f21a5378b2515e81c417450", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3603e8c4ef5a3fb3f21a5378b2515e81c417450", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3603e8c4ef5a3fb3f21a5378b2515e81c417450/comments", "author": null, "committer": null, "parents": [{"sha": "82107c9b290b3e5c9046002e58becf91bee55153", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82107c9b290b3e5c9046002e58becf91bee55153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82107c9b290b3e5c9046002e58becf91bee55153"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "43acab710a13788383cf0943480bf43679f8607f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3603e8c4ef5a3fb3f21a5378b2515e81c417450/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3603e8c4ef5a3fb3f21a5378b2515e81c417450/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3603e8c4ef5a3fb3f21a5378b2515e81c417450", "patch": "@@ -1,3 +1,10 @@\n+2006-03-31  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/rs6000.c (rs6000_explicit_options): Add ieee.\n+\t(rs6000_override_options): Use it.\n+\t(rs6000_handle_option): Set it.  Set rs6000_explicit_options.abi\n+\tonly for -mabi=spe/no-spe and -mabi=altivec.\n+\n 2006-03-30  Geoffrey Keating  <geoffk@apple.com>\n \n \t* config/darwin.h (LINK_COMMAND_SPEC): Don't try to protect %S with"}, {"sha": "9d303c0a97b7c435e6597d6e4c52f0e1ddbe677f", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3603e8c4ef5a3fb3f21a5378b2515e81c417450/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3603e8c4ef5a3fb3f21a5378b2515e81c417450/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d3603e8c4ef5a3fb3f21a5378b2515e81c417450", "patch": "@@ -249,11 +249,12 @@ int rs6000_alignment_flags;\n struct {\n   bool aix_struct_ret;\t\t/* True if -maix-struct-ret was used.  */\n   bool alignment;\t\t/* True if -malign- was used.  */\n-  bool abi;\t\t\t/* True if -mabi= was used.  */\n+  bool abi;\t\t\t/* True if -mabi=spe/nospe was used.  */\n   bool spe;\t\t\t/* True if -mspe= was used.  */\n   bool float_gprs;\t\t/* True if -mfloat-gprs= was used.  */\n   bool isel;\t\t\t/* True if -misel was used. */\n   bool long_double;\t        /* True if -mlong-double- was used.  */\n+  bool ieee;\t\t\t/* True if -mabi=ieee/ibmlongdouble used.  */\n } rs6000_explicit_options;\n \n struct builtin_description\n@@ -1322,7 +1323,7 @@ rs6000_override_options (const char *default_cpu)\n     rs6000_long_double_type_size = RS6000_DEFAULT_LONG_DOUBLE_SIZE;\n \n #ifndef POWERPC_LINUX\n-  if (!rs6000_explicit_options.abi)\n+  if (!rs6000_explicit_options.ieee)\n     rs6000_ieeequad = 1;\n #endif\n \n@@ -1777,23 +1778,31 @@ rs6000_handle_option (size_t code, const char *arg, int value)\n #endif\n \n     case OPT_mabi_:\n-      rs6000_explicit_options.abi = true;\n       if (!strcmp (arg, \"altivec\"))\n \t{\n+\t  rs6000_explicit_options.abi = true;\n \t  rs6000_altivec_abi = 1;\n \t  rs6000_spe_abi = 0;\n \t}\n       else if (! strcmp (arg, \"no-altivec\"))\n-\trs6000_altivec_abi = 0;\n+\t{\n+\t  /* ??? Don't set rs6000_explicit_options.abi here, to allow\n+\t     the default for rs6000_spe_abi to be chosen later.  */\n+\t  rs6000_altivec_abi = 0;\n+\t}\n       else if (! strcmp (arg, \"spe\"))\n \t{\n+\t  rs6000_explicit_options.abi = true;\n \t  rs6000_spe_abi = 1;\n \t  rs6000_altivec_abi = 0;\n \t  if (!TARGET_SPE_ABI)\n \t    error (\"not configured for ABI: '%s'\", arg);\n \t}\n       else if (! strcmp (arg, \"no-spe\"))\n-\trs6000_spe_abi = 0;\n+\t{\n+\t  rs6000_explicit_options.abi = true;\n+\t  rs6000_spe_abi = 0;\n+\t}\n \n       /* These are here for testing during development only, do not\n \t document in the manual please.  */\n@@ -1810,11 +1819,13 @@ rs6000_handle_option (size_t code, const char *arg, int value)\n \n       else if (! strcmp (arg, \"ibmlongdouble\"))\n \t{\n+\t  rs6000_explicit_options.ieee = true;\n \t  rs6000_ieeequad = 0;\n \t  warning (0, \"Using IBM extended precision long double\");\n \t}\n       else if (! strcmp (arg, \"ieeelongdouble\"))\n \t{\n+\t  rs6000_explicit_options.ieee = true;\n \t  rs6000_ieeequad = 1;\n \t  warning (0, \"Using IEEE extended precision long double\");\n \t}"}]}