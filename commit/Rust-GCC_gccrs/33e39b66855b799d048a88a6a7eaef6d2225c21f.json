{"sha": "33e39b66855b799d048a88a6a7eaef6d2225c21f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNlMzliNjY4NTViNzk5ZDA0OGE4OGE2YTdlYWVmNmQyMjI1YzIxZg==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@redhat.com", "date": "2011-01-21T13:18:23Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2011-01-21T13:18:23Z"}, "message": "configure.ac: Use AS_HELP_STRING throughout.\n\n* configure.ac: Use AS_HELP_STRING throughout.\n* configure: Regenerate.\n\nFrom-SVN: r169088", "tree": {"sha": "a3ceaaffcc7ad791653ba7bad2c0b4886620f7a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3ceaaffcc7ad791653ba7bad2c0b4886620f7a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33e39b66855b799d048a88a6a7eaef6d2225c21f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33e39b66855b799d048a88a6a7eaef6d2225c21f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33e39b66855b799d048a88a6a7eaef6d2225c21f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33e39b66855b799d048a88a6a7eaef6d2225c21f/comments", "author": null, "committer": null, "parents": [{"sha": "5a8ab623a93d419b16ad34f2f65c24fd310ce918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a8ab623a93d419b16ad34f2f65c24fd310ce918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a8ab623a93d419b16ad34f2f65c24fd310ce918"}], "stats": {"total": 256, "additions": 152, "deletions": 104}, "files": [{"sha": "02fb6d6d86eb94002d466f4b5451ef8715fe61a2", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33e39b66855b799d048a88a6a7eaef6d2225c21f/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33e39b66855b799d048a88a6a7eaef6d2225c21f/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=33e39b66855b799d048a88a6a7eaef6d2225c21f", "patch": "@@ -1,3 +1,8 @@\n+2011-01-21  Andreas Schwab  <schwab@redhat.com>\n+\n+\t* configure.ac: Use AS_HELP_STRING throughout.\n+\t* configure: Regenerate.\n+\n 2011-01-18  Jie Zhang  <jie.zhang@analog.com>\n \n \t* configure.ac (bfin-*-*): Remove gdb from noconfigdirs."}, {"sha": "bc408db83711607d64e8c8c2033335357785bc90", "filename": "configure", "status": "modified", "additions": 45, "deletions": 38, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33e39b66855b799d048a88a6a7eaef6d2225c21f/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33e39b66855b799d048a88a6a7eaef6d2225c21f/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=33e39b66855b799d048a88a6a7eaef6d2225c21f", "patch": "@@ -1454,69 +1454,76 @@ Optional Features:\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n   --enable-gold[=ARG]     build gold [ARG={default,yes,no}]\n-  --enable-ld[=ARG]     build ld [ARG={default,yes,no}]\n+  --enable-ld[=ARG]       build ld [ARG={default,yes,no}]\n   --disable-libquadmath   do not build libquadmath directory\n   --disable-libquadmath-support\n                           disable libquadmath support for Fortran\n   --enable-libada         build libada directory\n   --enable-libssp         build libssp directory\n   --enable-build-with-cxx build with C++ compiler instead of C compiler\n-  --disable-ppl-version-check    disable check for PPL version\n+  --disable-ppl-version-check\n+                          disable check for PPL version\n   --enable-cloog-backend[=BACKEND]\n                           set the CLooG BACKEND used to either isl, ppl or\n                           ppl-legacy (default)\n   --disable-cloog-version-check\n                           disable check for CLooG version\n   --enable-lto            enable link time optimization support\n-  --enable-stage1-languages[=all]   choose additional languages to build during\n-                          stage1.  Mostly useful for compiler development.\n-  --enable-objc-gc        enable use of Boehm's garbage collector with the\n-                          GNU Objective-C runtime\n+  --enable-stage1-languages[=all]\n+                          choose additional languages to build during stage1.\n+                          Mostly useful for compiler development\n+  --enable-objc-gc        enable use of Boehm's garbage collector with the GNU\n+                          Objective-C runtime\n   --enable-bootstrap      enable bootstrapping [yes if native build]\n   --enable-serial-[{host,target,build}-]configure\n-                          force sequential configuration of\n-                          sub-packages for the host, target or build\n-                          machine, or all sub-packages\n-  --enable-maintainer-mode enable make rules and dependencies not useful\n-                          (and sometimes confusing) to the casual installer\n-  --enable-stage1-checking[=all]   choose additional checking for stage1\n-                          of the compiler\n+                          force sequential configuration of sub-packages for\n+                          the host, target or build machine, or all\n+                          sub-packages\n+  --enable-maintainer-mode\n+                          enable make rules and dependencies not useful (and\n+                          sometimes confusing) to the casual installer\n+  --enable-stage1-checking[=all]\n+                          choose additional checking for stage1 of the\n+                          compiler\n   --enable-werror         enable -Werror in bootstrap stage2 and later\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n   --with-build-libsubdir=DIR  Directory where to find libraries for build system\n-  --with-mpc=PATH        specify prefix directory for installed MPC package.\n-                          Equivalent to --with-mpc-include=PATH/include\n-                          plus --with-mpc-lib=PATH/lib\n-  --with-mpc-include=PATH\n-                          specify directory for installed MPC include files\n-  --with-mpc-lib=PATH    specify directory for the installed MPC library\n+  --with-mpc=PATH         specify prefix directory for installed MPC package.\n+                          Equivalent to --with-mpc-include=PATH/include plus\n+                          --with-mpc-lib=PATH/lib\n+  --with-mpc-include=PATH specify directory for installed MPC include files\n+  --with-mpc-lib=PATH     specify directory for the installed MPC library\n   --with-mpfr-dir=PATH    this option has been REMOVED\n   --with-mpfr=PATH        specify prefix directory for installed MPFR package.\n-                          Equivalent to --with-mpfr-include=PATH/include\n-                          plus --with-mpfr-lib=PATH/lib\n+                          Equivalent to --with-mpfr-include=PATH/include plus\n+                          --with-mpfr-lib=PATH/lib\n   --with-mpfr-include=PATH\n                           specify directory for installed MPFR include files\n   --with-mpfr-lib=PATH    specify directory for the installed MPFR library\n   --with-gmp-dir=PATH     this option has been REMOVED\n-  --with-gmp=PATH         specify prefix directory for the installed GMP package.\n-                          Equivalent to --with-gmp-include=PATH/include\n-                          plus --with-gmp-lib=PATH/lib\n+  --with-gmp=PATH         specify prefix directory for the installed GMP\n+                          package. Equivalent to\n+                          --with-gmp-include=PATH/include plus\n+                          --with-gmp-lib=PATH/lib\n   --with-gmp-include=PATH specify directory for installed GMP include files\n   --with-gmp-lib=PATH     specify directory for the installed GMP library\n-  --with-host-libstdcxx=L Use linker arguments L to link with libstdc++\n-                          when linking with PPL\n-  --with-stage1-ldflags=FLAGS Linker flags for stage1\n-  -with-stage1-libs=LIBS      Libraries for stage1\n-  --with-boot-libs=LIBS     Libraries for stage2 and later\n-  --with-boot-ldflags=FLAGS Linker flags for stage2 and later\n-  --with-ppl=PATH         Specify prefix directory for the installed PPL package\n-                          Equivalent to --with-ppl-include=PATH/include\n-                          plus --with-ppl-lib=PATH/lib\n-  --with-ppl-include=PATH Specify directory for installed PPL include files\n-  --with-ppl-lib=PATH     Specify the directory for the installed PPL library\n+  --with-host-libstdcxx=L use linker arguments L to link with libstdc++ when\n+                          linking with PPL\n+  --with-stage1-ldflags=FLAGS\n+                          linker flags for stage1\n+  --with-stage1-libs=LIBS libraries for stage1\n+  --with-boot-libs=LIBS   libraries for stage2 and later\n+  --with-boot-ldflags=FLAGS\n+                          linker flags for stage2 and later\n+  --with-ppl=PATH         specify prefix directory for the installed PPL\n+                          package. Equivalent to\n+                          --with-ppl-include=PATH/include plus\n+                          --with-ppl-lib=PATH/lib\n+  --with-ppl-include=PATH specify directory for installed PPL include files\n+  --with-ppl-lib=PATH     specify directory for the installed PPL library\n   --with-cloog=PATH       Specify prefix directory for the installed CLooG-PPL\n                           package. Equivalent to\n                           --with-cloog-include=PATH/include plus\n@@ -1528,9 +1535,9 @@ Optional Packages:\n   --with-build-sysroot=SYSROOT\n                           use sysroot as the system root during the build\n   --with-debug-prefix-map='A=B C=D ...'\n-                             map A to B, C to D ... in debug information\n---with-build-config='NAME NAME2...'\n-                          Use config/NAME.mk build configuration\n+                          map A to B, C to D ... in debug information\n+  --with-build-config='NAME NAME2...'\n+                          use config/NAME.mk build configuration\n   --with-build-time-tools=PATH\n                           use given path to find target tools during the build\n "}, {"sha": "1227054fb5b695f928de7bc13a9d69fdb61437f4", "filename": "configure.ac", "status": "modified", "additions": 102, "deletions": 66, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33e39b66855b799d048a88a6a7eaef6d2225c21f/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33e39b66855b799d048a88a6a7eaef6d2225c21f/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=33e39b66855b799d048a88a6a7eaef6d2225c21f", "patch": "@@ -1,5 +1,5 @@\n #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-#   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+#   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n #   Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify it\n@@ -344,7 +344,8 @@ esac\n \n default_ld=\n AC_ARG_ENABLE(gold,\n-[[  --enable-gold[=ARG]     build gold [ARG={default,yes,no}]]],\n+[AS_HELP_STRING([[--enable-gold[=ARG]]],\n+\t\t[build gold @<:@ARG={default,yes,no}@:>@])],\n ENABLE_GOLD=$enableval,\n ENABLE_GOLD=no)\n case \"${ENABLE_GOLD}\" in\n@@ -385,7 +386,8 @@ case \"${ENABLE_GOLD}\" in\n esac\n \n AC_ARG_ENABLE(ld,\n-[[  --enable-ld[=ARG]     build ld [ARG={default,yes,no}]]],\n+[AS_HELP_STRING([[--enable-ld[=ARG]]],\n+\t\t[build ld @<:@ARG={default,yes,no}@:>@])],\n ENABLE_LD=$enableval,\n ENABLE_LD=yes)\n \n@@ -480,15 +482,15 @@ fi\n \n \n AC_ARG_ENABLE(libada,\n-[  --enable-libada         build libada directory],\n+[AS_HELP_STRING([--enable-libada], [build libada directory])],\n ENABLE_LIBADA=$enableval,\n ENABLE_LIBADA=yes)\n if test \"${ENABLE_LIBADA}\" != \"yes\" ; then\n   noconfigdirs=\"$noconfigdirs gnattools\"\n fi\n \n AC_ARG_ENABLE(libssp,\n-[  --enable-libssp         build libssp directory],\n+[AS_HELP_STRING([--enable-libssp], [build libssp directory])],\n ENABLE_LIBSSP=$enableval,\n ENABLE_LIBSSP=yes)\n \n@@ -1320,7 +1322,8 @@ ACX_PROG_CMP_IGNORE_INITIAL\n \n # See if we are building gcc with C++.\n AC_ARG_ENABLE(build-with-cxx,\n-[  --enable-build-with-cxx build with C++ compiler instead of C compiler],\n+[AS_HELP_STRING([--enable-build-with-cxx],\n+\t\t[build with C++ compiler instead of C compiler])],\n ENABLE_BUILD_WITH_CXX=$enableval,\n ENABLE_BUILD_WITH_CXX=no)\n \n@@ -1334,12 +1337,17 @@ have_gmp=no\n \n # Specify a location for mpc\n # check for this first so it ends up on the link line before mpfr.\n-AC_ARG_WITH(mpc, [  --with-mpc=PATH        specify prefix directory for installed MPC package.\n-                          Equivalent to --with-mpc-include=PATH/include\n-                          plus --with-mpc-lib=PATH/lib])\n-AC_ARG_WITH(mpc-include, [  --with-mpc-include=PATH\n-                          specify directory for installed MPC include files])\n-AC_ARG_WITH(mpc-lib, [  --with-mpc-lib=PATH    specify directory for the installed MPC library])\n+AC_ARG_WITH(mpc,\n+[AS_HELP_STRING([--with-mpc=PATH],\n+\t\t[specify prefix directory for installed MPC package.\n+\t\t Equivalent to --with-mpc-include=PATH/include\n+\t\t plus --with-mpc-lib=PATH/lib])])\n+AC_ARG_WITH(mpc-include,\n+[AS_HELP_STRING([--with-mpc-include=PATH],\n+\t\t[specify directory for installed MPC include files])])\n+AC_ARG_WITH(mpc-lib,\n+[AS_HELP_STRING([--with-mpc-lib=PATH],\n+\t\t[specify directory for the installed MPC library])])\n \n if test \"x$with_mpc\" != x; then\n   gmplibs=\"-L$with_mpc/lib $gmplibs\"\n@@ -1363,16 +1371,22 @@ fi\n \n # Specify a location for mpfr\n # check for this first so it ends up on the link line before gmp.\n-AC_ARG_WITH(mpfr-dir, [  --with-mpfr-dir=PATH    this option has been REMOVED],\n-  AC_MSG_ERROR([The --with-mpfr-dir=PATH option has been removed.\n-Use --with-mpfr=PATH or --with-mpfr-include=PATH plus --with-mpfr-lib=PATH]))\n-\n-AC_ARG_WITH(mpfr, [  --with-mpfr=PATH        specify prefix directory for installed MPFR package.\n-                          Equivalent to --with-mpfr-include=PATH/include\n-                          plus --with-mpfr-lib=PATH/lib])\n-AC_ARG_WITH(mpfr-include, [  --with-mpfr-include=PATH\n-                          specify directory for installed MPFR include files])\n-AC_ARG_WITH(mpfr-lib, [  --with-mpfr-lib=PATH    specify directory for the installed MPFR library])\n+AC_ARG_WITH(mpfr-dir,\n+[AS_HELP_STRING([--with-mpfr-dir=PATH], [this option has been REMOVED])],\n+[AC_MSG_ERROR([The --with-mpfr-dir=PATH option has been removed.\n+Use --with-mpfr=PATH or --with-mpfr-include=PATH plus --with-mpfr-lib=PATH])])\n+\n+AC_ARG_WITH(mpfr,\n+[AS_HELP_STRING([--with-mpfr=PATH],\n+\t\t[specify prefix directory for installed MPFR package.\n+\t\t Equivalent to --with-mpfr-include=PATH/include\n+\t\t plus --with-mpfr-lib=PATH/lib])])\n+AC_ARG_WITH(mpfr-include,\n+[AS_HELP_STRING([--with-mpfr-include=PATH],\n+\t\t[specify directory for installed MPFR include files])])\n+AC_ARG_WITH(mpfr-lib,\n+[AS_HELP_STRING([--with-mpfr-lib=PATH],\n+\t\t[specify directory for the installed MPFR library])])\n \n if test \"x$with_mpfr\" != x; then\n   gmplibs=\"-L$with_mpfr/lib $gmplibs\"\n@@ -1396,15 +1410,22 @@ if test \"x$with_mpfr$with_mpfr_include$with_mpfr_lib\" = x && test -d ${srcdir}/m\n fi\n \n # Specify a location for gmp\n-AC_ARG_WITH(gmp-dir, [  --with-gmp-dir=PATH     this option has been REMOVED],\n-  AC_MSG_ERROR([The --with-gmp-dir=PATH option has been removed.\n-Use --with-gmp=PATH or --with-gmp-include=PATH plus --with-gmp-lib=PATH]))\n-\n-AC_ARG_WITH(gmp, [  --with-gmp=PATH         specify prefix directory for the installed GMP package.\n-                          Equivalent to --with-gmp-include=PATH/include\n-                          plus --with-gmp-lib=PATH/lib])\n-AC_ARG_WITH(gmp-include, [  --with-gmp-include=PATH specify directory for installed GMP include files])\n-AC_ARG_WITH(gmp-lib, [  --with-gmp-lib=PATH     specify directory for the installed GMP library])\n+AC_ARG_WITH(gmp-dir,\n+[AS_HELP_STRING([--with-gmp-dir=PATH], [this option has been REMOVED])],\n+[AC_MSG_ERROR([The --with-gmp-dir=PATH option has been removed.\n+Use --with-gmp=PATH or --with-gmp-include=PATH plus --with-gmp-lib=PATH])])\n+\n+AC_ARG_WITH(gmp,\n+[AS_HELP_STRING([--with-gmp=PATH],\n+\t\t[specify prefix directory for the installed GMP package.\n+\t\t Equivalent to --with-gmp-include=PATH/include\n+\t\t plus --with-gmp-lib=PATH/lib])])\n+AC_ARG_WITH(gmp-include,\n+[AS_HELP_STRING([--with-gmp-include=PATH],\n+\t\t[specify directory for installed GMP include files])])\n+AC_ARG_WITH(gmp-lib,\n+[AS_HELP_STRING([--with-gmp-lib=PATH],\n+\t\t[specify directory for the installed GMP library])])\n \n \n if test \"x$with_gmp\" != x; then\n@@ -1536,8 +1557,10 @@ AC_SUBST(extra_mpc_gmp_configure_flags)\n AC_SUBST(extra_mpc_mpfr_configure_flags)\n \n # Allow host libstdc++ to be specified for static linking with PPL.\n-AC_ARG_WITH(host-libstdcxx, [  --with-host-libstdcxx=L Use linker arguments L to link with libstdc++\n-                          when linking with PPL])\n+AC_ARG_WITH(host-libstdcxx,\n+[AS_HELP_STRING([--with-host-libstdcxx=L],\n+\t\t[use linker arguments L to link with libstdc++\n+\t\t when linking with PPL])])\n \n case $with_host_libstdcxx in\n   no|yes)\n@@ -1547,7 +1570,7 @@ esac\n \n # Linker flags to use for stage1 or when not boostrapping.\n AC_ARG_WITH(stage1-ldflags,\n-[  --with-stage1-ldflags=FLAGS Linker flags for stage1],\n+[AS_HELP_STRING([--with-stage1-ldflags=FLAGS], [linker flags for stage1])],\n [if test \"$withval\" = \"no\" -o \"$withval\" = \"yes\"; then\n    stage1_ldflags=\n  else\n@@ -1558,7 +1581,7 @@ AC_SUBST(stage1_ldflags)\n \n # Libraries to use for stage1 or when not bootstrapping.\n AC_ARG_WITH(stage1-libs,\n-[  -with-stage1-libs=LIBS      Libraries for stage1],\n+[AS_HELP_STRING([--with-stage1-libs=LIBS], [libraries for stage1])],\n [if test \"$withval\" = \"no\" -o \"$withval\" = \"yes\"; then\n    stage1_libs=\n  else\n@@ -1570,7 +1593,7 @@ AC_SUBST(stage1_libs)\n # Libraries to use for stage2 and later builds.  This defaults to the\n # argument passed to --with-host-libstdcxx.\n AC_ARG_WITH(boot-libs,\n-[  --with-boot-libs=LIBS     Libraries for stage2 and later],\n+[AS_HELP_STRING([--with-boot-libs=LIBS], [libraries for stage2 and later])],\n [if test \"$withval\" = \"no\" -o \"$withval\" = \"yes\"; then\n    poststage1_libs=\n  else\n@@ -1581,7 +1604,8 @@ AC_SUBST(poststage1_libs)\n \n # Linker flags to use for stage2 and later builds.\n AC_ARG_WITH(boot-ldflags,\n-[  --with-boot-ldflags=FLAGS Linker flags for stage2 and later],\n+[AS_HELP_STRING([--with-boot-ldflags=FLAGS],\n+\t\t[linker flags for stage2 and later])],\n [if test \"$withval\" = \"no\" -o \"$withval\" = \"yes\"; then\n    poststage1_ldflags=\n  else\n@@ -1600,11 +1624,17 @@ AC_SUBST(poststage1_ldflags)\n ppllibs=\" -lppl_c -lppl -lgmpxx\"\n pplinc=\n \n-AC_ARG_WITH(ppl, [  --with-ppl=PATH         Specify prefix directory for the installed PPL package\n-                          Equivalent to --with-ppl-include=PATH/include\n-                          plus --with-ppl-lib=PATH/lib])\n-AC_ARG_WITH(ppl-include, [  --with-ppl-include=PATH Specify directory for installed PPL include files])\n-AC_ARG_WITH(ppl-lib, [  --with-ppl-lib=PATH     Specify the directory for the installed PPL library])\n+AC_ARG_WITH(ppl,\n+[AS_HELP_STRING([--with-ppl=PATH],\n+\t\t[specify prefix directory for the installed PPL package.\n+\t\t Equivalent to --with-ppl-include=PATH/include\n+\t\t plus --with-ppl-lib=PATH/lib])])\n+AC_ARG_WITH(ppl-include,\n+[AS_HELP_STRING([--with-ppl-include=PATH],\n+\t\t[specify directory for installed PPL include files])])\n+AC_ARG_WITH(ppl-lib,\n+[AS_HELP_STRING([--with-ppl-lib=PATH],\n+\t\t[specify directory for the installed PPL library])])\n \n case $with_ppl in \n   no)\n@@ -1630,7 +1660,8 @@ if test \"x$with_ppl$with_ppl_include$with_ppl_lib\" = x && test -d ${srcdir}/ppl;\n fi\n \n AC_ARG_ENABLE(ppl-version-check,\n-[  --disable-ppl-version-check    disable check for PPL version],\n+[AS_HELP_STRING([--disable-ppl-version-check],\n+\t\t[disable check for PPL version])],\n ENABLE_PPL_CHECK=$enableval,\n ENABLE_PPL_CHECK=yes)\n \n@@ -1687,7 +1718,7 @@ fi\n \n # Check for LTO support.\n AC_ARG_ENABLE(lto,\n-[  --enable-lto            enable link time optimization support],\n+[AS_HELP_STRING([--enable-lto], [enable link time optimization support])],\n enable_lto=$enableval,\n enable_lto=yes; default_enable_lto=yes)\n \n@@ -1948,8 +1979,9 @@ if test -d ${srcdir}/gcc; then\n   fi\n \n   AC_ARG_ENABLE(stage1-languages,\n-[  --enable-stage1-languages@<:@=all@:>@   choose additional languages to build during\n-                          stage1.  Mostly useful for compiler development.],\n+  [AS_HELP_STRING([[--enable-stage1-languages[=all]]],\n+\t\t  [choose additional languages to build during\n+\t\t  stage1.  Mostly useful for compiler development])],\n   [case ,${enable_stage1_languages}, in\n     ,no,|,,)\n       # Set it to something that will have no effect in the loop below\n@@ -2010,8 +2042,9 @@ done\n \n # Check for Boehm's garbage collector\n AC_ARG_ENABLE(objc-gc,\n-[  --enable-objc-gc        enable use of Boehm's garbage collector with the\n-                          GNU Objective-C runtime],\n+[AS_HELP_STRING([--enable-objc-gc],\n+\t\t[enable use of Boehm's garbage collector with the\n+\t\t GNU Objective-C runtime])],\n [case ,${enable_languages},:${enable_objc_gc}:${noconfigdirs} in\n   *,objc,*:*:yes:*target-boehm-gc*)\n     AC_MSG_ERROR([Boehm's garbage collector was requested yet not supported in this configuration])\n@@ -2166,17 +2199,17 @@ ACX_TOOL_DIRS\n copy_dirs=\n \n AC_ARG_WITH([build-sysroot], \n-  [  --with-build-sysroot=SYSROOT\n-                          use sysroot as the system root during the build],\n+  [AS_HELP_STRING([--with-build-sysroot=SYSROOT],\n+\t\t  [use sysroot as the system root during the build])],\n   [if test x\"$withval\" != x ; then\n      SYSROOT_CFLAGS_FOR_TARGET=\"--sysroot=$withval\"\n    fi],\n   [SYSROOT_CFLAGS_FOR_TARGET=])\n AC_SUBST(SYSROOT_CFLAGS_FOR_TARGET)\n \n AC_ARG_WITH([debug-prefix-map],\n-  [  --with-debug-prefix-map='A=B C=D ...'\n-                             map A to B, C to D ... in debug information],\n+  [AS_HELP_STRING([--with-debug-prefix-map='A=B C=D ...'],\n+\t\t  [map A to B, C to D ... in debug information])],\n   [if test x\"$withval\" != x; then\n      DEBUG_PREFIX_CFLAGS_FOR_TARGET=\n      for debug_map in $withval; do\n@@ -2605,7 +2638,8 @@ INSTALL_GDB_TK=`echo ${GDB_TK} | sed s/-all-/-install-/g`\n # Do not nest @if/@endif pairs, because configure will not warn you at all.\n \n AC_ARG_ENABLE([bootstrap],\n-[  --enable-bootstrap      enable bootstrapping @<:@yes if native build@:>@],,\n+[AS_HELP_STRING([--enable-bootstrap],\n+\t\t[enable bootstrapping @<:@yes if native build@:>@])],,\n enable_bootstrap=default)\n \n # Issue errors and warnings for invalid/strange bootstrap combinations.\n@@ -2674,8 +2708,8 @@ esac\n AC_MSG_CHECKING(for default BUILD_CONFIG)\n \n AC_ARG_WITH([build-config],\n-  [--with-build-config='NAME NAME2...'\n-                          Use config/NAME.mk build configuration],\n+  [AS_HELP_STRING([--with-build-config='NAME NAME2...'],\n+\t\t  [use config/NAME.mk build configuration])],\n   [case $with_build_config in\n    yes) with_build_config= ;;\n    no) with_build_config= BUILD_CONFIG= ;;\n@@ -2760,10 +2794,10 @@ extrasub_target=\"$extrasub_target\n # Create the serialization dependencies.  This uses a temporary file.\n \n AC_ARG_ENABLE([serial-configure],\n-[  --enable-serial-@<:@{host,target,build}-@:>@configure\n-                          force sequential configuration of\n-                          sub-packages for the host, target or build\n-                          machine, or all sub-packages])\n+[AS_HELP_STRING([[--enable-serial-[{host,target,build}-]configure]],\n+\t\t[force sequential configuration of\n+\t\t sub-packages for the host, target or build\n+\t\t machine, or all sub-packages])])\n \n case ${enable_serial_configure} in\n   yes)\n@@ -3227,8 +3261,8 @@ AC_SUBST(CXXFLAGS)\n \n # Target tools.\n AC_ARG_WITH([build-time-tools], \n-  [  --with-build-time-tools=PATH\n-                          use given path to find target tools during the build],\n+  [AS_HELP_STRING([--with-build-time-tools=PATH],\n+\t\t  [use given path to find target tools during the build])],\n   [case x\"$withval\" in\n      x/*) ;;\n      *)\n@@ -3315,8 +3349,9 @@ AC_SUBST(COMPILER_NM_FOR_TARGET)\n \n AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])\n AC_ARG_ENABLE(maintainer-mode,\n-[  --enable-maintainer-mode enable make rules and dependencies not useful\n-                          (and sometimes confusing) to the casual installer],\n+[AS_HELP_STRING([--enable-maintainer-mode],\n+\t\t[enable make rules and dependencies not useful\n+\t\t (and sometimes confusing) to the casual installer])],\n       USE_MAINTAINER_MODE=$enableval,\n       USE_MAINTAINER_MODE=no)\n AC_MSG_RESULT($USE_MAINTAINER_MODE)\n@@ -3370,8 +3405,8 @@ AC_SUBST(stage1_cflags)\n \n # Enable --enable-checking in stage1 of the compiler.\n AC_ARG_ENABLE(stage1-checking,\n-[  --enable-stage1-checking@<:@=all@:>@   choose additional checking for stage1\n-                          of the compiler],\n+[AS_HELP_STRING([[--enable-stage1-checking[=all]]],\n+\t\t[choose additional checking for stage1 of the compiler])],\n [stage1_checking=--enable-checking=${enable_stage1_checking}],\n [if test \"x$enable_checking\" = xno || test \"x$enable_checking\" = x; then\n   stage1_checking=--enable-checking=yes,types\n@@ -3382,7 +3417,8 @@ AC_SUBST(stage1_checking)\n \n # Enable -Werror in bootstrap stage2 and later.\n AC_ARG_ENABLE(werror,\n-[  --enable-werror         enable -Werror in bootstrap stage2 and later], [],\n+[AS_HELP_STRING([--enable-werror],\n+\t\t[enable -Werror in bootstrap stage2 and later])], [],\n [if test -d ${srcdir}/gcc && test x\"`cat $srcdir/gcc/DEV-PHASE`\" = xexperimental; then\n   enable_werror=yes\n else"}]}