{"sha": "2270623af33a51bb6776a775bee05f142db83e7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI3MDYyM2FmMzNhNTFiYjY3NzZhNzc1YmVlMDVmMTQyZGI4M2U3Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2001-08-22T14:51:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-08-22T14:51:32Z"}, "message": "jump.c (squeeze_notes): Take parms by reference.\n\n        * jump.c (squeeze_notes): Take parms by reference.  Handle END being\n        a squeezable note.\n        * rtl.h: Adjust.\n        * ifcvt.c (dead_or_predicable): Adjust.\n        * loop.c (find_and_verify_loops): Adjust.\n        * stmt.c (expand_end_case): Adjust.\n        * flow.c (merge_blocks_move_successor_nojumps): Adjust.  Modify the\n        head and end insn pointers in the basic block, not just local copies.\n        (merge_blocks_move_predecessor_nojumps): Likewise.\n\nFrom-SVN: r45107", "tree": {"sha": "8b1e78e7c9911f3b44410182b978347eaa7f85b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b1e78e7c9911f3b44410182b978347eaa7f85b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2270623af33a51bb6776a775bee05f142db83e7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2270623af33a51bb6776a775bee05f142db83e7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2270623af33a51bb6776a775bee05f142db83e7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2270623af33a51bb6776a775bee05f142db83e7c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd10dd09c8c9de14a7b30deddd4e5dd8481b92f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd10dd09c8c9de14a7b30deddd4e5dd8481b92f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd10dd09c8c9de14a7b30deddd4e5dd8481b92f4"}], "stats": {"total": 99, "additions": 55, "deletions": 44}, "files": [{"sha": "4948e50d4d7ad68354388d33738ae4bc5ed13bf4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2270623af33a51bb6776a775bee05f142db83e7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2270623af33a51bb6776a775bee05f142db83e7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2270623af33a51bb6776a775bee05f142db83e7c", "patch": "@@ -1,3 +1,15 @@\n+2001-08-22  Jason Merrill  <jason_merrill@redhat.com>\n+\n+\t* jump.c (squeeze_notes): Take parms by reference.  Handle END being\n+\ta squeezable note.\n+\t* rtl.h: Adjust.\n+\t* ifcvt.c (dead_or_predicable): Adjust.\n+\t* loop.c (find_and_verify_loops): Adjust.\n+\t* stmt.c (expand_end_case): Adjust.\n+\t* flow.c (merge_blocks_move_successor_nojumps): Adjust.  Modify the\n+\thead and end insn pointers in the basic block, not just local copies.\n+\t(merge_blocks_move_predecessor_nojumps): Likewise.\n+\n 2001-08-22  Lars Brinkhoff  <lars@nocrew.org>\n \n \t* Makefile.in, alias.c, basic-block.h, bb-reorder.c, bitmap.c,"}, {"sha": "5e3a6ae1c62a8da663d624be0d5ca912ce2be21c", "filename": "gcc/flow.c", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2270623af33a51bb6776a775bee05f142db83e7c/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2270623af33a51bb6776a775bee05f142db83e7c/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=2270623af33a51bb6776a775bee05f142db83e7c", "patch": "@@ -3074,13 +3074,10 @@ static int\n merge_blocks_move_predecessor_nojumps (a, b)\n      basic_block a, b;\n {\n-  rtx start, end, barrier;\n+  rtx barrier;\n   int index;\n \n-  start = a->head;\n-  end = a->end;\n-\n-  barrier = next_nonnote_insn (end);\n+  barrier = next_nonnote_insn (a->end);\n   if (GET_CODE (barrier) != BARRIER)\n     abort ();\n   flow_delete_insn (barrier);\n@@ -3092,11 +3089,11 @@ merge_blocks_move_predecessor_nojumps (a, b)\n      and adjust the block trees appropriately.   Even better would be to have\n      a tighter connection between block trees and rtl so that this is not\n      necessary.  */\n-  start = squeeze_notes (start, end);\n+  squeeze_notes (&a->head, &a->end);\n \n   /* Scramble the insn chain.  */\n-  if (end != PREV_INSN (b->head))\n-    reorder_insns (start, end, PREV_INSN (b->head));\n+  if (a->end != PREV_INSN (b->head))\n+    reorder_insns (a->head, a->end, PREV_INSN (b->head));\n \n   if (rtl_dump_file)\n     {\n@@ -3127,11 +3124,9 @@ static int\n merge_blocks_move_successor_nojumps (a, b)\n      basic_block a, b;\n {\n-  rtx start, end, barrier;\n+  rtx barrier;\n \n-  start = b->head;\n-  end = b->end;\n-  barrier = NEXT_INSN (end);\n+  barrier = NEXT_INSN (b->end);\n \n   /* Recognize a jump table following block B.  */\n   if (barrier\n@@ -3141,8 +3136,8 @@ merge_blocks_move_successor_nojumps (a, b)\n       && (GET_CODE (PATTERN (NEXT_INSN (barrier))) == ADDR_VEC\n \t  || GET_CODE (PATTERN (NEXT_INSN (barrier))) == ADDR_DIFF_VEC))\n     {\n-      end = NEXT_INSN (barrier);\n-      barrier = NEXT_INSN (end);\n+      b->end = NEXT_INSN (barrier);\n+      barrier = NEXT_INSN (b->end);\n     }\n \n   /* There had better have been a barrier there.  Delete it.  */\n@@ -3156,10 +3151,10 @@ merge_blocks_move_successor_nojumps (a, b)\n      and adjust the block trees appropriately.   Even better would be to have\n      a tighter connection between block trees and rtl so that this is not\n      necessary.  */\n-  start = squeeze_notes (start, end);\n+  squeeze_notes (&b->head, &b->end);\n \n   /* Scramble the insn chain.  */\n-  reorder_insns (start, end, a->end);\n+  reorder_insns (b->head, b->end, a->end);\n \n   /* Now blocks A and B are contiguous.  Merge them.  */\n   merge_blocks_nomove (a, b);"}, {"sha": "ee6397fe5b8d6895fce1a77108be4219d27f2328", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2270623af33a51bb6776a775bee05f142db83e7c/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2270623af33a51bb6776a775bee05f142db83e7c/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=2270623af33a51bb6776a775bee05f142db83e7c", "patch": "@@ -2667,19 +2667,7 @@ dead_or_predicable (test_bb, merge_bb, other_bb, new_dest, reversep)\n       if (end == merge_bb->end)\n \tmerge_bb->end = PREV_INSN (head);\n \n-      head = squeeze_notes (head, end);\n-      if (GET_CODE (end) == NOTE\n-\t  && (NOTE_LINE_NUMBER (end) == NOTE_INSN_BLOCK_END\n-              || NOTE_LINE_NUMBER (end) == NOTE_INSN_BLOCK_BEG\n-              || NOTE_LINE_NUMBER (end) == NOTE_INSN_LOOP_BEG\n-              || NOTE_LINE_NUMBER (end) == NOTE_INSN_LOOP_END\n-              || NOTE_LINE_NUMBER (end) == NOTE_INSN_LOOP_CONT\n-              || NOTE_LINE_NUMBER (end) == NOTE_INSN_LOOP_VTOP))\n-\t{\n-\t  if (head == end)\n-\t    return TRUE;\n-\t  end = PREV_INSN (end);\n-\t}\n+      squeeze_notes (&head, &end);\n \n       reorder_insns (head, end, PREV_INSN (earliest));\n     }"}, {"sha": "e8a859423edca21b6368ba60ecc2c1f1d73736ea", "filename": "gcc/jump.c", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2270623af33a51bb6776a775bee05f142db83e7c/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2270623af33a51bb6776a775bee05f142db83e7c/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=2270623af33a51bb6776a775bee05f142db83e7c", "patch": "@@ -539,19 +539,24 @@ duplicate_loop_exit_test (loop_start)\n }\n \f\n /* Move all block-beg, block-end, loop-beg, loop-cont, loop-vtop, loop-end,\n-   notes between START and END out before START.  Assume that END is not\n-   such a note.  START may be such a note.  Returns the value of the new\n-   starting insn, which may be different if the original start was such a\n-   note.  */\n+   notes between START and END out before START.  START and END may be such\n+   notes.  Returns the values of the new starting and ending insns, which\n+   may be different if the original ones were such notes.  */\n \n-rtx\n-squeeze_notes (start, end)\n-     rtx start, end;\n+void\n+squeeze_notes (startp, endp)\n+     rtx* startp;\n+     rtx* endp;\n {\n+  rtx start = *startp;\n+  rtx end = *endp;\n+\n   rtx insn;\n   rtx next;\n+  rtx last = NULL;\n+  rtx past_end = NEXT_INSN (end);\n \n-  for (insn = start; insn != end; insn = next)\n+  for (insn = start; insn != past_end; insn = next)\n     {\n       next = NEXT_INSN (insn);\n       if (GET_CODE (insn) == NOTE\n@@ -575,9 +580,19 @@ squeeze_notes (start, end)\n \t      PREV_INSN (next) = prev;\n \t    }\n \t}\n+      else\n+\tlast = insn;\n     }\n \n-  return start;\n+  /* There were no real instructions, and we can't represent an empty\n+     range.  Die.  */\n+  if (start == past_end)\n+    abort ();\n+\n+  end = last;\n+\n+  *startp = start;\n+  *endp = end;\n }\n \f\n /* Return the label before INSN, or put a new label there.  */"}, {"sha": "8d37eb980d8e68ae81e097e0f54771563840bbb4", "filename": "gcc/loop.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2270623af33a51bb6776a775bee05f142db83e7c/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2270623af33a51bb6776a775bee05f142db83e7c/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=2270623af33a51bb6776a775bee05f142db83e7c", "patch": "@@ -2749,8 +2749,7 @@ find_and_verify_loops (f, loops)\n \n \t\t\t/* Include the BARRIER after INSN and copy the\n \t\t\t   block after LOC.  */\n-\t\t\tnew_label = squeeze_notes (new_label,\n-\t\t\t\t\t\t   last_insn_to_move);\n+\t\t\tsqueeze_notes (&new_label, &last_insn_to_move);\n \t\t\treorder_insns (new_label, last_insn_to_move, loc);\n \n \t\t\t/* All those insns are now in TARGET_LOOP.  */"}, {"sha": "819bf51bc035aed4bd7b79cb9b061cf19c1ea574", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2270623af33a51bb6776a775bee05f142db83e7c/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2270623af33a51bb6776a775bee05f142db83e7c/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=2270623af33a51bb6776a775bee05f142db83e7c", "patch": "@@ -1284,7 +1284,7 @@ extern void mark_jump_label\t\tPARAMS ((rtx, rtx, int));\n extern void cleanup_barriers\t\tPARAMS ((void));\n \n /* In jump.c */\n-extern rtx squeeze_notes\t\tPARAMS ((rtx, rtx));\n+extern void squeeze_notes\t\tPARAMS ((rtx *, rtx *));\n extern rtx delete_insn\t\t\tPARAMS ((rtx));\n extern void delete_jump\t\t\tPARAMS ((rtx));\n extern void delete_barrier\t\tPARAMS ((rtx));"}, {"sha": "0a15a4a89929a5cb33fbfe834c37d9fc65907476", "filename": "gcc/stmt.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2270623af33a51bb6776a775bee05f142db83e7c/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2270623af33a51bb6776a775bee05f142db83e7c/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=2270623af33a51bb6776a775bee05f142db83e7c", "patch": "@@ -5152,7 +5152,7 @@ expand_end_case (orig_index)\n   int ncases;\n   rtx *labelvec;\n   register int i;\n-  rtx before_case;\n+  rtx before_case, end;\n   register struct nesting *thiscase = case_stack;\n   tree index_expr, index_type;\n   int unsignedp;\n@@ -5414,8 +5414,10 @@ expand_end_case (orig_index)\n #endif\n \t}\n \n-      before_case = squeeze_notes (NEXT_INSN (before_case), get_last_insn ());\n-      reorder_insns (before_case, get_last_insn (),\n+      before_case = NEXT_INSN (before_case);\n+      end = get_last_insn ();\n+      squeeze_notes (&before_case, &end);\n+      reorder_insns (before_case, end,\n \t\t     thiscase->data.case_stmt.start);\n     }\n   else"}]}