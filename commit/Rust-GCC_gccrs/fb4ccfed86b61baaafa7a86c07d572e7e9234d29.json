{"sha": "fb4ccfed86b61baaafa7a86c07d572e7e9234d29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI0Y2NmZWQ4NmI2MWJhYWFmYTdhODZjMDdkNTcyZTdlOTIzNGQyOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2017-10-04T17:21:21Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2017-10-04T17:21:21Z"}, "message": "re PR c++/71946 (asm in toplevel lambda function rejected)\n\n/cp\n2017-10-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\t    Andrew Pinski  <apinski@cavium.com>\n\n\tPR c++/71946\n\t* parser.c (cp_parser_lambda_body): Set parser->in_function_body.\n\n/testsuite\n2017-10-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\t    Andrew Pinski  <apinski@cavium.com>\n\n\tPR c++/71946\n\t* g++.dg/cpp0x/lambda/lambda-asm1.C: New.\n\t* g++.dg/cpp0x/lambda/lambda-stmtexpr1.C: Likewise.\n\nCo-Authored-By: Andrew Pinski <apinski@cavium.com>\n\nFrom-SVN: r253423", "tree": {"sha": "c61643ceba88cedfe549751e60197c85f7d1a6af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c61643ceba88cedfe549751e60197c85f7d1a6af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb4ccfed86b61baaafa7a86c07d572e7e9234d29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb4ccfed86b61baaafa7a86c07d572e7e9234d29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb4ccfed86b61baaafa7a86c07d572e7e9234d29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb4ccfed86b61baaafa7a86c07d572e7e9234d29/comments", "author": null, "committer": null, "parents": [{"sha": "ab6501d713bb9de29609bd99b40da3f479e504b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab6501d713bb9de29609bd99b40da3f479e504b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab6501d713bb9de29609bd99b40da3f479e504b6"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "035a1b75e3d4e963f19108ebec3af09b2b6d469f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb4ccfed86b61baaafa7a86c07d572e7e9234d29/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb4ccfed86b61baaafa7a86c07d572e7e9234d29/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fb4ccfed86b61baaafa7a86c07d572e7e9234d29", "patch": "@@ -1,3 +1,9 @@\n+2017-10-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\t    Andrew Pinski  <apinski@cavium.com>\n+\n+\tPR c++/71946\n+\t* parser.c (cp_parser_lambda_body): Set parser->in_function_body.\n+\n 2017-10-04  Nathan Sidwell  <nathan@acm.org>\n \n \tMove mangling aliases out of global namespace."}, {"sha": "28bc8e4d42a01c3cc704da5270f55fca4baed655", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb4ccfed86b61baaafa7a86c07d572e7e9234d29/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb4ccfed86b61baaafa7a86c07d572e7e9234d29/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=fb4ccfed86b61baaafa7a86c07d572e7e9234d29", "patch": "@@ -10557,6 +10557,7 @@ cp_parser_lambda_body (cp_parser* parser, tree lambda_expr)\n {\n   bool nested = (current_function_decl != NULL_TREE);\n   bool local_variables_forbidden_p = parser->local_variables_forbidden_p;\n+  bool in_function_body = parser->in_function_body;\n   if (nested)\n     push_function_context ();\n   else\n@@ -10567,6 +10568,7 @@ cp_parser_lambda_body (cp_parser* parser, tree lambda_expr)\n   save_omp_privatization_clauses (omp_privatization_save);\n   /* Clear this in case we're in the middle of a default argument.  */\n   parser->local_variables_forbidden_p = false;\n+  parser->in_function_body = true;\n \n   /* Finish the function call operator\n      - class_specifier\n@@ -10653,6 +10655,7 @@ cp_parser_lambda_body (cp_parser* parser, tree lambda_expr)\n \n   restore_omp_privatization_clauses (omp_privatization_save);\n   parser->local_variables_forbidden_p = local_variables_forbidden_p;\n+  parser->in_function_body = in_function_body;\n   if (nested)\n     pop_function_context();\n   else"}, {"sha": "8e00f3274c00cf095a6c06b857dc58d46961f6de", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb4ccfed86b61baaafa7a86c07d572e7e9234d29/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb4ccfed86b61baaafa7a86c07d572e7e9234d29/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fb4ccfed86b61baaafa7a86c07d572e7e9234d29", "patch": "@@ -1,3 +1,10 @@\n+2017-10-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\t    Andrew Pinski  <apinski@cavium.com>\n+\n+\tPR c++/71946\n+\t* g++.dg/cpp0x/lambda/lambda-asm1.C: New.\n+\t* g++.dg/cpp0x/lambda/lambda-stmtexpr1.C: Likewise.\n+\n 2017-10-04  Sudakshina Das  <sudi.das@arm.com>\n \n \t* gcc.target/aarch64/bic_imm_1.c: New."}, {"sha": "ef0b125fe50fba4328cfb094e65fbbb6016a52ef", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-asm1.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb4ccfed86b61baaafa7a86c07d572e7e9234d29/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-asm1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb4ccfed86b61baaafa7a86c07d572e7e9234d29/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-asm1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-asm1.C?ref=fb4ccfed86b61baaafa7a86c07d572e7e9234d29", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/71946\n+// { dg-do compile { target c++11 } }\n+\n+auto test = []{ __asm__ __volatile__ (\"\" : : \"r\" (0) ); };"}, {"sha": "e461db653d4efa1a66ebe974629df2adaa93f7f3", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-stmtexpr1.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb4ccfed86b61baaafa7a86c07d572e7e9234d29/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-stmtexpr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb4ccfed86b61baaafa7a86c07d572e7e9234d29/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-stmtexpr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-stmtexpr1.C?ref=fb4ccfed86b61baaafa7a86c07d572e7e9234d29", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/71946\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+auto test = []{ int t = ({ int t1; t1 = 7; t1; }); };"}]}