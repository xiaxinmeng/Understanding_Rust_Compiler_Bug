{"sha": "22b98f356efeed60cb90d5be33f613dcf6e2acff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJiOThmMzU2ZWZlZWQ2MGNiOTBkNWJlMzNmNjEzZGNmNmUyYWNmZg==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2008-04-25T08:40:10Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2008-04-25T08:40:10Z"}, "message": "array-quals-1.c: Add xfail for x86_64-*-mingw*.\n\n2008-04-25  Kai Tietz  <kai.tietz@onevision.com>\n\n\t* gcc.dg/array-quals-1.c: Add xfail for x86_64-*-mingw*.\n\t* gcc.dg/builtins-12.c: Add dg-options \"-ansi\".\n\t* gcc.dg/builtins-13.c: Likewise.\n\t* gcc.dg/pr25682.c: Likewise.\n\t* gcc.dg/pr33694.c: Likewise.\n\t* gcc.dg/c90-const-expr-2.c: Add check for _WIN64 define.\n\t* gcc.dg/c99-const-expr-2.c: Likewise.\n\t* gcc.dg/ia64-sync-1.c: Add typedef of size_t, for prototype.\n\t* gcc.dg/ia64-sync-2.c: Likewise.\n\t* gcc.dg/ia64-sync-3.c: Likewise\n\t* gcc.dg/large-size-array.c:  Add check for _WIN64 define.\n\t* gcc.dg/large-size-array-3.c: Likewise.\n\t* gcc.dg/large-size-array-2.c:  Add x86_64-*-mingw* for ignore error\n\tcheck.\n\t* gcc.dg/large-size-array-4.c: Likewise.\n\t* gcc.dg/max-1.c: Replace use of long by ssize_t.\n\nFrom-SVN: r134659", "tree": {"sha": "46402722d23956dbfe4215abcc8b5ce3d522f13a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46402722d23956dbfe4215abcc8b5ce3d522f13a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22b98f356efeed60cb90d5be33f613dcf6e2acff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22b98f356efeed60cb90d5be33f613dcf6e2acff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22b98f356efeed60cb90d5be33f613dcf6e2acff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22b98f356efeed60cb90d5be33f613dcf6e2acff/comments", "author": null, "committer": null, "parents": [{"sha": "e65e14760ce8bfe8db4f85a04c55df1b00df5f49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e65e14760ce8bfe8db4f85a04c55df1b00df5f49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e65e14760ce8bfe8db4f85a04c55df1b00df5f49"}], "stats": {"total": 66, "additions": 50, "deletions": 16}, "files": [{"sha": "526adbaad5057816bf084ffff8053dc0e1f4497f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22b98f356efeed60cb90d5be33f613dcf6e2acff", "patch": "@@ -1,3 +1,22 @@\n+2008-04-25  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* gcc.dg/array-quals-1.c: Add xfail for x86_64-*-mingw*.\n+\t* gcc.dg/builtins-12.c: Add dg-options \"-ansi\".\n+\t* gcc.dg/builtins-13.c: Likewise.\n+\t* gcc.dg/pr25682.c: Likewise.\n+\t* gcc.dg/pr33694.c: Likewise.\n+\t* gcc.dg/c90-const-expr-2.c: Add check for _WIN64 define.\n+\t* gcc.dg/c99-const-expr-2.c: Likewise.\n+\t* gcc.dg/ia64-sync-1.c: Add typedef of size_t, for prototype.\n+\t* gcc.dg/ia64-sync-2.c: Likewise.\n+\t* gcc.dg/ia64-sync-3.c: Likewise\n+\t* gcc.dg/large-size-array.c:  Add check for _WIN64 define.\n+\t* gcc.dg/large-size-array-3.c: Likewise.\n+\t* gcc.dg/large-size-array-2.c:  Add x86_64-*-mingw* for ignore error\n+\tcheck.\n+\t* gcc.dg/large-size-array-4.c: Likewise.\n+\t* gcc.dg/max-1.c: Replace use of long by ssize_t.\n+\n 2008-04-24  Steve Ellcey  <sje@cup.hp.com>\n \n \t* gcc.dg/lower-subreg-1.c: Skip IA64 platform."}, {"sha": "514daf8bc55580bd5c98bada67502203b6baac9a", "filename": "gcc/testsuite/gcc.dg/array-quals-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Farray-quals-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Farray-quals-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Farray-quals-1.c?ref=22b98f356efeed60cb90d5be33f613dcf6e2acff", "patch": "@@ -4,7 +4,7 @@\n /* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n /* { dg-do compile } */\n /* The MMIX port always switches to the .data section at the end of a file.  */\n-/* { dg-final { scan-assembler-not \"\\\\.data(?!\\\\.rel\\\\.ro)\" { xfail powerpc*-*-aix* mmix-*-* } } } */\n+/* { dg-final { scan-assembler-not \"\\\\.data(?!\\\\.rel\\\\.ro)\" { xfail powerpc*-*-aix* mmix-*-* x86_64-*-mingw* } } } */\n static const int a[2] = { 1, 2 };\n const int a1[2] = { 1, 2 };\n typedef const int ci;"}, {"sha": "61a80edf78f00e96bb35fbdbca6d56a8beb61ec1", "filename": "gcc/testsuite/gcc.dg/builtins-12.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-12.c?ref=22b98f356efeed60cb90d5be33f613dcf6e2acff", "patch": "@@ -6,6 +6,7 @@\n    Written by Roger Sayle, 12th April 2003.  */\n \n /* { dg-do compile } */\n+/* { dg-options \"-ansi\" } */\n /* { dg-final { scan-assembler-not \"__builtin_\" } } */\n \n typedef __SIZE_TYPE__ size_t;"}, {"sha": "149407b5406f68c06346722cd5ab1c04c9baad24", "filename": "gcc/testsuite/gcc.dg/builtins-13.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-13.c?ref=22b98f356efeed60cb90d5be33f613dcf6e2acff", "patch": "@@ -6,6 +6,7 @@\n    Written by Roger Sayle, 12th April 2003.  */\n \n /* { dg-do link } */\n+/* { dg-options \"-ansi\" } */\n \n typedef __SIZE_TYPE__ size_t;\n "}, {"sha": "cad5bc8673b5da0f0cf6844b55d5445a3f1b56a5", "filename": "gcc/testsuite/gcc.dg/c90-const-expr-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-2.c?ref=22b98f356efeed60cb90d5be33f613dcf6e2acff", "patch": "@@ -14,7 +14,7 @@ int *a;\n int b;\n long *c;\n \n-#ifdef _LP64\n+#if defined(_LP64) || defined(_WIN64)\n #define ZERO 0L\n #else\n #define ZERO 0"}, {"sha": "555a58c0a63d7a65ca3f1b82e4278a772ababd60", "filename": "gcc/testsuite/gcc.dg/c99-const-expr-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-2.c?ref=22b98f356efeed60cb90d5be33f613dcf6e2acff", "patch": "@@ -14,7 +14,7 @@ int *a;\n int b;\n long *c;\n \n-#ifdef _LP64\n+#if defined(_LP64) || defined(_WIN64)\n #define ZERO 0L\n #else\n #define ZERO 0"}, {"sha": "efca5d7a0495683f77ee427d6b178f5ad6f56d40", "filename": "gcc/testsuite/gcc.dg/ia64-sync-1.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-1.c?ref=22b98f356efeed60cb90d5be33f613dcf6e2acff", "patch": "@@ -7,8 +7,10 @@\n /* Test basic functionality of the intrinsics.  The operations should\n    not be optimized away if no one checks the return values.  */\n \n+__extension__ typedef __SIZE_TYPE__ size_t;\n+\n extern void abort (void);\n-extern void *memcpy (void *, const void *, __SIZE_TYPE__);\n+extern void *memcpy (void *, const void *, size_t);\n \n static int AI[12];\n static int init_noret_si[12] = { 0, 0, 0, 1, 0, 0, 0, 0, -1, 0, 0, 0 };"}, {"sha": "b3ff127d9a3d8e4302d5f7c2ba108a1c85af78b2", "filename": "gcc/testsuite/gcc.dg/ia64-sync-2.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-2.c?ref=22b98f356efeed60cb90d5be33f613dcf6e2acff", "patch": "@@ -6,8 +6,10 @@\n \n /* Test basic functionality of the intrinsics.  */\n \n+__extension__ typedef __SIZE_TYPE__ size_t;\n+\n extern void abort (void);\n-extern void *memcpy (void *, const void *, __SIZE_TYPE__);\n+extern void *memcpy (void *, const void *, size_t);\n \n static int AI[18];\n static int init_si[18] = { 0,0,0,1,0,0,0,0,-1,0,0,0,0,0,-1,0,0,0 };"}, {"sha": "965d4359e8629da21fd4dc1e88e89bea31fa0909", "filename": "gcc/testsuite/gcc.dg/ia64-sync-3.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-3.c?ref=22b98f356efeed60cb90d5be33f613dcf6e2acff", "patch": "@@ -6,8 +6,10 @@\n \n /* Test basic functionality of the intrinsics.  */\n \n+__extension__ typedef __SIZE_TYPE__ size_t;\n+\n extern void abort (void);\n-extern void *memcpy (void *, const void *, __SIZE_TYPE__);\n+extern void *memcpy (void *, const void *, size_t);\n \n static int AI[4];\n static int init_si[4] = { -30,-30,-50,-50 };"}, {"sha": "8c72a442deba34555950c1a289c2f797b830a710", "filename": "gcc/testsuite/gcc.dg/large-size-array-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array-2.c?ref=22b98f356efeed60cb90d5be33f613dcf6e2acff", "patch": "@@ -4,4 +4,4 @@\n static char * name[] = {\n     [0x80000000]  = \"bar\"\n   };\n-/* { dg-error \"too large\" \"\" { target { ! lp64 } } 6 } */\n+/* { dg-error \"too large\" \"\" { target { ! { lp64 x86_64-*-mingw* } } } 6 } */"}, {"sha": "ea13b933ae53aabe012ca3e3bffb63c94ea1e052", "filename": "gcc/testsuite/gcc.dg/large-size-array-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array-3.c?ref=22b98f356efeed60cb90d5be33f613dcf6e2acff", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n #include <limits.h>\n \n-#ifdef __LP64__\n+#if defined(__LP64__) || defined(_WIN64)\n #define DIM (UINT_MAX>>1)+1\n #else\n #define DIM 65536"}, {"sha": "16692b717f4704b279b18d43db2c172a22ecef54", "filename": "gcc/testsuite/gcc.dg/large-size-array-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array-4.c?ref=22b98f356efeed60cb90d5be33f613dcf6e2acff", "patch": "@@ -4,4 +4,4 @@\n static char * name[] = {\n     [0x80000000]  = \"bar\"\n   };\n-/* { dg-error \"too large\" \"\" { target { ! lp64 } } 6 } */\n+/* { dg-error \"too large\" \"\" { target { ! { lp64 x86_64-*-mingw* } } 6 } */"}, {"sha": "6ea760669347af25b006d32f4cda8b59d4a3a601", "filename": "gcc/testsuite/gcc.dg/large-size-array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array.c?ref=22b98f356efeed60cb90d5be33f613dcf6e2acff", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n #include <limits.h>\n \n-#ifdef __LP64__\n+#if defined(__LP64__) || defined(_WIN64)\n #define DIM UINT_MAX>>1\n #else\n #define DIM USHRT_MAX>>1"}, {"sha": "40f2145c038ffabf2774ec5a2505acb9f5c07de2", "filename": "gcc/testsuite/gcc.dg/max-1.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fmax-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fmax-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmax-1.c?ref=22b98f356efeed60cb90d5be33f613dcf6e2acff", "patch": "@@ -7,14 +7,19 @@\n /* m32c has varying sized pointers */\n /* { dg-skip-if \"\" { \"m32c-*-*\" } { \"*\" } { \"-mcpu=m32c\" \"-mcpu=m32cm\" } } */\n \n+/* Kludge to make it signed. */\n+#define unsigned signed\n+__extension__ typedef __SIZE_TYPE__ ssize_t;\n+#undef unsigned\n+\n extern void abort (void);\n \n-long fff[10];\n+ssize_t fff[10];\n \n-void f(long a, long b)\n+void f(ssize_t a, ssize_t b)\n {\n-  long crcc = b;\n-  long d = *((long*)(a+1));\n+  ssize_t crcc = b;\n+  ssize_t d = *((ssize_t*)(a+1));\n   int i;\n \n   a = d >= b? d:b;\n@@ -27,11 +32,11 @@ void f(long a, long b)\n /* The variable a cannot be a local variable as we get better aliasing\n    now and decide that the store to a is dead.  The better aliasing comes\n    from better representation of pointer arithmetic. */\n-long a = 10;\n+ssize_t a = 10;\n int main(void)\n {\n   int i;\n-  f((long)(&a)-1,0);\n+  f((ssize_t)(&a)-1,0);\n   for(i = 0;i<10;i++)\n    if (fff[i]!=10)\n     abort ();"}, {"sha": "4118862a1ff33b04ed1606faaec05df7da78c22a", "filename": "gcc/testsuite/gcc.dg/pr25682.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25682.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25682.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25682.c?ref=22b98f356efeed60cb90d5be33f613dcf6e2acff", "patch": "@@ -1,5 +1,6 @@\n /* PR c/25682 */\n /* { dg-do compile } */\n+/* { dg-options \"-ansi\" } */\n /* Test whether we don't ICE on questionable constructs where offsetof\n    should have been used instead.  */\n "}, {"sha": "fa62b9eaed2871b678b28d790006927d90337b32", "filename": "gcc/testsuite/gcc.dg/pr33694.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33694.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b98f356efeed60cb90d5be33f613dcf6e2acff/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33694.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33694.c?ref=22b98f356efeed60cb90d5be33f613dcf6e2acff", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-options \"-ansi\" } */\n \n /* This used to ICE with type-checking enabled.  */\n "}]}