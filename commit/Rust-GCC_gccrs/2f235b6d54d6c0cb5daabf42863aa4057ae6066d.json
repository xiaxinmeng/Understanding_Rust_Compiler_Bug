{"sha": "2f235b6d54d6c0cb5daabf42863aa4057ae6066d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYyMzViNmQ1NGQ2YzBjYjVkYWFiZjQyODYzYWE0MDU3YWU2MDY2ZA==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-07-02T06:39:04Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-07-02T06:39:04Z"}, "message": "re PR libstdc++/7173 (_GLIBCPP_VERSION =\"\" on the 3.1 branch)\n\n2002-07-02  Phil Edwards  <pme@gcc.gnu.org>\n\n\tPR libstdc++/7173\n\t* acinclude.m4:  Simplify determination of gcc_version, and move\n\tup to GLIBCPP_CONFIGURE.\n\t* configure.in (release_VERSION):  Really remove.\n\t(AM_INIT_AUTOMAKE, AM_CONFIG_HEADER):  Move after GLIBCPP_CONFIGURE.\n\t* aclocal.m4, configure:  Regenerate.\n\nFrom-SVN: r55174", "tree": {"sha": "584b8c70561a78cb991b99bb7e99508ad3e3ac49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/584b8c70561a78cb991b99bb7e99508ad3e3ac49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f235b6d54d6c0cb5daabf42863aa4057ae6066d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f235b6d54d6c0cb5daabf42863aa4057ae6066d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f235b6d54d6c0cb5daabf42863aa4057ae6066d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f235b6d54d6c0cb5daabf42863aa4057ae6066d/comments", "author": null, "committer": null, "parents": [{"sha": "fc7f0a806cd0ade2c93bebca3f97ea5ee5eedcc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc7f0a806cd0ade2c93bebca3f97ea5ee5eedcc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc7f0a806cd0ade2c93bebca3f97ea5ee5eedcc2"}], "stats": {"total": 2975, "additions": 1429, "deletions": 1546}, "files": [{"sha": "cbc497836d12861d1b5087036d8f725f2257a42e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f235b6d54d6c0cb5daabf42863aa4057ae6066d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f235b6d54d6c0cb5daabf42863aa4057ae6066d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2f235b6d54d6c0cb5daabf42863aa4057ae6066d", "patch": "@@ -1,3 +1,12 @@\n+2002-07-02  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\tPR libstdc++/7173\n+\t* acinclude.m4:  Simplify determination of gcc_version, and move\n+\tup to GLIBCPP_CONFIGURE.\n+\t* configure.in (release_VERSION):  Really remove.\n+\t(AM_INIT_AUTOMAKE, AM_CONFIG_HEADER):  Move after GLIBCPP_CONFIGURE.\n+\t* aclocal.m4, configure:  Regenerate.\n+\n 2002-07-02  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* docs/html/configopts.html, docs/html/install.html:  Tweaks."}, {"sha": "0f98ab1c77339e98b07fa53423246bddd0805e51", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f235b6d54d6c0cb5daabf42863aa4057ae6066d/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f235b6d54d6c0cb5daabf42863aa4057ae6066d/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=2f235b6d54d6c0cb5daabf42863aa4057ae6066d", "patch": "@@ -167,6 +167,11 @@ AC_DEFUN(GLIBCPP_CONFIGURE, [\n \n   LIB_AC_PROG_CXX\n \n+  # For directory versioning (e.g., headers) and other variables.\n+  AC_MSG_CHECKING([for GCC version number])\n+  gcc_version=`$glibcpp_CXX -dumpversion`\n+  AC_MSG_RESULT($gcc_version)\n+\n   # For some reason, gettext needs this.\n   AC_ISC_POSIX\n \n@@ -200,7 +205,6 @@ AC_DEFUN(GLIBCPP_CONFIGURE, [\n   # Find platform-specific directories containing configuration info.  In\n   # addition to possibly modifying the same flags, it also sets up symlinks.\n   GLIBCPP_CHECK_TARGET\n-\n ])\n \n \n@@ -1840,15 +1844,6 @@ version_specific_libs=no)dnl\n # Option set, now we can test it.\n AC_MSG_RESULT($version_specific_libs)\n \n-# Get the gcc version number. This is lifted from gcc/configure.in\n-AC_MSG_CHECKING([for gcc version number])\n-changequote(,)dnl\n-gcc_version_trigger=${srcdir}/../gcc/version.c\n-gcc_version_full=`grep version_string ${gcc_version_trigger} | sed -e 's/.*\\\"\\([^\\\"]*\\)\\\".*/\\1/'`\n-gcc_version=`echo ${gcc_version_full} | sed -e 's/\\([^ ]*\\) .*/\\1/'`\n-changequote([,])dnl\n-AC_MSG_RESULT($gcc_version)\n-\n # Default case for install directory for include files.\n if test $version_specific_libs = no && test $gxx_include_dir = no; then\n   gxx_include_dir='$(prefix)'/include/c++/${gcc_version}"}, {"sha": "e298f26df0ecb2f8fd5acdc9bcc03a348ace57cb", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 13, "deletions": 43, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f235b6d54d6c0cb5daabf42863aa4057ae6066d/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f235b6d54d6c0cb5daabf42863aa4057ae6066d/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=2f235b6d54d6c0cb5daabf42863aa4057ae6066d", "patch": "@@ -1,6 +1,6 @@\n-dnl aclocal.m4 generated automatically by aclocal 1.4-p5\n+dnl aclocal.m4 generated automatically by aclocal 1.4\n \n-dnl Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n+dnl Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n dnl This file is free software; the Free Software Foundation\n dnl gives unlimited permission to copy and/or distribute it,\n dnl with or without modifications, as long as this notice is preserved.\n@@ -179,6 +179,11 @@ AC_DEFUN(GLIBCPP_CONFIGURE, [\n \n   LIB_AC_PROG_CXX\n \n+  # For directory versioning (e.g., headers) and other variables.\n+  AC_MSG_CHECKING([for GCC version number])\n+  gcc_version=`$glibcpp_CXX -dumpversion`\n+  AC_MSG_RESULT($gcc_version)\n+\n   # For some reason, gettext needs this.\n   AC_ISC_POSIX\n \n@@ -212,7 +217,6 @@ AC_DEFUN(GLIBCPP_CONFIGURE, [\n   # Find platform-specific directories containing configuration info.  In\n   # addition to possibly modifying the same flags, it also sets up symlinks.\n   GLIBCPP_CHECK_TARGET\n-\n ])\n \n \n@@ -1852,15 +1856,6 @@ version_specific_libs=no)dnl\n # Option set, now we can test it.\n AC_MSG_RESULT($version_specific_libs)\n \n-# Get the gcc version number. This is lifted from gcc/configure.in\n-AC_MSG_CHECKING([for gcc version number])\n-changequote(,)dnl\n-gcc_version_trigger=${srcdir}/../gcc/version.c\n-gcc_version_full=`grep version_string ${gcc_version_trigger} | sed -e 's/.*\\\"\\([^\\\"]*\\)\\\".*/\\1/'`\n-gcc_version=`echo ${gcc_version_full} | sed -e 's/\\([^ ]*\\) .*/\\1/'`\n-changequote([,])dnl\n-AC_MSG_RESULT($gcc_version)\n-\n # Default case for install directory for include files.\n if test $version_specific_libs = no && test $gxx_include_dir = no; then\n   gxx_include_dir='$(prefix)'/include/c++/${gcc_version}\n@@ -2206,37 +2201,12 @@ AC_MSG_RESULT($enable_symvers)\n ])\n \n \n-# isc-posix.m4 serial 1 (gettext-0.10.40)\n-dnl Copyright (C) 1995-2002 Free Software Foundation, Inc.\n-dnl This file is free software, distributed under the terms of the GNU\n-dnl General Public License.  As a special exception to the GNU General\n-dnl Public License, this file may be distributed as part of a program\n-dnl that contains a configuration script generated by Autoconf, under\n-dnl the same distribution terms as the rest of that program.\n-\n-# This test replaces the one in autoconf.\n-# Currently this macro should have the same name as the autoconf macro\n-# because gettext's gettext.m4 (distributed in the automake package)\n-# still uses it.  Otherwise, the use in gettext.m4 makes autoheader\n-# give these diagnostics:\n-#   configure.in:556: AC_TRY_COMPILE was called before AC_ISC_POSIX\n-#   configure.in:556: AC_TRY_RUN was called before AC_ISC_POSIX\n-\n-undefine([AC_ISC_POSIX])\n-\n-AC_DEFUN([AC_ISC_POSIX],\n-  [\n-    dnl This test replaces the obsolescent AC_ISC_POSIX kludge.\n-    AC_CHECK_LIB(cposix, strerror, [LIBS=\"$LIBS -lcposix\"])\n-  ]\n-)\n-\n # Add --enable-maintainer-mode option to configure.\n # From Jim Meyering\n \n # serial 1\n \n-AC_DEFUN([AM_MAINTAINER_MODE],\n+AC_DEFUN(AM_MAINTAINER_MODE,\n [AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])\n   dnl maintainer-mode is disabled by default\n   AC_ARG_ENABLE(maintainer-mode,\n@@ -2253,7 +2223,7 @@ AC_DEFUN([AM_MAINTAINER_MODE],\n \n # Define a conditional.\n \n-AC_DEFUN([AM_CONDITIONAL],\n+AC_DEFUN(AM_CONDITIONAL,\n [AC_SUBST($1_TRUE)\n AC_SUBST($1_FALSE)\n if $2; then\n@@ -2273,7 +2243,7 @@ fi])\n dnl Usage:\n dnl AM_INIT_AUTOMAKE(package,version, [no-define])\n \n-AC_DEFUN([AM_INIT_AUTOMAKE],\n+AC_DEFUN(AM_INIT_AUTOMAKE,\n [AC_REQUIRE([AC_PROG_INSTALL])\n PACKAGE=[$1]\n AC_SUBST(PACKAGE)\n@@ -2301,7 +2271,7 @@ AC_REQUIRE([AC_PROG_MAKE_SET])])\n # Check to make sure that the build environment is sane.\n #\n \n-AC_DEFUN([AM_SANITY_CHECK],\n+AC_DEFUN(AM_SANITY_CHECK,\n [AC_MSG_CHECKING([whether build environment is sane])\n # Just in case\n sleep 1\n@@ -2342,7 +2312,7 @@ AC_MSG_RESULT(yes)])\n \n dnl AM_MISSING_PROG(NAME, PROGRAM, DIRECTORY)\n dnl The program must properly implement --version.\n-AC_DEFUN([AM_MISSING_PROG],\n+AC_DEFUN(AM_MISSING_PROG,\n [AC_MSG_CHECKING(for working $2)\n # Run test in a subshell; some versions of sh will print an error if\n # an executable is not found, even if stderr is redirected.\n@@ -2358,7 +2328,7 @@ AC_SUBST($1)])\n \n # Like AC_CONFIG_HEADER, but automatically create stamp file.\n \n-AC_DEFUN([AM_CONFIG_HEADER],\n+AC_DEFUN(AM_CONFIG_HEADER,\n [AC_PREREQ([2.12])\n AC_CONFIG_HEADER([$1])\n dnl When config.status generates a header, we must update the stamp-h file."}, {"sha": "516b41a287a35474acfbf4dc8c89fc1c85bbe9ee", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1399, "deletions": 1490, "changes": 2889, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f235b6d54d6c0cb5daabf42863aa4057ae6066d/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f235b6d54d6c0cb5daabf42863aa4057ae6066d/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=2f235b6d54d6c0cb5daabf42863aa4057ae6066d"}, {"sha": "3f6c527736f1a5161d80d3acd72ed6412904bbd5", "filename": "libstdc++-v3/configure.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f235b6d54d6c0cb5daabf42863aa4057ae6066d/libstdc%2B%2B-v3%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f235b6d54d6c0cb5daabf42863aa4057ae6066d/libstdc%2B%2B-v3%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.in?ref=2f235b6d54d6c0cb5daabf42863aa4057ae6066d", "patch": "@@ -37,13 +37,13 @@ AC_CANONICAL_SYSTEM\n target_alias=${target_alias-$target}\n AC_SUBST(target_alias)\n \n-AM_INIT_AUTOMAKE($PACKAGE, $release_VERSION)\n-AM_CONFIG_HEADER(config.h)\n-\n # Runs configure.target, finds CC, CXX and assorted other critical bits.\n # Must run this before the GLIBCPP_ENABLE_* macros below.\n GLIBCPP_CONFIGURE(.)\n \n+AM_INIT_AUTOMAKE($PACKAGE, $gcc_version)\n+AM_CONFIG_HEADER(config.h)\n+\n AC_LIBTOOL_DLOPEN\n AM_PROG_LIBTOOL\n AC_SUBST(enable_shared)"}]}