{"sha": "d51cad0b840a14c66732cb6a166c11ddf55d18b2", "node_id": "C_kwDOANBUbNoAKGQ1MWNhZDBiODQwYTE0YzY2NzMyY2I2YTE2NmMxMWRkZjU1ZDE4YjI", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2022-02-12T23:44:48Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2022-02-14T13:39:13Z"}, "message": "amdgcn: Allow vector reductions on constants\n\nObviously it would be better if these reductions could be evaluated at compile\ntime, but this will avoid an ICE.\n\ngcc/ChangeLog:\n\n\t* config/gcn/gcn.cc (gcn_expand_reduc_scalar): Use force_reg.", "tree": {"sha": "a32526d0c87e88706249336a16f4c92907aa343b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a32526d0c87e88706249336a16f4c92907aa343b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d51cad0b840a14c66732cb6a166c11ddf55d18b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d51cad0b840a14c66732cb6a166c11ddf55d18b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d51cad0b840a14c66732cb6a166c11ddf55d18b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d51cad0b840a14c66732cb6a166c11ddf55d18b2/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a1a3afb5fb36e2d10ad92bf788e16d837451571", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a1a3afb5fb36e2d10ad92bf788e16d837451571", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a1a3afb5fb36e2d10ad92bf788e16d837451571"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "402f0256411114884c9e7adee6d5e97c76f7ccf8", "filename": "gcc/config/gcn/gcn.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d51cad0b840a14c66732cb6a166c11ddf55d18b2/gcc%2Fconfig%2Fgcn%2Fgcn.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d51cad0b840a14c66732cb6a166c11ddf55d18b2/gcc%2Fconfig%2Fgcn%2Fgcn.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.cc?ref=d51cad0b840a14c66732cb6a166c11ddf55d18b2", "patch": "@@ -4460,7 +4460,7 @@ gcn_expand_reduc_scalar (machine_mode mode, rtx src, int unspec)\n      pair of lanes, then on every pair of results from the previous\n      iteration (thereby effectively reducing every 4 lanes) and so on until\n      all lanes are reduced.  */\n-  rtx in, out = src;\n+  rtx in, out = force_reg (mode, src);\n   for (int i = 0, shift = 1; i < 6; i++, shift <<= 1)\n     {\n       rtx shift_val = gen_rtx_CONST_INT (VOIDmode, shift);"}]}