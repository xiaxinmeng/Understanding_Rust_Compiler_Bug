{"sha": "1e41e866818892f967b7c8de88c2877819124d13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU0MWU4NjY4MTg4OTJmOTY3YjdjOGRlODhjMjg3NzgxOTEyNGQxMw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-02-12T15:31:54Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-02-12T15:31:54Z"}, "message": "h8300.c (shift_alg_hi): Improve the 15-bit logical shifts on H8/300.\n\n\t* config/h8300/h8300.c (shift_alg_hi): Improve the 15-bit\n\tlogical shifts on H8/300.\n\t(shift_alg_si): Improve several shifts on H8/300.\n\t(get_shift_alg): Likewise.\n\nFrom-SVN: r49708", "tree": {"sha": "e39e36a107fa6d645ce850c8c0aba4adf3c38f5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e39e36a107fa6d645ce850c8c0aba4adf3c38f5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e41e866818892f967b7c8de88c2877819124d13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e41e866818892f967b7c8de88c2877819124d13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e41e866818892f967b7c8de88c2877819124d13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e41e866818892f967b7c8de88c2877819124d13/comments", "author": null, "committer": null, "parents": [{"sha": "a36a47ad85ed333940a350b02a2b0ab6439f0289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a36a47ad85ed333940a350b02a2b0ab6439f0289", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a36a47ad85ed333940a350b02a2b0ab6439f0289"}], "stats": {"total": 119, "additions": 96, "deletions": 23}, "files": [{"sha": "03b4b9e31bd465a9dc2a86a223820a5857cfeb41", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e41e866818892f967b7c8de88c2877819124d13/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e41e866818892f967b7c8de88c2877819124d13/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e41e866818892f967b7c8de88c2877819124d13", "patch": "@@ -1,3 +1,10 @@\n+2002-02-12  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.c (shift_alg_hi): Improve the 15-bit\n+\tlogical shifts on H8/300.\n+\t(shift_alg_si): Improve several shifts on H8/300.\n+\t(get_shift_alg): Likewise.\n+\n 2002-02-12  Graham Stott  <grahams@redhat.com>\n \n \t* config/pa/pa.c (compute_movstrsi_length): Fix typos."}, {"sha": "dae7defb6f56b977b97f4a560a240972176a7088", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 89, "deletions": 23, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e41e866818892f967b7c8de88c2877819124d13/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e41e866818892f967b7c8de88c2877819124d13/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=1e41e866818892f967b7c8de88c2877819124d13", "patch": "@@ -2012,9 +2012,9 @@ static const enum shift_alg shift_alg_hi[3][3][16] = {\n     /*  0    1    2    3    4    5    6    7  */\n     /*  8    9   10   11   12   13   14   15  */\n     { INL, INL, INL, INL, INL, LOP, LOP, SPC,\n-      SPC, SPC, SPC, SPC, SPC, LOP, LOP, ROT }, /* SHIFT_ASHIFT   */\n+      SPC, SPC, SPC, SPC, SPC, LOP, LOP, SPC }, /* SHIFT_ASHIFT   */\n     { INL, INL, INL, INL, INL, LOP, LOP, SPC,\n-      SPC, SPC, SPC, SPC, SPC, LOP, LOP, ROT }, /* SHIFT_LSHIFTRT */\n+      SPC, SPC, SPC, SPC, SPC, LOP, LOP, SPC }, /* SHIFT_LSHIFTRT */\n     { INL, INL, INL, INL, INL, LOP, LOP, SPC,\n       SPC, SPC, SPC, SPC, SPC, LOP, LOP, SPC }, /* SHIFT_ASHIFTRT */\n   },\n@@ -2051,16 +2051,16 @@ static const enum shift_alg shift_alg_si[3][3][32] = {\n     /* 24   25   26   27   28   29   30   31  */\n     { INL, INL, INL, LOP, LOP, LOP, LOP, LOP,\n       SPC, LOP, LOP, LOP, LOP, LOP, LOP, LOP,\n-      SPC, LOP, LOP, LOP, LOP, LOP, LOP, LOP,\n-      LOP, LOP, LOP, LOP, LOP, LOP, LOP, SPC }, /* SHIFT_ASHIFT   */\n+      SPC, SPC, SPC, SPC, SPC, LOP, LOP, LOP,\n+      SPC, SPC, SPC, SPC, LOP, LOP, LOP, SPC }, /* SHIFT_ASHIFT   */\n     { INL, INL, INL, LOP, LOP, LOP, LOP, LOP,\n-      SPC, LOP, LOP, LOP, LOP, LOP, LOP, LOP,\n-      SPC, LOP, LOP, LOP, LOP, LOP, LOP, LOP,\n-      LOP, LOP, LOP, LOP, LOP, LOP, LOP, SPC }, /* SHIFT_LSHIFTRT */\n+      SPC, SPC, LOP, LOP, LOP, LOP, LOP, SPC,\n+      SPC, SPC, SPC, LOP, LOP, LOP, LOP, LOP,\n+      SPC, SPC, SPC, SPC, SPC, LOP, LOP, SPC }, /* SHIFT_LSHIFTRT */\n     { INL, INL, INL, LOP, LOP, LOP, LOP, LOP,\n-      SPC, LOP, LOP, LOP, LOP, LOP, LOP, LOP,\n-      SPC, LOP, LOP, LOP, LOP, LOP, LOP, LOP,\n-      LOP, LOP, LOP, LOP, LOP, LOP, LOP, SPC }, /* SHIFT_ASHIFTRT */\n+      SPC, LOP, LOP, LOP, LOP, LOP, LOP, SPC,\n+      SPC, SPC, LOP, LOP, LOP, LOP, LOP, LOP,\n+      SPC, SPC, SPC, LOP, LOP, LOP, LOP, SPC }, /* SHIFT_ASHIFTRT */\n   },\n   {\n     /* TARGET_H8300H  */\n@@ -2282,23 +2282,36 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t      goto end;\n \t    }\n \t}\n-      else if (count == 15 && shift_type == SHIFT_ASHIFTRT)\n+      else if (count == 15)\n \t{\n-\t  info->special = \"shll\\t%t0\\n\\tsubx\\t%t0,%t0\\n\\tmov.b\\t%t0,%s0\";\n-\t  goto end;\n+\t  switch (shift_type)\n+\t    {\n+\t    case SHIFT_ASHIFT:\n+\t      info->special = \"bld\\t#0,%s0\\n\\txor\\t%s0,%s0\\n\\txor\\t%t0,%t0\\n\\tbst\\t#7,%t0\";\n+\t      goto end;\n+\t    case SHIFT_LSHIFTRT:\n+\t      info->special = \"bld\\t#7,%t0\\n\\txor\\t%s0,%s0\\n\\txor\\t%t0,%t0\\n\\tbst\\t#0,%s0\";\n+\t      goto end;\n+\t    case SHIFT_ASHIFTRT:\n+\t      info->special = \"shll\\t%t0\\n\\tsubx\\t%t0,%t0\\n\\tmov.b\\t%t0,%s0\";\n+\t      goto end;\n+\t    }\n \t}\n       abort ();\n \n     case SIshift:\n-      if (count == 8 && TARGET_H8300)\n+      if (TARGET_H8300 && 8 <= count && count <= 9)\n \t{\n+\t  info->remainder = count - 8;\n+\n \t  switch (shift_type)\n \t    {\n \t    case SHIFT_ASHIFT:\n \t      info->special = \"mov.b\\t%y0,%z0\\n\\tmov.b\\t%x0,%y0\\n\\tmov.b\\t%w0,%x0\\n\\tsub.b\\t%w0,%w0\";\n \t      goto end;\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"mov.b\\t%x0,%w0\\n\\tmov.b\\t%y0,%x0\\n\\tmov.b\\t%z0,%y0\\n\\tsub.b\\t%z0,%z0\";\n+\t      info->shift1  = \"shlr\\t%y0\\n\\trotxr\\t%x0\\n\\trotxr\\t%w0\";\n \t      goto end;\n \t    case SHIFT_ASHIFTRT:\n \t      info->special = \"mov.b\\t%x0,%w0\\n\\tmov.b\\t%y0,%x0\\n\\tmov.b\\t%z0,%y0\\n\\tshll\\t%z0\\n\\tsubx\\t%z0,%z0\";\n@@ -2320,6 +2333,20 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t      goto end;\n \t    }\n \t}\n+      else if (count == 15 && TARGET_H8300)\n+\t{\n+\t  switch (shift_type)\n+\t    {\n+\t    case SHIFT_ASHIFT:\n+\t      abort ();\n+\t    case SHIFT_LSHIFTRT:\n+\t      info->special = \"bld\\t#7,%z0\\n\\tmov.w\\t%e0,%f0\\n\\txor\\t%y0,%y0\\n\\txor\\t%z0,%z0\\n\\trotxl\\t%w0,%w0\\n\\trotxl\\t%x0,%x0\\n\\trotxl\\t%y0,%y0\";\n+\t      goto end;\n+\t    case SHIFT_ASHIFTRT:\n+\t      info->special = \"bld\\t#7,%z0\\n\\tmov.w\\t%e0,%f0\\n\\trotxl\\t%w0,%w0\\n\\trotxl\\t%x0,%x0\\n\\tsubx\\t%y0,%y0\\n\\tsubx\\t%z0,%z0\";\n+\t      goto end;\n+\t    }\n+\t}\n       else if (count == 15 && !TARGET_H8300)\n \t{\n \t  switch (shift_type)\n@@ -2334,7 +2361,7 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t      abort ();\n \t    }\n \t}\n-      else if ((TARGET_H8300 && count == 16)\n+      else if ((TARGET_H8300 && 16 <= count && count <= 20)\n \t       || (TARGET_H8300H && 16 <= count && count <= 19)\n \t       || (TARGET_H8300S && 16 <= count && count <= 21))\n \t{\n@@ -2344,24 +2371,63 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t    {\n \t    case SHIFT_ASHIFT:\n \t      info->special = \"mov.w\\t%f0,%e0\\n\\tsub.w\\t%f0,%f0\";\n-\t      info->shift1  = \"shll.l\\t%S0\";\n-\t      info->shift2  = \"shll.l\\t#2,%S0\";\n+\t      if (TARGET_H8300)\n+\t\t{\n+\t\t  info->shift1 = \"add.w\\t%e0,%e0\";\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  info->shift1 = \"shll.l\\t%S0\";\n+\t\t  info->shift2 = \"shll.l\\t#2,%S0\";\n+\t\t}\n \t      goto end;\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f0\\n\\tsub.w\\t%e0,%e0\";\n-\t      info->shift1  = \"shlr.l\\t%S0\";\n-\t      info->shift2  = \"shlr.l\\t#2,%S0\";\n+\t      if (TARGET_H8300)\n+\t\t{\n+\t\t  info->shift1 = \"shlr\\t%x0\\n\\trotxr\\t%w0\";\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  info->shift1 = \"shlr.l\\t%S0\";\n+\t\t  info->shift2 = \"shlr.l\\t#2,%S0\";\n+\t\t}\n \t      goto end;\n \t    case SHIFT_ASHIFTRT:\n \t      if (TARGET_H8300)\n-\t\tinfo->special = \"mov.w\\t%e0,%f0\\n\\tshll\\t%z0\\n\\tsubx\\t%z0,%z0\\n\\tmov.b\\t%z0,%y0\";\n+\t\t{\n+\t\t  info->special = \"mov.w\\t%e0,%f0\\n\\tshll\\t%z0\\n\\tsubx\\t%z0,%z0\\n\\tmov.b\\t%z0,%y0\";\n+\t\t  info->shift1  = \"shar\\t%x0\\n\\trotxr\\t%w0\";\n+\t\t}\n \t      else\n-\t\tinfo->special = \"mov.w\\t%e0,%f0\\n\\texts.l\\t%S0\";\n-\t      info->shift1 = \"shar.l\\t%S0\";\n-\t      info->shift2 = \"shar.l\\t#2,%S0\";\n+\t\t{\n+\t\t  info->special = \"mov.w\\t%e0,%f0\\n\\texts.l\\t%S0\";\n+\t\t  info->shift1  = \"shar.l\\t%S0\";\n+\t\t  info->shift2  = \"shar.l\\t#2,%S0\";\n+\t\t}\n \t      goto end;\n \t    }\n \t}\n+      else if (TARGET_H8300 && 24 <= count && count <= 28)\n+ \t{\n+ \t  info->remainder = count - 24;\n+ \n+ \t  switch (shift_type)\n+ \t    {\n+ \t    case SHIFT_ASHIFT:\n+ \t      info->special = \"mov.b\\t%w0,%z0\\n\\tsub.b\\t%y0,%y0\\n\\tsub.w\\t%f0,%f0\";\n+ \t      info->shift1  = \"shll.b\\t%z0\";\n+ \t      goto end;\n+ \t    case SHIFT_LSHIFTRT:\n+ \t      info->special = \"mov.b\\t%z0,%w0\\n\\tsub.b\\t%x0,%x0\\n\\tsub.w\\t%e0,%e0\";\n+ \t      info->shift1  = \"shlr.b\\t%w0\";\n+ \t      goto end;\n+ \t    case SHIFT_ASHIFTRT:\n+ \t      info->special = \"mov.b\\t%z0,%w0\\n\\tbld\\t#7,%w0\\n\\tsubx\\t%x0,%x0\\n\\tsubx\\t%x0,%x0\\n\\tsubx\\t%x0,%x0\";\n+ \t      info->shift1  = \"shar.b\\t%w0\";\n+  \t      goto end;\n+  \t    }\n+  \t}\n       else if ((TARGET_H8300H && count == 24)\n \t       || (TARGET_H8300S && 24 <= count && count <= 25))\n \t{"}]}