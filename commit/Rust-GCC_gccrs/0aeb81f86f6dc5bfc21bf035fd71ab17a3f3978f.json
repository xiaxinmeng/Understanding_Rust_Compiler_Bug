{"sha": "0aeb81f86f6dc5bfc21bf035fd71ab17a3f3978f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFlYjgxZjg2ZjZkYzViZmMyMWJmMDM1ZmQ3MWFiMTdhM2YzOTc4Zg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-18T11:42:18Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-18T11:42:18Z"}, "message": "Don't define uses-allocator variable templates in C++11\n\n\t* include/bits/uses_allocator.h (__is_uses_allocator_constructible_v)\n\t(__is_nothrow_uses_allocator_constructible_v): Only define for C++14\n\tand later.\n\nFrom-SVN: r241301", "tree": {"sha": "4b99995fda2a227f17a7008407104b45e7f514e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b99995fda2a227f17a7008407104b45e7f514e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0aeb81f86f6dc5bfc21bf035fd71ab17a3f3978f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aeb81f86f6dc5bfc21bf035fd71ab17a3f3978f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0aeb81f86f6dc5bfc21bf035fd71ab17a3f3978f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aeb81f86f6dc5bfc21bf035fd71ab17a3f3978f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b64e82394fd4ad74220946bdab73bee9ad63bc0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b64e82394fd4ad74220946bdab73bee9ad63bc0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b64e82394fd4ad74220946bdab73bee9ad63bc0a"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "d371b857475835f94f50e00e265e6faa7e016231", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aeb81f86f6dc5bfc21bf035fd71ab17a3f3978f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aeb81f86f6dc5bfc21bf035fd71ab17a3f3978f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0aeb81f86f6dc5bfc21bf035fd71ab17a3f3978f", "patch": "@@ -1,7 +1,13 @@\n+2016-10-18  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/uses_allocator.h (__is_uses_allocator_constructible_v)\n+\t(__is_nothrow_uses_allocator_constructible_v): Only define for C++14\n+\tand later.\n+\n 2016-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/27_io/basic_filebuf/close/12790-1.cc: Remove 'test'\n-        variables.\n+\tvariables.\n \t* testsuite/27_io/basic_filebuf/close/char/1.cc: Likewise.\n \t* testsuite/27_io/basic_filebuf/close/char/12790-1.cc: Likewise.\n \t* testsuite/27_io/basic_filebuf/close/char/12790-2.cc: Likewise."}, {"sha": "612c53cb1191e58b32dfab3af7bbc4f66ff6502c", "filename": "libstdc++-v3/include/bits/uses_allocator.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aeb81f86f6dc5bfc21bf035fd71ab17a3f3978f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fuses_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aeb81f86f6dc5bfc21bf035fd71ab17a3f3978f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fuses_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fuses_allocator.h?ref=0aeb81f86f6dc5bfc21bf035fd71ab17a3f3978f", "patch": "@@ -126,9 +126,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     : __is_uses_allocator_predicate<is_constructible, _Tp, _Alloc, _Args...>\n     { };\n \n+#if __cplusplus >= 201402L\n   template<typename _Tp, typename _Alloc, typename... _Args>\n     constexpr bool __is_uses_allocator_constructible_v =\n       __is_uses_allocator_constructible<_Tp, _Alloc, _Args...>::value;\n+#endif // C++14\n \n   template<typename _Tp, typename _Alloc, typename... _Args>\n     struct __is_nothrow_uses_allocator_constructible\n@@ -137,9 +139,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     { };\n \n \n+#if __cplusplus >= 201402L\n   template<typename _Tp, typename _Alloc, typename... _Args>\n     constexpr bool __is_nothrow_uses_allocator_constructible_v =\n       __is_nothrow_uses_allocator_constructible<_Tp, _Alloc, _Args...>::value;\n+#endif // C++14\n \n   template<typename _Tp, typename... _Args>\n     void __uses_allocator_construct_impl(__uses_alloc0 __a, _Tp* __ptr,"}]}