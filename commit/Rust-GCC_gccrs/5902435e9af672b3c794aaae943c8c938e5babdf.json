{"sha": "5902435e9af672b3c794aaae943c8c938e5babdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTkwMjQzNWU5YWY2NzJiM2M3OTRhYWFlOTQzYzhjOTM4ZTViYWJkZg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2005-02-28T01:28:09Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2005-02-28T01:28:09Z"}, "message": "boz_1.f90: New test.\n\n* gfortran.dg/boz_1.f90: New test.\n* gfortran.dg/boz_3.f90: New test.\n* gfortran.dg/boz_4.f90: New test.\n\nFrom-SVN: r95646", "tree": {"sha": "90720e5d5ddaff6a4bd55911c16d7b987b76a332", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90720e5d5ddaff6a4bd55911c16d7b987b76a332"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5902435e9af672b3c794aaae943c8c938e5babdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5902435e9af672b3c794aaae943c8c938e5babdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5902435e9af672b3c794aaae943c8c938e5babdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5902435e9af672b3c794aaae943c8c938e5babdf/comments", "author": null, "committer": null, "parents": [{"sha": "ae18f1763236c4ed79f207117dc5465987f97cec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae18f1763236c4ed79f207117dc5465987f97cec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae18f1763236c4ed79f207117dc5465987f97cec"}], "stats": {"total": 107, "additions": 107, "deletions": 0}, "files": [{"sha": "9e5b5f00c4779e27653c592bd8e679fdf20b9729", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5902435e9af672b3c794aaae943c8c938e5babdf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5902435e9af672b3c794aaae943c8c938e5babdf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5902435e9af672b3c794aaae943c8c938e5babdf", "patch": "@@ -1,3 +1,9 @@\n+2005-02-27  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* gfortran.dg/boz_1.f90: New test.\n+\t* gfortran.dg/boz_3.f90: New test.\n+\t* gfortran.dg/boz_4.f90: New test.\n+\n 2005-02-27  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* gfortran.dg/ishft.f90:  Remove kind suffix from BOZ constant"}, {"sha": "abf02d3604345e7b01a6f58396702eb5f5bb04af", "filename": "gcc/testsuite/gfortran.dg/boz_1.f90", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5902435e9af672b3c794aaae943c8c938e5babdf/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5902435e9af672b3c794aaae943c8c938e5babdf/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_1.f90?ref=5902435e9af672b3c794aaae943c8c938e5babdf", "patch": "@@ -0,0 +1,38 @@\n+! { dg-do run }\n+! Test the boz handling\n+program boz\n+\n+   implicit none\n+\n+   integer(1), parameter :: b1 = b'00000001'\n+   integer(2), parameter :: b2 = b'0101010110101010'\n+   integer(4), parameter :: b4 = b'01110000111100001111000011110000'\n+   integer(8), parameter :: &\n+   &  b8 = b'0111000011110000111100001111000011110000111100001111000011110000'\n+\n+   integer(1), parameter :: o1 = o'12'\n+   integer(2), parameter :: o2 = o'4321'\n+   integer(4), parameter :: o4 = o'43210765'\n+   integer(8), parameter :: o8 = o'1234567076543210'\n+\n+   integer(1), parameter :: z1 = z'a'\n+   integer(2), parameter :: z2 = z'ab'\n+   integer(4), parameter :: z4 = z'dead'\n+   integer(8), parameter :: z8 = z'deadbeef'\n+\n+   if (z1 /= 10_1) call abort\n+   if (z2 /= 171_2) call abort\n+   if (z4 /= 57005_4) call abort\n+   if (z8 /= 3735928559_8) call abort\n+\n+   if (b1 /= 1_1) call abort\n+   if (b2 /= 21930_2) call abort\n+   if (b4 /= 1894838512_4) call abort\n+   if (b8 /= 8138269444283625712_8) call abort\n+\n+   if (o1 /= 10_1) call abort\n+   if (o2 /= 2257_2) call abort\n+   if (o4 /= 9245173_4) call abort\n+   if (o8 /= 45954958542472_8) call abort\n+\n+end program boz"}, {"sha": "96184deb7dff2b5fd0f6656a1ee585af919b339f", "filename": "gcc/testsuite/gfortran.dg/boz_3.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5902435e9af672b3c794aaae943c8c938e5babdf/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5902435e9af672b3c794aaae943c8c938e5babdf/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_3.f90?ref=5902435e9af672b3c794aaae943c8c938e5babdf", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do run }\n+! Test that the BOZ constant on the RHS, which are of different KIND than\n+! the LHS, are correctly converted.\n+!\n+program boz\n+\n+   implicit none\n+\n+   integer(1), parameter :: b1 = b'000000000001111'\n+   integer(2), parameter :: b2 = b'00000000000000000111000011110000'\n+   integer(4), parameter :: &\n+   &  b4 = b'0000000000000000000000000000000001110000111100001111000011110000'\n+\n+   integer(1), parameter :: o1 = o'0012'\n+   integer(2), parameter :: o2 = o'0004321'\n+   integer(4), parameter :: o4 = o'0000000043210765'\n+\n+   integer(1), parameter :: z1 = z'0a'\n+   integer(2), parameter :: z2 = z'00ab'\n+   integer(4), parameter :: z4 = z'0000dead'\n+\n+   if (b1 /= 15_1) call abort\n+   if (b2 /= 28912_2) call abort\n+   if (b4 /= 1894838512_4) call abort\n+\n+   if (o1 /= 10_1) call abort\n+   if (o2 /= 2257_2) call abort\n+   if (o4 /= 9245173_4) call abort\n+\n+   if (z1 /= 10_1) call abort\n+   if (z2 /= 171_2) call abort\n+   if (z4 /= 57005_4) call abort\n+\n+end program boz"}, {"sha": "d016df22c49337f1bcd099340e7b43ed41f1ccfc", "filename": "gcc/testsuite/gfortran.dg/boz_4.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5902435e9af672b3c794aaae943c8c938e5babdf/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5902435e9af672b3c794aaae943c8c938e5babdf/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_4.f90?ref=5902435e9af672b3c794aaae943c8c938e5babdf", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do compile }\n+! Test that the conversion of a BOZ constant that is too large for the\n+! integer variable is caught by the compiler.\n+program boz\n+\n+   implicit none\n+\n+   integer(1), parameter :: &\n+   &  b1 = b'0101010110101010'  ! { dg-error \"overflow converting\" }\n+   integer(2), parameter :: &\n+   &  b2 = b'01110000111100001111000011110000'  ! { dg-error \"overflow converting\" }\n+   integer(4), parameter :: &\n+   &  b4 = b'0111000011110000111100001111000011110000111100001111000011110000'  ! { dg-error \"overflow converting\" }\n+\n+   integer(1), parameter :: &\n+   &  o1 = o'1234567076543210'  ! { dg-error \"overflow converting\" }\n+   integer(2), parameter :: &\n+   &  o2 = o'1234567076543210'  ! { dg-error \"overflow converting\" }\n+   integer(4), parameter :: &\n+   &  o4 = o'1234567076543210'  ! { dg-error \"overflow converting\" }\n+\n+   integer(1), parameter :: &\n+   &  z1 = z'deadbeef'  ! { dg-error \"overflow converting\" }\n+   integer(2), parameter :: &\n+   &  z2 = z'deadbeef'  ! { dg-error \"overflow converting\" }\n+   integer(4), parameter :: &\n+   &  z4 = z'deadbeeffeed'  ! { dg-error \"overflow converting\" }\n+\n+end program boz"}]}