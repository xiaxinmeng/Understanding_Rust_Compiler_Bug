{"sha": "c903545b967a35ef41771e5f52ba2517ba83f492", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkwMzU0NWI5NjdhMzVlZjQxNzcxZTVmNTJiYTI1MTdiYTgzZjQ5Mg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-10-15T18:29:53Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-10-15T18:29:53Z"}, "message": "Allow spaces in tag names.\n\nFrom-SVN: r2479", "tree": {"sha": "202a06580a03ad5fbd767b67c9f88bd9d250aa26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/202a06580a03ad5fbd767b67c9f88bd9d250aa26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c903545b967a35ef41771e5f52ba2517ba83f492", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c903545b967a35ef41771e5f52ba2517ba83f492", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c903545b967a35ef41771e5f52ba2517ba83f492", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c903545b967a35ef41771e5f52ba2517ba83f492/comments", "author": null, "committer": null, "parents": [{"sha": "907b71792398b821ba524be1fd48dcaf8fd51144", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/907b71792398b821ba524be1fd48dcaf8fd51144", "html_url": "https://github.com/Rust-GCC/gccrs/commit/907b71792398b821ba524be1fd48dcaf8fd51144"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "94ecc558f8f797d185db2517ab5cb006089c936b", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c903545b967a35ef41771e5f52ba2517ba83f492/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c903545b967a35ef41771e5f52ba2517ba83f492/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=c903545b967a35ef41771e5f52ba2517ba83f492", "patch": "@@ -2926,7 +2926,7 @@ parse_def (name_start)\n \n      #.def   SMANIP<long unsigned int>; .scl 10; .type 0x8; .size 8; .endef */\n \n-  for (name_end_p1 = name_start; (ch = *name_end_p1) != ';' || ch == '\\0'; name_end_p1++)\n+  for (name_end_p1 = name_start; (ch = *name_end_p1) != ';' && ch != '\\0'; name_end_p1++)\n     ;\n \n   if (ch == '\\0')\n@@ -2992,16 +2992,20 @@ parse_def (name_start)\n \t}\n \n       if (!arg_was_number)\n-\tfor (arg_end_p1 = arg_start+1; (ch = *arg_end_p1) != ';'; arg_end_p1++)\n-\t  {\n-\t    if (ch == '\\0' || isspace (ch))\n-\t      {\n-\t\terror_line = __LINE__;\n-\t\tsaber_stop ();\n-\t\tgoto bomb_out;\n-\t      }\n-\t  }\n+\t{\n+\t  /* Allow spaces and such in names for G++ templates.  */\n+\t  for (arg_end_p1 = arg_start+1;\n+\t       (ch = *arg_end_p1) != ';' && ch != '\\0';\n+\t       arg_end_p1++)\n+\t    ;\n \n+\t  if (ch == '\\0')\n+\t    {\n+\t      error_line = __LINE__;\n+\t      saber_stop ();\n+\t      goto bomb_out;\n+\t    }\n+\t}\n \n       /* Classify the directives now.  */\n       len = dir_end_p1 - dir_start;"}]}