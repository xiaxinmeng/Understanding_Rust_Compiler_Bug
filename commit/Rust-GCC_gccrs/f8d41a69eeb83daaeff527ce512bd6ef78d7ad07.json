{"sha": "f8d41a69eeb83daaeff527ce512bd6ef78d7ad07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhkNDFhNjllZWI4M2RhYWVmZjUyN2NlNTEyYmQ2ZWY3OGQ3YWQwNw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-05-20T00:41:26Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-05-20T00:41:26Z"}, "message": "jump.c (can_reverse_comparison_p): Do not abort if the comparison insn for a conditional jump can not be found.\n\np\n        * jump.c (can_reverse_comparison_p): Do not abort if the comparison\n        insn for a conditional jump can not be found.\n\nFrom-SVN: r27043", "tree": {"sha": "e9f8c90ad2fc272b8aef5ef38c952e6bc1445be6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9f8c90ad2fc272b8aef5ef38c952e6bc1445be6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8d41a69eeb83daaeff527ce512bd6ef78d7ad07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8d41a69eeb83daaeff527ce512bd6ef78d7ad07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8d41a69eeb83daaeff527ce512bd6ef78d7ad07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8d41a69eeb83daaeff527ce512bd6ef78d7ad07/comments", "author": null, "committer": null, "parents": [{"sha": "b87bc8f3ad3cc2ff072868b81901dd6d32c3ce62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b87bc8f3ad3cc2ff072868b81901dd6d32c3ce62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b87bc8f3ad3cc2ff072868b81901dd6d32c3ce62"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "01df0dbba759423856d3c189215ea97ddf3193a6", "filename": "gcc/jump.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d41a69eeb83daaeff527ce512bd6ef78d7ad07/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d41a69eeb83daaeff527ce512bd6ef78d7ad07/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=f8d41a69eeb83daaeff527ce512bd6ef78d7ad07", "patch": "@@ -3151,8 +3151,17 @@ can_reverse_comparison_p (comparison, insn)\n       )\n     {\n       rtx prev = prev_nonnote_insn (insn);\n-      rtx set = single_set (prev);\n+      rtx set;\n \n+      /* If the comparison itself was a loop invariant, it could have been\n+\t hoisted out of the loop.  If we proceed to unroll such a loop, then\n+\t we may not be able to find the comparison when copying the loop.\n+\n+\t Returning zero in that case is the safe thing to do.  */\n+      if (prev == 0)\n+\treturn 0;\n+\n+      set = single_set (prev);\n       if (set == 0 || SET_DEST (set) != arg0)\n \treturn 0;\n "}]}