{"sha": "a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYzOGJkYzJmZGI2YTNmYjE2MTI0ZTdjYTFlMTc4OTA3MGQ1YzBhOA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2007-02-02T19:02:18Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-02-02T19:02:18Z"}, "message": "emit-rtl.c (renumber_insns): Remove.\n\n\t* emit-rtl.c (renumber_insns): Remove.\n\t* flags.h: Remove the extern for flag_renumber_insns.\n\t* rtl.h: Remove the prototype for renumber_insns.\n\t* toplev.c (flag_renumber_insns): Remove.\n\nFrom-SVN: r121517", "tree": {"sha": "2a8e5c1153c6bdbd4e93812889138fc77017db8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a8e5c1153c6bdbd4e93812889138fc77017db8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8/comments", "author": null, "committer": null, "parents": [{"sha": "88c6f1018217155e6a92734074450505703a827b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88c6f1018217155e6a92734074450505703a827b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88c6f1018217155e6a92734074450505703a827b"}], "stats": {"total": 45, "additions": 7, "deletions": 38}, "files": [{"sha": "95987efeb569b2ac9d3705f5cbc3be00f7e0e156", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8", "patch": "@@ -1,3 +1,10 @@\n+2007-02-02  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* emit-rtl.c (renumber_insns): Remove.\n+\t* flags.h: Remove the extern for flag_renumber_insns.\n+\t* rtl.h: Remove the prototype for renumber_insns.\n+\t* toplev.c (flag_renumber_insns): Remove.\n+\n 2007-02-02  Hui-May Chang  <hm.chang@apple.com>\n \n \tRevert for x86 darwin:"}, {"sha": "94381a9e16c1b5dc02584f9112ba25fa4f6c3432", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8", "patch": "@@ -2806,33 +2806,6 @@ get_max_uid (void)\n {\n   return cur_insn_uid;\n }\n-\n-/* Renumber instructions so that no instruction UIDs are wasted.  */\n-\n-void\n-renumber_insns (void)\n-{\n-  rtx insn;\n-\n-  /* If we're not supposed to renumber instructions, don't.  */\n-  if (!flag_renumber_insns)\n-    return;\n-\n-  /* If there aren't that many instructions, then it's not really\n-     worth renumbering them.  */\n-  if (flag_renumber_insns == 1 && get_max_uid () < 25000)\n-    return;\n-\n-  cur_insn_uid = 1;\n-\n-  for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n-    {\n-      if (dump_file)\n-\tfprintf (dump_file, \"Renumbering insn %d to %d\\n\",\n-\t\t INSN_UID (insn), cur_insn_uid);\n-      INSN_UID (insn) = cur_insn_uid++;\n-    }\n-}\n \f\n /* Return the next insn.  If it is a SEQUENCE, return the first insn\n    of the sequence.  */"}, {"sha": "2671ec38a09b04b90b3085d914ab7ee0a4e83fac", "filename": "gcc/flags.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8", "patch": "@@ -187,11 +187,6 @@ extern int flag_debug_asm;\n extern int flag_next_runtime;\n \n extern int flag_dump_rtl_in_asm;\n-\n-/* If one, renumber instruction UIDs to reduce the number of\n-   unused UIDs if there are a lot of instructions.  If greater than\n-   one, unconditionally renumber instruction UIDs.  */\n-extern int flag_renumber_insns;\n \f\n /* Other basic status info about current function.  */\n "}, {"sha": "80c3114c5e7beed928087dfb6b31df77f5d5d121", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8", "patch": "@@ -2059,7 +2059,6 @@ extern void add_insn_before (rtx, rtx);\n extern void add_insn_after (rtx, rtx);\n extern void remove_insn (rtx);\n extern rtx emit (rtx);\n-extern void renumber_insns (void);\n extern rtx delete_insn (rtx);\n extern rtx entry_of_function (void);\n extern void emit_insn_at_entry (rtx);"}, {"sha": "56a78b44e60c0e37601cb3037e712af0665eaeac", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=a638bdc2fdb6a3fb16124e7ca1e1789070d5c0a8", "patch": "@@ -333,11 +333,6 @@ int flag_dump_rtl_in_asm = 0;\n    the support provided depends on the backend.  */\n rtx stack_limit_rtx;\n \n-/* If one, renumber instruction UIDs to reduce the number of\n-   unused UIDs if there are a lot of instructions.  If greater than\n-   one, unconditionally renumber instruction UIDs.  */\n-int flag_renumber_insns = 1;\n-\n /* Nonzero if we should track variables.  When\n    flag_var_tracking == AUTODETECT_VALUE it will be set according\n    to optimize, debug_info_level and debug_hooks in process_options ().  */"}]}