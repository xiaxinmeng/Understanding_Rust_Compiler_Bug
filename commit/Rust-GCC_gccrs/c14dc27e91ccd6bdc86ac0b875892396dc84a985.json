{"sha": "c14dc27e91ccd6bdc86ac0b875892396dc84a985", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE0ZGMyN2U5MWNjZDZiZGM4NmFjMGI4NzU4OTIzOTZkYzg0YTk4NQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-07-10T09:02:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-10T09:02:47Z"}, "message": "[Ada] Crash on aggregate for limited type in extended return\n\nThis patch fixes a compiler abort on an extended return statement whose\nexpression is an aggregate (to be built in place) for a discriminated\nrecord with a limited component. The build-in-place mechanism creates an\naccess type and a renaming declaration  through which individual\ncomponents are assigned. The renamed object is constrained because it is\nlimited, and the renaming declaration does not need to create a local\nsubtype indication for it, which may lead to type mismatches in the\nback-end, and is in any case redundant. This patch extends this\noptimization to the case of records that are limited only because of a\nlimitied component, and not because they are explicit declared limited.\n\n2019-07-10  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch8.adb (Check_Constrained_Object): A record that is\n\tlimited because of the presence of a limited component is\n\tconstrained, and no subtype indiciation needs to be created for\n\tit, just as is the case for declared limited records.\n\ngcc/testsuite/\n\n\t* gnat.dg/limited3.adb, gnat.dg/limited3_pkg.adb,\n\tgnat.dg/limited3_pkg.ads: New testcase.\n\nFrom-SVN: r273350", "tree": {"sha": "4979f01bbad8ef0e0eca5da05e71825604d6d14d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4979f01bbad8ef0e0eca5da05e71825604d6d14d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c14dc27e91ccd6bdc86ac0b875892396dc84a985", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c14dc27e91ccd6bdc86ac0b875892396dc84a985", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c14dc27e91ccd6bdc86ac0b875892396dc84a985", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c14dc27e91ccd6bdc86ac0b875892396dc84a985/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "179682a55cbe229442cf3886e338148be0b12a96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/179682a55cbe229442cf3886e338148be0b12a96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/179682a55cbe229442cf3886e338148be0b12a96"}], "stats": {"total": 86, "additions": 82, "deletions": 4}, "files": [{"sha": "6e9ba85f136bc9781338318f617e5f366d966e87", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c14dc27e91ccd6bdc86ac0b875892396dc84a985/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c14dc27e91ccd6bdc86ac0b875892396dc84a985/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c14dc27e91ccd6bdc86ac0b875892396dc84a985", "patch": "@@ -1,3 +1,10 @@\n+2019-07-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Check_Constrained_Object): A record that is\n+\tlimited because of the presence of a limited component is\n+\tconstrained, and no subtype indiciation needs to be created for\n+\tit, just as is the case for declared limited records.\n+\n 2019-07-10  Yannick Moy  <moy@adacore.com>\n \n \t* sem_aux.adb, sem_aux.ads (Is_Protected_Operation): New"}, {"sha": "58abc9c762924f23dac5212003a19f9ef7e4bf0e", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c14dc27e91ccd6bdc86ac0b875892396dc84a985/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c14dc27e91ccd6bdc86ac0b875892396dc84a985/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=c14dc27e91ccd6bdc86ac0b875892396dc84a985", "patch": "@@ -802,12 +802,17 @@ package body Sem_Ch8 is\n                null;\n \n             --  If a record is limited its size is invariant. This is the case\n-            --  in particular with record types with an access discirminant\n+            --  in particular with record types with an access discriminant\n             --  that are used in iterators. This is an optimization, but it\n             --  also prevents typing anomalies when the prefix is further\n-            --  expanded. Limited types with discriminants are included.\n-\n-            elsif Is_Limited_Record (Typ)\n+            --  expanded. This also applies to limited types with access\n+            --  discriminants.\n+            --  Note that we cannot just use the Is_Limited_Record flag because\n+            --  it does not apply to records with limited components, for which\n+            --  this syntactic flag is not set, but whose size is also fixed.\n+\n+            elsif (Is_Record_Type (Typ)\n+                and then Is_Limited_Type (Typ))\n               or else\n                 (Ekind (Typ) = E_Limited_Private_Type\n                   and then Has_Discriminants (Typ)"}, {"sha": "e2dc5fe38473737e27bd8601fd267c5f8a6941e5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c14dc27e91ccd6bdc86ac0b875892396dc84a985/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c14dc27e91ccd6bdc86ac0b875892396dc84a985/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c14dc27e91ccd6bdc86ac0b875892396dc84a985", "patch": "@@ -1,3 +1,8 @@\n+2019-07-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/limited3.adb, gnat.dg/limited3_pkg.adb,\n+\tgnat.dg/limited3_pkg.ads: New testcase.\n+\n 2019-07-10  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gnat.dg/incomplete7.adb, gnat.dg/incomplete7.ads: New testcase."}, {"sha": "a0da49da157712085c24bca419becac8bf1db531", "filename": "gcc/testsuite/gnat.dg/limited3.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c14dc27e91ccd6bdc86ac0b875892396dc84a985/gcc%2Ftestsuite%2Fgnat.dg%2Flimited3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c14dc27e91ccd6bdc86ac0b875892396dc84a985/gcc%2Ftestsuite%2Fgnat.dg%2Flimited3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flimited3.adb?ref=c14dc27e91ccd6bdc86ac0b875892396dc84a985", "patch": "@@ -0,0 +1,11 @@\n+--  { dg-do run }\n+\n+with Limited3_Pkg; use Limited3_Pkg;\n+\n+procedure Limited3 is\n+   R1 : Rec := F (15);\n+   R2 : Rec := F (-1);\n+   R3 : Var_Rec := FS (20);\n+begin\n+   null;\n+end Limited3;"}, {"sha": "71e271d6eb978aa6f11c8185719895ad8abc066c", "filename": "gcc/testsuite/gnat.dg/limited3_pkg.adb", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c14dc27e91ccd6bdc86ac0b875892396dc84a985/gcc%2Ftestsuite%2Fgnat.dg%2Flimited3_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c14dc27e91ccd6bdc86ac0b875892396dc84a985/gcc%2Ftestsuite%2Fgnat.dg%2Flimited3_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flimited3_pkg.adb?ref=c14dc27e91ccd6bdc86ac0b875892396dc84a985", "patch": "@@ -0,0 +1,20 @@\n+package body Limited3_Pkg is\n+   function F (I : Integer) return Rec is\n+   begin\n+      return (D => False, I => I);\n+   end;\n+\n+   function FS (X : Integer) return Var_Rec is\n+   begin\n+      return (X, (1..X => '?'), Tag => <>);\n+   end FS;\n+\n+   function F2 (I : Integer) return Rec2 is\n+   begin\n+      if I > 0 then\n+         return (D => False, I => I);\n+      else\n+         return (D => True, L => new Limited_Rec);\n+     end if;\n+   end;\n+end Limited3_Pkg;"}, {"sha": "52f211dd9e943c8525999bc62d71912299f6240e", "filename": "gcc/testsuite/gnat.dg/limited3_pkg.ads", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c14dc27e91ccd6bdc86ac0b875892396dc84a985/gcc%2Ftestsuite%2Fgnat.dg%2Flimited3_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c14dc27e91ccd6bdc86ac0b875892396dc84a985/gcc%2Ftestsuite%2Fgnat.dg%2Flimited3_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flimited3_pkg.ads?ref=c14dc27e91ccd6bdc86ac0b875892396dc84a985", "patch": "@@ -0,0 +1,30 @@\n+package Limited3_Pkg is\n+\n+   type Limited_Rec is limited\n+    null record;\n+\n+   type Var_Rec (X : Integer) is record\n+      Name : String (1 .. X);\n+      Tag  : Limited_Rec;\n+   end record;\n+\n+   type Rec (D : Boolean := True) is record\n+      case D is\n+         when True => L : Limited_Rec;\n+         when False => I : Integer;\n+      end case;\n+   end record;\n+\n+   function F (I : Integer) return Rec;\n+\n+   function FS (X : Integer) return Var_Rec;\n+\n+   type Rec2 (D : Boolean := True) is record\n+      case D is\n+         when True => L : access Limited_Rec;\n+         when False => I : Integer;\n+      end case;\n+   end record;\n+\n+   function F2 (I : Integer) return Rec2;\n+end Limited3_Pkg;"}]}