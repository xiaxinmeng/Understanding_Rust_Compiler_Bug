{"sha": "f645e2bd33e2ff6b96e82913d013be4c7cf09052", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY0NWUyYmQzM2UyZmY2Yjk2ZTgyOTEzZDAxM2JlNGM3Y2YwOTA1Mg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-04-17T05:53:11Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-04-17T05:53:11Z"}, "message": "* gcc.c (used_arg): Check whether an option has been removed.\n\nFrom-SVN: r80787", "tree": {"sha": "fc2bcc637d3b868e94f26db4a53f327af3591a7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc2bcc637d3b868e94f26db4a53f327af3591a7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f645e2bd33e2ff6b96e82913d013be4c7cf09052", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f645e2bd33e2ff6b96e82913d013be4c7cf09052", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f645e2bd33e2ff6b96e82913d013be4c7cf09052", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f645e2bd33e2ff6b96e82913d013be4c7cf09052/comments", "author": null, "committer": null, "parents": [{"sha": "04db08dbd114491228b3181f74fd2d0cd57f8ad7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04db08dbd114491228b3181f74fd2d0cd57f8ad7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04db08dbd114491228b3181f74fd2d0cd57f8ad7"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "7566df2be3cf65c716b6c45e244990887e8f91ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f645e2bd33e2ff6b96e82913d013be4c7cf09052/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f645e2bd33e2ff6b96e82913d013be4c7cf09052/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f645e2bd33e2ff6b96e82913d013be4c7cf09052", "patch": "@@ -1,3 +1,7 @@\n+2004-04-17  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* gcc.c (used_arg): Check whether an option has been removed.\n+\n 2004-04-17  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* config.gcc (i[34567]86-*-solaris2*): Default to DWARF-2"}, {"sha": "f9a4e1db3cd6e9c179e05717be0267c0c073966b", "filename": "gcc/gcc.c", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f645e2bd33e2ff6b96e82913d013be4c7cf09052/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f645e2bd33e2ff6b96e82913d013be4c7cf09052/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=f645e2bd33e2ff6b96e82913d013be4c7cf09052", "patch": "@@ -6909,20 +6909,21 @@ used_arg (const char *p, int len)\n \t= xmalloc (sizeof (struct mswitchstr)\n \t\t   * (n_mdswitches + (n_switches ? n_switches : 1)));\n       for (i = 0; i < n_switches; i++)\n-\t{\n-\t  int xlen = strlen (switches[i].part1);\n-\t  for (j = 0; j < cnt; j++)\n-\t    if (xlen == matches[j].len\n-\t\t&& ! strncmp (switches[i].part1, matches[j].str, xlen))\n-\t      {\n-\t\tmswitches[n_mswitches].str = matches[j].replace;\n-\t\tmswitches[n_mswitches].len = matches[j].rep_len;\n-\t\tmswitches[n_mswitches].replace = (char *) 0;\n-\t\tmswitches[n_mswitches].rep_len = 0;\n-\t\tn_mswitches++;\n-\t\tbreak;\n-\t      }\n-\t}\n+\tif (switches[i].live_cond != SWITCH_IGNORE)\n+\t  {\n+\t    int xlen = strlen (switches[i].part1);\n+\t    for (j = 0; j < cnt; j++)\n+\t      if (xlen == matches[j].len\n+\t\t  && ! strncmp (switches[i].part1, matches[j].str, xlen))\n+\t\t{\n+\t\t  mswitches[n_mswitches].str = matches[j].replace;\n+\t\t  mswitches[n_mswitches].len = matches[j].rep_len;\n+\t\t  mswitches[n_mswitches].replace = (char *) 0;\n+\t\t  mswitches[n_mswitches].rep_len = 0;\n+\t\t  n_mswitches++;\n+\t\t  break;\n+\t\t}\n+\t  }\n \n       /* Add MULTILIB_DEFAULTS switches too, as long as they were not present\n \t on the command line nor any options mutually incompatible with"}]}