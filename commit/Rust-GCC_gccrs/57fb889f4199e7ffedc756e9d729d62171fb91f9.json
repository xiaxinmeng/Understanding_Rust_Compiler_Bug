{"sha": "57fb889f4199e7ffedc756e9d729d62171fb91f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdmYjg4OWY0MTk5ZTdmZmVkYzc1NmU5ZDcyOWQ2MjE3MWZiOTFmOQ==", "commit": {"author": {"name": "Ajit Agarwal", "email": "ajitkum@xilinx.com", "date": "2014-08-18T17:04:41Z"}, "committer": {"name": "Michael Eager", "email": "eager@gcc.gnu.org", "date": "2014-08-18T17:04:41Z"}, "message": "Add Init_priority support.\n\nAdded TARGET_ASM_CONSTRUCTOR and TARGET_ASM_DESTRUCTOR macros. These\nmacros allows users to control the order of initialization of objects\ndefined at namespace scope with the init_priority attribute by\nspecifying a relative priority.\n\nChangeLog:\n2014-07-28  Ajit Agarwal  <ajitkum@xilinx.com>\n\n\t* config/microblaze/microblaze.c (microblaze_elf_asm_cdtor): New.\n\t(microblaze_elf_asm_constructor,microblaze_elf_asm_destructor): New.\n\t* config/microblaze/microblaze.h\n\t(TARGET_ASM_CONSTRUCTOR,TARGET_ASM_DESTRUCTOR): New Macros.\n\nFrom-SVN: r214110", "tree": {"sha": "fd11b534711aa4836129da2de9aa38901287db59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd11b534711aa4836129da2de9aa38901287db59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57fb889f4199e7ffedc756e9d729d62171fb91f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57fb889f4199e7ffedc756e9d729d62171fb91f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57fb889f4199e7ffedc756e9d729d62171fb91f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57fb889f4199e7ffedc756e9d729d62171fb91f9/comments", "author": null, "committer": null, "parents": [{"sha": "f8df6750f4f7a70efd2e502add6f2280ede6e8db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8df6750f4f7a70efd2e502add6f2280ede6e8db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8df6750f4f7a70efd2e502add6f2280ede6e8db"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "629ae5f5aa2427a75d5a834e987feb18339c1272", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57fb889f4199e7ffedc756e9d729d62171fb91f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57fb889f4199e7ffedc756e9d729d62171fb91f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=57fb889f4199e7ffedc756e9d729d62171fb91f9", "patch": "@@ -1,3 +1,10 @@\n+2014-08-18  Ajit Agarwal  <ajitkum@xilinx.com>\n+\n+\t* config/microblaze/microblaze.c (microblaze_elf_asm_cdtor): New.\n+\t(microblaze_elf_asm_constructor,microblaze_elf_asm_destructor): New.\n+\t* config/microblaze/microblaze.h\n+\t(TARGET_ASM_CONSTRUCTOR,TARGET_ASM_DESTRUCTOR): New Macros.\n+\n 2014-08-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR other/62168"}, {"sha": "3ae61db3c4f9ac534eecaab963f07d6a55e87a17", "filename": "gcc/config/microblaze/microblaze.c", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57fb889f4199e7ffedc756e9d729d62171fb91f9/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57fb889f4199e7ffedc756e9d729d62171fb91f9/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c?ref=57fb889f4199e7ffedc756e9d729d62171fb91f9", "patch": "@@ -231,6 +231,9 @@ const struct attribute_spec microblaze_attribute_table[] = {\n \n static int microblaze_interrupt_function_p (tree);\n \n+static void microblaze_elf_asm_constructor (rtx, int) ATTRIBUTE_UNUSED;\n+static void microblaze_elf_asm_destructor (rtx, int) ATTRIBUTE_UNUSED;\n+\n section *sdata2_section;\n \n #ifdef HAVE_AS_TLS\n@@ -2714,6 +2717,47 @@ microblaze_function_end_prologue (FILE * file)\n     }\n }\n \n+static void\n+microblaze_elf_asm_cdtor (rtx symbol, int priority, bool is_ctor)\n+{\n+  section *s;\n+\n+  if (priority != DEFAULT_INIT_PRIORITY)\n+    {\n+      char buf[18];\n+      sprintf (buf, \"%s.%.5u\",\n+               is_ctor ? \".ctors\" : \".dtors\",\n+               MAX_INIT_PRIORITY - priority);\n+      s = get_section (buf, SECTION_WRITE, NULL_TREE);\n+    }\n+  else if (is_ctor)\n+    s = ctors_section;\n+  else\n+    s = dtors_section;\n+\n+  switch_to_section (s);\n+  assemble_align (POINTER_SIZE);\n+  fputs (\"\\t.word\\t\", asm_out_file);\n+  output_addr_const (asm_out_file, symbol);\n+  fputs (\"\\n\", asm_out_file);\n+}\n+\n+/* Add a function to the list of static constructors.  */\n+\n+static void\n+microblaze_elf_asm_constructor (rtx symbol, int priority)\n+{\n+  microblaze_elf_asm_cdtor (symbol, priority, /*is_ctor=*/true);\n+}\n+\n+/* Add a function to the list of static destructors.  */\n+\n+static void\n+microblaze_elf_asm_destructor (rtx symbol, int priority)\n+{\n+  microblaze_elf_asm_cdtor (symbol, priority, /*is_ctor=*/false);\n+}\n+\n /* Expand the prologue into a bunch of separate insns.  */\n \n void"}, {"sha": "17be22c8027884a7e62b33927ab0d22194697147", "filename": "gcc/config/microblaze/microblaze.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57fb889f4199e7ffedc756e9d729d62171fb91f9/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57fb889f4199e7ffedc756e9d729d62171fb91f9/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h?ref=57fb889f4199e7ffedc756e9d729d62171fb91f9", "patch": "@@ -691,6 +691,12 @@ do {\t\t\t\t\t\t\t\t\t\\\n {                                                                       \\\n }\n \n+#undef TARGET_ASM_CONSTRUCTOR\n+#define TARGET_ASM_CONSTRUCTOR microblaze_elf_asm_constructor\n+\n+#undef TARGET_ASM_DESTRUCTOR\n+#define TARGET_ASM_DESTRUCTOR microblaze_elf_asm_destructor\n+\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\t\t\\\n   sprintf ((LABEL), \"*%s%s%ld\", (LOCAL_LABEL_PREFIX), (PREFIX), (long)(NUM))\n "}]}