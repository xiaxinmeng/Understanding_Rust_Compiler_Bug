{"sha": "6d9b720879c18b7f73043f6cf6fc30439c05f826", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ5YjcyMDg3OWMxOGI3ZjczMDQzZjZjZjZmYzMwNDM5YzA1ZjgyNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-04-22T16:58:30Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-04-22T16:58:30Z"}, "message": "re PR rtl-optimization/57032 (internal compiler error: Max. number of generated reload insns per insn is achieved (90))\n\n\tPR target/57032\n\tRevert:\n\t2013-03-17  Uros Bizjak  <ubizjak@gmail.com>\n\n\t* config/alpha/alpha.c (TARGET_LRA_P): New define.\n\nFrom-SVN: r198145", "tree": {"sha": "53fba67e4b396ead40bb2928ab9b6a4d1d1aff4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53fba67e4b396ead40bb2928ab9b6a4d1d1aff4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d9b720879c18b7f73043f6cf6fc30439c05f826", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d9b720879c18b7f73043f6cf6fc30439c05f826", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d9b720879c18b7f73043f6cf6fc30439c05f826", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d9b720879c18b7f73043f6cf6fc30439c05f826/comments", "author": null, "committer": null, "parents": [{"sha": "6a4b1a00fa29aa4f153071a8a663be4379cc75b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4b1a00fa29aa4f153071a8a663be4379cc75b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a4b1a00fa29aa4f153071a8a663be4379cc75b9"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "ce29ccebb476a5212a7dfbc001478679d76dd4dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d9b720879c18b7f73043f6cf6fc30439c05f826/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d9b720879c18b7f73043f6cf6fc30439c05f826/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d9b720879c18b7f73043f6cf6fc30439c05f826", "patch": "@@ -1,3 +1,11 @@\n+2013-04-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/57032\n+\tRevert:\n+\t2013-03-17  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/alpha/alpha.c (TARGET_LRA_P): New define.\n+\n 2013-04-22  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* coretypes.h (gimple_stmt_iterator_d): Forward declare.\n@@ -302,15 +310,15 @@\n \n \t* config/arm/cortex-m4.md: Add a new bypass.\n \n-2013-04-16   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n+2013-04-16  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n \n \t* config/aarch64/aarch64.md (*adds_<optab><mode>_multp2):\n \tNew pattern.\n \t(*subs_<optab><mode>_multp2): New pattern.\n \t(*adds_<optab><ALLX:mode>_<GPI:mode>): New pattern.\n \t(*subs_<optab><ALLX:mode>_<GPI:mode>): New pattern.\n \n-2013-04-16   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n+2013-04-16  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n \n \t* config/aarch64/aarch64.md (*adds_mul_imm_<mode>): New pattern.\n \t(*subs_mul_imm_<mode>): New pattern."}, {"sha": "69007a9338565eb296a425b164193d269acc65f5", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d9b720879c18b7f73043f6cf6fc30439c05f826/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d9b720879c18b7f73043f6cf6fc30439c05f826/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=6d9b720879c18b7f73043f6cf6fc30439c05f826", "patch": "@@ -9871,9 +9871,6 @@ alpha_canonicalize_comparison (int *code, rtx *op0, rtx *op1,\n #undef TARGET_LEGITIMATE_ADDRESS_P\n #define TARGET_LEGITIMATE_ADDRESS_P alpha_legitimate_address_p\n \n-#undef TARGET_LRA_P\n-#define TARGET_LRA_P hook_bool_void_true\n-\n #undef TARGET_CONDITIONAL_REGISTER_USAGE\n #define TARGET_CONDITIONAL_REGISTER_USAGE alpha_conditional_register_usage\n "}]}