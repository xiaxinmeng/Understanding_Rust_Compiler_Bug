{"sha": "ae2591ab41e0e307c677283d739abd30bfec1d69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUyNTkxYWI0MWUwZTMwN2M2NzcyODNkNzM5YWJkMzBiZmVjMWQ2OQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-07-12T13:35:07Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-07-12T13:35:07Z"}, "message": "Remove redundant definition of constant_part that slipped through.\n\nFrom-SVN: r28067", "tree": {"sha": "3ad075c6adf8a7cebaf833762d9a3283eacebcea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ad075c6adf8a7cebaf833762d9a3283eacebcea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae2591ab41e0e307c677283d739abd30bfec1d69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae2591ab41e0e307c677283d739abd30bfec1d69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae2591ab41e0e307c677283d739abd30bfec1d69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae2591ab41e0e307c677283d739abd30bfec1d69/comments", "author": null, "committer": null, "parents": [{"sha": "cbbc503edd4ed154d86e4f7bd915e28ba616b610", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbbc503edd4ed154d86e4f7bd915e28ba616b610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbbc503edd4ed154d86e4f7bd915e28ba616b610"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "855cf786a39dd127e1307bf0c92ec23538b99611", "filename": "gcc/expr.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae2591ab41e0e307c677283d739abd30bfec1d69/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae2591ab41e0e307c677283d739abd30bfec1d69/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=ae2591ab41e0e307c677283d739abd30bfec1d69", "patch": "@@ -6968,8 +6968,6 @@ expand_expr (exp, target, tmode, modifier)\n       if (modifier == EXPAND_SUM || modifier == EXPAND_INITIALIZER\n \t  || mode == ptr_mode)\n \t{\n-\t  rtx constant_part;\n-\n \t  if (TREE_CODE (TREE_OPERAND (exp, 0)) == INTEGER_CST\n \t      && GET_MODE_BITSIZE (mode) <= HOST_BITS_PER_WIDE_INT\n \t      && TREE_CONSTANT (TREE_OPERAND (exp, 1)))"}]}