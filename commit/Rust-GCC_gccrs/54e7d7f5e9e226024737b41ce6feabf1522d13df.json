{"sha": "54e7d7f5e9e226024737b41ce6feabf1522d13df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRlN2Q3ZjVlOWUyMjYwMjQ3MzdiNDFjZTZmZWFiZjE1MjJkMTNkZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-08-02T21:09:17Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-08-02T21:09:17Z"}, "message": "re PR c++/49577 ([C++0x] narrowing conversion not rejected)\n\n\tPR c++/49577\n\t* typeck2.c (check_narrowing): Check unsigned mismatch.\n\t* semantics.c (finish_compound_literal): check_narrowing.\n\nFrom-SVN: r177215", "tree": {"sha": "849cdd5ffbc844e11ab6b9a0166cb5799909bace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/849cdd5ffbc844e11ab6b9a0166cb5799909bace"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54e7d7f5e9e226024737b41ce6feabf1522d13df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e7d7f5e9e226024737b41ce6feabf1522d13df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e7d7f5e9e226024737b41ce6feabf1522d13df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e7d7f5e9e226024737b41ce6feabf1522d13df/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "326a64554b0ebf03a33a6a55b4467e5d77e62199", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/326a64554b0ebf03a33a6a55b4467e5d77e62199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/326a64554b0ebf03a33a6a55b4467e5d77e62199"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "4e64f1bae1d8b2d3796342ed307816c5737b8b14", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e7d7f5e9e226024737b41ce6feabf1522d13df/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e7d7f5e9e226024737b41ce6feabf1522d13df/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=54e7d7f5e9e226024737b41ce6feabf1522d13df", "patch": "@@ -1,5 +1,9 @@\n 2011-08-02  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/49577\n+\t* typeck2.c (check_narrowing): Check unsigned mismatch.\n+\t* semantics.c (finish_compound_literal): check_narrowing.\n+\n \tPR c++/49593\n \t* pt.c (find_parameter_packs_r): Handle CONSTRUCTOR.\n "}, {"sha": "ac24b779dd223571d6f81e7bfa50c78bc78cbf58", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e7d7f5e9e226024737b41ce6feabf1522d13df/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e7d7f5e9e226024737b41ce6feabf1522d13df/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=54e7d7f5e9e226024737b41ce6feabf1522d13df", "patch": "@@ -2379,6 +2379,9 @@ finish_compound_literal (tree type, tree compound_literal,\n       && check_array_initializer (NULL_TREE, type, compound_literal))\n     return error_mark_node;\n   compound_literal = reshape_init (type, compound_literal, complain);\n+  if (cxx_dialect >= cxx0x && SCALAR_TYPE_P (type)\n+      && !BRACE_ENCLOSED_INITIALIZER_P (compound_literal))\n+    check_narrowing (type, compound_literal);\n   if (TREE_CODE (type) == ARRAY_TYPE\n       && TYPE_DOMAIN (type) == NULL_TREE)\n     {"}, {"sha": "c6b8c443757b5c76af5b4da683d16340b9fa604c", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e7d7f5e9e226024737b41ce6feabf1522d13df/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e7d7f5e9e226024737b41ce6feabf1522d13df/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=54e7d7f5e9e226024737b41ce6feabf1522d13df", "patch": "@@ -740,7 +740,8 @@ check_narrowing (tree type, tree init)\n   else if (INTEGRAL_OR_ENUMERATION_TYPE_P (ftype)\n \t   && CP_INTEGRAL_TYPE_P (type))\n     {\n-      if (TYPE_PRECISION (type) < TYPE_PRECISION (ftype)\n+      if ((TYPE_PRECISION (type) < TYPE_PRECISION (ftype)\n+\t   || TYPE_UNSIGNED (type) != TYPE_UNSIGNED (ftype))\n \t  && (TREE_CODE (init) != INTEGER_CST\n \t      || !int_fits_type_p (init, type)))\n \tok = false;"}, {"sha": "6e91668b990611a5cd9e02faae5299b23cc67505", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e7d7f5e9e226024737b41ce6feabf1522d13df/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e7d7f5e9e226024737b41ce6feabf1522d13df/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=54e7d7f5e9e226024737b41ce6feabf1522d13df", "patch": "@@ -1,5 +1,8 @@\n 2011-08-02  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/49577\n+\t* g++.dg/cpp0x/initlist5.C: Add additional cases.\n+\n \tPR c++/49593\n \t* g++.dg/cpp0x/variadic115.C: New.\n "}, {"sha": "c5ba87d55f1eb0102cf6590c4fd204180b29da73", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist5.C", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e7d7f5e9e226024737b41ce6feabf1522d13df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e7d7f5e9e226024737b41ce6feabf1522d13df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist5.C?ref=54e7d7f5e9e226024737b41ce6feabf1522d13df", "patch": "@@ -25,3 +25,7 @@ double d = 1.1;\n float fa[] = { d, 1.1 };      // { dg-error \"narrowing conversion of 'd'\" }\n constexpr double d2 = 1.1;\n float fa2[] = { d2, 1.1 };\n+\n+// PR c++/49577\n+unsigned u{ -1 };\t\t// { dg-error \"narrowing\" }\n+char c = char{ u };\t\t// { dg-error \"narrowing\" }"}, {"sha": "9015147b2c9da2c9bea50766831184bb7e51e197", "filename": "gcc/testsuite/g++.dg/opt/range-test-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e7d7f5e9e226024737b41ce6feabf1522d13df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Frange-test-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e7d7f5e9e226024737b41ce6feabf1522d13df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Frange-test-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Frange-test-1.C?ref=54e7d7f5e9e226024737b41ce6feabf1522d13df", "patch": "@@ -156,7 +156,7 @@ T(16, int, x == -3 || x == -4 || x == -5,\n   { -3 C -4 C -5 }, { -6 C -7 C -8 C -2 C -1 C 1 C 2 C INT_MAX C INT_MIN })\n T(17, unsigned int, (x >= -8U && x <= -3U) || x == -2U || x == -1U || x == 0 || x == 1 || x == 2,\n   { -8U C -7U C -6U C -5U C -4U C -3U C -2U C -1U C 0 C 1 C 2 },\n-  { -9U C -10U C 3 C 4 C 12 C -54U C INT_MAX C INT_MIN })\n+  { -9U C -10U C 3 C 4 C 12 C -54U C INT_MAX C (unsigned int)INT_MIN })\n T(18, int, (x >= -8 && x <= -3) || x == -2 || x == -1 || x == 0 || x == 1 || x == 2,\n   { -8 C -7 C -6 C -5 C -4 C -3 C -2 C -1 C 0 C 1 C 2 },\n   { -9 C -10 C 3 C 4 C 12 C -54 C INT_MAX C INT_MIN })"}]}