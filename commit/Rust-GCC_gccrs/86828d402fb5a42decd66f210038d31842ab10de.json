{"sha": "86828d402fb5a42decd66f210038d31842ab10de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY4MjhkNDAyZmI1YTQyZGVjZDY2ZjIxMDAzOGQzMTg0MmFiMTBkZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-02T09:03:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-02T09:03:06Z"}, "message": "[multiple changes]\n\n2011-09-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Iterator_Specification): If the domain\n\tof iteration is an expression, its value must be captured in a\n\trenaming declaration, so that modification of the elements is\n\tpropagated to the original container.\n\n2011-09-02  Pascal Obry  <obry@adacore.com>\n\n\t* prj-proc.adb, prj.adb, makeutl.adb, makeutl.ads, prj-dect.adb,\n\tprj-nmsc.adb, prj-util.adb, prj-conf.adb, prj-env.adb,\n\tprj-tree.adb: Minor reformatting and style fixes.\n\nFrom-SVN: r178443", "tree": {"sha": "3cc39fa5b2007e048947833a8015781bb4009c7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cc39fa5b2007e048947833a8015781bb4009c7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86828d402fb5a42decd66f210038d31842ab10de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86828d402fb5a42decd66f210038d31842ab10de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86828d402fb5a42decd66f210038d31842ab10de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86828d402fb5a42decd66f210038d31842ab10de/comments", "author": null, "committer": null, "parents": [{"sha": "da6feecef69362b16cb1fda204bc150ab0f852be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da6feecef69362b16cb1fda204bc150ab0f852be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da6feecef69362b16cb1fda204bc150ab0f852be"}], "stats": {"total": 600, "additions": 306, "deletions": 294}, "files": [{"sha": "f71dfc16f7aa821f6e9bebf02befc645b3c7d175", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=86828d402fb5a42decd66f210038d31842ab10de", "patch": "@@ -1,3 +1,16 @@\n+2011-09-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Iterator_Specification): If the domain\n+\tof iteration is an expression, its value must be captured in a\n+\trenaming declaration, so that modification of the elements is\n+\tpropagated to the original container.\n+\n+2011-09-02  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-proc.adb, prj.adb, makeutl.adb, makeutl.ads, prj-dect.adb,\n+\tprj-nmsc.adb, prj-util.adb, prj-conf.adb, prj-env.adb,\n+\tprj-tree.adb: Minor reformatting and style fixes.\n+\n 2011-09-02  Robert Dewar  <dewar@adacore.com>\n \n \t* s-rident.ads: Add new restriction No_Implicit_Aliasing"}, {"sha": "cfca418595ed91360882884d83e1c580cb2db0a7", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 87, "deletions": 74, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=86828d402fb5a42decd66f210038d31842ab10de", "patch": "@@ -850,9 +850,7 @@ package body Makeutl is\n             Allow_Wildcards         => True);\n       end if;\n \n-      if Value = Nil_Variable_Value\n-        and then Test_Without_Suffix\n-      then\n+      if Value = Nil_Variable_Value and then Test_Without_Suffix then\n          Lang :=\n            Get_Language_From_Name (Project, Get_Name_String (Source_Lang));\n \n@@ -872,17 +870,17 @@ package body Makeutl is\n                Name (1 .. Last) := SF_Name;\n \n                if Last > Body_Suffix'Length\n-                 and then Name (Last - Body_Suffix'Length + 1 .. Last) =\n-                   Body_Suffix\n+                 and then\n+                   Name (Last - Body_Suffix'Length + 1 .. Last) = Body_Suffix\n                then\n                   Truncated := True;\n                   Last := Last - Body_Suffix'Length;\n                end if;\n \n                if not Truncated\n                  and then Last > Spec_Suffix'Length\n-                 and then Name (Last - Spec_Suffix'Length + 1 .. Last) =\n-                   Spec_Suffix\n+                 and then\n+                   Name (Last - Spec_Suffix'Length + 1 .. Last) = Spec_Suffix\n                then\n                   Truncated := True;\n                   Last := Last - Spec_Suffix'Length;\n@@ -900,9 +898,7 @@ package body Makeutl is\n                      Allow_Wildcards         => True);\n                end if;\n \n-               if Value = Nil_Variable_Value\n-                 and then Check_ALI_Suffix\n-               then\n+               if Value = Nil_Variable_Value and then Check_ALI_Suffix then\n                   Last := SF_Name'Length;\n                   while Name (Last) /= '.' loop\n                      Last := Last - 1;\n@@ -994,18 +990,23 @@ package body Makeutl is\n    ------------------------------\n \n    procedure Initialize_Source_Record (Source : Prj.Source_Id) is\n+\n       procedure Set_Object_Project\n-        (Obj_Dir : String; Obj_Proj : Project_Id; Obj_Path : Path_Name_Type;\n-         Stamp   : Time_Stamp_Type);\n+        (Obj_Dir  : String;\n+         Obj_Proj : Project_Id;\n+         Obj_Path : Path_Name_Type;\n+         Stamp    : Time_Stamp_Type);\n       --  Update information about object file, switches file,...\n \n       ------------------------\n       -- Set_Object_Project --\n       ------------------------\n \n       procedure Set_Object_Project\n-        (Obj_Dir : String; Obj_Proj : Project_Id; Obj_Path : Path_Name_Type;\n-         Stamp   : Time_Stamp_Type) is\n+        (Obj_Dir  : String;\n+         Obj_Proj : Project_Id;\n+         Obj_Path : Path_Name_Type;\n+         Stamp    : Time_Stamp_Type) is\n       begin\n          Source.Object_Project := Obj_Proj;\n          Source.Object_Path    := Obj_Path;\n@@ -1031,10 +1032,11 @@ package body Makeutl is\n \n          declare\n             Switches_Path : constant String :=\n-              Normalize_Pathname\n-                (Name          => Get_Name_String (Source.Switches),\n-                 Resolve_Links => Opt.Follow_Links_For_Files,\n-                 Directory     => Obj_Dir);\n+                              Normalize_Pathname\n+                                (Name          =>\n+                                   Get_Name_String (Source.Switches),\n+                                 Resolve_Links => Opt.Follow_Links_For_Files,\n+                                 Directory     => Obj_Dir);\n          begin\n             Source.Switches_Path := Create_Name (Switches_Path);\n \n@@ -1093,21 +1095,22 @@ package body Makeutl is\n          --  elsewhere that's where we'll expect to find it).\n \n          Obj_Proj := Source.Project;\n+\n          while Obj_Proj /= No_Project loop\n             declare\n-               Dir  : constant String := Get_Name_String\n-                 (Obj_Proj.Object_Directory.Display_Name);\n+               Dir  : constant String :=\n+                        Get_Name_String\n+                          (Obj_Proj.Object_Directory.Display_Name);\n \n-               Object_Path     : constant String :=\n-                                   Normalize_Pathname\n-                                     (Name          =>\n-                                        Get_Name_String (Source.Object),\n-                                      Resolve_Links =>\n-                                        Opt.Follow_Links_For_Files,\n-                                      Directory     => Dir);\n+               Object_Path : constant String :=\n+                               Normalize_Pathname\n+                                 (Name          =>\n+                                    Get_Name_String (Source.Object),\n+                                  Resolve_Links => Opt.Follow_Links_For_Files,\n+                                  Directory     => Dir);\n \n                Obj_Path : constant Path_Name_Type := Create_Name (Object_Path);\n-               Stamp : Time_Stamp_Type := Empty_Time_Stamp;\n+               Stamp    : Time_Stamp_Type := Empty_Time_Stamp;\n \n             begin\n                --  For specs, we do not check object files if there is a body.\n@@ -1286,10 +1289,10 @@ package body Makeutl is\n \n       for Index in reverse 1 .. Linker_Opts.Last loop\n          declare\n-            Options : String_List_Id;\n-            Proj    : constant Project_Id :=\n-                        Linker_Opts.Table (Index).Project;\n-            Option  : Name_Id;\n+            Options  : String_List_Id;\n+            Proj     : constant Project_Id :=\n+                         Linker_Opts.Table (Index).Project;\n+            Option   : Name_Id;\n             Dir_Path : constant String :=\n                          Get_Name_String (Proj.Directory.Name);\n \n@@ -1397,12 +1400,12 @@ package body Makeutl is\n          procedure Add_Multi_Unit_Sources\n            (Tree   : Project_Tree_Ref;\n             Source : Prj.Source_Id);\n-         --  Add all units from the same file as the multi-unit Source.\n+         --  Add all units from the same file as the multi-unit Source\n \n          function Find_File_Add_Extension\n-           (Tree         : Project_Tree_Ref;\n-            Base_Main    : String) return Prj.Source_Id;\n-         --  Search for Main in the project, adding body or spec extensions.\n+           (Tree      : Project_Tree_Ref;\n+            Base_Main : String) return Prj.Source_Id;\n+         --  Search for Main in the project, adding body or spec extensions\n \n          ----------------------------\n          -- Add_Multi_Unit_Sources --\n@@ -1455,16 +1458,16 @@ package body Makeutl is\n          -----------------------------\n \n          function Find_File_Add_Extension\n-           (Tree         : Project_Tree_Ref;\n-            Base_Main    : String) return Prj.Source_Id\n+           (Tree      : Project_Tree_Ref;\n+            Base_Main : String) return Prj.Source_Id\n          is\n             Spec_Source : Prj.Source_Id := No_Source;\n             Source      : Prj.Source_Id;\n             Iter        : Source_Iterator;\n             Suffix      : File_Name_Type;\n \n          begin\n-            Source  := No_Source;\n+            Source := No_Source;\n             Iter := For_Each_Source (Tree);  --  In all projects\n             loop\n                Source := Prj.Element (Iter);\n@@ -1611,10 +1614,10 @@ package body Makeutl is\n                         --  check later that we found the correct file.\n \n                         Source := Find_Source\n-                          (In_Tree   => File.Tree,\n-                           Project   => File.Project,\n-                           Base_Name => Main_Id,\n-                           Index     => File.Index,\n+                          (In_Tree          => File.Tree,\n+                           Project          => File.Project,\n+                           Base_Name        => Main_Id,\n+                           Index            => File.Index,\n                            In_Imported_Only => True);\n \n                         if Source = No_Source then\n@@ -1624,8 +1627,8 @@ package body Makeutl is\n \n                         if Is_Absolute\n                           and then Source /= No_Source\n-                          and then File_Name_Type (Source.Path.Name) /=\n-                          File.File\n+                          and then\n+                            File_Name_Type (Source.Path.Name) /= File.File\n                         then\n                            Debug_Output\n                              (\"Found a non-matching file\",\n@@ -2192,7 +2195,7 @@ package body Makeutl is\n       --  processed, if it hasn't already been processed.\n \n       function Insert_No_Roots (Source  : Source_Info) return Boolean;\n-      --  Insert Source, but do not look for its roots (see doc for Insert).\n+      --  Insert Source, but do not look for its roots (see doc for Insert)\n \n       -------------------\n       -- Was_Processed --\n@@ -2506,6 +2509,7 @@ package body Makeutl is\n \n             if Roots = Nil_Variable_Value then\n                Debug_Output (\"   -> no roots declared\");\n+\n             else\n                List := Roots.Values;\n \n@@ -2596,7 +2600,7 @@ package body Makeutl is\n                            Initialize_Source_Record (Other_Part (Root_Source));\n                         end if;\n \n-                        --  Save the root for the binder.\n+                        --  Save the root for the binder\n \n                         Source.Id.Roots := new Source_Roots'\n                           (Root => Root_Source,\n@@ -2745,6 +2749,11 @@ package body Makeutl is\n          Unique_Compile : Boolean)\n       is\n          procedure Do_Insert (Project : Project_Id; Tree : Project_Tree_Ref);\n+\n+         ---------------\n+         -- Do_Insert --\n+         ---------------\n+\n          procedure Do_Insert (Project : Project_Id; Tree : Project_Tree_Ref) is\n             Unit_Based : constant Boolean :=\n                            Unique_Compile\n@@ -2775,7 +2784,7 @@ package body Makeutl is\n                if Is_Compilable (Source)\n                  and then\n                    (All_Projects\n-                     or else Is_Extending (Project, Source.Project))\n+                    or else Is_Extending (Project, Source.Project))\n                  and then not Source.Locally_Removed\n                  and then Source.Replaced_By = No_Source\n                  and then\n@@ -2855,25 +2864,25 @@ package body Makeutl is\n                        and then Src_Id.Dep_Name = Afile\n                      then\n                         case Src_Id.Kind is\n-                        when Spec =>\n-                           declare\n-                              Bdy : constant Prj.Source_Id :=\n-                                      Other_Part (Src_Id);\n-                           begin\n-                              if Bdy /= No_Source\n-                                and then not Bdy.Locally_Removed\n-                              then\n-                                 Src_Id := Other_Part (Src_Id);\n+                           when Spec =>\n+                              declare\n+                                 Bdy : constant Prj.Source_Id :=\n+                                         Other_Part (Src_Id);\n+                              begin\n+                                 if Bdy /= No_Source\n+                                   and then not Bdy.Locally_Removed\n+                                 then\n+                                    Src_Id := Other_Part (Src_Id);\n+                                 end if;\n+                              end;\n+\n+                           when Impl =>\n+                              if Is_Subunit (Src_Id) then\n+                                 Src_Id := No_Source;\n                               end if;\n-                           end;\n \n-                        when Impl =>\n-                           if Is_Subunit (Src_Id) then\n+                           when Sep =>\n                               Src_Id := No_Source;\n-                           end if;\n-\n-                        when Sep =>\n-                           Src_Id := No_Source;\n                         end case;\n \n                         exit;\n@@ -2899,6 +2908,7 @@ package body Makeutl is\n             end loop;\n          end loop;\n       end Insert_Withed_Sources_For;\n+\n    end Queue;\n \n    ----------\n@@ -2948,6 +2958,10 @@ package body Makeutl is\n    is\n       procedure Do_Compute (Project : Project_Id; Tree : Project_Tree_Ref);\n \n+      ----------------\n+      -- Do_Compute --\n+      ----------------\n+\n       procedure Do_Compute (Project : Project_Id; Tree : Project_Tree_Ref) is\n          Data       : constant Builder_Data_Access := Builder_Data (Tree);\n          All_Phases : constant Boolean :=\n@@ -3008,8 +3022,8 @@ package body Makeutl is\n       Only_For_Lang       : Name_Id := No_Name)\n    is\n       Builder_Package  : constant Package_Id :=\n-        Value_Of (Name_Builder, Main_Project.Decl.Packages,\n-                  Project_Tree.Shared);\n+                           Value_Of (Name_Builder, Main_Project.Decl.Packages,\n+                                     Project_Tree.Shared);\n \n       Global_Compilation_Array    : Array_Element_Id;\n       Global_Compilation_Elem     : Array_Element;\n@@ -3029,7 +3043,7 @@ package body Makeutl is\n       Switches_For_Lang : Variable_Value := Nil_Variable_Value;\n       --  Value of Builder'Default_Switches(lang)\n \n-      Name             : Name_Id := No_Name;  --  main file index for Switches\n+      Name              : Name_Id := No_Name;  --  main file index for Switches\n       Switches_For_Main : Variable_Value := Nil_Variable_Value;\n       --  Switches for a specific main. When there are several mains, Name is\n       --  set to No_Name, and Switches_For_Main might be left with an actual\n@@ -3052,7 +3066,6 @@ package body Makeutl is\n          --  use this language as the switches index.\n \n          if Mains.Number_Of_Mains (Project_Tree) = 0 then\n-\n             if Only_For_Lang = No_Name then\n                declare\n                   Language : Language_Ptr := Main_Project.Languages;\n@@ -3079,8 +3092,8 @@ package body Makeutl is\n          else\n             for Index in 1 .. Mains.Number_Of_Mains (Project_Tree) loop\n                Source := Mains.Next_Main.Source;\n-               if Source /= No_Source then\n \n+               if Source /= No_Source then\n                   if Switches_For_Main = Nil_Variable_Value then\n                      Switches_For_Main := Value_Of\n                        (Name                    => Name_Id (Source.File),\n@@ -3130,9 +3143,10 @@ package body Makeutl is\n          Default_Switches_Array :=\n            Project_Tree.Shared.Packages.Table (Builder_Package).Decl.Arrays;\n \n-         while Default_Switches_Array /= No_Array and then\n-           Project_Tree.Shared.Arrays.Table (Default_Switches_Array).Name /=\n-           Name_Default_Switches\n+         while Default_Switches_Array /= No_Array\n+           and then\n+             Project_Tree.Shared.Arrays.Table (Default_Switches_Array).Name /=\n+               Name_Default_Switches\n          loop\n             Default_Switches_Array :=\n               Project_Tree.Shared.Arrays.Table (Default_Switches_Array).Next;\n@@ -3243,8 +3257,7 @@ package body Makeutl is\n                   declare\n                      --  Add_Switch might itself be using the name_buffer, so\n                      --  we make a temporary here.\n-                     Switch : constant String :=\n-                       Name_Buffer (1 .. Name_Len);\n+                     Switch : constant String := Name_Buffer (1 .. Name_Len);\n                   begin\n                      Success := Add_Switch\n                        (Switch      => Switch,"}, {"sha": "8aec8b22c7e6e23e160c053c0e4aba643c4c8ce1", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=86828d402fb5a42decd66f210038d31842ab10de", "patch": "@@ -336,7 +336,7 @@ package Makeutl is\n       Need_Compilation : Boolean := True;\n       Need_Binding     : Boolean := True;\n       Need_Linking     : Boolean := True;\n-      --  Which of the compilation phases are needed for this project tree.\n+      --  Which of the compilation phases are needed for this project tree\n    end record;\n    type Builder_Data_Access is access all Builder_Project_Tree_Data;\n \n@@ -459,10 +459,10 @@ package Makeutl is\n                   Id   : Source_Id        := null;\n \n                when Format_Gnatmake =>\n-                  File      : File_Name_Type := No_File;\n-                  Unit      : Unit_Name_Type := No_Unit_Name;\n-                  Index     : Int            := 0;\n-                  Project   : Project_Id     := No_Project;\n+                  File    : File_Name_Type := No_File;\n+                  Unit    : Unit_Name_Type := No_Unit_Name;\n+                  Index   : Int            := 0;\n+                  Project : Project_Id     := No_Project;\n             end case;\n          end record;\n       --  Information about files stored in the queue. The exact information\n@@ -473,7 +473,7 @@ package Makeutl is\n \n       procedure Initialize\n         (Queue_Per_Obj_Dir : Boolean;\n-         Force : Boolean := False);\n+         Force             : Boolean := False);\n       --  Initialize the queue.\n       --  Queue_Per_Obj_Dir matches the --single-compile-per-obj-dir switch:\n       --  when True, there cannot be simultaneous compilations with the object"}, {"sha": "a129122277787df674e03892f6afee10cc9d4d4f", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=86828d402fb5a42decd66f210038d31842ab10de", "patch": "@@ -508,9 +508,9 @@ package body Prj.Conf is\n \n                else\n                   Add_Attributes\n-                    (Project_Tree      => Project_Tree,\n-                     Conf_Decl         => Conf_Pack.Decl,\n-                     User_Decl         =>\n+                    (Project_Tree => Project_Tree,\n+                     Conf_Decl    => Conf_Pack.Decl,\n+                     User_Decl    =>\n                        Shared.Packages.Table (User_Pack_Id).Decl);\n                end if;\n \n@@ -532,8 +532,7 @@ package body Prj.Conf is\n                        (\"Recursively apply config to aggregated tree\",\n                         List.Project.Name);\n                      Apply_Config_File\n-                       (Config_File,\n-                        Project_Tree      => List.Tree);\n+                       (Config_File, Project_Tree => List.Tree);\n                      List := List.Next;\n                   end loop;\n                end;\n@@ -1132,8 +1131,7 @@ package body Prj.Conf is\n \n             if Config_File_Name = \"\" then\n                if Obj_Dir_Exists then\n-                  Args (3) :=\n-                    new String'(Obj_Dir & Directory_Separator & Auto_Cgpr);\n+                  Args (3) := new String'(Obj_Dir & Auto_Cgpr);\n \n                else\n                   declare\n@@ -1154,9 +1152,7 @@ package body Prj.Conf is\n                      else\n                         --  We'll have an error message later on\n \n-                        Args (3) :=\n-                          new String'\n-                            (Obj_Dir & Directory_Separator & Auto_Cgpr);\n+                        Args (3) := new String'(Obj_Dir & Auto_Cgpr);\n                      end if;\n                   end;\n                end if;"}, {"sha": "e023befa405a649dcde315ff070d56374f2b6e93", "filename": "gcc/ada/prj-dect.adb", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fprj-dect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fprj-dect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.adb?ref=86828d402fb5a42decd66f210038d31842ab10de", "patch": "@@ -23,11 +23,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Err_Vars; use Err_Vars;\n-\n with GNAT.Case_Util;        use GNAT.Case_Util;\n with GNAT.Spelling_Checker; use GNAT.Spelling_Checker;\n+with GNAT.Strings;\n \n+with Err_Vars;    use Err_Vars;\n with Opt;         use Opt;\n with Prj.Attr;    use Prj.Attr;\n with Prj.Attr.PM; use Prj.Attr.PM;\n@@ -37,8 +37,6 @@ with Prj.Tree;    use Prj.Tree;\n with Snames;\n with Uintp;       use Uintp;\n \n-with GNAT.Strings;\n-\n package body Prj.Dect is\n \n    use GNAT;\n@@ -58,10 +56,10 @@ package body Prj.Dect is\n    --  new name, so that the code does not have to check both names forever.\n \n    procedure Check_Attribute_Allowed\n-     (In_Tree         : Project_Node_Tree_Ref;\n-      Project         : Project_Node_Id;\n-      Attribute       : Project_Node_Id;\n-      Flags           : Processing_Flags);\n+     (In_Tree   : Project_Node_Tree_Ref;\n+      Project   : Project_Node_Id;\n+      Attribute : Project_Node_Id;\n+      Flags     : Processing_Flags);\n    --  Check whether the attribute is valid in this project.\n    --  In particular, depending on the type of project (qualifier), some\n    --  attributes might be disabled.\n@@ -186,20 +184,20 @@ package body Prj.Dect is\n         and then Expression_Kind_Of (Current_Package, In_Tree) /= Ignored\n       then\n          case Name_Of (Attribute, In_Tree) is\n-         when Snames.Name_Specification =>\n-            Set_Name_Of (Attribute, In_Tree, To => Snames.Name_Spec);\n+            when Snames.Name_Specification =>\n+               Set_Name_Of (Attribute, In_Tree, To => Snames.Name_Spec);\n \n-         when Snames.Name_Specification_Suffix =>\n-            Set_Name_Of (Attribute, In_Tree, To => Snames.Name_Spec_Suffix);\n+            when Snames.Name_Specification_Suffix =>\n+               Set_Name_Of (Attribute, In_Tree, To => Snames.Name_Spec_Suffix);\n \n-         when Snames.Name_Implementation =>\n-            Set_Name_Of (Attribute, In_Tree, To => Snames.Name_Body);\n+            when Snames.Name_Implementation =>\n+               Set_Name_Of (Attribute, In_Tree, To => Snames.Name_Body);\n \n-         when Snames.Name_Implementation_Suffix =>\n-            Set_Name_Of (Attribute, In_Tree, To => Snames.Name_Body_Suffix);\n+            when Snames.Name_Implementation_Suffix =>\n+               Set_Name_Of (Attribute, In_Tree, To => Snames.Name_Body_Suffix);\n \n-         when others =>\n-            null;\n+            when others =>\n+               null;\n          end case;\n       end if;\n    end Rename_Obsolescent_Attributes;\n@@ -234,10 +232,10 @@ package body Prj.Dect is\n    -----------------------------\n \n    procedure Check_Attribute_Allowed\n-     (In_Tree         : Project_Node_Tree_Ref;\n-      Project         : Project_Node_Id;\n-      Attribute       : Project_Node_Id;\n-      Flags           : Processing_Flags)\n+     (In_Tree   : Project_Node_Tree_Ref;\n+      Project   : Project_Node_Id;\n+      Attribute : Project_Node_Id;\n+      Flags     : Processing_Flags)\n    is\n       Qualif : constant Project_Qualifier :=\n                  Project_Qualifier_Of (Project, In_Tree);"}, {"sha": "734ef49b12b674fc2206959a49a36ea0ddede1db", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 25, "deletions": 27, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=86828d402fb5a42decd66f210038d31842ab10de", "patch": "@@ -272,15 +272,15 @@ package body Prj.Env is\n    begin\n       --  Check if the directory is already in the table\n \n-      for Index in Object_Path_Table.First ..\n-                   Object_Path_Table.Last (Object_Paths)\n+      for Index in\n+        Object_Path_Table.First .. Object_Path_Table.Last (Object_Paths)\n       loop\n \n          --  If it is, remove it, and add it as the last one\n \n          if Object_Paths.Table (Index) = Object_Dir then\n-            for Index2 in Index + 1 ..\n-                          Object_Path_Table.Last (Object_Paths)\n+            for Index2 in\n+              Index + 1 .. Object_Path_Table.Last (Object_Paths)\n             loop\n                Object_Paths.Table (Index2 - 1) := Object_Paths.Table (Index2);\n             end loop;\n@@ -422,8 +422,8 @@ package body Prj.Env is\n \n          --  Check if the source directory is already in the table\n \n-         for Index in Source_Path_Table.First ..\n-                      Source_Path_Table.Last (Source_Paths)\n+         for Index in\n+           Source_Path_Table.First .. Source_Path_Table.Last (Source_Paths)\n          loop\n             --  If it is already, no need to add it\n \n@@ -458,6 +458,7 @@ package body Prj.Env is\n          Table_Low_Bound      => 1,\n          Table_Initial        => 5,\n          Table_Increment      => 100);\n+\n       Default_Naming : constant Naming_Id := Naming_Table.First;\n       Namings        : Naming_Table.Instance;\n       --  Table storing the naming data for gnatmake/gprmake\n@@ -779,7 +780,7 @@ package body Prj.Env is\n    is\n       File   : File_Descriptor := Invalid_FD;\n \n-      Buffer : String_Access := new String (1 .. Buffer_Initial);\n+      Buffer      : String_Access := new String (1 .. Buffer_Initial);\n       Buffer_Last : Natural := 0;\n \n       procedure Put_Name_Buffer;\n@@ -831,9 +832,8 @@ package body Prj.Env is\n \n             if Source.Replaced_By = No_Source\n               and then Source.Path.Name /= No_Path\n-              and then\n-                (Source.Language.Config.Kind = File_Based\n-                  or else Source.Unit /= No_Unit_Index)\n+              and then (Source.Language.Config.Kind = File_Based\n+                        or else Source.Unit /= No_Unit_Index)\n             then\n                if Source.Unit /= No_Unit_Index then\n \n@@ -999,12 +999,12 @@ package body Prj.Env is\n       Main_Project_Only : Boolean := True;\n       Full_Path         : Boolean := False) return String\n    is\n+\n+      Lang          : constant Language_Ptr :=\n+                        Get_Language_From_Name (Project, \"ada\");\n       The_Project   : Project_Id := Project;\n       Original_Name : String := Name;\n \n-      Lang   : constant Language_Ptr :=\n-        Get_Language_From_Name (Project, \"ada\");\n-\n       Unit              : Unit_Index;\n       The_Original_Name : Name_Id;\n       The_Spec_Name     : Name_Id;\n@@ -1140,10 +1140,8 @@ package body Prj.Env is\n             --  Check for spec\n \n             if not Main_Project_Only\n-              or else\n-                (Unit.File_Names (Spec) /= null\n-                 and then Unit.File_Names (Spec).Project =\n-                   The_Project)\n+              or else (Unit.File_Names (Spec) /= null\n+                       and then Unit.File_Names (Spec).Project = The_Project)\n             then\n                declare\n                   Current_Name : File_Name_Type;\n@@ -1670,7 +1668,7 @@ package body Prj.Env is\n       --  For the object path, we make a distinction depending on\n       --  Including_Libraries.\n \n-      if Objects_Path and Including_Libraries then\n+      if Objects_Path and then Including_Libraries then\n          if Project.Objects_Path_File_With_Libs = No_Path then\n             Object_Path_Table.Init (Object_Paths);\n             Process_Object_Dirs := True;\n@@ -1690,7 +1688,7 @@ package body Prj.Env is\n       --  If there is something to do, set Seen to False for all projects,\n       --  then call the recursive procedure Add for Project.\n \n-      if Process_Source_Dirs or Process_Object_Dirs then\n+      if Process_Source_Dirs or else Process_Object_Dirs then\n          For_All_Projects (Project, In_Tree, Dummy);\n       end if;\n \n@@ -1701,8 +1699,8 @@ package body Prj.Env is\n       if Source_FD /= Invalid_FD then\n          Buffer_Last := 0;\n \n-         for Index in Source_Path_Table.First ..\n-                      Source_Path_Table.Last (Source_Paths)\n+         for Index in\n+           Source_Path_Table.First .. Source_Path_Table.Last (Source_Paths)\n          loop\n             Get_Name_String (Source_Paths.Table (Index));\n             Name_Len := Name_Len + 1;\n@@ -1727,8 +1725,8 @@ package body Prj.Env is\n       if Object_FD /= Invalid_FD then\n          Buffer_Last := 0;\n \n-         for Index in Object_Path_Table.First ..\n-                      Object_Path_Table.Last (Object_Paths)\n+         for Index in\n+           Object_Path_Table.First .. Object_Path_Table.Last (Object_Paths)\n          loop\n             Get_Name_String (Object_Paths.Table (Index));\n             Name_Len := Name_Len + 1;\n@@ -1752,9 +1750,10 @@ package body Prj.Env is\n       --  Set the env vars, if they need to be changed, and set the\n       --  corresponding flags.\n \n-      if Include_Path and then\n-        Shared.Private_Part.Current_Source_Path_File /=\n-          Project.Include_Path_File\n+      if Include_Path\n+        and then\n+          Shared.Private_Part.Current_Source_Path_File /=\n+            Project.Include_Path_File\n       then\n          Shared.Private_Part.Current_Source_Path_File :=\n            Project.Include_Path_File;\n@@ -2268,7 +2267,6 @@ package body Prj.Env is\n       end if;\n \n       --  No need to copy the Cache, it will be recomputed as needed\n-\n    end Copy;\n \n end Prj.Env;"}, {"sha": "7319ec90a0c52944065524ef9f134da55be95b57", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 78, "deletions": 78, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=86828d402fb5a42decd66f210038d31842ab10de", "patch": "@@ -37,7 +37,7 @@ with Snames;   use Snames;\n with Targparm; use Targparm;\n \n with Ada.Characters.Handling;    use Ada.Characters.Handling;\n-with Ada.Directories;            use Ada.Directories;\n+with Ada.Directories;            use Ada, Ada.Directories;\n with Ada.Strings;                use Ada.Strings;\n with Ada.Strings.Fixed;          use Ada.Strings.Fixed;\n with Ada.Strings.Maps.Constants; use Ada.Strings.Maps.Constants;\n@@ -217,8 +217,8 @@ package body Prj.Nmsc is\n \n    generic\n       with procedure Callback\n-        (Path            : Path_Information;\n-         Pattern_Index   : Natural);\n+        (Path          : Path_Information;\n+         Pattern_Index : Natural);\n    procedure Expand_Subdirectory_Pattern\n      (Project       : Project_Id;\n       Data          : in out Tree_Processing_Data;\n@@ -392,8 +392,8 @@ package body Prj.Nmsc is\n    --  the same value.\n \n    procedure Get_Directories\n-     (Project     : Project_Id;\n-      Data        : in out Tree_Processing_Data);\n+     (Project : Project_Id;\n+      Data    : in out Tree_Processing_Data);\n    --  Get the object directory, the exec directory and the source directories\n    --  of a project.\n \n@@ -636,11 +636,11 @@ package body Prj.Nmsc is\n       Locally_Removed     : Boolean               := False;\n       Location            : Source_Ptr            := No_Location)\n    is\n-      Config    : constant Language_Config := Lang_Id.Config;\n-      UData     : Unit_Index;\n-      Add_Src   : Boolean;\n-      Source    : Source_Id;\n-      Prev_Unit : Unit_Index := No_Unit_Index;\n+      Config            : constant Language_Config := Lang_Id.Config;\n+      UData             : Unit_Index;\n+      Add_Src           : Boolean;\n+      Source            : Source_Id;\n+      Prev_Unit         : Unit_Index := No_Unit_Index;\n       Source_To_Replace : Source_Id := No_Source;\n \n    begin\n@@ -665,9 +665,7 @@ package body Prj.Nmsc is\n          Source := Source_Files_Htable.Get\n            (Data.Tree.Source_Files_HT, File_Name);\n \n-         if Source /= No_Source\n-           and then Source.Index = Index\n-         then\n+         if Source /= No_Source and then Source.Index = Index then\n             Add_Src := False;\n          end if;\n       end if;\n@@ -891,9 +889,10 @@ package body Prj.Nmsc is\n          Remove_Source (Data.Tree, Source_To_Replace, Id);\n       end if;\n \n-      if Data.Tree.Replaced_Source_Number > 0 and then\n-         Replaced_Source_HTable.Get (Data.Tree.Replaced_Sources, Id.File) /=\n-           No_File\n+      if Data.Tree.Replaced_Source_Number > 0\n+        and then\n+          Replaced_Source_HTable.Get\n+            (Data.Tree.Replaced_Sources, Id.File) /= No_File\n       then\n          Replaced_Source_HTable.Remove (Data.Tree.Replaced_Sources, Id.File);\n          Data.Tree.Replaced_Source_Number :=\n@@ -1023,15 +1022,15 @@ package body Prj.Nmsc is\n      (Project : Project_Id;\n       Data    : in out Tree_Processing_Data)\n    is\n-      Shared : constant Shared_Project_Tree_Data_Access := Data.Tree.Shared;\n+      Shared   : constant Shared_Project_Tree_Data_Access := Data.Tree.Shared;\n       Prj_Data : Project_Processing_Data;\n \n    begin\n       Debug_Increase_Indent (\"check\", Project.Name);\n \n       Initialize (Prj_Data, Project);\n \n-      Check_If_Externally_Built   (Project, Data);\n+      Check_If_Externally_Built (Project, Data);\n \n       if Project.Qualifier /= Aggregate then\n          Get_Directories             (Project, Data);\n@@ -1043,8 +1042,8 @@ package body Prj.Nmsc is\n       end if;\n \n       case Project.Qualifier is\n-         when Dry       => Check_Abstract_Project  (Project, Data);\n-         when others    => null;\n+         when Dry    => Check_Abstract_Project (Project, Data);\n+         when others => null;\n       end case;\n \n       --  Check configuration. This must be done even for gnatmake (even though\n@@ -1125,8 +1124,8 @@ package body Prj.Nmsc is\n      (Project : Project_Id;\n       Data    : in out Tree_Processing_Data)\n    is\n-      Shared       : constant Shared_Project_Tree_Data_Access :=\n-        Data.Tree.Shared;\n+      Shared          : constant Shared_Project_Tree_Data_Access :=\n+                          Data.Tree.Shared;\n \n       Dot_Replacement : File_Name_Type := No_File;\n       Casing          : Casing_Type    := All_Lower_Case;\n@@ -1418,8 +1417,9 @@ package body Prj.Nmsc is\n                            Lang_Index.Config.Compiler_Driver :=\n                              File_Name_Type (Element.Value.Value);\n \n-                        when Name_Required_Switches |\n-                             Name_Leading_Required_Switches =>\n+                        when Name_Required_Switches\n+                           | Name_Leading_Required_Switches\n+                           =>\n                            Put (Into_List =>\n                                   Lang_Index.Config.\n                                     Compiler_Leading_Required_Switches,\n@@ -2951,8 +2951,8 @@ package body Prj.Nmsc is\n \n       if Project.Library_Name /= No_Name then\n          if Current_Verbosity = High then\n-            Write_Attr (\"Library name: \",\n-                        Get_Name_String (Project.Library_Name));\n+            Write_Attr\n+              (\"Library name: \", Get_Name_String (Project.Library_Name));\n          end if;\n \n          pragma Assert (Lib_Dir.Kind = Single);\n@@ -3096,7 +3096,7 @@ package body Prj.Nmsc is\n \n       Project.Library :=\n         Project.Library_Dir /= No_Path_Information\n-          and then Project.Library_Name /= No_Name;\n+        and then Project.Library_Name /= No_Name;\n \n       if Project.Extends = No_Project then\n          case Project.Qualifier is\n@@ -5178,13 +5178,13 @@ package body Prj.Nmsc is\n \n       No_Sources : constant Boolean :=\n                      ((not Source_Files.Default\n-                        and then Source_Files.Values = Nil_String)\n-                       or else\n-                         (not Source_Dirs.Default\n-                           and then Source_Dirs.Values = Nil_String)\n-                       or else\n-                         (not Languages.Default\n-                           and then Languages.Values = Nil_String))\n+                       and then Source_Files.Values = Nil_String)\n+                      or else\n+                        (not Source_Dirs.Default\n+                         and then Source_Dirs.Values = Nil_String)\n+                      or else\n+                        (not Languages.Default\n+                         and then Languages.Values = Nil_String))\n                      and then Project.Extends = No_Project;\n \n    --  Start of processing for Get_Directories\n@@ -5231,9 +5231,7 @@ package body Prj.Nmsc is\n                Must_Exist       => False,\n                Externally_Built => Project.Externally_Built);\n \n-            if not Dir_Exists\n-              and then not Project.Externally_Built\n-            then\n+            if not Dir_Exists and then not Project.Externally_Built then\n                --  The object directory does not exist, report an error if the\n                --  project is not externally built.\n \n@@ -5273,7 +5271,7 @@ package body Prj.Nmsc is\n \n       --  We set the object directory to its default\n \n-      Project.Exec_Directory   := Project.Object_Directory;\n+      Project.Exec_Directory := Project.Object_Directory;\n \n       if Exec_Dir.Value /= Empty_String then\n          Get_Name_String (Exec_Dir.Value);\n@@ -5342,19 +5340,19 @@ package body Prj.Nmsc is\n \n          Remove_Source_Dirs := False;\n          Add_To_Or_Remove_From_Source_Dirs\n-           (Path  => (Name         => Project.Directory.Name,\n-                      Display_Name => Project.Directory.Display_Name),\n-            Rank  => 1);\n+           (Path => (Name         => Project.Directory.Name,\n+                     Display_Name => Project.Directory.Display_Name),\n+            Rank => 1);\n \n       else\n          Remove_Source_Dirs := False;\n          Find_Source_Dirs\n-           (Project         => Project,\n-            Data            => Data,\n-            Patterns        => Source_Dirs.Values,\n-            Ignore          => Ignore_Source_Sub_Dirs.Values,\n-            Search_For      => Search_Directories,\n-            Resolve_Links   => Opt.Follow_Links_For_Dirs);\n+           (Project       => Project,\n+            Data          => Data,\n+            Patterns      => Source_Dirs.Values,\n+            Ignore        => Ignore_Source_Sub_Dirs.Values,\n+            Search_For    => Search_Directories,\n+            Resolve_Links => Opt.Follow_Links_For_Dirs);\n \n          if Project.Source_Dirs = Nil_String\n            and then Project.Qualifier = Standard\n@@ -5371,12 +5369,12 @@ package body Prj.Nmsc is\n       then\n          Remove_Source_Dirs := True;\n          Find_Source_Dirs\n-           (Project         => Project,\n-            Data            => Data,\n-            Patterns        => Excluded_Source_Dirs.Values,\n-            Ignore          => Nil_String,\n-            Search_For      => Search_Directories,\n-            Resolve_Links   => Opt.Follow_Links_For_Dirs);\n+           (Project       => Project,\n+            Data          => Data,\n+            Patterns      => Excluded_Source_Dirs.Values,\n+            Ignore        => Nil_String,\n+            Search_For    => Search_Directories,\n+            Resolve_Links => Opt.Follow_Links_For_Dirs);\n       end if;\n \n       Debug_Output (\"putting source directories in canonical cases\");\n@@ -6291,9 +6289,11 @@ package body Prj.Nmsc is\n \n          declare\n             Source_File_Path_Name : constant String :=\n-              Path_Name_Of\n-                (File_Name_Type (Source_List_File.Value),\n-                 Project.Project.Directory.Display_Name);\n+                                      Path_Name_Of\n+                                        (File_Name_Type\n+                                           (Source_List_File.Value),\n+                                         Project.Project.\n+                                           Directory.Display_Name);\n \n          begin\n             Has_Explicit_Sources := True;\n@@ -7254,6 +7254,7 @@ package body Prj.Nmsc is\n \n       Source_Dir := Project.Project.Source_Dirs;\n       Src_Dir_Rank := Project.Project.Source_Dir_Ranks;\n+\n       while Source_Dir /= Nil_String loop\n          begin\n             Num_Nod := Shared.Number_Lists.Table (Src_Dir_Rank);\n@@ -7303,7 +7304,7 @@ package body Prj.Nmsc is\n \n                      if not Opt.Follow_Links_For_Files\n                        or else Is_Regular_File\n-                                 (Display_Source_Directory & Name (1 .. Last))\n+                         (Display_Source_Directory & Name (1 .. Last))\n                      then\n                         Name_Len := Last;\n                         Name_Buffer (1 .. Name_Len) := Name (1 .. Last);\n@@ -7459,8 +7460,8 @@ package body Prj.Nmsc is\n          if Source.Unit /= No_Unit_Index then\n             declare\n                Unit_Except : Unit_Exception :=\n-                 Unit_Exceptions_Htable.Get\n-                   (Project.Unit_Exceptions, Source.Unit.Name);\n+                               Unit_Exceptions_Htable.Get\n+                                 (Project.Unit_Exceptions, Source.Unit.Name);\n \n             begin\n                Unit_Except.Name := Source.Unit.Name;\n@@ -7516,7 +7517,7 @@ package body Prj.Nmsc is\n \n       procedure Check_Missing_Sources is\n          Extending    : constant Boolean :=\n-           Project.Project.Extends /= No_Project;\n+                          Project.Project.Extends /= No_Project;\n          Language     : Language_Ptr;\n          Source       : Source_Id;\n          Alt_Lang     : Language_List;\n@@ -7787,8 +7788,8 @@ package body Prj.Nmsc is\n             Id.Project := Project.Project;\n \n             Lang_Id := Project.Project.Languages;\n-            while Lang_Id /= No_Language_Index and then\n-            Lang_Id.Name /= Src.Language\n+            while Lang_Id /= No_Language_Index\n+              and then Lang_Id.Name /= Src.Language\n             loop\n                Lang_Id := Lang_Id.Next;\n             end loop;\n@@ -7802,18 +7803,17 @@ package body Prj.Nmsc is\n                   \" in source info file\");\n             end if;\n \n-            Id.Language            := Lang_Id;\n-            Id.Kind                := Src.Kind;\n-            Id.Index               := Src.Index;\n+            Id.Language := Lang_Id;\n+            Id.Kind     := Src.Kind;\n+            Id.Index    := Src.Index;\n \n             Id.Path :=\n               (Path_Name_Type (Src.Display_Path_Name),\n                Path_Name_Type (Src.Path_Name));\n \n             Name_Len := 0;\n             Add_Str_To_Name_Buffer\n-              (Ada.Directories.Simple_Name\n-                 (Get_Name_String (Src.Path_Name)));\n+              (Directories.Simple_Name (Get_Name_String (Src.Path_Name)));\n             Id.File := Name_Find;\n \n             Id.Next_With_File_Name :=\n@@ -7822,16 +7822,16 @@ package body Prj.Nmsc is\n \n             Name_Len := 0;\n             Add_Str_To_Name_Buffer\n-              (Ada.Directories.Simple_Name\n+              (Directories.Simple_Name\n                  (Get_Name_String (Src.Display_Path_Name)));\n             Id.Display_File := Name_Find;\n \n-            Id.Dep_Name            := Dependency_Name\n-              (Id.File, Id.Language.Config.Dependency_Kind);\n-            Id.Naming_Exception    := Src.Naming_Exception;\n-            Id.Object              := Object_Name\n-              (Id.File, Id.Language.Config.Object_File_Suffix);\n-            Id.Switches            := Switches_Name (Id.File);\n+            Id.Dep_Name         :=\n+              Dependency_Name (Id.File, Id.Language.Config.Dependency_Kind);\n+            Id.Naming_Exception := Src.Naming_Exception;\n+            Id.Object           :=\n+              Object_Name (Id.File, Id.Language.Config.Object_File_Suffix);\n+            Id.Switches         := Switches_Name (Id.File);\n \n             --  Add the source id to the Unit_Sources_HT hash table, if the\n             --  unit name is not null.\n@@ -7840,7 +7840,8 @@ package body Prj.Nmsc is\n \n                declare\n                   UData : Unit_Index :=\n-                    Units_Htable.Get (Data.Tree.Units_HT, Src.Unit_Name);\n+                            Units_Htable.Get\n+                              (Data.Tree.Units_HT, Src.Unit_Name);\n                begin\n                   if UData = No_Unit_Index then\n                      UData := new Unit_Data;\n@@ -8014,9 +8015,8 @@ package body Prj.Nmsc is\n          when Warning | Error =>\n             declare\n                Msg : constant String :=\n-                       \"<there are no \" &\n-                       Lang_Name &\n-                       \" sources in this project\";\n+                       \"<there are no \"\n+                       & Lang_Name & \" sources in this project\";\n \n             begin\n                Error_Msg_Warn := Data.Flags.When_No_Sources = Warning;"}, {"sha": "b872d5aa838b00bdbc4f4250f00c1f22617cf8de", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 56, "deletions": 64, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=86828d402fb5a42decd66f210038d31842ab10de", "patch": "@@ -462,9 +462,9 @@ package body Prj.Proc is\n    -------------------------\n \n    function Get_Attribute_Index\n-     (Tree   : Project_Node_Tree_Ref;\n-      Attr   : Project_Node_Id;\n-      Index  : Name_Id) return Name_Id\n+     (Tree  : Project_Node_Tree_Ref;\n+      Attr  : Project_Node_Id;\n+      Index : Name_Id) return Name_Id\n    is\n    begin\n       if Index = All_Other_Names\n@@ -685,8 +685,8 @@ package body Prj.Proc is\n                   Index           : Name_Id := No_Name;\n \n                begin\n-                  if Present (Term_Project) and then\n-                     Term_Project /= From_Project_Node\n+                  if Present (Term_Project)\n+                    and then Term_Project /= From_Project_Node\n                   then\n                      --  This variable or attribute comes from another project\n \n@@ -1331,8 +1331,8 @@ package body Prj.Proc is\n \n          --  Should never happen\n \n-         Write_Line (\"package \"\"\" & Get_Name_String (With_Name) &\n-                     \"\"\" not found\");\n+         Write_Line\n+           (\"package \"\"\" & Get_Name_String (With_Name) & \"\"\" not found\");\n          raise Program_Error;\n \n       else\n@@ -1363,8 +1363,8 @@ package body Prj.Proc is\n          Env                    => Env,\n          Reset_Tree             => Reset_Tree);\n \n-      if Project_Qualifier_Of (From_Project_Node, From_Project_Node_Tree) /=\n-        Configuration\n+      if Project_Qualifier_Of\n+        (From_Project_Node, From_Project_Node_Tree) /= Configuration\n       then\n          Process_Project_Tree_Phase_2\n            (In_Tree                => In_Tree,\n@@ -1381,17 +1381,16 @@ package body Prj.Proc is\n    -------------------------------\n \n    procedure Process_Declarative_Items\n-     (Project                : Project_Id;\n-      In_Tree                : Project_Tree_Ref;\n-      From_Project_Node      : Project_Node_Id;\n-      Node_Tree              : Project_Node_Tree_Ref;\n-      Env                    : Prj.Tree.Environment;\n-      Pkg                    : Package_Id;\n-      Item                   : Project_Node_Id;\n-      Child_Env              : in out Prj.Tree.Environment)\n+     (Project           : Project_Id;\n+      In_Tree           : Project_Tree_Ref;\n+      From_Project_Node : Project_Node_Id;\n+      Node_Tree         : Project_Node_Tree_Ref;\n+      Env               : Prj.Tree.Environment;\n+      Pkg               : Package_Id;\n+      Item              : Project_Node_Id;\n+      Child_Env         : in out Prj.Tree.Environment)\n    is\n-      Shared : constant Shared_Project_Tree_Data_Access :=\n-        In_Tree.Shared;\n+      Shared : constant Shared_Project_Tree_Data_Access := In_Tree.Shared;\n \n       procedure Check_Or_Set_Typed_Variable\n         (Value       : in out Variable_Value;\n@@ -1459,8 +1458,8 @@ package body Prj.Proc is\n                 (String_Type_Of (Declaration, Node_Tree), Node_Tree);\n \n             while Present (Current_String)\n-              and then String_Value_Of (Current_String, Node_Tree) /=\n-                                                                 Value.Value\n+              and then\n+                String_Value_Of (Current_String, Node_Tree) /= Value.Value\n             loop\n                Current_String :=\n                  Next_Literal_String (Current_String, Node_Tree);\n@@ -1548,16 +1547,17 @@ package body Prj.Proc is\n \n                   declare\n                      Project_Name : constant Name_Id :=\n-                       Name_Of (Project_Of_Renamed_Package, Node_Tree);\n+                                      Name_Of (Project_Of_Renamed_Package,\n+                                               Node_Tree);\n \n                      Renamed_Project : constant Project_Id :=\n-                       Imported_Or_Extended_Project_From\n-                         (Project, Project_Name);\n+                                         Imported_Or_Extended_Project_From\n+                                           (Project, Project_Name);\n \n                      Renamed_Package : constant Package_Id :=\n-                       Package_From\n-                         (Renamed_Project, Shared,\n-                          Name_Of (Current_Item, Node_Tree));\n+                                         Package_From\n+                                           (Renamed_Project, Shared,\n+                                            Name_Of (Current_Item, Node_Tree));\n \n                   begin\n                      --  For a renamed package, copy the declarations of the\n@@ -1566,8 +1566,9 @@ package body Prj.Proc is\n                      --  declaration.\n \n                      Copy_Package_Declarations\n-                       (From => Shared.Packages.Table (Renamed_Package).Decl,\n-                        To   => Shared.Packages.Table (New_Pkg).Decl,\n+                       (From       =>\n+                          Shared.Packages.Table (Renamed_Package).Decl,\n+                        To         => Shared.Packages.Table (New_Pkg).Decl,\n                         New_Loc    => Location_Of (Current_Item, Node_Tree),\n                         Restricted => False,\n                         Shared     => Shared);\n@@ -2359,8 +2360,8 @@ package body Prj.Proc is\n           (Warning_Mode /= Treat_As_Error or else Warnings_Detected = 0);\n \n       if Current_Verbosity = High then\n-         Debug_Decrease_Indent (\"Done Process tree, phase 1, Success=\"\n-                                & Success'Img);\n+         Debug_Decrease_Indent\n+           (\"Done Process tree, phase 1, Success=\" & Success'Img);\n       end if;\n    end Process_Project_Tree_Phase_1;\n \n@@ -2396,12 +2397,10 @@ package body Prj.Proc is\n       --  all virtual extending projects to object directory of main project.\n \n       if Project /= No_Project\n-        and then\n-          Is_Extending_All (From_Project_Node, From_Project_Node_Tree)\n+        and then Is_Extending_All (From_Project_Node, From_Project_Node_Tree)\n       then\n          declare\n-            Object_Dir : constant Path_Information :=\n-                           Project.Object_Directory;\n+            Object_Dir : constant Path_Information := Project.Object_Directory;\n \n          begin\n             Prj := In_Tree.Projects;\n@@ -2471,10 +2470,9 @@ package body Prj.Proc is\n \n       Debug_Decrease_Indent (\"Done Process tree, phase 2\");\n \n-      Success :=\n-        Total_Errors_Detected = 0\n-          and then\n-            (Warning_Mode /= Treat_As_Error or else Warnings_Detected = 0);\n+      Success := Total_Errors_Detected = 0\n+        and then\n+          (Warning_Mode /= Treat_As_Error or else Warnings_Detected = 0);\n    end Process_Project_Tree_Phase_2;\n \n    -----------------------\n@@ -2489,8 +2487,7 @@ package body Prj.Proc is\n       Env                    : in out Prj.Tree.Environment;\n       Extended_By            : Project_Id)\n    is\n-      Shared : constant Shared_Project_Tree_Data_Access :=\n-                 In_Tree.Shared;\n+      Shared : constant Shared_Project_Tree_Data_Access := In_Tree.Shared;\n \n       Child_Env              : Prj.Tree.Environment;\n       --  Only used for the root aggregate project (if any). This is left\n@@ -2576,9 +2573,9 @@ package body Prj.Proc is\n       ---------------------------------\n \n       procedure Process_Aggregated_Projects is\n-         List : Aggregated_Project_List;\n+         List           : Aggregated_Project_List;\n          Loaded_Project : Prj.Tree.Project_Node_Id;\n-         Success     : Boolean := True;\n+         Success        : Boolean := True;\n       begin\n          if Project.Qualifier /= Aggregate then\n             return;\n@@ -2587,10 +2584,10 @@ package body Prj.Proc is\n          Debug_Increase_Indent (\"Process_Aggregated_Projects\", Project.Name);\n \n          Prj.Nmsc.Process_Aggregated_Projects\n-           (Tree         => In_Tree,\n-            Project      => Project,\n-            Node_Tree    => From_Project_Node_Tree,\n-            Flags        => Env.Flags);\n+           (Tree      => In_Tree,\n+            Project   => Project,\n+            Node_Tree => From_Project_Node_Tree,\n+            Flags     => Env.Flags);\n \n          List := Project.Aggregated_Projects;\n          while Success and then List /= null loop\n@@ -2636,6 +2633,7 @@ package body Prj.Proc is\n                      Env                    => Env,\n                      Reset_Tree             => False);\n                end if;\n+\n             else\n                Debug_Output (\"Failed to parse\", Name_Id (List.Path));\n             end if;\n@@ -2667,8 +2665,8 @@ package body Prj.Proc is\n \n             Current_Pkg := First;\n             while Current_Pkg /= No_Package\n-              and then Shared.Packages.Table (Current_Pkg).Name /=\n-              Element.Name\n+              and then\n+                Shared.Packages.Table (Current_Pkg).Name /= Element.Name\n             loop\n                Current_Pkg := Shared.Packages.Table (Current_Pkg).Next;\n             end loop;\n@@ -2702,9 +2700,7 @@ package body Prj.Proc is\n             Attribute1 := Attr_Value1.Next;\n          end loop;\n \n-         if Attribute1 = No_Variable\n-           or else Attr_Value1.Value.Default\n-         then\n+         if Attribute1 = No_Variable or else Attr_Value1.Value.Default then\n             --  Attribute Languages is not declared in the extending project.\n             --  Check if it is declared in the project being extended.\n \n@@ -2715,8 +2711,8 @@ package body Prj.Proc is\n                Attribute2 := Attr_Value2.Next;\n             end loop;\n \n-            if Attribute2 /= No_Variable and then\n-              not Attr_Value2.Value.Default\n+            if Attribute2 /= No_Variable\n+              and then not Attr_Value2.Value.Default\n             then\n                --  As attribute Languages is declared in the project being\n                --  extended, copy its value for the extending project.\n@@ -2748,8 +2744,8 @@ package body Prj.Proc is\n             Imported         : Project_List;\n             Declaration_Node : Project_Node_Id  := Empty_Node;\n \n-            Name : constant Name_Id :=\n-                     Name_Of (From_Project_Node, From_Project_Node_Tree);\n+            Name      : constant Name_Id :=\n+                          Name_Of (From_Project_Node, From_Project_Node_Tree);\n \n             Name_Node : constant Tree_Private_Part.Project_Name_And_Node :=\n                           Tree_Private_Part.Projects_Htable.Get\n@@ -2793,8 +2789,8 @@ package body Prj.Proc is\n             --  being a virtual extending project.\n \n             if Name_Len > Virtual_Prefix'Length\n-              and then Name_Buffer (1 .. Virtual_Prefix'Length) =\n-                         Virtual_Prefix\n+              and then\n+                Name_Buffer (1 .. Virtual_Prefix'Length) = Virtual_Prefix\n             then\n                Project.Virtual := True;\n             end if;\n@@ -2827,9 +2823,7 @@ package body Prj.Proc is\n \n             Process_Imported_Projects (Imported, Limited_With => False);\n \n-            if Project.Qualifier = Aggregate\n-              and then In_Tree.Is_Root_Tree\n-            then\n+            if Project.Qualifier = Aggregate and then In_Tree.Is_Root_Tree then\n                Initialize_And_Copy (Child_Env, Copy_From => Env);\n \n             else\n@@ -2874,9 +2868,7 @@ package body Prj.Proc is\n                Process_Aggregated_Projects;\n             end if;\n \n-            if Project.Qualifier = Aggregate\n-              and then In_Tree.Is_Root_Tree\n-            then\n+            if Project.Qualifier = Aggregate and then In_Tree.Is_Root_Tree then\n                Free (Child_Env);\n             end if;\n          end;"}, {"sha": "2b420e1fd63d4fc1d32316206d1181270df937f7", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=86828d402fb5a42decd66f210038d31842ab10de", "patch": "@@ -104,7 +104,6 @@ package body Prj.Tree is\n       Zone := In_Tree.Project_Nodes.Table (To).Comments;\n \n       if No (Zone) then\n-\n          --  Create new N_Comment_Zones node\n \n          Project_Node_Table.Increment_Last (In_Tree.Project_Nodes);\n@@ -144,9 +143,9 @@ package body Prj.Tree is\n \n             --  Create new N_Comment node\n \n-            if (Where = After or else Where = After_End) and then\n-              Token /= Tok_EOF and then\n-              Comments.Table (J).Follows_Empty_Line\n+            if (Where = After or else Where = After_End)\n+              and then Token /= Tok_EOF\n+              and then Comments.Table (J).Follows_Empty_Line\n             then\n                Comments.Table (1 .. Comments.Last - J + 1) :=\n                  Comments.Table (J .. Comments.Last);"}, {"sha": "9454f9ff418bf22a7114f508e4c98febc7c2f6e8", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=86828d402fb5a42decd66f210038d31842ab10de", "patch": "@@ -128,8 +128,8 @@ package body Prj.Util is\n    ---------------\n \n    procedure Duplicate\n-     (This    : in out Name_List_Index;\n-      Shared  : Shared_Project_Tree_Data_Access)\n+     (This   : in out Name_List_Index;\n+      Shared : Shared_Project_Tree_Data_Access)\n    is\n       Old_Current : Name_List_Index;\n       New_Current : Name_List_Index;"}, {"sha": "124536136d7cf779a11fcfb944d9b3c1a7c964cd", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=86828d402fb5a42decd66f210038d31842ab10de", "patch": "@@ -358,7 +358,6 @@ package body Prj is\n \n       Name_Len := Name_Len - 1;\n       return Name_Find;\n-\n    end Extend_Name;\n \n    ---------------------\n@@ -377,7 +376,7 @@ package body Prj is\n \n    procedure Language_Changed (Iter : in out Source_Iterator) is\n    begin\n-      Iter.Current  := No_Source;\n+      Iter.Current := No_Source;\n \n       if Iter.Language_Name /= No_Name then\n          while Iter.Language /= null\n@@ -580,6 +579,7 @@ package body Prj is\n \n       begin\n          Iterator := For_Each_Source (In_Tree => Tree, Project => Proj);\n+\n          while Element (Iterator) /= No_Source loop\n             if Element (Iterator).File = Base_Name\n               and then (Index = 0 or else Element (Iterator).Index = Index)\n@@ -626,6 +626,7 @@ package body Prj is\n                Include_Aggregated => False,\n                With_State         => Result);\n          end if;\n+\n       else\n          Look_For_Sources (No_Project, In_Tree, Result);\n       end if;\n@@ -1363,8 +1364,8 @@ package body Prj is\n          procedure For_All_Projects is\n            new For_Every_Project_Imported (Boolean, Recursive_Add);\n \n-         Dummy   : Boolean := False;\n-         List    : Project_List;\n+         Dummy : Boolean := False;\n+         List  : Project_List;\n \n       begin\n          List := Local_Tree.Projects;"}, {"sha": "b5584e64d6e034384251210a9d1d28941a489392", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86828d402fb5a42decd66f210038d31842ab10de/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=86828d402fb5a42decd66f210038d31842ab10de", "patch": "@@ -2263,6 +2263,8 @@ package body Sem_Ch5 is\n \n       --  If domain of iteration is an expression, create a declaration for it,\n       --  so that finalization actions are introduced outside of the loop.\n+      --  The declaration must be a renaming because the  body of the loop may\n+      --  assign to elements.\n \n       if not Is_Entity_Name (Iter_Name) then\n          declare\n@@ -2273,10 +2275,10 @@ package body Sem_Ch5 is\n             Typ := Etype (Iter_Name);\n \n             Decl :=\n-              Make_Object_Declaration (Loc,\n+              Make_Object_Renaming_Declaration (Loc,\n                 Defining_Identifier => Id,\n-                Object_Definition   => New_Occurrence_Of (Typ, Loc),\n-                Expression          => Relocate_Node (Iter_Name));\n+                Subtype_Mark        => New_Occurrence_Of (Typ, Loc),\n+                Name                => Relocate_Node (Iter_Name));\n \n             Insert_Actions (Parent (Parent (N)), New_List (Decl));\n             Rewrite (Name (N), New_Occurrence_Of (Id, Loc));"}]}