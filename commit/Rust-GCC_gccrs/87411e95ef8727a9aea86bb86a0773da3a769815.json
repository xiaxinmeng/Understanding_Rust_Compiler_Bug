{"sha": "87411e95ef8727a9aea86bb86a0773da3a769815", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc0MTFlOTVlZjg3MjdhOWFlYTg2YmI4NmEwNzczZGEzYTc2OTgxNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-11-05T18:47:04Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-11-05T18:47:04Z"}, "message": "utils.c (create_subprog_decl): Move code dealing with conflicting inlining status of nested subprograms to...\n\n\t* gcc-interface/utils.c (create_subprog_decl): Move code dealing with\n\tconflicting inlining status of nested subprograms to...\n\t* gcc-interface/trans.c (check_inlining_for_nested_subprog): ...here.\n\t(Attribute_to_gnu) <Attr_Access>: Call it.\n\t(Call_to_gnu): Likewise.\n\t(Subprogram_Body_to_gnu): Drop the body if it is an inlined external\n\tfunction that has been marked uninlinable.\n\nFrom-SVN: r217151", "tree": {"sha": "63c4c878221e6e8a4f2f9ff3061075c87530d615", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63c4c878221e6e8a4f2f9ff3061075c87530d615"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87411e95ef8727a9aea86bb86a0773da3a769815", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87411e95ef8727a9aea86bb86a0773da3a769815", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87411e95ef8727a9aea86bb86a0773da3a769815", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87411e95ef8727a9aea86bb86a0773da3a769815/comments", "author": null, "committer": null, "parents": [{"sha": "9c7a77fcc3d2895ec72639aa7a2067280a612268", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c7a77fcc3d2895ec72639aa7a2067280a612268", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c7a77fcc3d2895ec72639aa7a2067280a612268"}], "stats": {"total": 541, "additions": 528, "deletions": 13}, "files": [{"sha": "916715ad62e1c9c29a17657f2a1fa1c37654c684", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -1,3 +1,13 @@\n+2014-11-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils.c (create_subprog_decl): Move code dealing with\n+\tconflicting inlining status of nested subprograms to...\n+\t* gcc-interface/trans.c (check_inlining_for_nested_subprog): ...here.\n+\t(Attribute_to_gnu) <Attr_Access>: Call it.\n+\t(Call_to_gnu): Likewise.\n+\t(Subprogram_Body_to_gnu): Drop the body if it is an inlined external\n+\tfunction that has been marked uninlinable.\n+\n 2014-10-31  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* aspects.adb Add an entry for aspect Ghost in table"}, {"sha": "258b79cbb52712f653a1b7facab15b801abc7640", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 57, "deletions": 1, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -1481,6 +1481,49 @@ Pragma_to_gnu (Node_Id gnat_node)\n   return gnu_result;\n }\n \f\n+\n+/* Check the inlining status of nested function FNDECL in the current context.\n+\n+   If a non-inline nested function is referenced from an inline external\n+   function, we cannot honor both requests at the same time without cloning\n+   the nested function in the current unit since it is private to its unit.\n+   We could inline it as well but it's probably better to err on the side\n+   of too little inlining.\n+\n+   This must be invoked only on nested functions present in the source code\n+   and not on nested functions generated by the compiler, e.g. finalizers,\n+   because they are not marked inline and we don't want them to block the\n+   inlining of the parent function.  */\n+\n+static void\n+check_inlining_for_nested_subprog (tree fndecl)\n+{\n+  if (!DECL_DECLARED_INLINE_P (fndecl)\n+      && current_function_decl\n+      && DECL_EXTERNAL (current_function_decl)\n+      && DECL_DECLARED_INLINE_P (current_function_decl))\n+    {\n+      const location_t loc1 = DECL_SOURCE_LOCATION (fndecl);\n+      const location_t loc2 = DECL_SOURCE_LOCATION (current_function_decl);\n+\n+      if (lookup_attribute (\"always_inline\",\n+\t\t\t    DECL_ATTRIBUTES (current_function_decl)))\n+\t{\n+\t  error_at (loc1, \"subprogram %q+F not marked Inline_Always\", fndecl);\n+\t  error_at (loc2, \"parent subprogram cannot be inlined\");\n+\t}\n+      else\n+\t{\n+\t  warning_at (loc1, OPT_Winline, \"subprogram %q+F not marked Inline\",\n+\t\t      fndecl);\n+\t  warning_at (loc2, OPT_Winline, \"parent subprogram cannot be inlined\");\n+\t}\n+\n+      DECL_DECLARED_INLINE_P (current_function_decl) = 0;\n+      DECL_UNINLINABLE (current_function_decl) = 1;\n+    }\n+}\n+\f\n /* Return an expression for the length of TYPE, an integral type, computed in\n    RESULT_TYPE, another integral type.\n \n@@ -1696,6 +1739,9 @@ Attribute_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, int attribute)\n \t    {\n \t      set_expr_location_from_node (gnu_expr, gnat_node);\n \n+\t      /* Also check the inlining status.  */\n+\t      check_inlining_for_nested_subprog (TREE_OPERAND (gnu_expr, 0));\n+\n \t      /* Check that we're not violating the No_Implicit_Dynamic_Code\n \t\t restriction.  Be conservative if we don't know anything\n \t\t about the trampoline strategy for the target.  */\n@@ -3729,7 +3775,12 @@ Subprogram_Body_to_gnu (Node_Id gnat_node)\n       gnu_subprog_language->other_ret_val = NULL;\n     }\n \n-  rest_of_subprog_body_compilation (gnu_subprog_decl);\n+  /* If this is an inlined external function that has been marked uninlinable,\n+     drop the body and stop there.  Otherwise compile the body.  */\n+  if (DECL_EXTERNAL (gnu_subprog_decl) && DECL_UNINLINABLE (gnu_subprog_decl))\n+    DECL_SAVED_TREE (gnu_subprog_decl) = NULL_TREE;\n+  else\n+    rest_of_subprog_body_compilation (gnu_subprog_decl);\n }\n \f\n /* Return true if GNAT_NODE requires atomic synchronization.  */\n@@ -3874,6 +3925,11 @@ Call_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, tree gnu_target,\n       return call_expr;\n     }\n \n+  /* For a call to a nested function, check the inlining status.  */\n+  if (TREE_CODE (gnu_subprog) == FUNCTION_DECL\n+      && decl_function_context (gnu_subprog))\n+    check_inlining_for_nested_subprog (gnu_subprog);\n+\n   /* The only way we can be making a call via an access type is if Name is an\n      explicit dereference.  In that case, get the list of formal args from the\n      type the access type is pointing to.  Otherwise, get the formals from the"}, {"sha": "4d350605552b29f5f7a8f796efcbdbf270a2b685", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -3027,18 +3027,6 @@ create_subprog_decl (tree subprog_name, tree asm_name, tree subprog_type,\n \t\t\t\t TREE_TYPE (subprog_type));\n   DECL_ARGUMENTS (subprog_decl) = param_decl_list;\n \n-  /* If this is a non-inline function nested inside an inlined external\n-     function, we cannot honor both requests without cloning the nested\n-     function in the current unit since it is private to the other unit.\n-     We could inline the nested function as well but it's probably better\n-     to err on the side of too little inlining.  */\n-  if ((inline_status == is_suppressed || inline_status == is_disabled)\n-      && !public_flag\n-      && current_function_decl\n-      && DECL_DECLARED_INLINE_P (current_function_decl)\n-      && DECL_EXTERNAL (current_function_decl))\n-    DECL_DECLARED_INLINE_P (current_function_decl) = 0;\n-\n   DECL_ARTIFICIAL (subprog_decl) = artificial_flag;\n   DECL_EXTERNAL (subprog_decl) = extern_flag;\n "}, {"sha": "d227828c321bd2a56464fde7b0af21493b4e232d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -1,3 +1,30 @@\n+2014-11-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/inline1.adb: New test.\n+\t* gnat.dg/inline1_pkg.ad[sb]: New helper.\n+\t* gnat.dg/inline2.adb: New test.\n+\t* gnat.dg/inline2_pkg.ad[sb]: New helper.\n+\t* gnat.dg/inline3.adb: New test.\n+\t* gnat.dg/inline3_pkg.ad[sb]: New helper.\n+\t* gnat.dg/inline4.adb: New test.\n+\t* gnat.dg/inline4_pkg.ad[sb]: New helper.\n+\t* gnat.dg/inline5.adb: New test.\n+\t* gnat.dg/inline5_pkg.ad[sb]: New helper.\n+\t* gnat.dg/inline6.adb: New test.\n+\t* gnat.dg/inline6_pkg.ad[sb]: New helper.\t\n+\t* gnat.dg/inline7.adb: New test.\n+\t* gnat.dg/inline7_pkg1.ad[sb]: New helper.\n+\t* gnat.dg/inline7_pkg2.ad[sb]: Likewise.\n+\t* gnat.dg/inline8.adb: New test.\n+\t* gnat.dg/inline8_pkg1.ad[sb]: New helper.\n+\t* gnat.dg/inline8_pkg2.ad[sb]: New helper.\n+\t* gnat.dg/inline9.adb: New test.\n+\t* gnat.dg/inline9_pkg.ad[sb]: New helper.\n+\t* gnat.dg/inline10.adb: New test.\n+\t* gnat.dg/inline10_pkg.ad[sb]: New helper.\n+\t* gnat.dg/inline11.adb: New test.\n+\t* gnat.dg/inline11_pkg.ad[sb]: New helper.\n+\n 2014-11-05  Anthony Brandon  <anthony.brandon@gmail.com>\n \n \tPR driver/36312"}, {"sha": "d62b8596dea93281df74793562cf993ce9be5cc8", "filename": "gcc/testsuite/gnat.dg/inline1.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline1.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,11 @@\n+-- { dg-do compile }\n+\n+with Inline1_Pkg; use Inline1_Pkg;\n+\n+procedure Inline1 is\n+   F : Float := Invalid_Real;\n+begin\n+   if Valid_Real (F) then\n+      F := F + 1.0;\n+   end if;\n+end;"}, {"sha": "084533009072d9a685400292f653f3f098e6858f", "filename": "gcc/testsuite/gnat.dg/inline10.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline10.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,9 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O -gnatn -Winline\" }\n+\n+with Inline10_Pkg; use Inline10_Pkg;\n+\n+procedure Inline10 is\n+begin\n+  Test (0);\n+end;"}, {"sha": "cf5d8611207bd53c9cb6bd618d6e999952c9b94b", "filename": "gcc/testsuite/gnat.dg/inline10_pkg.adb", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline10_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline10_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline10_pkg.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,21 @@\n+package body Inline10_Pkg is\n+\n+  procedure Test (I : Integer) is\n+\n+    function F (J : Integer) return Integer is\n+    begin\n+      return I - J;\n+    end;\n+    pragma Inline (F);\n+\n+    type FPT is access function (I : Integer) return Integer;\n+\n+    P : FPT := F'Access;\n+\n+  begin\n+    if I /= P (I) then\n+      raise Program_Error;\n+    end if;\n+  end;\n+\n+end Inline10_Pkg;"}, {"sha": "ba648244b0db23422bc995b64ddc0e6f2815d541", "filename": "gcc/testsuite/gnat.dg/inline10_pkg.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline10_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline10_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline10_pkg.ads?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,6 @@\n+package Inline10_Pkg is\n+\n+  procedure Test (I : Integer);\n+  pragma Inline (Test);\n+\n+end Inline10_Pkg;"}, {"sha": "cf8e1335f1214aede894e314eb944591541e16d7", "filename": "gcc/testsuite/gnat.dg/inline11.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline11.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,9 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O -gnatn -Winline\" }\n+\n+with Inline11_Pkg; use Inline11_Pkg;\n+\n+procedure Inline11 is\n+begin\n+  Trace (0);\n+end;"}, {"sha": "8303ebac0a626e3190a54b3dc50784e642966112", "filename": "gcc/testsuite/gnat.dg/inline11_pkg.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline11_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline11_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline11_pkg.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,15 @@\n+with Ada.Text_IO; use Ada.Text_IO;\n+\n+package body Inline11_Pkg is\n+\n+  function My_Img (I : Integer) return String is\n+  begin\n+    return I'Img;\n+  end;\n+\n+  procedure Trace (I : Integer) is\n+  begin\n+    Put_Line (My_Img (I));\n+  end;\n+\n+end Inline11_Pkg;"}, {"sha": "a06bbaccda8db3d586f2dc43fb593f6caa46950e", "filename": "gcc/testsuite/gnat.dg/inline11_pkg.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline11_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline11_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline11_pkg.ads?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,6 @@\n+package Inline11_Pkg is\n+\n+  procedure Trace (I : Integer);\n+  pragma Inline (Trace);\n+\n+end Inline11_Pkg;"}, {"sha": "957971d5f86e1f42e4817ea9eb1e6f890daa01ed", "filename": "gcc/testsuite/gnat.dg/inline1_pkg.adb", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline1_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline1_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline1_pkg.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,34 @@\n+with Ada.Unchecked_Conversion;\n+\n+package body Inline1_Pkg is\n+\n+   type Ieee_Short_Real is\n+      record\n+         Mantisse_Sign : Integer range 0 .. 1;\n+         Exponent      : Integer range 0 .. 2 **  8 - 1;\n+         Mantisse      : Integer range 0 .. 2 ** 23 - 1;\n+      end record;\n+\n+   for Ieee_Short_Real use\n+      record\n+         Mantisse_Sign at 0 range 31 .. 31;\n+         Exponent      at 0 range 23 .. 30;\n+         Mantisse      at 0 range  0 .. 22;\n+      end record;\n+\n+   function Valid_Real (Number : Float) return Boolean is\n+      function To_Ieee_Short_Real is\n+         new Ada.Unchecked_Conversion (Float, Ieee_Short_Real);\n+   begin\n+      return To_Ieee_Short_Real (Number).Exponent /= 255;\n+   end Valid_Real;\n+\n+   function Invalid_Real return Float is\n+      function To_Float is\n+         new Ada.Unchecked_Conversion (Ieee_Short_Real, Float);\n+   begin\n+      return To_Float (Ieee_Short_Real'(Mantisse_Sign => 0,\n+                                        Exponent => 255, Mantisse => 0));\n+   end Invalid_Real;\n+\n+end Inline1_Pkg;"}, {"sha": "32e710ba5d95d77c20ef4285cd7f70a2ed856548", "filename": "gcc/testsuite/gnat.dg/inline1_pkg.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline1_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline1_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline1_pkg.ads?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,9 @@\n+package Inline1_Pkg is\n+\n+   function Valid_Real (Number : Float) return Boolean;\n+   pragma Inline_Always (Valid_Real);\n+\n+   function Invalid_Real return Float;\n+   pragma Inline_Always (Invalid_Real);\n+\n+end Inline1_Pkg;"}, {"sha": "1c15d98065e9d74258ec0c5c3dcff28c9318f0e0", "filename": "gcc/testsuite/gnat.dg/inline2.adb", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline2.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,12 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O -gnatn -Winline\" }\n+\n+with Inline2_Pkg; use Inline2_Pkg;\n+\n+procedure Inline2 is\n+   F : Float := Invalid_Real;\n+begin\n+   if Valid_Real (F) then\n+      F := F + 1.0;\n+   end if;\n+end;"}, {"sha": "539b4a5e87dbf54fac3c24da644ccc1894f1822c", "filename": "gcc/testsuite/gnat.dg/inline2_pkg.adb", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline2_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline2_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline2_pkg.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,34 @@\n+with Ada.Unchecked_Conversion;\n+\n+package body Inline2_Pkg is\n+\n+   type Ieee_Short_Real is\n+      record\n+         Mantisse_Sign : Integer range 0 .. 1;\n+         Exponent      : Integer range 0 .. 2 **  8 - 1;\n+         Mantisse      : Integer range 0 .. 2 ** 23 - 1;\n+      end record;\n+\n+   for Ieee_Short_Real use\n+      record\n+         Mantisse_Sign at 0 range 31 .. 31;\n+         Exponent      at 0 range 23 .. 30;\n+         Mantisse      at 0 range  0 .. 22;\n+      end record;\n+\n+   function Valid_Real (Number : Float) return Boolean is\n+      function To_Ieee_Short_Real is\n+         new Ada.Unchecked_Conversion (Float, Ieee_Short_Real);\n+   begin\n+      return To_Ieee_Short_Real (Number).Exponent /= 255;\n+   end Valid_Real;\n+\n+   function Invalid_Real return Float is\n+      function To_Float is\n+         new Ada.Unchecked_Conversion (Ieee_Short_Real, Float);\n+   begin\n+      return To_Float (Ieee_Short_Real'(Mantisse_Sign => 0,\n+                                        Exponent => 255, Mantisse => 0));\n+   end Invalid_Real;\n+\n+end Inline2_Pkg;"}, {"sha": "e9949928a21d0fa76c233d0739db5486e63b4c07", "filename": "gcc/testsuite/gnat.dg/inline2_pkg.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline2_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline2_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline2_pkg.ads?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,9 @@\n+package Inline2_Pkg is\n+\n+   function Valid_Real (Number : Float) return Boolean;\n+   pragma Inline (Valid_Real);\n+\n+   function Invalid_Real return Float;\n+   pragma Inline (Invalid_Real);\n+\n+end Inline2_Pkg;"}, {"sha": "b0ba51360dab7364066f9a88de05fc08852650ce", "filename": "gcc/testsuite/gnat.dg/inline3.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline3.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,10 @@\n+-- { dg-do compile }\n+-- { dg-error \"not marked Inline_Always\" \"\" { target *-*-* } 0 }\n+-- { dg-error \"cannot be inlined\" \"\" { target *-*-* } 0 }\n+\n+with Inline3_Pkg; use Inline3_Pkg;\n+\n+procedure Inline3 is\n+begin\n+  Test (0);\n+end;"}, {"sha": "229075b92bff3ffe70bf51cdfc57a7508f195c61", "filename": "gcc/testsuite/gnat.dg/inline3_pkg.adb", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline3_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline3_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline3_pkg.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,17 @@\n+package body Inline3_Pkg is\n+\n+  procedure Test (I : Integer) is\n+\n+    function F (J : Integer) return Integer is\n+\n+    begin\n+      return I - J;\n+    end;\n+\n+  begin\n+    if I /= F (I) then\n+      raise Program_Error;\n+    end if;\n+  end;\n+\n+end Inline3_Pkg;"}, {"sha": "c5de874ca95448568fbb7e8701611c5c8af09069", "filename": "gcc/testsuite/gnat.dg/inline3_pkg.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline3_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline3_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline3_pkg.ads?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,6 @@\n+package Inline3_Pkg is\n+\n+  procedure Test (I : Integer);\n+  pragma Inline_Always (Test);\n+\n+end Inline3_Pkg;"}, {"sha": "ee914f9802a56d016074762b81d435b78eef3619", "filename": "gcc/testsuite/gnat.dg/inline4.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline4.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,8 @@\n+-- { dg-do compile }\n+\n+with Inline4_Pkg; use Inline4_Pkg;\n+\n+procedure Inline4 is\n+begin\n+  Test (0);\n+end;"}, {"sha": "cd01eda4f3340adaf0fd288ba3c1b9deac78338f", "filename": "gcc/testsuite/gnat.dg/inline4_pkg.adb", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline4_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline4_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline4_pkg.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,17 @@\n+package body Inline4_Pkg is\n+\n+  procedure Test (I : Integer) is\n+\n+    function F (J : Integer) return Integer is\n+    begin\n+      return I - J;\n+    end;\n+    pragma Inline_Always (F);\n+\n+  begin\n+    if I /= F (I) then\n+      raise Program_Error;\n+    end if;\n+  end;\n+\n+end Inline4_Pkg;"}, {"sha": "9a56ce5668b0ca9513b52ec1dca825b500e972f4", "filename": "gcc/testsuite/gnat.dg/inline4_pkg.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline4_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline4_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline4_pkg.ads?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,6 @@\n+package Inline4_Pkg is\n+\n+  procedure Test (I : Integer);\n+  pragma Inline_Always (Test);\n+\n+end Inline4_Pkg;"}, {"sha": "45803fabf7732ea4680e353937d75902c5fac4eb", "filename": "gcc/testsuite/gnat.dg/inline5.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline5.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,11 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O -gnatn -Winline\" }\n+-- { dg-warning \"not marked Inline\" \"\" { target *-*-* } 0 }\n+-- { dg-warning \"cannot be inlined\" \"\" { target *-*-* } 0 }\n+\n+with Inline5_Pkg; use Inline5_Pkg;\n+\n+procedure Inline5 is\n+begin\n+  Test (0);\n+end;"}, {"sha": "66b00cab2933c74df02930d01d895ff16c6adc23", "filename": "gcc/testsuite/gnat.dg/inline5_pkg.adb", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline5_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline5_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline5_pkg.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,16 @@\n+package body Inline5_Pkg is\n+\n+  procedure Test (I : Integer) is\n+\n+    function F (J : Integer) return Integer is\n+    begin\n+      return I - J;\n+    end;\n+\n+  begin\n+    if I /= F (I) then\n+      raise Program_Error;\n+    end if;\n+  end;\n+\n+end Inline5_Pkg;"}, {"sha": "2d2e9c332ab68f785e8bbc5e9315b040546eebcd", "filename": "gcc/testsuite/gnat.dg/inline5_pkg.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline5_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline5_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline5_pkg.ads?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,6 @@\n+package Inline5_Pkg is\n+\n+  procedure Test (I : Integer);\n+  pragma Inline (Test);\n+\n+end Inline5_Pkg;"}, {"sha": "1d9e5b9fe415e11b3bfd6764447b4daf74809f20", "filename": "gcc/testsuite/gnat.dg/inline6.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline6.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,9 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O -gnatn -Winline\" }\n+\n+with Inline6_Pkg; use Inline6_Pkg;\n+\n+procedure Inline6 is\n+begin\n+  Test (0);\n+end;"}, {"sha": "8f2d5777f834cb3ba23b9fe9ff768b90b04ae732", "filename": "gcc/testsuite/gnat.dg/inline6_pkg.adb", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline6_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline6_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline6_pkg.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,17 @@\n+package body Inline6_Pkg is\n+\n+  procedure Test (I : Integer) is\n+\n+    function F (J : Integer) return Integer is\n+    begin\n+      return I - J;\n+    end;\n+    pragma Inline (F);\n+\n+  begin\n+    if I /= F (I) then\n+      raise Program_Error;\n+    end if;\n+  end;\n+\n+end Inline6_Pkg;"}, {"sha": "dd0b498ed27603bce11cd90856a56ec46c86f6ee", "filename": "gcc/testsuite/gnat.dg/inline6_pkg.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline6_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline6_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline6_pkg.ads?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,6 @@\n+package Inline6_Pkg is\n+\n+  procedure Test (I : Integer);\n+  pragma Inline (Test);\n+\n+end Inline6_Pkg;"}, {"sha": "2c2a46a22fd3fee3a0c424d7926b0a7557e76308", "filename": "gcc/testsuite/gnat.dg/inline7.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline7.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,11 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O -gnatn -Winline\" }\n+-- { dg-warning \"not marked Inline\" \"\" { target *-*-* } 0 }\n+-- { dg-warning \"cannot be inlined\" \"\" { target *-*-* } 0 }\n+\n+with Inline7_Pkg1; use Inline7_Pkg1;\n+\n+procedure Inline7 is\n+begin\n+  Test (0);\n+end;"}, {"sha": "c9055211786c1611facf99547fee6f7bf2516345", "filename": "gcc/testsuite/gnat.dg/inline7_pkg1.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline7_pkg1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline7_pkg1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline7_pkg1.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,15 @@\n+with Inline7_Pkg2;\n+\n+package body Inline7_Pkg1 is\n+\n+  procedure Test (I : Integer) is\n+\n+    function F is new Inline7_Pkg2.Calc (I);\n+\n+  begin\n+    if I /= F (I) then\n+      raise Program_Error;\n+    end if;\n+  end;\n+\n+end Inline7_Pkg1;"}, {"sha": "6a69ec7b862acab040516ef7338bcfeff1cd9a2a", "filename": "gcc/testsuite/gnat.dg/inline7_pkg1.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline7_pkg1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline7_pkg1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline7_pkg1.ads?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,6 @@\n+package Inline7_Pkg1 is\n+\n+  procedure Test (I : Integer);\n+  pragma Inline (Test);\n+\n+end Inline7_Pkg1;"}, {"sha": "b3f18705275d27c196544b55780bad0bb4223924", "filename": "gcc/testsuite/gnat.dg/inline7_pkg2.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline7_pkg2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline7_pkg2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline7_pkg2.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,8 @@\n+package body Inline7_Pkg2 is\n+\n+  function Calc (A : Integer) return Integer is\n+  begin\n+    return D - A;\n+  end;\n+\n+end Inline7_Pkg2;"}, {"sha": "8532c304d7889a67e71911662be7e5cb472fc944", "filename": "gcc/testsuite/gnat.dg/inline7_pkg2.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline7_pkg2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline7_pkg2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline7_pkg2.ads?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,7 @@\n+package Inline7_Pkg2 is\n+\n+  generic\n+    D : Integer;\n+  function Calc (A : Integer) return Integer;\n+\n+end Inline7_Pkg2;"}, {"sha": "4e0dec8491860f2106539abd1c8c5609c676abe1", "filename": "gcc/testsuite/gnat.dg/inline8.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline8.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,9 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O -gnatn -Winline\" }\n+\n+with Inline8_Pkg1; use Inline8_Pkg1;\n+\n+procedure Inline8 is\n+begin\n+  Test (0);\n+end;"}, {"sha": "4406321375702133d568d62c2f58b9e66b2c05b2", "filename": "gcc/testsuite/gnat.dg/inline8_pkg1.adb", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline8_pkg1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline8_pkg1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline8_pkg1.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,16 @@\n+with Inline8_Pkg2;\n+\n+package body Inline8_Pkg1 is\n+\n+  procedure Test (I : Integer) is\n+\n+    function F is new Inline8_Pkg2.Calc (I);\n+    pragma Inline (F);\n+\n+  begin\n+    if I /= F (I) then\n+      raise Program_Error;\n+    end if;\n+  end;\n+\n+end Inline8_Pkg1;"}, {"sha": "d12cf565220f425d4af1ba33b05a48a64750a6e9", "filename": "gcc/testsuite/gnat.dg/inline8_pkg1.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline8_pkg1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline8_pkg1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline8_pkg1.ads?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,6 @@\n+package Inline8_Pkg1 is\n+\n+  procedure Test (I : Integer);\n+  pragma Inline (Test);\n+\n+end Inline8_Pkg1;"}, {"sha": "76017fc2d57bffd531827863ec9a82255b7474ff", "filename": "gcc/testsuite/gnat.dg/inline8_pkg2.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline8_pkg2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline8_pkg2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline8_pkg2.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,8 @@\n+package body Inline8_Pkg2 is\n+\n+  function Calc (A : Integer) return Integer is\n+  begin\n+    return D - A;\n+  end;\n+\n+end Inline8_Pkg2;"}, {"sha": "2c6f1b0b22251edf7f4e7351b88c4e2f50e89571", "filename": "gcc/testsuite/gnat.dg/inline8_pkg2.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline8_pkg2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline8_pkg2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline8_pkg2.ads?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,7 @@\n+package Inline8_Pkg2 is\n+\n+  generic\n+    D : Integer;\n+  function Calc (A : Integer) return Integer;\n+\n+end Inline8_Pkg2;"}, {"sha": "d64e134acf3fa2cd91f393b2cdb04edd4856c778", "filename": "gcc/testsuite/gnat.dg/inline9.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline9.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,11 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O -gnatn -Winline\" }\n+-- { dg-warning \"not marked Inline\" \"\" { target *-*-* } 0 }\n+-- { dg-warning \"cannot be inlined\" \"\" { target *-*-* } 0 }\n+\n+with Inline9_Pkg; use Inline9_Pkg;\n+\n+procedure Inline9 is\n+begin\n+  Test (0);\n+end;"}, {"sha": "b1eb5c07bf6bb4b84caefa999ebc9eeebc96a00f", "filename": "gcc/testsuite/gnat.dg/inline9_pkg.adb", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline9_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline9_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline9_pkg.adb?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,20 @@\n+package body Inline9_Pkg is\n+\n+  procedure Test (I : Integer) is\n+\n+    function F (J : Integer) return Integer is\n+    begin\n+      return I - J;\n+    end;\n+\n+    type FPT is access function (I : Integer) return Integer;\n+\n+    P : FPT := F'Access;\n+\n+  begin\n+    if I /= P (I) then\n+      raise Program_Error;\n+    end if;\n+  end;\n+\n+end Inline9_Pkg;"}, {"sha": "3f9f6752f26a74b5ce88c1a47e6b3fdccfb8567b", "filename": "gcc/testsuite/gnat.dg/inline9_pkg.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline9_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87411e95ef8727a9aea86bb86a0773da3a769815/gcc%2Ftestsuite%2Fgnat.dg%2Finline9_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline9_pkg.ads?ref=87411e95ef8727a9aea86bb86a0773da3a769815", "patch": "@@ -0,0 +1,6 @@\n+package Inline9_Pkg is\n+\n+  procedure Test (I : Integer);\n+  pragma Inline (Test);\n+\n+end Inline9_Pkg;"}]}