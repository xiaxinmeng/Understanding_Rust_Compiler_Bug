{"sha": "621dfb1e584367d1d62c52e82cf4351a7ae174d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIxZGZiMWU1ODQzNjdkMWQ2MmM1MmU4MmNmNDM1MWE3YWUxNzRkMg==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-05-31T17:32:42Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-05-31T17:32:42Z"}, "message": "re PR target/51345 ([avr] Devices with 8-bit SP need their own multilib(s))\n\n\tPR target/51345\n\t* config/avr/avr.opt (-msp8): Document it.\n\t* doc/invoke.texi (AVR Options): Ditto.  And document related\n\tbuilt-in macros.\n\nFrom-SVN: r188070", "tree": {"sha": "5bfb672adf0f5a551df02560b1704ef404c01152", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bfb672adf0f5a551df02560b1704ef404c01152"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/621dfb1e584367d1d62c52e82cf4351a7ae174d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/621dfb1e584367d1d62c52e82cf4351a7ae174d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/621dfb1e584367d1d62c52e82cf4351a7ae174d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/621dfb1e584367d1d62c52e82cf4351a7ae174d2/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdd5dc28aa04c3bc6b10fe6bdd01ddbd59e689c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd5dc28aa04c3bc6b10fe6bdd01ddbd59e689c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdd5dc28aa04c3bc6b10fe6bdd01ddbd59e689c7"}], "stats": {"total": 54, "additions": 48, "deletions": 6}, "files": [{"sha": "474f7a7febb1c7680e150c5faf14bb80e59bf0d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/621dfb1e584367d1d62c52e82cf4351a7ae174d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/621dfb1e584367d1d62c52e82cf4351a7ae174d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=621dfb1e584367d1d62c52e82cf4351a7ae174d2", "patch": "@@ -1,3 +1,10 @@\n+2012-05-31  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/51345\n+\t* config/avr/avr.opt (-msp8): Document it.\n+\t* doc/invoke.texi (AVR Options): Ditto.  And document related\n+\tbuilt-in macros.\n+\n 2012-05-31   Diego Novillo  <dnovillo@google.com>\n \n        * configure.ac (CXX_FOR_BUILD): Define and substitute."}, {"sha": "10769e80e4c0eaa3402c5e2409441db1172c62e6", "filename": "gcc/config/avr/avr.opt", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/621dfb1e584367d1d62c52e82cf4351a7ae174d2/gcc%2Fconfig%2Favr%2Favr.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/621dfb1e584367d1d62c52e82cf4351a7ae174d2/gcc%2Fconfig%2Favr%2Favr.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.opt?ref=621dfb1e584367d1d62c52e82cf4351a7ae174d2", "patch": "@@ -76,4 +76,5 @@ When accessing RAM, use X as imposed by the hardware, i.e. just use pre-decremen\n \n ;; For rationale behind -msp8 see explanation in avr.h.\n msp8\n-Target Report RejectNegative Undocumented Var(avr_sp8) Init(0)\n+Target Report RejectNegative Var(avr_sp8) Init(0)\n+The device has no SPH special function register. This option will be overridden by the compiler driver with the correct setting if presence/absence of SPH can be deduced from -mmcu=MCU."}, {"sha": "3ad07f35eda941292ae5b78375bf6b79e8b1e114", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 39, "deletions": 5, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/621dfb1e584367d1d62c52e82cf4351a7ae174d2/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/621dfb1e584367d1d62c52e82cf4351a7ae174d2/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=621dfb1e584367d1d62c52e82cf4351a7ae174d2", "patch": "@@ -11094,13 +11094,31 @@ known before code is located. Therefore, the assembler code generated by the\n compiler is the same, but the instructions in the executable may\n differ from instructions in the assembler code.\n \n+Relaxing must be turned on if linker stubs are needed, see the\n+section on @code{EIND} and linker stubs below.\n+\n @item -mshort-calls\n @opindex mshort-calls\n Use @code{RCALL}/@code{RJMP} instructions even on devices with\n 16@tie{}KiB or more of program memory, i.e.@: on devices that\n have the @code{CALL} and @code{JMP} instructions.\n See also the @code{-mrelax} command line option.\n \n+@item -msp8\n+@opindex msp8\n+Treat the stack pointer register as an 8-bit register,\n+i.e.@: assume the high byte of the stack pointer is zero.\n+In general, you don't need to set this option by hand.\n+\n+This option is used internally by the compiler to select and\n+build multilibs for architectures @code{avr2} and @code{avr25}.\n+These architectures mix devices with and without @code{SPH}.\n+For any setting other than @code{-mmcu=avr2} or @code{-mmcu=avr25}\n+the compiler driver will add or remove this option from the compiler\n+proper's command line, because the compiler then knows if the device\n+or architecture has an 8-bit stack pointer and thus no @code{SPH}\n+register or not.\n+\n @item -mstrict-X\n @opindex mstrict-X\n Use address register @code{X} in a way proposed by the hardware.  This means\n@@ -11162,6 +11180,13 @@ generates @emph{stubs}. Stubs are jump pads sometimes also called\n @emph{trampolines}. Thus, the indirect call/jump jumps to such a stub.\n The stub contains a direct jump to the desired address.\n \n+@item\n+Linker relaxation must be turned on so that the linker will generate\n+the stubs correctly an all situaltion. See the compiler option\n+@code{-mrelax} and the linler option @code{--relax}.\n+There are corner cases where the linker is supposed to generate stubs\n+but aborts without relaxation and without a helpful error message.\n+\n @item\n The default linker script is arranged for code with @code{EIND = 0}.\n If code is supposed to work for a setup with @code{EIND != 0}, a custom\n@@ -11189,8 +11214,8 @@ static void\n __attribute__((section(\".init3\"),naked,used,no_instrument_function))\n init3_set_eind (void)\n @{\n-    __asm volatile (\"ldi r24,pm_hh8(__trampolines_start)\\n\\t\"\n-                    \"out %i0,r24\" :: \"n\" (&EIND) : \"r24\",\"memory\");\n+  __asm volatile (\"ldi r24,pm_hh8(__trampolines_start)\\n\\t\"\n+                  \"out %i0,r24\" :: \"n\" (&EIND) : \"r24\",\"memory\");\n @}\n @end example\n \n@@ -11332,8 +11357,8 @@ The device has the @code{MOVW} instruction to perform 16-bit\n register-register moves.\n \n @item __AVR_HAVE_LPMX__\n-The device has the @code{LPM R@var{n},Z} and @code{LPM\n-R@var{n},Z+} instructions.\n+The device has the @code{LPM R@var{n},Z} and\n+@code{LPM R@var{n},Z+} instructions.\n \n @item __AVR_HAVE_MUL__\n The device has a hardware multiplier. \n@@ -11356,9 +11381,18 @@ with up to 128@tie{}KiB of program memory.\n \n @item __AVR_HAVE_8BIT_SP__\n @item __AVR_HAVE_16BIT_SP__\n-The stack pointer (SP) is respectively 8 or 16 bits wide.\n+The stack pointer (SP) register is treated as 8-bit respectively\n+16-bit register by the compiler.\n The definition of these macros is affected by @code{-mtiny-stack}.\n \n+@item __AVR_HAVE_SPH__\n+@item __AVR_SP8__\n+The device has the SPH (high part of stack pointer) special function\n+register or has an 8-bit stack pointer, respectively.\n+The definition of these macros is affected by @code{-mmcu=} and\n+in the cases of @code{-mmcu=avr2} and @code{-mmcu=avr25} also\n+by @code{-msp8}.\n+\n @item __AVR_HAVE_RAMPD__\n @item __AVR_HAVE_RAMPX__\n @item __AVR_HAVE_RAMPY__"}]}