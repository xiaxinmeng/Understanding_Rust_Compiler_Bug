{"sha": "0b73773ce6d43ab6557a9ae8b85913a78f98099b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI3Mzc3M2NlNmQ0M2FiNjU1N2E5YWU4Yjg1OTEzYTc4Zjk4MDk5Yg==", "commit": {"author": {"name": "Niklas Hallqvist", "email": "niklas@gnu.org", "date": "1993-01-30T06:06:09Z"}, "committer": {"name": "Niklas Hallqvist", "email": "niklas@gnu.org", "date": "1993-01-30T06:06:09Z"}, "message": "c-common.c (c_build_type_variant): Moved here from c-decl.c.\n\n\t* c-common.c (c_build_type_variant): Moved here from c-decl.c.\n\tRedirected the TYPE_MAIN_VARIANT to the \"real\" main variant.\n\tBuild the possibly new array type on the permanent obstack if it\n        the original type was permanent.\n\t(permanent_obstack): Added extern declaration.\n\nFrom-SVN: r3388", "tree": {"sha": "633b7489f2b595bb8db561715f9ed783bcb63c14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/633b7489f2b595bb8db561715f9ed783bcb63c14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b73773ce6d43ab6557a9ae8b85913a78f98099b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b73773ce6d43ab6557a9ae8b85913a78f98099b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b73773ce6d43ab6557a9ae8b85913a78f98099b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b73773ce6d43ab6557a9ae8b85913a78f98099b/comments", "author": null, "committer": null, "parents": [{"sha": "42f769c15a1ffce2b7069bbaa8278f9227ac0cce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42f769c15a1ffce2b7069bbaa8278f9227ac0cce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42f769c15a1ffce2b7069bbaa8278f9227ac0cce"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "74168cbf2756b0687df7e98e4c66605bbc6018e1", "filename": "gcc/c-common.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b73773ce6d43ab6557a9ae8b85913a78f98099b/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b73773ce6d43ab6557a9ae8b85913a78f98099b/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=0b73773ce6d43ab6557a9ae8b85913a78f98099b", "patch": "@@ -24,6 +24,8 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"flags.h\"\n #include <stdio.h>\n \n+extern struct obstack permanent_obstack;\n+\n /* Make bindings for __FUNCTION__ and __PRETTY_FUNCTION__.  */\n \n void\n@@ -1023,3 +1025,28 @@ get_directive_line (finput)\n       char_escaped = (c == '\\\\' && ! char_escaped);\n     }\n }\n+\f\n+/* Make a variant type in the proper way for C/C++, propagating qualifiers\n+   down to the element type of an array.  */\n+\n+tree\n+c_build_type_variant (type, constp, volatilep)\n+     tree type;\n+     int constp, volatilep;\n+{\n+  if (TREE_CODE (type) == ARRAY_TYPE)\n+    {\n+      tree real_main_variant = TYPE_MAIN_VARIANT (type);\n+      int permanent = TREE_PERMANENT (type);\n+\n+      if (permanent)\n+\tpush_obstacks (&permanent_obstack, &permanent_obstack);\n+      type = build_array_type (c_build_type_variant (TREE_TYPE (type),\n+\t\t\t\t\t\t     constp, volatilep),\n+\t\t\t       TYPE_DOMAIN (type));\n+      TYPE_MAIN_VARIANT (type) = real_main_variant;\n+      if (permanent)\n+\tpop_obstacks ();\n+    }\n+  return build_type_variant (type, constp, volatilep);\n+}"}]}