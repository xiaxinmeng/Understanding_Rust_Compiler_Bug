{"sha": "fabe470b2441a4a760a5f491395631e53821b765", "node_id": "C_kwDOANBUbNoAKGZhYmU0NzBiMjQ0MWE0YTc2MGE1ZjQ5MTM5NTYzMWU1MzgyMWI3NjU", "commit": {"author": {"name": "Haochen Jiang", "email": "haochen.jiang@intel.com", "date": "2022-11-04T01:21:03Z"}, "committer": {"name": "Haochen Jiang", "email": "haochen.jiang@intel.com", "date": "2022-11-04T01:36:19Z"}, "message": "Initial Sierra Forest Support\n\ngcc/ChangeLog:\n\n\t* common/config/i386/cpuinfo.h (get_intel_cpu):\n\tAdd Sierra Forest.\n\t* common/config/i386/i386-common.cc\n\t(processor_names): Add Sierra Forest.\n\t(processor_alias_table): Ditto.\n\t* common/config/i386/i386-cpuinfo.h\n\t(enum processor_types): Add INTEL_SIERRAFOREST.\n\t* config.gcc: Add -march=sierraforest.\n\t* config/i386/driver-i386.cc (host_detect_local_cpu):\n\tHandle Sierra Forest.\n\t* config/i386/i386-c.cc (ix86_target_macros_internal):\n\tDitto.\n\t* config/i386/i386-options.cc (m_SIERRAFOREST): New define.\n\t(processor_cost_table): Add sierra forest.\n\t* config/i386/i386.h (enum processor_type):\n\tAdd PROCESSOR_SIERRA_FOREST.\n\t(PTA_SIERRAFOREST): Ditto.\n\t* doc/extend.texi: Add sierra forest.\n\t* doc/invoke.texi: Ditto.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.target/i386/mv16.C: Add sierra forest.\n\t* gcc.target/i386/funcspec-56.inc: Handle new march.", "tree": {"sha": "b025639d292a186e90c33c2d54001c6b5cadfc2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b025639d292a186e90c33c2d54001c6b5cadfc2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fabe470b2441a4a760a5f491395631e53821b765", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabe470b2441a4a760a5f491395631e53821b765", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fabe470b2441a4a760a5f491395631e53821b765", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabe470b2441a4a760a5f491395631e53821b765/comments", "author": {"login": "jianghc724", "id": 10798680, "node_id": "MDQ6VXNlcjEwNzk4Njgw", "avatar_url": "https://avatars.githubusercontent.com/u/10798680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jianghc724", "html_url": "https://github.com/jianghc724", "followers_url": "https://api.github.com/users/jianghc724/followers", "following_url": "https://api.github.com/users/jianghc724/following{/other_user}", "gists_url": "https://api.github.com/users/jianghc724/gists{/gist_id}", "starred_url": "https://api.github.com/users/jianghc724/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jianghc724/subscriptions", "organizations_url": "https://api.github.com/users/jianghc724/orgs", "repos_url": "https://api.github.com/users/jianghc724/repos", "events_url": "https://api.github.com/users/jianghc724/events{/privacy}", "received_events_url": "https://api.github.com/users/jianghc724/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jianghc724", "id": 10798680, "node_id": "MDQ6VXNlcjEwNzk4Njgw", "avatar_url": "https://avatars.githubusercontent.com/u/10798680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jianghc724", "html_url": "https://github.com/jianghc724", "followers_url": "https://api.github.com/users/jianghc724/followers", "following_url": "https://api.github.com/users/jianghc724/following{/other_user}", "gists_url": "https://api.github.com/users/jianghc724/gists{/gist_id}", "starred_url": "https://api.github.com/users/jianghc724/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jianghc724/subscriptions", "organizations_url": "https://api.github.com/users/jianghc724/orgs", "repos_url": "https://api.github.com/users/jianghc724/repos", "events_url": "https://api.github.com/users/jianghc724/events{/privacy}", "received_events_url": "https://api.github.com/users/jianghc724/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "152834feffa233ade3fc9c9aa6237c9a447ef62c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/152834feffa233ade3fc9c9aa6237c9a447ef62c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/152834feffa233ade3fc9c9aa6237c9a447ef62c"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "65e59059e43a4cc1061bfd2321b78c7e9489487d", "filename": "gcc/common/config/i386/cpuinfo.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h?ref=fabe470b2441a4a760a5f491395631e53821b765", "patch": "@@ -558,6 +558,12 @@ get_intel_cpu (struct __processor_model *cpu_model,\n       cpu_model->__cpu_type = INTEL_COREI7;\n       cpu_model->__cpu_subtype = INTEL_COREI7_SAPPHIRERAPIDS;\n       break;\n+    case 0xaf:\n+      /* Sierra Forest.  */\n+      cpu = \"sierraforest\";\n+      CHECK___builtin_cpu_is (\"sierraforest\");\n+      cpu_model->__cpu_type = INTEL_SIERRAFOREST;\n+      break;\n     case 0x17:\n     case 0x1d:\n       /* Penryn.  */"}, {"sha": "c68d44cc5ecf638739d6a6fb6778dd3ba6ca9d4a", "filename": "gcc/common/config/i386/i386-common.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.cc?ref=fabe470b2441a4a760a5f491395631e53821b765", "patch": "@@ -1874,6 +1874,7 @@ const char *const processor_names[] =\n   \"goldmont\",\n   \"goldmont-plus\",\n   \"tremont\",\n+  \"sierraforest\",\n   \"knl\",\n   \"knm\",\n   \"skylake\",\n@@ -2020,6 +2021,8 @@ const pta processor_alias_table[] =\n     M_CPU_TYPE (INTEL_GOLDMONT_PLUS), P_PROC_SSE4_2},\n   {\"tremont\", PROCESSOR_TREMONT, CPU_HASWELL, PTA_TREMONT,\n     M_CPU_TYPE (INTEL_TREMONT), P_PROC_SSE4_2},\n+  {\"sierraforest\", PROCESSOR_SIERRAFOREST, CPU_HASWELL, PTA_SIERRAFOREST,\n+    M_CPU_SUBTYPE (INTEL_SIERRAFOREST), P_PROC_AVX2},\n   {\"knl\", PROCESSOR_KNL, CPU_SLM, PTA_KNL,\n     M_CPU_TYPE (INTEL_KNL), P_PROC_AVX512F},\n   {\"knm\", PROCESSOR_KNM, CPU_SLM, PTA_KNM,"}, {"sha": "cadb60aa220547e8cc3a61514bea7629a7b3ebf1", "filename": "gcc/common/config/i386/i386-cpuinfo.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-cpuinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-cpuinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-cpuinfo.h?ref=fabe470b2441a4a760a5f491395631e53821b765", "patch": "@@ -60,6 +60,7 @@ enum processor_types\n   INTEL_TREMONT,\n   AMDFAM19H,\n   ZHAOXIN_FAM7H,\n+  INTEL_SIERRAFOREST,\n   CPU_TYPE_MAX,\n   BUILTIN_CPU_TYPE_MAX = CPU_TYPE_MAX\n };"}, {"sha": "64436a049cd35b246960412b18573b1c874f01dd", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=fabe470b2441a4a760a5f491395631e53821b765", "patch": "@@ -667,7 +667,8 @@ slm nehalem westmere sandybridge ivybridge haswell broadwell bonnell \\\n silvermont knl knm skylake-avx512 cannonlake icelake-client icelake-server \\\n skylake goldmont goldmont-plus tremont cascadelake tigerlake cooperlake \\\n sapphirerapids alderlake rocketlake eden-x2 nano nano-1000 nano-2000 nano-3000 \\\n-nano-x2 eden-x4 nano-x4 lujiazui x86-64 x86-64-v2 x86-64-v3 x86-64-v4 native\"\n+nano-x2 eden-x4 nano-x4 lujiazui x86-64 x86-64-v2 x86-64-v3 x86-64-v4 \\\n+sierraforest native\"\n \n # Additional x86 processors supported by --with-cpu=.  Each processor\n # MUST be separated by exactly one space."}, {"sha": "a265b1c39f9ddb54ac2697f798c76c4e969130ea", "filename": "gcc/config/i386/driver-i386.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fconfig%2Fi386%2Fdriver-i386.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fconfig%2Fi386%2Fdriver-i386.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.cc?ref=fabe470b2441a4a760a5f491395631e53821b765", "patch": "@@ -591,8 +591,11 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \t      /* This is unknown family 0x6 CPU.  */\n \t      if (has_feature (FEATURE_AVX))\n \t\t{\n+\t\t  /* Assume Sierra Forest.  */\n+\t\t  if (has_feature (FEATURE_AVXVNNIINT8))\n+\t\t    cpu = \"sierraforest\";\n \t\t  /* Assume Tiger Lake */\n-\t\t  if (has_feature (FEATURE_AVX512VP2INTERSECT))\n+\t\t  else if (has_feature (FEATURE_AVX512VP2INTERSECT))\n \t\t    cpu = \"tigerlake\";\n \t\t  /* Assume Sapphire Rapids.  */\n \t\t  else if (has_feature (FEATURE_TSXLDTRK))"}, {"sha": "f9813c972442bb7e0c84fd20a465804ed0e03955", "filename": "gcc/config/i386/i386-c.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fconfig%2Fi386%2Fi386-c.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fconfig%2Fi386%2Fi386-c.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.cc?ref=fabe470b2441a4a760a5f491395631e53821b765", "patch": "@@ -202,6 +202,10 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n       def_or_undef (parse_in, \"__tremont\");\n       def_or_undef (parse_in, \"__tremont__\");\n       break;\n+    case PROCESSOR_SIERRAFOREST:\n+      def_or_undef (parse_in, \"__sierraforest\");\n+      def_or_undef (parse_in, \"__sierraforest__\");\n+      break;\n     case PROCESSOR_KNL:\n       def_or_undef (parse_in, \"__knl\");\n       def_or_undef (parse_in, \"__knl__\");\n@@ -384,6 +388,9 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     case PROCESSOR_TREMONT:\n       def_or_undef (parse_in, \"__tune_tremont__\");\n       break;\n+    case PROCESSOR_SIERRAFOREST:\n+      def_or_undef (parse_in, \"__tune_sierraforest__\");\n+      break;\n     case PROCESSOR_KNL:\n       def_or_undef (parse_in, \"__tune_knl__\");\n       break;"}, {"sha": "a4f880a67c57334acf587b83a33a74faebb9be5b", "filename": "gcc/config/i386/i386-options.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fconfig%2Fi386%2Fi386-options.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fconfig%2Fi386%2Fi386-options.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-options.cc?ref=fabe470b2441a4a760a5f491395631e53821b765", "patch": "@@ -136,6 +136,7 @@ along with GCC; see the file COPYING3.  If not see\n #define m_GOLDMONT (HOST_WIDE_INT_1U<<PROCESSOR_GOLDMONT)\n #define m_GOLDMONT_PLUS (HOST_WIDE_INT_1U<<PROCESSOR_GOLDMONT_PLUS)\n #define m_TREMONT (HOST_WIDE_INT_1U<<PROCESSOR_TREMONT)\n+#define m_SIERRAFOREST (HOST_WIDE_INT_1U<<PROCESSOR_SIERRAFOREST)\n #define m_INTEL (HOST_WIDE_INT_1U<<PROCESSOR_INTEL)\n \n #define m_LUJIAZUI (HOST_WIDE_INT_1U<<PROCESSOR_LUJIAZUI)\n@@ -748,6 +749,7 @@ static const struct processor_costs *processor_cost_table[] =\n   &slm_cost,\n   &slm_cost,\n   &tremont_cost,\n+  &alderlake_cost,\n   &slm_cost,\n   &slm_cost,\n   &skylake_cost,"}, {"sha": "bf676e401abbbafb5b31e83b3781a445b3048ebe", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=fabe470b2441a4a760a5f491395631e53821b765", "patch": "@@ -2225,6 +2225,7 @@ enum processor_type\n   PROCESSOR_GOLDMONT,\n   PROCESSOR_GOLDMONT_PLUS,\n   PROCESSOR_TREMONT,\n+  PROCESSOR_SIERRAFOREST,\n   PROCESSOR_KNL,\n   PROCESSOR_KNM,\n   PROCESSOR_SKYLAKE,\n@@ -2345,6 +2346,8 @@ constexpr wide_int_bitmask PTA_ALDERLAKE = PTA_TREMONT | PTA_ADX | PTA_AVX\n   | PTA_AVX2 | PTA_BMI | PTA_BMI2 | PTA_F16C | PTA_FMA | PTA_LZCNT\n   | PTA_PCONFIG | PTA_PKU | PTA_VAES | PTA_VPCLMULQDQ | PTA_SERIALIZE\n   | PTA_HRESET | PTA_KL | PTA_WIDEKL | PTA_AVXVNNI;\n+constexpr wide_int_bitmask PTA_SIERRAFOREST = PTA_ALDERLAKE | PTA_AVXIFMA\n+  | PTA_AVXVNNIINT8 | PTA_AVXNECONVERT | PTA_CMPCCXADD;\n constexpr wide_int_bitmask PTA_KNM = PTA_KNL | PTA_AVX5124VNNIW\n   | PTA_AVX5124FMAPS | PTA_AVX512VPOPCNTDQ;\n constexpr wide_int_bitmask PTA_ZNVER1 = PTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2"}, {"sha": "c381a9292a4cde6d3f2304a8682df6a2ad3f9b70", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=fabe470b2441a4a760a5f491395631e53821b765", "patch": "@@ -21965,6 +21965,9 @@ Intel Atom Goldmont Plus CPU.\n @item tremont\n Intel Atom Tremont CPU.\n \n+@item sierraforest\n+Intel Atom Sierra Forest CPU.\n+\n @item knl\n Intel Knights Landing CPU.\n "}, {"sha": "f7068826a281be11c9a6dd9bd1855a07d3628d28", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=fabe470b2441a4a760a5f491395631e53821b765", "patch": "@@ -32043,6 +32043,14 @@ RDSEED, XSAVE, XSAVEC, XSAVES, XSAVEOPT, CLFLUSHOPT, FSGSBASE, PTWRITE, RDPID,\n SGX, CLWB, GFNI-SSE, MOVDIRI, MOVDIR64B, CLDEMOTE and WAITPKG instruction set\n support.\n \n+@item sierraforest\n+Intel Sierra Forest CPU with 64-bit extensions, MOVBE, MMX, SSE, SSE2, SSE3,\n+SSSE3, SSE4.1, SSE4.2, POPCNT, AES, PREFETCHW, PCLMUL, RDRND, XSAVE, XSAVEC,\n+XSAVES, XSAVEOPT, FSGSBASE, PTWRITE, RDPID, SGX, GFNI-SSE, CLWB, MOVDIRI,\n+MOVDIR64B, CLDEMOTE, WAITPKG, ADCX, AVX, AVX2, BMI, BMI2, F16C, FMA, LZCNT,\n+PCONFIG, PKU, VAES, VPCLMULQDQ, SERIALIZE, HRESET, KL, WIDEKL, AVX-VNNI,\n+AVXIFMA, AVXVNNIINT8, AVXNECONVERT and CMPCCXADD instruction set support.\n+\n @item knl\n Intel Knight's Landing CPU with 64-bit extensions, MOVBE, MMX, SSE, SSE2, SSE3,\n SSSE3, SSE4.1, SSE4.2, POPCNT, CX16, SAHF, FXSR, AVX, XSAVE, PCLMUL, FSGSBASE,"}, {"sha": "11530817d1c0b38a703a9d756ffe05b8cf496cc6", "filename": "gcc/testsuite/g++.target/i386/mv16.C", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fmv16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fmv16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fmv16.C?ref=fabe470b2441a4a760a5f491395631e53821b765", "patch": "@@ -92,6 +92,10 @@ int __attribute__ ((target(\"arch=rocketlake\"))) foo () {\n   return 24;\n }\n \n+int __attribute__ ((target(\"arch=sierraforest\"))) foo () {\n+  return 25;\n+}\n+\n int main ()\n {\n   int val = foo ();\n@@ -130,6 +134,8 @@ int main ()\n     assert (val == 23);\n   else if (__builtin_cpu_is (\"rocketlake\"))\n     assert (val == 24);\n+  else if (__builtin_cpu_is (\"sierraforest\"))\n+    assert (val == 25);\n   else\n     assert (val == 0);\n "}, {"sha": "99ef1e813978bf031299cd4fb50460aa8e1395db", "filename": "gcc/testsuite/gcc.target/i386/funcspec-56.inc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabe470b2441a4a760a5f491395631e53821b765/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc?ref=fabe470b2441a4a760a5f491395631e53821b765", "patch": "@@ -179,6 +179,7 @@ extern void test_arch_silvermont (void)\t\t__attribute__((__target__(\"arch=silverm\n extern void test_arch_goldmont (void)\t\t__attribute__((__target__(\"arch=goldmont\")));\n extern void test_arch_goldmont_plus (void)\t__attribute__((__target__(\"arch=goldmont-plus\")));\n extern void test_arch_tremont (void)\t\t__attribute__((__target__(\"arch=tremont\")));\n+extern void test_arch_sierraforest (void)       __attribute__((__target__(\"arch=sierraforest\")));\n extern void test_arch_knl (void)\t\t__attribute__((__target__(\"arch=knl\")));\n extern void test_arch_knm (void)\t\t__attribute__((__target__(\"arch=knm\")));\n extern void test_arch_skylake (void)\t\t__attribute__((__target__(\"arch=skylake\")));"}]}