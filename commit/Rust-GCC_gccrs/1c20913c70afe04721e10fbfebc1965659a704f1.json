{"sha": "1c20913c70afe04721e10fbfebc1965659a704f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMyMDkxM2M3MGFmZTA0NzIxZTEwZmJmZWJjMTk2NTY1OWE3MDRmMQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2003-06-06T16:49:47Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2003-06-06T16:49:47Z"}, "message": "sh.h (FUNCTION_ARG_1): Consistently use NEW_MODE for the mode of the generated register.\n\n\t* sh.h (FUNCTION_ARG_1): Consistently use NEW_MODE for the mode\n\tof the generated register.\n\nFrom-SVN: r67555", "tree": {"sha": "efa71d803561f32bfaf3f38ae3269f8a17726285", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efa71d803561f32bfaf3f38ae3269f8a17726285"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c20913c70afe04721e10fbfebc1965659a704f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c20913c70afe04721e10fbfebc1965659a704f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c20913c70afe04721e10fbfebc1965659a704f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c20913c70afe04721e10fbfebc1965659a704f1/comments", "author": null, "committer": null, "parents": [{"sha": "09c36669b6d5239aa25d7c9ca4f8270738b23ad8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09c36669b6d5239aa25d7c9ca4f8270738b23ad8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09c36669b6d5239aa25d7c9ca4f8270738b23ad8"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "a41970b44c61723bbc004f1c53ea4d0b9a43bb2b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c20913c70afe04721e10fbfebc1965659a704f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c20913c70afe04721e10fbfebc1965659a704f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c20913c70afe04721e10fbfebc1965659a704f1", "patch": "@@ -1,3 +1,8 @@\n+2003-06-06  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* sh.h (FUNCTION_ARG_1): Consistently use NEW_MODE for the mode\n+\tof the generated register.\n+\n 2003-06-06  Daniel Jacobowitz  <drow@mvista.com>\n \n \t* config.gcc: Add a missing sparc64 case."}, {"sha": "d135224b09a0cd0af8ca7bbab04ab8334fdf942a", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c20913c70afe04721e10fbfebc1965659a704f1/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c20913c70afe04721e10fbfebc1965659a704f1/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=1c20913c70afe04721e10fbfebc1965659a704f1", "patch": "@@ -1942,21 +1942,21 @@ do {\t\t\t\t\t\t\t\\\n       /* The following test assumes unnamed arguments are promoted to\t\\\n \t DFmode.  */\t\t\t\t\t\t\t\\\n       : (MODE) == SFmode && (CUM).free_single_fp_reg\t\t\t\\\n-      ? SH5_PROTOTYPED_FLOAT_ARG ((CUM), (MODE), (CUM).free_single_fp_reg) \\\n+      ? SH5_PROTOTYPED_FLOAT_ARG ((CUM), (NEW_MODE), (CUM).free_single_fp_reg) \\\n       : (GET_SH_ARG_CLASS (MODE) == SH_ARG_FLOAT\t\t\t\\\n          && ((NAMED) || ! (CUM).prototype_p)\t\t\t\t\\\n          && (CUM).arg_count[(int) SH_ARG_FLOAT] < NPARM_REGS (SFmode))\t\\\n       ? ((! (CUM).prototype_p && TARGET_SHMEDIA)\t\t\t\\\n-\t ? SH5_PROTOTYPELESS_FLOAT_ARG ((CUM), (MODE))\t\t\t\\\n-\t : SH5_PROTOTYPED_FLOAT_ARG ((CUM), (MODE),\t\t\t\\\n+\t ? SH5_PROTOTYPELESS_FLOAT_ARG ((CUM), (NEW_MODE))\t\t\\\n+\t : SH5_PROTOTYPED_FLOAT_ARG ((CUM), (NEW_MODE),\t\t\t\\\n \t\t\t\t     FIRST_FP_PARM_REG\t\t\t\\\n \t\t\t\t     + (CUM).arg_count[(int) SH_ARG_FLOAT])) \\\n       : ((CUM).arg_count[(int) SH_ARG_INT] < NPARM_REGS (SImode)\t\\\n \t && (! TARGET_SHCOMPACT\t\t\t\t\t\t\\\n \t     || (! SHCOMPACT_FORCE_ON_STACK ((MODE), (TYPE))\t\t\\\n \t         && ! SH5_WOULD_BE_PARTIAL_NREGS ((CUM), (MODE),\t\\\n \t\t\t\t\t\t  (TYPE), (NAMED)))))\t\\\n-      ? gen_rtx_REG ((MODE), (FIRST_PARM_REG\t\t\t\t\\\n+      ? gen_rtx_REG ((NEW_MODE), (FIRST_PARM_REG\t\t\t\\\n  \t\t\t      + (CUM).arg_count[(int) SH_ARG_INT]))\t\\\n       : 0)\t\t\t\t\t\t\t\t\\\n    : 0)"}]}