{"sha": "a2dc5812ff7b8d195399c4f9513dcf0376eba4d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJkYzU4MTJmZjdiOGQxOTUzOTljNGY5NTEzZGNmMDM3NmViYTRkNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-07T16:56:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-07T16:56:30Z"}, "message": "[multiple changes]\n\n2009-04-07  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch4.adb (Expand_Concatenate): Add missing conversion to index\n\ttype for the case of concatenating a constrained array indexed by an\n\tenumeration type.\n\n2009-04-07  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Check_Conformance): when checking conformance of an\n\toperation that overrides an abstract operation inherited from an\n\tinterface, return False if only one of the controlling formals is an\n\taccess parameter.\n\n2009-04-07  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (Analyze_Object_Renaming): additional error messages\n\tmandated by AI05-105.\n\n2009-04-07  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Get_Mains): Warn if a main is an empty string\n\n2009-04-07  Thomas Quinot  <quinot@adacore.com>\n\n\t* usage.adb: Minor fix in usage message.\n\n\t* sem_ch10.adb (Remove_Homonyms): Fix subtype of formal in body to\n\tmatch declaration; the correct subtype is Node_Id, not Entity_Id,\n\tbecause the expected node kind is an identifier, not a defining\n\tidentifier.\n\n\t* switch-c.adb: Minor reformatting.\n\n\t* uintp.adb: Minor reformatting.\n\n2009-04-07  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch13.adb: Minor reformatting\n\nFrom-SVN: r145696", "tree": {"sha": "bf873f637952d8d54457128fc745e447b244ee92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf873f637952d8d54457128fc745e447b244ee92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/comments", "author": null, "committer": null, "parents": [{"sha": "0ac73189d6da2eccda3b1ffb4bbe89981b4879f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac73189d6da2eccda3b1ffb4bbe89981b4879f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ac73189d6da2eccda3b1ffb4bbe89981b4879f4"}], "stats": {"total": 155, "additions": 117, "deletions": 38}, "files": [{"sha": "ba8fd1feaf444b64acda9837ca1527e0856347a2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a2dc5812ff7b8d195399c4f9513dcf0376eba4d5", "patch": "@@ -1,3 +1,42 @@\n+2009-04-07  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_Concatenate): Add missing conversion to index\n+\ttype for the case of concatenating a constrained array indexed by an\n+\tenumeration type.\n+\n+2009-04-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Check_Conformance): when checking conformance of an\n+\toperation that overrides an abstract operation inherited from an\n+\tinterface, return False if only one of the controlling formals is an\n+\taccess parameter.\n+\n+2009-04-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Analyze_Object_Renaming): additional error messages\n+\tmandated by AI05-105.\n+\n+2009-04-07  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Get_Mains): Warn if a main is an empty string\n+\n+2009-04-07  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* usage.adb: Minor fix in usage message.\n+\n+\t* sem_ch10.adb (Remove_Homonyms): Fix subtype of formal in body to\n+\tmatch declaration; the correct subtype is Node_Id, not Entity_Id,\n+\tbecause the expected node kind is an identifier, not a defining\n+\tidentifier.\n+\n+\t* switch-c.adb: Minor reformatting.\n+\n+\t* uintp.adb: Minor reformatting.\n+\n+2009-04-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch13.adb: Minor reformatting\n+\n 2009-04-07  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_warn.adb (Check_Infinite_Loop_Warning.Test_Ref): Add defence"}, {"sha": "7d903eb6fedff74a1da11db304ef599cd7488664", "filename": "gcc/ada/exp_ch13.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fexp_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fexp_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.adb?ref=a2dc5812ff7b8d195399c4f9513dcf0376eba4d5", "patch": "@@ -103,6 +103,7 @@ package body Exp_Ch13 is\n             declare\n                Decl : constant Node_Id := Declaration_Node (Ent);\n                Typ  : constant Entity_Id := Etype (Ent);\n+\n             begin\n                if Nkind (Decl) = N_Object_Declaration\n                   and then Present (Expression (Decl))"}, {"sha": "771efd49dd2d247b40325d780c33b17a16c4b02d", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 7, "deletions": 18, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=a2dc5812ff7b8d195399c4f9513dcf0376eba4d5", "patch": "@@ -2383,24 +2383,15 @@ package body Exp_Ch4 is\n             Fixed_Length (NN) := Uint_1;\n             Result_May_Be_Null := False;\n \n-            --  Set bounds of operand\n+            --  Set bounds of operand (no need to set high bound since we know\n+            --  for sure that result won't be null, so we won't ever use\n+            --  Opnd_High_Bound).\n \n             Opnd_Low_Bound (NN) :=\n               Make_Attribute_Reference (Loc,\n                 Prefix         => New_Reference_To (Ityp, Loc),\n                 Attribute_Name => Name_First);\n \n-            --  ??? The addition below is dubious, what if Ityp is an enum\n-            --  type, shouldn't this be Ityp'Succ (Ityp'First)?\n-\n-            Opnd_High_Bound (NN) :=\n-              Make_Op_Add (Loc,\n-                Left_Opnd =>\n-                  Make_Attribute_Reference (Loc,\n-                    Prefix         => New_Reference_To (Ityp, Loc),\n-                    Attribute_Name => Name_First),\n-                Right_Opnd => Make_Integer_Literal (Loc, 1));\n-\n             Set := True;\n \n          --  String literal case (can only occur for strings of course)\n@@ -2477,15 +2468,13 @@ package body Exp_Ch4 is\n                         Is_Fixed_Length (NN) := True;\n                         Fixed_Length (NN)    := Len;\n \n-                        --  ??? case where Ityp is an enum type?\n-\n-                        Opnd_Low_Bound (NN) :=\n+                        Opnd_Low_Bound (NN) := To_Ityp (\n                           Make_Integer_Literal (Loc,\n-                            Intval => Expr_Value (Lo));\n+                            Intval => Expr_Value (Lo)));\n \n-                        Opnd_High_Bound (NN) :=\n+                        Opnd_High_Bound (NN) := To_Ityp (\n                           Make_Integer_Literal (Loc,\n-                            Intval => Expr_Value (Hi));\n+                            Intval => Expr_Value (Hi)));\n \n                         Set := True;\n                      end;"}, {"sha": "e4478602f645733ad1f8866862fabcd5078dd1d6", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=a2dc5812ff7b8d195399c4f9513dcf0376eba4d5", "patch": "@@ -6412,6 +6412,8 @@ package body Prj.Nmsc is\n    is\n       Mains : constant Variable_Value :=\n                 Prj.Util.Value_Of (Name_Main, Data.Decl.Attributes, In_Tree);\n+      List  : String_List_Id;\n+      Elem  : String_Element;\n \n    begin\n       Data.Mains := Mains.Values;\n@@ -6432,6 +6434,24 @@ package body Prj.Nmsc is\n            (Project, In_Tree,\n             \"a library project file cannot have Main specified\",\n             Mains.Location);\n+\n+      --  Normal case where Main was specified\n+\n+      else\n+         List := Mains.Values;\n+         while List /= Nil_String loop\n+            Elem := In_Tree.String_Elements.Table (List);\n+\n+            if Length_Of_Name (Elem.Value) = 0 then\n+               Error_Msg\n+                 (Project, In_Tree,\n+                  \"?a main cannot have an empty name\",\n+                  Elem.Location);\n+               exit;\n+            end if;\n+\n+            List := Elem.Next;\n+         end loop;\n       end if;\n    end Get_Mains;\n "}, {"sha": "9e20de16836dc53718ad8e8ab4aaead8fa4feee5", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=a2dc5812ff7b8d195399c4f9513dcf0376eba4d5", "patch": "@@ -3924,11 +3924,12 @@ package body Sem_Ch10 is\n \n             procedure Check_Pragma_Import (P : Node_Id);\n             --  If a pragma import applies to a previous subprogram, the\n-            --  enclosing unit may not need a body. The processing is\n-            --  syntactic and does not require a declaration to be analyzed,\n-            --  The code below also handles pragma import when applied to\n-            --  a subprogram that renames another. In this case the pragma\n-            --  applies to the renamed entity\n+            --  enclosing unit may not need a body. The processing is syntactic\n+            --  and does not require a declaration to be analyzed. The code\n+            --  below also handles pragma Import when applied to a subprogram\n+            --  that renames another. In this case the pragma applies to the\n+            --  renamed entity.\n+            --\n             --  Chains of multiple renames are not handled by the code below.\n             --  It is probably impossible to handle all cases without proper\n             --  name resolution. In such cases the algorithm is conservative\n@@ -3945,20 +3946,19 @@ package body Sem_Ch10 is\n                Imported : Node_Id;\n \n                procedure Remove_Homonyms (E : Node_Id);\n-               --  Make one pass over list of subprograms, Called again if\n+               --  Make one pass over list of subprograms. Called again if\n                --  subprogram is a renaming. E is known to be an identifier.\n \n                ---------------------\n                -- Remove_Homonyms --\n                ---------------------\n \n-               procedure Remove_Homonyms (E : Entity_Id) is\n+               procedure Remove_Homonyms (E : Node_Id) is\n                   R : Entity_Id := Empty;\n-                  --  Name of renamed entity, if any.\n+                  --  Name of renamed entity, if any\n \n                begin\n                   Subp_Id := First_Elmt (Subp_List);\n-\n                   while Present (Subp_Id) loop\n                      if Chars (Node (Subp_Id)) = Chars (E) then\n                         if Nkind (Parent (Parent (Node (Subp_Id))))\n@@ -3983,18 +3983,17 @@ package body Sem_Ch10 is\n                      elsif Nkind (R) = N_Selected_Component then\n                         Remove_Homonyms (Selector_Name (R));\n \n-                     else\n-                        --  renaming of attribute\n+                     --  Renaming of attribute\n \n+                     else\n                         null;\n                      end if;\n                   end if;\n                end Remove_Homonyms;\n \n-               --  Start of processing for Check_Pragma_Import\n+            --  Start of processing for Check_Pragma_Import\n \n             begin\n-\n                --  Find name of entity in Import pragma. We have not analyzed\n                --  the construct, so we must guard against syntax errors.\n \n@@ -4011,6 +4010,8 @@ package body Sem_Ch10 is\n                Remove_Homonyms (Imported);\n             end Check_Pragma_Import;\n \n+         --  Start of processing for Check_Declarations\n+\n          begin\n             --  Search for Elaborate Body pragma\n "}, {"sha": "79d45c974d7c99543af55ff72cf4ee75b547a6fa", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=a2dc5812ff7b8d195399c4f9513dcf0376eba4d5", "patch": "@@ -3466,13 +3466,24 @@ package body Sem_Ch6 is\n \n       Old_Formal := First_Formal (Old_Id);\n       New_Formal := First_Formal (New_Id);\n-\n       while Present (Old_Formal) and then Present (New_Formal) loop\n          if Is_Controlling_Formal (Old_Formal)\n            and then Is_Controlling_Formal (New_Formal)\n            and then Skip_Controlling_Formals\n          then\n-            goto Skip_Controlling_Formal;\n+            --  The controlling formals will have different types when\n+            --  comparing an interface operation with its match, but both\n+            --  or neither must be access parameters.\n+\n+            if Is_Access_Type (Etype (Old_Formal))\n+                 =\n+               Is_Access_Type (Etype (New_Formal))\n+            then\n+               goto Skip_Controlling_Formal;\n+            else\n+               Conformance_Error\n+                 (\"\\access parameter does not match!\", New_Formal);\n+            end if;\n          end if;\n \n          if Ctype = Fully_Conformant then"}, {"sha": "88741a4fa6f46a1a44302d63df8299de90903db3", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=a2dc5812ff7b8d195399c4f9513dcf0376eba4d5", "patch": "@@ -53,6 +53,7 @@ with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch12; use Sem_Ch12;\n with Sem_Disp; use Sem_Disp;\n with Sem_Dist; use Sem_Dist;\n+with Sem_Eval; use Sem_Eval;\n with Sem_Res;  use Sem_Res;\n with Sem_Util; use Sem_Util;\n with Sem_Type; use Sem_Type;\n@@ -778,7 +779,7 @@ package body Sem_Ch8 is\n          if not Is_Overloaded (Nam) then\n             if Ekind (Etype (Nam)) /= Ekind (T) then\n                Error_Msg_N\n-                 (\"Expect anonymous access type is object renaming\", N);\n+                 (\"expect anonymous access type in object renaming\", N);\n             end if;\n          else\n             declare\n@@ -818,6 +819,23 @@ package body Sem_Ch8 is\n          then\n             Error_Msg_N (\"(Ada 2005): the renamed object is not \"\n                          & \"access-to-constant (RM 8.5.1(6))\", N);\n+\n+         elsif not Constant_Present (Access_Definition (N))\n+           and then Is_Access_Constant (Etype (Nam))\n+         then\n+            Error_Msg_N (\"(Ada 2005): the renamed object is not \"\n+                         & \"access-to-variable (RM 8.5.1(6))\", N);\n+         end if;\n+\n+         if Is_Access_Subprogram_Type (Etype (Nam)) then\n+            Check_Subtype_Conformant\n+              (Designated_Type (T), Designated_Type (Etype (Nam)));\n+\n+         elsif not Subtypes_Statically_Match\n+                     (Designated_Type (T), Designated_Type (Etype (Nam)))\n+         then\n+            Error_Msg_N\n+              (\"subtype of renamed object does not statically match\", N);\n          end if;\n       end if;\n "}, {"sha": "ddd4859c2e21f55e0c4fe4ae89063cb0c2a84026", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=a2dc5812ff7b8d195399c4f9513dcf0376eba4d5", "patch": "@@ -278,7 +278,7 @@ package body Switch.C is\n             when 'D' =>\n                Ptr := Ptr + 1;\n \n-               --  Scan option integer line limit value\n+               --  Scan optional integer line limit value\n \n                if Ptr <= Max and then Switch_Chars (Ptr) in '0' .. '9' then\n                   Scan_Nat (Switch_Chars, Max, Ptr, Sprint_Line_Limit, 'D');\n@@ -528,7 +528,7 @@ package body Switch.C is\n                Ptr := Ptr + 1;\n                Print_Generated_Code := True;\n \n-               --  Scan option integer line limit value\n+               --  Scan optional integer line limit value\n \n                if Ptr <= Max and then Switch_Chars (Ptr) in '0' .. '9' then\n                   Scan_Nat (Switch_Chars, Max, Ptr, Sprint_Line_Limit, 'G');"}, {"sha": "1bb0393b9516a4a74dc76d8034228593a6d4260e", "filename": "gcc/ada/uintp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fuintp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fuintp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.adb?ref=a2dc5812ff7b8d195399c4f9513dcf0376eba4d5", "patch": "@@ -131,7 +131,7 @@ package body Uintp is\n    --  This procedure puts the value of UI into the vector in canonical\n    --  multiple precision format. The parameter should be of the correct size\n    --  as determined by a previous call to N_Digits (UI). The first digit of\n-   --  Vec contains the sign, all other digits are always non- negative. Note\n+   --  Vec contains the sign, all other digits are always non-negative. Note\n    --  that the input may be directly represented, and in this case Vec will\n    --  contain the corresponding one or two digit value. The low bound of Vec\n    --  is always 1."}, {"sha": "3d14ce31435ce45e96016fa1207663cb2ce86b74", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dc5812ff7b8d195399c4f9513dcf0376eba4d5/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=a2dc5812ff7b8d195399c4f9513dcf0376eba4d5", "patch": "@@ -157,7 +157,7 @@ begin\n    Write_Switch_Char (\"D\");\n    Write_Line (\"Debug expanded generated code (max line length = 72)\");\n    Write_Switch_Char (\"Dnn\");\n-   Write_Line (\"Debug expanded generated code (max line length = nnn)\");\n+   Write_Line (\"Debug expanded generated code (max line length = nn)\");\n \n    --  Line for -gnatec switch\n "}]}