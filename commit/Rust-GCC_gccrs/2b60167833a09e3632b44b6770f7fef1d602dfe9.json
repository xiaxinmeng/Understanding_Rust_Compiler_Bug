{"sha": "2b60167833a09e3632b44b6770f7fef1d602dfe9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI2MDE2NzgzM2EwOWUzNjMyYjQ0YjY3NzBmN2ZlZjFkNjAyZGZlOQ==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2016-11-15T17:27:39Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2016-11-15T17:27:39Z"}, "message": "- Revert last commit, restore the regenerated files aclocal.m4 and configure\n\nFrom-SVN: r242438", "tree": {"sha": "b06db7d40c35c39dcf63421aa17f9a36a9529793", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b06db7d40c35c39dcf63421aa17f9a36a9529793"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b60167833a09e3632b44b6770f7fef1d602dfe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b60167833a09e3632b44b6770f7fef1d602dfe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b60167833a09e3632b44b6770f7fef1d602dfe9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b60167833a09e3632b44b6770f7fef1d602dfe9/comments", "author": null, "committer": null, "parents": [{"sha": "7b277e8b464b28c76a751fbb811c419d79a3f715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b277e8b464b28c76a751fbb811c419d79a3f715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b277e8b464b28c76a751fbb811c419d79a3f715"}], "stats": {"total": 648, "additions": 625, "deletions": 23}, "files": [{"sha": "bf8a907100f9d2107df899e538e6a47f6fcd3058", "filename": "libiberty/aclocal.m4", "status": "modified", "additions": 175, "deletions": 19, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b60167833a09e3632b44b6770f7fef1d602dfe9/libiberty%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b60167833a09e3632b44b6770f7fef1d602dfe9/libiberty%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Faclocal.m4?ref=2b60167833a09e3632b44b6770f7fef1d602dfe9", "patch": "@@ -1,19 +1,175 @@\n-# generated automatically by aclocal 1.11.6 -*- Autoconf -*-\n-\n-# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-# 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software Foundation,\n-# Inc.\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n-# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n-# PARTICULAR PURPOSE.\n-\n-m4_include([../config/acx.m4])\n-m4_include([../config/no-executables.m4])\n-m4_include([../config/override.m4])\n-m4_include([../config/picflag.m4])\n-m4_include([../config/warnings.m4])\n+sinclude(../config/acx.m4)\n+sinclude(../config/no-executables.m4)\n+sinclude(../config/override.m4)\n+sinclude(../config/picflag.m4)\n+sinclude(../config/warnings.m4)\n+\n+dnl See whether strncmp reads past the end of its string parameters.\n+dnl On some versions of SunOS4 at least, strncmp reads a word at a time\n+dnl but erroneously reads past the end of strings.  This can cause\n+dnl a SEGV in some cases.\n+AC_DEFUN(libiberty_AC_FUNC_STRNCMP,\n+[AC_REQUIRE([AC_FUNC_MMAP])\n+AC_CACHE_CHECK([for working strncmp], ac_cv_func_strncmp_works,\n+[AC_TRY_RUN([\n+/* Test by Jim Wilson and Kaveh Ghazi.\n+   Check whether strncmp reads past the end of its string parameters. */\n+#include <sys/types.h>\n+\n+#ifdef HAVE_FCNTL_H\n+#include <fcntl.h>\n+#endif\n+\n+#ifdef HAVE_SYS_MMAN_H\n+#include <sys/mman.h>\n+#endif\n+\n+#ifndef MAP_ANON\n+#ifdef MAP_ANONYMOUS\n+#define MAP_ANON MAP_ANONYMOUS\n+#else\n+#define MAP_ANON MAP_FILE\n+#endif\n+#endif\n+\n+#ifndef MAP_FILE\n+#define MAP_FILE 0\n+#endif\n+#ifndef O_RDONLY\n+#define O_RDONLY 0\n+#endif\n+\n+#define MAP_LEN 0x10000\n+\n+main ()\n+{\n+#if defined(HAVE_MMAP) || defined(HAVE_MMAP_ANYWHERE)\n+  char *p;\n+  int dev_zero;\n+\n+  dev_zero = open (\"/dev/zero\", O_RDONLY);\n+  if (dev_zero < 0)\n+    exit (1);\n+  \n+  p = (char *) mmap (0, MAP_LEN, PROT_READ|PROT_WRITE,\n+\t\t     MAP_ANON|MAP_PRIVATE, dev_zero, 0);\n+  if (p == (char *)-1)\n+    p = (char *) mmap (0, MAP_LEN, PROT_READ|PROT_WRITE,\n+\t\t       MAP_ANON|MAP_PRIVATE, -1, 0);\n+  if (p == (char *)-1)\n+    exit (2);\n+  else\n+    {\n+      char *string = \"__si_type_info\";\n+      char *q = (char *) p + MAP_LEN - strlen (string) - 2;\n+      char *r = (char *) p + 0xe;\n+\n+      strcpy (q, string);\n+      strcpy (r, string);\n+      strncmp (r, q, 14);\n+    }\n+#endif /* HAVE_MMAP || HAVE_MMAP_ANYWHERE */\n+  exit (0);\n+}\n+], ac_cv_func_strncmp_works=yes, ac_cv_func_strncmp_works=no,\n+  ac_cv_func_strncmp_works=yes)\n+rm -f core core.* *.core])\n+if test $ac_cv_func_strncmp_works = no ; then\n+  AC_LIBOBJ([strncmp])\n+fi\n+])\n+\n+dnl See if errno must be declared even when <errno.h> is included.\n+AC_DEFUN(libiberty_AC_DECLARE_ERRNO,\n+[AC_CACHE_CHECK(whether errno must be declared, libiberty_cv_declare_errno,\n+[AC_TRY_COMPILE(\n+[#include <errno.h>],\n+[int x = errno;],\n+libiberty_cv_declare_errno=no,\n+libiberty_cv_declare_errno=yes)])\n+if test $libiberty_cv_declare_errno = yes\n+then AC_DEFINE(NEED_DECLARATION_ERRNO, 1,\n+  [Define if errno must be declared even when <errno.h> is included.])\n+fi\n+])\n+\n+dnl See whether we need a declaration for a function.\n+AC_DEFUN(libiberty_NEED_DECLARATION,\n+[AC_MSG_CHECKING([whether $1 must be declared])\n+AC_CACHE_VAL(libiberty_cv_decl_needed_$1,\n+[AC_TRY_COMPILE([\n+#include \"confdefs.h\"\n+#include <stdio.h>\n+#ifdef HAVE_STRING_H\n+#include <string.h>\n+#else\n+#ifdef HAVE_STRINGS_H\n+#include <strings.h>\n+#endif\n+#endif\n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+#ifdef HAVE_UNISTD_H\n+#include <unistd.h>\n+#endif],\n+[char *(*pfn) = (char *(*)) $1],\n+libiberty_cv_decl_needed_$1=no, libiberty_cv_decl_needed_$1=yes)])\n+AC_MSG_RESULT($libiberty_cv_decl_needed_$1)\n+if test $libiberty_cv_decl_needed_$1 = yes; then\n+  AC_DEFINE([NEED_DECLARATION_]translit($1, [a-z], [A-Z]), 1,\n+            [Define if $1 is not declared in system header files.])\n+fi\n+])dnl\n+\n+# We always want a C version of alloca() compiled into libiberty,\n+# because native-compiler support for the real alloca is so !@#$%\n+# unreliable that GCC has decided to use it only when being compiled\n+# by GCC.  This is the part of AC_FUNC_ALLOCA that calculates the\n+# information alloca.c needs.\n+AC_DEFUN(libiberty_AC_FUNC_C_ALLOCA,\n+[AC_CACHE_CHECK(whether alloca needs Cray hooks, ac_cv_os_cray,\n+[AC_EGREP_CPP(webecray,\n+[#if defined(CRAY) && ! defined(CRAY2)\n+webecray\n+#else\n+wenotbecray\n+#endif\n+], ac_cv_os_cray=yes, ac_cv_os_cray=no)])\n+if test $ac_cv_os_cray = yes; then\n+  for ac_func in _getb67 GETB67 getb67; do\n+    AC_CHECK_FUNC($ac_func, \n+      [AC_DEFINE_UNQUOTED(CRAY_STACKSEG_END, $ac_func, \n+  [Define to one of _getb67, GETB67, getb67 for Cray-2 and Cray-YMP\n+   systems. This function is required for alloca.c support on those\n+   systems.])  break])\n+  done\n+fi\n+\n+AC_CACHE_CHECK(stack direction for C alloca, ac_cv_c_stack_direction,\n+[AC_TRY_RUN([find_stack_direction ()\n+{\n+  static char *addr = 0;\n+  auto char dummy;\n+  if (addr == 0)\n+    {\n+      addr = &dummy;\n+      return find_stack_direction ();\n+    }\n+  else\n+    return (&dummy > addr) ? 1 : -1;\n+}\n+main ()\n+{\n+  exit (find_stack_direction() < 0);\n+}], \n+  ac_cv_c_stack_direction=1,\n+  ac_cv_c_stack_direction=-1,\n+  ac_cv_c_stack_direction=0)])\n+AC_DEFINE_UNQUOTED(STACK_DIRECTION, $ac_cv_c_stack_direction,\n+  [Define if you know the direction of stack growth for your system;\n+   otherwise it will be automatically deduced at run-time.\n+        STACK_DIRECTION > 0 => grows toward higher addresses\n+        STACK_DIRECTION < 0 => grows toward lower addresses\n+        STACK_DIRECTION = 0 => direction of growth unknown])\n+])"}, {"sha": "5c4dda5d1d559d88982d818c83cadc23e5090491", "filename": "libiberty/configure", "status": "modified", "additions": 450, "deletions": 4, "changes": 454, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b60167833a09e3632b44b6770f7fef1d602dfe9/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b60167833a09e3632b44b6770f7fef1d602dfe9/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=2b60167833a09e3632b44b6770f7fef1d602dfe9", "patch": "@@ -5112,6 +5112,10 @@ case \"${host}\" in\n \t;;\n     i[34567]86-*-mingw* | x86_64-*-mingw*)\n \t;;\n+    i[34567]86-*-interix[3-9]*)\n+\t# Interix 3.x gcc -fpic/-fPIC options generate broken code.\n+\t# Instead, we relocate shared libraries at runtime.\n+\t;;\n     i[34567]86-*-nto-qnx*)\n \t# QNX uses GNU C++, but need to define -shared option too, otherwise\n \t# it will coredump.\n@@ -5300,7 +5304,37 @@ $as_echo \"#define TIME_WITH_SYS_TIME 1\" >>confdefs.h\n fi\n \n \n-libiberty_AC_DECLARE_ERRNO\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether errno must be declared\" >&5\n+$as_echo_n \"checking whether errno must be declared... \" >&6; }\n+if test \"${libiberty_cv_declare_errno+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <errno.h>\n+int\n+main ()\n+{\n+int x = errno;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  libiberty_cv_declare_errno=no\n+else\n+  libiberty_cv_declare_errno=yes\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libiberty_cv_declare_errno\" >&5\n+$as_echo \"$libiberty_cv_declare_errno\" >&6; }\n+if test $libiberty_cv_declare_errno = yes\n+then\n+$as_echo \"#define NEED_DECLARATION_ERRNO 1\" >>confdefs.h\n+\n+fi\n+\n \n # Determine sizes of some types.\n # The cast to long int works around a bug in the HP C Compiler\n@@ -6369,7 +6403,92 @@ fi\n done\n \n \n-  libiberty_AC_FUNC_C_ALLOCA\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether alloca needs Cray hooks\" >&5\n+$as_echo_n \"checking whether alloca needs Cray hooks... \" >&6; }\n+if test \"${ac_cv_os_cray+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#if defined(CRAY) && ! defined(CRAY2)\n+webecray\n+#else\n+wenotbecray\n+#endif\n+\n+_ACEOF\n+if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n+  $EGREP \"webecray\" >/dev/null 2>&1; then :\n+  ac_cv_os_cray=yes\n+else\n+  ac_cv_os_cray=no\n+fi\n+rm -f conftest*\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_os_cray\" >&5\n+$as_echo \"$ac_cv_os_cray\" >&6; }\n+if test $ac_cv_os_cray = yes; then\n+  for ac_func in _getb67 GETB67 getb67; do\n+    as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n+ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\n+eval as_val=\\$$as_ac_var\n+   if test \"x$as_val\" = x\"\"yes; then :\n+\n+cat >>confdefs.h <<_ACEOF\n+#define CRAY_STACKSEG_END $ac_func\n+_ACEOF\n+  break\n+fi\n+\n+  done\n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking stack direction for C alloca\" >&5\n+$as_echo_n \"checking stack direction for C alloca... \" >&6; }\n+if test \"${ac_cv_c_stack_direction+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test \"$cross_compiling\" = yes; then :\n+  ac_cv_c_stack_direction=0\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+find_stack_direction ()\n+{\n+  static char *addr = 0;\n+  auto char dummy;\n+  if (addr == 0)\n+    {\n+      addr = &dummy;\n+      return find_stack_direction ();\n+    }\n+  else\n+    return (&dummy > addr) ? 1 : -1;\n+}\n+main ()\n+{\n+  exit (find_stack_direction() < 0);\n+}\n+_ACEOF\n+if ac_fn_c_try_run \"$LINENO\"; then :\n+  ac_cv_c_stack_direction=1\n+else\n+  ac_cv_c_stack_direction=-1\n+fi\n+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n+  conftest.$ac_objext conftest.beam conftest.$ac_ext\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_stack_direction\" >&5\n+$as_echo \"$ac_cv_c_stack_direction\" >&6; }\n+\n+cat >>confdefs.h <<_ACEOF\n+#define STACK_DIRECTION $ac_cv_c_stack_direction\n+_ACEOF\n+\n+\n   for ac_header in vfork.h\n do :\n   ac_fn_c_check_header_preproc \"$LINENO\" \"vfork.h\" \"ac_cv_header_vfork_h\"\n@@ -6885,7 +7004,53 @@ cat >>confdefs.h <<_ACEOF\n #define HAVE_DECL_STRVERSCMP $ac_have_decl\n _ACEOF\n \n-  libiberty_NEED_DECLARATION(canonicalize_file_name)\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether canonicalize_file_name must be declared\" >&5\n+$as_echo_n \"checking whether canonicalize_file_name must be declared... \" >&6; }\n+if test \"${libiberty_cv_decl_needed_canonicalize_file_name+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include \"confdefs.h\"\n+#include <stdio.h>\n+#ifdef HAVE_STRING_H\n+#include <string.h>\n+#else\n+#ifdef HAVE_STRINGS_H\n+#include <strings.h>\n+#endif\n+#endif\n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+#ifdef HAVE_UNISTD_H\n+#include <unistd.h>\n+#endif\n+int\n+main ()\n+{\n+char *(*pfn) = (char *(*)) canonicalize_file_name\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  libiberty_cv_decl_needed_canonicalize_file_name=no\n+else\n+  libiberty_cv_decl_needed_canonicalize_file_name=yes\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libiberty_cv_decl_needed_canonicalize_file_name\" >&5\n+$as_echo \"$libiberty_cv_decl_needed_canonicalize_file_name\" >&6; }\n+if test $libiberty_cv_decl_needed_canonicalize_file_name = yes; then\n+\n+$as_echo \"#define NEED_DECLARATION_CANONICALIZE_FILE_NAME 1\" >>confdefs.h\n+\n+fi\n+\n fi\n \n # Figure out which version of pexecute to use.\n@@ -6897,7 +7062,288 @@ case \"${host}\" in\n esac\n \n \n-libiberty_AC_FUNC_STRNCMP\n+if test x$gcc_no_link = xyes; then\n+  if test \"x${ac_cv_func_mmap_fixed_mapped+set}\" != xset; then\n+    ac_cv_func_mmap_fixed_mapped=no\n+  fi\n+fi\n+if test \"x${ac_cv_func_mmap_fixed_mapped}\" != xno; then\n+  for ac_header in stdlib.h unistd.h\n+do :\n+  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n+ac_fn_c_check_header_preproc \"$LINENO\" \"$ac_header\" \"$as_ac_Header\"\n+eval as_val=\\$$as_ac_Header\n+   if test \"x$as_val\" = x\"\"yes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n+_ACEOF\n+\n+fi\n+done\n+\n+for ac_func in getpagesize\n+do :\n+  ac_fn_c_check_func \"$LINENO\" \"getpagesize\" \"ac_cv_func_getpagesize\"\n+if test \"x$ac_cv_func_getpagesize\" = x\"\"yes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_GETPAGESIZE 1\n+_ACEOF\n+\n+fi\n+done\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for working mmap\" >&5\n+$as_echo_n \"checking for working mmap... \" >&6; }\n+if test \"${ac_cv_func_mmap_fixed_mapped+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test \"$cross_compiling\" = yes; then :\n+  ac_cv_func_mmap_fixed_mapped=no\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$ac_includes_default\n+/* malloc might have been renamed as rpl_malloc. */\n+#undef malloc\n+\n+/* Thanks to Mike Haertel and Jim Avera for this test.\n+   Here is a matrix of mmap possibilities:\n+\tmmap private not fixed\n+\tmmap private fixed at somewhere currently unmapped\n+\tmmap private fixed at somewhere already mapped\n+\tmmap shared not fixed\n+\tmmap shared fixed at somewhere currently unmapped\n+\tmmap shared fixed at somewhere already mapped\n+   For private mappings, we should verify that changes cannot be read()\n+   back from the file, nor mmap's back from the file at a different\n+   address.  (There have been systems where private was not correctly\n+   implemented like the infamous i386 svr4.0, and systems where the\n+   VM page cache was not coherent with the file system buffer cache\n+   like early versions of FreeBSD and possibly contemporary NetBSD.)\n+   For shared mappings, we should conversely verify that changes get\n+   propagated back to all the places they're supposed to be.\n+\n+   Grep wants private fixed already mapped.\n+   The main things grep needs to know about mmap are:\n+   * does it exist and is it safe to write into the mmap'd area\n+   * how to use it (BSD variants)  */\n+\n+#include <fcntl.h>\n+#include <sys/mman.h>\n+\n+#if !defined STDC_HEADERS && !defined HAVE_STDLIB_H\n+char *malloc ();\n+#endif\n+\n+/* This mess was copied from the GNU getpagesize.h.  */\n+#ifndef HAVE_GETPAGESIZE\n+/* Assume that all systems that can run configure have sys/param.h.  */\n+# ifndef HAVE_SYS_PARAM_H\n+#  define HAVE_SYS_PARAM_H 1\n+# endif\n+\n+# ifdef _SC_PAGESIZE\n+#  define getpagesize() sysconf(_SC_PAGESIZE)\n+# else /* no _SC_PAGESIZE */\n+#  ifdef HAVE_SYS_PARAM_H\n+#   include <sys/param.h>\n+#   ifdef EXEC_PAGESIZE\n+#    define getpagesize() EXEC_PAGESIZE\n+#   else /* no EXEC_PAGESIZE */\n+#    ifdef NBPG\n+#     define getpagesize() NBPG * CLSIZE\n+#     ifndef CLSIZE\n+#      define CLSIZE 1\n+#     endif /* no CLSIZE */\n+#    else /* no NBPG */\n+#     ifdef NBPC\n+#      define getpagesize() NBPC\n+#     else /* no NBPC */\n+#      ifdef PAGESIZE\n+#       define getpagesize() PAGESIZE\n+#      endif /* PAGESIZE */\n+#     endif /* no NBPC */\n+#    endif /* no NBPG */\n+#   endif /* no EXEC_PAGESIZE */\n+#  else /* no HAVE_SYS_PARAM_H */\n+#   define getpagesize() 8192\t/* punt totally */\n+#  endif /* no HAVE_SYS_PARAM_H */\n+# endif /* no _SC_PAGESIZE */\n+\n+#endif /* no HAVE_GETPAGESIZE */\n+\n+int\n+main ()\n+{\n+  char *data, *data2, *data3;\n+  int i, pagesize;\n+  int fd;\n+\n+  pagesize = getpagesize ();\n+\n+  /* First, make a file with some known garbage in it. */\n+  data = (char *) malloc (pagesize);\n+  if (!data)\n+    return 1;\n+  for (i = 0; i < pagesize; ++i)\n+    *(data + i) = rand ();\n+  umask (0);\n+  fd = creat (\"conftest.mmap\", 0600);\n+  if (fd < 0)\n+    return 1;\n+  if (write (fd, data, pagesize) != pagesize)\n+    return 1;\n+  close (fd);\n+\n+  /* Next, try to mmap the file at a fixed address which already has\n+     something else allocated at it.  If we can, also make sure that\n+     we see the same garbage.  */\n+  fd = open (\"conftest.mmap\", O_RDWR);\n+  if (fd < 0)\n+    return 1;\n+  data2 = (char *) malloc (2 * pagesize);\n+  if (!data2)\n+    return 1;\n+  data2 += (pagesize - ((long int) data2 & (pagesize - 1))) & (pagesize - 1);\n+  if (data2 != mmap (data2, pagesize, PROT_READ | PROT_WRITE,\n+\t\t     MAP_PRIVATE | MAP_FIXED, fd, 0L))\n+    return 1;\n+  for (i = 0; i < pagesize; ++i)\n+    if (*(data + i) != *(data2 + i))\n+      return 1;\n+\n+  /* Finally, make sure that changes to the mapped area do not\n+     percolate back to the file as seen by read().  (This is a bug on\n+     some variants of i386 svr4.0.)  */\n+  for (i = 0; i < pagesize; ++i)\n+    *(data2 + i) = *(data2 + i) + 1;\n+  data3 = (char *) malloc (pagesize);\n+  if (!data3)\n+    return 1;\n+  if (read (fd, data3, pagesize) != pagesize)\n+    return 1;\n+  for (i = 0; i < pagesize; ++i)\n+    if (*(data + i) != *(data3 + i))\n+      return 1;\n+  close (fd);\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_run \"$LINENO\"; then :\n+  ac_cv_func_mmap_fixed_mapped=yes\n+else\n+  ac_cv_func_mmap_fixed_mapped=no\n+fi\n+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n+  conftest.$ac_objext conftest.beam conftest.$ac_ext\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_func_mmap_fixed_mapped\" >&5\n+$as_echo \"$ac_cv_func_mmap_fixed_mapped\" >&6; }\n+if test $ac_cv_func_mmap_fixed_mapped = yes; then\n+\n+$as_echo \"#define HAVE_MMAP 1\" >>confdefs.h\n+\n+fi\n+rm -f conftest.mmap\n+\n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for working strncmp\" >&5\n+$as_echo_n \"checking for working strncmp... \" >&6; }\n+if test \"${ac_cv_func_strncmp_works+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test \"$cross_compiling\" = yes; then :\n+  ac_cv_func_strncmp_works=yes\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Test by Jim Wilson and Kaveh Ghazi.\n+   Check whether strncmp reads past the end of its string parameters. */\n+#include <sys/types.h>\n+\n+#ifdef HAVE_FCNTL_H\n+#include <fcntl.h>\n+#endif\n+\n+#ifdef HAVE_SYS_MMAN_H\n+#include <sys/mman.h>\n+#endif\n+\n+#ifndef MAP_ANON\n+#ifdef MAP_ANONYMOUS\n+#define MAP_ANON MAP_ANONYMOUS\n+#else\n+#define MAP_ANON MAP_FILE\n+#endif\n+#endif\n+\n+#ifndef MAP_FILE\n+#define MAP_FILE 0\n+#endif\n+#ifndef O_RDONLY\n+#define O_RDONLY 0\n+#endif\n+\n+#define MAP_LEN 0x10000\n+\n+main ()\n+{\n+#if defined(HAVE_MMAP) || defined(HAVE_MMAP_ANYWHERE)\n+  char *p;\n+  int dev_zero;\n+\n+  dev_zero = open (\"/dev/zero\", O_RDONLY);\n+  if (dev_zero < 0)\n+    exit (1);\n+\n+  p = (char *) mmap (0, MAP_LEN, PROT_READ|PROT_WRITE,\n+\t\t     MAP_ANON|MAP_PRIVATE, dev_zero, 0);\n+  if (p == (char *)-1)\n+    p = (char *) mmap (0, MAP_LEN, PROT_READ|PROT_WRITE,\n+\t\t       MAP_ANON|MAP_PRIVATE, -1, 0);\n+  if (p == (char *)-1)\n+    exit (2);\n+  else\n+    {\n+      char *string = \"__si_type_info\";\n+      char *q = (char *) p + MAP_LEN - strlen (string) - 2;\n+      char *r = (char *) p + 0xe;\n+\n+      strcpy (q, string);\n+      strcpy (r, string);\n+      strncmp (r, q, 14);\n+    }\n+#endif /* HAVE_MMAP || HAVE_MMAP_ANYWHERE */\n+  exit (0);\n+}\n+\n+_ACEOF\n+if ac_fn_c_try_run \"$LINENO\"; then :\n+  ac_cv_func_strncmp_works=yes\n+else\n+  ac_cv_func_strncmp_works=no\n+fi\n+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n+  conftest.$ac_objext conftest.beam conftest.$ac_ext\n+fi\n+\n+rm -f core core.* *.core\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_func_strncmp_works\" >&5\n+$as_echo \"$ac_cv_func_strncmp_works\" >&6; }\n+if test $ac_cv_func_strncmp_works = no ; then\n+  case \" $LIBOBJS \" in\n+  *\" strncmp.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS strncmp.$ac_objext\"\n+ ;;\n+esac\n+\n+fi\n+\n \n # Install a library built with a cross compiler in $(tooldir) rather\n # than $(libdir)."}]}