{"sha": "909734beb71dbf888dfda464541f5acd614e5d25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA5NzM0YmViNzFkYmY4ODhkZmRhNDY0NTQxZjVhY2Q2MTRlNWQyNQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2014-05-16T09:25:48Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2014-05-16T09:25:48Z"}, "message": "[AArch64 costs 17/18] Cost for SYMBOL_REF, HIGH and LO_SUM\n\ngcc/\n\n\t* config/aarch64/aarch64.c (aarch64_rtx_costs): Cost SYMBOL_REF,\n\tHIGH, LO_SUM.\n\nFrom-SVN: r210509", "tree": {"sha": "a472934fbcd212001e9f77a0d2679e80b05ccce2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a472934fbcd212001e9f77a0d2679e80b05ccce2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/909734beb71dbf888dfda464541f5acd614e5d25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/909734beb71dbf888dfda464541f5acd614e5d25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/909734beb71dbf888dfda464541f5acd614e5d25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/909734beb71dbf888dfda464541f5acd614e5d25/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb620c4a9a2120478ce4d6c9fc09826d39c89529", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb620c4a9a2120478ce4d6c9fc09826d39c89529", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb620c4a9a2120478ce4d6c9fc09826d39c89529"}], "stats": {"total": 46, "additions": 40, "deletions": 6}, "files": [{"sha": "5e7c085027966610821bafd20a3a90e5bac5209f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909734beb71dbf888dfda464541f5acd614e5d25/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909734beb71dbf888dfda464541f5acd614e5d25/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=909734beb71dbf888dfda464541f5acd614e5d25", "patch": "@@ -1,3 +1,8 @@\n+2014-05-16  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_rtx_costs): Cost SYMBOL_REF,\n+\tHIGH, LO_SUM.\n+\n 2014-05-16  James Greenhalgh  <james.greenhalgh@arm.com>\n \t    Philipp Tomsich  <philipp.tomsich@theobroma-systems.com>\n "}, {"sha": "9eff2fd8e6ad332bc239ec353d79917bbfd2ed29", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 35, "deletions": 6, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909734beb71dbf888dfda464541f5acd614e5d25/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909734beb71dbf888dfda464541f5acd614e5d25/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=909734beb71dbf888dfda464541f5acd614e5d25", "patch": "@@ -5508,15 +5508,44 @@ aarch64_rtx_costs (rtx x, int code, int outer ATTRIBUTE_UNUSED,\n \t  return false;  /* All arguments need to be in registers.  */\n \t}\n \n-    case HIGH:\n-      if (!CONSTANT_P (XEXP (x, 0)))\n-\t*cost += rtx_cost (XEXP (x, 0), HIGH, 0, speed);\n+    case SYMBOL_REF:\n+\n+      if (aarch64_cmodel == AARCH64_CMODEL_LARGE)\n+\t{\n+\t  /* LDR.  */\n+\t  if (speed)\n+\t    *cost += extra_cost->ldst.load;\n+\t}\n+      else if (aarch64_cmodel == AARCH64_CMODEL_SMALL\n+\t       || aarch64_cmodel == AARCH64_CMODEL_SMALL_PIC)\n+\t{\n+\t  /* ADRP, followed by ADD.  */\n+\t  *cost += COSTS_N_INSNS (1);\n+\t  if (speed)\n+\t    *cost += 2 * extra_cost->alu.arith;\n+\t}\n+      else if (aarch64_cmodel == AARCH64_CMODEL_TINY\n+\t       || aarch64_cmodel == AARCH64_CMODEL_TINY_PIC)\n+\t{\n+\t  /* ADR.  */\n+\t  if (speed)\n+\t    *cost += extra_cost->alu.arith;\n+\t}\n+\n+      if (flag_pic)\n+\t{\n+\t  /* One extra load instruction, after accessing the GOT.  */\n+\t  *cost += COSTS_N_INSNS (1);\n+\t  if (speed)\n+\t    *cost += extra_cost->ldst.load;\n+\t}\n       return true;\n \n+    case HIGH:\n     case LO_SUM:\n-      if (!CONSTANT_P (XEXP (x, 1)))\n-\t*cost += rtx_cost (XEXP (x, 1), LO_SUM, 1, speed);\n-      *cost += rtx_cost (XEXP (x, 0), LO_SUM, 0, speed);\n+      /* ADRP/ADD (immediate).  */\n+      if (speed)\n+\t*cost += extra_cost->alu.arith;\n       return true;\n \n     case ZERO_EXTRACT:"}]}