{"sha": "4356a1bf59fa37ac5abeebc13bb2a5676563b7b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM1NmExYmY1OWZhMzdhYzVhYmVlYmMxM2JiMmE1Njc2NTYzYjdiMQ==", "commit": {"author": {"name": "Stuart Hastings", "email": "stuart@apple.com", "date": "2005-01-27T01:03:27Z"}, "committer": {"name": "Stuart Hastings", "email": "stuart@gcc.gnu.org", "date": "2005-01-27T01:03:27Z"}, "message": "gimplify.c (shortcut_cond_expr): Re-compute side-effects.\n\n2005-01-26  Stuart Hastings  <stuart@apple.com>\n\n\t* gcc/gimplify.c (shortcut_cond_expr): Re-compute side-effects.\n\t* gcc/testsuite/gcc.c-torture/execute/20050125-1.c: New.\n\nFrom-SVN: r94300", "tree": {"sha": "d1cb899bc25017623d5b6ecc0f17e259e7df6a27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1cb899bc25017623d5b6ecc0f17e259e7df6a27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4356a1bf59fa37ac5abeebc13bb2a5676563b7b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4356a1bf59fa37ac5abeebc13bb2a5676563b7b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4356a1bf59fa37ac5abeebc13bb2a5676563b7b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4356a1bf59fa37ac5abeebc13bb2a5676563b7b1/comments", "author": null, "committer": null, "parents": [{"sha": "c006df4eecdd0b1abbaca7728893d3729df10e65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c006df4eecdd0b1abbaca7728893d3729df10e65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c006df4eecdd0b1abbaca7728893d3729df10e65"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "f21d9d2ff35d43743595e53de1f548da539a34db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4356a1bf59fa37ac5abeebc13bb2a5676563b7b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4356a1bf59fa37ac5abeebc13bb2a5676563b7b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4356a1bf59fa37ac5abeebc13bb2a5676563b7b1", "patch": "@@ -1,3 +1,8 @@\n+2005-01-26  Stuart Hastings  <stuart@apple.com>\n+\n+\t* gcc/gimplify.c (shortcut_cond_expr): Re-compute side-effects.\n+\t* gcc/testsuite/gcc.c-torture/execute/20050125-1.c: New.\n+\n 2005-01-26  Richard Henderson  <rth@redhat.com>\n \n \tPR middle-end/18008"}, {"sha": "0fd39436325dfcdfc29bca9a025bd20920414bf4", "filename": "gcc/gimplify.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4356a1bf59fa37ac5abeebc13bb2a5676563b7b1/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4356a1bf59fa37ac5abeebc13bb2a5676563b7b1/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=4356a1bf59fa37ac5abeebc13bb2a5676563b7b1", "patch": "@@ -1923,6 +1923,7 @@ shortcut_cond_expr (tree expr)\n \t{\n \t  TREE_OPERAND (expr, 0) = TREE_OPERAND (pred, 1);\n \t  then_ = shortcut_cond_expr (expr);\n+\t  then_se = then_ && TREE_SIDE_EFFECTS (then_);\n \t  pred = TREE_OPERAND (pred, 0);\n \t  expr = build (COND_EXPR, void_type_node, pred, then_, NULL_TREE);\n \t}\n@@ -1937,6 +1938,7 @@ shortcut_cond_expr (tree expr)\n \t{\n \t  TREE_OPERAND (expr, 0) = TREE_OPERAND (pred, 1);\n \t  else_ = shortcut_cond_expr (expr);\n+\t  else_se = else_ && TREE_SIDE_EFFECTS (else_);\n \t  pred = TREE_OPERAND (pred, 0);\n \t  expr = build (COND_EXPR, void_type_node, pred, NULL_TREE, else_);\n \t}"}, {"sha": "3dc15b537334d88f1ed3b8e60f4206f3009a3825", "filename": "gcc/testsuite/gcc.c-torture/execute/20050125-1.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4356a1bf59fa37ac5abeebc13bb2a5676563b7b1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050125-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4356a1bf59fa37ac5abeebc13bb2a5676563b7b1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050125-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050125-1.c?ref=4356a1bf59fa37ac5abeebc13bb2a5676563b7b1", "patch": "@@ -0,0 +1,35 @@\n+/* Verify that the CALL sideeffect isn't optimized away.  */\n+/* Contributed by Greg Parker  25 Jan 2005  <gparker@apple.com> */\n+\n+#include <stdlib.h>\n+#include <stdio.h>\n+\n+struct parse {\n+  char *next;\n+  char *end;\n+  int error;\n+};\n+\n+int seterr(struct parse *p, int err)\n+{\n+  p->error = err;\n+  return 0;\n+}\n+\n+void bracket_empty(struct parse *p)\n+{\n+  if (((p->next < p->end) && (*p->next++) == ']')  ||  seterr(p, 7)) { }\n+}\n+\n+int main(int argc __attribute__((unused)), char **argv __attribute__((unused)))\n+{\n+  struct parse p;\n+  p.next = p.end = (char *)0x12345;\n+\n+  p.error = 0;\n+  bracket_empty(&p);\n+  if (p.error != 7)\n+    abort ();\n+\n+  return 0;\n+}"}]}