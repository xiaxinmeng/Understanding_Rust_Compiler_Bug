{"sha": "a4f4333ade0da6c33abad06e0d60e30f62fc1ce9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRmNDMzM2FkZTBkYTZjMzNhYmFkMDZlMGQ2MGUzMGY2MmZjMWNlOQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.com", "date": "2001-03-15T12:59:26Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2001-03-15T12:59:26Z"}, "message": "Fix hashing of REG/MEM values.\n\nFrom-SVN: r40499", "tree": {"sha": "b9f47da132c30ccaa7f6f3a4faac892bbf803362", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9f47da132c30ccaa7f6f3a4faac892bbf803362"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4f4333ade0da6c33abad06e0d60e30f62fc1ce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4f4333ade0da6c33abad06e0d60e30f62fc1ce9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4f4333ade0da6c33abad06e0d60e30f62fc1ce9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4f4333ade0da6c33abad06e0d60e30f62fc1ce9/comments", "author": null, "committer": null, "parents": [{"sha": "e4027dab420f8f741453f3451096356daa167e23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4027dab420f8f741453f3451096356daa167e23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4027dab420f8f741453f3451096356daa167e23"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "2e833b76406f941856fd96e119aa8a307c14d7bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4f4333ade0da6c33abad06e0d60e30f62fc1ce9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4f4333ade0da6c33abad06e0d60e30f62fc1ce9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4f4333ade0da6c33abad06e0d60e30f62fc1ce9", "patch": "@@ -1,5 +1,8 @@\n 2001-03-15  Bernd Schmidt  <bernds@redhat.com>\n \n+\t* cselib.c (hash_rtx): For REG and MEM, just use value of expression\n+\twithout adding in rtx code and mode.\n+\n \t* config/ia64/ia64.c (maybe_rotate): New function, broken out of\n \tia64_sched_reorder.\n \t(ia64_sched_reorder): Call maybe_rotate; also rotate after"}, {"sha": "c0aa0e659bb44e84c56f4f1a14272848be4a072d", "filename": "gcc/cselib.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4f4333ade0da6c33abad06e0d60e30f62fc1ce9/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4f4333ade0da6c33abad06e0d60e30f62fc1ce9/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=a4f4333ade0da6c33abad06e0d60e30f62fc1ce9", "patch": "@@ -579,8 +579,7 @@ hash_rtx (x, mode, create)\n       if (! e)\n \treturn 0;\n \n-      hash += e->value;\n-      return hash ? hash : (unsigned int) MEM;\n+      return e->value;\n \n     case CONST_INT:\n       hash += ((unsigned) CONST_INT << 7) + (unsigned) mode + INTVAL (x);"}]}