{"sha": "776de6b2eea79525d419b6942217388137c8d040", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc2ZGU2YjJlZWE3OTUyNWQ0MTliNjk0MjIxNzM4ODEzN2M4ZDA0MA==", "commit": {"author": {"name": "Janis Johnson", "email": "janisjo@codesourcery.com", "date": "2012-09-24T15:15:14Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2012-09-24T15:15:14Z"}, "message": "doc/sourcebuild.texi (Selectors): Document the use of target and xfail used together.\n\n\tdoc/sourcebuild.texi (Selectors): Document the use of target\n\tand xfail used together.\ntestsuite/\n\t* lib/target-supports-dg.exp (dg-require-effective-target,\n\tdg-skip-if, dg-xfail-if, dg-xfail-run-if, dg-shouldfail): Call\n\tdg-process-target-1 instead of dg-process-target.\n\t(dg-process-target-1): Rename from dg-process-target.\n\t(dg-process-target): New.\n\nFrom-SVN: r191670", "tree": {"sha": "1475f23ff2189fbfb5536bc459198a5fe535abd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1475f23ff2189fbfb5536bc459198a5fe535abd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/776de6b2eea79525d419b6942217388137c8d040", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/776de6b2eea79525d419b6942217388137c8d040", "html_url": "https://github.com/Rust-GCC/gccrs/commit/776de6b2eea79525d419b6942217388137c8d040", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/776de6b2eea79525d419b6942217388137c8d040/comments", "author": null, "committer": null, "parents": [{"sha": "28957eabb4c25ee7f4f6cd9daa9afdf6f9164739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28957eabb4c25ee7f4f6cd9daa9afdf6f9164739", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28957eabb4c25ee7f4f6cd9daa9afdf6f9164739"}], "stats": {"total": 86, "additions": 66, "deletions": 20}, "files": [{"sha": "01536e1f99dbff63236bd31724b970352f149fbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776de6b2eea79525d419b6942217388137c8d040/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776de6b2eea79525d419b6942217388137c8d040/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=776de6b2eea79525d419b6942217388137c8d040", "patch": "@@ -1,3 +1,8 @@\n+2012-09-24  Janis Johnson  <janisjo@codesourcery.com>\n+\n+\tdoc/sourcebuild.texi (Selectors): Document the use of target\n+\tand xfail used together.\n+\n 2012-09-24  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/54632"}, {"sha": "2efd79929370080f2ad36c374330c3a217507a85", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776de6b2eea79525d419b6942217388137c8d040/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776de6b2eea79525d419b6942217388137c8d040/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=776de6b2eea79525d419b6942217388137c8d040", "patch": "@@ -1238,15 +1238,18 @@ on particular targets.\n \n A selector is:\n @itemize @bullet\n-@item one or more target triplets, possibly including wildcard characters\n+@item one or more target triplets, possibly including wildcard characters;\n+use @samp{*-*-*} to match any target\n @item a single effective-target keyword (@pxref{Effective-Target Keywords})\n @item a logical expression\n @end itemize\n \n-Depending on the\n-context, the selector specifies whether a test is skipped and reported\n-as unsupported or is expected to fail.  Use @samp{*-*-*} to match any\n-target.\n+Depending on the context, the selector specifies whether a test is\n+skipped and reported as unsupported or is expected to fail.  A context\n+that allows either @samp{target} or @samp{xfail} also allows\n+@samp{@{ target @var{selector1} xfail @var{selector2} @}}\n+to skip the test for targets that don't match @var{selector1} and the\n+test to fail for targets that match @var{selector2}.\n \n A selector expression appears within curly braces and uses a single\n logical operator: one of @samp{!}, @samp{&&}, or @samp{||}.  An"}, {"sha": "2a38fea629101ba837fd00528630e3b91ae4fe0b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776de6b2eea79525d419b6942217388137c8d040/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776de6b2eea79525d419b6942217388137c8d040/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=776de6b2eea79525d419b6942217388137c8d040", "patch": "@@ -1,3 +1,11 @@\n+2012-09-24  Janis Johnson  <janisjo@codesourcery.com>\n+\n+\t* lib/target-supports-dg.exp (dg-require-effective-target,\n+\tdg-skip-if, dg-xfail-if, dg-xfail-run-if, dg-shouldfail): Call\n+\tdg-process-target-1 instead of dg-process-target.\n+\t(dg-process-target-1): Rename from dg-process-target.\n+\t(dg-process-target): New.\n+\n 2012-09-24  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/54684"}, {"sha": "3e3a3d0cea608ef01c327223aadf1be351ca4b9f", "filename": "gcc/testsuite/lib/target-supports-dg.exp", "status": "modified", "additions": 45, "deletions": 15, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/776de6b2eea79525d419b6942217388137c8d040/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/776de6b2eea79525d419b6942217388137c8d040/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp?ref=776de6b2eea79525d419b6942217388137c8d040", "patch": "@@ -208,7 +208,7 @@ proc dg-require-effective-target { args } {\n     \n     # Evaluate selector if present.\n     if { [llength $args] == 2 } {\n-\tswitch [dg-process-target [lindex $args 1]] {\n+\tswitch [dg-process-target-1 [lindex $args 1]] {\n \t    \"S\" { }\n \t    \"N\" { return }\n \t}\n@@ -362,7 +362,7 @@ proc dg-skip-if { args } {\n     }\n \n     set selector [list target [lindex $args 1]]\n-    if { [dg-process-target $selector] == \"S\" } {\n+    if { [dg-process-target-1 $selector] == \"S\" } {\n \tif [check-flags $args] {\n \t    upvar dg-do-what dg-do-what\n             set dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n@@ -386,7 +386,7 @@ proc dg-xfail-if { args } {\n     }\n \n     set selector [list target [lindex $args 1]]\n-    if { [dg-process-target $selector] == \"S\" } {\n+    if { [dg-process-target-1 $selector] == \"S\" } {\n \tglobal compiler_conditional_xfail_data\n \n \t# The target list might be an effective-target keyword.  Replace\n@@ -421,7 +421,7 @@ proc dg-xfail-run-if { args } {\n     }\n \n     set selector [list target [lindex $args 1]]\n-    if { [dg-process-target $selector] == \"S\" } {\n+    if { [dg-process-target-1 $selector] == \"S\" } {\n \tif [check-flags $args] {\n \t    upvar dg-do-what dg-do-what\n             set dg-do-what [list [lindex ${dg-do-what} 0] \"S\" \"F\"]\n@@ -445,7 +445,7 @@ proc dg-shouldfail { args } {\n     set args [lreplace $args 0 0]\n     if { [llength $args] > 1 } {\n \tset selector [list target [lindex $args 1]]\n-\tif { [dg-process-target $selector] == \"S\" } {\n+\tif { [dg-process-target-1 $selector] == \"S\" } {\n \t    # The target matches, now check the flags.\n \t    if [check-flags $args] {\n \t\tset shouldfail 1\n@@ -460,16 +460,19 @@ proc dg-shouldfail { args } {\n # support use of an effective-target keyword in place of a list of\n # target triplets to xfail or skip a test.\n #\n-# selector is one of:\n-#    xfail target-triplet-1 ...\n-#    xfail effective-target-keyword\n-#    xfail selector-expression\n-#    target target-triplet-1 ...\n-#    target effective-target-keyword\n-#    target selector-expression\n+# The argument to dg-process-target is the keyword \"target\" or \"xfail\"\n+# followed by a selector:\n+#    target-triplet-1 ...\n+#    effective-target-keyword\n+#    selector-expression\n #\n # For a target list the result is \"S\" if the target is selected, \"N\" otherwise.\n # For an xfail list the result is \"F\" if the target is affected, \"P\" otherwise.\n+\n+# In contexts that allow either \"target\" or \"xfail\" the argument can be\n+#    target selector1 xfail selector2\n+# which returns \"N\" if selector1 is not selected, otherwise the result of\n+# \"xfail selector2\".\n #\n # A selector expression appears within curly braces and uses a single logical\n # operator: !, &&, or ||.  An operand is another selector expression, an\n@@ -529,9 +532,11 @@ if { [info procs saved-dg-process-target] == [list] } {\n \treturn $answer\n     }\n \n-    proc dg-process-target { args } {\n-\tverbose \"replacement dg-process-target: `$args'\" 2\n-\t\n+    # Evaluate \"target selector\" or \"xfail selector\".\n+\n+    proc dg-process-target-1 { args } {\n+\tverbose \"dg-process-target-1: `$args'\" 2\n+\n \t# Extract the 'what' keyword from the argument list.\n \tset selector [string trim [lindex $args 0]]\n \tif [regexp \"^xfail \" $selector] {\n@@ -567,4 +572,29 @@ if { [info procs saved-dg-process-target] == [list] } {\n \t# the list of target triplets.\n \treturn [saved-dg-process-target $selector]\n     }\n+\n+    # Intercept calls to the DejaGnu function.  In addition to\n+    # processing \"target selector\" or \"xfail selector\", handle\n+    # \"target selector1 xfail selector2\".\n+\n+    proc dg-process-target { args } {\n+\tverbose \"replacement dg-process-target: `$args'\" 2\n+\n+\tset selector [string trim [lindex $args 0]]\n+\n+\t# If the argument list contains both 'target' and 'xfail',\n+\t# process 'target' and, if that succeeds, process 'xfail'.\n+\tif [regexp \"^target .* xfail .*\" $selector] {\n+\t    set xfail_index [string first \"xfail\" $selector]\n+\t    set xfail_selector [string range $selector $xfail_index end]\n+\t    set target_selector [string range $selector 0 $xfail_index-1]\n+\t    set target_selector [string trim $target_selector]\n+\t    if { [dg-process-target-1 $target_selector] == \"N\" } {\n+\t\treturn \"N\"\n+\t    }\n+\t    return [dg-process-target-1 $xfail_selector]\n+\t    \n+\t}\n+\treturn [dg-process-target-1 $selector]\n+    }\n }"}]}