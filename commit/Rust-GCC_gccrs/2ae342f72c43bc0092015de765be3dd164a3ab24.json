{"sha": "2ae342f72c43bc0092015de765be3dd164a3ab24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFlMzQyZjcyYzQzYmMwMDkyMDE1ZGU3NjViZTNkZDE2NGEzYWIyNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-11-09T16:01:13Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-11-09T16:01:13Z"}, "message": "(expand_expr, case ARRAY_REF): Properly convert types of index, size,\n\nand multiplication.\n\nFrom-SVN: r10573", "tree": {"sha": "cd007e11f866d115e3ef48cd3088257a9a935c2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd007e11f866d115e3ef48cd3088257a9a935c2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ae342f72c43bc0092015de765be3dd164a3ab24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae342f72c43bc0092015de765be3dd164a3ab24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ae342f72c43bc0092015de765be3dd164a3ab24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae342f72c43bc0092015de765be3dd164a3ab24/comments", "author": null, "committer": null, "parents": [{"sha": "8aaa43506157312bf0aaacf289c2df801569d71c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aaa43506157312bf0aaacf289c2df801569d71c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8aaa43506157312bf0aaacf289c2df801569d71c"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "e75a7d01966b01b4403aa4134e577fbe55ad0153", "filename": "gcc/expr.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ae342f72c43bc0092015de765be3dd164a3ab24/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ae342f72c43bc0092015de765be3dd164a3ab24/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=2ae342f72c43bc0092015de765be3dd164a3ab24", "patch": "@@ -4655,13 +4655,20 @@ expand_expr (exp, target, tmode, modifier)\n \t       matter, since expand_expr should not care.)  */\n \t    TREE_SIDE_EFFECTS (array_adr) = 0;\n \n-\t    elt = build1 (INDIRECT_REF, type,\n-\t\t\t  fold (build (PLUS_EXPR,\n-\t\t\t\t       TYPE_POINTER_TO (variant_type),\n-\t\t\t\t       array_adr,\n-\t\t\t\t       fold (build (MULT_EXPR,\n-\t\t\t\t\t\t    TYPE_POINTER_TO (variant_type),\n-\t\t\t\t\t\t    index, size)))));\n+\t    elt\n+\t      = build1\n+\t\t(INDIRECT_REF, type,\n+\t\t fold (build (PLUS_EXPR,\n+\t\t\t      TYPE_POINTER_TO (variant_type),\n+\t\t\t      array_adr,\n+\t\t\t      fold\n+\t\t\t      (build1\n+\t\t\t       (NOP_EXPR,\n+\t\t\t\tTYPE_POINTER_TO (variant_type),\n+\t\t\t\tfold (build (MULT_EXPR, TREE_TYPE (index),\n+\t\t\t\t\t     index,\n+\t\t\t\t\t     convert (TREE_TYPE (index),\n+\t\t\t\t\t\t      size))))))));;\n \n \t    /* Volatility, etc., of new expression is same as old\n \t       expression.  */"}]}