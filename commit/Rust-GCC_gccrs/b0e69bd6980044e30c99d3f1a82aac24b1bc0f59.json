{"sha": "b0e69bd6980044e30c99d3f1a82aac24b1bc0f59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBlNjliZDY5ODAwNDRlMzBjOTlkM2YxYTgyYWFjMjRiMWJjMGY1OQ==", "commit": {"author": {"name": "Andrew Sadek", "email": "andrew.sadek.se@gmail.com", "date": "2018-05-06T11:42:06Z"}, "committer": {"name": "Michael Eager", "email": "eager@gcc.gnu.org", "date": "2018-05-06T11:42:06Z"}, "message": "picdtr.c: Add test for -fPIE -mpic-data-is-text-relative.\n\n2018-05-06  Andrew Sadek  <andrew.sadek.se@gmail.com>\n\n\t* gcc.target/microblaze/others/picdtr.c: Add test for \n\t -fPIE -mpic-data-is-text-relative.\n\nFrom-SVN: r259975", "tree": {"sha": "f0bb5d0feaa5e619968ac23c9e1bb600eb29e5a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0bb5d0feaa5e619968ac23c9e1bb600eb29e5a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0e69bd6980044e30c99d3f1a82aac24b1bc0f59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0e69bd6980044e30c99d3f1a82aac24b1bc0f59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0e69bd6980044e30c99d3f1a82aac24b1bc0f59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0e69bd6980044e30c99d3f1a82aac24b1bc0f59/comments", "author": {"login": "andrewsadek", "id": 35325900, "node_id": "MDQ6VXNlcjM1MzI1OTAw", "avatar_url": "https://avatars.githubusercontent.com/u/35325900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewsadek", "html_url": "https://github.com/andrewsadek", "followers_url": "https://api.github.com/users/andrewsadek/followers", "following_url": "https://api.github.com/users/andrewsadek/following{/other_user}", "gists_url": "https://api.github.com/users/andrewsadek/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewsadek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewsadek/subscriptions", "organizations_url": "https://api.github.com/users/andrewsadek/orgs", "repos_url": "https://api.github.com/users/andrewsadek/repos", "events_url": "https://api.github.com/users/andrewsadek/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewsadek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8309b221a0fce1cb7dc96d4e7df33bc761ccded9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8309b221a0fce1cb7dc96d4e7df33bc761ccded9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8309b221a0fce1cb7dc96d4e7df33bc761ccded9"}], "stats": {"total": 165, "additions": 165, "deletions": 0}, "files": [{"sha": "5903cdc20e63f3a2bafaa9c40ae787880781fe06", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0e69bd6980044e30c99d3f1a82aac24b1bc0f59/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0e69bd6980044e30c99d3f1a82aac24b1bc0f59/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b0e69bd6980044e30c99d3f1a82aac24b1bc0f59", "patch": "@@ -1,3 +1,8 @@\n+2018-05-06  Andrew Sadek  <andrew.sadek.se@gmail.com>\n+\n+\t* gcc.target/microblaze/others/picdtr.c: Add test for \n+\t -fPIE -mpic-data-is-text-relative.\n+\n 2018-05-06  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/85507"}, {"sha": "e7b8b0d2d7909194695cd03fcce34ea8c10f5b25", "filename": "gcc/testsuite/gcc.target/microblaze/others/picdtr.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0e69bd6980044e30c99d3f1a82aac24b1bc0f59/gcc%2Ftestsuite%2Fgcc.target%2Fmicroblaze%2Fothers%2Fpicdtr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0e69bd6980044e30c99d3f1a82aac24b1bc0f59/gcc%2Ftestsuite%2Fgcc.target%2Fmicroblaze%2Fothers%2Fpicdtr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmicroblaze%2Fothers%2Fpicdtr.c?ref=b0e69bd6980044e30c99d3f1a82aac24b1bc0f59", "patch": "@@ -0,0 +1,160 @@\n+/* { dg-options \"-fPIE -mpic-data-text-rel -save-temps\" } */\n+/* { dg-do run } */\n+\n+#define TEST_VAR(var,val) (var) = (val); if( (var) != (val)) return 0;\n+\n+int foo(unsigned int i);\n+extern void abort(void);\n+extern void exit(int);\n+\n+unsigned char data[8];\n+long bigData[7];\n+long var;\n+typedef struct {int a; short b; long c[1000][1000]; long long d[3][3]; char e; } myDef;\n+myDef def;\n+const char* myString;\n+\n+/* { dg-final { scan-assembler \"mfs\\tr20,rpc\" } } */\n+/* { dg-final { scan-assembler \"addik\\tr20,r20,8@TXTPCREL\" } } */\n+/* { dg-final { scan-assembler \",r20,\\[^\\n]*var\\[^\\n]*@TXTREL\" } } */\n+/* { dg-final { scan-assembler-not \",r0,\\[^\\n]*var\" } } */\n+/* { dg-final { scan-assembler \",r20,\\[^\\n]*bigData\\[^\\n]*@TXTREL\" } } */\n+/* { dg-final { scan-assembler-not \",r0,\\[^\\n]*bigData\" } } */\n+/* { dg-final { scan-assembler \",r20,\\[^\\n]*def\\[^\\n]*@TXTREL\" } } */\n+/* { dg-final { scan-assembler-not \",r0,\\[^\\n]*def\" } } */\n+/* { dg-final { scan-assembler \",r20,\\[^\\n]*data\\[^\\n]*@TXTREL\" } } */\n+/* { dg-final { scan-assembler-not \",r0,\\[^\\n]*data\" } } */\n+/* { dg-final { scan-assembler \",r20,\\[^\\n]*L\\[^\\n]*@TXTREL\" } } */\n+/* { dg-final { scan-assembler-not \",r0,\\[^\\n]*L\" } } */\n+\n+\n+\n+void foo2() {\n+\tvar++;\n+}\n+\n+int foo (unsigned int i) {\n+\n+\tTEST_VAR(var,123)\n+\tTEST_VAR(data[i],77)\n+\tTEST_VAR(data[2],88)\n+\tTEST_VAR(def.a,897)\n+\tTEST_VAR(bigData[i],78)\n+\tTEST_VAR(bigData[2],777)\n+\tTEST_VAR(def.b,12333);\n+\tTEST_VAR(def.c[i][i],5);\n+\tTEST_VAR(def.c[0][1],7);\n+\tTEST_VAR(def.d[1][2],123);\n+\tTEST_VAR(def.e,7);\n+\tTEST_VAR(bigData[i+1],bigData[i*2]);\n+\n+\tfoo2();\n+\n+\tmyString = \"Hello\";\n+\n+\tswitch(i){\n+\n+\tcase 1: var += 2; break;\n+\tcase 2: var += 3; break;\n+\tcase 3: var += 5; break;\n+\tcase 4: var += 7; break;\n+\tcase 5: var += 8; break;\n+\tdefault: var = 0;\n+\n+\t}\n+\n+\treturn 1;\n+\n+}\n+\n+int main() {\n+\n+\tint result = foo(3);\n+\tif(result != 1 || var != 129) {\n+\t\tabort();\n+\t}\n+\n+\texit(0);\n+\n+}\n+\n+/* { dg-options \"-fPIE -mpic-data-text-rel -save-temps\" } */\n+/* { dg-do run } */\n+\n+#define TEST_VAR(var,val) (var) = (val); if( (var) != (val)) return 0;\n+\n+int foo(unsigned int i);\n+extern void abort(void);\n+extern void exit(int);\n+\n+unsigned char data[8];\n+long bigData[7];\n+long var;\n+typedef struct {int a; short b; long c[1000][1000]; long long d[3][3]; char e; } myDef;\n+myDef def;\n+const char* myString;\n+\n+/* { dg-final { scan-assembler \"mfs\\tr20,rpc\" } } */\n+/* { dg-final { scan-assembler \"addik\\tr20,r20,8@TXTPCREL\" } } */\n+/* { dg-final { scan-assembler \",r20,\\[^\\n]*var\\[^\\n]*@TXTREL\" } } */\n+/* { dg-final { scan-assembler-not \",r0,\\[^\\n]*var\" } } */\n+/* { dg-final { scan-assembler \",r20,\\[^\\n]*bigData\\[^\\n]*@TXTREL\" } } */\n+/* { dg-final { scan-assembler-not \",r0,\\[^\\n]*bigData\" } } */\n+/* { dg-final { scan-assembler \",r20,\\[^\\n]*def\\[^\\n]*@TXTREL\" } } */\n+/* { dg-final { scan-assembler-not \",r0,\\[^\\n]*def\" } } */\n+/* { dg-final { scan-assembler \",r20,\\[^\\n]*data\\[^\\n]*@TXTREL\" } } */\n+/* { dg-final { scan-assembler-not \",r0,\\[^\\n]*data\" } } */\n+/* { dg-final { scan-assembler \",r20,\\[^\\n]*L\\[^\\n]*@TXTREL\" } } */\n+/* { dg-final { scan-assembler-not \",r0,\\[^\\n]*L\" } } */\n+\n+\n+\n+void foo2() {\n+\tvar++;\n+}\n+\n+int foo (unsigned int i) {\n+\n+\tTEST_VAR(var,123)\n+\tTEST_VAR(data[i],77)\n+\tTEST_VAR(data[2],88)\n+\tTEST_VAR(def.a,897)\n+\tTEST_VAR(bigData[i],78)\n+\tTEST_VAR(bigData[2],777)\n+\tTEST_VAR(def.b,12333);\n+\tTEST_VAR(def.c[i][i],5);\n+\tTEST_VAR(def.c[0][1],7);\n+\tTEST_VAR(def.d[1][2],123);\n+\tTEST_VAR(def.e,7);\n+\tTEST_VAR(bigData[i+1],bigData[i*2]);\n+\n+\tfoo2();\n+\n+\tmyString = \"Hello\";\n+\n+\tswitch(i){\n+\n+\tcase 1: var += 2; break;\n+\tcase 2: var += 3; break;\n+\tcase 3: var += 5; break;\n+\tcase 4: var += 7; break;\n+\tcase 5: var += 8; break;\n+\tdefault: var = 0;\n+\n+\t}\n+\n+\treturn 1;\n+\n+}\n+\n+int main() {\n+\n+\tint result = foo(3);\n+\tif(result != 1 || var != 129) {\n+\t\tabort();\n+\t}\n+\n+\texit(0);\n+\n+}\n+"}]}