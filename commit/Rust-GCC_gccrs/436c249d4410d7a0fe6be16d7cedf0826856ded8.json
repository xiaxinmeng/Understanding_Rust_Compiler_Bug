{"sha": "436c249d4410d7a0fe6be16d7cedf0826856ded8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM2YzI0OWQ0NDEwZDdhMGZlNmJlMTZkN2NlZGYwODI2ODU2ZGVkOA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-09-09T11:20:02Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-09-09T11:20:02Z"}, "message": "[ARM][2/7] Convert FP mnemonics to UAL | add/sub/div/abs patterns.\n\n\t* config/arm/vfp.md (*abssf2_vfp): Use UAL assembly syntax.\n\t(*absdf2_vfp): Likewise.\n\t(*negsf2_vfp): Likewise.\n\t(*negdf2_vfp): Likewise.\n\t(*addsf3_vfp): Likewise.\n\t(*adddf3_vfp): Likewise.\n\t(*subsf3_vfp): Likewise.\n\t(*subdf3_vfp): Likewise.\n\t(*divsf3_vfp): Likewise.\n\t(*divdf3_vfp): Likewise.\n\n\t* gcc.target/arm/vfp-1.c: Updated expected assembly.\n\nFrom-SVN: r215051", "tree": {"sha": "32e09a82b61f38f6219a860cc9034393defa2490", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32e09a82b61f38f6219a860cc9034393defa2490"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/436c249d4410d7a0fe6be16d7cedf0826856ded8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/436c249d4410d7a0fe6be16d7cedf0826856ded8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/436c249d4410d7a0fe6be16d7cedf0826856ded8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/436c249d4410d7a0fe6be16d7cedf0826856ded8/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35cb3e53878eefd7ea817613ffbe6ab84502f92e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35cb3e53878eefd7ea817613ffbe6ab84502f92e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35cb3e53878eefd7ea817613ffbe6ab84502f92e"}], "stats": {"total": 57, "additions": 37, "deletions": 20}, "files": [{"sha": "0a2c1d6d6dfa1944c92a92dd8227f9134ce362b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/436c249d4410d7a0fe6be16d7cedf0826856ded8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/436c249d4410d7a0fe6be16d7cedf0826856ded8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=436c249d4410d7a0fe6be16d7cedf0826856ded8", "patch": "@@ -1,3 +1,16 @@\n+2014-09-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/vfp.md (*abssf2_vfp): Use UAL assembly syntax.\n+\t(*absdf2_vfp): Likewise.\n+\t(*negsf2_vfp): Likewise.\n+\t(*negdf2_vfp): Likewise.\n+\t(*addsf3_vfp): Likewise.\n+\t(*adddf3_vfp): Likewise.\n+\t(*subsf3_vfp): Likewise.\n+\t(*subdf3_vfp): Likewise.\n+\t(*divsf3_vfp): Likewise.\n+\t(*divdf3_vfp): Likewise.\n+\n 2014-09-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm.c (output_move_vfp): Use UAL syntax for load/store"}, {"sha": "755229cc480d8cd0458e57a279cd40219fb7f0bf", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/436c249d4410d7a0fe6be16d7cedf0826856ded8/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/436c249d4410d7a0fe6be16d7cedf0826856ded8/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=436c249d4410d7a0fe6be16d7cedf0826856ded8", "patch": "@@ -588,7 +588,7 @@\n   [(set (match_operand:SF\t  0 \"s_register_operand\" \"=t\")\n \t(abs:SF (match_operand:SF 1 \"s_register_operand\" \"t\")))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n-  \"fabss%?\\\\t%0, %1\"\n+  \"vabs%?.f32\\\\t%0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"ffariths\")]\n@@ -598,7 +598,7 @@\n   [(set (match_operand:DF\t  0 \"s_register_operand\" \"=w\")\n \t(abs:DF (match_operand:DF 1 \"s_register_operand\" \"w\")))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP_DOUBLE\"\n-  \"fabsd%?\\\\t%P0, %P1\"\n+  \"vabs%?.f64\\\\t%P0, %P1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"ffarithd\")]\n@@ -609,7 +609,7 @@\n \t(neg:SF (match_operand:SF 1 \"s_register_operand\" \"t,r\")))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n   \"@\n-   fnegs%?\\\\t%0, %1\n+   vneg%?.f32\\\\t%0, %1\n    eor%?\\\\t%0, %1, #-2147483648\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n@@ -621,7 +621,7 @@\n \t(neg:DF (match_operand:DF 1 \"s_register_operand\" \"w,0,r\")))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP_DOUBLE\"\n   \"@\n-   fnegd%?\\\\t%P0, %P1\n+   vneg%?.f64\\\\t%P0, %P1\n    #\n    #\"\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP_DOUBLE && reload_completed\n@@ -671,7 +671,7 @@\n \t(plus:SF (match_operand:SF 1 \"s_register_operand\" \"t\")\n \t\t (match_operand:SF 2 \"s_register_operand\" \"t\")))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n-  \"fadds%?\\\\t%0, %1, %2\"\n+  \"vadd%?.f32\\\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"fadds\")]\n@@ -682,7 +682,7 @@\n \t(plus:DF (match_operand:DF 1 \"s_register_operand\" \"w\")\n \t\t (match_operand:DF 2 \"s_register_operand\" \"w\")))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP_DOUBLE\"\n-  \"faddd%?\\\\t%P0, %P1, %P2\"\n+  \"vadd%?.f64\\\\t%P0, %P1, %P2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"faddd\")]\n@@ -694,7 +694,7 @@\n \t(minus:SF (match_operand:SF 1 \"s_register_operand\" \"t\")\n \t\t  (match_operand:SF 2 \"s_register_operand\" \"t\")))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n-  \"fsubs%?\\\\t%0, %1, %2\"\n+  \"vsub%?.f32\\\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"fadds\")]\n@@ -705,7 +705,7 @@\n \t(minus:DF (match_operand:DF 1 \"s_register_operand\" \"w\")\n \t\t  (match_operand:DF 2 \"s_register_operand\" \"w\")))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP_DOUBLE\"\n-  \"fsubd%?\\\\t%P0, %P1, %P2\"\n+  \"vsub%?.f64\\\\t%P0, %P1, %P2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"faddd\")]\n@@ -722,7 +722,7 @@\n \t(div:SF (match_operand:SF 1 \"s_register_operand\" \"t,t\")\n \t\t(match_operand:SF 2 \"s_register_operand\" \"t,t\")))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP\"\n-  \"fdivs%?\\\\t%0, %1, %2\"\n+  \"vdiv%?.f32\\\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"arch\" \"*,armv6_or_vfpv3\")\n@@ -734,7 +734,7 @@\n \t(div:DF (match_operand:DF 1 \"s_register_operand\" \"w,w\")\n \t\t(match_operand:DF 2 \"s_register_operand\" \"w,w\")))]\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP_DOUBLE\"\n-  \"fdivd%?\\\\t%P0, %P1, %P2\"\n+  \"vdiv%?.f64\\\\t%P0, %P1, %P2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"arch\" \"*,armv6_or_vfpv3\")"}, {"sha": "a8fbe0241052411a4ced942df00807a89f3b8956", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/436c249d4410d7a0fe6be16d7cedf0826856ded8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/436c249d4410d7a0fe6be16d7cedf0826856ded8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=436c249d4410d7a0fe6be16d7cedf0826856ded8", "patch": "@@ -1,3 +1,7 @@\n+2014-09-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/arm/vfp-1.c: Updated expected assembly.\n+\n 2014-09-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/arm/pr51835.c: Update expected assembly."}, {"sha": "3027f1057b6379d7290bb7970affc7a524244bf7", "filename": "gcc/testsuite/gcc.target/arm/vfp-1.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/436c249d4410d7a0fe6be16d7cedf0826856ded8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvfp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/436c249d4410d7a0fe6be16d7cedf0826856ded8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvfp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvfp-1.c?ref=436c249d4410d7a0fe6be16d7cedf0826856ded8", "patch": "@@ -11,19 +11,19 @@ volatile float f1, f2, f3;\n \n void test_sf() {\n   /* abssf2_vfp */\n-  /* { dg-final { scan-assembler \"fabss\" } } */\n+  /* { dg-final { scan-assembler \"vabs.f32\" } } */\n   f1 = fabsf (f1);\n   /* negsf2_vfp */\n-  /* { dg-final { scan-assembler \"fnegs\" } } */\n+  /* { dg-final { scan-assembler \"vneg.f32\" } } */\n   f1 = -f1;\n   /* addsf3_vfp */\n-  /* { dg-final { scan-assembler \"fadds\" } } */\n+  /* { dg-final { scan-assembler \"vadd.f32\" } } */\n   f1 = f2 + f3;\n   /* subsf3_vfp */\n-  /* { dg-final { scan-assembler \"fsubs\" } } */\n+  /* { dg-final { scan-assembler \"vsub.f32\" } } */\n   f1 = f2 - f3;\n   /* divsf3_vfp */\n-  /* { dg-final { scan-assembler \"fdivs\" } } */\n+  /* { dg-final { scan-assembler \"vdiv.f32\" } } */\n   f1 = f2 / f3;\n   /* mulsf3_vfp */\n   /* { dg-final { scan-assembler \"fmuls\" } } */\n@@ -52,19 +52,19 @@ volatile double d1, d2, d3;\n \n void test_df() {\n   /* absdf2_vfp */\n-  /* { dg-final { scan-assembler \"fabsd\" } } */\n+  /* { dg-final { scan-assembler \"vabs.f64\" } } */\n   d1 = fabs (d1);\n   /* negdf2_vfp */\n-  /* { dg-final { scan-assembler \"fnegd\" } } */\n+  /* { dg-final { scan-assembler \"vneg.f64\" } } */\n   d1 = -d1;\n   /* adddf3_vfp */\n-  /* { dg-final { scan-assembler \"faddd\" } } */\n+  /* { dg-final { scan-assembler \"vadd.f64\" } } */\n   d1 = d2 + d3;\n   /* subdf3_vfp */\n-  /* { dg-final { scan-assembler \"fsubd\" } } */\n+  /* { dg-final { scan-assembler \"vsub.f64\" } } */\n   d1 = d2 - d3;\n   /* divdf3_vfp */\n-  /* { dg-final { scan-assembler \"fdivd\" } } */\n+  /* { dg-final { scan-assembler \"vdiv.f64\" } } */\n   d1 = d2 / d3;\n   /* muldf3_vfp */\n   /* { dg-final { scan-assembler \"fmuld\" } } */"}]}