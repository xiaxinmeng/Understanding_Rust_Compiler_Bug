{"sha": "54f4eaf08d074856b3eaff2eeced8dc3ef094047", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRmNGVhZjA4ZDA3NDg1NmIzZWFmZjJlZWNlZDhkYzNlZjA5NDA0Nw==", "commit": {"author": {"name": "Marcus Shawcroft", "email": "marcus.shawcroft@arm.com", "date": "2012-11-15T18:39:47Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2012-11-15T18:39:47Z"}, "message": "soft-fp updated from GLIBC upstream.\n\nFrom-SVN: r193540", "tree": {"sha": "234e783082bc264e502d500b697b447066c59bdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/234e783082bc264e502d500b697b447066c59bdb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54f4eaf08d074856b3eaff2eeced8dc3ef094047", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f4eaf08d074856b3eaff2eeced8dc3ef094047", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54f4eaf08d074856b3eaff2eeced8dc3ef094047", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f4eaf08d074856b3eaff2eeced8dc3ef094047/comments", "author": {"login": "mshawcroft", "id": 6357566, "node_id": "MDQ6VXNlcjYzNTc1NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6357566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mshawcroft", "html_url": "https://github.com/mshawcroft", "followers_url": "https://api.github.com/users/mshawcroft/followers", "following_url": "https://api.github.com/users/mshawcroft/following{/other_user}", "gists_url": "https://api.github.com/users/mshawcroft/gists{/gist_id}", "starred_url": "https://api.github.com/users/mshawcroft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mshawcroft/subscriptions", "organizations_url": "https://api.github.com/users/mshawcroft/orgs", "repos_url": "https://api.github.com/users/mshawcroft/repos", "events_url": "https://api.github.com/users/mshawcroft/events{/privacy}", "received_events_url": "https://api.github.com/users/mshawcroft/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "59bdc31c02bd400b727ebd4b2d6e57bd558dab37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59bdc31c02bd400b727ebd4b2d6e57bd558dab37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59bdc31c02bd400b727ebd4b2d6e57bd558dab37"}], "stats": {"total": 75, "additions": 46, "deletions": 29}, "files": [{"sha": "1cd6f9fef948416c9c6b54fa43a85084827668cb", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f4eaf08d074856b3eaff2eeced8dc3ef094047/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f4eaf08d074856b3eaff2eeced8dc3ef094047/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=54f4eaf08d074856b3eaff2eeced8dc3ef094047", "patch": "@@ -1,3 +1,7 @@\n+2012-11-15  Marcus Shawcroft <marcus.shawcroft@arm.com>\n+\n+\t* soft-fp: Updated from glibc upstream.\n+\n 2012-11-06  Ian Lance Taylor  <iant@google.com>\n \n \t* generic-morestack.c (__generic_morestack): Align the returned"}, {"sha": "12fb16e5efe9eb4fe57ea71cd4534eaa91ead5b4", "filename": "libgcc/soft-fp/op-common.h", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f4eaf08d074856b3eaff2eeced8dc3ef094047/libgcc%2Fsoft-fp%2Fop-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f4eaf08d074856b3eaff2eeced8dc3ef094047/libgcc%2Fsoft-fp%2Fop-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fop-common.h?ref=54f4eaf08d074856b3eaff2eeced8dc3ef094047", "patch": "@@ -1,5 +1,5 @@\n /* Software floating-point emulation. Common operations.\n-   Copyright (C) 1997,1998,1999,2006,2007 Free Software Foundation, Inc.\n+   Copyright (C) 1997,1998,1999,2006,2007,2012 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),\n@@ -134,6 +134,12 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define _FP_PACK_SEMIRAW(fs, wc, X)\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\\\n   _FP_ROUND(wc, X);\t\t\t\t\t\t\\\n+  if (X##_e == 0 && !_FP_FRAC_ZEROP_##wc(X))\t\t\t\\\n+\t{ \\\n+\t  if ((FP_CUR_EXCEPTIONS & FP_EX_INEXACT)\t\t\\\n+\t      || (FP_TRAPPING_EXCEPTIONS & FP_EX_UNDERFLOW))\t\\\n+\t    FP_SET_EXCEPTION(FP_EX_UNDERFLOW);\t\t\t\\\n+\t} \\\n   if (_FP_FRAC_HIGH_##fs(X)\t\t\t\t\t\\\n       & (_FP_OVERFLOW_##fs >> 1))\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n@@ -143,20 +149,15 @@ do {\t\t\t\t\t\t\t\t\\\n \t_FP_OVERFLOW_SEMIRAW(fs, wc, X);\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   _FP_FRAC_SRL_##wc(X, _FP_WORKBITS);\t\t\t\t\\\n-  if (!_FP_EXP_NORMAL(fs, wc, X) && !_FP_FRAC_ZEROP_##wc(X))\t\\\n+  if (X##_e == _FP_EXPMAX_##fs && !_FP_FRAC_ZEROP_##wc(X))\t\\\n     {\t\t\t\t\t\t\t\t\\\n-      if (X##_e == 0)\t\t\t\t\t\t\\\n-\tFP_SET_EXCEPTION(FP_EX_UNDERFLOW);\t\t\t\\\n-      else\t\t\t\t\t\t\t\\\n+      if (!_FP_KEEPNANFRACP)\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\\\n-\t  if (!_FP_KEEPNANFRACP)\t\t\t\t\\\n-\t    {\t\t\t\t\t\t\t\\\n-\t      _FP_FRAC_SET_##wc(X, _FP_NANFRAC_##fs);\t\t\\\n-\t      X##_s = _FP_NANSIGN_##fs;\t\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\\\n-\t    _FP_FRAC_HIGH_RAW_##fs(X) |= _FP_QNANBIT_##fs;\t\\\n+\t  _FP_FRAC_SET_##wc(X, _FP_NANFRAC_##fs);\t\t\\\n+\t  X##_s = _FP_NANSIGN_##fs;\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\\\n+\t_FP_FRAC_HIGH_RAW_##fs(X) |= _FP_QNANBIT_##fs;\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n } while (0)\n \n@@ -226,13 +227,16 @@ do {\t\t\t\t\t\t\t\t\\\n \t      {\t\t\t\t\t\t\t\\\n \t        X##_e = 1;\t\t\t\t\t\\\n \t        _FP_FRAC_SET_##wc(X, _FP_ZEROFRAC_##wc);\t\\\n+\t\tFP_SET_EXCEPTION(FP_EX_INEXACT);\t\t\\\n \t      }\t\t\t\t\t\t\t\\\n \t    else\t\t\t\t\t\t\\\n \t      {\t\t\t\t\t\t\t\\\n \t\tX##_e = 0;\t\t\t\t\t\\\n \t\t_FP_FRAC_SRL_##wc(X, _FP_WORKBITS);\t\t\\\n-\t\tFP_SET_EXCEPTION(FP_EX_UNDERFLOW);\t\t\\\n \t      }\t\t\t\t\t\t\t\\\n+\t    if ((FP_CUR_EXCEPTIONS & FP_EX_INEXACT)\t\t\\\n+\t\t|| (FP_TRAPPING_EXCEPTIONS & FP_EX_UNDERFLOW))\t\\\n+\t      FP_SET_EXCEPTION(FP_EX_UNDERFLOW);\t\t\\\n \t  }\t\t\t\t\t\t\t\\\n \telse\t\t\t\t\t\t\t\\\n \t  {\t\t\t\t\t\t\t\\"}, {"sha": "49a87706cc5e62f0b26e0f93d2c7e0ee8eb8ff12", "filename": "libgcc/soft-fp/soft-fp.h", "status": "modified", "additions": 25, "deletions": 16, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f4eaf08d074856b3eaff2eeced8dc3ef094047/libgcc%2Fsoft-fp%2Fsoft-fp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f4eaf08d074856b3eaff2eeced8dc3ef094047/libgcc%2Fsoft-fp%2Fsoft-fp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fsoft-fp.h?ref=54f4eaf08d074856b3eaff2eeced8dc3ef094047", "patch": "@@ -128,6 +128,13 @@\n #define FP_CLEAR_EXCEPTIONS\t\t\t\t\\\n   _fex = 0\n \n+#define FP_CUR_EXCEPTIONS\t\t\t\t\\\n+  (_fex)\n+\n+#ifndef FP_TRAPPING_EXCEPTIONS\n+#define FP_TRAPPING_EXCEPTIONS 0\n+#endif\n+\n #define _FP_ROUND_NEAREST(wc, X)\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n     if ((_FP_FRAC_LOW_##wc(X) & 15) != _FP_WORK_ROUND)\t\\\n@@ -151,22 +158,24 @@ do {\t\t\t\t\t\t\t\\\n #define _FP_ROUND(wc, X)\t\t\t\\\n do {\t\t\t\t\t\t\\\n \tif (_FP_FRAC_LOW_##wc(X) & 7)\t\t\\\n-\t  FP_SET_EXCEPTION(FP_EX_INEXACT);\t\\\n-\tswitch (FP_ROUNDMODE)\t\t\t\\\n-\t{\t\t\t\t\t\\\n-\t  case FP_RND_NEAREST:\t\t\t\\\n-\t    _FP_ROUND_NEAREST(wc,X);\t\t\\\n-\t    break;\t\t\t\t\\\n-\t  case FP_RND_ZERO:\t\t\t\\\n-\t    _FP_ROUND_ZERO(wc,X);\t\t\\\n-\t    break;\t\t\t\t\\\n-\t  case FP_RND_PINF:\t\t\t\\\n-\t    _FP_ROUND_PINF(wc,X);\t\t\\\n-\t    break;\t\t\t\t\\\n-\t  case FP_RND_MINF:\t\t\t\\\n-\t    _FP_ROUND_MINF(wc,X);\t\t\\\n-\t    break;\t\t\t\t\\\n-\t}\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\\\n+\t    FP_SET_EXCEPTION(FP_EX_INEXACT);\t\\\n+\t    switch (FP_ROUNDMODE)\t\t\\\n+\t      {\t\t\t\t\t\\\n+\t      case FP_RND_NEAREST:\t\t\\\n+\t\t_FP_ROUND_NEAREST(wc,X);\t\\\n+\t\tbreak;\t\t\t\t\\\n+\t      case FP_RND_ZERO:\t\t\t\\\n+\t\t_FP_ROUND_ZERO(wc,X);\t\t\\\n+\t\tbreak;\t\t\t\t\\\n+\t      case FP_RND_PINF:\t\t\t\\\n+\t\t_FP_ROUND_PINF(wc,X);\t\t\\\n+\t\tbreak;\t\t\t\t\\\n+\t      case FP_RND_MINF:\t\t\t\\\n+\t\t_FP_ROUND_MINF(wc,X);\t\t\\\n+\t\tbreak;\t\t\t\t\\\n+\t      }\t\t\t\t\t\\\n+\t  }\t\t\t\t\t\\\n } while (0)\n \n #define FP_CLS_NORMAL\t\t0"}]}