{"sha": "3e475d30a363db90039aec1239fcfc1a15e202aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U0NzVkMzBhMzYzZGI5MDAzOWFlYzEyMzlmY2ZjMWExNWUyMDJhYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-11T21:29:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-11T21:29:35Z"}, "message": "re PR c++/48745 ([C++0x] Segmentation fault with list-initialization, void initializers and variadics)\n\n\tPR c++/48745\n\t* pt.c (value_dependent_expr_p): Handle CONSTRUCTOR.\n\nFrom-SVN: r173678", "tree": {"sha": "a8b16159a621db2751e836198a5c16ae09b93deb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8b16159a621db2751e836198a5c16ae09b93deb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e475d30a363db90039aec1239fcfc1a15e202aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e475d30a363db90039aec1239fcfc1a15e202aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e475d30a363db90039aec1239fcfc1a15e202aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e475d30a363db90039aec1239fcfc1a15e202aa/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0126595fee486221f58aa7e5f46064b194337225", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0126595fee486221f58aa7e5f46064b194337225", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0126595fee486221f58aa7e5f46064b194337225"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "fe1ccb57e4840f193e013e0da596a021d559000d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e475d30a363db90039aec1239fcfc1a15e202aa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e475d30a363db90039aec1239fcfc1a15e202aa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3e475d30a363db90039aec1239fcfc1a15e202aa", "patch": "@@ -1,3 +1,8 @@\n+2011-05-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/48745\n+\t* pt.c (value_dependent_expr_p): Handle CONSTRUCTOR.\n+\n 2011-05-11  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* cp-tree.h (TYPENAME_TYPE_FULLNAME, TYPEOF_TYPE_EXPR): Use"}, {"sha": "74d4cbf1eddef85c7f32981a933a918c8c4e889a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e475d30a363db90039aec1239fcfc1a15e202aa/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e475d30a363db90039aec1239fcfc1a15e202aa/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=3e475d30a363db90039aec1239fcfc1a15e202aa", "patch": "@@ -18273,6 +18273,16 @@ value_dependent_expression_p (tree expression)\n \t type-dependent.  */\n       return type_dependent_expression_p (expression);\n \n+    case CONSTRUCTOR:\n+      {\n+\tunsigned ix;\n+\ttree val;\n+\tFOR_EACH_CONSTRUCTOR_VALUE (CONSTRUCTOR_ELTS (expression), ix, val)\n+\t  if (value_dependent_expression_p (val))\n+\t    return true;\n+\treturn false;\n+      }\n+\n     default:\n       /* A constant expression is value-dependent if any subexpression is\n \t value-dependent.  */"}, {"sha": "51aacc5fddbdb2cf2c6d7ce1e9b48199de402922", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e475d30a363db90039aec1239fcfc1a15e202aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e475d30a363db90039aec1239fcfc1a15e202aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3e475d30a363db90039aec1239fcfc1a15e202aa", "patch": "@@ -1,3 +1,7 @@\n+2011-05-11  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/sfinae22.C: New.\n+\n 2011-05-11  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/48889"}, {"sha": "1c3efd2e079caacaf24f4f12d5580bafa91ccc36", "filename": "gcc/testsuite/g++.dg/cpp0x/sfinae22.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e475d30a363db90039aec1239fcfc1a15e202aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e475d30a363db90039aec1239fcfc1a15e202aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae22.C?ref=3e475d30a363db90039aec1239fcfc1a15e202aa", "patch": "@@ -0,0 +1,23 @@\n+// PR c++/48745\n+// { dg-options -std=c++0x }\n+\n+template<class T>\n+struct add_rval_ref {\n+  typedef T&& type;\n+};\n+\n+template<>\n+struct add_rval_ref<void> {\n+  typedef void type;\n+};\n+\n+template<class T>\n+typename add_rval_ref<T>::type create();\n+\n+template<class T, class... Args>\n+decltype(T{create<Args>()...}, char()) f(int);\n+\n+template<class, class...>\n+char (&f(...))[2];\n+\n+static_assert(sizeof(f<int, void>(0)) != 1, \"Error\"); // #"}]}