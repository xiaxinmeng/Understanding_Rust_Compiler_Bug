{"sha": "d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFlMmJiMmQwMWQzMjVkZjY1NDBhY2FmMGViNzhkNmQyYzRmYWE0OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-03-11T12:28:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-11T12:28:50Z"}, "message": "re PR tree-optimization/70177 (ICE in extract_ops_from_tree starting with r233660)\n\n\tPR tree-optimization/70177\n\t* gimple-expr.h (extract_ops_from_tree_1): Renamed to ...\n\t(extract_ops_from_tree): ... this.  In the 2 argument\n\toverload remove _1 suffix.\n\t* gimple-expr.c (extract_ops_from_tree_1): Renamed to ...\n\t(extract_ops_from_tree): ... this.\n\t* gimple.c (gimple_build_assign, gimple_assign_set_rhs_from_tree):\n\tAdjust callers.\n\t* tree-ssa-loop-niter.c (derive_constant_upper_bound): Likewise.\n\t* tree-ssa-forwprop.c (defcodefor_name): Call 3 operand\n\textract_ops_from_tree instead of 2 operand one.\n\n\t* gcc.dg/pr70177.c: New test.\n\nFrom-SVN: r234140", "tree": {"sha": "ea4b9cb38f6e1b75d75051871a5ec7bca5d3bc6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea4b9cb38f6e1b75d75051871a5ec7bca5d3bc6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07350627b62718cd76f10fa50e8533005577d7bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07350627b62718cd76f10fa50e8533005577d7bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07350627b62718cd76f10fa50e8533005577d7bc"}], "stats": {"total": 58, "additions": 46, "deletions": 12}, "files": [{"sha": "d39d197adc95e6ee5a2659eadad2f4d81613569b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49", "patch": "@@ -1,3 +1,17 @@\n+2016-03-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/70177\n+\t* gimple-expr.h (extract_ops_from_tree_1): Renamed to ...\n+\t(extract_ops_from_tree): ... this.  In the 2 argument\n+\toverload remove _1 suffix.\n+\t* gimple-expr.c (extract_ops_from_tree_1): Renamed to ...\n+\t(extract_ops_from_tree): ... this.\n+\t* gimple.c (gimple_build_assign, gimple_assign_set_rhs_from_tree):\n+\tAdjust callers.\n+\t* tree-ssa-loop-niter.c (derive_constant_upper_bound): Likewise.\n+\t* tree-ssa-forwprop.c (defcodefor_name): Call 3 operand\n+\textract_ops_from_tree instead of 2 operand one.\n+\n 2016-03-11  Alan Lawrence  <alan.lawrence@arm.com>\n \n \tPR tree-optimization/70013"}, {"sha": "29e9c0a33dcc979c0a11aabd6d119e52fb11c11b", "filename": "gcc/gimple-expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/gcc%2Fgimple-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/gcc%2Fgimple-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-expr.c?ref=d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49", "patch": "@@ -519,8 +519,8 @@ create_tmp_reg_fn (struct function *fn, tree type, const char *prefix)\n    *OP1_P, *OP2_P and *OP3_P respectively.  */\n \n void\n-extract_ops_from_tree_1 (tree expr, enum tree_code *subcode_p, tree *op1_p,\n-\t\t\t tree *op2_p, tree *op3_p)\n+extract_ops_from_tree (tree expr, enum tree_code *subcode_p, tree *op1_p,\n+\t\t       tree *op2_p, tree *op3_p)\n {\n   enum gimple_rhs_class grhs_class;\n "}, {"sha": "f2ccd29a94a6a36a09ffa947f117d959ada97689", "filename": "gcc/gimple-expr.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/gcc%2Fgimple-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/gcc%2Fgimple-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-expr.h?ref=d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49", "patch": "@@ -35,8 +35,8 @@ extern tree create_tmp_reg (tree, const char * = NULL);\n extern tree create_tmp_reg_fn (struct function *, tree, const char *);\n \n \n-extern void extract_ops_from_tree_1 (tree, enum tree_code *, tree *, tree *,\n-\t\t\t\t     tree *);\n+extern void extract_ops_from_tree (tree, enum tree_code *, tree *, tree *,\n+\t\t\t\t   tree *);\n extern void gimple_cond_get_ops_from_tree (tree, enum tree_code *, tree *,\n \t\t\t\t\t   tree *);\n extern bool is_gimple_lvalue (tree);\n@@ -146,15 +146,15 @@ is_gimple_constant (const_tree t)\n     }\n }\n \n-/* A wrapper around extract_ops_from_tree_1, for callers which expect\n-   to see only a maximum of two operands.  */\n+/* A wrapper around extract_ops_from_tree with 3 ops, for callers which\n+   expect to see only a maximum of two operands.  */\n \n static inline void\n extract_ops_from_tree (tree expr, enum tree_code *code, tree *op0,\n \t\t       tree *op1)\n {\n   tree op2;\n-  extract_ops_from_tree_1 (expr, code, op0, op1, &op2);\n+  extract_ops_from_tree (expr, code, op0, op1, &op2);\n   gcc_assert (op2 == NULL_TREE);\n }\n "}, {"sha": "b0e19d515cf0baccd64ba11886357785d7a05742", "filename": "gcc/gimple.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49", "patch": "@@ -387,7 +387,7 @@ gimple_build_assign (tree lhs, tree rhs MEM_STAT_DECL)\n   enum tree_code subcode;\n   tree op1, op2, op3;\n \n-  extract_ops_from_tree_1 (rhs, &subcode, &op1, &op2, &op3);\n+  extract_ops_from_tree (rhs, &subcode, &op1, &op2, &op3);\n   return gimple_build_assign (lhs, subcode, op1, op2, op3 PASS_MEM_STAT);\n }\n \n@@ -1578,7 +1578,7 @@ gimple_assign_set_rhs_from_tree (gimple_stmt_iterator *gsi, tree expr)\n   enum tree_code subcode;\n   tree op1, op2, op3;\n \n-  extract_ops_from_tree_1 (expr, &subcode, &op1, &op2, &op3);\n+  extract_ops_from_tree (expr, &subcode, &op1, &op2, &op3);\n   gimple_assign_set_rhs_with_ops (gsi, subcode, op1, op2, op3);\n }\n "}, {"sha": "c6ec9304445345156e60a46567746de215234257", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49", "patch": "@@ -1,3 +1,8 @@\n+2016-03-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/70177\n+\t* gcc.dg/pr70177.c: New test.\n+\n 2016-03-11  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* gfortran.dg/unconstrained_commons.f: Widen regexp to match j_<N>."}, {"sha": "1b2bec11e30ea63e82926c17bcb1d5a2142c4f2f", "filename": "gcc/testsuite/gcc.dg/pr70177.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70177.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70177.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70177.c?ref=d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49", "patch": "@@ -0,0 +1,15 @@\n+/* PR tree-optimization/70177 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int b[128];\n+\n+void\n+foo (int i, int j)\n+{\n+  int c, f, g, h;\n+  for (g = 0; g < 64; g++)\n+    for (h = g, f = 0; f <= i; f++, h++)\n+      for (c = 0; c < j; c++)\n+\tb[h] = 0;\n+}"}, {"sha": "f64ee0a81142b327b442c4fa3bb420120a834053", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49", "patch": "@@ -1477,7 +1477,7 @@ defcodefor_name (tree name, enum tree_code *code, tree *arg1, tree *arg2)\n \t   || GIMPLE_BINARY_RHS\n \t   || GIMPLE_UNARY_RHS\n \t   || GIMPLE_SINGLE_RHS)\n-    extract_ops_from_tree_1 (name, &code1, &arg11, &arg21, &arg31);\n+    extract_ops_from_tree (name, &code1, &arg11, &arg21, &arg31);\n \n   *code = code1;\n   *arg1 = arg11;"}, {"sha": "81689fc1aa432d710dfaa0ca76fc30ab1f09c609", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=d1e2bb2d01d325df6540acaf0eb78d6d2c4faa49", "patch": "@@ -2742,9 +2742,9 @@ static widest_int\n derive_constant_upper_bound (tree val)\n {\n   enum tree_code code;\n-  tree op0, op1;\n+  tree op0, op1, op2;\n \n-  extract_ops_from_tree (val, &code, &op0, &op1);\n+  extract_ops_from_tree (val, &code, &op0, &op1, &op2);\n   return derive_constant_upper_bound_ops (TREE_TYPE (val), op0, code, op1);\n }\n "}]}