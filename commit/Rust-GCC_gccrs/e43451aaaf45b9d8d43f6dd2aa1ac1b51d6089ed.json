{"sha": "e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQzNDUxYWFhZjQ1YjlkOGQ0M2Y2ZGQyYWExYWMxYjUxZDYwODllZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-10-26T09:46:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-10-26T09:46:45Z"}, "message": "i386.md (UNSPEC_VSIBADDR): New.\n\n\t* config/i386/i386.md (UNSPEC_VSIBADDR): New.\n\t* config/i386/predicates.md (vsib_address_operand,\n\tvsib_mem_operator): New predicates.\n\t* config/i386/i386.c (ix86_print_operand_address): Handle\n\tUNSPEC_VSIBADDR addresses.\n\t* config/i386/sse.md (avx2_gathersi<mode>, avx2_gatherdi<mode>,\n\tavx2_gatherdi<mode>256): Adjust expanders to use MEM with\n\tUNSPEC_VSIBADDR address.\n\t(*avx2_gathersi<mode>, *avx2_gatherdi<mode>, *avx2_gatherdi<mode>256):\n\tAdjust insns to use MEM with UNSPEC_VSIBADDR address.\n\n\t* gcc.target/i386/avx2-i32gatherd-1.c: Adjust scan-assembler regex\n\tto work also with -masm=intel and additionally test the xmm vs. ymm\n\tregister type combination on mask/dest and in vsib.\n\t* gcc.target/i386/avx2-i32gatherd256-1.c: Likewise.\n\t* gcc.target/i386/avx2-i32gatherd256-3.c: Likewise.\n\t* gcc.target/i386/avx2-i32gatherd-3.c: Likewise.\n\t* gcc.target/i386/avx2-i32gatherpd-1.c: Likewise.\n\t* gcc.target/i386/avx2-i32gatherpd256-1.c: Likewise.\n\t* gcc.target/i386/avx2-i32gatherpd256-3.c: Likewise.\n\t* gcc.target/i386/avx2-i32gatherpd-3.c: Likewise.\n\t* gcc.target/i386/avx2-i32gatherps-1.c: Likewise.\n\t* gcc.target/i386/avx2-i32gatherps256-1.c: Likewise.\n\t* gcc.target/i386/avx2-i32gatherps256-3.c: Likewise.\n\t* gcc.target/i386/avx2-i32gatherps-3.c: Likewise.\n\t* gcc.target/i386/avx2-i32gatherq-1.c: Likewise.\n\t* gcc.target/i386/avx2-i32gatherq256-1.c: Likewise.\n\t* gcc.target/i386/avx2-i32gatherq256-3.c: Likewise.\n\t* gcc.target/i386/avx2-i32gatherq-3.c: Likewise.\n\t* gcc.target/i386/avx2-i64gatherd-1.c: Likewise.\n\t* gcc.target/i386/avx2-i64gatherd256-1.c: Likewise.\n\t* gcc.target/i386/avx2-i64gatherd256-3.c: Likewise.\n\t* gcc.target/i386/avx2-i64gatherd-3.c: Likewise.\n\t* gcc.target/i386/avx2-i64gatherpd-1.c: Likewise.\n\t* gcc.target/i386/avx2-i64gatherpd256-1.c: Likewise.\n\t* gcc.target/i386/avx2-i64gatherpd256-3.c: Likewise.\n\t* gcc.target/i386/avx2-i64gatherpd-3.c: Likewise.\n\t* gcc.target/i386/avx2-i64gatherps-1.c: Likewise.\n\t* gcc.target/i386/avx2-i64gatherps256-1.c: Likewise.\n\t* gcc.target/i386/avx2-i64gatherps256-3.c: Likewise.\n\t* gcc.target/i386/avx2-i64gatherps-3.c: Likewise.\n\t* gcc.target/i386/avx2-i64gatherq-1.c: Likewise.\n\t* gcc.target/i386/avx2-i64gatherq256-1.c: Likewise.\n\t* gcc.target/i386/avx2-i64gatherq256-3.c: Likewise.\n\t* gcc.target/i386/avx2-i64gatherq-3.c: Likewise.\n\nFrom-SVN: r180520", "tree": {"sha": "c91519d05344769a0667ba605555a25ca11f993b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c91519d05344769a0667ba605555a25ca11f993b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c137ca0a2c514c3d8003b4a38e9b0d1cb3237b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c137ca0a2c514c3d8003b4a38e9b0d1cb3237b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c137ca0a2c514c3d8003b4a38e9b0d1cb3237b2"}], "stats": {"total": 264, "additions": 197, "deletions": 67}, "files": [{"sha": "d4c198664b6add682fba46d3cccc3243bad3044f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,3 +1,16 @@\n+2011-10-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386.md (UNSPEC_VSIBADDR): New.\n+\t* config/i386/predicates.md (vsib_address_operand,\n+\tvsib_mem_operator): New predicates.\n+\t* config/i386/i386.c (ix86_print_operand_address): Handle\n+\tUNSPEC_VSIBADDR addresses.\n+\t* config/i386/sse.md (avx2_gathersi<mode>, avx2_gatherdi<mode>,\n+\tavx2_gatherdi<mode>256): Adjust expanders to use MEM with\n+\tUNSPEC_VSIBADDR address.\n+\t(*avx2_gathersi<mode>, *avx2_gatherdi<mode>, *avx2_gatherdi<mode>256):\n+\tAdjust insns to use MEM with UNSPEC_VSIBADDR address.\n+\n 2011-10-26  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/50763"}, {"sha": "c6e09aecccf063cfe66cfd475b427bb3dc71d0b6", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -14231,7 +14231,20 @@ ix86_print_operand_address (FILE *file, rtx addr)\n   struct ix86_address parts;\n   rtx base, index, disp;\n   int scale;\n-  int ok = ix86_decompose_address (addr, &parts);\n+  int ok;\n+  bool vsib = false;\n+\n+  if (GET_CODE (addr) == UNSPEC && XINT (addr, 1) == UNSPEC_VSIBADDR)\n+    {\n+      ok = ix86_decompose_address (XVECEXP (addr, 0, 0), &parts);\n+      gcc_assert (parts.index == NULL_RTX);\n+      parts.index = XVECEXP (addr, 0, 1);\n+      parts.scale = INTVAL (XVECEXP (addr, 0, 2));\n+      addr = XVECEXP (addr, 0, 0);\n+      vsib = true;\n+    }\n+  else\n+    ok = ix86_decompose_address (addr, &parts);\n \n   gcc_assert (ok);\n \n@@ -14328,8 +14341,8 @@ ix86_print_operand_address (FILE *file, rtx addr)\n \t  if (index)\n \t    {\n \t      putc (',', file);\n-\t      print_reg (index, code, file);\n-\t      if (scale != 1)\n+\t      print_reg (index, vsib ? 0 : code, file);\n+\t      if (scale != 1 || vsib)\n \t\tfprintf (file, \",%d\", scale);\n \t    }\n \t  putc (')', file);\n@@ -14379,8 +14392,8 @@ ix86_print_operand_address (FILE *file, rtx addr)\n \t  if (index)\n \t    {\n \t      putc ('+', file);\n-\t      print_reg (index, code, file);\n-\t      if (scale != 1)\n+\t      print_reg (index, vsib ? 0 : code, file);\n+\t      if (scale != 1 || vsib)\n \t\tfprintf (file, \"*%d\", scale);\n \t    }\n \t  putc (']', file);"}, {"sha": "6eb6152e50412c0f029544e4c916864aea246fd8", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -237,6 +237,7 @@\n   UNSPEC_VPERMSF\n   UNSPEC_VPERMTI\n   UNSPEC_GATHER\n+  UNSPEC_VSIBADDR\n \n   ;; For BMI support\n   UNSPEC_BEXTR"}, {"sha": "48e110ad164397ac323c9a62fa01a0baa71eda4e", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -825,6 +825,42 @@\n   return parts.seg == SEG_DEFAULT;\n })\n \n+;; Return true if op if a valid base register, displacement or\n+;; sum of base register and displacement for VSIB addressing.\n+(define_predicate \"vsib_address_operand\"\n+  (match_operand 0 \"address_operand\")\n+{\n+  struct ix86_address parts;\n+  int ok;\n+  rtx disp;\n+\n+  ok = ix86_decompose_address (op, &parts);\n+  gcc_assert (ok);\n+  if (parts.index || parts.seg != SEG_DEFAULT)\n+    return false;\n+\n+  /* VSIB addressing doesn't support (%rip).  */\n+  if (parts.disp && GET_CODE (parts.disp) == CONST)\n+    {\n+      disp = XEXP (parts.disp, 0);\n+      if (GET_CODE (disp) == PLUS)\n+\tdisp = XEXP (disp, 0);\n+      if (GET_CODE (disp) == UNSPEC)\n+\tswitch (XINT (disp, 1))\n+\t  {\n+\t  case UNSPEC_GOTPCREL:\n+\t  case UNSPEC_PCREL:\n+\t  case UNSPEC_GOTNTPOFF:\n+\t    return false;\n+\t  }\n+    }\n+\n+  return true;\n+})\n+\n+(define_predicate \"vsib_mem_operator\"\n+  (match_code \"mem\"))\n+\n ;; Return true if the rtx is known to be at least 32 bits aligned.\n (define_predicate \"aligned_operand\"\n   (match_operand 0 \"general_operand\")"}, {"sha": "73429e472bade1bfc184cb7a56aaee9516efd5d0", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 60, "deletions": 30, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -12693,28 +12693,38 @@\n   [(parallel [(set (match_operand:VEC_GATHER_MODE 0 \"register_operand\" \"\")\n \t\t   (unspec:VEC_GATHER_MODE\n \t\t     [(match_operand:VEC_GATHER_MODE 1 \"register_operand\" \"\")\n-\t\t      (match_operand 2 \"register_operand\" \"\")\n+\t\t      (mem:<ssescalarmode>\n+\t\t\t(match_par_dup 7\n+\t\t\t  [(match_operand 2 \"vsib_address_operand\" \"\")\n+\t\t\t   (match_operand:<VEC_GATHER_MODE> 3 \"register_operand\" \"\")\n+\t\t\t   (match_operand:SI 5 \"const1248_operand \" \"\")]))\n \t\t      (mem:BLK (scratch))\n-\t\t      (match_operand:<VEC_GATHER_MODE> 3 \"register_operand\" \"\")\n-\t\t      (match_operand:VEC_GATHER_MODE 4 \"register_operand\" \"\")\n-\t\t      (match_operand:SI 5 \"const1248_operand \" \"\")]\n+\t\t      (match_operand:VEC_GATHER_MODE 4 \"register_operand\" \"\")]\n \t\t     UNSPEC_GATHER))\n \t      (clobber (match_scratch:VEC_GATHER_MODE 6 \"\"))])]\n-  \"TARGET_AVX2\")\n+  \"TARGET_AVX2\"\n+{\n+  operands[7]\n+    = gen_rtx_UNSPEC (Pmode, gen_rtvec (3, operands[2], operands[3],\n+\t\t\t\t\toperands[5]), UNSPEC_VSIBADDR);\n+})\n \n (define_insn \"*avx2_gathersi<mode>\"\n   [(set (match_operand:VEC_GATHER_MODE 0 \"register_operand\" \"=&x\")\n \t(unspec:VEC_GATHER_MODE\n \t  [(match_operand:VEC_GATHER_MODE 2 \"register_operand\" \"0\")\n-\t   (match_operand:P 3 \"register_operand\" \"r\")\n+\t   (match_operator:<ssescalarmode> 7 \"vsib_mem_operator\"\n+\t     [(unspec:P\n+\t\t[(match_operand:P 3 \"vsib_address_operand\" \"p\")\n+\t\t (match_operand:<VEC_GATHER_MODE> 4 \"register_operand\" \"x\")\n+\t\t (match_operand:SI 6 \"const1248_operand\" \"n\")]\n+\t\tUNSPEC_VSIBADDR)])\n \t   (mem:BLK (scratch))\n-\t   (match_operand:<VEC_GATHER_MODE> 4 \"register_operand\" \"x\")\n-\t   (match_operand:VEC_GATHER_MODE 5 \"register_operand\" \"1\")\n-\t   (match_operand:SI 6 \"const1248_operand\" \"n\")]\n+\t   (match_operand:VEC_GATHER_MODE 5 \"register_operand\" \"1\")]\n \t  UNSPEC_GATHER))\n    (clobber (match_scratch:VEC_GATHER_MODE 1 \"=&x\"))]\n   \"TARGET_AVX2\"\n-  \"v<sseintprefix>gatherd<ssemodesuffix>\\t{%1, (%3, %4, %p6), %0|%0, (%3, %4, %p6), %1}\"\n+  \"v<sseintprefix>gatherd<ssemodesuffix>\\t{%1, %7, %0|%0, %7, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n@@ -12723,28 +12733,38 @@\n   [(parallel [(set (match_operand:VEC_GATHER_MODE 0 \"register_operand\" \"\")\n \t\t   (unspec:VEC_GATHER_MODE\n \t\t     [(match_operand:VEC_GATHER_MODE 1 \"register_operand\" \"\")\n-\t\t      (match_operand 2 \"register_operand\" \"\")\n+\t\t      (mem:<ssescalarmode>\n+\t\t\t(match_par_dup 7\n+\t\t\t  [(match_operand 2 \"vsib_address_operand\" \"\")\n+\t\t\t   (match_operand:<AVXMODE48P_DI> 3 \"register_operand\" \"\")\n+\t\t\t   (match_operand:SI 5 \"const1248_operand \" \"\")]))\n \t\t      (mem:BLK (scratch))\n-\t\t      (match_operand:<AVXMODE48P_DI> 3 \"register_operand\" \"\")\n-\t\t      (match_operand:VEC_GATHER_MODE 4 \"register_operand\" \"\")\n-\t\t      (match_operand:SI 5 \"const1248_operand \" \"\")]\n+\t\t      (match_operand:VEC_GATHER_MODE 4 \"register_operand\" \"\")]\n \t\t     UNSPEC_GATHER))\n \t      (clobber (match_scratch:VEC_GATHER_MODE 6 \"\"))])]\n-  \"TARGET_AVX2\")\n+  \"TARGET_AVX2\"\n+{\n+  operands[7]\n+    = gen_rtx_UNSPEC (Pmode, gen_rtvec (3, operands[2], operands[3],\n+\t\t\t\t\toperands[5]), UNSPEC_VSIBADDR);\n+})\n \n (define_insn \"*avx2_gatherdi<mode>\"\n   [(set (match_operand:AVXMODE48P_DI 0 \"register_operand\" \"=&x\")\n \t(unspec:AVXMODE48P_DI\n \t  [(match_operand:AVXMODE48P_DI 2 \"register_operand\" \"0\")\n-\t   (match_operand:P 3 \"register_operand\" \"r\")\n+\t   (match_operator:<ssescalarmode> 7 \"vsib_mem_operator\"\n+\t     [(unspec:P\n+\t\t[(match_operand:P 3 \"vsib_address_operand\" \"p\")\n+\t\t (match_operand:<AVXMODE48P_DI> 4 \"register_operand\" \"x\")\n+\t\t (match_operand:SI 6 \"const1248_operand\" \"n\")]\n+\t\tUNSPEC_VSIBADDR)])\n \t   (mem:BLK (scratch))\n-\t   (match_operand:<AVXMODE48P_DI> 4 \"register_operand\" \"x\")\n-\t   (match_operand:AVXMODE48P_DI 5 \"register_operand\" \"1\")\n-\t   (match_operand:SI 6 \"const1248_operand\" \"n\")]\n+\t   (match_operand:AVXMODE48P_DI 5 \"register_operand\" \"1\")]\n \t  UNSPEC_GATHER))\n    (clobber (match_scratch:AVXMODE48P_DI 1 \"=&x\"))]\n   \"TARGET_AVX2\"\n-  \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%1, (%3, %4, %p6), %0|%0, (%3, %4, %p6), %1}\"\n+  \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%1, %7, %0|%0, %7, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n@@ -12755,28 +12775,38 @@\n   [(parallel [(set (match_operand:VI4F_128 0 \"register_operand\" \"\")\n \t\t   (unspec:VI4F_128\n \t\t     [(match_operand:VI4F_128 1 \"register_operand\" \"\")\n-\t\t      (match_operand 2 \"register_operand\" \"\")\n+\t\t      (mem:<ssescalarmode>\n+\t\t\t(match_par_dup 7\n+\t\t\t  [(match_operand 2 \"vsib_address_operand\" \"\")\n+\t\t\t   (match_operand:V4DI 3 \"register_operand\" \"\")\n+\t\t\t   (match_operand:SI 5 \"const1248_operand \" \"\")]))\n \t\t      (mem:BLK (scratch))\n-\t\t      (match_operand:V4DI 3 \"register_operand\" \"\")\n-\t\t      (match_operand:VI4F_128 4 \"register_operand\" \"\")\n-\t\t      (match_operand:SI 5 \"const1248_operand \" \"\")]\n+\t\t      (match_operand:VI4F_128 4 \"register_operand\" \"\")]\n \t\t     UNSPEC_GATHER))\n \t      (clobber (match_scratch:VI4F_128 6 \"\"))])]\n-  \"TARGET_AVX2\")\n+  \"TARGET_AVX2\"\n+{\n+  operands[7]\n+    = gen_rtx_UNSPEC (Pmode, gen_rtvec (3, operands[2], operands[3],\n+\t\t\t\t\toperands[5]), UNSPEC_VSIBADDR);\n+})\n \n (define_insn \"*avx2_gatherdi<mode>256\"\n   [(set (match_operand:VI4F_128 0 \"register_operand\" \"=x\")\n \t(unspec:VI4F_128\n \t  [(match_operand:VI4F_128 2 \"register_operand\" \"0\")\n-\t   (match_operand:P 3 \"register_operand\" \"r\")\n+\t   (match_operator:<ssescalarmode> 7 \"vsib_mem_operator\"\n+\t     [(unspec:P\n+\t\t[(match_operand:P 3 \"vsib_address_operand\" \"p\")\n+\t\t (match_operand:V4DI 4 \"register_operand\" \"x\")\n+\t\t (match_operand:SI 6 \"const1248_operand\" \"n\")]\n+\t\tUNSPEC_VSIBADDR)])\n \t   (mem:BLK (scratch))\n-\t   (match_operand:V4DI 4 \"register_operand\" \"x\")\n-\t   (match_operand:VI4F_128 5 \"register_operand\" \"1\")\n-\t   (match_operand:SI 6 \"const1248_operand\" \"n\")]\n+\t   (match_operand:VI4F_128 5 \"register_operand\" \"1\")]\n \t  UNSPEC_GATHER)) \n    (clobber (match_scratch:VI4F_128 1 \"=&x\"))]\n   \"TARGET_AVX2\"\n-  \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%1, (%3, %4, %p6), %0|%0, (%3, %4, %p6), %1}\"\n+  \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%1, %7, %0|%0, %7, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])"}, {"sha": "33542ac3ad635fe6fc2b1e0292aa5f0b76647af4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,3 +1,40 @@\n+2011-10-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.target/i386/avx2-i32gatherd-1.c: Adjust scan-assembler regex\n+\tto work also with -masm=intel and additionally test the xmm vs. ymm\n+\tregister type combination on mask/dest and in vsib.\n+\t* gcc.target/i386/avx2-i32gatherd256-1.c: Likewise.\n+\t* gcc.target/i386/avx2-i32gatherd256-3.c: Likewise.\n+\t* gcc.target/i386/avx2-i32gatherd-3.c: Likewise.\n+\t* gcc.target/i386/avx2-i32gatherpd-1.c: Likewise.\n+\t* gcc.target/i386/avx2-i32gatherpd256-1.c: Likewise.\n+\t* gcc.target/i386/avx2-i32gatherpd256-3.c: Likewise.\n+\t* gcc.target/i386/avx2-i32gatherpd-3.c: Likewise.\n+\t* gcc.target/i386/avx2-i32gatherps-1.c: Likewise.\n+\t* gcc.target/i386/avx2-i32gatherps256-1.c: Likewise.\n+\t* gcc.target/i386/avx2-i32gatherps256-3.c: Likewise.\n+\t* gcc.target/i386/avx2-i32gatherps-3.c: Likewise.\n+\t* gcc.target/i386/avx2-i32gatherq-1.c: Likewise.\n+\t* gcc.target/i386/avx2-i32gatherq256-1.c: Likewise.\n+\t* gcc.target/i386/avx2-i32gatherq256-3.c: Likewise.\n+\t* gcc.target/i386/avx2-i32gatherq-3.c: Likewise.\n+\t* gcc.target/i386/avx2-i64gatherd-1.c: Likewise.\n+\t* gcc.target/i386/avx2-i64gatherd256-1.c: Likewise.\n+\t* gcc.target/i386/avx2-i64gatherd256-3.c: Likewise.\n+\t* gcc.target/i386/avx2-i64gatherd-3.c: Likewise.\n+\t* gcc.target/i386/avx2-i64gatherpd-1.c: Likewise.\n+\t* gcc.target/i386/avx2-i64gatherpd256-1.c: Likewise.\n+\t* gcc.target/i386/avx2-i64gatherpd256-3.c: Likewise.\n+\t* gcc.target/i386/avx2-i64gatherpd-3.c: Likewise.\n+\t* gcc.target/i386/avx2-i64gatherps-1.c: Likewise.\n+\t* gcc.target/i386/avx2-i64gatherps256-1.c: Likewise.\n+\t* gcc.target/i386/avx2-i64gatherps256-3.c: Likewise.\n+\t* gcc.target/i386/avx2-i64gatherps-3.c: Likewise.\n+\t* gcc.target/i386/avx2-i64gatherq-1.c: Likewise.\n+\t* gcc.target/i386/avx2-i64gatherq256-1.c: Likewise.\n+\t* gcc.target/i386/avx2-i64gatherq256-3.c: Likewise.\n+\t* gcc.target/i386/avx2-i64gatherq-3.c: Likewise.\n+\n 2011-10-26  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/50763"}, {"sha": "ae3b1d577b42cbc8cb3b011b8dd5cafc65414b21", "filename": "gcc/testsuite/gcc.target/i386/avx2-i32gatherd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherd-1.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vpgatherdd\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vpgatherdd\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "fc8fedea076c8f0552e884007ce25bc235a4c5ab", "filename": "gcc/testsuite/gcc.target/i386/avx2-i32gatherd-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherd-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherd-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherd-3.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vpgatherdd\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vpgatherdd\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "afc73b9b18b5ce7eb5b1612ed767208f07341bfa", "filename": "gcc/testsuite/gcc.target/i386/avx2-i32gatherd256-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherd256-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherd256-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherd256-1.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vpgatherdd\\[ \\\\t\\]+\\[^\\n\\]*%ymm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vpgatherdd\\[ \\\\t\\]+\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "d0c86429449ad791a9481c6c3d91a2891fc0e2ab", "filename": "gcc/testsuite/gcc.target/i386/avx2-i32gatherd256-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherd256-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherd256-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherd256-3.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vpgatherdd\\[ \\\\t\\]+\\[^\\n\\]*%ymm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vpgatherdd\\[ \\\\t\\]+\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "860cac448d740327d3988e69a34d57cfc4becd54", "filename": "gcc/testsuite/gcc.target/i386/avx2-i32gatherpd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherpd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherpd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherpd-1.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vgatherdpd\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vgatherdpd\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "5e1d4864bdf323f860bf1a475b4d3206f624a416", "filename": "gcc/testsuite/gcc.target/i386/avx2-i32gatherpd-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherpd-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherpd-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherpd-3.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vgatherdpd\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vgatherdpd\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "00b6a35c59d6cbbfe027bb0be7877fe5387d54bc", "filename": "gcc/testsuite/gcc.target/i386/avx2-i32gatherpd256-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherpd256-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherpd256-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherpd256-1.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vgatherdpd\\[ \\\\t\\]+\\[^\\n\\]*%ymm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vgatherdpd\\[ \\\\t\\]+\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "336fb299b0f77bf6fdfdf945dfe9acb3ef045318", "filename": "gcc/testsuite/gcc.target/i386/avx2-i32gatherpd256-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherpd256-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherpd256-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherpd256-3.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vgatherdpd\\[ \\\\t\\]+\\[^\\n\\]*%ymm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vgatherdpd\\[ \\\\t\\]+\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "c43687c4d01c3c70ecafe28bf12bb139c5934aeb", "filename": "gcc/testsuite/gcc.target/i386/avx2-i32gatherps-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherps-1.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vgatherdps\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vgatherdps\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "76b46fb23ab5bb8e7974b349f8eb969a819d973f", "filename": "gcc/testsuite/gcc.target/i386/avx2-i32gatherps-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherps-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherps-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherps-3.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vgatherdps\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vgatherdps\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "f09a0ff32f6a9c7b6e086379502c5c92be59cc4c", "filename": "gcc/testsuite/gcc.target/i386/avx2-i32gatherps256-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherps256-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherps256-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherps256-1.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vgatherdps\\[ \\\\t\\]+\\[^\\n\\]*%ymm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vgatherdps\\[ \\\\t\\]+\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "34b7b8d72fe52e4751ece7ebc71629e4ce552ecf", "filename": "gcc/testsuite/gcc.target/i386/avx2-i32gatherps256-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherps256-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherps256-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherps256-3.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vgatherdps\\[ \\\\t\\]+\\[^\\n\\]*%ymm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vgatherdps\\[ \\\\t\\]+\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "0b250e5dd2ca5e217562a9beb8a64a4460eff07c", "filename": "gcc/testsuite/gcc.target/i386/avx2-i32gatherq-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherq-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherq-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherq-1.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vpgatherdq\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vpgatherdq\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "d87400c77dbda8c323dbe1005b64150f9b34ab5f", "filename": "gcc/testsuite/gcc.target/i386/avx2-i32gatherq-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherq-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherq-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherq-3.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vpgatherdq\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vpgatherdq\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "e8651438a9bd02754d8928508e6f57afb6ee93fe", "filename": "gcc/testsuite/gcc.target/i386/avx2-i32gatherq256-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherq256-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherq256-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherq256-1.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vpgatherdq\\[ \\\\t\\]+\\[^\\n\\]*%ymm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vpgatherdq\\[ \\\\t\\]+\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "7b6f4491aa02a7a6d043d56a6c56ae569309f4a4", "filename": "gcc/testsuite/gcc.target/i386/avx2-i32gatherq256-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherq256-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherq256-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i32gatherq256-3.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vpgatherdq\\[ \\\\t\\]+\\[^\\n\\]*%ymm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vpgatherdq\\[ \\\\t\\]+\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "f2ade8415d3bcb8ee443cd3eb7bc90262a6b9096", "filename": "gcc/testsuite/gcc.target/i386/avx2-i64gatherd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherd-1.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vpgatherqd\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vpgatherqd\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "265713da5043031b4a0d045128d1147083e7db42", "filename": "gcc/testsuite/gcc.target/i386/avx2-i64gatherd-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherd-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherd-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherd-3.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vpgatherqd\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vpgatherqd\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "ccc16e523c8d69163b2d2024224ce5b8a3ef7331", "filename": "gcc/testsuite/gcc.target/i386/avx2-i64gatherd256-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherd256-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherd256-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherd256-1.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vpgatherqd\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vpgatherqd\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "815e70828248da4f919f3b579ba656688c570e9c", "filename": "gcc/testsuite/gcc.target/i386/avx2-i64gatherd256-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherd256-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherd256-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherd256-3.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vpgatherqd\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vpgatherqd\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "895b248c722321e64b339c4c51809ccc749e22af", "filename": "gcc/testsuite/gcc.target/i386/avx2-i64gatherpd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherpd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherpd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherpd-1.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vgatherqpd\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vgatherqpd\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "436ffe90a902a0cc5504e5fe4811d0cdc7e36019", "filename": "gcc/testsuite/gcc.target/i386/avx2-i64gatherpd-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherpd-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherpd-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherpd-3.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vgatherqpd\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vgatherqpd\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "bc22f02e56b215f6514a3137a2a662203746e3f2", "filename": "gcc/testsuite/gcc.target/i386/avx2-i64gatherpd256-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherpd256-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherpd256-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherpd256-1.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vgatherqpd\\[ \\\\t\\]+\\[^\\n\\]*%ymm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vgatherqpd\\[ \\\\t\\]+\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "505722a8a79c2b15ca4ba9d5e62b11f9904891db", "filename": "gcc/testsuite/gcc.target/i386/avx2-i64gatherpd256-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherpd256-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherpd256-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherpd256-3.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vgatherqpd\\[ \\\\t\\]+\\[^\\n\\]*%ymm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vgatherqpd\\[ \\\\t\\]+\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "c7d7c0787b2b485252805851c24ac114a8cecd23", "filename": "gcc/testsuite/gcc.target/i386/avx2-i64gatherps-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherps-1.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vgatherqps\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vgatherqps\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "ca7162ad92b4d5d948447a6ff97c6a980ded14e8", "filename": "gcc/testsuite/gcc.target/i386/avx2-i64gatherps-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherps-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherps-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherps-3.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vgatherqps\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vgatherqps\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "6612e9940055cc99bf20313a6289002b24a18d90", "filename": "gcc/testsuite/gcc.target/i386/avx2-i64gatherps256-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherps256-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherps256-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherps256-1.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vgatherqps\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vgatherqps\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "f05e4a208c12cacbd561396136ea5f1c153073f3", "filename": "gcc/testsuite/gcc.target/i386/avx2-i64gatherps256-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherps256-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherps256-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherps256-3.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vgatherqps\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vgatherqps\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "8f9752d2c84267c8eb03933a6936287f59d9f172", "filename": "gcc/testsuite/gcc.target/i386/avx2-i64gatherq-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherq-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherq-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherq-1.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vpgatherqq\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vpgatherqq\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "c1c31c7288ed6a9f12048ff8d78925e01557da45", "filename": "gcc/testsuite/gcc.target/i386/avx2-i64gatherq-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherq-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherq-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherq-3.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vpgatherqq\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vpgatherqq\\[ \\\\t\\]+\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\\[^\\n\\]*xmm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "c873cb95487b84bfaff85b0c4c2621b424ed54a6", "filename": "gcc/testsuite/gcc.target/i386/avx2-i64gatherq256-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherq256-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherq256-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherq256-1.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vpgatherqq\\[ \\\\t\\]+\\[^\\n\\]*%ymm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vpgatherqq\\[ \\\\t\\]+\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}, {"sha": "f60ad22746ac6db47ee3354e5439cca817fb6895", "filename": "gcc/testsuite/gcc.target/i386/avx2-i64gatherq256-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherq256-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherq256-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-i64gatherq256-3.c?ref=e43451aaaf45b9d8d43f6dd2aa1ac1b51d6089ed", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx2 -O2\" } */\n-/* { dg-final { scan-assembler \"vpgatherqq\\[ \\\\t\\]+\\[^\\n\\]*%ymm\\[0-9\\]\" } } */\n+/* { dg-final { scan-assembler \"vpgatherqq\\[ \\\\t\\]+\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\\[^\\n\\]*ymm\\[0-9\\]\" } } */\n \n #include <immintrin.h>\n "}]}