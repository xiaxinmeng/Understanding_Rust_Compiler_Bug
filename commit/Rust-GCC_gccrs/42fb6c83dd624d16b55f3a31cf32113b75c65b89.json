{"sha": "42fb6c83dd624d16b55f3a31cf32113b75c65b89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJmYjZjODNkZDYyNGQxNmI1NWYzYTMxY2YzMjExM2I3NWM2NWI4OQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-04-16T11:46:25Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-04-16T11:46:25Z"}, "message": "forward_list.h: Remove default std::allocator<_Tp> from base classes.\n\n2009-04-16  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/forward_list.h: Remove default std::allocator<_Tp>\n\tfrom base classes.\n\t* testsuite/23_containers/forward_list/capacity/1.cc: Adjust.\n\nFrom-SVN: r146171", "tree": {"sha": "12f1ccdb39649b51857cfe428726fcaee2b20d56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12f1ccdb39649b51857cfe428726fcaee2b20d56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42fb6c83dd624d16b55f3a31cf32113b75c65b89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42fb6c83dd624d16b55f3a31cf32113b75c65b89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42fb6c83dd624d16b55f3a31cf32113b75c65b89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42fb6c83dd624d16b55f3a31cf32113b75c65b89/comments", "author": null, "committer": null, "parents": [{"sha": "cbbdee52b817759ae074f31b1d6d863c52d48850", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbbdee52b817759ae074f31b1d6d863c52d48850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbbdee52b817759ae074f31b1d6d863c52d48850"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "b794ad9958b6a2c67943f79583450f228f1277b0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42fb6c83dd624d16b55f3a31cf32113b75c65b89/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42fb6c83dd624d16b55f3a31cf32113b75c65b89/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=42fb6c83dd624d16b55f3a31cf32113b75c65b89", "patch": "@@ -1,3 +1,9 @@\n+2009-04-16  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/forward_list.h: Remove default std::allocator<_Tp>\n+\tfrom base classes.\n+\t* testsuite/23_containers/forward_list/capacity/1.cc: Adjust.\n+\n 2009-04-15  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* doc/html: Regenerate."}, {"sha": "46852d04b463b806a1e4fc019c34e49a4bca1e11", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42fb6c83dd624d16b55f3a31cf32113b75c65b89/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42fb6c83dd624d16b55f3a31cf32113b75c65b89/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=42fb6c83dd624d16b55f3a31cf32113b75c65b89", "patch": "@@ -314,4 +314,12 @@ _GLIBCXX_END_NAMESPACE\n #undef min\n #undef max\n \n+#ifndef _GLIBCXX_PURE\n+# define _GLIBCXX_PURE __attribute__ ((__pure__))\n+#endif\n+\n+#ifndef _GLIBCXX_CONST\n+# define _GLIBCXX_CONST __attribute__ ((__const__))\n+#endif\n+\n // End of prewritten config; the discovered settings follow."}, {"sha": "d49eb4a0678d0ada730c5fd3d7ef2c9ada053d4e", "filename": "libstdc++-v3/include/bits/forward_list.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42fb6c83dd624d16b55f3a31cf32113b75c65b89/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42fb6c83dd624d16b55f3a31cf32113b75c65b89/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h?ref=42fb6c83dd624d16b55f3a31cf32113b75c65b89", "patch": "@@ -81,7 +81,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n    *          This is just a linked list with a data value in each node.\n    *          There is a sorting utility method.\n    */\n-  template<typename _Tp, typename _Alloc = std::allocator<_Tp> >\n+  template<typename _Tp, typename _Alloc>\n     struct _Fwd_list_node : public _Fwd_list_node_base<_Alloc>\n     {\n       typedef typename _Alloc::template rebind<_Fwd_list_node<_Tp, _Alloc> >\n@@ -104,7 +104,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n    * \n    *   All the functions are op overloads.\n    */\n-  template<typename _Tp, typename _Alloc = std::allocator<_Tp> >\n+  template<typename _Tp, typename _Alloc>\n     struct _Fwd_list_iterator\n     {\n       typedef _Fwd_list_iterator<_Tp, _Alloc>   _Self;\n@@ -171,7 +171,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n    * \n    *   All the functions are op overloads.\n    */\n-  template<typename _Tp, typename _Alloc = std::allocator<_Tp> >\n+  template<typename _Tp, typename _Alloc>\n     struct _Fwd_list_const_iterator\n     {\n       typedef _Fwd_list_const_iterator<_Tp, _Alloc>   _Self;\n@@ -240,7 +240,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   /**\n    *  @brief  Forward list iterator equality comparison.\n    */\n-  template<typename _Tp,class _Alloc>\n+  template<typename _Tp, typename _Alloc>\n     inline bool\n     operator==(const _Fwd_list_iterator<_Tp, _Alloc>& __x,\n                const _Fwd_list_const_iterator<_Tp, _Alloc>& __y)\n@@ -249,7 +249,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   /**\n    *  @brief  Forward list iterator inequality comparison.\n    */\n-  template<typename _Tp,class _Alloc>\n+  template<typename _Tp, typename _Alloc>\n     inline bool\n     operator!=(const _Fwd_list_iterator<_Tp, _Alloc>& __x,\n                const _Fwd_list_const_iterator<_Tp, _Alloc>& __y)\n@@ -258,7 +258,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   /**\n    *  @brief  Base class for %forward_list.\n    */\n-  template<typename _Tp, typename _Alloc = allocator<_Tp> >\n+  template<typename _Tp, typename _Alloc>\n     struct _Fwd_list_base\n     {\n     protected:"}, {"sha": "973558244041cf29b39b8104d88edffc7983516e", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/capacity/1.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42fb6c83dd624d16b55f3a31cf32113b75c65b89/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcapacity%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42fb6c83dd624d16b55f3a31cf32113b75c65b89/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcapacity%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcapacity%2F1.cc?ref=42fb6c83dd624d16b55f3a31cf32113b75c65b89", "patch": "@@ -38,8 +38,9 @@ test01()\n   fld.resize(0);\n   VERIFY(fld.empty() == true);\n \n-  VERIFY( fld.max_size()\n-\t  == std::allocator<std::_Fwd_list_node<double> >().max_size() );\n+  VERIFY( (fld.max_size()\n+\t   == std::allocator<std::_Fwd_list_node<double,\n+\t                     std::allocator<double> > >().max_size()) );\n }\n \n int"}]}