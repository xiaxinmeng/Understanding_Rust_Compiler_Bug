{"sha": "8c87f107ff50fd839521ae057ee4f09d1f87feba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM4N2YxMDdmZjUwZmQ4Mzk1MjFhZTA1N2VlNGYwOWQxZjg3ZmViYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-27T20:25:35Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-27T20:25:35Z"}, "message": "(find_best_addr): Make sure folded address better before using.\n\nFrom-SVN: r10873", "tree": {"sha": "17a05e7405285b9216834c4e1a84e81c1a4f40ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17a05e7405285b9216834c4e1a84e81c1a4f40ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c87f107ff50fd839521ae057ee4f09d1f87feba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c87f107ff50fd839521ae057ee4f09d1f87feba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c87f107ff50fd839521ae057ee4f09d1f87feba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c87f107ff50fd839521ae057ee4f09d1f87feba/comments", "author": null, "committer": null, "parents": [{"sha": "8e1e2862ad00842e7cd07d024e9044f0bdc7e6ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1e2862ad00842e7cd07d024e9044f0bdc7e6ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e1e2862ad00842e7cd07d024e9044f0bdc7e6ee"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "fd086c5f778ad3ab4a86387cb393db52f99268d0", "filename": "gcc/cse.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c87f107ff50fd839521ae057ee4f09d1f87feba/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c87f107ff50fd839521ae057ee4f09d1f87feba/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=8c87f107ff50fd839521ae057ee4f09d1f87feba", "patch": "@@ -2660,9 +2660,21 @@ find_best_addr (insn, loc)\n      sometimes simplify the expression.  Many simplifications\n      will not be valid, but some, usually applying the associative rule, will\n      be valid and produce better code.  */\n-  if (GET_CODE (addr) != REG\n-      && validate_change (insn, loc, fold_rtx (addr, insn), 0))\n-    addr = *loc;\n+  if (GET_CODE (addr) != REG)\n+    {\n+      rtx folded = fold_rtx (copy_rtx (addr), NULL_RTX);\n+\n+      if (1\n+#ifdef ADDRESS_COST\n+\t  && (ADDRESS_COST (folded) < ADDRESS_COST (addr)\n+\t      || (ADDRESS_COST (folded) == ADDRESS_COST (addr)\n+\t\t  && rtx_cost (folded) > rtx_cost (addr)))\n+#else\n+\t  && rtx_cost (folded) < rtx_cost (addr)\n+#endif\n+\t  && validate_change (insn, loc, folded, 0))\n+\taddr = folded;\n+    }\n \t\n   /* If this address is not in the hash table, we can't look for equivalences\n      of the whole address.  Also, ignore if volatile.  */"}]}