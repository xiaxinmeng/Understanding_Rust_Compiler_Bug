{"sha": "f2aabbd80d97e60361f5017aa142814ea946a252", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJhYWJiZDgwZDk3ZTYwMzYxZjUwMTdhYTE0MjgxNGVhOTQ2YTI1Mg==", "commit": {"author": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "2000-01-14T23:43:19Z"}, "committer": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "2000-01-14T23:43:19Z"}, "message": "New test case.\n\nFrom-SVN: r31432", "tree": {"sha": "8fa4ebc4fc9fb2948f01ef733650c1849f99ec60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fa4ebc4fc9fb2948f01ef733650c1849f99ec60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2aabbd80d97e60361f5017aa142814ea946a252", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2aabbd80d97e60361f5017aa142814ea946a252", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2aabbd80d97e60361f5017aa142814ea946a252", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2aabbd80d97e60361f5017aa142814ea946a252/comments", "author": null, "committer": null, "parents": [{"sha": "64f1326a88d6a4e4286f5e454e706cbc5c585881", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64f1326a88d6a4e4286f5e454e706cbc5c585881", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64f1326a88d6a4e4286f5e454e706cbc5c585881"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "9ffd247ef759eeb55d5efd8169887c0155bdd725", "filename": "gcc/testsuite/g++.old-deja/g++.ns/new1.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2aabbd80d97e60361f5017aa142814ea946a252/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fnew1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2aabbd80d97e60361f5017aa142814ea946a252/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fnew1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fnew1.C?ref=f2aabbd80d97e60361f5017aa142814ea946a252", "patch": "@@ -0,0 +1,33 @@\n+// Test whether N::operator new is different from ::operator new\n+#include <new>\n+#include <cstdlib>\n+\n+bool success;\n+\n+namespace N{\n+  void* operator new(size_t n){\n+    success = true;\n+    return std::malloc(n);\n+  }\n+}\n+\n+void *operator new(size_t n)throw(std::bad_alloc)\n+{\n+  static bool entered = false;\n+  if(entered)\n+    throw std::bad_alloc();\n+  entered = true;\n+  void *result = N::operator new(n);\n+  entered = false;\n+  return result;\n+}\n+\n+int main()\n+{\n+  try{\n+    new int;\n+  }catch(...){\n+    return 1;\n+  }\n+  return success?0:1;\n+}"}]}