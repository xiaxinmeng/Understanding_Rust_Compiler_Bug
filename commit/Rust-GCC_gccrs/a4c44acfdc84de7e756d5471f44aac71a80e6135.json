{"sha": "a4c44acfdc84de7e756d5471f44aac71a80e6135", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRjNDRhY2ZkYzg0ZGU3ZTc1NmQ1NDcxZjQ0YWFjNzFhODBlNjEzNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-05-06T22:59:08Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-05-06T22:59:08Z"}, "message": "Add imssing blank line\n\nFrom-SVN: r33744", "tree": {"sha": "3b1ca6b3590b8fd858576ac8156f86b457dc2391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b1ca6b3590b8fd858576ac8156f86b457dc2391"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4c44acfdc84de7e756d5471f44aac71a80e6135", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c44acfdc84de7e756d5471f44aac71a80e6135", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4c44acfdc84de7e756d5471f44aac71a80e6135", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c44acfdc84de7e756d5471f44aac71a80e6135/comments", "author": null, "committer": null, "parents": [{"sha": "fa9c74933987ebe79b36f07efdc1f58b7019f303", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9c74933987ebe79b36f07efdc1f58b7019f303", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa9c74933987ebe79b36f07efdc1f58b7019f303"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "3b6635bec607c4511a1cdf031d207fca746a54f8", "filename": "gcc/flow.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c44acfdc84de7e756d5471f44aac71a80e6135/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c44acfdc84de7e756d5471f44aac71a80e6135/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=a4c44acfdc84de7e756d5471f44aac71a80e6135", "patch": "@@ -3974,6 +3974,7 @@ regno_clobbered_at_setjmp (regno)\n /* INSN references memory, possibly using autoincrement addressing modes.\n    Find any entries on the mem_set_list that need to be invalidated due\n    to an address change.  */\n+\n static void\n invalidate_mems_from_autoinc (pbi, insn)\n      struct propagate_block_info *pbi;"}]}