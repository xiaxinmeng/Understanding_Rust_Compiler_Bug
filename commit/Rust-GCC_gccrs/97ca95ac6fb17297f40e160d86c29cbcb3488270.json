{"sha": "97ca95ac6fb17297f40e160d86c29cbcb3488270", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdjYTk1YWM2ZmIxNzI5N2Y0MGUxNjBkODZjMjljYmNiMzQ4ODI3MA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-03-12T22:52:16Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-03-12T22:52:16Z"}, "message": "PR libstdc++/84773 use aligned alloc functions for FreeBSD and MinGW cross-compilers\n\n\tPR libstdc++/84773\n\tPR libstdc++/83662\n\t* crossconfig.m4: Check for aligned_alloc etc. on freebsd and mingw32.\n\t* configure: Regenerate.\n\t* include/c_global/cstdlib [_GLIBCXX_HAVE_ALIGNED_ALLOC]\n\t(aligned_alloc): Add using-declaration.\n\t* testsuite/18_support/aligned_alloc/aligned_alloc.cc: New test.\n\nFrom-SVN: r258468", "tree": {"sha": "257f20eaa3a9d1a61ebad1c00592842060b7f1d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/257f20eaa3a9d1a61ebad1c00592842060b7f1d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97ca95ac6fb17297f40e160d86c29cbcb3488270", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97ca95ac6fb17297f40e160d86c29cbcb3488270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97ca95ac6fb17297f40e160d86c29cbcb3488270", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97ca95ac6fb17297f40e160d86c29cbcb3488270/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50536fd5e8539f209983092c5278477fa0b4d570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50536fd5e8539f209983092c5278477fa0b4d570", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50536fd5e8539f209983092c5278477fa0b4d570"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "743479a5378647fa93680acb13e28203d02aa553", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ca95ac6fb17297f40e160d86c29cbcb3488270/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ca95ac6fb17297f40e160d86c29cbcb3488270/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=97ca95ac6fb17297f40e160d86c29cbcb3488270", "patch": "@@ -1,3 +1,13 @@\n+2018-03-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/84773\n+\tPR libstdc++/83662\n+\t* crossconfig.m4: Check for aligned_alloc etc. on freebsd and mingw32.\n+\t* configure: Regenerate.\n+\t* include/c_global/cstdlib [_GLIBCXX_HAVE_ALIGNED_ALLOC]\n+\t(aligned_alloc): Add using-declaration.\n+\t* testsuite/18_support/aligned_alloc/aligned_alloc.cc: New test.\n+\n 2018-03-09  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* python/libstdcxx/v6/printers.py (build_libstdcxx_dictionary):"}, {"sha": "ad6c506c60652685418adc7bbd7ec35f085d7b0a", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ca95ac6fb17297f40e160d86c29cbcb3488270/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ca95ac6fb17297f40e160d86c29cbcb3488270/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=97ca95ac6fb17297f40e160d86c29cbcb3488270", "patch": "@@ -53347,6 +53347,19 @@ if test \"x$ac_cv_func___cxa_thread_atexit\" = x\"\"yes; then :\n #define HAVE___CXA_THREAD_ATEXIT 1\n _ACEOF\n \n+fi\n+done\n+\n+    for ac_func in aligned_alloc posix_memalign memalign _aligned_malloc\n+do :\n+  as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n+ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\n+eval as_val=\\$$as_ac_var\n+   if test \"x$as_val\" = x\"\"yes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define `$as_echo \"HAVE_$ac_func\" | $as_tr_cpp` 1\n+_ACEOF\n+\n fi\n done\n \n@@ -66100,6 +66113,19 @@ done\n \n   CXXFLAGS=\"$ac_save_CXXFLAGS\"\n \n+    for ac_func in aligned_alloc posix_memalign memalign _aligned_malloc\n+do :\n+  as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n+ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\n+eval as_val=\\$$as_ac_var\n+   if test \"x$as_val\" = x\"\"yes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define `$as_echo \"HAVE_$ac_func\" | $as_tr_cpp` 1\n+_ACEOF\n+\n+fi\n+done\n+\n     ;;\n   *-netbsd*)\n     SECTION_FLAGS='-ffunction-sections -fdata-sections'"}, {"sha": "fa56795b25ef1b7a75934175bf03db69e0676117", "filename": "libstdc++-v3/crossconfig.m4", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ca95ac6fb17297f40e160d86c29cbcb3488270/libstdc%2B%2B-v3%2Fcrossconfig.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ca95ac6fb17297f40e160d86c29cbcb3488270/libstdc%2B%2B-v3%2Fcrossconfig.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fcrossconfig.m4?ref=97ca95ac6fb17297f40e160d86c29cbcb3488270", "patch": "@@ -133,6 +133,7 @@ case \"${host}\" in\n       AC_DEFINE(HAVE_ISNANL)\n     fi\n     AC_CHECK_FUNCS(__cxa_thread_atexit)\n+    AC_CHECK_FUNCS(aligned_alloc posix_memalign memalign _aligned_malloc)\n     ;;\n \n   *-fuchsia*)\n@@ -197,6 +198,7 @@ case \"${host}\" in\n     GLIBCXX_CHECK_LINKER_FEATURES\n     GLIBCXX_CHECK_MATH_SUPPORT\n     GLIBCXX_CHECK_STDLIB_SUPPORT\n+    AC_CHECK_FUNCS(aligned_alloc posix_memalign memalign _aligned_malloc)\n     ;;\n   *-netbsd*)\n     SECTION_FLAGS='-ffunction-sections -fdata-sections'"}, {"sha": "10335017f0c4261c02b0b4d87c15b9a8572e6a61", "filename": "libstdc++-v3/include/c_global/cstdlib", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ca95ac6fb17297f40e160d86c29cbcb3488270/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ca95ac6fb17297f40e160d86c29cbcb3488270/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcstdlib?ref=97ca95ac6fb17297f40e160d86c29cbcb3488270", "patch": "@@ -78,6 +78,9 @@ namespace std\n \n // Get rid of those macros defined in <stdlib.h> in lieu of real functions.\n #undef abort\n+#if __cplusplus >= 201703L && defined(_GLIBCXX_HAVE_ALIGNED_ALLOC)\n+# undef aligned_alloc\n+#endif\n #undef atexit\n #if __cplusplus >= 201103L\n # ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT\n@@ -125,6 +128,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   using ::ldiv_t;\n \n   using ::abort;\n+#if __cplusplus >= 201703L && defined(_GLIBCXX_HAVE_ALIGNED_ALLOC)\n+  using ::aligned_alloc;\n+#endif\n   using ::atexit;\n #if __cplusplus >= 201103L\n # ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT"}, {"sha": "8af9c723ad175a6ffef1ed7bb976cd13f5084912", "filename": "libstdc++-v3/testsuite/18_support/aligned_alloc/aligned_alloc.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ca95ac6fb17297f40e160d86c29cbcb3488270/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Faligned_alloc%2Faligned_alloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ca95ac6fb17297f40e160d86c29cbcb3488270/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Faligned_alloc%2Faligned_alloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Faligned_alloc%2Faligned_alloc.cc?ref=97ca95ac6fb17297f40e160d86c29cbcb3488270", "patch": "@@ -0,0 +1,42 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++17 } }\n+\n+#include <cstdlib>\n+#include <cstdint>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+#ifdef _GLIBCXX_HAVE_ALIGNED_ALLOC\n+  void* p = std::aligned_alloc(256, 1);\n+  if (p)\n+  {\n+    VERIFY( (reinterpret_cast<std::uintptr_t>(p) % 256) == 0 );\n+    std::free(p);\n+  }\n+#endif\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}