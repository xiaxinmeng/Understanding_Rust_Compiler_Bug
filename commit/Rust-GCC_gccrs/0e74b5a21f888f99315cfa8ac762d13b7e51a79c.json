{"sha": "0e74b5a21f888f99315cfa8ac762d13b7e51a79c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU3NGI1YTIxZjg4OGY5OTMxNWNmYThhYzc2MmQxM2I3ZTUxYTc5Yw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2012-04-05T10:04:40Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2012-04-05T10:04:40Z"}, "message": "Restore HAVE_INET6 tests (PR libgcj/52645)\n\n\tPR libgcj/52645\n\t* gnu/java/net/natPlainDatagramSocketImplPosix.cc (setOption):\n\tRestore HAVE_INET6 check.\n\t* gnu/java/net/natPlainDatagramSocketImplWin32.cc (setOption):\n\tLikewise.\n\nFrom-SVN: r186161", "tree": {"sha": "3f85d964c778e070253ec54b2d0650658a10805e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f85d964c778e070253ec54b2d0650658a10805e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e74b5a21f888f99315cfa8ac762d13b7e51a79c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e74b5a21f888f99315cfa8ac762d13b7e51a79c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e74b5a21f888f99315cfa8ac762d13b7e51a79c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e74b5a21f888f99315cfa8ac762d13b7e51a79c/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d3f224949f46f992c30ef39036b6f0d20c2406d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d3f224949f46f992c30ef39036b6f0d20c2406d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d3f224949f46f992c30ef39036b6f0d20c2406d"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "fa86b07b38122fb5d673a1efdcc7806475fa96fc", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e74b5a21f888f99315cfa8ac762d13b7e51a79c/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e74b5a21f888f99315cfa8ac762d13b7e51a79c/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0e74b5a21f888f99315cfa8ac762d13b7e51a79c", "patch": "@@ -1,3 +1,11 @@\n+2012-04-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR libgcj/52645\n+\t* gnu/java/net/natPlainDatagramSocketImplPosix.cc (setOption):\n+\tRestore HAVE_INET6 check.\n+\t* gnu/java/net/natPlainDatagramSocketImplWin32.cc (setOption):\n+\tLikewise.\n+\n 2012-03-25  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \tPR libgcj/52694"}, {"sha": "6ec9f38779314802227f02d3e4f2102bfc6eba38", "filename": "libjava/gnu/java/net/natPlainDatagramSocketImplPosix.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e74b5a21f888f99315cfa8ac762d13b7e51a79c/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e74b5a21f888f99315cfa8ac762d13b7e51a79c/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplPosix.cc?ref=0e74b5a21f888f99315cfa8ac762d13b7e51a79c", "patch": "@@ -655,6 +655,7 @@ gnu::java::net::PlainDatagramSocketImpl::setOption (jint optID,\n \t    len = sizeof (struct in_addr);\n \t    ptr = (const char *) &u.addr;\n \t  }\n+#ifdef HAVE_INET6\n \telse if (len == 16)\n \t  {\n \t    level = IPPROTO_IPV6;\n@@ -663,6 +664,7 @@ gnu::java::net::PlainDatagramSocketImpl::setOption (jint optID,\n \t    len = sizeof (struct in6_addr);\n \t    ptr = (const char *) &u.addr6;\n \t  }\n+#endif\n \telse\n \t  throw\n \t    new ::java::net::SocketException (JvNewStringUTF (\"invalid length\"));"}, {"sha": "eb1dd9682aaa286d734cc7649a2eb35323adfce1", "filename": "libjava/gnu/java/net/natPlainDatagramSocketImplWin32.cc", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e74b5a21f888f99315cfa8ac762d13b7e51a79c/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplWin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e74b5a21f888f99315cfa8ac762d13b7e51a79c/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplWin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplWin32.cc?ref=0e74b5a21f888f99315cfa8ac762d13b7e51a79c", "patch": "@@ -540,6 +540,7 @@ gnu::java::net::PlainDatagramSocketImpl::setOption (jint optID,\n       len = sizeof (struct in_addr);\n       ptr = (const char *) &u.addr;\n     }\n+#ifdef HAVE_INET6\n   else if (len == 16)\n     {\n       level = IPPROTO_IPV6;\n@@ -548,6 +549,7 @@ gnu::java::net::PlainDatagramSocketImpl::setOption (jint optID,\n       len = sizeof (struct in6_addr);\n       ptr = (const char *) &u.addr6;\n     }\n+#endif\n   else\n     throw\n       new ::java::net::SocketException (JvNewStringUTF (\"invalid length\"));\n@@ -635,14 +637,14 @@ gnu::java::net::PlainDatagramSocketImpl::getOption (jint optID)\n         goto error;\n       if (u.address.sin_family == AF_INET)\n         {\n-    laddr = JvNewByteArray (4);\n-    memcpy (elements (laddr), &u.address.sin_addr, 4);\n+\t  laddr = JvNewByteArray (4);\n+\t  memcpy (elements (laddr), &u.address.sin_addr, 4);\n         }\n #ifdef HAVE_INET6\n-            else if (u.address.sin_family == AF_INET6)\n+      else if (u.address.sin_family == AF_INET6)\n         {\n-    laddr = JvNewByteArray (16);\n-    memcpy (elements (laddr), &u.address6.sin6_addr, 16);\n+\t  laddr = JvNewByteArray (16);\n+\t  memcpy (elements (laddr), &u.address6.sin6_addr, 16);\n         }\n #endif\n       else"}]}