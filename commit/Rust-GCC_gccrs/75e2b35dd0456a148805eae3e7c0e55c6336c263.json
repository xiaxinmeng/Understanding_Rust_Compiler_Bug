{"sha": "75e2b35dd0456a148805eae3e7c0e55c6336c263", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVlMmIzNWRkMDQ1NmExNDg4MDVlYWUzZTdjMGU1NWM2MzM2YzI2Mw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-03-01T17:44:15Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-03-01T17:44:15Z"}, "message": "rs6000: Add -mdejagnu-cpu=\n\nThis adds an option -mdejagnu-cpu=.  This option simply overrides what\nis given in -mcpu=.  The reason for this is that with older versions\nof DejaGnu the value given in the RUNTESTFLAGS will override the value\na testcase wants to have.\n\n\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal): If\n\trs6000_dejagnu_cpu_index is set, use that to override rs6000_cpu_index.\n\t* config/rs6000/rs6000.opt (mdejagnu-cpu=): New option.\n\nFrom-SVN: r269322", "tree": {"sha": "c8f6e563c5115bf3e56e8a24a4a2e360c5e9d231", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8f6e563c5115bf3e56e8a24a4a2e360c5e9d231"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75e2b35dd0456a148805eae3e7c0e55c6336c263", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75e2b35dd0456a148805eae3e7c0e55c6336c263", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75e2b35dd0456a148805eae3e7c0e55c6336c263", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75e2b35dd0456a148805eae3e7c0e55c6336c263/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5055060066723e409519376c8e571e51cff1eb30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5055060066723e409519376c8e571e51cff1eb30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5055060066723e409519376c8e571e51cff1eb30"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "d198b3bafd2bf45e21232f16460fcef973cae6bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75e2b35dd0456a148805eae3e7c0e55c6336c263/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75e2b35dd0456a148805eae3e7c0e55c6336c263/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75e2b35dd0456a148805eae3e7c0e55c6336c263", "patch": "@@ -1,3 +1,9 @@\n+2019-03-01  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal): If\n+\trs6000_dejagnu_cpu_index is set, use that to override rs6000_cpu_index.\n+\t* config/rs6000/rs6000.opt (mdejagnu-cpu=): New option.\n+\n 2019-03-01  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR rtl-optimization/85899"}, {"sha": "b489bef45017b6ba2b530edcf4d5af4bee4e763c", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75e2b35dd0456a148805eae3e7c0e55c6336c263/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75e2b35dd0456a148805eae3e7c0e55c6336c263/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=75e2b35dd0456a148805eae3e7c0e55c6336c263", "patch": "@@ -3869,6 +3869,9 @@ rs6000_option_override_internal (bool global_init_p)\n   /* Don't override by the processor default if given explicitly.  */\n   set_masks &= ~rs6000_isa_flags_explicit;\n \n+  if (global_init_p && rs6000_dejagnu_cpu_index >= 0)\n+    rs6000_cpu_index = rs6000_dejagnu_cpu_index;\n+\n   /* Process the -mcpu=<xxx> and -mtune=<xxx> argument.  If the user changed\n      the cpu in a target attribute or pragma, but did not specify a tuning\n      option, use the cpu for the tuning option rather than the option specified"}, {"sha": "f4b5c91e11f137199f05566e3071e1e2223ceed7", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75e2b35dd0456a148805eae3e7c0e55c6336c263/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75e2b35dd0456a148805eae3e7c0e55c6336c263/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=75e2b35dd0456a148805eae3e7c0e55c6336c263", "patch": "@@ -385,6 +385,13 @@ mtune=\n Target RejectNegative Joined Var(rs6000_tune_index) Init(-1) Enum(rs6000_cpu_opt_value) Save\n -mtune=\tSchedule code for given CPU.\n \n+; Only for use in the testsuite.  This simply overrides -mcpu=.  With older\n+; versions of Dejagnu the command line arguments you set in RUNTESTFLAGS\n+; override those set in the testcases; with this option, the testcase will\n+; always win.\n+mdejagnu-cpu=\n+Target Undocumented RejectNegative Joined Var(rs6000_dejagnu_cpu_index) Init(-1) Enum(rs6000_cpu_opt_value) Save\n+\n mtraceback=\n Target RejectNegative Joined Enum(rs6000_traceback_type) Var(rs6000_traceback)\n -mtraceback=[full,part,no]\tSelect type of traceback table."}]}