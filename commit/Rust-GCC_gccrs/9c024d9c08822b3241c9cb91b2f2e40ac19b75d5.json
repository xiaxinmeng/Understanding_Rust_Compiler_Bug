{"sha": "9c024d9c08822b3241c9cb91b2f2e40ac19b75d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWMwMjRkOWMwODgyMmIzMjQxYzljYjkxYjJmMmU0MGFjMTliNzVkNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-03-20T12:54:35Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-03-20T12:54:35Z"}, "message": "2.cc: Remove junk.\n\n2004-03-20  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/2.cc:\n\tRemove junk.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/3.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/6.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/7.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/8.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/9.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/10.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/11.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/13.cc:\n\tLikewise.\n\nFrom-SVN: r79742", "tree": {"sha": "7c98d574b8a7a851ec05463282e69b9b35ebf121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c98d574b8a7a851ec05463282e69b9b35ebf121"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/comments", "author": null, "committer": null, "parents": [{"sha": "14b078a8f3cf32bcf6396807a8e8f190b84260ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14b078a8f3cf32bcf6396807a8e8f190b84260ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14b078a8f3cf32bcf6396807a8e8f190b84260ab"}], "stats": {"total": 195, "additions": 29, "deletions": 166}, "files": [{"sha": "7012113bc94d60ffc9c19f70f75fcca6aebac1f5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9c024d9c08822b3241c9cb91b2f2e40ac19b75d5", "patch": "@@ -1,3 +1,26 @@\n+2004-03-20  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/2.cc:\n+\tRemove junk.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/3.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/6.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/7.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/8.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/9.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/10.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/11.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/char/13.cc:\n+\tLikewise.\t\n+\n 2004-03-20  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/std/std_valarray.h: Document DR389 [Ready]."}, {"sha": "e0f95e0aa0f2223d7bf25d99ee4a04b48e76a451", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/02.cc", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F02.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F02.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F02.cc?ref=9c024d9c08822b3241c9cb91b2f2e40ac19b75d5", "patch": "@@ -24,26 +24,10 @@\n #include <sstream>\n #include <locale>\n #include <testsuite_hooks.h>\n-\n-std::string str_01;\n-std::string str_02(\"true false 0 1 110001\");\n-std::string str_03(\"-19999999 777777 -234234 233 -234 33 1 66300.25 .315 1.5\");\n-std::string str_04(\"0123\");\n-\n-std::stringbuf isbuf_01(std::ios_base::in);\n-std::stringbuf isbuf_02(str_02, std::ios_base::in);\n-std::stringbuf isbuf_03(str_03, std::ios_base::in);\n-std::stringbuf isbuf_04(str_04, std::ios_base::in);\n-\n-std::istream is_01(NULL);\n-std::istream is_02(&isbuf_02);\n-std::istream is_03(&isbuf_03);\n-std::istream is_04(&isbuf_04);\n-std::stringstream ss_01(str_01);\n  \n // elaborated test for ints\n-bool test02() {\n-\n+bool test02()\n+{\n   bool test __attribute__((unused)) = true;\n   const std::string str_01(\"20000AB\");\n   std::stringbuf strb_01(str_01, std::ios_base::in);"}, {"sha": "bddd5d864a8d0b47e91217b62ee7a1f26f903c6c", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/03.cc", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F03.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F03.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F03.cc?ref=9c024d9c08822b3241c9cb91b2f2e40ac19b75d5", "patch": "@@ -25,22 +25,6 @@\n #include <locale>\n #include <testsuite_hooks.h>\n \n-std::string str_01;\n-std::string str_02(\"true false 0 1 110001\");\n-std::string str_03(\"-19999999 777777 -234234 233 -234 33 1 66300.25 .315 1.5\");\n-std::string str_04(\"0123\");\n-\n-std::stringbuf isbuf_01(std::ios_base::in);\n-std::stringbuf isbuf_02(str_02, std::ios_base::in);\n-std::stringbuf isbuf_03(str_03, std::ios_base::in);\n-std::stringbuf isbuf_04(str_04, std::ios_base::in);\n-\n-std::istream is_01(NULL);\n-std::istream is_02(&isbuf_02);\n-std::istream is_03(&isbuf_03);\n-std::istream is_04(&isbuf_04);\n-std::stringstream ss_01(str_01);\n- \n bool test03()\n {\n   std::stringbuf sbuf;\n@@ -49,8 +33,8 @@ bool test03()\n \n   bool test __attribute__((unused)) = true;\n   long l01;\n-  ostr <<  \"12220101\";\n-  istr >>  l01; // _M_in_end set completely incorrectly here.\n+  ostr << \"12220101\";\n+  istr >> l01; // _M_in_end set completely incorrectly here.\n   VERIFY( l01 == 12220101 );\n   VERIFY( istr.rdstate() == std::ios_base::eofbit );\n   return test;"}, {"sha": "aa192280b2b9108c9d96a2983f658834bf60dda7", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/06.cc", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F06.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F06.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F06.cc?ref=9c024d9c08822b3241c9cb91b2f2e40ac19b75d5", "patch": "@@ -25,22 +25,6 @@\n #include <locale>\n #include <testsuite_hooks.h>\n \n-std::string str_01;\n-std::string str_02(\"true false 0 1 110001\");\n-std::string str_03(\"-19999999 777777 -234234 233 -234 33 1 66300.25 .315 1.5\");\n-std::string str_04(\"0123\");\n-\n-std::stringbuf isbuf_01(std::ios_base::in);\n-std::stringbuf isbuf_02(str_02, std::ios_base::in);\n-std::stringbuf isbuf_03(str_03, std::ios_base::in);\n-std::stringbuf isbuf_04(str_04, std::ios_base::in);\n-\n-std::istream is_01(NULL);\n-std::istream is_02(&isbuf_02);\n-std::istream is_03(&isbuf_03);\n-std::istream is_04(&isbuf_04);\n-std::stringstream ss_01(str_01);\n- \n // http://gcc.gnu.org/ml/libstdc++/2000-q1/msg00081.html\n // Jim Parsons\n void test06()"}, {"sha": "f958be49baef0e552fa4ba5feb6bade27316b3a5", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/07.cc", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F07.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F07.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F07.cc?ref=9c024d9c08822b3241c9cb91b2f2e40ac19b75d5", "patch": "@@ -25,22 +25,6 @@\n #include <locale>\n #include <testsuite_hooks.h>\n \n-std::string str_01;\n-std::string str_02(\"true false 0 1 110001\");\n-std::string str_03(\"-19999999 777777 -234234 233 -234 33 1 66300.25 .315 1.5\");\n-std::string str_04(\"0123\");\n-\n-std::stringbuf isbuf_01(std::ios_base::in);\n-std::stringbuf isbuf_02(str_02, std::ios_base::in);\n-std::stringbuf isbuf_03(str_03, std::ios_base::in);\n-std::stringbuf isbuf_04(str_04, std::ios_base::in);\n-\n-std::istream is_01(NULL);\n-std::istream is_02(&isbuf_02);\n-std::istream is_03(&isbuf_03);\n-std::istream is_04(&isbuf_04);\n-std::stringstream ss_01(str_01);\n- \n namespace std {\n   class test_numpunct1 : public numpunct<char>\n   {"}, {"sha": "1e3d9fab320d8dedf432ec0ffdd56b213ffd5f16", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/08.cc", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F08.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F08.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F08.cc?ref=9c024d9c08822b3241c9cb91b2f2e40ac19b75d5", "patch": "@@ -25,22 +25,6 @@\n #include <locale>\n #include <testsuite_hooks.h>\n \n-std::string str_01;\n-std::string str_02(\"true false 0 1 110001\");\n-std::string str_03(\"-19999999 777777 -234234 233 -234 33 1 66300.25 .315 1.5\");\n-std::string str_04(\"0123\");\n-\n-std::stringbuf isbuf_01(std::ios_base::in);\n-std::stringbuf isbuf_02(str_02, std::ios_base::in);\n-std::stringbuf isbuf_03(str_03, std::ios_base::in);\n-std::stringbuf isbuf_04(str_04, std::ios_base::in);\n-\n-std::istream is_01(NULL);\n-std::istream is_02(&isbuf_02);\n-std::istream is_03(&isbuf_03);\n-std::istream is_04(&isbuf_04);\n-std::stringstream ss_01(str_01);\n- \n namespace std {\n   class test_numpunct2 : public numpunct<char>\n   {\n@@ -57,7 +41,6 @@ void test08()\n   bool test __attribute__((unused)) = true;\n   unsigned int h4 = 0, h3 = 0, h2 = 0;\n   const std::string s1(\"1,22 205,19 22,123,22\");\n-  const std::string s2(\"1,220 2050,19 202,123,22\");\n \n   std::istringstream is(s1);\n   is.imbue(std::locale(std::locale(), new std::test_numpunct2));  "}, {"sha": "247c0a117cba874f503fa7ab9becfb98ad081fcc", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/09.cc", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F09.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F09.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F09.cc?ref=9c024d9c08822b3241c9cb91b2f2e40ac19b75d5", "patch": "@@ -25,22 +25,6 @@\n #include <locale>\n #include <testsuite_hooks.h>\n \n-std::string str_01;\n-std::string str_02(\"true false 0 1 110001\");\n-std::string str_03(\"-19999999 777777 -234234 233 -234 33 1 66300.25 .315 1.5\");\n-std::string str_04(\"0123\");\n-\n-std::stringbuf isbuf_01(std::ios_base::in);\n-std::stringbuf isbuf_02(str_02, std::ios_base::in);\n-std::stringbuf isbuf_03(str_03, std::ios_base::in);\n-std::stringbuf isbuf_04(str_04, std::ios_base::in);\n-\n-std::istream is_01(NULL);\n-std::istream is_02(&isbuf_02);\n-std::istream is_03(&isbuf_03);\n-std::istream is_04(&isbuf_04);\n-std::stringstream ss_01(str_01);\n- \n bool test09()\n {\n   bool test __attribute__((unused)) = true;"}, {"sha": "b3870461398d67c343dab517711c009e8c574522", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/10.cc", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F10.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F10.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F10.cc?ref=9c024d9c08822b3241c9cb91b2f2e40ac19b75d5", "patch": "@@ -25,23 +25,8 @@\n #include <locale>\n #include <testsuite_hooks.h>\n \n-std::string str_01;\n-std::string str_02(\"true false 0 1 110001\");\n-std::string str_03(\"-19999999 777777 -234234 233 -234 33 1 66300.25 .315 1.5\");\n-std::string str_04(\"0123\");\n-\n-std::stringbuf isbuf_01(std::ios_base::in);\n-std::stringbuf isbuf_02(str_02, std::ios_base::in);\n-std::stringbuf isbuf_03(str_03, std::ios_base::in);\n-std::stringbuf isbuf_04(str_04, std::ios_base::in);\n-\n-std::istream is_01(NULL);\n-std::istream is_02(&isbuf_02);\n-std::istream is_03(&isbuf_03);\n-std::istream is_04(&isbuf_04);\n-std::stringstream ss_01(str_01);\n- \n-bool test10() {\n+bool test10()\n+{\n   std::string str_01(\"0 00 000 +0 +0 -0\");\n   std::stringbuf isbuf_01(str_01);\n   std::istream is_01(&isbuf_01);"}, {"sha": "4b4b0adc68771b37b5660af8c8125ca555da8ee0", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/11.cc", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F11.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F11.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F11.cc?ref=9c024d9c08822b3241c9cb91b2f2e40ac19b75d5", "patch": "@@ -25,22 +25,6 @@\n #include <locale>\n #include <testsuite_hooks.h>\n \n-std::string str_01;\n-std::string str_02(\"true false 0 1 110001\");\n-std::string str_03(\"-19999999 777777 -234234 233 -234 33 1 66300.25 .315 1.5\");\n-std::string str_04(\"0123\");\n-\n-std::stringbuf isbuf_01(std::ios_base::in);\n-std::stringbuf isbuf_02(str_02, std::ios_base::in);\n-std::stringbuf isbuf_03(str_03, std::ios_base::in);\n-std::stringbuf isbuf_04(str_04, std::ios_base::in);\n-\n-std::istream is_01(NULL);\n-std::istream is_02(&isbuf_02);\n-std::istream is_03(&isbuf_03);\n-std::istream is_04(&isbuf_04);\n-std::stringstream ss_01(str_01);\n- \n // In the presence of no fmtflags, the input operator should behave\n // like strtol(x, y, 0)\n // libstdc++/90"}, {"sha": "c06be392ad96d1b4232e981faca9bd113e5e6f73", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F12.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F12.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F12.cc?ref=9c024d9c08822b3241c9cb91b2f2e40ac19b75d5", "patch": "@@ -29,22 +29,6 @@\n #include <sstream>\n #include <testsuite_hooks.h>\n \n-std::string str_01;\n-std::string str_02(\"true false 0 1 110001\");\n-std::string str_03(\"-19999999 777777 -234234 233 -234 33 1 66300.25 .315 1.5\");\n-std::string str_04(\"0123\");\n-\n-std::stringbuf isbuf_01(std::ios_base::in);\n-std::stringbuf isbuf_02(str_02, std::ios_base::in);\n-std::stringbuf isbuf_03(str_03, std::ios_base::in);\n-std::stringbuf isbuf_04(str_04, std::ios_base::in);\n-\n-std::istream is_01(NULL);\n-std::istream is_02(&isbuf_02);\n-std::istream is_03(&isbuf_03);\n-std::istream is_04(&isbuf_04);\n-std::stringstream ss_01(str_01);\n- \n // libstdc++/3720\n // excess input should not cause a core dump\n template<typename T>"}, {"sha": "bf1579be7ca62375cfa50ae54a1ade3994ef2495", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/13.cc", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F13.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c024d9c08822b3241c9cb91b2f2e40ac19b75d5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F13.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fchar%2F13.cc?ref=9c024d9c08822b3241c9cb91b2f2e40ac19b75d5", "patch": "@@ -25,22 +25,6 @@\n #include <locale>\n #include <testsuite_hooks.h>\n \n-std::string str_01;\n-std::string str_02(\"true false 0 1 110001\");\n-std::string str_03(\"-19999999 777777 -234234 233 -234 33 1 66300.25 .315 1.5\");\n-std::string str_04(\"0123\");\n-\n-std::stringbuf isbuf_01(std::ios_base::in);\n-std::stringbuf isbuf_02(str_02, std::ios_base::in);\n-std::stringbuf isbuf_03(str_03, std::ios_base::in);\n-std::stringbuf isbuf_04(str_04, std::ios_base::in);\n-\n-std::istream is_01(NULL);\n-std::istream is_02(&isbuf_02);\n-std::istream is_03(&isbuf_03);\n-std::istream is_04(&isbuf_04);\n-std::stringstream ss_01(str_01);\n- \n // libstdc++/3720 part two\n void test13()\n {"}]}