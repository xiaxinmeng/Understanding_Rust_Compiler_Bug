{"sha": "a5b42ee71336cfe55e42c50e2379be21c347b97a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTViNDJlZTcxMzM2Y2ZlNTVlNDJjNTBlMjM3OWJlMjFjMzQ3Yjk3YQ==", "commit": {"author": {"name": "Matthew Wahab", "email": "matthew.wahab@arm.com", "date": "2016-09-23T08:52:55Z"}, "committer": {"name": "Matthew Wahab", "email": "mwahab@gcc.gnu.org", "date": "2016-09-23T08:52:55Z"}, "message": "[PATCH 2/17][Testsuite] Add a selector for ARM FP16 alternative format support.\n\n2016-09-23  Matthew Wahab  <matthew.wahab@arm.com>\n\n\t* doc/sourcebuild.texi (ARM-specific attributes): Add entries for\n\tarm_fp16_alternative_ok and arm_fp16_none_ok.\n\ntestsuite/\n2016-09-23  Matthew Wahab  <matthew.wahab@arm.com>\n\n\t* g++.dg/ext/arm-fp16/arm-fp16-ops-3.C: Use\n\tarm_fp16_alternative_ok.\n\t* g++.dg/ext/arm-fp16/arm-fp16-ops-4.C: Likewise.\n\t* gcc.dg/torture/arm-fp16-int-convert-alt.c: Likewise.\n\t* gcc/testsuite/gcc.dg/torture/arm-fp16-ops-3.c: Likewise.\n\t* gcc/testsuite/gcc.dg/torture/arm-fp16-ops-4.c: Likewise.\n\t* gcc.target/arm/fp16-compile-alt-1.c: Likewise.\n\t* gcc.target/arm/fp16-compile-alt-10.c: Likewise.\n\t* gcc.target/arm/fp16-compile-alt-11.c: Likewise.\n\t* gcc.target/arm/fp16-compile-alt-12.c: Likewise.\n\t* gcc.target/arm/fp16-compile-alt-2.c: Likewise.\n\t* gcc.target/arm/fp16-compile-alt-3.c: Likewise.\n\t* gcc.target/arm/fp16-compile-alt-4.c: Likewise.\n\t* gcc.target/arm/fp16-compile-alt-5.c: Likewise.\n\t* gcc.target/arm/fp16-compile-alt-6.c: Likewise.\n\t* gcc.target/arm/fp16-compile-alt-7.c: Likewise.\n\t* gcc.target/arm/fp16-compile-alt-8.c: Likewise.\n\t* gcc.target/arm/fp16-compile-alt-9.c: Likewise.\n\t* gcc.target/arm/fp16-compile-none-1.c: Use arm_fp16_none_ok.\n\t* gcc.target/arm/fp16-compile-none-2.c: Likewise.\n\t* gcc.target/arm/fp16-rounding-alt-1.c: Use\n\tarm_fp16_alternative_ok.\n\t* lib/target-supports.exp\n\t(check_effective_target_arm_fp16_alternative_ok_nocache): New.\n\t(check_effective_target_arm_fp16_alternative_ok): New.\n\t(check_effective_target_arm_fp16_none_ok_nocache): New.\n\t(check_effective_target_arm_fp16_none_ok): New.\n\nFrom-SVN: r240400", "tree": {"sha": "23d35dd304fdd23ce270f860dcb3ab5f4b71dd5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23d35dd304fdd23ce270f860dcb3ab5f4b71dd5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5b42ee71336cfe55e42c50e2379be21c347b97a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b42ee71336cfe55e42c50e2379be21c347b97a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5b42ee71336cfe55e42c50e2379be21c347b97a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b42ee71336cfe55e42c50e2379be21c347b97a/comments", "author": null, "committer": null, "parents": [{"sha": "fcbc975bed3ff53d2e4268eb507a073ce4a19fe2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcbc975bed3ff53d2e4268eb507a073ce4a19fe2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcbc975bed3ff53d2e4268eb507a073ce4a19fe2"}], "stats": {"total": 121, "additions": 121, "deletions": 0}, "files": [{"sha": "ff9a1e210f60151de375288e672bed4d909e3ca6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,3 +1,8 @@\n+2016-09-23  Matthew Wahab  <matthew.wahab@arm.com>\n+\n+\t* doc/sourcebuild.texi (ARM-specific attributes): Add entries for\n+\tarm_fp16_alternative_ok and arm_fp16_none_ok.\n+\n 2016-09-23  Martin Liska  <mliska@suse.cz>\n \n \t* ipa-icf.c (sem_variable::merge): Replace adress"}, {"sha": "fac03499bb5baa0fb243f347989f3ba083b7ab69", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1598,6 +1598,13 @@ options, including @code{-mfp16-format=ieee} if necessary to obtain the\n Test system supports executing Neon half-precision float instructions.\n (Implies previous.)\n \n+@item arm_fp16_alternative_ok\n+ARM target supports the ARM FP16 alternative format.  Some multilibs\n+may be incompatible with the options needed.\n+\n+@item arm_fp16_none_ok\n+ARM target supports specifying none as the ARM FP16 format.\n+\n @item arm_thumb1_ok\n ARM target generates Thumb-1 code for @code{-mthumb}.\n "}, {"sha": "b0aeb5e50653ba802a573867408dbec0ae00d5f2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,3 +1,33 @@\n+2016-09-23  Matthew Wahab  <matthew.wahab@arm.com>\n+\n+\t* g++.dg/ext/arm-fp16/arm-fp16-ops-3.C: Use\n+\tarm_fp16_alternative_ok.\n+\t* g++.dg/ext/arm-fp16/arm-fp16-ops-4.C: Likewise.\n+\t* gcc.dg/torture/arm-fp16-int-convert-alt.c: Likewise.\n+\t* gcc/testsuite/gcc.dg/torture/arm-fp16-ops-3.c: Likewise.\n+\t* gcc/testsuite/gcc.dg/torture/arm-fp16-ops-4.c: Likewise.\n+\t* gcc.target/arm/fp16-compile-alt-1.c: Likewise.\n+\t* gcc.target/arm/fp16-compile-alt-10.c: Likewise.\n+\t* gcc.target/arm/fp16-compile-alt-11.c: Likewise.\n+\t* gcc.target/arm/fp16-compile-alt-12.c: Likewise.\n+\t* gcc.target/arm/fp16-compile-alt-2.c: Likewise.\n+\t* gcc.target/arm/fp16-compile-alt-3.c: Likewise.\n+\t* gcc.target/arm/fp16-compile-alt-4.c: Likewise.\n+\t* gcc.target/arm/fp16-compile-alt-5.c: Likewise.\n+\t* gcc.target/arm/fp16-compile-alt-6.c: Likewise.\n+\t* gcc.target/arm/fp16-compile-alt-7.c: Likewise.\n+\t* gcc.target/arm/fp16-compile-alt-8.c: Likewise.\n+\t* gcc.target/arm/fp16-compile-alt-9.c: Likewise.\n+\t* gcc.target/arm/fp16-compile-none-1.c: Use arm_fp16_none_ok.\n+\t* gcc.target/arm/fp16-compile-none-2.c: Likewise.\n+\t* gcc.target/arm/fp16-rounding-alt-1.c: Use\n+\tarm_fp16_alternative_ok.\n+\t* lib/target-supports.exp\n+\t(check_effective_target_arm_fp16_alternative_ok_nocache): New.\n+\t(check_effective_target_arm_fp16_alternative_ok): New.\n+\t(check_effective_target_arm_fp16_none_ok_nocache): New.\n+\t(check_effective_target_arm_fp16_none_ok): New.\n+\n 2016-09-23  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/ipa/pr77653.c: Replace adress"}, {"sha": "29080c7514f4c0d48469a59a4c0d13a826078f93", "filename": "gcc/testsuite/g++.dg/ext/arm-fp16/arm-fp16-ops-3.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Farm-fp16%2Farm-fp16-ops-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Farm-fp16%2Farm-fp16-ops-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Farm-fp16%2Farm-fp16-ops-3.C?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,5 +1,6 @@\n /* Test various operators on __fp16 and mixed __fp16/float operands.  */\n /* { dg-do run { target arm*-*-* } } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok } */\n /* { dg-options \"-mfp16-format=alternative\" } */\n \n #include \"arm-fp16-ops.h\""}, {"sha": "4be8883faad20415bf736b637b03f46ba3f233d4", "filename": "gcc/testsuite/g++.dg/ext/arm-fp16/arm-fp16-ops-4.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Farm-fp16%2Farm-fp16-ops-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Farm-fp16%2Farm-fp16-ops-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Farm-fp16%2Farm-fp16-ops-4.C?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,5 +1,6 @@\n /* Test various operators on __fp16 and mixed __fp16/float operands.  */\n /* { dg-do run { target arm*-*-* } } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok } */\n /* { dg-options \"-mfp16-format=alternative -ffast-math\" } */\n \n #include \"arm-fp16-ops.h\""}, {"sha": "f013b59ddde0d44e044805527d5c87661041667f", "filename": "gcc/testsuite/gcc.dg/torture/arm-fp16-int-convert-alt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Farm-fp16-int-convert-alt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Farm-fp16-int-convert-alt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Farm-fp16-int-convert-alt.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,5 +1,6 @@\n /* Test floating-point conversions.  Standard types and __fp16.  */\n /* { dg-do run { target arm*-*-* } } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok }\n /* { dg-options \"-mfp16-format=alternative\" } */\n \n #include \"fp-int-convert.h\""}, {"sha": "7716baf818ec4cc999e3ecde7600835a145f99cc", "filename": "gcc/testsuite/gcc.dg/torture/arm-fp16-ops-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Farm-fp16-ops-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Farm-fp16-ops-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Farm-fp16-ops-3.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,5 +1,6 @@\n /* Test various operators on __fp16 and mixed __fp16/float operands.  */\n /* { dg-do run { target arm*-*-* } } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok }\n /* { dg-options \"-mfp16-format=alternative\" } */\n \n #include \"arm-fp16-ops.h\""}, {"sha": "1940f4320d0cd9dfecef96e0fe661365b76a6e20", "filename": "gcc/testsuite/gcc.dg/torture/arm-fp16-ops-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Farm-fp16-ops-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Farm-fp16-ops-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Farm-fp16-ops-4.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,5 +1,6 @@\n /* Test various operators on __fp16 and mixed __fp16/float operands.  */\n /* { dg-do run { target arm*-*-* } } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok }\n /* { dg-options \"-mfp16-format=alternative -ffast-math\" } */\n \n #include \"arm-fp16-ops.h\""}, {"sha": "0845e886a835df4207f406a2880b86fe76eb3a94", "filename": "gcc/testsuite/gcc.target/arm/fp16-compile-alt-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-1.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok } */\n /* { dg-options \"-mfp16-format=alternative\" } */\n \n __fp16 xx = 0.0;"}, {"sha": "a8772a19ae00f85238a6ab174caae1d9d9f97019", "filename": "gcc/testsuite/gcc.target/arm/fp16-compile-alt-10.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-10.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok } */\n /* { dg-options \"-mfp16-format=alternative -pedantic -std=gnu99\" } */\n \n #include <math.h>"}, {"sha": "1cb3d2c4963fc46a37b83a7b0b60148d7cb30f68", "filename": "gcc/testsuite/gcc.target/arm/fp16-compile-alt-11.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-11.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok } */\n /* { dg-options \"-mfp16-format=alternative -pedantic -std=gnu99\" } */\n \n #include <math.h>"}, {"sha": "3c3bd2f02f6f90c15cac7cb60e0ffa859540e874", "filename": "gcc/testsuite/gcc.target/arm/fp16-compile-alt-12.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-12.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok } */\n /* { dg-options \"-mfp16-format=alternative\" } */\n \n float xx __attribute__((mode(HF))) = 0.0;"}, {"sha": "8a45f1f4ae10c893a4de481b2ef2efc11e6b71cb", "filename": "gcc/testsuite/gcc.target/arm/fp16-compile-alt-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-2.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok } */\n /* { dg-options \"-mfp16-format=alternative\" } */\n \n /* Encoding taken from:  http://en.wikipedia.org/wiki/Half_precision */"}, {"sha": "e786a51da6985dcf6b8e8d8f08e8c1b89bf11802", "filename": "gcc/testsuite/gcc.target/arm/fp16-compile-alt-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-3.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok } */\n /* { dg-options \"-mfp16-format=alternative\" } */\n \n /* Encoding taken from:  http://en.wikipedia.org/wiki/Half_precision */"}, {"sha": "cfeb61aaea74cf24fb0d2afc396df843e07020e9", "filename": "gcc/testsuite/gcc.target/arm/fp16-compile-alt-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-4.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok } */\n /* { dg-options \"-mfp16-format=alternative\" } */\n \n /* Encoding taken from:  http://en.wikipedia.org/wiki/Half_precision */"}, {"sha": "3b741ae62dcd4ac9a79810f15a325749e37b57eb", "filename": "gcc/testsuite/gcc.target/arm/fp16-compile-alt-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-5.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok } */\n /* { dg-options \"-mfp16-format=alternative\" } */\n \n /* Encoding taken from:  http://en.wikipedia.org/wiki/Half_precision */"}, {"sha": "abffff5fa60b1482d5c52353925c57e4fc38b9f1", "filename": "gcc/testsuite/gcc.target/arm/fp16-compile-alt-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-6.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok } */\n /* { dg-options \"-mfp16-format=alternative\" } */\n \n /* This number is the maximum value representable in the alternative"}, {"sha": "c339f197cd77c365ec8f042413ecd4e435849ae4", "filename": "gcc/testsuite/gcc.target/arm/fp16-compile-alt-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-7.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok } */\n /* { dg-options \"-mfp16-format=alternative -pedantic\" } */\n \n /* This number overflows the range of the alternative encoding.  Since this"}, {"sha": "deeb5cd557423874f24702494b37d3ecfca27eaf", "filename": "gcc/testsuite/gcc.target/arm/fp16-compile-alt-8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-8.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok } */\n /* { dg-options \"-mfp16-format=alternative\" } */\n \n /* Encoding taken from:  http://en.wikipedia.org/wiki/Half_precision */"}, {"sha": "f9f565453e70eb06715ea0507f169f6ac98f8609", "filename": "gcc/testsuite/gcc.target/arm/fp16-compile-alt-9.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-alt-9.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok } */\n /* { dg-options \"-mfp16-format=alternative\" } */\n \n /* Encoding taken from:  http://en.wikipedia.org/wiki/Half_precision */"}, {"sha": "9472249e2e2a594130c0d5966aa7c0aa1dddbf58", "filename": "gcc/testsuite/gcc.target/arm/fp16-compile-none-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-none-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-none-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-none-1.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_fp16_none_ok } */\n /* { dg-options \"-mfp16-format=none\" } */\n \n /* __fp16 type name is not recognized unless you explicitly enable it"}, {"sha": "9ec21e5c1cc45dd17e214ab6da82fc86b6427084", "filename": "gcc/testsuite/gcc.target/arm/fp16-compile-none-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-none-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-none-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-compile-none-2.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target arm_fp16_none_ok } */\n /* { dg-options \"-mfp16-format=none\" } */\n \n /* mode(HF) attributes are not recognized unless you explicitly enable"}, {"sha": "1c15b613239de8610bb52b127ce5b143d1038804", "filename": "gcc/testsuite/gcc.target/arm/fp16-rounding-alt-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-rounding-alt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-rounding-alt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ffp16-rounding-alt-1.c?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -3,6 +3,7 @@\n    from double to __fp16.  */\n \n /* { dg-do run } */\n+/* { dg-require-effective-target arm_fp16_alternative_ok } */\n /* { dg-options \"-mfp16-format=alternative\" } */\n \n #include <stdlib.h>"}, {"sha": "dfee6cf4e0be35a19f049c2f99554ea6abfb7d3d", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b42ee71336cfe55e42c50e2379be21c347b97a/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=a5b42ee71336cfe55e42c50e2379be21c347b97a", "patch": "@@ -3356,6 +3356,65 @@ proc add_options_for_arm_neon_fp16 { flags } {\n     return \"$flags $et_arm_neon_fp16_flags\"\n }\n \n+# Return 1 if this is an ARM target supporting the FP16 alternative\n+# format.  Some multilibs may be incompatible with the options needed.  Also\n+# set et_arm_neon_fp16_flags to the best options to add.\n+\n+proc check_effective_target_arm_fp16_alternative_ok_nocache { } {\n+    global et_arm_neon_fp16_flags\n+    set et_arm_neon_fp16_flags \"\"\n+    if { [check_effective_target_arm32] } {\n+\tforeach flags {\"\" \"-mfloat-abi=softfp\" \"-mfpu=neon-fp16\"\n+\t\t       \"-mfpu=neon-fp16 -mfloat-abi=softfp\"} {\n+\t    if { [check_no_compiler_messages_nocache \\\n+\t\t      arm_fp16_alternative_ok object {\n+\t\t#if !defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n+\t\t#error __ARM_FP16_FORMAT_ALTERNATIVE not defined\n+\t\t#endif\n+\t    } \"$flags -mfp16-format=alternative\"] } {\n+\t\tset et_arm_neon_fp16_flags \"$flags -mfp16-format=alternative\"\n+\t\treturn 1\n+\t    }\n+\t}\n+    }\n+\n+    return 0\n+}\n+\n+proc check_effective_target_arm_fp16_alternative_ok { } {\n+    return [check_cached_effective_target arm_fp16_alternative_ok \\\n+\t\tcheck_effective_target_arm_fp16_alternative_ok_nocache]\n+}\n+\n+# Return 1 if this is an ARM target supports specifying the FP16 none\n+# format.  Some multilibs may be incompatible with the options needed.\n+\n+proc check_effective_target_arm_fp16_none_ok_nocache { } {\n+    if { [check_effective_target_arm32] } {\n+\tforeach flags {\"\" \"-mfloat-abi=softfp\" \"-mfpu=neon-fp16\"\n+\t\t       \"-mfpu=neon-fp16 -mfloat-abi=softfp\"} {\n+\t    if { [check_no_compiler_messages_nocache \\\n+\t\t      arm_fp16_none_ok object {\n+\t\t#if defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n+\t\t#error __ARM_FP16_FORMAT_ALTERNATIVE defined\n+\t\t#endif\n+\t\t#if defined (__ARM_FP16_FORMAT_IEEE)\n+\t\t#error __ARM_FP16_FORMAT_IEEE defined\n+\t\t#endif\n+\t    } \"$flags -mfp16-format=none\"] } {\n+\t\treturn 1\n+\t    }\n+\t}\n+    }\n+\n+    return 0\n+}\n+\n+proc check_effective_target_arm_fp16_none_ok { } {\n+    return [check_cached_effective_target arm_fp16_none_ok \\\n+\t\tcheck_effective_target_arm_fp16_none_ok_nocache]\n+}\n+\n # Return 1 if this is an ARM target supporting -mfpu=neon-fp-armv8\n # -mfloat-abi=softfp or equivalent options.  Some multilibs may be\n # incompatible with these options.  Also set et_arm_v8_neon_flags to the"}]}