{"sha": "b5d3d113ca9c67320ed06b65c50e8e46e22b6198", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVkM2QxMTNjYTljNjczMjBlZDA2YjY1YzUwZThlNDZlMjJiNjE5OA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-07-09T07:53:16Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-09T07:53:16Z"}, "message": "[Ada] Make -gnatRj output strictly conforming JSON\n\nThis changes the -gnatRj output from a concatenation of entities to an\narray of entities, thus making it strictly conforming JSON and easier to\nbe parsed by means of GNATColl or Python.\n\n2019-07-09  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* repinfo.ads (JSON format): Adjust.\n\t* repinfo.adb (Need_Blank_Line): Rename to...\n\t(Need_Separator): ...this.\n\t(Blank_Line): Rename to...\n\t(Write_Separator): ...this and add JSON specific handling.\n\t(List_Array_Info): Adjust to above renaming.\n\t(List_Object_Info): Likewise.\n\t(List_Record_Info): Likewise.\n\t(List_Subprogram_Info): Likewise.\n\t(List_Type_Info): Likewise.\n\t(List_Entities): Do not set Need_Blank_Line.\n\t(List_Rep_Info): Set Need_Separator and add JSON specific\n\thandling. Output a single JSON stream in the  normal case.\n\nFrom-SVN: r273265", "tree": {"sha": "8f965ea43d3d2da860189febc5b183b5bebd0857", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f965ea43d3d2da860189febc5b183b5bebd0857"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5d3d113ca9c67320ed06b65c50e8e46e22b6198", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5d3d113ca9c67320ed06b65c50e8e46e22b6198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5d3d113ca9c67320ed06b65c50e8e46e22b6198", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5d3d113ca9c67320ed06b65c50e8e46e22b6198/comments", "author": null, "committer": null, "parents": [{"sha": "0cb51ac7fb5f28e069cc2a6094a6c0188b1aa02e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cb51ac7fb5f28e069cc2a6094a6c0188b1aa02e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cb51ac7fb5f28e069cc2a6094a6c0188b1aa02e"}], "stats": {"total": 98, "additions": 69, "deletions": 29}, "files": [{"sha": "02dc4ad71b86e598db8358c8489d12af1840bc40", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d3d113ca9c67320ed06b65c50e8e46e22b6198/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d3d113ca9c67320ed06b65c50e8e46e22b6198/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b5d3d113ca9c67320ed06b65c50e8e46e22b6198", "patch": "@@ -1,3 +1,19 @@\n+2019-07-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* repinfo.ads (JSON format): Adjust.\n+\t* repinfo.adb (Need_Blank_Line): Rename to...\n+\t(Need_Separator): ...this.\n+\t(Blank_Line): Rename to...\n+\t(Write_Separator): ...this and add JSON specific handling.\n+\t(List_Array_Info): Adjust to above renaming.\n+\t(List_Object_Info): Likewise.\n+\t(List_Record_Info): Likewise.\n+\t(List_Subprogram_Info): Likewise.\n+\t(List_Type_Info): Likewise.\n+\t(List_Entities): Do not set Need_Blank_Line.\n+\t(List_Rep_Info): Set Need_Separator and add JSON specific\n+\thandling. Output a single JSON stream in the  normal case.\n+\n 2019-07-09  Arnaud Charlet  <charlet@adacore.com>\n \n \t* doc/gnat_ugn/the_gnat_compilation_model.rst: Update doc on"}, {"sha": "75da2b6251b389a7c5018ee36f519d800f88596a", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 52, "deletions": 28, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d3d113ca9c67320ed06b65c50e8e46e22b6198/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d3d113ca9c67320ed06b65c50e8e46e22b6198/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=b5d3d113ca9c67320ed06b65c50e8e46e22b6198", "patch": "@@ -115,10 +115,9 @@ package body Repinfo is\n    --  Identifier casing for current unit. This is set by List_Rep_Info for\n    --  each unit, before calling subprograms which may read it.\n \n-   Need_Blank_Line : Boolean;\n-   --  Set True if a blank line is needed before outputting any information for\n-   --  the current entity. Set True when a new entity is processed, and false\n-   --  when the blank line is output.\n+   Need_Separator : Boolean;\n+   --  Set True if a separator is needed before outputting any information for\n+   --  the current entity.\n \n    ------------------------------\n    -- Set of Relevant Entities --\n@@ -151,10 +150,6 @@ package body Repinfo is\n    --  is used rather than checking the configuration parameter because we do\n    --  not want Repinfo to depend on Targparm (for ASIS)\n \n-   procedure Blank_Line;\n-   --  Called before outputting anything for an entity. Ensures that\n-   --  a blank line precedes the output for a particular entity.\n-\n    procedure List_Entities\n      (Ent              : Entity_Id;\n       Bytes_Big_Endian : Boolean;\n@@ -217,6 +212,10 @@ package body Repinfo is\n    procedure Write_Mechanism (M : Mechanism_Type);\n    --  Writes symbolic string for mechanism represented by M\n \n+   procedure Write_Separator;\n+   --  Called before outputting anything for an entity. Ensures that\n+   --  a separator precedes the output for a particular entity.\n+\n    procedure Write_Unknown_Val;\n    --  Writes symbolic string for an unknown or non-representable value\n \n@@ -238,18 +237,6 @@ package body Repinfo is\n       return Rep_Table.Last > 0;\n    end Back_End_Layout;\n \n-   ----------------\n-   -- Blank_Line --\n-   ----------------\n-\n-   procedure Blank_Line is\n-   begin\n-      if Need_Blank_Line then\n-         Write_Eol;\n-         Need_Blank_Line := False;\n-      end if;\n-   end Blank_Line;\n-\n    ------------------------\n    -- Create_Discrim_Ref --\n    ------------------------\n@@ -342,7 +329,7 @@ package body Repinfo is\n \n    procedure List_Array_Info (Ent : Entity_Id; Bytes_Big_Endian : Boolean) is\n    begin\n-      Blank_Line;\n+      Write_Separator;\n \n       if List_Representation_Info_To_JSON then\n          Write_Line (\"{\");\n@@ -504,14 +491,11 @@ package body Repinfo is\n                       or else Ekind (Ent) = E_Entry_Family)\n            and then not In_Subprogram\n          then\n-            Need_Blank_Line := True;\n             List_Subprogram_Info (Ent);\n          end if;\n \n          E := First_Entity (Ent);\n          while Present (E) loop\n-            Need_Blank_Line := True;\n-\n             --  We list entities that come from source (excluding private or\n             --  incomplete types or deferred constants, for which we will list\n             --  the information for the full view). If requested, we also list\n@@ -939,7 +923,7 @@ package body Repinfo is\n \n    procedure List_Object_Info (Ent : Entity_Id) is\n    begin\n-      Blank_Line;\n+      Write_Separator;\n \n       if List_Representation_Info_To_JSON then\n          Write_Line (\"{\");\n@@ -1621,7 +1605,7 @@ package body Repinfo is\n    --  Start of processing for List_Record_Info\n \n    begin\n-      Blank_Line;\n+      Write_Separator;\n \n       if List_Representation_Info_To_JSON then\n          Write_Line (\"{\");\n@@ -1694,6 +1678,15 @@ package body Repinfo is\n       if List_Representation_Info /= 0\n         or else List_Representation_Info_Mechanisms\n       then\n+         --  For the normal case, we output a single JSON stream\n+\n+         if not List_Representation_Info_To_File\n+           and then List_Representation_Info_To_JSON\n+         then\n+            Write_Line (\"[\");\n+            Need_Separator := False;\n+         end if;\n+\n          for U in Main_Unit .. Last_Unit loop\n             if In_Extended_Main_Source_Unit (Cunit_Entity (U)) then\n                Unit_Casing := Identifier_Casing (Source_Index (U));\n@@ -1717,6 +1710,7 @@ package body Repinfo is\n                      end loop;\n \n                      Write_Eol;\n+                     Need_Separator := True;\n                   end if;\n \n                   List_Entities (Cunit_Entity (U), Bytes_Big_Endian);\n@@ -1727,12 +1721,25 @@ package body Repinfo is\n                   Create_Repinfo_File_Access.all\n                     (Get_Name_String (File_Name (Source_Index (U))));\n                   Set_Special_Output (Write_Info_Line'Access);\n+                  if List_Representation_Info_To_JSON then\n+                     Write_Line (\"[\");\n+                  end if;\n+                  Need_Separator := False;\n                   List_Entities (Cunit_Entity (U), Bytes_Big_Endian);\n+                  if List_Representation_Info_To_JSON then\n+                     Write_Line (\"]\");\n+                  end if;\n                   Cancel_Special_Output;\n                   Close_Repinfo_File_Access.all;\n                end if;\n             end if;\n          end loop;\n+\n+         if not List_Representation_Info_To_File\n+           and then List_Representation_Info_To_JSON\n+         then\n+            Write_Line (\"]\");\n+         end if;\n       end if;\n    end List_Rep_Info;\n \n@@ -1821,7 +1828,7 @@ package body Repinfo is\n       Form  : Entity_Id;\n \n    begin\n-      Blank_Line;\n+      Write_Separator;\n \n       if List_Representation_Info_To_JSON then\n          Write_Line (\"{\");\n@@ -1999,7 +2006,7 @@ package body Repinfo is\n \n    procedure List_Type_Info (Ent : Entity_Id) is\n    begin\n-      Blank_Line;\n+      Write_Separator;\n \n       if List_Representation_Info_To_JSON then\n          Write_Line (\"{\");\n@@ -2335,6 +2342,23 @@ package body Repinfo is\n       end case;\n    end Write_Mechanism;\n \n+   ---------------------\n+   -- Write_Separator --\n+   ---------------------\n+\n+   procedure Write_Separator is\n+   begin\n+      if Need_Separator then\n+         if List_Representation_Info_To_JSON then\n+            Write_Line (\",\");\n+         else\n+            Write_Eol;\n+         end if;\n+      else\n+         Need_Separator := True;\n+      end if;\n+   end Write_Separator;\n+\n    -----------------------\n    -- Write_Unknown_Val --\n    -----------------------"}, {"sha": "c51948ee93c1a786df8e022a700fd5c0fd093052", "filename": "gcc/ada/repinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d3d113ca9c67320ed06b65c50e8e46e22b6198/gcc%2Fada%2Frepinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d3d113ca9c67320ed06b65c50e8e46e22b6198/gcc%2Fada%2Frepinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.ads?ref=b5d3d113ca9c67320ed06b65c50e8e46e22b6198", "patch": "@@ -193,7 +193,7 @@ package Repinfo is\n    --  following description, the terminology is that of the JSON syntax\n    --  from the ECMA document and of the JSON grammar from www.json.org.\n \n-   --  The output is a concatenation of entities\n+   --  The output is an array of entities\n \n    --  An entity is an object whose members are pairs taken from:\n "}]}