{"sha": "8d4b68a7c4091c99c8d591e93efae5748a7ced13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ0YjY4YTdjNDA5MWM5OWM4ZDU5MWU5M2VmYWU1NzQ4YTdjZWQxMw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-06-21T21:42:41Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-06-21T21:42:41Z"}, "message": "libgo, syscall: fix ptrace implementation on MIPS\n    \n    On MIPS, the correct structure for PtraceRegs is 'struct pt_regs' which\n    is declared in linux/ptrace.h. Previously no PtraceRegs structure was\n    created on MIPS because 'struct user_regs_struct' doesn't exist there.\n    \n    Fallback to using pt_regs when the PtraceRegs structure is generated in\n    mksysinfo.sh, then adjust syscall_linux_mipsx.go to read the program\n    counter from the correct field.\n    \n    In addition, implement PtraceGetRegs and PtraceSetRegs on all 3 ABI\n    variants.\n    \n    syscall_linux_mips64x.go can now be removed since the ptrace code on\n    all 3 ABIs is identical.\n    \n    Reviewed-on: https://go-review.googlesource.com/46150\n\nFrom-SVN: r249472", "tree": {"sha": "51c565ff797d0d2f7799adc97742845805f0a8a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51c565ff797d0d2f7799adc97742845805f0a8a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d4b68a7c4091c99c8d591e93efae5748a7ced13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d4b68a7c4091c99c8d591e93efae5748a7ced13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d4b68a7c4091c99c8d591e93efae5748a7ced13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d4b68a7c4091c99c8d591e93efae5748a7ced13/comments", "author": null, "committer": null, "parents": [{"sha": "4ded86690e9fd3c71e1ff47beea31079ad8a7b4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ded86690e9fd3c71e1ff47beea31079ad8a7b4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ded86690e9fd3c71e1ff47beea31079ad8a7b4f"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "5ef0cc0c78c0128019970e408710feb346d3d33e", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4b68a7c4091c99c8d591e93efae5748a7ced13/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4b68a7c4091c99c8d591e93efae5748a7ced13/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=8d4b68a7c4091c99c8d591e93efae5748a7ced13", "patch": "@@ -1,4 +1,4 @@\n-6449e2832eef94eacf89c88fa16bede637f729ba\n+b2bebba1f8a8185546c47f8460a3d5c2e31d0434\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "57560cd0e5f19c67f65c73263fc9b6638fad202e", "filename": "libgo/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4b68a7c4091c99c8d591e93efae5748a7ced13/libgo%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4b68a7c4091c99c8d591e93efae5748a7ced13/libgo%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfig.h.in?ref=8d4b68a7c4091c99c8d591e93efae5748a7ced13", "patch": "@@ -114,6 +114,9 @@\n /* Define to 1 if you have the <linux/netlink.h> header file. */\n #undef HAVE_LINUX_NETLINK_H\n \n+/* Define to 1 if you have the <linux/ptrace.h> header file. */\n+#undef HAVE_LINUX_PTRACE_H\n+\n /* Define to 1 if you have the <linux/reboot.h> header file. */\n #undef HAVE_LINUX_REBOOT_H\n "}, {"sha": "0700b7b6bb60530e24b952c2f835d7336db9047c", "filename": "libgo/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4b68a7c4091c99c8d591e93efae5748a7ced13/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4b68a7c4091c99c8d591e93efae5748a7ced13/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=8d4b68a7c4091c99c8d591e93efae5748a7ced13", "patch": "@@ -14782,7 +14782,7 @@ $as_echo \"#define HAVE_GETIPINFO 1\" >>confdefs.h\n   fi\n \n \n-for ac_header in port.h sched.h semaphore.h sys/file.h sys/mman.h syscall.h sys/epoll.h sys/event.h sys/inotify.h sys/ptrace.h sys/syscall.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/if.h net/if_arp.h net/route.h netpacket/packet.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h utime.h linux/ether.h linux/fs.h linux/reboot.h netinet/icmp6.h netinet/in_syst.h netinet/ip.h netinet/ip_mroute.h netinet/if_ether.h\n+for ac_header in port.h sched.h semaphore.h sys/file.h sys/mman.h syscall.h sys/epoll.h sys/event.h sys/inotify.h sys/ptrace.h sys/syscall.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/if.h net/if_arp.h net/route.h netpacket/packet.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h utime.h linux/ether.h linux/fs.h linux/ptrace.h linux/reboot.h netinet/icmp6.h netinet/in_syst.h netinet/ip.h netinet/ip_mroute.h netinet/if_ether.h\n do :\n   as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n ac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\""}, {"sha": "d16547f4487121579b3e9afd80f75772f449123a", "filename": "libgo/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4b68a7c4091c99c8d591e93efae5748a7ced13/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4b68a7c4091c99c8d591e93efae5748a7ced13/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=8d4b68a7c4091c99c8d591e93efae5748a7ced13", "patch": "@@ -580,7 +580,7 @@ AC_C_BIGENDIAN\n \n GCC_CHECK_UNWIND_GETIPINFO\n \n-AC_CHECK_HEADERS(port.h sched.h semaphore.h sys/file.h sys/mman.h syscall.h sys/epoll.h sys/event.h sys/inotify.h sys/ptrace.h sys/syscall.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/if.h net/if_arp.h net/route.h netpacket/packet.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h utime.h linux/ether.h linux/fs.h linux/reboot.h netinet/icmp6.h netinet/in_syst.h netinet/ip.h netinet/ip_mroute.h netinet/if_ether.h)\n+AC_CHECK_HEADERS(port.h sched.h semaphore.h sys/file.h sys/mman.h syscall.h sys/epoll.h sys/event.h sys/inotify.h sys/ptrace.h sys/syscall.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/if.h net/if_arp.h net/route.h netpacket/packet.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h utime.h linux/ether.h linux/fs.h linux/ptrace.h linux/reboot.h netinet/icmp6.h netinet/in_syst.h netinet/ip.h netinet/ip_mroute.h netinet/if_ether.h)\n \n AC_CHECK_HEADERS([linux/filter.h linux/if_addr.h linux/if_ether.h linux/if_tun.h linux/netlink.h linux/rtnetlink.h], [], [],\n [#ifdef HAVE_SYS_SOCKET_H"}, {"sha": "06dd1ea2bc379f85a91ebda8ea8d27be8526f8c7", "filename": "libgo/go/syscall/syscall_linux_mipsx.go", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4b68a7c4091c99c8d591e93efae5748a7ced13/libgo%2Fgo%2Fsyscall%2Fsyscall_linux_mipsx.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4b68a7c4091c99c8d591e93efae5748a7ced13/libgo%2Fgo%2Fsyscall%2Fsyscall_linux_mipsx.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsyscall_linux_mipsx.go?ref=8d4b68a7c4091c99c8d591e93efae5748a7ced13", "patch": "@@ -3,10 +3,24 @@\n // license that can be found in the LICENSE file.\n \n // +build linux\n-// +build mips mipsle\n+// +build mips mipsle mips64 mips64le mips64p32 mips64p32le\n \n package syscall\n \n-func (r *PtraceRegs) PC() uint64 { return uint64(r.Regs[64]) }\n+import \"unsafe\"\n \n-func (r *PtraceRegs) SetPC(pc uint64) { r.Regs[64] = uint32(pc) }\n+func (r *PtraceRegs) PC() uint64 {\n+\treturn r.Cp0_epc\n+}\n+\n+func (r *PtraceRegs) SetPC(pc uint64) {\n+\tr.Cp0_epc = pc\n+}\n+\n+func PtraceGetRegs(pid int, regsout *PtraceRegs) (err error) {\n+\treturn ptrace(PTRACE_GETREGS, pid, 0, uintptr(unsafe.Pointer(regsout)))\n+}\n+\n+func PtraceSetRegs(pid int, regs *PtraceRegs) (err error) {\n+\treturn ptrace(PTRACE_SETREGS, pid, 0, uintptr(unsafe.Pointer(regs)))\n+}"}, {"sha": "8fd8eadefc626241c1813002588283e52bca956c", "filename": "libgo/mksysinfo.sh", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4b68a7c4091c99c8d591e93efae5748a7ced13/libgo%2Fmksysinfo.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4b68a7c4091c99c8d591e93efae5748a7ced13/libgo%2Fmksysinfo.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmksysinfo.sh?ref=8d4b68a7c4091c99c8d591e93efae5748a7ced13", "patch": "@@ -317,9 +317,13 @@ if test \"$regs\" = \"\"; then\n     upcase_fields \"__user_psw_struct\" \"PtracePsw\" >> ${OUT} || true\n     upcase_fields \"__user_fpregs_struct\" \"PtraceFpregs\" >> ${OUT} || true\n     upcase_fields \"__user_per_struct\" \"PtracePer\" >> ${OUT} || true\n+  else\n+    # mips*\n+    regs=`grep '^type _pt_regs struct' gen-sysinfo.go || true`\n   fi\n fi\n if test \"$regs\" != \"\"; then\n+  regs=`echo $regs | sed -e 's/type _pt_regs struct//'`\n   regs=`echo $regs |\n     sed -e 's/type __*user_regs_struct struct //' -e 's/[{}]//g'`\n   regs=`echo $regs | sed -e s'/^ *//'`"}, {"sha": "a1afc7d119c56bd9a6ba4d356a0d423e83fcdeb4", "filename": "libgo/sysinfo.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4b68a7c4091c99c8d591e93efae5748a7ced13/libgo%2Fsysinfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4b68a7c4091c99c8d591e93efae5748a7ced13/libgo%2Fsysinfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fsysinfo.c?ref=8d4b68a7c4091c99c8d591e93efae5748a7ced13", "patch": "@@ -102,6 +102,9 @@\n #if defined(HAVE_LINUX_NETLINK_H)\n #include <linux/netlink.h>\n #endif\n+#if defined(HAVE_LINUX_PTRACE_H)\n+#include <linux/ptrace.h>\n+#endif\n #if defined(HAVE_LINUX_RTNETLINK_H)\n #include <linux/rtnetlink.h>\n #endif"}]}