{"sha": "75dcd8fe99a9b22bf81705c4c898241b042c0873", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVkY2Q4ZmU5OWE5YjIyYmY4MTcwNWM0Yzg5ODI0MWIwNDJjMDg3Mw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@redhat.com", "date": "2001-09-11T04:40:44Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2001-09-11T04:40:44Z"}, "message": "Do not allow -mgp32 -mfp64; Fix int/long printf warning\n\nFrom-SVN: r45533", "tree": {"sha": "2c45bce97e8151b3a8670a8538d39d5a3a176793", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c45bce97e8151b3a8670a8538d39d5a3a176793"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75dcd8fe99a9b22bf81705c4c898241b042c0873", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75dcd8fe99a9b22bf81705c4c898241b042c0873", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75dcd8fe99a9b22bf81705c4c898241b042c0873", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75dcd8fe99a9b22bf81705c4c898241b042c0873/comments", "author": null, "committer": null, "parents": [{"sha": "fe5de1176eb897b568be6d0a04e580d4a029280a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe5de1176eb897b568be6d0a04e580d4a029280a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe5de1176eb897b568be6d0a04e580d4a029280a"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "f6e750c5d822a4c3754fe1a7110e0c211c898618", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75dcd8fe99a9b22bf81705c4c898241b042c0873/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75dcd8fe99a9b22bf81705c4c898241b042c0873/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75dcd8fe99a9b22bf81705c4c898241b042c0873", "patch": "@@ -1,3 +1,19 @@\n+2001-09-11  Michael Meissner  <meissner@redhat.com>\n+\n+\t* config/mips/mips.h (CC1_SPEC): If -mgp32 default to -mfp32, and\n+\tgive an error if the user uses -mfp32.\n+\t(CPP_FPR_SPEC): Define __mips_fpr to be 32 or 64 depending on the\n+\tdefault options.\n+\t(CPP_SPEC): Define __mips_fpr to be 32 or 64, depending on the\n+\tfloating point register size.\n+\t(EXTRA_SPECS): Add CPP_FPR_SPEC.\n+\n+\t* config/mips/netbsd.h (ASM_FINISH_DECLARE_OBJECT): Use\n+\tHOST_WIDE_INT_PRINT_DEC to properly print the result of\n+\tint_size_in_bytes.\n+\t* config/mips/elf.h (ASM_FINISH_DECLARE_OBJECT): Ditto.\n+\t* config/mips/elf64.h (ASM_FINISH_DECLARE_OBJECT): Ditto.\n+\n 2001-09-11  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* dbxout.c (dbxout_parms): Fix typo in comment."}, {"sha": "ef942179e70dc530c99af14b503cea55f760129a", "filename": "gcc/config/mips/elf.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75dcd8fe99a9b22bf81705c4c898241b042c0873/gcc%2Fconfig%2Fmips%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75dcd8fe99a9b22bf81705c4c898241b042c0873/gcc%2Fconfig%2Fmips%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf.h?ref=75dcd8fe99a9b22bf81705c4c898241b042c0873", "patch": "@@ -174,7 +174,10 @@ do {\t\t\t\t\t\t\t\t\t \\\n \t size_directive_output = 1;\t\t\t\t\t \\\n \t fprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\t \\\n \t assemble_name (FILE, name);\t\t\t\t\t \\\n-\t fprintf (FILE, \",%d\\n\", int_size_in_bytes (TREE_TYPE (DECL)));  \\\n+\t fprintf (FILE, \",\");\t\t\t\t\t\t \\\n+\t fprintf (FILE, HOST_WIDE_INT_PRINT_DEC,\t\t\t \\\n+\t\t  int_size_in_bytes (TREE_TYPE (DECL)));\t\t \\\n+\t fprintf (FILE, \"\\n\");\t\t\t\t\t\t \\\n        }\t\t\t\t\t\t\t\t \\\n    } while (0)\n "}, {"sha": "e07ce469af0f0576be715d15db108f2893842fb3", "filename": "gcc/config/mips/elf64.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75dcd8fe99a9b22bf81705c4c898241b042c0873/gcc%2Fconfig%2Fmips%2Felf64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75dcd8fe99a9b22bf81705c4c898241b042c0873/gcc%2Fconfig%2Fmips%2Felf64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf64.h?ref=75dcd8fe99a9b22bf81705c4c898241b042c0873", "patch": "@@ -153,7 +153,10 @@ do {\t\t\t\t\t\t\t\t\t \\\n \t size_directive_output = 1;\t\t\t\t\t \\\n \t fprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\t \\\n \t assemble_name (FILE, name);\t\t\t\t\t \\\n-\t fprintf (FILE, \",%d\\n\", int_size_in_bytes (TREE_TYPE (DECL)));  \\\n+\t fprintf (FILE, \",\");\t\t\t\t\t\t \\\n+\t fprintf (FILE, HOST_WIDE_INT_PRINT_DEC,\t\t\t \\\n+\t\t  int_size_in_bytes (TREE_TYPE (DECL)));\t\t \\\n+\t fprintf (FILE, \"\\n\");\t\t\t\t\t\t \\\n        }\t\t\t\t\t\t\t\t \\\n    } while (0)\n "}, {"sha": "81f675cd06a8fd604304bcff306853bf06b81298", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75dcd8fe99a9b22bf81705c4c898241b042c0873/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75dcd8fe99a9b22bf81705c4c898241b042c0873/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=75dcd8fe99a9b22bf81705c4c898241b042c0873", "patch": "@@ -952,6 +952,9 @@ while (0)\n #endif\n \n /* CC1_SPEC is the set of arguments to pass to the compiler proper.  */\n+/* Note, we will need to adjust the following if we ever find a MIPS variant\n+   that has 32-bit GPRs and 64-bit FPRs as well as fix all of the reload bugs\n+   that show up in this case.  */\n \n #ifndef CC1_SPEC\n #define CC1_SPEC \"\\\n@@ -962,6 +965,7 @@ while (0)\n %{mfp64:%{msingle-float:%emay not use both -mfp64 and -msingle-float}} \\\n %{mfp64:%{m4650:%emay not use both -mfp64 and -m4650}} \\\n %{mint64|mlong64|mlong32:-mexplicit-type-size }\\\n+%{mgp32: %{mfp64:%emay not use both -mgp32 and -mfp64} %{!mfp32: -mfp32}} \\\n %{G*} %{EB:-meb} %{EL:-mel} %{EB:%{EL:%emay not use both -EB and -EL}} \\\n %{pic-none:   -mno-half-pic} \\\n %{pic-lib:    -mhalf-pic} \\\n@@ -999,6 +1003,15 @@ while (0)\n #endif\n #endif\n \n+/* Define appropriate macros for fpr register size.  */\n+#ifndef CPP_FPR_SPEC\n+#if ((TARGET_DEFAULT | TARGET_CPU_DEFAULT) & MASK_FLOAT64)\n+#define CPP_FPR_SPEC \"-D__mips_fpr=64\"\n+#else\n+#define CPP_FPR_SPEC \"-D__mips_fpr=32\"\n+#endif\n+#endif\n+\n /* For C++ we need to ensure that _LANGUAGE_C_PLUS_PLUS is defined independent\n    of the source file extension.  */\n #undef CPLUSPLUS_CPP_SPEC\n@@ -1017,6 +1030,7 @@ while (0)\n %{mips3:-U__mips -D__mips=3 -D__mips64} \\\n %{mips4:-U__mips -D__mips=4 -D__mips64} \\\n %{mgp32:-U__mips64} %{mgp64:-D__mips64} \\\n+%{mfp32:-D__mips_fpr=32} %{mfp64:-D__mips_fpr=64} %{!mfp32: %{!mfp64: %{mgp32:-D__mips_fpr=32} %{!mgp32: %(cpp_fpr_spec)}}} \\\n %{msingle-float:%{!msoft-float:-D__mips_single_float}} \\\n %{m4650:%{!msoft-float:-D__mips_single_float}} \\\n %{msoft-float:-D__mips_soft_float} \\\n@@ -1044,6 +1058,7 @@ while (0)\n   { \"subtarget_cpp_spec\", SUBTARGET_CPP_SPEC },\t\t\t\t\\\n   { \"subtarget_cpp_size_spec\", SUBTARGET_CPP_SIZE_SPEC },\t\t\\\n   { \"long_max_spec\", LONG_MAX_SPEC },\t\t\t\t\t\\\n+  { \"cpp_fpr_spec\", CPP_FPR_SPEC },\t\t\t\t\t\\\n   { \"mips_as_asm_spec\", MIPS_AS_ASM_SPEC },\t\t\t\t\\\n   { \"gas_asm_spec\", GAS_ASM_SPEC },\t\t\t\t\t\\\n   { \"target_asm_spec\", TARGET_ASM_SPEC },\t\t\t\t\\"}, {"sha": "4cb20563079f68d33739ae5c1a73c63d30273ac4", "filename": "gcc/config/mips/netbsd.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75dcd8fe99a9b22bf81705c4c898241b042c0873/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75dcd8fe99a9b22bf81705c4c898241b042c0873/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fnetbsd.h?ref=75dcd8fe99a9b22bf81705c4c898241b042c0873", "patch": "@@ -175,7 +175,10 @@ do {\t\t\t\t\t\t\t\t\t \\\n \t size_directive_output = 1;\t\t\t\t\t \\\n \t fprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\t \\\n \t assemble_name (FILE, name);\t\t\t\t\t \\\n-\t fprintf (FILE, \",%d\\n\",  int_size_in_bytes (TREE_TYPE (DECL))); \\\n+\t fprintf (FILE, \",\");\t\t\t\t\t\t \\\n+\t fprintf (FILE, HOST_WIDE_INT_PRINT_DEC,\t\t\t \\\n+\t\t  int_size_in_bytes (TREE_TYPE (DECL)));\t\t \\\n+\t fprintf (FILE, \"\\n\");\t\t\t\t\t\t \\\n        }\t\t\t\t\t\t\t\t \\\n    } while (0)\n "}]}