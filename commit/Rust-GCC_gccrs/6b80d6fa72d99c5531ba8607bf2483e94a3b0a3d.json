{"sha": "6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI4MGQ2ZmE3MmQ5OWM1NTMxYmE4NjA3YmYyNDgzZTk0YTNiMGEzZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-06-07T07:31:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-06-07T07:31:40Z"}, "message": "re PR tree-optimization/71428 (wrong code with -Os -fno-tree-forwprop (breaks in the .bswap dump))\n\n2016-06-07  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/71428\n\t* tree-ssa-math-opts.c (perform_symbolic_merge): Properly distinguish\n\tBIT_FIELD_REF op vs. load.\n\n\t* gcc.dg/torture/pr71428.c: New testcase.\n\nFrom-SVN: r237167", "tree": {"sha": "6ecaf37186bbcea2e7b4a966938060136e61cc60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ecaf37186bbcea2e7b4a966938060136e61cc60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f3f94375a989a45df3c315789f0fc62bbf39989", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f3f94375a989a45df3c315789f0fc62bbf39989", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f3f94375a989a45df3c315789f0fc62bbf39989"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "16e41e274e1e4f90f171551bfbf066592b7d9c13", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d", "patch": "@@ -1,3 +1,9 @@\n+2016-06-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/71428\n+\t* tree-ssa-math-opts.c (perform_symbolic_merge): Properly distinguish\n+\tBIT_FIELD_REF op vs. load.\n+\n 2016-06-07  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/71423"}, {"sha": "d7d651cf4d36bf9316b227f68e78eecc7636ec3d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d", "patch": "@@ -1,3 +1,8 @@\n+2016-06-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/71428\n+\t* gcc.dg/torture/pr71428.c: New testcase.\n+\n 2016-06-07  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/71423"}, {"sha": "b951fcd36c8dbc67960c2f528f462ccfc305ac85", "filename": "gcc/testsuite/gcc.dg/torture/pr71428.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71428.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71428.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71428.c?ref=6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-fno-tree-forwprop -Wno-psabi -w\" } */\n+\n+typedef unsigned short v64u16 __attribute__ ((vector_size (64)));\n+\n+v64u16\n+foo (v64u16 p1)\n+{\n+  p1[31] |= p1[1];\n+  return p1;\n+}\n+\n+int\n+main ()\n+{\n+  v64u16 x = foo ((v64u16){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 });\n+  if (x[31] != 1)\n+    __builtin_abort();\n+  return 0;\n+}"}, {"sha": "513ef0b3f4eb29a35eae8a0eb14ee8f8c24fcfd9", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=6b80d6fa72d99c5531ba8607bf2483e94a3b0a3d", "patch": "@@ -2164,10 +2164,12 @@ perform_symbolic_merge (gimple *source_stmt1, struct symbolic_number *n1,\n   struct symbolic_number *n_start;\n \n   tree rhs1 = gimple_assign_rhs1 (source_stmt1);\n-  if (TREE_CODE (rhs1) == BIT_FIELD_REF)\n+  if (TREE_CODE (rhs1) == BIT_FIELD_REF\n+      && TREE_CODE (TREE_OPERAND (rhs1, 0)) == SSA_NAME)\n     rhs1 = TREE_OPERAND (rhs1, 0);\n   tree rhs2 = gimple_assign_rhs1 (source_stmt2);\n-  if (TREE_CODE (rhs2) == BIT_FIELD_REF)\n+  if (TREE_CODE (rhs2) == BIT_FIELD_REF\n+      && TREE_CODE (TREE_OPERAND (rhs2, 0)) == SSA_NAME)\n     rhs2 = TREE_OPERAND (rhs2, 0);\n \n   /* Sources are different, cancel bswap if they are not memory location with"}]}