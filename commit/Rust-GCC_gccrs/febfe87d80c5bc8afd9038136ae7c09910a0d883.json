{"sha": "febfe87d80c5bc8afd9038136ae7c09910a0d883", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmViZmU4N2Q4MGM1YmM4YWZkOTAzODEzNmFlN2MwOTkxMGEwZDg4Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-05T08:12:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-05T08:12:44Z"}, "message": "print-rtl: Fix printing of CONST_STRING in DEBUG_INSNs [PR93399]\n\nThe following testcase fails to assemble, as CONST_STRING in the DEBUG_INSNs\nis printed as is, so if it contains \\n and/or \\r, we are in trouble:\n        .loc 1 14 3\n        # DEBUG haystack => [si]\n        # DEBUG needle => \"\n\"\nIn the gimple dumps we print those (STRING_CSTs) as\n  # DEBUG haystack => D#1\n  # DEBUG needle => \"\\n\"\nso this patch uses what we use in tree printing for the CONST_STRINGs too.\n\n2020-03-05  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/93399\n\t* tree-pretty-print.h (pretty_print_string): Declare.\n\t* tree-pretty-print.c (pretty_print_string): Remove forward\n\tdeclaration, no longer static.  Change nbytes parameter type\n\tfrom unsigned to size_t.\n\t* print-rtl.c (print_value) <case CONST_STRING>: Use\n\tpretty_print_string and for shrink way too long strings.\n\n\t* gcc.dg/pr93399.c: New test.", "tree": {"sha": "566935b3278662e79e7f1734be2771b92e29f48b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/566935b3278662e79e7f1734be2771b92e29f48b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/febfe87d80c5bc8afd9038136ae7c09910a0d883", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/febfe87d80c5bc8afd9038136ae7c09910a0d883", "html_url": "https://github.com/Rust-GCC/gccrs/commit/febfe87d80c5bc8afd9038136ae7c09910a0d883", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/febfe87d80c5bc8afd9038136ae7c09910a0d883/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9f90a25d4945e904839326957c7c4d34abd88dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9f90a25d4945e904839326957c7c4d34abd88dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9f90a25d4945e904839326957c7c4d34abd88dd"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "db58bbe662e3cb64f7fa3293065d3bf892092888", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/febfe87d80c5bc8afd9038136ae7c09910a0d883/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/febfe87d80c5bc8afd9038136ae7c09910a0d883/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=febfe87d80c5bc8afd9038136ae7c09910a0d883", "patch": "@@ -1,3 +1,13 @@\n+2020-03-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/93399\n+\t* tree-pretty-print.h (pretty_print_string): Declare.\n+\t* tree-pretty-print.c (pretty_print_string): Remove forward\n+\tdeclaration, no longer static.  Change nbytes parameter type\n+\tfrom unsigned to size_t.\n+\t* print-rtl.c (print_value) <case CONST_STRING>: Use\n+\tpretty_print_string and for shrink way too long strings.\n+\n 2020-03-05  Richard Biener  <rguenther@suse.de>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "611ea079c371d56540ed1d2d1616c126641a7e54", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/febfe87d80c5bc8afd9038136ae7c09910a0d883/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/febfe87d80c5bc8afd9038136ae7c09910a0d883/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=febfe87d80c5bc8afd9038136ae7c09910a0d883", "patch": "@@ -1685,7 +1685,9 @@ print_value (pretty_printer *pp, const_rtx x, int verbose)\n       pp_string (pp, tmp);\n       break;\n     case CONST_STRING:\n-      pp_printf (pp, \"\\\"%s\\\"\", XSTR (x, 0));\n+      pp_string (pp, \"\\\"\");\n+      pretty_print_string (pp, XSTR (x, 0), strlen (XSTR (x, 0)));\n+      pp_string (pp, \"\\\"\");\n       break;\n     case SYMBOL_REF:\n       pp_printf (pp, \"`%s'\", XSTR (x, 0));"}, {"sha": "5b94ab519a0a914d824a5f74024a3102281251a9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/febfe87d80c5bc8afd9038136ae7c09910a0d883/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/febfe87d80c5bc8afd9038136ae7c09910a0d883/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=febfe87d80c5bc8afd9038136ae7c09910a0d883", "patch": "@@ -1,5 +1,8 @@\n 2020-03-05  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/93399\n+\t* gcc.dg/pr93399.c: New test.\n+\n \tPR tree-optimization/93582\n \t* gcc.dg/tree-ssa/pr93582-11.c: New test.\n "}, {"sha": "3d9299018beec438c93b2a6e18d58a138b2d0a28", "filename": "gcc/testsuite/gcc.dg/pr93399.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/febfe87d80c5bc8afd9038136ae7c09910a0d883/gcc%2Ftestsuite%2Fgcc.dg%2Fpr93399.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/febfe87d80c5bc8afd9038136ae7c09910a0d883/gcc%2Ftestsuite%2Fgcc.dg%2Fpr93399.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr93399.c?ref=febfe87d80c5bc8afd9038136ae7c09910a0d883", "patch": "@@ -0,0 +1,17 @@\n+/* PR middle-end/93399 */\n+/* { dg-do assemble } */\n+/* { dg-options \"-fverbose-asm -dA -g -O3\" } */\n+\n+extern inline __attribute__ ((__always_inline__, __gnu_inline__)) char *\n+strstr (const char *haystack, const char *needle)\n+{\n+  return __builtin_strstr (haystack, needle);\n+}\n+\n+int\n+main (int argc, const char **argv)\n+{\n+  char *substr = strstr (argv[0], \"\\n\");\n+  char *another = strstr (argv[0], \"\\r\\n\");\n+  return 0;\n+}"}, {"sha": "885ca8cd32951de6e619c9aa716a0c372b15a0b5", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/febfe87d80c5bc8afd9038136ae7c09910a0d883/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/febfe87d80c5bc8afd9038136ae7c09910a0d883/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=febfe87d80c5bc8afd9038136ae7c09910a0d883", "patch": "@@ -45,7 +45,6 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Local functions, macros and variables.  */\n static const char *op_symbol (const_tree);\n-static void pretty_print_string (pretty_printer *, const char*, unsigned);\n static void newline_and_indent (pretty_printer *, int);\n static void maybe_init_pretty_print (FILE *);\n static void print_struct_decl (pretty_printer *, const_tree, int, dump_flags_t);\n@@ -4216,8 +4215,8 @@ print_call_name (pretty_printer *pp, tree node, dump_flags_t flags)\n /* Print the first N characters in the array STR, replacing non-printable\n    characters (including embedded nuls) with unambiguous escape sequences.  */\n \n-static void\n-pretty_print_string (pretty_printer *pp, const char *str, unsigned n)\n+void\n+pretty_print_string (pretty_printer *pp, const char *str, size_t n)\n {\n   if (str == NULL)\n     return;"}, {"sha": "33a2d4031695e8f20bd50380dcde42bf3e4dbd8b", "filename": "gcc/tree-pretty-print.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/febfe87d80c5bc8afd9038136ae7c09910a0d883/gcc%2Ftree-pretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/febfe87d80c5bc8afd9038136ae7c09910a0d883/gcc%2Ftree-pretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.h?ref=febfe87d80c5bc8afd9038136ae7c09910a0d883", "patch": "@@ -47,6 +47,7 @@ extern void print_declaration (pretty_printer *, tree, int, dump_flags_t);\n extern int op_code_prio (enum tree_code);\n extern int op_prio (const_tree);\n extern const char *op_symbol_code (enum tree_code);\n+extern void pretty_print_string (pretty_printer *, const char *, size_t);\n extern void print_call_name (pretty_printer *, tree, dump_flags_t);\n extern void percent_K_format (text_info *, location_t, tree);\n extern void pp_tree_identifier (pretty_printer *, tree);"}]}