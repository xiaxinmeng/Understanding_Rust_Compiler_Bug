{"sha": "1f2911476d723f30c53dd175589b2b561e36c439", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYyOTExNDc2ZDcyM2YzMGM1M2RkMTc1NTg5YjJiNTYxZTM2YzQzOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-06-29T14:34:22Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-06-29T14:34:22Z"}, "message": "tree.c (build_vec_init_expr): Don't add TARGET_EXPR.\n\n\t* tree.c (build_vec_init_expr): Don't add TARGET_EXPR.\n\t* typeck2.c (digest_init_r): Handle VEC_INIT_EXPR.\n\t* semantics.c (cxx_eval_vec_init_1): Correct type.\n\nFrom-SVN: r175643", "tree": {"sha": "6c6ca2d903e9336dfcbe36e9d0b7d216bb748f01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c6ca2d903e9336dfcbe36e9d0b7d216bb748f01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f2911476d723f30c53dd175589b2b561e36c439", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f2911476d723f30c53dd175589b2b561e36c439", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f2911476d723f30c53dd175589b2b561e36c439", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f2911476d723f30c53dd175589b2b561e36c439/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dfedbe40550d1d5302ff20cf21d9ae5cc89921d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfedbe40550d1d5302ff20cf21d9ae5cc89921d5"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "e25f4e04490b29e2716e33c8f4643cd3d8652072", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f2911476d723f30c53dd175589b2b561e36c439/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f2911476d723f30c53dd175589b2b561e36c439/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1f2911476d723f30c53dd175589b2b561e36c439", "patch": "@@ -1,5 +1,9 @@\n 2011-06-29  Jason Merrill  <jason@redhat.com>\n \n+\t* tree.c (build_vec_init_expr): Don't add TARGET_EXPR.\n+\t* typeck2.c (digest_init_r): Handle VEC_INIT_EXPR.\n+\t* semantics.c (cxx_eval_vec_init_1): Correct type.\n+\n \t* init.c (build_value_init): Decide whether or not to zero-initialize\n \tbased on user-providedness of default ctor, not any ctor.\n \t(build_value_init_noctor): Adjust assert."}, {"sha": "8121a0020b528389a8adb26fedecdb5033039f3a", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f2911476d723f30c53dd175589b2b561e36c439/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f2911476d723f30c53dd175589b2b561e36c439/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=1f2911476d723f30c53dd175589b2b561e36c439", "patch": "@@ -6646,7 +6646,7 @@ cxx_eval_vec_init_1 (const constexpr_call *call, tree atype, tree init,\n \n   if (!*non_constant_p)\n     {\n-      init = build_constructor (TREE_TYPE (atype), n);\n+      init = build_constructor (atype, n);\n       TREE_CONSTANT (init) = true;\n       return init;\n     }"}, {"sha": "c50751f7ebb35e479d32359e42b9068d5c957260", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f2911476d723f30c53dd175589b2b561e36c439/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f2911476d723f30c53dd175589b2b561e36c439/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=1f2911476d723f30c53dd175589b2b561e36c439", "patch": "@@ -541,9 +541,6 @@ build_vec_init_expr (tree type, tree init, tsubst_flags_t complain)\n     VEC_INIT_EXPR_IS_CONSTEXPR (init) = true;\n   VEC_INIT_EXPR_VALUE_INIT (init) = value_init;\n \n-  init = build_target_expr (slot, init, complain);\n-  TARGET_EXPR_IMPLICIT_P (init) = 1;\n-\n   return init;\n }\n "}, {"sha": "023fab3321d36d9413c2a2a63cbc4953c996d1e1", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f2911476d723f30c53dd175589b2b561e36c439/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f2911476d723f30c53dd175589b2b561e36c439/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=1f2911476d723f30c53dd175589b2b561e36c439", "patch": "@@ -925,7 +925,7 @@ digest_init_r (tree type, tree init, bool nested, int flags,\n \t{\n \t  /* Allow the result of build_array_copy and of\n \t     build_value_init_noctor.  */\n-\t  if ((TREE_CODE (init) == TARGET_EXPR\n+\t  if ((TREE_CODE (init) == VEC_INIT_EXPR\n \t       || TREE_CODE (init) == CONSTRUCTOR)\n \t      && (same_type_ignoring_top_level_qualifiers_p\n \t\t  (type, TREE_TYPE (init))))"}]}