{"sha": "296cc393ef40d49f9e8cd9ce7280cb173dbf93d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk2Y2MzOTNlZjQwZDQ5ZjllOGNkOWNlNzI4MGNiMTczZGJmOTNkOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-03-06T11:35:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-03-06T11:35:58Z"}, "message": "re PR target/79812 (ICE in simplify_binary_operation_1, at simplify-rtx.c:3586)\n\n\tPR target/79812\n\t* config/i386/sse.md (VI8F_256_512): Remove mode iterator.\n\t(<avx2_avx512>_perm<mode>): Rename to ...\n\t(avx2_perm<mode>): ... this.  Use VI8F_256 iterator instead\n\tof VI8F_256_512.\n\t(<avx512>_perm<mode>_mask): Rename to ...\n\t(avx512vl_perm<mode>_mask): ... this.  Use VI8F_256 iterator instead\n\tof VI8F_256_512.\n\t(<avx2_avx512>_perm<mode>_1<mask_name>): Rename to ...\n\t(avx2_perm<mode>_1<mask_name): ... this.  Use VI8F_256 iterator\n\tinstead of VI8F_256_512.\n\t(avx512f_perm<mode>): New define_expand.\n\t(avx512f_perm<mode>_mask): Likewise.\n\t(avx512f_perm<mode>_1<mask_name>): New define_insn.\n\t(<avx512>_vec_dup<mode>_1): Fix up vec_select mode.\n\n\t* gcc.target/i386/avx512f-vpermq-imm-3.c: New test.\n\nFrom-SVN: r245915", "tree": {"sha": "f03b6970b62318cffdec898ee0caf8bc295aec2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f03b6970b62318cffdec898ee0caf8bc295aec2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/296cc393ef40d49f9e8cd9ce7280cb173dbf93d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/296cc393ef40d49f9e8cd9ce7280cb173dbf93d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/296cc393ef40d49f9e8cd9ce7280cb173dbf93d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/296cc393ef40d49f9e8cd9ce7280cb173dbf93d8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca8942a34aba3b4d97b1c5f8fd63a389fa63749e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca8942a34aba3b4d97b1c5f8fd63a389fa63749e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca8942a34aba3b4d97b1c5f8fd63a389fa63749e"}], "stats": {"total": 147, "additions": 122, "deletions": 25}, "files": [{"sha": "27a3472543d48fdf2b21e3283716fa9504ba236f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/296cc393ef40d49f9e8cd9ce7280cb173dbf93d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/296cc393ef40d49f9e8cd9ce7280cb173dbf93d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=296cc393ef40d49f9e8cd9ce7280cb173dbf93d8", "patch": "@@ -1,3 +1,21 @@\n+2017-03-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/79812\n+\t* config/i386/sse.md (VI8F_256_512): Remove mode iterator.\n+\t(<avx2_avx512>_perm<mode>): Rename to ...\n+\t(avx2_perm<mode>): ... this.  Use VI8F_256 iterator instead\n+\tof VI8F_256_512.\n+\t(<avx512>_perm<mode>_mask): Rename to ...\n+\t(avx512vl_perm<mode>_mask): ... this.  Use VI8F_256 iterator instead\n+\tof VI8F_256_512.\n+\t(<avx2_avx512>_perm<mode>_1<mask_name>): Rename to ...\n+\t(avx2_perm<mode>_1<mask_name): ... this.  Use VI8F_256 iterator\n+\tinstead of VI8F_256_512.\n+\t(avx512f_perm<mode>): New define_expand.\n+\t(avx512f_perm<mode>_mask): Likewise.\n+\t(avx512f_perm<mode>_1<mask_name>): New define_insn.\n+\t(<avx512>_vec_dup<mode>_1): Fix up vec_select mode.\n+\n 2017-03-06  Prachi Godbole  <prachi.godbole@imgtec.com>\n \n \t* config/mips/mips-msa.md (msa_fmax_a_<msafmt>, msa_fmin_a_<msafmt>,"}, {"sha": "ac63235e38f92296143011e4a300050edb18724c", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 94, "deletions": 25, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/296cc393ef40d49f9e8cd9ce7280cb173dbf93d8/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/296cc393ef40d49f9e8cd9ce7280cb173dbf93d8/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=296cc393ef40d49f9e8cd9ce7280cb173dbf93d8", "patch": "@@ -549,8 +549,6 @@\n (define_mode_iterator VI8F_128 [V2DI V2DF])\n (define_mode_iterator VI4F_256 [V8SI V8SF])\n (define_mode_iterator VI8F_256 [V4DI V4DF])\n-(define_mode_iterator VI8F_256_512\n-  [V4DI V4DF (V8DI \"TARGET_AVX512F\") (V8DF \"TARGET_AVX512F\")])\n (define_mode_iterator VI48F_256_512\n   [V8SI V8SF\n   (V16SI \"TARGET_AVX512F\") (V16SF \"TARGET_AVX512F\")\n@@ -17306,43 +17304,43 @@\n    (set_attr \"prefix\" \"<mask_prefix2>\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_expand \"<avx2_avx512>_perm<mode>\"\n-  [(match_operand:VI8F_256_512 0 \"register_operand\")\n-   (match_operand:VI8F_256_512 1 \"nonimmediate_operand\")\n+(define_expand \"avx2_perm<mode>\"\n+  [(match_operand:VI8F_256 0 \"register_operand\")\n+   (match_operand:VI8F_256 1 \"nonimmediate_operand\")\n    (match_operand:SI 2 \"const_0_to_255_operand\")]\n   \"TARGET_AVX2\"\n {\n   int mask = INTVAL (operands[2]);\n-  emit_insn (gen_<avx2_avx512>_perm<mode>_1 (operands[0], operands[1],\n-\t\t\t\t\t      GEN_INT ((mask >> 0) & 3),\n-\t\t\t\t\t      GEN_INT ((mask >> 2) & 3),\n-\t\t\t\t\t      GEN_INT ((mask >> 4) & 3),\n-\t\t\t\t\t      GEN_INT ((mask >> 6) & 3)));\n+  emit_insn (gen_avx2_perm<mode>_1 (operands[0], operands[1],\n+\t\t\t\t    GEN_INT ((mask >> 0) & 3),\n+\t\t\t\t    GEN_INT ((mask >> 2) & 3),\n+\t\t\t\t    GEN_INT ((mask >> 4) & 3),\n+\t\t\t\t    GEN_INT ((mask >> 6) & 3)));\n   DONE;\n })\n \n-(define_expand \"<avx512>_perm<mode>_mask\"\n-  [(match_operand:VI8F_256_512 0 \"register_operand\")\n-   (match_operand:VI8F_256_512 1 \"nonimmediate_operand\")\n+(define_expand \"avx512vl_perm<mode>_mask\"\n+  [(match_operand:VI8F_256 0 \"register_operand\")\n+   (match_operand:VI8F_256 1 \"nonimmediate_operand\")\n    (match_operand:SI 2 \"const_0_to_255_operand\")\n-   (match_operand:VI8F_256_512 3 \"vector_move_operand\")\n+   (match_operand:VI8F_256 3 \"vector_move_operand\")\n    (match_operand:<avx512fmaskmode> 4 \"register_operand\")]\n-  \"TARGET_AVX512F\"\n+  \"TARGET_AVX512VL\"\n {\n   int mask = INTVAL (operands[2]);\n   emit_insn (gen_<avx2_avx512>_perm<mode>_1_mask (operands[0], operands[1],\n-\t\t\t\t\t\t   GEN_INT ((mask >> 0) & 3),\n-\t\t\t\t\t\t   GEN_INT ((mask >> 2) & 3),\n-\t\t\t\t\t\t   GEN_INT ((mask >> 4) & 3),\n-\t\t\t\t\t\t   GEN_INT ((mask >> 6) & 3),\n-\t\t\t\t\t\t   operands[3], operands[4]));\n+\t\t\t\t\t\t  GEN_INT ((mask >> 0) & 3),\n+\t\t\t\t\t\t  GEN_INT ((mask >> 2) & 3),\n+\t\t\t\t\t\t  GEN_INT ((mask >> 4) & 3),\n+\t\t\t\t\t\t  GEN_INT ((mask >> 6) & 3),\n+\t\t\t\t\t\t  operands[3], operands[4]));\n   DONE;\n })\n \n-(define_insn \"<avx2_avx512>_perm<mode>_1<mask_name>\"\n-  [(set (match_operand:VI8F_256_512 0 \"register_operand\" \"=v\")\n-\t(vec_select:VI8F_256_512\n-\t  (match_operand:VI8F_256_512 1 \"nonimmediate_operand\" \"vm\")\n+(define_insn \"avx2_perm<mode>_1<mask_name>\"\n+  [(set (match_operand:VI8F_256 0 \"register_operand\" \"=v\")\n+\t(vec_select:VI8F_256\n+\t  (match_operand:VI8F_256 1 \"nonimmediate_operand\" \"vm\")\n \t  (parallel [(match_operand 2 \"const_0_to_3_operand\")\n \t\t     (match_operand 3 \"const_0_to_3_operand\")\n \t\t     (match_operand 4 \"const_0_to_3_operand\")\n@@ -17361,6 +17359,77 @@\n    (set_attr \"prefix\" \"<mask_prefix2>\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n+(define_expand \"avx512f_perm<mode>\"\n+  [(match_operand:V8FI 0 \"register_operand\")\n+   (match_operand:V8FI 1 \"nonimmediate_operand\")\n+   (match_operand:SI 2 \"const_0_to_255_operand\")]\n+  \"TARGET_AVX512F\"\n+{\n+  int mask = INTVAL (operands[2]);\n+  emit_insn (gen_avx512f_perm<mode>_1 (operands[0], operands[1],\n+\t\t\t\t       GEN_INT ((mask >> 0) & 3),\n+\t\t\t\t       GEN_INT ((mask >> 2) & 3),\n+\t\t\t\t       GEN_INT ((mask >> 4) & 3),\n+\t\t\t\t       GEN_INT ((mask >> 6) & 3),\n+\t\t\t\t       GEN_INT (((mask >> 0) & 3) + 4),\n+\t\t\t\t       GEN_INT (((mask >> 2) & 3) + 4),\n+\t\t\t\t       GEN_INT (((mask >> 4) & 3) + 4),\n+\t\t\t\t       GEN_INT (((mask >> 6) & 3) + 4)));\n+  DONE;\n+})\n+\n+(define_expand \"avx512f_perm<mode>_mask\"\n+  [(match_operand:V8FI 0 \"register_operand\")\n+   (match_operand:V8FI 1 \"nonimmediate_operand\")\n+   (match_operand:SI 2 \"const_0_to_255_operand\")\n+   (match_operand:V8FI 3 \"vector_move_operand\")\n+   (match_operand:<avx512fmaskmode> 4 \"register_operand\")]\n+  \"TARGET_AVX512F\"\n+{\n+  int mask = INTVAL (operands[2]);\n+  emit_insn (gen_avx512f_perm<mode>_1_mask (operands[0], operands[1],\n+\t\t\t\t\t    GEN_INT ((mask >> 0) & 3),\n+\t\t\t\t\t    GEN_INT ((mask >> 2) & 3),\n+\t\t\t\t\t    GEN_INT ((mask >> 4) & 3),\n+\t\t\t\t\t    GEN_INT ((mask >> 6) & 3),\n+\t\t\t\t\t    GEN_INT (((mask >> 0) & 3) + 4),\n+\t\t\t\t\t    GEN_INT (((mask >> 2) & 3) + 4),\n+\t\t\t\t\t    GEN_INT (((mask >> 4) & 3) + 4),\n+\t\t\t\t\t    GEN_INT (((mask >> 6) & 3) + 4),\n+\t\t\t\t\t    operands[3], operands[4]));\n+  DONE;\n+})\n+\n+(define_insn \"avx512f_perm<mode>_1<mask_name>\"\n+  [(set (match_operand:V8FI 0 \"register_operand\" \"=v\")\n+\t(vec_select:V8FI\n+\t  (match_operand:V8FI 1 \"nonimmediate_operand\" \"vm\")\n+\t  (parallel [(match_operand 2 \"const_0_to_3_operand\")\n+\t\t     (match_operand 3 \"const_0_to_3_operand\")\n+\t\t     (match_operand 4 \"const_0_to_3_operand\")\n+\t\t     (match_operand 5 \"const_0_to_3_operand\")\n+\t\t     (match_operand 6 \"const_4_to_7_operand\")\n+\t\t     (match_operand 7 \"const_4_to_7_operand\")\n+\t\t     (match_operand 8 \"const_4_to_7_operand\")\n+\t\t     (match_operand 9 \"const_4_to_7_operand\")])))]\n+  \"TARGET_AVX512F && <mask_mode512bit_condition>\n+   && (INTVAL (operands[2]) == (INTVAL (operands[6]) - 4)\n+       && INTVAL (operands[3]) == (INTVAL (operands[7]) - 4)\n+       && INTVAL (operands[4]) == (INTVAL (operands[8]) - 4)\n+       && INTVAL (operands[5]) == (INTVAL (operands[9]) - 4))\"\n+{\n+  int mask = 0;\n+  mask |= INTVAL (operands[2]) << 0;\n+  mask |= INTVAL (operands[3]) << 2;\n+  mask |= INTVAL (operands[4]) << 4;\n+  mask |= INTVAL (operands[5]) << 6;\n+  operands[2] = GEN_INT (mask);\n+  return \"vperm<ssemodesuffix>\\t{%2, %1, %0<mask_operand10>|%0<mask_operand10>, %1, %2}\";\n+}\n+  [(set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix\" \"<mask_prefix2>\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n (define_insn \"avx2_permv2ti\"\n   [(set (match_operand:V4DI 0 \"register_operand\" \"=x\")\n \t(unspec:V4DI\n@@ -17389,7 +17458,7 @@\n (define_insn \"<avx512>_vec_dup<mode>_1\"\n   [(set (match_operand:VI_AVX512BW 0 \"register_operand\" \"=v,v\")\n \t(vec_duplicate:VI_AVX512BW\n-\t  (vec_select:VI_AVX512BW\n+\t  (vec_select:<ssescalarmode>\n \t    (match_operand:VI_AVX512BW 1 \"nonimmediate_operand\" \"v,m\")\n \t    (parallel [(const_int 0)]))))]\n   \"TARGET_AVX512F\""}, {"sha": "636cbee880395da7fcfa1d78b967aadefc746dbd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/296cc393ef40d49f9e8cd9ce7280cb173dbf93d8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/296cc393ef40d49f9e8cd9ce7280cb173dbf93d8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=296cc393ef40d49f9e8cd9ce7280cb173dbf93d8", "patch": "@@ -1,3 +1,8 @@\n+2017-03-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/79812\n+\t* gcc.target/i386/avx512f-vpermq-imm-3.c: New test.\n+\n 2017-03-06  Toma Tabacu  <toma.tabacu@imgtec.com>\n \n \t* gcc.target/mips/inline-memcpy-3.c (dg-options): Add -mabi=32."}, {"sha": "3b1cd9e60e204de2687a0ba376ee2792de7d006c", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vpermq-imm-3.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/296cc393ef40d49f9e8cd9ce7280cb173dbf93d8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermq-imm-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/296cc393ef40d49f9e8cd9ce7280cb173dbf93d8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermq-imm-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vpermq-imm-3.c?ref=296cc393ef40d49f9e8cd9ce7280cb173dbf93d8", "patch": "@@ -0,0 +1,5 @@\n+/* PR target/79812 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx512f\" } */\n+\n+#include \"avx512f-vpermq-imm-2.c\""}]}