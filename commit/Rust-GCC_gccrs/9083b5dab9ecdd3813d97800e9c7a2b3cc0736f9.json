{"sha": "9083b5dab9ecdd3813d97800e9c7a2b3cc0736f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA4M2I1ZGFiOWVjZGQzODEzZDk3ODAwZTljN2EyYjNjYzA3MzZmOQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-02-12T14:10:21Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-02-12T14:10:21Z"}, "message": "h8300.md (a peephole2): Don't handle 65535.\n\n\t* config/h8300/h8300.md (a peephole2): Don't handle 65535.\n\t(two peephole2): New.\n\nFrom-SVN: r62764", "tree": {"sha": "45992ba0cc317944e33f5c4a1fca6cdfea76c778", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45992ba0cc317944e33f5c4a1fca6cdfea76c778"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9083b5dab9ecdd3813d97800e9c7a2b3cc0736f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9083b5dab9ecdd3813d97800e9c7a2b3cc0736f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9083b5dab9ecdd3813d97800e9c7a2b3cc0736f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9083b5dab9ecdd3813d97800e9c7a2b3cc0736f9/comments", "author": null, "committer": null, "parents": [{"sha": "86bc9b196b775eee1dbf91e962d68a9135f50923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86bc9b196b775eee1dbf91e962d68a9135f50923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86bc9b196b775eee1dbf91e962d68a9135f50923"}], "stats": {"total": 54, "additions": 52, "deletions": 2}, "files": [{"sha": "b81e4c8419c438726b51561b7198d3223efec9f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9083b5dab9ecdd3813d97800e9c7a2b3cc0736f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9083b5dab9ecdd3813d97800e9c7a2b3cc0736f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9083b5dab9ecdd3813d97800e9c7a2b3cc0736f9", "patch": "@@ -1,3 +1,8 @@\n+2003-02-12  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (a peephole2): Don't handle 65535.\n+\t(two peephole2): New.\n+\n 2003-02-12  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (several peephole2): Replace"}, {"sha": "c9cd5f5aff61f5d283125bbd13bad0460fdf790e", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 47, "deletions": 2, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9083b5dab9ecdd3813d97800e9c7a2b3cc0736f9/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9083b5dab9ecdd3813d97800e9c7a2b3cc0736f9/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=9083b5dab9ecdd3813d97800e9c7a2b3cc0736f9", "patch": "@@ -3500,8 +3500,7 @@\n        || INTVAL (operands[1]) == 31\n        || INTVAL (operands[1]) == 63\n        || INTVAL (operands[1]) == 127\n-       || INTVAL (operands[1]) == 255\n-       || INTVAL (operands[1]) == 65535)\"\n+       || INTVAL (operands[1]) == 255)\"\n   [(set (match_dup 0)\n \t(and:SI (match_dup 0)\n \t\t(match_dup 5)))\n@@ -3516,6 +3515,52 @@\n \t\t  gen_rtx_EQ (VOIDmode, cc0_rtx, const0_rtx));\n    operands[5] = GEN_INT (~INTVAL (operands[1]));\")\n \n+;; Transform A <= 255 to (A & 0xff00) == 0.\n+\n+(define_peephole2\n+  [(set (cc0)\n+\t(compare:HI (match_operand:HI 0 \"register_operand\" \"\")\n+\t\t    (const_int 255)))\n+   (set (pc)\n+\t(if_then_else (match_operator 1 \"gtuleu_operator\"\n+\t\t\t[(cc0) (const_int 0)])\n+\t\t      (label_ref (match_operand 2 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"TARGET_H8300H || TARGET_H8300S\"\n+  [(set (cc0)\n+\t(and:HI (match_dup 0)\n+\t\t(const_int -256)))\n+   (set (pc)\n+\t(if_then_else (match_dup 4)\n+\t\t      (label_ref (match_dup 2))\n+\t\t      (pc)))]\n+  \"operands[4] = ((GET_CODE (operands[1]) == GTU) ?\n+\t\t  gen_rtx_NE (VOIDmode, cc0_rtx, const0_rtx) :\n+\t\t  gen_rtx_EQ (VOIDmode, cc0_rtx, const0_rtx));\")\n+\n+;; Transform A <= 65535 to (A & 0xffff0000) == 0.\n+\n+(define_peephole2\n+  [(set (cc0)\n+\t(compare:SI (match_operand:SI 0 \"register_operand\" \"\")\n+\t\t    (const_int 65535)))\n+   (set (pc)\n+\t(if_then_else (match_operator 1 \"gtuleu_operator\"\n+\t\t\t[(cc0) (const_int 0)])\n+\t\t      (label_ref (match_operand 2 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"TARGET_H8300H || TARGET_H8300S\"\n+  [(set (cc0)\n+\t(and:SI (match_dup 0)\n+\t\t(const_int -65536)))\n+   (set (pc)\n+\t(if_then_else (match_dup 4)\n+\t\t      (label_ref (match_dup 2))\n+\t\t      (pc)))]\n+  \"operands[4] = ((GET_CODE (operands[1]) == GTU) ?\n+\t\t  gen_rtx_NE (VOIDmode, cc0_rtx, const0_rtx) :\n+\t\t  gen_rtx_EQ (VOIDmode, cc0_rtx, const0_rtx));\")\n+\n ;; Narrow the mode of testing if possible.\n \n (define_peephole2"}]}