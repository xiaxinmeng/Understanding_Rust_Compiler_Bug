{"sha": "b1adf557d89a46c314979ae683dd126795d0b762", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFhZGY1NTdkODlhNDZjMzE0OTc5YWU2ODNkZDEyNjc5NWQwYjc2Mg==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-01-24T00:30:58Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-01-24T00:30:58Z"}, "message": "c-typeck.c (build_conditional_expr): Do not allow non-lvalue arrays.\n\n\t* c-typeck.c (build_conditional_expr): Do not allow non-lvalue\n\tarrays.\n\ntestsuite:\n\t* gcc.dg/c90-array-lval-7.c, gcc.dg/c99-array-lval-7.c: New tests.\n\nFrom-SVN: r76477", "tree": {"sha": "1964c9b4b71b361bace08af1119a0b3e78ed1d02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1964c9b4b71b361bace08af1119a0b3e78ed1d02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1adf557d89a46c314979ae683dd126795d0b762", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1adf557d89a46c314979ae683dd126795d0b762", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1adf557d89a46c314979ae683dd126795d0b762", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1adf557d89a46c314979ae683dd126795d0b762/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "251804e635b396f63548b40c20a8f8b324b49813", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251804e635b396f63548b40c20a8f8b324b49813", "html_url": "https://github.com/Rust-GCC/gccrs/commit/251804e635b396f63548b40c20a8f8b324b49813"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "fb5139592e7cfa0630e0ac2bd0456b50a8ba82f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1adf557d89a46c314979ae683dd126795d0b762/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1adf557d89a46c314979ae683dd126795d0b762/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1adf557d89a46c314979ae683dd126795d0b762", "patch": "@@ -1,3 +1,8 @@\n+2004-01-24  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* c-typeck.c (build_conditional_expr): Do not allow non-lvalue\n+\tarrays.\n+\n 2004-01-23  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* recog.c: Fix a typo in copyright."}, {"sha": "367285ecf1cc8f2dba03d4e0c830eeb128f519ef", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1adf557d89a46c314979ae683dd126795d0b762/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1adf557d89a46c314979ae683dd126795d0b762/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=b1adf557d89a46c314979ae683dd126795d0b762", "patch": "@@ -2651,6 +2651,14 @@ build_conditional_expr (tree ifexp, tree op1, tree op2)\n   type2 = TREE_TYPE (op2);\n   code2 = TREE_CODE (type2);\n \n+  /* C90 does not permit non-lvalue arrays in conditional expressions.\n+     In C99 they will be pointers by now.  */\n+  if (code1 == ARRAY_TYPE || code2 == ARRAY_TYPE)\n+    {\n+      error (\"non-lvalue array in conditional expression\");\n+      return error_mark_node;\n+    }\n+\n   /* Quickly detect the usual case where op1 and op2 have the same type\n      after promotion.  */\n   if (TYPE_MAIN_VARIANT (type1) == TYPE_MAIN_VARIANT (type2))"}, {"sha": "ecca656f31c0f0cc6f914cd922bae20faa4ebe13", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1adf557d89a46c314979ae683dd126795d0b762/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1adf557d89a46c314979ae683dd126795d0b762/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b1adf557d89a46c314979ae683dd126795d0b762", "patch": "@@ -1,3 +1,7 @@\n+2004-01-24  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* gcc.dg/c90-array-lval-7.c, gcc.dg/c99-array-lval-7.c: New tests.\n+\n 2004-01-23  Andrew Pinski  <apinski@apple.com>\n \n \t* gcc.dg/20030121-1.c: Move to .."}, {"sha": "ee8da4c70fd89b8ca32094d9180a6d5de9ae7173", "filename": "gcc/testsuite/gcc.dg/c90-array-lval-7.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1adf557d89a46c314979ae683dd126795d0b762/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-array-lval-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1adf557d89a46c314979ae683dd126795d0b762/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-array-lval-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-array-lval-7.c?ref=b1adf557d89a46c314979ae683dd126795d0b762", "patch": "@@ -0,0 +1,23 @@\n+/* Test for non-lvalue arrays: test that C90 does not allow them in\n+   conditional expressions, while in C99 they decay and are\n+   allowed.  */\n+\n+/* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=iso9899:1990 -pedantic-errors\" } */\n+\n+struct s { char c[1]; };\n+struct s a, b, c;\n+int d;\n+int e;\n+\n+void\n+bar (void)\n+{\n+  /* In C90, the non-lvalue arrays do not decay to pointers, and\n+     6.3.15 does not permit conditional expressions between arrays.\n+     In C99, they decay to pointers.  */\n+  (e ? (d ? b : c).c : (e ? b : c).c); /* { dg-bogus \"warning\" \"warning in place of error\" } */\n+}\n+\n+/* { dg-error \"array\" \"bad conditional\" { target *-*-* } 20 } */"}, {"sha": "3d70ed07b53111bc9091e925e703d5998c47dd0a", "filename": "gcc/testsuite/gcc.dg/c99-array-lval-7.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1adf557d89a46c314979ae683dd126795d0b762/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-array-lval-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1adf557d89a46c314979ae683dd126795d0b762/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-array-lval-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-array-lval-7.c?ref=b1adf557d89a46c314979ae683dd126795d0b762", "patch": "@@ -0,0 +1,21 @@\n+/* Test for non-lvalue arrays: test that C90 does not allow them in\n+   conditional expressions, while in C99 they decay and are\n+   allowed.  */\n+\n+/* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=iso9899:1999 -pedantic-errors\" } */\n+\n+struct s { char c[1]; };\n+struct s a, b, c;\n+int d;\n+int e;\n+\n+void\n+bar (void)\n+{\n+  /* In C90, the non-lvalue arrays do not decay to pointers, and\n+     6.3.15 does not permit conditional expressions between arrays.\n+     In C99, they decay to pointers.  */\n+  (e ? (d ? b : c).c : (e ? b : c).c);\n+}"}]}