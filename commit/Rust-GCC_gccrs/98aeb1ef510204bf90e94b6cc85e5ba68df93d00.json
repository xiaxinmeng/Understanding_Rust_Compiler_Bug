{"sha": "98aeb1ef510204bf90e94b6cc85e5ba68df93d00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThhZWIxZWY1MTAyMDRiZjkwZTk0YjZjYzg1ZTViYTY4ZGY5M2QwMA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-03-12T09:57:56Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-03-12T09:57:56Z"}, "message": "[Fortran, OpenACC] Reject vars of different scope in $acc declare (PR94120)\n\n2020-03-12  Tobias Burnus  <tobias@codesourcery.com>\n\n        PR middle-end/94120\n        * openmp.c (gfc_match_oacc_declare): Accept function-result\n        variables; reject variables declared in a different scoping unit.\n\n2020-03-12  Tobias Burnus  <tobias@codesourcery.com>\n\n        PR middle-end/94120\n        * gfortran.dg/goacc/pr78260-2.f90: Correct scan-tree-dump-times.\n        Extend test case to result variables.\n        * gfortran.dg/goacc/declare-2.f95: Actually check module-declaration\n        restriction of OpenACC.\n        * gfortran.dg/goacc/declare-3.f95: Remove case where this\n        restriction is violated.\n        * gfortran.dg/goacc/pr94120-1.f90: New.\n        * gfortran.dg/goacc/pr94120-2.f90: New.\n        * gfortran.dg/goacc/pr94120-3.f90: New.", "tree": {"sha": "f675ed9667ba2f57a66de5d29906bc84fe26a6d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f675ed9667ba2f57a66de5d29906bc84fe26a6d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98aeb1ef510204bf90e94b6cc85e5ba68df93d00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98aeb1ef510204bf90e94b6cc85e5ba68df93d00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98aeb1ef510204bf90e94b6cc85e5ba68df93d00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b73f69020f08208d2d969fcf8879bd294a6e3596", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b73f69020f08208d2d969fcf8879bd294a6e3596", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b73f69020f08208d2d969fcf8879bd294a6e3596"}], "stats": {"total": 111, "additions": 94, "deletions": 17}, "files": [{"sha": "661e4ce7eba45ff2f8a20b673a3058b566574e47", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=98aeb1ef510204bf90e94b6cc85e5ba68df93d00", "patch": "@@ -1,3 +1,9 @@\n+2020-03-12  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR middle-end/94120\n+\t* openmp.c (gfc_match_oacc_declare): Accept function-result\n+\tvariables; reject variables declared in a different scoping unit.\n+\n 2020-03-08  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/93581"}, {"sha": "930bca541b98c7670f60d4257d4b30498ed03ea2", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=98aeb1ef510204bf90e94b6cc85e5ba68df93d00", "patch": "@@ -2155,7 +2155,8 @@ gfc_match_oacc_declare (void)\n     {\n       gfc_symbol *s = n->sym;\n \n-      if (s->ns->proc_name && s->ns->proc_name->attr.proc == PROC_MODULE)\n+      if (gfc_current_ns->proc_name\n+\t  && gfc_current_ns->proc_name->attr.flavor == FL_MODULE)\n \t{\n \t  if (n->u.map_op != OMP_MAP_ALLOC && n->u.map_op != OMP_MAP_TO)\n \t    {\n@@ -2174,6 +2175,15 @@ gfc_match_oacc_declare (void)\n \t  return MATCH_ERROR;\n \t}\n \n+      if ((s->result == s && s->ns->contained != gfc_current_ns)\n+\t  || ((s->attr.flavor == FL_UNKNOWN || s->attr.flavor == FL_VARIABLE)\n+\t      && s->ns != gfc_current_ns))\n+\t{\n+\t  gfc_error (\"Variable %qs shall be declared in the same scoping unit \"\n+\t\t     \"as !$ACC DECLARE at %L\", s->name, &where);\n+\t  return MATCH_ERROR;\n+\t}\n+\n       if ((s->attr.dimension || s->attr.codimension)\n \t  && s->attr.dummy && s->as->type != AS_EXPLICIT)\n \t{"}, {"sha": "a1f0e3a18c5c13e742646190d511ac361403acca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=98aeb1ef510204bf90e94b6cc85e5ba68df93d00", "patch": "@@ -1,3 +1,16 @@\n+2020-03-12  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR middle-end/94120\n+\t* gfortran.dg/goacc/pr78260-2.f90: Correct scan-tree-dump-times.\n+\tExtend test case to result variables.\n+\t* gfortran.dg/goacc/declare-2.f95: Actually check module-declaration\n+\trestriction of OpenACC.\n+\t* gfortran.dg/goacc/declare-3.f95: Remove case where this\n+\trestriction is violated.\n+\t* gfortran.dg/goacc/pr94120-1.f90: New.\n+\t* gfortran.dg/goacc/pr94120-2.f90: New.\n+\t* gfortran.dg/goacc/pr94120-3.f90: New.\n+\n 2020-03-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/94130"}, {"sha": "bad5de9d757df0d11eeb3717e85ae6030a016a41", "filename": "gcc/testsuite/gfortran.dg/goacc/declare-2.f95", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdeclare-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdeclare-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdeclare-2.f95?ref=98aeb1ef510204bf90e94b6cc85e5ba68df93d00", "patch": "@@ -1,9 +1,5 @@\n \n module amod\n-\n-contains\n-\n-subroutine asubr (b)\n   implicit none\n   integer :: b(8)\n \n@@ -16,9 +12,24 @@ subroutine asubr (b)\n   !$acc declare present_or_create (b) ! { dg-error \"present on multiple\" }\n   !$acc declare deviceptr (b) ! { dg-error \"Invalid clause in module\" }\n   !$acc declare create (b) copyin (b) ! { dg-error \"present on multiple\" }\n+end module\n \n+module amod2\n+contains\n+subroutine asubr (a, b, c, d, e, f, g, h, i, j, k)\n+  implicit none\n+  integer, dimension(8) :: a, b, c, d, e, f, g, h, i, j, k\n+\n+  !$acc declare copy (a)\n+  !$acc declare copyout (b)\n+  !$acc declare present (c)\n+  !$acc declare present_or_copy (d)\n+  !$acc declare present_or_copyin (e)\n+  !$acc declare present_or_copyout (f)\n+  !$acc declare present_or_create (g)\n+  !$acc declare deviceptr (h)\n+  !$acc declare create (j) copyin (k)\n end subroutine\n-\n end module\n \n module bmod"}, {"sha": "9127cba6600d7acb18bda5db29bf57692545f033", "filename": "gcc/testsuite/gfortran.dg/goacc/declare-3.f95", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdeclare-3.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdeclare-3.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdeclare-3.f95?ref=98aeb1ef510204bf90e94b6cc85e5ba68df93d00", "patch": "@@ -14,12 +14,6 @@ module mod_b\n   !$acc declare copyin (b)\n end module\n \n-module mod_c\n-  implicit none\n-  integer :: c\n-  !$acc declare deviceptr (c)\n-end module\n-\n module mod_d\n   implicit none\n   integer :: d\n@@ -35,19 +29,17 @@ module mod_e\n subroutine sub1\n   use mod_a\n   use mod_b\n-  use mod_c\n   use mod_d\n   use mod_e\n end subroutine sub1\n \n program test\n   use mod_a\n   use mod_b\n-  use mod_c\n   use mod_d\n   use mod_e\n \n-  ! { dg-final { scan-tree-dump {(?n)#pragma acc data map\\(force_alloc:d\\) map\\(force_deviceptr:c\\) map\\(force_to:b\\) map\\(force_alloc:a\\)$} original } }\n+  ! { dg-final { scan-tree-dump {(?n)#pragma acc data map\\(force_alloc:d\\) map\\(force_to:b\\) map\\(force_alloc:a\\)$} original } }\n end program test\n \n ! { dg-final { scan-tree-dump-times {#pragma acc data} 1 original } }"}, {"sha": "f8a3dc864ccdfe988e403389d51fe4da30261d7e", "filename": "gcc/testsuite/gfortran.dg/goacc/pr78260-2.f90", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr78260-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr78260-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr78260-2.f90?ref=98aeb1ef510204bf90e94b6cc85e5ba68df93d00", "patch": "@@ -4,6 +4,8 @@\n \n ! PR fortran/78260\n \n+! Loosely related to PR fortran/94120\n+\n module m\n   implicit none\n   integer :: n = 0\n@@ -14,7 +16,14 @@ integer function f1()\n     f1 = 5 \n     !$acc end kernels\n   end function f1\n+  integer function g1() result(g1res)\n+    !$acc declare present(g1res)\n+    !$acc kernels copyin(g1res)\n+    g1res = 5 \n+    !$acc end kernels\n+  end function g1\n end module m\n ! { dg-final { scan-tree-dump-times \"#pragma acc data map\\\\(force_present:__result_f1\\\\)\" 1 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"#pragma acc data map\\\\(force_present:__result_f1\\\\)\" 1 \"original\" } }\n-\n+! { dg-final { scan-tree-dump-times \"#pragma acc kernels map\\\\(to:__result_f1\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma acc data map\\\\(force_present:g1res\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma acc kernels map\\\\(to:g1res\\\\)\" 1 \"original\" } }"}, {"sha": "8d1fc16a5ff25b72e72246b6c089ef33695f2ec2", "filename": "gcc/testsuite/gfortran.dg/goacc/pr94120-1.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr94120-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr94120-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr94120-1.f90?ref=98aeb1ef510204bf90e94b6cc85e5ba68df93d00", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+!\n+! PR fortran/94120\n+!\n+implicit none\n+integer :: i\n+contains\n+  subroutine f()\n+    !$acc declare copy(i)  ! { dg-error \"Variable 'i' shall be declared in the same scoping unit as !.ACC DECLARE\" }\n+  end\n+end"}, {"sha": "216c04b844d8257a517e5c42b2c212f903977268", "filename": "gcc/testsuite/gfortran.dg/goacc/pr94120-2.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr94120-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr94120-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr94120-2.f90?ref=98aeb1ef510204bf90e94b6cc85e5ba68df93d00", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+!\n+! PR fortran/94120\n+!\n+! BLOCK is not supported in OpenACC <= 3.0\n+!\n+subroutine f()\n+  block\n+    integer :: k\n+    !$acc declare copy(j)  ! { dg-error \"Sorry, !.ACC DECLARE at .1. is not allowed in BLOCK construct\" }\n+  end block\n+end"}, {"sha": "1eec90ae7ed0256a2e2a20981b1d340eeb0ecc32", "filename": "gcc/testsuite/gfortran.dg/goacc/pr94120-3.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr94120-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98aeb1ef510204bf90e94b6cc85e5ba68df93d00/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr94120-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fpr94120-3.f90?ref=98aeb1ef510204bf90e94b6cc85e5ba68df93d00", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+!\n+! PR fortran/94120\n+!\n+! Note: BLOCK is not supported in OpenACC <= 3.0 \u2013 but the following check comes earlier:\n+! It is also invalid because the variable is in a different scoping unit\n+!\n+subroutine g()\n+  integer :: k\n+  block\n+    !$acc declare copy(k)  ! { dg-error \"Variable 'k' shall be declared in the same scoping unit as !.ACC DECLARE\" }\n+  end block\n+end"}]}