{"sha": "0ef5dce6d81e7004bcf1a6784a561d93ce6a1700", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVmNWRjZTZkODFlNzAwNGJjZjFhNjc4NGE1NjFkOTNjZTZhMTcwMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-31T21:36:25Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-31T21:36:25Z"}, "message": "(ASM_OUTPUT_FLOAT, ASM_OUTPUT_DOUBLE)\n\n(ASM_OUTPUT_FLOAT, ASM_OUTPUT_DOUBLE)\n(ASM_OUTPUT_FLOAT_OPERAND, ASM_OUTPUT_DOUBLE_OPERAND):\nUse REAL_VALUE... macros.\n\nFrom-SVN: r3977", "tree": {"sha": "7d97bed26a48b13d94f6f51d792854daa4057f55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d97bed26a48b13d94f6f51d792854daa4057f55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ef5dce6d81e7004bcf1a6784a561d93ce6a1700", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ef5dce6d81e7004bcf1a6784a561d93ce6a1700", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ef5dce6d81e7004bcf1a6784a561d93ce6a1700", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ef5dce6d81e7004bcf1a6784a561d93ce6a1700/comments", "author": null, "committer": null, "parents": [{"sha": "1861262dd7f90f827169ce38d31c6f7f6fcd4d1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1861262dd7f90f827169ce38d31c6f7f6fcd4d1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1861262dd7f90f827169ce38d31c6f7f6fcd4d1f"}], "stats": {"total": 159, "additions": 124, "deletions": 35}, "files": [{"sha": "98b562da6b148f0fc75535253a97cfec61789865", "filename": "gcc/config/m68k/next.h", "status": "modified", "additions": 54, "deletions": 13, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ef5dce6d81e7004bcf1a6784a561d93ce6a1700/gcc%2Fconfig%2Fm68k%2Fnext.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ef5dce6d81e7004bcf1a6784a561d93ce6a1700/gcc%2Fconfig%2Fm68k%2Fnext.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnext.h?ref=0ef5dce6d81e7004bcf1a6784a561d93ce6a1700", "patch": "@@ -1,4 +1,5 @@\n /* next.h:  definitions for NeXT.\n+Copyright (c) 1993 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -185,29 +186,69 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #undef ASM_OUTPUT_DOUBLE\n #define ASM_OUTPUT_DOUBLE(FILE,VALUE)\t\t\t\t\t\\\n-  (REAL_VALUE_ISINF ((VALUE))\t\t\t\t\t\t\\\n-   ? fprintf (FILE, \"\\t.double 0r%s99e999\\n\", ((VALUE) > 0 ? \"\" : \"-\")) \\\n-   : fprintf (FILE, \"\\t.double 0r%.20e\\n\", (VALUE)))\n+ do { if (REAL_VALUE_ISINF (VALUE))\t\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\t\\\n+          if (REAL_VALUE_NEGATIVE (VALUE))\t\t\t\t\\\n+            fprintf (FILE, \"\\t.double 0r-99e999\\n\");\t\t\t\\\n+          else\t\t\t\t\t\t\t\t\\\n+            fprintf (FILE, \"\\t.double 0r99e999\\n\");\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+        { char dstr[30];\t\t\t\t\t\t\\\n+          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.20e\", dstr);\t\t\\\n+          fprintf (FILE, \"\\t.double 0r%s\\n\", dstr);\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+    } while (0)\n \n /* This is how to output an assembler line defining a `float' constant.  */\n \n #undef ASM_OUTPUT_FLOAT\n #define ASM_OUTPUT_FLOAT(FILE,VALUE)\t\t\t\t\t\\\n-  (REAL_VALUE_ISINF ((VALUE))\t\t\t\t\t\t\\\n-   ? fprintf (FILE, \"\\t.single 0r%s99e999\\n\", ((VALUE) > 0 ? \"\" : \"-\")) \\\n-   : fprintf (FILE, \"\\t.single 0r%.20e\\n\", (VALUE)))\n+ do { if (REAL_VALUE_ISINF (VALUE))\t\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\t\\\n+          if (REAL_VALUE_NEGATIVE (VALUE))\t\t\t\t\\\n+            fprintf (FILE, \"\\t.single 0r-99e999\\n\");\t\t\t\\\n+          else\t\t\t\t\t\t\t\t\\\n+            fprintf (FILE, \"\\t.single 0r99e999\\n\");\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+        { char dstr[30];\t\t\t\t\t\t\\\n+          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.20e\", dstr);\t\t\\\n+          fprintf (FILE, \"\\t.single 0r%s\\n\", dstr);\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+    } while (0)\n \n #undef ASM_OUTPUT_FLOAT_OPERAND\n-#define ASM_OUTPUT_FLOAT_OPERAND(FILE,VALUE)\t\t\t\t\\\n-  (REAL_VALUE_ISINF ((VALUE))\t\t\t\t\t\t\\\n-   ? fprintf (FILE, \"#0r%s99e999\", ((VALUE) > 0 ? \"\" : \"-\")) \\\n-   : fprintf (FILE, \"#0r%.9g\", (VALUE)))\n+#define ASM_OUTPUT_FLOAT_OPERAND(CODE,FILE,VALUE)\t\t\t\\\n+  do{ if (REAL_VALUE_ISINF (VALUE))\t\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\t\\\n+          if (REAL_VALUE_NEGATIVE (VALUE))\t\t\t\t\\\n+            fprintf (FILE, \"#0r-99e999\");\t\t\t\t\\\n+          else\t\t\t\t\t\t\t\t\\\n+            fprintf (FILE, \"#0r99e999\");\t\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+        { char dstr[30];\t\t\t\t\t\t\\\n+          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.9g\", dstr);\t\t\\\n+          fprintf (FILE, \"#0r%s\", dstr);\t\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+    } while (0)\n \n #undef ASM_OUTPUT_DOUBLE_OPERAND\n #define ASM_OUTPUT_DOUBLE_OPERAND(FILE,VALUE)\t\t\t\t\\\n-  (REAL_VALUE_ISINF ((VALUE))\t\t\t\t\t\t\\\n-   ? fprintf (FILE, \"#0r%s99e999\", ((VALUE) > 0 ? \"\" : \"-\")) \\\n-   : fprintf (FILE, \"#0r%.20g\", (VALUE)))\n+ do { if (REAL_VALUE_ISINF (VALUE))\t\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\t\\\n+          if (REAL_VALUE_NEGATIVE (VALUE))\t\t\t\t\\\n+            fprintf (FILE, \"#0r-99e999\");\t\t\t\t\\\n+          else\t\t\t\t\t\t\t\t\\\n+            fprintf (FILE, \"#0r99e999\");\t\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+        { char dstr[30];\t\t\t\t\t\t\\\n+          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.20g\", dstr);\t\t\\\n+          fprintf (FILE, \"#0r%s\", dstr);\t\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+    } while (0)\n \n #if 0 /* This is for system verson 3.0, which isn't out yet.  */\n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\\"}, {"sha": "04b425e355f8b46808398dc5482fc909cc4e6f24", "filename": "gcc/config/m68k/sun2o4.h", "status": "modified", "additions": 70, "deletions": 22, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ef5dce6d81e7004bcf1a6784a561d93ce6a1700/gcc%2Fconfig%2Fm68k%2Fsun2o4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ef5dce6d81e7004bcf1a6784a561d93ce6a1700/gcc%2Fconfig%2Fm68k%2Fsun2o4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsun2o4.h?ref=0ef5dce6d81e7004bcf1a6784a561d93ce6a1700", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Sun 2 running Sunos 4.\n-   Copyright (C) 1987, 1988 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1993 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -97,34 +97,82 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #undef ASM_OUTPUT_DOUBLE\n #define ASM_OUTPUT_DOUBLE(FILE,VALUE)\t\t\t\t\t\\\n-  (REAL_VALUE_ISINF ((VALUE))\t\t\t\t\t\t\\\n-   ? fprintf (FILE, \"\\t.double 0r%s99e999\\n\", ((VALUE) > 0 ? \"\" : \"-\")) \\\n-   : REAL_VALUE_MINUS_ZERO ((VALUE))\t\t\t\t\t\\\n-   ? fprintf (FILE, \"\\t.long 0x80000000,0\\n\")\t\t\t\t\\\n-   : fprintf (FILE, \"\\t.double 0r%.20e\\n\", (VALUE)))\n+  do { if (REAL_VALUE_ISINF (VALUE))\t\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\t\\\n+          if (REAL_VALUE_NEGATIVE (VALUE))\t\t\t\t\\\n+            fprintf (FILE, \"\\t.double 0r-99e999\\n\");\t\t\t\\\n+          else\t\t\t\t\t\t\t\t\\\n+            fprintf (FILE, \"\\t.double 0r99e999\\n\");\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+      else if (REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\t\\\n+          fprintf (FILE, \"\\t.long 0x80000000,0\\n\");\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+        { char dstr[30];\t\t\t\t\t\t\\\n+          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.20e\", dstr);\t\t\\\n+          fprintf (FILE, \"\\t.double 0r%s\\n\", dstr);\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+    } while (0)\n \n /* This is how to output an assembler line defining a `float' constant.  */\n \n #undef ASM_OUTPUT_FLOAT\n #define ASM_OUTPUT_FLOAT(FILE,VALUE)\t\t\t\t\t\\\n-  (REAL_VALUE_ISINF ((VALUE))\t\t\t\t\t\t\\\n-   ? fprintf (FILE, \"\\t.single 0r%s99e999\\n\", ((VALUE) > 0 ? \"\" : \"-\")) \\\n-   : REAL_VALUE_MINUS_ZERO ((VALUE))\t\t\t\t\t\\\n-   ? fprintf (FILE, \"\\t.long 0x80000000\\n\")\t\t\t\t\\\n-   : fprintf (FILE, \"\\t.single 0r%.20e\\n\", (VALUE)))\n+ do { if (REAL_VALUE_ISINF (VALUE))\t\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\t\\\n+          if (REAL_VALUE_NEGATIVE (VALUE))\t\t\t\t\\\n+            fprintf (FILE, \"\\t.single 0r-99e999\\n\");\t\t\t\\\n+          else\t\t\t\t\t\t\t\t\\\n+            fprintf (FILE, \"\\t.single 0r99e999\\n\");\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+      else if (REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\t\\\n+          fprintf (FILE, \"\\t.long 0x80000000\\n\");\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+        { char dstr[30];\t\t\t\t\t\t\\\n+          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.20e\", dstr);\t\t\\\n+          fprintf (FILE, \"\\t.single 0r%s\\n\", dstr);\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+    } while (0)\n \n #undef ASM_OUTPUT_FLOAT_OPERAND\n-#define ASM_OUTPUT_FLOAT_OPERAND(FILE,VALUE)\t\t\t\t\\\n-  (REAL_VALUE_ISINF ((VALUE))\t\t\t\t\t\t\\\n-   ? fprintf (FILE, \"#0r%s99e999\", ((VALUE) > 0 ? \"\" : \"-\")) \t\t\\\n-   : REAL_VALUE_MINUS_ZERO ((VALUE))\t\t\t\t\t\\\n-   ? fprintf (FILE, \"#0r-0.0\")\t\t\t\t\t\t\\\n-   : fprintf (FILE, \"#0r%.9g\", (VALUE)))\n+#define ASM_OUTPUT_FLOAT_OPERAND(CODE,FILE,VALUE)\t\t\t\\\n+ do { if (REAL_VALUE_ISINF (VALUE))\t\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\t\\\n+          if (REAL_VALUE_NEGATIVE (VALUE))\t\t\t\t\\\n+            fprintf (FILE, \"#0r-99e999\");\t\t\t\t\\\n+          else\t\t\t\t\t\t\t\t\\\n+            fprintf (FILE, \"#0r99e999\");\t\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+      else if (REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\t\\\n+          fprintf (FILE, \"#0r-0.0\");\t\t\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+        { char dstr[30];\t\t\t\t\t\t\\\n+          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.9g\", dstr);\t\t\\\n+          fprintf (FILE, \"#0r%s\", dstr);\t\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+    } while (0)\n \n #undef ASM_OUTPUT_DOUBLE_OPERAND\n #define ASM_OUTPUT_DOUBLE_OPERAND(FILE,VALUE)\t\t\t\t\\\n-  (REAL_VALUE_ISINF ((VALUE))\t\t\t\t\t\t\\\n-   ? fprintf (FILE, \"#0r%s99e999\", ((VALUE) > 0 ? \"\" : \"-\"))\t\t\\\n-   : REAL_VALUE_MINUS_ZERO ((VALUE))\t\t\t\t\t\\\n-   ? fprintf (FILE, \"#0r-0.0\")\t\t\t\t\t\t\\\n-   : fprintf (FILE, \"#0r%.20g\", (VALUE)))\n+ do { if (REAL_VALUE_ISINF (VALUE))\t\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\t\\\n+          if (REAL_VALUE_NEGATIVE (VALUE))\t\t\t\t\\\n+            fprintf (FILE, \"#0r-99e999\");\t\t\t\t\\\n+          else\t\t\t\t\t\t\t\t\\\n+            fprintf (FILE, \"#0r99e999\");\t\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+      else if (REAL_VALUE_MINUS_ZERO (VALUE))\t\t\t\t\\\n+        {\t\t\t\t\t\t\t\t\\\n+          fprintf (FILE, \"#0r-0.0\");\t\t\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+        { char dstr[30];\t\t\t\t\t\t\\\n+          REAL_VALUE_TO_DECIMAL ((VALUE), \"%.20g\", dstr);\t\t\\\n+          fprintf (FILE, \"#0r%s\", dstr);\t\t\t\t\\\n+        }\t\t\t\t\t\t\t\t\\\n+    } while (0)"}]}