{"sha": "fa52261ecda60c2dfe9f7d8c92a5d5ca834117be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE1MjI2MWVjZGE2MGMyZGZlOWY3ZDhjOTJhNWQ1Y2E4MzQxMTdiZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-03T21:39:14Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-03T21:39:14Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1151", "tree": {"sha": "09df0418b21185cee23fbdecac3faa247ceaad91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09df0418b21185cee23fbdecac3faa247ceaad91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa52261ecda60c2dfe9f7d8c92a5d5ca834117be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa52261ecda60c2dfe9f7d8c92a5d5ca834117be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa52261ecda60c2dfe9f7d8c92a5d5ca834117be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa52261ecda60c2dfe9f7d8c92a5d5ca834117be/comments", "author": null, "committer": null, "parents": [{"sha": "77a02b01f2a187724b84c45ef51915fc5011f8c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a02b01f2a187724b84c45ef51915fc5011f8c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77a02b01f2a187724b84c45ef51915fc5011f8c5"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "79540efb4322bf08965c7c2fbaa8471afd38c131", "filename": "gcc/reload1.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa52261ecda60c2dfe9f7d8c92a5d5ca834117be/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa52261ecda60c2dfe9f7d8c92a5d5ca834117be/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=fa52261ecda60c2dfe9f7d8c92a5d5ca834117be", "patch": "@@ -1603,6 +1603,10 @@ reload (first, global, dumpfile)\n \t\t\t    }\n \t\t\t}\n \t\t    }\n+\t\t  /* We couldn't find any registers for this reload.\n+\t\t     Abort to avoid going into an infinite loop.  */\n+\t\t  if (i == FIRST_PSEUDO_REGISTER)\n+ \t\t    abort ();\n \t\t}\n \t    }\n \n@@ -1863,7 +1867,10 @@ count_possible_groups (group_size, group_mode, max_groups)\n \t\t  for (k = 0; k < group_size[i]; k++)\n \t\t    SET_HARD_REG_BIT (counted_for_groups, j + k);\n \t\t}\n-\t      j += k;\n+\t      /* Skip to the last reg in this group.  When j is incremented\n+\t\t above, it will then point to the first reg of the next\n+\t\t possible group.  */\n+\t      j += k - 1;\n \t    }\n       }\n "}]}