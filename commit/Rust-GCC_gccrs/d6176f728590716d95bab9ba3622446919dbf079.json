{"sha": "d6176f728590716d95bab9ba3622446919dbf079", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYxNzZmNzI4NTkwNzE2ZDk1YmFiOWJhMzYyMjQ0NjkxOWRiZjA3OQ==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2017-05-02T16:18:42Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2017-05-02T16:18:42Z"}, "message": "* tree-ssa-loop-ivopts.c (rewrite_use_address): Simple refactor.\n\nFrom-SVN: r247516", "tree": {"sha": "8e908e928bb96de5ffaaf3897578a12409f9f602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e908e928bb96de5ffaaf3897578a12409f9f602"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6176f728590716d95bab9ba3622446919dbf079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6176f728590716d95bab9ba3622446919dbf079", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6176f728590716d95bab9ba3622446919dbf079", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6176f728590716d95bab9ba3622446919dbf079/comments", "author": null, "committer": null, "parents": [{"sha": "1136cae41bea892b33586aa52e90889b736fce53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1136cae41bea892b33586aa52e90889b736fce53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1136cae41bea892b33586aa52e90889b736fce53"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "0bb84d700e01ac8eeb1c9a4f774bcb317236953c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6176f728590716d95bab9ba3622446919dbf079/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6176f728590716d95bab9ba3622446919dbf079/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6176f728590716d95bab9ba3622446919dbf079", "patch": "@@ -1,3 +1,7 @@\n+2017-05-02  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* tree-ssa-loop-ivopts.c (rewrite_use_address): Simple refactor.\n+\n 2017-05-02  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-ssa-loop-ivopts.c (struct iv_ca): Rename n_regs to n_invs."}, {"sha": "840bde4d6f0816c16faa69fe163ec71b829fffa6", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6176f728590716d95bab9ba3622446919dbf079/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6176f728590716d95bab9ba3622446919dbf079/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=d6176f728590716d95bab9ba3622446919dbf079", "patch": "@@ -7361,9 +7361,6 @@ rewrite_use_address (struct ivopts_data *data,\n \t\t     struct iv_use *use, struct iv_cand *cand)\n {\n   aff_tree aff;\n-  gimple_stmt_iterator bsi = gsi_for_stmt (use->stmt);\n-  tree base_hint = NULL_TREE;\n-  tree ref, iv;\n   bool ok;\n \n   adjust_iv_update_pos (cand, use);\n@@ -7382,17 +7379,18 @@ rewrite_use_address (struct ivopts_data *data,\n      based on an object, the base of the reference is in some subexpression\n      of the use -- but these will use pointer types, so they are recognized\n      by the create_mem_ref heuristics anyway.  */\n-  if (cand->iv->base_object)\n-    base_hint = var_at_stmt (data->current_loop, cand, use->stmt);\n-\n-  iv = var_at_stmt (data->current_loop, cand, use->stmt);\n+  tree iv = var_at_stmt (data->current_loop, cand, use->stmt);\n+  tree base_hint = (cand->iv->base_object) ? iv : NULL_TREE;\n+  gimple_stmt_iterator bsi = gsi_for_stmt (use->stmt);\n   tree type = TREE_TYPE (*use->op_p);\n   unsigned int align = get_object_alignment (*use->op_p);\n   if (align != TYPE_ALIGN (type))\n     type = build_aligned_type (type, align);\n-  ref = create_mem_ref (&bsi, type, &aff,\n-\t\t\treference_alias_ptr_type (*use->op_p),\n-\t\t\tiv, base_hint, data->speed);\n+\n+  tree ref = create_mem_ref (&bsi, type, &aff,\n+\t\t\t     reference_alias_ptr_type (*use->op_p),\n+\t\t\t     iv, base_hint, data->speed);\n+\n   copy_ref_info (ref, *use->op_p);\n   *use->op_p = ref;\n }"}]}