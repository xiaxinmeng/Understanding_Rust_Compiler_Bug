{"sha": "a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTlkY2Q1MjlhOWMyNGNjNDk2MGM1YjM5NDFkZDZhYTc4MGJmYThhNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-07-08T21:58:10Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-07-08T21:58:10Z"}, "message": "c-ada-spec.h (cpp_operation): Add IS_CONSTEXPR.\n\nc-family/\n\t* c-ada-spec.h (cpp_operation): Add IS_CONSTEXPR.\n\t* c-ada-spec.c (print_ada_declaration): Skip constexpr constructors.\ncp/\n\t* decl2.c (cpp_check): Deal with IS_CONSTEXPR.\n\nFrom-SVN: r225585", "tree": {"sha": "523c4a6e20b7581ef5df5cc9b8d5fc7f78bd3b4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/523c4a6e20b7581ef5df5cc9b8d5fc7f78bd3b4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4/comments", "author": null, "committer": null, "parents": [{"sha": "b03b462f1ffdef448aa666d8079cd047bcddee77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b03b462f1ffdef448aa666d8079cd047bcddee77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b03b462f1ffdef448aa666d8079cd047bcddee77"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "75e43fd7f09806bf53f8b9e6c531cdb30a90ae8f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4", "patch": "@@ -1,3 +1,8 @@\n+2015-07-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* c-ada-spec.h (cpp_operation): Add IS_CONSTEXPR.\n+\t* c-ada-spec.c (print_ada_declaration): Skip constexpr constructors.\n+\n 2015-07-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-omp.c (c_omp_declare_simd_clauses_to_numbers): If all clauses"}, {"sha": "be8ef244b96089f12d97c65d425949cd38b5d86e", "filename": "gcc/c-family/c-ada-spec.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4", "patch": "@@ -2887,6 +2887,7 @@ print_ada_declaration (pretty_printer *buffer, tree t, tree type, int spc)\n       bool is_method = TREE_CODE (TREE_TYPE (t)) == METHOD_TYPE;\n       tree decl_name = DECL_NAME (t);\n       bool is_abstract = false;\n+      bool is_constexpr = false;\n       bool is_constructor = false;\n       bool is_destructor = false;\n       bool is_copy_constructor = false;\n@@ -2898,6 +2899,7 @@ print_ada_declaration (pretty_printer *buffer, tree t, tree type, int spc)\n       if (cpp_check)\n \t{\n \t  is_abstract = cpp_check (t, IS_ABSTRACT);\n+\t  is_constexpr = cpp_check (t, IS_CONSTEXPR);\n \t  is_constructor = cpp_check (t, IS_CONSTRUCTOR);\n \t  is_destructor = cpp_check (t, IS_DESTRUCTOR);\n \t  is_copy_constructor = cpp_check (t, IS_COPY_CONSTRUCTOR);\n@@ -2911,6 +2913,10 @@ print_ada_declaration (pretty_printer *buffer, tree t, tree type, int spc)\n \n       if (is_constructor || is_destructor)\n \t{\n+\t  /* Skip constexpr default constructors.  */\n+\t  if (is_constexpr)\n+\t    return 0;\n+\n \t  /* Only consider constructors/destructors for complete objects.  */\n \t  if (strncmp (IDENTIFIER_POINTER (decl_name), \"__comp\", 6) != 0)\n \t    return 0;"}, {"sha": "116ac0bb64477623f2aa173f91416e12c1667115", "filename": "gcc/c-family/c-ada-spec.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4/gcc%2Fc-family%2Fc-ada-spec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4/gcc%2Fc-family%2Fc-ada-spec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.h?ref=a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4", "patch": "@@ -27,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n typedef enum {\n   HAS_DEPENDENT_TEMPLATE_ARGS,\n   IS_ABSTRACT,\n+  IS_CONSTEXPR,\n   IS_CONSTRUCTOR,\n   IS_DESTRUCTOR,\n   IS_COPY_CONSTRUCTOR,"}, {"sha": "b6cca3ade33c1b9051390f2519aaec3559026f8b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4", "patch": "@@ -1,3 +1,7 @@\n+2015-07-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* decl2.c (cpp_check): Deal with IS_CONSTEXPR.\n+\n 2015-07-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* decl.c (grokfndecl): Handle flag_openmp_simd like flag_openmp."}, {"sha": "a1446c25cb8a4fa2388b7ddedde4a9bf1c7d513f", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4", "patch": "@@ -4070,6 +4070,8 @@ cpp_check (tree t, cpp_operation op)\n \t}\n       case IS_ABSTRACT:\n \treturn DECL_PURE_VIRTUAL_P (t);\n+      case IS_CONSTEXPR:\n+\treturn DECL_DECLARED_CONSTEXPR_P (t);\n       case IS_CONSTRUCTOR:\n \treturn DECL_CONSTRUCTOR_P (t);\n       case IS_DESTRUCTOR:"}, {"sha": "d2d51ae0ac56f09749828c438184b17aa0df1f18", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4", "patch": "@@ -1,3 +1,7 @@\n+2015-07-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* g++.dg/other/dump-ada-spec-9.C: New test.\n+\n 2015-07-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.dg/vect/vect.exp: Run also simd* tests."}, {"sha": "6387c81a25b50913d2cb76fcd44a855bf79b9436", "filename": "gcc/testsuite/g++.dg/other/dump-ada-spec-9.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-9.C?ref=a9dcd529a9c24cc4960c5b3941dd6aa780bfa8a4", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-ada-spec\" } */\n+\n+class Base {\n+  public:\n+     virtual void Primitive ();\n+\n+};\n+\n+void Base::Primitive () {\n+\n+}\n+\n+void Dispatch (Base * B) {\n+  B->Primitive ();\n+}\n+\n+/* { dg-final { scan-ada-spec-not \"CPP_Constructor\" } } */\n+/* { dg-final { cleanup-ada-spec } } */"}]}