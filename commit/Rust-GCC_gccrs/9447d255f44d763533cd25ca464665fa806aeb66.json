{"sha": "9447d255f44d763533cd25ca464665fa806aeb66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ0N2QyNTVmNDRkNzYzNTMzY2QyNWNhNDY0NjY1ZmE4MDZhZWI2Ng==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2015-10-23T22:34:04Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-10-23T22:34:04Z"}, "message": "[PATCH] Call flush_ssaname_freelist more often\n\n[PATCH] Call flush_ssaname_freelist more often\n       * passes.c (execute_function_todo): Do not call flush_ssaname_freelist\n        here.  Instead...\n        (execute_todo): Call it here.\n        * tree-ssanames.c (make_ssa_name_fn): Unconditionally gather reuse\n        statistics\n        (pass_release_ssa_names::execute): Do not call flusH_ssaname_freelist.\n\nFrom-SVN: r229272", "tree": {"sha": "473ae624fa03edb8c9c84b07db7d569cedfa07f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/473ae624fa03edb8c9c84b07db7d569cedfa07f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9447d255f44d763533cd25ca464665fa806aeb66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9447d255f44d763533cd25ca464665fa806aeb66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9447d255f44d763533cd25ca464665fa806aeb66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9447d255f44d763533cd25ca464665fa806aeb66/comments", "author": null, "committer": null, "parents": [{"sha": "73a842690d16120be06aa3d29f4bd0077375c04a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73a842690d16120be06aa3d29f4bd0077375c04a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73a842690d16120be06aa3d29f4bd0077375c04a"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "77fe67856fdc569eccc3b8f705053502212bb859", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9447d255f44d763533cd25ca464665fa806aeb66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9447d255f44d763533cd25ca464665fa806aeb66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9447d255f44d763533cd25ca464665fa806aeb66", "patch": "@@ -1,3 +1,12 @@\n+2015-10-23  Jeff Law  <law@redhat.com>\n+\n+\t* passes.c (execute_function_todo): Do not call flush_ssaname_freelist\n+\there.  Instead...\n+\t(execute_todo): Call it here.\n+\t* tree-ssanames.c (make_ssa_name_fn): Unconditionally gather reuse\n+\tstatistics\n+\t(pass_release_ssa_names::execute): Do not call flusH_ssaname_freelist.\n+\n 2015-10-23  Gregor Richards  <gregor.richards@uwaterloo.ca>\n \t    Szabolcs Nagy  <szabolcs.nagy@arm.com>\n "}, {"sha": "0d147fd159d3246a089df6cbcb51f65995d15344", "filename": "gcc/passes.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9447d255f44d763533cd25ca464665fa806aeb66/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9447d255f44d763533cd25ca464665fa806aeb66/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=9447d255f44d763533cd25ca464665fa806aeb66", "patch": "@@ -1919,14 +1919,6 @@ execute_function_todo (function *fn, void *data)\n     {\n       cleanup_tree_cfg ();\n \n-      /* Once unreachable nodes have been removed from the CFG,\n-\t there can't be any lingering references to released\n-\t SSA_NAMES (because there is no more unreachable code).\n-\n-\t Thus, now is the time to flush the SSA_NAMEs freelist.  */\n-      if (fn->gimple_df)\n-\tflush_ssaname_freelist ();\n-\n       /* When cleanup_tree_cfg merges consecutive blocks, it may\n \t perform some simplistic propagation when removing single\n \t valued PHI nodes.  This propagation may, in turn, cause the\n@@ -2032,6 +2024,11 @@ execute_todo (unsigned int flags)\n   if (flags)\n     do_per_function (execute_function_todo, (void *)(size_t) flags);\n \n+  /* At this point we should not have any unreachable code in the\n+     CFG, so it is safe to flush the pending freelist for SSA_NAMES.  */\n+  if (cfun && cfun->gimple_df)\n+    flush_ssaname_freelist ();\n+\n   /* Always remove functions just as before inlining: IPA passes might be\n      interested to see bodies of extern inline functions that are not inlined\n      to analyze side effects.  The full removal is done just at the end"}, {"sha": "4be0e53328d6be99b6956c931355f14fe3e8c1c2", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9447d255f44d763533cd25ca464665fa806aeb66/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9447d255f44d763533cd25ca464665fa806aeb66/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=9447d255f44d763533cd25ca464665fa806aeb66", "patch": "@@ -151,8 +151,7 @@ make_ssa_name_fn (struct function *fn, tree var, gimple *stmt)\n   if (!vec_safe_is_empty (FREE_SSANAMES (fn)))\n     {\n       t = FREE_SSANAMES (fn)->pop ();\n-      if (GATHER_STATISTICS)\n-\tssa_name_nodes_reused++;\n+      ssa_name_nodes_reused++;\n \n       /* The node was cleared out when we put it on the free list, so\n \t there is no need to do so again here.  */\n@@ -164,8 +163,7 @@ make_ssa_name_fn (struct function *fn, tree var, gimple *stmt)\n       t = make_node (SSA_NAME);\n       SSA_NAME_VERSION (t) = SSANAMES (fn)->length ();\n       vec_safe_push (SSANAMES (fn), t);\n-      if (GATHER_STATISTICS)\n-\tssa_name_nodes_created++;\n+      ssa_name_nodes_created++;\n     }\n \n   if (TYPE_P (var))\n@@ -646,7 +644,6 @@ unsigned int\n pass_release_ssa_names::execute (function *fun)\n {\n   unsigned i, j;\n-  flush_ssaname_freelist ();\n   int n = vec_safe_length (FREE_SSANAMES (fun));\n \n   /* Now release the freelist.  */"}]}