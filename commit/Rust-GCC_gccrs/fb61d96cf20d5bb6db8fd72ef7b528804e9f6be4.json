{"sha": "fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI2MWQ5NmNmMjBkNWJiNmRiOGZkNzJlZjdiNTI4ODA0ZTlmNmJlNA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-11-30T09:26:51Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-11-30T09:26:51Z"}, "message": "Support nested functions (PR sanitizer/78541).\n\n\tPR sanitizer/78541\n\t* gcc.dg/asan/pr78541-2.c: New test.\n\t* gcc.dg/asan/pr78541.c: New test.\n\tPR sanitizer/78541\n\t* asan.c (asan_expand_mark_ifn): Properly\n\tselect a VAR_DECL from FRAME.* component reference.\n\nFrom-SVN: r243003", "tree": {"sha": "dbeaebeaf71880f943227264b45ccfab26cf47de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbeaebeaf71880f943227264b45ccfab26cf47de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e03fb6ec681070048ecc0f1f2d2a299dc3d3db1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e03fb6ec681070048ecc0f1f2d2a299dc3d3db1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e03fb6ec681070048ecc0f1f2d2a299dc3d3db1a"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "c68d3c95005ef9df50b5d9ccd643e419e000035b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4", "patch": "@@ -1,3 +1,9 @@\n+2016-11-30  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/78541\n+\t* asan.c (asan_expand_mark_ifn): Properly\n+\tselect a VAR_DECL from FRAME.* component reference.\n+\n 2016-11-30  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/78583"}, {"sha": "cb5d6158e598f2452a1bbae85db1adc1b7542880", "filename": "gcc/asan.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4", "patch": "@@ -2713,6 +2713,12 @@ asan_expand_mark_ifn (gimple_stmt_iterator *iter)\n   tree base = gimple_call_arg (g, 1);\n   gcc_checking_assert (TREE_CODE (base) == ADDR_EXPR);\n   tree decl = TREE_OPERAND (base, 0);\n+\n+  /* For a nested function, we can have: ASAN_MARK (2, &FRAME.2.fp_input, 4) */\n+  if (TREE_CODE (decl) == COMPONENT_REF\n+      && DECL_NONLOCAL_FRAME (TREE_OPERAND (decl, 0)))\n+    decl = TREE_OPERAND (decl, 0);\n+\n   gcc_checking_assert (TREE_CODE (decl) == VAR_DECL);\n   if (asan_handled_variables == NULL)\n     asan_handled_variables = new hash_set<tree> (16);"}, {"sha": "3074e6d05a584cd35db95cfde1a8b5cd968d7b8e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4", "patch": "@@ -1,3 +1,9 @@\n+2016-11-30  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/78541\n+\t* gcc.dg/asan/pr78541-2.c: New test.\n+\t* gcc.dg/asan/pr78541.c: New test.\n+\n 2016-11-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/78586"}, {"sha": "44be19ccbcabdae7a124d2f31f8d7b532189651d", "filename": "gcc/testsuite/gcc.dg/asan/pr78541-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr78541-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr78541-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr78541-2.c?ref=fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4", "patch": "@@ -0,0 +1,10 @@\n+/* PR sanitizer/78560 */\n+/* { dg-do compile } */\n+\n+void __quadmath_mpn_extract_flt128 (long *fp_input);\n+\n+int fn1 ()\n+{\n+  long fp_input[1];\n+  int hack_digit () { __quadmath_mpn_extract_flt128 (fp_input); }\n+}"}, {"sha": "fb02082f3d942c27e754899aa8ab3bbf3b040867", "filename": "gcc/testsuite/gcc.dg/asan/pr78541.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr78541.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr78541.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr78541.c?ref=fb61d96cf20d5bb6db8fd72ef7b528804e9f6be4", "patch": "@@ -0,0 +1,25 @@\n+// PR sanitizer/78560\n+// { dg-do run }\n+// { dg-shouldfail \"asan\" }\n+\n+void foo (double a, double b)\n+{\n+  double *ptr;\n+    {\n+      double x = a + b;\n+      ptr = &x;\n+    }\n+ double square () { __builtin_printf (\"\", *ptr); }\n+\n+ square ();\n+}\n+\n+int main()\n+{\n+  foo (1.2f, 2.3f);\n+  return 0;\n+}\n+\n+// { dg-output \"ERROR: AddressSanitizer: stack-use-after-scope on address.*(\\n|\\r\\n|\\r)\" }\n+// { dg-output \"READ of size.*\" }\n+// { dg-output \".*'x' <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }"}]}