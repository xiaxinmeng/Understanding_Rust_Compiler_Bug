{"sha": "a64509053cfe1cab05710a393c1a26c63f15ef7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY0NTA5MDUzY2ZlMWNhYjA1NzEwYTM5M2MxYTI2YzYzZjE1ZWY3Zg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-08-09T20:10:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-08-09T20:10:41Z"}, "message": "re PR tree-optimization/41016 (ICE in build_int_cst_wide with -O1)\n\n2009-08-09  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/41016\n\t* tree-ssa-ifcombine.c (get_name_for_bit_test): Fix tuplification\n\tbug.\n\t(operand_precision): Remove.\n\t(integral_operand_p): Likewise.\n\t(recognize_single_bit_test): Adjust.\n\n\t* gcc.c-torture/compile/pr41016.c: New testcase.\n\nFrom-SVN: r150595", "tree": {"sha": "2fe8d4cb210a328d18a4d6fa7c8cee2cc22a88ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fe8d4cb210a328d18a4d6fa7c8cee2cc22a88ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a64509053cfe1cab05710a393c1a26c63f15ef7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a64509053cfe1cab05710a393c1a26c63f15ef7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a64509053cfe1cab05710a393c1a26c63f15ef7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a64509053cfe1cab05710a393c1a26c63f15ef7f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f517845606b6b8290b52f2068775a9325eceff6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f517845606b6b8290b52f2068775a9325eceff6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f517845606b6b8290b52f2068775a9325eceff6b"}], "stats": {"total": 62, "additions": 37, "deletions": 25}, "files": [{"sha": "7dd9852a09c1668d128cb200519aaede5076b6d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a64509053cfe1cab05710a393c1a26c63f15ef7f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a64509053cfe1cab05710a393c1a26c63f15ef7f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a64509053cfe1cab05710a393c1a26c63f15ef7f", "patch": "@@ -1,3 +1,12 @@\n+2009-08-09  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/41016\n+\t* tree-ssa-ifcombine.c (get_name_for_bit_test): Fix tuplification\n+\tbug.\n+\t(operand_precision): Remove.\n+\t(integral_operand_p): Likewise.\n+\t(recognize_single_bit_test): Adjust.\n+\n 2009-08-09  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* c-common.c (c_fully_fold_internal): Issue a warning if a binary"}, {"sha": "a61a62ccb6633c300f046dc01dc6eedf0080f952", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a64509053cfe1cab05710a393c1a26c63f15ef7f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a64509053cfe1cab05710a393c1a26c63f15ef7f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a64509053cfe1cab05710a393c1a26c63f15ef7f", "patch": "@@ -1,3 +1,8 @@\n+2009-08-09  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/41016\n+\t* gcc.c-torture/compile/pr41016.c: New testcase.\n+\n 2009-08-09  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.dg/overflow-warn-8.c: New test."}, {"sha": "57bddb49deaed1ddd5b1489b70c1dfba9c9a41a5", "filename": "gcc/testsuite/gcc.c-torture/compile/pr41016.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a64509053cfe1cab05710a393c1a26c63f15ef7f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr41016.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a64509053cfe1cab05710a393c1a26c63f15ef7f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr41016.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr41016.c?ref=a64509053cfe1cab05710a393c1a26c63f15ef7f", "patch": "@@ -0,0 +1,17 @@\n+typedef struct _IO_FILE FILE;\n+void\n+CompareRNAStructures (FILE * ofp, int start, int L, char *ss_true, char *ss)\n+{\n+  int i;\n+  float agree = 0.;\n+  float pairs = 0.;\n+  float pairs_true = 0.;\n+  for (i = 0; i < L; i++)\n+    {\n+      pairs_true += 1.;\n+      agree += 1.;\n+    }\n+  if (((int) pairs % 2 != 0) || ((int) pairs_true % 2 != 0)\n+      || ((int) agree % 2 != 0))\n+    Die (\"Error in CompareRNAStrutures(); odd number of paired nucleotides\\n\");\n+}"}, {"sha": "1d2d85b7a8f6e21c12630820306e7d457b47b4ca", "filename": "gcc/tree-ssa-ifcombine.c", "status": "modified", "additions": 6, "deletions": 25, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a64509053cfe1cab05710a393c1a26c63f15ef7f/gcc%2Ftree-ssa-ifcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a64509053cfe1cab05710a393c1a26c63f15ef7f/gcc%2Ftree-ssa-ifcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ifcombine.c?ref=a64509053cfe1cab05710a393c1a26c63f15ef7f", "patch": "@@ -151,7 +151,7 @@ get_name_for_bit_test (tree candidate)\n     {\n       gimple def_stmt = SSA_NAME_DEF_STMT (candidate);\n       if (is_gimple_assign (def_stmt)\n-\t  && gimple_assign_cast_p (def_stmt))\n+\t  && CONVERT_EXPR_CODE_P (gimple_assign_rhs_code (def_stmt)))\n \t{\n \t  if (TYPE_PRECISION (TREE_TYPE (candidate))\n \t      <= TYPE_PRECISION (TREE_TYPE (gimple_assign_rhs1 (def_stmt))))\n@@ -162,21 +162,6 @@ get_name_for_bit_test (tree candidate)\n   return candidate;\n }\n \n-/* Helpers for recognize_single_bit_test defined mainly for source code\n-   formating.  */\n-\n-static int\n-operand_precision (tree t)\n-{\n-  return TYPE_PRECISION (TREE_TYPE (t));\n-}\n-\n-static bool\n-integral_operand_p (tree t)\n-{\n-  return INTEGRAL_TYPE_P (TREE_TYPE (t));\n-}\n-\n /* Recognize a single bit test pattern in GIMPLE_COND and its defining\n    statements.  Store the name being tested in *NAME and the bit\n    in *BIT.  The GIMPLE_COND computes *NAME & (1 << *BIT).\n@@ -212,15 +197,11 @@ recognize_single_bit_test (gimple cond, tree *name, tree *bit)\n       stmt = SSA_NAME_DEF_STMT (orig_name);\n \n       while (is_gimple_assign (stmt)\n-\t     && (gimple_assign_ssa_name_copy_p (stmt)\n-\t\t || (gimple_assign_cast_p (stmt)\n-\t\t     && integral_operand_p (gimple_assign_lhs (stmt))\n-\t\t     && integral_operand_p (gimple_assign_rhs1 (stmt))\n-\t\t     && (operand_precision (gimple_assign_lhs (stmt))\n-\t\t\t <= operand_precision (gimple_assign_rhs1 (stmt))))))\n-\t{\n-\t  stmt = SSA_NAME_DEF_STMT (gimple_assign_rhs1 (stmt));\n-\t}\n+\t     && ((CONVERT_EXPR_CODE_P (gimple_assign_rhs_code (stmt))\n+\t\t  && (TYPE_PRECISION (TREE_TYPE (gimple_assign_lhs (stmt)))\n+\t\t      <= TYPE_PRECISION (TREE_TYPE (gimple_assign_rhs1 (stmt)))))\n+\t\t || gimple_assign_ssa_name_copy_p (stmt)))\n+\tstmt = SSA_NAME_DEF_STMT (gimple_assign_rhs1 (stmt));\n \n       /* If we found such, decompose it.  */\n       if (is_gimple_assign (stmt)"}]}