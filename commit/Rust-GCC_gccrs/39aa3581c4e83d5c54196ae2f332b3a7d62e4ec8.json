{"sha": "39aa3581c4e83d5c54196ae2f332b3a7d62e4ec8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzlhYTM1ODFjNGU4M2Q1YzU0MTk2YWUyZjMzMmIzYTdkNjJlNGVjOA==", "commit": {"author": {"name": "Gary Benson", "email": "gbenson@redhat.com", "date": "2006-09-01T13:30:50Z"}, "committer": {"name": "Gary Benson", "email": "gary@gcc.gnu.org", "date": "2006-09-01T13:30:50Z"}, "message": "InetAddress.java (getByAddress): Create Inet4Address objects when passed IPv4-mapped IPv6 addresses.\n\n2006-09-01  Gary Benson  <gbenson@redhat.com>\n\n\t* java/net/InetAddress.java (getByAddress): Create Inet4Address\n\tobjects when passed IPv4-mapped IPv6 addresses.\n\t(getByName, getAllByName): Defer to the above to ensure that the\n\tcorrect Inet*Address objects are returned.\n\nFrom-SVN: r116622", "tree": {"sha": "52f344367b501078daeb91eb7f717f7c9c03946a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52f344367b501078daeb91eb7f717f7c9c03946a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39aa3581c4e83d5c54196ae2f332b3a7d62e4ec8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39aa3581c4e83d5c54196ae2f332b3a7d62e4ec8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39aa3581c4e83d5c54196ae2f332b3a7d62e4ec8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39aa3581c4e83d5c54196ae2f332b3a7d62e4ec8/comments", "author": null, "committer": null, "parents": [{"sha": "7229b95cc036b978a526c77395c028320621765f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7229b95cc036b978a526c77395c028320621765f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7229b95cc036b978a526c77395c028320621765f"}], "stats": {"total": 48, "additions": 23, "deletions": 25}, "files": [{"sha": "65dcba1afd0cfa00add1b29ec46a26792fd6f3b2", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39aa3581c4e83d5c54196ae2f332b3a7d62e4ec8/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39aa3581c4e83d5c54196ae2f332b3a7d62e4ec8/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=39aa3581c4e83d5c54196ae2f332b3a7d62e4ec8", "patch": "@@ -1,3 +1,10 @@\n+2006-09-01  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/net/InetAddress.java (getByAddress): Create Inet4Address\n+\tobjects when passed IPv4-mapped IPv6 addresses.\n+\t(getByName, getAllByName): Defer to the above to ensure that the\n+\tcorrect Inet*Address objects are returned.\n+\n 2006-09-01  Gary Benson  <gbenson@redhat.com>\n \n \t* java/net/InetAddress.java (getByName, getAllByName):"}, {"sha": "5bb9c0f68674d5406c72cef4d8ec3ef02cf39c65", "filename": "libjava/java/net/InetAddress.java", "status": "modified", "additions": 16, "deletions": 25, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39aa3581c4e83d5c54196ae2f332b3a7d62e4ec8/libjava%2Fjava%2Fnet%2FInetAddress.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39aa3581c4e83d5c54196ae2f332b3a7d62e4ec8/libjava%2Fjava%2Fnet%2FInetAddress.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FInetAddress.java?ref=39aa3581c4e83d5c54196ae2f332b3a7d62e4ec8", "patch": "@@ -536,7 +536,20 @@ public static InetAddress getByAddress(String host, byte[] addr)\n       return new Inet4Address(addr, host);\n \n     if (addr.length == 16)\n-      return new Inet6Address(addr, host);\n+      {\n+\tfor (int i = 0; i < 12; i++)\n+\t  {\n+\t    if (addr[i] != (i < 10 ? 0 : (byte) 0xFF))\n+\t      return new Inet6Address(addr, host);\n+\t  }\n+\t  \n+\tbyte[] ip4addr = new byte[4];\n+\tip4addr[0] = addr[12];\n+\tip4addr[1] = addr[13];\n+\tip4addr[2] = addr[14];\n+\tip4addr[3] = addr[15];\n+\treturn new Inet4Address(ip4addr, host);\n+      }\n \n     throw new UnknownHostException(\"IP address has illegal length\");\n   }\n@@ -599,25 +612,7 @@ public static InetAddress getByName(String hostname)\n     // Assume that the host string is an IP address\n     byte[] address = aton(hostname);\n     if (address != null)\n-      {\n-        if (address.length == 4)\n-          return new Inet4Address (address, null);\n-        else if (address.length == 16)\n-          {\n-\t    if ((address [10] == 0xFF) && (address [11] == 0xFF))\n-\t      {\n-\t\tbyte[] ip4addr = new byte [4];\n-\t\tip4addr [0] = address [12];\n-\t\tip4addr [1] = address [13];\n-\t\tip4addr [2] = address [14];\n-\t\tip4addr [3] = address [15];\n-\t\treturn new Inet4Address (ip4addr, null);\n-\t      }\n-            return new Inet6Address (address, null);\n-\t  }\n-\telse\n-          throw new UnknownHostException (\"Address has invalid length\");\n-      }\n+      return getByAddress(address);\n \n     // Perform security check before resolving\n     SecurityManager s = System.getSecurityManager();\n@@ -658,11 +653,7 @@ public static InetAddress[] getAllByName(String hostname)\n     // Check if hostname is an IP address\n     byte[] address = aton (hostname);\n     if (address != null)\n-      {\n-\tInetAddress[] result = new InetAddress [1];\n-\tresult [0] = new InetAddress (address, null);\n-\treturn result;\n-      }\n+      return new InetAddress[] {getByAddress(address)};\n \n     // Perform security check before resolving\n     SecurityManager s = System.getSecurityManager();"}]}