{"sha": "36262a4c61961cd86c6d9b253774eccca5e49b58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYyNjJhNGM2MTk2MWNkODZjNmQ5YjI1Mzc3NGVjY2NhNWU0OWI1OA==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-10-01T23:11:58Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-10-01T23:11:58Z"}, "message": "* c-typeck.c (warn_for_assignment): Don't permit argnum == 0.\n\nFrom-SVN: r88412", "tree": {"sha": "60b9f2be4ee34d5f7d6b5b0525f8f9d3d86fcfdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60b9f2be4ee34d5f7d6b5b0525f8f9d3d86fcfdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36262a4c61961cd86c6d9b253774eccca5e49b58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36262a4c61961cd86c6d9b253774eccca5e49b58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36262a4c61961cd86c6d9b253774eccca5e49b58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36262a4c61961cd86c6d9b253774eccca5e49b58/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b022de53cab42a3f5a4637c595cddc155175a13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b022de53cab42a3f5a4637c595cddc155175a13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b022de53cab42a3f5a4637c595cddc155175a13"}], "stats": {"total": 29, "additions": 7, "deletions": 22}, "files": [{"sha": "3f32ba487d271c65c37fb16fffb7e98186a2016b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36262a4c61961cd86c6d9b253774eccca5e49b58/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36262a4c61961cd86c6d9b253774eccca5e49b58/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36262a4c61961cd86c6d9b253774eccca5e49b58", "patch": "@@ -1,3 +1,7 @@\n+2004-10-02  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* c-typeck.c (warn_for_assignment): Don't permit argnum == 0.\n+\n 2004-10-01  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390-protos.h (s390_comparison): Add prototype."}, {"sha": "08b5953a9038792c76c447295da50b2ead73986a", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 3, "deletions": 22, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36262a4c61961cd86c6d9b253774eccca5e49b58/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36262a4c61961cd86c6d9b253774eccca5e49b58/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=36262a4c61961cd86c6d9b253774eccca5e49b58", "patch": "@@ -3720,8 +3720,7 @@ c_convert_parm_for_inlining (tree parm, tree value, tree fn, int argnum)\n \n /* Print a warning using MSGID.\n    It gets OPNAME as its one parameter.\n-   if OPNAME is null and ARGNUM is 0, it is replaced by \"passing arg of `FUNCTION'\".\n-   Otherwise if OPNAME is null, it is replaced by \"passing arg ARGNUM of `FUNCTION'\".\n+   If OPNAME is null, it is replaced by \"passing arg ARGNUM of 'FUNCTION'\".\n    FUNCTION and ARGNUM are handled specially if we are building an\n    Objective-C selector.  */\n \n@@ -3739,26 +3738,8 @@ warn_for_assignment (const char *msgid, const char *opname, tree function,\n \t  function = selector;\n \t  argnum -= 2;\n \t}\n-      if (argnum == 0)\n-\t{\n-\t  if (function)\n-\t    {\n-\t      /* Function name is known; supply it.  */\n-\t      const char *const argstring = _(\"passing arg of '%s'\");\n-\t      new_opname = (char *) alloca (IDENTIFIER_LENGTH (function)\n-\t\t\t\t   + strlen (argstring) + 1 + 1);\n-\t      sprintf (new_opname, argstring,\n-\t\t       IDENTIFIER_POINTER (function));\n-\t    }\n-\t  else\n-\t    {\n-\t      /* Function name unknown (call through ptr).  */\n-\t      const char *const argnofun = _(\"passing arg of pointer to function\");\n-\t      new_opname = (char *) alloca (strlen (argnofun) + 1 + 1);\n-\t      sprintf (new_opname, argnofun);\n-\t    }\n-\t}\n-      else if (function)\n+      gcc_assert (argnum > 0);\n+      if (function)\n \t{\n \t  /* Function name is known; supply it.  */\n \t  const char *const argstring = _(\"passing arg %d of '%s'\");"}]}