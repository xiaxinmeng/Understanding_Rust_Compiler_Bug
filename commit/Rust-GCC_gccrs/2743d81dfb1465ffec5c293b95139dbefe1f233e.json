{"sha": "2743d81dfb1465ffec5c293b95139dbefe1f233e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc0M2Q4MWRmYjE0NjVmZmVjNWMyOTNiOTUxMzlkYmVmZTFmMjMzZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-22T14:56:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-22T14:56:55Z"}, "message": "opt.ads: Minor code reorganization (put entries in alpha order)\n\n2008-08-22  Robert Dewar  <dewar@adacore.com>\n\n\t* opt.ads: Minor code reorganization (put entries in alpha order)\n\nFrom-SVN: r139481", "tree": {"sha": "57db6b5aa270f2334341a8be44514f1ed69c434a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57db6b5aa270f2334341a8be44514f1ed69c434a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2743d81dfb1465ffec5c293b95139dbefe1f233e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2743d81dfb1465ffec5c293b95139dbefe1f233e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2743d81dfb1465ffec5c293b95139dbefe1f233e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2743d81dfb1465ffec5c293b95139dbefe1f233e/comments", "author": null, "committer": null, "parents": [{"sha": "9f4e488138d23660082c4ecd744dd0ae7a5db028", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f4e488138d23660082c4ecd744dd0ae7a5db028", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f4e488138d23660082c4ecd744dd0ae7a5db028"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "48e7ad00c5725bd768c463779f84a1bc15d30e3f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2743d81dfb1465ffec5c293b95139dbefe1f233e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2743d81dfb1465ffec5c293b95139dbefe1f233e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2743d81dfb1465ffec5c293b95139dbefe1f233e", "patch": "@@ -1,14 +1,25 @@\n+2008-08-22  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_aggr.adb (Static_Array_Aggregate): Call Analyze_And_Resolve on the\n+\tcomponent expression copies rather than directly setting Etype and\n+\tIs_Static_Expression.\n+\n+2008-08-22  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_util.adb (Has_Preelaborable_Initialization): Revise checking of\n+\tprivate types to allow for types derived from a private type with\n+\tpreelaborable initialization, but return False for a private extension\n+\t(unless it has the pragma).\n+\n+2008-08-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* opt.ads: Minor code reorganization (put entries in alpha order)\n+\n 2008-08-22  Pascal Obry  <obry@adacore.com>\n \n \t* initialize.c, adaint.c: Use Lock_Task and Unlock_Task for non-blocking\n \tspawn.\n \n-2008-08-22  Javier Miranda  <miranda@adacore.com>\n-\n-\t* exp_ch3.adb (Build_Init_Statements): Transfer to the body of the\n-\tinit procedure all the expanded code associated with the spec of\n-\ttask types and protected types.\n-\n 2008-08-22  Geert Bosch  <bosch@adacore.com>\n \n \t* gcc-interface/trans.c: Define FP_ARITH_MAY_WIDEN"}, {"sha": "1e68d70d2b80f877d7c344c7fe62a802355dc2a4", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2743d81dfb1465ffec5c293b95139dbefe1f233e/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2743d81dfb1465ffec5c293b95139dbefe1f233e/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=2743d81dfb1465ffec5c293b95139dbefe1f233e", "patch": "@@ -144,10 +144,6 @@ package Opt is\n    --  Set to non null when Bind_Alternate_Main_Name is True. This value\n    --  is modified as needed by Gnatbind.Scan_Bind_Arg.\n \n-   Assertions_Enabled : Boolean := False;\n-   --  GNAT\n-   --  Enable assertions made using pragma Assert\n-\n    ASIS_Mode : Boolean := False;\n    --  GNAT\n    --  Enable semantic checks and tree transformations that are important\n@@ -158,6 +154,10 @@ package Opt is\n    --  Back_Annotate_Rep_Info flag in this case. At the moment this does not\n    --  make very much sense, because GNSA cannot do back annotation).\n \n+   Assertions_Enabled : Boolean := False;\n+   --  GNAT\n+   --  Enable assertions made using pragma Assert\n+\n    Back_Annotate_Rep_Info : Boolean := False;\n    --  GNAT\n    --  If set True, enables back annotation of representation information"}]}