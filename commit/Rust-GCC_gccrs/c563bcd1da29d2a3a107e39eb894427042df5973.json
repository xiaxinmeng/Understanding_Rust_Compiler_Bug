{"sha": "c563bcd1da29d2a3a107e39eb894427042df5973", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU2M2JjZDFkYTI5ZDJhM2ExMDdlMzllYjg5NDQyNzA0MmRmNTk3Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-11-06T08:28:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-11-06T08:28:37Z"}, "message": "re PR tree-optimization/33993 (ICE: verify_stmts failed (invalid reference prefix))\n\n\tPR tree-optimization/33993\n\t* tree-vect-transform.c (vect_get_constant_vectors): Use build_vector\n\trather than build_constructor_from_list if all list values are\n\tconstants.\n\t(get_initial_def_for_induction): Use build_vector instead of\n\tbuild_constructor_from_list.\n\n\t* gcc.c-torture/compile/20071105-1.c: New test.\n\nFrom-SVN: r129920", "tree": {"sha": "030694814e60861497889441b31cf23e74609662", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/030694814e60861497889441b31cf23e74609662"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c563bcd1da29d2a3a107e39eb894427042df5973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c563bcd1da29d2a3a107e39eb894427042df5973", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c563bcd1da29d2a3a107e39eb894427042df5973", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c563bcd1da29d2a3a107e39eb894427042df5973/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "239371f9c700813d7e7be7f34959850bd36a720f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/239371f9c700813d7e7be7f34959850bd36a720f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/239371f9c700813d7e7be7f34959850bd36a720f"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "38237bf3d8811fac9197ea2fe2735a86da637f66", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c563bcd1da29d2a3a107e39eb894427042df5973/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c563bcd1da29d2a3a107e39eb894427042df5973/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c563bcd1da29d2a3a107e39eb894427042df5973", "patch": "@@ -1,3 +1,12 @@\n+2007-11-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/33993\n+\t* tree-vect-transform.c (vect_get_constant_vectors): Use build_vector\n+\trather than build_constructor_from_list if all list values are\n+\tconstants.\n+\t(get_initial_def_for_induction): Use build_vector instead of\n+\tbuild_constructor_from_list.\n+\n 2007-11-05  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR target/33579"}, {"sha": "54974ace16e7c673cb2dca23d2cf35f73a6e7265", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c563bcd1da29d2a3a107e39eb894427042df5973/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c563bcd1da29d2a3a107e39eb894427042df5973/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c563bcd1da29d2a3a107e39eb894427042df5973", "patch": "@@ -1,3 +1,8 @@\n+2007-11-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/33993\n+\t* gcc.c-torture/compile/20071105-1.c: New test.\n+\n 2007-11-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/33648"}, {"sha": "952b1bd697dcaf0b25958a8b6a79f0508327ffd5", "filename": "gcc/testsuite/gcc.c-torture/compile/20071105-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c563bcd1da29d2a3a107e39eb894427042df5973/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20071105-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c563bcd1da29d2a3a107e39eb894427042df5973/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20071105-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20071105-1.c?ref=c563bcd1da29d2a3a107e39eb894427042df5973", "patch": "@@ -0,0 +1,11 @@\n+/* PR tree-optimization/33993 */\n+/* Testcase by Martin Michlmayr <tbm@cyrius.com> */\n+\n+void\n+init_full (char *array, int ny)\n+{\n+  int j;\n+  char acc = 128;\n+  for (j = 0; j < ny; j++)\n+    *array++ = acc++;\n+}"}, {"sha": "736f0c9687db48cf3ef74e5e863c6c4956bf9126", "filename": "gcc/tree-vect-transform.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c563bcd1da29d2a3a107e39eb894427042df5973/gcc%2Ftree-vect-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c563bcd1da29d2a3a107e39eb894427042df5973/gcc%2Ftree-vect-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-transform.c?ref=c563bcd1da29d2a3a107e39eb894427042df5973", "patch": "@@ -1318,6 +1318,7 @@ vect_get_constant_vectors (slp_tree slp_node, VEC(tree,heap) **vec_oprnds,\n   bool is_store = false;\n   unsigned int number_of_vectors = SLP_TREE_NUMBER_OF_VEC_STMTS (slp_node);\n   VEC (tree, heap) *voprnds = VEC_alloc (tree, heap, number_of_vectors);\n+  bool constant_p;\n \n   if (STMT_VINFO_DATA_REF (stmt_vinfo))\n     is_store = true;\n@@ -1341,6 +1342,7 @@ vect_get_constant_vectors (slp_tree slp_node, VEC(tree,heap) **vec_oprnds,\n   number_of_copies = least_common_multiple (nunits, group_size) / group_size;\n \n   number_of_places_left_in_vector = nunits;\n+  constant_p = true;\n   for (j = 0; j < number_of_copies; j++)\n     {\n       for (i = group_size - 1; VEC_iterate (tree, stmts, i, stmt); i--)\n@@ -1350,6 +1352,8 @@ vect_get_constant_vectors (slp_tree slp_node, VEC(tree,heap) **vec_oprnds,\n \t    op = operation;\n \t  else\n \t    op = TREE_OPERAND (operation, op_num);\n+\t  if (!CONSTANT_CLASS_P (op))\n+\t    constant_p = false;\n \n           /* Create 'vect_ = {op0,op1,...,opn}'.  */\n           t = tree_cons (NULL_TREE, op, t);\n@@ -1362,7 +1366,11 @@ vect_get_constant_vectors (slp_tree slp_node, VEC(tree,heap) **vec_oprnds,\n \n \t      vector_type = get_vectype_for_scalar_type (TREE_TYPE (op));\n               gcc_assert (vector_type);\n-              vec_cst = build_constructor_from_list (vector_type, t);\n+\t      if (constant_p)\n+\t\tvec_cst = build_vector (vector_type, t);\n+\t      else\n+\t\tvec_cst = build_constructor_from_list (vector_type, t);\n+\t      constant_p = true;\n               VEC_quick_push (tree, voprnds,\n                               vect_init_vector (stmt, vec_cst, vector_type,\n \t\t\t\t\t\tNULL));\n@@ -1617,7 +1625,8 @@ get_initial_def_for_induction (tree iv_phi)\n   t = NULL_TREE;\n   for (i = 0; i < nunits; i++)\n     t = tree_cons (NULL_TREE, unshare_expr (new_name), t);\n-  vec = build_constructor_from_list (vectype, t);\n+  gcc_assert (CONSTANT_CLASS_P (new_name));\n+  vec = build_vector (vectype, t);\n   vec_step = vect_init_vector (iv_phi, vec, vectype, NULL);\n \n \n@@ -1673,7 +1682,8 @@ get_initial_def_for_induction (tree iv_phi)\n       t = NULL_TREE;\n       for (i = 0; i < nunits; i++)\n \tt = tree_cons (NULL_TREE, unshare_expr (new_name), t);\n-      vec = build_constructor_from_list (vectype, t);\n+      gcc_assert (CONSTANT_CLASS_P (new_name));\n+      vec = build_vector (vectype, t);\n       vec_step = vect_init_vector (iv_phi, vec, vectype, NULL);\n \n       vec_def = induc_def;"}]}