{"sha": "3e3a9a6ac1608dcafc4ef5c96a8f30c1d5243dc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UzYTlhNmFjMTYwOGRjYWZjNGVmNWM5NmE4ZjMwYzFkNTI0M2RjNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-07-11T17:41:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-07-11T17:41:59Z"}, "message": "re PR debug/40713 (Overlapping .debug_ranges (C++))\n\n\tPR debug/40713\n\t* dwarf2out.c (dw_fde_struct): Add in_std_section and\n\tcold_in_std_section bits.\n\t(dwarf2out_begin_prologue): Initialize them.\n\t(dwarf2out_finish): Don't emit FDE range into .debug_ranges\n\tif already covered by text_section or cold_text_section range.\n\nFrom-SVN: r149514", "tree": {"sha": "d3578728092d1e9b6834ded4b1a00c0768535609", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3578728092d1e9b6834ded4b1a00c0768535609"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e3a9a6ac1608dcafc4ef5c96a8f30c1d5243dc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e3a9a6ac1608dcafc4ef5c96a8f30c1d5243dc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e3a9a6ac1608dcafc4ef5c96a8f30c1d5243dc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e3a9a6ac1608dcafc4ef5c96a8f30c1d5243dc5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae58e548884f696e600966549867df23de3ff2d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae58e548884f696e600966549867df23de3ff2d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae58e548884f696e600966549867df23de3ff2d3"}], "stats": {"total": 49, "additions": 43, "deletions": 6}, "files": [{"sha": "e84fabcd950fe50e15d3152fc4180c0e1eed70b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3a9a6ac1608dcafc4ef5c96a8f30c1d5243dc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3a9a6ac1608dcafc4ef5c96a8f30c1d5243dc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e3a9a6ac1608dcafc4ef5c96a8f30c1d5243dc5", "patch": "@@ -1,5 +1,12 @@\n 2009-07-11  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/40713\n+\t* dwarf2out.c (dw_fde_struct): Add in_std_section and\n+\tcold_in_std_section bits.\n+\t(dwarf2out_begin_prologue): Initialize them.\n+\t(dwarf2out_finish): Don't emit FDE range into .debug_ranges\n+\tif already covered by text_section or cold_text_section range.\n+\n \tPR rtl-optimization/40667\n \t* defaults.h (MINIMUM_ALIGNMENT): Define if not defined.\n \t* doc/tm.texi (MINIMUM_ALIGNMENT): Document it."}, {"sha": "f7afc17ef317813d3d0c986868d863b23805a72a", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 36, "deletions": 6, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e3a9a6ac1608dcafc4ef5c96a8f30c1d5243dc5/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e3a9a6ac1608dcafc4ef5c96a8f30c1d5243dc5/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=3e3a9a6ac1608dcafc4ef5c96a8f30c1d5243dc5", "patch": "@@ -283,6 +283,11 @@ typedef struct GTY(()) dw_fde_struct {\n   unsigned stack_realign : 1;\n   /* Whether dynamic realign argument pointer register has been saved.  */\n   unsigned drap_reg_saved: 1;\n+  /* True iff dw_fde_begin label is in text_section or cold_text_section.  */\n+  unsigned in_std_section : 1;\n+  /* True iff dw_fde_unlikely_section_label is in text_section or\n+     cold_text_section.  */\n+  unsigned cold_in_std_section : 1;\n }\n dw_fde_node;\n \n@@ -3587,6 +3592,7 @@ dwarf2out_begin_prologue (unsigned int line ATTRIBUTE_UNUSED,\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n   char * dup_label;\n   dw_fde_ref fde;\n+  section *fnsec;\n \n   current_function_func_begin_label = NULL;\n \n@@ -3602,7 +3608,8 @@ dwarf2out_begin_prologue (unsigned int line ATTRIBUTE_UNUSED,\n     return;\n #endif\n \n-  switch_to_section (function_section (current_function_decl));\n+  fnsec = function_section (current_function_decl);\n+  switch_to_section (fnsec);\n   ASM_GENERATE_INTERNAL_LABEL (label, FUNC_BEGIN_LABEL,\n \t\t\t       current_function_funcdef_no);\n   ASM_OUTPUT_DEBUG_LABEL (asm_out_file, FUNC_BEGIN_LABEL,\n@@ -3646,6 +3653,27 @@ dwarf2out_begin_prologue (unsigned int line ATTRIBUTE_UNUSED,\n   fde->all_throwers_are_sibcalls = crtl->all_throwers_are_sibcalls;\n   fde->drap_reg = INVALID_REGNUM;\n   fde->vdrap_reg = INVALID_REGNUM;\n+  if (flag_reorder_blocks_and_partition)\n+    {\n+      section *unlikelysec;\n+      if (first_function_block_is_cold)\n+\tfde->in_std_section = 1;\n+      else\n+\tfde->in_std_section\n+\t  = (fnsec == text_section\n+\t     || (cold_text_section && fnsec == cold_text_section));\n+      unlikelysec = unlikely_text_section ();\n+      fde->cold_in_std_section\n+\t= (unlikelysec == text_section\n+\t   || (cold_text_section && unlikelysec == cold_text_section));\n+    }\n+  else\n+    {\n+      fde->in_std_section\n+\t= (fnsec == text_section\n+\t   || (cold_text_section && fnsec == cold_text_section));\n+      fde->cold_in_std_section = 0;\n+    }\n \n   args_size = old_args_size = 0;\n \n@@ -17128,12 +17156,14 @@ dwarf2out_finish (const char *filename)\n \n \t  if (fde->dw_fde_switched_sections)\n \t    {\n-\t      add_ranges_by_labels (fde->dw_fde_hot_section_label,\n-\t\t\t\t    fde->dw_fde_hot_section_end_label);\n-\t      add_ranges_by_labels (fde->dw_fde_unlikely_section_label,\n-\t\t\t\t    fde->dw_fde_unlikely_section_end_label);\n+\t      if (!fde->in_std_section)\n+\t\tadd_ranges_by_labels (fde->dw_fde_hot_section_label,\n+\t\t\t\t      fde->dw_fde_hot_section_end_label);\n+\t      if (!fde->cold_in_std_section)\n+\t\tadd_ranges_by_labels (fde->dw_fde_unlikely_section_label,\n+\t\t\t\t      fde->dw_fde_unlikely_section_end_label);\n \t    }\n-\t  else\n+\t  else if (!fde->in_std_section)\n \t    add_ranges_by_labels (fde->dw_fde_begin,\n \t\t\t\t  fde->dw_fde_end);\n \t}"}]}