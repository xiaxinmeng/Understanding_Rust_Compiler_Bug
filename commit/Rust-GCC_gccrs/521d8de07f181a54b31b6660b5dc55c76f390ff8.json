{"sha": "521d8de07f181a54b31b6660b5dc55c76f390ff8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIxZDhkZTA3ZjE4MWE1NGIzMWI2NjYwYjVkYzU1Yzc2ZjM5MGZmOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-06-30T23:58:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-06-30T23:58:18Z"}, "message": "function.h (struct function): Remove x_last_parm_insn, inl_last_parm_insn.\n\n        * function.h (struct function): Remove x_last_parm_insn,\n        inl_last_parm_insn.\n        (last_parm_insn): Remove.\n        * function.c (free_after_compilation): Don't clear them.\n        (fixup_var_refs_insn, assign_parms): Don't set them.\n\nFrom-SVN: r83939", "tree": {"sha": "72444d2745efa29ca92cffbcfbeb2823592f16ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72444d2745efa29ca92cffbcfbeb2823592f16ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/521d8de07f181a54b31b6660b5dc55c76f390ff8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/521d8de07f181a54b31b6660b5dc55c76f390ff8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/521d8de07f181a54b31b6660b5dc55c76f390ff8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/521d8de07f181a54b31b6660b5dc55c76f390ff8/comments", "author": null, "committer": null, "parents": [{"sha": "dcfbe7c7d9bf93e65a27c44c0433ac5316610c2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcfbe7c7d9bf93e65a27c44c0433ac5316610c2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcfbe7c7d9bf93e65a27c44c0433ac5316610c2c"}], "stats": {"total": 24, "additions": 6, "deletions": 18}, "files": [{"sha": "202621ba2d86f6a160fe9ba4d3556c59336071c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/521d8de07f181a54b31b6660b5dc55c76f390ff8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/521d8de07f181a54b31b6660b5dc55c76f390ff8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=521d8de07f181a54b31b6660b5dc55c76f390ff8", "patch": "@@ -1,5 +1,11 @@\n 2004-06-30  Richard Henderson  <rth@redhat.com>\n \n+\t* function.h (struct function): Remove x_last_parm_insn,\n+\tinl_last_parm_insn.\n+\t(last_parm_insn): Remove.\n+\t* function.c (free_after_compilation): Don't clear them.\n+\t(fixup_var_refs_insn, assign_parms): Don't set them.\n+\n \t* function.c, rtl.h (get_first_nonparm_insn): Remove.\n \n 2004-06-30  Joseph S. Myers  <jsm@polyomino.org.uk>"}, {"sha": "faa77d9c9606a7c6726405eabe397ca16161cc84", "filename": "gcc/function.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/521d8de07f181a54b31b6660b5dc55c76f390ff8/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/521d8de07f181a54b31b6660b5dc55c76f390ff8/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=521d8de07f181a54b31b6660b5dc55c76f390ff8", "patch": "@@ -446,12 +446,10 @@ free_after_compilation (struct function *f)\n   f->x_tail_recursion_reentry = NULL;\n   f->x_arg_pointer_save_area = NULL;\n   f->x_parm_birth_insn = NULL;\n-  f->x_last_parm_insn = NULL;\n   f->x_parm_reg_stack_loc = NULL;\n   f->fixup_var_refs_queue = NULL;\n   f->original_arg_vector = NULL;\n   f->original_decl_initial = NULL;\n-  f->inl_last_parm_insn = NULL;\n   f->epilogue_delay_list = NULL;\n }\n \f\n@@ -1824,12 +1822,6 @@ fixup_var_refs_insn (rtx insn, rtx var, enum machine_mode promoted_mode,\n       fixup_var_refs_1 (var, promoted_mode, &PATTERN (insn), insn,\n \t\t\t&replacements, no_share);\n \n-      /* If this is last_parm_insn, and any instructions were output\n-\t after it to fix it up, then we must set last_parm_insn to\n-\t the last such instruction emitted.  */\n-      if (insn == last_parm_insn)\n-\tlast_parm_insn = PREV_INSN (next_insn);\n-\n       while (replacements)\n \t{\n \t  struct fixup_replacement *next;\n@@ -5292,8 +5284,6 @@ assign_parms (tree fndecl)\n       SET_DECL_RTL (result, x);\n     }\n \n-  last_parm_insn = get_last_insn ();\n-\n   /* We have aligned all the args, so add space for the pretend args.  */\n   stack_args_size.constant += extra_pretend_bytes;\n   current_function_args_size = stack_args_size.constant;"}, {"sha": "b83418f0cc4a5ba9b65c967a78268a4a40fb0939", "filename": "gcc/function.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/521d8de07f181a54b31b6660b5dc55c76f390ff8/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/521d8de07f181a54b31b6660b5dc55c76f390ff8/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=521d8de07f181a54b31b6660b5dc55c76f390ff8", "patch": "@@ -296,10 +296,6 @@ struct function GTY(())\n   /* Insn after which register parms and SAVE_EXPRs are born, if nonopt.  */\n   rtx x_parm_birth_insn;\n \n-  /* Last insn of those whose job was to put parms into their nominal\n-     homes.  */\n-  rtx x_last_parm_insn;\n-\n   /* 1 + last pseudo register number possibly used for loading a copy\n      of a parameter of this function.  */\n   unsigned int x_max_parm_reg;\n@@ -337,9 +333,6 @@ struct function GTY(())\n   int no_debugging_symbols;\n   rtvec original_arg_vector;\n   tree original_decl_initial;\n-  /* Last insn of those whose job was to put parms into their nominal\n-     homes.  */\n-  rtx inl_last_parm_insn;\n   /* Highest label number in current function.  */\n   int inl_max_label_num;\n \n@@ -550,7 +543,6 @@ extern int trampolines_created;\n #define tail_recursion_reentry (cfun->x_tail_recursion_reentry)\n #define arg_pointer_save_area (cfun->x_arg_pointer_save_area)\n #define rtl_expr_chain (cfun->x_rtl_expr_chain)\n-#define last_parm_insn (cfun->x_last_parm_insn)\n #define function_call_count (cfun->x_function_call_count)\n #define used_temp_slots (cfun->x_used_temp_slots)\n #define avail_temp_slots (cfun->x_avail_temp_slots)"}]}