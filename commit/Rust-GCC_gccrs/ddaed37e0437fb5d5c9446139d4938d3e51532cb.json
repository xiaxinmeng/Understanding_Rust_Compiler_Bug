{"sha": "ddaed37e0437fb5d5c9446139d4938d3e51532cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRhZWQzN2UwNDM3ZmI1ZDVjOTQ0NjEzOWQ0OTM4ZDNlNTE1MzJjYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-01-18T12:49:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-01-18T12:49:20Z"}, "message": "typeck.c (comp_ptr_ttypes_reinterpret): Per ANSI, tighten up definition of 'casting away const' in reinterpret_cast<>.\n\n\t* typeck.c (comp_ptr_ttypes_reinterpret): Per ANSI, tighten up\n\tdefinition of 'casting away const' in reinterpret_cast<>.\n\t* cvt.c: Add include for decl.h, remove extern for\n\tstatic_aggregates which is now provided by decl.h.\n\t* Makefile.in (cvt.o): Add dependency for decl.h and missing\n\tdependencies for convert.h and flags.h.\n\t* decl2.c (do_dtors): Set current location to that of the\n\tdecl, for sensible diagnostics and debugging.\n\t(check_classfn): Issue `incomplete type' error, if\n\tclass is not defined.\n\t* cp-tree.h: Add prototype for bound_pmf_p.\n\nFrom-SVN: r24748", "tree": {"sha": "3bae4ffe519aaa727042fb46d83af587564753b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bae4ffe519aaa727042fb46d83af587564753b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddaed37e0437fb5d5c9446139d4938d3e51532cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddaed37e0437fb5d5c9446139d4938d3e51532cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddaed37e0437fb5d5c9446139d4938d3e51532cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddaed37e0437fb5d5c9446139d4938d3e51532cb/comments", "author": null, "committer": null, "parents": [{"sha": "8c7707b030e111b02c9398436a7600f0a4447618", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c7707b030e111b02c9398436a7600f0a4447618", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c7707b030e111b02c9398436a7600f0a4447618"}], "stats": {"total": 54, "additions": 43, "deletions": 11}, "files": [{"sha": "dfe2645c0cc88271f7ae75c774e4af75677d9055", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddaed37e0437fb5d5c9446139d4938d3e51532cb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddaed37e0437fb5d5c9446139d4938d3e51532cb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ddaed37e0437fb5d5c9446139d4938d3e51532cb", "patch": "@@ -1,3 +1,27 @@\n+1999-01-18  Chip Salzenberg  <chip@perlsupport.com>\n+\n+\t* typeck.c (comp_ptr_ttypes_reinterpret): Per ANSI, tighten up\n+\tdefinition of 'casting away const' in reinterpret_cast<>.\n+\n+1999-01-18  Graham <grahams@rcp.co.uk>\n+\n+\t* cvt.c: Add include for decl.h, remove extern for\n+\tstatic_aggregates which is now provided by decl.h.\n+\n+\t* Makefile.in (cvt.o): Add dependency for decl.h and missing\n+\tdependencies for convert.h and flags.h.\n+\n+1999-01-18  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* decl2.c (do_dtors): Set current location to that of the\n+\tdecl, for sensible diagnostics and debugging.\n+\t(check_classfn): Issue `incomplete type' error, if\n+\tclass is not defined.\n+\n+1999-01-16  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* cp-tree.h: Add prototype for bound_pmf_p.\n+\n 1999-01-16  Jason Merrill  <jason@yorick.cygnus.com>\n \t    Manfred Hollstein <manfred@s-direktnet.de>\n "}, {"sha": "fd4f5c01b57cb023fba6c39994bd15bc7b21c1ff", "filename": "gcc/cp/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddaed37e0437fb5d5c9446139d4938d3e51532cb/gcc%2Fcp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddaed37e0437fb5d5c9446139d4938d3e51532cb/gcc%2Fcp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMakefile.in?ref=ddaed37e0437fb5d5c9446139d4938d3e51532cb", "patch": "@@ -269,8 +269,8 @@ init.o : init.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h $(RTL_H) \\\n   $(EXPR_H) $(srcdir)/../system.h $(srcdir)/../toplev.h\n method.o : method.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../system.h \\\n   $(srcdir)/../toplev.h\n-cvt.o : cvt.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../system.h \\\n-  $(srcdir)/../toplev.h\n+cvt.o : cvt.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../system.h decl.h \\\n+  $(srcdir)/../flags.h $(srcdir)/../toplev.h $(srcdir)/../convert.h\n search.o : search.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../stack.h \\\n   $(srcdir)/../flags.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n tree.o : tree.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h \\"}, {"sha": "18f697ae860504885bceef8271f3b612989fc1bf", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddaed37e0437fb5d5c9446139d4938d3e51532cb/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddaed37e0437fb5d5c9446139d4938d3e51532cb/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=ddaed37e0437fb5d5c9446139d4938d3e51532cb", "patch": "@@ -3259,6 +3259,7 @@ extern int count_functions\t\t\tPROTO((tree));\n extern int is_overloaded_fn\t\t\tPROTO((tree));\n extern tree get_first_fn\t\t\tPROTO((tree));\n extern tree binding_init                        PROTO((struct tree_binding*));\n+extern int bound_pmf_p\t\t\t\tPROTO((tree));\n extern tree ovl_cons                            PROTO((tree, tree));\n extern tree scratch_ovl_cons                    PROTO((tree, tree));\n extern int ovl_member                           PROTO((tree, tree));"}, {"sha": "2b0cd53a68a0725acc5c4bafedcf0b2c4fda6647", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddaed37e0437fb5d5c9446139d4938d3e51532cb/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddaed37e0437fb5d5c9446139d4938d3e51532cb/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=ddaed37e0437fb5d5c9446139d4938d3e51532cb", "patch": "@@ -32,8 +32,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"cp-tree.h\"\n #include \"convert.h\"\n #include \"toplev.h\"\n-\n-extern tree static_aggregates;\n+#include \"decl.h\"\n \n static tree cp_convert_to_pointer PROTO((tree, tree));\n static tree convert_to_pointer_force PROTO((tree, tree));"}, {"sha": "9ca09cb985b9326e99d6f4172138b9012a0e610e", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddaed37e0437fb5d5c9446139d4938d3e51532cb/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddaed37e0437fb5d5c9446139d4938d3e51532cb/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=ddaed37e0437fb5d5c9446139d4938d3e51532cb", "patch": "@@ -1455,8 +1455,11 @@ check_classfn (ctype, function)\n   else\n     {\n       methods = 0;\n-      cp_error (\"no `%#D' member function declared in class `%T'\",\n-\t\tfunction, ctype);\n+      if (TYPE_SIZE (ctype) == 0)\n+        incomplete_type_error (function, ctype);\n+      else\n+        cp_error (\"no `%#D' member function declared in class `%T'\",\n+\t\t  function, ctype);\n     }\n \n   /* If we did not find the method in the class, add it to avoid\n@@ -3094,6 +3097,12 @@ do_dtors (start)\n \t  if (! current_function_decl)\n \t    start_objects ('D', initp);\n \n+\t  /* Set these global variables so that GDB at least puts\n+\t     us near the declaration which required the initialization.  */\n+\t  input_filename = DECL_SOURCE_FILE (decl);\n+\t  lineno = DECL_SOURCE_LINE (decl);\n+\t  emit_note (input_filename, lineno);\n+\t  \n \t  /* Because of:\n \n \t       [class.access.spec]"}, {"sha": "662cb500c363ac628f15fa7540bdb5a152bb3aa4", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddaed37e0437fb5d5c9446139d4938d3e51532cb/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddaed37e0437fb5d5c9446139d4938d3e51532cb/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=ddaed37e0437fb5d5c9446139d4938d3e51532cb", "patch": "@@ -7439,12 +7439,10 @@ comp_ptr_ttypes_reinterpret (to, from)\n       if (TREE_CODE (to) == OFFSET_TYPE)\n \tto = TREE_TYPE (to);\n \n-      if (TREE_CODE (to) != TREE_CODE (from))\n-\treturn 1;\n-\n       /* Const and volatile mean something different for function types,\n \t so the usual checks are not appropriate.  */\n-      if (TREE_CODE (to) != FUNCTION_TYPE && TREE_CODE (to) != METHOD_TYPE)\n+      if (TREE_CODE (from) != FUNCTION_TYPE && TREE_CODE (from) != METHOD_TYPE\n+\t  && TREE_CODE (to) != FUNCTION_TYPE && TREE_CODE (to) != METHOD_TYPE)\n \t{\n \t  if (!at_least_as_qualified_p (to, from))\n \t    return 0;\n@@ -7455,7 +7453,8 @@ comp_ptr_ttypes_reinterpret (to, from)\n \t  constp &= TYPE_READONLY (to);\n \t}\n \n-      if (TREE_CODE (to) != POINTER_TYPE)\n+      if (TREE_CODE (from) != POINTER_TYPE\n+\t  || TREE_CODE (to) != POINTER_TYPE)\n \treturn 1;\n     }\n }"}]}