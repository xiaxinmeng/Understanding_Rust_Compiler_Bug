{"sha": "b6877196919b9cf3013c9695d73da61bd44ccfe7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY4NzcxOTY5MTliOWNmMzAxM2M5Njk1ZDczZGE2MWJkNDRjY2ZlNw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2005-06-13T09:40:55Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2005-06-13T09:40:55Z"}, "message": "* doc/invoke.texi (Blackfin Options): Document -mlong-calls.\n\nFrom-SVN: r100875", "tree": {"sha": "64f7d5aaba5c41b9c4c2462d61b0041ef83001d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64f7d5aaba5c41b9c4c2462d61b0041ef83001d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6877196919b9cf3013c9695d73da61bd44ccfe7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6877196919b9cf3013c9695d73da61bd44ccfe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6877196919b9cf3013c9695d73da61bd44ccfe7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6877196919b9cf3013c9695d73da61bd44ccfe7/comments", "author": null, "committer": null, "parents": [{"sha": "f610dd5f4ceb8239c61ee33863760d39f3b28162", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f610dd5f4ceb8239c61ee33863760d39f3b28162", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f610dd5f4ceb8239c61ee33863760d39f3b28162"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "037a2050c09885064d02e9ea1f6d5a3363e926c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6877196919b9cf3013c9695d73da61bd44ccfe7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6877196919b9cf3013c9695d73da61bd44ccfe7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6877196919b9cf3013c9695d73da61bd44ccfe7", "patch": "@@ -1,3 +1,7 @@\n+2005-06-13  Bernd Schmidt  <bernd.schmidt@analog.com>\n+\n+\t* doc/invoke.texi (Blackfin Options): Document -mlong-calls.\n+\n 2005-06-12  Richard Henderson  <rth@redhat.com>\n \n \tPR tree-opt/21994"}, {"sha": "7631894315365693e6d3f8fa1c87b26fff69130a", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6877196919b9cf3013c9695d73da61bd44ccfe7/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6877196919b9cf3013c9695d73da61bd44ccfe7/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=b6877196919b9cf3013c9695d73da61bd44ccfe7", "patch": "@@ -416,7 +416,8 @@ Objective-C and Objective-C++ Dialects}.\n @emph{Blackfin Options}\n @gccoptlist{-momit-leaf-frame-pointer -mno-omit-leaf-frame-pointer -mcsync @gol\n -mno-csync -mlow-64k -mno-low64k -mid-shared-library @gol\n--mno-id-shared-library -mshared-library-id=@var{n} @gol}\n+-mno-id-shared-library -mshared-library-id=@var{n} @gol\n+-mlong-calls  -mno-long-calls}\n \n @emph{CRIS Options}\n @gccoptlist{-mcpu=@var{cpu}  -march=@var{cpu}  -mtune=@var{cpu} @gol\n@@ -7418,6 +7419,21 @@ Specified the identification number of the ID based shared library being\n compiled.  Specifying a value of 0 will generate more compact code, specifying\n other values will force the allocation of that number to the current\n library but is no more space or time efficient than omitting this option.\n+\n+@item -mlong-calls\n+@itemx -mno-long-calls\n+@opindex mlong-calls\n+@opindex mno-long-calls\n+Tells the compiler to perform function calls by first loading the\n+address of the function into a register and then performing a subroutine\n+call on this register.  This switch is needed if the target function\n+will lie outside of the 24 bit addressing range of the offset based\n+version of subroutine call instruction.\n+\n+This feature is not enabled by default.  Specifying\n+@option{-mno-long-calls} will restore the default behavior.  Note these\n+switches have no effect on how the compiler generates code to handle\n+function calls via function pointers.\n @end table\n \n @node CRIS Options"}]}