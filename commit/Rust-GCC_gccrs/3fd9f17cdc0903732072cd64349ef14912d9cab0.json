{"sha": "3fd9f17cdc0903732072cd64349ef14912d9cab0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZkOWYxN2NkYzA5MDM3MzIwNzJjZDY0MzQ5ZWYxNDkxMmQ5Y2FiMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-18T13:45:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-18T13:45:54Z"}, "message": "[multiple changes]\n\n2010-10-18  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.ads, einfo.adb: Minor reformatting.\n\t* gnat_ugn.texi, ug_words: Add missing entries, fix typos.\n\n2010-10-18  Emmanuel Briot  <briot@adacore.com>\n\n\t* g-comlin.adb (Is_In_Config): When the switch accepts either a space\n\tor equal, we output an equal every time.\n\n2010-10-18  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_res.adb (Resolve_Entry_Call): Handle call to an entry family\n\tmember when pre/post conditions are present.\n\t* exp_ch9.adb (Build_PPC_Wrapper): The PPC_Wrapper for an entry family\n\tincludes an index parameter, and the name of the enclosed entry call is\n\tan indexed component.\n\nFrom-SVN: r165634", "tree": {"sha": "3b51fb074a158437e3e4914b43a1cd4e8b542a14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b51fb074a158437e3e4914b43a1cd4e8b542a14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fd9f17cdc0903732072cd64349ef14912d9cab0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd9f17cdc0903732072cd64349ef14912d9cab0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fd9f17cdc0903732072cd64349ef14912d9cab0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd9f17cdc0903732072cd64349ef14912d9cab0/comments", "author": null, "committer": null, "parents": [{"sha": "5e690fe3b1ac9825f08b7b90bb5e004d783ec270", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e690fe3b1ac9825f08b7b90bb5e004d783ec270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e690fe3b1ac9825f08b7b90bb5e004d783ec270"}], "stats": {"total": 129, "additions": 94, "deletions": 35}, "files": [{"sha": "17c0a4600c207618ef330d182301f5dfa4e7e856", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd9f17cdc0903732072cd64349ef14912d9cab0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd9f17cdc0903732072cd64349ef14912d9cab0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3fd9f17cdc0903732072cd64349ef14912d9cab0", "patch": "@@ -1,3 +1,21 @@\n+2010-10-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.ads, einfo.adb: Minor reformatting.\n+\t* gnat_ugn.texi, ug_words: Add missing entries, fix typos.\n+\n+2010-10-18  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* g-comlin.adb (Is_In_Config): When the switch accepts either a space\n+\tor equal, we output an equal every time.\n+\n+2010-10-18  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Entry_Call): Handle call to an entry family\n+\tmember when pre/post conditions are present.\n+\t* exp_ch9.adb (Build_PPC_Wrapper): The PPC_Wrapper for an entry family\n+\tincludes an index parameter, and the name of the enclosed entry call is\n+\tan indexed component.\n+\n 2010-10-18  Robert Dewar  <dewar@adacore.com>\n \n \t* einfo.ads, einfo.adb: Minor reformatting."}, {"sha": "0ea95151bf44fb3fe7071ade3774f160809bd8ae", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd9f17cdc0903732072cd64349ef14912d9cab0/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd9f17cdc0903732072cd64349ef14912d9cab0/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=3fd9f17cdc0903732072cd64349ef14912d9cab0", "patch": "@@ -7921,7 +7921,6 @@ package body Einfo is\n               E_Return_Statement                           |\n               E_Subprogram_Body                            |\n               E_Subprogram_Type                            =>\n-\n             Write_Str (\"Last_Entity\");\n \n          when Scalar_Kind                                  =>"}, {"sha": "f32ade5f1709f2023092d5fe4c26a9a07b4de8ae", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd9f17cdc0903732072cd64349ef14912d9cab0/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd9f17cdc0903732072cd64349ef14912d9cab0/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=3fd9f17cdc0903732072cd64349ef14912d9cab0", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                                                                          --\n --          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n---                                                                          --\n+--                                                                         --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n@@ -337,6 +337,20 @@ package Einfo is\n --       on the list. A stack is required to handle the case of nested select\n --       statements referencing the same entry.\n \n+--    Access_Disp_Table (Elist16) [implementation base type only]\n+--       Present in record type entities. For a tagged type, points to the\n+--       dispatch tables associated with the tagged type. The first two\n+--       entities correspond with the primary dispatch table: 1) primary\n+--       dispatch table with user-defined primitives, 2) primary dispatch table\n+--       with predefined primitives. For each interface type covered by the\n+--       tagged type we also have: 3) secondary dispatch table with thunks of\n+--       primitives covering user-defined interface primitives, 4) secondary\n+--       dispatch table with thunks of predefined primitives, 5) secondary\n+--       dispatch table with user-defined primitives, and 6) secondary dispatch\n+--       table with predefined primitives. The last entity of this list is an\n+--       access type declaration used to expand dispatching calls through the\n+--       primary dispatch table. For a non-tagged record, contains Empty.\n+\n --    Actual_Subtype (Node17)\n --       Present in variables, constants, and formal parameters. This is the\n --       subtype imposed by the value of the object, as opposed to its nominal\n@@ -355,20 +369,6 @@ package Einfo is\n --       rather irregular, and the semantic checks that depend on the nominal\n --       subtype being unconstrained use flag Is_Constr_Subt_For_U_Nominal(qv).\n \n---    Access_Disp_Table (Elist16) [implementation base type only]\n---       Present in record type entities. For a tagged type, points to the\n---       dispatch tables associated with the tagged type. The first two\n---       entities correspond with the primary dispatch table: 1) primary\n---       dispatch table with user-defined primitives, 2) primary dispatch table\n---       with predefined primitives. For each interface type covered by the\n---       tagged type we also have: 3) secondary dispatch table with thunks of\n---       primitives covering user-defined interface primitives, 4) secondary\n---       dispatch table with thunks of predefined primitives, 5) secondary\n---       dispatch table with user-defined primitives, and 6) secondary dispatch\n---       table with predefined primitives. The last entity of this list is an\n---       access type declaration used to expand dispatching calls through the\n---       primary dispatch table. For a non-tagged record, contains Empty.\n-\n --    Address_Clause (synthesized)\n --       Applies to entries, objects and subprograms. Set if an address clause\n --       is present which references the object or subprogram and points to\n@@ -1874,7 +1874,7 @@ package Einfo is\n --       object fields. A pragma Import for a component can define the\n --       External_Name of the imported Java field (which is generally needed,\n --       because Java names are case sensitive).\n---\n+\n --    In_Use (Flag8)\n --       Present in packages and types. Set when analyzing a use clause for\n --       the corresponding entity. Reset at end of corresponding declarative"}, {"sha": "b38e2ab49dacbf463b09480a98662f0ad71df14d", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 33, "deletions": 8, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd9f17cdc0903732072cd64349ef14912d9cab0/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd9f17cdc0903732072cd64349ef14912d9cab0/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=3fd9f17cdc0903732072cd64349ef14912d9cab0", "patch": "@@ -1599,15 +1599,10 @@ package body Exp_Ch9 is\n       Actuals : constant List_Id := New_List;\n       --  the actuals in the entry call.\n \n-      Entry_Call : constant Node_Id :=\n-                     Make_Procedure_Call_Statement (Loc,\n-                       Name =>\n-                         Make_Selected_Component (Loc,\n-                           Prefix        => New_Occurrence_Of (Synch_Id, Loc),\n-                           Selector_Name => New_Occurrence_Of (E, Loc)),\n-                       Parameter_Associations => Actuals);\n+      Decls : constant List_Id := New_List;\n \n-      Decls      : constant List_Id := New_List;\n+      Entry_Call : Node_Id;\n+      Entry_Name : Node_Id;\n \n       Specs : List_Id;\n       --  The specification of the wrapper procedure\n@@ -1649,6 +1644,36 @@ package body Exp_Ch9 is\n           In_Present          =>  True,\n           Parameter_Type      => New_Occurrence_Of (Scope (E), Loc)));\n \n+      Entry_Name :=\n+        Make_Selected_Component (Loc,\n+          Prefix        => New_Occurrence_Of (Synch_Id, Loc),\n+          Selector_Name => New_Occurrence_Of (E, Loc));\n+\n+      --  If entity is entry family, second formal is the corresponding index,\n+      --  and entry name is an indexed component.\n+\n+      if Ekind (E) = E_Entry_Family then\n+         declare\n+            Index : constant Entity_Id :=\n+                      Make_Defining_Identifier (Loc, Name_I);\n+         begin\n+            Append_To (Specs,\n+              Make_Parameter_Specification (Loc,\n+                Defining_Identifier => Index,\n+                Parameter_Type      =>\n+                 New_Occurrence_Of (Entry_Index_Type (E), Loc)));\n+\n+            Entry_Name := Make_Indexed_Component (Loc,\n+               Prefix => Entry_Name,\n+               Expressions => New_List (New_Occurrence_Of (Index, Loc)));\n+         end;\n+      end if;\n+\n+      Entry_Call :=\n+        Make_Procedure_Call_Statement (Loc,\n+          Name => Entry_Name,\n+          Parameter_Associations => Actuals);\n+\n       --  Now add formals that match those of the entry, and build actuals\n       --  for the nested entry call.\n "}, {"sha": "eb7ebb44dc47150270ab65e287fa1a2471c28a11", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd9f17cdc0903732072cd64349ef14912d9cab0/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd9f17cdc0903732072cd64349ef14912d9cab0/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=3fd9f17cdc0903732072cd64349ef14912d9cab0", "patch": "@@ -1866,14 +1866,20 @@ package body GNAT.Command_Line is\n                      return False;\n                   end if;\n \n-               when Parameter_With_Optional_Space\n-                  | Parameter_With_Space_Or_Equal =>\n+               when Parameter_With_Optional_Space =>\n                   if Parameter /= \"\" then\n                      Callback (Switch, \" \", Parameter, Index => Index);\n                      Found_In_Config := True;\n                      return False;\n                   end if;\n \n+               when Parameter_With_Space_Or_Equal =>\n+                  if Parameter /= \"\" then\n+                     Callback (Switch, \"=\", Parameter, Index => Index);\n+                     Found_In_Config := True;\n+                     return False;\n+                  end if;\n+\n                when Parameter_No_Space =>\n                   if Parameter /= \"\" then\n                      Callback (Switch, \"\", Parameter, Index);\n@@ -1925,8 +1931,9 @@ package body GNAT.Command_Line is\n                   null;\n \n                when Parameter_With_Space_Or_Equal =>\n-                  if Switch (Param) = ' '\n-                    or else Switch (Param) = '='\n+                  if Param <= Switch'Last\n+                    and then\n+                      (Switch (Param) = ' ' or else Switch (Param) = '=')\n                   then\n                      Callback (Switch (Switch'First .. Last),\n                                \"=\", Switch (Param + 1 .. Switch'Last), Index);"}, {"sha": "785a4b571ca7a3f6d7f1d095ed5a00cfcc00d9a2", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd9f17cdc0903732072cd64349ef14912d9cab0/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd9f17cdc0903732072cd64349ef14912d9cab0/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=3fd9f17cdc0903732072cd64349ef14912d9cab0", "patch": "@@ -4045,14 +4045,14 @@ Allow full Ada 2005 features.\n \n @item -gnat2005\n @cindex @option{-gnat2005} (@command{gcc})\n-Allow full Ada 2005 features (same as @option{-gnat05}\n+Allow full Ada 2005 features (same as @option{-gnat05})\n \n @item -gnat12\n @cindex @option{-gnat12} (@command{gcc})\n \n @item -gnat2012\n @cindex @option{-gnat2012} (@command{gcc})\n-Allow full Ada 2012 features (same as @option{-gnat12}\n+Allow full Ada 2012 features (same as @option{-gnat12})\n \n @item -gnata\n @cindex @option{-gnata} (@command{gcc})\n@@ -4716,14 +4716,14 @@ standard output is redirected, a brief summary is written to\n @file{stderr} (standard error) giving the number of error messages and\n warning messages generated.\n \n-@item -^gnatl^OUTPUT_FILE^=file\n-@cindex @option{^-gnatl^OUTPUT_FILE^=fname} (@command{gcc})\n+@item ^-gnatl^/OUTPUT_FILE^=file\n+@cindex @option{^-gnatl^/OUTPUT_FILE^=fname} (@command{gcc})\n This has the same effect as @option{-gnatl} except that the output is\n written to a file instead of to standard output. If the given name\n @file{fname} does not start with a period, then it is the full name\n of the file to be written. If @file{fname} is an extension, it is\n appended to the name of the file being compiled. For example, if\n-file @file{xyz.adb} is compiled with @option{^-gnatl^OUTPUT_FILE^=.lst},\n+file @file{xyz.adb} is compiled with @option{^-gnatl^/OUTPUT_FILE^=.lst},\n then the output is written to file ^xyz.adb.lst^xyz.adb_lst^.\n \n @item -gnatU"}, {"sha": "ab56c612b62f60dd537bdf4907990e3def357796", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd9f17cdc0903732072cd64349ef14912d9cab0/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd9f17cdc0903732072cd64349ef14912d9cab0/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=3fd9f17cdc0903732072cd64349ef14912d9cab0", "patch": "@@ -6336,13 +6336,20 @@ package body Sem_Res is\n         and then Current_Scope /= PPC_Wrapper (Nam)\n       then\n          --  Rewrite as call to the precondition wrapper, adding the task\n-         --  object to the list of actuals.\n+         --  object to the list of actuals. If the call is to a member of\n+         --  an entry family, include the index as well.\n \n          declare\n             New_Call    : Node_Id;\n             New_Actuals : List_Id;\n          begin\n             New_Actuals := New_List (Obj);\n+\n+            if  Nkind (Entry_Name) = N_Indexed_Component then\n+               Append_To (New_Actuals,\n+                 New_Copy_Tree (First (Expressions (Entry_Name))));\n+            end if;\n+\n             Append_List (Parameter_Associations (N), New_Actuals);\n             New_Call :=\n               Make_Procedure_Call_Statement (Loc,"}, {"sha": "e82bd76da9c32ca07af4f4b54c50b971e52de789", "filename": "gcc/ada/ug_words", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd9f17cdc0903732072cd64349ef14912d9cab0/gcc%2Fada%2Fug_words", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd9f17cdc0903732072cd64349ef14912d9cab0/gcc%2Fada%2Fug_words", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fug_words?ref=3fd9f17cdc0903732072cd64349ef14912d9cab0", "patch": "@@ -199,6 +199,9 @@ gcc -c          ^ GNAT COMPILE\n -gnat83         ^ /83\n -gnat95         ^ /95\n -gnat05         ^ /05\n+-gnat2005       ^ /2005\n+-gnat12         ^ /12\n+-gnat2012       ^ /2012\n -gnatx          ^ /XREF=SUPPRESS\n -gnatX          ^ /EXTENSIONS_ALLOWED\n --RTS           ^ /RUNTIME_SYSTEM"}]}