{"sha": "41c32c985faab94f68575f187800595b95267b4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFjMzJjOTg1ZmFhYjk0ZjY4NTc1ZjE4NzgwMDU5NWI5NTI2N2I0ZQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-04-20T19:02:53Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-04-20T19:02:53Z"}, "message": "cpphash.h (NOTE_ESC_NL, [...]): Remove.\n\n\t* cpphash.h (NOTE_ESC_NL, NOTE_ESC_SPACE_NL, NOTE_TRIGRAPH,\n\tNOTE_NEWLINE): Remove.\n\t* cpplex.c (_cpp_clean_line, _cpp_process_line_notes): Update\n\tto handle new form of line note type.\n\nFrom-SVN: r65860", "tree": {"sha": "c45f57bd819d5e743141ff692c7b88dc8f88a50b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c45f57bd819d5e743141ff692c7b88dc8f88a50b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41c32c985faab94f68575f187800595b95267b4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41c32c985faab94f68575f187800595b95267b4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41c32c985faab94f68575f187800595b95267b4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41c32c985faab94f68575f187800595b95267b4e/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c6a2438aaf2ceeb137d21d67b00edf27a92104c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6a2438aaf2ceeb137d21d67b00edf27a92104c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6a2438aaf2ceeb137d21d67b00edf27a92104c0"}], "stats": {"total": 67, "additions": 35, "deletions": 32}, "files": [{"sha": "d5773b08da3edaf49a8b65d17f1e06fb3737d052", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c32c985faab94f68575f187800595b95267b4e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c32c985faab94f68575f187800595b95267b4e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41c32c985faab94f68575f187800595b95267b4e", "patch": "@@ -1,3 +1,10 @@\n+2003-04-20  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* cpphash.h (NOTE_ESC_NL, NOTE_ESC_SPACE_NL, NOTE_TRIGRAPH,\n+\tNOTE_NEWLINE): Remove.\n+\t* cpplex.c (_cpp_clean_line, _cpp_process_line_notes): Update\n+\tto handle new form of line note type.\n+\n 2003-04-20  Zack Weinberg  <zack@codesourcery.com>\n \n \t* target.h (encode_section_info): Add new argument carrying"}, {"sha": "6e17226def9f956ac643ed5bff40a1c1525ef40f", "filename": "gcc/cpphash.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c32c985faab94f68575f187800595b95267b4e/gcc%2Fcpphash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c32c985faab94f68575f187800595b95267b4e/gcc%2Fcpphash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.h?ref=41c32c985faab94f68575f187800595b95267b4e", "patch": "@@ -243,11 +243,10 @@ struct _cpp_line_note\n   /* Location in the clean line the note refers to.  */\n   const uchar *pos;\n \n-  /* Type of note.  */\n-  enum { NOTE_ESC_NL = 0,\n-\t NOTE_ESC_SPACE_NL,\n-\t NOTE_TRIGRAPH,\n-\t NOTE_NEWLINE } type;\n+  /* Type of note.  The 9 'from' trigraph characters represent those\n+     trigraphs, '\\\\' an escaped newline, ' ' an escaped newline with\n+     intervening space, and anything else is invalid.  */\n+  unsigned int type;\n };\n \n /* Represents the contents of a file cpplib has read in.  */"}, {"sha": "c148dad079200d5655842f71e5f66000dd12ff96", "filename": "gcc/cpplex.c", "status": "modified", "additions": 24, "deletions": 27, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c32c985faab94f68575f187800595b95267b4e/gcc%2Fcpplex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c32c985faab94f68575f187800595b95267b4e/gcc%2Fcpplex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplex.c?ref=41c32c985faab94f68575f187800595b95267b4e", "patch": "@@ -148,15 +148,14 @@ _cpp_clean_line (pfile)\n \t      if (p == buffer->next_line || p[-1] != '\\\\')\n \t\tbreak;\n \n-\t      add_line_note (buffer, p - 1,\n-\t\t\t     p != d ? NOTE_ESC_SPACE_NL: NOTE_ESC_NL);\n+\t      add_line_note (buffer, p - 1, p != d ? ' ': '\\\\');\n \t      d = p - 2;\n \t      buffer->next_line = p - 1;\n \t    }\n \t  else if (c == '?' && s[1] == '?' && _cpp_trigraph_map[s[2]])\n \t    {\n \t      /* Add a note regardless, for the benefit of -Wtrigraphs.  */\n-\t      add_line_note (buffer, d, NOTE_TRIGRAPH);\n+\t      add_line_note (buffer, d, s[2]);\n \t      if (CPP_OPTION (pfile, trigraphs))\n \t\t{\n \t\t  *d = _cpp_trigraph_map[s[2]];\n@@ -178,7 +177,8 @@ _cpp_clean_line (pfile)\n     }\n \n   *d = '\\n';\n-  add_line_note (buffer, d + 1, NOTE_NEWLINE);\n+  /* A sentinel note that should never be processed.  */\n+  add_line_note (buffer, d + 1, '\\n');\n   buffer->next_line = s + 1;\n }\n \n@@ -202,32 +202,12 @@ _cpp_process_line_notes (pfile, in_comment)\n       buffer->cur_note++;\n       col = CPP_BUF_COLUMN (buffer, note->pos + 1);\n \n-      switch (note->type)\n+      if (note->type == '\\\\' || note->type == ' ')\n \t{\n-\tcase NOTE_NEWLINE:\n-\t  /* This note is a kind of sentinel we should never reach.  */\n-\t  abort ();\n-\n-\tcase NOTE_TRIGRAPH:\n-\t  if (!in_comment && CPP_OPTION (pfile, warn_trigraphs))\n-\t    {\n-\t      if (CPP_OPTION (pfile, trigraphs))\n-\t\tcpp_error_with_line (pfile, DL_WARNING, pfile->line, col,\n-\t\t\t\t     \"trigraph converted to %c\",\n-\t\t\t\t     (int) note->pos[0]);\n-\t      else\n-\t\tcpp_error_with_line (pfile, DL_WARNING, pfile->line, col,\n-\t\t\t\t     \"trigraph ??%c ignored\",\n-\t\t\t\t     (int) note->pos[2]);\n-\t    }\n-\t  break;\n-\n-\tcase NOTE_ESC_SPACE_NL:\n-\t  if (!in_comment)\n+\t  if (note->type == ' ' && !in_comment)\n \t    cpp_error_with_line (pfile, DL_WARNING, pfile->line, col,\n \t\t\t\t \"backslash and newline separated by space\");\n-\t  /* Fall through... */\n-\tcase NOTE_ESC_NL:\n+\n \t  if (buffer->next_line > buffer->rlimit)\n \t    {\n \t      cpp_error_with_line (pfile, DL_PEDWARN, pfile->line, col,\n@@ -239,6 +219,23 @@ _cpp_process_line_notes (pfile, in_comment)\n \t  buffer->line_base = note->pos;\n \t  pfile->line++;\n \t}\n+      else if (_cpp_trigraph_map[note->type])\n+\t{\n+\t  if (!in_comment && CPP_OPTION (pfile, warn_trigraphs))\n+\t    {\n+\t      if (CPP_OPTION (pfile, trigraphs))\n+\t\tcpp_error_with_line (pfile, DL_WARNING, pfile->line, col,\n+\t\t\t\t     \"trigraph ??%c converted to %c\",\n+\t\t\t\t     note->type,\n+\t\t\t\t     (int) _cpp_trigraph_map[note->type]);\n+\t      else\n+\t\tcpp_error_with_line (pfile, DL_WARNING, pfile->line, col,\n+\t\t\t\t     \"trigraph ??%c ignored\",\n+\t\t\t\t     note->type);\n+\t    }\n+\t}\n+      else\n+\tabort ();\n     }\n }\n "}]}