{"sha": "68b61df962a86291e7edcb1760084a5adb0652c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhiNjFkZjk2MmE4NjI5MWU3ZWRjYjE3NjAwODRhNWFkYjA2NTJjOA==", "commit": {"author": {"name": "Ovidiu Predescu", "email": "ovidiu@gcc.gnu.org", "date": "2001-01-03T08:49:02Z"}, "committer": {"name": "Ovidiu Predescu", "email": "ovidiu@gcc.gnu.org", "date": "2001-01-03T08:49:02Z"}, "message": "Added __objc_msg_forward...\n\nAdded __objc_msg_forward, a hook that allows external libraries to\nprovide a function that returns the real forwarding function. This can\nalleviate problems __builtin_apply() and friends have on various\nplatforms. (Solution suggested by Helge Hess.)\n\nDefine gen_rtx_REG.\n\nFrom-SVN: r38650", "tree": {"sha": "c45444560a6907e888e13030f86e427dd5b063c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c45444560a6907e888e13030f86e427dd5b063c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68b61df962a86291e7edcb1760084a5adb0652c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68b61df962a86291e7edcb1760084a5adb0652c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68b61df962a86291e7edcb1760084a5adb0652c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68b61df962a86291e7edcb1760084a5adb0652c8/comments", "author": null, "committer": null, "parents": [{"sha": "8cb4a04adc847714d1bf98ed9ebfee077c1d65a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cb4a04adc847714d1bf98ed9ebfee077c1d65a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cb4a04adc847714d1bf98ed9ebfee077c1d65a2"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "b743829e8f549df73205664b85cfde804f12ddcd", "filename": "libobjc/sendmsg.c", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68b61df962a86291e7edcb1760084a5adb0652c8/libobjc%2Fsendmsg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68b61df962a86291e7edcb1760084a5adb0652c8/libobjc%2Fsendmsg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fsendmsg.c?ref=68b61df962a86291e7edcb1760084a5adb0652c8", "patch": "@@ -33,6 +33,7 @@ Boston, MA 02111-1307, USA.  */\n /* this is how we hack STRUCT_VALUE to be 1 or 0 */\n #define gen_rtx(args...) 1\n #define gen_rtx_MEM(args...) 1\n+#define gen_rtx_REG(args...) 1\n #define rtx int\n \n #if !defined(STRUCT_VALUE) || STRUCT_VALUE == 0\n@@ -44,6 +45,11 @@ Boston, MA 02111-1307, USA.  */\n /* The uninstalled dispatch table */\n struct sarray* __objc_uninstalled_dtable = 0;   /* !T:MUTEX */\n \n+/* Hook for method forwarding. If it is set, is invoked to return a\n+   function that performs the real forwarding. Otherwise the libgcc\n+   based functions (__builtin_apply and friends) are used. */\n+IMP (*__objc_msg_forward)(SEL) = NULL;\n+\n /* Send +initialize to class */\n static void __objc_send_initialize(Class);\n \n@@ -76,18 +82,27 @@ __inline__\n IMP\n __objc_get_forward_imp (SEL sel)\n {\n-  const char *t = sel->sel_types;\n+  if (__objc_msg_forward)\n+    {\n+      IMP result;\n+      if ((result = __objc_msg_forward (sel)))\n+        return result;\n+    }\n+  else\n+    {\n+      const char *t = sel->sel_types;\n \n-  if (t && (*t == '[' || *t == '(' || *t == '{')\n+      if (t && (*t == '[' || *t == '(' || *t == '{')\n #ifdef OBJC_MAX_STRUCT_BY_VALUE\n-    && objc_sizeof_type(t) > OBJC_MAX_STRUCT_BY_VALUE\n+          && objc_sizeof_type(t) > OBJC_MAX_STRUCT_BY_VALUE\n #endif\n-      )\n-    return (IMP)__objc_block_forward;\n-  else if (t && (*t == 'f' || *t == 'd'))\n-    return (IMP)__objc_double_forward;\n-  else\n-    return (IMP)__objc_word_forward;\n+          )\n+        return (IMP)__objc_block_forward;\n+      else if (t && (*t == 'f' || *t == 'd'))\n+        return (IMP)__objc_double_forward;\n+      else\n+        return (IMP)__objc_word_forward;\n+    }\n }\n \n /* Given a class and selector, return the selector's implementation.  */"}]}