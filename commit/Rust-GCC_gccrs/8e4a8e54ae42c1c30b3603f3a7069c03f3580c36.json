{"sha": "8e4a8e54ae42c1c30b3603f3a7069c03f3580c36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU0YThlNTRhZTQyYzFjMzBiMzYwM2YzYTcwNjljMDNmMzU4MGMzNg==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-20T23:21:35Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-20T23:21:35Z"}, "message": "[ARM/AArch64][testsuite] Add vmlal and vmlsl tests.\n\n2015-01-20  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vmlXl.inc: New file.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmlal.c: New file.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmlsl.c: New file.\n\nFrom-SVN: r219920", "tree": {"sha": "bdf49f1588cc4e499545d8098f1439d3f7a02a57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdf49f1588cc4e499545d8098f1439d3f7a02a57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e4a8e54ae42c1c30b3603f3a7069c03f3580c36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e4a8e54ae42c1c30b3603f3a7069c03f3580c36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e4a8e54ae42c1c30b3603f3a7069c03f3580c36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e4a8e54ae42c1c30b3603f3a7069c03f3580c36/comments", "author": null, "committer": null, "parents": [{"sha": "8df0f8aad2953e82d98a1ec25c4d1175fc2e6d3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df0f8aad2953e82d98a1ec25c4d1175fc2e6d3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8df0f8aad2953e82d98a1ec25c4d1175fc2e6d3a"}], "stats": {"total": 135, "additions": 135, "deletions": 0}, "files": [{"sha": "8a6b19b505965cc732f0164b50f2d38f9d8e1b7d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e4a8e54ae42c1c30b3603f3a7069c03f3580c36/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e4a8e54ae42c1c30b3603f3a7069c03f3580c36/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8e4a8e54ae42c1c30b3603f3a7069c03f3580c36", "patch": "@@ -1,3 +1,9 @@\n+2015-01-20  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmlXl.inc: New file.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmlal.c: New file.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmlsl.c: New file.\n+\n 2015-01-20  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vshuffle.inc: New file."}, {"sha": "1e6bab3a51bf983a7b5ea10526dcd8222fbdb00a", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmlXl.inc", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e4a8e54ae42c1c30b3603f3a7069c03f3580c36/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvmlXl.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e4a8e54ae42c1c30b3603f3a7069c03f3580c36/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvmlXl.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvmlXl.inc?ref=8e4a8e54ae42c1c30b3603f3a7069c03f3580c36", "patch": "@@ -0,0 +1,89 @@\n+#define FNNAME1(NAME) exec_ ## NAME\n+#define FNNAME(NAME) FNNAME1(NAME)\n+\n+void FNNAME (INSN_NAME) (void)\n+{\n+  /* vector_res = OP(vector, vector3, vector4),\n+     then store the result.  */\n+#define TEST_VMLXL1(INSN, T1, T2, W, W2, N)\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W, N) =                                      \\\n+    INSN##_##T2##W2(VECT_VAR(vector, T1, W, N),                         \\\n+                    VECT_VAR(vector3, T1, W2, N),                       \\\n+                    VECT_VAR(vector4, T1, W2, N));                      \\\n+  vst1q_##T2##W(VECT_VAR(result, T1, W, N), VECT_VAR(vector_res, T1, W, N))\n+\n+#define TEST_VMLXL(INSN, T1, T2, W, W2, N)\t\\\n+  TEST_VMLXL1(INSN, T1, T2, W, W2, N)\n+\n+  DECL_VARIABLE(vector, int, 16, 8);\n+  DECL_VARIABLE(vector3, int, 8, 8);\n+  DECL_VARIABLE(vector4, int, 8, 8);\n+  DECL_VARIABLE(vector_res, int, 16, 8);\n+\n+  DECL_VARIABLE(vector, int, 32, 4);\n+  DECL_VARIABLE(vector3, int, 16, 4);\n+  DECL_VARIABLE(vector4, int, 16, 4);\n+  DECL_VARIABLE(vector_res, int, 32, 4);\n+\n+  DECL_VARIABLE(vector, int, 64, 2);\n+  DECL_VARIABLE(vector3, int, 32, 2);\n+  DECL_VARIABLE(vector4, int, 32, 2);\n+  DECL_VARIABLE(vector_res, int, 64, 2);\n+\n+  DECL_VARIABLE(vector, uint, 16, 8);\n+  DECL_VARIABLE(vector3, uint, 8, 8);\n+  DECL_VARIABLE(vector4, uint, 8, 8);\n+  DECL_VARIABLE(vector_res, uint, 16, 8);\n+\n+  DECL_VARIABLE(vector, uint, 32, 4);\n+  DECL_VARIABLE(vector3, uint, 16, 4);\n+  DECL_VARIABLE(vector4, uint, 16, 4);\n+  DECL_VARIABLE(vector_res, uint, 32, 4);\n+\n+  DECL_VARIABLE(vector, uint, 64, 2);\n+  DECL_VARIABLE(vector3, uint, 32, 2);\n+  DECL_VARIABLE(vector4, uint, 32, 2);\n+  DECL_VARIABLE(vector_res, uint, 64, 2);\n+\n+  clean_results ();\n+\n+  VLOAD(vector, buffer, q, int, s, 16, 8);\n+  VLOAD(vector, buffer, q, int, s, 32, 4);\n+  VLOAD(vector, buffer, q, int, s, 64, 2);\n+  VLOAD(vector, buffer, q, uint, u, 16, 8);\n+  VLOAD(vector, buffer, q, uint, u, 32, 4);\n+  VLOAD(vector, buffer, q, uint, u, 64, 2);\n+\n+  VDUP(vector3, , int, s, 8, 8, 0x55);\n+  VDUP(vector4, , int, s, 8, 8, 0xBB);\n+  VDUP(vector3, , int, s, 16, 4, 0x55);\n+  VDUP(vector4, , int, s, 16, 4, 0xBB);\n+  VDUP(vector3, , int, s, 32, 2, 0x55);\n+  VDUP(vector4, , int, s, 32, 2, 0xBB);\n+  VDUP(vector3, , uint, u, 8, 8, 0x55);\n+  VDUP(vector4, , uint, u, 8, 8, 0xBB);\n+  VDUP(vector3, , uint, u, 16, 4, 0x55);\n+  VDUP(vector4, , uint, u, 16, 4, 0xBB);\n+  VDUP(vector3, , uint, u, 32, 2, 0x55);\n+  VDUP(vector4, , uint, u, 32, 2, 0xBB);\n+\n+  TEST_VMLXL(INSN_NAME, int, s, 16, 8, 8);\n+  TEST_VMLXL(INSN_NAME, int, s, 32, 16, 4);\n+  TEST_VMLXL(INSN_NAME, int, s, 64, 32, 2);\n+  TEST_VMLXL(INSN_NAME, uint, u, 16, 8, 8);\n+  TEST_VMLXL(INSN_NAME, uint, u, 32, 16, 4);\n+  TEST_VMLXL(INSN_NAME, uint, u, 64, 32, 2);\n+\n+  CHECK(TEST_MSG, int, 16, 8, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, int, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, int, 64, 2, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, uint, 16, 8, PRIx16, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 64, 2, PRIx64, expected, \"\");\n+}\n+\n+int main (void)\n+{\n+  FNNAME (INSN_NAME) ();\n+  return 0;\n+}"}, {"sha": "c147f31c6ef7be4fae121c990d954e84d6dc59b5", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmlal.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e4a8e54ae42c1c30b3603f3a7069c03f3580c36/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmlal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e4a8e54ae42c1c30b3603f3a7069c03f3580c36/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmlal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmlal.c?ref=8e4a8e54ae42c1c30b3603f3a7069c03f3580c36", "patch": "@@ -0,0 +1,18 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+#define INSN_NAME vmlal\n+#define TEST_MSG \"VMLAL\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0xe907, 0xe908, 0xe909, 0xe90a,\n+\t\t\t\t\t0xe90b, 0xe90c, 0xe90d, 0xe90e };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0x3e07, 0x3e08, 0x3e09, 0x3e0a };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0x3e07, 0x3e08 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0x3e07, 0x3e08, 0x3e09, 0x3e0a,\n+\t\t\t\t\t 0x3e0b, 0x3e0c, 0x3e0d, 0x3e0e };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0x3e07, 0x3e08, 0x3e09, 0x3e0a };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0x3e07, 0x3e08 };\n+\n+#include \"vmlXl.inc\""}, {"sha": "6c984ae1767e1e38d297a342e16e481a67a4cd49", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmlsl.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e4a8e54ae42c1c30b3603f3a7069c03f3580c36/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmlsl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e4a8e54ae42c1c30b3603f3a7069c03f3580c36/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmlsl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmlsl.c?ref=8e4a8e54ae42c1c30b3603f3a7069c03f3580c36", "patch": "@@ -0,0 +1,22 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+#define INSN_NAME vmlsl\n+#define TEST_MSG \"VMLSL\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0x16d9, 0x16da, 0x16db, 0x16dc,\n+\t\t\t\t\t0x16dd, 0x16de, 0x16df, 0x16e0 };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xffffc1d9, 0xffffc1da,\n+\t\t\t\t\t0xffffc1db, 0xffffc1dc };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0xffffffffffffc1d9,\n+\t\t\t\t\t0xffffffffffffc1da };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0xc1d9, 0xc1da, 0xc1db, 0xc1dc,\n+\t\t\t\t\t 0xc1dd, 0xc1de, 0xc1df, 0xc1e0 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xffffc1d9, 0xffffc1da,\n+\t\t\t\t\t 0xffffc1db, 0xffffc1dc };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0xffffffffffffc1d9,\n+\t\t\t\t\t 0xffffffffffffc1da };\n+\n+#include \"vmlXl.inc\""}]}