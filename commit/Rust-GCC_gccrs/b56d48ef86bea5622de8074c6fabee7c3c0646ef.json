{"sha": "b56d48ef86bea5622de8074c6fabee7c3c0646ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU2ZDQ4ZWY4NmJlYTU2MjJkZTgwNzRjNmZhYmVlN2MzYzA2NDZlZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-08-18T13:47:37Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-08-18T13:47:37Z"}, "message": "Improve documentation of libstdc++ test targets\n\n\t* doc/xml/manual/test.xml: Improve documentation of test targets.\n\tDocument new-abi-baseline, check-debug, and check-parallel targets.\n\nFrom-SVN: r239573", "tree": {"sha": "c50541ef1f7317091f09a67616a07f83d90d730b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c50541ef1f7317091f09a67616a07f83d90d730b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b56d48ef86bea5622de8074c6fabee7c3c0646ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b56d48ef86bea5622de8074c6fabee7c3c0646ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b56d48ef86bea5622de8074c6fabee7c3c0646ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b56d48ef86bea5622de8074c6fabee7c3c0646ef/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "409d55557baad029d590862b7958d34f18fb09a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/409d55557baad029d590862b7958d34f18fb09a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/409d55557baad029d590862b7958d34f18fb09a5"}], "stats": {"total": 174, "additions": 118, "deletions": 56}, "files": [{"sha": "5acc88e029399ad1cb08eef1f969ea9f1c6cb194", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b56d48ef86bea5622de8074c6fabee7c3c0646ef/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b56d48ef86bea5622de8074c6fabee7c3c0646ef/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b56d48ef86bea5622de8074c6fabee7c3c0646ef", "patch": "@@ -1,5 +1,8 @@\n 2016-08-18  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* doc/xml/manual/test.xml: Improve documentation of test targets.\n+\tDocument new-abi-baseline, check-debug, and check-parallel targets.\n+\n \t* doc/xml/manual/build_hacking.xml: New section on shared library\n \tversioning.\n "}, {"sha": "cbba3894786c7eb5077408c903ab5ec52aa3be26", "filename": "libstdc++-v3/doc/xml/manual/test.xml", "status": "modified", "additions": 115, "deletions": 56, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b56d48ef86bea5622de8074c6fabee7c3c0646ef/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Ftest.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b56d48ef86bea5622de8074c6fabee7c3c0646ef/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Ftest.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Ftest.xml?ref=b56d48ef86bea5622de8074c6fabee7c3c0646ef", "patch": "@@ -386,104 +386,163 @@ cat 27_io/objects/char/3_xin.in | a.out</programlisting>\n       following:\n     </para>\n \n-   <programlisting>\n+<variablelist>\n+<varlistentry>\n+   <term><userinput>\n    make testsuite_files\n-   </programlisting>\n+   </userinput></term>>\n \n+  <listitem>\n   <para>\n     Five files are generated that determine what test files\n     are run. These files are:\n-  </para>\n \n-   <itemizedlist>\n-     <listitem>\n-       <para>\n-\t <emphasis>testsuite_files</emphasis>\n-       </para>\n-       <para>\n+    <variablelist>\n+    <varlistentry>\n+      <term> <filename>testsuite_files</filename> </term>\n+      <listitem>\n \t This is a list of all the test cases that will be run. Each\n \t test case is on a separate line, given with an absolute path\n-\t from the <emphasis>libsrcdir/testsuite</emphasis> directory.\n-       </para>\n-     </listitem>\n-\n-     <listitem>\n-       <para>\n-\t <emphasis>testsuite_files_interactive</emphasis>\n-       </para>\n-       <para>\n+\t from the\n+         <filename class=\"directory\"><replaceable>libsrcdir</replaceable>/testsuite</filename>\n+         directory.\n+      </listitem>\n+    </varlistentry>\n+\n+    <varlistentry>\n+      <term> <filename>testsuite_files_interactive</filename> </term>\n+      <listitem>\n \t This is a list of all the interactive test cases, using the\n \t same format as the file list above. These tests are not run\n \t by default.\n-     </para>\n-     </listitem>\n+      </listitem>\n+    </varlistentry>\n \n-     <listitem>\n-       <para>\n-\t <emphasis>testsuite_files_performance</emphasis>\n-       </para>\n-       <para>\n+    <varlistentry>\n+      <term> <filename>testsuite_files_performance</filename> </term>\n+      <listitem>\n \t This is a list of all the performance test cases, using the\n \t same format as the file list above. These tests are not run\n \t by default.\n-     </para>\n-     </listitem>\n+      </listitem>\n+    </varlistentry>\n \n-     <listitem>\n-       <para>\n-\t <emphasis>testsuite_thread</emphasis>\n-       </para>\n-       <para>\n+    <varlistentry>\n+      <term> <filename>testsuite_thread</filename> </term>\n+      <listitem>\n \t This file indicates that the host system can run tests which\n \t involved multiple threads.\n-       </para>\n-     </listitem>\n-\n-     <listitem>\n-       <para>\n-\t <emphasis>testsuite_wchar_t</emphasis>\n-       </para>\n-       <para>\n-\t This file indicates that the host system can run the wchar_t\n-\t tests, and corresponds to the macro definition <code>\n-\t _GLIBCXX_USE_WCHAR_T</code> in the file c++config.h.\n-       </para>\n-     </listitem>\n-    </itemizedlist>\n+      </listitem>\n+    </varlistentry>\n+\n+    <varlistentry>\n+      <term> <filename>testsuite_wchar_t</filename> </term>\n+      <listitem>\n+\t This file indicates that the host system can run the\n+         <code>wchar_t</code> tests, and corresponds to the macro\n+         definition <literal>_GLIBCXX_USE_WCHAR_T</literal> in the\n+         file <filename>c++config.h</filename>.\n+      </listitem>\n+    </varlistentry>\n+    </variablelist>\n+  </para>\n+  </listitem>\n+</varlistentry>\n \n-   <programlisting>\n+<varlistentry>\n+   <term><userinput>\n    make check-abi\n-   </programlisting>\n+   </userinput></term>>\n \n+   <listitem>\n    <para>\n      The library ABI can be tested. This involves testing the shared\n-     library against an ABI-defining previous version of symbol\n-     exports.\n+     library against a baseline list of symbol exports that defines the\n+     previous version of the ABI. The tests require that no exported\n+     symbols are removed, no new symbols are added to the old symbol\n+     versions, and any new symbols have the latest symbol version.\n+     See <link linkend=\"abi.versioning\">Versioning</link> for more details\n+     of the ABI version history.\n+   </para>\n+   </listitem>\n+</varlistentry>\n+\n+<varlistentry>\n+   <term><userinput>\n+   make new-abi-baseline\n+   </userinput></term>>\n+\n+   <listitem>\n+   <para>\n+     Generate a new baseline set of symbols exported from the library\n+     (written to a file under\n+     <filename class=\"directory\"><replaceable>libsrcdir</replaceable>/config/abi/post/<replaceable>target</replaceable>/</filename>).\n+     A different baseline symbols file is needed for each architecture and\n+     is used by the <literal>check-abi</literal> target described above.\n+     The files are usually re-generated by target maintainers for releases.\n    </para>\n+   </listitem>\n+</varlistentry>\n \n-  <programlisting>\n+<varlistentry>\n+  <term><userinput>\n    make check-compile\n-  </programlisting>\n+  </userinput></term>>\n \n+   <listitem>\n    <para>\n      This rule compiles, but does not link or execute, the\n-     <emphasis>testsuite_files</emphasis> test cases and displays the\n+     <filename>testsuite_files</filename> test cases and displays the\n      output on stdout.\n    </para>\n+   </listitem>\n+</varlistentry>\n \n-   <programlisting>\n+<varlistentry>\n+   <term><userinput>\n    make check-performance\n-   </programlisting>\n+   </userinput></term>>\n \n+   <listitem>\n    <para>\n      This rule runs through the\n-     <emphasis>testsuite_files_performance</emphasis> test cases and\n+     <filename>testsuite_files_performance</filename> test cases and\n      collects information for performance analysis and can be used to\n      spot performance regressions. Various timing information is\n      collected, as well as number of hard page faults, and memory\n      used. This is not run by default, and the implementation is in\n      flux.\n    </para>\n+   </listitem>\n+</varlistentry>\n+\n+<varlistentry>\n+   <term><userinput>\n+   make check-debug\n+   </userinput></term>>\n+\n+   <listitem>\n+   <para>\n+     This rule runs through the test suite under the\n+     <link linkend=\"manual.ext.debug_mode\">debug mode</link>.\n+   </para>\n+   </listitem>\n+</varlistentry>\n+\n+<varlistentry>\n+   <term><userinput>\n+   make check-parallel\n+   </userinput></term>>\n+\n+   <listitem>\n+   <para>\n+     This rule runs through the test suite under the\n+     <link linkend=\"manual.ext.parallel_mode\">parallel mode</link>.\n+   </para>\n+   </listitem>\n+</varlistentry>\n+\n+</variablelist>\n \n    <para>\n       We are interested in any strange failures of the testsuite;"}]}