{"sha": "2a496e8b7490b064efde59e0bbcddb5b4de099e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE0OTZlOGI3NDkwYjA2NGVmZGU1OWUwYmJjZGRiNWI0ZGUwOTllMA==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2002-06-06T06:37:37Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2002-06-06T06:37:37Z"}, "message": "emit-rtl.c (get_first_nonnote_insn, [...]): New functions.\n\n\t* emit-rtl.c (get_first_nonnote_insn, get_last_nonnote_insn): New\n\tfunctions.\n\t* rtl.h (get_first_nonnote_insn, get_last_nonnote_insn): Declare.\n\t* avr/avr.c (avr_output_function_epilogue): Use above to determine\n\tfunction size.\n\t* pa/pa.c (pa_output_function_prologue): Likewise.\n\nFrom-SVN: r54304", "tree": {"sha": "4f5d9afc2707e7938b6e600328e3f42c1ff4d0b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f5d9afc2707e7938b6e600328e3f42c1ff4d0b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a496e8b7490b064efde59e0bbcddb5b4de099e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a496e8b7490b064efde59e0bbcddb5b4de099e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a496e8b7490b064efde59e0bbcddb5b4de099e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a496e8b7490b064efde59e0bbcddb5b4de099e0/comments", "author": null, "committer": null, "parents": [{"sha": "2ff581c3af4da7710ff2d4152e5c9c3d961c6c2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff581c3af4da7710ff2d4152e5c9c3d961c6c2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ff581c3af4da7710ff2d4152e5c9c3d961c6c2b"}], "stats": {"total": 53, "additions": 50, "deletions": 3}, "files": [{"sha": "544fe6f4c7fb813ef4e52993be5461621e2cf6c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a496e8b7490b064efde59e0bbcddb5b4de099e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a496e8b7490b064efde59e0bbcddb5b4de099e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a496e8b7490b064efde59e0bbcddb5b4de099e0", "patch": "@@ -1,3 +1,12 @@\n+2002-06-06  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* emit-rtl.c (get_first_nonnote_insn, get_last_nonnote_insn): New\n+\tfunctions.\n+\t* rtl.h (get_first_nonnote_insn, get_last_nonnote_insn): Declare.\n+\t* avr/avr.c (avr_output_function_epilogue): Use above to determine\n+\tfunction size.\n+\t* pa/pa.c (pa_output_function_prologue): Likewise.\n+\n 2002-06-05  David S. Miller  <davem@redhat.com>\n \n \t* integrate.c (subst_constants): Handle 'B' RTL format."}, {"sha": "c23059c6823e08d68971e999f44bf816ac9a7be5", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a496e8b7490b064efde59e0bbcddb5b4de099e0/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a496e8b7490b064efde59e0bbcddb5b4de099e0/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=2a496e8b7490b064efde59e0bbcddb5b4de099e0", "patch": "@@ -749,8 +749,8 @@ avr_output_function_epilogue (file, size)\n   interrupt_func_p = interrupt_function_p (current_function_decl);\n   signal_func_p = signal_function_p (current_function_decl);\n   main_p = MAIN_NAME_P (DECL_NAME (current_function_decl));\n-  function_size = (INSN_ADDRESSES (INSN_UID (get_last_insn ()))\n-\t\t   - INSN_ADDRESSES (INSN_UID (get_insns ())));\n+  function_size = (INSN_ADDRESSES (INSN_UID (get_last_nonnote_insn ()))\n+\t\t   - INSN_ADDRESSES (INSN_UID (get_first_nonnote_insn ())));\n   function_size += jump_tables_size;\n   live_seq = sequent_regs_live ();\n   minimize = (TARGET_CALL_PROLOGUES"}, {"sha": "bfa1c1d45c6b78a26549f16bb33f9ba4c4d275c4", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a496e8b7490b064efde59e0bbcddb5b4de099e0/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a496e8b7490b064efde59e0bbcddb5b4de099e0/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=2a496e8b7490b064efde59e0bbcddb5b4de099e0", "patch": "@@ -3179,7 +3179,7 @@ pa_output_function_prologue (file, size)\n     {\n       unsigned int old_total = total_code_bytes;\n \n-      total_code_bytes += INSN_ADDRESSES (INSN_UID (get_last_insn ()));\n+      total_code_bytes += INSN_ADDRESSES (INSN_UID (get_last_nonnote_insn ()));\n       total_code_bytes += FUNCTION_BOUNDARY / BITS_PER_UNIT;\n \n       /* Be prepared to handle overflows.  */"}, {"sha": "9d15fdf6ae48ce6855a5a5c62b27525153a8d57a", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a496e8b7490b064efde59e0bbcddb5b4de099e0/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a496e8b7490b064efde59e0bbcddb5b4de099e0/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=2a496e8b7490b064efde59e0bbcddb5b4de099e0", "patch": "@@ -2710,6 +2710,42 @@ get_last_insn_anywhere ()\n   return 0;\n }\n \n+/* Return the first nonnote insn emitted in current sequence or current\n+   function.  This routine looks inside SEQUENCEs.  */\n+\n+rtx\n+get_first_nonnote_insn ()\n+{\n+  rtx insn = first_insn;\n+\n+  while (insn)\n+    {\n+      insn = next_insn (insn);\n+      if (insn == 0 || GET_CODE (insn) != NOTE)\n+\tbreak;\n+    }\n+\n+  return insn;\n+}\n+\n+/* Return the last nonnote insn emitted in current sequence or current\n+   function.  This routine looks inside SEQUENCEs.  */\n+\n+rtx\n+get_last_nonnote_insn ()\n+{\n+  rtx insn = last_insn;\n+\n+  while (insn)\n+    {\n+      insn = previous_insn (insn);\n+      if (insn == 0 || GET_CODE (insn) != NOTE)\n+\tbreak;\n+    }\n+\n+  return insn;\n+}\n+\n /* Return a number larger than any instruction's uid in this function.  */\n \n int"}, {"sha": "d4b6063944d5053cb4ceb786b504f7642f7a4623", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a496e8b7490b064efde59e0bbcddb5b4de099e0/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a496e8b7490b064efde59e0bbcddb5b4de099e0/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=2a496e8b7490b064efde59e0bbcddb5b4de099e0", "patch": "@@ -1342,6 +1342,8 @@ extern rtx get_insns\t\t\tPARAMS ((void));\n extern const char *get_insn_name\tPARAMS ((int));\n extern rtx get_last_insn\t\tPARAMS ((void));\n extern rtx get_last_insn_anywhere\tPARAMS ((void));\n+extern rtx get_first_nonnote_insn\tPARAMS ((void));\n+extern rtx get_last_nonnote_insn\tPARAMS ((void));\n extern void start_sequence\t\tPARAMS ((void));\n extern void push_to_sequence\t\tPARAMS ((rtx));\n extern void end_sequence\t\tPARAMS ((void));"}]}