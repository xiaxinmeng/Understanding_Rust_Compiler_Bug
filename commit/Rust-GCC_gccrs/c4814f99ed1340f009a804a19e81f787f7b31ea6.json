{"sha": "c4814f99ed1340f009a804a19e81f787f7b31ea6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ4MTRmOTllZDEzNDBmMDA5YTgwNGExOWU4MWY3ODdmN2IzMWVhNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-01-22T09:10:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-01-22T09:10:25Z"}, "message": "re PR rtl-optimization/49429 (dse.c change (r175063) causes execution failures)\n\n\tPR rtl-optimization/49429\n\tPR target/49454\n\tPR rtl-optimization/86334\n\tPR target/88906\n\t* expr.c (emit_block_move_hints): Move marking of MEM_EXPRs\n\taddressable from here...\n\t(emit_block_op_via_libcall): ... to here.\n\n\t* gcc.target/i386/pr86334.c: New test.\n\t* gcc.target/i386/pr88906.c: New test.\n\nFrom-SVN: r268138", "tree": {"sha": "12b6bf05546c0a6b3e9bcc4b10d90a4d3b37d812", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12b6bf05546c0a6b3e9bcc4b10d90a4d3b37d812"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4814f99ed1340f009a804a19e81f787f7b31ea6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4814f99ed1340f009a804a19e81f787f7b31ea6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4814f99ed1340f009a804a19e81f787f7b31ea6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4814f99ed1340f009a804a19e81f787f7b31ea6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4d825b5e780cea568317b2ca2c82420b677f119", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d825b5e780cea568317b2ca2c82420b677f119", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4d825b5e780cea568317b2ca2c82420b677f119"}], "stats": {"total": 78, "additions": 70, "deletions": 8}, "files": [{"sha": "e122c6539960e154db23fcced793cc6118e70fde", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4814f99ed1340f009a804a19e81f787f7b31ea6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4814f99ed1340f009a804a19e81f787f7b31ea6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c4814f99ed1340f009a804a19e81f787f7b31ea6", "patch": "@@ -1,3 +1,13 @@\n+2019-01-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/49429\n+\tPR target/49454\n+\tPR rtl-optimization/86334\n+\tPR target/88906\n+\t* expr.c (emit_block_move_hints): Move marking of MEM_EXPRs\n+\taddressable from here...\n+\t(emit_block_op_via_libcall): ... to here.\n+\n 2019-01-22  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-loop.c (vect_analyze_loop_operations): Use"}, {"sha": "dcc9214b7e4765eeba54077b77533ebcc9b7d403", "filename": "gcc/expr.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4814f99ed1340f009a804a19e81f787f7b31ea6/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4814f99ed1340f009a804a19e81f787f7b31ea6/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=c4814f99ed1340f009a804a19e81f787f7b31ea6", "patch": "@@ -1631,14 +1631,6 @@ emit_block_move_hints (rtx x, rtx y, rtx size, enum block_op_methods method,\n       if (may_use_call < 0)\n \treturn pc_rtx;\n \n-      /* Since x and y are passed to a libcall, mark the corresponding\n-\t tree EXPR as addressable.  */\n-      tree y_expr = MEM_EXPR (y);\n-      tree x_expr = MEM_EXPR (x);\n-      if (y_expr)\n-\tmark_addressable (y_expr);\n-      if (x_expr)\n-\tmark_addressable (x_expr);\n       retval = emit_block_copy_via_libcall (x, y, size,\n \t\t\t\t\t    method == BLOCK_OP_TAILCALL);\n     }\n@@ -1884,6 +1876,15 @@ emit_block_op_via_libcall (enum built_in_function fncode, rtx dst, rtx src,\n   tree call_expr, dst_tree, src_tree, size_tree;\n   machine_mode size_mode;\n \n+  /* Since dst and src are passed to a libcall, mark the corresponding\n+     tree EXPR as addressable.  */\n+  tree dst_expr = MEM_EXPR (dst);\n+  tree src_expr = MEM_EXPR (src);\n+  if (dst_expr)\n+    mark_addressable (dst_expr);\n+  if (src_expr)\n+    mark_addressable (src_expr);\n+\n   dst_addr = copy_addr_to_reg (XEXP (dst, 0));\n   dst_addr = convert_memory_address (ptr_mode, dst_addr);\n   dst_tree = make_tree (ptr_type_node, dst_addr);"}, {"sha": "56e8174c8ff93557ebd132d7ba5a97afce18579c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4814f99ed1340f009a804a19e81f787f7b31ea6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4814f99ed1340f009a804a19e81f787f7b31ea6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c4814f99ed1340f009a804a19e81f787f7b31ea6", "patch": "@@ -1,3 +1,12 @@\n+2019-01-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/49429\n+\tPR target/49454\n+\tPR rtl-optimization/86334\n+\tPR target/88906\n+\t* gcc.target/i386/pr86334.c: New test.\n+\t* gcc.target/i386/pr88906.c: New test.\n+\n 2019-01-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/88949"}, {"sha": "79ed6926c86ec87c1a66677dbc9bd7e9917dbce0", "filename": "gcc/testsuite/gcc.target/i386/pr86334.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4814f99ed1340f009a804a19e81f787f7b31ea6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr86334.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4814f99ed1340f009a804a19e81f787f7b31ea6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr86334.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr86334.c?ref=c4814f99ed1340f009a804a19e81f787f7b31ea6", "patch": "@@ -0,0 +1,21 @@\n+/* PR rtl-optimization/86334 */\n+/* { dg-do run { target ia32 } } */\n+/* { dg-options \"-O -march=i386 -mtune=athlon -minline-all-stringops -minline-stringops-dynamically -mmemcpy-strategy=libcall:-1:align -Wno-psabi\" } */\n+\n+typedef int V __attribute__ ((vector_size (64)));\n+\n+static inline V\n+foo (V g)\n+{\n+  g[0] = 4;\n+  return g;\n+}\n+\n+int\n+main ()\n+{\n+  V x = foo ((V) { });\n+  if (x[0] != 4 || x[1] || x[2] || x[3] || x[4] || x[5] || x[6] || x[7])\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "5439a28f67bc2b86081f4de6ce70c25d13e797ff", "filename": "gcc/testsuite/gcc.target/i386/pr88906.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4814f99ed1340f009a804a19e81f787f7b31ea6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88906.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4814f99ed1340f009a804a19e81f787f7b31ea6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88906.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88906.c?ref=c4814f99ed1340f009a804a19e81f787f7b31ea6", "patch": "@@ -0,0 +1,21 @@\n+/* PR target/88906 */\n+/* { dg-do run { target ia32 } } */\n+/* { dg-options \"-O -march=i386 -mtune=k6 -minline-all-stringops -minline-stringops-dynamically -mmemcpy-strategy=libcall:-1:align -Wno-psabi\" } */\n+\n+typedef unsigned V __attribute__ ((vector_size (16)));\n+\n+static inline V\n+foo (V v)\n+{\n+  __builtin_sub_overflow (0, 0, &v[0]);\n+  return v;\n+}\n+\n+int\n+main ()\n+{\n+  V v = foo ((V) { ~0 });\n+  if (v[0] || v[1] || v[2] || v[3])\n+    __builtin_abort ();\n+  return 0;\n+}"}]}