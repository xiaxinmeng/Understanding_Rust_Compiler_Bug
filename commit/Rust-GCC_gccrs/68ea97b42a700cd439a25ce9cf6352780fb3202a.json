{"sha": "68ea97b42a700cd439a25ce9cf6352780fb3202a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhlYTk3YjQyYTcwMGNkNDM5YTI1Y2U5Y2Y2MzUyNzgwZmIzMjAyYQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-06-11T18:43:19Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-06-11T18:43:19Z"}, "message": "Fix -msdata init code; Make sure correct endian flag is defined\n\nFrom-SVN: r12274", "tree": {"sha": "dfeb12e41ecbea3e3afe7c3eaca8cd9220a4f335", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfeb12e41ecbea3e3afe7c3eaca8cd9220a4f335"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68ea97b42a700cd439a25ce9cf6352780fb3202a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ea97b42a700cd439a25ce9cf6352780fb3202a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68ea97b42a700cd439a25ce9cf6352780fb3202a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ea97b42a700cd439a25ce9cf6352780fb3202a/comments", "author": null, "committer": null, "parents": [{"sha": "8bc6cf9b63a738d80e8ed52cb8f1d494bff1bed2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bc6cf9b63a738d80e8ed52cb8f1d494bff1bed2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bc6cf9b63a738d80e8ed52cb8f1d494bff1bed2"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "62c483cf06223a396ee5f176ea482ebbad10ce86", "filename": "gcc/config/rs6000/eabi.asm", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ea97b42a700cd439a25ce9cf6352780fb3202a/gcc%2Fconfig%2Frs6000%2Feabi.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ea97b42a700cd439a25ce9cf6352780fb3202a/gcc%2Fconfig%2Frs6000%2Feabi.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi.asm?ref=68ea97b42a700cd439a25ce9cf6352780fb3202a", "patch": "@@ -126,26 +126,30 @@ FUNC_START(__eabi)\n \tlwz\t12,.Ltable(11)\t\t\t/* get linker's idea of where .Laddr is */\n \tlwz\t10,.Linit(11)\t\t\t/* address of init flag */\n \tsubf.\t12,12,11\t\t\t/* calculate difference */\n-\tmtlr\t0\t\t\t\t/* restore link register */\n \tlwzx\t9,10,12\t\t\t\t/* done flag */\n+\tmtlr\t0\t\t\t\t/* restore link register */\n+\tcmplwi\t2,9,0\t\t\t\t/* init flag != 0? */\n+\tbnelr\t2\t\t\t\t/* return now, if we've been called already */\n+\tstwx\t1,10,12\t\t\t\t/* store a non-zero value in the done flag */\n+\tbne-\t0,.Lreloc\t\t\t/* skip if we need to relocate */\n \n #else /* !-mrelocatable */\n+\taddis\t10,0,.Linit_p@ha\t\t/* init flag */\n \taddis\t11,0,.LCTOC1@ha\t\t\t/* load address of .LCTOC1 */\n+\tlwz\t9,.Linit_p@l(10)\t\t/* init flag */\n \taddi\t11,11,.LCTOC1@l\n-\tlwz\t10,.Linit(11)\t\t\t/* init flag */\n-#endif /* !-mrelocatable */\n-\n \tcmplwi\t2,9,0\t\t\t\t/* init flag != 0? */\n \tbnelr\t2\t\t\t\t/* return now, if we've been called already */\n-\tstwx\t1,10,12\t\t\t\t/* store a non-zero value in the done flag */\n-\tbne\t0,.Lreloc\t\t\t/* skip if we need to relocate */\n+\tstw\t1,.Linit_p@l(10)\t\t/* store a non-zero value in the done flag */\n+\n+#endif /* !-mrelocatable */\n \n /* Only load up register 13 if there is a .sdata and/or .sbss section */\n \n \tlwz\t3,.Lsdas(11)\t\t\t/* start of .sdata/.sbss section */\n \tlwz\t4,.Lsdae(11)\t\t\t/* end of .sdata/.sbss section */\n \tcmpw\t1,3,4\t\t\t\t/* .sdata/.sbss section non-empty? */\n-\tbeq\t1,.Lsda2l\t\t\t/* skip loading r13 */\n+\tbeq-\t1,.Lsda2l\t\t\t/* skip loading r13 */\n \n \tlwz\t13,.Lsda(11)\t\t\t/* load r13 with _SDA_BASE address */\n \n@@ -155,14 +159,14 @@ FUNC_START(__eabi)\n \tlwz\t3,.Lsda2s(11)\t\t\t/* start of .sdata/.sbss section */\n \tlwz\t4,.Lsda2e(11)\t\t\t/* end of .sdata/.sbss section */\n \tcmpw\t1,3,4\t\t\t\t/* .sdata/.sbss section non-empty? */\n-\tbeq\t1,.Ldone\t\t\t/* skip loading r2 */\n+\tbeq+\t1,.Ldone\t\t\t/* skip loading r2 */\n \n \tlwz\t2,.Lsda2(11)\t\t\t/* load r2 with _SDA2_BASE address */\n \tb\tFUNC_NAME(__do_global_ctors)\t/* do any C++ global constructors (which returns to caller) */\n \n-.Lreloc:\n \n #ifdef _RELOCATABLE\n+.Lreloc:\n /* We need to relocate the .got2 pointers.  Don't load registers 2 or 13 */\n \n \tlwz\t3,.Lgot2s(11)\t\t\t/* GOT pointers start */"}, {"sha": "e6b79dd5676264b2318caee1b4a5a05b355d98bb", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ea97b42a700cd439a25ce9cf6352780fb3202a/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ea97b42a700cd439a25ce9cf6352780fb3202a/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=68ea97b42a700cd439a25ce9cf6352780fb3202a", "patch": "@@ -1059,7 +1059,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n     %{mcall-nt: -D_LITTLE_ENDIAN -Amachine(littleendian)} \\\n     %{mcall-linux: -D_BIG_ENDIAN -Amachine(bigendian)} \\\n     %{mcall-aixdesc:  -D_BIG_ENDIAN -Amachine(bigendian)} \\\n-    %{!mcall-solaris: %{!mcall-linux: %{!mcall-nt: %{!mcall-aixdesc: %(cpp_endian_default_spec) }}}}}}}}\"\n+    %{!mcall-solaris: %{!mcall-linux: %{!mcall-nt: %{!mcall-aixdesc: %(cpp_endian_default) }}}}}}}}\"\n \n #undef\tCPP_ENDIAN_DEFAULT_SPEC\n #define\tCPP_ENDIAN_DEFAULT_SPEC \"-D_BIG_ENDIAN -Amachine(bigendian)\""}]}