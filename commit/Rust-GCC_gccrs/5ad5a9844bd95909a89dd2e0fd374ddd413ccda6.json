{"sha": "5ad5a9844bd95909a89dd2e0fd374ddd413ccda6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFkNWE5ODQ0YmQ5NTkwOWE4OWRkMmUwZmQzNzRkZGQ0MTNjY2RhNg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@zembu.com", "date": "2000-03-24T21:32:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-03-24T21:32:08Z"}, "message": "merge from bfdland\n\nFrom-SVN: r32729", "tree": {"sha": "698adbe5d5047577164e17e5f52bd8f6853eb31b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/698adbe5d5047577164e17e5f52bd8f6853eb31b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ad5a9844bd95909a89dd2e0fd374ddd413ccda6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ad5a9844bd95909a89dd2e0fd374ddd413ccda6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ad5a9844bd95909a89dd2e0fd374ddd413ccda6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ad5a9844bd95909a89dd2e0fd374ddd413ccda6/comments", "author": null, "committer": null, "parents": [{"sha": "eef9a168de9320328195879f0c14043ee5b34b91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eef9a168de9320328195879f0c14043ee5b34b91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eef9a168de9320328195879f0c14043ee5b34b91"}], "stats": {"total": 46, "additions": 33, "deletions": 13}, "files": [{"sha": "c858409d301e51de9e05d34cbf8f3c0b50038ddd", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ad5a9844bd95909a89dd2e0fd374ddd413ccda6/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ad5a9844bd95909a89dd2e0fd374ddd413ccda6/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=5ad5a9844bd95909a89dd2e0fd374ddd413ccda6", "patch": "@@ -44,6 +44,26 @@ Thu Mar 16 01:33:58 2000  Jeffrey A Law  (law@cygnus.com)\n \tentry vector.\n \t(htab_find_slot): Simplify logic.\n \n+1999-08-03  Ian Lance Taylor  <ian@zembu.com>\n+\n+\t* floatformat.c: Add casts to avoid signed/unsigned warnings.\n+\t* pexecute.c: Add ATTRIBUTE_UNUSED as needed on Unix.\n+\n+\t* Makefile.in (install_to_libdir): Change $(TARGETLIB).n to\n+\t$(TARGETLIB)n so it works on MSDOS.\n+\t(install_to_tooldir): Likewise.\n+\n+1999-07-21  Ian Lance Taylor  <ian@zembu.com>\n+\n+\tFrom Mark Elbrecht:\n+\t* makefile.dos: Remove; obsolete.\n+\t* configure.bat: Remove; obsolete.\n+\n+1999-07-11  Ian Lance Taylor  <ian@zembu.com>\n+\n+\t* splay-tree.c (splay_tree_insert): Add initialization to avoid\n+\twarning.\n+\n 2000-01-04  Mumit Khan  <khan@xraylith.wisc.edu>\n \n \t* pexecute.c: Conditionally include string.h."}, {"sha": "9aa57f06d4bf141ba386a64f4a4a31a86d2f66fc", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ad5a9844bd95909a89dd2e0fd374ddd413ccda6/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ad5a9844bd95909a89dd2e0fd374ddd413ccda6/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=5ad5a9844bd95909a89dd2e0fd374ddd413ccda6", "patch": "@@ -152,15 +152,15 @@ INSTALL_DEST = @INSTALL_DEST@\n install: install_to_$(INSTALL_DEST) install-subdir\n \n install_to_libdir: all\n-\t$(INSTALL_DATA) $(TARGETLIB) $(libdir)$(MULTISUBDIR)/$(TARGETLIB).n\n-\t( cd $(libdir)$(MULTISUBDIR) ; $(RANLIB) $(TARGETLIB).n )\n-\tmv -f $(libdir)$(MULTISUBDIR)/$(TARGETLIB).n $(libdir)$(MULTISUBDIR)/$(TARGETLIB)\n+\t$(INSTALL_DATA) $(TARGETLIB) $(libdir)$(MULTISUBDIR)/$(TARGETLIB)n\n+\t( cd $(libdir)$(MULTISUBDIR) ; $(RANLIB) $(TARGETLIB)n )\n+\tmv -f $(libdir)$(MULTISUBDIR)/$(TARGETLIB)n $(libdir)$(MULTISUBDIR)/$(TARGETLIB)\n \t@$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=install\n \n install_to_tooldir: all\n-\t$(INSTALL_DATA) $(TARGETLIB) $(tooldir)/lib$(MULTISUBDIR)/$(TARGETLIB).n\n-\t( cd $(tooldir)/lib$(MULTISUBDIR) ; $(RANLIB) $(TARGETLIB).n )\n-\tmv -f $(tooldir)/lib$(MULTISUBDIR)/$(TARGETLIB).n $(tooldir)/lib$(MULTISUBDIR)/$(TARGETLIB)\n+\t$(INSTALL_DATA) $(TARGETLIB) $(tooldir)/lib$(MULTISUBDIR)/$(TARGETLIB)n\n+\t( cd $(tooldir)/lib$(MULTISUBDIR) ; $(RANLIB) $(TARGETLIB)n )\n+\tmv -f $(tooldir)/lib$(MULTISUBDIR)/$(TARGETLIB)n $(tooldir)/lib$(MULTISUBDIR)/$(TARGETLIB)\n \t@$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=install\n \n # needed-list is used by libstdc++.  NEEDED is the list of functions"}, {"sha": "1d8f16df3537795fcd8dc485de9c0804491701fb", "filename": "libiberty/floatformat.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ad5a9844bd95909a89dd2e0fd374ddd413ccda6/libiberty%2Ffloatformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ad5a9844bd95909a89dd2e0fd374ddd413ccda6/libiberty%2Ffloatformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffloatformat.c?ref=5ad5a9844bd95909a89dd2e0fd374ddd413ccda6", "patch": "@@ -1,5 +1,5 @@\n /* IEEE floating point support routines, for GDB, the GNU Debugger.\n-   Copyright (C) 1991, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1994, 1999 Free Software Foundation, Inc.\n \n This file is part of GDB.\n \n@@ -128,7 +128,7 @@ get_field (data, order, total_len, start, len)\n     --cur_byte;\n \n   /* Move towards the most significant part of the field.  */\n-  while (cur_bitshift < len)\n+  while ((unsigned int) cur_bitshift < len)\n     {\n       if (len - cur_bitshift < FLOATFORMAT_CHAR_BIT)\n \t/* This is the last byte; zero out the bits which are not part of\n@@ -179,7 +179,7 @@ floatformat_to_double (fmt, from, to)\n   mant_off = fmt->man_start;\n   dto = 0.0;\n \n-  special_exponent = exponent == 0 || exponent == fmt->exp_nan;\n+  special_exponent = exponent == 0 || (unsigned long) exponent == fmt->exp_nan;\n \n   /* Don't bias zero's, denorms or NaNs.  */\n   if (!special_exponent)\n@@ -255,7 +255,7 @@ put_field (data, order, total_len, start, len, stuff_to_put)\n     --cur_byte;\n \n   /* Move towards the most significant part of the field.  */\n-  while (cur_bitshift < len)\n+  while ((unsigned int) cur_bitshift < len)\n     {\n       if (len - cur_bitshift < FLOATFORMAT_CHAR_BIT)\n \t{\n@@ -335,7 +335,7 @@ floatformat_from_double (fmt, from, to)\n \t If we are discarding a zero, we should be (but are not) creating\n \t a denormalized\tnumber which means adjusting the exponent\n \t (I think).  */\n-      if (mant_bits_left == fmt->man_len\n+      if ((unsigned int) mant_bits_left == fmt->man_len\n \t  && fmt->intbit == floatformat_intbit_no)\n \t{\n \t  mant_long &= 0x7fffffff;"}, {"sha": "56ddec78dd838908d1a7fc9306e7ea96016198e6", "filename": "libiberty/pexecute.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ad5a9844bd95909a89dd2e0fd374ddd413ccda6/libiberty%2Fpexecute.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ad5a9844bd95909a89dd2e0fd374ddd413ccda6/libiberty%2Fpexecute.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpexecute.c?ref=5ad5a9844bd95909a89dd2e0fd374ddd413ccda6", "patch": "@@ -656,7 +656,7 @@ pexecute (program, argv, this_pname, temp_base, errmsg_fmt, errmsg_arg, flags)\n      const char *program;\n      char * const *argv;\n      const char *this_pname;\n-     const char *temp_base;\n+     const char *temp_base ATTRIBUTE_UNUSED;\n      char **errmsg_fmt, **errmsg_arg;\n      int flags;\n {\n@@ -763,7 +763,7 @@ int\n pwait (pid, status, flags)\n      int pid;\n      int *status;\n-     int flags;\n+     int flags ATTRIBUTE_UNUSED;\n {\n   /* ??? Here's an opportunity to canonicalize the values in STATUS.\n      Needed?  */"}]}