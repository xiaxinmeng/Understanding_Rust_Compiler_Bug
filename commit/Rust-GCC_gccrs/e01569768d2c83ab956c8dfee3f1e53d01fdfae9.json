{"sha": "e01569768d2c83ab956c8dfee3f1e53d01fdfae9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAxNTY5NzY4ZDJjODNhYjk1NmM4ZGZlZTNmMWU1M2QwMWZkZmFlOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-02-25T19:08:51Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-02-25T19:08:51Z"}, "message": "* gcc-interface/ada-tree.h: Back out change accidentally committed.\n\nFrom-SVN: r196268", "tree": {"sha": "4bee929a14104e5dd037f889219c32263e77e53a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bee929a14104e5dd037f889219c32263e77e53a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e01569768d2c83ab956c8dfee3f1e53d01fdfae9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e01569768d2c83ab956c8dfee3f1e53d01fdfae9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e01569768d2c83ab956c8dfee3f1e53d01fdfae9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e01569768d2c83ab956c8dfee3f1e53d01fdfae9/comments", "author": null, "committer": null, "parents": [{"sha": "fbf1afa422a1a3399b521719c0beaaf3ac655fc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf1afa422a1a3399b521719c0beaaf3ac655fc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbf1afa422a1a3399b521719c0beaaf3ac655fc4"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "0b5c67ec35b4ca0aa7a5f4510e6dfd8e2f5452ee", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01569768d2c83ab956c8dfee3f1e53d01fdfae9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01569768d2c83ab956c8dfee3f1e53d01fdfae9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e01569768d2c83ab956c8dfee3f1e53d01fdfae9", "patch": "@@ -1,3 +1,7 @@\n+2013-02-25  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/ada-tree.h: Back out change accidentally committed.\n+\n 2013-02-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/56258"}, {"sha": "ec00cc4775f796098bfddc8e477baeee3e3f51af", "filename": "gcc/ada/gcc-interface/ada-tree.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01569768d2c83ab956c8dfee3f1e53d01fdfae9/gcc%2Fada%2Fgcc-interface%2Fada-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01569768d2c83ab956c8dfee3f1e53d01fdfae9/gcc%2Fada%2Fgcc-interface%2Fada-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fada-tree.h?ref=e01569768d2c83ab956c8dfee3f1e53d01fdfae9", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2013, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2012, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -507,11 +507,5 @@ do {\t\t\t\t\t\t   \\\n #define LOOP_STMT_BOTTOM_COND_P(NODE) TREE_LANG_FLAG_0 (LOOP_STMT_CHECK (NODE))\n #define LOOP_STMT_TOP_UPDATE_P(NODE)  TREE_LANG_FLAG_1 (LOOP_STMT_CHECK (NODE))\n \n-/* Optimization hints on loops.  */\n-#define LOOP_STMT_NO_UNROLL(NODE) TREE_LANG_FLAG_2 (LOOP_STMT_CHECK (NODE))\n-#define LOOP_STMT_UNROLL(NODE)    TREE_LANG_FLAG_3 (LOOP_STMT_CHECK (NODE))\n-#define LOOP_STMT_NO_VECTOR(NODE) TREE_LANG_FLAG_4 (LOOP_STMT_CHECK (NODE))\n-#define LOOP_STMT_VECTOR(NODE)    TREE_LANG_FLAG_5 (LOOP_STMT_CHECK (NODE))\n-\n #define EXIT_STMT_COND(NODE)     TREE_OPERAND_CHECK_CODE (NODE, EXIT_STMT, 0)\n #define EXIT_STMT_LABEL(NODE)    TREE_OPERAND_CHECK_CODE (NODE, EXIT_STMT, 1)"}]}