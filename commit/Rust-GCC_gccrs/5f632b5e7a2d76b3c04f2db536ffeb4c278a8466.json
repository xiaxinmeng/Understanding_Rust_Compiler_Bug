{"sha": "5f632b5e7a2d76b3c04f2db536ffeb4c278a8466", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY2MzJiNWU3YTJkNzZiM2MwNGYyZGI1MzZmZmViNGMyNzhhODQ2Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-08-29T05:35:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-08-29T05:35:32Z"}, "message": "dwarf2out.c (attr_checksum): Also ignore DW_AT_producer.\n\n        * dwarf2out.c (attr_checksum): Also ignore DW_AT_producer.\n\n        * dwarf2out.c (dwarf2out_finish): Don't bother calling\n        break_out_includes if it won't do anything.\n\nFrom-SVN: r36030", "tree": {"sha": "e5cce782f315baed6d3c0a9ee6ab3cf4a45f127d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5cce782f315baed6d3c0a9ee6ab3cf4a45f127d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f632b5e7a2d76b3c04f2db536ffeb4c278a8466", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f632b5e7a2d76b3c04f2db536ffeb4c278a8466", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f632b5e7a2d76b3c04f2db536ffeb4c278a8466", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f632b5e7a2d76b3c04f2db536ffeb4c278a8466/comments", "author": null, "committer": null, "parents": [{"sha": "53dce5822381dde5e61a671806c5295ffb908cac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53dce5822381dde5e61a671806c5295ffb908cac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53dce5822381dde5e61a671806c5295ffb908cac"}], "stats": {"total": 65, "additions": 63, "deletions": 2}, "files": [{"sha": "8f214f95db5b45520cffc97d77e35d6ea2bd78bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f632b5e7a2d76b3c04f2db536ffeb4c278a8466/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f632b5e7a2d76b3c04f2db536ffeb4c278a8466/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f632b5e7a2d76b3c04f2db536ffeb4c278a8466", "patch": "@@ -1,3 +1,12 @@\n+2000-08-28  Jason Merrill  <jason@redhat.com>\n+\n+\t* dwarf2out.c (attr_checksum): Also ignore DW_AT_producer.\n+\n+2000-08-28  Daniel Berlin  <dberlin@redhat.com>\n+\n+\t* dwarf2out.c (dwarf2out_finish): Don't bother calling\n+\tbreak_out_includes if it won't do anything.\n+\n 2000-08-28  Richard Henderson  <rth@cygnus.com>\n \n \t* reload.c (push_secondary_reload): Revert 2000-08-16 change.\n@@ -29,8 +38,56 @@\n \t* md.texi: Update constraints documentation.\n \t* tm.texi (EXTRA_CONSTRAINT): Update.\n \n+2000-08-28  Daniel Berlin  <dberlin@redhat.com>\n+\n+\t* dwarf2out.c (DIE_LABEL_PREFIX): Remove leading \"__\".\n+\t(print_die): If we don't know the offset of the\n+\ttarget die, try the symbol.  Add a trailing newline.\n+\t(reverse_all_dies): New fn.\n+\t(dwarf2out_finish): Call it.\n+\t(break_out_includes): Reorganize for clarity.\n+\t(add_sibling_attributes): Don't call reverse_die_lists.\n+\t(output_comp_unit): Rename from output_comdat_comp_unit.  Use for\n+\tprimary CU, too.\n+\t* flags.h: Add flag_eliminate_dwarf2_dups.\n+\t* toplev.c (f_options): Support -feliminate-dwarf2-dups.\n+\n 2000-08-28  Jason Merrill  <jason@redhat.com>\n \n+\t* dwarf2.h (DW_TAG_GNU_BINCL, DW_TAG_GNU_EINCL): New tags.\n+\t* dwarf2out.c: #include \"md5.h\".\n+\t(DIE_LABEL_PREFIX): New macro.\n+\t(dw_val_struct): Add 'external' flag to val_die_ref.\n+\t(add_AT_die_ref, AT_ref): Adjust.\n+\t(AT_ref_external, set_AT_ref_external): New fns.\n+\t(build_abbrev_table): Call set_AT_ref_external.\n+\t(value_format): Call AT_ref_external.\n+\t(die_struct): Add die_symbol field.\n+\t(new_die): Clear it.\n+\t(dwarf_tag_name): Handle BINCL/EINCL.\n+\t(dwarf2out_start_source_file): Add BINCL DIE.\n+\t(dwarf2out_end_source_file): Add EINCL DIE.\n+\t(push_new_compile_unit, pop_compile_unit, clear_die_sizes): New fns.\n+\t(loc_checksum, attr_checksum, die_checksum): New fns.\n+\t(is_type_die, is_comdat_die, is_symbol_die): New fns.\n+\t(compute_section_prefix, assign_symbol_names): New fns.\n+\t(gen_internal_sym, output_die_symbol, output_symbolic_ref): New fns.\n+\t(output_die): Call output_die_symbol and AT_ref_external.\n+\t(output_comdat_comp_unit): New fn, split out from...\n+\t(dwarf2out_finish): ...here.  Also call add_sibling_attributes for \n+\tsecondary CUs.\n+\t(output_pubnames, output_aranges): Abort if we see entries from\n+\tsecondary CUs.\n+\t* toplev.h: Declare file_name_nondirectory.\n+\t* toplev.c (file_name_nondirectory): New fn, moved from C++ frontend.\n+\t(rest_of_type_compilation): Call dwarf2out_decl if at toplevel.\n+\t(debug_start_source_file): Call dwarf2out_start_source_file\n+\tregardless of debug verbosity.\n+\t(debug_end_source_file): Similarly.\n+\t* tree.h: Declare clean_symbol_name.\n+\t* tree.c (clean_symbol_name): Split out from...\n+\t(get_file_function_name_long): ...here.\n+\n \t* dwarf2out.c (new_loc_descr): Use calloc.\n \t(splice_child_die): Remove the die from the right parent.\n \t(gen_struct_or_union_die): Don't add AT_name to a specification DIE."}, {"sha": "de81db03ce5d94005635af9b6efc3f3aac0ee9d4", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f632b5e7a2d76b3c04f2db536ffeb4c278a8466/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f632b5e7a2d76b3c04f2db536ffeb4c278a8466/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=5f632b5e7a2d76b3c04f2db536ffeb4c278a8466", "patch": "@@ -5054,7 +5054,10 @@ attr_checksum (at, ctx)\n   PROCESS (at->dw_attr);\n \n   /* We don't care about differences in file numbering.  */\n-  if (at->dw_attr == DW_AT_decl_file)\n+  if (at->dw_attr == DW_AT_decl_file\n+      /* Or that this was compiled with a different compiler snapshot; if\n+\t the output is the same, that's what matters.  */\n+      || at->dw_attr == DW_AT_producer)\n     return;\n \n   switch (AT_class (at))\n@@ -10841,7 +10844,8 @@ dwarf2out_finish ()\n \n   /* Generate separate CUs for each of the include files we've seen.\n      They will go into limbo_die_list.  */\n-  break_out_includes (comp_unit_die);\n+  if (flag_eliminate_dwarf2_dups)\n+    break_out_includes (comp_unit_die);\n \n   /* Traverse the DIE's and add add sibling attributes to those DIE's\n      that have children.  */"}]}