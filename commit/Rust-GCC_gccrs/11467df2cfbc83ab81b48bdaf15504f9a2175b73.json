{"sha": "11467df2cfbc83ab81b48bdaf15504f9a2175b73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE0NjdkZjJjZmJjODNhYjgxYjQ4YmRhZjE1NTA0ZjlhMjE3NWI3Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-04-17T05:08:01Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-04-17T05:08:01Z"}, "message": "c4x.c (c4x_encode_section_info): Remove.\n\n        * config/c4x/c4x.c (c4x_encode_section_info): Remove.\n        (c4x_T_constraint): Use SYMBOL_REF_FUNCTION_P.\n\nFrom-SVN: r65720", "tree": {"sha": "ac76ae9430e43db52992cb12f833291d8c37d693", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac76ae9430e43db52992cb12f833291d8c37d693"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11467df2cfbc83ab81b48bdaf15504f9a2175b73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11467df2cfbc83ab81b48bdaf15504f9a2175b73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11467df2cfbc83ab81b48bdaf15504f9a2175b73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11467df2cfbc83ab81b48bdaf15504f9a2175b73/comments", "author": null, "committer": null, "parents": [{"sha": "c4a3da4e47181842008f49a704674206dd7402fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4a3da4e47181842008f49a704674206dd7402fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4a3da4e47181842008f49a704674206dd7402fb"}], "stats": {"total": 27, "additions": 9, "deletions": 18}, "files": [{"sha": "c4b97224308c2b23636e7a95cd47fc513c2f3f7d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11467df2cfbc83ab81b48bdaf15504f9a2175b73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11467df2cfbc83ab81b48bdaf15504f9a2175b73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11467df2cfbc83ab81b48bdaf15504f9a2175b73", "patch": "@@ -1,3 +1,11 @@\n+2003-04-16  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/c4x/c4x.c (c4x_encode_section_info): Remove.\n+\t(c4x_T_constraint): Use SYMBOL_REF_FUNCTION_P.\n+\n+\t* config/c4x/c4x.h (TARGET_CPU_CPP_BUILTINS): Declare\n+\tflag_inline_trees.\n+\n 2003-04-16  Richard Henderson  <rth@redhat.com>\n \n \t* config/avr/avr.c (avr_encode_section_info): Remove."}, {"sha": "70e2bb13e64439d9253340a5fb7eb490f9e8b505", "filename": "gcc/config/c4x/c4x.c", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11467df2cfbc83ab81b48bdaf15504f9a2175b73/gcc%2Fconfig%2Fc4x%2Fc4x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11467df2cfbc83ab81b48bdaf15504f9a2175b73/gcc%2Fconfig%2Fc4x%2Fc4x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.c?ref=11467df2cfbc83ab81b48bdaf15504f9a2175b73", "patch": "@@ -195,7 +195,6 @@ const struct attribute_spec c4x_attribute_table[];\n static void c4x_insert_attributes PARAMS ((tree, tree *));\n static void c4x_asm_named_section PARAMS ((const char *, unsigned int));\n static int c4x_adjust_cost PARAMS ((rtx, rtx, rtx, int));\n-static void c4x_encode_section_info PARAMS ((tree, int));\n static void c4x_globalize_label PARAMS ((FILE *, const char *));\n static bool c4x_rtx_costs PARAMS ((rtx, int, int, int *));\n static int c4x_address_cost PARAMS ((rtx));\n@@ -223,9 +222,6 @@ static int c4x_address_cost PARAMS ((rtx));\n #undef TARGET_SCHED_ADJUST_COST\n #define TARGET_SCHED_ADJUST_COST c4x_adjust_cost\n \n-#undef TARGET_ENCODE_SECTION_INFO\n-#define TARGET_ENCODE_SECTION_INFO c4x_encode_section_info\n-\n #undef TARGET_ASM_GLOBALIZE_LABEL\n #define TARGET_ASM_GLOBALIZE_LABEL c4x_globalize_label\n \n@@ -1455,19 +1451,6 @@ c4x_emit_libcall_mulhi (libcall, code, mode, operands)\n }\n \n \n-/* Set the SYMBOL_REF_FLAG for a function decl.  However, wo do not\n-   yet use this info.  */\n-\n-static void\n-c4x_encode_section_info (decl, first)\n-     tree decl;\n-     int first ATTRIBUTE_UNUSED;\n-{\n-  if (TREE_CODE (decl) == FUNCTION_DECL)   \n-    SYMBOL_REF_FLAG (XEXP (DECL_RTL (decl), 0)) = 1;\n-}\n-\n-\n int\n c4x_check_legit_addr (mode, addr, strict)\n      enum machine_mode mode;\n@@ -2909,7 +2892,7 @@ c4x_T_constraint (op)\n       /* Allow call operands.  */\n       return GET_CODE (op) == SYMBOL_REF\n \t&& GET_MODE (op) == Pmode\n-\t&& SYMBOL_REF_FLAG (op);\n+\t&& SYMBOL_REF_FUNCTION_P (op);\n     }\n \n   /* HImode and HFmode are not offsettable.  */"}]}