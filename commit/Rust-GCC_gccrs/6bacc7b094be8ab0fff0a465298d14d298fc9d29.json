{"sha": "6bacc7b094be8ab0fff0a465298d14d298fc9d29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJhY2M3YjA5NGJlOGFiMGZmZjBhNDY1Mjk4ZDE0ZDI5OGZjOWQyOQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cambridge.redhat.com", "date": "2002-01-23T11:04:56Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2002-01-23T11:04:56Z"}, "message": "Use an UNSPEC instead of a USE to prevent prologue/epilogue insns from being\ndeleted.\n\nFrom-SVN: r49130", "tree": {"sha": "7955cd4e2e139d8d28ff744dad4db31d3c71b516", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7955cd4e2e139d8d28ff744dad4db31d3c71b516"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bacc7b094be8ab0fff0a465298d14d298fc9d29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bacc7b094be8ab0fff0a465298d14d298fc9d29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bacc7b094be8ab0fff0a465298d14d298fc9d29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bacc7b094be8ab0fff0a465298d14d298fc9d29/comments", "author": null, "committer": null, "parents": [{"sha": "a415f7bc81c2bf55356a093b49bd05e142c6bdf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a415f7bc81c2bf55356a093b49bd05e142c6bdf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a415f7bc81c2bf55356a093b49bd05e142c6bdf9"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "5c5da99da5a8994735d9a8056f36135fac275b91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bacc7b094be8ab0fff0a465298d14d298fc9d29/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bacc7b094be8ab0fff0a465298d14d298fc9d29/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6bacc7b094be8ab0fff0a465298d14d298fc9d29", "patch": "@@ -1,3 +1,14 @@\n+2002-01-23  Nick Clifton  <nickc@cambridge.redhat.com>\n+\n+\t* config/arm/arm.md (UNSPEC_PROLOGUE_USE): New unspec constant.\n+\t(prologue_use): New pattern.\n+\t* config/arm/arm.c (expand_prologue): Use gen_prologue_use in\n+\tpreference to gen_rtx_USE.\n+\t(thumb_expand_prologue): Use gen_prologue_use in preference to\n+\tgen_rtx_USE.\n+\t(thumb_expand_epilogue): Use gen_prologue_use in preference to\n+\tgen_rtx_USE.\n+\n 2002-01-23  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* loop.c [!HAVE_prefetch] (CODE_FOR_prefetch): Define to 0."}, {"sha": "567daa3731286feb14c29d82183667393475a505", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bacc7b094be8ab0fff0a465298d14d298fc9d29/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bacc7b094be8ab0fff0a465298d14d298fc9d29/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=6bacc7b094be8ab0fff0a465298d14d298fc9d29", "patch": "@@ -8331,7 +8331,7 @@ arm_expand_prologue ()\n \n \t  emit_insn (gen_rtx_SET (SImode, ip_rtx, insn));\n \t  /* Add a USE to stop propagate_one_insn() from barfing.  */\n-\t  emit_insn (gen_rtx_USE (VOIDmode, ip_rtx));\n+\t  emit_insn (gen_prologue_use (ip_rtx));\n \t}\n     }\n \n@@ -8377,7 +8377,7 @@ arm_expand_prologue ()\n      then make sure that it does not get reused by the ce2 pass.  */\n   if ((live_regs_mask & (1 << LR_REGNUM)) == 0)\n     {\n-      emit_insn (gen_rtx_USE (VOIDmode, gen_rtx_REG (SImode, LR_REGNUM)));\n+      emit_insn (gen_prologue_use (gen_rtx_REG (SImode, LR_REGNUM)));\n       cfun->machine->lr_save_eliminated = 1;\n     }\n }\n@@ -10186,7 +10186,7 @@ thumb_expand_prologue ()\n \t      /* Save it by copying it into a high, scratch register.  */\n \t      emit_insn (gen_movsi (spare, reg));\n \t      /* Add a USE to stop propagate_one_insn() from barfing.  */\n-\t      emit_insn (gen_rtx_USE (VOIDmode, spare));\n+\t      emit_insn (gen_prologue_use (spare));\n \n \t      /* Decrement the stack.  */\n \t      emit_insn (gen_movsi (reg, GEN_INT (- amount)));\n@@ -10200,7 +10200,7 @@ thumb_expand_prologue ()\n \t\t analysis will not consider the restore redundant.  The\n \t\t register won't be used again in this function and isn't\n \t\t restored by the epilogue.  */\n-\t      emit_insn (gen_rtx_USE (VOIDmode, reg));\n+\t      emit_insn (gen_prologue_use (reg));\n \t    }\n \t  else\n \t    {\n@@ -10248,7 +10248,7 @@ thumb_expand_epilogue ()\n       \n   /* Emit a USE (stack_pointer_rtx), so that\n      the stack adjustment will not be deleted.  */\n-  emit_insn (gen_rtx_USE (VOIDmode, stack_pointer_rtx));\n+  emit_insn (gen_prologue_use (stack_pointer_rtx));\n \n   if (current_function_profile || TARGET_NO_SCHED_PRO)\n     emit_insn (gen_blockage ());"}, {"sha": "3646fe5890f6c9e3e66f241d0cf29561c79d0f8a", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bacc7b094be8ab0fff0a465298d14d298fc9d29/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bacc7b094be8ab0fff0a465298d14d298fc9d29/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=6bacc7b094be8ab0fff0a465298d14d298fc9d29", "patch": "@@ -1,6 +1,6 @@\n ;;- Machine description for ARM for GNU compiler\n-;;  Copyright 1991, 1993, 1994, 1995, 1996, 1996, 1997, 1998, 1999, 2000, 2001\n-;;  Free Software Foundation, Inc.\n+;;  Copyright 1991, 1993, 1994, 1995, 1996, 1996, 1997, 1998, 1999, 2000,\n+;;  2001, 2002  Free Software Foundation, Inc.\n ;;  Contributed by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n ;;  and Martin Simmons (@harleqn.co.uk).\n ;;  More major hacks by Richard Earnshaw (rearnsha@arm.com).\n@@ -64,6 +64,11 @@\n    (UNSPEC_CLZ\t     5) ; `clz' instruction, count leading zeros (SImode):\n \t\t\t;   operand 0 is the result,\n \t\t\t;   operand 1 is the parameter.\n+   (UNSPEC_PROLOGUE_USE 6) ; As USE insns are not meaningful after reload,\n+   \t\t\t; this unspec is used to prevent the deletion of\n+   \t\t\t; instructions setting registers for EH handling\n+   \t\t\t; and stack frame generation.  Operand 0 is the\n+   \t\t\t; register to \"use\".\n   ]\n )\n \n@@ -9187,3 +9192,8 @@\n   \"\"\n )\n \n+(define_insn \"prologue_use\"\n+  [(unspec:SI [(match_operand:SI 0 \"register_operand\" \"\")] UNSPEC_PROLOGUE_USE)]\n+  \"\"\n+  \"%@ %0 needed for prologue\"\n+)"}]}