{"sha": "de2d7877bae3da8afdf8a9939963867b43474235", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUyZDc4NzdiYWUzZGE4YWZkZjhhOTkzOTk2Mzg2N2I0MzQ3NDIzNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-10-30T21:44:04Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-10-30T21:44:04Z"}, "message": "bitmap_allocator.h (allocate(size_type)): Minor tweak.\n\n2004-10-30  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/ext/bitmap_allocator.h (allocate(size_type)): Minor tweak.\n\n\t* testsuite/ext/bitmap_allocator/check_delete.cc: New.\n\t* testsuite/ext/bitmap_allocator/check_new.cc: Likewise.\n\nFrom-SVN: r89899", "tree": {"sha": "e6377c1aa9dde3d70fd466afa36d28853698d843", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6377c1aa9dde3d70fd466afa36d28853698d843"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de2d7877bae3da8afdf8a9939963867b43474235", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de2d7877bae3da8afdf8a9939963867b43474235", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de2d7877bae3da8afdf8a9939963867b43474235", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de2d7877bae3da8afdf8a9939963867b43474235/comments", "author": null, "committer": null, "parents": [{"sha": "3cabd8f9f1f3b1cf8c1f87fdd104ae574ccfd3c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cabd8f9f1f3b1cf8c1f87fdd104ae574ccfd3c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cabd8f9f1f3b1cf8c1f87fdd104ae574ccfd3c2"}], "stats": {"total": 115, "additions": 115, "deletions": 0}, "files": [{"sha": "aa103a451cb171d04fe030a8a1b740b52fb0cd8d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de2d7877bae3da8afdf8a9939963867b43474235/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de2d7877bae3da8afdf8a9939963867b43474235/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=de2d7877bae3da8afdf8a9939963867b43474235", "patch": "@@ -1,3 +1,10 @@\n+2004-10-30  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/ext/bitmap_allocator.h (allocate(size_type)): Minor tweak.\n+\n+\t* testsuite/ext/bitmap_allocator/check_delete.cc: New.\n+\t* testsuite/ext/bitmap_allocator/check_new.cc: Likewise.\n+\n 2004-10-29  Geoffrey Keating  <geoffk@apple.com>\n \n \t* configure.host (darwin*): Set os_include_dir to a separate directory"}, {"sha": "4996b14097fac67d15e7fd5038ebd2f3025c73f0", "filename": "libstdc++-v3/testsuite/ext/bitmap_allocator/check_delete.cc", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de2d7877bae3da8afdf8a9939963867b43474235/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fbitmap_allocator%2Fcheck_delete.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de2d7877bae3da8afdf8a9939963867b43474235/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fbitmap_allocator%2Fcheck_delete.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fbitmap_allocator%2Fcheck_delete.cc?ref=de2d7877bae3da8afdf8a9939963867b43474235", "patch": "@@ -0,0 +1,54 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 20.4.1.1 allocator members\n+\n+#include <cstdlib>\n+#include <ext/bitmap_allocator.h>\n+#include <testsuite_hooks.h>\n+#include <testsuite_allocator.h>\n+\n+using __gnu_cxx::bitmap_allocator;\n+\n+void* \n+operator new(std::size_t n) throw(std::bad_alloc)\n+{\n+  new_called = true;\n+  return std::malloc(n);\n+}\n+\n+void\n+operator delete(void *v) throw()\n+{\n+  delete_called = true;\n+  return std::free(v);\n+}\n+\n+// These just help tracking down error messages.\n+void test01() \n+{ \n+  bool test __attribute__((unused)) = true;\n+  typedef bitmap_allocator<unsigned int> allocator_type;\n+  VERIFY( bool(__gnu_test::check_delete<allocator_type, true>()) ); \n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "a37dbdb754c2cbac281c0779802f6ae9ae33ab37", "filename": "libstdc++-v3/testsuite/ext/bitmap_allocator/check_new.cc", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de2d7877bae3da8afdf8a9939963867b43474235/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fbitmap_allocator%2Fcheck_new.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de2d7877bae3da8afdf8a9939963867b43474235/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fbitmap_allocator%2Fcheck_new.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fbitmap_allocator%2Fcheck_new.cc?ref=de2d7877bae3da8afdf8a9939963867b43474235", "patch": "@@ -0,0 +1,54 @@\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 20.4.1.1 allocator members\n+\n+#include <cstdlib>\n+#include <ext/bitmap_allocator.h>\n+#include <testsuite_hooks.h>\n+#include <testsuite_allocator.h>\n+\n+using __gnu_cxx::bitmap_allocator;\n+\n+void* \n+operator new(std::size_t n) throw(std::bad_alloc)\n+{\n+  new_called = true;\n+  return std::malloc(n);\n+}\n+\n+void\n+operator delete(void *v) throw()\n+{\n+  delete_called = true;\n+  return std::free(v);\n+}\n+\n+// These just help tracking down error messages.\n+void test01() \n+{ \n+  bool test __attribute__((unused)) = true;\n+  typedef bitmap_allocator<unsigned int> allocator_type;\n+  VERIFY( bool(__gnu_test::check_new<allocator_type, true>()) ); \n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}